{
    "id": "J-14",
    "original_text": "Computing Good Nash Equilibria in Graphical Games ∗ Edith Elkind Hebrew University of Jerusalem, Israel, and University of Southampton, Southampton, SO17 1BJ, U.K. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K. ABSTRACT This paper addresses the problem of fair equilibrium selection in graphical games. Our approach is based on the data structure called the best response policy, which was proposed by Kearns et al. [13] as a way to represent all Nash equilibria of a graphical game. In [9], it was shown that the best response policy has polynomial size as long as the underlying graph is a path. In this paper, we show that if the underlying graph is a bounded-degree tree and the best response policy has polynomial size then there is an efficient algorithm which constructs a Nash equilibrium that guarantees certain payoffs to all participants. Another attractive solution concept is a Nash equilibrium that maximizes the social welfare. We show that, while exactly computing the latter is infeasible (we prove that solving this problem may involve algebraic numbers of an arbitrarily high degree), there exists an FPTAS for finding such an equilibrium as long as the best response policy has polynomial size. These two algorithms can be combined to produce Nash equilibria that satisfy various fairness criteria. Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-economics General Terms Algorithms, Economics, Theory 1. INTRODUCTION In a large community of agents, an agents behavior is not likely to have a direct effect on most other agents: rather, it is just the agents who are close enough to him that will be affected. However, as these agents respond by adapting their behavior, more agents will feel the consequences and eventually the choices made by a single agent will propagate throughout the entire community. This is the intuition behind graphical games, which were introduced by Kearns, Littman and Singh in [13] as a compact representation scheme for games with many players. In an n-player graphical game, each player is associated with a vertex of an underlying graph G, and the payoffs of each player depend on his action as well as on the actions of his neighbors in the graph. If the maximum degree of G is Δ, and each player has two actions available to him, then the game can be represented using n2Δ+1 numbers. In contrast, we need n2n numbers to represent a general n-player 2-action game, which is only practical for small values of n. For graphical games with constant Δ, the size of the game is linear in n. One of the most natural problems for a graphical game is that of finding a Nash equilibrium, the existence of which follows from Nashs celebrated theorem (as graphical games are just a special case of n-player games). The first attempt to tackle this problem was made in [13], where the authors consider graphical games with two actions per player in which the underlying graph is a boundeddegree tree. They propose a generic algorithm for finding Nash equilibria that can be specialized in two ways: an exponential-time algorithm for finding an (exact) Nash equilibrium, and a fully polynomial time approximation scheme (FPTAS) for finding an approximation to a Nash equilibrium. For any > 0 this algorithm outputs an -Nash equilibrium, which is a strategy profile in which no player can improve his payoff by more than by unilaterally changing his strategy. While -Nash equilibria are often easier to compute than exact Nash equilibria, this solution concept has several drawbacks. First, the players may be sensitive to a small loss in payoffs, so the strategy profile that is an -Nash equilibrium will not be stable. This will be the case even if there is only a small subset of players who are extremely price-sensitive, and for a large population of players it may be difficult to choose a value of that will satisfy everyone. Second, the strategy profiles that are close to being Nash equilibria may be much better with respect to the properties under consideration than exact Nash equilibria. Therefore, the (approximation to the) value of the best solution that corresponds to an -Nash equilibrium may not be indicative of what can be achieved under an exact Nash equilibrium. This is especially important if the purpose of the approximate solution is to provide a good benchmark for a system of selfish agents, as the benchmark implied by an -Nash equilibrium may be unrealistic. For these reasons, in this paper we focus on the problem of computing exact Nash equilibria. Building on ideas of [14], Elkind et al. [9] showed how to find an (exact) Nash equilibrium in polynomial time when the underlying 162 graph has degree 2 (that is, when the graph is a collection of paths and cycles). By contrast, finding a Nash equilibrium in a general degree-bounded graph appears to be computationally intractable: it has been shown (see [5, 12, 7]) to be complete for the complexity class PPAD. [9] extends this hardness result to the case in which the underlying graph has bounded pathwidth. A graphical game may not have a unique Nash equilibrium, indeed it may have exponentially many. Moreover, some Nash equilibria are more desirable than others. Rather than having an algorithm which merely finds some Nash equilibrium, we would like to have algorithms for finding Nash equilibria with various sociallydesirable properties, such as maximizing overall payoff or distributing profit fairly. A useful property of the data structure of [13] is that it simultaneously represents the set of all Nash equilibria of the underlying game. If this representation has polynomial size (as is the case for paths, as shown in [9]), one may hope to extract from it a Nash equilibrium with the desired properties. In fact, in [13] the authors mention that this is indeed possible if one is interested in finding an (approximate) -Nash equilibrium. The goal of this paper is to extend this to exact Nash equilibria. 1.1 Our Results In this paper, we study n-player 2-action graphical games on bounded-degree trees for which the data structure of [13] has size poly(n). We focus on the problem of finding exact Nash equilibria with certain socially-desirable properties. In particular, we show how to find a Nash equilibrium that (nearly) maximizes the social welfare, i.e., the sum of the players payoffs, and we show how to find a Nash equilibrium that (nearly) satisfies prescribed payoff bounds for all players. Graphical games on bounded-degree trees have a simple algebraic structure. One attractive feature, which follows from [13], is that every such game has a Nash equilibrium in which the strategy of every player is a rational number. Section 3 studies the algebraic structure of those Nash equilibria that maximize social welfare. We show (Theorems 1 and 2) that, surprisingly, the set of Nash equilibria that maximize social welfare is more complex. In fact, for any algebraic number α ∈ [0, 1] with degree at most n, we exhibit a graphical game on a path of length O(n) such that, in the unique social welfare-maximizing Nash equilibrium of this game, one of the players plays the mixed strategy α.1 This result shows that it may be difficult to represent an optimal Nash equilibrium. It seems to be a novel feature of the setting we consider here, that an optimal Nash equilibrium is hard to represent, in a situation where it is easy to find and represent a Nash equilibrium. As the social welfare-maximizing Nash equilibrium may be hard to represent efficiently, we have to settle for an approximation. However, the crucial difference between our approach and that of previous papers [13, 16, 19] is that we require our algorithm to output an exact Nash equilibrium, though not necessarily the optimal one with respect to our criteria. In Section 4, we describe an algorithm that satisfies this requirement. Namely, we propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within of optimal. It runs in polynomial time (Theorem 3,4) for any graphical game on a bounded-degree tree for which the data structure proposed by [13] (the so-called best response policy, defined below) is of size poly(n) (note that, as shown in [9], this is always the case when the underlying graph is a path). More pre1 A related result in a different context was obtained by Datta [8], who shows that n-player 2-action games are universal in the sense that any real algebraic variety can be represented as the set of totally mixed Nash equilibria of such games. cisely, the running time of our algorithm is polynomial in n, Pmax, and 1/ , where Pmax is the maximum absolute value of an entry of a payoff matrix, i.e., it is a pseudopolynomial algorithm, though it is fully polynomial with respect to . We show (Section 4.1) that under some restrictions on the payoff matrices, the algorithm can be transformed into a (truly) polynomial-time algorithm that outputs a Nash equilibrium whose total payoff is within a 1 − factor from the optimal. In Section 5, we consider the problem of finding a Nash equilibrium in which the expected payoff of each player Vi exceeds a prescribed threshold Ti. Using the idea from Section 4 we give (Theorem 5) a fully polynomial time approximation scheme for this problem. The running time of the algorithm is bounded by a polynomial in n, Pmax, and . If the instance has a Nash equilibrium satisfying the prescribed thresholds then the algorithm constructs a Nash equilibrium in which the expected payoff of each player Vi is at least Ti − . In Section 6, we introduce other natural criteria for selecting a good Nash equilibrium and we show that the algorithms described in the two previous sections can be used as building blocks in finding Nash equilibria that satisfy these criteria. In particular, in Section 6.1 we show how to find a Nash equilibrium that approximates the maximum social welfare, while guaranteeing that each individual payoff is close to a prescribed threshold. In Section 6.2 we show how to find a Nash equilibrium that (nearly) maximizes the minimum individual payoff. Finally, in Section 6.3 we show how to find a Nash equilibrium in which the individual payoffs of the players are close to each other. 1.2 Related Work Our approximation scheme (Theorem 3 and Theorem 4) shows a contrast between the games that we study and two-player n-action games, for which the corresponding problems are usually intractable. For two-player n-action games, the problem of finding Nash equilibria with special properties is typically NP-hard. In particular, this is the case for Nash equilibria that maximize the social welfare [11, 6]. Moreover, it is likely to be intractable even to approximate such equilibria. In particular, Chen, Deng and Teng [4] show that there exists some , inverse polynomial in n, for which computing an -Nash equilibrium in 2-player games with n actions per player is PPAD-complete. Lipton and Markakis [15] study the algebraic properties of Nash equilibria, and point out that standard quantifier elimination algorithms can be used to solve them. Note that these algorithms are not polynomial-time in general. The games we study in this paper have polynomial-time computable Nash equilibria in which all mixed strategies are rational numbers, but an optimal Nash equilibrium may necessarily include mixed strategies with high algebraic degree. A correlated equilibrium (CE) (introduced by Aumann [2]) is a distribution over vectors of players actions with the property that if any player is told his own action (the value of his own component) from a vector generated by that distribution, then he cannot increase his expected payoff by changing his action. Any Nash equilibrium is a CE but the converse does not hold in general. In contrast with Nash equilibria, correlated equilibria can be found for low-degree graphical games (as well as other classes of conciselyrepresented multiplayer games) in polynomial time [17]. But, for graphical games it is NP-hard to find a correlated equilibrium that maximizes total payoff [18]. However, the NP-hardness results apply to more general games than the one we consider here, in particular the graphs are not trees. From [2] it is also known that there exist 2-player, 2-action games for which the expected total payoff 163 of the best correlated equilibrium is higher than the best Nash equilibrium, and we discuss this issue further in Section 7. 2. PRELIMINARIES AND NOTATION We consider graphical games in which the underlying graph G is an n-vertex tree, in which each vertex has at most Δ children. Each vertex has two actions, which are denoted by 0 and 1. A mixed strategy of a player V is represented as a single number v ∈ [0, 1], which denotes the probability that V selects action 1. For the purposes of the algorithm, the tree is rooted arbitrarily. For convenience, we assume without loss of generality that the root has a single child, and that its payoff is independent of the action chosen by the child. This can be achieved by first choosing an arbitrary root of the tree, and then adding a dummy parent of this root, giving the new parent a constant payoff function, e.g., 0. Given an edge (V, W ) of the tree G, and a mixed strategy w for W , let G(V,W ),W =w be the instance obtained from G by (1) deleting all nodes Z which are separated from V by W (i.e., all nodes Z such that the path from Z to V passes through W ), and (2) restricting the instance so that W is required to play mixed strategy w. Definition 1. Suppose that (V, W ) is an edge of the tree, that v is a mixed strategy for V and that w is a mixed strategy for W . We say that v is a potential best response to w (denoted by v ∈ pbrV (w)) if there is an equilibrium in the instance G(V,W ),W =w in which V has mixed strategy v. We define the best response policy for V , given W , as B(W, V ) = {(w, v) | v ∈ pbrV (w), w ∈ [0, 1]}. The upstream pass of the generic algorithm of [13] considers every node V (other than the root) and computes the best response policy for V given its parent. With the above assumptions about the root, the downstream pass is straightforward. The root selects a mixed strategy w for the root W and a mixed strategy v ∈ B(W, V ) for each child V of W . It instructs each child V to play v. The remainder of the downward pass is recursive. When a node V is instructed by its parent to adopt mixed strategy v, it does the following for each child U - It finds a pair (v, u) ∈ B(V, U) (with the same v value that it was given by its parent) and instructs U to play u. The best response policy for a vertex U given its parent V can be represented as a union of rectangles, where a rectangle is defined by a pair of closed intervals (IV , IU ) and consists of all points in IV × IU ; it may be the case that one or both of the intervals IV and IU consists of a single point. In order to perform computations on B(V, U), and to bound the number of rectangles, [9] used the notion of an event point, which is defined as follows. For any set A ⊆ [0, 1]2 that is represented as a union of a finite number of rectangles, we say that a point u ∈ [0, 1] on the U-axis is a Uevent point of A if u = 0 or u = 1 or the representation of A contains a rectangle of the form IV × IU and u is an endpoint of IU ; V -event points are defined similarly. For many games considered in this paper, the underlying graph is an n-vertex path, i.e., a graph G = (V, E) with V = {V1, . . . , Vn} and E = {(V1, V2), . . . , (Vn−1, Vn)}. In [9], it was shown that for such games, the best response policy has only polynomially-many rectangles. The proof that the number of rectangles in B(Vj+1, Vj) is polynomial proceeds by first showing that the number of event points in B(Vj+1, Vj ) cannot exceed the number of event points in B(Vj, Vj−1) by more than 2, and using this fact to bound the number of rectangles in B(Vj+1, Vj ). Let P0 (V ) and P1 (V ) be the expected payoffs to V when it plays 0 and 1, respectively. Both P0 (V ) and P1 (V ) are multilinear functions of the strategies of V s neighbors. In what follows, we will frequently use the following simple observation. CLAIM 1. For a vertex V with a single child U and parent W , given any A, B, C, D ∈ Q, A , B , C , D ∈ Q, one can select the payoffs to V so that P0 (V ) = Auw + Bu + Cw + D, P1 (V ) = A uw + B u + C w + D . Moreover, if all A, B, C, D, A , B , C , D are integer, the payoffs to V are integer as well. PROOF. We will give the proof for P0 (V ); the proof for P1 (V ) is similar. For i, j = 0, 1, let Pij be the payoff to V when U plays i, V plays 0 and W plays j. We have P0 (V ) = P00(1 − u)(1 − w) + P10u(1 − w) + P01(1 − u)w + P11uw. We have to select the values of Pij so that P00 − P10 − P01 + P11 = A, −P00 + P10 = B, −P00 + P01 = C, P00 = D. It is easy to see that the unique solution is given by P00 = D, P01 = C + D, P10 = B + D, P11 = A + B + C + D. The input to all algorithms considered in this paper includes the payoff matrices for each player. We assume that all elements of these matrices are integer. Let Pmax be the greatest absolute value of any element of any payoff matrix. Then the input consists of at most n2Δ+1 numbers, each of which can be represented using log Pmax bits. 3. NASH EQUILIBRIA THAT MAXIMIZE THE SOCIAL WELFARE: SOLUTIONS IN R \\ Q From the point of view of social welfare, the best Nash equilibrium is the one that maximizes the sum of the players expected payoffs. Unfortunately, it turns out that computing such a strategy profile exactly is not possible: in this section, we show that even if all players payoffs are integers, the strategy profile that maximizes the total payoff may have irrational coordinates; moreover, it may involve algebraic numbers of an arbitrary degree. 3.1 Warm-up: quadratic irrationalities We start by providing an example of a graphical game on a path of length 3 with integer payoffs such that in the Nash equilibrium that maximizes the total payoff, one of the players has a strategy in R \\ Q. In the next subsection, we will extend this example to algebraic numbers of arbitrary degree n; to do so, we have to consider paths of length O(n). THEOREM 1. There exists an integer-payoff graphical game G on a 3-vertex path UV W such that, in any Nash equilibrium of G that maximizes social welfare, the strategy, u, of the player U and the total payoff, p, satisfy u, p ∈ R \\ Q. PROOF. The payoffs to the players in G are specified as follows. The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0. Using Claim 1, we select the payoffs to V so that P0 (V ) = −uw + 3w and P1 (V ) = P0 (V ) + w(u + 2) − (u + 1), where u and w are the (mixed) strategies of U and W , respectively. It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = u+1 u+2 . Observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1]. The payoff to W is 0 if it selects the same action as V and 1 otherwise. CLAIM 2. All Nash equilibria of the game G are of the form (u, 1/2, f(u)). That is, in any Nash equilibrium, V plays v = 1/2 and W plays w = f(u). Moreover, for any value of u, the vector of strategies (u, 1/2, f(u)) constitutes a Nash equilibrium. PROOF. It is easy to check that for any u ∈ [0, 1], the vector (u, 1/2, f(u)) is a Nash equilibrium. Indeed, U is content to play 164 any mixed strategy u no matter what V and W do. Furthermore, V is indifferent between 0 and 1 as long as w = f(u), so it can play 1/2. Finally, if V plays 0 and 1 with equal probability, W is indifferent between 0 and 1, so it can play f(u). Conversely, suppose that v > 1/2. Then W strictly prefers to play 0, i.e., w = 0. Then for V we have P1 (V ) = P0 (V ) − (u + 1), i.e., P1 (V ) < P0 (V ), which implies v = 0, a contradiction. Similarly, if v < 1/2, player W prefers to play 1, so we have w = 1. Hence, P1 (V ) = P0 (V ) + (u + 2) − (u + 1), i.e., P1 (V ) > P0 (V ), which implies v = 1, a contradiction. Finally, if v = 1/2, but w = f(u), player V is not indifferent between 0 and 1, so he would deviate from playing 1/2. This completes the proof of Claim 2. By Claim 2, the total payoff in any Nash equilibrium of this game is a function of u. More specifically, the payoff to U is 0, the payoff to V is −uf(u) + 3f(u), and the payoff to W is 1/2. Therefore, the Nash equilibrium with the maximum total payoff corresponds to the value of u that maximizes g(u) = −u (u + 1) u + 2 + 3 u + 1 u + 2 = − (u − 3)(u + 1) u + 2 . To find extrema of g(u), we compute h(u) = − d du g(u). We have h(u) = (2u − 2)(u + 2) − (u − 3)(u + 1) (u + 2)2 = u2 + 4u − 1 (u + 2)2 . Hence, h(u) = 0 if and only if u ∈ {−2 + √ 5, −2 − √ 5}. Note that −2 + √ 5 ∈ [0, 1]. The function g(u) changes sign at −2, −1, and 3. We have g(u) < 0 for g > 3, g(u) > 0 for u < −2, so the extremum of g(u) that lies between 1 and 3, i.e., u = −2 + √ 5, is a local maximum. We conclude that the social welfare-maximizing Nash equilibrium for this game is given by the vector of strategies (−2+√ 5, 1/2, (5 − √ 5)/5). The respective total payoff is 0 − ( √ 5 − 5)( √ 5 − 1) √ 5 + 1 2 = 13/2 − 2 √ 5. This concludes the proof of Theorem 1. 3.2 Strategies of arbitrary degree We have shown that in the social welfare-maximizing Nash equilibrium, some players strategies can be quadratic irrationalities, and so can the total payoff. In this subsection, we will extend this result to show that we can construct an integer-payoff graphical game on a path whose social welfare-maximizing Nash equilibrium involves arbitrary algebraic numbers in [0, 1]. THEOREM 2. For any degree-n algebraic number α ∈ [0, 1], there exists an integer payoff graphical game on a path of length O(n) such that, in all social welfare-maximizing Nash equilibria of this game, one of the players plays α. PROOF. Our proof consists of two steps. First, we construct a rational expression R(x) and a segment [x , x ] such that x , x ∈ Q and α is the only maximum of R(x) on [x , x ]. Second, we construct a graphical game whose Nash equilibria can be parameterized by u ∈ [x , x ], so that at the equilibrium that corresponds to u the total payoff is R(u) and, moreover, some players strategy is u. It follows that to achieve the payoff-maximizing Nash equilibrium, this player has to play α. The details follow. LEMMA 1. Given an algebraic number α ∈ [0, 1], deg(α) = n, there exist K2, . . . , K2n+2 ∈ Q and x , x ∈ (0, 1) ∩ Q such that α is the only maximum of R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 on [x , x ]. PROOF. Let P(x) be the minimal polynomial of α, i.e., a polynomial of degree n with rational coefficients whose leading coefficient is 1 such that P(α) = 0. Let A = {α1, . . . , αn} be the set of all roots of P(x). Consider the polynomial Q1(x) = −P2 (x). It has the same roots as P(x), and moreover, for any x ∈ A we have Q1(x) < 0. Hence, A is the set of all maxima of Q1(x). Now, set R(x) = Q1(x) (x+2)...(x+2n+1)(x+2n+2) . Observe that R(x) ≤ 0 for all x ∈ [0, 1] and R(x) = 0 if and only if Q1(x) = 0. Hence, the set A is also the set of all maxima of R(x) on [0, 1]. Let d = min{|αi − α| | αi ∈ A, αi = α}, and set α = max{α − d/2, 0}, α = min{α + d/2, 1}. Clearly, α is the only zero (and hence, the only maximum) of R(x) on [α , α ]. Let x and x be some rational numbers in (α , α) and (α, α ), respectively; note that by excluding the endpoints of the intervals we ensure that x , x = 0, 1. As [x , x ] ⊂ [α , α ], we have that α is the only maximum of R(x) on [x , x ]. As R(x) is a proper rational expression and all roots of its denominator are simple, by partial fraction decomposition theorem, R(x) can be represented as R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 , where K2, . . . , K2n+2 are rational numbers. Consider a graphical game on the path U−1V−1U0V0U1V1 . . . Uk−1Vk−1Uk, where k = 2n + 2. Intuitively, we want each triple (Ui−1, Vi−1, Ui) to behave similarly to the players U, V , and W from the game described in the previous subsection. More precisely, we define the payoffs to the players in the following way. • The payoff to U−1 is 0 no matter what everyone else does. • The expected payoff to V−1 is 0 if it plays 0 and u0 − (x − x )u−1 −x if it plays 1, where u0 and u−1 are the strategies of U0 and U−1, respectively. • The expected payoff to V0 is 0 if it plays 0 and u1(u0 + 1)− u0 if it plays 1, where u0 and u1 are the strategies of U0 and U1, respectively. • For each i = 1, . . . , k − 1, the expected payoff to Vi when it plays 0 is P0 (Vi) = Aiuiui+1 − Aiui+1, and the expected payoff to Vi when it plays 1 is P1 (Vi) = P0 (Vi) + ui+1(2 − ui) − 1, where Ai = −Ki+1 and ui+1 and ui are the strategies of Ui+1 and Ui, respectively. • For each i = 0, . . . , k, the payoff to Ui does not depend on Vi and is 1 if Ui and Vi−1 select different actions and 0 otherwise. We will now characterize the Nash equilibria of this game using a sequence of claims. CLAIM 3. In all Nash equilibria of this game V−1 plays 1/2, and the strategies of u−1 and u0 satisfy u0 = (x − x )u−1 + x . Consequently, in all Nash equilibria we have u0 ∈ [x , x ]. 165 PROOF. The proof is similar to that of Claim 2. Let f(u−1) = (x − x )u−1 + x . Clearly, the player V−1 is indifferent between playing 0 and 1 if and only if u0 = f(u−1). Suppose that v−1 < 1/2. Then U0 strictly prefers to play 1, i.e., u0 = 1, so we have P1 (V−1) = P0 (V−1) + 1 − (x − x )u−1 − x . As 1 − x ≤ 1 − (x − x )u−1 − x ≤ 1 − x for u−1 ∈ [0, 1] and x < 1, we have P1 (V−1) > P0 (V−1), so V−1 prefers to play 1, a contradiction. Similarly, if v−1 > 1/2, the player U0 strictly prefers to play 0, i.e., u0 = 0, so we have P1 (V−1) = P0 (V−1) − (x − x )u−1 − x . As x < x , x > 0, we have P1 (V−1) < P0 (V−1), so V−1 prefers to play 0, a contradiction. Finally, if V−1 plays 1/2, but u0 = f(u−1), player V−1 is not indifferent between 0 and 1, so he would deviate from playing 1/2. Also, note that f(0) = x , f(1) = x , and, moreover, f(u−1) ∈ [x , x ] if and only if u−1 ∈ [0, 1]. Hence, in all Nash equilibria of this game we have u0 ∈ [x , x ]. CLAIM 4. In all Nash equilibria of this game for each i = 0, . . . , k − 1, we have vi = 1/2, and the strategies of the players Ui and Ui+1 satisfy ui+1 = fi(ui), where f0(u) = u/(u + 1) and fi(u) = 1/(2 − u) for i > 0. PROOF. The proof of this claim is also similar to that of Claim 2. We use induction on i to prove that the statement of the claim is true and, additionally, ui = 1 for i > 0. For the base case i = 0, note that u0 = 0 by the previous claim (recall that x , x are selected so that x , x = 0, 1) and consider the triple (U0, V0, U1). Let v0 be the strategy of V0. First, suppose that v0 > 1/2. Then U1 strictly prefers to play 0, i.e., u1 = 0. Then for V0 we have P1 (V0) = P0 (V0) − u0. As u0 = 0, we have P1 (V0) < P0 (V0), which implies v1 = 0, a contradiction. Similarly, if v0 < 1/2, player U1 prefers to play 1, so we have u1 = 1. Hence, P1 (V0) = P0 (V0) + 1. It follows that P1 (V0) > P0 (V0), which implies v0 = 1, a contradiction. Finally, if v0 = 1/2, but u1 = u0/(u0 + 1), player V0 is not indifferent between 0 and 1, so he would deviate from playing 1/2. Moreover, as u1 = u0/(u0 + 1) and u0 ∈ [0, 1], we have u1 = 1. The argument for the inductive step is similar. Namely, suppose that the statement is proved for all i < i and consider the triple (Ui, Vi, Ui+1). Let vi be the strategy of Vi. First, suppose that vi > 1/2. Then Ui+1 strictly prefers to play 0, i.e., ui+1 = 0. Then for Vi we have P1 (Vi) = P0 (Vi)−1, i.e., P1 (Vi) < P0 (Vi), which implies vi = 0, a contradiction. Similarly, if vi < 1/2, player Ui+1 prefers to play 1, so we have ui+1 = 1. Hence, P1 (Vi) = P0 (Vi) + 1 − ui. By inductive hypothesis, we have ui < 1. Consequently, P1 (Vi) > P0 (Vi), which implies vi = 1, a contradiction. Finally, if vi = 1/2, but ui+1 = 1/(2 − ui), player Vi is not indifferent between 0 and 1, so he would deviate from playing 1/2. Moreover, as ui+1 = 1/(2 − ui) and ui < 1, we have ui+1 < 1. CLAIM 5. Any strategy profile of the form (u−1, 1/2, u0, 1/2, u1, 1/2, . . . , uk−1, 1/2, uk), where u−1 ∈ [0, 1], u0 = (x − x )u−1 + x , u1 = u0/(u0 + 1), and ui+1 = 1/(2 − ui) for i ≥ 1 constitutes a Nash equilibrium. PROOF. First, the player U−1s payoffs do not depend on other players actions, so he is free to play any strategy in [0, 1]. As long as u0 = (x −x )u−1 +x , player V−1 is indifferent between 0 and 1, so he is content to play 1/2; a similar argument applies to players V0, . . . , Vk−1. Finally, for each i = 0, . . . , k, the payoffs of player Ui only depend on the strategy of player Vi−1. In particular, as long as vi−1 = 1/2, player Ui is indifferent between playing 0 and 1, so he can play any mixed strategy ui ∈ [0, 1]. To complete the proof, note that (x − x )u−1 + x ∈ [0, 1] for all u−1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] for all u0 ∈ [0, 1], and 1/(2 − ui) ∈ [0, 1] for all ui ∈ [0, 1], so we have ui ∈ [0, 1] for all i = 0, . . . , k. Now, let us compute the total payoff under a strategy profile of the form given in Claim 5. The payoff to U−1 is 0, and the expected payoff to each of the Ui, i = 0, . . . , k, is 1/2. The expected payoffs to V−1 and V0 are 0. Finally, for any i = 1, . . . , k − 1, the expected payoff to Vi is Ti = Aiuiui+1 − Aiui+1. It follows that to find a Nash equilibrium with the highest total payoff, we have to maximize Pk−1 i=1 Ti subject to conditions u−1 ∈ [0, 1], u0 = (x −x )u−1+x , u1 = u0/(u0+1), and ui+1 = 1/(2−ui) for i = 1, . . . , k − 1. We would like to express Pk−1 i=1 Ti as a function of u0. To simplify notation, set u = u0. LEMMA 2. For i = 1, . . . , k, we have ui = u+i−1 u+i . PROOF. The proof is by induction on i. For i = 1, we have u1 = u/(u + 1). Now, for i ≥ 2 suppose that ui−1 = (u + i − 2)/(u + i − 1). We have ui = 1/(2 − ui−1) = (u + i − 1)/(2u + 2i − 2 − u − i + 2) = (u + i − 1)/(u + i). It follows that for i = 1, . . . , k − 1 we have Ti = Ai u + i − 1 u + i u + i u + i + 1 − Ai u + i u + i + 1 = −Ai 1 u + i + 1 = Ki+1 u + i + 1 . Observe that as u−1 varies from 0 to 1, u varies from x to x . Therefore, to maximize the total payoff, we have to choose u ∈ [x , x ] so as to maximize K2 u + 2 + · · · + Kk u + k = R(u). By construction, the only maximum of R(u) on [x , x ] is α. It follows that in the payoff-maximizing Nash equilibrium of our game U0 plays α. Finally, note that the payoffs in our game are rational rather than integer. However, it is easy to see that we can multiply all payoffs to a player by their greatest common denominator without affecting his strategy. In the resulting game, all payoffs are integer. This concludes the proof of Theorem 2. 4. APPROXIMATING THE SOCIALLY OPTIMAL NASH EQUILIBRIUM We have seen that the Nash equilibrium that maximizes the social welfare may involve strategies that are not in Q. Hence, in this section we focus on finding a Nash equilibrium that is almost optimal from the social welfare perspective. We propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within from optimal. The running time of this algorithm is polynomial in 1/ , n and |Pmax| (recall that Pmax is the maximum absolute value of an entry of a payoff matrix). While the negative result of the previous section is for graphical games on paths, our algorithm applies to a wider range of scenarios. Namely, it runs in polynomial time on bounded-degree trees 166 as long as the best response policy of each vertex, given its parent, can be represented as a union of a polynomial number of rectangles. Note that path graphs always satisfy this condition: in [9] we showed how to compute such a representation, given a graph with maximum degree 2. Consequently, for path graphs the running time of our algorithm is guaranteed to be polynomial. (Note that [9] exhibits a family of graphical games on bounded-degree trees for which the best response policies of some of the vertices, given their parents, have exponential size, when represented as unions of rectangles.) Due to space restrictions, in this version of the paper we present the algorithm for the case where the graph underlying the graphical game is a path. We then state our result for the general case; the proof can be found in the full version of this paper [10]. Suppose that s is a strategy profile for a graphical game G. That is, s assigns a mixed strategy to each vertex of G. let EPV (s) be the expected payoff of player V under s and let EP(s) =P V EPV (s). Let M(G) = max{EP(s) | s is a Nash equilibrium for G}. THEOREM 3. Suppose that G is a graphical game on an nvertex path. Then for any > 0 there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G)− . The running time of the algorithm is O(n4 P3 max/ 3 ) PROOF. Let {V1, . . . , Vn} be the set of all players. We start by constructing the best response policies for all Vi, i = 1, . . . , n − 1. As shown in [9], this can be done in time O(n3 ). Let N > 5n be a parameter to be selected later, set δ = 1/N, and define X = {jδ | j = 0, . . . , N}. We say that vj is an event point for a player Vi if it is a Vi-event point for B(Vi, Vi−1) or B(Vi+1, Vi). For each player Vi, consider a finite set of strategies Xi given by Xi = X ∪ {vj |vj is an event point for Vi}. It has been shown in [9] that for any i = 2, . . . , n, the best response policy B(Vi, Vi−1) has at most 2n + 4 Vi-event points. As we require N > 5n, we have |Xi| ≤ 2N; assume without loss of generality that |Xi| = 2N. Order the elements of Xi in increasing order as x1 i = 0 < x2 i < · · · < x2N i . We will refer to the strategies in Xi as discrete strategies of player Vi; a strategy profile in which each player has a discrete strategy will be referred to as a discrete strategy profile. We will now show that even we restrict each player Vi to strategies from Xi, the players can still achieve a Nash equilibrium, and moreover, the best such Nash equilibrium (with respect to the social welfare) has total payoff at least M(G) − as long as N is large enough. Let s be a strategy profile that maximizes social welfare. That is, let s = (s1, . . . , sn) where si is the mixed strategy of player Vi and EP(s) = M(G). For i = 1, . . . , n, let ti = max{xj i | xj i ≤ si}. First, we will show that the strategy profile t = (t1, . . . , tn) is a Nash equilibrium for G. Fix any i, 1 < i ≤ n, and let R = [v1, v2]×[u1, u2] be the rectangle in B(Vi, Vi−1) that contains (si, si−1). As v1 is a Vi-event point of B(Vi, Vi−1), we have v1 ≤ ti, so the point (ti, si−1) is inside R. Similarly, the point u1 is a Vi−1-event point of B(Vi, Vi−1), so we have u1 ≤ ti−1, and therefore the point (ti, ti−1) is inside R. This means that for any i, 1 < i ≤ n, we have ti−1 ∈ pbrVi−1 (ti), which implies that t = (t1, . . . , tn) is a Nash equilibrium for G. Now, let us estimate the expected loss in social welfare caused by playing t instead of s. LEMMA 3. For any pair of strategy profiles t, s such that |ti − si| ≤ δ we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ for any i = 1, . . . , n. PROOF. Let Pi klm be the payoff of the player Vi, when he plays k, Vi−1 plays l, and Vi+1 plays m. Fix i = 1, . . . , n and for k, l, m ∈ {0, 1}, set tklm = tk i−1(1 − ti−1)1−k tl i(1 − ti)1−l tm i+1(1 − ti+1)1−m sklm = sk i−1(1 − si−1)1−k sl i(1 − si)1−l sm i+1(1 − si+1)1−m . We have |EPVi (s) − EPVi (t)| ≤ X k,l,m=0,1 |Pi klm(tklm − sklm )| ≤ 8Pmax max klm |tklm − sklm | We will now show that for any k, l, m ∈ {0, 1} we have |tklm − sklm | ≤ 3δ; clearly, this implies the lemma. Indeed, fix k, l, m ∈ {0, 1}. Set x = tk i−1(1 − ti−1)1−k , x = sk i−1(1 − si−1)1−k , y = tl i(1 − ti)1−l , y = sl i(1 − si)1−l , z = tm i+1(1 − ti+1)1−m , z = sm i+1(1 − si+1)1−m . Observe that if k = 0 then x − x = (1 − ti−1) − (1 − si−1), and if k = 1 then x − x = ti−1 − si−1, so |x − x | ≤ δ. A similar argument shows |y − y | ≤ δ, |z − z | ≤ δ. Also, we have x, x , y, y , z, z ∈ [0, 1]. Hence, |tklm −sklm | = |xyz−x y z | = |xyz − x yz + x yz − x y z + x y z − x y z | ≤ |x − x |yz + |y − y |x z + |z − z |x y ≤ 3δ. Lemma 3 implies Pn i=1 |EPVi (s) − EPVi (t)| ≤ 24nPmaxδ, so by choosing δ < /(24nPmax), or, equivalently, setting N > 24nPmax/ , we can ensure that the total expected payoff for the strategy profile t is within from optimal. We will now show that we can find the best discrete Nash equilibrium (with respect to the social welfare) using dynamic programming. As t is a discrete strategy profile, this means that the strategy profile found by our algorithm will be at least as good as t. Define ml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj , j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1, and, moreover, Vi−1 plays xl i−1, Vi plays xk i . If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞. The values ml,k i , i = 1, . . . , n; k, l = 1, . . . , N, can be computed inductively, as follows. We have ml,k 1 = 0 for k, l = 1, . . . , N. Now, suppose that we have already computed ml,k j for all j < i; k, l = 1, . . . , N. To compute mk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1). If this is not the case, we have ml,k i = −∞. Otherwise, consider the set Y = Xi−2 ∩ pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1. The proof of Theorem 1 in [9] implies that the set pbrVi−2 (xl i−1) is non-empty: the player Vi−2 has a potential best response to any strategy of Vi−1, in particular, xl i−1. By construction of the set Xi−2, this implies that Y is not empty. For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i . Clearly, pjlk can be computed in constant time. Then we have ml,k i = max{mj,l i−1 + pjlk | xj i−2 ∈ Y }. Finally, suppose that we have computed ml,k n for l, k = 1, . . . , N. We still need to take into account the payoff of player Vn. Hence, 167 we consider all pairs (xk n, xl n−1) that satisfy xl n−1 ∈ pbrVn−1 (xk n), and pick the one that maximizes the sum of mk,l n and the payoff of Vn when he plays xk n and Vn−1 plays xl n−1. This results in the maximum total payoff the players can achieve in a Nash equilibrium using discrete strategies; the actual strategy profile that produces this payoff can be reconstructed using standard dynamic programming techniques. It is easy to see that each ml,k i can be computed in time O(N), i.e., all of them can be computed in time O(nN3 ). Recall that we have to select N ≥ (24nPmax)/ to ensure that the strategy profile we output has total payoff that is within from optimal. We conclude that we can compute an -approximation to the best Nash equilibrium in time O(n4 P3 max/ 3 ). This completes the proof of Theorem 3. To state our result for the general case (i.e., when the underlying graph is a bounded-degree tree rather than a path), we need additional notation. If G has n players, let q(n) be an upper bound on the number of event points in the representation of any best response policy. That is, we assume that for any vertex U with parent V , B(V, U) has at most q(n) event points. We will be interested in the situation in which q(n) is polynomial in n. THEOREM 4. Let G be an n-player graphical game on a tree in which each node has at most Δ children. Suppose we are given a set of best-response policies for G in which each best-response policy B(V, U) is represented by a set of rectangles with at most q(n) event points. For any > 0, there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G) − . The running time of the algorithm is polynomial in n, Pmax and −1 provided that the tree has bounded degree (that is, Δ = O(1)) and q(n) is a polynomial in n. In particular, if N = max((Δ + 1)q(n) + 1, n2Δ+2 (Δ + 2)Pmax −1 ) and Δ > 1 then the running time is O(nΔ(2N)Δ . For the proof of this theorem, see [10]. 4.1 A polynomial-time algorithm for multiplicative approximation The running time of our algorithm is pseudopolynomial rather than polynomial, because it includes a factor which is polynomial in Pmax, the maximum (in absolute value) entry in any payoff matrix. If we are interested in multiplicative approximation rather than additive one, this can be improved to polynomial. First, note that we cannot expect a multiplicative approximation for all inputs. That is, we cannot hope to have an algorithm that computes a Nash equilibrium with total payoff at least (1 − )M(G). If we had such an algorithm, then for graphical games G with M(G) = 0, the algorithm would be required to output the optimal solution. To show that this is infeasible, observe that we can use the techniques of Section 3.2 to construct two integercoefficient graphical games on paths of length O(n) such that for some X ∈ R the maximal total payoff in the first game is X, the maximal total payoff in the second game is −X, and for both games, the strategy profiles that achieve the maximal total payoffs involve algebraic numbers of degree n. By combining the two games so that the first vertex of the second game becomes connected to the last vertex of the first game, but the payoffs of all players do not change, we obtain a graphical game in which the best Nash equilibrium has total payoff 0, yet the strategies that lead to this payoff have high algebraic complexity. However, we can achieve a multiplicative approximation when all entries of the payoff matrices are positive and the ratio between any two entries is polynomially bounded. Recall that we assume that all payoffs are integer, and let Pmin > 0 be the smallest entry of any payoff matrix. In this case, for any strategy profile the payoff to player i is at least Pmin, so the total payoff in the social-welfare maximizing Nash equilibrium s satisfies M(G) ≥ nPmin. Moreover, Lemma 3 implies that by choosing δ < /(24Pmax/Pmin), we can ensure that the Nash equilibrium t produced by our algorithm satisfies nX i=1 EPVi (s) − nX i=1 EPVi (t) ≤ 24Pmaxδn ≤ nPmin ≤ M(G), i.e., for this value of δ we have Pn i=1 EPVi (t) ≥ (1 − )M(G). Recall that the running time of our algorithm is O(nN3 ), where N has to be selected to satisfy N > 5n, N = 1/δ. It follows that if Pmin > 0, Pmax/Pmin = poly(n), we can choose N so that our algorithm provides a multiplicative approximation guarantee and runs in time polynomial in n and 1/ . 5. BOUNDED PAYOFF NASH EQUILIBRIA Another natural way to define what is a good Nash equilibrium is to require that each players expected payoff exceeds a certain threshold. These thresholds do not have to be the same for all players. In this case, in addition to the payoff matrices of the n players, we are given n numbers T1, . . . , Tn, and our goal is to find a Nash equilibrium in which the payoff of player i is at least Ti, or report that no such Nash equilibrium exists. It turns out that we can design an FPTAS for this problem using the same techniques as in the previous section. THEOREM 5. Given a graphical game G on an n-vertex path and n rational numbers T1, . . . , Tn, suppose that there exists a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. Then for any > 0 we can find in time O(max{nP3 max/ 3 , n4 / 3 }) a strategy profile s such that s is a Nash equilibrium for G and EPVi (s ) ≥ Ti − for i = 1, . . . , n. PROOF. The proof is similar to that of Theorem 3. First, we construct the best response policies for all players, choose N > 5n, and construct the sets Xi, i = 1, . . . , n, as described in the proof of Theorem 3. Consider a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. We construct a strategy profile ti = max{xj i | xj i ≤ si} and use the same argument as in the proof of Theorem 3 to show that t is a Nash equilibrium for G. By Lemma 3, we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ, so choosing δ < /(24Pmax), or, equivalently, N > max{5n, 24Pmax/ }, we can ensure EPVi (t) ≥ Ti − for i = 1, . . . , n. Now, we will use dynamic programming to find a discrete Nash equilibrium that satisfies EPVi (t) ≥ Ti − for i = 1, . . . , n. As t is a discrete strategy profile, our algorithm will succeed whenever there is a strategy profile s with EPVi (s) ≥ Ti− for i = 1, . . . , n. Let zl,k i = 1 if there is a discrete strategy profile such that for any j < i the strategy of the player Vj is a potential best response to the strategy of Vj+1, the expected payoff of Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i . Otherwise, let zl,k i = 0. We can compute zl,k i , i = 1, . . . , n; k, l = 1, . . . , N inductively, as follows. We have zl,k 1 = 1 for k, l = 1, . . . , N. Now, suppose that we have already computed zl,k j for all j < i; k, l = 1, . . . , N. To compute zk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1). If this 168 is not the case, clearly, zk,l i = 0. Otherwise, consider the set Y = Xi−2 ∩pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1. It has been shown in the proof of Theorem 3 that Y = ∅. For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i . Clearly, pjlk can be computed in constant time. If there exists an xj i−2 ∈ Y such that zj,l i−1 = 1 and pjlk ≥ Ti−2 − , set zl,k i = 1. Otherwise, set zl,k i = 0. Having computed zl,k n , l, k = 1, . . . , N, we check if zl,k n = 1 for some pair (l, k). if such a pair of indices exists, we instruct Vn to play xk n and use dynamic programming techniques (or, equivalently, the downstream pass of the algorithm of [13]) to find a Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n (recall that Vn is a dummy player, i.e., we assume Tn = 0, EPn(s ) = 0 for any choice of s ). If zl,k n = 0 for all l, k = 1, . . . , N, there is no discrete Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n and hence no Nash equilibrium s (not necessarily discrete) such that EPVi (s) ≥ Ti for i = 1, . . . , n. The running time analysis is similar to that for Theorem 3; we conclude that the running time of our algorithm is O(nN3 ) = O(max{nP3 max/ 3 , n4 / 3 }). REMARK 1. Theorem 5 can be extended to trees of bounded degree in the same way as Theorem 4. 5.1 Exact Computation Another approach to finding Nash equilibria with bounded payoffs is based on inductively computing the subsets of the best response policies of all players so as to exclude the points that do not provide sufficient payoffs to some of the players. Formally, we say that a strategy v of the player V is a potential best response to a strategy w of its parent W with respect to a threshold vector T = (T1, . . . , Tn), (denoted by v ∈ pbrV (w, T)) if there is an equilibrium in the instance G(V,W ),W =w in which V plays mixed strategy v and the payoff to any player Vi downstream of V (including V ) is at least Ti. The best response policy for V with respect to a threshold vector T is defined as B(W, V, T) = {(w, v) | v ∈ pbrV (w, T), w ∈ [0, 1]}. It is easy to see that if any of the sets B(Vj, Vj−1, T), j = 1, . . . , n, is empty, it means that it is impossible to provide all players with expected payoffs prescribed by T. Otherwise, one can apply the downstream pass of the original algorithm of [13] to find a Nash equilibrium. As we assume that Vn is a dummy vertex whose payoff is identically 0, the Nash equilibrium with these payoffs exists as long as Tn ≤ 0 and B(Vn, Vn−1, T) is not empty. Using the techniques developed in [9], it is not hard to show that for any j = 1, . . . , n, the set B(Vj , Vj−1, T) consists of a finite number of rectangles, and one can compute B(Vj+1, Vj , T) given B(Vj , Vj−1, T). The advantage of this approach is that it allows us to represent all Nash equilibria that provide required payoffs to the players. However, it is not likely to be practical, since it turns out that the rectangles that appear in the representation of B(Vj , Vj−1, T) may have irrational coordinates. CLAIM 6. There exists a graphical game G on a 3-vertex path UV W and a vector T = (T1, T2, T3) such that B(V, W, T) cannot be represented as a union of a finite number of rectangles with rational coordinates. PROOF. We define the payoffs to the players in G as follows. The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0. Using Claim 1, we select the payoffs to V so that P0 (V ) = uw, P1 (V ) = P0 (V ) + w − .8u − .1, where u and w are the (mixed) strategies of U and W , respectively. It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = .8u + .1; observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1]. It is not hard to see that we have B(W, V ) = [0, .1]×{0} ∪ [.1, .9]×[0, 1] ∪ [.9, 1]×{1}. The payoffs to W are not important for our construction; for example, set P0(W ) = P0(W ) = 0. Now, set T = (0, 1/8, 0), i.e., we are interested in Nash equilibria in which V s expected payoff is at least 1/8. Suppose w ∈ [0, 1]. The player V can play a mixed strategy v when W is playing w as long as U plays u = f−1 (w) = 5w/4 − 1/8 (to ensure that V is indifferent between 0 and 1) and P0 (V ) = P1 (V ) = uw = w(5w/4 − 1/8) ≥ 1/8. The latter condition is satisfied if w ≤ (1 − √ 41)/20 < 0 or w ≥ (1 + √ 41)/20. Note that we have .1 < (1 + √ 41)/20 < .9. For any other value of w, any strategy of U either makes V prefer one of the pure strategies or does not provide it with a sufficient expected payoff. There are also some values of w for which V can play a pure strategy (0 or 1) as a potential best response to W and guarantee itself an expected payoff of at least 1/8; it can be shown that these values of w form a finite number of segments in [0, 1]. We conclude that any representation of B(W, V, T) as a union of a finite number of rectangles must contain a rectangle of the form [(1 + √ 41)/20, w ]×[v , v ] for some w , v , v ∈ [0, 1]. On the other hand, it can be shown that for any integer payoff matrices and threshold vectors and any j = 1, . . . , n − 1, the sets B(Vj+1, Vj, T) contain no rectangles of the form [u , u ]×{v} or {v}×[w , w ], where v ∈ R\\Q. This means that if B(Vn, Vn−1, T) is non-empty, i.e., there is a Nash equilibrium with payoffs prescribed by T, then the downstream pass of the algorithm of [13] can always pick a strategy profile that forms a Nash equilibrium, provides a payoff of at least Ti to the player Vi, and has no irrational coordinates. Hence, unlike in the case of the Nash equilibrium that maximizes the social welfare, working with irrational numbers is not necessary, and the fact that the algorithm discussed in this section has to do so can be seen as an argument against using this approach. 6. OTHER CRITERIA FOR SELECTING A NASH EQUILIBRIUM In this section, we consider several other criteria that can be useful in selecting a Nash equilibrium. 6.1 Combining welfare maximization with bounds on payoffs In many real life scenarios, we want to maximize the social welfare subject to certain restrictions on the payoffs to individual players. For example, we may want to ensure that no player gets a negative expected payoff, or that the expected payoff to player i is at least Pi max − ξ, where Pi max is the maximum entry of is payoff matrix and ξ is a fixed parameter. Formally, given a graphical game G and a vector T1, . . . , Tn, let S be the set of all Nash equilibria s of G that satisfy Ti ≤ EPVi (s) for i = 1, . . . , n, and let ˆs = argmaxs∈S EP(s). If the set S is non-empty, we can find a Nash equilibrium ˆs that is -close to satisfying the payoff bounds and is within from ˆs with respect to the total payoff by combining the algorithms of Section 4 and Section 5. Namely, for a given > 0, choose δ as in the proof of Theorem 3, and let Xi be the set of all discrete strategies of player Vi (for a 169 formal definition, see the proof of Theorem 3). Combining the proofs of Theorem 3 and Theorem 5, we can see that the strategy profile ˆt given by ˆti = max{xj i | xj i ≤ ˆsi} satisfies EPVi (ˆt) ≥ Ti − , |EP(ˆs) − EP(ˆt)| ≤ . Define ˆml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj, j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1 and the payoff to player Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i . If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞. The ˆml,k i can be computed by dynamic programming similarly to the ml,k i and zl,k i in the proofs of Theorems 3 and 5. Finally, as in the proof of Theorem 3, we use ml,k n to select the best discrete Nash equilibrium subject to the payoff constraints. Even more generally, we may want to maximize the total payoff to a subset of players (who are assumed to be able to redistribute the profits fairly among themselves) while guaranteeing certain expected payoffs to (a subset of) the other players. This problem can be handled similarly. 6.2 A minimax approach A more egalitarian measure of the quality of a Nash equilibrium is the minimal expected payoff to a player. The optimal solution with respect to this measure is a Nash equilibrium in which the minimal expected payoff to a player is maximal. To find an approximation to such a Nash equilibrium, we can combine the algorithm of Section 5 with binary search on the space of potential lower bounds. Note that the expected payoff to any player Vi given a strategy s always satisfies −Pmax ≤ EPVi (s) ≤ Pmax. For a fixed > 0, we start by setting T = −Pmax, T = Pmax, T∗ = (T + T )/2. We then run the algorithm of Section 5 with T1 = · · · = Tn = T∗ . If the algorithm succeeds in finding a Nash equilibrium s that satisfies EPVi (s ) ≥ T∗ − for all i = 1, . . . , n, we set T = T∗ , T∗ = (T + T )/2; otherwise, we set T = T∗ , T∗ = (T + T )/2 and loop. We repeat this process until |T − T | ≤ . It is not hard to check that for any p ∈ R, if there is a Nash equilibrium s such that mini=1,...,n EPVi (s) ≥ p, then our algorithm outputs a Nash equilibrium s that satisfies mini=1,...,n EPVi (s) ≥ p−2 . The running time of our algorithm is O(max{nP3 max log −1 / 3 , n4 log −1 / 3 }). 6.3 Equalizing the payoffs When the players payoff matrices are not very different, it is reasonable to demand that the expected payoffs to the players do not differ by much either. We will now show that Nash equilibria in this category can be approximated in polynomial time as well. Indeed, observe that the algorithm of Section 5 can be easily modified to deal with upper bounds on individual payoffs rather than lower bounds. Moreover, we can efficiently compute an approximation to a Nash equilibrium that satisfies both the upper bound and the lower bound for each player. More precisely, suppose that we are given a graphical game G, 2n rational numbers T1, . . . , Tn, T1, . . . , Tn and > 0. Then if there exists a strategy profile s such that s is a Nash equilibrium for G and Ti ≤ EPVi (s) ≤ Ti for i = 1, . . . , n, we can find a strategy profile s such that s is a Nash equilibrium for G and Ti − ≤ EPVi (s ) ≤ Ti + for i = 1, . . . , n. The modified algorithm also runs in time O(max{nP3 max/ 3 , [4]n4 / 3 }). This observation allows us to approximate Nash equilibria in which all players expected payoffs differ by at most ξ for any fixed ξ > 0. Given an > 0, we set T1 = · · · = Tn = −Pmax, T1 = · · · = Tn = −Pmax + ξ + , and run the modified version of the algorithm of Section 5. If it fails to find a solution, we increment all Ti, Ti by and loop. We continue until the algorithm finds a solution, or Ti ≥ Pmax. Suppose that there exists a Nash equilibrium s that satisfies |EPVi (s) − EPVj (s)| ≤ ξ for all i, j = 1, . . . , n. Set r = mini=1,...,n EPVi (s); we have r ≤ EPVi (s) ≤ r + ξ for all i = 1, . . . , n. There exists a k ≥ 0 such that −Pmax + (k − 1) ≤ r ≤ −Pmax + k . During the kth step of the algorithm, we set T1 = · · · = Tn = −Pmax +(k−1) , i.e., we have r− ≤ Ti ≤ r, r + ξ ≤ Ti ≤ r + ξ + . That is, the Nash equilibrium s satisfies Ti ≤ r ≤ EPVi (s) ≤ r + ξ ≤ Ti , which means that when Ti is set to −Pmax + (k − 1) , our algorithm is guaranteed to output a Nash equilibrium t that satisfies r − 2 ≤ Ti − ≤ EPVi (t) ≤ Ti + ≤ r +ξ +2 . We conclude that whenever such a Nash equilibrium s exists, our algorithm outputs a Nash equilibrium t that satisfies |EPVi (t) − EPVj (t)| ≤ ξ + 4 for all i, j = 1, . . . , n. The running time of this algorithm is O(max{nP3 max/ 4 , n4 / 4 }). Note also that we can find the smallest ξ for which such a Nash equilibrium exists by combining this algorithm with binary search over the space ξ = [0, 2Pmax]. This identifies an approximation to the fairest Nash equilibrium, i.e., one in which the players expected payoffs differ by the smallest possible amount. Finally, note that all results in this section can be extended to bounded-degree trees. 7. CONCLUSIONS We have studied the problem of equilibrium selection in graphical games on bounded-degree trees. We considered several criteria for selecting a Nash equilibrium, such as maximizing the social welfare, ensuring a lower bound on the expected payoff of each player, etc. First, we focused on the algebraic complexity of a social welfare-maximizing Nash equilibrium, and proved strong negative results for that problem. Namely, we showed that even for graphical games on paths, any algebraic number α ∈ [0, 1] may be the only strategy available to some player in all social welfaremaximizing Nash equilibria. This is in sharp contrast with the fact that graphical games on trees always possess a Nash equilibrium in which all players strategies are rational numbers. We then provided approximation algorithms for selecting Nash equilibria with special properties. While the problem of finding approximate Nash equilibria for various classes of games has received a lot of attention in recent years, most of the existing work aims to find -Nash equilibria that satisfy (or are -close to satisfying) certain properties. Our approach is different in that we insist on outputting an exact Nash equilibrium, which is -close to satisfying a given requirement. As argued in the introduction, there are several reasons to prefer a solution that constitutes an exact Nash equilibrium. Our algorithms are fully polynomial time approximation schemes, i.e., their running time is polynomial in the inverse of the approximation parameter , though they may be pseudopolynomial with respect to the input size. Under mild restrictions on the inputs, they can be modified to be truly polynomial. This is the strongest positive result one can derive for a problem whose exact solutions may be hard to represent, as is the case for many of the problems considered here. While we prove our results for games on a path, they can be generalized to any tree for which the best response policies have compact representations as unions of rectangles. In the full version of the paper we describe our algorithms for the general case. Further work in this vein could include extensions to the kinds of guarantees sought for Nash equilibria, such as guaranteeing total payoffs for subsets of players, selecting equilibria in which some players are receiving significantly higher payoffs than their peers, etc. At the moment however, it is perhaps more important to inves170 tigate whether Nash equilibria of graphical games can be computed in a decentralized manner, in contrast to the algorithms we have introduced here. It is natural to ask if our results or those of [9] can be generalized to games with three or more actions. However, it seems that this will make the analysis significantly more difficult. In particular, note that one can view the bounded payoff games as a very limited special case of games with three actions per player. Namely, given a two-action game with payoff bounds, consider a game in which each player Vi has a third action that guarantees him a payoff of Ti no matter what everyone else does. Then checking if there is a Nash equilibrium in which none of the players assigns a nonzero probability to his third action is equivalent to checking if there exists a Nash equilibrium that satisfies the payoff bounds in the original game, and Section 5.1 shows that finding an exact solution to this problem requires new ideas. Alternatively it may be interesting to look for similar results in the context of correlated equilibria (CE), especially since the best CE may have higher value (total expected payoff) than the best NE. The ratio between these values is called the mediation value in [1]. It is known from [1] that the mediation value of 2-player, 2-action games with non-negative payoffs is at most 4 3 , and they exhibit a 3-player game for which it is infinite. Furthermore, a 2-player, 3action example from [1] also has infinite mediation value. 8. REFERENCES [1] I. Ashlagi, D. Monderer and M. Tenneholtz, On the Value of Correlation, Proceedings of Dagstuhl seminar 05011 (2005) [2] R. Aumann, Subjectivity and Correlation in Randomized Strategies, Journal of Mathematical Economics 1 pp. 67-96 (1974) [3] B. Blum, C. R. Shelton, and D. Koller, A Continuation Method for Nash Equilibria in Structured Games, Proceedings of IJCAI03 [4] X. Chen, X. Deng and S. Teng, Computing Nash Equilibria: Approximation and Smoothed Complexity, Proceedings of FOCS06 [5] X. Chen, X. Deng, Settling the Complexity of 2-Player Nash-Equilibrium, Proceedings of FOCS06 [6] V. Conitzer and T. Sandholm, Complexity Results about Nash Equilibria, Proceedings of IJCAI03 [7] C. Daskalakis, P. W. Goldberg and C. H. Papadimitriou, The Complexity of Computing a Nash Equilibrium, Proceedings of STOC06 [8] R. S. Datta, Universality of Nash Equilibria, Mathematics of Operations Research 28:3, 2003 [9] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Nash Equilibria in Graphical games on Trees Revisited, Proceedings of ACM EC06 [10] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Computing Good Nash Equilibria in Graphical Games, http://arxiv.org/abs/cs.GT/0703133 [11] I. Gilboa and E. Zemel, Nash and Correlated Equilibria: Some Complexity Considerations, Games and Economic Behavior, 1 pp. 80-93 (1989) [12] P. W. Goldberg and C. H. Papadimitriou, Reducibility Among Equilibrium Problems, Proceedings of STOC06 [13] M. Kearns, M. Littman, and S. Singh, Graphical Models for Game Theory, Proceedings of UAI01 [14] M. Littman, M. Kearns, and S. Singh, An Efficient Exact Algorithm for Singly Connected Graphical Games, Proceedings of NIPS01 [15] R. Lipton and E. Markakis, Nash Equilibria via Polynomial Equations, Proceedings of LATIN04 [16] L. Ortiz and M. Kearns, Nash Propagation for Loopy Graphical Games, Proceedings of NIPS03 [17] C.H. Papadimitriou, Computing Correlated Equilibria in Multi-Player Games, Proceedings of STOC05 [18] C.H. Papadimitriou and T. Roughgarden, Computing Equilibria in Multi-Player Games, Proceedings of SODA05 [19] D. Vickrey and D. Koller, Multi-agent Algorithms for Solving Graphical Games, Proceedings of AAAI02 171",
    "original_translation": "Calcular buenos equilibrios de Nash en juegos gráficos ∗ Edith Elkind Universidad Hebrea de Jerusalén, Israel, y Universidad de Southampton, Southampton, SO17 1BJ, Reino Unido. Leslie Ann Goldberg Universidad de Liverpool Liverpool L69 3BX, Reino Unido. Paul Goldberg Universidad de Liverpool Liverpool L69 3BX, Reino Unido. RESUMEN Este artículo aborda el problema de la selección justa de equilibrios en juegos gráficos. Nuestro enfoque se basa en la estructura de datos llamada política de mejor respuesta, propuesta por Kearns et al. [13] como una forma de representar todos los equilibrios de Nash de un juego gráfico. En [9], se demostró que la política de mejor respuesta tiene un tamaño polinómico siempre y cuando el grafo subyacente sea un camino. En este artículo, demostramos que si el grafo subyacente es un árbol de grado acotado y la política de mejor respuesta tiene un tamaño polinómico, entonces existe un algoritmo eficiente que construye un equilibrio de Nash que garantiza ciertos pagos a todos los participantes. Otro concepto de solución atractivo es un equilibrio de Nash que maximiza el bienestar social. Mostramos que, si bien calcular exactamente lo último es inviable (demostramos que resolver este problema puede implicar números algebraicos de un grado arbitrariamente alto), existe un FPTAS para encontrar dicho equilibrio siempre y cuando la política de mejor respuesta tenga un tamaño polinómico. Estos dos algoritmos pueden combinarse para producir equilibrios de Nash que satisfacen varios criterios de equidad. Categorías y Descriptores de Asignaturas F.2 [Teoría de la Computación]: Análisis de Algoritmos y Complejidad de Problemas; J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento - Economía Términos Generales Algoritmos, Economía, Teoría 1. INTRODUCCIÓN En una gran comunidad de agentes, es poco probable que el comportamiento de un agente tenga un efecto directo en la mayoría de los otros agentes: más bien, solo serán afectados los agentes que estén lo suficientemente cerca de él. Sin embargo, a medida que estos agentes responden adaptando su comportamiento, más agentes sentirán las consecuencias y eventualmente las decisiones tomadas por un solo agente se propagarán por toda la comunidad. Esta es la intuición detrás de los juegos gráficos, los cuales fueron introducidos por Kearns, Littman y Singh en [13] como un esquema de representación compacto para juegos con muchos jugadores. En un juego gráfico de n jugadores, a cada jugador se le asocia un vértice de un grafo subyacente G, y las ganancias de cada jugador dependen de su acción, así como de las acciones de sus vecinos en el grafo. Si el grado máximo de G es Δ, y cada jugador tiene dos acciones disponibles, entonces el juego se puede representar usando n2Δ+1 números. Por el contrario, necesitamos n^2 números para representar un juego general de n jugadores y 2 acciones, lo cual solo es práctico para valores pequeños de n. Para juegos gráficos con Δ constante, el tamaño del juego es lineal en n. Uno de los problemas más naturales para un juego gráfico es el de encontrar un equilibrio de Nash, cuya existencia se deriva del célebre teorema de Nash (ya que los juegos gráficos son solo un caso especial de juegos de n jugadores). El primer intento de abordar este problema se realizó en [13], donde los autores consideran juegos gráficos con dos acciones por jugador en los que el grafo subyacente es un árbol de grado acotado. Proponen un algoritmo genérico para encontrar equilibrios de Nash que puede ser especializado de dos maneras: un algoritmo de tiempo exponencial para encontrar un equilibrio de Nash (exacto) y un esquema de aproximación de tiempo polinómico completo (FPTAS) para encontrar una aproximación a un equilibrio de Nash. Para cualquier > 0, este algoritmo produce un equilibrio de Nash, que es un perfil estratégico en el que ningún jugador puede mejorar su pago más que al cambiar unilateralmente su estrategia. Si bien los equilibrios de Nash aproximados suelen ser más fáciles de calcular que los equilibrios de Nash exactos, este concepto de solución tiene varias desventajas. Primero, es posible que los jugadores sean sensibles a una pequeña pérdida en las ganancias, por lo que el perfil estratégico que es un equilibrio de Nash no será estable. Esto será así incluso si solo hay un pequeño subconjunto de jugadores que son extremadamente sensibles al precio, y para una gran población de jugadores puede ser difícil elegir un valor que satisfaga a todos. Segundo, los perfiles estratégicos que están cerca de ser equilibrios de Nash pueden ser mucho mejores con respecto a las propiedades consideradas que los equilibrios de Nash exactos. Por lo tanto, la aproximación al valor de la mejor solución que corresponde a un equilibrio de Nash aproximado puede no ser indicativa de lo que se puede lograr bajo un equilibrio de Nash exacto. Esto es especialmente importante si el propósito de la solución aproximada es proporcionar un buen punto de referencia para un sistema de agentes egoístas, ya que el punto de referencia implícito por un equilibrio de Nash puede ser poco realista. Por estas razones, en este artículo nos enfocamos en el problema de calcular equilibrios de Nash exactos. Basándose en las ideas de [14], Elkind et al. [9] mostraron cómo encontrar un equilibrio de Nash (exacto) en tiempo polinómico cuando el grafo subyacente tiene grado 2 (es decir, cuando el grafo es una colección de caminos y ciclos). Por el contrario, encontrar un equilibrio de Nash en un grafo general con grado acotado parece ser computacionalmente intratable: se ha demostrado (ver [5, 12, 7]) que es completo para la clase de complejidad PPAD. [9] extiende este resultado de dificultad al caso en el que el grafo subyacente tiene un ancho de camino acotado. Un juego gráfico puede no tener un equilibrio de Nash único, de hecho, puede tener exponencialmente muchos. Además, algunos equilibrios de Nash son más deseables que otros. En lugar de tener un algoritmo que simplemente encuentre algún equilibrio de Nash, nos gustaría tener algoritmos para encontrar equilibrios de Nash con diversas propiedades socialmente deseables, como maximizar el pago total o distribuir las ganancias de manera justa. Una propiedad útil de la estructura de datos de [13] es que representa simultáneamente el conjunto de todos los equilibrios de Nash del juego subyacente. Si esta representación tiene tamaño polinómico (como es el caso de los caminos, como se muestra en [9]), se puede esperar extraer de ella un equilibrio de Nash con las propiedades deseadas. De hecho, en [13] los autores mencionan que esto es posible si uno está interesado en encontrar un equilibrio de Nash (aproximado). El objetivo de este artículo es extender esto a equilibrios de Nash exactos. 1.1 Nuestros Resultados En este artículo, estudiamos juegos gráficos de n jugadores y 2 acciones en árboles de grado acotado para los cuales la estructura de datos de [13] tiene tamaño polinómico en n. Nos enfocamos en el problema de encontrar equilibrios de Nash exactos con ciertas propiedades socialmente deseables. En particular, mostramos cómo encontrar un equilibrio de Nash que maximiza (casi) el bienestar social, es decir, la suma de las ganancias de los jugadores, y mostramos cómo encontrar un equilibrio de Nash que satisface (casi) los límites de ganancias prescritos para todos los jugadores. Los juegos gráficos en árboles de grado acotado tienen una estructura algebraica simple. Una característica atractiva, que se desprende de [13], es que cada juego de este tipo tiene un equilibrio de Nash en el cual la estrategia de cada jugador es un número racional. La sección 3 estudia la estructura algebraica de aquellos equilibrios de Nash que maximizan el bienestar social. Demostramos (Teoremas 1 y 2) que, sorprendentemente, el conjunto de equilibrios de Nash que maximizan el bienestar social es más complejo. De hecho, para cualquier número algebraico α ∈ [0, 1] con grado a lo sumo n, exhibimos un juego gráfico en un camino de longitud O(n) tal que, en el equilibrio de Nash único que maximiza el bienestar social de este juego, uno de los jugadores juega la estrategia mixta α. Este resultado muestra que puede ser difícil representar un equilibrio de Nash óptimo. Parece ser una característica novedosa del escenario que consideramos aquí, que un equilibrio de Nash óptimo es difícil de representar, en una situación donde es fácil encontrar y representar un equilibrio de Nash. Dado que el equilibrio de Nash que maximiza el bienestar social puede ser difícil de representar eficientemente, debemos conformarnos con una aproximación. Sin embargo, la diferencia crucial entre nuestro enfoque y el de los trabajos anteriores [13, 16, 19] es que requerimos que nuestro algoritmo produzca un equilibrio de Nash exacto, aunque no necesariamente el óptimo con respecto a nuestros criterios. En la Sección 4, describimos un algoritmo que cumple con este requisito. Específicamente, proponemos un algoritmo que, para cualquier > 0, encuentra un equilibrio de Nash cuya recompensa total está dentro de de lo óptimo. Se ejecuta en tiempo polinómico (Teorema 3,4) para cualquier juego gráfico en un árbol de grado acotado para el cual la estructura de datos propuesta por [13] (la llamada política de mejor respuesta, definida a continuación) tiene un tamaño poli(n) (nota que, como se muestra en [9], esto siempre es el caso cuando el grafo subyacente es un camino). Un resultado relacionado en un contexto diferente fue obtenido por Datta [8], quien muestra que los juegos de n jugadores con 2 acciones son universales en el sentido de que cualquier variedad algebraica real puede ser representada como el conjunto de equilibrios de Nash totalmente mixtos de tales juegos. Precisamente, el tiempo de ejecución de nuestro algoritmo es polinómico en n, Pmax y 1/, donde Pmax es el valor absoluto máximo de una entrada de una matriz de pagos, es decir, es un algoritmo seudopolinómico, aunque es completamente polinómico con respecto a . Mostramos (Sección 4.1) que bajo ciertas restricciones en las matrices de pagos, el algoritmo puede ser transformado en un algoritmo de tiempo polinómico (verdaderamente) que produce un equilibrio de Nash cuya ganancia total está dentro de un factor de 1 − del óptimo. En la Sección 5, consideramos el problema de encontrar un equilibrio de Nash en el que la ganancia esperada de cada jugador Vi supere un umbral prescrito Ti. Usando la idea de la Sección 4, presentamos (Teorema 5) un esquema de aproximación en tiempo polinómico completo para este problema. El tiempo de ejecución del algoritmo está acotado por un polinomio en n, Pmax y . Si la instancia tiene un equilibrio de Nash que cumple con los umbrales prescritos, entonces el algoritmo construye un equilibrio de Nash en el que la recompensa esperada de cada jugador Vi es al menos Ti − . En la Sección 6, presentamos otros criterios naturales para seleccionar un buen equilibrio de Nash y mostramos que los algoritmos descritos en las dos secciones anteriores pueden ser utilizados como bloques de construcción para encontrar equilibrios de Nash que cumplan con estos criterios. En particular, en la Sección 6.1 mostramos cómo encontrar un equilibrio de Nash que aproxima el máximo bienestar social, garantizando que la ganancia de cada individuo esté cerca de un umbral prescrito. En la Sección 6.2 mostramos cómo encontrar un equilibrio de Nash que maximiza (casi) al máximo el pago individual mínimo. Finalmente, en la Sección 6.3 mostramos cómo encontrar un equilibrio de Nash en el que las ganancias individuales de los jugadores están cerca unas de otras. 1.2 Trabajo Relacionado Nuestro esquema de aproximación (Teorema 3 y Teorema 4) muestra un contraste entre los juegos que estudiamos y los juegos de n acciones de dos jugadores, para los cuales los problemas correspondientes suelen ser intratables. Para juegos de n acciones de dos jugadores, el problema de encontrar equilibrios de Nash con propiedades especiales suele ser NP-duro. En particular, este es el caso de los equilibrios de Nash que maximizan el bienestar social [11, 6]. Además, es probable que sea intratable incluso aproximarse a tales equilibrios. En particular, Chen, Deng y Teng [4] muestran que existe algún , polinomio inverso en n, para el cual calcular un equilibrio de Nash en juegos de 2 jugadores con n acciones por jugador es PPAD-completo. Lipton y Markakis [15] estudian las propiedades algebraicas de los equilibrios de Nash, y señalan que los algoritmos estándar de eliminación de cuantificadores pueden ser utilizados para resolverlos. Ten en cuenta que estos algoritmos no son de tiempo polinómico en general. Los juegos que estudiamos en este artículo tienen equilibrios de Nash computables en tiempo polinómico en los que todas las estrategias mixtas son números racionales, pero un equilibrio de Nash óptimo puede incluir necesariamente estrategias mixtas con un alto grado algebraico. Un equilibrio correlacionado (CE) (introducido por Aumann [2]) es una distribución sobre vectores de acciones de jugadores con la propiedad de que si a cualquier jugador se le dice su propia acción (el valor de su propio componente) de un vector generado por esa distribución, entonces no puede aumentar su ganancia esperada cambiando su acción. Cualquier equilibrio de Nash es una EC, pero la afirmación contraria no se cumple en general. A diferencia de los equilibrios de Nash, los equilibrios correlacionados se pueden encontrar para juegos gráficos de bajo grado (así como para otras clases de juegos multijugador representados de manera concisa) en tiempo polinómico [17]. Pero, para juegos gráficos es NP-duro encontrar un equilibrio correlacionado que maximice la recompensa total [18]. Sin embargo, los resultados de NP-dificultad se aplican a juegos más generales que el que consideramos aquí, en particular los grafos no son árboles. Del [2] también se sabe que existen juegos de 2 jugadores y 2 acciones para los cuales el pago total esperado 163 del mejor equilibrio correlacionado es mayor que el mejor equilibrio de Nash, y discutimos este tema más a fondo en la Sección 7.2. CONSIDERACIONES PRELIMINARES Y NOTACIÓN Consideramos juegos gráficos en los que el grafo subyacente G es un árbol de n vértices, en el que cada vértice tiene a lo sumo Δ hijos. Cada vértice tiene dos acciones, que están representadas por 0 y 1. Una estrategia mixta de un jugador V se representa como un único número v ∈ [0, 1], que denota la probabilidad de que V seleccione la acción 1. Para los propósitos del algoritmo, el árbol está enraizado de manera arbitraria. Para mayor comodidad, asumimos sin pérdida de generalidad que la raíz tiene un solo hijo y que su recompensa es independiente de la acción elegida por el hijo. Esto se puede lograr primero eligiendo una raíz arbitraria del árbol, y luego agregando un padre ficticio de esta raíz, asignándole una función de recompensa constante, por ejemplo, 0. Dado un borde (V, W) del árbol G, y una estrategia mixta w para W, sea G(V,W), W=w la instancia obtenida de G mediante (1) eliminar todos los nodos Z que están separados de V por W (es decir, todos los nodos Z tales que el camino de Z a V pasa por W), y (2) restringir la instancia de modo que se requiera que W juegue la estrategia mixta w. Definición 1. Supongamos que (V, W) es una arista del árbol, que v es una estrategia mixta para V y que w es una estrategia mixta para W. Decimos que v es una mejor respuesta potencial a w (denotado por v ∈ pbrV (w)) si hay un equilibrio en la instancia G(V,W), W = w en el que V tiene una estrategia mixta v. Definimos la política de mejor respuesta para V, dada W, como B(W, V) = {(w, v) | v ∈ pbrV (w), w ∈ [0, 1]}. El paso ascendente del algoritmo genérico de [13] considera cada nodo V (que no sea la raíz) y calcula la política de mejor respuesta para V dada su padre. Con las suposiciones anteriores sobre la raíz, el paso aguas abajo es sencillo. La raíz selecciona una estrategia mixta w para la raíz W y una estrategia mixta v ∈ B(W, V) para cada hijo V de W. Indica a cada niño V que juegue v. El resto del pase descendente es recursivo. Cuando un nodo V recibe instrucciones de su padre para adoptar la estrategia mixta v, realiza lo siguiente para cada hijo U: encuentra un par (v, u) ∈ B(V, U) (con el mismo valor de v que le fue dado por su padre) e instruye a U a jugar u. La mejor política de respuesta para un vértice U dado su padre V puede representarse como una unión de rectángulos, donde un rectángulo está definido por un par de intervalos cerrados (IV, IU) y consiste en todos los puntos en IV × IU; puede ser el caso de que uno o ambos de los intervalos IV e IU consistan en un solo punto. Para realizar cálculos en B(V, U) y para limitar el número de rectángulos, [9] utilizó el concepto de un punto de evento, el cual se define de la siguiente manera. Para cualquier conjunto A ⊆ [0, 1]2 que se represente como una unión de un número finito de rectángulos, decimos que un punto u ∈ [0, 1] en el eje U es un punto de evento U de A si u = 0 o u = 1 o la representación de A contiene un rectángulo de la forma IV × IU y u es un extremo de IU; los puntos de evento V se definen de manera similar. Para muchos juegos considerados en este documento, el grafo subyacente es un camino de n vértices, es decir, un grafo G = (V, E) con V = {V1, . . . , Vn} y E = {(V1, V2), . . . , (Vn−1, Vn)}. En [9], se demostró que para tales juegos, la política de mejor respuesta tiene solo un número polinomial de rectángulos. La prueba de que el número de rectángulos en B(Vj+1, Vj) es polinomial procede primero mostrando que el número de puntos de evento en B(Vj+1, Vj) no puede exceder el número de puntos de evento en B(Vj, Vj-1) en más de 2, y utilizando este hecho para acotar el número de rectángulos en B(Vj+1, Vj). Sean P0 (V) y P1 (V) las ganancias esperadas para V cuando juega 0 y 1, respectivamente. Tanto P0 (V) como P1 (V) son funciones multilineales de las estrategias de los vecinos de V. En lo que sigue, usaremos frecuentemente la siguiente observación simple. AFIRMACIÓN 1. Para un vértice V con un único hijo U y padre W, dados cualquier A, B, C, D ∈ Q, se pueden seleccionar las recompensas para V de manera que P0(V) = Auw + Bu + Cw + D, P1(V) = Auw + Bu + Cw + D. Además, si todos los valores de A, B, C, D son enteros, los pagos para V también son enteros. PRUEBA. Daremos la prueba para P0 (V); la prueba para P1 (V) es similar. Para i, j = 0, 1, sea Pij la ganancia para V cuando U juega i, V juega 0 y W juega j. Tenemos P0 (V) = P00(1 − u)(1 − w) + P10u(1 − w) + P01(1 − u)w + P11uw. Tenemos que seleccionar los valores de Pij de manera que P00 − P10 − P01 + P11 = A, −P00 + P10 = B, −P00 + P01 = C, P00 = D. Es fácil ver que la solución única está dada por P00 = D, P01 = C + D, P10 = B + D, P11 = A + B + C + D. La entrada a todos los algoritmos considerados en este documento incluye las matrices de pago para cada jugador. Suponemos que todos los elementos de estas matrices son enteros. Sea Pmax el mayor valor absoluto de cualquier elemento de cualquier matriz de pagos. Entonces, la entrada consiste en un máximo de n2Δ+1 números, cada uno de los cuales puede ser representado usando log Pmax bits. EQUILIBRIOS DE NASH QUE MAXIMIZAN EL BIENESTAR SOCIAL: SOLUCIONES EN R \\ Q Desde el punto de vista del bienestar social, el mejor equilibrio de Nash es aquel que maximiza la suma de las ganancias esperadas de los jugadores. Lamentablemente, resulta que calcular exactamente dicho perfil estratégico no es posible: en esta sección, mostramos que incluso si todas las ganancias de los jugadores son números enteros, el perfil estratégico que maximiza la ganancia total puede tener coordenadas irracionales; además, puede involucrar números algebraicos de un grado arbitrario. 3.1 Calentamiento: irracionales cuadráticos Comenzamos proporcionando un ejemplo de un juego gráfico en un camino de longitud 3 con ganancias enteras tal que en el equilibrio de Nash que maximiza la ganancia total, uno de los jugadores tiene una estrategia en R \\ Q. En la siguiente subsección, extenderemos este ejemplo a números algebraicos de grado arbitrario n; para hacerlo, debemos considerar caminos de longitud O(n). TEOREMA 1. Existe un juego gráfico G de pago entero en un camino de 3 vértices UVW tal que, en cualquier equilibrio de Nash de G que maximice el bienestar social, la estrategia u del jugador U y el pago total p cumplen u, p ∈ R \\ Q. PRUEBA. Las recompensas para los jugadores en G están especificadas de la siguiente manera. La ganancia para U es idénticamente 0, es decir, P0 (U) = P1 (U) = 0. Usando la Reclamación 1, seleccionamos las ganancias para V de modo que P0 (V) = -uw + 3w y P1 (V) = P0 (V) + w(u + 2) - (u + 1), donde u y w son las estrategias (mixtas) de U y W, respectivamente. Se deduce que V es indiferente entre jugar 0 y 1 si y solo si w = f(u) = u+1 u+2. Observa que para cualquier u ∈ [0, 1] tenemos f(u) ∈ [0, 1]. La recompensa para W es 0 si selecciona la misma acción que V y 1 en caso contrario. AFIRMACIÓN 2. Todos los equilibrios de Nash del juego G son de la forma (u, 1/2, f(u)). Es decir, en cualquier equilibrio de Nash, V juega v = 1/2 y W juega w = f(u). Además, para cualquier valor de u, el vector de estrategias (u, 1/2, f(u)) constituye un equilibrio de Nash. PRUEBA. Es fácil comprobar que para cualquier u ∈ [0, 1], el vector (u, 1/2, f(u)) es un equilibrio de Nash. De hecho, U está dispuesto a jugar 164 cualquier estrategia mixta u, sin importar lo que hagan V y W. Además, V es indiferente entre 0 y 1 siempre y cuando w = f(u), por lo que puede jugar 1/2. Finalmente, si V juega con probabilidad igual a 0 y 1, W es indiferente entre 0 y 1, por lo que puede jugar f(u). Por el contrario, supongamos que v > 1/2. Entonces W prefiere estrictamente jugar 0, es decir, w = 0. Entonces para V tenemos P1 (V) = P0 (V) - (u + 1), es decir, P1 (V) < P0 (V), lo que implica v = 0, una contradicción. De manera similar, si v < 1/2, el jugador W prefiere jugar 1, por lo que tenemos w = 1. Por lo tanto, P1 (V) = P0 (V) + (u + 2) - (u + 1), es decir, P1 (V) > P0 (V), lo que implica v = 1, una contradicción. Finalmente, si v = 1/2, pero w = f(u), el jugador V no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Esto completa la prueba de la Afirmación 2. Según la Afirmación 2, la ganancia total en cualquier equilibrio de Nash de este juego es una función de u. Más específicamente, la ganancia para U es 0, la ganancia para V es −uf(u) + 3f(u), y la ganancia para W es 1/2. Por lo tanto, el equilibrio de Nash con la máxima ganancia total corresponde al valor de u que maximiza g(u) = −u (u + 1) u + 2 + 3 u + 1 u + 2 = − (u − 3)(u + 1) u + 2. Para encontrar los extremos de g(u), calculamos h(u) = − d du g(u). Tenemos h(u) = (2u − 2)(u + 2) − (u − 3)(u + 1) (u + 2)2 = u2 + 4u − 1 (u + 2)2. Por lo tanto, h(u) = 0 si y solo si u ∈ {−2 + √ 5, −2 − √ 5}. Ten en cuenta que −2 + √ 5 ∈ [0, 1]. La función g(u) cambia de signo en −2, −1 y 3. Tenemos g(u) < 0 para g > 3, g(u) > 0 para u < −2, por lo que el extremo de g(u) que se encuentra entre 1 y 3, es decir, u = −2 + √ 5, es un máximo local. Concluimos que el equilibrio de Nash que maximiza el bienestar social para este juego está dado por el vector de estrategias (−2+√ 5, 1/2, (5 − √ 5)/5). El pago total respectivo es 0 − ( √ 5 − 5)( √ 5 − 1) √ 5 + 1 2 = 13/2 − 2 √ 5. Esto concluye la prueba del Teorema 1. 3.2 Estrategias de grado arbitrario. Hemos demostrado que en el equilibrio de Nash que maximiza el bienestar social, las estrategias de algunos jugadores pueden ser irracionales cuadráticas, al igual que la recompensa total. En esta subsección, extenderemos este resultado para mostrar que podemos construir un juego gráfico de pago entero en un camino cuyo equilibrio de Nash maximizador del bienestar social involucra números algebraicos arbitrarios en [0, 1]. TEOREMA 2. Para cualquier número algebraico α de grado n ∈ [0, 1], existe un juego gráfico de pago entero en un camino de longitud O(n) tal que, en todas las equilibrios de Nash que maximizan el bienestar social de este juego, uno de los jugadores juega α. PRUEBA. Nuestra prueba consta de dos pasos. Primero, construimos una expresión racional R(x) y un segmento [x , x ] tal que x , x ∈ Q y α sea el único máximo de R(x) en [x , x ]. Segundo, construimos un juego gráfico cuyos equilibrios de Nash pueden ser parametrizados por u ∈ [x, x], de modo que en el equilibrio que corresponde a u, la recompensa total es R(u) y, además, la estrategia de algunos jugadores es u. Se deduce que para alcanzar el equilibrio de Nash que maximiza la ganancia, este jugador tiene que jugar α. Los detalles siguen. LEMMA 1. \n\nLEMMA 1. Dado un número algebraico α ∈ [0, 1], deg(α) = n, existen K2, . . . , K2n+2 ∈ Q y x , x ∈ (0, 1) ∩ Q tal que α es el único máximo de R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 en [x , x ]. PRUEBA. Sea P(x) el polinomio minimal de α, es decir, un polinomio de grado n con coeficientes racionales cuyo coeficiente principal es 1 tal que P(α) = 0. Sea A = {α1, . . . , αn} el conjunto de todas las raíces de P(x). Considera el polinomio Q1(x) = −P2(x). Tiene las mismas raíces que P(x), y además, para cualquier x ∈ A tenemos Q1(x) < 0. Por lo tanto, A es el conjunto de todos los máximos de Q1(x). Ahora, establece R(x) = Q1(x) (x+2)...(x+2n+1)(x+2n+2). Observa que R(x) ≤ 0 para todo x ∈ [0, 1] y R(x) = 0 si y solo si Q1(x) = 0. Por lo tanto, el conjunto A también es el conjunto de todos los máximos de R(x) en [0, 1]. Sea d = min{|αi − α| | αi ∈ A, αi = α}, y establezca α = max{α − d/2, 0}, α = min{α + d/2, 1}. Claramente, α es el único cero (y por lo tanto, el único máximo) de R(x) en [α , α ]. Sean x y x algunos números racionales en (α, α) y (α, α), respectivamente; observe que al excluir los extremos de los intervalos aseguramos que x, x = 0, 1. Como [x, x] ⊂ [α, α], tenemos que α es el único máximo de R(x) en [x, x]. Dado que R(x) es una expresión racional adecuada y todas las raíces de su denominador son simples, por el teorema de descomposición en fracciones parciales, R(x) puede representarse como R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2, donde K2, . . . , K2n+2 son números racionales. Considera un juego gráfico en el camino U−1V−1U0V0U1V1 . . . Uk−1Vk−1Uk, donde k = 2n + 2. Intuitivamente, queremos que cada triple (Ui−1, Vi−1, Ui) se comporte de manera similar a los jugadores U, V y W del juego descrito en la subsección anterior. Más precisamente, definimos las ganancias de los jugadores de la siguiente manera. • La ganancia para U−1 es 0 sin importar lo que hagan los demás. • La ganancia esperada para V−1 es 0 si juega 0 y u0 − (x − x )u−1 −x si juega 1, donde u0 y u−1 son las estrategias de U0 y U−1, respectivamente. • La ganancia esperada para V0 es 0 si juega 0 y u1(u0 + 1)− u0 si juega 1, donde u0 y u1 son las estrategias de U0 y U1, respectivamente. • Para cada i = 1, . . . , k − 1, la ganancia esperada para Vi cuando juega 0 es P0 (Vi) = Aiuiui+1 − Aiui+1, y la ganancia esperada para Vi cuando juega 1 es P1 (Vi) = P0 (Vi) + ui+1(2 − ui) − 1, donde Ai = −Ki+1 y ui+1 y ui son las estrategias de Ui+1 y Ui, respectivamente. • Para cada i = 0, . . . , k, la ganancia para Ui no depende de Vi y es 1 si Ui y Vi−1 seleccionan acciones diferentes y 0 en caso contrario. Ahora caracterizaremos los equilibrios de Nash de este juego utilizando una secuencia de afirmaciones. AFIRMACIÓN 3. En todos los equilibrios de Nash de este juego, V−1 juega 1/2, y las estrategias de u−1 y u0 satisfacen u0 = (x − x )u−1 + x. Por consiguiente, en todos los equilibrios de Nash tenemos u0 ∈ [x , x ]. 165 PRUEBA. La prueba es similar a la del Reclamo 2. Que f(u−1) = (x − x )u−1 + x. Claramente, el jugador V−1 es indiferente entre jugar 0 y 1 si y solo si u0 = f(u−1). Supongamos que v−1 < 1/2. Entonces U0 prefiere estrictamente jugar 1, es decir, u0 = 1, por lo que tenemos P1 (V−1) = P0 (V−1) + 1 − (x − x )u−1 − x . Dado que 1 − x ≤ 1 − (x − x )u−1 − x ≤ 1 − x para u−1 ∈ [0, 1] y x < 1, tenemos que P1 (V−1) > P0 (V−1), por lo que V−1 prefiere jugar 1, lo cual es una contradicción. De manera similar, si v−1 > 1/2, el jugador U0 prefiere estrictamente jugar 0, es decir, u0 = 0, por lo que tenemos P1 (V−1) = P0 (V−1) − (x − x )u−1 − x. Dado que x < x, x > 0, tenemos P1 (V−1) < P0 (V−1), por lo que V−1 prefiere jugar 0, lo cual es una contradicción. Finalmente, si V−1 juega 1/2, pero u0 = f(u−1), el jugador V−1 no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Además, ten en cuenta que f(0) = x, f(1) = x y, además, f(u−1) ∈ [x, x] si y solo si u−1 ∈ [0, 1]. Por lo tanto, en todos los equilibrios de Nash de este juego tenemos u0 ∈ [x , x ]. AFIRMACIÓN 4. En todos los equilibrios de Nash de este juego para cada i = 0, . . . , k − 1, tenemos vi = 1/2, y las estrategias de los jugadores Ui y Ui+1 satisfacen ui+1 = fi(ui), donde f0(u) = u/(u + 1) y fi(u) = 1/(2 − u) para i > 0. PRUEBA. La prueba de esta afirmación es también similar a la de la Afirmación 2. Utilizamos inducción en i para demostrar que la afirmación de la proposición es verdadera y, además, ui = 1 para i > 0. Para el caso base i = 0, observe que u0 = 0 según la afirmación anterior (recuerde que x, x se seleccionan de manera que x, x = 0, 1) y considere el trío (U0, V0, U1). Que v0 sea la estrategia de V0. Primero, supongamos que v0 > 1/2. Entonces U1 prefiere estrictamente jugar 0, es decir, u1 = 0. Entonces, para V0 tenemos P1 (V0) = P0 (V0) − u0. Dado que u0 = 0, tenemos que P1 (V0) < P0 (V0), lo cual implica v1 = 0, una contradicción. De manera similar, si v0 < 1/2, el jugador U1 prefiere jugar 1, por lo que tenemos u1 = 1. Por lo tanto, P1 (V0) = P0 (V0) + 1. Se sigue que P1 (V0) > P0 (V0), lo cual implica v0 = 1, una contradicción. Finalmente, si v0 = 1/2, pero u1 = u0/(u0 + 1), el jugador V0 no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Además, dado que u1 = u0/(u0 + 1) y u0 ∈ [0, 1], tenemos que u1 = 1. El argumento para el paso inductivo es similar. Es decir, supongamos que la afirmación se demuestra para todos los i < i y consideremos el trío (Ui, Vi, Ui+1). Que vi sea la estrategia de Vi. Primero, supongamos que vi > 1/2. Entonces Ui+1 prefiere estrictamente jugar 0, es decir, ui+1 = 0. Entonces, para Vi tenemos P1 (Vi) = P0 (Vi)−1, es decir, P1 (Vi) < P0 (Vi), lo cual implica vi = 0, una contradicción. De manera similar, si vi < 1/2, el jugador Ui+1 prefiere jugar 1, por lo que tenemos ui+1 = 1. Por lo tanto, P1 (Vi) = P0 (Vi) + 1 − ui. Por hipótesis inductiva, tenemos ui < 1. Por consiguiente, P1 (Vi) > P0 (Vi), lo que implica vi = 1, una contradicción. Finalmente, si vi = 1/2, pero ui+1 = 1/(2 − ui), el jugador Vi no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Además, como ui+1 = 1/(2 − ui) y ui < 1, tenemos ui+1 < 1. AFIRMACIÓN 5. Cualquier perfil estratégico de la forma (u−1, 1/2, u0, 1/2, u1, 1/2, . . . , uk−1, 1/2, uk), donde u−1 ∈ [0, 1], u0 = (x − x )u−1 + x , u1 = u0/(u0 + 1), y ui+1 = 1/(2 − ui) para i ≥ 1, constituye un equilibrio de Nash. PRUEBA. Primero, las ganancias del jugador U−1 no dependen de las acciones de otros jugadores, por lo que es libre de jugar cualquier estrategia en [0, 1]. Si u0 = (x −x )u−1 +x , el jugador V−1 es indiferente entre 0 y 1, por lo que está contento de jugar 1/2; un argumento similar se aplica a los jugadores V0, . . . , Vk−1. Finalmente, para cada i = 0, . . . , k, las ganancias del jugador Ui solo dependen de la estrategia del jugador Vi−1. En particular, siempre y cuando vi−1 = 1/2, el jugador Ui es indiferente entre jugar 0 y 1, por lo que puede jugar cualquier estrategia mixta ui ∈ [0, 1]. Para completar la prueba, observe que (x − x )u−1 + x ∈ [0, 1] para todo u−1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] para todo u0 ∈ [0, 1], y 1/(2 − ui) ∈ [0, 1] para todo ui ∈ [0, 1], por lo que tenemos ui ∈ [0, 1] para todo i = 0, . . . , k. Ahora, calculemos la ganancia total bajo un perfil estratégico de la forma dada en la Afirmación 5. El pago para U−1 es 0, y el pago esperado para cada uno de los Ui, i = 0, . . . , k, es 1/2. Los beneficios esperados para V−1 y V0 son 0. Finalmente, para cualquier i = 1, . . . , k − 1, la ganancia esperada para Vi es Ti = Aiuiui+1 − Aiui+1. Se deduce que para encontrar un equilibrio de Nash con el mayor pago total, debemos maximizar Pk−1 i=1 Ti sujeto a las condiciones u−1 ∈ [0, 1], u0 = (x −x )u−1+x , u1 = u0/(u0+1), y ui+1 = 1/(2−ui) para i = 1, . . . , k − 1. Nos gustaría expresar Pk−1 i=1 Ti como una función de u0. Para simplificar la notación, establezca u = u0. LEMMA 2. \n\nLEMMA 2. Para i = 1, . . . , k, tenemos ui = u+i−1 u+i. PRUEBA. La demostración es por inducción en i. Para i = 1, tenemos u1 = u/(u + 1). Ahora, para i ≥ 2 supongamos que ui−1 = (u + i − 2)/(u + i − 1). Tenemos ui = 1/(2 − ui−1) = (u + i − 1)/(2u + 2i − 2 − u − i + 2) = (u + i − 1)/(u + i). Se sigue que para i = 1, . . . , k − 1 tenemos Ti = Ai u + i − 1 u + i u + i u + i + 1 − Ai u + i u + i + 1 = −Ai 1 u + i + 1 = Ki+1 u + i + 1. Observa que a medida que u−1 varía de 0 a 1, u varía de x a x. Por lo tanto, para maximizar el pago total, debemos elegir u ∈ [x , x ] de manera que maximicemos K2 u + 2 + · · · + Kk u + k = R(u). Por construcción, el único máximo de R(u) en [x, x] es α. Se deduce que en el equilibrio de Nash que maximiza las ganancias de nuestro juego, U0 juega α. Finalmente, cabe destacar que las recompensas en nuestro juego son racionales en lugar de enteras. Sin embargo, es fácil ver que podemos multiplicar todas las ganancias de un jugador por su máximo común denominador sin afectar su estrategia. En el juego resultante, todas las ganancias son enteras. Esto concluye la demostración del Teorema 2.4. APROXIMANDO EL EQUILIBRIO DE NASH ÓPTIMO SOCIAL Hemos visto que el equilibrio de Nash que maximiza el bienestar social puede implicar estrategias que no están en Q. Por lo tanto, en esta sección nos enfocamos en encontrar un equilibrio de Nash que sea casi óptimo desde la perspectiva del bienestar social. Proponemos un algoritmo que, para cualquier > 0, encuentra un equilibrio de Nash cuya recompensa total está dentro de de la óptima. El tiempo de ejecución de este algoritmo es polinómico en 1/ , n y |Pmax| (recuerde que Pmax es el valor absoluto máximo de una entrada de una matriz de pagos). Si bien el resultado negativo de la sección anterior es para juegos gráficos en caminos, nuestro algoritmo se aplica a una gama más amplia de escenarios. Específicamente, se ejecuta en tiempo polinómico en árboles de grado acotado siempre que la política de mejor respuesta de cada vértice, dada su padre, pueda representarse como una unión de un número polinómico de rectángulos. Ten en cuenta que los grafos de camino siempre cumplen esta condición: en [9] mostramos cómo calcular dicha representación, dado un grafo con grado máximo 2. Por consiguiente, para grafos de camino el tiempo de ejecución de nuestro algoritmo está garantizado de ser polinomial. (Nótese que [9] exhibe una familia de juegos gráficos en árboles de grado acotado para los cuales las políticas de mejor respuesta de algunos de los vértices, dados sus padres, tienen tamaño exponencial, cuando se representan como uniones de rectángulos). Debido a restricciones de espacio, en esta versión del artículo presentamos el algoritmo para el caso en el que el grafo subyacente del juego gráfico es un camino. Luego presentamos nuestro resultado para el caso general; la demostración se puede encontrar en la versión completa de este artículo [10]. Supongamos que s es un perfil estratégico para un juego gráfico G. Es decir, s asigna una estrategia mixta a cada vértice de G. Sea EPV (s) el pago esperado del jugador V bajo s y sea EP(s) = Σ V EPV (s). Sea M(G) = max{EP(s) | s es un equilibrio de Nash para G}. TEOREMA 3. Supongamos que G es un juego gráfico en un camino de n vértices. Entonces, para cualquier > 0 existe un algoritmo que construye un equilibrio de Nash s para G que satisface EP(s) ≥ M(G)− . El tiempo de ejecución del algoritmo es O(n4 P3 max/ 3) PRUEBA. Sea {V1, . . . , Vn} el conjunto de todos los jugadores. Comenzamos construyendo las mejores políticas de respuesta para todos los Vi, i = 1, . . . , n − 1. Como se muestra en [9], esto se puede hacer en tiempo O(n3). Sea N > 5n un parámetro que se seleccionará más adelante, establezca δ = 1/N y defina X = {jδ | j = 0, . . . , N}. Decimos que vj es un punto de evento para un jugador Vi si es un punto de evento de Vi para B(Vi, Vi−1) o B(Vi+1, Vi). Para cada jugador Vi, considera un conjunto finito de estrategias Xi dado por Xi = X ∪ {vj | vj es un punto de evento para Vi}. Se ha demostrado en [9] que para cualquier i = 2, . . . , n, la política de mejor respuesta B(Vi, Vi−1) tiene como máximo 2n + 4 puntos de eventos de Vi. Dado que requerimos N > 5n, tenemos |Xi| ≤ 2N; asumimos sin pérdida de generalidad que |Xi| = 2N. Ordena los elementos de Xi en orden creciente como x1 i = 0 < x2 i < · · · < x2N i. Nos referiremos a las estrategias en Xi como estrategias discretas del jugador Vi; un perfil de estrategia en el que cada jugador tiene una estrategia discreta se referirá como un perfil de estrategia discreta. Ahora demostraremos que incluso si restringimos a cada jugador Vi a estrategias de Xi, los jugadores aún pueden lograr un equilibrio de Nash, y además, el mejor equilibrio de Nash (con respecto al bienestar social) tiene un pago total de al menos M(G) - siempre y cuando N sea lo suficientemente grande. Sea s un perfil de estrategia que maximiza el bienestar social. Es decir, sea s = (s1, . . . , sn) donde si es la estrategia mixta del jugador Vi y EP(s) = M(G). Para i = 1, . . . , n, sea ti = max{xj i | xj i ≤ si}. Primero, demostraremos que el perfil estratégico t = (t1, . . . , tn) es un equilibrio de Nash para G. Fijemos cualquier i, 1 < i ≤ n, y sea R = [v1, v2]×[u1, u2] el rectángulo en B(Vi, Vi−1) que contiene (si, si−1). Dado que v1 es un punto de evento Vi de B(Vi, Vi−1), tenemos v1 ≤ ti, por lo que el punto (ti, si−1) está dentro de R. De manera similar, el punto u1 es un punto de evento Vi−1 de B(Vi, Vi−1), por lo que tenemos u1 ≤ ti−1, y por lo tanto el punto (ti, ti−1) está dentro de R. Esto significa que para cualquier i, 1 < i ≤ n, tenemos ti−1 ∈ pbrVi−1 (ti), lo que implica que t = (t1, . . . , tn) es un equilibrio de Nash para G. Ahora, estimemos la pérdida esperada en el bienestar social causada por jugar t en lugar de s. LEMA 3. Para cualquier par de perfiles de estrategia t, s tales que |ti − si| ≤ δ, tenemos |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ para cualquier i = 1, . . . , n. PRUEBA. Sea Pi klm el pago del jugador Vi, cuando juega k, Vi−1 juega l y Vi+1 juega m. Fijemos i = 1, . . . , n y para k, l, m ∈ {0, 1}, definamos tklm = tk i−1(1 − ti−1)1−k tl i(1 − ti)1−l tm i+1(1 − ti+1)1−m sklm = sk i−1(1 − si−1)1−k sl i(1 − si)1−l sm i+1(1 − si+1)1−m. Mostraremos ahora que para cualquier k, l, m ∈ {0, 1} tenemos |tklm − sklm | ≤ 3δ; claramente, esto implica el lema. De hecho, fijar k, l, m ∈ {0, 1}. Establecer x = tk i−1(1 − ti−1)1−k , x = sk i−1(1 − si−1)1−k , y = tl i(1 − ti)1−l , y = sl i(1 − si)1−l , z = tm i+1(1 − ti+1)1−m , z = sm i+1(1 − si+1)1−m. Observa que si k = 0 entonces x − x = (1 − ti−1) − (1 − si−1), y si k = 1 entonces x − x = ti−1 − si−1, por lo tanto |x − x | ≤ δ. Un argumento similar muestra |y − y | ≤ δ, |z − z | ≤ δ. Además, tenemos x, x, y, y, z, z ∈ [0, 1]. Por lo tanto, |tklm − sklm | = |xyz − x y z | = |xyz − x yz + x yz − x y z + x y z − x y z | ≤ |x − x |yz + |y − y |x z + |z − z |x y ≤ 3δ. El Lema 3 implica que Pn i=1 |EPVi (s) − EPVi (t)| ≤ 24nPmaxδ, por lo que al elegir δ < /(24nPmax), o, equivalentemente, estableciendo N > 24nPmax/ , podemos asegurar que el pago esperado total para el perfil estratégico t esté dentro de de lo óptimo. Ahora demostraremos que podemos encontrar el mejor equilibrio de Nash discreto (con respecto al bienestar social) utilizando programación dinámica. Dado que t es un perfil de estrategia discreto, esto significa que el perfil de estrategia encontrado por nuestro algoritmo será al menos tan bueno como t. Defina ml,k i como la máxima ganancia total que V1, . . . , Vi−1 pueden lograr si cada Vj, j ≤ i, elige una estrategia de Xj, para cada j < i la estrategia de Vj es una mejor respuesta potencial a la estrategia de Vj+1, y, además, Vi−1 juega xl i−1, Vi juega xk i. Si no hay forma de elegir las estrategias para V1, . . . , Vi−1 que cumplan con estas condiciones, establecemos ml,k i = −∞. Los valores ml,k i , i = 1, . . . , n; k, l = 1, . . . , N, pueden ser calculados de forma inductiva, de la siguiente manera. Tenemos ml,k 1 = 0 para k, l = 1, . . . , N. Ahora, supongamos que ya hemos calculado ml,k j para todos los j < i; k, l = 1, . . . , N. Para calcular mk,l i , primero verificamos si (xk i , xl i−1) ∈ B(Vi, Vi−1). Si este no es el caso, tenemos ml,k i = −∞. De lo contrario, considera el conjunto Y = Xi−2 ∩ pbrVi−2 (xl i−1), es decir, el conjunto de todas las estrategias discretas de Vi−2 que son potenciales mejores respuestas a xl i−1. La prueba del Teorema 1 en [9] implica que el conjunto pbrVi−2 (xl i−1) no está vacío: el jugador Vi−2 tiene una mejor respuesta potencial a cualquier estrategia de Vi−1, en particular, xl i−1. Por la construcción del conjunto Xi−2, esto implica que Y no está vacío. Para cada xj i−2 ∈ Y, dejemos que pjlk sea la ganancia que Vi−1 recibe cuando Vi−2 juega xj i−2, Vi−1 juega xl i−1, y Vi juega xk i. Claramente, pjlk se puede calcular en tiempo constante. Entonces tenemos ml,k i = max{mj,l i−1 + pjlk | xj i−2 ∈ Y }. Finalmente, supongamos que hemos calculado ml,k n para l, k = 1, . . . , N. Todavía necesitamos tener en cuenta el pago del jugador Vn. Por lo tanto, consideramos todos los pares (xk n, xl n−1) que satisfacen xl n−1 ∈ pbrVn−1 (xk n), y elegimos aquel que maximiza la suma de mk,l n y la ganancia de Vn cuando juega xk n y Vn−1 juega xl n−1. Esto resulta en el pago total máximo que los jugadores pueden lograr en un equilibrio de Nash utilizando estrategias discretas; el perfil de estrategia real que produce este pago puede ser reconstruido utilizando técnicas estándar de programación dinámica. Es fácil ver que cada ml,k se puede calcular en tiempo O(N), es decir, todos ellos se pueden calcular en tiempo O(nN3). Recuerde que debemos seleccionar N ≥ (24nPmax)/ para asegurarnos de que el perfil estratégico que producimos tenga un pago total que esté dentro de lo óptimo. Concluimos que podemos calcular una -aproximación al mejor equilibrio de Nash en tiempo O(n4 P3 max/ 3 ). Esto completa la demostración del Teorema 3. Para enunciar nuestro resultado para el caso general (es decir, cuando el grafo subyacente es un árbol de grado acotado en lugar de un camino), necesitamos notación adicional. Si G tiene n jugadores, sea q(n) una cota superior en el número de puntos de evento en la representación de cualquier política de mejor respuesta. Es decir, asumimos que para cualquier vértice U con padre V, B(V, U) tiene como máximo q(n) puntos de evento. Estaremos interesados en la situación en la que q(n) sea un polinomio en n. TEOREMA 4. Sea G un juego gráfico de n jugadores en un árbol en el que cada nodo tiene a lo sumo Δ hijos. Supongamos que se nos da un conjunto de políticas de mejor respuesta para G en el que cada política de mejor respuesta B(V, U) está representada por un conjunto de rectángulos con un máximo de q(n) puntos de evento. Para cualquier > 0, existe un algoritmo que construye un equilibrio de Nash s para G que satisface EP(s) ≥ M(G) − . El tiempo de ejecución del algoritmo es polinómico en n, Pmax y −1 siempre que el árbol tenga grado acotado (es decir, Δ = O(1)) y q(n) sea un polinomio en n. En particular, si N = max((Δ + 1)q(n) + 1, n2Δ+2 (Δ + 2)Pmax −1 ) y Δ > 1 entonces el tiempo de ejecución es O(nΔ(2N)Δ. Para la demostración de este teorema, ver [10]. 4.1 Un algoritmo de tiempo polinómico para aproximación multiplicativa El tiempo de ejecución de nuestro algoritmo es seudopolinómico en lugar de polinómico, porque incluye un factor que es polinómico en Pmax, la entrada máxima (en valor absoluto) en cualquier matriz de pagos. Si estamos interesados en una aproximación multiplicativa en lugar de una aditiva, esto se puede mejorar a polinomial. Primero, hay que tener en cuenta que no podemos esperar una aproximación multiplicativa para todas las entradas. Es decir, no podemos esperar tener un algoritmo que calcule un equilibrio de Nash con una ganancia total de al menos (1 − )M(G). Si tuviéramos dicho algoritmo, entonces para juegos gráficos G con M(G) = 0, se requeriría que el algoritmo produjera la solución óptima. Para demostrar que esto es inviable, observe que podemos usar las técnicas de la Sección 3.2 para construir dos juegos gráficos de coeficientes enteros en caminos de longitud O(n) de tal manera que para algún X ∈ R, el pago total máximo en el primer juego sea X, el pago total máximo en el segundo juego sea −X, y para ambos juegos, los perfiles estratégicos que logran los pagos totales máximos involucran números algebraicos de grado n. Al combinar los dos juegos de modo que el primer vértice del segundo juego se conecte con el último vértice del primer juego, pero los pagos de todos los jugadores no cambien, obtenemos un juego gráfico en el que el mejor equilibrio de Nash tiene un pago total de 0, sin embargo, las estrategias que conducen a este pago tienen una alta complejidad algebraica. Sin embargo, podemos lograr una aproximación multiplicativa cuando todas las entradas de las matrices de pago son positivas y la relación entre cualquier par de entradas está acotada polinómicamente. Recuerde que asumimos que todos los pagos son enteros, y sea Pmin > 0 la entrada más pequeña de cualquier matriz de pagos. En este caso, para cualquier perfil estratégico, la ganancia para el jugador i es al menos Pmin, por lo que la ganancia total en el equilibrio de Nash que maximiza el bienestar social satisface M(G) ≥ nPmin. Además, el Lema 3 implica que al elegir δ < /(24Pmax/Pmin), podemos asegurar que el equilibrio de Nash t producido por nuestro algoritmo cumple nX i=1 EPVi (s) − nX i=1 EPVi (t) ≤ 24Pmaxδn ≤ nPmin ≤ M(G), es decir, para este valor de δ tenemos Pn i=1 EPVi (t) ≥ (1 − )M(G). Recuerde que el tiempo de ejecución de nuestro algoritmo es O(nN3), donde N debe ser seleccionado para satisfacer N > 5n, N = 1/δ. Se deduce que si Pmin > 0, Pmax/Pmin = poli(n), podemos elegir N de manera que nuestro algoritmo proporcione una garantía de aproximación multiplicativa y se ejecute en tiempo polinómico en n y 1/ . 5. EQUILIBRIOS DE NASH DE PAGO ACOTADO Otra forma natural de definir qué es un buen equilibrio de Nash es exigir que el pago esperado de cada jugador supere cierto umbral. Estos umbrales no tienen que ser iguales para todos los jugadores. En este caso, además de las matrices de pagos de los n jugadores, se nos dan n números T1, . . . , Tn, y nuestro objetivo es encontrar un equilibrio de Nash en el que el pago del jugador i sea al menos Ti, o informar que no existe tal equilibrio de Nash. Resulta que podemos diseñar un FPTAS para este problema utilizando las mismas técnicas que en la sección anterior. TEOREMA 5. Dado un juego gráfico G en un camino de n vértices y n números racionales T1, . . . , Tn, supongamos que existe un perfil estratégico s tal que s es un equilibrio de Nash para G y EPVi (s) ≥ Ti para i = 1, . . . , n. Entonces para cualquier > 0 podemos encontrar en tiempo O(max{nP3 max/ 3 , n4 / 3 }) un perfil estratégico s tal que s es un equilibrio de Nash para G y EPVi (s) ≥ Ti − para i = 1, . . . , n. PRUEBA. La prueba es similar a la del Teorema 3. Primero, construimos las políticas de mejor respuesta para todos los jugadores, elegimos N > 5n, y construimos los conjuntos Xi, i = 1, . . . , n, como se describe en la demostración del Teorema 3. Consideremos un perfil estratégico s tal que s sea un equilibrio de Nash para G y EPVi (s) ≥ Ti para i = 1, . . . , n. Construimos un perfil estratégico ti = max{xj i | xj i ≤ si} y usamos el mismo argumento que en la demostración del Teorema 3 para mostrar que t es un equilibrio de Nash para G. Según el Lema 3, tenemos |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ, por lo que eligiendo δ < /(24Pmax), o, equivalentemente, N > max{5n, 24Pmax/ }, podemos asegurar que EPVi (t) ≥ Ti − para i = 1, . . . , n. Ahora, utilizaremos la programación dinámica para encontrar un equilibrio de Nash discreto que cumpla con EPVi (t) ≥ Ti − para i = 1, . . . , n. Dado que t es un perfil estratégico discreto, nuestro algoritmo tendrá éxito siempre que haya un perfil estratégico s con EPVi (s) ≥ Ti− para i = 1, . . . , n. Sea zl,k i = 1 si hay un perfil estratégico discreto tal que para cualquier j < i la estrategia del jugador Vj es una mejor respuesta potencial a la estrategia de Vj+1, el pago esperado de Vj es al menos Tj − , y, además, Vi−1 juega xl i−1, Vi juega xk i. De lo contrario, deja que zl,k i = 0. Podemos calcular zl,k i, i = 1, . . . , n; k, l = 1, . . . , N de forma inductiva, de la siguiente manera. Tenemos zl,k 1 = 1 para k, l = 1, . . . , N. Ahora, supongamos que ya hemos calculado zl,k j para todos los j < i; k, l = 1, . . . , N. Para calcular zk,l i , primero verificamos si (xk i , xl i−1) ∈ B(Vi, Vi−1). Si este 168 no es el caso, claramente, zk,l i = 0. De lo contrario, considera el conjunto Y = Xi−2 ∩ pbrVi−2 (xl i−1), es decir, el conjunto de todas las estrategias discretas de Vi−2 que son potenciales mejores respuestas a xl i−1. Se ha demostrado en la prueba del Teorema 3 que Y = ∅. Para cada xj i−2 ∈ Y, dejemos que pjlk sea la ganancia que Vi−1 recibe cuando Vi−2 juega xj i−2, Vi−1 juega xl i−1, y Vi juega xk i. Claramente, pjlk se puede calcular en tiempo constante. Si existe un xj i−2 ∈ Y tal que zj,l i−1 = 1 y pjlk ≥ Ti−2 − , establece zl,k i = 1. De lo contrario, establezca zl,k i = 0. Habiendo calculado zl,k n , l, k = 1, . . . , N, verificamos si zl,k n = 1 para algún par (l, k). Si existe tal par de índices, instruimos a Vn a jugar xk n y utilizamos técnicas de programación dinámica (o, de manera equivalente, el paso descendente del algoritmo de [13]) para encontrar un equilibrio de Nash s que satisfaga EPVi (s ) ≥ Ti − para i = 1, . . . , n (recordemos que Vn es un jugador ficticio, es decir, asumimos Tn = 0, EPn(s ) = 0 para cualquier elección de s ). Si zl,k n = 0 para todo l, k = 1, . . . , N, no hay un equilibrio de Nash discreto s que satisfaga EPVi (s) ≥ Ti − para i = 1, . . . , n y, por lo tanto, no hay un equilibrio de Nash s (no necesariamente discreto) tal que EPVi (s) ≥ Ti para i = 1, . . . , n. El análisis del tiempo de ejecución es similar al de la Teorema 3; concluimos que el tiempo de ejecución de nuestro algoritmo es O(nN3) = O(max{nP3 max/3, n4/3}). OBSERVACIÓN 1. El Teorema 5 se puede extender a árboles de grado acotado de la misma manera que el Teorema 4. 5.1 Cálculo Exacto Otro enfoque para encontrar equilibrios de Nash con pagos acotados se basa en calcular de forma inductiva los subconjuntos de las políticas de mejor respuesta de todos los jugadores para excluir los puntos que no proporcionan pagos suficientes a algunos de los jugadores. Formalmente, decimos que una estrategia v del jugador V es una mejor respuesta potencial a una estrategia w de su padre W con respecto a un vector de umbral T = (T1, . . . , Tn), (denotado por v ∈ pbrV (w, T)) si hay un equilibrio en la instancia G(V,W), W = w en el que V juega la estrategia mixta v y la ganancia para cualquier jugador Vi aguas abajo de V (incluyendo a V) es al menos Ti. La mejor política de respuesta para V con respecto a un vector umbral T se define como B(W, V, T) = {(w, v) | v ∈ pbrV (w, T), w ∈ [0, 1]}. Es fácil ver que si alguno de los conjuntos B(Vj, Vj−1, T), j = 1, . . . , n, está vacío, significa que es imposible proporcionar a todos los jugadores los pagos esperados prescritos por T. De lo contrario, se puede aplicar el paso descendente del algoritmo original de [13] para encontrar un equilibrio de Nash. Dado que asumimos que Vn es un vértice ficticio cuya ganancia es idénticamente 0, el equilibrio de Nash con estas ganancias existe siempre y cuando Tn ≤ 0 y B(Vn, Vn−1, T) no esté vacío. Usando las técnicas desarrolladas en [9], no es difícil demostrar que para cualquier j = 1, . . . , n, el conjunto B(Vj , Vj−1, T) consiste en un número finito de rectángulos, y se puede calcular B(Vj+1, Vj , T) dado B(Vj , Vj−1, T). La ventaja de este enfoque es que nos permite representar todos los equilibrios de Nash que proporcionan los pagos requeridos a los jugadores. Sin embargo, no es probable que sea práctico, ya que resulta que los rectángulos que aparecen en la representación de B(Vj , Vj−1, T) pueden tener coordenadas irracionales. AFIRMACIÓN 6. Existe un juego gráfico G en un camino de 3 vértices UVW y un vector T = (T1, T2, T3) tal que B(V, W, T) no puede ser representado como una unión de un número finito de rectángulos con coordenadas racionales. PRUEBA. Definimos las recompensas para los jugadores en G de la siguiente manera. La ganancia para U es idénticamente 0, es decir, P0 (U) = P1 (U) = 0. Usando la Reclamación 1, seleccionamos los pagos para V de manera que P0 (V) = uw, P1 (V) = P0 (V) + w - .8u - .1, donde u y w son las estrategias (mixtas) de U y W, respectivamente. Se deduce que V es indiferente entre jugar 0 y 1 si y solo si w = f(u) = .8u + .1; observe que para cualquier u ∈ [0, 1] tenemos f(u) ∈ [0, 1]. No es difícil ver que tenemos B(W, V) = [0, .1]×{0} ∪ [.1, .9]×[0, 1] ∪ [.9, 1]×{1}. Los pagos para W no son importantes para nuestra construcción; por ejemplo, establezca P0(W) = P0(W) = 0. Ahora, establezca T = (0, 1/8, 0), es decir, estamos interesados en equilibrios de Nash en los que el pago esperado de V sea al menos 1/8. Supongamos que w ∈ [0, 1]. El jugador V puede jugar una estrategia mixta v cuando W está jugando w siempre que U juegue u = f−1 (w) = 5w/4 − 1/8 (para asegurar que V sea indiferente entre 0 y 1) y P0 (V) = P1 (V) = uw = w(5w/4 − 1/8) ≥ 1/8. La última condición se cumple si w ≤ (1 − √ 41)/20 < 0 o w ≥ (1 + √ 41)/20. Ten en cuenta que tenemos .1 < (1 + √ 41)/20 < .9. Para cualquier otro valor de w, cualquier estrategia de U hace que V prefiera una de las estrategias puras o no le proporciona un pago esperado suficiente. También hay algunos valores de w para los cuales V puede jugar una estrategia pura (0 o 1) como una mejor respuesta potencial a W y garantizarse a sí mismo un pago esperado de al menos 1/8; se puede demostrar que estos valores de w forman un número finito de segmentos en [0, 1]. Concluimos que cualquier representación de B(W, V, T) como una unión de un número finito de rectángulos debe contener un rectángulo de la forma [(1 + √ 41)/20, w] × [v, v] para algún w, v, v ∈ [0, 1]. Por otro lado, se puede demostrar que para cualquier matriz de pagos enteros y vectores de umbral, y para cualquier j = 1, . . . , n − 1, los conjuntos B(Vj+1, Vj, T) no contienen rectángulos de la forma [u , u ]×{v} o {v}×[w , w ], donde v ∈ R\\Q. Esto significa que si B(Vn, Vn−1, T) no está vacío, es decir, hay un equilibrio de Nash con pagos prescritos por T, entonces el paso descendente del algoritmo de [13] siempre puede elegir un perfil estratégico que forme un equilibrio de Nash, proporcione un pago de al menos Ti al jugador Vi y no tenga coordenadas irracionales. Por lo tanto, a diferencia del equilibrio de Nash que maximiza el bienestar social, no es necesario trabajar con números irracionales, y el hecho de que el algoritmo discutido en esta sección deba hacerlo puede considerarse como un argumento en contra de utilizar este enfoque. OTROS CRITERIOS PARA SELECCIONAR UN EQUILIBRIO DE NASH En esta sección, consideramos varios otros criterios que pueden ser útiles para seleccionar un equilibrio de Nash. 6.1 Combinando la maximización del bienestar con límites en los pagos En muchos escenarios de la vida real, queremos maximizar el bienestar social sujeto a ciertas restricciones en los pagos a los jugadores individuales. Por ejemplo, es posible que queramos asegurarnos de que ningún jugador obtenga una ganancia esperada negativa, o que la ganancia esperada para el jugador i sea al menos Pi max − ξ, donde Pi max es la entrada máxima de la matriz de ganancias de i y ξ es un parámetro fijo. Formalmente, dado un juego gráfico G y un vector T1, . . . , Tn, sea S el conjunto de todos los equilibrios de Nash s de G que satisfacen Ti ≤ EPVi (s) para i = 1, . . . , n, y sea ˆs = argmaxs∈S EP(s). Si el conjunto S no está vacío, podemos encontrar un equilibrio de Nash ˆs que esté -cerca de satisfacer los límites de pago y esté dentro de ε de ˆs con respecto al pago total al combinar los algoritmos de la Sección 4 y la Sección 5. Es decir, para un dado > 0, elige δ como en la demostración del Teorema 3, y deja que Xi sea el conjunto de todas las estrategias discretas del jugador Vi (para una definición formal, consulta la demostración del Teorema 3). Combinando las pruebas del Teorema 3 y el Teorema 5, podemos ver que el perfil de estrategia ˆt dado por ˆti = max{xj i | xj i ≤ ˆsi} satisface EPVi (ˆt) ≥ Ti − , |EP(ˆs) − EP(ˆt)| ≤ . Define ˆml,k i como la máxima ganancia total que V1, . . . , Vi−1 pueden lograr si cada Vj, j ≤ i, elige una estrategia de Xj, para cada j < i la estrategia de Vj es una mejor respuesta potencial a la estrategia de Vj+1 y la ganancia para el jugador Vj es al menos Tj − , y, además, Vi−1 juega xl i−1, Vi juega xk i. Si no hay forma de elegir las estrategias para V1, . . . , Vi−1 que cumplan con estas condiciones, establecemos ml,k i = −∞. El ˆml,k se puede calcular mediante programación dinámica de manera similar al ml,k y zl,k en las demostraciones de los Teoremas 3 y 5. Finalmente, como en la demostración del Teorema 3, utilizamos ml,k n para seleccionar el mejor equilibrio de Nash discreto sujeto a las restricciones de pago. Incluso de manera más general, es posible que deseemos maximizar el beneficio total para un subconjunto de jugadores (se supone que son capaces de redistribuir justamente las ganancias entre ellos mismos) mientras garantizamos ciertos beneficios esperados a (un subconjunto de) los otros jugadores. Este problema puede ser abordado de manera similar. 6.2 Un enfoque minimax Una medida más igualitaria de la calidad de un equilibrio de Nash es el pago esperado mínimo para un jugador. La solución óptima con respecto a esta medida es un equilibrio de Nash en el cual la ganancia esperada mínima para un jugador es máxima. Para encontrar una aproximación a dicho equilibrio de Nash, podemos combinar el algoritmo de la Sección 5 con la búsqueda binaria en el espacio de límites inferiores potenciales. Ten en cuenta que la ganancia esperada para cualquier jugador Vi dada una estrategia s siempre cumple con −Pmax ≤ EPVi (s) ≤ Pmax. Para un fijo > 0, comenzamos estableciendo T = −Pmax, T = Pmax, T∗ = (T + T )/2. Luego ejecutamos el algoritmo de la Sección 5 con T1 = · · · = Tn = T∗. Si el algoritmo tiene éxito al encontrar un equilibrio de Nash s que cumple con EPVi (s) ≥ T∗ − para todo i = 1, . . . , n, establecemos T = T∗, T∗ = (T + T)/2; de lo contrario, establecemos T = T∗, T∗ = (T + T)/2 y repetimos el ciclo. Repetimos este proceso hasta que |T − T | ≤ . No es difícil comprobar que para cualquier p ∈ R, si existe un equilibrio de Nash s tal que mini=1,...,n EPVi (s) ≥ p, entonces nuestro algoritmo devuelve un equilibrio de Nash s que cumple mini=1,...,n EPVi (s) ≥ p−2. El tiempo de ejecución de nuestro algoritmo es O(max{nP3 max log −1 / 3 , n4 log −1 / 3 }). 6.3 Igualando los pagos Cuando las matrices de pagos de los jugadores no son muy diferentes, es razonable exigir que los pagos esperados para los jugadores tampoco difieran mucho. Ahora demostraremos que los equilibrios de Nash en esta categoría también pueden aproximarse en tiempo polinómico. De hecho, observe que el algoritmo de la Sección 5 puede ser fácilmente modificado para tratar con límites superiores en las ganancias individuales en lugar de límites inferiores. Además, podemos calcular de manera eficiente una aproximación a un equilibrio de Nash que cumpla tanto con el límite superior como con el límite inferior para cada jugador. Más precisamente, supongamos que se nos da un juego gráfico G, 2n números racionales T1, . . . , Tn, T1, . . . , Tn y > 0. Entonces, si existe un perfil estratégico s tal que s es un equilibrio de Nash para G y Ti ≤ EPVi (s) ≤ Ti para i = 1, . . . , n, podemos encontrar un perfil estratégico s tal que s es un equilibrio de Nash para G y Ti − ≤ EPVi (s) ≤ Ti + para i = 1, . . . , n. El algoritmo modificado también se ejecuta en tiempo O(max{nP3 max/ 3 , [4]n4 / 3 }). Esta observación nos permite aproximar equilibrios de Nash en los que las ganancias esperadas de todos los jugadores difieren en un máximo de ξ para cualquier ξ fijo > 0. Dado un > 0, establecemos T1 = · · · = Tn = −Pmax, T1 = · · · = Tn = −Pmax + ξ + , y ejecutamos la versión modificada del algoritmo de la Sección 5. Si no logra encontrar una solución, incrementamos todos los Ti, Ti por y el bucle. Continuamos hasta que el algoritmo encuentre una solución, o Ti ≥ Pmax. Supongamos que existe un equilibrio de Nash s que satisface |EPVi (s) − EPVj (s)| ≤ ξ para todo i, j = 1, . . . , n. Definamos r = mini=1,...,n EPVi (s); tenemos r ≤ EPVi (s) ≤ r + ξ para todo i = 1, . . . , n. Existe un k ≥ 0 tal que −Pmax + (k − 1) ≤ r ≤ −Pmax + k. Durante el paso k del algoritmo, establecemos T1 = · · · = Tn = −Pmax +(k−1) , es decir, tenemos r− ≤ Ti ≤ r, r + ξ ≤ Ti ≤ r + ξ + . Es decir, el equilibrio de Nash s satisface Ti ≤ r ≤ EPVi (s) ≤ r + ξ ≤ Ti, lo que significa que cuando Ti se establece en −Pmax + (k − 1), nuestro algoritmo garantiza producir un equilibrio de Nash t que satisface r − 2 ≤ Ti − ≤ EPVi (t) ≤ Ti + ≤ r + ξ + 2. Concluimos que siempre que exista un equilibrio de Nash s, nuestro algoritmo produce un equilibrio de Nash t que satisface |EPVi (t) − EPVj (t)| ≤ ξ + 4 para todo i, j = 1, . . . , n. El tiempo de ejecución de este algoritmo es O(max{nP3 max/ 4 , n4 / 4 }). También debemos tener en cuenta que podemos encontrar el valor más pequeño de ξ para el cual existe un equilibrio de Nash combinando este algoritmo con una búsqueda binaria en el espacio ξ = [0, 2Pmax]. Esto identifica una aproximación al equilibrio de Nash más justo, es decir, uno en el que las ganancias esperadas de los jugadores difieren por la menor cantidad posible. Finalmente, cabe destacar que todos los resultados de esta sección pueden extenderse a árboles de grado acotado. 7. CONCLUSIONES Hemos estudiado el problema de la selección de equilibrio en juegos gráficos en árboles de grado acotado. Consideramos varios criterios para seleccionar un equilibrio de Nash, como maximizar el bienestar social, garantizar un límite inferior en la recompensa esperada de cada jugador, etc. Primero, nos enfocamos en la complejidad algebraica de un equilibrio de Nash que maximiza el bienestar social, y demostramos resultados negativos contundentes para ese problema. Es decir, demostramos que incluso para juegos gráficos en caminos, cualquier número algebraico α ∈ [0, 1] puede ser la única estrategia disponible para algún jugador en todas las equilibrios de Nash que maximizan el bienestar social. Esto contrasta fuertemente con el hecho de que los juegos gráficos en árboles siempre poseen un equilibrio de Nash en el que las estrategias de todos los jugadores son números racionales. Luego proporcionamos algoritmos de aproximación para seleccionar equilibrios de Nash con propiedades especiales. Si bien el problema de encontrar equilibrios de Nash aproximados para diversas clases de juegos ha recibido mucha atención en los últimos años, la mayoría de los trabajos existentes tienen como objetivo encontrar equilibrios de Nash que satisfagan (o estén cerca de satisfacer) ciertas propiedades. Nuestro enfoque es diferente en que insistimos en producir un equilibrio de Nash exacto, que está cerca de satisfacer un requisito dado. Como se argumenta en la introducción, hay varias razones para preferir una solución que constituya un equilibrio de Nash exacto. Nuestros algoritmos son esquemas de aproximación de tiempo polinomial completo, es decir, su tiempo de ejecución es polinomial en el inverso del parámetro de aproximación, aunque pueden ser seudopolinomiales con respecto al tamaño de la entrada. Bajo restricciones leves en las entradas, estas pueden ser modificadas para ser verdaderamente polinomiales. Este es el resultado positivo más fuerte que se puede obtener para un problema cuyas soluciones exactas pueden ser difíciles de representar, como es el caso de muchos de los problemas considerados aquí. Mientras demostramos nuestros resultados para juegos en un camino, pueden generalizarse a cualquier árbol para el cual las políticas de mejor respuesta tengan representaciones compactas como uniones de rectángulos. En la versión completa del artículo describimos nuestros algoritmos para el caso general. Un trabajo adicional en esta línea podría incluir extensiones a los tipos de garantías buscadas para los equilibrios de Nash, como garantizar los pagos totales para subconjuntos de jugadores, seleccionar equilibrios en los que algunos jugadores estén recibiendo pagos significativamente más altos que sus pares, etc. Sin embargo, en este momento es quizás más importante investigar si los equilibrios de Nash de los juegos gráficos pueden ser calculados de manera descentralizada, en contraste con los algoritmos que hemos introducido aquí. Es natural preguntarse si nuestros resultados o los de [9] pueden generalizarse a juegos con tres o más acciones. Sin embargo, parece que esto hará el análisis significativamente más difícil. En particular, cabe destacar que se pueden considerar los juegos de pago limitado como un caso especial muy restringido de juegos con tres acciones por jugador. Es decir, dado un juego de dos acciones con límites de pago, considera un juego en el que cada jugador Vi tiene una tercera acción que le garantiza un pago de Ti sin importar lo que hagan los demás. Luego, verificar si existe un equilibrio de Nash en el cual ninguno de los jugadores asigna una probabilidad distinta de cero a su tercera acción es equivalente a comprobar si existe un equilibrio de Nash que cumpla con los límites de pago en el juego original, y la Sección 5.1 muestra que encontrar una solución exacta a este problema requiere nuevas ideas. Alternativamente, puede ser interesante buscar resultados similares en el contexto de equilibrios correlacionados (CE), especialmente dado que el mejor CE puede tener un valor más alto (pago esperado total) que el mejor NE. La proporción entre estos valores se llama el valor de mediación en [1]. Se sabe por [1] que el valor de mediación de juegos de 2 jugadores y 2 acciones con pagos no negativos es a lo sumo 4 3, y presentan un juego de 3 jugadores para el cual es infinito. Además, un ejemplo de 2 jugadores y 3 acciones del [1] también tiene un valor de mediación infinito. 8. REFERENCIAS [1] I. Ashlagi, D. Monderer y M. Tenneholtz, Sobre el Valor de la Correlación, Actas del seminario de Dagstuhl 05011 (2005) [2] R. Aumann, Subjetividad y Correlación en Estrategias Aleatorias, Revista de Economía Matemática 1 pp. 67-96 (1974) [3] B. Blum, C. R. Shelton y D. Koller, Un Método de Continuación para Equilibrios de Nash en Juegos Estructurados, Actas de IJCAI03 [4] X. Chen, X. Deng y S. Teng, Computación de Equilibrios de Nash: Aproximación y Complejidad Suavizada, Actas de FOCS06 [5] X. Chen, X. Deng, Resolviendo la Complejidad del Equilibrio de Nash de 2 Jugadores, Actas de FOCS06 [6] V. Conitzer y T. Sandholm, Resultados de Complejidad sobre Equilibrios de Nash, Actas de IJCAI03 [7] C. Daskalakis, P. W. Goldberg y C. H. Papadimitriou, La Complejidad de Calcular un Equilibrio de Nash, Actas de STOC06 [8] R. S. Datta, Universalidad de los Equilibrios de Nash, Matemáticas de la Investigación Operativa 28:3, 2003 [9] E. Elkind, L. A. Goldberg y P. W. Goldberg, Equilibrios de Nash en Juegos Gráficos en Árboles Revisitados, Actas de ACM EC06 [10] E. Elkind, L. A. Goldberg y P. W. Goldberg, Computando Buenos Equilibrios de Nash en Juegos Gráficos, http://arxiv.org/abs/cs.GT/0703133 [11] I. Gilboa y E. Zemel, Equilibrios de Nash y Correlacionados: Algunas Consideraciones de Complejidad, Juegos y Comportamiento Económico, 1 pp. 80-93 (1989) [12] P. W. Goldberg y C. H. Papadimitriou, Reducibilidad entre Problemas de Equilibrio, Actas de STOC06 [13] M. Kearns, M. Littman y S. Singh, Modelos Gráficos para la Teoría de Juegos, Actas de UAI01 [14] M. Littman, M. Kearns y S. Singh, Un Algoritmo Exacto Eficiente para Juegos Gráficos Singularmente Conectados, Actas de NIPS01 [15] R. Lipton y E. Markakis, Equilibrios de Nash a través de Ecuaciones Polinomiales, Actas de LATIN04 [16] L. Ortiz y M. Kearns, Propagación de Nash para Juegos Gráficos con Lazos, Actas de NIPS03 [17] C.H. Papadimitriou, Computando equilibrios correlacionados en juegos de varios jugadores, Actas de STOC05 [18] C.H. Papadimitriou y T. Roughgarden, Computando equilibrios en juegos de múltiples jugadores, Actas de SODA05 [19] D. Vickrey y D. Koller, Algoritmos multiagente para resolver juegos gráficos, Actas de AAAI02 171",
    "original_sentences": [
        "Computing Good Nash Equilibria in Graphical Games ∗ Edith Elkind Hebrew University of Jerusalem, Israel, and University of Southampton, Southampton, SO17 1BJ, U.K. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K. ABSTRACT This paper addresses the problem of fair equilibrium selection in graphical games.",
        "Our approach is based on the data structure called the best response policy, which was proposed by Kearns et al. [13] as a way to represent all Nash equilibria of a graphical game.",
        "In [9], it was shown that the best response policy has polynomial size as long as the underlying graph is a path.",
        "In this paper, we show that if the underlying graph is a bounded-degree tree and the best response policy has polynomial size then there is an efficient algorithm which constructs a Nash equilibrium that guarantees certain payoffs to all participants.",
        "Another attractive solution concept is a Nash equilibrium that maximizes the social welfare.",
        "We show that, while exactly computing the latter is infeasible (we prove that solving this problem may involve algebraic numbers of an arbitrarily high degree), there exists an FPTAS for finding such an equilibrium as long as the best response policy has polynomial size.",
        "These two algorithms can be combined to produce Nash equilibria that satisfy various fairness criteria.",
        "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-economics General Terms Algorithms, Economics, Theory 1.",
        "INTRODUCTION In a large community of agents, an agents behavior is not likely to have a direct effect on most other agents: rather, it is just the agents who are close enough to him that will be affected.",
        "However, as these agents respond by adapting their behavior, more agents will feel the consequences and eventually the choices made by a single agent will propagate throughout the entire community.",
        "This is the intuition behind graphical games, which were introduced by Kearns, Littman and Singh in [13] as a compact representation scheme for games with many players.",
        "In an n-player graphical game, each player is associated with a vertex of an underlying graph G, and the payoffs of each player depend on his action as well as on the actions of his neighbors in the graph.",
        "If the maximum degree of G is Δ, and each player has two actions available to him, then the game can be represented using n2Δ+1 numbers.",
        "In contrast, we need n2n numbers to represent a general n-player 2-action game, which is only practical for small values of n. For graphical games with constant Δ, the size of the game is linear in n. One of the most natural problems for a graphical game is that of finding a Nash equilibrium, the existence of which follows from Nashs celebrated theorem (as graphical games are just a special case of n-player games).",
        "The first attempt to tackle this problem was made in [13], where the authors consider graphical games with two actions per player in which the underlying graph is a boundeddegree tree.",
        "They propose a generic algorithm for finding Nash equilibria that can be specialized in two ways: an exponential-time algorithm for finding an (exact) Nash equilibrium, and a fully polynomial time approximation scheme (FPTAS) for finding an approximation to a Nash equilibrium.",
        "For any > 0 this algorithm outputs an -Nash equilibrium, which is a strategy profile in which no player can improve his payoff by more than by unilaterally changing his strategy.",
        "While -Nash equilibria are often easier to compute than exact Nash equilibria, this solution concept has several drawbacks.",
        "First, the players may be sensitive to a small loss in payoffs, so the strategy profile that is an -Nash equilibrium will not be stable.",
        "This will be the case even if there is only a small subset of players who are extremely price-sensitive, and for a large population of players it may be difficult to choose a value of that will satisfy everyone.",
        "Second, the strategy profiles that are close to being Nash equilibria may be much better with respect to the properties under consideration than exact Nash equilibria.",
        "Therefore, the (approximation to the) value of the best solution that corresponds to an -Nash equilibrium may not be indicative of what can be achieved under an exact Nash equilibrium.",
        "This is especially important if the purpose of the approximate solution is to provide a good benchmark for a system of selfish agents, as the benchmark implied by an -Nash equilibrium may be unrealistic.",
        "For these reasons, in this paper we focus on the problem of computing exact Nash equilibria.",
        "Building on ideas of [14], Elkind et al. [9] showed how to find an (exact) Nash equilibrium in polynomial time when the underlying 162 graph has degree 2 (that is, when the graph is a collection of paths and cycles).",
        "By contrast, finding a Nash equilibrium in a general degree-bounded graph appears to be computationally intractable: it has been shown (see [5, 12, 7]) to be complete for the complexity class PPAD. [9] extends this hardness result to the case in which the underlying graph has bounded pathwidth.",
        "A graphical game may not have a unique Nash equilibrium, indeed it may have exponentially many.",
        "Moreover, some Nash equilibria are more desirable than others.",
        "Rather than having an algorithm which merely finds some Nash equilibrium, we would like to have algorithms for finding Nash equilibria with various sociallydesirable properties, such as maximizing overall payoff or distributing profit fairly.",
        "A useful property of the data structure of [13] is that it simultaneously represents the set of all Nash equilibria of the underlying game.",
        "If this representation has polynomial size (as is the case for paths, as shown in [9]), one may hope to extract from it a Nash equilibrium with the desired properties.",
        "In fact, in [13] the authors mention that this is indeed possible if one is interested in finding an (approximate) -Nash equilibrium.",
        "The goal of this paper is to extend this to exact Nash equilibria. 1.1 Our Results In this paper, we study n-player 2-action graphical games on bounded-degree trees for which the data structure of [13] has size poly(n).",
        "We focus on the problem of finding exact Nash equilibria with certain socially-desirable properties.",
        "In particular, we show how to find a Nash equilibrium that (nearly) maximizes the social welfare, i.e., the sum of the players payoffs, and we show how to find a Nash equilibrium that (nearly) satisfies prescribed payoff bounds for all players.",
        "Graphical games on bounded-degree trees have a simple algebraic structure.",
        "One attractive feature, which follows from [13], is that every such game has a Nash equilibrium in which the strategy of every player is a rational number.",
        "Section 3 studies the algebraic structure of those Nash equilibria that maximize social welfare.",
        "We show (Theorems 1 and 2) that, surprisingly, the set of Nash equilibria that maximize social welfare is more complex.",
        "In fact, for any algebraic number α ∈ [0, 1] with degree at most n, we exhibit a graphical game on a path of length O(n) such that, in the unique social welfare-maximizing Nash equilibrium of this game, one of the players plays the mixed strategy α.1 This result shows that it may be difficult to represent an optimal Nash equilibrium.",
        "It seems to be a novel feature of the setting we consider here, that an optimal Nash equilibrium is hard to represent, in a situation where it is easy to find and represent a Nash equilibrium.",
        "As the social welfare-maximizing Nash equilibrium may be hard to represent efficiently, we have to settle for an approximation.",
        "However, the crucial difference between our approach and that of previous papers [13, 16, 19] is that we require our algorithm to output an exact Nash equilibrium, though not necessarily the optimal one with respect to our criteria.",
        "In Section 4, we describe an algorithm that satisfies this requirement.",
        "Namely, we propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within of optimal.",
        "It runs in polynomial time (Theorem 3,4) for any graphical game on a bounded-degree tree for which the data structure proposed by [13] (the so-called best response policy, defined below) is of size poly(n) (note that, as shown in [9], this is always the case when the underlying graph is a path).",
        "More pre1 A related result in a different context was obtained by Datta [8], who shows that n-player 2-action games are universal in the sense that any real algebraic variety can be represented as the set of totally mixed Nash equilibria of such games. cisely, the running time of our algorithm is polynomial in n, Pmax, and 1/ , where Pmax is the maximum absolute value of an entry of a payoff matrix, i.e., it is a pseudopolynomial algorithm, though it is fully polynomial with respect to .",
        "We show (Section 4.1) that under some restrictions on the payoff matrices, the algorithm can be transformed into a (truly) polynomial-time algorithm that outputs a Nash equilibrium whose total payoff is within a 1 − factor from the optimal.",
        "In Section 5, we consider the problem of finding a Nash equilibrium in which the expected payoff of each player Vi exceeds a prescribed threshold Ti.",
        "Using the idea from Section 4 we give (Theorem 5) a fully polynomial time approximation scheme for this problem.",
        "The running time of the algorithm is bounded by a polynomial in n, Pmax, and .",
        "If the instance has a Nash equilibrium satisfying the prescribed thresholds then the algorithm constructs a Nash equilibrium in which the expected payoff of each player Vi is at least Ti − .",
        "In Section 6, we introduce other natural criteria for selecting a good Nash equilibrium and we show that the algorithms described in the two previous sections can be used as building blocks in finding Nash equilibria that satisfy these criteria.",
        "In particular, in Section 6.1 we show how to find a Nash equilibrium that approximates the maximum social welfare, while guaranteeing that each individual payoff is close to a prescribed threshold.",
        "In Section 6.2 we show how to find a Nash equilibrium that (nearly) maximizes the minimum individual payoff.",
        "Finally, in Section 6.3 we show how to find a Nash equilibrium in which the individual payoffs of the players are close to each other. 1.2 Related Work Our approximation scheme (Theorem 3 and Theorem 4) shows a contrast between the games that we study and two-player n-action games, for which the corresponding problems are usually intractable.",
        "For two-player n-action games, the problem of finding Nash equilibria with special properties is typically NP-hard.",
        "In particular, this is the case for Nash equilibria that maximize the social welfare [11, 6].",
        "Moreover, it is likely to be intractable even to approximate such equilibria.",
        "In particular, Chen, Deng and Teng [4] show that there exists some , inverse polynomial in n, for which computing an -Nash equilibrium in 2-player games with n actions per player is PPAD-complete.",
        "Lipton and Markakis [15] study the algebraic properties of Nash equilibria, and point out that standard quantifier elimination algorithms can be used to solve them.",
        "Note that these algorithms are not polynomial-time in general.",
        "The games we study in this paper have polynomial-time computable Nash equilibria in which all mixed strategies are rational numbers, but an optimal Nash equilibrium may necessarily include mixed strategies with high algebraic degree.",
        "A correlated equilibrium (CE) (introduced by Aumann [2]) is a distribution over vectors of players actions with the property that if any player is told his own action (the value of his own component) from a vector generated by that distribution, then he cannot increase his expected payoff by changing his action.",
        "Any Nash equilibrium is a CE but the converse does not hold in general.",
        "In contrast with Nash equilibria, correlated equilibria can be found for low-degree graphical games (as well as other classes of conciselyrepresented multiplayer games) in polynomial time [17].",
        "But, for graphical games it is NP-hard to find a correlated equilibrium that maximizes total payoff [18].",
        "However, the NP-hardness results apply to more general games than the one we consider here, in particular the graphs are not trees.",
        "From [2] it is also known that there exist 2-player, 2-action games for which the expected total payoff 163 of the best correlated equilibrium is higher than the best Nash equilibrium, and we discuss this issue further in Section 7. 2.",
        "PRELIMINARIES AND NOTATION We consider graphical games in which the underlying graph G is an n-vertex tree, in which each vertex has at most Δ children.",
        "Each vertex has two actions, which are denoted by 0 and 1.",
        "A mixed strategy of a player V is represented as a single number v ∈ [0, 1], which denotes the probability that V selects action 1.",
        "For the purposes of the algorithm, the tree is rooted arbitrarily.",
        "For convenience, we assume without loss of generality that the root has a single child, and that its payoff is independent of the action chosen by the child.",
        "This can be achieved by first choosing an arbitrary root of the tree, and then adding a dummy parent of this root, giving the new parent a constant payoff function, e.g., 0.",
        "Given an edge (V, W ) of the tree G, and a mixed strategy w for W , let G(V,W ),W =w be the instance obtained from G by (1) deleting all nodes Z which are separated from V by W (i.e., all nodes Z such that the path from Z to V passes through W ), and (2) restricting the instance so that W is required to play mixed strategy w. Definition 1.",
        "Suppose that (V, W ) is an edge of the tree, that v is a mixed strategy for V and that w is a mixed strategy for W .",
        "We say that v is a potential best response to w (denoted by v ∈ pbrV (w)) if there is an equilibrium in the instance G(V,W ),W =w in which V has mixed strategy v. We define the best response policy for V , given W , as B(W, V ) = {(w, v) | v ∈ pbrV (w), w ∈ [0, 1]}.",
        "The upstream pass of the generic algorithm of [13] considers every node V (other than the root) and computes the best response policy for V given its parent.",
        "With the above assumptions about the root, the downstream pass is straightforward.",
        "The root selects a mixed strategy w for the root W and a mixed strategy v ∈ B(W, V ) for each child V of W .",
        "It instructs each child V to play v. The remainder of the downward pass is recursive.",
        "When a node V is instructed by its parent to adopt mixed strategy v, it does the following for each child U - It finds a pair (v, u) ∈ B(V, U) (with the same v value that it was given by its parent) and instructs U to play u.",
        "The best response policy for a vertex U given its parent V can be represented as a union of rectangles, where a rectangle is defined by a pair of closed intervals (IV , IU ) and consists of all points in IV × IU ; it may be the case that one or both of the intervals IV and IU consists of a single point.",
        "In order to perform computations on B(V, U), and to bound the number of rectangles, [9] used the notion of an event point, which is defined as follows.",
        "For any set A ⊆ [0, 1]2 that is represented as a union of a finite number of rectangles, we say that a point u ∈ [0, 1] on the U-axis is a Uevent point of A if u = 0 or u = 1 or the representation of A contains a rectangle of the form IV × IU and u is an endpoint of IU ; V -event points are defined similarly.",
        "For many games considered in this paper, the underlying graph is an n-vertex path, i.e., a graph G = (V, E) with V = {V1, . . . , Vn} and E = {(V1, V2), . . . , (Vn−1, Vn)}.",
        "In [9], it was shown that for such games, the best response policy has only polynomially-many rectangles.",
        "The proof that the number of rectangles in B(Vj+1, Vj) is polynomial proceeds by first showing that the number of event points in B(Vj+1, Vj ) cannot exceed the number of event points in B(Vj, Vj−1) by more than 2, and using this fact to bound the number of rectangles in B(Vj+1, Vj ).",
        "Let P0 (V ) and P1 (V ) be the expected payoffs to V when it plays 0 and 1, respectively.",
        "Both P0 (V ) and P1 (V ) are multilinear functions of the strategies of V s neighbors.",
        "In what follows, we will frequently use the following simple observation.",
        "CLAIM 1.",
        "For a vertex V with a single child U and parent W , given any A, B, C, D ∈ Q, A , B , C , D ∈ Q, one can select the payoffs to V so that P0 (V ) = Auw + Bu + Cw + D, P1 (V ) = A uw + B u + C w + D .",
        "Moreover, if all A, B, C, D, A , B , C , D are integer, the payoffs to V are integer as well.",
        "PROOF.",
        "We will give the proof for P0 (V ); the proof for P1 (V ) is similar.",
        "For i, j = 0, 1, let Pij be the payoff to V when U plays i, V plays 0 and W plays j.",
        "We have P0 (V ) = P00(1 − u)(1 − w) + P10u(1 − w) + P01(1 − u)w + P11uw.",
        "We have to select the values of Pij so that P00 − P10 − P01 + P11 = A, −P00 + P10 = B, −P00 + P01 = C, P00 = D. It is easy to see that the unique solution is given by P00 = D, P01 = C + D, P10 = B + D, P11 = A + B + C + D. The input to all algorithms considered in this paper includes the payoff matrices for each player.",
        "We assume that all elements of these matrices are integer.",
        "Let Pmax be the greatest absolute value of any element of any payoff matrix.",
        "Then the input consists of at most n2Δ+1 numbers, each of which can be represented using log Pmax bits. 3.",
        "NASH EQUILIBRIA THAT MAXIMIZE THE SOCIAL WELFARE: SOLUTIONS IN R \\ Q From the point of view of social welfare, the best Nash equilibrium is the one that maximizes the sum of the players expected payoffs.",
        "Unfortunately, it turns out that computing such a strategy profile exactly is not possible: in this section, we show that even if all players payoffs are integers, the strategy profile that maximizes the total payoff may have irrational coordinates; moreover, it may involve algebraic numbers of an arbitrary degree. 3.1 Warm-up: quadratic irrationalities We start by providing an example of a graphical game on a path of length 3 with integer payoffs such that in the Nash equilibrium that maximizes the total payoff, one of the players has a strategy in R \\ Q.",
        "In the next subsection, we will extend this example to algebraic numbers of arbitrary degree n; to do so, we have to consider paths of length O(n).",
        "THEOREM 1.",
        "There exists an integer-payoff graphical game G on a 3-vertex path UV W such that, in any Nash equilibrium of G that maximizes social welfare, the strategy, u, of the player U and the total payoff, p, satisfy u, p ∈ R \\ Q.",
        "PROOF.",
        "The payoffs to the players in G are specified as follows.",
        "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
        "Using Claim 1, we select the payoffs to V so that P0 (V ) = −uw + 3w and P1 (V ) = P0 (V ) + w(u + 2) − (u + 1), where u and w are the (mixed) strategies of U and W , respectively.",
        "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = u+1 u+2 .",
        "Observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
        "The payoff to W is 0 if it selects the same action as V and 1 otherwise.",
        "CLAIM 2.",
        "All Nash equilibria of the game G are of the form (u, 1/2, f(u)).",
        "That is, in any Nash equilibrium, V plays v = 1/2 and W plays w = f(u).",
        "Moreover, for any value of u, the vector of strategies (u, 1/2, f(u)) constitutes a Nash equilibrium.",
        "PROOF.",
        "It is easy to check that for any u ∈ [0, 1], the vector (u, 1/2, f(u)) is a Nash equilibrium.",
        "Indeed, U is content to play 164 any mixed strategy u no matter what V and W do.",
        "Furthermore, V is indifferent between 0 and 1 as long as w = f(u), so it can play 1/2.",
        "Finally, if V plays 0 and 1 with equal probability, W is indifferent between 0 and 1, so it can play f(u).",
        "Conversely, suppose that v > 1/2.",
        "Then W strictly prefers to play 0, i.e., w = 0.",
        "Then for V we have P1 (V ) = P0 (V ) − (u + 1), i.e., P1 (V ) < P0 (V ), which implies v = 0, a contradiction.",
        "Similarly, if v < 1/2, player W prefers to play 1, so we have w = 1.",
        "Hence, P1 (V ) = P0 (V ) + (u + 2) − (u + 1), i.e., P1 (V ) > P0 (V ), which implies v = 1, a contradiction.",
        "Finally, if v = 1/2, but w = f(u), player V is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
        "This completes the proof of Claim 2.",
        "By Claim 2, the total payoff in any Nash equilibrium of this game is a function of u.",
        "More specifically, the payoff to U is 0, the payoff to V is −uf(u) + 3f(u), and the payoff to W is 1/2.",
        "Therefore, the Nash equilibrium with the maximum total payoff corresponds to the value of u that maximizes g(u) = −u (u + 1) u + 2 + 3 u + 1 u + 2 = − (u − 3)(u + 1) u + 2 .",
        "To find extrema of g(u), we compute h(u) = − d du g(u).",
        "We have h(u) = (2u − 2)(u + 2) − (u − 3)(u + 1) (u + 2)2 = u2 + 4u − 1 (u + 2)2 .",
        "Hence, h(u) = 0 if and only if u ∈ {−2 + √ 5, −2 − √ 5}.",
        "Note that −2 + √ 5 ∈ [0, 1].",
        "The function g(u) changes sign at −2, −1, and 3.",
        "We have g(u) < 0 for g > 3, g(u) > 0 for u < −2, so the extremum of g(u) that lies between 1 and 3, i.e., u = −2 + √ 5, is a local maximum.",
        "We conclude that the social welfare-maximizing Nash equilibrium for this game is given by the vector of strategies (−2+√ 5, 1/2, (5 − √ 5)/5).",
        "The respective total payoff is 0 − ( √ 5 − 5)( √ 5 − 1) √ 5 + 1 2 = 13/2 − 2 √ 5.",
        "This concludes the proof of Theorem 1. 3.2 Strategies of arbitrary degree We have shown that in the social welfare-maximizing Nash equilibrium, some players strategies can be quadratic irrationalities, and so can the total payoff.",
        "In this subsection, we will extend this result to show that we can construct an integer-payoff graphical game on a path whose social welfare-maximizing Nash equilibrium involves arbitrary algebraic numbers in [0, 1].",
        "THEOREM 2.",
        "For any degree-n algebraic number α ∈ [0, 1], there exists an integer payoff graphical game on a path of length O(n) such that, in all social welfare-maximizing Nash equilibria of this game, one of the players plays α.",
        "PROOF.",
        "Our proof consists of two steps.",
        "First, we construct a rational expression R(x) and a segment [x , x ] such that x , x ∈ Q and α is the only maximum of R(x) on [x , x ].",
        "Second, we construct a graphical game whose Nash equilibria can be parameterized by u ∈ [x , x ], so that at the equilibrium that corresponds to u the total payoff is R(u) and, moreover, some players strategy is u.",
        "It follows that to achieve the payoff-maximizing Nash equilibrium, this player has to play α.",
        "The details follow.",
        "LEMMA 1.",
        "Given an algebraic number α ∈ [0, 1], deg(α) = n, there exist K2, . . . , K2n+2 ∈ Q and x , x ∈ (0, 1) ∩ Q such that α is the only maximum of R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 on [x , x ].",
        "PROOF.",
        "Let P(x) be the minimal polynomial of α, i.e., a polynomial of degree n with rational coefficients whose leading coefficient is 1 such that P(α) = 0.",
        "Let A = {α1, . . . , αn} be the set of all roots of P(x).",
        "Consider the polynomial Q1(x) = −P2 (x).",
        "It has the same roots as P(x), and moreover, for any x ∈ A we have Q1(x) < 0.",
        "Hence, A is the set of all maxima of Q1(x).",
        "Now, set R(x) = Q1(x) (x+2)...(x+2n+1)(x+2n+2) .",
        "Observe that R(x) ≤ 0 for all x ∈ [0, 1] and R(x) = 0 if and only if Q1(x) = 0.",
        "Hence, the set A is also the set of all maxima of R(x) on [0, 1].",
        "Let d = min{|αi − α| | αi ∈ A, αi = α}, and set α = max{α − d/2, 0}, α = min{α + d/2, 1}.",
        "Clearly, α is the only zero (and hence, the only maximum) of R(x) on [α , α ].",
        "Let x and x be some rational numbers in (α , α) and (α, α ), respectively; note that by excluding the endpoints of the intervals we ensure that x , x = 0, 1.",
        "As [x , x ] ⊂ [α , α ], we have that α is the only maximum of R(x) on [x , x ].",
        "As R(x) is a proper rational expression and all roots of its denominator are simple, by partial fraction decomposition theorem, R(x) can be represented as R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 , where K2, . . . , K2n+2 are rational numbers.",
        "Consider a graphical game on the path U−1V−1U0V0U1V1 . . .",
        "Uk−1Vk−1Uk, where k = 2n + 2.",
        "Intuitively, we want each triple (Ui−1, Vi−1, Ui) to behave similarly to the players U, V , and W from the game described in the previous subsection.",
        "More precisely, we define the payoffs to the players in the following way. • The payoff to U−1 is 0 no matter what everyone else does. • The expected payoff to V−1 is 0 if it plays 0 and u0 − (x − x )u−1 −x if it plays 1, where u0 and u−1 are the strategies of U0 and U−1, respectively. • The expected payoff to V0 is 0 if it plays 0 and u1(u0 + 1)− u0 if it plays 1, where u0 and u1 are the strategies of U0 and U1, respectively. • For each i = 1, . . . , k − 1, the expected payoff to Vi when it plays 0 is P0 (Vi) = Aiuiui+1 − Aiui+1, and the expected payoff to Vi when it plays 1 is P1 (Vi) = P0 (Vi) + ui+1(2 − ui) − 1, where Ai = −Ki+1 and ui+1 and ui are the strategies of Ui+1 and Ui, respectively. • For each i = 0, . . . , k, the payoff to Ui does not depend on Vi and is 1 if Ui and Vi−1 select different actions and 0 otherwise.",
        "We will now characterize the Nash equilibria of this game using a sequence of claims.",
        "CLAIM 3.",
        "In all Nash equilibria of this game V−1 plays 1/2, and the strategies of u−1 and u0 satisfy u0 = (x − x )u−1 + x .",
        "Consequently, in all Nash equilibria we have u0 ∈ [x , x ]. 165 PROOF.",
        "The proof is similar to that of Claim 2.",
        "Let f(u−1) = (x − x )u−1 + x .",
        "Clearly, the player V−1 is indifferent between playing 0 and 1 if and only if u0 = f(u−1).",
        "Suppose that v−1 < 1/2.",
        "Then U0 strictly prefers to play 1, i.e., u0 = 1, so we have P1 (V−1) = P0 (V−1) + 1 − (x − x )u−1 − x .",
        "As 1 − x ≤ 1 − (x − x )u−1 − x ≤ 1 − x for u−1 ∈ [0, 1] and x < 1, we have P1 (V−1) > P0 (V−1), so V−1 prefers to play 1, a contradiction.",
        "Similarly, if v−1 > 1/2, the player U0 strictly prefers to play 0, i.e., u0 = 0, so we have P1 (V−1) = P0 (V−1) − (x − x )u−1 − x .",
        "As x < x , x > 0, we have P1 (V−1) < P0 (V−1), so V−1 prefers to play 0, a contradiction.",
        "Finally, if V−1 plays 1/2, but u0 = f(u−1), player V−1 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
        "Also, note that f(0) = x , f(1) = x , and, moreover, f(u−1) ∈ [x , x ] if and only if u−1 ∈ [0, 1].",
        "Hence, in all Nash equilibria of this game we have u0 ∈ [x , x ].",
        "CLAIM 4.",
        "In all Nash equilibria of this game for each i = 0, . . . , k − 1, we have vi = 1/2, and the strategies of the players Ui and Ui+1 satisfy ui+1 = fi(ui), where f0(u) = u/(u + 1) and fi(u) = 1/(2 − u) for i > 0.",
        "PROOF.",
        "The proof of this claim is also similar to that of Claim 2.",
        "We use induction on i to prove that the statement of the claim is true and, additionally, ui = 1 for i > 0.",
        "For the base case i = 0, note that u0 = 0 by the previous claim (recall that x , x are selected so that x , x = 0, 1) and consider the triple (U0, V0, U1).",
        "Let v0 be the strategy of V0.",
        "First, suppose that v0 > 1/2.",
        "Then U1 strictly prefers to play 0, i.e., u1 = 0.",
        "Then for V0 we have P1 (V0) = P0 (V0) − u0.",
        "As u0 = 0, we have P1 (V0) < P0 (V0), which implies v1 = 0, a contradiction.",
        "Similarly, if v0 < 1/2, player U1 prefers to play 1, so we have u1 = 1.",
        "Hence, P1 (V0) = P0 (V0) + 1.",
        "It follows that P1 (V0) > P0 (V0), which implies v0 = 1, a contradiction.",
        "Finally, if v0 = 1/2, but u1 = u0/(u0 + 1), player V0 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
        "Moreover, as u1 = u0/(u0 + 1) and u0 ∈ [0, 1], we have u1 = 1.",
        "The argument for the inductive step is similar.",
        "Namely, suppose that the statement is proved for all i < i and consider the triple (Ui, Vi, Ui+1).",
        "Let vi be the strategy of Vi.",
        "First, suppose that vi > 1/2.",
        "Then Ui+1 strictly prefers to play 0, i.e., ui+1 = 0.",
        "Then for Vi we have P1 (Vi) = P0 (Vi)−1, i.e., P1 (Vi) < P0 (Vi), which implies vi = 0, a contradiction.",
        "Similarly, if vi < 1/2, player Ui+1 prefers to play 1, so we have ui+1 = 1.",
        "Hence, P1 (Vi) = P0 (Vi) + 1 − ui.",
        "By inductive hypothesis, we have ui < 1.",
        "Consequently, P1 (Vi) > P0 (Vi), which implies vi = 1, a contradiction.",
        "Finally, if vi = 1/2, but ui+1 = 1/(2 − ui), player Vi is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
        "Moreover, as ui+1 = 1/(2 − ui) and ui < 1, we have ui+1 < 1.",
        "CLAIM 5.",
        "Any strategy profile of the form (u−1, 1/2, u0, 1/2, u1, 1/2, . . . , uk−1, 1/2, uk), where u−1 ∈ [0, 1], u0 = (x − x )u−1 + x , u1 = u0/(u0 + 1), and ui+1 = 1/(2 − ui) for i ≥ 1 constitutes a Nash equilibrium.",
        "PROOF.",
        "First, the player U−1s payoffs do not depend on other players actions, so he is free to play any strategy in [0, 1].",
        "As long as u0 = (x −x )u−1 +x , player V−1 is indifferent between 0 and 1, so he is content to play 1/2; a similar argument applies to players V0, . . . , Vk−1.",
        "Finally, for each i = 0, . . . , k, the payoffs of player Ui only depend on the strategy of player Vi−1.",
        "In particular, as long as vi−1 = 1/2, player Ui is indifferent between playing 0 and 1, so he can play any mixed strategy ui ∈ [0, 1].",
        "To complete the proof, note that (x − x )u−1 + x ∈ [0, 1] for all u−1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] for all u0 ∈ [0, 1], and 1/(2 − ui) ∈ [0, 1] for all ui ∈ [0, 1], so we have ui ∈ [0, 1] for all i = 0, . . . , k. Now, let us compute the total payoff under a strategy profile of the form given in Claim 5.",
        "The payoff to U−1 is 0, and the expected payoff to each of the Ui, i = 0, . . . , k, is 1/2.",
        "The expected payoffs to V−1 and V0 are 0.",
        "Finally, for any i = 1, . . . , k − 1, the expected payoff to Vi is Ti = Aiuiui+1 − Aiui+1.",
        "It follows that to find a Nash equilibrium with the highest total payoff, we have to maximize Pk−1 i=1 Ti subject to conditions u−1 ∈ [0, 1], u0 = (x −x )u−1+x , u1 = u0/(u0+1), and ui+1 = 1/(2−ui) for i = 1, . . . , k − 1.",
        "We would like to express Pk−1 i=1 Ti as a function of u0.",
        "To simplify notation, set u = u0.",
        "LEMMA 2.",
        "For i = 1, . . . , k, we have ui = u+i−1 u+i .",
        "PROOF.",
        "The proof is by induction on i.",
        "For i = 1, we have u1 = u/(u + 1).",
        "Now, for i ≥ 2 suppose that ui−1 = (u + i − 2)/(u + i − 1).",
        "We have ui = 1/(2 − ui−1) = (u + i − 1)/(2u + 2i − 2 − u − i + 2) = (u + i − 1)/(u + i).",
        "It follows that for i = 1, . . . , k − 1 we have Ti = Ai u + i − 1 u + i u + i u + i + 1 − Ai u + i u + i + 1 = −Ai 1 u + i + 1 = Ki+1 u + i + 1 .",
        "Observe that as u−1 varies from 0 to 1, u varies from x to x .",
        "Therefore, to maximize the total payoff, we have to choose u ∈ [x , x ] so as to maximize K2 u + 2 + · · · + Kk u + k = R(u).",
        "By construction, the only maximum of R(u) on [x , x ] is α.",
        "It follows that in the payoff-maximizing Nash equilibrium of our game U0 plays α.",
        "Finally, note that the payoffs in our game are rational rather than integer.",
        "However, it is easy to see that we can multiply all payoffs to a player by their greatest common denominator without affecting his strategy.",
        "In the resulting game, all payoffs are integer.",
        "This concludes the proof of Theorem 2. 4.",
        "APPROXIMATING THE SOCIALLY OPTIMAL NASH EQUILIBRIUM We have seen that the Nash equilibrium that maximizes the social welfare may involve strategies that are not in Q.",
        "Hence, in this section we focus on finding a Nash equilibrium that is almost optimal from the social welfare perspective.",
        "We propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within from optimal.",
        "The running time of this algorithm is polynomial in 1/ , n and |Pmax| (recall that Pmax is the maximum absolute value of an entry of a payoff matrix).",
        "While the negative result of the previous section is for graphical games on paths, our algorithm applies to a wider range of scenarios.",
        "Namely, it runs in polynomial time on bounded-degree trees 166 as long as the best response policy of each vertex, given its parent, can be represented as a union of a polynomial number of rectangles.",
        "Note that path graphs always satisfy this condition: in [9] we showed how to compute such a representation, given a graph with maximum degree 2.",
        "Consequently, for path graphs the running time of our algorithm is guaranteed to be polynomial. (Note that [9] exhibits a family of graphical games on bounded-degree trees for which the best response policies of some of the vertices, given their parents, have exponential size, when represented as unions of rectangles.)",
        "Due to space restrictions, in this version of the paper we present the algorithm for the case where the graph underlying the graphical game is a path.",
        "We then state our result for the general case; the proof can be found in the full version of this paper [10].",
        "Suppose that s is a strategy profile for a graphical game G. That is, s assigns a mixed strategy to each vertex of G. let EPV (s) be the expected payoff of player V under s and let EP(s) =P V EPV (s).",
        "Let M(G) = max{EP(s) | s is a Nash equilibrium for G}.",
        "THEOREM 3.",
        "Suppose that G is a graphical game on an nvertex path.",
        "Then for any > 0 there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G)− .",
        "The running time of the algorithm is O(n4 P3 max/ 3 ) PROOF.",
        "Let {V1, . . . , Vn} be the set of all players.",
        "We start by constructing the best response policies for all Vi, i = 1, . . . , n − 1.",
        "As shown in [9], this can be done in time O(n3 ).",
        "Let N > 5n be a parameter to be selected later, set δ = 1/N, and define X = {jδ | j = 0, . . . , N}.",
        "We say that vj is an event point for a player Vi if it is a Vi-event point for B(Vi, Vi−1) or B(Vi+1, Vi).",
        "For each player Vi, consider a finite set of strategies Xi given by Xi = X ∪ {vj |vj is an event point for Vi}.",
        "It has been shown in [9] that for any i = 2, . . . , n, the best response policy B(Vi, Vi−1) has at most 2n + 4 Vi-event points.",
        "As we require N > 5n, we have |Xi| ≤ 2N; assume without loss of generality that |Xi| = 2N.",
        "Order the elements of Xi in increasing order as x1 i = 0 < x2 i < · · · < x2N i .",
        "We will refer to the strategies in Xi as discrete strategies of player Vi; a strategy profile in which each player has a discrete strategy will be referred to as a discrete strategy profile.",
        "We will now show that even we restrict each player Vi to strategies from Xi, the players can still achieve a Nash equilibrium, and moreover, the best such Nash equilibrium (with respect to the social welfare) has total payoff at least M(G) − as long as N is large enough.",
        "Let s be a strategy profile that maximizes social welfare.",
        "That is, let s = (s1, . . . , sn) where si is the mixed strategy of player Vi and EP(s) = M(G).",
        "For i = 1, . . . , n, let ti = max{xj i | xj i ≤ si}.",
        "First, we will show that the strategy profile t = (t1, . . . , tn) is a Nash equilibrium for G. Fix any i, 1 < i ≤ n, and let R = [v1, v2]×[u1, u2] be the rectangle in B(Vi, Vi−1) that contains (si, si−1).",
        "As v1 is a Vi-event point of B(Vi, Vi−1), we have v1 ≤ ti, so the point (ti, si−1) is inside R. Similarly, the point u1 is a Vi−1-event point of B(Vi, Vi−1), so we have u1 ≤ ti−1, and therefore the point (ti, ti−1) is inside R. This means that for any i, 1 < i ≤ n, we have ti−1 ∈ pbrVi−1 (ti), which implies that t = (t1, . . . , tn) is a Nash equilibrium for G. Now, let us estimate the expected loss in social welfare caused by playing t instead of s. LEMMA 3.",
        "For any pair of strategy profiles t, s such that |ti − si| ≤ δ we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ for any i = 1, . . . , n. PROOF.",
        "Let Pi klm be the payoff of the player Vi, when he plays k, Vi−1 plays l, and Vi+1 plays m. Fix i = 1, . . . , n and for k, l, m ∈ {0, 1}, set tklm = tk i−1(1 − ti−1)1−k tl i(1 − ti)1−l tm i+1(1 − ti+1)1−m sklm = sk i−1(1 − si−1)1−k sl i(1 − si)1−l sm i+1(1 − si+1)1−m .",
        "We have |EPVi (s) − EPVi (t)| ≤ X k,l,m=0,1 |Pi klm(tklm − sklm )| ≤ 8Pmax max klm |tklm − sklm | We will now show that for any k, l, m ∈ {0, 1} we have |tklm − sklm | ≤ 3δ; clearly, this implies the lemma.",
        "Indeed, fix k, l, m ∈ {0, 1}.",
        "Set x = tk i−1(1 − ti−1)1−k , x = sk i−1(1 − si−1)1−k , y = tl i(1 − ti)1−l , y = sl i(1 − si)1−l , z = tm i+1(1 − ti+1)1−m , z = sm i+1(1 − si+1)1−m .",
        "Observe that if k = 0 then x − x = (1 − ti−1) − (1 − si−1), and if k = 1 then x − x = ti−1 − si−1, so |x − x | ≤ δ.",
        "A similar argument shows |y − y | ≤ δ, |z − z | ≤ δ.",
        "Also, we have x, x , y, y , z, z ∈ [0, 1].",
        "Hence, |tklm −sklm | = |xyz−x y z | = |xyz − x yz + x yz − x y z + x y z − x y z | ≤ |x − x |yz + |y − y |x z + |z − z |x y ≤ 3δ.",
        "Lemma 3 implies Pn i=1 |EPVi (s) − EPVi (t)| ≤ 24nPmaxδ, so by choosing δ < /(24nPmax), or, equivalently, setting N > 24nPmax/ , we can ensure that the total expected payoff for the strategy profile t is within from optimal.",
        "We will now show that we can find the best discrete Nash equilibrium (with respect to the social welfare) using dynamic programming.",
        "As t is a discrete strategy profile, this means that the strategy profile found by our algorithm will be at least as good as t. Define ml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj , j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1, and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
        "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
        "The values ml,k i , i = 1, . . . , n; k, l = 1, . . . , N, can be computed inductively, as follows.",
        "We have ml,k 1 = 0 for k, l = 1, . . . , N. Now, suppose that we have already computed ml,k j for all j < i; k, l = 1, . . . , N. To compute mk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
        "If this is not the case, we have ml,k i = −∞.",
        "Otherwise, consider the set Y = Xi−2 ∩ pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
        "The proof of Theorem 1 in [9] implies that the set pbrVi−2 (xl i−1) is non-empty: the player Vi−2 has a potential best response to any strategy of Vi−1, in particular, xl i−1.",
        "By construction of the set Xi−2, this implies that Y is not empty.",
        "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
        "Clearly, pjlk can be computed in constant time.",
        "Then we have ml,k i = max{mj,l i−1 + pjlk | xj i−2 ∈ Y }.",
        "Finally, suppose that we have computed ml,k n for l, k = 1, . . . , N. We still need to take into account the payoff of player Vn.",
        "Hence, 167 we consider all pairs (xk n, xl n−1) that satisfy xl n−1 ∈ pbrVn−1 (xk n), and pick the one that maximizes the sum of mk,l n and the payoff of Vn when he plays xk n and Vn−1 plays xl n−1.",
        "This results in the maximum total payoff the players can achieve in a Nash equilibrium using discrete strategies; the actual strategy profile that produces this payoff can be reconstructed using standard dynamic programming techniques.",
        "It is easy to see that each ml,k i can be computed in time O(N), i.e., all of them can be computed in time O(nN3 ).",
        "Recall that we have to select N ≥ (24nPmax)/ to ensure that the strategy profile we output has total payoff that is within from optimal.",
        "We conclude that we can compute an -approximation to the best Nash equilibrium in time O(n4 P3 max/ 3 ).",
        "This completes the proof of Theorem 3.",
        "To state our result for the general case (i.e., when the underlying graph is a bounded-degree tree rather than a path), we need additional notation.",
        "If G has n players, let q(n) be an upper bound on the number of event points in the representation of any best response policy.",
        "That is, we assume that for any vertex U with parent V , B(V, U) has at most q(n) event points.",
        "We will be interested in the situation in which q(n) is polynomial in n. THEOREM 4.",
        "Let G be an n-player graphical game on a tree in which each node has at most Δ children.",
        "Suppose we are given a set of best-response policies for G in which each best-response policy B(V, U) is represented by a set of rectangles with at most q(n) event points.",
        "For any > 0, there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G) − .",
        "The running time of the algorithm is polynomial in n, Pmax and −1 provided that the tree has bounded degree (that is, Δ = O(1)) and q(n) is a polynomial in n. In particular, if N = max((Δ + 1)q(n) + 1, n2Δ+2 (Δ + 2)Pmax −1 ) and Δ > 1 then the running time is O(nΔ(2N)Δ .",
        "For the proof of this theorem, see [10]. 4.1 A polynomial-time algorithm for multiplicative approximation The running time of our algorithm is pseudopolynomial rather than polynomial, because it includes a factor which is polynomial in Pmax, the maximum (in absolute value) entry in any payoff matrix.",
        "If we are interested in multiplicative approximation rather than additive one, this can be improved to polynomial.",
        "First, note that we cannot expect a multiplicative approximation for all inputs.",
        "That is, we cannot hope to have an algorithm that computes a Nash equilibrium with total payoff at least (1 − )M(G).",
        "If we had such an algorithm, then for graphical games G with M(G) = 0, the algorithm would be required to output the optimal solution.",
        "To show that this is infeasible, observe that we can use the techniques of Section 3.2 to construct two integercoefficient graphical games on paths of length O(n) such that for some X ∈ R the maximal total payoff in the first game is X, the maximal total payoff in the second game is −X, and for both games, the strategy profiles that achieve the maximal total payoffs involve algebraic numbers of degree n. By combining the two games so that the first vertex of the second game becomes connected to the last vertex of the first game, but the payoffs of all players do not change, we obtain a graphical game in which the best Nash equilibrium has total payoff 0, yet the strategies that lead to this payoff have high algebraic complexity.",
        "However, we can achieve a multiplicative approximation when all entries of the payoff matrices are positive and the ratio between any two entries is polynomially bounded.",
        "Recall that we assume that all payoffs are integer, and let Pmin > 0 be the smallest entry of any payoff matrix.",
        "In this case, for any strategy profile the payoff to player i is at least Pmin, so the total payoff in the social-welfare maximizing Nash equilibrium s satisfies M(G) ≥ nPmin.",
        "Moreover, Lemma 3 implies that by choosing δ < /(24Pmax/Pmin), we can ensure that the Nash equilibrium t produced by our algorithm satisfies nX i=1 EPVi (s) − nX i=1 EPVi (t) ≤ 24Pmaxδn ≤ nPmin ≤ M(G), i.e., for this value of δ we have Pn i=1 EPVi (t) ≥ (1 − )M(G).",
        "Recall that the running time of our algorithm is O(nN3 ), where N has to be selected to satisfy N > 5n, N = 1/δ.",
        "It follows that if Pmin > 0, Pmax/Pmin = poly(n), we can choose N so that our algorithm provides a multiplicative approximation guarantee and runs in time polynomial in n and 1/ . 5.",
        "BOUNDED PAYOFF NASH EQUILIBRIA Another natural way to define what is a good Nash equilibrium is to require that each players expected payoff exceeds a certain threshold.",
        "These thresholds do not have to be the same for all players.",
        "In this case, in addition to the payoff matrices of the n players, we are given n numbers T1, . . . , Tn, and our goal is to find a Nash equilibrium in which the payoff of player i is at least Ti, or report that no such Nash equilibrium exists.",
        "It turns out that we can design an FPTAS for this problem using the same techniques as in the previous section.",
        "THEOREM 5.",
        "Given a graphical game G on an n-vertex path and n rational numbers T1, . . . , Tn, suppose that there exists a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. Then for any > 0 we can find in time O(max{nP3 max/ 3 , n4 / 3 }) a strategy profile s such that s is a Nash equilibrium for G and EPVi (s ) ≥ Ti − for i = 1, . . . , n. PROOF.",
        "The proof is similar to that of Theorem 3.",
        "First, we construct the best response policies for all players, choose N > 5n, and construct the sets Xi, i = 1, . . . , n, as described in the proof of Theorem 3.",
        "Consider a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. We construct a strategy profile ti = max{xj i | xj i ≤ si} and use the same argument as in the proof of Theorem 3 to show that t is a Nash equilibrium for G. By Lemma 3, we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ, so choosing δ < /(24Pmax), or, equivalently, N > max{5n, 24Pmax/ }, we can ensure EPVi (t) ≥ Ti − for i = 1, . . . , n. Now, we will use dynamic programming to find a discrete Nash equilibrium that satisfies EPVi (t) ≥ Ti − for i = 1, . . . , n. As t is a discrete strategy profile, our algorithm will succeed whenever there is a strategy profile s with EPVi (s) ≥ Ti− for i = 1, . . . , n. Let zl,k i = 1 if there is a discrete strategy profile such that for any j < i the strategy of the player Vj is a potential best response to the strategy of Vj+1, the expected payoff of Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
        "Otherwise, let zl,k i = 0.",
        "We can compute zl,k i , i = 1, . . . , n; k, l = 1, . . . , N inductively, as follows.",
        "We have zl,k 1 = 1 for k, l = 1, . . . , N. Now, suppose that we have already computed zl,k j for all j < i; k, l = 1, . . . , N. To compute zk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
        "If this 168 is not the case, clearly, zk,l i = 0.",
        "Otherwise, consider the set Y = Xi−2 ∩pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
        "It has been shown in the proof of Theorem 3 that Y = ∅.",
        "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
        "Clearly, pjlk can be computed in constant time.",
        "If there exists an xj i−2 ∈ Y such that zj,l i−1 = 1 and pjlk ≥ Ti−2 − , set zl,k i = 1.",
        "Otherwise, set zl,k i = 0.",
        "Having computed zl,k n , l, k = 1, . . . , N, we check if zl,k n = 1 for some pair (l, k). if such a pair of indices exists, we instruct Vn to play xk n and use dynamic programming techniques (or, equivalently, the downstream pass of the algorithm of [13]) to find a Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n (recall that Vn is a dummy player, i.e., we assume Tn = 0, EPn(s ) = 0 for any choice of s ).",
        "If zl,k n = 0 for all l, k = 1, . . . , N, there is no discrete Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n and hence no Nash equilibrium s (not necessarily discrete) such that EPVi (s) ≥ Ti for i = 1, . . . , n. The running time analysis is similar to that for Theorem 3; we conclude that the running time of our algorithm is O(nN3 ) = O(max{nP3 max/ 3 , n4 / 3 }).",
        "REMARK 1.",
        "Theorem 5 can be extended to trees of bounded degree in the same way as Theorem 4. 5.1 Exact Computation Another approach to finding Nash equilibria with bounded payoffs is based on inductively computing the subsets of the best response policies of all players so as to exclude the points that do not provide sufficient payoffs to some of the players.",
        "Formally, we say that a strategy v of the player V is a potential best response to a strategy w of its parent W with respect to a threshold vector T = (T1, . . . , Tn), (denoted by v ∈ pbrV (w, T)) if there is an equilibrium in the instance G(V,W ),W =w in which V plays mixed strategy v and the payoff to any player Vi downstream of V (including V ) is at least Ti.",
        "The best response policy for V with respect to a threshold vector T is defined as B(W, V, T) = {(w, v) | v ∈ pbrV (w, T), w ∈ [0, 1]}.",
        "It is easy to see that if any of the sets B(Vj, Vj−1, T), j = 1, . . . , n, is empty, it means that it is impossible to provide all players with expected payoffs prescribed by T. Otherwise, one can apply the downstream pass of the original algorithm of [13] to find a Nash equilibrium.",
        "As we assume that Vn is a dummy vertex whose payoff is identically 0, the Nash equilibrium with these payoffs exists as long as Tn ≤ 0 and B(Vn, Vn−1, T) is not empty.",
        "Using the techniques developed in [9], it is not hard to show that for any j = 1, . . . , n, the set B(Vj , Vj−1, T) consists of a finite number of rectangles, and one can compute B(Vj+1, Vj , T) given B(Vj , Vj−1, T).",
        "The advantage of this approach is that it allows us to represent all Nash equilibria that provide required payoffs to the players.",
        "However, it is not likely to be practical, since it turns out that the rectangles that appear in the representation of B(Vj , Vj−1, T) may have irrational coordinates.",
        "CLAIM 6.",
        "There exists a graphical game G on a 3-vertex path UV W and a vector T = (T1, T2, T3) such that B(V, W, T) cannot be represented as a union of a finite number of rectangles with rational coordinates.",
        "PROOF.",
        "We define the payoffs to the players in G as follows.",
        "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
        "Using Claim 1, we select the payoffs to V so that P0 (V ) = uw, P1 (V ) = P0 (V ) + w − .8u − .1, where u and w are the (mixed) strategies of U and W , respectively.",
        "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = .8u + .1; observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
        "It is not hard to see that we have B(W, V ) = [0, .1]×{0} ∪ [.1, .9]×[0, 1] ∪ [.9, 1]×{1}.",
        "The payoffs to W are not important for our construction; for example, set P0(W ) = P0(W ) = 0.",
        "Now, set T = (0, 1/8, 0), i.e., we are interested in Nash equilibria in which V s expected payoff is at least 1/8.",
        "Suppose w ∈ [0, 1].",
        "The player V can play a mixed strategy v when W is playing w as long as U plays u = f−1 (w) = 5w/4 − 1/8 (to ensure that V is indifferent between 0 and 1) and P0 (V ) = P1 (V ) = uw = w(5w/4 − 1/8) ≥ 1/8.",
        "The latter condition is satisfied if w ≤ (1 − √ 41)/20 < 0 or w ≥ (1 + √ 41)/20.",
        "Note that we have .1 < (1 + √ 41)/20 < .9.",
        "For any other value of w, any strategy of U either makes V prefer one of the pure strategies or does not provide it with a sufficient expected payoff.",
        "There are also some values of w for which V can play a pure strategy (0 or 1) as a potential best response to W and guarantee itself an expected payoff of at least 1/8; it can be shown that these values of w form a finite number of segments in [0, 1].",
        "We conclude that any representation of B(W, V, T) as a union of a finite number of rectangles must contain a rectangle of the form [(1 + √ 41)/20, w ]×[v , v ] for some w , v , v ∈ [0, 1].",
        "On the other hand, it can be shown that for any integer payoff matrices and threshold vectors and any j = 1, . . . , n − 1, the sets B(Vj+1, Vj, T) contain no rectangles of the form [u , u ]×{v} or {v}×[w , w ], where v ∈ R\\Q.",
        "This means that if B(Vn, Vn−1, T) is non-empty, i.e., there is a Nash equilibrium with payoffs prescribed by T, then the downstream pass of the algorithm of [13] can always pick a strategy profile that forms a Nash equilibrium, provides a payoff of at least Ti to the player Vi, and has no irrational coordinates.",
        "Hence, unlike in the case of the Nash equilibrium that maximizes the social welfare, working with irrational numbers is not necessary, and the fact that the algorithm discussed in this section has to do so can be seen as an argument against using this approach. 6.",
        "OTHER CRITERIA FOR SELECTING A NASH EQUILIBRIUM In this section, we consider several other criteria that can be useful in selecting a Nash equilibrium. 6.1 Combining welfare maximization with bounds on payoffs In many real life scenarios, we want to maximize the social welfare subject to certain restrictions on the payoffs to individual players.",
        "For example, we may want to ensure that no player gets a negative expected payoff, or that the expected payoff to player i is at least Pi max − ξ, where Pi max is the maximum entry of is payoff matrix and ξ is a fixed parameter.",
        "Formally, given a graphical game G and a vector T1, . . . , Tn, let S be the set of all Nash equilibria s of G that satisfy Ti ≤ EPVi (s) for i = 1, . . . , n, and let ˆs = argmaxs∈S EP(s).",
        "If the set S is non-empty, we can find a Nash equilibrium ˆs that is -close to satisfying the payoff bounds and is within from ˆs with respect to the total payoff by combining the algorithms of Section 4 and Section 5.",
        "Namely, for a given > 0, choose δ as in the proof of Theorem 3, and let Xi be the set of all discrete strategies of player Vi (for a 169 formal definition, see the proof of Theorem 3).",
        "Combining the proofs of Theorem 3 and Theorem 5, we can see that the strategy profile ˆt given by ˆti = max{xj i | xj i ≤ ˆsi} satisfies EPVi (ˆt) ≥ Ti − , |EP(ˆs) − EP(ˆt)| ≤ .",
        "Define ˆml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj, j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1 and the payoff to player Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
        "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
        "The ˆml,k i can be computed by dynamic programming similarly to the ml,k i and zl,k i in the proofs of Theorems 3 and 5.",
        "Finally, as in the proof of Theorem 3, we use ml,k n to select the best discrete Nash equilibrium subject to the payoff constraints.",
        "Even more generally, we may want to maximize the total payoff to a subset of players (who are assumed to be able to redistribute the profits fairly among themselves) while guaranteeing certain expected payoffs to (a subset of) the other players.",
        "This problem can be handled similarly. 6.2 A minimax approach A more egalitarian measure of the quality of a Nash equilibrium is the minimal expected payoff to a player.",
        "The optimal solution with respect to this measure is a Nash equilibrium in which the minimal expected payoff to a player is maximal.",
        "To find an approximation to such a Nash equilibrium, we can combine the algorithm of Section 5 with binary search on the space of potential lower bounds.",
        "Note that the expected payoff to any player Vi given a strategy s always satisfies −Pmax ≤ EPVi (s) ≤ Pmax.",
        "For a fixed > 0, we start by setting T = −Pmax, T = Pmax, T∗ = (T + T )/2.",
        "We then run the algorithm of Section 5 with T1 = · · · = Tn = T∗ .",
        "If the algorithm succeeds in finding a Nash equilibrium s that satisfies EPVi (s ) ≥ T∗ − for all i = 1, . . . , n, we set T = T∗ , T∗ = (T + T )/2; otherwise, we set T = T∗ , T∗ = (T + T )/2 and loop.",
        "We repeat this process until |T − T | ≤ .",
        "It is not hard to check that for any p ∈ R, if there is a Nash equilibrium s such that mini=1,...,n EPVi (s) ≥ p, then our algorithm outputs a Nash equilibrium s that satisfies mini=1,...,n EPVi (s) ≥ p−2 .",
        "The running time of our algorithm is O(max{nP3 max log −1 / 3 , n4 log −1 / 3 }). 6.3 Equalizing the payoffs When the players payoff matrices are not very different, it is reasonable to demand that the expected payoffs to the players do not differ by much either.",
        "We will now show that Nash equilibria in this category can be approximated in polynomial time as well.",
        "Indeed, observe that the algorithm of Section 5 can be easily modified to deal with upper bounds on individual payoffs rather than lower bounds.",
        "Moreover, we can efficiently compute an approximation to a Nash equilibrium that satisfies both the upper bound and the lower bound for each player.",
        "More precisely, suppose that we are given a graphical game G, 2n rational numbers T1, . . . , Tn, T1, . . . , Tn and > 0.",
        "Then if there exists a strategy profile s such that s is a Nash equilibrium for G and Ti ≤ EPVi (s) ≤ Ti for i = 1, . . . , n, we can find a strategy profile s such that s is a Nash equilibrium for G and Ti − ≤ EPVi (s ) ≤ Ti + for i = 1, . . . , n. The modified algorithm also runs in time O(max{nP3 max/ 3 , [4]n4 / 3 }).",
        "This observation allows us to approximate Nash equilibria in which all players expected payoffs differ by at most ξ for any fixed ξ > 0.",
        "Given an > 0, we set T1 = · · · = Tn = −Pmax, T1 = · · · = Tn = −Pmax + ξ + , and run the modified version of the algorithm of Section 5.",
        "If it fails to find a solution, we increment all Ti, Ti by and loop.",
        "We continue until the algorithm finds a solution, or Ti ≥ Pmax.",
        "Suppose that there exists a Nash equilibrium s that satisfies |EPVi (s) − EPVj (s)| ≤ ξ for all i, j = 1, . . . , n. Set r = mini=1,...,n EPVi (s); we have r ≤ EPVi (s) ≤ r + ξ for all i = 1, . . . , n. There exists a k ≥ 0 such that −Pmax + (k − 1) ≤ r ≤ −Pmax + k .",
        "During the kth step of the algorithm, we set T1 = · · · = Tn = −Pmax +(k−1) , i.e., we have r− ≤ Ti ≤ r, r + ξ ≤ Ti ≤ r + ξ + .",
        "That is, the Nash equilibrium s satisfies Ti ≤ r ≤ EPVi (s) ≤ r + ξ ≤ Ti , which means that when Ti is set to −Pmax + (k − 1) , our algorithm is guaranteed to output a Nash equilibrium t that satisfies r − 2 ≤ Ti − ≤ EPVi (t) ≤ Ti + ≤ r +ξ +2 .",
        "We conclude that whenever such a Nash equilibrium s exists, our algorithm outputs a Nash equilibrium t that satisfies |EPVi (t) − EPVj (t)| ≤ ξ + 4 for all i, j = 1, . . . , n. The running time of this algorithm is O(max{nP3 max/ 4 , n4 / 4 }).",
        "Note also that we can find the smallest ξ for which such a Nash equilibrium exists by combining this algorithm with binary search over the space ξ = [0, 2Pmax].",
        "This identifies an approximation to the fairest Nash equilibrium, i.e., one in which the players expected payoffs differ by the smallest possible amount.",
        "Finally, note that all results in this section can be extended to bounded-degree trees. 7.",
        "CONCLUSIONS We have studied the problem of equilibrium selection in graphical games on bounded-degree trees.",
        "We considered several criteria for selecting a Nash equilibrium, such as maximizing the social welfare, ensuring a lower bound on the expected payoff of each player, etc.",
        "First, we focused on the algebraic complexity of a social welfare-maximizing Nash equilibrium, and proved strong negative results for that problem.",
        "Namely, we showed that even for graphical games on paths, any algebraic number α ∈ [0, 1] may be the only strategy available to some player in all social welfaremaximizing Nash equilibria.",
        "This is in sharp contrast with the fact that graphical games on trees always possess a Nash equilibrium in which all players strategies are rational numbers.",
        "We then provided approximation algorithms for selecting Nash equilibria with special properties.",
        "While the problem of finding approximate Nash equilibria for various classes of games has received a lot of attention in recent years, most of the existing work aims to find -Nash equilibria that satisfy (or are -close to satisfying) certain properties.",
        "Our approach is different in that we insist on outputting an exact Nash equilibrium, which is -close to satisfying a given requirement.",
        "As argued in the introduction, there are several reasons to prefer a solution that constitutes an exact Nash equilibrium.",
        "Our algorithms are fully polynomial time approximation schemes, i.e., their running time is polynomial in the inverse of the approximation parameter , though they may be pseudopolynomial with respect to the input size.",
        "Under mild restrictions on the inputs, they can be modified to be truly polynomial.",
        "This is the strongest positive result one can derive for a problem whose exact solutions may be hard to represent, as is the case for many of the problems considered here.",
        "While we prove our results for games on a path, they can be generalized to any tree for which the best response policies have compact representations as unions of rectangles.",
        "In the full version of the paper we describe our algorithms for the general case.",
        "Further work in this vein could include extensions to the kinds of guarantees sought for Nash equilibria, such as guaranteeing total payoffs for subsets of players, selecting equilibria in which some players are receiving significantly higher payoffs than their peers, etc.",
        "At the moment however, it is perhaps more important to inves170 tigate whether Nash equilibria of graphical games can be computed in a decentralized manner, in contrast to the algorithms we have introduced here.",
        "It is natural to ask if our results or those of [9] can be generalized to games with three or more actions.",
        "However, it seems that this will make the analysis significantly more difficult.",
        "In particular, note that one can view the bounded payoff games as a very limited special case of games with three actions per player.",
        "Namely, given a two-action game with payoff bounds, consider a game in which each player Vi has a third action that guarantees him a payoff of Ti no matter what everyone else does.",
        "Then checking if there is a Nash equilibrium in which none of the players assigns a nonzero probability to his third action is equivalent to checking if there exists a Nash equilibrium that satisfies the payoff bounds in the original game, and Section 5.1 shows that finding an exact solution to this problem requires new ideas.",
        "Alternatively it may be interesting to look for similar results in the context of correlated equilibria (CE), especially since the best CE may have higher value (total expected payoff) than the best NE.",
        "The ratio between these values is called the mediation value in [1].",
        "It is known from [1] that the mediation value of 2-player, 2-action games with non-negative payoffs is at most 4 3 , and they exhibit a 3-player game for which it is infinite.",
        "Furthermore, a 2-player, 3action example from [1] also has infinite mediation value. 8.",
        "REFERENCES [1] I. Ashlagi, D. Monderer and M. Tenneholtz, On the Value of Correlation, Proceedings of Dagstuhl seminar 05011 (2005) [2] R. Aumann, Subjectivity and Correlation in Randomized Strategies, Journal of Mathematical Economics 1 pp. 67-96 (1974) [3] B. Blum, C. R. Shelton, and D. Koller, A Continuation Method for Nash Equilibria in Structured Games, Proceedings of IJCAI03 [4] X. Chen, X. Deng and S. Teng, Computing Nash Equilibria: Approximation and Smoothed Complexity, Proceedings of FOCS06 [5] X. Chen, X. Deng, Settling the Complexity of 2-Player Nash-Equilibrium, Proceedings of FOCS06 [6] V. Conitzer and T. Sandholm, Complexity Results about Nash Equilibria, Proceedings of IJCAI03 [7] C. Daskalakis, P. W. Goldberg and C. H. Papadimitriou, The Complexity of Computing a Nash Equilibrium, Proceedings of STOC06 [8] R. S. Datta, Universality of Nash Equilibria, Mathematics of Operations Research 28:3, 2003 [9] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Nash Equilibria in Graphical games on Trees Revisited, Proceedings of ACM EC06 [10] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Computing Good Nash Equilibria in Graphical Games, http://arxiv.org/abs/cs.GT/0703133 [11] I. Gilboa and E. Zemel, Nash and Correlated Equilibria: Some Complexity Considerations, Games and Economic Behavior, 1 pp. 80-93 (1989) [12] P. W. Goldberg and C. H. Papadimitriou, Reducibility Among Equilibrium Problems, Proceedings of STOC06 [13] M. Kearns, M. Littman, and S. Singh, Graphical Models for Game Theory, Proceedings of UAI01 [14] M. Littman, M. Kearns, and S. Singh, An Efficient Exact Algorithm for Singly Connected Graphical Games, Proceedings of NIPS01 [15] R. Lipton and E. Markakis, Nash Equilibria via Polynomial Equations, Proceedings of LATIN04 [16] L. Ortiz and M. Kearns, Nash Propagation for Loopy Graphical Games, Proceedings of NIPS03 [17] C.H.",
        "Papadimitriou, Computing Correlated Equilibria in Multi-Player Games, Proceedings of STOC05 [18] C.H.",
        "Papadimitriou and T. Roughgarden, Computing Equilibria in Multi-Player Games, Proceedings of SODA05 [19] D. Vickrey and D. Koller, Multi-agent Algorithms for Solving Graphical Games, Proceedings of AAAI02 171"
    ],
    "translated_text_sentences": [
        "Calcular buenos equilibrios de Nash en juegos gráficos ∗ Edith Elkind Universidad Hebrea de Jerusalén, Israel, y Universidad de Southampton, Southampton, SO17 1BJ, Reino Unido. Leslie Ann Goldberg Universidad de Liverpool Liverpool L69 3BX, Reino Unido. Paul Goldberg Universidad de Liverpool Liverpool L69 3BX, Reino Unido. RESUMEN Este artículo aborda el problema de la selección justa de equilibrios en juegos gráficos.",
        "Nuestro enfoque se basa en la estructura de datos llamada política de mejor respuesta, propuesta por Kearns et al. [13] como una forma de representar todos los equilibrios de Nash de un juego gráfico.",
        "En [9], se demostró que la política de mejor respuesta tiene un tamaño polinómico siempre y cuando el grafo subyacente sea un camino.",
        "En este artículo, demostramos que si el grafo subyacente es un árbol de grado acotado y la política de mejor respuesta tiene un tamaño polinómico, entonces existe un algoritmo eficiente que construye un equilibrio de Nash que garantiza ciertos pagos a todos los participantes.",
        "Otro concepto de solución atractivo es un equilibrio de Nash que maximiza el bienestar social.",
        "Mostramos que, si bien calcular exactamente lo último es inviable (demostramos que resolver este problema puede implicar números algebraicos de un grado arbitrariamente alto), existe un FPTAS para encontrar dicho equilibrio siempre y cuando la política de mejor respuesta tenga un tamaño polinómico.",
        "Estos dos algoritmos pueden combinarse para producir equilibrios de Nash que satisfacen varios criterios de equidad.",
        "Categorías y Descriptores de Asignaturas F.2 [Teoría de la Computación]: Análisis de Algoritmos y Complejidad de Problemas; J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento - Economía Términos Generales Algoritmos, Economía, Teoría 1.",
        "INTRODUCCIÓN En una gran comunidad de agentes, es poco probable que el comportamiento de un agente tenga un efecto directo en la mayoría de los otros agentes: más bien, solo serán afectados los agentes que estén lo suficientemente cerca de él.",
        "Sin embargo, a medida que estos agentes responden adaptando su comportamiento, más agentes sentirán las consecuencias y eventualmente las decisiones tomadas por un solo agente se propagarán por toda la comunidad.",
        "Esta es la intuición detrás de los juegos gráficos, los cuales fueron introducidos por Kearns, Littman y Singh en [13] como un esquema de representación compacto para juegos con muchos jugadores.",
        "En un juego gráfico de n jugadores, a cada jugador se le asocia un vértice de un grafo subyacente G, y las ganancias de cada jugador dependen de su acción, así como de las acciones de sus vecinos en el grafo.",
        "Si el grado máximo de G es Δ, y cada jugador tiene dos acciones disponibles, entonces el juego se puede representar usando n2Δ+1 números.",
        "Por el contrario, necesitamos n^2 números para representar un juego general de n jugadores y 2 acciones, lo cual solo es práctico para valores pequeños de n. Para juegos gráficos con Δ constante, el tamaño del juego es lineal en n. Uno de los problemas más naturales para un juego gráfico es el de encontrar un equilibrio de Nash, cuya existencia se deriva del célebre teorema de Nash (ya que los juegos gráficos son solo un caso especial de juegos de n jugadores).",
        "El primer intento de abordar este problema se realizó en [13], donde los autores consideran juegos gráficos con dos acciones por jugador en los que el grafo subyacente es un árbol de grado acotado.",
        "Proponen un algoritmo genérico para encontrar equilibrios de Nash que puede ser especializado de dos maneras: un algoritmo de tiempo exponencial para encontrar un equilibrio de Nash (exacto) y un esquema de aproximación de tiempo polinómico completo (FPTAS) para encontrar una aproximación a un equilibrio de Nash.",
        "Para cualquier > 0, este algoritmo produce un equilibrio de Nash, que es un perfil estratégico en el que ningún jugador puede mejorar su pago más que al cambiar unilateralmente su estrategia.",
        "Si bien los equilibrios de Nash aproximados suelen ser más fáciles de calcular que los equilibrios de Nash exactos, este concepto de solución tiene varias desventajas.",
        "Primero, es posible que los jugadores sean sensibles a una pequeña pérdida en las ganancias, por lo que el perfil estratégico que es un equilibrio de Nash no será estable.",
        "Esto será así incluso si solo hay un pequeño subconjunto de jugadores que son extremadamente sensibles al precio, y para una gran población de jugadores puede ser difícil elegir un valor que satisfaga a todos.",
        "Segundo, los perfiles estratégicos que están cerca de ser equilibrios de Nash pueden ser mucho mejores con respecto a las propiedades consideradas que los equilibrios de Nash exactos.",
        "Por lo tanto, la aproximación al valor de la mejor solución que corresponde a un equilibrio de Nash aproximado puede no ser indicativa de lo que se puede lograr bajo un equilibrio de Nash exacto.",
        "Esto es especialmente importante si el propósito de la solución aproximada es proporcionar un buen punto de referencia para un sistema de agentes egoístas, ya que el punto de referencia implícito por un equilibrio de Nash puede ser poco realista.",
        "Por estas razones, en este artículo nos enfocamos en el problema de calcular equilibrios de Nash exactos.",
        "Basándose en las ideas de [14], Elkind et al. [9] mostraron cómo encontrar un equilibrio de Nash (exacto) en tiempo polinómico cuando el grafo subyacente tiene grado 2 (es decir, cuando el grafo es una colección de caminos y ciclos).",
        "Por el contrario, encontrar un equilibrio de Nash en un grafo general con grado acotado parece ser computacionalmente intratable: se ha demostrado (ver [5, 12, 7]) que es completo para la clase de complejidad PPAD. [9] extiende este resultado de dificultad al caso en el que el grafo subyacente tiene un ancho de camino acotado.",
        "Un juego gráfico puede no tener un equilibrio de Nash único, de hecho, puede tener exponencialmente muchos.",
        "Además, algunos equilibrios de Nash son más deseables que otros.",
        "En lugar de tener un algoritmo que simplemente encuentre algún equilibrio de Nash, nos gustaría tener algoritmos para encontrar equilibrios de Nash con diversas propiedades socialmente deseables, como maximizar el pago total o distribuir las ganancias de manera justa.",
        "Una propiedad útil de la estructura de datos de [13] es que representa simultáneamente el conjunto de todos los equilibrios de Nash del juego subyacente.",
        "Si esta representación tiene tamaño polinómico (como es el caso de los caminos, como se muestra en [9]), se puede esperar extraer de ella un equilibrio de Nash con las propiedades deseadas.",
        "De hecho, en [13] los autores mencionan que esto es posible si uno está interesado en encontrar un equilibrio de Nash (aproximado).",
        "El objetivo de este artículo es extender esto a equilibrios de Nash exactos. 1.1 Nuestros Resultados En este artículo, estudiamos juegos gráficos de n jugadores y 2 acciones en árboles de grado acotado para los cuales la estructura de datos de [13] tiene tamaño polinómico en n.",
        "Nos enfocamos en el problema de encontrar equilibrios de Nash exactos con ciertas propiedades socialmente deseables.",
        "En particular, mostramos cómo encontrar un equilibrio de Nash que maximiza (casi) el bienestar social, es decir, la suma de las ganancias de los jugadores, y mostramos cómo encontrar un equilibrio de Nash que satisface (casi) los límites de ganancias prescritos para todos los jugadores.",
        "Los juegos gráficos en árboles de grado acotado tienen una estructura algebraica simple.",
        "Una característica atractiva, que se desprende de [13], es que cada juego de este tipo tiene un equilibrio de Nash en el cual la estrategia de cada jugador es un número racional.",
        "La sección 3 estudia la estructura algebraica de aquellos equilibrios de Nash que maximizan el bienestar social.",
        "Demostramos (Teoremas 1 y 2) que, sorprendentemente, el conjunto de equilibrios de Nash que maximizan el bienestar social es más complejo.",
        "De hecho, para cualquier número algebraico α ∈ [0, 1] con grado a lo sumo n, exhibimos un juego gráfico en un camino de longitud O(n) tal que, en el equilibrio de Nash único que maximiza el bienestar social de este juego, uno de los jugadores juega la estrategia mixta α. Este resultado muestra que puede ser difícil representar un equilibrio de Nash óptimo.",
        "Parece ser una característica novedosa del escenario que consideramos aquí, que un equilibrio de Nash óptimo es difícil de representar, en una situación donde es fácil encontrar y representar un equilibrio de Nash.",
        "Dado que el equilibrio de Nash que maximiza el bienestar social puede ser difícil de representar eficientemente, debemos conformarnos con una aproximación.",
        "Sin embargo, la diferencia crucial entre nuestro enfoque y el de los trabajos anteriores [13, 16, 19] es que requerimos que nuestro algoritmo produzca un equilibrio de Nash exacto, aunque no necesariamente el óptimo con respecto a nuestros criterios.",
        "En la Sección 4, describimos un algoritmo que cumple con este requisito.",
        "Específicamente, proponemos un algoritmo que, para cualquier > 0, encuentra un equilibrio de Nash cuya recompensa total está dentro de de lo óptimo.",
        "Se ejecuta en tiempo polinómico (Teorema 3,4) para cualquier juego gráfico en un árbol de grado acotado para el cual la estructura de datos propuesta por [13] (la llamada política de mejor respuesta, definida a continuación) tiene un tamaño poli(n) (nota que, como se muestra en [9], esto siempre es el caso cuando el grafo subyacente es un camino).",
        "Un resultado relacionado en un contexto diferente fue obtenido por Datta [8], quien muestra que los juegos de n jugadores con 2 acciones son universales en el sentido de que cualquier variedad algebraica real puede ser representada como el conjunto de equilibrios de Nash totalmente mixtos de tales juegos. Precisamente, el tiempo de ejecución de nuestro algoritmo es polinómico en n, Pmax y 1/, donde Pmax es el valor absoluto máximo de una entrada de una matriz de pagos, es decir, es un algoritmo seudopolinómico, aunque es completamente polinómico con respecto a .",
        "Mostramos (Sección 4.1) que bajo ciertas restricciones en las matrices de pagos, el algoritmo puede ser transformado en un algoritmo de tiempo polinómico (verdaderamente) que produce un equilibrio de Nash cuya ganancia total está dentro de un factor de 1 − del óptimo.",
        "En la Sección 5, consideramos el problema de encontrar un equilibrio de Nash en el que la ganancia esperada de cada jugador Vi supere un umbral prescrito Ti.",
        "Usando la idea de la Sección 4, presentamos (Teorema 5) un esquema de aproximación en tiempo polinómico completo para este problema.",
        "El tiempo de ejecución del algoritmo está acotado por un polinomio en n, Pmax y .",
        "Si la instancia tiene un equilibrio de Nash que cumple con los umbrales prescritos, entonces el algoritmo construye un equilibrio de Nash en el que la recompensa esperada de cada jugador Vi es al menos Ti − .",
        "En la Sección 6, presentamos otros criterios naturales para seleccionar un buen equilibrio de Nash y mostramos que los algoritmos descritos en las dos secciones anteriores pueden ser utilizados como bloques de construcción para encontrar equilibrios de Nash que cumplan con estos criterios.",
        "En particular, en la Sección 6.1 mostramos cómo encontrar un equilibrio de Nash que aproxima el máximo bienestar social, garantizando que la ganancia de cada individuo esté cerca de un umbral prescrito.",
        "En la Sección 6.2 mostramos cómo encontrar un equilibrio de Nash que maximiza (casi) al máximo el pago individual mínimo.",
        "Finalmente, en la Sección 6.3 mostramos cómo encontrar un equilibrio de Nash en el que las ganancias individuales de los jugadores están cerca unas de otras. 1.2 Trabajo Relacionado Nuestro esquema de aproximación (Teorema 3 y Teorema 4) muestra un contraste entre los juegos que estudiamos y los juegos de n acciones de dos jugadores, para los cuales los problemas correspondientes suelen ser intratables.",
        "Para juegos de n acciones de dos jugadores, el problema de encontrar equilibrios de Nash con propiedades especiales suele ser NP-duro.",
        "En particular, este es el caso de los equilibrios de Nash que maximizan el bienestar social [11, 6].",
        "Además, es probable que sea intratable incluso aproximarse a tales equilibrios.",
        "En particular, Chen, Deng y Teng [4] muestran que existe algún , polinomio inverso en n, para el cual calcular un equilibrio de Nash en juegos de 2 jugadores con n acciones por jugador es PPAD-completo.",
        "Lipton y Markakis [15] estudian las propiedades algebraicas de los equilibrios de Nash, y señalan que los algoritmos estándar de eliminación de cuantificadores pueden ser utilizados para resolverlos.",
        "Ten en cuenta que estos algoritmos no son de tiempo polinómico en general.",
        "Los juegos que estudiamos en este artículo tienen equilibrios de Nash computables en tiempo polinómico en los que todas las estrategias mixtas son números racionales, pero un equilibrio de Nash óptimo puede incluir necesariamente estrategias mixtas con un alto grado algebraico.",
        "Un equilibrio correlacionado (CE) (introducido por Aumann [2]) es una distribución sobre vectores de acciones de jugadores con la propiedad de que si a cualquier jugador se le dice su propia acción (el valor de su propio componente) de un vector generado por esa distribución, entonces no puede aumentar su ganancia esperada cambiando su acción.",
        "Cualquier equilibrio de Nash es una EC, pero la afirmación contraria no se cumple en general.",
        "A diferencia de los equilibrios de Nash, los equilibrios correlacionados se pueden encontrar para juegos gráficos de bajo grado (así como para otras clases de juegos multijugador representados de manera concisa) en tiempo polinómico [17].",
        "Pero, para juegos gráficos es NP-duro encontrar un equilibrio correlacionado que maximice la recompensa total [18].",
        "Sin embargo, los resultados de NP-dificultad se aplican a juegos más generales que el que consideramos aquí, en particular los grafos no son árboles.",
        "Del [2] también se sabe que existen juegos de 2 jugadores y 2 acciones para los cuales el pago total esperado 163 del mejor equilibrio correlacionado es mayor que el mejor equilibrio de Nash, y discutimos este tema más a fondo en la Sección 7.2.",
        "CONSIDERACIONES PRELIMINARES Y NOTACIÓN Consideramos juegos gráficos en los que el grafo subyacente G es un árbol de n vértices, en el que cada vértice tiene a lo sumo Δ hijos.",
        "Cada vértice tiene dos acciones, que están representadas por 0 y 1.",
        "Una estrategia mixta de un jugador V se representa como un único número v ∈ [0, 1], que denota la probabilidad de que V seleccione la acción 1.",
        "Para los propósitos del algoritmo, el árbol está enraizado de manera arbitraria.",
        "Para mayor comodidad, asumimos sin pérdida de generalidad que la raíz tiene un solo hijo y que su recompensa es independiente de la acción elegida por el hijo.",
        "Esto se puede lograr primero eligiendo una raíz arbitraria del árbol, y luego agregando un padre ficticio de esta raíz, asignándole una función de recompensa constante, por ejemplo, 0.",
        "Dado un borde (V, W) del árbol G, y una estrategia mixta w para W, sea G(V,W), W=w la instancia obtenida de G mediante (1) eliminar todos los nodos Z que están separados de V por W (es decir, todos los nodos Z tales que el camino de Z a V pasa por W), y (2) restringir la instancia de modo que se requiera que W juegue la estrategia mixta w. Definición 1.",
        "Supongamos que (V, W) es una arista del árbol, que v es una estrategia mixta para V y que w es una estrategia mixta para W.",
        "Decimos que v es una mejor respuesta potencial a w (denotado por v ∈ pbrV (w)) si hay un equilibrio en la instancia G(V,W), W = w en el que V tiene una estrategia mixta v. Definimos la política de mejor respuesta para V, dada W, como B(W, V) = {(w, v) | v ∈ pbrV (w), w ∈ [0, 1]}.",
        "El paso ascendente del algoritmo genérico de [13] considera cada nodo V (que no sea la raíz) y calcula la política de mejor respuesta para V dada su padre.",
        "Con las suposiciones anteriores sobre la raíz, el paso aguas abajo es sencillo.",
        "La raíz selecciona una estrategia mixta w para la raíz W y una estrategia mixta v ∈ B(W, V) para cada hijo V de W.",
        "Indica a cada niño V que juegue v. El resto del pase descendente es recursivo.",
        "Cuando un nodo V recibe instrucciones de su padre para adoptar la estrategia mixta v, realiza lo siguiente para cada hijo U: encuentra un par (v, u) ∈ B(V, U) (con el mismo valor de v que le fue dado por su padre) e instruye a U a jugar u.",
        "La mejor política de respuesta para un vértice U dado su padre V puede representarse como una unión de rectángulos, donde un rectángulo está definido por un par de intervalos cerrados (IV, IU) y consiste en todos los puntos en IV × IU; puede ser el caso de que uno o ambos de los intervalos IV e IU consistan en un solo punto.",
        "Para realizar cálculos en B(V, U) y para limitar el número de rectángulos, [9] utilizó el concepto de un punto de evento, el cual se define de la siguiente manera.",
        "Para cualquier conjunto A ⊆ [0, 1]2 que se represente como una unión de un número finito de rectángulos, decimos que un punto u ∈ [0, 1] en el eje U es un punto de evento U de A si u = 0 o u = 1 o la representación de A contiene un rectángulo de la forma IV × IU y u es un extremo de IU; los puntos de evento V se definen de manera similar.",
        "Para muchos juegos considerados en este documento, el grafo subyacente es un camino de n vértices, es decir, un grafo G = (V, E) con V = {V1, . . . , Vn} y E = {(V1, V2), . . . , (Vn−1, Vn)}.",
        "En [9], se demostró que para tales juegos, la política de mejor respuesta tiene solo un número polinomial de rectángulos.",
        "La prueba de que el número de rectángulos en B(Vj+1, Vj) es polinomial procede primero mostrando que el número de puntos de evento en B(Vj+1, Vj) no puede exceder el número de puntos de evento en B(Vj, Vj-1) en más de 2, y utilizando este hecho para acotar el número de rectángulos en B(Vj+1, Vj).",
        "Sean P0 (V) y P1 (V) las ganancias esperadas para V cuando juega 0 y 1, respectivamente.",
        "Tanto P0 (V) como P1 (V) son funciones multilineales de las estrategias de los vecinos de V.",
        "En lo que sigue, usaremos frecuentemente la siguiente observación simple.",
        "AFIRMACIÓN 1.",
        "Para un vértice V con un único hijo U y padre W, dados cualquier A, B, C, D ∈ Q, se pueden seleccionar las recompensas para V de manera que P0(V) = Auw + Bu + Cw + D, P1(V) = Auw + Bu + Cw + D.",
        "Además, si todos los valores de A, B, C, D son enteros, los pagos para V también son enteros.",
        "PRUEBA.",
        "Daremos la prueba para P0 (V); la prueba para P1 (V) es similar.",
        "Para i, j = 0, 1, sea Pij la ganancia para V cuando U juega i, V juega 0 y W juega j.",
        "Tenemos P0 (V) = P00(1 − u)(1 − w) + P10u(1 − w) + P01(1 − u)w + P11uw.",
        "Tenemos que seleccionar los valores de Pij de manera que P00 − P10 − P01 + P11 = A, −P00 + P10 = B, −P00 + P01 = C, P00 = D. Es fácil ver que la solución única está dada por P00 = D, P01 = C + D, P10 = B + D, P11 = A + B + C + D. La entrada a todos los algoritmos considerados en este documento incluye las matrices de pago para cada jugador.",
        "Suponemos que todos los elementos de estas matrices son enteros.",
        "Sea Pmax el mayor valor absoluto de cualquier elemento de cualquier matriz de pagos.",
        "Entonces, la entrada consiste en un máximo de n2Δ+1 números, cada uno de los cuales puede ser representado usando log Pmax bits.",
        "EQUILIBRIOS DE NASH QUE MAXIMIZAN EL BIENESTAR SOCIAL: SOLUCIONES EN R \\ Q Desde el punto de vista del bienestar social, el mejor equilibrio de Nash es aquel que maximiza la suma de las ganancias esperadas de los jugadores.",
        "Lamentablemente, resulta que calcular exactamente dicho perfil estratégico no es posible: en esta sección, mostramos que incluso si todas las ganancias de los jugadores son números enteros, el perfil estratégico que maximiza la ganancia total puede tener coordenadas irracionales; además, puede involucrar números algebraicos de un grado arbitrario. 3.1 Calentamiento: irracionales cuadráticos Comenzamos proporcionando un ejemplo de un juego gráfico en un camino de longitud 3 con ganancias enteras tal que en el equilibrio de Nash que maximiza la ganancia total, uno de los jugadores tiene una estrategia en R \\ Q.",
        "En la siguiente subsección, extenderemos este ejemplo a números algebraicos de grado arbitrario n; para hacerlo, debemos considerar caminos de longitud O(n).",
        "TEOREMA 1.",
        "Existe un juego gráfico G de pago entero en un camino de 3 vértices UVW tal que, en cualquier equilibrio de Nash de G que maximice el bienestar social, la estrategia u del jugador U y el pago total p cumplen u, p ∈ R \\ Q.",
        "PRUEBA.",
        "Las recompensas para los jugadores en G están especificadas de la siguiente manera.",
        "La ganancia para U es idénticamente 0, es decir, P0 (U) = P1 (U) = 0.",
        "Usando la Reclamación 1, seleccionamos las ganancias para V de modo que P0 (V) = -uw + 3w y P1 (V) = P0 (V) + w(u + 2) - (u + 1), donde u y w son las estrategias (mixtas) de U y W, respectivamente.",
        "Se deduce que V es indiferente entre jugar 0 y 1 si y solo si w = f(u) = u+1 u+2.",
        "Observa que para cualquier u ∈ [0, 1] tenemos f(u) ∈ [0, 1].",
        "La recompensa para W es 0 si selecciona la misma acción que V y 1 en caso contrario.",
        "AFIRMACIÓN 2.",
        "Todos los equilibrios de Nash del juego G son de la forma (u, 1/2, f(u)).",
        "Es decir, en cualquier equilibrio de Nash, V juega v = 1/2 y W juega w = f(u).",
        "Además, para cualquier valor de u, el vector de estrategias (u, 1/2, f(u)) constituye un equilibrio de Nash.",
        "PRUEBA.",
        "Es fácil comprobar que para cualquier u ∈ [0, 1], el vector (u, 1/2, f(u)) es un equilibrio de Nash.",
        "De hecho, U está dispuesto a jugar 164 cualquier estrategia mixta u, sin importar lo que hagan V y W.",
        "Además, V es indiferente entre 0 y 1 siempre y cuando w = f(u), por lo que puede jugar 1/2.",
        "Finalmente, si V juega con probabilidad igual a 0 y 1, W es indiferente entre 0 y 1, por lo que puede jugar f(u).",
        "Por el contrario, supongamos que v > 1/2.",
        "Entonces W prefiere estrictamente jugar 0, es decir, w = 0.",
        "Entonces para V tenemos P1 (V) = P0 (V) - (u + 1), es decir, P1 (V) < P0 (V), lo que implica v = 0, una contradicción.",
        "De manera similar, si v < 1/2, el jugador W prefiere jugar 1, por lo que tenemos w = 1.",
        "Por lo tanto, P1 (V) = P0 (V) + (u + 2) - (u + 1), es decir, P1 (V) > P0 (V), lo que implica v = 1, una contradicción.",
        "Finalmente, si v = 1/2, pero w = f(u), el jugador V no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2.",
        "Esto completa la prueba de la Afirmación 2.",
        "Según la Afirmación 2, la ganancia total en cualquier equilibrio de Nash de este juego es una función de u.",
        "Más específicamente, la ganancia para U es 0, la ganancia para V es −uf(u) + 3f(u), y la ganancia para W es 1/2.",
        "Por lo tanto, el equilibrio de Nash con la máxima ganancia total corresponde al valor de u que maximiza g(u) = −u (u + 1) u + 2 + 3 u + 1 u + 2 = − (u − 3)(u + 1) u + 2.",
        "Para encontrar los extremos de g(u), calculamos h(u) = − d du g(u).",
        "Tenemos h(u) = (2u − 2)(u + 2) − (u − 3)(u + 1) (u + 2)2 = u2 + 4u − 1 (u + 2)2.",
        "Por lo tanto, h(u) = 0 si y solo si u ∈ {−2 + √ 5, −2 − √ 5}.",
        "Ten en cuenta que −2 + √ 5 ∈ [0, 1].",
        "La función g(u) cambia de signo en −2, −1 y 3.",
        "Tenemos g(u) < 0 para g > 3, g(u) > 0 para u < −2, por lo que el extremo de g(u) que se encuentra entre 1 y 3, es decir, u = −2 + √ 5, es un máximo local.",
        "Concluimos que el equilibrio de Nash que maximiza el bienestar social para este juego está dado por el vector de estrategias (−2+√ 5, 1/2, (5 − √ 5)/5).",
        "El pago total respectivo es 0 − ( √ 5 − 5)( √ 5 − 1) √ 5 + 1 2 = 13/2 − 2 √ 5.",
        "Esto concluye la prueba del Teorema 1. 3.2 Estrategias de grado arbitrario. Hemos demostrado que en el equilibrio de Nash que maximiza el bienestar social, las estrategias de algunos jugadores pueden ser irracionales cuadráticas, al igual que la recompensa total.",
        "En esta subsección, extenderemos este resultado para mostrar que podemos construir un juego gráfico de pago entero en un camino cuyo equilibrio de Nash maximizador del bienestar social involucra números algebraicos arbitrarios en [0, 1].",
        "TEOREMA 2.",
        "Para cualquier número algebraico α de grado n ∈ [0, 1], existe un juego gráfico de pago entero en un camino de longitud O(n) tal que, en todas las equilibrios de Nash que maximizan el bienestar social de este juego, uno de los jugadores juega α.",
        "PRUEBA.",
        "Nuestra prueba consta de dos pasos.",
        "Primero, construimos una expresión racional R(x) y un segmento [x , x ] tal que x , x ∈ Q y α sea el único máximo de R(x) en [x , x ].",
        "Segundo, construimos un juego gráfico cuyos equilibrios de Nash pueden ser parametrizados por u ∈ [x, x], de modo que en el equilibrio que corresponde a u, la recompensa total es R(u) y, además, la estrategia de algunos jugadores es u.",
        "Se deduce que para alcanzar el equilibrio de Nash que maximiza la ganancia, este jugador tiene que jugar α.",
        "Los detalles siguen.",
        "LEMMA 1. \n\nLEMMA 1.",
        "Dado un número algebraico α ∈ [0, 1], deg(α) = n, existen K2, . . . , K2n+2 ∈ Q y x , x ∈ (0, 1) ∩ Q tal que α es el único máximo de R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 en [x , x ].",
        "PRUEBA.",
        "Sea P(x) el polinomio minimal de α, es decir, un polinomio de grado n con coeficientes racionales cuyo coeficiente principal es 1 tal que P(α) = 0.",
        "Sea A = {α1, . . . , αn} el conjunto de todas las raíces de P(x).",
        "Considera el polinomio Q1(x) = −P2(x).",
        "Tiene las mismas raíces que P(x), y además, para cualquier x ∈ A tenemos Q1(x) < 0.",
        "Por lo tanto, A es el conjunto de todos los máximos de Q1(x).",
        "Ahora, establece R(x) = Q1(x) (x+2)...(x+2n+1)(x+2n+2).",
        "Observa que R(x) ≤ 0 para todo x ∈ [0, 1] y R(x) = 0 si y solo si Q1(x) = 0.",
        "Por lo tanto, el conjunto A también es el conjunto de todos los máximos de R(x) en [0, 1].",
        "Sea d = min{|αi − α| | αi ∈ A, αi = α}, y establezca α = max{α − d/2, 0}, α = min{α + d/2, 1}.",
        "Claramente, α es el único cero (y por lo tanto, el único máximo) de R(x) en [α , α ].",
        "Sean x y x algunos números racionales en (α, α) y (α, α), respectivamente; observe que al excluir los extremos de los intervalos aseguramos que x, x = 0, 1.",
        "Como [x, x] ⊂ [α, α], tenemos que α es el único máximo de R(x) en [x, x].",
        "Dado que R(x) es una expresión racional adecuada y todas las raíces de su denominador son simples, por el teorema de descomposición en fracciones parciales, R(x) puede representarse como R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2, donde K2, . . . , K2n+2 son números racionales.",
        "Considera un juego gráfico en el camino U−1V−1U0V0U1V1 . . .",
        "Uk−1Vk−1Uk, donde k = 2n + 2.",
        "Intuitivamente, queremos que cada triple (Ui−1, Vi−1, Ui) se comporte de manera similar a los jugadores U, V y W del juego descrito en la subsección anterior.",
        "Más precisamente, definimos las ganancias de los jugadores de la siguiente manera. • La ganancia para U−1 es 0 sin importar lo que hagan los demás. • La ganancia esperada para V−1 es 0 si juega 0 y u0 − (x − x )u−1 −x si juega 1, donde u0 y u−1 son las estrategias de U0 y U−1, respectivamente. • La ganancia esperada para V0 es 0 si juega 0 y u1(u0 + 1)− u0 si juega 1, donde u0 y u1 son las estrategias de U0 y U1, respectivamente. • Para cada i = 1, . . . , k − 1, la ganancia esperada para Vi cuando juega 0 es P0 (Vi) = Aiuiui+1 − Aiui+1, y la ganancia esperada para Vi cuando juega 1 es P1 (Vi) = P0 (Vi) + ui+1(2 − ui) − 1, donde Ai = −Ki+1 y ui+1 y ui son las estrategias de Ui+1 y Ui, respectivamente. • Para cada i = 0, . . . , k, la ganancia para Ui no depende de Vi y es 1 si Ui y Vi−1 seleccionan acciones diferentes y 0 en caso contrario.",
        "Ahora caracterizaremos los equilibrios de Nash de este juego utilizando una secuencia de afirmaciones.",
        "AFIRMACIÓN 3.",
        "En todos los equilibrios de Nash de este juego, V−1 juega 1/2, y las estrategias de u−1 y u0 satisfacen u0 = (x − x )u−1 + x.",
        "Por consiguiente, en todos los equilibrios de Nash tenemos u0 ∈ [x , x ]. 165 PRUEBA.",
        "La prueba es similar a la del Reclamo 2.",
        "Que f(u−1) = (x − x )u−1 + x.",
        "Claramente, el jugador V−1 es indiferente entre jugar 0 y 1 si y solo si u0 = f(u−1).",
        "Supongamos que v−1 < 1/2.",
        "Entonces U0 prefiere estrictamente jugar 1, es decir, u0 = 1, por lo que tenemos P1 (V−1) = P0 (V−1) + 1 − (x − x )u−1 − x .",
        "Dado que 1 − x ≤ 1 − (x − x )u−1 − x ≤ 1 − x para u−1 ∈ [0, 1] y x < 1, tenemos que P1 (V−1) > P0 (V−1), por lo que V−1 prefiere jugar 1, lo cual es una contradicción.",
        "De manera similar, si v−1 > 1/2, el jugador U0 prefiere estrictamente jugar 0, es decir, u0 = 0, por lo que tenemos P1 (V−1) = P0 (V−1) − (x − x )u−1 − x.",
        "Dado que x < x, x > 0, tenemos P1 (V−1) < P0 (V−1), por lo que V−1 prefiere jugar 0, lo cual es una contradicción.",
        "Finalmente, si V−1 juega 1/2, pero u0 = f(u−1), el jugador V−1 no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2.",
        "Además, ten en cuenta que f(0) = x, f(1) = x y, además, f(u−1) ∈ [x, x] si y solo si u−1 ∈ [0, 1].",
        "Por lo tanto, en todos los equilibrios de Nash de este juego tenemos u0 ∈ [x , x ].",
        "AFIRMACIÓN 4.",
        "En todos los equilibrios de Nash de este juego para cada i = 0, . . . , k − 1, tenemos vi = 1/2, y las estrategias de los jugadores Ui y Ui+1 satisfacen ui+1 = fi(ui), donde f0(u) = u/(u + 1) y fi(u) = 1/(2 − u) para i > 0.",
        "PRUEBA.",
        "La prueba de esta afirmación es también similar a la de la Afirmación 2.",
        "Utilizamos inducción en i para demostrar que la afirmación de la proposición es verdadera y, además, ui = 1 para i > 0.",
        "Para el caso base i = 0, observe que u0 = 0 según la afirmación anterior (recuerde que x, x se seleccionan de manera que x, x = 0, 1) y considere el trío (U0, V0, U1).",
        "Que v0 sea la estrategia de V0.",
        "Primero, supongamos que v0 > 1/2.",
        "Entonces U1 prefiere estrictamente jugar 0, es decir, u1 = 0.",
        "Entonces, para V0 tenemos P1 (V0) = P0 (V0) − u0.",
        "Dado que u0 = 0, tenemos que P1 (V0) < P0 (V0), lo cual implica v1 = 0, una contradicción.",
        "De manera similar, si v0 < 1/2, el jugador U1 prefiere jugar 1, por lo que tenemos u1 = 1.",
        "Por lo tanto, P1 (V0) = P0 (V0) + 1.",
        "Se sigue que P1 (V0) > P0 (V0), lo cual implica v0 = 1, una contradicción.",
        "Finalmente, si v0 = 1/2, pero u1 = u0/(u0 + 1), el jugador V0 no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2.",
        "Además, dado que u1 = u0/(u0 + 1) y u0 ∈ [0, 1], tenemos que u1 = 1.",
        "El argumento para el paso inductivo es similar.",
        "Es decir, supongamos que la afirmación se demuestra para todos los i < i y consideremos el trío (Ui, Vi, Ui+1).",
        "Que vi sea la estrategia de Vi.",
        "Primero, supongamos que vi > 1/2.",
        "Entonces Ui+1 prefiere estrictamente jugar 0, es decir, ui+1 = 0.",
        "Entonces, para Vi tenemos P1 (Vi) = P0 (Vi)−1, es decir, P1 (Vi) < P0 (Vi), lo cual implica vi = 0, una contradicción.",
        "De manera similar, si vi < 1/2, el jugador Ui+1 prefiere jugar 1, por lo que tenemos ui+1 = 1.",
        "Por lo tanto, P1 (Vi) = P0 (Vi) + 1 − ui.",
        "Por hipótesis inductiva, tenemos ui < 1.",
        "Por consiguiente, P1 (Vi) > P0 (Vi), lo que implica vi = 1, una contradicción.",
        "Finalmente, si vi = 1/2, pero ui+1 = 1/(2 − ui), el jugador Vi no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2.",
        "Además, como ui+1 = 1/(2 − ui) y ui < 1, tenemos ui+1 < 1.",
        "AFIRMACIÓN 5.",
        "Cualquier perfil estratégico de la forma (u−1, 1/2, u0, 1/2, u1, 1/2, . . . , uk−1, 1/2, uk), donde u−1 ∈ [0, 1], u0 = (x − x )u−1 + x , u1 = u0/(u0 + 1), y ui+1 = 1/(2 − ui) para i ≥ 1, constituye un equilibrio de Nash.",
        "PRUEBA.",
        "Primero, las ganancias del jugador U−1 no dependen de las acciones de otros jugadores, por lo que es libre de jugar cualquier estrategia en [0, 1].",
        "Si u0 = (x −x )u−1 +x , el jugador V−1 es indiferente entre 0 y 1, por lo que está contento de jugar 1/2; un argumento similar se aplica a los jugadores V0, . . . , Vk−1.",
        "Finalmente, para cada i = 0, . . . , k, las ganancias del jugador Ui solo dependen de la estrategia del jugador Vi−1.",
        "En particular, siempre y cuando vi−1 = 1/2, el jugador Ui es indiferente entre jugar 0 y 1, por lo que puede jugar cualquier estrategia mixta ui ∈ [0, 1].",
        "Para completar la prueba, observe que (x − x )u−1 + x ∈ [0, 1] para todo u−1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] para todo u0 ∈ [0, 1], y 1/(2 − ui) ∈ [0, 1] para todo ui ∈ [0, 1], por lo que tenemos ui ∈ [0, 1] para todo i = 0, . . . , k. Ahora, calculemos la ganancia total bajo un perfil estratégico de la forma dada en la Afirmación 5.",
        "El pago para U−1 es 0, y el pago esperado para cada uno de los Ui, i = 0, . . . , k, es 1/2.",
        "Los beneficios esperados para V−1 y V0 son 0.",
        "Finalmente, para cualquier i = 1, . . . , k − 1, la ganancia esperada para Vi es Ti = Aiuiui+1 − Aiui+1.",
        "Se deduce que para encontrar un equilibrio de Nash con el mayor pago total, debemos maximizar Pk−1 i=1 Ti sujeto a las condiciones u−1 ∈ [0, 1], u0 = (x −x )u−1+x , u1 = u0/(u0+1), y ui+1 = 1/(2−ui) para i = 1, . . . , k − 1.",
        "Nos gustaría expresar Pk−1 i=1 Ti como una función de u0.",
        "Para simplificar la notación, establezca u = u0.",
        "LEMMA 2. \n\nLEMMA 2.",
        "Para i = 1, . . . , k, tenemos ui = u+i−1 u+i.",
        "PRUEBA.",
        "La demostración es por inducción en i.",
        "Para i = 1, tenemos u1 = u/(u + 1).",
        "Ahora, para i ≥ 2 supongamos que ui−1 = (u + i − 2)/(u + i − 1).",
        "Tenemos ui = 1/(2 − ui−1) = (u + i − 1)/(2u + 2i − 2 − u − i + 2) = (u + i − 1)/(u + i).",
        "Se sigue que para i = 1, . . . , k − 1 tenemos Ti = Ai u + i − 1 u + i u + i u + i + 1 − Ai u + i u + i + 1 = −Ai 1 u + i + 1 = Ki+1 u + i + 1.",
        "Observa que a medida que u−1 varía de 0 a 1, u varía de x a x.",
        "Por lo tanto, para maximizar el pago total, debemos elegir u ∈ [x , x ] de manera que maximicemos K2 u + 2 + · · · + Kk u + k = R(u).",
        "Por construcción, el único máximo de R(u) en [x, x] es α.",
        "Se deduce que en el equilibrio de Nash que maximiza las ganancias de nuestro juego, U0 juega α.",
        "Finalmente, cabe destacar que las recompensas en nuestro juego son racionales en lugar de enteras.",
        "Sin embargo, es fácil ver que podemos multiplicar todas las ganancias de un jugador por su máximo común denominador sin afectar su estrategia.",
        "En el juego resultante, todas las ganancias son enteras.",
        "Esto concluye la demostración del Teorema 2.4.",
        "APROXIMANDO EL EQUILIBRIO DE NASH ÓPTIMO SOCIAL Hemos visto que el equilibrio de Nash que maximiza el bienestar social puede implicar estrategias que no están en Q.",
        "Por lo tanto, en esta sección nos enfocamos en encontrar un equilibrio de Nash que sea casi óptimo desde la perspectiva del bienestar social.",
        "Proponemos un algoritmo que, para cualquier > 0, encuentra un equilibrio de Nash cuya recompensa total está dentro de de la óptima.",
        "El tiempo de ejecución de este algoritmo es polinómico en 1/ , n y |Pmax| (recuerde que Pmax es el valor absoluto máximo de una entrada de una matriz de pagos).",
        "Si bien el resultado negativo de la sección anterior es para juegos gráficos en caminos, nuestro algoritmo se aplica a una gama más amplia de escenarios.",
        "Específicamente, se ejecuta en tiempo polinómico en árboles de grado acotado siempre que la política de mejor respuesta de cada vértice, dada su padre, pueda representarse como una unión de un número polinómico de rectángulos.",
        "Ten en cuenta que los grafos de camino siempre cumplen esta condición: en [9] mostramos cómo calcular dicha representación, dado un grafo con grado máximo 2.",
        "Por consiguiente, para grafos de camino el tiempo de ejecución de nuestro algoritmo está garantizado de ser polinomial. (Nótese que [9] exhibe una familia de juegos gráficos en árboles de grado acotado para los cuales las políticas de mejor respuesta de algunos de los vértices, dados sus padres, tienen tamaño exponencial, cuando se representan como uniones de rectángulos).",
        "Debido a restricciones de espacio, en esta versión del artículo presentamos el algoritmo para el caso en el que el grafo subyacente del juego gráfico es un camino.",
        "Luego presentamos nuestro resultado para el caso general; la demostración se puede encontrar en la versión completa de este artículo [10].",
        "Supongamos que s es un perfil estratégico para un juego gráfico G. Es decir, s asigna una estrategia mixta a cada vértice de G. Sea EPV (s) el pago esperado del jugador V bajo s y sea EP(s) = Σ V EPV (s).",
        "Sea M(G) = max{EP(s) | s es un equilibrio de Nash para G}.",
        "TEOREMA 3.",
        "Supongamos que G es un juego gráfico en un camino de n vértices.",
        "Entonces, para cualquier > 0 existe un algoritmo que construye un equilibrio de Nash s para G que satisface EP(s) ≥ M(G)− .",
        "El tiempo de ejecución del algoritmo es O(n4 P3 max/ 3) PRUEBA.",
        "Sea {V1, . . . , Vn} el conjunto de todos los jugadores.",
        "Comenzamos construyendo las mejores políticas de respuesta para todos los Vi, i = 1, . . . , n − 1.",
        "Como se muestra en [9], esto se puede hacer en tiempo O(n3).",
        "Sea N > 5n un parámetro que se seleccionará más adelante, establezca δ = 1/N y defina X = {jδ | j = 0, . . . , N}.",
        "Decimos que vj es un punto de evento para un jugador Vi si es un punto de evento de Vi para B(Vi, Vi−1) o B(Vi+1, Vi).",
        "Para cada jugador Vi, considera un conjunto finito de estrategias Xi dado por Xi = X ∪ {vj | vj es un punto de evento para Vi}.",
        "Se ha demostrado en [9] que para cualquier i = 2, . . . , n, la política de mejor respuesta B(Vi, Vi−1) tiene como máximo 2n + 4 puntos de eventos de Vi.",
        "Dado que requerimos N > 5n, tenemos |Xi| ≤ 2N; asumimos sin pérdida de generalidad que |Xi| = 2N.",
        "Ordena los elementos de Xi en orden creciente como x1 i = 0 < x2 i < · · · < x2N i.",
        "Nos referiremos a las estrategias en Xi como estrategias discretas del jugador Vi; un perfil de estrategia en el que cada jugador tiene una estrategia discreta se referirá como un perfil de estrategia discreta.",
        "Ahora demostraremos que incluso si restringimos a cada jugador Vi a estrategias de Xi, los jugadores aún pueden lograr un equilibrio de Nash, y además, el mejor equilibrio de Nash (con respecto al bienestar social) tiene un pago total de al menos M(G) - siempre y cuando N sea lo suficientemente grande.",
        "Sea s un perfil de estrategia que maximiza el bienestar social.",
        "Es decir, sea s = (s1, . . . , sn) donde si es la estrategia mixta del jugador Vi y EP(s) = M(G).",
        "Para i = 1, . . . , n, sea ti = max{xj i | xj i ≤ si}.",
        "Primero, demostraremos que el perfil estratégico t = (t1, . . . , tn) es un equilibrio de Nash para G. Fijemos cualquier i, 1 < i ≤ n, y sea R = [v1, v2]×[u1, u2] el rectángulo en B(Vi, Vi−1) que contiene (si, si−1).",
        "Dado que v1 es un punto de evento Vi de B(Vi, Vi−1), tenemos v1 ≤ ti, por lo que el punto (ti, si−1) está dentro de R. De manera similar, el punto u1 es un punto de evento Vi−1 de B(Vi, Vi−1), por lo que tenemos u1 ≤ ti−1, y por lo tanto el punto (ti, ti−1) está dentro de R. Esto significa que para cualquier i, 1 < i ≤ n, tenemos ti−1 ∈ pbrVi−1 (ti), lo que implica que t = (t1, . . . , tn) es un equilibrio de Nash para G. Ahora, estimemos la pérdida esperada en el bienestar social causada por jugar t en lugar de s. LEMA 3.",
        "Para cualquier par de perfiles de estrategia t, s tales que |ti − si| ≤ δ, tenemos |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ para cualquier i = 1, . . . , n. PRUEBA.",
        "Sea Pi klm el pago del jugador Vi, cuando juega k, Vi−1 juega l y Vi+1 juega m. Fijemos i = 1, . . . , n y para k, l, m ∈ {0, 1}, definamos tklm = tk i−1(1 − ti−1)1−k tl i(1 − ti)1−l tm i+1(1 − ti+1)1−m sklm = sk i−1(1 − si−1)1−k sl i(1 − si)1−l sm i+1(1 − si+1)1−m.",
        "Mostraremos ahora que para cualquier k, l, m ∈ {0, 1} tenemos |tklm − sklm | ≤ 3δ; claramente, esto implica el lema.",
        "De hecho, fijar k, l, m ∈ {0, 1}.",
        "Establecer x = tk i−1(1 − ti−1)1−k , x = sk i−1(1 − si−1)1−k , y = tl i(1 − ti)1−l , y = sl i(1 − si)1−l , z = tm i+1(1 − ti+1)1−m , z = sm i+1(1 − si+1)1−m.",
        "Observa que si k = 0 entonces x − x = (1 − ti−1) − (1 − si−1), y si k = 1 entonces x − x = ti−1 − si−1, por lo tanto |x − x | ≤ δ.",
        "Un argumento similar muestra |y − y | ≤ δ, |z − z | ≤ δ.",
        "Además, tenemos x, x, y, y, z, z ∈ [0, 1].",
        "Por lo tanto, |tklm − sklm | = |xyz − x y z | = |xyz − x yz + x yz − x y z + x y z − x y z | ≤ |x − x |yz + |y − y |x z + |z − z |x y ≤ 3δ.",
        "El Lema 3 implica que Pn i=1 |EPVi (s) − EPVi (t)| ≤ 24nPmaxδ, por lo que al elegir δ < /(24nPmax), o, equivalentemente, estableciendo N > 24nPmax/ , podemos asegurar que el pago esperado total para el perfil estratégico t esté dentro de de lo óptimo.",
        "Ahora demostraremos que podemos encontrar el mejor equilibrio de Nash discreto (con respecto al bienestar social) utilizando programación dinámica.",
        "Dado que t es un perfil de estrategia discreto, esto significa que el perfil de estrategia encontrado por nuestro algoritmo será al menos tan bueno como t. Defina ml,k i como la máxima ganancia total que V1, . . . , Vi−1 pueden lograr si cada Vj, j ≤ i, elige una estrategia de Xj, para cada j < i la estrategia de Vj es una mejor respuesta potencial a la estrategia de Vj+1, y, además, Vi−1 juega xl i−1, Vi juega xk i.",
        "Si no hay forma de elegir las estrategias para V1, . . . , Vi−1 que cumplan con estas condiciones, establecemos ml,k i = −∞.",
        "Los valores ml,k i , i = 1, . . . , n; k, l = 1, . . . , N, pueden ser calculados de forma inductiva, de la siguiente manera.",
        "Tenemos ml,k 1 = 0 para k, l = 1, . . . , N. Ahora, supongamos que ya hemos calculado ml,k j para todos los j < i; k, l = 1, . . . , N. Para calcular mk,l i , primero verificamos si (xk i , xl i−1) ∈ B(Vi, Vi−1).",
        "Si este no es el caso, tenemos ml,k i = −∞.",
        "De lo contrario, considera el conjunto Y = Xi−2 ∩ pbrVi−2 (xl i−1), es decir, el conjunto de todas las estrategias discretas de Vi−2 que son potenciales mejores respuestas a xl i−1.",
        "La prueba del Teorema 1 en [9] implica que el conjunto pbrVi−2 (xl i−1) no está vacío: el jugador Vi−2 tiene una mejor respuesta potencial a cualquier estrategia de Vi−1, en particular, xl i−1.",
        "Por la construcción del conjunto Xi−2, esto implica que Y no está vacío.",
        "Para cada xj i−2 ∈ Y, dejemos que pjlk sea la ganancia que Vi−1 recibe cuando Vi−2 juega xj i−2, Vi−1 juega xl i−1, y Vi juega xk i.",
        "Claramente, pjlk se puede calcular en tiempo constante.",
        "Entonces tenemos ml,k i = max{mj,l i−1 + pjlk | xj i−2 ∈ Y }.",
        "Finalmente, supongamos que hemos calculado ml,k n para l, k = 1, . . . , N. Todavía necesitamos tener en cuenta el pago del jugador Vn.",
        "Por lo tanto, consideramos todos los pares (xk n, xl n−1) que satisfacen xl n−1 ∈ pbrVn−1 (xk n), y elegimos aquel que maximiza la suma de mk,l n y la ganancia de Vn cuando juega xk n y Vn−1 juega xl n−1.",
        "Esto resulta en el pago total máximo que los jugadores pueden lograr en un equilibrio de Nash utilizando estrategias discretas; el perfil de estrategia real que produce este pago puede ser reconstruido utilizando técnicas estándar de programación dinámica.",
        "Es fácil ver que cada ml,k se puede calcular en tiempo O(N), es decir, todos ellos se pueden calcular en tiempo O(nN3).",
        "Recuerde que debemos seleccionar N ≥ (24nPmax)/ para asegurarnos de que el perfil estratégico que producimos tenga un pago total que esté dentro de lo óptimo.",
        "Concluimos que podemos calcular una -aproximación al mejor equilibrio de Nash en tiempo O(n4 P3 max/ 3 ).",
        "Esto completa la demostración del Teorema 3.",
        "Para enunciar nuestro resultado para el caso general (es decir, cuando el grafo subyacente es un árbol de grado acotado en lugar de un camino), necesitamos notación adicional.",
        "Si G tiene n jugadores, sea q(n) una cota superior en el número de puntos de evento en la representación de cualquier política de mejor respuesta.",
        "Es decir, asumimos que para cualquier vértice U con padre V, B(V, U) tiene como máximo q(n) puntos de evento.",
        "Estaremos interesados en la situación en la que q(n) sea un polinomio en n. TEOREMA 4.",
        "Sea G un juego gráfico de n jugadores en un árbol en el que cada nodo tiene a lo sumo Δ hijos.",
        "Supongamos que se nos da un conjunto de políticas de mejor respuesta para G en el que cada política de mejor respuesta B(V, U) está representada por un conjunto de rectángulos con un máximo de q(n) puntos de evento.",
        "Para cualquier > 0, existe un algoritmo que construye un equilibrio de Nash s para G que satisface EP(s) ≥ M(G) − .",
        "El tiempo de ejecución del algoritmo es polinómico en n, Pmax y −1 siempre que el árbol tenga grado acotado (es decir, Δ = O(1)) y q(n) sea un polinomio en n. En particular, si N = max((Δ + 1)q(n) + 1, n2Δ+2 (Δ + 2)Pmax −1 ) y Δ > 1 entonces el tiempo de ejecución es O(nΔ(2N)Δ.",
        "Para la demostración de este teorema, ver [10]. 4.1 Un algoritmo de tiempo polinómico para aproximación multiplicativa El tiempo de ejecución de nuestro algoritmo es seudopolinómico en lugar de polinómico, porque incluye un factor que es polinómico en Pmax, la entrada máxima (en valor absoluto) en cualquier matriz de pagos.",
        "Si estamos interesados en una aproximación multiplicativa en lugar de una aditiva, esto se puede mejorar a polinomial.",
        "Primero, hay que tener en cuenta que no podemos esperar una aproximación multiplicativa para todas las entradas.",
        "Es decir, no podemos esperar tener un algoritmo que calcule un equilibrio de Nash con una ganancia total de al menos (1 − )M(G).",
        "Si tuviéramos dicho algoritmo, entonces para juegos gráficos G con M(G) = 0, se requeriría que el algoritmo produjera la solución óptima.",
        "Para demostrar que esto es inviable, observe que podemos usar las técnicas de la Sección 3.2 para construir dos juegos gráficos de coeficientes enteros en caminos de longitud O(n) de tal manera que para algún X ∈ R, el pago total máximo en el primer juego sea X, el pago total máximo en el segundo juego sea −X, y para ambos juegos, los perfiles estratégicos que logran los pagos totales máximos involucran números algebraicos de grado n. Al combinar los dos juegos de modo que el primer vértice del segundo juego se conecte con el último vértice del primer juego, pero los pagos de todos los jugadores no cambien, obtenemos un juego gráfico en el que el mejor equilibrio de Nash tiene un pago total de 0, sin embargo, las estrategias que conducen a este pago tienen una alta complejidad algebraica.",
        "Sin embargo, podemos lograr una aproximación multiplicativa cuando todas las entradas de las matrices de pago son positivas y la relación entre cualquier par de entradas está acotada polinómicamente.",
        "Recuerde que asumimos que todos los pagos son enteros, y sea Pmin > 0 la entrada más pequeña de cualquier matriz de pagos.",
        "En este caso, para cualquier perfil estratégico, la ganancia para el jugador i es al menos Pmin, por lo que la ganancia total en el equilibrio de Nash que maximiza el bienestar social satisface M(G) ≥ nPmin.",
        "Además, el Lema 3 implica que al elegir δ < /(24Pmax/Pmin), podemos asegurar que el equilibrio de Nash t producido por nuestro algoritmo cumple nX i=1 EPVi (s) − nX i=1 EPVi (t) ≤ 24Pmaxδn ≤ nPmin ≤ M(G), es decir, para este valor de δ tenemos Pn i=1 EPVi (t) ≥ (1 − )M(G).",
        "Recuerde que el tiempo de ejecución de nuestro algoritmo es O(nN3), donde N debe ser seleccionado para satisfacer N > 5n, N = 1/δ.",
        "Se deduce que si Pmin > 0, Pmax/Pmin = poli(n), podemos elegir N de manera que nuestro algoritmo proporcione una garantía de aproximación multiplicativa y se ejecute en tiempo polinómico en n y 1/ . 5.",
        "EQUILIBRIOS DE NASH DE PAGO ACOTADO Otra forma natural de definir qué es un buen equilibrio de Nash es exigir que el pago esperado de cada jugador supere cierto umbral.",
        "Estos umbrales no tienen que ser iguales para todos los jugadores.",
        "En este caso, además de las matrices de pagos de los n jugadores, se nos dan n números T1, . . . , Tn, y nuestro objetivo es encontrar un equilibrio de Nash en el que el pago del jugador i sea al menos Ti, o informar que no existe tal equilibrio de Nash.",
        "Resulta que podemos diseñar un FPTAS para este problema utilizando las mismas técnicas que en la sección anterior.",
        "TEOREMA 5.",
        "Dado un juego gráfico G en un camino de n vértices y n números racionales T1, . . . , Tn, supongamos que existe un perfil estratégico s tal que s es un equilibrio de Nash para G y EPVi (s) ≥ Ti para i = 1, . . . , n. Entonces para cualquier > 0 podemos encontrar en tiempo O(max{nP3 max/ 3 , n4 / 3 }) un perfil estratégico s tal que s es un equilibrio de Nash para G y EPVi (s) ≥ Ti − para i = 1, . . . , n. PRUEBA.",
        "La prueba es similar a la del Teorema 3.",
        "Primero, construimos las políticas de mejor respuesta para todos los jugadores, elegimos N > 5n, y construimos los conjuntos Xi, i = 1, . . . , n, como se describe en la demostración del Teorema 3.",
        "Consideremos un perfil estratégico s tal que s sea un equilibrio de Nash para G y EPVi (s) ≥ Ti para i = 1, . . . , n. Construimos un perfil estratégico ti = max{xj i | xj i ≤ si} y usamos el mismo argumento que en la demostración del Teorema 3 para mostrar que t es un equilibrio de Nash para G. Según el Lema 3, tenemos |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ, por lo que eligiendo δ < /(24Pmax), o, equivalentemente, N > max{5n, 24Pmax/ }, podemos asegurar que EPVi (t) ≥ Ti − para i = 1, . . . , n. Ahora, utilizaremos la programación dinámica para encontrar un equilibrio de Nash discreto que cumpla con EPVi (t) ≥ Ti − para i = 1, . . . , n. Dado que t es un perfil estratégico discreto, nuestro algoritmo tendrá éxito siempre que haya un perfil estratégico s con EPVi (s) ≥ Ti− para i = 1, . . . , n. Sea zl,k i = 1 si hay un perfil estratégico discreto tal que para cualquier j < i la estrategia del jugador Vj es una mejor respuesta potencial a la estrategia de Vj+1, el pago esperado de Vj es al menos Tj − , y, además, Vi−1 juega xl i−1, Vi juega xk i.",
        "De lo contrario, deja que zl,k i = 0.",
        "Podemos calcular zl,k i, i = 1, . . . , n; k, l = 1, . . . , N de forma inductiva, de la siguiente manera.",
        "Tenemos zl,k 1 = 1 para k, l = 1, . . . , N. Ahora, supongamos que ya hemos calculado zl,k j para todos los j < i; k, l = 1, . . . , N. Para calcular zk,l i , primero verificamos si (xk i , xl i−1) ∈ B(Vi, Vi−1).",
        "Si este 168 no es el caso, claramente, zk,l i = 0.",
        "De lo contrario, considera el conjunto Y = Xi−2 ∩ pbrVi−2 (xl i−1), es decir, el conjunto de todas las estrategias discretas de Vi−2 que son potenciales mejores respuestas a xl i−1.",
        "Se ha demostrado en la prueba del Teorema 3 que Y = ∅.",
        "Para cada xj i−2 ∈ Y, dejemos que pjlk sea la ganancia que Vi−1 recibe cuando Vi−2 juega xj i−2, Vi−1 juega xl i−1, y Vi juega xk i.",
        "Claramente, pjlk se puede calcular en tiempo constante.",
        "Si existe un xj i−2 ∈ Y tal que zj,l i−1 = 1 y pjlk ≥ Ti−2 − , establece zl,k i = 1.",
        "De lo contrario, establezca zl,k i = 0.",
        "Habiendo calculado zl,k n , l, k = 1, . . . , N, verificamos si zl,k n = 1 para algún par (l, k). Si existe tal par de índices, instruimos a Vn a jugar xk n y utilizamos técnicas de programación dinámica (o, de manera equivalente, el paso descendente del algoritmo de [13]) para encontrar un equilibrio de Nash s que satisfaga EPVi (s ) ≥ Ti − para i = 1, . . . , n (recordemos que Vn es un jugador ficticio, es decir, asumimos Tn = 0, EPn(s ) = 0 para cualquier elección de s ).",
        "Si zl,k n = 0 para todo l, k = 1, . . . , N, no hay un equilibrio de Nash discreto s que satisfaga EPVi (s) ≥ Ti − para i = 1, . . . , n y, por lo tanto, no hay un equilibrio de Nash s (no necesariamente discreto) tal que EPVi (s) ≥ Ti para i = 1, . . . , n. El análisis del tiempo de ejecución es similar al de la Teorema 3; concluimos que el tiempo de ejecución de nuestro algoritmo es O(nN3) = O(max{nP3 max/3, n4/3}).",
        "OBSERVACIÓN 1.",
        "El Teorema 5 se puede extender a árboles de grado acotado de la misma manera que el Teorema 4. 5.1 Cálculo Exacto Otro enfoque para encontrar equilibrios de Nash con pagos acotados se basa en calcular de forma inductiva los subconjuntos de las políticas de mejor respuesta de todos los jugadores para excluir los puntos que no proporcionan pagos suficientes a algunos de los jugadores.",
        "Formalmente, decimos que una estrategia v del jugador V es una mejor respuesta potencial a una estrategia w de su padre W con respecto a un vector de umbral T = (T1, . . . , Tn), (denotado por v ∈ pbrV (w, T)) si hay un equilibrio en la instancia G(V,W), W = w en el que V juega la estrategia mixta v y la ganancia para cualquier jugador Vi aguas abajo de V (incluyendo a V) es al menos Ti.",
        "La mejor política de respuesta para V con respecto a un vector umbral T se define como B(W, V, T) = {(w, v) | v ∈ pbrV (w, T), w ∈ [0, 1]}.",
        "Es fácil ver que si alguno de los conjuntos B(Vj, Vj−1, T), j = 1, . . . , n, está vacío, significa que es imposible proporcionar a todos los jugadores los pagos esperados prescritos por T. De lo contrario, se puede aplicar el paso descendente del algoritmo original de [13] para encontrar un equilibrio de Nash.",
        "Dado que asumimos que Vn es un vértice ficticio cuya ganancia es idénticamente 0, el equilibrio de Nash con estas ganancias existe siempre y cuando Tn ≤ 0 y B(Vn, Vn−1, T) no esté vacío.",
        "Usando las técnicas desarrolladas en [9], no es difícil demostrar que para cualquier j = 1, . . . , n, el conjunto B(Vj , Vj−1, T) consiste en un número finito de rectángulos, y se puede calcular B(Vj+1, Vj , T) dado B(Vj , Vj−1, T).",
        "La ventaja de este enfoque es que nos permite representar todos los equilibrios de Nash que proporcionan los pagos requeridos a los jugadores.",
        "Sin embargo, no es probable que sea práctico, ya que resulta que los rectángulos que aparecen en la representación de B(Vj , Vj−1, T) pueden tener coordenadas irracionales.",
        "AFIRMACIÓN 6.",
        "Existe un juego gráfico G en un camino de 3 vértices UVW y un vector T = (T1, T2, T3) tal que B(V, W, T) no puede ser representado como una unión de un número finito de rectángulos con coordenadas racionales.",
        "PRUEBA.",
        "Definimos las recompensas para los jugadores en G de la siguiente manera.",
        "La ganancia para U es idénticamente 0, es decir, P0 (U) = P1 (U) = 0.",
        "Usando la Reclamación 1, seleccionamos los pagos para V de manera que P0 (V) = uw, P1 (V) = P0 (V) + w - .8u - .1, donde u y w son las estrategias (mixtas) de U y W, respectivamente.",
        "Se deduce que V es indiferente entre jugar 0 y 1 si y solo si w = f(u) = .8u + .1; observe que para cualquier u ∈ [0, 1] tenemos f(u) ∈ [0, 1].",
        "No es difícil ver que tenemos B(W, V) = [0, .1]×{0} ∪ [.1, .9]×[0, 1] ∪ [.9, 1]×{1}.",
        "Los pagos para W no son importantes para nuestra construcción; por ejemplo, establezca P0(W) = P0(W) = 0.",
        "Ahora, establezca T = (0, 1/8, 0), es decir, estamos interesados en equilibrios de Nash en los que el pago esperado de V sea al menos 1/8.",
        "Supongamos que w ∈ [0, 1].",
        "El jugador V puede jugar una estrategia mixta v cuando W está jugando w siempre que U juegue u = f−1 (w) = 5w/4 − 1/8 (para asegurar que V sea indiferente entre 0 y 1) y P0 (V) = P1 (V) = uw = w(5w/4 − 1/8) ≥ 1/8.",
        "La última condición se cumple si w ≤ (1 − √ 41)/20 < 0 o w ≥ (1 + √ 41)/20.",
        "Ten en cuenta que tenemos .1 < (1 + √ 41)/20 < .9.",
        "Para cualquier otro valor de w, cualquier estrategia de U hace que V prefiera una de las estrategias puras o no le proporciona un pago esperado suficiente.",
        "También hay algunos valores de w para los cuales V puede jugar una estrategia pura (0 o 1) como una mejor respuesta potencial a W y garantizarse a sí mismo un pago esperado de al menos 1/8; se puede demostrar que estos valores de w forman un número finito de segmentos en [0, 1].",
        "Concluimos que cualquier representación de B(W, V, T) como una unión de un número finito de rectángulos debe contener un rectángulo de la forma [(1 + √ 41)/20, w] × [v, v] para algún w, v, v ∈ [0, 1].",
        "Por otro lado, se puede demostrar que para cualquier matriz de pagos enteros y vectores de umbral, y para cualquier j = 1, . . . , n − 1, los conjuntos B(Vj+1, Vj, T) no contienen rectángulos de la forma [u , u ]×{v} o {v}×[w , w ], donde v ∈ R\\Q.",
        "Esto significa que si B(Vn, Vn−1, T) no está vacío, es decir, hay un equilibrio de Nash con pagos prescritos por T, entonces el paso descendente del algoritmo de [13] siempre puede elegir un perfil estratégico que forme un equilibrio de Nash, proporcione un pago de al menos Ti al jugador Vi y no tenga coordenadas irracionales.",
        "Por lo tanto, a diferencia del equilibrio de Nash que maximiza el bienestar social, no es necesario trabajar con números irracionales, y el hecho de que el algoritmo discutido en esta sección deba hacerlo puede considerarse como un argumento en contra de utilizar este enfoque.",
        "OTROS CRITERIOS PARA SELECCIONAR UN EQUILIBRIO DE NASH En esta sección, consideramos varios otros criterios que pueden ser útiles para seleccionar un equilibrio de Nash. 6.1 Combinando la maximización del bienestar con límites en los pagos En muchos escenarios de la vida real, queremos maximizar el bienestar social sujeto a ciertas restricciones en los pagos a los jugadores individuales.",
        "Por ejemplo, es posible que queramos asegurarnos de que ningún jugador obtenga una ganancia esperada negativa, o que la ganancia esperada para el jugador i sea al menos Pi max − ξ, donde Pi max es la entrada máxima de la matriz de ganancias de i y ξ es un parámetro fijo.",
        "Formalmente, dado un juego gráfico G y un vector T1, . . . , Tn, sea S el conjunto de todos los equilibrios de Nash s de G que satisfacen Ti ≤ EPVi (s) para i = 1, . . . , n, y sea ˆs = argmaxs∈S EP(s).",
        "Si el conjunto S no está vacío, podemos encontrar un equilibrio de Nash ˆs que esté -cerca de satisfacer los límites de pago y esté dentro de ε de ˆs con respecto al pago total al combinar los algoritmos de la Sección 4 y la Sección 5.",
        "Es decir, para un dado > 0, elige δ como en la demostración del Teorema 3, y deja que Xi sea el conjunto de todas las estrategias discretas del jugador Vi (para una definición formal, consulta la demostración del Teorema 3).",
        "Combinando las pruebas del Teorema 3 y el Teorema 5, podemos ver que el perfil de estrategia ˆt dado por ˆti = max{xj i | xj i ≤ ˆsi} satisface EPVi (ˆt) ≥ Ti − , |EP(ˆs) − EP(ˆt)| ≤ .",
        "Define ˆml,k i como la máxima ganancia total que V1, . . . , Vi−1 pueden lograr si cada Vj, j ≤ i, elige una estrategia de Xj, para cada j < i la estrategia de Vj es una mejor respuesta potencial a la estrategia de Vj+1 y la ganancia para el jugador Vj es al menos Tj − , y, además, Vi−1 juega xl i−1, Vi juega xk i.",
        "Si no hay forma de elegir las estrategias para V1, . . . , Vi−1 que cumplan con estas condiciones, establecemos ml,k i = −∞.",
        "El ˆml,k se puede calcular mediante programación dinámica de manera similar al ml,k y zl,k en las demostraciones de los Teoremas 3 y 5.",
        "Finalmente, como en la demostración del Teorema 3, utilizamos ml,k n para seleccionar el mejor equilibrio de Nash discreto sujeto a las restricciones de pago.",
        "Incluso de manera más general, es posible que deseemos maximizar el beneficio total para un subconjunto de jugadores (se supone que son capaces de redistribuir justamente las ganancias entre ellos mismos) mientras garantizamos ciertos beneficios esperados a (un subconjunto de) los otros jugadores.",
        "Este problema puede ser abordado de manera similar. 6.2 Un enfoque minimax Una medida más igualitaria de la calidad de un equilibrio de Nash es el pago esperado mínimo para un jugador.",
        "La solución óptima con respecto a esta medida es un equilibrio de Nash en el cual la ganancia esperada mínima para un jugador es máxima.",
        "Para encontrar una aproximación a dicho equilibrio de Nash, podemos combinar el algoritmo de la Sección 5 con la búsqueda binaria en el espacio de límites inferiores potenciales.",
        "Ten en cuenta que la ganancia esperada para cualquier jugador Vi dada una estrategia s siempre cumple con −Pmax ≤ EPVi (s) ≤ Pmax.",
        "Para un fijo > 0, comenzamos estableciendo T = −Pmax, T = Pmax, T∗ = (T + T )/2.",
        "Luego ejecutamos el algoritmo de la Sección 5 con T1 = · · · = Tn = T∗.",
        "Si el algoritmo tiene éxito al encontrar un equilibrio de Nash s que cumple con EPVi (s) ≥ T∗ − para todo i = 1, . . . , n, establecemos T = T∗, T∗ = (T + T)/2; de lo contrario, establecemos T = T∗, T∗ = (T + T)/2 y repetimos el ciclo.",
        "Repetimos este proceso hasta que |T − T | ≤ .",
        "No es difícil comprobar que para cualquier p ∈ R, si existe un equilibrio de Nash s tal que mini=1,...,n EPVi (s) ≥ p, entonces nuestro algoritmo devuelve un equilibrio de Nash s que cumple mini=1,...,n EPVi (s) ≥ p−2.",
        "El tiempo de ejecución de nuestro algoritmo es O(max{nP3 max log −1 / 3 , n4 log −1 / 3 }). 6.3 Igualando los pagos Cuando las matrices de pagos de los jugadores no son muy diferentes, es razonable exigir que los pagos esperados para los jugadores tampoco difieran mucho.",
        "Ahora demostraremos que los equilibrios de Nash en esta categoría también pueden aproximarse en tiempo polinómico.",
        "De hecho, observe que el algoritmo de la Sección 5 puede ser fácilmente modificado para tratar con límites superiores en las ganancias individuales en lugar de límites inferiores.",
        "Además, podemos calcular de manera eficiente una aproximación a un equilibrio de Nash que cumpla tanto con el límite superior como con el límite inferior para cada jugador.",
        "Más precisamente, supongamos que se nos da un juego gráfico G, 2n números racionales T1, . . . , Tn, T1, . . . , Tn y > 0.",
        "Entonces, si existe un perfil estratégico s tal que s es un equilibrio de Nash para G y Ti ≤ EPVi (s) ≤ Ti para i = 1, . . . , n, podemos encontrar un perfil estratégico s tal que s es un equilibrio de Nash para G y Ti − ≤ EPVi (s) ≤ Ti + para i = 1, . . . , n. El algoritmo modificado también se ejecuta en tiempo O(max{nP3 max/ 3 , [4]n4 / 3 }).",
        "Esta observación nos permite aproximar equilibrios de Nash en los que las ganancias esperadas de todos los jugadores difieren en un máximo de ξ para cualquier ξ fijo > 0.",
        "Dado un > 0, establecemos T1 = · · · = Tn = −Pmax, T1 = · · · = Tn = −Pmax + ξ + , y ejecutamos la versión modificada del algoritmo de la Sección 5.",
        "Si no logra encontrar una solución, incrementamos todos los Ti, Ti por y el bucle.",
        "Continuamos hasta que el algoritmo encuentre una solución, o Ti ≥ Pmax.",
        "Supongamos que existe un equilibrio de Nash s que satisface |EPVi (s) − EPVj (s)| ≤ ξ para todo i, j = 1, . . . , n. Definamos r = mini=1,...,n EPVi (s); tenemos r ≤ EPVi (s) ≤ r + ξ para todo i = 1, . . . , n. Existe un k ≥ 0 tal que −Pmax + (k − 1) ≤ r ≤ −Pmax + k.",
        "Durante el paso k del algoritmo, establecemos T1 = · · · = Tn = −Pmax +(k−1) , es decir, tenemos r− ≤ Ti ≤ r, r + ξ ≤ Ti ≤ r + ξ + .",
        "Es decir, el equilibrio de Nash s satisface Ti ≤ r ≤ EPVi (s) ≤ r + ξ ≤ Ti, lo que significa que cuando Ti se establece en −Pmax + (k − 1), nuestro algoritmo garantiza producir un equilibrio de Nash t que satisface r − 2 ≤ Ti − ≤ EPVi (t) ≤ Ti + ≤ r + ξ + 2.",
        "Concluimos que siempre que exista un equilibrio de Nash s, nuestro algoritmo produce un equilibrio de Nash t que satisface |EPVi (t) − EPVj (t)| ≤ ξ + 4 para todo i, j = 1, . . . , n. El tiempo de ejecución de este algoritmo es O(max{nP3 max/ 4 , n4 / 4 }).",
        "También debemos tener en cuenta que podemos encontrar el valor más pequeño de ξ para el cual existe un equilibrio de Nash combinando este algoritmo con una búsqueda binaria en el espacio ξ = [0, 2Pmax].",
        "Esto identifica una aproximación al equilibrio de Nash más justo, es decir, uno en el que las ganancias esperadas de los jugadores difieren por la menor cantidad posible.",
        "Finalmente, cabe destacar que todos los resultados de esta sección pueden extenderse a árboles de grado acotado. 7.",
        "CONCLUSIONES Hemos estudiado el problema de la selección de equilibrio en juegos gráficos en árboles de grado acotado.",
        "Consideramos varios criterios para seleccionar un equilibrio de Nash, como maximizar el bienestar social, garantizar un límite inferior en la recompensa esperada de cada jugador, etc.",
        "Primero, nos enfocamos en la complejidad algebraica de un equilibrio de Nash que maximiza el bienestar social, y demostramos resultados negativos contundentes para ese problema.",
        "Es decir, demostramos que incluso para juegos gráficos en caminos, cualquier número algebraico α ∈ [0, 1] puede ser la única estrategia disponible para algún jugador en todas las equilibrios de Nash que maximizan el bienestar social.",
        "Esto contrasta fuertemente con el hecho de que los juegos gráficos en árboles siempre poseen un equilibrio de Nash en el que las estrategias de todos los jugadores son números racionales.",
        "Luego proporcionamos algoritmos de aproximación para seleccionar equilibrios de Nash con propiedades especiales.",
        "Si bien el problema de encontrar equilibrios de Nash aproximados para diversas clases de juegos ha recibido mucha atención en los últimos años, la mayoría de los trabajos existentes tienen como objetivo encontrar equilibrios de Nash que satisfagan (o estén cerca de satisfacer) ciertas propiedades.",
        "Nuestro enfoque es diferente en que insistimos en producir un equilibrio de Nash exacto, que está cerca de satisfacer un requisito dado.",
        "Como se argumenta en la introducción, hay varias razones para preferir una solución que constituya un equilibrio de Nash exacto.",
        "Nuestros algoritmos son esquemas de aproximación de tiempo polinomial completo, es decir, su tiempo de ejecución es polinomial en el inverso del parámetro de aproximación, aunque pueden ser seudopolinomiales con respecto al tamaño de la entrada.",
        "Bajo restricciones leves en las entradas, estas pueden ser modificadas para ser verdaderamente polinomiales.",
        "Este es el resultado positivo más fuerte que se puede obtener para un problema cuyas soluciones exactas pueden ser difíciles de representar, como es el caso de muchos de los problemas considerados aquí.",
        "Mientras demostramos nuestros resultados para juegos en un camino, pueden generalizarse a cualquier árbol para el cual las políticas de mejor respuesta tengan representaciones compactas como uniones de rectángulos.",
        "En la versión completa del artículo describimos nuestros algoritmos para el caso general.",
        "Un trabajo adicional en esta línea podría incluir extensiones a los tipos de garantías buscadas para los equilibrios de Nash, como garantizar los pagos totales para subconjuntos de jugadores, seleccionar equilibrios en los que algunos jugadores estén recibiendo pagos significativamente más altos que sus pares, etc.",
        "Sin embargo, en este momento es quizás más importante investigar si los equilibrios de Nash de los juegos gráficos pueden ser calculados de manera descentralizada, en contraste con los algoritmos que hemos introducido aquí.",
        "Es natural preguntarse si nuestros resultados o los de [9] pueden generalizarse a juegos con tres o más acciones.",
        "Sin embargo, parece que esto hará el análisis significativamente más difícil.",
        "En particular, cabe destacar que se pueden considerar los juegos de pago limitado como un caso especial muy restringido de juegos con tres acciones por jugador.",
        "Es decir, dado un juego de dos acciones con límites de pago, considera un juego en el que cada jugador Vi tiene una tercera acción que le garantiza un pago de Ti sin importar lo que hagan los demás.",
        "Luego, verificar si existe un equilibrio de Nash en el cual ninguno de los jugadores asigna una probabilidad distinta de cero a su tercera acción es equivalente a comprobar si existe un equilibrio de Nash que cumpla con los límites de pago en el juego original, y la Sección 5.1 muestra que encontrar una solución exacta a este problema requiere nuevas ideas.",
        "Alternativamente, puede ser interesante buscar resultados similares en el contexto de equilibrios correlacionados (CE), especialmente dado que el mejor CE puede tener un valor más alto (pago esperado total) que el mejor NE.",
        "La proporción entre estos valores se llama el valor de mediación en [1].",
        "Se sabe por [1] que el valor de mediación de juegos de 2 jugadores y 2 acciones con pagos no negativos es a lo sumo 4 3, y presentan un juego de 3 jugadores para el cual es infinito.",
        "Además, un ejemplo de 2 jugadores y 3 acciones del [1] también tiene un valor de mediación infinito. 8.",
        "REFERENCIAS [1] I. Ashlagi, D. Monderer y M. Tenneholtz, Sobre el Valor de la Correlación, Actas del seminario de Dagstuhl 05011 (2005) [2] R. Aumann, Subjetividad y Correlación en Estrategias Aleatorias, Revista de Economía Matemática 1 pp. 67-96 (1974) [3] B. Blum, C. R. Shelton y D. Koller, Un Método de Continuación para Equilibrios de Nash en Juegos Estructurados, Actas de IJCAI03 [4] X. Chen, X. Deng y S. Teng, Computación de Equilibrios de Nash: Aproximación y Complejidad Suavizada, Actas de FOCS06 [5] X. Chen, X. Deng, Resolviendo la Complejidad del Equilibrio de Nash de 2 Jugadores, Actas de FOCS06 [6] V. Conitzer y T. Sandholm, Resultados de Complejidad sobre Equilibrios de Nash, Actas de IJCAI03 [7] C. Daskalakis, P. W. Goldberg y C. H. Papadimitriou, La Complejidad de Calcular un Equilibrio de Nash, Actas de STOC06 [8] R. S. Datta, Universalidad de los Equilibrios de Nash, Matemáticas de la Investigación Operativa 28:3, 2003 [9] E. Elkind, L. A. Goldberg y P. W. Goldberg, Equilibrios de Nash en Juegos Gráficos en Árboles Revisitados, Actas de ACM EC06 [10] E. Elkind, L. A. Goldberg y P. W. Goldberg, Computando Buenos Equilibrios de Nash en Juegos Gráficos, http://arxiv.org/abs/cs.GT/0703133 [11] I. Gilboa y E. Zemel, Equilibrios de Nash y Correlacionados: Algunas Consideraciones de Complejidad, Juegos y Comportamiento Económico, 1 pp. 80-93 (1989) [12] P. W. Goldberg y C. H. Papadimitriou, Reducibilidad entre Problemas de Equilibrio, Actas de STOC06 [13] M. Kearns, M. Littman y S. Singh, Modelos Gráficos para la Teoría de Juegos, Actas de UAI01 [14] M. Littman, M. Kearns y S. Singh, Un Algoritmo Exacto Eficiente para Juegos Gráficos Singularmente Conectados, Actas de NIPS01 [15] R. Lipton y E. Markakis, Equilibrios de Nash a través de Ecuaciones Polinomiales, Actas de LATIN04 [16] L. Ortiz y M. Kearns, Propagación de Nash para Juegos Gráficos con Lazos, Actas de NIPS03 [17] C.H.",
        "Papadimitriou, Computando equilibrios correlacionados en juegos de varios jugadores, Actas de STOC05 [18] C.H.",
        "Papadimitriou y T. Roughgarden, Computando equilibrios en juegos de múltiples jugadores, Actas de SODA05 [19] D. Vickrey y D. Koller, Algoritmos multiagente para resolver juegos gráficos, Actas de AAAI02 171"
    ],
    "error_count": 0,
    "keys": {
        "graphical game": {
            "translated_key": "juego gráfico",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Computing Good Nash Equilibria in Graphical Games ∗ Edith Elkind Hebrew University of Jerusalem, Israel, and University of Southampton, Southampton, SO17 1BJ, U.K. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K. ABSTRACT This paper addresses the problem of fair equilibrium selection in graphical games.",
                "Our approach is based on the data structure called the best response policy, which was proposed by Kearns et al. [13] as a way to represent all Nash equilibria of a <br>graphical game</br>.",
                "In [9], it was shown that the best response policy has polynomial size as long as the underlying graph is a path.",
                "In this paper, we show that if the underlying graph is a bounded-degree tree and the best response policy has polynomial size then there is an efficient algorithm which constructs a Nash equilibrium that guarantees certain payoffs to all participants.",
                "Another attractive solution concept is a Nash equilibrium that maximizes the social welfare.",
                "We show that, while exactly computing the latter is infeasible (we prove that solving this problem may involve algebraic numbers of an arbitrarily high degree), there exists an FPTAS for finding such an equilibrium as long as the best response policy has polynomial size.",
                "These two algorithms can be combined to produce Nash equilibria that satisfy various fairness criteria.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a large community of agents, an agents behavior is not likely to have a direct effect on most other agents: rather, it is just the agents who are close enough to him that will be affected.",
                "However, as these agents respond by adapting their behavior, more agents will feel the consequences and eventually the choices made by a single agent will propagate throughout the entire community.",
                "This is the intuition behind graphical games, which were introduced by Kearns, Littman and Singh in [13] as a compact representation scheme for games with many players.",
                "In an n-player <br>graphical game</br>, each player is associated with a vertex of an underlying graph G, and the payoffs of each player depend on his action as well as on the actions of his neighbors in the graph.",
                "If the maximum degree of G is Δ, and each player has two actions available to him, then the game can be represented using n2Δ+1 numbers.",
                "In contrast, we need n2n numbers to represent a general n-player 2-action game, which is only practical for small values of n. For graphical games with constant Δ, the size of the game is linear in n. One of the most natural problems for a <br>graphical game</br> is that of finding a Nash equilibrium, the existence of which follows from Nashs celebrated theorem (as graphical games are just a special case of n-player games).",
                "The first attempt to tackle this problem was made in [13], where the authors consider graphical games with two actions per player in which the underlying graph is a boundeddegree tree.",
                "They propose a generic algorithm for finding Nash equilibria that can be specialized in two ways: an exponential-time algorithm for finding an (exact) Nash equilibrium, and a fully polynomial time approximation scheme (FPTAS) for finding an approximation to a Nash equilibrium.",
                "For any > 0 this algorithm outputs an -Nash equilibrium, which is a strategy profile in which no player can improve his payoff by more than by unilaterally changing his strategy.",
                "While -Nash equilibria are often easier to compute than exact Nash equilibria, this solution concept has several drawbacks.",
                "First, the players may be sensitive to a small loss in payoffs, so the strategy profile that is an -Nash equilibrium will not be stable.",
                "This will be the case even if there is only a small subset of players who are extremely price-sensitive, and for a large population of players it may be difficult to choose a value of that will satisfy everyone.",
                "Second, the strategy profiles that are close to being Nash equilibria may be much better with respect to the properties under consideration than exact Nash equilibria.",
                "Therefore, the (approximation to the) value of the best solution that corresponds to an -Nash equilibrium may not be indicative of what can be achieved under an exact Nash equilibrium.",
                "This is especially important if the purpose of the approximate solution is to provide a good benchmark for a system of selfish agents, as the benchmark implied by an -Nash equilibrium may be unrealistic.",
                "For these reasons, in this paper we focus on the problem of computing exact Nash equilibria.",
                "Building on ideas of [14], Elkind et al. [9] showed how to find an (exact) Nash equilibrium in polynomial time when the underlying 162 graph has degree 2 (that is, when the graph is a collection of paths and cycles).",
                "By contrast, finding a Nash equilibrium in a general degree-bounded graph appears to be computationally intractable: it has been shown (see [5, 12, 7]) to be complete for the complexity class PPAD. [9] extends this hardness result to the case in which the underlying graph has bounded pathwidth.",
                "A <br>graphical game</br> may not have a unique Nash equilibrium, indeed it may have exponentially many.",
                "Moreover, some Nash equilibria are more desirable than others.",
                "Rather than having an algorithm which merely finds some Nash equilibrium, we would like to have algorithms for finding Nash equilibria with various sociallydesirable properties, such as maximizing overall payoff or distributing profit fairly.",
                "A useful property of the data structure of [13] is that it simultaneously represents the set of all Nash equilibria of the underlying game.",
                "If this representation has polynomial size (as is the case for paths, as shown in [9]), one may hope to extract from it a Nash equilibrium with the desired properties.",
                "In fact, in [13] the authors mention that this is indeed possible if one is interested in finding an (approximate) -Nash equilibrium.",
                "The goal of this paper is to extend this to exact Nash equilibria. 1.1 Our Results In this paper, we study n-player 2-action graphical games on bounded-degree trees for which the data structure of [13] has size poly(n).",
                "We focus on the problem of finding exact Nash equilibria with certain socially-desirable properties.",
                "In particular, we show how to find a Nash equilibrium that (nearly) maximizes the social welfare, i.e., the sum of the players payoffs, and we show how to find a Nash equilibrium that (nearly) satisfies prescribed payoff bounds for all players.",
                "Graphical games on bounded-degree trees have a simple algebraic structure.",
                "One attractive feature, which follows from [13], is that every such game has a Nash equilibrium in which the strategy of every player is a rational number.",
                "Section 3 studies the algebraic structure of those Nash equilibria that maximize social welfare.",
                "We show (Theorems 1 and 2) that, surprisingly, the set of Nash equilibria that maximize social welfare is more complex.",
                "In fact, for any algebraic number α ∈ [0, 1] with degree at most n, we exhibit a <br>graphical game</br> on a path of length O(n) such that, in the unique social welfare-maximizing Nash equilibrium of this game, one of the players plays the mixed strategy α.1 This result shows that it may be difficult to represent an optimal Nash equilibrium.",
                "It seems to be a novel feature of the setting we consider here, that an optimal Nash equilibrium is hard to represent, in a situation where it is easy to find and represent a Nash equilibrium.",
                "As the social welfare-maximizing Nash equilibrium may be hard to represent efficiently, we have to settle for an approximation.",
                "However, the crucial difference between our approach and that of previous papers [13, 16, 19] is that we require our algorithm to output an exact Nash equilibrium, though not necessarily the optimal one with respect to our criteria.",
                "In Section 4, we describe an algorithm that satisfies this requirement.",
                "Namely, we propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within of optimal.",
                "It runs in polynomial time (Theorem 3,4) for any <br>graphical game</br> on a bounded-degree tree for which the data structure proposed by [13] (the so-called best response policy, defined below) is of size poly(n) (note that, as shown in [9], this is always the case when the underlying graph is a path).",
                "More pre1 A related result in a different context was obtained by Datta [8], who shows that n-player 2-action games are universal in the sense that any real algebraic variety can be represented as the set of totally mixed Nash equilibria of such games. cisely, the running time of our algorithm is polynomial in n, Pmax, and 1/ , where Pmax is the maximum absolute value of an entry of a payoff matrix, i.e., it is a pseudopolynomial algorithm, though it is fully polynomial with respect to .",
                "We show (Section 4.1) that under some restrictions on the payoff matrices, the algorithm can be transformed into a (truly) polynomial-time algorithm that outputs a Nash equilibrium whose total payoff is within a 1 − factor from the optimal.",
                "In Section 5, we consider the problem of finding a Nash equilibrium in which the expected payoff of each player Vi exceeds a prescribed threshold Ti.",
                "Using the idea from Section 4 we give (Theorem 5) a fully polynomial time approximation scheme for this problem.",
                "The running time of the algorithm is bounded by a polynomial in n, Pmax, and .",
                "If the instance has a Nash equilibrium satisfying the prescribed thresholds then the algorithm constructs a Nash equilibrium in which the expected payoff of each player Vi is at least Ti − .",
                "In Section 6, we introduce other natural criteria for selecting a good Nash equilibrium and we show that the algorithms described in the two previous sections can be used as building blocks in finding Nash equilibria that satisfy these criteria.",
                "In particular, in Section 6.1 we show how to find a Nash equilibrium that approximates the maximum social welfare, while guaranteeing that each individual payoff is close to a prescribed threshold.",
                "In Section 6.2 we show how to find a Nash equilibrium that (nearly) maximizes the minimum individual payoff.",
                "Finally, in Section 6.3 we show how to find a Nash equilibrium in which the individual payoffs of the players are close to each other. 1.2 Related Work Our approximation scheme (Theorem 3 and Theorem 4) shows a contrast between the games that we study and two-player n-action games, for which the corresponding problems are usually intractable.",
                "For two-player n-action games, the problem of finding Nash equilibria with special properties is typically NP-hard.",
                "In particular, this is the case for Nash equilibria that maximize the social welfare [11, 6].",
                "Moreover, it is likely to be intractable even to approximate such equilibria.",
                "In particular, Chen, Deng and Teng [4] show that there exists some , inverse polynomial in n, for which computing an -Nash equilibrium in 2-player games with n actions per player is PPAD-complete.",
                "Lipton and Markakis [15] study the algebraic properties of Nash equilibria, and point out that standard quantifier elimination algorithms can be used to solve them.",
                "Note that these algorithms are not polynomial-time in general.",
                "The games we study in this paper have polynomial-time computable Nash equilibria in which all mixed strategies are rational numbers, but an optimal Nash equilibrium may necessarily include mixed strategies with high algebraic degree.",
                "A correlated equilibrium (CE) (introduced by Aumann [2]) is a distribution over vectors of players actions with the property that if any player is told his own action (the value of his own component) from a vector generated by that distribution, then he cannot increase his expected payoff by changing his action.",
                "Any Nash equilibrium is a CE but the converse does not hold in general.",
                "In contrast with Nash equilibria, correlated equilibria can be found for low-degree graphical games (as well as other classes of conciselyrepresented multiplayer games) in polynomial time [17].",
                "But, for graphical games it is NP-hard to find a correlated equilibrium that maximizes total payoff [18].",
                "However, the NP-hardness results apply to more general games than the one we consider here, in particular the graphs are not trees.",
                "From [2] it is also known that there exist 2-player, 2-action games for which the expected total payoff 163 of the best correlated equilibrium is higher than the best Nash equilibrium, and we discuss this issue further in Section 7. 2.",
                "PRELIMINARIES AND NOTATION We consider graphical games in which the underlying graph G is an n-vertex tree, in which each vertex has at most Δ children.",
                "Each vertex has two actions, which are denoted by 0 and 1.",
                "A mixed strategy of a player V is represented as a single number v ∈ [0, 1], which denotes the probability that V selects action 1.",
                "For the purposes of the algorithm, the tree is rooted arbitrarily.",
                "For convenience, we assume without loss of generality that the root has a single child, and that its payoff is independent of the action chosen by the child.",
                "This can be achieved by first choosing an arbitrary root of the tree, and then adding a dummy parent of this root, giving the new parent a constant payoff function, e.g., 0.",
                "Given an edge (V, W ) of the tree G, and a mixed strategy w for W , let G(V,W ),W =w be the instance obtained from G by (1) deleting all nodes Z which are separated from V by W (i.e., all nodes Z such that the path from Z to V passes through W ), and (2) restricting the instance so that W is required to play mixed strategy w. Definition 1.",
                "Suppose that (V, W ) is an edge of the tree, that v is a mixed strategy for V and that w is a mixed strategy for W .",
                "We say that v is a potential best response to w (denoted by v ∈ pbrV (w)) if there is an equilibrium in the instance G(V,W ),W =w in which V has mixed strategy v. We define the best response policy for V , given W , as B(W, V ) = {(w, v) | v ∈ pbrV (w), w ∈ [0, 1]}.",
                "The upstream pass of the generic algorithm of [13] considers every node V (other than the root) and computes the best response policy for V given its parent.",
                "With the above assumptions about the root, the downstream pass is straightforward.",
                "The root selects a mixed strategy w for the root W and a mixed strategy v ∈ B(W, V ) for each child V of W .",
                "It instructs each child V to play v. The remainder of the downward pass is recursive.",
                "When a node V is instructed by its parent to adopt mixed strategy v, it does the following for each child U - It finds a pair (v, u) ∈ B(V, U) (with the same v value that it was given by its parent) and instructs U to play u.",
                "The best response policy for a vertex U given its parent V can be represented as a union of rectangles, where a rectangle is defined by a pair of closed intervals (IV , IU ) and consists of all points in IV × IU ; it may be the case that one or both of the intervals IV and IU consists of a single point.",
                "In order to perform computations on B(V, U), and to bound the number of rectangles, [9] used the notion of an event point, which is defined as follows.",
                "For any set A ⊆ [0, 1]2 that is represented as a union of a finite number of rectangles, we say that a point u ∈ [0, 1] on the U-axis is a Uevent point of A if u = 0 or u = 1 or the representation of A contains a rectangle of the form IV × IU and u is an endpoint of IU ; V -event points are defined similarly.",
                "For many games considered in this paper, the underlying graph is an n-vertex path, i.e., a graph G = (V, E) with V = {V1, . . . , Vn} and E = {(V1, V2), . . . , (Vn−1, Vn)}.",
                "In [9], it was shown that for such games, the best response policy has only polynomially-many rectangles.",
                "The proof that the number of rectangles in B(Vj+1, Vj) is polynomial proceeds by first showing that the number of event points in B(Vj+1, Vj ) cannot exceed the number of event points in B(Vj, Vj−1) by more than 2, and using this fact to bound the number of rectangles in B(Vj+1, Vj ).",
                "Let P0 (V ) and P1 (V ) be the expected payoffs to V when it plays 0 and 1, respectively.",
                "Both P0 (V ) and P1 (V ) are multilinear functions of the strategies of V s neighbors.",
                "In what follows, we will frequently use the following simple observation.",
                "CLAIM 1.",
                "For a vertex V with a single child U and parent W , given any A, B, C, D ∈ Q, A , B , C , D ∈ Q, one can select the payoffs to V so that P0 (V ) = Auw + Bu + Cw + D, P1 (V ) = A uw + B u + C w + D .",
                "Moreover, if all A, B, C, D, A , B , C , D are integer, the payoffs to V are integer as well.",
                "PROOF.",
                "We will give the proof for P0 (V ); the proof for P1 (V ) is similar.",
                "For i, j = 0, 1, let Pij be the payoff to V when U plays i, V plays 0 and W plays j.",
                "We have P0 (V ) = P00(1 − u)(1 − w) + P10u(1 − w) + P01(1 − u)w + P11uw.",
                "We have to select the values of Pij so that P00 − P10 − P01 + P11 = A, −P00 + P10 = B, −P00 + P01 = C, P00 = D. It is easy to see that the unique solution is given by P00 = D, P01 = C + D, P10 = B + D, P11 = A + B + C + D. The input to all algorithms considered in this paper includes the payoff matrices for each player.",
                "We assume that all elements of these matrices are integer.",
                "Let Pmax be the greatest absolute value of any element of any payoff matrix.",
                "Then the input consists of at most n2Δ+1 numbers, each of which can be represented using log Pmax bits. 3.",
                "NASH EQUILIBRIA THAT MAXIMIZE THE SOCIAL WELFARE: SOLUTIONS IN R \\ Q From the point of view of social welfare, the best Nash equilibrium is the one that maximizes the sum of the players expected payoffs.",
                "Unfortunately, it turns out that computing such a strategy profile exactly is not possible: in this section, we show that even if all players payoffs are integers, the strategy profile that maximizes the total payoff may have irrational coordinates; moreover, it may involve algebraic numbers of an arbitrary degree. 3.1 Warm-up: quadratic irrationalities We start by providing an example of a <br>graphical game</br> on a path of length 3 with integer payoffs such that in the Nash equilibrium that maximizes the total payoff, one of the players has a strategy in R \\ Q.",
                "In the next subsection, we will extend this example to algebraic numbers of arbitrary degree n; to do so, we have to consider paths of length O(n).",
                "THEOREM 1.",
                "There exists an integer-payoff <br>graphical game</br> G on a 3-vertex path UV W such that, in any Nash equilibrium of G that maximizes social welfare, the strategy, u, of the player U and the total payoff, p, satisfy u, p ∈ R \\ Q.",
                "PROOF.",
                "The payoffs to the players in G are specified as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = −uw + 3w and P1 (V ) = P0 (V ) + w(u + 2) − (u + 1), where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = u+1 u+2 .",
                "Observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "The payoff to W is 0 if it selects the same action as V and 1 otherwise.",
                "CLAIM 2.",
                "All Nash equilibria of the game G are of the form (u, 1/2, f(u)).",
                "That is, in any Nash equilibrium, V plays v = 1/2 and W plays w = f(u).",
                "Moreover, for any value of u, the vector of strategies (u, 1/2, f(u)) constitutes a Nash equilibrium.",
                "PROOF.",
                "It is easy to check that for any u ∈ [0, 1], the vector (u, 1/2, f(u)) is a Nash equilibrium.",
                "Indeed, U is content to play 164 any mixed strategy u no matter what V and W do.",
                "Furthermore, V is indifferent between 0 and 1 as long as w = f(u), so it can play 1/2.",
                "Finally, if V plays 0 and 1 with equal probability, W is indifferent between 0 and 1, so it can play f(u).",
                "Conversely, suppose that v > 1/2.",
                "Then W strictly prefers to play 0, i.e., w = 0.",
                "Then for V we have P1 (V ) = P0 (V ) − (u + 1), i.e., P1 (V ) < P0 (V ), which implies v = 0, a contradiction.",
                "Similarly, if v < 1/2, player W prefers to play 1, so we have w = 1.",
                "Hence, P1 (V ) = P0 (V ) + (u + 2) − (u + 1), i.e., P1 (V ) > P0 (V ), which implies v = 1, a contradiction.",
                "Finally, if v = 1/2, but w = f(u), player V is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "This completes the proof of Claim 2.",
                "By Claim 2, the total payoff in any Nash equilibrium of this game is a function of u.",
                "More specifically, the payoff to U is 0, the payoff to V is −uf(u) + 3f(u), and the payoff to W is 1/2.",
                "Therefore, the Nash equilibrium with the maximum total payoff corresponds to the value of u that maximizes g(u) = −u (u + 1) u + 2 + 3 u + 1 u + 2 = − (u − 3)(u + 1) u + 2 .",
                "To find extrema of g(u), we compute h(u) = − d du g(u).",
                "We have h(u) = (2u − 2)(u + 2) − (u − 3)(u + 1) (u + 2)2 = u2 + 4u − 1 (u + 2)2 .",
                "Hence, h(u) = 0 if and only if u ∈ {−2 + √ 5, −2 − √ 5}.",
                "Note that −2 + √ 5 ∈ [0, 1].",
                "The function g(u) changes sign at −2, −1, and 3.",
                "We have g(u) < 0 for g > 3, g(u) > 0 for u < −2, so the extremum of g(u) that lies between 1 and 3, i.e., u = −2 + √ 5, is a local maximum.",
                "We conclude that the social welfare-maximizing Nash equilibrium for this game is given by the vector of strategies (−2+√ 5, 1/2, (5 − √ 5)/5).",
                "The respective total payoff is 0 − ( √ 5 − 5)( √ 5 − 1) √ 5 + 1 2 = 13/2 − 2 √ 5.",
                "This concludes the proof of Theorem 1. 3.2 Strategies of arbitrary degree We have shown that in the social welfare-maximizing Nash equilibrium, some players strategies can be quadratic irrationalities, and so can the total payoff.",
                "In this subsection, we will extend this result to show that we can construct an integer-payoff <br>graphical game</br> on a path whose social welfare-maximizing Nash equilibrium involves arbitrary algebraic numbers in [0, 1].",
                "THEOREM 2.",
                "For any degree-n algebraic number α ∈ [0, 1], there exists an integer payoff <br>graphical game</br> on a path of length O(n) such that, in all social welfare-maximizing Nash equilibria of this game, one of the players plays α.",
                "PROOF.",
                "Our proof consists of two steps.",
                "First, we construct a rational expression R(x) and a segment [x , x ] such that x , x ∈ Q and α is the only maximum of R(x) on [x , x ].",
                "Second, we construct a <br>graphical game</br> whose Nash equilibria can be parameterized by u ∈ [x , x ], so that at the equilibrium that corresponds to u the total payoff is R(u) and, moreover, some players strategy is u.",
                "It follows that to achieve the payoff-maximizing Nash equilibrium, this player has to play α.",
                "The details follow.",
                "LEMMA 1.",
                "Given an algebraic number α ∈ [0, 1], deg(α) = n, there exist K2, . . . , K2n+2 ∈ Q and x , x ∈ (0, 1) ∩ Q such that α is the only maximum of R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 on [x , x ].",
                "PROOF.",
                "Let P(x) be the minimal polynomial of α, i.e., a polynomial of degree n with rational coefficients whose leading coefficient is 1 such that P(α) = 0.",
                "Let A = {α1, . . . , αn} be the set of all roots of P(x).",
                "Consider the polynomial Q1(x) = −P2 (x).",
                "It has the same roots as P(x), and moreover, for any x ∈ A we have Q1(x) < 0.",
                "Hence, A is the set of all maxima of Q1(x).",
                "Now, set R(x) = Q1(x) (x+2)...(x+2n+1)(x+2n+2) .",
                "Observe that R(x) ≤ 0 for all x ∈ [0, 1] and R(x) = 0 if and only if Q1(x) = 0.",
                "Hence, the set A is also the set of all maxima of R(x) on [0, 1].",
                "Let d = min{|αi − α| | αi ∈ A, αi = α}, and set α = max{α − d/2, 0}, α = min{α + d/2, 1}.",
                "Clearly, α is the only zero (and hence, the only maximum) of R(x) on [α , α ].",
                "Let x and x be some rational numbers in (α , α) and (α, α ), respectively; note that by excluding the endpoints of the intervals we ensure that x , x = 0, 1.",
                "As [x , x ] ⊂ [α , α ], we have that α is the only maximum of R(x) on [x , x ].",
                "As R(x) is a proper rational expression and all roots of its denominator are simple, by partial fraction decomposition theorem, R(x) can be represented as R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 , where K2, . . . , K2n+2 are rational numbers.",
                "Consider a <br>graphical game</br> on the path U−1V−1U0V0U1V1 . . .",
                "Uk−1Vk−1Uk, where k = 2n + 2.",
                "Intuitively, we want each triple (Ui−1, Vi−1, Ui) to behave similarly to the players U, V , and W from the game described in the previous subsection.",
                "More precisely, we define the payoffs to the players in the following way. • The payoff to U−1 is 0 no matter what everyone else does. • The expected payoff to V−1 is 0 if it plays 0 and u0 − (x − x )u−1 −x if it plays 1, where u0 and u−1 are the strategies of U0 and U−1, respectively. • The expected payoff to V0 is 0 if it plays 0 and u1(u0 + 1)− u0 if it plays 1, where u0 and u1 are the strategies of U0 and U1, respectively. • For each i = 1, . . . , k − 1, the expected payoff to Vi when it plays 0 is P0 (Vi) = Aiuiui+1 − Aiui+1, and the expected payoff to Vi when it plays 1 is P1 (Vi) = P0 (Vi) + ui+1(2 − ui) − 1, where Ai = −Ki+1 and ui+1 and ui are the strategies of Ui+1 and Ui, respectively. • For each i = 0, . . . , k, the payoff to Ui does not depend on Vi and is 1 if Ui and Vi−1 select different actions and 0 otherwise.",
                "We will now characterize the Nash equilibria of this game using a sequence of claims.",
                "CLAIM 3.",
                "In all Nash equilibria of this game V−1 plays 1/2, and the strategies of u−1 and u0 satisfy u0 = (x − x )u−1 + x .",
                "Consequently, in all Nash equilibria we have u0 ∈ [x , x ]. 165 PROOF.",
                "The proof is similar to that of Claim 2.",
                "Let f(u−1) = (x − x )u−1 + x .",
                "Clearly, the player V−1 is indifferent between playing 0 and 1 if and only if u0 = f(u−1).",
                "Suppose that v−1 < 1/2.",
                "Then U0 strictly prefers to play 1, i.e., u0 = 1, so we have P1 (V−1) = P0 (V−1) + 1 − (x − x )u−1 − x .",
                "As 1 − x ≤ 1 − (x − x )u−1 − x ≤ 1 − x for u−1 ∈ [0, 1] and x < 1, we have P1 (V−1) > P0 (V−1), so V−1 prefers to play 1, a contradiction.",
                "Similarly, if v−1 > 1/2, the player U0 strictly prefers to play 0, i.e., u0 = 0, so we have P1 (V−1) = P0 (V−1) − (x − x )u−1 − x .",
                "As x < x , x > 0, we have P1 (V−1) < P0 (V−1), so V−1 prefers to play 0, a contradiction.",
                "Finally, if V−1 plays 1/2, but u0 = f(u−1), player V−1 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Also, note that f(0) = x , f(1) = x , and, moreover, f(u−1) ∈ [x , x ] if and only if u−1 ∈ [0, 1].",
                "Hence, in all Nash equilibria of this game we have u0 ∈ [x , x ].",
                "CLAIM 4.",
                "In all Nash equilibria of this game for each i = 0, . . . , k − 1, we have vi = 1/2, and the strategies of the players Ui and Ui+1 satisfy ui+1 = fi(ui), where f0(u) = u/(u + 1) and fi(u) = 1/(2 − u) for i > 0.",
                "PROOF.",
                "The proof of this claim is also similar to that of Claim 2.",
                "We use induction on i to prove that the statement of the claim is true and, additionally, ui = 1 for i > 0.",
                "For the base case i = 0, note that u0 = 0 by the previous claim (recall that x , x are selected so that x , x = 0, 1) and consider the triple (U0, V0, U1).",
                "Let v0 be the strategy of V0.",
                "First, suppose that v0 > 1/2.",
                "Then U1 strictly prefers to play 0, i.e., u1 = 0.",
                "Then for V0 we have P1 (V0) = P0 (V0) − u0.",
                "As u0 = 0, we have P1 (V0) < P0 (V0), which implies v1 = 0, a contradiction.",
                "Similarly, if v0 < 1/2, player U1 prefers to play 1, so we have u1 = 1.",
                "Hence, P1 (V0) = P0 (V0) + 1.",
                "It follows that P1 (V0) > P0 (V0), which implies v0 = 1, a contradiction.",
                "Finally, if v0 = 1/2, but u1 = u0/(u0 + 1), player V0 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as u1 = u0/(u0 + 1) and u0 ∈ [0, 1], we have u1 = 1.",
                "The argument for the inductive step is similar.",
                "Namely, suppose that the statement is proved for all i < i and consider the triple (Ui, Vi, Ui+1).",
                "Let vi be the strategy of Vi.",
                "First, suppose that vi > 1/2.",
                "Then Ui+1 strictly prefers to play 0, i.e., ui+1 = 0.",
                "Then for Vi we have P1 (Vi) = P0 (Vi)−1, i.e., P1 (Vi) < P0 (Vi), which implies vi = 0, a contradiction.",
                "Similarly, if vi < 1/2, player Ui+1 prefers to play 1, so we have ui+1 = 1.",
                "Hence, P1 (Vi) = P0 (Vi) + 1 − ui.",
                "By inductive hypothesis, we have ui < 1.",
                "Consequently, P1 (Vi) > P0 (Vi), which implies vi = 1, a contradiction.",
                "Finally, if vi = 1/2, but ui+1 = 1/(2 − ui), player Vi is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as ui+1 = 1/(2 − ui) and ui < 1, we have ui+1 < 1.",
                "CLAIM 5.",
                "Any strategy profile of the form (u−1, 1/2, u0, 1/2, u1, 1/2, . . . , uk−1, 1/2, uk), where u−1 ∈ [0, 1], u0 = (x − x )u−1 + x , u1 = u0/(u0 + 1), and ui+1 = 1/(2 − ui) for i ≥ 1 constitutes a Nash equilibrium.",
                "PROOF.",
                "First, the player U−1s payoffs do not depend on other players actions, so he is free to play any strategy in [0, 1].",
                "As long as u0 = (x −x )u−1 +x , player V−1 is indifferent between 0 and 1, so he is content to play 1/2; a similar argument applies to players V0, . . . , Vk−1.",
                "Finally, for each i = 0, . . . , k, the payoffs of player Ui only depend on the strategy of player Vi−1.",
                "In particular, as long as vi−1 = 1/2, player Ui is indifferent between playing 0 and 1, so he can play any mixed strategy ui ∈ [0, 1].",
                "To complete the proof, note that (x − x )u−1 + x ∈ [0, 1] for all u−1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] for all u0 ∈ [0, 1], and 1/(2 − ui) ∈ [0, 1] for all ui ∈ [0, 1], so we have ui ∈ [0, 1] for all i = 0, . . . , k. Now, let us compute the total payoff under a strategy profile of the form given in Claim 5.",
                "The payoff to U−1 is 0, and the expected payoff to each of the Ui, i = 0, . . . , k, is 1/2.",
                "The expected payoffs to V−1 and V0 are 0.",
                "Finally, for any i = 1, . . . , k − 1, the expected payoff to Vi is Ti = Aiuiui+1 − Aiui+1.",
                "It follows that to find a Nash equilibrium with the highest total payoff, we have to maximize Pk−1 i=1 Ti subject to conditions u−1 ∈ [0, 1], u0 = (x −x )u−1+x , u1 = u0/(u0+1), and ui+1 = 1/(2−ui) for i = 1, . . . , k − 1.",
                "We would like to express Pk−1 i=1 Ti as a function of u0.",
                "To simplify notation, set u = u0.",
                "LEMMA 2.",
                "For i = 1, . . . , k, we have ui = u+i−1 u+i .",
                "PROOF.",
                "The proof is by induction on i.",
                "For i = 1, we have u1 = u/(u + 1).",
                "Now, for i ≥ 2 suppose that ui−1 = (u + i − 2)/(u + i − 1).",
                "We have ui = 1/(2 − ui−1) = (u + i − 1)/(2u + 2i − 2 − u − i + 2) = (u + i − 1)/(u + i).",
                "It follows that for i = 1, . . . , k − 1 we have Ti = Ai u + i − 1 u + i u + i u + i + 1 − Ai u + i u + i + 1 = −Ai 1 u + i + 1 = Ki+1 u + i + 1 .",
                "Observe that as u−1 varies from 0 to 1, u varies from x to x .",
                "Therefore, to maximize the total payoff, we have to choose u ∈ [x , x ] so as to maximize K2 u + 2 + · · · + Kk u + k = R(u).",
                "By construction, the only maximum of R(u) on [x , x ] is α.",
                "It follows that in the payoff-maximizing Nash equilibrium of our game U0 plays α.",
                "Finally, note that the payoffs in our game are rational rather than integer.",
                "However, it is easy to see that we can multiply all payoffs to a player by their greatest common denominator without affecting his strategy.",
                "In the resulting game, all payoffs are integer.",
                "This concludes the proof of Theorem 2. 4.",
                "APPROXIMATING THE SOCIALLY OPTIMAL NASH EQUILIBRIUM We have seen that the Nash equilibrium that maximizes the social welfare may involve strategies that are not in Q.",
                "Hence, in this section we focus on finding a Nash equilibrium that is almost optimal from the social welfare perspective.",
                "We propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within from optimal.",
                "The running time of this algorithm is polynomial in 1/ , n and |Pmax| (recall that Pmax is the maximum absolute value of an entry of a payoff matrix).",
                "While the negative result of the previous section is for graphical games on paths, our algorithm applies to a wider range of scenarios.",
                "Namely, it runs in polynomial time on bounded-degree trees 166 as long as the best response policy of each vertex, given its parent, can be represented as a union of a polynomial number of rectangles.",
                "Note that path graphs always satisfy this condition: in [9] we showed how to compute such a representation, given a graph with maximum degree 2.",
                "Consequently, for path graphs the running time of our algorithm is guaranteed to be polynomial. (Note that [9] exhibits a family of graphical games on bounded-degree trees for which the best response policies of some of the vertices, given their parents, have exponential size, when represented as unions of rectangles.)",
                "Due to space restrictions, in this version of the paper we present the algorithm for the case where the graph underlying the <br>graphical game</br> is a path.",
                "We then state our result for the general case; the proof can be found in the full version of this paper [10].",
                "Suppose that s is a strategy profile for a <br>graphical game</br> G. That is, s assigns a mixed strategy to each vertex of G. let EPV (s) be the expected payoff of player V under s and let EP(s) =P V EPV (s).",
                "Let M(G) = max{EP(s) | s is a Nash equilibrium for G}.",
                "THEOREM 3.",
                "Suppose that G is a <br>graphical game</br> on an nvertex path.",
                "Then for any > 0 there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G)− .",
                "The running time of the algorithm is O(n4 P3 max/ 3 ) PROOF.",
                "Let {V1, . . . , Vn} be the set of all players.",
                "We start by constructing the best response policies for all Vi, i = 1, . . . , n − 1.",
                "As shown in [9], this can be done in time O(n3 ).",
                "Let N > 5n be a parameter to be selected later, set δ = 1/N, and define X = {jδ | j = 0, . . . , N}.",
                "We say that vj is an event point for a player Vi if it is a Vi-event point for B(Vi, Vi−1) or B(Vi+1, Vi).",
                "For each player Vi, consider a finite set of strategies Xi given by Xi = X ∪ {vj |vj is an event point for Vi}.",
                "It has been shown in [9] that for any i = 2, . . . , n, the best response policy B(Vi, Vi−1) has at most 2n + 4 Vi-event points.",
                "As we require N > 5n, we have |Xi| ≤ 2N; assume without loss of generality that |Xi| = 2N.",
                "Order the elements of Xi in increasing order as x1 i = 0 < x2 i < · · · < x2N i .",
                "We will refer to the strategies in Xi as discrete strategies of player Vi; a strategy profile in which each player has a discrete strategy will be referred to as a discrete strategy profile.",
                "We will now show that even we restrict each player Vi to strategies from Xi, the players can still achieve a Nash equilibrium, and moreover, the best such Nash equilibrium (with respect to the social welfare) has total payoff at least M(G) − as long as N is large enough.",
                "Let s be a strategy profile that maximizes social welfare.",
                "That is, let s = (s1, . . . , sn) where si is the mixed strategy of player Vi and EP(s) = M(G).",
                "For i = 1, . . . , n, let ti = max{xj i | xj i ≤ si}.",
                "First, we will show that the strategy profile t = (t1, . . . , tn) is a Nash equilibrium for G. Fix any i, 1 < i ≤ n, and let R = [v1, v2]×[u1, u2] be the rectangle in B(Vi, Vi−1) that contains (si, si−1).",
                "As v1 is a Vi-event point of B(Vi, Vi−1), we have v1 ≤ ti, so the point (ti, si−1) is inside R. Similarly, the point u1 is a Vi−1-event point of B(Vi, Vi−1), so we have u1 ≤ ti−1, and therefore the point (ti, ti−1) is inside R. This means that for any i, 1 < i ≤ n, we have ti−1 ∈ pbrVi−1 (ti), which implies that t = (t1, . . . , tn) is a Nash equilibrium for G. Now, let us estimate the expected loss in social welfare caused by playing t instead of s. LEMMA 3.",
                "For any pair of strategy profiles t, s such that |ti − si| ≤ δ we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ for any i = 1, . . . , n. PROOF.",
                "Let Pi klm be the payoff of the player Vi, when he plays k, Vi−1 plays l, and Vi+1 plays m. Fix i = 1, . . . , n and for k, l, m ∈ {0, 1}, set tklm = tk i−1(1 − ti−1)1−k tl i(1 − ti)1−l tm i+1(1 − ti+1)1−m sklm = sk i−1(1 − si−1)1−k sl i(1 − si)1−l sm i+1(1 − si+1)1−m .",
                "We have |EPVi (s) − EPVi (t)| ≤ X k,l,m=0,1 |Pi klm(tklm − sklm )| ≤ 8Pmax max klm |tklm − sklm | We will now show that for any k, l, m ∈ {0, 1} we have |tklm − sklm | ≤ 3δ; clearly, this implies the lemma.",
                "Indeed, fix k, l, m ∈ {0, 1}.",
                "Set x = tk i−1(1 − ti−1)1−k , x = sk i−1(1 − si−1)1−k , y = tl i(1 − ti)1−l , y = sl i(1 − si)1−l , z = tm i+1(1 − ti+1)1−m , z = sm i+1(1 − si+1)1−m .",
                "Observe that if k = 0 then x − x = (1 − ti−1) − (1 − si−1), and if k = 1 then x − x = ti−1 − si−1, so |x − x | ≤ δ.",
                "A similar argument shows |y − y | ≤ δ, |z − z | ≤ δ.",
                "Also, we have x, x , y, y , z, z ∈ [0, 1].",
                "Hence, |tklm −sklm | = |xyz−x y z | = |xyz − x yz + x yz − x y z + x y z − x y z | ≤ |x − x |yz + |y − y |x z + |z − z |x y ≤ 3δ.",
                "Lemma 3 implies Pn i=1 |EPVi (s) − EPVi (t)| ≤ 24nPmaxδ, so by choosing δ < /(24nPmax), or, equivalently, setting N > 24nPmax/ , we can ensure that the total expected payoff for the strategy profile t is within from optimal.",
                "We will now show that we can find the best discrete Nash equilibrium (with respect to the social welfare) using dynamic programming.",
                "As t is a discrete strategy profile, this means that the strategy profile found by our algorithm will be at least as good as t. Define ml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj , j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1, and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The values ml,k i , i = 1, . . . , n; k, l = 1, . . . , N, can be computed inductively, as follows.",
                "We have ml,k 1 = 0 for k, l = 1, . . . , N. Now, suppose that we have already computed ml,k j for all j < i; k, l = 1, . . . , N. To compute mk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this is not the case, we have ml,k i = −∞.",
                "Otherwise, consider the set Y = Xi−2 ∩ pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "The proof of Theorem 1 in [9] implies that the set pbrVi−2 (xl i−1) is non-empty: the player Vi−2 has a potential best response to any strategy of Vi−1, in particular, xl i−1.",
                "By construction of the set Xi−2, this implies that Y is not empty.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "Then we have ml,k i = max{mj,l i−1 + pjlk | xj i−2 ∈ Y }.",
                "Finally, suppose that we have computed ml,k n for l, k = 1, . . . , N. We still need to take into account the payoff of player Vn.",
                "Hence, 167 we consider all pairs (xk n, xl n−1) that satisfy xl n−1 ∈ pbrVn−1 (xk n), and pick the one that maximizes the sum of mk,l n and the payoff of Vn when he plays xk n and Vn−1 plays xl n−1.",
                "This results in the maximum total payoff the players can achieve in a Nash equilibrium using discrete strategies; the actual strategy profile that produces this payoff can be reconstructed using standard dynamic programming techniques.",
                "It is easy to see that each ml,k i can be computed in time O(N), i.e., all of them can be computed in time O(nN3 ).",
                "Recall that we have to select N ≥ (24nPmax)/ to ensure that the strategy profile we output has total payoff that is within from optimal.",
                "We conclude that we can compute an -approximation to the best Nash equilibrium in time O(n4 P3 max/ 3 ).",
                "This completes the proof of Theorem 3.",
                "To state our result for the general case (i.e., when the underlying graph is a bounded-degree tree rather than a path), we need additional notation.",
                "If G has n players, let q(n) be an upper bound on the number of event points in the representation of any best response policy.",
                "That is, we assume that for any vertex U with parent V , B(V, U) has at most q(n) event points.",
                "We will be interested in the situation in which q(n) is polynomial in n. THEOREM 4.",
                "Let G be an n-player <br>graphical game</br> on a tree in which each node has at most Δ children.",
                "Suppose we are given a set of best-response policies for G in which each best-response policy B(V, U) is represented by a set of rectangles with at most q(n) event points.",
                "For any > 0, there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G) − .",
                "The running time of the algorithm is polynomial in n, Pmax and −1 provided that the tree has bounded degree (that is, Δ = O(1)) and q(n) is a polynomial in n. In particular, if N = max((Δ + 1)q(n) + 1, n2Δ+2 (Δ + 2)Pmax −1 ) and Δ > 1 then the running time is O(nΔ(2N)Δ .",
                "For the proof of this theorem, see [10]. 4.1 A polynomial-time algorithm for multiplicative approximation The running time of our algorithm is pseudopolynomial rather than polynomial, because it includes a factor which is polynomial in Pmax, the maximum (in absolute value) entry in any payoff matrix.",
                "If we are interested in multiplicative approximation rather than additive one, this can be improved to polynomial.",
                "First, note that we cannot expect a multiplicative approximation for all inputs.",
                "That is, we cannot hope to have an algorithm that computes a Nash equilibrium with total payoff at least (1 − )M(G).",
                "If we had such an algorithm, then for graphical games G with M(G) = 0, the algorithm would be required to output the optimal solution.",
                "To show that this is infeasible, observe that we can use the techniques of Section 3.2 to construct two integercoefficient graphical games on paths of length O(n) such that for some X ∈ R the maximal total payoff in the first game is X, the maximal total payoff in the second game is −X, and for both games, the strategy profiles that achieve the maximal total payoffs involve algebraic numbers of degree n. By combining the two games so that the first vertex of the second game becomes connected to the last vertex of the first game, but the payoffs of all players do not change, we obtain a <br>graphical game</br> in which the best Nash equilibrium has total payoff 0, yet the strategies that lead to this payoff have high algebraic complexity.",
                "However, we can achieve a multiplicative approximation when all entries of the payoff matrices are positive and the ratio between any two entries is polynomially bounded.",
                "Recall that we assume that all payoffs are integer, and let Pmin > 0 be the smallest entry of any payoff matrix.",
                "In this case, for any strategy profile the payoff to player i is at least Pmin, so the total payoff in the social-welfare maximizing Nash equilibrium s satisfies M(G) ≥ nPmin.",
                "Moreover, Lemma 3 implies that by choosing δ < /(24Pmax/Pmin), we can ensure that the Nash equilibrium t produced by our algorithm satisfies nX i=1 EPVi (s) − nX i=1 EPVi (t) ≤ 24Pmaxδn ≤ nPmin ≤ M(G), i.e., for this value of δ we have Pn i=1 EPVi (t) ≥ (1 − )M(G).",
                "Recall that the running time of our algorithm is O(nN3 ), where N has to be selected to satisfy N > 5n, N = 1/δ.",
                "It follows that if Pmin > 0, Pmax/Pmin = poly(n), we can choose N so that our algorithm provides a multiplicative approximation guarantee and runs in time polynomial in n and 1/ . 5.",
                "BOUNDED PAYOFF NASH EQUILIBRIA Another natural way to define what is a good Nash equilibrium is to require that each players expected payoff exceeds a certain threshold.",
                "These thresholds do not have to be the same for all players.",
                "In this case, in addition to the payoff matrices of the n players, we are given n numbers T1, . . . , Tn, and our goal is to find a Nash equilibrium in which the payoff of player i is at least Ti, or report that no such Nash equilibrium exists.",
                "It turns out that we can design an FPTAS for this problem using the same techniques as in the previous section.",
                "THEOREM 5.",
                "Given a <br>graphical game</br> G on an n-vertex path and n rational numbers T1, . . . , Tn, suppose that there exists a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. Then for any > 0 we can find in time O(max{nP3 max/ 3 , n4 / 3 }) a strategy profile s such that s is a Nash equilibrium for G and EPVi (s ) ≥ Ti − for i = 1, . . . , n. PROOF.",
                "The proof is similar to that of Theorem 3.",
                "First, we construct the best response policies for all players, choose N > 5n, and construct the sets Xi, i = 1, . . . , n, as described in the proof of Theorem 3.",
                "Consider a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. We construct a strategy profile ti = max{xj i | xj i ≤ si} and use the same argument as in the proof of Theorem 3 to show that t is a Nash equilibrium for G. By Lemma 3, we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ, so choosing δ < /(24Pmax), or, equivalently, N > max{5n, 24Pmax/ }, we can ensure EPVi (t) ≥ Ti − for i = 1, . . . , n. Now, we will use dynamic programming to find a discrete Nash equilibrium that satisfies EPVi (t) ≥ Ti − for i = 1, . . . , n. As t is a discrete strategy profile, our algorithm will succeed whenever there is a strategy profile s with EPVi (s) ≥ Ti− for i = 1, . . . , n. Let zl,k i = 1 if there is a discrete strategy profile such that for any j < i the strategy of the player Vj is a potential best response to the strategy of Vj+1, the expected payoff of Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "Otherwise, let zl,k i = 0.",
                "We can compute zl,k i , i = 1, . . . , n; k, l = 1, . . . , N inductively, as follows.",
                "We have zl,k 1 = 1 for k, l = 1, . . . , N. Now, suppose that we have already computed zl,k j for all j < i; k, l = 1, . . . , N. To compute zk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this 168 is not the case, clearly, zk,l i = 0.",
                "Otherwise, consider the set Y = Xi−2 ∩pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "It has been shown in the proof of Theorem 3 that Y = ∅.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "If there exists an xj i−2 ∈ Y such that zj,l i−1 = 1 and pjlk ≥ Ti−2 − , set zl,k i = 1.",
                "Otherwise, set zl,k i = 0.",
                "Having computed zl,k n , l, k = 1, . . . , N, we check if zl,k n = 1 for some pair (l, k). if such a pair of indices exists, we instruct Vn to play xk n and use dynamic programming techniques (or, equivalently, the downstream pass of the algorithm of [13]) to find a Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n (recall that Vn is a dummy player, i.e., we assume Tn = 0, EPn(s ) = 0 for any choice of s ).",
                "If zl,k n = 0 for all l, k = 1, . . . , N, there is no discrete Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n and hence no Nash equilibrium s (not necessarily discrete) such that EPVi (s) ≥ Ti for i = 1, . . . , n. The running time analysis is similar to that for Theorem 3; we conclude that the running time of our algorithm is O(nN3 ) = O(max{nP3 max/ 3 , n4 / 3 }).",
                "REMARK 1.",
                "Theorem 5 can be extended to trees of bounded degree in the same way as Theorem 4. 5.1 Exact Computation Another approach to finding Nash equilibria with bounded payoffs is based on inductively computing the subsets of the best response policies of all players so as to exclude the points that do not provide sufficient payoffs to some of the players.",
                "Formally, we say that a strategy v of the player V is a potential best response to a strategy w of its parent W with respect to a threshold vector T = (T1, . . . , Tn), (denoted by v ∈ pbrV (w, T)) if there is an equilibrium in the instance G(V,W ),W =w in which V plays mixed strategy v and the payoff to any player Vi downstream of V (including V ) is at least Ti.",
                "The best response policy for V with respect to a threshold vector T is defined as B(W, V, T) = {(w, v) | v ∈ pbrV (w, T), w ∈ [0, 1]}.",
                "It is easy to see that if any of the sets B(Vj, Vj−1, T), j = 1, . . . , n, is empty, it means that it is impossible to provide all players with expected payoffs prescribed by T. Otherwise, one can apply the downstream pass of the original algorithm of [13] to find a Nash equilibrium.",
                "As we assume that Vn is a dummy vertex whose payoff is identically 0, the Nash equilibrium with these payoffs exists as long as Tn ≤ 0 and B(Vn, Vn−1, T) is not empty.",
                "Using the techniques developed in [9], it is not hard to show that for any j = 1, . . . , n, the set B(Vj , Vj−1, T) consists of a finite number of rectangles, and one can compute B(Vj+1, Vj , T) given B(Vj , Vj−1, T).",
                "The advantage of this approach is that it allows us to represent all Nash equilibria that provide required payoffs to the players.",
                "However, it is not likely to be practical, since it turns out that the rectangles that appear in the representation of B(Vj , Vj−1, T) may have irrational coordinates.",
                "CLAIM 6.",
                "There exists a <br>graphical game</br> G on a 3-vertex path UV W and a vector T = (T1, T2, T3) such that B(V, W, T) cannot be represented as a union of a finite number of rectangles with rational coordinates.",
                "PROOF.",
                "We define the payoffs to the players in G as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = uw, P1 (V ) = P0 (V ) + w − .8u − .1, where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = .8u + .1; observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "It is not hard to see that we have B(W, V ) = [0, .1]×{0} ∪ [.1, .9]×[0, 1] ∪ [.9, 1]×{1}.",
                "The payoffs to W are not important for our construction; for example, set P0(W ) = P0(W ) = 0.",
                "Now, set T = (0, 1/8, 0), i.e., we are interested in Nash equilibria in which V s expected payoff is at least 1/8.",
                "Suppose w ∈ [0, 1].",
                "The player V can play a mixed strategy v when W is playing w as long as U plays u = f−1 (w) = 5w/4 − 1/8 (to ensure that V is indifferent between 0 and 1) and P0 (V ) = P1 (V ) = uw = w(5w/4 − 1/8) ≥ 1/8.",
                "The latter condition is satisfied if w ≤ (1 − √ 41)/20 < 0 or w ≥ (1 + √ 41)/20.",
                "Note that we have .1 < (1 + √ 41)/20 < .9.",
                "For any other value of w, any strategy of U either makes V prefer one of the pure strategies or does not provide it with a sufficient expected payoff.",
                "There are also some values of w for which V can play a pure strategy (0 or 1) as a potential best response to W and guarantee itself an expected payoff of at least 1/8; it can be shown that these values of w form a finite number of segments in [0, 1].",
                "We conclude that any representation of B(W, V, T) as a union of a finite number of rectangles must contain a rectangle of the form [(1 + √ 41)/20, w ]×[v , v ] for some w , v , v ∈ [0, 1].",
                "On the other hand, it can be shown that for any integer payoff matrices and threshold vectors and any j = 1, . . . , n − 1, the sets B(Vj+1, Vj, T) contain no rectangles of the form [u , u ]×{v} or {v}×[w , w ], where v ∈ R\\Q.",
                "This means that if B(Vn, Vn−1, T) is non-empty, i.e., there is a Nash equilibrium with payoffs prescribed by T, then the downstream pass of the algorithm of [13] can always pick a strategy profile that forms a Nash equilibrium, provides a payoff of at least Ti to the player Vi, and has no irrational coordinates.",
                "Hence, unlike in the case of the Nash equilibrium that maximizes the social welfare, working with irrational numbers is not necessary, and the fact that the algorithm discussed in this section has to do so can be seen as an argument against using this approach. 6.",
                "OTHER CRITERIA FOR SELECTING A NASH EQUILIBRIUM In this section, we consider several other criteria that can be useful in selecting a Nash equilibrium. 6.1 Combining welfare maximization with bounds on payoffs In many real life scenarios, we want to maximize the social welfare subject to certain restrictions on the payoffs to individual players.",
                "For example, we may want to ensure that no player gets a negative expected payoff, or that the expected payoff to player i is at least Pi max − ξ, where Pi max is the maximum entry of is payoff matrix and ξ is a fixed parameter.",
                "Formally, given a <br>graphical game</br> G and a vector T1, . . . , Tn, let S be the set of all Nash equilibria s of G that satisfy Ti ≤ EPVi (s) for i = 1, . . . , n, and let ˆs = argmaxs∈S EP(s).",
                "If the set S is non-empty, we can find a Nash equilibrium ˆs that is -close to satisfying the payoff bounds and is within from ˆs with respect to the total payoff by combining the algorithms of Section 4 and Section 5.",
                "Namely, for a given > 0, choose δ as in the proof of Theorem 3, and let Xi be the set of all discrete strategies of player Vi (for a 169 formal definition, see the proof of Theorem 3).",
                "Combining the proofs of Theorem 3 and Theorem 5, we can see that the strategy profile ˆt given by ˆti = max{xj i | xj i ≤ ˆsi} satisfies EPVi (ˆt) ≥ Ti − , |EP(ˆs) − EP(ˆt)| ≤ .",
                "Define ˆml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj, j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1 and the payoff to player Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The ˆml,k i can be computed by dynamic programming similarly to the ml,k i and zl,k i in the proofs of Theorems 3 and 5.",
                "Finally, as in the proof of Theorem 3, we use ml,k n to select the best discrete Nash equilibrium subject to the payoff constraints.",
                "Even more generally, we may want to maximize the total payoff to a subset of players (who are assumed to be able to redistribute the profits fairly among themselves) while guaranteeing certain expected payoffs to (a subset of) the other players.",
                "This problem can be handled similarly. 6.2 A minimax approach A more egalitarian measure of the quality of a Nash equilibrium is the minimal expected payoff to a player.",
                "The optimal solution with respect to this measure is a Nash equilibrium in which the minimal expected payoff to a player is maximal.",
                "To find an approximation to such a Nash equilibrium, we can combine the algorithm of Section 5 with binary search on the space of potential lower bounds.",
                "Note that the expected payoff to any player Vi given a strategy s always satisfies −Pmax ≤ EPVi (s) ≤ Pmax.",
                "For a fixed > 0, we start by setting T = −Pmax, T = Pmax, T∗ = (T + T )/2.",
                "We then run the algorithm of Section 5 with T1 = · · · = Tn = T∗ .",
                "If the algorithm succeeds in finding a Nash equilibrium s that satisfies EPVi (s ) ≥ T∗ − for all i = 1, . . . , n, we set T = T∗ , T∗ = (T + T )/2; otherwise, we set T = T∗ , T∗ = (T + T )/2 and loop.",
                "We repeat this process until |T − T | ≤ .",
                "It is not hard to check that for any p ∈ R, if there is a Nash equilibrium s such that mini=1,...,n EPVi (s) ≥ p, then our algorithm outputs a Nash equilibrium s that satisfies mini=1,...,n EPVi (s) ≥ p−2 .",
                "The running time of our algorithm is O(max{nP3 max log −1 / 3 , n4 log −1 / 3 }). 6.3 Equalizing the payoffs When the players payoff matrices are not very different, it is reasonable to demand that the expected payoffs to the players do not differ by much either.",
                "We will now show that Nash equilibria in this category can be approximated in polynomial time as well.",
                "Indeed, observe that the algorithm of Section 5 can be easily modified to deal with upper bounds on individual payoffs rather than lower bounds.",
                "Moreover, we can efficiently compute an approximation to a Nash equilibrium that satisfies both the upper bound and the lower bound for each player.",
                "More precisely, suppose that we are given a <br>graphical game</br> G, 2n rational numbers T1, . . . , Tn, T1, . . . , Tn and > 0.",
                "Then if there exists a strategy profile s such that s is a Nash equilibrium for G and Ti ≤ EPVi (s) ≤ Ti for i = 1, . . . , n, we can find a strategy profile s such that s is a Nash equilibrium for G and Ti − ≤ EPVi (s ) ≤ Ti + for i = 1, . . . , n. The modified algorithm also runs in time O(max{nP3 max/ 3 , [4]n4 / 3 }).",
                "This observation allows us to approximate Nash equilibria in which all players expected payoffs differ by at most ξ for any fixed ξ > 0.",
                "Given an > 0, we set T1 = · · · = Tn = −Pmax, T1 = · · · = Tn = −Pmax + ξ + , and run the modified version of the algorithm of Section 5.",
                "If it fails to find a solution, we increment all Ti, Ti by and loop.",
                "We continue until the algorithm finds a solution, or Ti ≥ Pmax.",
                "Suppose that there exists a Nash equilibrium s that satisfies |EPVi (s) − EPVj (s)| ≤ ξ for all i, j = 1, . . . , n. Set r = mini=1,...,n EPVi (s); we have r ≤ EPVi (s) ≤ r + ξ for all i = 1, . . . , n. There exists a k ≥ 0 such that −Pmax + (k − 1) ≤ r ≤ −Pmax + k .",
                "During the kth step of the algorithm, we set T1 = · · · = Tn = −Pmax +(k−1) , i.e., we have r− ≤ Ti ≤ r, r + ξ ≤ Ti ≤ r + ξ + .",
                "That is, the Nash equilibrium s satisfies Ti ≤ r ≤ EPVi (s) ≤ r + ξ ≤ Ti , which means that when Ti is set to −Pmax + (k − 1) , our algorithm is guaranteed to output a Nash equilibrium t that satisfies r − 2 ≤ Ti − ≤ EPVi (t) ≤ Ti + ≤ r +ξ +2 .",
                "We conclude that whenever such a Nash equilibrium s exists, our algorithm outputs a Nash equilibrium t that satisfies |EPVi (t) − EPVj (t)| ≤ ξ + 4 for all i, j = 1, . . . , n. The running time of this algorithm is O(max{nP3 max/ 4 , n4 / 4 }).",
                "Note also that we can find the smallest ξ for which such a Nash equilibrium exists by combining this algorithm with binary search over the space ξ = [0, 2Pmax].",
                "This identifies an approximation to the fairest Nash equilibrium, i.e., one in which the players expected payoffs differ by the smallest possible amount.",
                "Finally, note that all results in this section can be extended to bounded-degree trees. 7.",
                "CONCLUSIONS We have studied the problem of equilibrium selection in graphical games on bounded-degree trees.",
                "We considered several criteria for selecting a Nash equilibrium, such as maximizing the social welfare, ensuring a lower bound on the expected payoff of each player, etc.",
                "First, we focused on the algebraic complexity of a social welfare-maximizing Nash equilibrium, and proved strong negative results for that problem.",
                "Namely, we showed that even for graphical games on paths, any algebraic number α ∈ [0, 1] may be the only strategy available to some player in all social welfaremaximizing Nash equilibria.",
                "This is in sharp contrast with the fact that graphical games on trees always possess a Nash equilibrium in which all players strategies are rational numbers.",
                "We then provided approximation algorithms for selecting Nash equilibria with special properties.",
                "While the problem of finding approximate Nash equilibria for various classes of games has received a lot of attention in recent years, most of the existing work aims to find -Nash equilibria that satisfy (or are -close to satisfying) certain properties.",
                "Our approach is different in that we insist on outputting an exact Nash equilibrium, which is -close to satisfying a given requirement.",
                "As argued in the introduction, there are several reasons to prefer a solution that constitutes an exact Nash equilibrium.",
                "Our algorithms are fully polynomial time approximation schemes, i.e., their running time is polynomial in the inverse of the approximation parameter , though they may be pseudopolynomial with respect to the input size.",
                "Under mild restrictions on the inputs, they can be modified to be truly polynomial.",
                "This is the strongest positive result one can derive for a problem whose exact solutions may be hard to represent, as is the case for many of the problems considered here.",
                "While we prove our results for games on a path, they can be generalized to any tree for which the best response policies have compact representations as unions of rectangles.",
                "In the full version of the paper we describe our algorithms for the general case.",
                "Further work in this vein could include extensions to the kinds of guarantees sought for Nash equilibria, such as guaranteeing total payoffs for subsets of players, selecting equilibria in which some players are receiving significantly higher payoffs than their peers, etc.",
                "At the moment however, it is perhaps more important to inves170 tigate whether Nash equilibria of graphical games can be computed in a decentralized manner, in contrast to the algorithms we have introduced here.",
                "It is natural to ask if our results or those of [9] can be generalized to games with three or more actions.",
                "However, it seems that this will make the analysis significantly more difficult.",
                "In particular, note that one can view the bounded payoff games as a very limited special case of games with three actions per player.",
                "Namely, given a two-action game with payoff bounds, consider a game in which each player Vi has a third action that guarantees him a payoff of Ti no matter what everyone else does.",
                "Then checking if there is a Nash equilibrium in which none of the players assigns a nonzero probability to his third action is equivalent to checking if there exists a Nash equilibrium that satisfies the payoff bounds in the original game, and Section 5.1 shows that finding an exact solution to this problem requires new ideas.",
                "Alternatively it may be interesting to look for similar results in the context of correlated equilibria (CE), especially since the best CE may have higher value (total expected payoff) than the best NE.",
                "The ratio between these values is called the mediation value in [1].",
                "It is known from [1] that the mediation value of 2-player, 2-action games with non-negative payoffs is at most 4 3 , and they exhibit a 3-player game for which it is infinite.",
                "Furthermore, a 2-player, 3action example from [1] also has infinite mediation value. 8.",
                "REFERENCES [1] I. Ashlagi, D. Monderer and M. Tenneholtz, On the Value of Correlation, Proceedings of Dagstuhl seminar 05011 (2005) [2] R. Aumann, Subjectivity and Correlation in Randomized Strategies, Journal of Mathematical Economics 1 pp. 67-96 (1974) [3] B. Blum, C. R. Shelton, and D. Koller, A Continuation Method for Nash Equilibria in Structured Games, Proceedings of IJCAI03 [4] X. Chen, X. Deng and S. Teng, Computing Nash Equilibria: Approximation and Smoothed Complexity, Proceedings of FOCS06 [5] X. Chen, X. Deng, Settling the Complexity of 2-Player Nash-Equilibrium, Proceedings of FOCS06 [6] V. Conitzer and T. Sandholm, Complexity Results about Nash Equilibria, Proceedings of IJCAI03 [7] C. Daskalakis, P. W. Goldberg and C. H. Papadimitriou, The Complexity of Computing a Nash Equilibrium, Proceedings of STOC06 [8] R. S. Datta, Universality of Nash Equilibria, Mathematics of Operations Research 28:3, 2003 [9] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Nash Equilibria in Graphical games on Trees Revisited, Proceedings of ACM EC06 [10] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Computing Good Nash Equilibria in Graphical Games, http://arxiv.org/abs/cs.GT/0703133 [11] I. Gilboa and E. Zemel, Nash and Correlated Equilibria: Some Complexity Considerations, Games and Economic Behavior, 1 pp. 80-93 (1989) [12] P. W. Goldberg and C. H. Papadimitriou, Reducibility Among Equilibrium Problems, Proceedings of STOC06 [13] M. Kearns, M. Littman, and S. Singh, Graphical Models for Game Theory, Proceedings of UAI01 [14] M. Littman, M. Kearns, and S. Singh, An Efficient Exact Algorithm for Singly Connected Graphical Games, Proceedings of NIPS01 [15] R. Lipton and E. Markakis, Nash Equilibria via Polynomial Equations, Proceedings of LATIN04 [16] L. Ortiz and M. Kearns, Nash Propagation for Loopy Graphical Games, Proceedings of NIPS03 [17] C.H.",
                "Papadimitriou, Computing Correlated Equilibria in Multi-Player Games, Proceedings of STOC05 [18] C.H.",
                "Papadimitriou and T. Roughgarden, Computing Equilibria in Multi-Player Games, Proceedings of SODA05 [19] D. Vickrey and D. Koller, Multi-agent Algorithms for Solving Graphical Games, Proceedings of AAAI02 171"
            ],
            "original_annotated_samples": [
                "Our approach is based on the data structure called the best response policy, which was proposed by Kearns et al. [13] as a way to represent all Nash equilibria of a <br>graphical game</br>.",
                "In an n-player <br>graphical game</br>, each player is associated with a vertex of an underlying graph G, and the payoffs of each player depend on his action as well as on the actions of his neighbors in the graph.",
                "In contrast, we need n2n numbers to represent a general n-player 2-action game, which is only practical for small values of n. For graphical games with constant Δ, the size of the game is linear in n. One of the most natural problems for a <br>graphical game</br> is that of finding a Nash equilibrium, the existence of which follows from Nashs celebrated theorem (as graphical games are just a special case of n-player games).",
                "A <br>graphical game</br> may not have a unique Nash equilibrium, indeed it may have exponentially many.",
                "In fact, for any algebraic number α ∈ [0, 1] with degree at most n, we exhibit a <br>graphical game</br> on a path of length O(n) such that, in the unique social welfare-maximizing Nash equilibrium of this game, one of the players plays the mixed strategy α.1 This result shows that it may be difficult to represent an optimal Nash equilibrium."
            ],
            "translated_annotated_samples": [
                "Nuestro enfoque se basa en la estructura de datos llamada política de mejor respuesta, propuesta por Kearns et al. [13] como una forma de representar todos los equilibrios de Nash de un <br>juego gráfico</br>.",
                "En un <br>juego gráfico</br> de n jugadores, a cada jugador se le asocia un vértice de un grafo subyacente G, y las ganancias de cada jugador dependen de su acción, así como de las acciones de sus vecinos en el grafo.",
                "Por el contrario, necesitamos n^2 números para representar un juego general de n jugadores y 2 acciones, lo cual solo es práctico para valores pequeños de n. Para juegos gráficos con Δ constante, el tamaño del juego es lineal en n. Uno de los problemas más naturales para un <br>juego gráfico</br> es el de encontrar un equilibrio de Nash, cuya existencia se deriva del célebre teorema de Nash (ya que los juegos gráficos son solo un caso especial de juegos de n jugadores).",
                "Un <br>juego gráfico</br> puede no tener un equilibrio de Nash único, de hecho, puede tener exponencialmente muchos.",
                "De hecho, para cualquier número algebraico α ∈ [0, 1] con grado a lo sumo n, exhibimos un <br>juego gráfico</br> en un camino de longitud O(n) tal que, en el equilibrio de Nash único que maximiza el bienestar social de este juego, uno de los jugadores juega la estrategia mixta α. Este resultado muestra que puede ser difícil representar un equilibrio de Nash óptimo."
            ],
            "translated_text": "Calcular buenos equilibrios de Nash en juegos gráficos ∗ Edith Elkind Universidad Hebrea de Jerusalén, Israel, y Universidad de Southampton, Southampton, SO17 1BJ, Reino Unido. Leslie Ann Goldberg Universidad de Liverpool Liverpool L69 3BX, Reino Unido. Paul Goldberg Universidad de Liverpool Liverpool L69 3BX, Reino Unido. RESUMEN Este artículo aborda el problema de la selección justa de equilibrios en juegos gráficos. Nuestro enfoque se basa en la estructura de datos llamada política de mejor respuesta, propuesta por Kearns et al. [13] como una forma de representar todos los equilibrios de Nash de un <br>juego gráfico</br>. En [9], se demostró que la política de mejor respuesta tiene un tamaño polinómico siempre y cuando el grafo subyacente sea un camino. En este artículo, demostramos que si el grafo subyacente es un árbol de grado acotado y la política de mejor respuesta tiene un tamaño polinómico, entonces existe un algoritmo eficiente que construye un equilibrio de Nash que garantiza ciertos pagos a todos los participantes. Otro concepto de solución atractivo es un equilibrio de Nash que maximiza el bienestar social. Mostramos que, si bien calcular exactamente lo último es inviable (demostramos que resolver este problema puede implicar números algebraicos de un grado arbitrariamente alto), existe un FPTAS para encontrar dicho equilibrio siempre y cuando la política de mejor respuesta tenga un tamaño polinómico. Estos dos algoritmos pueden combinarse para producir equilibrios de Nash que satisfacen varios criterios de equidad. Categorías y Descriptores de Asignaturas F.2 [Teoría de la Computación]: Análisis de Algoritmos y Complejidad de Problemas; J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento - Economía Términos Generales Algoritmos, Economía, Teoría 1. INTRODUCCIÓN En una gran comunidad de agentes, es poco probable que el comportamiento de un agente tenga un efecto directo en la mayoría de los otros agentes: más bien, solo serán afectados los agentes que estén lo suficientemente cerca de él. Sin embargo, a medida que estos agentes responden adaptando su comportamiento, más agentes sentirán las consecuencias y eventualmente las decisiones tomadas por un solo agente se propagarán por toda la comunidad. Esta es la intuición detrás de los juegos gráficos, los cuales fueron introducidos por Kearns, Littman y Singh en [13] como un esquema de representación compacto para juegos con muchos jugadores. En un <br>juego gráfico</br> de n jugadores, a cada jugador se le asocia un vértice de un grafo subyacente G, y las ganancias de cada jugador dependen de su acción, así como de las acciones de sus vecinos en el grafo. Si el grado máximo de G es Δ, y cada jugador tiene dos acciones disponibles, entonces el juego se puede representar usando n2Δ+1 números. Por el contrario, necesitamos n^2 números para representar un juego general de n jugadores y 2 acciones, lo cual solo es práctico para valores pequeños de n. Para juegos gráficos con Δ constante, el tamaño del juego es lineal en n. Uno de los problemas más naturales para un <br>juego gráfico</br> es el de encontrar un equilibrio de Nash, cuya existencia se deriva del célebre teorema de Nash (ya que los juegos gráficos son solo un caso especial de juegos de n jugadores). El primer intento de abordar este problema se realizó en [13], donde los autores consideran juegos gráficos con dos acciones por jugador en los que el grafo subyacente es un árbol de grado acotado. Proponen un algoritmo genérico para encontrar equilibrios de Nash que puede ser especializado de dos maneras: un algoritmo de tiempo exponencial para encontrar un equilibrio de Nash (exacto) y un esquema de aproximación de tiempo polinómico completo (FPTAS) para encontrar una aproximación a un equilibrio de Nash. Para cualquier > 0, este algoritmo produce un equilibrio de Nash, que es un perfil estratégico en el que ningún jugador puede mejorar su pago más que al cambiar unilateralmente su estrategia. Si bien los equilibrios de Nash aproximados suelen ser más fáciles de calcular que los equilibrios de Nash exactos, este concepto de solución tiene varias desventajas. Primero, es posible que los jugadores sean sensibles a una pequeña pérdida en las ganancias, por lo que el perfil estratégico que es un equilibrio de Nash no será estable. Esto será así incluso si solo hay un pequeño subconjunto de jugadores que son extremadamente sensibles al precio, y para una gran población de jugadores puede ser difícil elegir un valor que satisfaga a todos. Segundo, los perfiles estratégicos que están cerca de ser equilibrios de Nash pueden ser mucho mejores con respecto a las propiedades consideradas que los equilibrios de Nash exactos. Por lo tanto, la aproximación al valor de la mejor solución que corresponde a un equilibrio de Nash aproximado puede no ser indicativa de lo que se puede lograr bajo un equilibrio de Nash exacto. Esto es especialmente importante si el propósito de la solución aproximada es proporcionar un buen punto de referencia para un sistema de agentes egoístas, ya que el punto de referencia implícito por un equilibrio de Nash puede ser poco realista. Por estas razones, en este artículo nos enfocamos en el problema de calcular equilibrios de Nash exactos. Basándose en las ideas de [14], Elkind et al. [9] mostraron cómo encontrar un equilibrio de Nash (exacto) en tiempo polinómico cuando el grafo subyacente tiene grado 2 (es decir, cuando el grafo es una colección de caminos y ciclos). Por el contrario, encontrar un equilibrio de Nash en un grafo general con grado acotado parece ser computacionalmente intratable: se ha demostrado (ver [5, 12, 7]) que es completo para la clase de complejidad PPAD. [9] extiende este resultado de dificultad al caso en el que el grafo subyacente tiene un ancho de camino acotado. Un <br>juego gráfico</br> puede no tener un equilibrio de Nash único, de hecho, puede tener exponencialmente muchos. Además, algunos equilibrios de Nash son más deseables que otros. En lugar de tener un algoritmo que simplemente encuentre algún equilibrio de Nash, nos gustaría tener algoritmos para encontrar equilibrios de Nash con diversas propiedades socialmente deseables, como maximizar el pago total o distribuir las ganancias de manera justa. Una propiedad útil de la estructura de datos de [13] es que representa simultáneamente el conjunto de todos los equilibrios de Nash del juego subyacente. Si esta representación tiene tamaño polinómico (como es el caso de los caminos, como se muestra en [9]), se puede esperar extraer de ella un equilibrio de Nash con las propiedades deseadas. De hecho, en [13] los autores mencionan que esto es posible si uno está interesado en encontrar un equilibrio de Nash (aproximado). El objetivo de este artículo es extender esto a equilibrios de Nash exactos. 1.1 Nuestros Resultados En este artículo, estudiamos juegos gráficos de n jugadores y 2 acciones en árboles de grado acotado para los cuales la estructura de datos de [13] tiene tamaño polinómico en n. Nos enfocamos en el problema de encontrar equilibrios de Nash exactos con ciertas propiedades socialmente deseables. En particular, mostramos cómo encontrar un equilibrio de Nash que maximiza (casi) el bienestar social, es decir, la suma de las ganancias de los jugadores, y mostramos cómo encontrar un equilibrio de Nash que satisface (casi) los límites de ganancias prescritos para todos los jugadores. Los juegos gráficos en árboles de grado acotado tienen una estructura algebraica simple. Una característica atractiva, que se desprende de [13], es que cada juego de este tipo tiene un equilibrio de Nash en el cual la estrategia de cada jugador es un número racional. La sección 3 estudia la estructura algebraica de aquellos equilibrios de Nash que maximizan el bienestar social. Demostramos (Teoremas 1 y 2) que, sorprendentemente, el conjunto de equilibrios de Nash que maximizan el bienestar social es más complejo. De hecho, para cualquier número algebraico α ∈ [0, 1] con grado a lo sumo n, exhibimos un <br>juego gráfico</br> en un camino de longitud O(n) tal que, en el equilibrio de Nash único que maximiza el bienestar social de este juego, uno de los jugadores juega la estrategia mixta α. Este resultado muestra que puede ser difícil representar un equilibrio de Nash óptimo. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "nash equilibrium": {
            "translated_key": "equilibrio de Nash",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Computing Good Nash Equilibria in Graphical Games ∗ Edith Elkind Hebrew University of Jerusalem, Israel, and University of Southampton, Southampton, SO17 1BJ, U.K. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K. ABSTRACT This paper addresses the problem of fair equilibrium selection in graphical games.",
                "Our approach is based on the data structure called the best response policy, which was proposed by Kearns et al. [13] as a way to represent all Nash equilibria of a graphical game.",
                "In [9], it was shown that the best response policy has polynomial size as long as the underlying graph is a path.",
                "In this paper, we show that if the underlying graph is a bounded-degree tree and the best response policy has polynomial size then there is an efficient algorithm which constructs a <br>nash equilibrium</br> that guarantees certain payoffs to all participants.",
                "Another attractive solution concept is a <br>nash equilibrium</br> that maximizes the social welfare.",
                "We show that, while exactly computing the latter is infeasible (we prove that solving this problem may involve algebraic numbers of an arbitrarily high degree), there exists an FPTAS for finding such an equilibrium as long as the best response policy has polynomial size.",
                "These two algorithms can be combined to produce Nash equilibria that satisfy various fairness criteria.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a large community of agents, an agents behavior is not likely to have a direct effect on most other agents: rather, it is just the agents who are close enough to him that will be affected.",
                "However, as these agents respond by adapting their behavior, more agents will feel the consequences and eventually the choices made by a single agent will propagate throughout the entire community.",
                "This is the intuition behind graphical games, which were introduced by Kearns, Littman and Singh in [13] as a compact representation scheme for games with many players.",
                "In an n-player graphical game, each player is associated with a vertex of an underlying graph G, and the payoffs of each player depend on his action as well as on the actions of his neighbors in the graph.",
                "If the maximum degree of G is Δ, and each player has two actions available to him, then the game can be represented using n2Δ+1 numbers.",
                "In contrast, we need n2n numbers to represent a general n-player 2-action game, which is only practical for small values of n. For graphical games with constant Δ, the size of the game is linear in n. One of the most natural problems for a graphical game is that of finding a <br>nash equilibrium</br>, the existence of which follows from Nashs celebrated theorem (as graphical games are just a special case of n-player games).",
                "The first attempt to tackle this problem was made in [13], where the authors consider graphical games with two actions per player in which the underlying graph is a boundeddegree tree.",
                "They propose a generic algorithm for finding Nash equilibria that can be specialized in two ways: an exponential-time algorithm for finding an (exact) <br>nash equilibrium</br>, and a fully polynomial time approximation scheme (FPTAS) for finding an approximation to a <br>nash equilibrium</br>.",
                "For any > 0 this algorithm outputs an -<br>nash equilibrium</br>, which is a strategy profile in which no player can improve his payoff by more than by unilaterally changing his strategy.",
                "While -Nash equilibria are often easier to compute than exact Nash equilibria, this solution concept has several drawbacks.",
                "First, the players may be sensitive to a small loss in payoffs, so the strategy profile that is an -<br>nash equilibrium</br> will not be stable.",
                "This will be the case even if there is only a small subset of players who are extremely price-sensitive, and for a large population of players it may be difficult to choose a value of that will satisfy everyone.",
                "Second, the strategy profiles that are close to being Nash equilibria may be much better with respect to the properties under consideration than exact Nash equilibria.",
                "Therefore, the (approximation to the) value of the best solution that corresponds to an -<br>nash equilibrium</br> may not be indicative of what can be achieved under an exact <br>nash equilibrium</br>.",
                "This is especially important if the purpose of the approximate solution is to provide a good benchmark for a system of selfish agents, as the benchmark implied by an -<br>nash equilibrium</br> may be unrealistic.",
                "For these reasons, in this paper we focus on the problem of computing exact Nash equilibria.",
                "Building on ideas of [14], Elkind et al. [9] showed how to find an (exact) <br>nash equilibrium</br> in polynomial time when the underlying 162 graph has degree 2 (that is, when the graph is a collection of paths and cycles).",
                "By contrast, finding a <br>nash equilibrium</br> in a general degree-bounded graph appears to be computationally intractable: it has been shown (see [5, 12, 7]) to be complete for the complexity class PPAD. [9] extends this hardness result to the case in which the underlying graph has bounded pathwidth.",
                "A graphical game may not have a unique <br>nash equilibrium</br>, indeed it may have exponentially many.",
                "Moreover, some Nash equilibria are more desirable than others.",
                "Rather than having an algorithm which merely finds some <br>nash equilibrium</br>, we would like to have algorithms for finding Nash equilibria with various sociallydesirable properties, such as maximizing overall payoff or distributing profit fairly.",
                "A useful property of the data structure of [13] is that it simultaneously represents the set of all Nash equilibria of the underlying game.",
                "If this representation has polynomial size (as is the case for paths, as shown in [9]), one may hope to extract from it a <br>nash equilibrium</br> with the desired properties.",
                "In fact, in [13] the authors mention that this is indeed possible if one is interested in finding an (approximate) -<br>nash equilibrium</br>.",
                "The goal of this paper is to extend this to exact Nash equilibria. 1.1 Our Results In this paper, we study n-player 2-action graphical games on bounded-degree trees for which the data structure of [13] has size poly(n).",
                "We focus on the problem of finding exact Nash equilibria with certain socially-desirable properties.",
                "In particular, we show how to find a <br>nash equilibrium</br> that (nearly) maximizes the social welfare, i.e., the sum of the players payoffs, and we show how to find a <br>nash equilibrium</br> that (nearly) satisfies prescribed payoff bounds for all players.",
                "Graphical games on bounded-degree trees have a simple algebraic structure.",
                "One attractive feature, which follows from [13], is that every such game has a <br>nash equilibrium</br> in which the strategy of every player is a rational number.",
                "Section 3 studies the algebraic structure of those Nash equilibria that maximize social welfare.",
                "We show (Theorems 1 and 2) that, surprisingly, the set of Nash equilibria that maximize social welfare is more complex.",
                "In fact, for any algebraic number α ∈ [0, 1] with degree at most n, we exhibit a graphical game on a path of length O(n) such that, in the unique social welfare-maximizing <br>nash equilibrium</br> of this game, one of the players plays the mixed strategy α.1 This result shows that it may be difficult to represent an optimal <br>nash equilibrium</br>.",
                "It seems to be a novel feature of the setting we consider here, that an optimal <br>nash equilibrium</br> is hard to represent, in a situation where it is easy to find and represent a <br>nash equilibrium</br>.",
                "As the social welfare-maximizing <br>nash equilibrium</br> may be hard to represent efficiently, we have to settle for an approximation.",
                "However, the crucial difference between our approach and that of previous papers [13, 16, 19] is that we require our algorithm to output an exact <br>nash equilibrium</br>, though not necessarily the optimal one with respect to our criteria.",
                "In Section 4, we describe an algorithm that satisfies this requirement.",
                "Namely, we propose an algorithm that for any > 0 finds a <br>nash equilibrium</br> whose total payoff is within of optimal.",
                "It runs in polynomial time (Theorem 3,4) for any graphical game on a bounded-degree tree for which the data structure proposed by [13] (the so-called best response policy, defined below) is of size poly(n) (note that, as shown in [9], this is always the case when the underlying graph is a path).",
                "More pre1 A related result in a different context was obtained by Datta [8], who shows that n-player 2-action games are universal in the sense that any real algebraic variety can be represented as the set of totally mixed Nash equilibria of such games. cisely, the running time of our algorithm is polynomial in n, Pmax, and 1/ , where Pmax is the maximum absolute value of an entry of a payoff matrix, i.e., it is a pseudopolynomial algorithm, though it is fully polynomial with respect to .",
                "We show (Section 4.1) that under some restrictions on the payoff matrices, the algorithm can be transformed into a (truly) polynomial-time algorithm that outputs a <br>nash equilibrium</br> whose total payoff is within a 1 − factor from the optimal.",
                "In Section 5, we consider the problem of finding a <br>nash equilibrium</br> in which the expected payoff of each player Vi exceeds a prescribed threshold Ti.",
                "Using the idea from Section 4 we give (Theorem 5) a fully polynomial time approximation scheme for this problem.",
                "The running time of the algorithm is bounded by a polynomial in n, Pmax, and .",
                "If the instance has a <br>nash equilibrium</br> satisfying the prescribed thresholds then the algorithm constructs a <br>nash equilibrium</br> in which the expected payoff of each player Vi is at least Ti − .",
                "In Section 6, we introduce other natural criteria for selecting a good <br>nash equilibrium</br> and we show that the algorithms described in the two previous sections can be used as building blocks in finding Nash equilibria that satisfy these criteria.",
                "In particular, in Section 6.1 we show how to find a <br>nash equilibrium</br> that approximates the maximum social welfare, while guaranteeing that each individual payoff is close to a prescribed threshold.",
                "In Section 6.2 we show how to find a <br>nash equilibrium</br> that (nearly) maximizes the minimum individual payoff.",
                "Finally, in Section 6.3 we show how to find a <br>nash equilibrium</br> in which the individual payoffs of the players are close to each other. 1.2 Related Work Our approximation scheme (Theorem 3 and Theorem 4) shows a contrast between the games that we study and two-player n-action games, for which the corresponding problems are usually intractable.",
                "For two-player n-action games, the problem of finding Nash equilibria with special properties is typically NP-hard.",
                "In particular, this is the case for Nash equilibria that maximize the social welfare [11, 6].",
                "Moreover, it is likely to be intractable even to approximate such equilibria.",
                "In particular, Chen, Deng and Teng [4] show that there exists some , inverse polynomial in n, for which computing an -<br>nash equilibrium</br> in 2-player games with n actions per player is PPAD-complete.",
                "Lipton and Markakis [15] study the algebraic properties of Nash equilibria, and point out that standard quantifier elimination algorithms can be used to solve them.",
                "Note that these algorithms are not polynomial-time in general.",
                "The games we study in this paper have polynomial-time computable Nash equilibria in which all mixed strategies are rational numbers, but an optimal <br>nash equilibrium</br> may necessarily include mixed strategies with high algebraic degree.",
                "A correlated equilibrium (CE) (introduced by Aumann [2]) is a distribution over vectors of players actions with the property that if any player is told his own action (the value of his own component) from a vector generated by that distribution, then he cannot increase his expected payoff by changing his action.",
                "Any <br>nash equilibrium</br> is a CE but the converse does not hold in general.",
                "In contrast with Nash equilibria, correlated equilibria can be found for low-degree graphical games (as well as other classes of conciselyrepresented multiplayer games) in polynomial time [17].",
                "But, for graphical games it is NP-hard to find a correlated equilibrium that maximizes total payoff [18].",
                "However, the NP-hardness results apply to more general games than the one we consider here, in particular the graphs are not trees.",
                "From [2] it is also known that there exist 2-player, 2-action games for which the expected total payoff 163 of the best correlated equilibrium is higher than the best <br>nash equilibrium</br>, and we discuss this issue further in Section 7. 2.",
                "PRELIMINARIES AND NOTATION We consider graphical games in which the underlying graph G is an n-vertex tree, in which each vertex has at most Δ children.",
                "Each vertex has two actions, which are denoted by 0 and 1.",
                "A mixed strategy of a player V is represented as a single number v ∈ [0, 1], which denotes the probability that V selects action 1.",
                "For the purposes of the algorithm, the tree is rooted arbitrarily.",
                "For convenience, we assume without loss of generality that the root has a single child, and that its payoff is independent of the action chosen by the child.",
                "This can be achieved by first choosing an arbitrary root of the tree, and then adding a dummy parent of this root, giving the new parent a constant payoff function, e.g., 0.",
                "Given an edge (V, W ) of the tree G, and a mixed strategy w for W , let G(V,W ),W =w be the instance obtained from G by (1) deleting all nodes Z which are separated from V by W (i.e., all nodes Z such that the path from Z to V passes through W ), and (2) restricting the instance so that W is required to play mixed strategy w. Definition 1.",
                "Suppose that (V, W ) is an edge of the tree, that v is a mixed strategy for V and that w is a mixed strategy for W .",
                "We say that v is a potential best response to w (denoted by v ∈ pbrV (w)) if there is an equilibrium in the instance G(V,W ),W =w in which V has mixed strategy v. We define the best response policy for V , given W , as B(W, V ) = {(w, v) | v ∈ pbrV (w), w ∈ [0, 1]}.",
                "The upstream pass of the generic algorithm of [13] considers every node V (other than the root) and computes the best response policy for V given its parent.",
                "With the above assumptions about the root, the downstream pass is straightforward.",
                "The root selects a mixed strategy w for the root W and a mixed strategy v ∈ B(W, V ) for each child V of W .",
                "It instructs each child V to play v. The remainder of the downward pass is recursive.",
                "When a node V is instructed by its parent to adopt mixed strategy v, it does the following for each child U - It finds a pair (v, u) ∈ B(V, U) (with the same v value that it was given by its parent) and instructs U to play u.",
                "The best response policy for a vertex U given its parent V can be represented as a union of rectangles, where a rectangle is defined by a pair of closed intervals (IV , IU ) and consists of all points in IV × IU ; it may be the case that one or both of the intervals IV and IU consists of a single point.",
                "In order to perform computations on B(V, U), and to bound the number of rectangles, [9] used the notion of an event point, which is defined as follows.",
                "For any set A ⊆ [0, 1]2 that is represented as a union of a finite number of rectangles, we say that a point u ∈ [0, 1] on the U-axis is a Uevent point of A if u = 0 or u = 1 or the representation of A contains a rectangle of the form IV × IU and u is an endpoint of IU ; V -event points are defined similarly.",
                "For many games considered in this paper, the underlying graph is an n-vertex path, i.e., a graph G = (V, E) with V = {V1, . . . , Vn} and E = {(V1, V2), . . . , (Vn−1, Vn)}.",
                "In [9], it was shown that for such games, the best response policy has only polynomially-many rectangles.",
                "The proof that the number of rectangles in B(Vj+1, Vj) is polynomial proceeds by first showing that the number of event points in B(Vj+1, Vj ) cannot exceed the number of event points in B(Vj, Vj−1) by more than 2, and using this fact to bound the number of rectangles in B(Vj+1, Vj ).",
                "Let P0 (V ) and P1 (V ) be the expected payoffs to V when it plays 0 and 1, respectively.",
                "Both P0 (V ) and P1 (V ) are multilinear functions of the strategies of V s neighbors.",
                "In what follows, we will frequently use the following simple observation.",
                "CLAIM 1.",
                "For a vertex V with a single child U and parent W , given any A, B, C, D ∈ Q, A , B , C , D ∈ Q, one can select the payoffs to V so that P0 (V ) = Auw + Bu + Cw + D, P1 (V ) = A uw + B u + C w + D .",
                "Moreover, if all A, B, C, D, A , B , C , D are integer, the payoffs to V are integer as well.",
                "PROOF.",
                "We will give the proof for P0 (V ); the proof for P1 (V ) is similar.",
                "For i, j = 0, 1, let Pij be the payoff to V when U plays i, V plays 0 and W plays j.",
                "We have P0 (V ) = P00(1 − u)(1 − w) + P10u(1 − w) + P01(1 − u)w + P11uw.",
                "We have to select the values of Pij so that P00 − P10 − P01 + P11 = A, −P00 + P10 = B, −P00 + P01 = C, P00 = D. It is easy to see that the unique solution is given by P00 = D, P01 = C + D, P10 = B + D, P11 = A + B + C + D. The input to all algorithms considered in this paper includes the payoff matrices for each player.",
                "We assume that all elements of these matrices are integer.",
                "Let Pmax be the greatest absolute value of any element of any payoff matrix.",
                "Then the input consists of at most n2Δ+1 numbers, each of which can be represented using log Pmax bits. 3.",
                "NASH EQUILIBRIA THAT MAXIMIZE THE SOCIAL WELFARE: SOLUTIONS IN R \\ Q From the point of view of social welfare, the best <br>nash equilibrium</br> is the one that maximizes the sum of the players expected payoffs.",
                "Unfortunately, it turns out that computing such a strategy profile exactly is not possible: in this section, we show that even if all players payoffs are integers, the strategy profile that maximizes the total payoff may have irrational coordinates; moreover, it may involve algebraic numbers of an arbitrary degree. 3.1 Warm-up: quadratic irrationalities We start by providing an example of a graphical game on a path of length 3 with integer payoffs such that in the <br>nash equilibrium</br> that maximizes the total payoff, one of the players has a strategy in R \\ Q.",
                "In the next subsection, we will extend this example to algebraic numbers of arbitrary degree n; to do so, we have to consider paths of length O(n).",
                "THEOREM 1.",
                "There exists an integer-payoff graphical game G on a 3-vertex path UV W such that, in any <br>nash equilibrium</br> of G that maximizes social welfare, the strategy, u, of the player U and the total payoff, p, satisfy u, p ∈ R \\ Q.",
                "PROOF.",
                "The payoffs to the players in G are specified as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = −uw + 3w and P1 (V ) = P0 (V ) + w(u + 2) − (u + 1), where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = u+1 u+2 .",
                "Observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "The payoff to W is 0 if it selects the same action as V and 1 otherwise.",
                "CLAIM 2.",
                "All Nash equilibria of the game G are of the form (u, 1/2, f(u)).",
                "That is, in any <br>nash equilibrium</br>, V plays v = 1/2 and W plays w = f(u).",
                "Moreover, for any value of u, the vector of strategies (u, 1/2, f(u)) constitutes a <br>nash equilibrium</br>.",
                "PROOF.",
                "It is easy to check that for any u ∈ [0, 1], the vector (u, 1/2, f(u)) is a <br>nash equilibrium</br>.",
                "Indeed, U is content to play 164 any mixed strategy u no matter what V and W do.",
                "Furthermore, V is indifferent between 0 and 1 as long as w = f(u), so it can play 1/2.",
                "Finally, if V plays 0 and 1 with equal probability, W is indifferent between 0 and 1, so it can play f(u).",
                "Conversely, suppose that v > 1/2.",
                "Then W strictly prefers to play 0, i.e., w = 0.",
                "Then for V we have P1 (V ) = P0 (V ) − (u + 1), i.e., P1 (V ) < P0 (V ), which implies v = 0, a contradiction.",
                "Similarly, if v < 1/2, player W prefers to play 1, so we have w = 1.",
                "Hence, P1 (V ) = P0 (V ) + (u + 2) − (u + 1), i.e., P1 (V ) > P0 (V ), which implies v = 1, a contradiction.",
                "Finally, if v = 1/2, but w = f(u), player V is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "This completes the proof of Claim 2.",
                "By Claim 2, the total payoff in any <br>nash equilibrium</br> of this game is a function of u.",
                "More specifically, the payoff to U is 0, the payoff to V is −uf(u) + 3f(u), and the payoff to W is 1/2.",
                "Therefore, the <br>nash equilibrium</br> with the maximum total payoff corresponds to the value of u that maximizes g(u) = −u (u + 1) u + 2 + 3 u + 1 u + 2 = − (u − 3)(u + 1) u + 2 .",
                "To find extrema of g(u), we compute h(u) = − d du g(u).",
                "We have h(u) = (2u − 2)(u + 2) − (u − 3)(u + 1) (u + 2)2 = u2 + 4u − 1 (u + 2)2 .",
                "Hence, h(u) = 0 if and only if u ∈ {−2 + √ 5, −2 − √ 5}.",
                "Note that −2 + √ 5 ∈ [0, 1].",
                "The function g(u) changes sign at −2, −1, and 3.",
                "We have g(u) < 0 for g > 3, g(u) > 0 for u < −2, so the extremum of g(u) that lies between 1 and 3, i.e., u = −2 + √ 5, is a local maximum.",
                "We conclude that the social welfare-maximizing <br>nash equilibrium</br> for this game is given by the vector of strategies (−2+√ 5, 1/2, (5 − √ 5)/5).",
                "The respective total payoff is 0 − ( √ 5 − 5)( √ 5 − 1) √ 5 + 1 2 = 13/2 − 2 √ 5.",
                "This concludes the proof of Theorem 1. 3.2 Strategies of arbitrary degree We have shown that in the social welfare-maximizing <br>nash equilibrium</br>, some players strategies can be quadratic irrationalities, and so can the total payoff.",
                "In this subsection, we will extend this result to show that we can construct an integer-payoff graphical game on a path whose social welfare-maximizing <br>nash equilibrium</br> involves arbitrary algebraic numbers in [0, 1].",
                "THEOREM 2.",
                "For any degree-n algebraic number α ∈ [0, 1], there exists an integer payoff graphical game on a path of length O(n) such that, in all social welfare-maximizing Nash equilibria of this game, one of the players plays α.",
                "PROOF.",
                "Our proof consists of two steps.",
                "First, we construct a rational expression R(x) and a segment [x , x ] such that x , x ∈ Q and α is the only maximum of R(x) on [x , x ].",
                "Second, we construct a graphical game whose Nash equilibria can be parameterized by u ∈ [x , x ], so that at the equilibrium that corresponds to u the total payoff is R(u) and, moreover, some players strategy is u.",
                "It follows that to achieve the payoff-maximizing <br>nash equilibrium</br>, this player has to play α.",
                "The details follow.",
                "LEMMA 1.",
                "Given an algebraic number α ∈ [0, 1], deg(α) = n, there exist K2, . . . , K2n+2 ∈ Q and x , x ∈ (0, 1) ∩ Q such that α is the only maximum of R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 on [x , x ].",
                "PROOF.",
                "Let P(x) be the minimal polynomial of α, i.e., a polynomial of degree n with rational coefficients whose leading coefficient is 1 such that P(α) = 0.",
                "Let A = {α1, . . . , αn} be the set of all roots of P(x).",
                "Consider the polynomial Q1(x) = −P2 (x).",
                "It has the same roots as P(x), and moreover, for any x ∈ A we have Q1(x) < 0.",
                "Hence, A is the set of all maxima of Q1(x).",
                "Now, set R(x) = Q1(x) (x+2)...(x+2n+1)(x+2n+2) .",
                "Observe that R(x) ≤ 0 for all x ∈ [0, 1] and R(x) = 0 if and only if Q1(x) = 0.",
                "Hence, the set A is also the set of all maxima of R(x) on [0, 1].",
                "Let d = min{|αi − α| | αi ∈ A, αi = α}, and set α = max{α − d/2, 0}, α = min{α + d/2, 1}.",
                "Clearly, α is the only zero (and hence, the only maximum) of R(x) on [α , α ].",
                "Let x and x be some rational numbers in (α , α) and (α, α ), respectively; note that by excluding the endpoints of the intervals we ensure that x , x = 0, 1.",
                "As [x , x ] ⊂ [α , α ], we have that α is the only maximum of R(x) on [x , x ].",
                "As R(x) is a proper rational expression and all roots of its denominator are simple, by partial fraction decomposition theorem, R(x) can be represented as R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 , where K2, . . . , K2n+2 are rational numbers.",
                "Consider a graphical game on the path U−1V−1U0V0U1V1 . . .",
                "Uk−1Vk−1Uk, where k = 2n + 2.",
                "Intuitively, we want each triple (Ui−1, Vi−1, Ui) to behave similarly to the players U, V , and W from the game described in the previous subsection.",
                "More precisely, we define the payoffs to the players in the following way. • The payoff to U−1 is 0 no matter what everyone else does. • The expected payoff to V−1 is 0 if it plays 0 and u0 − (x − x )u−1 −x if it plays 1, where u0 and u−1 are the strategies of U0 and U−1, respectively. • The expected payoff to V0 is 0 if it plays 0 and u1(u0 + 1)− u0 if it plays 1, where u0 and u1 are the strategies of U0 and U1, respectively. • For each i = 1, . . . , k − 1, the expected payoff to Vi when it plays 0 is P0 (Vi) = Aiuiui+1 − Aiui+1, and the expected payoff to Vi when it plays 1 is P1 (Vi) = P0 (Vi) + ui+1(2 − ui) − 1, where Ai = −Ki+1 and ui+1 and ui are the strategies of Ui+1 and Ui, respectively. • For each i = 0, . . . , k, the payoff to Ui does not depend on Vi and is 1 if Ui and Vi−1 select different actions and 0 otherwise.",
                "We will now characterize the Nash equilibria of this game using a sequence of claims.",
                "CLAIM 3.",
                "In all Nash equilibria of this game V−1 plays 1/2, and the strategies of u−1 and u0 satisfy u0 = (x − x )u−1 + x .",
                "Consequently, in all Nash equilibria we have u0 ∈ [x , x ]. 165 PROOF.",
                "The proof is similar to that of Claim 2.",
                "Let f(u−1) = (x − x )u−1 + x .",
                "Clearly, the player V−1 is indifferent between playing 0 and 1 if and only if u0 = f(u−1).",
                "Suppose that v−1 < 1/2.",
                "Then U0 strictly prefers to play 1, i.e., u0 = 1, so we have P1 (V−1) = P0 (V−1) + 1 − (x − x )u−1 − x .",
                "As 1 − x ≤ 1 − (x − x )u−1 − x ≤ 1 − x for u−1 ∈ [0, 1] and x < 1, we have P1 (V−1) > P0 (V−1), so V−1 prefers to play 1, a contradiction.",
                "Similarly, if v−1 > 1/2, the player U0 strictly prefers to play 0, i.e., u0 = 0, so we have P1 (V−1) = P0 (V−1) − (x − x )u−1 − x .",
                "As x < x , x > 0, we have P1 (V−1) < P0 (V−1), so V−1 prefers to play 0, a contradiction.",
                "Finally, if V−1 plays 1/2, but u0 = f(u−1), player V−1 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Also, note that f(0) = x , f(1) = x , and, moreover, f(u−1) ∈ [x , x ] if and only if u−1 ∈ [0, 1].",
                "Hence, in all Nash equilibria of this game we have u0 ∈ [x , x ].",
                "CLAIM 4.",
                "In all Nash equilibria of this game for each i = 0, . . . , k − 1, we have vi = 1/2, and the strategies of the players Ui and Ui+1 satisfy ui+1 = fi(ui), where f0(u) = u/(u + 1) and fi(u) = 1/(2 − u) for i > 0.",
                "PROOF.",
                "The proof of this claim is also similar to that of Claim 2.",
                "We use induction on i to prove that the statement of the claim is true and, additionally, ui = 1 for i > 0.",
                "For the base case i = 0, note that u0 = 0 by the previous claim (recall that x , x are selected so that x , x = 0, 1) and consider the triple (U0, V0, U1).",
                "Let v0 be the strategy of V0.",
                "First, suppose that v0 > 1/2.",
                "Then U1 strictly prefers to play 0, i.e., u1 = 0.",
                "Then for V0 we have P1 (V0) = P0 (V0) − u0.",
                "As u0 = 0, we have P1 (V0) < P0 (V0), which implies v1 = 0, a contradiction.",
                "Similarly, if v0 < 1/2, player U1 prefers to play 1, so we have u1 = 1.",
                "Hence, P1 (V0) = P0 (V0) + 1.",
                "It follows that P1 (V0) > P0 (V0), which implies v0 = 1, a contradiction.",
                "Finally, if v0 = 1/2, but u1 = u0/(u0 + 1), player V0 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as u1 = u0/(u0 + 1) and u0 ∈ [0, 1], we have u1 = 1.",
                "The argument for the inductive step is similar.",
                "Namely, suppose that the statement is proved for all i < i and consider the triple (Ui, Vi, Ui+1).",
                "Let vi be the strategy of Vi.",
                "First, suppose that vi > 1/2.",
                "Then Ui+1 strictly prefers to play 0, i.e., ui+1 = 0.",
                "Then for Vi we have P1 (Vi) = P0 (Vi)−1, i.e., P1 (Vi) < P0 (Vi), which implies vi = 0, a contradiction.",
                "Similarly, if vi < 1/2, player Ui+1 prefers to play 1, so we have ui+1 = 1.",
                "Hence, P1 (Vi) = P0 (Vi) + 1 − ui.",
                "By inductive hypothesis, we have ui < 1.",
                "Consequently, P1 (Vi) > P0 (Vi), which implies vi = 1, a contradiction.",
                "Finally, if vi = 1/2, but ui+1 = 1/(2 − ui), player Vi is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as ui+1 = 1/(2 − ui) and ui < 1, we have ui+1 < 1.",
                "CLAIM 5.",
                "Any strategy profile of the form (u−1, 1/2, u0, 1/2, u1, 1/2, . . . , uk−1, 1/2, uk), where u−1 ∈ [0, 1], u0 = (x − x )u−1 + x , u1 = u0/(u0 + 1), and ui+1 = 1/(2 − ui) for i ≥ 1 constitutes a <br>nash equilibrium</br>.",
                "PROOF.",
                "First, the player U−1s payoffs do not depend on other players actions, so he is free to play any strategy in [0, 1].",
                "As long as u0 = (x −x )u−1 +x , player V−1 is indifferent between 0 and 1, so he is content to play 1/2; a similar argument applies to players V0, . . . , Vk−1.",
                "Finally, for each i = 0, . . . , k, the payoffs of player Ui only depend on the strategy of player Vi−1.",
                "In particular, as long as vi−1 = 1/2, player Ui is indifferent between playing 0 and 1, so he can play any mixed strategy ui ∈ [0, 1].",
                "To complete the proof, note that (x − x )u−1 + x ∈ [0, 1] for all u−1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] for all u0 ∈ [0, 1], and 1/(2 − ui) ∈ [0, 1] for all ui ∈ [0, 1], so we have ui ∈ [0, 1] for all i = 0, . . . , k. Now, let us compute the total payoff under a strategy profile of the form given in Claim 5.",
                "The payoff to U−1 is 0, and the expected payoff to each of the Ui, i = 0, . . . , k, is 1/2.",
                "The expected payoffs to V−1 and V0 are 0.",
                "Finally, for any i = 1, . . . , k − 1, the expected payoff to Vi is Ti = Aiuiui+1 − Aiui+1.",
                "It follows that to find a <br>nash equilibrium</br> with the highest total payoff, we have to maximize Pk−1 i=1 Ti subject to conditions u−1 ∈ [0, 1], u0 = (x −x )u−1+x , u1 = u0/(u0+1), and ui+1 = 1/(2−ui) for i = 1, . . . , k − 1.",
                "We would like to express Pk−1 i=1 Ti as a function of u0.",
                "To simplify notation, set u = u0.",
                "LEMMA 2.",
                "For i = 1, . . . , k, we have ui = u+i−1 u+i .",
                "PROOF.",
                "The proof is by induction on i.",
                "For i = 1, we have u1 = u/(u + 1).",
                "Now, for i ≥ 2 suppose that ui−1 = (u + i − 2)/(u + i − 1).",
                "We have ui = 1/(2 − ui−1) = (u + i − 1)/(2u + 2i − 2 − u − i + 2) = (u + i − 1)/(u + i).",
                "It follows that for i = 1, . . . , k − 1 we have Ti = Ai u + i − 1 u + i u + i u + i + 1 − Ai u + i u + i + 1 = −Ai 1 u + i + 1 = Ki+1 u + i + 1 .",
                "Observe that as u−1 varies from 0 to 1, u varies from x to x .",
                "Therefore, to maximize the total payoff, we have to choose u ∈ [x , x ] so as to maximize K2 u + 2 + · · · + Kk u + k = R(u).",
                "By construction, the only maximum of R(u) on [x , x ] is α.",
                "It follows that in the payoff-maximizing <br>nash equilibrium</br> of our game U0 plays α.",
                "Finally, note that the payoffs in our game are rational rather than integer.",
                "However, it is easy to see that we can multiply all payoffs to a player by their greatest common denominator without affecting his strategy.",
                "In the resulting game, all payoffs are integer.",
                "This concludes the proof of Theorem 2. 4.",
                "APPROXIMATING THE SOCIALLY OPTIMAL <br>nash equilibrium</br> We have seen that the <br>nash equilibrium</br> that maximizes the social welfare may involve strategies that are not in Q.",
                "Hence, in this section we focus on finding a <br>nash equilibrium</br> that is almost optimal from the social welfare perspective.",
                "We propose an algorithm that for any > 0 finds a <br>nash equilibrium</br> whose total payoff is within from optimal.",
                "The running time of this algorithm is polynomial in 1/ , n and |Pmax| (recall that Pmax is the maximum absolute value of an entry of a payoff matrix).",
                "While the negative result of the previous section is for graphical games on paths, our algorithm applies to a wider range of scenarios.",
                "Namely, it runs in polynomial time on bounded-degree trees 166 as long as the best response policy of each vertex, given its parent, can be represented as a union of a polynomial number of rectangles.",
                "Note that path graphs always satisfy this condition: in [9] we showed how to compute such a representation, given a graph with maximum degree 2.",
                "Consequently, for path graphs the running time of our algorithm is guaranteed to be polynomial. (Note that [9] exhibits a family of graphical games on bounded-degree trees for which the best response policies of some of the vertices, given their parents, have exponential size, when represented as unions of rectangles.)",
                "Due to space restrictions, in this version of the paper we present the algorithm for the case where the graph underlying the graphical game is a path.",
                "We then state our result for the general case; the proof can be found in the full version of this paper [10].",
                "Suppose that s is a strategy profile for a graphical game G. That is, s assigns a mixed strategy to each vertex of G. let EPV (s) be the expected payoff of player V under s and let EP(s) =P V EPV (s).",
                "Let M(G) = max{EP(s) | s is a <br>nash equilibrium</br> for G}.",
                "THEOREM 3.",
                "Suppose that G is a graphical game on an nvertex path.",
                "Then for any > 0 there is an algorithm that constructs a <br>nash equilibrium</br> s for G that satisfies EP(s ) ≥ M(G)− .",
                "The running time of the algorithm is O(n4 P3 max/ 3 ) PROOF.",
                "Let {V1, . . . , Vn} be the set of all players.",
                "We start by constructing the best response policies for all Vi, i = 1, . . . , n − 1.",
                "As shown in [9], this can be done in time O(n3 ).",
                "Let N > 5n be a parameter to be selected later, set δ = 1/N, and define X = {jδ | j = 0, . . . , N}.",
                "We say that vj is an event point for a player Vi if it is a Vi-event point for B(Vi, Vi−1) or B(Vi+1, Vi).",
                "For each player Vi, consider a finite set of strategies Xi given by Xi = X ∪ {vj |vj is an event point for Vi}.",
                "It has been shown in [9] that for any i = 2, . . . , n, the best response policy B(Vi, Vi−1) has at most 2n + 4 Vi-event points.",
                "As we require N > 5n, we have |Xi| ≤ 2N; assume without loss of generality that |Xi| = 2N.",
                "Order the elements of Xi in increasing order as x1 i = 0 < x2 i < · · · < x2N i .",
                "We will refer to the strategies in Xi as discrete strategies of player Vi; a strategy profile in which each player has a discrete strategy will be referred to as a discrete strategy profile.",
                "We will now show that even we restrict each player Vi to strategies from Xi, the players can still achieve a <br>nash equilibrium</br>, and moreover, the best such <br>nash equilibrium</br> (with respect to the social welfare) has total payoff at least M(G) − as long as N is large enough.",
                "Let s be a strategy profile that maximizes social welfare.",
                "That is, let s = (s1, . . . , sn) where si is the mixed strategy of player Vi and EP(s) = M(G).",
                "For i = 1, . . . , n, let ti = max{xj i | xj i ≤ si}.",
                "First, we will show that the strategy profile t = (t1, . . . , tn) is a <br>nash equilibrium</br> for G. Fix any i, 1 < i ≤ n, and let R = [v1, v2]×[u1, u2] be the rectangle in B(Vi, Vi−1) that contains (si, si−1).",
                "As v1 is a Vi-event point of B(Vi, Vi−1), we have v1 ≤ ti, so the point (ti, si−1) is inside R. Similarly, the point u1 is a Vi−1-event point of B(Vi, Vi−1), so we have u1 ≤ ti−1, and therefore the point (ti, ti−1) is inside R. This means that for any i, 1 < i ≤ n, we have ti−1 ∈ pbrVi−1 (ti), which implies that t = (t1, . . . , tn) is a <br>nash equilibrium</br> for G. Now, let us estimate the expected loss in social welfare caused by playing t instead of s. LEMMA 3.",
                "For any pair of strategy profiles t, s such that |ti − si| ≤ δ we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ for any i = 1, . . . , n. PROOF.",
                "Let Pi klm be the payoff of the player Vi, when he plays k, Vi−1 plays l, and Vi+1 plays m. Fix i = 1, . . . , n and for k, l, m ∈ {0, 1}, set tklm = tk i−1(1 − ti−1)1−k tl i(1 − ti)1−l tm i+1(1 − ti+1)1−m sklm = sk i−1(1 − si−1)1−k sl i(1 − si)1−l sm i+1(1 − si+1)1−m .",
                "We have |EPVi (s) − EPVi (t)| ≤ X k,l,m=0,1 |Pi klm(tklm − sklm )| ≤ 8Pmax max klm |tklm − sklm | We will now show that for any k, l, m ∈ {0, 1} we have |tklm − sklm | ≤ 3δ; clearly, this implies the lemma.",
                "Indeed, fix k, l, m ∈ {0, 1}.",
                "Set x = tk i−1(1 − ti−1)1−k , x = sk i−1(1 − si−1)1−k , y = tl i(1 − ti)1−l , y = sl i(1 − si)1−l , z = tm i+1(1 − ti+1)1−m , z = sm i+1(1 − si+1)1−m .",
                "Observe that if k = 0 then x − x = (1 − ti−1) − (1 − si−1), and if k = 1 then x − x = ti−1 − si−1, so |x − x | ≤ δ.",
                "A similar argument shows |y − y | ≤ δ, |z − z | ≤ δ.",
                "Also, we have x, x , y, y , z, z ∈ [0, 1].",
                "Hence, |tklm −sklm | = |xyz−x y z | = |xyz − x yz + x yz − x y z + x y z − x y z | ≤ |x − x |yz + |y − y |x z + |z − z |x y ≤ 3δ.",
                "Lemma 3 implies Pn i=1 |EPVi (s) − EPVi (t)| ≤ 24nPmaxδ, so by choosing δ < /(24nPmax), or, equivalently, setting N > 24nPmax/ , we can ensure that the total expected payoff for the strategy profile t is within from optimal.",
                "We will now show that we can find the best discrete <br>nash equilibrium</br> (with respect to the social welfare) using dynamic programming.",
                "As t is a discrete strategy profile, this means that the strategy profile found by our algorithm will be at least as good as t. Define ml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj , j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1, and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The values ml,k i , i = 1, . . . , n; k, l = 1, . . . , N, can be computed inductively, as follows.",
                "We have ml,k 1 = 0 for k, l = 1, . . . , N. Now, suppose that we have already computed ml,k j for all j < i; k, l = 1, . . . , N. To compute mk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this is not the case, we have ml,k i = −∞.",
                "Otherwise, consider the set Y = Xi−2 ∩ pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "The proof of Theorem 1 in [9] implies that the set pbrVi−2 (xl i−1) is non-empty: the player Vi−2 has a potential best response to any strategy of Vi−1, in particular, xl i−1.",
                "By construction of the set Xi−2, this implies that Y is not empty.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "Then we have ml,k i = max{mj,l i−1 + pjlk | xj i−2 ∈ Y }.",
                "Finally, suppose that we have computed ml,k n for l, k = 1, . . . , N. We still need to take into account the payoff of player Vn.",
                "Hence, 167 we consider all pairs (xk n, xl n−1) that satisfy xl n−1 ∈ pbrVn−1 (xk n), and pick the one that maximizes the sum of mk,l n and the payoff of Vn when he plays xk n and Vn−1 plays xl n−1.",
                "This results in the maximum total payoff the players can achieve in a <br>nash equilibrium</br> using discrete strategies; the actual strategy profile that produces this payoff can be reconstructed using standard dynamic programming techniques.",
                "It is easy to see that each ml,k i can be computed in time O(N), i.e., all of them can be computed in time O(nN3 ).",
                "Recall that we have to select N ≥ (24nPmax)/ to ensure that the strategy profile we output has total payoff that is within from optimal.",
                "We conclude that we can compute an -approximation to the best <br>nash equilibrium</br> in time O(n4 P3 max/ 3 ).",
                "This completes the proof of Theorem 3.",
                "To state our result for the general case (i.e., when the underlying graph is a bounded-degree tree rather than a path), we need additional notation.",
                "If G has n players, let q(n) be an upper bound on the number of event points in the representation of any best response policy.",
                "That is, we assume that for any vertex U with parent V , B(V, U) has at most q(n) event points.",
                "We will be interested in the situation in which q(n) is polynomial in n. THEOREM 4.",
                "Let G be an n-player graphical game on a tree in which each node has at most Δ children.",
                "Suppose we are given a set of best-response policies for G in which each best-response policy B(V, U) is represented by a set of rectangles with at most q(n) event points.",
                "For any > 0, there is an algorithm that constructs a <br>nash equilibrium</br> s for G that satisfies EP(s ) ≥ M(G) − .",
                "The running time of the algorithm is polynomial in n, Pmax and −1 provided that the tree has bounded degree (that is, Δ = O(1)) and q(n) is a polynomial in n. In particular, if N = max((Δ + 1)q(n) + 1, n2Δ+2 (Δ + 2)Pmax −1 ) and Δ > 1 then the running time is O(nΔ(2N)Δ .",
                "For the proof of this theorem, see [10]. 4.1 A polynomial-time algorithm for multiplicative approximation The running time of our algorithm is pseudopolynomial rather than polynomial, because it includes a factor which is polynomial in Pmax, the maximum (in absolute value) entry in any payoff matrix.",
                "If we are interested in multiplicative approximation rather than additive one, this can be improved to polynomial.",
                "First, note that we cannot expect a multiplicative approximation for all inputs.",
                "That is, we cannot hope to have an algorithm that computes a <br>nash equilibrium</br> with total payoff at least (1 − )M(G).",
                "If we had such an algorithm, then for graphical games G with M(G) = 0, the algorithm would be required to output the optimal solution.",
                "To show that this is infeasible, observe that we can use the techniques of Section 3.2 to construct two integercoefficient graphical games on paths of length O(n) such that for some X ∈ R the maximal total payoff in the first game is X, the maximal total payoff in the second game is −X, and for both games, the strategy profiles that achieve the maximal total payoffs involve algebraic numbers of degree n. By combining the two games so that the first vertex of the second game becomes connected to the last vertex of the first game, but the payoffs of all players do not change, we obtain a graphical game in which the best <br>nash equilibrium</br> has total payoff 0, yet the strategies that lead to this payoff have high algebraic complexity.",
                "However, we can achieve a multiplicative approximation when all entries of the payoff matrices are positive and the ratio between any two entries is polynomially bounded.",
                "Recall that we assume that all payoffs are integer, and let Pmin > 0 be the smallest entry of any payoff matrix.",
                "In this case, for any strategy profile the payoff to player i is at least Pmin, so the total payoff in the social-welfare maximizing <br>nash equilibrium</br> s satisfies M(G) ≥ nPmin.",
                "Moreover, Lemma 3 implies that by choosing δ < /(24Pmax/Pmin), we can ensure that the <br>nash equilibrium</br> t produced by our algorithm satisfies nX i=1 EPVi (s) − nX i=1 EPVi (t) ≤ 24Pmaxδn ≤ nPmin ≤ M(G), i.e., for this value of δ we have Pn i=1 EPVi (t) ≥ (1 − )M(G).",
                "Recall that the running time of our algorithm is O(nN3 ), where N has to be selected to satisfy N > 5n, N = 1/δ.",
                "It follows that if Pmin > 0, Pmax/Pmin = poly(n), we can choose N so that our algorithm provides a multiplicative approximation guarantee and runs in time polynomial in n and 1/ . 5.",
                "BOUNDED PAYOFF NASH EQUILIBRIA Another natural way to define what is a good <br>nash equilibrium</br> is to require that each players expected payoff exceeds a certain threshold.",
                "These thresholds do not have to be the same for all players.",
                "In this case, in addition to the payoff matrices of the n players, we are given n numbers T1, . . . , Tn, and our goal is to find a <br>nash equilibrium</br> in which the payoff of player i is at least Ti, or report that no such <br>nash equilibrium</br> exists.",
                "It turns out that we can design an FPTAS for this problem using the same techniques as in the previous section.",
                "THEOREM 5.",
                "Given a graphical game G on an n-vertex path and n rational numbers T1, . . . , Tn, suppose that there exists a strategy profile s such that s is a <br>nash equilibrium</br> for G and EPVi (s) ≥ Ti for i = 1, . . . , n. Then for any > 0 we can find in time O(max{nP3 max/ 3 , n4 / 3 }) a strategy profile s such that s is a <br>nash equilibrium</br> for G and EPVi (s ) ≥ Ti − for i = 1, . . . , n. PROOF.",
                "The proof is similar to that of Theorem 3.",
                "First, we construct the best response policies for all players, choose N > 5n, and construct the sets Xi, i = 1, . . . , n, as described in the proof of Theorem 3.",
                "Consider a strategy profile s such that s is a <br>nash equilibrium</br> for G and EPVi (s) ≥ Ti for i = 1, . . . , n. We construct a strategy profile ti = max{xj i | xj i ≤ si} and use the same argument as in the proof of Theorem 3 to show that t is a <br>nash equilibrium</br> for G. By Lemma 3, we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ, so choosing δ < /(24Pmax), or, equivalently, N > max{5n, 24Pmax/ }, we can ensure EPVi (t) ≥ Ti − for i = 1, . . . , n. Now, we will use dynamic programming to find a discrete Nash equilibrium that satisfies EPVi (t) ≥ Ti − for i = 1, . . . , n. As t is a discrete strategy profile, our algorithm will succeed whenever there is a strategy profile s with EPVi (s) ≥ Ti− for i = 1, . . . , n. Let zl,k i = 1 if there is a discrete strategy profile such that for any j < i the strategy of the player Vj is a potential best response to the strategy of Vj+1, the expected payoff of Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "Otherwise, let zl,k i = 0.",
                "We can compute zl,k i , i = 1, . . . , n; k, l = 1, . . . , N inductively, as follows.",
                "We have zl,k 1 = 1 for k, l = 1, . . . , N. Now, suppose that we have already computed zl,k j for all j < i; k, l = 1, . . . , N. To compute zk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this 168 is not the case, clearly, zk,l i = 0.",
                "Otherwise, consider the set Y = Xi−2 ∩pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "It has been shown in the proof of Theorem 3 that Y = ∅.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "If there exists an xj i−2 ∈ Y such that zj,l i−1 = 1 and pjlk ≥ Ti−2 − , set zl,k i = 1.",
                "Otherwise, set zl,k i = 0.",
                "Having computed zl,k n , l, k = 1, . . . , N, we check if zl,k n = 1 for some pair (l, k). if such a pair of indices exists, we instruct Vn to play xk n and use dynamic programming techniques (or, equivalently, the downstream pass of the algorithm of [13]) to find a <br>nash equilibrium</br> s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n (recall that Vn is a dummy player, i.e., we assume Tn = 0, EPn(s ) = 0 for any choice of s ).",
                "If zl,k n = 0 for all l, k = 1, . . . , N, there is no discrete <br>nash equilibrium</br> s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n and hence no <br>nash equilibrium</br> s (not necessarily discrete) such that EPVi (s) ≥ Ti for i = 1, . . . , n. The running time analysis is similar to that for Theorem 3; we conclude that the running time of our algorithm is O(nN3 ) = O(max{nP3 max/ 3 , n4 / 3 }).",
                "REMARK 1.",
                "Theorem 5 can be extended to trees of bounded degree in the same way as Theorem 4. 5.1 Exact Computation Another approach to finding Nash equilibria with bounded payoffs is based on inductively computing the subsets of the best response policies of all players so as to exclude the points that do not provide sufficient payoffs to some of the players.",
                "Formally, we say that a strategy v of the player V is a potential best response to a strategy w of its parent W with respect to a threshold vector T = (T1, . . . , Tn), (denoted by v ∈ pbrV (w, T)) if there is an equilibrium in the instance G(V,W ),W =w in which V plays mixed strategy v and the payoff to any player Vi downstream of V (including V ) is at least Ti.",
                "The best response policy for V with respect to a threshold vector T is defined as B(W, V, T) = {(w, v) | v ∈ pbrV (w, T), w ∈ [0, 1]}.",
                "It is easy to see that if any of the sets B(Vj, Vj−1, T), j = 1, . . . , n, is empty, it means that it is impossible to provide all players with expected payoffs prescribed by T. Otherwise, one can apply the downstream pass of the original algorithm of [13] to find a <br>nash equilibrium</br>.",
                "As we assume that Vn is a dummy vertex whose payoff is identically 0, the <br>nash equilibrium</br> with these payoffs exists as long as Tn ≤ 0 and B(Vn, Vn−1, T) is not empty.",
                "Using the techniques developed in [9], it is not hard to show that for any j = 1, . . . , n, the set B(Vj , Vj−1, T) consists of a finite number of rectangles, and one can compute B(Vj+1, Vj , T) given B(Vj , Vj−1, T).",
                "The advantage of this approach is that it allows us to represent all Nash equilibria that provide required payoffs to the players.",
                "However, it is not likely to be practical, since it turns out that the rectangles that appear in the representation of B(Vj , Vj−1, T) may have irrational coordinates.",
                "CLAIM 6.",
                "There exists a graphical game G on a 3-vertex path UV W and a vector T = (T1, T2, T3) such that B(V, W, T) cannot be represented as a union of a finite number of rectangles with rational coordinates.",
                "PROOF.",
                "We define the payoffs to the players in G as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = uw, P1 (V ) = P0 (V ) + w − .8u − .1, where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = .8u + .1; observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "It is not hard to see that we have B(W, V ) = [0, .1]×{0} ∪ [.1, .9]×[0, 1] ∪ [.9, 1]×{1}.",
                "The payoffs to W are not important for our construction; for example, set P0(W ) = P0(W ) = 0.",
                "Now, set T = (0, 1/8, 0), i.e., we are interested in Nash equilibria in which V s expected payoff is at least 1/8.",
                "Suppose w ∈ [0, 1].",
                "The player V can play a mixed strategy v when W is playing w as long as U plays u = f−1 (w) = 5w/4 − 1/8 (to ensure that V is indifferent between 0 and 1) and P0 (V ) = P1 (V ) = uw = w(5w/4 − 1/8) ≥ 1/8.",
                "The latter condition is satisfied if w ≤ (1 − √ 41)/20 < 0 or w ≥ (1 + √ 41)/20.",
                "Note that we have .1 < (1 + √ 41)/20 < .9.",
                "For any other value of w, any strategy of U either makes V prefer one of the pure strategies or does not provide it with a sufficient expected payoff.",
                "There are also some values of w for which V can play a pure strategy (0 or 1) as a potential best response to W and guarantee itself an expected payoff of at least 1/8; it can be shown that these values of w form a finite number of segments in [0, 1].",
                "We conclude that any representation of B(W, V, T) as a union of a finite number of rectangles must contain a rectangle of the form [(1 + √ 41)/20, w ]×[v , v ] for some w , v , v ∈ [0, 1].",
                "On the other hand, it can be shown that for any integer payoff matrices and threshold vectors and any j = 1, . . . , n − 1, the sets B(Vj+1, Vj, T) contain no rectangles of the form [u , u ]×{v} or {v}×[w , w ], where v ∈ R\\Q.",
                "This means that if B(Vn, Vn−1, T) is non-empty, i.e., there is a <br>nash equilibrium</br> with payoffs prescribed by T, then the downstream pass of the algorithm of [13] can always pick a strategy profile that forms a <br>nash equilibrium</br>, provides a payoff of at least Ti to the player Vi, and has no irrational coordinates.",
                "Hence, unlike in the case of the <br>nash equilibrium</br> that maximizes the social welfare, working with irrational numbers is not necessary, and the fact that the algorithm discussed in this section has to do so can be seen as an argument against using this approach. 6.",
                "OTHER CRITERIA FOR SELECTING A <br>nash equilibrium</br> In this section, we consider several other criteria that can be useful in selecting a <br>nash equilibrium</br>. 6.1 Combining welfare maximization with bounds on payoffs In many real life scenarios, we want to maximize the social welfare subject to certain restrictions on the payoffs to individual players.",
                "For example, we may want to ensure that no player gets a negative expected payoff, or that the expected payoff to player i is at least Pi max − ξ, where Pi max is the maximum entry of is payoff matrix and ξ is a fixed parameter.",
                "Formally, given a graphical game G and a vector T1, . . . , Tn, let S be the set of all Nash equilibria s of G that satisfy Ti ≤ EPVi (s) for i = 1, . . . , n, and let ˆs = argmaxs∈S EP(s).",
                "If the set S is non-empty, we can find a <br>nash equilibrium</br> ˆs that is -close to satisfying the payoff bounds and is within from ˆs with respect to the total payoff by combining the algorithms of Section 4 and Section 5.",
                "Namely, for a given > 0, choose δ as in the proof of Theorem 3, and let Xi be the set of all discrete strategies of player Vi (for a 169 formal definition, see the proof of Theorem 3).",
                "Combining the proofs of Theorem 3 and Theorem 5, we can see that the strategy profile ˆt given by ˆti = max{xj i | xj i ≤ ˆsi} satisfies EPVi (ˆt) ≥ Ti − , |EP(ˆs) − EP(ˆt)| ≤ .",
                "Define ˆml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj, j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1 and the payoff to player Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The ˆml,k i can be computed by dynamic programming similarly to the ml,k i and zl,k i in the proofs of Theorems 3 and 5.",
                "Finally, as in the proof of Theorem 3, we use ml,k n to select the best discrete <br>nash equilibrium</br> subject to the payoff constraints.",
                "Even more generally, we may want to maximize the total payoff to a subset of players (who are assumed to be able to redistribute the profits fairly among themselves) while guaranteeing certain expected payoffs to (a subset of) the other players.",
                "This problem can be handled similarly. 6.2 A minimax approach A more egalitarian measure of the quality of a <br>nash equilibrium</br> is the minimal expected payoff to a player.",
                "The optimal solution with respect to this measure is a <br>nash equilibrium</br> in which the minimal expected payoff to a player is maximal.",
                "To find an approximation to such a <br>nash equilibrium</br>, we can combine the algorithm of Section 5 with binary search on the space of potential lower bounds.",
                "Note that the expected payoff to any player Vi given a strategy s always satisfies −Pmax ≤ EPVi (s) ≤ Pmax.",
                "For a fixed > 0, we start by setting T = −Pmax, T = Pmax, T∗ = (T + T )/2.",
                "We then run the algorithm of Section 5 with T1 = · · · = Tn = T∗ .",
                "If the algorithm succeeds in finding a <br>nash equilibrium</br> s that satisfies EPVi (s ) ≥ T∗ − for all i = 1, . . . , n, we set T = T∗ , T∗ = (T + T )/2; otherwise, we set T = T∗ , T∗ = (T + T )/2 and loop.",
                "We repeat this process until |T − T | ≤ .",
                "It is not hard to check that for any p ∈ R, if there is a <br>nash equilibrium</br> s such that mini=1,...,n EPVi (s) ≥ p, then our algorithm outputs a <br>nash equilibrium</br> s that satisfies mini=1,...,n EPVi (s) ≥ p−2 .",
                "The running time of our algorithm is O(max{nP3 max log −1 / 3 , n4 log −1 / 3 }). 6.3 Equalizing the payoffs When the players payoff matrices are not very different, it is reasonable to demand that the expected payoffs to the players do not differ by much either.",
                "We will now show that Nash equilibria in this category can be approximated in polynomial time as well.",
                "Indeed, observe that the algorithm of Section 5 can be easily modified to deal with upper bounds on individual payoffs rather than lower bounds.",
                "Moreover, we can efficiently compute an approximation to a <br>nash equilibrium</br> that satisfies both the upper bound and the lower bound for each player.",
                "More precisely, suppose that we are given a graphical game G, 2n rational numbers T1, . . . , Tn, T1, . . . , Tn and > 0.",
                "Then if there exists a strategy profile s such that s is a <br>nash equilibrium</br> for G and Ti ≤ EPVi (s) ≤ Ti for i = 1, . . . , n, we can find a strategy profile s such that s is a <br>nash equilibrium</br> for G and Ti − ≤ EPVi (s ) ≤ Ti + for i = 1, . . . , n. The modified algorithm also runs in time O(max{nP3 max/ 3 , [4]n4 / 3 }).",
                "This observation allows us to approximate Nash equilibria in which all players expected payoffs differ by at most ξ for any fixed ξ > 0.",
                "Given an > 0, we set T1 = · · · = Tn = −Pmax, T1 = · · · = Tn = −Pmax + ξ + , and run the modified version of the algorithm of Section 5.",
                "If it fails to find a solution, we increment all Ti, Ti by and loop.",
                "We continue until the algorithm finds a solution, or Ti ≥ Pmax.",
                "Suppose that there exists a <br>nash equilibrium</br> s that satisfies |EPVi (s) − EPVj (s)| ≤ ξ for all i, j = 1, . . . , n. Set r = mini=1,...,n EPVi (s); we have r ≤ EPVi (s) ≤ r + ξ for all i = 1, . . . , n. There exists a k ≥ 0 such that −Pmax + (k − 1) ≤ r ≤ −Pmax + k .",
                "During the kth step of the algorithm, we set T1 = · · · = Tn = −Pmax +(k−1) , i.e., we have r− ≤ Ti ≤ r, r + ξ ≤ Ti ≤ r + ξ + .",
                "That is, the <br>nash equilibrium</br> s satisfies Ti ≤ r ≤ EPVi (s) ≤ r + ξ ≤ Ti , which means that when Ti is set to −Pmax + (k − 1) , our algorithm is guaranteed to output a <br>nash equilibrium</br> t that satisfies r − 2 ≤ Ti − ≤ EPVi (t) ≤ Ti + ≤ r +ξ +2 .",
                "We conclude that whenever such a <br>nash equilibrium</br> s exists, our algorithm outputs a <br>nash equilibrium</br> t that satisfies |EPVi (t) − EPVj (t)| ≤ ξ + 4 for all i, j = 1, . . . , n. The running time of this algorithm is O(max{nP3 max/ 4 , n4 / 4 }).",
                "Note also that we can find the smallest ξ for which such a <br>nash equilibrium</br> exists by combining this algorithm with binary search over the space ξ = [0, 2Pmax].",
                "This identifies an approximation to the fairest <br>nash equilibrium</br>, i.e., one in which the players expected payoffs differ by the smallest possible amount.",
                "Finally, note that all results in this section can be extended to bounded-degree trees. 7.",
                "CONCLUSIONS We have studied the problem of equilibrium selection in graphical games on bounded-degree trees.",
                "We considered several criteria for selecting a <br>nash equilibrium</br>, such as maximizing the social welfare, ensuring a lower bound on the expected payoff of each player, etc.",
                "First, we focused on the algebraic complexity of a social welfare-maximizing <br>nash equilibrium</br>, and proved strong negative results for that problem.",
                "Namely, we showed that even for graphical games on paths, any algebraic number α ∈ [0, 1] may be the only strategy available to some player in all social welfaremaximizing Nash equilibria.",
                "This is in sharp contrast with the fact that graphical games on trees always possess a <br>nash equilibrium</br> in which all players strategies are rational numbers.",
                "We then provided approximation algorithms for selecting Nash equilibria with special properties.",
                "While the problem of finding approximate Nash equilibria for various classes of games has received a lot of attention in recent years, most of the existing work aims to find -Nash equilibria that satisfy (or are -close to satisfying) certain properties.",
                "Our approach is different in that we insist on outputting an exact <br>nash equilibrium</br>, which is -close to satisfying a given requirement.",
                "As argued in the introduction, there are several reasons to prefer a solution that constitutes an exact <br>nash equilibrium</br>.",
                "Our algorithms are fully polynomial time approximation schemes, i.e., their running time is polynomial in the inverse of the approximation parameter , though they may be pseudopolynomial with respect to the input size.",
                "Under mild restrictions on the inputs, they can be modified to be truly polynomial.",
                "This is the strongest positive result one can derive for a problem whose exact solutions may be hard to represent, as is the case for many of the problems considered here.",
                "While we prove our results for games on a path, they can be generalized to any tree for which the best response policies have compact representations as unions of rectangles.",
                "In the full version of the paper we describe our algorithms for the general case.",
                "Further work in this vein could include extensions to the kinds of guarantees sought for Nash equilibria, such as guaranteeing total payoffs for subsets of players, selecting equilibria in which some players are receiving significantly higher payoffs than their peers, etc.",
                "At the moment however, it is perhaps more important to inves170 tigate whether Nash equilibria of graphical games can be computed in a decentralized manner, in contrast to the algorithms we have introduced here.",
                "It is natural to ask if our results or those of [9] can be generalized to games with three or more actions.",
                "However, it seems that this will make the analysis significantly more difficult.",
                "In particular, note that one can view the bounded payoff games as a very limited special case of games with three actions per player.",
                "Namely, given a two-action game with payoff bounds, consider a game in which each player Vi has a third action that guarantees him a payoff of Ti no matter what everyone else does.",
                "Then checking if there is a <br>nash equilibrium</br> in which none of the players assigns a nonzero probability to his third action is equivalent to checking if there exists a <br>nash equilibrium</br> that satisfies the payoff bounds in the original game, and Section 5.1 shows that finding an exact solution to this problem requires new ideas.",
                "Alternatively it may be interesting to look for similar results in the context of correlated equilibria (CE), especially since the best CE may have higher value (total expected payoff) than the best NE.",
                "The ratio between these values is called the mediation value in [1].",
                "It is known from [1] that the mediation value of 2-player, 2-action games with non-negative payoffs is at most 4 3 , and they exhibit a 3-player game for which it is infinite.",
                "Furthermore, a 2-player, 3action example from [1] also has infinite mediation value. 8.",
                "REFERENCES [1] I. Ashlagi, D. Monderer and M. Tenneholtz, On the Value of Correlation, Proceedings of Dagstuhl seminar 05011 (2005) [2] R. Aumann, Subjectivity and Correlation in Randomized Strategies, Journal of Mathematical Economics 1 pp. 67-96 (1974) [3] B. Blum, C. R. Shelton, and D. Koller, A Continuation Method for Nash Equilibria in Structured Games, Proceedings of IJCAI03 [4] X. Chen, X. Deng and S. Teng, Computing Nash Equilibria: Approximation and Smoothed Complexity, Proceedings of FOCS06 [5] X. Chen, X. Deng, Settling the Complexity of 2-Player Nash-Equilibrium, Proceedings of FOCS06 [6] V. Conitzer and T. Sandholm, Complexity Results about Nash Equilibria, Proceedings of IJCAI03 [7] C. Daskalakis, P. W. Goldberg and C. H. Papadimitriou, The Complexity of Computing a <br>nash equilibrium</br>, Proceedings of STOC06 [8] R. S. Datta, Universality of Nash Equilibria, Mathematics of Operations Research 28:3, 2003 [9] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Nash Equilibria in Graphical games on Trees Revisited, Proceedings of ACM EC06 [10] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Computing Good Nash Equilibria in Graphical Games, http://arxiv.org/abs/cs.GT/0703133 [11] I. Gilboa and E. Zemel, Nash and Correlated Equilibria: Some Complexity Considerations, Games and Economic Behavior, 1 pp. 80-93 (1989) [12] P. W. Goldberg and C. H. Papadimitriou, Reducibility Among Equilibrium Problems, Proceedings of STOC06 [13] M. Kearns, M. Littman, and S. Singh, Graphical Models for Game Theory, Proceedings of UAI01 [14] M. Littman, M. Kearns, and S. Singh, An Efficient Exact Algorithm for Singly Connected Graphical Games, Proceedings of NIPS01 [15] R. Lipton and E. Markakis, Nash Equilibria via Polynomial Equations, Proceedings of LATIN04 [16] L. Ortiz and M. Kearns, Nash Propagation for Loopy Graphical Games, Proceedings of NIPS03 [17] C.H.",
                "Papadimitriou, Computing Correlated Equilibria in Multi-Player Games, Proceedings of STOC05 [18] C.H.",
                "Papadimitriou and T. Roughgarden, Computing Equilibria in Multi-Player Games, Proceedings of SODA05 [19] D. Vickrey and D. Koller, Multi-agent Algorithms for Solving Graphical Games, Proceedings of AAAI02 171"
            ],
            "original_annotated_samples": [
                "In this paper, we show that if the underlying graph is a bounded-degree tree and the best response policy has polynomial size then there is an efficient algorithm which constructs a <br>nash equilibrium</br> that guarantees certain payoffs to all participants.",
                "Another attractive solution concept is a <br>nash equilibrium</br> that maximizes the social welfare.",
                "In contrast, we need n2n numbers to represent a general n-player 2-action game, which is only practical for small values of n. For graphical games with constant Δ, the size of the game is linear in n. One of the most natural problems for a graphical game is that of finding a <br>nash equilibrium</br>, the existence of which follows from Nashs celebrated theorem (as graphical games are just a special case of n-player games).",
                "They propose a generic algorithm for finding Nash equilibria that can be specialized in two ways: an exponential-time algorithm for finding an (exact) <br>nash equilibrium</br>, and a fully polynomial time approximation scheme (FPTAS) for finding an approximation to a <br>nash equilibrium</br>.",
                "For any > 0 this algorithm outputs an -<br>nash equilibrium</br>, which is a strategy profile in which no player can improve his payoff by more than by unilaterally changing his strategy."
            ],
            "translated_annotated_samples": [
                "En este artículo, demostramos que si el grafo subyacente es un árbol de grado acotado y la política de mejor respuesta tiene un tamaño polinómico, entonces existe un algoritmo eficiente que construye un <br>equilibrio de Nash</br> que garantiza ciertos pagos a todos los participantes.",
                "Otro concepto de solución atractivo es un <br>equilibrio de Nash</br> que maximiza el bienestar social.",
                "Por el contrario, necesitamos n^2 números para representar un juego general de n jugadores y 2 acciones, lo cual solo es práctico para valores pequeños de n. Para juegos gráficos con Δ constante, el tamaño del juego es lineal en n. Uno de los problemas más naturales para un juego gráfico es el de encontrar un <br>equilibrio de Nash</br>, cuya existencia se deriva del célebre teorema de Nash (ya que los juegos gráficos son solo un caso especial de juegos de n jugadores).",
                "Proponen un algoritmo genérico para encontrar equilibrios de Nash que puede ser especializado de dos maneras: un algoritmo de tiempo exponencial para encontrar un <br>equilibrio de Nash</br> (exacto) y un esquema de aproximación de tiempo polinómico completo (FPTAS) para encontrar una aproximación a un <br>equilibrio de Nash</br>.",
                "Para cualquier > 0, este algoritmo produce un <br>equilibrio de Nash</br>, que es un perfil estratégico en el que ningún jugador puede mejorar su pago más que al cambiar unilateralmente su estrategia."
            ],
            "translated_text": "Calcular buenos equilibrios de Nash en juegos gráficos ∗ Edith Elkind Universidad Hebrea de Jerusalén, Israel, y Universidad de Southampton, Southampton, SO17 1BJ, Reino Unido. Leslie Ann Goldberg Universidad de Liverpool Liverpool L69 3BX, Reino Unido. Paul Goldberg Universidad de Liverpool Liverpool L69 3BX, Reino Unido. RESUMEN Este artículo aborda el problema de la selección justa de equilibrios en juegos gráficos. Nuestro enfoque se basa en la estructura de datos llamada política de mejor respuesta, propuesta por Kearns et al. [13] como una forma de representar todos los equilibrios de Nash de un juego gráfico. En [9], se demostró que la política de mejor respuesta tiene un tamaño polinómico siempre y cuando el grafo subyacente sea un camino. En este artículo, demostramos que si el grafo subyacente es un árbol de grado acotado y la política de mejor respuesta tiene un tamaño polinómico, entonces existe un algoritmo eficiente que construye un <br>equilibrio de Nash</br> que garantiza ciertos pagos a todos los participantes. Otro concepto de solución atractivo es un <br>equilibrio de Nash</br> que maximiza el bienestar social. Mostramos que, si bien calcular exactamente lo último es inviable (demostramos que resolver este problema puede implicar números algebraicos de un grado arbitrariamente alto), existe un FPTAS para encontrar dicho equilibrio siempre y cuando la política de mejor respuesta tenga un tamaño polinómico. Estos dos algoritmos pueden combinarse para producir equilibrios de Nash que satisfacen varios criterios de equidad. Categorías y Descriptores de Asignaturas F.2 [Teoría de la Computación]: Análisis de Algoritmos y Complejidad de Problemas; J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento - Economía Términos Generales Algoritmos, Economía, Teoría 1. INTRODUCCIÓN En una gran comunidad de agentes, es poco probable que el comportamiento de un agente tenga un efecto directo en la mayoría de los otros agentes: más bien, solo serán afectados los agentes que estén lo suficientemente cerca de él. Sin embargo, a medida que estos agentes responden adaptando su comportamiento, más agentes sentirán las consecuencias y eventualmente las decisiones tomadas por un solo agente se propagarán por toda la comunidad. Esta es la intuición detrás de los juegos gráficos, los cuales fueron introducidos por Kearns, Littman y Singh en [13] como un esquema de representación compacto para juegos con muchos jugadores. En un juego gráfico de n jugadores, a cada jugador se le asocia un vértice de un grafo subyacente G, y las ganancias de cada jugador dependen de su acción, así como de las acciones de sus vecinos en el grafo. Si el grado máximo de G es Δ, y cada jugador tiene dos acciones disponibles, entonces el juego se puede representar usando n2Δ+1 números. Por el contrario, necesitamos n^2 números para representar un juego general de n jugadores y 2 acciones, lo cual solo es práctico para valores pequeños de n. Para juegos gráficos con Δ constante, el tamaño del juego es lineal en n. Uno de los problemas más naturales para un juego gráfico es el de encontrar un <br>equilibrio de Nash</br>, cuya existencia se deriva del célebre teorema de Nash (ya que los juegos gráficos son solo un caso especial de juegos de n jugadores). El primer intento de abordar este problema se realizó en [13], donde los autores consideran juegos gráficos con dos acciones por jugador en los que el grafo subyacente es un árbol de grado acotado. Proponen un algoritmo genérico para encontrar equilibrios de Nash que puede ser especializado de dos maneras: un algoritmo de tiempo exponencial para encontrar un <br>equilibrio de Nash</br> (exacto) y un esquema de aproximación de tiempo polinómico completo (FPTAS) para encontrar una aproximación a un <br>equilibrio de Nash</br>. Para cualquier > 0, este algoritmo produce un <br>equilibrio de Nash</br>, que es un perfil estratégico en el que ningún jugador puede mejorar su pago más que al cambiar unilateralmente su estrategia. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "approximation scheme": {
            "translated_key": "esquema de aproximación",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Computing Good Nash Equilibria in Graphical Games ∗ Edith Elkind Hebrew University of Jerusalem, Israel, and University of Southampton, Southampton, SO17 1BJ, U.K. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K. ABSTRACT This paper addresses the problem of fair equilibrium selection in graphical games.",
                "Our approach is based on the data structure called the best response policy, which was proposed by Kearns et al. [13] as a way to represent all Nash equilibria of a graphical game.",
                "In [9], it was shown that the best response policy has polynomial size as long as the underlying graph is a path.",
                "In this paper, we show that if the underlying graph is a bounded-degree tree and the best response policy has polynomial size then there is an efficient algorithm which constructs a Nash equilibrium that guarantees certain payoffs to all participants.",
                "Another attractive solution concept is a Nash equilibrium that maximizes the social welfare.",
                "We show that, while exactly computing the latter is infeasible (we prove that solving this problem may involve algebraic numbers of an arbitrarily high degree), there exists an FPTAS for finding such an equilibrium as long as the best response policy has polynomial size.",
                "These two algorithms can be combined to produce Nash equilibria that satisfy various fairness criteria.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a large community of agents, an agents behavior is not likely to have a direct effect on most other agents: rather, it is just the agents who are close enough to him that will be affected.",
                "However, as these agents respond by adapting their behavior, more agents will feel the consequences and eventually the choices made by a single agent will propagate throughout the entire community.",
                "This is the intuition behind graphical games, which were introduced by Kearns, Littman and Singh in [13] as a compact representation scheme for games with many players.",
                "In an n-player graphical game, each player is associated with a vertex of an underlying graph G, and the payoffs of each player depend on his action as well as on the actions of his neighbors in the graph.",
                "If the maximum degree of G is Δ, and each player has two actions available to him, then the game can be represented using n2Δ+1 numbers.",
                "In contrast, we need n2n numbers to represent a general n-player 2-action game, which is only practical for small values of n. For graphical games with constant Δ, the size of the game is linear in n. One of the most natural problems for a graphical game is that of finding a Nash equilibrium, the existence of which follows from Nashs celebrated theorem (as graphical games are just a special case of n-player games).",
                "The first attempt to tackle this problem was made in [13], where the authors consider graphical games with two actions per player in which the underlying graph is a boundeddegree tree.",
                "They propose a generic algorithm for finding Nash equilibria that can be specialized in two ways: an exponential-time algorithm for finding an (exact) Nash equilibrium, and a fully polynomial time <br>approximation scheme</br> (FPTAS) for finding an approximation to a Nash equilibrium.",
                "For any > 0 this algorithm outputs an -Nash equilibrium, which is a strategy profile in which no player can improve his payoff by more than by unilaterally changing his strategy.",
                "While -Nash equilibria are often easier to compute than exact Nash equilibria, this solution concept has several drawbacks.",
                "First, the players may be sensitive to a small loss in payoffs, so the strategy profile that is an -Nash equilibrium will not be stable.",
                "This will be the case even if there is only a small subset of players who are extremely price-sensitive, and for a large population of players it may be difficult to choose a value of that will satisfy everyone.",
                "Second, the strategy profiles that are close to being Nash equilibria may be much better with respect to the properties under consideration than exact Nash equilibria.",
                "Therefore, the (approximation to the) value of the best solution that corresponds to an -Nash equilibrium may not be indicative of what can be achieved under an exact Nash equilibrium.",
                "This is especially important if the purpose of the approximate solution is to provide a good benchmark for a system of selfish agents, as the benchmark implied by an -Nash equilibrium may be unrealistic.",
                "For these reasons, in this paper we focus on the problem of computing exact Nash equilibria.",
                "Building on ideas of [14], Elkind et al. [9] showed how to find an (exact) Nash equilibrium in polynomial time when the underlying 162 graph has degree 2 (that is, when the graph is a collection of paths and cycles).",
                "By contrast, finding a Nash equilibrium in a general degree-bounded graph appears to be computationally intractable: it has been shown (see [5, 12, 7]) to be complete for the complexity class PPAD. [9] extends this hardness result to the case in which the underlying graph has bounded pathwidth.",
                "A graphical game may not have a unique Nash equilibrium, indeed it may have exponentially many.",
                "Moreover, some Nash equilibria are more desirable than others.",
                "Rather than having an algorithm which merely finds some Nash equilibrium, we would like to have algorithms for finding Nash equilibria with various sociallydesirable properties, such as maximizing overall payoff or distributing profit fairly.",
                "A useful property of the data structure of [13] is that it simultaneously represents the set of all Nash equilibria of the underlying game.",
                "If this representation has polynomial size (as is the case for paths, as shown in [9]), one may hope to extract from it a Nash equilibrium with the desired properties.",
                "In fact, in [13] the authors mention that this is indeed possible if one is interested in finding an (approximate) -Nash equilibrium.",
                "The goal of this paper is to extend this to exact Nash equilibria. 1.1 Our Results In this paper, we study n-player 2-action graphical games on bounded-degree trees for which the data structure of [13] has size poly(n).",
                "We focus on the problem of finding exact Nash equilibria with certain socially-desirable properties.",
                "In particular, we show how to find a Nash equilibrium that (nearly) maximizes the social welfare, i.e., the sum of the players payoffs, and we show how to find a Nash equilibrium that (nearly) satisfies prescribed payoff bounds for all players.",
                "Graphical games on bounded-degree trees have a simple algebraic structure.",
                "One attractive feature, which follows from [13], is that every such game has a Nash equilibrium in which the strategy of every player is a rational number.",
                "Section 3 studies the algebraic structure of those Nash equilibria that maximize social welfare.",
                "We show (Theorems 1 and 2) that, surprisingly, the set of Nash equilibria that maximize social welfare is more complex.",
                "In fact, for any algebraic number α ∈ [0, 1] with degree at most n, we exhibit a graphical game on a path of length O(n) such that, in the unique social welfare-maximizing Nash equilibrium of this game, one of the players plays the mixed strategy α.1 This result shows that it may be difficult to represent an optimal Nash equilibrium.",
                "It seems to be a novel feature of the setting we consider here, that an optimal Nash equilibrium is hard to represent, in a situation where it is easy to find and represent a Nash equilibrium.",
                "As the social welfare-maximizing Nash equilibrium may be hard to represent efficiently, we have to settle for an approximation.",
                "However, the crucial difference between our approach and that of previous papers [13, 16, 19] is that we require our algorithm to output an exact Nash equilibrium, though not necessarily the optimal one with respect to our criteria.",
                "In Section 4, we describe an algorithm that satisfies this requirement.",
                "Namely, we propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within of optimal.",
                "It runs in polynomial time (Theorem 3,4) for any graphical game on a bounded-degree tree for which the data structure proposed by [13] (the so-called best response policy, defined below) is of size poly(n) (note that, as shown in [9], this is always the case when the underlying graph is a path).",
                "More pre1 A related result in a different context was obtained by Datta [8], who shows that n-player 2-action games are universal in the sense that any real algebraic variety can be represented as the set of totally mixed Nash equilibria of such games. cisely, the running time of our algorithm is polynomial in n, Pmax, and 1/ , where Pmax is the maximum absolute value of an entry of a payoff matrix, i.e., it is a pseudopolynomial algorithm, though it is fully polynomial with respect to .",
                "We show (Section 4.1) that under some restrictions on the payoff matrices, the algorithm can be transformed into a (truly) polynomial-time algorithm that outputs a Nash equilibrium whose total payoff is within a 1 − factor from the optimal.",
                "In Section 5, we consider the problem of finding a Nash equilibrium in which the expected payoff of each player Vi exceeds a prescribed threshold Ti.",
                "Using the idea from Section 4 we give (Theorem 5) a fully polynomial time <br>approximation scheme</br> for this problem.",
                "The running time of the algorithm is bounded by a polynomial in n, Pmax, and .",
                "If the instance has a Nash equilibrium satisfying the prescribed thresholds then the algorithm constructs a Nash equilibrium in which the expected payoff of each player Vi is at least Ti − .",
                "In Section 6, we introduce other natural criteria for selecting a good Nash equilibrium and we show that the algorithms described in the two previous sections can be used as building blocks in finding Nash equilibria that satisfy these criteria.",
                "In particular, in Section 6.1 we show how to find a Nash equilibrium that approximates the maximum social welfare, while guaranteeing that each individual payoff is close to a prescribed threshold.",
                "In Section 6.2 we show how to find a Nash equilibrium that (nearly) maximizes the minimum individual payoff.",
                "Finally, in Section 6.3 we show how to find a Nash equilibrium in which the individual payoffs of the players are close to each other. 1.2 Related Work Our <br>approximation scheme</br> (Theorem 3 and Theorem 4) shows a contrast between the games that we study and two-player n-action games, for which the corresponding problems are usually intractable.",
                "For two-player n-action games, the problem of finding Nash equilibria with special properties is typically NP-hard.",
                "In particular, this is the case for Nash equilibria that maximize the social welfare [11, 6].",
                "Moreover, it is likely to be intractable even to approximate such equilibria.",
                "In particular, Chen, Deng and Teng [4] show that there exists some , inverse polynomial in n, for which computing an -Nash equilibrium in 2-player games with n actions per player is PPAD-complete.",
                "Lipton and Markakis [15] study the algebraic properties of Nash equilibria, and point out that standard quantifier elimination algorithms can be used to solve them.",
                "Note that these algorithms are not polynomial-time in general.",
                "The games we study in this paper have polynomial-time computable Nash equilibria in which all mixed strategies are rational numbers, but an optimal Nash equilibrium may necessarily include mixed strategies with high algebraic degree.",
                "A correlated equilibrium (CE) (introduced by Aumann [2]) is a distribution over vectors of players actions with the property that if any player is told his own action (the value of his own component) from a vector generated by that distribution, then he cannot increase his expected payoff by changing his action.",
                "Any Nash equilibrium is a CE but the converse does not hold in general.",
                "In contrast with Nash equilibria, correlated equilibria can be found for low-degree graphical games (as well as other classes of conciselyrepresented multiplayer games) in polynomial time [17].",
                "But, for graphical games it is NP-hard to find a correlated equilibrium that maximizes total payoff [18].",
                "However, the NP-hardness results apply to more general games than the one we consider here, in particular the graphs are not trees.",
                "From [2] it is also known that there exist 2-player, 2-action games for which the expected total payoff 163 of the best correlated equilibrium is higher than the best Nash equilibrium, and we discuss this issue further in Section 7. 2.",
                "PRELIMINARIES AND NOTATION We consider graphical games in which the underlying graph G is an n-vertex tree, in which each vertex has at most Δ children.",
                "Each vertex has two actions, which are denoted by 0 and 1.",
                "A mixed strategy of a player V is represented as a single number v ∈ [0, 1], which denotes the probability that V selects action 1.",
                "For the purposes of the algorithm, the tree is rooted arbitrarily.",
                "For convenience, we assume without loss of generality that the root has a single child, and that its payoff is independent of the action chosen by the child.",
                "This can be achieved by first choosing an arbitrary root of the tree, and then adding a dummy parent of this root, giving the new parent a constant payoff function, e.g., 0.",
                "Given an edge (V, W ) of the tree G, and a mixed strategy w for W , let G(V,W ),W =w be the instance obtained from G by (1) deleting all nodes Z which are separated from V by W (i.e., all nodes Z such that the path from Z to V passes through W ), and (2) restricting the instance so that W is required to play mixed strategy w. Definition 1.",
                "Suppose that (V, W ) is an edge of the tree, that v is a mixed strategy for V and that w is a mixed strategy for W .",
                "We say that v is a potential best response to w (denoted by v ∈ pbrV (w)) if there is an equilibrium in the instance G(V,W ),W =w in which V has mixed strategy v. We define the best response policy for V , given W , as B(W, V ) = {(w, v) | v ∈ pbrV (w), w ∈ [0, 1]}.",
                "The upstream pass of the generic algorithm of [13] considers every node V (other than the root) and computes the best response policy for V given its parent.",
                "With the above assumptions about the root, the downstream pass is straightforward.",
                "The root selects a mixed strategy w for the root W and a mixed strategy v ∈ B(W, V ) for each child V of W .",
                "It instructs each child V to play v. The remainder of the downward pass is recursive.",
                "When a node V is instructed by its parent to adopt mixed strategy v, it does the following for each child U - It finds a pair (v, u) ∈ B(V, U) (with the same v value that it was given by its parent) and instructs U to play u.",
                "The best response policy for a vertex U given its parent V can be represented as a union of rectangles, where a rectangle is defined by a pair of closed intervals (IV , IU ) and consists of all points in IV × IU ; it may be the case that one or both of the intervals IV and IU consists of a single point.",
                "In order to perform computations on B(V, U), and to bound the number of rectangles, [9] used the notion of an event point, which is defined as follows.",
                "For any set A ⊆ [0, 1]2 that is represented as a union of a finite number of rectangles, we say that a point u ∈ [0, 1] on the U-axis is a Uevent point of A if u = 0 or u = 1 or the representation of A contains a rectangle of the form IV × IU and u is an endpoint of IU ; V -event points are defined similarly.",
                "For many games considered in this paper, the underlying graph is an n-vertex path, i.e., a graph G = (V, E) with V = {V1, . . . , Vn} and E = {(V1, V2), . . . , (Vn−1, Vn)}.",
                "In [9], it was shown that for such games, the best response policy has only polynomially-many rectangles.",
                "The proof that the number of rectangles in B(Vj+1, Vj) is polynomial proceeds by first showing that the number of event points in B(Vj+1, Vj ) cannot exceed the number of event points in B(Vj, Vj−1) by more than 2, and using this fact to bound the number of rectangles in B(Vj+1, Vj ).",
                "Let P0 (V ) and P1 (V ) be the expected payoffs to V when it plays 0 and 1, respectively.",
                "Both P0 (V ) and P1 (V ) are multilinear functions of the strategies of V s neighbors.",
                "In what follows, we will frequently use the following simple observation.",
                "CLAIM 1.",
                "For a vertex V with a single child U and parent W , given any A, B, C, D ∈ Q, A , B , C , D ∈ Q, one can select the payoffs to V so that P0 (V ) = Auw + Bu + Cw + D, P1 (V ) = A uw + B u + C w + D .",
                "Moreover, if all A, B, C, D, A , B , C , D are integer, the payoffs to V are integer as well.",
                "PROOF.",
                "We will give the proof for P0 (V ); the proof for P1 (V ) is similar.",
                "For i, j = 0, 1, let Pij be the payoff to V when U plays i, V plays 0 and W plays j.",
                "We have P0 (V ) = P00(1 − u)(1 − w) + P10u(1 − w) + P01(1 − u)w + P11uw.",
                "We have to select the values of Pij so that P00 − P10 − P01 + P11 = A, −P00 + P10 = B, −P00 + P01 = C, P00 = D. It is easy to see that the unique solution is given by P00 = D, P01 = C + D, P10 = B + D, P11 = A + B + C + D. The input to all algorithms considered in this paper includes the payoff matrices for each player.",
                "We assume that all elements of these matrices are integer.",
                "Let Pmax be the greatest absolute value of any element of any payoff matrix.",
                "Then the input consists of at most n2Δ+1 numbers, each of which can be represented using log Pmax bits. 3.",
                "NASH EQUILIBRIA THAT MAXIMIZE THE SOCIAL WELFARE: SOLUTIONS IN R \\ Q From the point of view of social welfare, the best Nash equilibrium is the one that maximizes the sum of the players expected payoffs.",
                "Unfortunately, it turns out that computing such a strategy profile exactly is not possible: in this section, we show that even if all players payoffs are integers, the strategy profile that maximizes the total payoff may have irrational coordinates; moreover, it may involve algebraic numbers of an arbitrary degree. 3.1 Warm-up: quadratic irrationalities We start by providing an example of a graphical game on a path of length 3 with integer payoffs such that in the Nash equilibrium that maximizes the total payoff, one of the players has a strategy in R \\ Q.",
                "In the next subsection, we will extend this example to algebraic numbers of arbitrary degree n; to do so, we have to consider paths of length O(n).",
                "THEOREM 1.",
                "There exists an integer-payoff graphical game G on a 3-vertex path UV W such that, in any Nash equilibrium of G that maximizes social welfare, the strategy, u, of the player U and the total payoff, p, satisfy u, p ∈ R \\ Q.",
                "PROOF.",
                "The payoffs to the players in G are specified as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = −uw + 3w and P1 (V ) = P0 (V ) + w(u + 2) − (u + 1), where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = u+1 u+2 .",
                "Observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "The payoff to W is 0 if it selects the same action as V and 1 otherwise.",
                "CLAIM 2.",
                "All Nash equilibria of the game G are of the form (u, 1/2, f(u)).",
                "That is, in any Nash equilibrium, V plays v = 1/2 and W plays w = f(u).",
                "Moreover, for any value of u, the vector of strategies (u, 1/2, f(u)) constitutes a Nash equilibrium.",
                "PROOF.",
                "It is easy to check that for any u ∈ [0, 1], the vector (u, 1/2, f(u)) is a Nash equilibrium.",
                "Indeed, U is content to play 164 any mixed strategy u no matter what V and W do.",
                "Furthermore, V is indifferent between 0 and 1 as long as w = f(u), so it can play 1/2.",
                "Finally, if V plays 0 and 1 with equal probability, W is indifferent between 0 and 1, so it can play f(u).",
                "Conversely, suppose that v > 1/2.",
                "Then W strictly prefers to play 0, i.e., w = 0.",
                "Then for V we have P1 (V ) = P0 (V ) − (u + 1), i.e., P1 (V ) < P0 (V ), which implies v = 0, a contradiction.",
                "Similarly, if v < 1/2, player W prefers to play 1, so we have w = 1.",
                "Hence, P1 (V ) = P0 (V ) + (u + 2) − (u + 1), i.e., P1 (V ) > P0 (V ), which implies v = 1, a contradiction.",
                "Finally, if v = 1/2, but w = f(u), player V is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "This completes the proof of Claim 2.",
                "By Claim 2, the total payoff in any Nash equilibrium of this game is a function of u.",
                "More specifically, the payoff to U is 0, the payoff to V is −uf(u) + 3f(u), and the payoff to W is 1/2.",
                "Therefore, the Nash equilibrium with the maximum total payoff corresponds to the value of u that maximizes g(u) = −u (u + 1) u + 2 + 3 u + 1 u + 2 = − (u − 3)(u + 1) u + 2 .",
                "To find extrema of g(u), we compute h(u) = − d du g(u).",
                "We have h(u) = (2u − 2)(u + 2) − (u − 3)(u + 1) (u + 2)2 = u2 + 4u − 1 (u + 2)2 .",
                "Hence, h(u) = 0 if and only if u ∈ {−2 + √ 5, −2 − √ 5}.",
                "Note that −2 + √ 5 ∈ [0, 1].",
                "The function g(u) changes sign at −2, −1, and 3.",
                "We have g(u) < 0 for g > 3, g(u) > 0 for u < −2, so the extremum of g(u) that lies between 1 and 3, i.e., u = −2 + √ 5, is a local maximum.",
                "We conclude that the social welfare-maximizing Nash equilibrium for this game is given by the vector of strategies (−2+√ 5, 1/2, (5 − √ 5)/5).",
                "The respective total payoff is 0 − ( √ 5 − 5)( √ 5 − 1) √ 5 + 1 2 = 13/2 − 2 √ 5.",
                "This concludes the proof of Theorem 1. 3.2 Strategies of arbitrary degree We have shown that in the social welfare-maximizing Nash equilibrium, some players strategies can be quadratic irrationalities, and so can the total payoff.",
                "In this subsection, we will extend this result to show that we can construct an integer-payoff graphical game on a path whose social welfare-maximizing Nash equilibrium involves arbitrary algebraic numbers in [0, 1].",
                "THEOREM 2.",
                "For any degree-n algebraic number α ∈ [0, 1], there exists an integer payoff graphical game on a path of length O(n) such that, in all social welfare-maximizing Nash equilibria of this game, one of the players plays α.",
                "PROOF.",
                "Our proof consists of two steps.",
                "First, we construct a rational expression R(x) and a segment [x , x ] such that x , x ∈ Q and α is the only maximum of R(x) on [x , x ].",
                "Second, we construct a graphical game whose Nash equilibria can be parameterized by u ∈ [x , x ], so that at the equilibrium that corresponds to u the total payoff is R(u) and, moreover, some players strategy is u.",
                "It follows that to achieve the payoff-maximizing Nash equilibrium, this player has to play α.",
                "The details follow.",
                "LEMMA 1.",
                "Given an algebraic number α ∈ [0, 1], deg(α) = n, there exist K2, . . . , K2n+2 ∈ Q and x , x ∈ (0, 1) ∩ Q such that α is the only maximum of R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 on [x , x ].",
                "PROOF.",
                "Let P(x) be the minimal polynomial of α, i.e., a polynomial of degree n with rational coefficients whose leading coefficient is 1 such that P(α) = 0.",
                "Let A = {α1, . . . , αn} be the set of all roots of P(x).",
                "Consider the polynomial Q1(x) = −P2 (x).",
                "It has the same roots as P(x), and moreover, for any x ∈ A we have Q1(x) < 0.",
                "Hence, A is the set of all maxima of Q1(x).",
                "Now, set R(x) = Q1(x) (x+2)...(x+2n+1)(x+2n+2) .",
                "Observe that R(x) ≤ 0 for all x ∈ [0, 1] and R(x) = 0 if and only if Q1(x) = 0.",
                "Hence, the set A is also the set of all maxima of R(x) on [0, 1].",
                "Let d = min{|αi − α| | αi ∈ A, αi = α}, and set α = max{α − d/2, 0}, α = min{α + d/2, 1}.",
                "Clearly, α is the only zero (and hence, the only maximum) of R(x) on [α , α ].",
                "Let x and x be some rational numbers in (α , α) and (α, α ), respectively; note that by excluding the endpoints of the intervals we ensure that x , x = 0, 1.",
                "As [x , x ] ⊂ [α , α ], we have that α is the only maximum of R(x) on [x , x ].",
                "As R(x) is a proper rational expression and all roots of its denominator are simple, by partial fraction decomposition theorem, R(x) can be represented as R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 , where K2, . . . , K2n+2 are rational numbers.",
                "Consider a graphical game on the path U−1V−1U0V0U1V1 . . .",
                "Uk−1Vk−1Uk, where k = 2n + 2.",
                "Intuitively, we want each triple (Ui−1, Vi−1, Ui) to behave similarly to the players U, V , and W from the game described in the previous subsection.",
                "More precisely, we define the payoffs to the players in the following way. • The payoff to U−1 is 0 no matter what everyone else does. • The expected payoff to V−1 is 0 if it plays 0 and u0 − (x − x )u−1 −x if it plays 1, where u0 and u−1 are the strategies of U0 and U−1, respectively. • The expected payoff to V0 is 0 if it plays 0 and u1(u0 + 1)− u0 if it plays 1, where u0 and u1 are the strategies of U0 and U1, respectively. • For each i = 1, . . . , k − 1, the expected payoff to Vi when it plays 0 is P0 (Vi) = Aiuiui+1 − Aiui+1, and the expected payoff to Vi when it plays 1 is P1 (Vi) = P0 (Vi) + ui+1(2 − ui) − 1, where Ai = −Ki+1 and ui+1 and ui are the strategies of Ui+1 and Ui, respectively. • For each i = 0, . . . , k, the payoff to Ui does not depend on Vi and is 1 if Ui and Vi−1 select different actions and 0 otherwise.",
                "We will now characterize the Nash equilibria of this game using a sequence of claims.",
                "CLAIM 3.",
                "In all Nash equilibria of this game V−1 plays 1/2, and the strategies of u−1 and u0 satisfy u0 = (x − x )u−1 + x .",
                "Consequently, in all Nash equilibria we have u0 ∈ [x , x ]. 165 PROOF.",
                "The proof is similar to that of Claim 2.",
                "Let f(u−1) = (x − x )u−1 + x .",
                "Clearly, the player V−1 is indifferent between playing 0 and 1 if and only if u0 = f(u−1).",
                "Suppose that v−1 < 1/2.",
                "Then U0 strictly prefers to play 1, i.e., u0 = 1, so we have P1 (V−1) = P0 (V−1) + 1 − (x − x )u−1 − x .",
                "As 1 − x ≤ 1 − (x − x )u−1 − x ≤ 1 − x for u−1 ∈ [0, 1] and x < 1, we have P1 (V−1) > P0 (V−1), so V−1 prefers to play 1, a contradiction.",
                "Similarly, if v−1 > 1/2, the player U0 strictly prefers to play 0, i.e., u0 = 0, so we have P1 (V−1) = P0 (V−1) − (x − x )u−1 − x .",
                "As x < x , x > 0, we have P1 (V−1) < P0 (V−1), so V−1 prefers to play 0, a contradiction.",
                "Finally, if V−1 plays 1/2, but u0 = f(u−1), player V−1 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Also, note that f(0) = x , f(1) = x , and, moreover, f(u−1) ∈ [x , x ] if and only if u−1 ∈ [0, 1].",
                "Hence, in all Nash equilibria of this game we have u0 ∈ [x , x ].",
                "CLAIM 4.",
                "In all Nash equilibria of this game for each i = 0, . . . , k − 1, we have vi = 1/2, and the strategies of the players Ui and Ui+1 satisfy ui+1 = fi(ui), where f0(u) = u/(u + 1) and fi(u) = 1/(2 − u) for i > 0.",
                "PROOF.",
                "The proof of this claim is also similar to that of Claim 2.",
                "We use induction on i to prove that the statement of the claim is true and, additionally, ui = 1 for i > 0.",
                "For the base case i = 0, note that u0 = 0 by the previous claim (recall that x , x are selected so that x , x = 0, 1) and consider the triple (U0, V0, U1).",
                "Let v0 be the strategy of V0.",
                "First, suppose that v0 > 1/2.",
                "Then U1 strictly prefers to play 0, i.e., u1 = 0.",
                "Then for V0 we have P1 (V0) = P0 (V0) − u0.",
                "As u0 = 0, we have P1 (V0) < P0 (V0), which implies v1 = 0, a contradiction.",
                "Similarly, if v0 < 1/2, player U1 prefers to play 1, so we have u1 = 1.",
                "Hence, P1 (V0) = P0 (V0) + 1.",
                "It follows that P1 (V0) > P0 (V0), which implies v0 = 1, a contradiction.",
                "Finally, if v0 = 1/2, but u1 = u0/(u0 + 1), player V0 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as u1 = u0/(u0 + 1) and u0 ∈ [0, 1], we have u1 = 1.",
                "The argument for the inductive step is similar.",
                "Namely, suppose that the statement is proved for all i < i and consider the triple (Ui, Vi, Ui+1).",
                "Let vi be the strategy of Vi.",
                "First, suppose that vi > 1/2.",
                "Then Ui+1 strictly prefers to play 0, i.e., ui+1 = 0.",
                "Then for Vi we have P1 (Vi) = P0 (Vi)−1, i.e., P1 (Vi) < P0 (Vi), which implies vi = 0, a contradiction.",
                "Similarly, if vi < 1/2, player Ui+1 prefers to play 1, so we have ui+1 = 1.",
                "Hence, P1 (Vi) = P0 (Vi) + 1 − ui.",
                "By inductive hypothesis, we have ui < 1.",
                "Consequently, P1 (Vi) > P0 (Vi), which implies vi = 1, a contradiction.",
                "Finally, if vi = 1/2, but ui+1 = 1/(2 − ui), player Vi is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as ui+1 = 1/(2 − ui) and ui < 1, we have ui+1 < 1.",
                "CLAIM 5.",
                "Any strategy profile of the form (u−1, 1/2, u0, 1/2, u1, 1/2, . . . , uk−1, 1/2, uk), where u−1 ∈ [0, 1], u0 = (x − x )u−1 + x , u1 = u0/(u0 + 1), and ui+1 = 1/(2 − ui) for i ≥ 1 constitutes a Nash equilibrium.",
                "PROOF.",
                "First, the player U−1s payoffs do not depend on other players actions, so he is free to play any strategy in [0, 1].",
                "As long as u0 = (x −x )u−1 +x , player V−1 is indifferent between 0 and 1, so he is content to play 1/2; a similar argument applies to players V0, . . . , Vk−1.",
                "Finally, for each i = 0, . . . , k, the payoffs of player Ui only depend on the strategy of player Vi−1.",
                "In particular, as long as vi−1 = 1/2, player Ui is indifferent between playing 0 and 1, so he can play any mixed strategy ui ∈ [0, 1].",
                "To complete the proof, note that (x − x )u−1 + x ∈ [0, 1] for all u−1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] for all u0 ∈ [0, 1], and 1/(2 − ui) ∈ [0, 1] for all ui ∈ [0, 1], so we have ui ∈ [0, 1] for all i = 0, . . . , k. Now, let us compute the total payoff under a strategy profile of the form given in Claim 5.",
                "The payoff to U−1 is 0, and the expected payoff to each of the Ui, i = 0, . . . , k, is 1/2.",
                "The expected payoffs to V−1 and V0 are 0.",
                "Finally, for any i = 1, . . . , k − 1, the expected payoff to Vi is Ti = Aiuiui+1 − Aiui+1.",
                "It follows that to find a Nash equilibrium with the highest total payoff, we have to maximize Pk−1 i=1 Ti subject to conditions u−1 ∈ [0, 1], u0 = (x −x )u−1+x , u1 = u0/(u0+1), and ui+1 = 1/(2−ui) for i = 1, . . . , k − 1.",
                "We would like to express Pk−1 i=1 Ti as a function of u0.",
                "To simplify notation, set u = u0.",
                "LEMMA 2.",
                "For i = 1, . . . , k, we have ui = u+i−1 u+i .",
                "PROOF.",
                "The proof is by induction on i.",
                "For i = 1, we have u1 = u/(u + 1).",
                "Now, for i ≥ 2 suppose that ui−1 = (u + i − 2)/(u + i − 1).",
                "We have ui = 1/(2 − ui−1) = (u + i − 1)/(2u + 2i − 2 − u − i + 2) = (u + i − 1)/(u + i).",
                "It follows that for i = 1, . . . , k − 1 we have Ti = Ai u + i − 1 u + i u + i u + i + 1 − Ai u + i u + i + 1 = −Ai 1 u + i + 1 = Ki+1 u + i + 1 .",
                "Observe that as u−1 varies from 0 to 1, u varies from x to x .",
                "Therefore, to maximize the total payoff, we have to choose u ∈ [x , x ] so as to maximize K2 u + 2 + · · · + Kk u + k = R(u).",
                "By construction, the only maximum of R(u) on [x , x ] is α.",
                "It follows that in the payoff-maximizing Nash equilibrium of our game U0 plays α.",
                "Finally, note that the payoffs in our game are rational rather than integer.",
                "However, it is easy to see that we can multiply all payoffs to a player by their greatest common denominator without affecting his strategy.",
                "In the resulting game, all payoffs are integer.",
                "This concludes the proof of Theorem 2. 4.",
                "APPROXIMATING THE SOCIALLY OPTIMAL NASH EQUILIBRIUM We have seen that the Nash equilibrium that maximizes the social welfare may involve strategies that are not in Q.",
                "Hence, in this section we focus on finding a Nash equilibrium that is almost optimal from the social welfare perspective.",
                "We propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within from optimal.",
                "The running time of this algorithm is polynomial in 1/ , n and |Pmax| (recall that Pmax is the maximum absolute value of an entry of a payoff matrix).",
                "While the negative result of the previous section is for graphical games on paths, our algorithm applies to a wider range of scenarios.",
                "Namely, it runs in polynomial time on bounded-degree trees 166 as long as the best response policy of each vertex, given its parent, can be represented as a union of a polynomial number of rectangles.",
                "Note that path graphs always satisfy this condition: in [9] we showed how to compute such a representation, given a graph with maximum degree 2.",
                "Consequently, for path graphs the running time of our algorithm is guaranteed to be polynomial. (Note that [9] exhibits a family of graphical games on bounded-degree trees for which the best response policies of some of the vertices, given their parents, have exponential size, when represented as unions of rectangles.)",
                "Due to space restrictions, in this version of the paper we present the algorithm for the case where the graph underlying the graphical game is a path.",
                "We then state our result for the general case; the proof can be found in the full version of this paper [10].",
                "Suppose that s is a strategy profile for a graphical game G. That is, s assigns a mixed strategy to each vertex of G. let EPV (s) be the expected payoff of player V under s and let EP(s) =P V EPV (s).",
                "Let M(G) = max{EP(s) | s is a Nash equilibrium for G}.",
                "THEOREM 3.",
                "Suppose that G is a graphical game on an nvertex path.",
                "Then for any > 0 there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G)− .",
                "The running time of the algorithm is O(n4 P3 max/ 3 ) PROOF.",
                "Let {V1, . . . , Vn} be the set of all players.",
                "We start by constructing the best response policies for all Vi, i = 1, . . . , n − 1.",
                "As shown in [9], this can be done in time O(n3 ).",
                "Let N > 5n be a parameter to be selected later, set δ = 1/N, and define X = {jδ | j = 0, . . . , N}.",
                "We say that vj is an event point for a player Vi if it is a Vi-event point for B(Vi, Vi−1) or B(Vi+1, Vi).",
                "For each player Vi, consider a finite set of strategies Xi given by Xi = X ∪ {vj |vj is an event point for Vi}.",
                "It has been shown in [9] that for any i = 2, . . . , n, the best response policy B(Vi, Vi−1) has at most 2n + 4 Vi-event points.",
                "As we require N > 5n, we have |Xi| ≤ 2N; assume without loss of generality that |Xi| = 2N.",
                "Order the elements of Xi in increasing order as x1 i = 0 < x2 i < · · · < x2N i .",
                "We will refer to the strategies in Xi as discrete strategies of player Vi; a strategy profile in which each player has a discrete strategy will be referred to as a discrete strategy profile.",
                "We will now show that even we restrict each player Vi to strategies from Xi, the players can still achieve a Nash equilibrium, and moreover, the best such Nash equilibrium (with respect to the social welfare) has total payoff at least M(G) − as long as N is large enough.",
                "Let s be a strategy profile that maximizes social welfare.",
                "That is, let s = (s1, . . . , sn) where si is the mixed strategy of player Vi and EP(s) = M(G).",
                "For i = 1, . . . , n, let ti = max{xj i | xj i ≤ si}.",
                "First, we will show that the strategy profile t = (t1, . . . , tn) is a Nash equilibrium for G. Fix any i, 1 < i ≤ n, and let R = [v1, v2]×[u1, u2] be the rectangle in B(Vi, Vi−1) that contains (si, si−1).",
                "As v1 is a Vi-event point of B(Vi, Vi−1), we have v1 ≤ ti, so the point (ti, si−1) is inside R. Similarly, the point u1 is a Vi−1-event point of B(Vi, Vi−1), so we have u1 ≤ ti−1, and therefore the point (ti, ti−1) is inside R. This means that for any i, 1 < i ≤ n, we have ti−1 ∈ pbrVi−1 (ti), which implies that t = (t1, . . . , tn) is a Nash equilibrium for G. Now, let us estimate the expected loss in social welfare caused by playing t instead of s. LEMMA 3.",
                "For any pair of strategy profiles t, s such that |ti − si| ≤ δ we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ for any i = 1, . . . , n. PROOF.",
                "Let Pi klm be the payoff of the player Vi, when he plays k, Vi−1 plays l, and Vi+1 plays m. Fix i = 1, . . . , n and for k, l, m ∈ {0, 1}, set tklm = tk i−1(1 − ti−1)1−k tl i(1 − ti)1−l tm i+1(1 − ti+1)1−m sklm = sk i−1(1 − si−1)1−k sl i(1 − si)1−l sm i+1(1 − si+1)1−m .",
                "We have |EPVi (s) − EPVi (t)| ≤ X k,l,m=0,1 |Pi klm(tklm − sklm )| ≤ 8Pmax max klm |tklm − sklm | We will now show that for any k, l, m ∈ {0, 1} we have |tklm − sklm | ≤ 3δ; clearly, this implies the lemma.",
                "Indeed, fix k, l, m ∈ {0, 1}.",
                "Set x = tk i−1(1 − ti−1)1−k , x = sk i−1(1 − si−1)1−k , y = tl i(1 − ti)1−l , y = sl i(1 − si)1−l , z = tm i+1(1 − ti+1)1−m , z = sm i+1(1 − si+1)1−m .",
                "Observe that if k = 0 then x − x = (1 − ti−1) − (1 − si−1), and if k = 1 then x − x = ti−1 − si−1, so |x − x | ≤ δ.",
                "A similar argument shows |y − y | ≤ δ, |z − z | ≤ δ.",
                "Also, we have x, x , y, y , z, z ∈ [0, 1].",
                "Hence, |tklm −sklm | = |xyz−x y z | = |xyz − x yz + x yz − x y z + x y z − x y z | ≤ |x − x |yz + |y − y |x z + |z − z |x y ≤ 3δ.",
                "Lemma 3 implies Pn i=1 |EPVi (s) − EPVi (t)| ≤ 24nPmaxδ, so by choosing δ < /(24nPmax), or, equivalently, setting N > 24nPmax/ , we can ensure that the total expected payoff for the strategy profile t is within from optimal.",
                "We will now show that we can find the best discrete Nash equilibrium (with respect to the social welfare) using dynamic programming.",
                "As t is a discrete strategy profile, this means that the strategy profile found by our algorithm will be at least as good as t. Define ml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj , j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1, and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The values ml,k i , i = 1, . . . , n; k, l = 1, . . . , N, can be computed inductively, as follows.",
                "We have ml,k 1 = 0 for k, l = 1, . . . , N. Now, suppose that we have already computed ml,k j for all j < i; k, l = 1, . . . , N. To compute mk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this is not the case, we have ml,k i = −∞.",
                "Otherwise, consider the set Y = Xi−2 ∩ pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "The proof of Theorem 1 in [9] implies that the set pbrVi−2 (xl i−1) is non-empty: the player Vi−2 has a potential best response to any strategy of Vi−1, in particular, xl i−1.",
                "By construction of the set Xi−2, this implies that Y is not empty.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "Then we have ml,k i = max{mj,l i−1 + pjlk | xj i−2 ∈ Y }.",
                "Finally, suppose that we have computed ml,k n for l, k = 1, . . . , N. We still need to take into account the payoff of player Vn.",
                "Hence, 167 we consider all pairs (xk n, xl n−1) that satisfy xl n−1 ∈ pbrVn−1 (xk n), and pick the one that maximizes the sum of mk,l n and the payoff of Vn when he plays xk n and Vn−1 plays xl n−1.",
                "This results in the maximum total payoff the players can achieve in a Nash equilibrium using discrete strategies; the actual strategy profile that produces this payoff can be reconstructed using standard dynamic programming techniques.",
                "It is easy to see that each ml,k i can be computed in time O(N), i.e., all of them can be computed in time O(nN3 ).",
                "Recall that we have to select N ≥ (24nPmax)/ to ensure that the strategy profile we output has total payoff that is within from optimal.",
                "We conclude that we can compute an -approximation to the best Nash equilibrium in time O(n4 P3 max/ 3 ).",
                "This completes the proof of Theorem 3.",
                "To state our result for the general case (i.e., when the underlying graph is a bounded-degree tree rather than a path), we need additional notation.",
                "If G has n players, let q(n) be an upper bound on the number of event points in the representation of any best response policy.",
                "That is, we assume that for any vertex U with parent V , B(V, U) has at most q(n) event points.",
                "We will be interested in the situation in which q(n) is polynomial in n. THEOREM 4.",
                "Let G be an n-player graphical game on a tree in which each node has at most Δ children.",
                "Suppose we are given a set of best-response policies for G in which each best-response policy B(V, U) is represented by a set of rectangles with at most q(n) event points.",
                "For any > 0, there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G) − .",
                "The running time of the algorithm is polynomial in n, Pmax and −1 provided that the tree has bounded degree (that is, Δ = O(1)) and q(n) is a polynomial in n. In particular, if N = max((Δ + 1)q(n) + 1, n2Δ+2 (Δ + 2)Pmax −1 ) and Δ > 1 then the running time is O(nΔ(2N)Δ .",
                "For the proof of this theorem, see [10]. 4.1 A polynomial-time algorithm for multiplicative approximation The running time of our algorithm is pseudopolynomial rather than polynomial, because it includes a factor which is polynomial in Pmax, the maximum (in absolute value) entry in any payoff matrix.",
                "If we are interested in multiplicative approximation rather than additive one, this can be improved to polynomial.",
                "First, note that we cannot expect a multiplicative approximation for all inputs.",
                "That is, we cannot hope to have an algorithm that computes a Nash equilibrium with total payoff at least (1 − )M(G).",
                "If we had such an algorithm, then for graphical games G with M(G) = 0, the algorithm would be required to output the optimal solution.",
                "To show that this is infeasible, observe that we can use the techniques of Section 3.2 to construct two integercoefficient graphical games on paths of length O(n) such that for some X ∈ R the maximal total payoff in the first game is X, the maximal total payoff in the second game is −X, and for both games, the strategy profiles that achieve the maximal total payoffs involve algebraic numbers of degree n. By combining the two games so that the first vertex of the second game becomes connected to the last vertex of the first game, but the payoffs of all players do not change, we obtain a graphical game in which the best Nash equilibrium has total payoff 0, yet the strategies that lead to this payoff have high algebraic complexity.",
                "However, we can achieve a multiplicative approximation when all entries of the payoff matrices are positive and the ratio between any two entries is polynomially bounded.",
                "Recall that we assume that all payoffs are integer, and let Pmin > 0 be the smallest entry of any payoff matrix.",
                "In this case, for any strategy profile the payoff to player i is at least Pmin, so the total payoff in the social-welfare maximizing Nash equilibrium s satisfies M(G) ≥ nPmin.",
                "Moreover, Lemma 3 implies that by choosing δ < /(24Pmax/Pmin), we can ensure that the Nash equilibrium t produced by our algorithm satisfies nX i=1 EPVi (s) − nX i=1 EPVi (t) ≤ 24Pmaxδn ≤ nPmin ≤ M(G), i.e., for this value of δ we have Pn i=1 EPVi (t) ≥ (1 − )M(G).",
                "Recall that the running time of our algorithm is O(nN3 ), where N has to be selected to satisfy N > 5n, N = 1/δ.",
                "It follows that if Pmin > 0, Pmax/Pmin = poly(n), we can choose N so that our algorithm provides a multiplicative approximation guarantee and runs in time polynomial in n and 1/ . 5.",
                "BOUNDED PAYOFF NASH EQUILIBRIA Another natural way to define what is a good Nash equilibrium is to require that each players expected payoff exceeds a certain threshold.",
                "These thresholds do not have to be the same for all players.",
                "In this case, in addition to the payoff matrices of the n players, we are given n numbers T1, . . . , Tn, and our goal is to find a Nash equilibrium in which the payoff of player i is at least Ti, or report that no such Nash equilibrium exists.",
                "It turns out that we can design an FPTAS for this problem using the same techniques as in the previous section.",
                "THEOREM 5.",
                "Given a graphical game G on an n-vertex path and n rational numbers T1, . . . , Tn, suppose that there exists a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. Then for any > 0 we can find in time O(max{nP3 max/ 3 , n4 / 3 }) a strategy profile s such that s is a Nash equilibrium for G and EPVi (s ) ≥ Ti − for i = 1, . . . , n. PROOF.",
                "The proof is similar to that of Theorem 3.",
                "First, we construct the best response policies for all players, choose N > 5n, and construct the sets Xi, i = 1, . . . , n, as described in the proof of Theorem 3.",
                "Consider a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. We construct a strategy profile ti = max{xj i | xj i ≤ si} and use the same argument as in the proof of Theorem 3 to show that t is a Nash equilibrium for G. By Lemma 3, we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ, so choosing δ < /(24Pmax), or, equivalently, N > max{5n, 24Pmax/ }, we can ensure EPVi (t) ≥ Ti − for i = 1, . . . , n. Now, we will use dynamic programming to find a discrete Nash equilibrium that satisfies EPVi (t) ≥ Ti − for i = 1, . . . , n. As t is a discrete strategy profile, our algorithm will succeed whenever there is a strategy profile s with EPVi (s) ≥ Ti− for i = 1, . . . , n. Let zl,k i = 1 if there is a discrete strategy profile such that for any j < i the strategy of the player Vj is a potential best response to the strategy of Vj+1, the expected payoff of Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "Otherwise, let zl,k i = 0.",
                "We can compute zl,k i , i = 1, . . . , n; k, l = 1, . . . , N inductively, as follows.",
                "We have zl,k 1 = 1 for k, l = 1, . . . , N. Now, suppose that we have already computed zl,k j for all j < i; k, l = 1, . . . , N. To compute zk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this 168 is not the case, clearly, zk,l i = 0.",
                "Otherwise, consider the set Y = Xi−2 ∩pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "It has been shown in the proof of Theorem 3 that Y = ∅.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "If there exists an xj i−2 ∈ Y such that zj,l i−1 = 1 and pjlk ≥ Ti−2 − , set zl,k i = 1.",
                "Otherwise, set zl,k i = 0.",
                "Having computed zl,k n , l, k = 1, . . . , N, we check if zl,k n = 1 for some pair (l, k). if such a pair of indices exists, we instruct Vn to play xk n and use dynamic programming techniques (or, equivalently, the downstream pass of the algorithm of [13]) to find a Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n (recall that Vn is a dummy player, i.e., we assume Tn = 0, EPn(s ) = 0 for any choice of s ).",
                "If zl,k n = 0 for all l, k = 1, . . . , N, there is no discrete Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n and hence no Nash equilibrium s (not necessarily discrete) such that EPVi (s) ≥ Ti for i = 1, . . . , n. The running time analysis is similar to that for Theorem 3; we conclude that the running time of our algorithm is O(nN3 ) = O(max{nP3 max/ 3 , n4 / 3 }).",
                "REMARK 1.",
                "Theorem 5 can be extended to trees of bounded degree in the same way as Theorem 4. 5.1 Exact Computation Another approach to finding Nash equilibria with bounded payoffs is based on inductively computing the subsets of the best response policies of all players so as to exclude the points that do not provide sufficient payoffs to some of the players.",
                "Formally, we say that a strategy v of the player V is a potential best response to a strategy w of its parent W with respect to a threshold vector T = (T1, . . . , Tn), (denoted by v ∈ pbrV (w, T)) if there is an equilibrium in the instance G(V,W ),W =w in which V plays mixed strategy v and the payoff to any player Vi downstream of V (including V ) is at least Ti.",
                "The best response policy for V with respect to a threshold vector T is defined as B(W, V, T) = {(w, v) | v ∈ pbrV (w, T), w ∈ [0, 1]}.",
                "It is easy to see that if any of the sets B(Vj, Vj−1, T), j = 1, . . . , n, is empty, it means that it is impossible to provide all players with expected payoffs prescribed by T. Otherwise, one can apply the downstream pass of the original algorithm of [13] to find a Nash equilibrium.",
                "As we assume that Vn is a dummy vertex whose payoff is identically 0, the Nash equilibrium with these payoffs exists as long as Tn ≤ 0 and B(Vn, Vn−1, T) is not empty.",
                "Using the techniques developed in [9], it is not hard to show that for any j = 1, . . . , n, the set B(Vj , Vj−1, T) consists of a finite number of rectangles, and one can compute B(Vj+1, Vj , T) given B(Vj , Vj−1, T).",
                "The advantage of this approach is that it allows us to represent all Nash equilibria that provide required payoffs to the players.",
                "However, it is not likely to be practical, since it turns out that the rectangles that appear in the representation of B(Vj , Vj−1, T) may have irrational coordinates.",
                "CLAIM 6.",
                "There exists a graphical game G on a 3-vertex path UV W and a vector T = (T1, T2, T3) such that B(V, W, T) cannot be represented as a union of a finite number of rectangles with rational coordinates.",
                "PROOF.",
                "We define the payoffs to the players in G as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = uw, P1 (V ) = P0 (V ) + w − .8u − .1, where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = .8u + .1; observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "It is not hard to see that we have B(W, V ) = [0, .1]×{0} ∪ [.1, .9]×[0, 1] ∪ [.9, 1]×{1}.",
                "The payoffs to W are not important for our construction; for example, set P0(W ) = P0(W ) = 0.",
                "Now, set T = (0, 1/8, 0), i.e., we are interested in Nash equilibria in which V s expected payoff is at least 1/8.",
                "Suppose w ∈ [0, 1].",
                "The player V can play a mixed strategy v when W is playing w as long as U plays u = f−1 (w) = 5w/4 − 1/8 (to ensure that V is indifferent between 0 and 1) and P0 (V ) = P1 (V ) = uw = w(5w/4 − 1/8) ≥ 1/8.",
                "The latter condition is satisfied if w ≤ (1 − √ 41)/20 < 0 or w ≥ (1 + √ 41)/20.",
                "Note that we have .1 < (1 + √ 41)/20 < .9.",
                "For any other value of w, any strategy of U either makes V prefer one of the pure strategies or does not provide it with a sufficient expected payoff.",
                "There are also some values of w for which V can play a pure strategy (0 or 1) as a potential best response to W and guarantee itself an expected payoff of at least 1/8; it can be shown that these values of w form a finite number of segments in [0, 1].",
                "We conclude that any representation of B(W, V, T) as a union of a finite number of rectangles must contain a rectangle of the form [(1 + √ 41)/20, w ]×[v , v ] for some w , v , v ∈ [0, 1].",
                "On the other hand, it can be shown that for any integer payoff matrices and threshold vectors and any j = 1, . . . , n − 1, the sets B(Vj+1, Vj, T) contain no rectangles of the form [u , u ]×{v} or {v}×[w , w ], where v ∈ R\\Q.",
                "This means that if B(Vn, Vn−1, T) is non-empty, i.e., there is a Nash equilibrium with payoffs prescribed by T, then the downstream pass of the algorithm of [13] can always pick a strategy profile that forms a Nash equilibrium, provides a payoff of at least Ti to the player Vi, and has no irrational coordinates.",
                "Hence, unlike in the case of the Nash equilibrium that maximizes the social welfare, working with irrational numbers is not necessary, and the fact that the algorithm discussed in this section has to do so can be seen as an argument against using this approach. 6.",
                "OTHER CRITERIA FOR SELECTING A NASH EQUILIBRIUM In this section, we consider several other criteria that can be useful in selecting a Nash equilibrium. 6.1 Combining welfare maximization with bounds on payoffs In many real life scenarios, we want to maximize the social welfare subject to certain restrictions on the payoffs to individual players.",
                "For example, we may want to ensure that no player gets a negative expected payoff, or that the expected payoff to player i is at least Pi max − ξ, where Pi max is the maximum entry of is payoff matrix and ξ is a fixed parameter.",
                "Formally, given a graphical game G and a vector T1, . . . , Tn, let S be the set of all Nash equilibria s of G that satisfy Ti ≤ EPVi (s) for i = 1, . . . , n, and let ˆs = argmaxs∈S EP(s).",
                "If the set S is non-empty, we can find a Nash equilibrium ˆs that is -close to satisfying the payoff bounds and is within from ˆs with respect to the total payoff by combining the algorithms of Section 4 and Section 5.",
                "Namely, for a given > 0, choose δ as in the proof of Theorem 3, and let Xi be the set of all discrete strategies of player Vi (for a 169 formal definition, see the proof of Theorem 3).",
                "Combining the proofs of Theorem 3 and Theorem 5, we can see that the strategy profile ˆt given by ˆti = max{xj i | xj i ≤ ˆsi} satisfies EPVi (ˆt) ≥ Ti − , |EP(ˆs) − EP(ˆt)| ≤ .",
                "Define ˆml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj, j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1 and the payoff to player Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The ˆml,k i can be computed by dynamic programming similarly to the ml,k i and zl,k i in the proofs of Theorems 3 and 5.",
                "Finally, as in the proof of Theorem 3, we use ml,k n to select the best discrete Nash equilibrium subject to the payoff constraints.",
                "Even more generally, we may want to maximize the total payoff to a subset of players (who are assumed to be able to redistribute the profits fairly among themselves) while guaranteeing certain expected payoffs to (a subset of) the other players.",
                "This problem can be handled similarly. 6.2 A minimax approach A more egalitarian measure of the quality of a Nash equilibrium is the minimal expected payoff to a player.",
                "The optimal solution with respect to this measure is a Nash equilibrium in which the minimal expected payoff to a player is maximal.",
                "To find an approximation to such a Nash equilibrium, we can combine the algorithm of Section 5 with binary search on the space of potential lower bounds.",
                "Note that the expected payoff to any player Vi given a strategy s always satisfies −Pmax ≤ EPVi (s) ≤ Pmax.",
                "For a fixed > 0, we start by setting T = −Pmax, T = Pmax, T∗ = (T + T )/2.",
                "We then run the algorithm of Section 5 with T1 = · · · = Tn = T∗ .",
                "If the algorithm succeeds in finding a Nash equilibrium s that satisfies EPVi (s ) ≥ T∗ − for all i = 1, . . . , n, we set T = T∗ , T∗ = (T + T )/2; otherwise, we set T = T∗ , T∗ = (T + T )/2 and loop.",
                "We repeat this process until |T − T | ≤ .",
                "It is not hard to check that for any p ∈ R, if there is a Nash equilibrium s such that mini=1,...,n EPVi (s) ≥ p, then our algorithm outputs a Nash equilibrium s that satisfies mini=1,...,n EPVi (s) ≥ p−2 .",
                "The running time of our algorithm is O(max{nP3 max log −1 / 3 , n4 log −1 / 3 }). 6.3 Equalizing the payoffs When the players payoff matrices are not very different, it is reasonable to demand that the expected payoffs to the players do not differ by much either.",
                "We will now show that Nash equilibria in this category can be approximated in polynomial time as well.",
                "Indeed, observe that the algorithm of Section 5 can be easily modified to deal with upper bounds on individual payoffs rather than lower bounds.",
                "Moreover, we can efficiently compute an approximation to a Nash equilibrium that satisfies both the upper bound and the lower bound for each player.",
                "More precisely, suppose that we are given a graphical game G, 2n rational numbers T1, . . . , Tn, T1, . . . , Tn and > 0.",
                "Then if there exists a strategy profile s such that s is a Nash equilibrium for G and Ti ≤ EPVi (s) ≤ Ti for i = 1, . . . , n, we can find a strategy profile s such that s is a Nash equilibrium for G and Ti − ≤ EPVi (s ) ≤ Ti + for i = 1, . . . , n. The modified algorithm also runs in time O(max{nP3 max/ 3 , [4]n4 / 3 }).",
                "This observation allows us to approximate Nash equilibria in which all players expected payoffs differ by at most ξ for any fixed ξ > 0.",
                "Given an > 0, we set T1 = · · · = Tn = −Pmax, T1 = · · · = Tn = −Pmax + ξ + , and run the modified version of the algorithm of Section 5.",
                "If it fails to find a solution, we increment all Ti, Ti by and loop.",
                "We continue until the algorithm finds a solution, or Ti ≥ Pmax.",
                "Suppose that there exists a Nash equilibrium s that satisfies |EPVi (s) − EPVj (s)| ≤ ξ for all i, j = 1, . . . , n. Set r = mini=1,...,n EPVi (s); we have r ≤ EPVi (s) ≤ r + ξ for all i = 1, . . . , n. There exists a k ≥ 0 such that −Pmax + (k − 1) ≤ r ≤ −Pmax + k .",
                "During the kth step of the algorithm, we set T1 = · · · = Tn = −Pmax +(k−1) , i.e., we have r− ≤ Ti ≤ r, r + ξ ≤ Ti ≤ r + ξ + .",
                "That is, the Nash equilibrium s satisfies Ti ≤ r ≤ EPVi (s) ≤ r + ξ ≤ Ti , which means that when Ti is set to −Pmax + (k − 1) , our algorithm is guaranteed to output a Nash equilibrium t that satisfies r − 2 ≤ Ti − ≤ EPVi (t) ≤ Ti + ≤ r +ξ +2 .",
                "We conclude that whenever such a Nash equilibrium s exists, our algorithm outputs a Nash equilibrium t that satisfies |EPVi (t) − EPVj (t)| ≤ ξ + 4 for all i, j = 1, . . . , n. The running time of this algorithm is O(max{nP3 max/ 4 , n4 / 4 }).",
                "Note also that we can find the smallest ξ for which such a Nash equilibrium exists by combining this algorithm with binary search over the space ξ = [0, 2Pmax].",
                "This identifies an approximation to the fairest Nash equilibrium, i.e., one in which the players expected payoffs differ by the smallest possible amount.",
                "Finally, note that all results in this section can be extended to bounded-degree trees. 7.",
                "CONCLUSIONS We have studied the problem of equilibrium selection in graphical games on bounded-degree trees.",
                "We considered several criteria for selecting a Nash equilibrium, such as maximizing the social welfare, ensuring a lower bound on the expected payoff of each player, etc.",
                "First, we focused on the algebraic complexity of a social welfare-maximizing Nash equilibrium, and proved strong negative results for that problem.",
                "Namely, we showed that even for graphical games on paths, any algebraic number α ∈ [0, 1] may be the only strategy available to some player in all social welfaremaximizing Nash equilibria.",
                "This is in sharp contrast with the fact that graphical games on trees always possess a Nash equilibrium in which all players strategies are rational numbers.",
                "We then provided approximation algorithms for selecting Nash equilibria with special properties.",
                "While the problem of finding approximate Nash equilibria for various classes of games has received a lot of attention in recent years, most of the existing work aims to find -Nash equilibria that satisfy (or are -close to satisfying) certain properties.",
                "Our approach is different in that we insist on outputting an exact Nash equilibrium, which is -close to satisfying a given requirement.",
                "As argued in the introduction, there are several reasons to prefer a solution that constitutes an exact Nash equilibrium.",
                "Our algorithms are fully polynomial time approximation schemes, i.e., their running time is polynomial in the inverse of the approximation parameter , though they may be pseudopolynomial with respect to the input size.",
                "Under mild restrictions on the inputs, they can be modified to be truly polynomial.",
                "This is the strongest positive result one can derive for a problem whose exact solutions may be hard to represent, as is the case for many of the problems considered here.",
                "While we prove our results for games on a path, they can be generalized to any tree for which the best response policies have compact representations as unions of rectangles.",
                "In the full version of the paper we describe our algorithms for the general case.",
                "Further work in this vein could include extensions to the kinds of guarantees sought for Nash equilibria, such as guaranteeing total payoffs for subsets of players, selecting equilibria in which some players are receiving significantly higher payoffs than their peers, etc.",
                "At the moment however, it is perhaps more important to inves170 tigate whether Nash equilibria of graphical games can be computed in a decentralized manner, in contrast to the algorithms we have introduced here.",
                "It is natural to ask if our results or those of [9] can be generalized to games with three or more actions.",
                "However, it seems that this will make the analysis significantly more difficult.",
                "In particular, note that one can view the bounded payoff games as a very limited special case of games with three actions per player.",
                "Namely, given a two-action game with payoff bounds, consider a game in which each player Vi has a third action that guarantees him a payoff of Ti no matter what everyone else does.",
                "Then checking if there is a Nash equilibrium in which none of the players assigns a nonzero probability to his third action is equivalent to checking if there exists a Nash equilibrium that satisfies the payoff bounds in the original game, and Section 5.1 shows that finding an exact solution to this problem requires new ideas.",
                "Alternatively it may be interesting to look for similar results in the context of correlated equilibria (CE), especially since the best CE may have higher value (total expected payoff) than the best NE.",
                "The ratio between these values is called the mediation value in [1].",
                "It is known from [1] that the mediation value of 2-player, 2-action games with non-negative payoffs is at most 4 3 , and they exhibit a 3-player game for which it is infinite.",
                "Furthermore, a 2-player, 3action example from [1] also has infinite mediation value. 8.",
                "REFERENCES [1] I. Ashlagi, D. Monderer and M. Tenneholtz, On the Value of Correlation, Proceedings of Dagstuhl seminar 05011 (2005) [2] R. Aumann, Subjectivity and Correlation in Randomized Strategies, Journal of Mathematical Economics 1 pp. 67-96 (1974) [3] B. Blum, C. R. Shelton, and D. Koller, A Continuation Method for Nash Equilibria in Structured Games, Proceedings of IJCAI03 [4] X. Chen, X. Deng and S. Teng, Computing Nash Equilibria: Approximation and Smoothed Complexity, Proceedings of FOCS06 [5] X. Chen, X. Deng, Settling the Complexity of 2-Player Nash-Equilibrium, Proceedings of FOCS06 [6] V. Conitzer and T. Sandholm, Complexity Results about Nash Equilibria, Proceedings of IJCAI03 [7] C. Daskalakis, P. W. Goldberg and C. H. Papadimitriou, The Complexity of Computing a Nash Equilibrium, Proceedings of STOC06 [8] R. S. Datta, Universality of Nash Equilibria, Mathematics of Operations Research 28:3, 2003 [9] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Nash Equilibria in Graphical games on Trees Revisited, Proceedings of ACM EC06 [10] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Computing Good Nash Equilibria in Graphical Games, http://arxiv.org/abs/cs.GT/0703133 [11] I. Gilboa and E. Zemel, Nash and Correlated Equilibria: Some Complexity Considerations, Games and Economic Behavior, 1 pp. 80-93 (1989) [12] P. W. Goldberg and C. H. Papadimitriou, Reducibility Among Equilibrium Problems, Proceedings of STOC06 [13] M. Kearns, M. Littman, and S. Singh, Graphical Models for Game Theory, Proceedings of UAI01 [14] M. Littman, M. Kearns, and S. Singh, An Efficient Exact Algorithm for Singly Connected Graphical Games, Proceedings of NIPS01 [15] R. Lipton and E. Markakis, Nash Equilibria via Polynomial Equations, Proceedings of LATIN04 [16] L. Ortiz and M. Kearns, Nash Propagation for Loopy Graphical Games, Proceedings of NIPS03 [17] C.H.",
                "Papadimitriou, Computing Correlated Equilibria in Multi-Player Games, Proceedings of STOC05 [18] C.H.",
                "Papadimitriou and T. Roughgarden, Computing Equilibria in Multi-Player Games, Proceedings of SODA05 [19] D. Vickrey and D. Koller, Multi-agent Algorithms for Solving Graphical Games, Proceedings of AAAI02 171"
            ],
            "original_annotated_samples": [
                "They propose a generic algorithm for finding Nash equilibria that can be specialized in two ways: an exponential-time algorithm for finding an (exact) Nash equilibrium, and a fully polynomial time <br>approximation scheme</br> (FPTAS) for finding an approximation to a Nash equilibrium.",
                "Using the idea from Section 4 we give (Theorem 5) a fully polynomial time <br>approximation scheme</br> for this problem.",
                "Finally, in Section 6.3 we show how to find a Nash equilibrium in which the individual payoffs of the players are close to each other. 1.2 Related Work Our <br>approximation scheme</br> (Theorem 3 and Theorem 4) shows a contrast between the games that we study and two-player n-action games, for which the corresponding problems are usually intractable."
            ],
            "translated_annotated_samples": [
                "Proponen un algoritmo genérico para encontrar equilibrios de Nash que puede ser especializado de dos maneras: un algoritmo de tiempo exponencial para encontrar un equilibrio de Nash (exacto) y un <br>esquema de aproximación</br> de tiempo polinómico completo (FPTAS) para encontrar una aproximación a un equilibrio de Nash.",
                "Usando la idea de la Sección 4, presentamos (Teorema 5) un <br>esquema de aproximación</br> en tiempo polinómico completo para este problema.",
                "Finalmente, en la Sección 6.3 mostramos cómo encontrar un equilibrio de Nash en el que las ganancias individuales de los jugadores están cerca unas de otras. 1.2 Trabajo Relacionado Nuestro <br>esquema de aproximación</br> (Teorema 3 y Teorema 4) muestra un contraste entre los juegos que estudiamos y los juegos de n acciones de dos jugadores, para los cuales los problemas correspondientes suelen ser intratables."
            ],
            "translated_text": "Calcular buenos equilibrios de Nash en juegos gráficos ∗ Edith Elkind Universidad Hebrea de Jerusalén, Israel, y Universidad de Southampton, Southampton, SO17 1BJ, Reino Unido. Leslie Ann Goldberg Universidad de Liverpool Liverpool L69 3BX, Reino Unido. Paul Goldberg Universidad de Liverpool Liverpool L69 3BX, Reino Unido. RESUMEN Este artículo aborda el problema de la selección justa de equilibrios en juegos gráficos. Nuestro enfoque se basa en la estructura de datos llamada política de mejor respuesta, propuesta por Kearns et al. [13] como una forma de representar todos los equilibrios de Nash de un juego gráfico. En [9], se demostró que la política de mejor respuesta tiene un tamaño polinómico siempre y cuando el grafo subyacente sea un camino. En este artículo, demostramos que si el grafo subyacente es un árbol de grado acotado y la política de mejor respuesta tiene un tamaño polinómico, entonces existe un algoritmo eficiente que construye un equilibrio de Nash que garantiza ciertos pagos a todos los participantes. Otro concepto de solución atractivo es un equilibrio de Nash que maximiza el bienestar social. Mostramos que, si bien calcular exactamente lo último es inviable (demostramos que resolver este problema puede implicar números algebraicos de un grado arbitrariamente alto), existe un FPTAS para encontrar dicho equilibrio siempre y cuando la política de mejor respuesta tenga un tamaño polinómico. Estos dos algoritmos pueden combinarse para producir equilibrios de Nash que satisfacen varios criterios de equidad. Categorías y Descriptores de Asignaturas F.2 [Teoría de la Computación]: Análisis de Algoritmos y Complejidad de Problemas; J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento - Economía Términos Generales Algoritmos, Economía, Teoría 1. INTRODUCCIÓN En una gran comunidad de agentes, es poco probable que el comportamiento de un agente tenga un efecto directo en la mayoría de los otros agentes: más bien, solo serán afectados los agentes que estén lo suficientemente cerca de él. Sin embargo, a medida que estos agentes responden adaptando su comportamiento, más agentes sentirán las consecuencias y eventualmente las decisiones tomadas por un solo agente se propagarán por toda la comunidad. Esta es la intuición detrás de los juegos gráficos, los cuales fueron introducidos por Kearns, Littman y Singh en [13] como un esquema de representación compacto para juegos con muchos jugadores. En un juego gráfico de n jugadores, a cada jugador se le asocia un vértice de un grafo subyacente G, y las ganancias de cada jugador dependen de su acción, así como de las acciones de sus vecinos en el grafo. Si el grado máximo de G es Δ, y cada jugador tiene dos acciones disponibles, entonces el juego se puede representar usando n2Δ+1 números. Por el contrario, necesitamos n^2 números para representar un juego general de n jugadores y 2 acciones, lo cual solo es práctico para valores pequeños de n. Para juegos gráficos con Δ constante, el tamaño del juego es lineal en n. Uno de los problemas más naturales para un juego gráfico es el de encontrar un equilibrio de Nash, cuya existencia se deriva del célebre teorema de Nash (ya que los juegos gráficos son solo un caso especial de juegos de n jugadores). El primer intento de abordar este problema se realizó en [13], donde los autores consideran juegos gráficos con dos acciones por jugador en los que el grafo subyacente es un árbol de grado acotado. Proponen un algoritmo genérico para encontrar equilibrios de Nash que puede ser especializado de dos maneras: un algoritmo de tiempo exponencial para encontrar un equilibrio de Nash (exacto) y un <br>esquema de aproximación</br> de tiempo polinómico completo (FPTAS) para encontrar una aproximación a un equilibrio de Nash. Para cualquier > 0, este algoritmo produce un equilibrio de Nash, que es un perfil estratégico en el que ningún jugador puede mejorar su pago más que al cambiar unilateralmente su estrategia. Si bien los equilibrios de Nash aproximados suelen ser más fáciles de calcular que los equilibrios de Nash exactos, este concepto de solución tiene varias desventajas. Primero, es posible que los jugadores sean sensibles a una pequeña pérdida en las ganancias, por lo que el perfil estratégico que es un equilibrio de Nash no será estable. Esto será así incluso si solo hay un pequeño subconjunto de jugadores que son extremadamente sensibles al precio, y para una gran población de jugadores puede ser difícil elegir un valor que satisfaga a todos. Segundo, los perfiles estratégicos que están cerca de ser equilibrios de Nash pueden ser mucho mejores con respecto a las propiedades consideradas que los equilibrios de Nash exactos. Por lo tanto, la aproximación al valor de la mejor solución que corresponde a un equilibrio de Nash aproximado puede no ser indicativa de lo que se puede lograr bajo un equilibrio de Nash exacto. Esto es especialmente importante si el propósito de la solución aproximada es proporcionar un buen punto de referencia para un sistema de agentes egoístas, ya que el punto de referencia implícito por un equilibrio de Nash puede ser poco realista. Por estas razones, en este artículo nos enfocamos en el problema de calcular equilibrios de Nash exactos. Basándose en las ideas de [14], Elkind et al. [9] mostraron cómo encontrar un equilibrio de Nash (exacto) en tiempo polinómico cuando el grafo subyacente tiene grado 2 (es decir, cuando el grafo es una colección de caminos y ciclos). Por el contrario, encontrar un equilibrio de Nash en un grafo general con grado acotado parece ser computacionalmente intratable: se ha demostrado (ver [5, 12, 7]) que es completo para la clase de complejidad PPAD. [9] extiende este resultado de dificultad al caso en el que el grafo subyacente tiene un ancho de camino acotado. Un juego gráfico puede no tener un equilibrio de Nash único, de hecho, puede tener exponencialmente muchos. Además, algunos equilibrios de Nash son más deseables que otros. En lugar de tener un algoritmo que simplemente encuentre algún equilibrio de Nash, nos gustaría tener algoritmos para encontrar equilibrios de Nash con diversas propiedades socialmente deseables, como maximizar el pago total o distribuir las ganancias de manera justa. Una propiedad útil de la estructura de datos de [13] es que representa simultáneamente el conjunto de todos los equilibrios de Nash del juego subyacente. Si esta representación tiene tamaño polinómico (como es el caso de los caminos, como se muestra en [9]), se puede esperar extraer de ella un equilibrio de Nash con las propiedades deseadas. De hecho, en [13] los autores mencionan que esto es posible si uno está interesado en encontrar un equilibrio de Nash (aproximado). El objetivo de este artículo es extender esto a equilibrios de Nash exactos. 1.1 Nuestros Resultados En este artículo, estudiamos juegos gráficos de n jugadores y 2 acciones en árboles de grado acotado para los cuales la estructura de datos de [13] tiene tamaño polinómico en n. Nos enfocamos en el problema de encontrar equilibrios de Nash exactos con ciertas propiedades socialmente deseables. En particular, mostramos cómo encontrar un equilibrio de Nash que maximiza (casi) el bienestar social, es decir, la suma de las ganancias de los jugadores, y mostramos cómo encontrar un equilibrio de Nash que satisface (casi) los límites de ganancias prescritos para todos los jugadores. Los juegos gráficos en árboles de grado acotado tienen una estructura algebraica simple. Una característica atractiva, que se desprende de [13], es que cada juego de este tipo tiene un equilibrio de Nash en el cual la estrategia de cada jugador es un número racional. La sección 3 estudia la estructura algebraica de aquellos equilibrios de Nash que maximizan el bienestar social. Demostramos (Teoremas 1 y 2) que, sorprendentemente, el conjunto de equilibrios de Nash que maximizan el bienestar social es más complejo. De hecho, para cualquier número algebraico α ∈ [0, 1] con grado a lo sumo n, exhibimos un juego gráfico en un camino de longitud O(n) tal que, en el equilibrio de Nash único que maximiza el bienestar social de este juego, uno de los jugadores juega la estrategia mixta α. Este resultado muestra que puede ser difícil representar un equilibrio de Nash óptimo. Parece ser una característica novedosa del escenario que consideramos aquí, que un equilibrio de Nash óptimo es difícil de representar, en una situación donde es fácil encontrar y representar un equilibrio de Nash. Dado que el equilibrio de Nash que maximiza el bienestar social puede ser difícil de representar eficientemente, debemos conformarnos con una aproximación. Sin embargo, la diferencia crucial entre nuestro enfoque y el de los trabajos anteriores [13, 16, 19] es que requerimos que nuestro algoritmo produzca un equilibrio de Nash exacto, aunque no necesariamente el óptimo con respecto a nuestros criterios. En la Sección 4, describimos un algoritmo que cumple con este requisito. Específicamente, proponemos un algoritmo que, para cualquier > 0, encuentra un equilibrio de Nash cuya recompensa total está dentro de de lo óptimo. Se ejecuta en tiempo polinómico (Teorema 3,4) para cualquier juego gráfico en un árbol de grado acotado para el cual la estructura de datos propuesta por [13] (la llamada política de mejor respuesta, definida a continuación) tiene un tamaño poli(n) (nota que, como se muestra en [9], esto siempre es el caso cuando el grafo subyacente es un camino). Un resultado relacionado en un contexto diferente fue obtenido por Datta [8], quien muestra que los juegos de n jugadores con 2 acciones son universales en el sentido de que cualquier variedad algebraica real puede ser representada como el conjunto de equilibrios de Nash totalmente mixtos de tales juegos. Precisamente, el tiempo de ejecución de nuestro algoritmo es polinómico en n, Pmax y 1/, donde Pmax es el valor absoluto máximo de una entrada de una matriz de pagos, es decir, es un algoritmo seudopolinómico, aunque es completamente polinómico con respecto a . Mostramos (Sección 4.1) que bajo ciertas restricciones en las matrices de pagos, el algoritmo puede ser transformado en un algoritmo de tiempo polinómico (verdaderamente) que produce un equilibrio de Nash cuya ganancia total está dentro de un factor de 1 − del óptimo. En la Sección 5, consideramos el problema de encontrar un equilibrio de Nash en el que la ganancia esperada de cada jugador Vi supere un umbral prescrito Ti. Usando la idea de la Sección 4, presentamos (Teorema 5) un <br>esquema de aproximación</br> en tiempo polinómico completo para este problema. El tiempo de ejecución del algoritmo está acotado por un polinomio en n, Pmax y . Si la instancia tiene un equilibrio de Nash que cumple con los umbrales prescritos, entonces el algoritmo construye un equilibrio de Nash en el que la recompensa esperada de cada jugador Vi es al menos Ti − . En la Sección 6, presentamos otros criterios naturales para seleccionar un buen equilibrio de Nash y mostramos que los algoritmos descritos en las dos secciones anteriores pueden ser utilizados como bloques de construcción para encontrar equilibrios de Nash que cumplan con estos criterios. En particular, en la Sección 6.1 mostramos cómo encontrar un equilibrio de Nash que aproxima el máximo bienestar social, garantizando que la ganancia de cada individuo esté cerca de un umbral prescrito. En la Sección 6.2 mostramos cómo encontrar un equilibrio de Nash que maximiza (casi) al máximo el pago individual mínimo. Finalmente, en la Sección 6.3 mostramos cómo encontrar un equilibrio de Nash en el que las ganancias individuales de los jugadores están cerca unas de otras. 1.2 Trabajo Relacionado Nuestro <br>esquema de aproximación</br> (Teorema 3 y Teorema 4) muestra un contraste entre los juegos que estudiamos y los juegos de n acciones de dos jugadores, para los cuales los problemas correspondientes suelen ser intratables. Para juegos de n acciones de dos jugadores, el problema de encontrar equilibrios de Nash con propiedades especiales suele ser NP-duro. En particular, este es el caso de los equilibrios de Nash que maximizan el bienestar social [11, 6]. Además, es probable que sea intratable incluso aproximarse a tales equilibrios. En particular, Chen, Deng y Teng [4] muestran que existe algún , polinomio inverso en n, para el cual calcular un equilibrio de Nash en juegos de 2 jugadores con n acciones por jugador es PPAD-completo. Lipton y Markakis [15] estudian las propiedades algebraicas de los equilibrios de Nash, y señalan que los algoritmos estándar de eliminación de cuantificadores pueden ser utilizados para resolverlos. Ten en cuenta que estos algoritmos no son de tiempo polinómico en general. Los juegos que estudiamos en este artículo tienen equilibrios de Nash computables en tiempo polinómico en los que todas las estrategias mixtas son números racionales, pero un equilibrio de Nash óptimo puede incluir necesariamente estrategias mixtas con un alto grado algebraico. Un equilibrio correlacionado (CE) (introducido por Aumann [2]) es una distribución sobre vectores de acciones de jugadores con la propiedad de que si a cualquier jugador se le dice su propia acción (el valor de su propio componente) de un vector generado por esa distribución, entonces no puede aumentar su ganancia esperada cambiando su acción. Cualquier equilibrio de Nash es una EC, pero la afirmación contraria no se cumple en general. A diferencia de los equilibrios de Nash, los equilibrios correlacionados se pueden encontrar para juegos gráficos de bajo grado (así como para otras clases de juegos multijugador representados de manera concisa) en tiempo polinómico [17]. Pero, para juegos gráficos es NP-duro encontrar un equilibrio correlacionado que maximice la recompensa total [18]. Sin embargo, los resultados de NP-dificultad se aplican a juegos más generales que el que consideramos aquí, en particular los grafos no son árboles. Del [2] también se sabe que existen juegos de 2 jugadores y 2 acciones para los cuales el pago total esperado 163 del mejor equilibrio correlacionado es mayor que el mejor equilibrio de Nash, y discutimos este tema más a fondo en la Sección 7.2. CONSIDERACIONES PRELIMINARES Y NOTACIÓN Consideramos juegos gráficos en los que el grafo subyacente G es un árbol de n vértices, en el que cada vértice tiene a lo sumo Δ hijos. Cada vértice tiene dos acciones, que están representadas por 0 y 1. Una estrategia mixta de un jugador V se representa como un único número v ∈ [0, 1], que denota la probabilidad de que V seleccione la acción 1. Para los propósitos del algoritmo, el árbol está enraizado de manera arbitraria. Para mayor comodidad, asumimos sin pérdida de generalidad que la raíz tiene un solo hijo y que su recompensa es independiente de la acción elegida por el hijo. Esto se puede lograr primero eligiendo una raíz arbitraria del árbol, y luego agregando un padre ficticio de esta raíz, asignándole una función de recompensa constante, por ejemplo, 0. Dado un borde (V, W) del árbol G, y una estrategia mixta w para W, sea G(V,W), W=w la instancia obtenida de G mediante (1) eliminar todos los nodos Z que están separados de V por W (es decir, todos los nodos Z tales que el camino de Z a V pasa por W), y (2) restringir la instancia de modo que se requiera que W juegue la estrategia mixta w. Definición 1. Supongamos que (V, W) es una arista del árbol, que v es una estrategia mixta para V y que w es una estrategia mixta para W. Decimos que v es una mejor respuesta potencial a w (denotado por v ∈ pbrV (w)) si hay un equilibrio en la instancia G(V,W), W = w en el que V tiene una estrategia mixta v. Definimos la política de mejor respuesta para V, dada W, como B(W, V) = {(w, v) | v ∈ pbrV (w), w ∈ [0, 1]}. El paso ascendente del algoritmo genérico de [13] considera cada nodo V (que no sea la raíz) y calcula la política de mejor respuesta para V dada su padre. Con las suposiciones anteriores sobre la raíz, el paso aguas abajo es sencillo. La raíz selecciona una estrategia mixta w para la raíz W y una estrategia mixta v ∈ B(W, V) para cada hijo V de W. Indica a cada niño V que juegue v. El resto del pase descendente es recursivo. Cuando un nodo V recibe instrucciones de su padre para adoptar la estrategia mixta v, realiza lo siguiente para cada hijo U: encuentra un par (v, u) ∈ B(V, U) (con el mismo valor de v que le fue dado por su padre) e instruye a U a jugar u. La mejor política de respuesta para un vértice U dado su padre V puede representarse como una unión de rectángulos, donde un rectángulo está definido por un par de intervalos cerrados (IV, IU) y consiste en todos los puntos en IV × IU; puede ser el caso de que uno o ambos de los intervalos IV e IU consistan en un solo punto. Para realizar cálculos en B(V, U) y para limitar el número de rectángulos, [9] utilizó el concepto de un punto de evento, el cual se define de la siguiente manera. Para cualquier conjunto A ⊆ [0, 1]2 que se represente como una unión de un número finito de rectángulos, decimos que un punto u ∈ [0, 1] en el eje U es un punto de evento U de A si u = 0 o u = 1 o la representación de A contiene un rectángulo de la forma IV × IU y u es un extremo de IU; los puntos de evento V se definen de manera similar. Para muchos juegos considerados en este documento, el grafo subyacente es un camino de n vértices, es decir, un grafo G = (V, E) con V = {V1, . . . , Vn} y E = {(V1, V2), . . . , (Vn−1, Vn)}. En [9], se demostró que para tales juegos, la política de mejor respuesta tiene solo un número polinomial de rectángulos. La prueba de que el número de rectángulos en B(Vj+1, Vj) es polinomial procede primero mostrando que el número de puntos de evento en B(Vj+1, Vj) no puede exceder el número de puntos de evento en B(Vj, Vj-1) en más de 2, y utilizando este hecho para acotar el número de rectángulos en B(Vj+1, Vj). Sean P0 (V) y P1 (V) las ganancias esperadas para V cuando juega 0 y 1, respectivamente. Tanto P0 (V) como P1 (V) son funciones multilineales de las estrategias de los vecinos de V. En lo que sigue, usaremos frecuentemente la siguiente observación simple. AFIRMACIÓN 1. Para un vértice V con un único hijo U y padre W, dados cualquier A, B, C, D ∈ Q, se pueden seleccionar las recompensas para V de manera que P0(V) = Auw + Bu + Cw + D, P1(V) = Auw + Bu + Cw + D. Además, si todos los valores de A, B, C, D son enteros, los pagos para V también son enteros. PRUEBA. Daremos la prueba para P0 (V); la prueba para P1 (V) es similar. Para i, j = 0, 1, sea Pij la ganancia para V cuando U juega i, V juega 0 y W juega j. Tenemos P0 (V) = P00(1 − u)(1 − w) + P10u(1 − w) + P01(1 − u)w + P11uw. Tenemos que seleccionar los valores de Pij de manera que P00 − P10 − P01 + P11 = A, −P00 + P10 = B, −P00 + P01 = C, P00 = D. Es fácil ver que la solución única está dada por P00 = D, P01 = C + D, P10 = B + D, P11 = A + B + C + D. La entrada a todos los algoritmos considerados en este documento incluye las matrices de pago para cada jugador. Suponemos que todos los elementos de estas matrices son enteros. Sea Pmax el mayor valor absoluto de cualquier elemento de cualquier matriz de pagos. Entonces, la entrada consiste en un máximo de n2Δ+1 números, cada uno de los cuales puede ser representado usando log Pmax bits. EQUILIBRIOS DE NASH QUE MAXIMIZAN EL BIENESTAR SOCIAL: SOLUCIONES EN R \\ Q Desde el punto de vista del bienestar social, el mejor equilibrio de Nash es aquel que maximiza la suma de las ganancias esperadas de los jugadores. Lamentablemente, resulta que calcular exactamente dicho perfil estratégico no es posible: en esta sección, mostramos que incluso si todas las ganancias de los jugadores son números enteros, el perfil estratégico que maximiza la ganancia total puede tener coordenadas irracionales; además, puede involucrar números algebraicos de un grado arbitrario. 3.1 Calentamiento: irracionales cuadráticos Comenzamos proporcionando un ejemplo de un juego gráfico en un camino de longitud 3 con ganancias enteras tal que en el equilibrio de Nash que maximiza la ganancia total, uno de los jugadores tiene una estrategia en R \\ Q. En la siguiente subsección, extenderemos este ejemplo a números algebraicos de grado arbitrario n; para hacerlo, debemos considerar caminos de longitud O(n). TEOREMA 1. Existe un juego gráfico G de pago entero en un camino de 3 vértices UVW tal que, en cualquier equilibrio de Nash de G que maximice el bienestar social, la estrategia u del jugador U y el pago total p cumplen u, p ∈ R \\ Q. PRUEBA. Las recompensas para los jugadores en G están especificadas de la siguiente manera. La ganancia para U es idénticamente 0, es decir, P0 (U) = P1 (U) = 0. Usando la Reclamación 1, seleccionamos las ganancias para V de modo que P0 (V) = -uw + 3w y P1 (V) = P0 (V) + w(u + 2) - (u + 1), donde u y w son las estrategias (mixtas) de U y W, respectivamente. Se deduce que V es indiferente entre jugar 0 y 1 si y solo si w = f(u) = u+1 u+2. Observa que para cualquier u ∈ [0, 1] tenemos f(u) ∈ [0, 1]. La recompensa para W es 0 si selecciona la misma acción que V y 1 en caso contrario. AFIRMACIÓN 2. Todos los equilibrios de Nash del juego G son de la forma (u, 1/2, f(u)). Es decir, en cualquier equilibrio de Nash, V juega v = 1/2 y W juega w = f(u). Además, para cualquier valor de u, el vector de estrategias (u, 1/2, f(u)) constituye un equilibrio de Nash. PRUEBA. Es fácil comprobar que para cualquier u ∈ [0, 1], el vector (u, 1/2, f(u)) es un equilibrio de Nash. De hecho, U está dispuesto a jugar 164 cualquier estrategia mixta u, sin importar lo que hagan V y W. Además, V es indiferente entre 0 y 1 siempre y cuando w = f(u), por lo que puede jugar 1/2. Finalmente, si V juega con probabilidad igual a 0 y 1, W es indiferente entre 0 y 1, por lo que puede jugar f(u). Por el contrario, supongamos que v > 1/2. Entonces W prefiere estrictamente jugar 0, es decir, w = 0. Entonces para V tenemos P1 (V) = P0 (V) - (u + 1), es decir, P1 (V) < P0 (V), lo que implica v = 0, una contradicción. De manera similar, si v < 1/2, el jugador W prefiere jugar 1, por lo que tenemos w = 1. Por lo tanto, P1 (V) = P0 (V) + (u + 2) - (u + 1), es decir, P1 (V) > P0 (V), lo que implica v = 1, una contradicción. Finalmente, si v = 1/2, pero w = f(u), el jugador V no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Esto completa la prueba de la Afirmación 2. Según la Afirmación 2, la ganancia total en cualquier equilibrio de Nash de este juego es una función de u. Más específicamente, la ganancia para U es 0, la ganancia para V es −uf(u) + 3f(u), y la ganancia para W es 1/2. Por lo tanto, el equilibrio de Nash con la máxima ganancia total corresponde al valor de u que maximiza g(u) = −u (u + 1) u + 2 + 3 u + 1 u + 2 = − (u − 3)(u + 1) u + 2. Para encontrar los extremos de g(u), calculamos h(u) = − d du g(u). Tenemos h(u) = (2u − 2)(u + 2) − (u − 3)(u + 1) (u + 2)2 = u2 + 4u − 1 (u + 2)2. Por lo tanto, h(u) = 0 si y solo si u ∈ {−2 + √ 5, −2 − √ 5}. Ten en cuenta que −2 + √ 5 ∈ [0, 1]. La función g(u) cambia de signo en −2, −1 y 3. Tenemos g(u) < 0 para g > 3, g(u) > 0 para u < −2, por lo que el extremo de g(u) que se encuentra entre 1 y 3, es decir, u = −2 + √ 5, es un máximo local. Concluimos que el equilibrio de Nash que maximiza el bienestar social para este juego está dado por el vector de estrategias (−2+√ 5, 1/2, (5 − √ 5)/5). El pago total respectivo es 0 − ( √ 5 − 5)( √ 5 − 1) √ 5 + 1 2 = 13/2 − 2 √ 5. Esto concluye la prueba del Teorema 1. 3.2 Estrategias de grado arbitrario. Hemos demostrado que en el equilibrio de Nash que maximiza el bienestar social, las estrategias de algunos jugadores pueden ser irracionales cuadráticas, al igual que la recompensa total. En esta subsección, extenderemos este resultado para mostrar que podemos construir un juego gráfico de pago entero en un camino cuyo equilibrio de Nash maximizador del bienestar social involucra números algebraicos arbitrarios en [0, 1]. TEOREMA 2. Para cualquier número algebraico α de grado n ∈ [0, 1], existe un juego gráfico de pago entero en un camino de longitud O(n) tal que, en todas las equilibrios de Nash que maximizan el bienestar social de este juego, uno de los jugadores juega α. PRUEBA. Nuestra prueba consta de dos pasos. Primero, construimos una expresión racional R(x) y un segmento [x , x ] tal que x , x ∈ Q y α sea el único máximo de R(x) en [x , x ]. Segundo, construimos un juego gráfico cuyos equilibrios de Nash pueden ser parametrizados por u ∈ [x, x], de modo que en el equilibrio que corresponde a u, la recompensa total es R(u) y, además, la estrategia de algunos jugadores es u. Se deduce que para alcanzar el equilibrio de Nash que maximiza la ganancia, este jugador tiene que jugar α. Los detalles siguen. LEMMA 1. \n\nLEMMA 1. Dado un número algebraico α ∈ [0, 1], deg(α) = n, existen K2, . . . , K2n+2 ∈ Q y x , x ∈ (0, 1) ∩ Q tal que α es el único máximo de R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 en [x , x ]. PRUEBA. Sea P(x) el polinomio minimal de α, es decir, un polinomio de grado n con coeficientes racionales cuyo coeficiente principal es 1 tal que P(α) = 0. Sea A = {α1, . . . , αn} el conjunto de todas las raíces de P(x). Considera el polinomio Q1(x) = −P2(x). Tiene las mismas raíces que P(x), y además, para cualquier x ∈ A tenemos Q1(x) < 0. Por lo tanto, A es el conjunto de todos los máximos de Q1(x). Ahora, establece R(x) = Q1(x) (x+2)...(x+2n+1)(x+2n+2). Observa que R(x) ≤ 0 para todo x ∈ [0, 1] y R(x) = 0 si y solo si Q1(x) = 0. Por lo tanto, el conjunto A también es el conjunto de todos los máximos de R(x) en [0, 1]. Sea d = min{|αi − α| | αi ∈ A, αi = α}, y establezca α = max{α − d/2, 0}, α = min{α + d/2, 1}. Claramente, α es el único cero (y por lo tanto, el único máximo) de R(x) en [α , α ]. Sean x y x algunos números racionales en (α, α) y (α, α), respectivamente; observe que al excluir los extremos de los intervalos aseguramos que x, x = 0, 1. Como [x, x] ⊂ [α, α], tenemos que α es el único máximo de R(x) en [x, x]. Dado que R(x) es una expresión racional adecuada y todas las raíces de su denominador son simples, por el teorema de descomposición en fracciones parciales, R(x) puede representarse como R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2, donde K2, . . . , K2n+2 son números racionales. Considera un juego gráfico en el camino U−1V−1U0V0U1V1 . . . Uk−1Vk−1Uk, donde k = 2n + 2. Intuitivamente, queremos que cada triple (Ui−1, Vi−1, Ui) se comporte de manera similar a los jugadores U, V y W del juego descrito en la subsección anterior. Más precisamente, definimos las ganancias de los jugadores de la siguiente manera. • La ganancia para U−1 es 0 sin importar lo que hagan los demás. • La ganancia esperada para V−1 es 0 si juega 0 y u0 − (x − x )u−1 −x si juega 1, donde u0 y u−1 son las estrategias de U0 y U−1, respectivamente. • La ganancia esperada para V0 es 0 si juega 0 y u1(u0 + 1)− u0 si juega 1, donde u0 y u1 son las estrategias de U0 y U1, respectivamente. • Para cada i = 1, . . . , k − 1, la ganancia esperada para Vi cuando juega 0 es P0 (Vi) = Aiuiui+1 − Aiui+1, y la ganancia esperada para Vi cuando juega 1 es P1 (Vi) = P0 (Vi) + ui+1(2 − ui) − 1, donde Ai = −Ki+1 y ui+1 y ui son las estrategias de Ui+1 y Ui, respectivamente. • Para cada i = 0, . . . , k, la ganancia para Ui no depende de Vi y es 1 si Ui y Vi−1 seleccionan acciones diferentes y 0 en caso contrario. Ahora caracterizaremos los equilibrios de Nash de este juego utilizando una secuencia de afirmaciones. AFIRMACIÓN 3. En todos los equilibrios de Nash de este juego, V−1 juega 1/2, y las estrategias de u−1 y u0 satisfacen u0 = (x − x )u−1 + x. Por consiguiente, en todos los equilibrios de Nash tenemos u0 ∈ [x , x ]. 165 PRUEBA. La prueba es similar a la del Reclamo 2. Que f(u−1) = (x − x )u−1 + x. Claramente, el jugador V−1 es indiferente entre jugar 0 y 1 si y solo si u0 = f(u−1). Supongamos que v−1 < 1/2. Entonces U0 prefiere estrictamente jugar 1, es decir, u0 = 1, por lo que tenemos P1 (V−1) = P0 (V−1) + 1 − (x − x )u−1 − x . Dado que 1 − x ≤ 1 − (x − x )u−1 − x ≤ 1 − x para u−1 ∈ [0, 1] y x < 1, tenemos que P1 (V−1) > P0 (V−1), por lo que V−1 prefiere jugar 1, lo cual es una contradicción. De manera similar, si v−1 > 1/2, el jugador U0 prefiere estrictamente jugar 0, es decir, u0 = 0, por lo que tenemos P1 (V−1) = P0 (V−1) − (x − x )u−1 − x. Dado que x < x, x > 0, tenemos P1 (V−1) < P0 (V−1), por lo que V−1 prefiere jugar 0, lo cual es una contradicción. Finalmente, si V−1 juega 1/2, pero u0 = f(u−1), el jugador V−1 no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Además, ten en cuenta que f(0) = x, f(1) = x y, además, f(u−1) ∈ [x, x] si y solo si u−1 ∈ [0, 1]. Por lo tanto, en todos los equilibrios de Nash de este juego tenemos u0 ∈ [x , x ]. AFIRMACIÓN 4. En todos los equilibrios de Nash de este juego para cada i = 0, . . . , k − 1, tenemos vi = 1/2, y las estrategias de los jugadores Ui y Ui+1 satisfacen ui+1 = fi(ui), donde f0(u) = u/(u + 1) y fi(u) = 1/(2 − u) para i > 0. PRUEBA. La prueba de esta afirmación es también similar a la de la Afirmación 2. Utilizamos inducción en i para demostrar que la afirmación de la proposición es verdadera y, además, ui = 1 para i > 0. Para el caso base i = 0, observe que u0 = 0 según la afirmación anterior (recuerde que x, x se seleccionan de manera que x, x = 0, 1) y considere el trío (U0, V0, U1). Que v0 sea la estrategia de V0. Primero, supongamos que v0 > 1/2. Entonces U1 prefiere estrictamente jugar 0, es decir, u1 = 0. Entonces, para V0 tenemos P1 (V0) = P0 (V0) − u0. Dado que u0 = 0, tenemos que P1 (V0) < P0 (V0), lo cual implica v1 = 0, una contradicción. De manera similar, si v0 < 1/2, el jugador U1 prefiere jugar 1, por lo que tenemos u1 = 1. Por lo tanto, P1 (V0) = P0 (V0) + 1. Se sigue que P1 (V0) > P0 (V0), lo cual implica v0 = 1, una contradicción. Finalmente, si v0 = 1/2, pero u1 = u0/(u0 + 1), el jugador V0 no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Además, dado que u1 = u0/(u0 + 1) y u0 ∈ [0, 1], tenemos que u1 = 1. El argumento para el paso inductivo es similar. Es decir, supongamos que la afirmación se demuestra para todos los i < i y consideremos el trío (Ui, Vi, Ui+1). Que vi sea la estrategia de Vi. Primero, supongamos que vi > 1/2. Entonces Ui+1 prefiere estrictamente jugar 0, es decir, ui+1 = 0. Entonces, para Vi tenemos P1 (Vi) = P0 (Vi)−1, es decir, P1 (Vi) < P0 (Vi), lo cual implica vi = 0, una contradicción. De manera similar, si vi < 1/2, el jugador Ui+1 prefiere jugar 1, por lo que tenemos ui+1 = 1. Por lo tanto, P1 (Vi) = P0 (Vi) + 1 − ui. Por hipótesis inductiva, tenemos ui < 1. Por consiguiente, P1 (Vi) > P0 (Vi), lo que implica vi = 1, una contradicción. Finalmente, si vi = 1/2, pero ui+1 = 1/(2 − ui), el jugador Vi no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Además, como ui+1 = 1/(2 − ui) y ui < 1, tenemos ui+1 < 1. AFIRMACIÓN 5. Cualquier perfil estratégico de la forma (u−1, 1/2, u0, 1/2, u1, 1/2, . . . , uk−1, 1/2, uk), donde u−1 ∈ [0, 1], u0 = (x − x )u−1 + x , u1 = u0/(u0 + 1), y ui+1 = 1/(2 − ui) para i ≥ 1, constituye un equilibrio de Nash. PRUEBA. Primero, las ganancias del jugador U−1 no dependen de las acciones de otros jugadores, por lo que es libre de jugar cualquier estrategia en [0, 1]. Si u0 = (x −x )u−1 +x , el jugador V−1 es indiferente entre 0 y 1, por lo que está contento de jugar 1/2; un argumento similar se aplica a los jugadores V0, . . . , Vk−1. Finalmente, para cada i = 0, . . . , k, las ganancias del jugador Ui solo dependen de la estrategia del jugador Vi−1. En particular, siempre y cuando vi−1 = 1/2, el jugador Ui es indiferente entre jugar 0 y 1, por lo que puede jugar cualquier estrategia mixta ui ∈ [0, 1]. Para completar la prueba, observe que (x − x )u−1 + x ∈ [0, 1] para todo u−1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] para todo u0 ∈ [0, 1], y 1/(2 − ui) ∈ [0, 1] para todo ui ∈ [0, 1], por lo que tenemos ui ∈ [0, 1] para todo i = 0, . . . , k. Ahora, calculemos la ganancia total bajo un perfil estratégico de la forma dada en la Afirmación 5. El pago para U−1 es 0, y el pago esperado para cada uno de los Ui, i = 0, . . . , k, es 1/2. Los beneficios esperados para V−1 y V0 son 0. Finalmente, para cualquier i = 1, . . . , k − 1, la ganancia esperada para Vi es Ti = Aiuiui+1 − Aiui+1. Se deduce que para encontrar un equilibrio de Nash con el mayor pago total, debemos maximizar Pk−1 i=1 Ti sujeto a las condiciones u−1 ∈ [0, 1], u0 = (x −x )u−1+x , u1 = u0/(u0+1), y ui+1 = 1/(2−ui) para i = 1, . . . , k − 1. Nos gustaría expresar Pk−1 i=1 Ti como una función de u0. Para simplificar la notación, establezca u = u0. LEMMA 2. \n\nLEMMA 2. Para i = 1, . . . , k, tenemos ui = u+i−1 u+i. PRUEBA. La demostración es por inducción en i. Para i = 1, tenemos u1 = u/(u + 1). Ahora, para i ≥ 2 supongamos que ui−1 = (u + i − 2)/(u + i − 1). Tenemos ui = 1/(2 − ui−1) = (u + i − 1)/(2u + 2i − 2 − u − i + 2) = (u + i − 1)/(u + i). Se sigue que para i = 1, . . . , k − 1 tenemos Ti = Ai u + i − 1 u + i u + i u + i + 1 − Ai u + i u + i + 1 = −Ai 1 u + i + 1 = Ki+1 u + i + 1. Observa que a medida que u−1 varía de 0 a 1, u varía de x a x. Por lo tanto, para maximizar el pago total, debemos elegir u ∈ [x , x ] de manera que maximicemos K2 u + 2 + · · · + Kk u + k = R(u). Por construcción, el único máximo de R(u) en [x, x] es α. Se deduce que en el equilibrio de Nash que maximiza las ganancias de nuestro juego, U0 juega α. Finalmente, cabe destacar que las recompensas en nuestro juego son racionales en lugar de enteras. Sin embargo, es fácil ver que podemos multiplicar todas las ganancias de un jugador por su máximo común denominador sin afectar su estrategia. En el juego resultante, todas las ganancias son enteras. Esto concluye la demostración del Teorema 2.4. APROXIMANDO EL EQUILIBRIO DE NASH ÓPTIMO SOCIAL Hemos visto que el equilibrio de Nash que maximiza el bienestar social puede implicar estrategias que no están en Q. Por lo tanto, en esta sección nos enfocamos en encontrar un equilibrio de Nash que sea casi óptimo desde la perspectiva del bienestar social. Proponemos un algoritmo que, para cualquier > 0, encuentra un equilibrio de Nash cuya recompensa total está dentro de de la óptima. El tiempo de ejecución de este algoritmo es polinómico en 1/ , n y |Pmax| (recuerde que Pmax es el valor absoluto máximo de una entrada de una matriz de pagos). Si bien el resultado negativo de la sección anterior es para juegos gráficos en caminos, nuestro algoritmo se aplica a una gama más amplia de escenarios. Específicamente, se ejecuta en tiempo polinómico en árboles de grado acotado siempre que la política de mejor respuesta de cada vértice, dada su padre, pueda representarse como una unión de un número polinómico de rectángulos. Ten en cuenta que los grafos de camino siempre cumplen esta condición: en [9] mostramos cómo calcular dicha representación, dado un grafo con grado máximo 2. Por consiguiente, para grafos de camino el tiempo de ejecución de nuestro algoritmo está garantizado de ser polinomial. (Nótese que [9] exhibe una familia de juegos gráficos en árboles de grado acotado para los cuales las políticas de mejor respuesta de algunos de los vértices, dados sus padres, tienen tamaño exponencial, cuando se representan como uniones de rectángulos). Debido a restricciones de espacio, en esta versión del artículo presentamos el algoritmo para el caso en el que el grafo subyacente del juego gráfico es un camino. Luego presentamos nuestro resultado para el caso general; la demostración se puede encontrar en la versión completa de este artículo [10]. Supongamos que s es un perfil estratégico para un juego gráfico G. Es decir, s asigna una estrategia mixta a cada vértice de G. Sea EPV (s) el pago esperado del jugador V bajo s y sea EP(s) = Σ V EPV (s). Sea M(G) = max{EP(s) | s es un equilibrio de Nash para G}. TEOREMA 3. Supongamos que G es un juego gráfico en un camino de n vértices. Entonces, para cualquier > 0 existe un algoritmo que construye un equilibrio de Nash s para G que satisface EP(s) ≥ M(G)− . El tiempo de ejecución del algoritmo es O(n4 P3 max/ 3) PRUEBA. Sea {V1, . . . , Vn} el conjunto de todos los jugadores. Comenzamos construyendo las mejores políticas de respuesta para todos los Vi, i = 1, . . . , n − 1. Como se muestra en [9], esto se puede hacer en tiempo O(n3). Sea N > 5n un parámetro que se seleccionará más adelante, establezca δ = 1/N y defina X = {jδ | j = 0, . . . , N}. Decimos que vj es un punto de evento para un jugador Vi si es un punto de evento de Vi para B(Vi, Vi−1) o B(Vi+1, Vi). Para cada jugador Vi, considera un conjunto finito de estrategias Xi dado por Xi = X ∪ {vj | vj es un punto de evento para Vi}. Se ha demostrado en [9] que para cualquier i = 2, . . . , n, la política de mejor respuesta B(Vi, Vi−1) tiene como máximo 2n + 4 puntos de eventos de Vi. Dado que requerimos N > 5n, tenemos |Xi| ≤ 2N; asumimos sin pérdida de generalidad que |Xi| = 2N. Ordena los elementos de Xi en orden creciente como x1 i = 0 < x2 i < · · · < x2N i. Nos referiremos a las estrategias en Xi como estrategias discretas del jugador Vi; un perfil de estrategia en el que cada jugador tiene una estrategia discreta se referirá como un perfil de estrategia discreta. Ahora demostraremos que incluso si restringimos a cada jugador Vi a estrategias de Xi, los jugadores aún pueden lograr un equilibrio de Nash, y además, el mejor equilibrio de Nash (con respecto al bienestar social) tiene un pago total de al menos M(G) - siempre y cuando N sea lo suficientemente grande. Sea s un perfil de estrategia que maximiza el bienestar social. Es decir, sea s = (s1, . . . , sn) donde si es la estrategia mixta del jugador Vi y EP(s) = M(G). Para i = 1, . . . , n, sea ti = max{xj i | xj i ≤ si}. Primero, demostraremos que el perfil estratégico t = (t1, . . . , tn) es un equilibrio de Nash para G. Fijemos cualquier i, 1 < i ≤ n, y sea R = [v1, v2]×[u1, u2] el rectángulo en B(Vi, Vi−1) que contiene (si, si−1). Dado que v1 es un punto de evento Vi de B(Vi, Vi−1), tenemos v1 ≤ ti, por lo que el punto (ti, si−1) está dentro de R. De manera similar, el punto u1 es un punto de evento Vi−1 de B(Vi, Vi−1), por lo que tenemos u1 ≤ ti−1, y por lo tanto el punto (ti, ti−1) está dentro de R. Esto significa que para cualquier i, 1 < i ≤ n, tenemos ti−1 ∈ pbrVi−1 (ti), lo que implica que t = (t1, . . . , tn) es un equilibrio de Nash para G. Ahora, estimemos la pérdida esperada en el bienestar social causada por jugar t en lugar de s. LEMA 3. Para cualquier par de perfiles de estrategia t, s tales que |ti − si| ≤ δ, tenemos |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ para cualquier i = 1, . . . , n. PRUEBA. Sea Pi klm el pago del jugador Vi, cuando juega k, Vi−1 juega l y Vi+1 juega m. Fijemos i = 1, . . . , n y para k, l, m ∈ {0, 1}, definamos tklm = tk i−1(1 − ti−1)1−k tl i(1 − ti)1−l tm i+1(1 − ti+1)1−m sklm = sk i−1(1 − si−1)1−k sl i(1 − si)1−l sm i+1(1 − si+1)1−m. Mostraremos ahora que para cualquier k, l, m ∈ {0, 1} tenemos |tklm − sklm | ≤ 3δ; claramente, esto implica el lema. De hecho, fijar k, l, m ∈ {0, 1}. Establecer x = tk i−1(1 − ti−1)1−k , x = sk i−1(1 − si−1)1−k , y = tl i(1 − ti)1−l , y = sl i(1 − si)1−l , z = tm i+1(1 − ti+1)1−m , z = sm i+1(1 − si+1)1−m. Observa que si k = 0 entonces x − x = (1 − ti−1) − (1 − si−1), y si k = 1 entonces x − x = ti−1 − si−1, por lo tanto |x − x | ≤ δ. Un argumento similar muestra |y − y | ≤ δ, |z − z | ≤ δ. Además, tenemos x, x, y, y, z, z ∈ [0, 1]. Por lo tanto, |tklm − sklm | = |xyz − x y z | = |xyz − x yz + x yz − x y z + x y z − x y z | ≤ |x − x |yz + |y − y |x z + |z − z |x y ≤ 3δ. El Lema 3 implica que Pn i=1 |EPVi (s) − EPVi (t)| ≤ 24nPmaxδ, por lo que al elegir δ < /(24nPmax), o, equivalentemente, estableciendo N > 24nPmax/ , podemos asegurar que el pago esperado total para el perfil estratégico t esté dentro de de lo óptimo. Ahora demostraremos que podemos encontrar el mejor equilibrio de Nash discreto (con respecto al bienestar social) utilizando programación dinámica. Dado que t es un perfil de estrategia discreto, esto significa que el perfil de estrategia encontrado por nuestro algoritmo será al menos tan bueno como t. Defina ml,k i como la máxima ganancia total que V1, . . . , Vi−1 pueden lograr si cada Vj, j ≤ i, elige una estrategia de Xj, para cada j < i la estrategia de Vj es una mejor respuesta potencial a la estrategia de Vj+1, y, además, Vi−1 juega xl i−1, Vi juega xk i. Si no hay forma de elegir las estrategias para V1, . . . , Vi−1 que cumplan con estas condiciones, establecemos ml,k i = −∞. Los valores ml,k i , i = 1, . . . , n; k, l = 1, . . . , N, pueden ser calculados de forma inductiva, de la siguiente manera. Tenemos ml,k 1 = 0 para k, l = 1, . . . , N. Ahora, supongamos que ya hemos calculado ml,k j para todos los j < i; k, l = 1, . . . , N. Para calcular mk,l i , primero verificamos si (xk i , xl i−1) ∈ B(Vi, Vi−1). Si este no es el caso, tenemos ml,k i = −∞. De lo contrario, considera el conjunto Y = Xi−2 ∩ pbrVi−2 (xl i−1), es decir, el conjunto de todas las estrategias discretas de Vi−2 que son potenciales mejores respuestas a xl i−1. La prueba del Teorema 1 en [9] implica que el conjunto pbrVi−2 (xl i−1) no está vacío: el jugador Vi−2 tiene una mejor respuesta potencial a cualquier estrategia de Vi−1, en particular, xl i−1. Por la construcción del conjunto Xi−2, esto implica que Y no está vacío. Para cada xj i−2 ∈ Y, dejemos que pjlk sea la ganancia que Vi−1 recibe cuando Vi−2 juega xj i−2, Vi−1 juega xl i−1, y Vi juega xk i. Claramente, pjlk se puede calcular en tiempo constante. Entonces tenemos ml,k i = max{mj,l i−1 + pjlk | xj i−2 ∈ Y }. Finalmente, supongamos que hemos calculado ml,k n para l, k = 1, . . . , N. Todavía necesitamos tener en cuenta el pago del jugador Vn. Por lo tanto, consideramos todos los pares (xk n, xl n−1) que satisfacen xl n−1 ∈ pbrVn−1 (xk n), y elegimos aquel que maximiza la suma de mk,l n y la ganancia de Vn cuando juega xk n y Vn−1 juega xl n−1. Esto resulta en el pago total máximo que los jugadores pueden lograr en un equilibrio de Nash utilizando estrategias discretas; el perfil de estrategia real que produce este pago puede ser reconstruido utilizando técnicas estándar de programación dinámica. Es fácil ver que cada ml,k se puede calcular en tiempo O(N), es decir, todos ellos se pueden calcular en tiempo O(nN3). Recuerde que debemos seleccionar N ≥ (24nPmax)/ para asegurarnos de que el perfil estratégico que producimos tenga un pago total que esté dentro de lo óptimo. Concluimos que podemos calcular una -aproximación al mejor equilibrio de Nash en tiempo O(n4 P3 max/ 3 ). Esto completa la demostración del Teorema 3. Para enunciar nuestro resultado para el caso general (es decir, cuando el grafo subyacente es un árbol de grado acotado en lugar de un camino), necesitamos notación adicional. Si G tiene n jugadores, sea q(n) una cota superior en el número de puntos de evento en la representación de cualquier política de mejor respuesta. Es decir, asumimos que para cualquier vértice U con padre V, B(V, U) tiene como máximo q(n) puntos de evento. Estaremos interesados en la situación en la que q(n) sea un polinomio en n. TEOREMA 4. Sea G un juego gráfico de n jugadores en un árbol en el que cada nodo tiene a lo sumo Δ hijos. Supongamos que se nos da un conjunto de políticas de mejor respuesta para G en el que cada política de mejor respuesta B(V, U) está representada por un conjunto de rectángulos con un máximo de q(n) puntos de evento. Para cualquier > 0, existe un algoritmo que construye un equilibrio de Nash s para G que satisface EP(s) ≥ M(G) − . El tiempo de ejecución del algoritmo es polinómico en n, Pmax y −1 siempre que el árbol tenga grado acotado (es decir, Δ = O(1)) y q(n) sea un polinomio en n. En particular, si N = max((Δ + 1)q(n) + 1, n2Δ+2 (Δ + 2)Pmax −1 ) y Δ > 1 entonces el tiempo de ejecución es O(nΔ(2N)Δ. Para la demostración de este teorema, ver [10]. 4.1 Un algoritmo de tiempo polinómico para aproximación multiplicativa El tiempo de ejecución de nuestro algoritmo es seudopolinómico en lugar de polinómico, porque incluye un factor que es polinómico en Pmax, la entrada máxima (en valor absoluto) en cualquier matriz de pagos. Si estamos interesados en una aproximación multiplicativa en lugar de una aditiva, esto se puede mejorar a polinomial. Primero, hay que tener en cuenta que no podemos esperar una aproximación multiplicativa para todas las entradas. Es decir, no podemos esperar tener un algoritmo que calcule un equilibrio de Nash con una ganancia total de al menos (1 − )M(G). Si tuviéramos dicho algoritmo, entonces para juegos gráficos G con M(G) = 0, se requeriría que el algoritmo produjera la solución óptima. Para demostrar que esto es inviable, observe que podemos usar las técnicas de la Sección 3.2 para construir dos juegos gráficos de coeficientes enteros en caminos de longitud O(n) de tal manera que para algún X ∈ R, el pago total máximo en el primer juego sea X, el pago total máximo en el segundo juego sea −X, y para ambos juegos, los perfiles estratégicos que logran los pagos totales máximos involucran números algebraicos de grado n. Al combinar los dos juegos de modo que el primer vértice del segundo juego se conecte con el último vértice del primer juego, pero los pagos de todos los jugadores no cambien, obtenemos un juego gráfico en el que el mejor equilibrio de Nash tiene un pago total de 0, sin embargo, las estrategias que conducen a este pago tienen una alta complejidad algebraica. Sin embargo, podemos lograr una aproximación multiplicativa cuando todas las entradas de las matrices de pago son positivas y la relación entre cualquier par de entradas está acotada polinómicamente. Recuerde que asumimos que todos los pagos son enteros, y sea Pmin > 0 la entrada más pequeña de cualquier matriz de pagos. En este caso, para cualquier perfil estratégico, la ganancia para el jugador i es al menos Pmin, por lo que la ganancia total en el equilibrio de Nash que maximiza el bienestar social satisface M(G) ≥ nPmin. Además, el Lema 3 implica que al elegir δ < /(24Pmax/Pmin), podemos asegurar que el equilibrio de Nash t producido por nuestro algoritmo cumple nX i=1 EPVi (s) − nX i=1 EPVi (t) ≤ 24Pmaxδn ≤ nPmin ≤ M(G), es decir, para este valor de δ tenemos Pn i=1 EPVi (t) ≥ (1 − )M(G). Recuerde que el tiempo de ejecución de nuestro algoritmo es O(nN3), donde N debe ser seleccionado para satisfacer N > 5n, N = 1/δ. Se deduce que si Pmin > 0, Pmax/Pmin = poli(n), podemos elegir N de manera que nuestro algoritmo proporcione una garantía de aproximación multiplicativa y se ejecute en tiempo polinómico en n y 1/ . 5. EQUILIBRIOS DE NASH DE PAGO ACOTADO Otra forma natural de definir qué es un buen equilibrio de Nash es exigir que el pago esperado de cada jugador supere cierto umbral. Estos umbrales no tienen que ser iguales para todos los jugadores. En este caso, además de las matrices de pagos de los n jugadores, se nos dan n números T1, . . . , Tn, y nuestro objetivo es encontrar un equilibrio de Nash en el que el pago del jugador i sea al menos Ti, o informar que no existe tal equilibrio de Nash. Resulta que podemos diseñar un FPTAS para este problema utilizando las mismas técnicas que en la sección anterior. TEOREMA 5. Dado un juego gráfico G en un camino de n vértices y n números racionales T1, . . . , Tn, supongamos que existe un perfil estratégico s tal que s es un equilibrio de Nash para G y EPVi (s) ≥ Ti para i = 1, . . . , n. Entonces para cualquier > 0 podemos encontrar en tiempo O(max{nP3 max/ 3 , n4 / 3 }) un perfil estratégico s tal que s es un equilibrio de Nash para G y EPVi (s) ≥ Ti − para i = 1, . . . , n. PRUEBA. La prueba es similar a la del Teorema 3. Primero, construimos las políticas de mejor respuesta para todos los jugadores, elegimos N > 5n, y construimos los conjuntos Xi, i = 1, . . . , n, como se describe en la demostración del Teorema 3. Consideremos un perfil estratégico s tal que s sea un equilibrio de Nash para G y EPVi (s) ≥ Ti para i = 1, . . . , n. Construimos un perfil estratégico ti = max{xj i | xj i ≤ si} y usamos el mismo argumento que en la demostración del Teorema 3 para mostrar que t es un equilibrio de Nash para G. Según el Lema 3, tenemos |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ, por lo que eligiendo δ < /(24Pmax), o, equivalentemente, N > max{5n, 24Pmax/ }, podemos asegurar que EPVi (t) ≥ Ti − para i = 1, . . . , n. Ahora, utilizaremos la programación dinámica para encontrar un equilibrio de Nash discreto que cumpla con EPVi (t) ≥ Ti − para i = 1, . . . , n. Dado que t es un perfil estratégico discreto, nuestro algoritmo tendrá éxito siempre que haya un perfil estratégico s con EPVi (s) ≥ Ti− para i = 1, . . . , n. Sea zl,k i = 1 si hay un perfil estratégico discreto tal que para cualquier j < i la estrategia del jugador Vj es una mejor respuesta potencial a la estrategia de Vj+1, el pago esperado de Vj es al menos Tj − , y, además, Vi−1 juega xl i−1, Vi juega xk i. De lo contrario, deja que zl,k i = 0. Podemos calcular zl,k i, i = 1, . . . , n; k, l = 1, . . . , N de forma inductiva, de la siguiente manera. Tenemos zl,k 1 = 1 para k, l = 1, . . . , N. Ahora, supongamos que ya hemos calculado zl,k j para todos los j < i; k, l = 1, . . . , N. Para calcular zk,l i , primero verificamos si (xk i , xl i−1) ∈ B(Vi, Vi−1). Si este 168 no es el caso, claramente, zk,l i = 0. De lo contrario, considera el conjunto Y = Xi−2 ∩ pbrVi−2 (xl i−1), es decir, el conjunto de todas las estrategias discretas de Vi−2 que son potenciales mejores respuestas a xl i−1. Se ha demostrado en la prueba del Teorema 3 que Y = ∅. Para cada xj i−2 ∈ Y, dejemos que pjlk sea la ganancia que Vi−1 recibe cuando Vi−2 juega xj i−2, Vi−1 juega xl i−1, y Vi juega xk i. Claramente, pjlk se puede calcular en tiempo constante. Si existe un xj i−2 ∈ Y tal que zj,l i−1 = 1 y pjlk ≥ Ti−2 − , establece zl,k i = 1. De lo contrario, establezca zl,k i = 0. Habiendo calculado zl,k n , l, k = 1, . . . , N, verificamos si zl,k n = 1 para algún par (l, k). Si existe tal par de índices, instruimos a Vn a jugar xk n y utilizamos técnicas de programación dinámica (o, de manera equivalente, el paso descendente del algoritmo de [13]) para encontrar un equilibrio de Nash s que satisfaga EPVi (s ) ≥ Ti − para i = 1, . . . , n (recordemos que Vn es un jugador ficticio, es decir, asumimos Tn = 0, EPn(s ) = 0 para cualquier elección de s ). Si zl,k n = 0 para todo l, k = 1, . . . , N, no hay un equilibrio de Nash discreto s que satisfaga EPVi (s) ≥ Ti − para i = 1, . . . , n y, por lo tanto, no hay un equilibrio de Nash s (no necesariamente discreto) tal que EPVi (s) ≥ Ti para i = 1, . . . , n. El análisis del tiempo de ejecución es similar al de la Teorema 3; concluimos que el tiempo de ejecución de nuestro algoritmo es O(nN3) = O(max{nP3 max/3, n4/3}). OBSERVACIÓN 1. El Teorema 5 se puede extender a árboles de grado acotado de la misma manera que el Teorema 4. 5.1 Cálculo Exacto Otro enfoque para encontrar equilibrios de Nash con pagos acotados se basa en calcular de forma inductiva los subconjuntos de las políticas de mejor respuesta de todos los jugadores para excluir los puntos que no proporcionan pagos suficientes a algunos de los jugadores. Formalmente, decimos que una estrategia v del jugador V es una mejor respuesta potencial a una estrategia w de su padre W con respecto a un vector de umbral T = (T1, . . . , Tn), (denotado por v ∈ pbrV (w, T)) si hay un equilibrio en la instancia G(V,W), W = w en el que V juega la estrategia mixta v y la ganancia para cualquier jugador Vi aguas abajo de V (incluyendo a V) es al menos Ti. La mejor política de respuesta para V con respecto a un vector umbral T se define como B(W, V, T) = {(w, v) | v ∈ pbrV (w, T), w ∈ [0, 1]}. Es fácil ver que si alguno de los conjuntos B(Vj, Vj−1, T), j = 1, . . . , n, está vacío, significa que es imposible proporcionar a todos los jugadores los pagos esperados prescritos por T. De lo contrario, se puede aplicar el paso descendente del algoritmo original de [13] para encontrar un equilibrio de Nash. Dado que asumimos que Vn es un vértice ficticio cuya ganancia es idénticamente 0, el equilibrio de Nash con estas ganancias existe siempre y cuando Tn ≤ 0 y B(Vn, Vn−1, T) no esté vacío. Usando las técnicas desarrolladas en [9], no es difícil demostrar que para cualquier j = 1, . . . , n, el conjunto B(Vj , Vj−1, T) consiste en un número finito de rectángulos, y se puede calcular B(Vj+1, Vj , T) dado B(Vj , Vj−1, T). La ventaja de este enfoque es que nos permite representar todos los equilibrios de Nash que proporcionan los pagos requeridos a los jugadores. Sin embargo, no es probable que sea práctico, ya que resulta que los rectángulos que aparecen en la representación de B(Vj , Vj−1, T) pueden tener coordenadas irracionales. AFIRMACIÓN 6. Existe un juego gráfico G en un camino de 3 vértices UVW y un vector T = (T1, T2, T3) tal que B(V, W, T) no puede ser representado como una unión de un número finito de rectángulos con coordenadas racionales. PRUEBA. Definimos las recompensas para los jugadores en G de la siguiente manera. La ganancia para U es idénticamente 0, es decir, P0 (U) = P1 (U) = 0. Usando la Reclamación 1, seleccionamos los pagos para V de manera que P0 (V) = uw, P1 (V) = P0 (V) + w - .8u - .1, donde u y w son las estrategias (mixtas) de U y W, respectivamente. Se deduce que V es indiferente entre jugar 0 y 1 si y solo si w = f(u) = .8u + .1; observe que para cualquier u ∈ [0, 1] tenemos f(u) ∈ [0, 1]. No es difícil ver que tenemos B(W, V) = [0, .1]×{0} ∪ [.1, .9]×[0, 1] ∪ [.9, 1]×{1}. Los pagos para W no son importantes para nuestra construcción; por ejemplo, establezca P0(W) = P0(W) = 0. Ahora, establezca T = (0, 1/8, 0), es decir, estamos interesados en equilibrios de Nash en los que el pago esperado de V sea al menos 1/8. Supongamos que w ∈ [0, 1]. El jugador V puede jugar una estrategia mixta v cuando W está jugando w siempre que U juegue u = f−1 (w) = 5w/4 − 1/8 (para asegurar que V sea indiferente entre 0 y 1) y P0 (V) = P1 (V) = uw = w(5w/4 − 1/8) ≥ 1/8. La última condición se cumple si w ≤ (1 − √ 41)/20 < 0 o w ≥ (1 + √ 41)/20. Ten en cuenta que tenemos .1 < (1 + √ 41)/20 < .9. Para cualquier otro valor de w, cualquier estrategia de U hace que V prefiera una de las estrategias puras o no le proporciona un pago esperado suficiente. También hay algunos valores de w para los cuales V puede jugar una estrategia pura (0 o 1) como una mejor respuesta potencial a W y garantizarse a sí mismo un pago esperado de al menos 1/8; se puede demostrar que estos valores de w forman un número finito de segmentos en [0, 1]. Concluimos que cualquier representación de B(W, V, T) como una unión de un número finito de rectángulos debe contener un rectángulo de la forma [(1 + √ 41)/20, w] × [v, v] para algún w, v, v ∈ [0, 1]. Por otro lado, se puede demostrar que para cualquier matriz de pagos enteros y vectores de umbral, y para cualquier j = 1, . . . , n − 1, los conjuntos B(Vj+1, Vj, T) no contienen rectángulos de la forma [u , u ]×{v} o {v}×[w , w ], donde v ∈ R\\Q. Esto significa que si B(Vn, Vn−1, T) no está vacío, es decir, hay un equilibrio de Nash con pagos prescritos por T, entonces el paso descendente del algoritmo de [13] siempre puede elegir un perfil estratégico que forme un equilibrio de Nash, proporcione un pago de al menos Ti al jugador Vi y no tenga coordenadas irracionales. Por lo tanto, a diferencia del equilibrio de Nash que maximiza el bienestar social, no es necesario trabajar con números irracionales, y el hecho de que el algoritmo discutido en esta sección deba hacerlo puede considerarse como un argumento en contra de utilizar este enfoque. OTROS CRITERIOS PARA SELECCIONAR UN EQUILIBRIO DE NASH En esta sección, consideramos varios otros criterios que pueden ser útiles para seleccionar un equilibrio de Nash. 6.1 Combinando la maximización del bienestar con límites en los pagos En muchos escenarios de la vida real, queremos maximizar el bienestar social sujeto a ciertas restricciones en los pagos a los jugadores individuales. Por ejemplo, es posible que queramos asegurarnos de que ningún jugador obtenga una ganancia esperada negativa, o que la ganancia esperada para el jugador i sea al menos Pi max − ξ, donde Pi max es la entrada máxima de la matriz de ganancias de i y ξ es un parámetro fijo. Formalmente, dado un juego gráfico G y un vector T1, . . . , Tn, sea S el conjunto de todos los equilibrios de Nash s de G que satisfacen Ti ≤ EPVi (s) para i = 1, . . . , n, y sea ˆs = argmaxs∈S EP(s). Si el conjunto S no está vacío, podemos encontrar un equilibrio de Nash ˆs que esté -cerca de satisfacer los límites de pago y esté dentro de ε de ˆs con respecto al pago total al combinar los algoritmos de la Sección 4 y la Sección 5. Es decir, para un dado > 0, elige δ como en la demostración del Teorema 3, y deja que Xi sea el conjunto de todas las estrategias discretas del jugador Vi (para una definición formal, consulta la demostración del Teorema 3). Combinando las pruebas del Teorema 3 y el Teorema 5, podemos ver que el perfil de estrategia ˆt dado por ˆti = max{xj i | xj i ≤ ˆsi} satisface EPVi (ˆt) ≥ Ti − , |EP(ˆs) − EP(ˆt)| ≤ . Define ˆml,k i como la máxima ganancia total que V1, . . . , Vi−1 pueden lograr si cada Vj, j ≤ i, elige una estrategia de Xj, para cada j < i la estrategia de Vj es una mejor respuesta potencial a la estrategia de Vj+1 y la ganancia para el jugador Vj es al menos Tj − , y, además, Vi−1 juega xl i−1, Vi juega xk i. Si no hay forma de elegir las estrategias para V1, . . . , Vi−1 que cumplan con estas condiciones, establecemos ml,k i = −∞. El ˆml,k se puede calcular mediante programación dinámica de manera similar al ml,k y zl,k en las demostraciones de los Teoremas 3 y 5. Finalmente, como en la demostración del Teorema 3, utilizamos ml,k n para seleccionar el mejor equilibrio de Nash discreto sujeto a las restricciones de pago. Incluso de manera más general, es posible que deseemos maximizar el beneficio total para un subconjunto de jugadores (se supone que son capaces de redistribuir justamente las ganancias entre ellos mismos) mientras garantizamos ciertos beneficios esperados a (un subconjunto de) los otros jugadores. Este problema puede ser abordado de manera similar. 6.2 Un enfoque minimax Una medida más igualitaria de la calidad de un equilibrio de Nash es el pago esperado mínimo para un jugador. La solución óptima con respecto a esta medida es un equilibrio de Nash en el cual la ganancia esperada mínima para un jugador es máxima. Para encontrar una aproximación a dicho equilibrio de Nash, podemos combinar el algoritmo de la Sección 5 con la búsqueda binaria en el espacio de límites inferiores potenciales. Ten en cuenta que la ganancia esperada para cualquier jugador Vi dada una estrategia s siempre cumple con −Pmax ≤ EPVi (s) ≤ Pmax. Para un fijo > 0, comenzamos estableciendo T = −Pmax, T = Pmax, T∗ = (T + T )/2. Luego ejecutamos el algoritmo de la Sección 5 con T1 = · · · = Tn = T∗. Si el algoritmo tiene éxito al encontrar un equilibrio de Nash s que cumple con EPVi (s) ≥ T∗ − para todo i = 1, . . . , n, establecemos T = T∗, T∗ = (T + T)/2; de lo contrario, establecemos T = T∗, T∗ = (T + T)/2 y repetimos el ciclo. Repetimos este proceso hasta que |T − T | ≤ . No es difícil comprobar que para cualquier p ∈ R, si existe un equilibrio de Nash s tal que mini=1,...,n EPVi (s) ≥ p, entonces nuestro algoritmo devuelve un equilibrio de Nash s que cumple mini=1,...,n EPVi (s) ≥ p−2. El tiempo de ejecución de nuestro algoritmo es O(max{nP3 max log −1 / 3 , n4 log −1 / 3 }). 6.3 Igualando los pagos Cuando las matrices de pagos de los jugadores no son muy diferentes, es razonable exigir que los pagos esperados para los jugadores tampoco difieran mucho. Ahora demostraremos que los equilibrios de Nash en esta categoría también pueden aproximarse en tiempo polinómico. De hecho, observe que el algoritmo de la Sección 5 puede ser fácilmente modificado para tratar con límites superiores en las ganancias individuales en lugar de límites inferiores. Además, podemos calcular de manera eficiente una aproximación a un equilibrio de Nash que cumpla tanto con el límite superior como con el límite inferior para cada jugador. Más precisamente, supongamos que se nos da un juego gráfico G, 2n números racionales T1, . . . , Tn, T1, . . . , Tn y > 0. Entonces, si existe un perfil estratégico s tal que s es un equilibrio de Nash para G y Ti ≤ EPVi (s) ≤ Ti para i = 1, . . . , n, podemos encontrar un perfil estratégico s tal que s es un equilibrio de Nash para G y Ti − ≤ EPVi (s) ≤ Ti + para i = 1, . . . , n. El algoritmo modificado también se ejecuta en tiempo O(max{nP3 max/ 3 , [4]n4 / 3 }). Esta observación nos permite aproximar equilibrios de Nash en los que las ganancias esperadas de todos los jugadores difieren en un máximo de ξ para cualquier ξ fijo > 0. Dado un > 0, establecemos T1 = · · · = Tn = −Pmax, T1 = · · · = Tn = −Pmax + ξ + , y ejecutamos la versión modificada del algoritmo de la Sección 5. Si no logra encontrar una solución, incrementamos todos los Ti, Ti por y el bucle. Continuamos hasta que el algoritmo encuentre una solución, o Ti ≥ Pmax. Supongamos que existe un equilibrio de Nash s que satisface |EPVi (s) − EPVj (s)| ≤ ξ para todo i, j = 1, . . . , n. Definamos r = mini=1,...,n EPVi (s); tenemos r ≤ EPVi (s) ≤ r + ξ para todo i = 1, . . . , n. Existe un k ≥ 0 tal que −Pmax + (k − 1) ≤ r ≤ −Pmax + k. Durante el paso k del algoritmo, establecemos T1 = · · · = Tn = −Pmax +(k−1) , es decir, tenemos r− ≤ Ti ≤ r, r + ξ ≤ Ti ≤ r + ξ + . Es decir, el equilibrio de Nash s satisface Ti ≤ r ≤ EPVi (s) ≤ r + ξ ≤ Ti, lo que significa que cuando Ti se establece en −Pmax + (k − 1), nuestro algoritmo garantiza producir un equilibrio de Nash t que satisface r − 2 ≤ Ti − ≤ EPVi (t) ≤ Ti + ≤ r + ξ + 2. Concluimos que siempre que exista un equilibrio de Nash s, nuestro algoritmo produce un equilibrio de Nash t que satisface |EPVi (t) − EPVj (t)| ≤ ξ + 4 para todo i, j = 1, . . . , n. El tiempo de ejecución de este algoritmo es O(max{nP3 max/ 4 , n4 / 4 }). También debemos tener en cuenta que podemos encontrar el valor más pequeño de ξ para el cual existe un equilibrio de Nash combinando este algoritmo con una búsqueda binaria en el espacio ξ = [0, 2Pmax]. Esto identifica una aproximación al equilibrio de Nash más justo, es decir, uno en el que las ganancias esperadas de los jugadores difieren por la menor cantidad posible. Finalmente, cabe destacar que todos los resultados de esta sección pueden extenderse a árboles de grado acotado. 7. CONCLUSIONES Hemos estudiado el problema de la selección de equilibrio en juegos gráficos en árboles de grado acotado. Consideramos varios criterios para seleccionar un equilibrio de Nash, como maximizar el bienestar social, garantizar un límite inferior en la recompensa esperada de cada jugador, etc. Primero, nos enfocamos en la complejidad algebraica de un equilibrio de Nash que maximiza el bienestar social, y demostramos resultados negativos contundentes para ese problema. Es decir, demostramos que incluso para juegos gráficos en caminos, cualquier número algebraico α ∈ [0, 1] puede ser la única estrategia disponible para algún jugador en todas las equilibrios de Nash que maximizan el bienestar social. Esto contrasta fuertemente con el hecho de que los juegos gráficos en árboles siempre poseen un equilibrio de Nash en el que las estrategias de todos los jugadores son números racionales. Luego proporcionamos algoritmos de aproximación para seleccionar equilibrios de Nash con propiedades especiales. Si bien el problema de encontrar equilibrios de Nash aproximados para diversas clases de juegos ha recibido mucha atención en los últimos años, la mayoría de los trabajos existentes tienen como objetivo encontrar equilibrios de Nash que satisfagan (o estén cerca de satisfacer) ciertas propiedades. Nuestro enfoque es diferente en que insistimos en producir un equilibrio de Nash exacto, que está cerca de satisfacer un requisito dado. Como se argumenta en la introducción, hay varias razones para preferir una solución que constituya un equilibrio de Nash exacto. Nuestros algoritmos son esquemas de aproximación de tiempo polinomial completo, es decir, su tiempo de ejecución es polinomial en el inverso del parámetro de aproximación, aunque pueden ser seudopolinomiales con respecto al tamaño de la entrada. Bajo restricciones leves en las entradas, estas pueden ser modificadas para ser verdaderamente polinomiales. Este es el resultado positivo más fuerte que se puede obtener para un problema cuyas soluciones exactas pueden ser difíciles de representar, como es el caso de muchos de los problemas considerados aquí. Mientras demostramos nuestros resultados para juegos en un camino, pueden generalizarse a cualquier árbol para el cual las políticas de mejor respuesta tengan representaciones compactas como uniones de rectángulos. En la versión completa del artículo describimos nuestros algoritmos para el caso general. Un trabajo adicional en esta línea podría incluir extensiones a los tipos de garantías buscadas para los equilibrios de Nash, como garantizar los pagos totales para subconjuntos de jugadores, seleccionar equilibrios en los que algunos jugadores estén recibiendo pagos significativamente más altos que sus pares, etc. Sin embargo, en este momento es quizás más importante investigar si los equilibrios de Nash de los juegos gráficos pueden ser calculados de manera descentralizada, en contraste con los algoritmos que hemos introducido aquí. Es natural preguntarse si nuestros resultados o los de [9] pueden generalizarse a juegos con tres o más acciones. Sin embargo, parece que esto hará el análisis significativamente más difícil. En particular, cabe destacar que se pueden considerar los juegos de pago limitado como un caso especial muy restringido de juegos con tres acciones por jugador. Es decir, dado un juego de dos acciones con límites de pago, considera un juego en el que cada jugador Vi tiene una tercera acción que le garantiza un pago de Ti sin importar lo que hagan los demás. Luego, verificar si existe un equilibrio de Nash en el cual ninguno de los jugadores asigna una probabilidad distinta de cero a su tercera acción es equivalente a comprobar si existe un equilibrio de Nash que cumpla con los límites de pago en el juego original, y la Sección 5.1 muestra que encontrar una solución exacta a este problema requiere nuevas ideas. Alternativamente, puede ser interesante buscar resultados similares en el contexto de equilibrios correlacionados (CE), especialmente dado que el mejor CE puede tener un valor más alto (pago esperado total) que el mejor NE. La proporción entre estos valores se llama el valor de mediación en [1]. Se sabe por [1] que el valor de mediación de juegos de 2 jugadores y 2 acciones con pagos no negativos es a lo sumo 4 3, y presentan un juego de 3 jugadores para el cual es infinito. Además, un ejemplo de 2 jugadores y 3 acciones del [1] también tiene un valor de mediación infinito. 8. REFERENCIAS [1] I. Ashlagi, D. Monderer y M. Tenneholtz, Sobre el Valor de la Correlación, Actas del seminario de Dagstuhl 05011 (2005) [2] R. Aumann, Subjetividad y Correlación en Estrategias Aleatorias, Revista de Economía Matemática 1 pp. 67-96 (1974) [3] B. Blum, C. R. Shelton y D. Koller, Un Método de Continuación para Equilibrios de Nash en Juegos Estructurados, Actas de IJCAI03 [4] X. Chen, X. Deng y S. Teng, Computación de Equilibrios de Nash: Aproximación y Complejidad Suavizada, Actas de FOCS06 [5] X. Chen, X. Deng, Resolviendo la Complejidad del Equilibrio de Nash de 2 Jugadores, Actas de FOCS06 [6] V. Conitzer y T. Sandholm, Resultados de Complejidad sobre Equilibrios de Nash, Actas de IJCAI03 [7] C. Daskalakis, P. W. Goldberg y C. H. Papadimitriou, La Complejidad de Calcular un Equilibrio de Nash, Actas de STOC06 [8] R. S. Datta, Universalidad de los Equilibrios de Nash, Matemáticas de la Investigación Operativa 28:3, 2003 [9] E. Elkind, L. A. Goldberg y P. W. Goldberg, Equilibrios de Nash en Juegos Gráficos en Árboles Revisitados, Actas de ACM EC06 [10] E. Elkind, L. A. Goldberg y P. W. Goldberg, Computando Buenos Equilibrios de Nash en Juegos Gráficos, http://arxiv.org/abs/cs.GT/0703133 [11] I. Gilboa y E. Zemel, Equilibrios de Nash y Correlacionados: Algunas Consideraciones de Complejidad, Juegos y Comportamiento Económico, 1 pp. 80-93 (1989) [12] P. W. Goldberg y C. H. Papadimitriou, Reducibilidad entre Problemas de Equilibrio, Actas de STOC06 [13] M. Kearns, M. Littman y S. Singh, Modelos Gráficos para la Teoría de Juegos, Actas de UAI01 [14] M. Littman, M. Kearns y S. Singh, Un Algoritmo Exacto Eficiente para Juegos Gráficos Singularmente Conectados, Actas de NIPS01 [15] R. Lipton y E. Markakis, Equilibrios de Nash a través de Ecuaciones Polinomiales, Actas de LATIN04 [16] L. Ortiz y M. Kearns, Propagación de Nash para Juegos Gráficos con Lazos, Actas de NIPS03 [17] C.H. Papadimitriou, Computando equilibrios correlacionados en juegos de varios jugadores, Actas de STOC05 [18] C.H. Papadimitriou y T. Roughgarden, Computando equilibrios en juegos de múltiples jugadores, Actas de SODA05 [19] D. Vickrey y D. Koller, Algoritmos multiagente para resolver juegos gráficos, Actas de AAAI02 171 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "exponential-time algorithm": {
            "translated_key": "algoritmo de tiempo exponencial",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Computing Good Nash Equilibria in Graphical Games ∗ Edith Elkind Hebrew University of Jerusalem, Israel, and University of Southampton, Southampton, SO17 1BJ, U.K. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K. ABSTRACT This paper addresses the problem of fair equilibrium selection in graphical games.",
                "Our approach is based on the data structure called the best response policy, which was proposed by Kearns et al. [13] as a way to represent all Nash equilibria of a graphical game.",
                "In [9], it was shown that the best response policy has polynomial size as long as the underlying graph is a path.",
                "In this paper, we show that if the underlying graph is a bounded-degree tree and the best response policy has polynomial size then there is an efficient algorithm which constructs a Nash equilibrium that guarantees certain payoffs to all participants.",
                "Another attractive solution concept is a Nash equilibrium that maximizes the social welfare.",
                "We show that, while exactly computing the latter is infeasible (we prove that solving this problem may involve algebraic numbers of an arbitrarily high degree), there exists an FPTAS for finding such an equilibrium as long as the best response policy has polynomial size.",
                "These two algorithms can be combined to produce Nash equilibria that satisfy various fairness criteria.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a large community of agents, an agents behavior is not likely to have a direct effect on most other agents: rather, it is just the agents who are close enough to him that will be affected.",
                "However, as these agents respond by adapting their behavior, more agents will feel the consequences and eventually the choices made by a single agent will propagate throughout the entire community.",
                "This is the intuition behind graphical games, which were introduced by Kearns, Littman and Singh in [13] as a compact representation scheme for games with many players.",
                "In an n-player graphical game, each player is associated with a vertex of an underlying graph G, and the payoffs of each player depend on his action as well as on the actions of his neighbors in the graph.",
                "If the maximum degree of G is Δ, and each player has two actions available to him, then the game can be represented using n2Δ+1 numbers.",
                "In contrast, we need n2n numbers to represent a general n-player 2-action game, which is only practical for small values of n. For graphical games with constant Δ, the size of the game is linear in n. One of the most natural problems for a graphical game is that of finding a Nash equilibrium, the existence of which follows from Nashs celebrated theorem (as graphical games are just a special case of n-player games).",
                "The first attempt to tackle this problem was made in [13], where the authors consider graphical games with two actions per player in which the underlying graph is a boundeddegree tree.",
                "They propose a generic algorithm for finding Nash equilibria that can be specialized in two ways: an <br>exponential-time algorithm</br> for finding an (exact) Nash equilibrium, and a fully polynomial time approximation scheme (FPTAS) for finding an approximation to a Nash equilibrium.",
                "For any > 0 this algorithm outputs an -Nash equilibrium, which is a strategy profile in which no player can improve his payoff by more than by unilaterally changing his strategy.",
                "While -Nash equilibria are often easier to compute than exact Nash equilibria, this solution concept has several drawbacks.",
                "First, the players may be sensitive to a small loss in payoffs, so the strategy profile that is an -Nash equilibrium will not be stable.",
                "This will be the case even if there is only a small subset of players who are extremely price-sensitive, and for a large population of players it may be difficult to choose a value of that will satisfy everyone.",
                "Second, the strategy profiles that are close to being Nash equilibria may be much better with respect to the properties under consideration than exact Nash equilibria.",
                "Therefore, the (approximation to the) value of the best solution that corresponds to an -Nash equilibrium may not be indicative of what can be achieved under an exact Nash equilibrium.",
                "This is especially important if the purpose of the approximate solution is to provide a good benchmark for a system of selfish agents, as the benchmark implied by an -Nash equilibrium may be unrealistic.",
                "For these reasons, in this paper we focus on the problem of computing exact Nash equilibria.",
                "Building on ideas of [14], Elkind et al. [9] showed how to find an (exact) Nash equilibrium in polynomial time when the underlying 162 graph has degree 2 (that is, when the graph is a collection of paths and cycles).",
                "By contrast, finding a Nash equilibrium in a general degree-bounded graph appears to be computationally intractable: it has been shown (see [5, 12, 7]) to be complete for the complexity class PPAD. [9] extends this hardness result to the case in which the underlying graph has bounded pathwidth.",
                "A graphical game may not have a unique Nash equilibrium, indeed it may have exponentially many.",
                "Moreover, some Nash equilibria are more desirable than others.",
                "Rather than having an algorithm which merely finds some Nash equilibrium, we would like to have algorithms for finding Nash equilibria with various sociallydesirable properties, such as maximizing overall payoff or distributing profit fairly.",
                "A useful property of the data structure of [13] is that it simultaneously represents the set of all Nash equilibria of the underlying game.",
                "If this representation has polynomial size (as is the case for paths, as shown in [9]), one may hope to extract from it a Nash equilibrium with the desired properties.",
                "In fact, in [13] the authors mention that this is indeed possible if one is interested in finding an (approximate) -Nash equilibrium.",
                "The goal of this paper is to extend this to exact Nash equilibria. 1.1 Our Results In this paper, we study n-player 2-action graphical games on bounded-degree trees for which the data structure of [13] has size poly(n).",
                "We focus on the problem of finding exact Nash equilibria with certain socially-desirable properties.",
                "In particular, we show how to find a Nash equilibrium that (nearly) maximizes the social welfare, i.e., the sum of the players payoffs, and we show how to find a Nash equilibrium that (nearly) satisfies prescribed payoff bounds for all players.",
                "Graphical games on bounded-degree trees have a simple algebraic structure.",
                "One attractive feature, which follows from [13], is that every such game has a Nash equilibrium in which the strategy of every player is a rational number.",
                "Section 3 studies the algebraic structure of those Nash equilibria that maximize social welfare.",
                "We show (Theorems 1 and 2) that, surprisingly, the set of Nash equilibria that maximize social welfare is more complex.",
                "In fact, for any algebraic number α ∈ [0, 1] with degree at most n, we exhibit a graphical game on a path of length O(n) such that, in the unique social welfare-maximizing Nash equilibrium of this game, one of the players plays the mixed strategy α.1 This result shows that it may be difficult to represent an optimal Nash equilibrium.",
                "It seems to be a novel feature of the setting we consider here, that an optimal Nash equilibrium is hard to represent, in a situation where it is easy to find and represent a Nash equilibrium.",
                "As the social welfare-maximizing Nash equilibrium may be hard to represent efficiently, we have to settle for an approximation.",
                "However, the crucial difference between our approach and that of previous papers [13, 16, 19] is that we require our algorithm to output an exact Nash equilibrium, though not necessarily the optimal one with respect to our criteria.",
                "In Section 4, we describe an algorithm that satisfies this requirement.",
                "Namely, we propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within of optimal.",
                "It runs in polynomial time (Theorem 3,4) for any graphical game on a bounded-degree tree for which the data structure proposed by [13] (the so-called best response policy, defined below) is of size poly(n) (note that, as shown in [9], this is always the case when the underlying graph is a path).",
                "More pre1 A related result in a different context was obtained by Datta [8], who shows that n-player 2-action games are universal in the sense that any real algebraic variety can be represented as the set of totally mixed Nash equilibria of such games. cisely, the running time of our algorithm is polynomial in n, Pmax, and 1/ , where Pmax is the maximum absolute value of an entry of a payoff matrix, i.e., it is a pseudopolynomial algorithm, though it is fully polynomial with respect to .",
                "We show (Section 4.1) that under some restrictions on the payoff matrices, the algorithm can be transformed into a (truly) polynomial-time algorithm that outputs a Nash equilibrium whose total payoff is within a 1 − factor from the optimal.",
                "In Section 5, we consider the problem of finding a Nash equilibrium in which the expected payoff of each player Vi exceeds a prescribed threshold Ti.",
                "Using the idea from Section 4 we give (Theorem 5) a fully polynomial time approximation scheme for this problem.",
                "The running time of the algorithm is bounded by a polynomial in n, Pmax, and .",
                "If the instance has a Nash equilibrium satisfying the prescribed thresholds then the algorithm constructs a Nash equilibrium in which the expected payoff of each player Vi is at least Ti − .",
                "In Section 6, we introduce other natural criteria for selecting a good Nash equilibrium and we show that the algorithms described in the two previous sections can be used as building blocks in finding Nash equilibria that satisfy these criteria.",
                "In particular, in Section 6.1 we show how to find a Nash equilibrium that approximates the maximum social welfare, while guaranteeing that each individual payoff is close to a prescribed threshold.",
                "In Section 6.2 we show how to find a Nash equilibrium that (nearly) maximizes the minimum individual payoff.",
                "Finally, in Section 6.3 we show how to find a Nash equilibrium in which the individual payoffs of the players are close to each other. 1.2 Related Work Our approximation scheme (Theorem 3 and Theorem 4) shows a contrast between the games that we study and two-player n-action games, for which the corresponding problems are usually intractable.",
                "For two-player n-action games, the problem of finding Nash equilibria with special properties is typically NP-hard.",
                "In particular, this is the case for Nash equilibria that maximize the social welfare [11, 6].",
                "Moreover, it is likely to be intractable even to approximate such equilibria.",
                "In particular, Chen, Deng and Teng [4] show that there exists some , inverse polynomial in n, for which computing an -Nash equilibrium in 2-player games with n actions per player is PPAD-complete.",
                "Lipton and Markakis [15] study the algebraic properties of Nash equilibria, and point out that standard quantifier elimination algorithms can be used to solve them.",
                "Note that these algorithms are not polynomial-time in general.",
                "The games we study in this paper have polynomial-time computable Nash equilibria in which all mixed strategies are rational numbers, but an optimal Nash equilibrium may necessarily include mixed strategies with high algebraic degree.",
                "A correlated equilibrium (CE) (introduced by Aumann [2]) is a distribution over vectors of players actions with the property that if any player is told his own action (the value of his own component) from a vector generated by that distribution, then he cannot increase his expected payoff by changing his action.",
                "Any Nash equilibrium is a CE but the converse does not hold in general.",
                "In contrast with Nash equilibria, correlated equilibria can be found for low-degree graphical games (as well as other classes of conciselyrepresented multiplayer games) in polynomial time [17].",
                "But, for graphical games it is NP-hard to find a correlated equilibrium that maximizes total payoff [18].",
                "However, the NP-hardness results apply to more general games than the one we consider here, in particular the graphs are not trees.",
                "From [2] it is also known that there exist 2-player, 2-action games for which the expected total payoff 163 of the best correlated equilibrium is higher than the best Nash equilibrium, and we discuss this issue further in Section 7. 2.",
                "PRELIMINARIES AND NOTATION We consider graphical games in which the underlying graph G is an n-vertex tree, in which each vertex has at most Δ children.",
                "Each vertex has two actions, which are denoted by 0 and 1.",
                "A mixed strategy of a player V is represented as a single number v ∈ [0, 1], which denotes the probability that V selects action 1.",
                "For the purposes of the algorithm, the tree is rooted arbitrarily.",
                "For convenience, we assume without loss of generality that the root has a single child, and that its payoff is independent of the action chosen by the child.",
                "This can be achieved by first choosing an arbitrary root of the tree, and then adding a dummy parent of this root, giving the new parent a constant payoff function, e.g., 0.",
                "Given an edge (V, W ) of the tree G, and a mixed strategy w for W , let G(V,W ),W =w be the instance obtained from G by (1) deleting all nodes Z which are separated from V by W (i.e., all nodes Z such that the path from Z to V passes through W ), and (2) restricting the instance so that W is required to play mixed strategy w. Definition 1.",
                "Suppose that (V, W ) is an edge of the tree, that v is a mixed strategy for V and that w is a mixed strategy for W .",
                "We say that v is a potential best response to w (denoted by v ∈ pbrV (w)) if there is an equilibrium in the instance G(V,W ),W =w in which V has mixed strategy v. We define the best response policy for V , given W , as B(W, V ) = {(w, v) | v ∈ pbrV (w), w ∈ [0, 1]}.",
                "The upstream pass of the generic algorithm of [13] considers every node V (other than the root) and computes the best response policy for V given its parent.",
                "With the above assumptions about the root, the downstream pass is straightforward.",
                "The root selects a mixed strategy w for the root W and a mixed strategy v ∈ B(W, V ) for each child V of W .",
                "It instructs each child V to play v. The remainder of the downward pass is recursive.",
                "When a node V is instructed by its parent to adopt mixed strategy v, it does the following for each child U - It finds a pair (v, u) ∈ B(V, U) (with the same v value that it was given by its parent) and instructs U to play u.",
                "The best response policy for a vertex U given its parent V can be represented as a union of rectangles, where a rectangle is defined by a pair of closed intervals (IV , IU ) and consists of all points in IV × IU ; it may be the case that one or both of the intervals IV and IU consists of a single point.",
                "In order to perform computations on B(V, U), and to bound the number of rectangles, [9] used the notion of an event point, which is defined as follows.",
                "For any set A ⊆ [0, 1]2 that is represented as a union of a finite number of rectangles, we say that a point u ∈ [0, 1] on the U-axis is a Uevent point of A if u = 0 or u = 1 or the representation of A contains a rectangle of the form IV × IU and u is an endpoint of IU ; V -event points are defined similarly.",
                "For many games considered in this paper, the underlying graph is an n-vertex path, i.e., a graph G = (V, E) with V = {V1, . . . , Vn} and E = {(V1, V2), . . . , (Vn−1, Vn)}.",
                "In [9], it was shown that for such games, the best response policy has only polynomially-many rectangles.",
                "The proof that the number of rectangles in B(Vj+1, Vj) is polynomial proceeds by first showing that the number of event points in B(Vj+1, Vj ) cannot exceed the number of event points in B(Vj, Vj−1) by more than 2, and using this fact to bound the number of rectangles in B(Vj+1, Vj ).",
                "Let P0 (V ) and P1 (V ) be the expected payoffs to V when it plays 0 and 1, respectively.",
                "Both P0 (V ) and P1 (V ) are multilinear functions of the strategies of V s neighbors.",
                "In what follows, we will frequently use the following simple observation.",
                "CLAIM 1.",
                "For a vertex V with a single child U and parent W , given any A, B, C, D ∈ Q, A , B , C , D ∈ Q, one can select the payoffs to V so that P0 (V ) = Auw + Bu + Cw + D, P1 (V ) = A uw + B u + C w + D .",
                "Moreover, if all A, B, C, D, A , B , C , D are integer, the payoffs to V are integer as well.",
                "PROOF.",
                "We will give the proof for P0 (V ); the proof for P1 (V ) is similar.",
                "For i, j = 0, 1, let Pij be the payoff to V when U plays i, V plays 0 and W plays j.",
                "We have P0 (V ) = P00(1 − u)(1 − w) + P10u(1 − w) + P01(1 − u)w + P11uw.",
                "We have to select the values of Pij so that P00 − P10 − P01 + P11 = A, −P00 + P10 = B, −P00 + P01 = C, P00 = D. It is easy to see that the unique solution is given by P00 = D, P01 = C + D, P10 = B + D, P11 = A + B + C + D. The input to all algorithms considered in this paper includes the payoff matrices for each player.",
                "We assume that all elements of these matrices are integer.",
                "Let Pmax be the greatest absolute value of any element of any payoff matrix.",
                "Then the input consists of at most n2Δ+1 numbers, each of which can be represented using log Pmax bits. 3.",
                "NASH EQUILIBRIA THAT MAXIMIZE THE SOCIAL WELFARE: SOLUTIONS IN R \\ Q From the point of view of social welfare, the best Nash equilibrium is the one that maximizes the sum of the players expected payoffs.",
                "Unfortunately, it turns out that computing such a strategy profile exactly is not possible: in this section, we show that even if all players payoffs are integers, the strategy profile that maximizes the total payoff may have irrational coordinates; moreover, it may involve algebraic numbers of an arbitrary degree. 3.1 Warm-up: quadratic irrationalities We start by providing an example of a graphical game on a path of length 3 with integer payoffs such that in the Nash equilibrium that maximizes the total payoff, one of the players has a strategy in R \\ Q.",
                "In the next subsection, we will extend this example to algebraic numbers of arbitrary degree n; to do so, we have to consider paths of length O(n).",
                "THEOREM 1.",
                "There exists an integer-payoff graphical game G on a 3-vertex path UV W such that, in any Nash equilibrium of G that maximizes social welfare, the strategy, u, of the player U and the total payoff, p, satisfy u, p ∈ R \\ Q.",
                "PROOF.",
                "The payoffs to the players in G are specified as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = −uw + 3w and P1 (V ) = P0 (V ) + w(u + 2) − (u + 1), where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = u+1 u+2 .",
                "Observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "The payoff to W is 0 if it selects the same action as V and 1 otherwise.",
                "CLAIM 2.",
                "All Nash equilibria of the game G are of the form (u, 1/2, f(u)).",
                "That is, in any Nash equilibrium, V plays v = 1/2 and W plays w = f(u).",
                "Moreover, for any value of u, the vector of strategies (u, 1/2, f(u)) constitutes a Nash equilibrium.",
                "PROOF.",
                "It is easy to check that for any u ∈ [0, 1], the vector (u, 1/2, f(u)) is a Nash equilibrium.",
                "Indeed, U is content to play 164 any mixed strategy u no matter what V and W do.",
                "Furthermore, V is indifferent between 0 and 1 as long as w = f(u), so it can play 1/2.",
                "Finally, if V plays 0 and 1 with equal probability, W is indifferent between 0 and 1, so it can play f(u).",
                "Conversely, suppose that v > 1/2.",
                "Then W strictly prefers to play 0, i.e., w = 0.",
                "Then for V we have P1 (V ) = P0 (V ) − (u + 1), i.e., P1 (V ) < P0 (V ), which implies v = 0, a contradiction.",
                "Similarly, if v < 1/2, player W prefers to play 1, so we have w = 1.",
                "Hence, P1 (V ) = P0 (V ) + (u + 2) − (u + 1), i.e., P1 (V ) > P0 (V ), which implies v = 1, a contradiction.",
                "Finally, if v = 1/2, but w = f(u), player V is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "This completes the proof of Claim 2.",
                "By Claim 2, the total payoff in any Nash equilibrium of this game is a function of u.",
                "More specifically, the payoff to U is 0, the payoff to V is −uf(u) + 3f(u), and the payoff to W is 1/2.",
                "Therefore, the Nash equilibrium with the maximum total payoff corresponds to the value of u that maximizes g(u) = −u (u + 1) u + 2 + 3 u + 1 u + 2 = − (u − 3)(u + 1) u + 2 .",
                "To find extrema of g(u), we compute h(u) = − d du g(u).",
                "We have h(u) = (2u − 2)(u + 2) − (u − 3)(u + 1) (u + 2)2 = u2 + 4u − 1 (u + 2)2 .",
                "Hence, h(u) = 0 if and only if u ∈ {−2 + √ 5, −2 − √ 5}.",
                "Note that −2 + √ 5 ∈ [0, 1].",
                "The function g(u) changes sign at −2, −1, and 3.",
                "We have g(u) < 0 for g > 3, g(u) > 0 for u < −2, so the extremum of g(u) that lies between 1 and 3, i.e., u = −2 + √ 5, is a local maximum.",
                "We conclude that the social welfare-maximizing Nash equilibrium for this game is given by the vector of strategies (−2+√ 5, 1/2, (5 − √ 5)/5).",
                "The respective total payoff is 0 − ( √ 5 − 5)( √ 5 − 1) √ 5 + 1 2 = 13/2 − 2 √ 5.",
                "This concludes the proof of Theorem 1. 3.2 Strategies of arbitrary degree We have shown that in the social welfare-maximizing Nash equilibrium, some players strategies can be quadratic irrationalities, and so can the total payoff.",
                "In this subsection, we will extend this result to show that we can construct an integer-payoff graphical game on a path whose social welfare-maximizing Nash equilibrium involves arbitrary algebraic numbers in [0, 1].",
                "THEOREM 2.",
                "For any degree-n algebraic number α ∈ [0, 1], there exists an integer payoff graphical game on a path of length O(n) such that, in all social welfare-maximizing Nash equilibria of this game, one of the players plays α.",
                "PROOF.",
                "Our proof consists of two steps.",
                "First, we construct a rational expression R(x) and a segment [x , x ] such that x , x ∈ Q and α is the only maximum of R(x) on [x , x ].",
                "Second, we construct a graphical game whose Nash equilibria can be parameterized by u ∈ [x , x ], so that at the equilibrium that corresponds to u the total payoff is R(u) and, moreover, some players strategy is u.",
                "It follows that to achieve the payoff-maximizing Nash equilibrium, this player has to play α.",
                "The details follow.",
                "LEMMA 1.",
                "Given an algebraic number α ∈ [0, 1], deg(α) = n, there exist K2, . . . , K2n+2 ∈ Q and x , x ∈ (0, 1) ∩ Q such that α is the only maximum of R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 on [x , x ].",
                "PROOF.",
                "Let P(x) be the minimal polynomial of α, i.e., a polynomial of degree n with rational coefficients whose leading coefficient is 1 such that P(α) = 0.",
                "Let A = {α1, . . . , αn} be the set of all roots of P(x).",
                "Consider the polynomial Q1(x) = −P2 (x).",
                "It has the same roots as P(x), and moreover, for any x ∈ A we have Q1(x) < 0.",
                "Hence, A is the set of all maxima of Q1(x).",
                "Now, set R(x) = Q1(x) (x+2)...(x+2n+1)(x+2n+2) .",
                "Observe that R(x) ≤ 0 for all x ∈ [0, 1] and R(x) = 0 if and only if Q1(x) = 0.",
                "Hence, the set A is also the set of all maxima of R(x) on [0, 1].",
                "Let d = min{|αi − α| | αi ∈ A, αi = α}, and set α = max{α − d/2, 0}, α = min{α + d/2, 1}.",
                "Clearly, α is the only zero (and hence, the only maximum) of R(x) on [α , α ].",
                "Let x and x be some rational numbers in (α , α) and (α, α ), respectively; note that by excluding the endpoints of the intervals we ensure that x , x = 0, 1.",
                "As [x , x ] ⊂ [α , α ], we have that α is the only maximum of R(x) on [x , x ].",
                "As R(x) is a proper rational expression and all roots of its denominator are simple, by partial fraction decomposition theorem, R(x) can be represented as R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 , where K2, . . . , K2n+2 are rational numbers.",
                "Consider a graphical game on the path U−1V−1U0V0U1V1 . . .",
                "Uk−1Vk−1Uk, where k = 2n + 2.",
                "Intuitively, we want each triple (Ui−1, Vi−1, Ui) to behave similarly to the players U, V , and W from the game described in the previous subsection.",
                "More precisely, we define the payoffs to the players in the following way. • The payoff to U−1 is 0 no matter what everyone else does. • The expected payoff to V−1 is 0 if it plays 0 and u0 − (x − x )u−1 −x if it plays 1, where u0 and u−1 are the strategies of U0 and U−1, respectively. • The expected payoff to V0 is 0 if it plays 0 and u1(u0 + 1)− u0 if it plays 1, where u0 and u1 are the strategies of U0 and U1, respectively. • For each i = 1, . . . , k − 1, the expected payoff to Vi when it plays 0 is P0 (Vi) = Aiuiui+1 − Aiui+1, and the expected payoff to Vi when it plays 1 is P1 (Vi) = P0 (Vi) + ui+1(2 − ui) − 1, where Ai = −Ki+1 and ui+1 and ui are the strategies of Ui+1 and Ui, respectively. • For each i = 0, . . . , k, the payoff to Ui does not depend on Vi and is 1 if Ui and Vi−1 select different actions and 0 otherwise.",
                "We will now characterize the Nash equilibria of this game using a sequence of claims.",
                "CLAIM 3.",
                "In all Nash equilibria of this game V−1 plays 1/2, and the strategies of u−1 and u0 satisfy u0 = (x − x )u−1 + x .",
                "Consequently, in all Nash equilibria we have u0 ∈ [x , x ]. 165 PROOF.",
                "The proof is similar to that of Claim 2.",
                "Let f(u−1) = (x − x )u−1 + x .",
                "Clearly, the player V−1 is indifferent between playing 0 and 1 if and only if u0 = f(u−1).",
                "Suppose that v−1 < 1/2.",
                "Then U0 strictly prefers to play 1, i.e., u0 = 1, so we have P1 (V−1) = P0 (V−1) + 1 − (x − x )u−1 − x .",
                "As 1 − x ≤ 1 − (x − x )u−1 − x ≤ 1 − x for u−1 ∈ [0, 1] and x < 1, we have P1 (V−1) > P0 (V−1), so V−1 prefers to play 1, a contradiction.",
                "Similarly, if v−1 > 1/2, the player U0 strictly prefers to play 0, i.e., u0 = 0, so we have P1 (V−1) = P0 (V−1) − (x − x )u−1 − x .",
                "As x < x , x > 0, we have P1 (V−1) < P0 (V−1), so V−1 prefers to play 0, a contradiction.",
                "Finally, if V−1 plays 1/2, but u0 = f(u−1), player V−1 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Also, note that f(0) = x , f(1) = x , and, moreover, f(u−1) ∈ [x , x ] if and only if u−1 ∈ [0, 1].",
                "Hence, in all Nash equilibria of this game we have u0 ∈ [x , x ].",
                "CLAIM 4.",
                "In all Nash equilibria of this game for each i = 0, . . . , k − 1, we have vi = 1/2, and the strategies of the players Ui and Ui+1 satisfy ui+1 = fi(ui), where f0(u) = u/(u + 1) and fi(u) = 1/(2 − u) for i > 0.",
                "PROOF.",
                "The proof of this claim is also similar to that of Claim 2.",
                "We use induction on i to prove that the statement of the claim is true and, additionally, ui = 1 for i > 0.",
                "For the base case i = 0, note that u0 = 0 by the previous claim (recall that x , x are selected so that x , x = 0, 1) and consider the triple (U0, V0, U1).",
                "Let v0 be the strategy of V0.",
                "First, suppose that v0 > 1/2.",
                "Then U1 strictly prefers to play 0, i.e., u1 = 0.",
                "Then for V0 we have P1 (V0) = P0 (V0) − u0.",
                "As u0 = 0, we have P1 (V0) < P0 (V0), which implies v1 = 0, a contradiction.",
                "Similarly, if v0 < 1/2, player U1 prefers to play 1, so we have u1 = 1.",
                "Hence, P1 (V0) = P0 (V0) + 1.",
                "It follows that P1 (V0) > P0 (V0), which implies v0 = 1, a contradiction.",
                "Finally, if v0 = 1/2, but u1 = u0/(u0 + 1), player V0 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as u1 = u0/(u0 + 1) and u0 ∈ [0, 1], we have u1 = 1.",
                "The argument for the inductive step is similar.",
                "Namely, suppose that the statement is proved for all i < i and consider the triple (Ui, Vi, Ui+1).",
                "Let vi be the strategy of Vi.",
                "First, suppose that vi > 1/2.",
                "Then Ui+1 strictly prefers to play 0, i.e., ui+1 = 0.",
                "Then for Vi we have P1 (Vi) = P0 (Vi)−1, i.e., P1 (Vi) < P0 (Vi), which implies vi = 0, a contradiction.",
                "Similarly, if vi < 1/2, player Ui+1 prefers to play 1, so we have ui+1 = 1.",
                "Hence, P1 (Vi) = P0 (Vi) + 1 − ui.",
                "By inductive hypothesis, we have ui < 1.",
                "Consequently, P1 (Vi) > P0 (Vi), which implies vi = 1, a contradiction.",
                "Finally, if vi = 1/2, but ui+1 = 1/(2 − ui), player Vi is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as ui+1 = 1/(2 − ui) and ui < 1, we have ui+1 < 1.",
                "CLAIM 5.",
                "Any strategy profile of the form (u−1, 1/2, u0, 1/2, u1, 1/2, . . . , uk−1, 1/2, uk), where u−1 ∈ [0, 1], u0 = (x − x )u−1 + x , u1 = u0/(u0 + 1), and ui+1 = 1/(2 − ui) for i ≥ 1 constitutes a Nash equilibrium.",
                "PROOF.",
                "First, the player U−1s payoffs do not depend on other players actions, so he is free to play any strategy in [0, 1].",
                "As long as u0 = (x −x )u−1 +x , player V−1 is indifferent between 0 and 1, so he is content to play 1/2; a similar argument applies to players V0, . . . , Vk−1.",
                "Finally, for each i = 0, . . . , k, the payoffs of player Ui only depend on the strategy of player Vi−1.",
                "In particular, as long as vi−1 = 1/2, player Ui is indifferent between playing 0 and 1, so he can play any mixed strategy ui ∈ [0, 1].",
                "To complete the proof, note that (x − x )u−1 + x ∈ [0, 1] for all u−1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] for all u0 ∈ [0, 1], and 1/(2 − ui) ∈ [0, 1] for all ui ∈ [0, 1], so we have ui ∈ [0, 1] for all i = 0, . . . , k. Now, let us compute the total payoff under a strategy profile of the form given in Claim 5.",
                "The payoff to U−1 is 0, and the expected payoff to each of the Ui, i = 0, . . . , k, is 1/2.",
                "The expected payoffs to V−1 and V0 are 0.",
                "Finally, for any i = 1, . . . , k − 1, the expected payoff to Vi is Ti = Aiuiui+1 − Aiui+1.",
                "It follows that to find a Nash equilibrium with the highest total payoff, we have to maximize Pk−1 i=1 Ti subject to conditions u−1 ∈ [0, 1], u0 = (x −x )u−1+x , u1 = u0/(u0+1), and ui+1 = 1/(2−ui) for i = 1, . . . , k − 1.",
                "We would like to express Pk−1 i=1 Ti as a function of u0.",
                "To simplify notation, set u = u0.",
                "LEMMA 2.",
                "For i = 1, . . . , k, we have ui = u+i−1 u+i .",
                "PROOF.",
                "The proof is by induction on i.",
                "For i = 1, we have u1 = u/(u + 1).",
                "Now, for i ≥ 2 suppose that ui−1 = (u + i − 2)/(u + i − 1).",
                "We have ui = 1/(2 − ui−1) = (u + i − 1)/(2u + 2i − 2 − u − i + 2) = (u + i − 1)/(u + i).",
                "It follows that for i = 1, . . . , k − 1 we have Ti = Ai u + i − 1 u + i u + i u + i + 1 − Ai u + i u + i + 1 = −Ai 1 u + i + 1 = Ki+1 u + i + 1 .",
                "Observe that as u−1 varies from 0 to 1, u varies from x to x .",
                "Therefore, to maximize the total payoff, we have to choose u ∈ [x , x ] so as to maximize K2 u + 2 + · · · + Kk u + k = R(u).",
                "By construction, the only maximum of R(u) on [x , x ] is α.",
                "It follows that in the payoff-maximizing Nash equilibrium of our game U0 plays α.",
                "Finally, note that the payoffs in our game are rational rather than integer.",
                "However, it is easy to see that we can multiply all payoffs to a player by their greatest common denominator without affecting his strategy.",
                "In the resulting game, all payoffs are integer.",
                "This concludes the proof of Theorem 2. 4.",
                "APPROXIMATING THE SOCIALLY OPTIMAL NASH EQUILIBRIUM We have seen that the Nash equilibrium that maximizes the social welfare may involve strategies that are not in Q.",
                "Hence, in this section we focus on finding a Nash equilibrium that is almost optimal from the social welfare perspective.",
                "We propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within from optimal.",
                "The running time of this algorithm is polynomial in 1/ , n and |Pmax| (recall that Pmax is the maximum absolute value of an entry of a payoff matrix).",
                "While the negative result of the previous section is for graphical games on paths, our algorithm applies to a wider range of scenarios.",
                "Namely, it runs in polynomial time on bounded-degree trees 166 as long as the best response policy of each vertex, given its parent, can be represented as a union of a polynomial number of rectangles.",
                "Note that path graphs always satisfy this condition: in [9] we showed how to compute such a representation, given a graph with maximum degree 2.",
                "Consequently, for path graphs the running time of our algorithm is guaranteed to be polynomial. (Note that [9] exhibits a family of graphical games on bounded-degree trees for which the best response policies of some of the vertices, given their parents, have exponential size, when represented as unions of rectangles.)",
                "Due to space restrictions, in this version of the paper we present the algorithm for the case where the graph underlying the graphical game is a path.",
                "We then state our result for the general case; the proof can be found in the full version of this paper [10].",
                "Suppose that s is a strategy profile for a graphical game G. That is, s assigns a mixed strategy to each vertex of G. let EPV (s) be the expected payoff of player V under s and let EP(s) =P V EPV (s).",
                "Let M(G) = max{EP(s) | s is a Nash equilibrium for G}.",
                "THEOREM 3.",
                "Suppose that G is a graphical game on an nvertex path.",
                "Then for any > 0 there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G)− .",
                "The running time of the algorithm is O(n4 P3 max/ 3 ) PROOF.",
                "Let {V1, . . . , Vn} be the set of all players.",
                "We start by constructing the best response policies for all Vi, i = 1, . . . , n − 1.",
                "As shown in [9], this can be done in time O(n3 ).",
                "Let N > 5n be a parameter to be selected later, set δ = 1/N, and define X = {jδ | j = 0, . . . , N}.",
                "We say that vj is an event point for a player Vi if it is a Vi-event point for B(Vi, Vi−1) or B(Vi+1, Vi).",
                "For each player Vi, consider a finite set of strategies Xi given by Xi = X ∪ {vj |vj is an event point for Vi}.",
                "It has been shown in [9] that for any i = 2, . . . , n, the best response policy B(Vi, Vi−1) has at most 2n + 4 Vi-event points.",
                "As we require N > 5n, we have |Xi| ≤ 2N; assume without loss of generality that |Xi| = 2N.",
                "Order the elements of Xi in increasing order as x1 i = 0 < x2 i < · · · < x2N i .",
                "We will refer to the strategies in Xi as discrete strategies of player Vi; a strategy profile in which each player has a discrete strategy will be referred to as a discrete strategy profile.",
                "We will now show that even we restrict each player Vi to strategies from Xi, the players can still achieve a Nash equilibrium, and moreover, the best such Nash equilibrium (with respect to the social welfare) has total payoff at least M(G) − as long as N is large enough.",
                "Let s be a strategy profile that maximizes social welfare.",
                "That is, let s = (s1, . . . , sn) where si is the mixed strategy of player Vi and EP(s) = M(G).",
                "For i = 1, . . . , n, let ti = max{xj i | xj i ≤ si}.",
                "First, we will show that the strategy profile t = (t1, . . . , tn) is a Nash equilibrium for G. Fix any i, 1 < i ≤ n, and let R = [v1, v2]×[u1, u2] be the rectangle in B(Vi, Vi−1) that contains (si, si−1).",
                "As v1 is a Vi-event point of B(Vi, Vi−1), we have v1 ≤ ti, so the point (ti, si−1) is inside R. Similarly, the point u1 is a Vi−1-event point of B(Vi, Vi−1), so we have u1 ≤ ti−1, and therefore the point (ti, ti−1) is inside R. This means that for any i, 1 < i ≤ n, we have ti−1 ∈ pbrVi−1 (ti), which implies that t = (t1, . . . , tn) is a Nash equilibrium for G. Now, let us estimate the expected loss in social welfare caused by playing t instead of s. LEMMA 3.",
                "For any pair of strategy profiles t, s such that |ti − si| ≤ δ we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ for any i = 1, . . . , n. PROOF.",
                "Let Pi klm be the payoff of the player Vi, when he plays k, Vi−1 plays l, and Vi+1 plays m. Fix i = 1, . . . , n and for k, l, m ∈ {0, 1}, set tklm = tk i−1(1 − ti−1)1−k tl i(1 − ti)1−l tm i+1(1 − ti+1)1−m sklm = sk i−1(1 − si−1)1−k sl i(1 − si)1−l sm i+1(1 − si+1)1−m .",
                "We have |EPVi (s) − EPVi (t)| ≤ X k,l,m=0,1 |Pi klm(tklm − sklm )| ≤ 8Pmax max klm |tklm − sklm | We will now show that for any k, l, m ∈ {0, 1} we have |tklm − sklm | ≤ 3δ; clearly, this implies the lemma.",
                "Indeed, fix k, l, m ∈ {0, 1}.",
                "Set x = tk i−1(1 − ti−1)1−k , x = sk i−1(1 − si−1)1−k , y = tl i(1 − ti)1−l , y = sl i(1 − si)1−l , z = tm i+1(1 − ti+1)1−m , z = sm i+1(1 − si+1)1−m .",
                "Observe that if k = 0 then x − x = (1 − ti−1) − (1 − si−1), and if k = 1 then x − x = ti−1 − si−1, so |x − x | ≤ δ.",
                "A similar argument shows |y − y | ≤ δ, |z − z | ≤ δ.",
                "Also, we have x, x , y, y , z, z ∈ [0, 1].",
                "Hence, |tklm −sklm | = |xyz−x y z | = |xyz − x yz + x yz − x y z + x y z − x y z | ≤ |x − x |yz + |y − y |x z + |z − z |x y ≤ 3δ.",
                "Lemma 3 implies Pn i=1 |EPVi (s) − EPVi (t)| ≤ 24nPmaxδ, so by choosing δ < /(24nPmax), or, equivalently, setting N > 24nPmax/ , we can ensure that the total expected payoff for the strategy profile t is within from optimal.",
                "We will now show that we can find the best discrete Nash equilibrium (with respect to the social welfare) using dynamic programming.",
                "As t is a discrete strategy profile, this means that the strategy profile found by our algorithm will be at least as good as t. Define ml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj , j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1, and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The values ml,k i , i = 1, . . . , n; k, l = 1, . . . , N, can be computed inductively, as follows.",
                "We have ml,k 1 = 0 for k, l = 1, . . . , N. Now, suppose that we have already computed ml,k j for all j < i; k, l = 1, . . . , N. To compute mk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this is not the case, we have ml,k i = −∞.",
                "Otherwise, consider the set Y = Xi−2 ∩ pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "The proof of Theorem 1 in [9] implies that the set pbrVi−2 (xl i−1) is non-empty: the player Vi−2 has a potential best response to any strategy of Vi−1, in particular, xl i−1.",
                "By construction of the set Xi−2, this implies that Y is not empty.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "Then we have ml,k i = max{mj,l i−1 + pjlk | xj i−2 ∈ Y }.",
                "Finally, suppose that we have computed ml,k n for l, k = 1, . . . , N. We still need to take into account the payoff of player Vn.",
                "Hence, 167 we consider all pairs (xk n, xl n−1) that satisfy xl n−1 ∈ pbrVn−1 (xk n), and pick the one that maximizes the sum of mk,l n and the payoff of Vn when he plays xk n and Vn−1 plays xl n−1.",
                "This results in the maximum total payoff the players can achieve in a Nash equilibrium using discrete strategies; the actual strategy profile that produces this payoff can be reconstructed using standard dynamic programming techniques.",
                "It is easy to see that each ml,k i can be computed in time O(N), i.e., all of them can be computed in time O(nN3 ).",
                "Recall that we have to select N ≥ (24nPmax)/ to ensure that the strategy profile we output has total payoff that is within from optimal.",
                "We conclude that we can compute an -approximation to the best Nash equilibrium in time O(n4 P3 max/ 3 ).",
                "This completes the proof of Theorem 3.",
                "To state our result for the general case (i.e., when the underlying graph is a bounded-degree tree rather than a path), we need additional notation.",
                "If G has n players, let q(n) be an upper bound on the number of event points in the representation of any best response policy.",
                "That is, we assume that for any vertex U with parent V , B(V, U) has at most q(n) event points.",
                "We will be interested in the situation in which q(n) is polynomial in n. THEOREM 4.",
                "Let G be an n-player graphical game on a tree in which each node has at most Δ children.",
                "Suppose we are given a set of best-response policies for G in which each best-response policy B(V, U) is represented by a set of rectangles with at most q(n) event points.",
                "For any > 0, there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G) − .",
                "The running time of the algorithm is polynomial in n, Pmax and −1 provided that the tree has bounded degree (that is, Δ = O(1)) and q(n) is a polynomial in n. In particular, if N = max((Δ + 1)q(n) + 1, n2Δ+2 (Δ + 2)Pmax −1 ) and Δ > 1 then the running time is O(nΔ(2N)Δ .",
                "For the proof of this theorem, see [10]. 4.1 A polynomial-time algorithm for multiplicative approximation The running time of our algorithm is pseudopolynomial rather than polynomial, because it includes a factor which is polynomial in Pmax, the maximum (in absolute value) entry in any payoff matrix.",
                "If we are interested in multiplicative approximation rather than additive one, this can be improved to polynomial.",
                "First, note that we cannot expect a multiplicative approximation for all inputs.",
                "That is, we cannot hope to have an algorithm that computes a Nash equilibrium with total payoff at least (1 − )M(G).",
                "If we had such an algorithm, then for graphical games G with M(G) = 0, the algorithm would be required to output the optimal solution.",
                "To show that this is infeasible, observe that we can use the techniques of Section 3.2 to construct two integercoefficient graphical games on paths of length O(n) such that for some X ∈ R the maximal total payoff in the first game is X, the maximal total payoff in the second game is −X, and for both games, the strategy profiles that achieve the maximal total payoffs involve algebraic numbers of degree n. By combining the two games so that the first vertex of the second game becomes connected to the last vertex of the first game, but the payoffs of all players do not change, we obtain a graphical game in which the best Nash equilibrium has total payoff 0, yet the strategies that lead to this payoff have high algebraic complexity.",
                "However, we can achieve a multiplicative approximation when all entries of the payoff matrices are positive and the ratio between any two entries is polynomially bounded.",
                "Recall that we assume that all payoffs are integer, and let Pmin > 0 be the smallest entry of any payoff matrix.",
                "In this case, for any strategy profile the payoff to player i is at least Pmin, so the total payoff in the social-welfare maximizing Nash equilibrium s satisfies M(G) ≥ nPmin.",
                "Moreover, Lemma 3 implies that by choosing δ < /(24Pmax/Pmin), we can ensure that the Nash equilibrium t produced by our algorithm satisfies nX i=1 EPVi (s) − nX i=1 EPVi (t) ≤ 24Pmaxδn ≤ nPmin ≤ M(G), i.e., for this value of δ we have Pn i=1 EPVi (t) ≥ (1 − )M(G).",
                "Recall that the running time of our algorithm is O(nN3 ), where N has to be selected to satisfy N > 5n, N = 1/δ.",
                "It follows that if Pmin > 0, Pmax/Pmin = poly(n), we can choose N so that our algorithm provides a multiplicative approximation guarantee and runs in time polynomial in n and 1/ . 5.",
                "BOUNDED PAYOFF NASH EQUILIBRIA Another natural way to define what is a good Nash equilibrium is to require that each players expected payoff exceeds a certain threshold.",
                "These thresholds do not have to be the same for all players.",
                "In this case, in addition to the payoff matrices of the n players, we are given n numbers T1, . . . , Tn, and our goal is to find a Nash equilibrium in which the payoff of player i is at least Ti, or report that no such Nash equilibrium exists.",
                "It turns out that we can design an FPTAS for this problem using the same techniques as in the previous section.",
                "THEOREM 5.",
                "Given a graphical game G on an n-vertex path and n rational numbers T1, . . . , Tn, suppose that there exists a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. Then for any > 0 we can find in time O(max{nP3 max/ 3 , n4 / 3 }) a strategy profile s such that s is a Nash equilibrium for G and EPVi (s ) ≥ Ti − for i = 1, . . . , n. PROOF.",
                "The proof is similar to that of Theorem 3.",
                "First, we construct the best response policies for all players, choose N > 5n, and construct the sets Xi, i = 1, . . . , n, as described in the proof of Theorem 3.",
                "Consider a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. We construct a strategy profile ti = max{xj i | xj i ≤ si} and use the same argument as in the proof of Theorem 3 to show that t is a Nash equilibrium for G. By Lemma 3, we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ, so choosing δ < /(24Pmax), or, equivalently, N > max{5n, 24Pmax/ }, we can ensure EPVi (t) ≥ Ti − for i = 1, . . . , n. Now, we will use dynamic programming to find a discrete Nash equilibrium that satisfies EPVi (t) ≥ Ti − for i = 1, . . . , n. As t is a discrete strategy profile, our algorithm will succeed whenever there is a strategy profile s with EPVi (s) ≥ Ti− for i = 1, . . . , n. Let zl,k i = 1 if there is a discrete strategy profile such that for any j < i the strategy of the player Vj is a potential best response to the strategy of Vj+1, the expected payoff of Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "Otherwise, let zl,k i = 0.",
                "We can compute zl,k i , i = 1, . . . , n; k, l = 1, . . . , N inductively, as follows.",
                "We have zl,k 1 = 1 for k, l = 1, . . . , N. Now, suppose that we have already computed zl,k j for all j < i; k, l = 1, . . . , N. To compute zk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this 168 is not the case, clearly, zk,l i = 0.",
                "Otherwise, consider the set Y = Xi−2 ∩pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "It has been shown in the proof of Theorem 3 that Y = ∅.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "If there exists an xj i−2 ∈ Y such that zj,l i−1 = 1 and pjlk ≥ Ti−2 − , set zl,k i = 1.",
                "Otherwise, set zl,k i = 0.",
                "Having computed zl,k n , l, k = 1, . . . , N, we check if zl,k n = 1 for some pair (l, k). if such a pair of indices exists, we instruct Vn to play xk n and use dynamic programming techniques (or, equivalently, the downstream pass of the algorithm of [13]) to find a Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n (recall that Vn is a dummy player, i.e., we assume Tn = 0, EPn(s ) = 0 for any choice of s ).",
                "If zl,k n = 0 for all l, k = 1, . . . , N, there is no discrete Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n and hence no Nash equilibrium s (not necessarily discrete) such that EPVi (s) ≥ Ti for i = 1, . . . , n. The running time analysis is similar to that for Theorem 3; we conclude that the running time of our algorithm is O(nN3 ) = O(max{nP3 max/ 3 , n4 / 3 }).",
                "REMARK 1.",
                "Theorem 5 can be extended to trees of bounded degree in the same way as Theorem 4. 5.1 Exact Computation Another approach to finding Nash equilibria with bounded payoffs is based on inductively computing the subsets of the best response policies of all players so as to exclude the points that do not provide sufficient payoffs to some of the players.",
                "Formally, we say that a strategy v of the player V is a potential best response to a strategy w of its parent W with respect to a threshold vector T = (T1, . . . , Tn), (denoted by v ∈ pbrV (w, T)) if there is an equilibrium in the instance G(V,W ),W =w in which V plays mixed strategy v and the payoff to any player Vi downstream of V (including V ) is at least Ti.",
                "The best response policy for V with respect to a threshold vector T is defined as B(W, V, T) = {(w, v) | v ∈ pbrV (w, T), w ∈ [0, 1]}.",
                "It is easy to see that if any of the sets B(Vj, Vj−1, T), j = 1, . . . , n, is empty, it means that it is impossible to provide all players with expected payoffs prescribed by T. Otherwise, one can apply the downstream pass of the original algorithm of [13] to find a Nash equilibrium.",
                "As we assume that Vn is a dummy vertex whose payoff is identically 0, the Nash equilibrium with these payoffs exists as long as Tn ≤ 0 and B(Vn, Vn−1, T) is not empty.",
                "Using the techniques developed in [9], it is not hard to show that for any j = 1, . . . , n, the set B(Vj , Vj−1, T) consists of a finite number of rectangles, and one can compute B(Vj+1, Vj , T) given B(Vj , Vj−1, T).",
                "The advantage of this approach is that it allows us to represent all Nash equilibria that provide required payoffs to the players.",
                "However, it is not likely to be practical, since it turns out that the rectangles that appear in the representation of B(Vj , Vj−1, T) may have irrational coordinates.",
                "CLAIM 6.",
                "There exists a graphical game G on a 3-vertex path UV W and a vector T = (T1, T2, T3) such that B(V, W, T) cannot be represented as a union of a finite number of rectangles with rational coordinates.",
                "PROOF.",
                "We define the payoffs to the players in G as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = uw, P1 (V ) = P0 (V ) + w − .8u − .1, where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = .8u + .1; observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "It is not hard to see that we have B(W, V ) = [0, .1]×{0} ∪ [.1, .9]×[0, 1] ∪ [.9, 1]×{1}.",
                "The payoffs to W are not important for our construction; for example, set P0(W ) = P0(W ) = 0.",
                "Now, set T = (0, 1/8, 0), i.e., we are interested in Nash equilibria in which V s expected payoff is at least 1/8.",
                "Suppose w ∈ [0, 1].",
                "The player V can play a mixed strategy v when W is playing w as long as U plays u = f−1 (w) = 5w/4 − 1/8 (to ensure that V is indifferent between 0 and 1) and P0 (V ) = P1 (V ) = uw = w(5w/4 − 1/8) ≥ 1/8.",
                "The latter condition is satisfied if w ≤ (1 − √ 41)/20 < 0 or w ≥ (1 + √ 41)/20.",
                "Note that we have .1 < (1 + √ 41)/20 < .9.",
                "For any other value of w, any strategy of U either makes V prefer one of the pure strategies or does not provide it with a sufficient expected payoff.",
                "There are also some values of w for which V can play a pure strategy (0 or 1) as a potential best response to W and guarantee itself an expected payoff of at least 1/8; it can be shown that these values of w form a finite number of segments in [0, 1].",
                "We conclude that any representation of B(W, V, T) as a union of a finite number of rectangles must contain a rectangle of the form [(1 + √ 41)/20, w ]×[v , v ] for some w , v , v ∈ [0, 1].",
                "On the other hand, it can be shown that for any integer payoff matrices and threshold vectors and any j = 1, . . . , n − 1, the sets B(Vj+1, Vj, T) contain no rectangles of the form [u , u ]×{v} or {v}×[w , w ], where v ∈ R\\Q.",
                "This means that if B(Vn, Vn−1, T) is non-empty, i.e., there is a Nash equilibrium with payoffs prescribed by T, then the downstream pass of the algorithm of [13] can always pick a strategy profile that forms a Nash equilibrium, provides a payoff of at least Ti to the player Vi, and has no irrational coordinates.",
                "Hence, unlike in the case of the Nash equilibrium that maximizes the social welfare, working with irrational numbers is not necessary, and the fact that the algorithm discussed in this section has to do so can be seen as an argument against using this approach. 6.",
                "OTHER CRITERIA FOR SELECTING A NASH EQUILIBRIUM In this section, we consider several other criteria that can be useful in selecting a Nash equilibrium. 6.1 Combining welfare maximization with bounds on payoffs In many real life scenarios, we want to maximize the social welfare subject to certain restrictions on the payoffs to individual players.",
                "For example, we may want to ensure that no player gets a negative expected payoff, or that the expected payoff to player i is at least Pi max − ξ, where Pi max is the maximum entry of is payoff matrix and ξ is a fixed parameter.",
                "Formally, given a graphical game G and a vector T1, . . . , Tn, let S be the set of all Nash equilibria s of G that satisfy Ti ≤ EPVi (s) for i = 1, . . . , n, and let ˆs = argmaxs∈S EP(s).",
                "If the set S is non-empty, we can find a Nash equilibrium ˆs that is -close to satisfying the payoff bounds and is within from ˆs with respect to the total payoff by combining the algorithms of Section 4 and Section 5.",
                "Namely, for a given > 0, choose δ as in the proof of Theorem 3, and let Xi be the set of all discrete strategies of player Vi (for a 169 formal definition, see the proof of Theorem 3).",
                "Combining the proofs of Theorem 3 and Theorem 5, we can see that the strategy profile ˆt given by ˆti = max{xj i | xj i ≤ ˆsi} satisfies EPVi (ˆt) ≥ Ti − , |EP(ˆs) − EP(ˆt)| ≤ .",
                "Define ˆml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj, j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1 and the payoff to player Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The ˆml,k i can be computed by dynamic programming similarly to the ml,k i and zl,k i in the proofs of Theorems 3 and 5.",
                "Finally, as in the proof of Theorem 3, we use ml,k n to select the best discrete Nash equilibrium subject to the payoff constraints.",
                "Even more generally, we may want to maximize the total payoff to a subset of players (who are assumed to be able to redistribute the profits fairly among themselves) while guaranteeing certain expected payoffs to (a subset of) the other players.",
                "This problem can be handled similarly. 6.2 A minimax approach A more egalitarian measure of the quality of a Nash equilibrium is the minimal expected payoff to a player.",
                "The optimal solution with respect to this measure is a Nash equilibrium in which the minimal expected payoff to a player is maximal.",
                "To find an approximation to such a Nash equilibrium, we can combine the algorithm of Section 5 with binary search on the space of potential lower bounds.",
                "Note that the expected payoff to any player Vi given a strategy s always satisfies −Pmax ≤ EPVi (s) ≤ Pmax.",
                "For a fixed > 0, we start by setting T = −Pmax, T = Pmax, T∗ = (T + T )/2.",
                "We then run the algorithm of Section 5 with T1 = · · · = Tn = T∗ .",
                "If the algorithm succeeds in finding a Nash equilibrium s that satisfies EPVi (s ) ≥ T∗ − for all i = 1, . . . , n, we set T = T∗ , T∗ = (T + T )/2; otherwise, we set T = T∗ , T∗ = (T + T )/2 and loop.",
                "We repeat this process until |T − T | ≤ .",
                "It is not hard to check that for any p ∈ R, if there is a Nash equilibrium s such that mini=1,...,n EPVi (s) ≥ p, then our algorithm outputs a Nash equilibrium s that satisfies mini=1,...,n EPVi (s) ≥ p−2 .",
                "The running time of our algorithm is O(max{nP3 max log −1 / 3 , n4 log −1 / 3 }). 6.3 Equalizing the payoffs When the players payoff matrices are not very different, it is reasonable to demand that the expected payoffs to the players do not differ by much either.",
                "We will now show that Nash equilibria in this category can be approximated in polynomial time as well.",
                "Indeed, observe that the algorithm of Section 5 can be easily modified to deal with upper bounds on individual payoffs rather than lower bounds.",
                "Moreover, we can efficiently compute an approximation to a Nash equilibrium that satisfies both the upper bound and the lower bound for each player.",
                "More precisely, suppose that we are given a graphical game G, 2n rational numbers T1, . . . , Tn, T1, . . . , Tn and > 0.",
                "Then if there exists a strategy profile s such that s is a Nash equilibrium for G and Ti ≤ EPVi (s) ≤ Ti for i = 1, . . . , n, we can find a strategy profile s such that s is a Nash equilibrium for G and Ti − ≤ EPVi (s ) ≤ Ti + for i = 1, . . . , n. The modified algorithm also runs in time O(max{nP3 max/ 3 , [4]n4 / 3 }).",
                "This observation allows us to approximate Nash equilibria in which all players expected payoffs differ by at most ξ for any fixed ξ > 0.",
                "Given an > 0, we set T1 = · · · = Tn = −Pmax, T1 = · · · = Tn = −Pmax + ξ + , and run the modified version of the algorithm of Section 5.",
                "If it fails to find a solution, we increment all Ti, Ti by and loop.",
                "We continue until the algorithm finds a solution, or Ti ≥ Pmax.",
                "Suppose that there exists a Nash equilibrium s that satisfies |EPVi (s) − EPVj (s)| ≤ ξ for all i, j = 1, . . . , n. Set r = mini=1,...,n EPVi (s); we have r ≤ EPVi (s) ≤ r + ξ for all i = 1, . . . , n. There exists a k ≥ 0 such that −Pmax + (k − 1) ≤ r ≤ −Pmax + k .",
                "During the kth step of the algorithm, we set T1 = · · · = Tn = −Pmax +(k−1) , i.e., we have r− ≤ Ti ≤ r, r + ξ ≤ Ti ≤ r + ξ + .",
                "That is, the Nash equilibrium s satisfies Ti ≤ r ≤ EPVi (s) ≤ r + ξ ≤ Ti , which means that when Ti is set to −Pmax + (k − 1) , our algorithm is guaranteed to output a Nash equilibrium t that satisfies r − 2 ≤ Ti − ≤ EPVi (t) ≤ Ti + ≤ r +ξ +2 .",
                "We conclude that whenever such a Nash equilibrium s exists, our algorithm outputs a Nash equilibrium t that satisfies |EPVi (t) − EPVj (t)| ≤ ξ + 4 for all i, j = 1, . . . , n. The running time of this algorithm is O(max{nP3 max/ 4 , n4 / 4 }).",
                "Note also that we can find the smallest ξ for which such a Nash equilibrium exists by combining this algorithm with binary search over the space ξ = [0, 2Pmax].",
                "This identifies an approximation to the fairest Nash equilibrium, i.e., one in which the players expected payoffs differ by the smallest possible amount.",
                "Finally, note that all results in this section can be extended to bounded-degree trees. 7.",
                "CONCLUSIONS We have studied the problem of equilibrium selection in graphical games on bounded-degree trees.",
                "We considered several criteria for selecting a Nash equilibrium, such as maximizing the social welfare, ensuring a lower bound on the expected payoff of each player, etc.",
                "First, we focused on the algebraic complexity of a social welfare-maximizing Nash equilibrium, and proved strong negative results for that problem.",
                "Namely, we showed that even for graphical games on paths, any algebraic number α ∈ [0, 1] may be the only strategy available to some player in all social welfaremaximizing Nash equilibria.",
                "This is in sharp contrast with the fact that graphical games on trees always possess a Nash equilibrium in which all players strategies are rational numbers.",
                "We then provided approximation algorithms for selecting Nash equilibria with special properties.",
                "While the problem of finding approximate Nash equilibria for various classes of games has received a lot of attention in recent years, most of the existing work aims to find -Nash equilibria that satisfy (or are -close to satisfying) certain properties.",
                "Our approach is different in that we insist on outputting an exact Nash equilibrium, which is -close to satisfying a given requirement.",
                "As argued in the introduction, there are several reasons to prefer a solution that constitutes an exact Nash equilibrium.",
                "Our algorithms are fully polynomial time approximation schemes, i.e., their running time is polynomial in the inverse of the approximation parameter , though they may be pseudopolynomial with respect to the input size.",
                "Under mild restrictions on the inputs, they can be modified to be truly polynomial.",
                "This is the strongest positive result one can derive for a problem whose exact solutions may be hard to represent, as is the case for many of the problems considered here.",
                "While we prove our results for games on a path, they can be generalized to any tree for which the best response policies have compact representations as unions of rectangles.",
                "In the full version of the paper we describe our algorithms for the general case.",
                "Further work in this vein could include extensions to the kinds of guarantees sought for Nash equilibria, such as guaranteeing total payoffs for subsets of players, selecting equilibria in which some players are receiving significantly higher payoffs than their peers, etc.",
                "At the moment however, it is perhaps more important to inves170 tigate whether Nash equilibria of graphical games can be computed in a decentralized manner, in contrast to the algorithms we have introduced here.",
                "It is natural to ask if our results or those of [9] can be generalized to games with three or more actions.",
                "However, it seems that this will make the analysis significantly more difficult.",
                "In particular, note that one can view the bounded payoff games as a very limited special case of games with three actions per player.",
                "Namely, given a two-action game with payoff bounds, consider a game in which each player Vi has a third action that guarantees him a payoff of Ti no matter what everyone else does.",
                "Then checking if there is a Nash equilibrium in which none of the players assigns a nonzero probability to his third action is equivalent to checking if there exists a Nash equilibrium that satisfies the payoff bounds in the original game, and Section 5.1 shows that finding an exact solution to this problem requires new ideas.",
                "Alternatively it may be interesting to look for similar results in the context of correlated equilibria (CE), especially since the best CE may have higher value (total expected payoff) than the best NE.",
                "The ratio between these values is called the mediation value in [1].",
                "It is known from [1] that the mediation value of 2-player, 2-action games with non-negative payoffs is at most 4 3 , and they exhibit a 3-player game for which it is infinite.",
                "Furthermore, a 2-player, 3action example from [1] also has infinite mediation value. 8.",
                "REFERENCES [1] I. Ashlagi, D. Monderer and M. Tenneholtz, On the Value of Correlation, Proceedings of Dagstuhl seminar 05011 (2005) [2] R. Aumann, Subjectivity and Correlation in Randomized Strategies, Journal of Mathematical Economics 1 pp. 67-96 (1974) [3] B. Blum, C. R. Shelton, and D. Koller, A Continuation Method for Nash Equilibria in Structured Games, Proceedings of IJCAI03 [4] X. Chen, X. Deng and S. Teng, Computing Nash Equilibria: Approximation and Smoothed Complexity, Proceedings of FOCS06 [5] X. Chen, X. Deng, Settling the Complexity of 2-Player Nash-Equilibrium, Proceedings of FOCS06 [6] V. Conitzer and T. Sandholm, Complexity Results about Nash Equilibria, Proceedings of IJCAI03 [7] C. Daskalakis, P. W. Goldberg and C. H. Papadimitriou, The Complexity of Computing a Nash Equilibrium, Proceedings of STOC06 [8] R. S. Datta, Universality of Nash Equilibria, Mathematics of Operations Research 28:3, 2003 [9] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Nash Equilibria in Graphical games on Trees Revisited, Proceedings of ACM EC06 [10] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Computing Good Nash Equilibria in Graphical Games, http://arxiv.org/abs/cs.GT/0703133 [11] I. Gilboa and E. Zemel, Nash and Correlated Equilibria: Some Complexity Considerations, Games and Economic Behavior, 1 pp. 80-93 (1989) [12] P. W. Goldberg and C. H. Papadimitriou, Reducibility Among Equilibrium Problems, Proceedings of STOC06 [13] M. Kearns, M. Littman, and S. Singh, Graphical Models for Game Theory, Proceedings of UAI01 [14] M. Littman, M. Kearns, and S. Singh, An Efficient Exact Algorithm for Singly Connected Graphical Games, Proceedings of NIPS01 [15] R. Lipton and E. Markakis, Nash Equilibria via Polynomial Equations, Proceedings of LATIN04 [16] L. Ortiz and M. Kearns, Nash Propagation for Loopy Graphical Games, Proceedings of NIPS03 [17] C.H.",
                "Papadimitriou, Computing Correlated Equilibria in Multi-Player Games, Proceedings of STOC05 [18] C.H.",
                "Papadimitriou and T. Roughgarden, Computing Equilibria in Multi-Player Games, Proceedings of SODA05 [19] D. Vickrey and D. Koller, Multi-agent Algorithms for Solving Graphical Games, Proceedings of AAAI02 171"
            ],
            "original_annotated_samples": [
                "They propose a generic algorithm for finding Nash equilibria that can be specialized in two ways: an <br>exponential-time algorithm</br> for finding an (exact) Nash equilibrium, and a fully polynomial time approximation scheme (FPTAS) for finding an approximation to a Nash equilibrium."
            ],
            "translated_annotated_samples": [
                "Proponen un algoritmo genérico para encontrar equilibrios de Nash que puede ser especializado de dos maneras: un <br>algoritmo de tiempo exponencial</br> para encontrar un equilibrio de Nash (exacto) y un esquema de aproximación de tiempo polinómico completo (FPTAS) para encontrar una aproximación a un equilibrio de Nash."
            ],
            "translated_text": "Calcular buenos equilibrios de Nash en juegos gráficos ∗ Edith Elkind Universidad Hebrea de Jerusalén, Israel, y Universidad de Southampton, Southampton, SO17 1BJ, Reino Unido. Leslie Ann Goldberg Universidad de Liverpool Liverpool L69 3BX, Reino Unido. Paul Goldberg Universidad de Liverpool Liverpool L69 3BX, Reino Unido. RESUMEN Este artículo aborda el problema de la selección justa de equilibrios en juegos gráficos. Nuestro enfoque se basa en la estructura de datos llamada política de mejor respuesta, propuesta por Kearns et al. [13] como una forma de representar todos los equilibrios de Nash de un juego gráfico. En [9], se demostró que la política de mejor respuesta tiene un tamaño polinómico siempre y cuando el grafo subyacente sea un camino. En este artículo, demostramos que si el grafo subyacente es un árbol de grado acotado y la política de mejor respuesta tiene un tamaño polinómico, entonces existe un algoritmo eficiente que construye un equilibrio de Nash que garantiza ciertos pagos a todos los participantes. Otro concepto de solución atractivo es un equilibrio de Nash que maximiza el bienestar social. Mostramos que, si bien calcular exactamente lo último es inviable (demostramos que resolver este problema puede implicar números algebraicos de un grado arbitrariamente alto), existe un FPTAS para encontrar dicho equilibrio siempre y cuando la política de mejor respuesta tenga un tamaño polinómico. Estos dos algoritmos pueden combinarse para producir equilibrios de Nash que satisfacen varios criterios de equidad. Categorías y Descriptores de Asignaturas F.2 [Teoría de la Computación]: Análisis de Algoritmos y Complejidad de Problemas; J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento - Economía Términos Generales Algoritmos, Economía, Teoría 1. INTRODUCCIÓN En una gran comunidad de agentes, es poco probable que el comportamiento de un agente tenga un efecto directo en la mayoría de los otros agentes: más bien, solo serán afectados los agentes que estén lo suficientemente cerca de él. Sin embargo, a medida que estos agentes responden adaptando su comportamiento, más agentes sentirán las consecuencias y eventualmente las decisiones tomadas por un solo agente se propagarán por toda la comunidad. Esta es la intuición detrás de los juegos gráficos, los cuales fueron introducidos por Kearns, Littman y Singh en [13] como un esquema de representación compacto para juegos con muchos jugadores. En un juego gráfico de n jugadores, a cada jugador se le asocia un vértice de un grafo subyacente G, y las ganancias de cada jugador dependen de su acción, así como de las acciones de sus vecinos en el grafo. Si el grado máximo de G es Δ, y cada jugador tiene dos acciones disponibles, entonces el juego se puede representar usando n2Δ+1 números. Por el contrario, necesitamos n^2 números para representar un juego general de n jugadores y 2 acciones, lo cual solo es práctico para valores pequeños de n. Para juegos gráficos con Δ constante, el tamaño del juego es lineal en n. Uno de los problemas más naturales para un juego gráfico es el de encontrar un equilibrio de Nash, cuya existencia se deriva del célebre teorema de Nash (ya que los juegos gráficos son solo un caso especial de juegos de n jugadores). El primer intento de abordar este problema se realizó en [13], donde los autores consideran juegos gráficos con dos acciones por jugador en los que el grafo subyacente es un árbol de grado acotado. Proponen un algoritmo genérico para encontrar equilibrios de Nash que puede ser especializado de dos maneras: un <br>algoritmo de tiempo exponencial</br> para encontrar un equilibrio de Nash (exacto) y un esquema de aproximación de tiempo polinómico completo (FPTAS) para encontrar una aproximación a un equilibrio de Nash. Para cualquier > 0, este algoritmo produce un equilibrio de Nash, que es un perfil estratégico en el que ningún jugador puede mejorar su pago más que al cambiar unilateralmente su estrategia. Si bien los equilibrios de Nash aproximados suelen ser más fáciles de calcular que los equilibrios de Nash exactos, este concepto de solución tiene varias desventajas. Primero, es posible que los jugadores sean sensibles a una pequeña pérdida en las ganancias, por lo que el perfil estratégico que es un equilibrio de Nash no será estable. Esto será así incluso si solo hay un pequeño subconjunto de jugadores que son extremadamente sensibles al precio, y para una gran población de jugadores puede ser difícil elegir un valor que satisfaga a todos. Segundo, los perfiles estratégicos que están cerca de ser equilibrios de Nash pueden ser mucho mejores con respecto a las propiedades consideradas que los equilibrios de Nash exactos. Por lo tanto, la aproximación al valor de la mejor solución que corresponde a un equilibrio de Nash aproximado puede no ser indicativa de lo que se puede lograr bajo un equilibrio de Nash exacto. Esto es especialmente importante si el propósito de la solución aproximada es proporcionar un buen punto de referencia para un sistema de agentes egoístas, ya que el punto de referencia implícito por un equilibrio de Nash puede ser poco realista. Por estas razones, en este artículo nos enfocamos en el problema de calcular equilibrios de Nash exactos. Basándose en las ideas de [14], Elkind et al. [9] mostraron cómo encontrar un equilibrio de Nash (exacto) en tiempo polinómico cuando el grafo subyacente tiene grado 2 (es decir, cuando el grafo es una colección de caminos y ciclos). Por el contrario, encontrar un equilibrio de Nash en un grafo general con grado acotado parece ser computacionalmente intratable: se ha demostrado (ver [5, 12, 7]) que es completo para la clase de complejidad PPAD. [9] extiende este resultado de dificultad al caso en el que el grafo subyacente tiene un ancho de camino acotado. Un juego gráfico puede no tener un equilibrio de Nash único, de hecho, puede tener exponencialmente muchos. Además, algunos equilibrios de Nash son más deseables que otros. En lugar de tener un algoritmo que simplemente encuentre algún equilibrio de Nash, nos gustaría tener algoritmos para encontrar equilibrios de Nash con diversas propiedades socialmente deseables, como maximizar el pago total o distribuir las ganancias de manera justa. Una propiedad útil de la estructura de datos de [13] es que representa simultáneamente el conjunto de todos los equilibrios de Nash del juego subyacente. Si esta representación tiene tamaño polinómico (como es el caso de los caminos, como se muestra en [9]), se puede esperar extraer de ella un equilibrio de Nash con las propiedades deseadas. De hecho, en [13] los autores mencionan que esto es posible si uno está interesado en encontrar un equilibrio de Nash (aproximado). El objetivo de este artículo es extender esto a equilibrios de Nash exactos. 1.1 Nuestros Resultados En este artículo, estudiamos juegos gráficos de n jugadores y 2 acciones en árboles de grado acotado para los cuales la estructura de datos de [13] tiene tamaño polinómico en n. Nos enfocamos en el problema de encontrar equilibrios de Nash exactos con ciertas propiedades socialmente deseables. En particular, mostramos cómo encontrar un equilibrio de Nash que maximiza (casi) el bienestar social, es decir, la suma de las ganancias de los jugadores, y mostramos cómo encontrar un equilibrio de Nash que satisface (casi) los límites de ganancias prescritos para todos los jugadores. Los juegos gráficos en árboles de grado acotado tienen una estructura algebraica simple. Una característica atractiva, que se desprende de [13], es que cada juego de este tipo tiene un equilibrio de Nash en el cual la estrategia de cada jugador es un número racional. La sección 3 estudia la estructura algebraica de aquellos equilibrios de Nash que maximizan el bienestar social. Demostramos (Teoremas 1 y 2) que, sorprendentemente, el conjunto de equilibrios de Nash que maximizan el bienestar social es más complejo. De hecho, para cualquier número algebraico α ∈ [0, 1] con grado a lo sumo n, exhibimos un juego gráfico en un camino de longitud O(n) tal que, en el equilibrio de Nash único que maximiza el bienestar social de este juego, uno de los jugadores juega la estrategia mixta α. Este resultado muestra que puede ser difícil representar un equilibrio de Nash óptimo. Parece ser una característica novedosa del escenario que consideramos aquí, que un equilibrio de Nash óptimo es difícil de representar, en una situación donde es fácil encontrar y representar un equilibrio de Nash. Dado que el equilibrio de Nash que maximiza el bienestar social puede ser difícil de representar eficientemente, debemos conformarnos con una aproximación. Sin embargo, la diferencia crucial entre nuestro enfoque y el de los trabajos anteriores [13, 16, 19] es que requerimos que nuestro algoritmo produzca un equilibrio de Nash exacto, aunque no necesariamente el óptimo con respecto a nuestros criterios. En la Sección 4, describimos un algoritmo que cumple con este requisito. Específicamente, proponemos un algoritmo que, para cualquier > 0, encuentra un equilibrio de Nash cuya recompensa total está dentro de de lo óptimo. Se ejecuta en tiempo polinómico (Teorema 3,4) para cualquier juego gráfico en un árbol de grado acotado para el cual la estructura de datos propuesta por [13] (la llamada política de mejor respuesta, definida a continuación) tiene un tamaño poli(n) (nota que, como se muestra en [9], esto siempre es el caso cuando el grafo subyacente es un camino). Un resultado relacionado en un contexto diferente fue obtenido por Datta [8], quien muestra que los juegos de n jugadores con 2 acciones son universales en el sentido de que cualquier variedad algebraica real puede ser representada como el conjunto de equilibrios de Nash totalmente mixtos de tales juegos. Precisamente, el tiempo de ejecución de nuestro algoritmo es polinómico en n, Pmax y 1/, donde Pmax es el valor absoluto máximo de una entrada de una matriz de pagos, es decir, es un algoritmo seudopolinómico, aunque es completamente polinómico con respecto a . Mostramos (Sección 4.1) que bajo ciertas restricciones en las matrices de pagos, el algoritmo puede ser transformado en un algoritmo de tiempo polinómico (verdaderamente) que produce un equilibrio de Nash cuya ganancia total está dentro de un factor de 1 − del óptimo. En la Sección 5, consideramos el problema de encontrar un equilibrio de Nash en el que la ganancia esperada de cada jugador Vi supere un umbral prescrito Ti. Usando la idea de la Sección 4, presentamos (Teorema 5) un esquema de aproximación en tiempo polinómico completo para este problema. El tiempo de ejecución del algoritmo está acotado por un polinomio en n, Pmax y . Si la instancia tiene un equilibrio de Nash que cumple con los umbrales prescritos, entonces el algoritmo construye un equilibrio de Nash en el que la recompensa esperada de cada jugador Vi es al menos Ti − . En la Sección 6, presentamos otros criterios naturales para seleccionar un buen equilibrio de Nash y mostramos que los algoritmos descritos en las dos secciones anteriores pueden ser utilizados como bloques de construcción para encontrar equilibrios de Nash que cumplan con estos criterios. En particular, en la Sección 6.1 mostramos cómo encontrar un equilibrio de Nash que aproxima el máximo bienestar social, garantizando que la ganancia de cada individuo esté cerca de un umbral prescrito. En la Sección 6.2 mostramos cómo encontrar un equilibrio de Nash que maximiza (casi) al máximo el pago individual mínimo. Finalmente, en la Sección 6.3 mostramos cómo encontrar un equilibrio de Nash en el que las ganancias individuales de los jugadores están cerca unas de otras. 1.2 Trabajo Relacionado Nuestro esquema de aproximación (Teorema 3 y Teorema 4) muestra un contraste entre los juegos que estudiamos y los juegos de n acciones de dos jugadores, para los cuales los problemas correspondientes suelen ser intratables. Para juegos de n acciones de dos jugadores, el problema de encontrar equilibrios de Nash con propiedades especiales suele ser NP-duro. En particular, este es el caso de los equilibrios de Nash que maximizan el bienestar social [11, 6]. Además, es probable que sea intratable incluso aproximarse a tales equilibrios. En particular, Chen, Deng y Teng [4] muestran que existe algún , polinomio inverso en n, para el cual calcular un equilibrio de Nash en juegos de 2 jugadores con n acciones por jugador es PPAD-completo. Lipton y Markakis [15] estudian las propiedades algebraicas de los equilibrios de Nash, y señalan que los algoritmos estándar de eliminación de cuantificadores pueden ser utilizados para resolverlos. Ten en cuenta que estos algoritmos no son de tiempo polinómico en general. Los juegos que estudiamos en este artículo tienen equilibrios de Nash computables en tiempo polinómico en los que todas las estrategias mixtas son números racionales, pero un equilibrio de Nash óptimo puede incluir necesariamente estrategias mixtas con un alto grado algebraico. Un equilibrio correlacionado (CE) (introducido por Aumann [2]) es una distribución sobre vectores de acciones de jugadores con la propiedad de que si a cualquier jugador se le dice su propia acción (el valor de su propio componente) de un vector generado por esa distribución, entonces no puede aumentar su ganancia esperada cambiando su acción. Cualquier equilibrio de Nash es una EC, pero la afirmación contraria no se cumple en general. A diferencia de los equilibrios de Nash, los equilibrios correlacionados se pueden encontrar para juegos gráficos de bajo grado (así como para otras clases de juegos multijugador representados de manera concisa) en tiempo polinómico [17]. Pero, para juegos gráficos es NP-duro encontrar un equilibrio correlacionado que maximice la recompensa total [18]. Sin embargo, los resultados de NP-dificultad se aplican a juegos más generales que el que consideramos aquí, en particular los grafos no son árboles. Del [2] también se sabe que existen juegos de 2 jugadores y 2 acciones para los cuales el pago total esperado 163 del mejor equilibrio correlacionado es mayor que el mejor equilibrio de Nash, y discutimos este tema más a fondo en la Sección 7.2. CONSIDERACIONES PRELIMINARES Y NOTACIÓN Consideramos juegos gráficos en los que el grafo subyacente G es un árbol de n vértices, en el que cada vértice tiene a lo sumo Δ hijos. Cada vértice tiene dos acciones, que están representadas por 0 y 1. Una estrategia mixta de un jugador V se representa como un único número v ∈ [0, 1], que denota la probabilidad de que V seleccione la acción 1. Para los propósitos del algoritmo, el árbol está enraizado de manera arbitraria. Para mayor comodidad, asumimos sin pérdida de generalidad que la raíz tiene un solo hijo y que su recompensa es independiente de la acción elegida por el hijo. Esto se puede lograr primero eligiendo una raíz arbitraria del árbol, y luego agregando un padre ficticio de esta raíz, asignándole una función de recompensa constante, por ejemplo, 0. Dado un borde (V, W) del árbol G, y una estrategia mixta w para W, sea G(V,W), W=w la instancia obtenida de G mediante (1) eliminar todos los nodos Z que están separados de V por W (es decir, todos los nodos Z tales que el camino de Z a V pasa por W), y (2) restringir la instancia de modo que se requiera que W juegue la estrategia mixta w. Definición 1. Supongamos que (V, W) es una arista del árbol, que v es una estrategia mixta para V y que w es una estrategia mixta para W. Decimos que v es una mejor respuesta potencial a w (denotado por v ∈ pbrV (w)) si hay un equilibrio en la instancia G(V,W), W = w en el que V tiene una estrategia mixta v. Definimos la política de mejor respuesta para V, dada W, como B(W, V) = {(w, v) | v ∈ pbrV (w), w ∈ [0, 1]}. El paso ascendente del algoritmo genérico de [13] considera cada nodo V (que no sea la raíz) y calcula la política de mejor respuesta para V dada su padre. Con las suposiciones anteriores sobre la raíz, el paso aguas abajo es sencillo. La raíz selecciona una estrategia mixta w para la raíz W y una estrategia mixta v ∈ B(W, V) para cada hijo V de W. Indica a cada niño V que juegue v. El resto del pase descendente es recursivo. Cuando un nodo V recibe instrucciones de su padre para adoptar la estrategia mixta v, realiza lo siguiente para cada hijo U: encuentra un par (v, u) ∈ B(V, U) (con el mismo valor de v que le fue dado por su padre) e instruye a U a jugar u. La mejor política de respuesta para un vértice U dado su padre V puede representarse como una unión de rectángulos, donde un rectángulo está definido por un par de intervalos cerrados (IV, IU) y consiste en todos los puntos en IV × IU; puede ser el caso de que uno o ambos de los intervalos IV e IU consistan en un solo punto. Para realizar cálculos en B(V, U) y para limitar el número de rectángulos, [9] utilizó el concepto de un punto de evento, el cual se define de la siguiente manera. Para cualquier conjunto A ⊆ [0, 1]2 que se represente como una unión de un número finito de rectángulos, decimos que un punto u ∈ [0, 1] en el eje U es un punto de evento U de A si u = 0 o u = 1 o la representación de A contiene un rectángulo de la forma IV × IU y u es un extremo de IU; los puntos de evento V se definen de manera similar. Para muchos juegos considerados en este documento, el grafo subyacente es un camino de n vértices, es decir, un grafo G = (V, E) con V = {V1, . . . , Vn} y E = {(V1, V2), . . . , (Vn−1, Vn)}. En [9], se demostró que para tales juegos, la política de mejor respuesta tiene solo un número polinomial de rectángulos. La prueba de que el número de rectángulos en B(Vj+1, Vj) es polinomial procede primero mostrando que el número de puntos de evento en B(Vj+1, Vj) no puede exceder el número de puntos de evento en B(Vj, Vj-1) en más de 2, y utilizando este hecho para acotar el número de rectángulos en B(Vj+1, Vj). Sean P0 (V) y P1 (V) las ganancias esperadas para V cuando juega 0 y 1, respectivamente. Tanto P0 (V) como P1 (V) son funciones multilineales de las estrategias de los vecinos de V. En lo que sigue, usaremos frecuentemente la siguiente observación simple. AFIRMACIÓN 1. Para un vértice V con un único hijo U y padre W, dados cualquier A, B, C, D ∈ Q, se pueden seleccionar las recompensas para V de manera que P0(V) = Auw + Bu + Cw + D, P1(V) = Auw + Bu + Cw + D. Además, si todos los valores de A, B, C, D son enteros, los pagos para V también son enteros. PRUEBA. Daremos la prueba para P0 (V); la prueba para P1 (V) es similar. Para i, j = 0, 1, sea Pij la ganancia para V cuando U juega i, V juega 0 y W juega j. Tenemos P0 (V) = P00(1 − u)(1 − w) + P10u(1 − w) + P01(1 − u)w + P11uw. Tenemos que seleccionar los valores de Pij de manera que P00 − P10 − P01 + P11 = A, −P00 + P10 = B, −P00 + P01 = C, P00 = D. Es fácil ver que la solución única está dada por P00 = D, P01 = C + D, P10 = B + D, P11 = A + B + C + D. La entrada a todos los algoritmos considerados en este documento incluye las matrices de pago para cada jugador. Suponemos que todos los elementos de estas matrices son enteros. Sea Pmax el mayor valor absoluto de cualquier elemento de cualquier matriz de pagos. Entonces, la entrada consiste en un máximo de n2Δ+1 números, cada uno de los cuales puede ser representado usando log Pmax bits. EQUILIBRIOS DE NASH QUE MAXIMIZAN EL BIENESTAR SOCIAL: SOLUCIONES EN R \\ Q Desde el punto de vista del bienestar social, el mejor equilibrio de Nash es aquel que maximiza la suma de las ganancias esperadas de los jugadores. Lamentablemente, resulta que calcular exactamente dicho perfil estratégico no es posible: en esta sección, mostramos que incluso si todas las ganancias de los jugadores son números enteros, el perfil estratégico que maximiza la ganancia total puede tener coordenadas irracionales; además, puede involucrar números algebraicos de un grado arbitrario. 3.1 Calentamiento: irracionales cuadráticos Comenzamos proporcionando un ejemplo de un juego gráfico en un camino de longitud 3 con ganancias enteras tal que en el equilibrio de Nash que maximiza la ganancia total, uno de los jugadores tiene una estrategia en R \\ Q. En la siguiente subsección, extenderemos este ejemplo a números algebraicos de grado arbitrario n; para hacerlo, debemos considerar caminos de longitud O(n). TEOREMA 1. Existe un juego gráfico G de pago entero en un camino de 3 vértices UVW tal que, en cualquier equilibrio de Nash de G que maximice el bienestar social, la estrategia u del jugador U y el pago total p cumplen u, p ∈ R \\ Q. PRUEBA. Las recompensas para los jugadores en G están especificadas de la siguiente manera. La ganancia para U es idénticamente 0, es decir, P0 (U) = P1 (U) = 0. Usando la Reclamación 1, seleccionamos las ganancias para V de modo que P0 (V) = -uw + 3w y P1 (V) = P0 (V) + w(u + 2) - (u + 1), donde u y w son las estrategias (mixtas) de U y W, respectivamente. Se deduce que V es indiferente entre jugar 0 y 1 si y solo si w = f(u) = u+1 u+2. Observa que para cualquier u ∈ [0, 1] tenemos f(u) ∈ [0, 1]. La recompensa para W es 0 si selecciona la misma acción que V y 1 en caso contrario. AFIRMACIÓN 2. Todos los equilibrios de Nash del juego G son de la forma (u, 1/2, f(u)). Es decir, en cualquier equilibrio de Nash, V juega v = 1/2 y W juega w = f(u). Además, para cualquier valor de u, el vector de estrategias (u, 1/2, f(u)) constituye un equilibrio de Nash. PRUEBA. Es fácil comprobar que para cualquier u ∈ [0, 1], el vector (u, 1/2, f(u)) es un equilibrio de Nash. De hecho, U está dispuesto a jugar 164 cualquier estrategia mixta u, sin importar lo que hagan V y W. Además, V es indiferente entre 0 y 1 siempre y cuando w = f(u), por lo que puede jugar 1/2. Finalmente, si V juega con probabilidad igual a 0 y 1, W es indiferente entre 0 y 1, por lo que puede jugar f(u). Por el contrario, supongamos que v > 1/2. Entonces W prefiere estrictamente jugar 0, es decir, w = 0. Entonces para V tenemos P1 (V) = P0 (V) - (u + 1), es decir, P1 (V) < P0 (V), lo que implica v = 0, una contradicción. De manera similar, si v < 1/2, el jugador W prefiere jugar 1, por lo que tenemos w = 1. Por lo tanto, P1 (V) = P0 (V) + (u + 2) - (u + 1), es decir, P1 (V) > P0 (V), lo que implica v = 1, una contradicción. Finalmente, si v = 1/2, pero w = f(u), el jugador V no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Esto completa la prueba de la Afirmación 2. Según la Afirmación 2, la ganancia total en cualquier equilibrio de Nash de este juego es una función de u. Más específicamente, la ganancia para U es 0, la ganancia para V es −uf(u) + 3f(u), y la ganancia para W es 1/2. Por lo tanto, el equilibrio de Nash con la máxima ganancia total corresponde al valor de u que maximiza g(u) = −u (u + 1) u + 2 + 3 u + 1 u + 2 = − (u − 3)(u + 1) u + 2. Para encontrar los extremos de g(u), calculamos h(u) = − d du g(u). Tenemos h(u) = (2u − 2)(u + 2) − (u − 3)(u + 1) (u + 2)2 = u2 + 4u − 1 (u + 2)2. Por lo tanto, h(u) = 0 si y solo si u ∈ {−2 + √ 5, −2 − √ 5}. Ten en cuenta que −2 + √ 5 ∈ [0, 1]. La función g(u) cambia de signo en −2, −1 y 3. Tenemos g(u) < 0 para g > 3, g(u) > 0 para u < −2, por lo que el extremo de g(u) que se encuentra entre 1 y 3, es decir, u = −2 + √ 5, es un máximo local. Concluimos que el equilibrio de Nash que maximiza el bienestar social para este juego está dado por el vector de estrategias (−2+√ 5, 1/2, (5 − √ 5)/5). El pago total respectivo es 0 − ( √ 5 − 5)( √ 5 − 1) √ 5 + 1 2 = 13/2 − 2 √ 5. Esto concluye la prueba del Teorema 1. 3.2 Estrategias de grado arbitrario. Hemos demostrado que en el equilibrio de Nash que maximiza el bienestar social, las estrategias de algunos jugadores pueden ser irracionales cuadráticas, al igual que la recompensa total. En esta subsección, extenderemos este resultado para mostrar que podemos construir un juego gráfico de pago entero en un camino cuyo equilibrio de Nash maximizador del bienestar social involucra números algebraicos arbitrarios en [0, 1]. TEOREMA 2. Para cualquier número algebraico α de grado n ∈ [0, 1], existe un juego gráfico de pago entero en un camino de longitud O(n) tal que, en todas las equilibrios de Nash que maximizan el bienestar social de este juego, uno de los jugadores juega α. PRUEBA. Nuestra prueba consta de dos pasos. Primero, construimos una expresión racional R(x) y un segmento [x , x ] tal que x , x ∈ Q y α sea el único máximo de R(x) en [x , x ]. Segundo, construimos un juego gráfico cuyos equilibrios de Nash pueden ser parametrizados por u ∈ [x, x], de modo que en el equilibrio que corresponde a u, la recompensa total es R(u) y, además, la estrategia de algunos jugadores es u. Se deduce que para alcanzar el equilibrio de Nash que maximiza la ganancia, este jugador tiene que jugar α. Los detalles siguen. LEMMA 1. \n\nLEMMA 1. Dado un número algebraico α ∈ [0, 1], deg(α) = n, existen K2, . . . , K2n+2 ∈ Q y x , x ∈ (0, 1) ∩ Q tal que α es el único máximo de R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 en [x , x ]. PRUEBA. Sea P(x) el polinomio minimal de α, es decir, un polinomio de grado n con coeficientes racionales cuyo coeficiente principal es 1 tal que P(α) = 0. Sea A = {α1, . . . , αn} el conjunto de todas las raíces de P(x). Considera el polinomio Q1(x) = −P2(x). Tiene las mismas raíces que P(x), y además, para cualquier x ∈ A tenemos Q1(x) < 0. Por lo tanto, A es el conjunto de todos los máximos de Q1(x). Ahora, establece R(x) = Q1(x) (x+2)...(x+2n+1)(x+2n+2). Observa que R(x) ≤ 0 para todo x ∈ [0, 1] y R(x) = 0 si y solo si Q1(x) = 0. Por lo tanto, el conjunto A también es el conjunto de todos los máximos de R(x) en [0, 1]. Sea d = min{|αi − α| | αi ∈ A, αi = α}, y establezca α = max{α − d/2, 0}, α = min{α + d/2, 1}. Claramente, α es el único cero (y por lo tanto, el único máximo) de R(x) en [α , α ]. Sean x y x algunos números racionales en (α, α) y (α, α), respectivamente; observe que al excluir los extremos de los intervalos aseguramos que x, x = 0, 1. Como [x, x] ⊂ [α, α], tenemos que α es el único máximo de R(x) en [x, x]. Dado que R(x) es una expresión racional adecuada y todas las raíces de su denominador son simples, por el teorema de descomposición en fracciones parciales, R(x) puede representarse como R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2, donde K2, . . . , K2n+2 son números racionales. Considera un juego gráfico en el camino U−1V−1U0V0U1V1 . . . Uk−1Vk−1Uk, donde k = 2n + 2. Intuitivamente, queremos que cada triple (Ui−1, Vi−1, Ui) se comporte de manera similar a los jugadores U, V y W del juego descrito en la subsección anterior. Más precisamente, definimos las ganancias de los jugadores de la siguiente manera. • La ganancia para U−1 es 0 sin importar lo que hagan los demás. • La ganancia esperada para V−1 es 0 si juega 0 y u0 − (x − x )u−1 −x si juega 1, donde u0 y u−1 son las estrategias de U0 y U−1, respectivamente. • La ganancia esperada para V0 es 0 si juega 0 y u1(u0 + 1)− u0 si juega 1, donde u0 y u1 son las estrategias de U0 y U1, respectivamente. • Para cada i = 1, . . . , k − 1, la ganancia esperada para Vi cuando juega 0 es P0 (Vi) = Aiuiui+1 − Aiui+1, y la ganancia esperada para Vi cuando juega 1 es P1 (Vi) = P0 (Vi) + ui+1(2 − ui) − 1, donde Ai = −Ki+1 y ui+1 y ui son las estrategias de Ui+1 y Ui, respectivamente. • Para cada i = 0, . . . , k, la ganancia para Ui no depende de Vi y es 1 si Ui y Vi−1 seleccionan acciones diferentes y 0 en caso contrario. Ahora caracterizaremos los equilibrios de Nash de este juego utilizando una secuencia de afirmaciones. AFIRMACIÓN 3. En todos los equilibrios de Nash de este juego, V−1 juega 1/2, y las estrategias de u−1 y u0 satisfacen u0 = (x − x )u−1 + x. Por consiguiente, en todos los equilibrios de Nash tenemos u0 ∈ [x , x ]. 165 PRUEBA. La prueba es similar a la del Reclamo 2. Que f(u−1) = (x − x )u−1 + x. Claramente, el jugador V−1 es indiferente entre jugar 0 y 1 si y solo si u0 = f(u−1). Supongamos que v−1 < 1/2. Entonces U0 prefiere estrictamente jugar 1, es decir, u0 = 1, por lo que tenemos P1 (V−1) = P0 (V−1) + 1 − (x − x )u−1 − x . Dado que 1 − x ≤ 1 − (x − x )u−1 − x ≤ 1 − x para u−1 ∈ [0, 1] y x < 1, tenemos que P1 (V−1) > P0 (V−1), por lo que V−1 prefiere jugar 1, lo cual es una contradicción. De manera similar, si v−1 > 1/2, el jugador U0 prefiere estrictamente jugar 0, es decir, u0 = 0, por lo que tenemos P1 (V−1) = P0 (V−1) − (x − x )u−1 − x. Dado que x < x, x > 0, tenemos P1 (V−1) < P0 (V−1), por lo que V−1 prefiere jugar 0, lo cual es una contradicción. Finalmente, si V−1 juega 1/2, pero u0 = f(u−1), el jugador V−1 no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Además, ten en cuenta que f(0) = x, f(1) = x y, además, f(u−1) ∈ [x, x] si y solo si u−1 ∈ [0, 1]. Por lo tanto, en todos los equilibrios de Nash de este juego tenemos u0 ∈ [x , x ]. AFIRMACIÓN 4. En todos los equilibrios de Nash de este juego para cada i = 0, . . . , k − 1, tenemos vi = 1/2, y las estrategias de los jugadores Ui y Ui+1 satisfacen ui+1 = fi(ui), donde f0(u) = u/(u + 1) y fi(u) = 1/(2 − u) para i > 0. PRUEBA. La prueba de esta afirmación es también similar a la de la Afirmación 2. Utilizamos inducción en i para demostrar que la afirmación de la proposición es verdadera y, además, ui = 1 para i > 0. Para el caso base i = 0, observe que u0 = 0 según la afirmación anterior (recuerde que x, x se seleccionan de manera que x, x = 0, 1) y considere el trío (U0, V0, U1). Que v0 sea la estrategia de V0. Primero, supongamos que v0 > 1/2. Entonces U1 prefiere estrictamente jugar 0, es decir, u1 = 0. Entonces, para V0 tenemos P1 (V0) = P0 (V0) − u0. Dado que u0 = 0, tenemos que P1 (V0) < P0 (V0), lo cual implica v1 = 0, una contradicción. De manera similar, si v0 < 1/2, el jugador U1 prefiere jugar 1, por lo que tenemos u1 = 1. Por lo tanto, P1 (V0) = P0 (V0) + 1. Se sigue que P1 (V0) > P0 (V0), lo cual implica v0 = 1, una contradicción. Finalmente, si v0 = 1/2, pero u1 = u0/(u0 + 1), el jugador V0 no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Además, dado que u1 = u0/(u0 + 1) y u0 ∈ [0, 1], tenemos que u1 = 1. El argumento para el paso inductivo es similar. Es decir, supongamos que la afirmación se demuestra para todos los i < i y consideremos el trío (Ui, Vi, Ui+1). Que vi sea la estrategia de Vi. Primero, supongamos que vi > 1/2. Entonces Ui+1 prefiere estrictamente jugar 0, es decir, ui+1 = 0. Entonces, para Vi tenemos P1 (Vi) = P0 (Vi)−1, es decir, P1 (Vi) < P0 (Vi), lo cual implica vi = 0, una contradicción. De manera similar, si vi < 1/2, el jugador Ui+1 prefiere jugar 1, por lo que tenemos ui+1 = 1. Por lo tanto, P1 (Vi) = P0 (Vi) + 1 − ui. Por hipótesis inductiva, tenemos ui < 1. Por consiguiente, P1 (Vi) > P0 (Vi), lo que implica vi = 1, una contradicción. Finalmente, si vi = 1/2, pero ui+1 = 1/(2 − ui), el jugador Vi no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Además, como ui+1 = 1/(2 − ui) y ui < 1, tenemos ui+1 < 1. AFIRMACIÓN 5. Cualquier perfil estratégico de la forma (u−1, 1/2, u0, 1/2, u1, 1/2, . . . , uk−1, 1/2, uk), donde u−1 ∈ [0, 1], u0 = (x − x )u−1 + x , u1 = u0/(u0 + 1), y ui+1 = 1/(2 − ui) para i ≥ 1, constituye un equilibrio de Nash. PRUEBA. Primero, las ganancias del jugador U−1 no dependen de las acciones de otros jugadores, por lo que es libre de jugar cualquier estrategia en [0, 1]. Si u0 = (x −x )u−1 +x , el jugador V−1 es indiferente entre 0 y 1, por lo que está contento de jugar 1/2; un argumento similar se aplica a los jugadores V0, . . . , Vk−1. Finalmente, para cada i = 0, . . . , k, las ganancias del jugador Ui solo dependen de la estrategia del jugador Vi−1. En particular, siempre y cuando vi−1 = 1/2, el jugador Ui es indiferente entre jugar 0 y 1, por lo que puede jugar cualquier estrategia mixta ui ∈ [0, 1]. Para completar la prueba, observe que (x − x )u−1 + x ∈ [0, 1] para todo u−1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] para todo u0 ∈ [0, 1], y 1/(2 − ui) ∈ [0, 1] para todo ui ∈ [0, 1], por lo que tenemos ui ∈ [0, 1] para todo i = 0, . . . , k. Ahora, calculemos la ganancia total bajo un perfil estratégico de la forma dada en la Afirmación 5. El pago para U−1 es 0, y el pago esperado para cada uno de los Ui, i = 0, . . . , k, es 1/2. Los beneficios esperados para V−1 y V0 son 0. Finalmente, para cualquier i = 1, . . . , k − 1, la ganancia esperada para Vi es Ti = Aiuiui+1 − Aiui+1. Se deduce que para encontrar un equilibrio de Nash con el mayor pago total, debemos maximizar Pk−1 i=1 Ti sujeto a las condiciones u−1 ∈ [0, 1], u0 = (x −x )u−1+x , u1 = u0/(u0+1), y ui+1 = 1/(2−ui) para i = 1, . . . , k − 1. Nos gustaría expresar Pk−1 i=1 Ti como una función de u0. Para simplificar la notación, establezca u = u0. LEMMA 2. \n\nLEMMA 2. Para i = 1, . . . , k, tenemos ui = u+i−1 u+i. PRUEBA. La demostración es por inducción en i. Para i = 1, tenemos u1 = u/(u + 1). Ahora, para i ≥ 2 supongamos que ui−1 = (u + i − 2)/(u + i − 1). Tenemos ui = 1/(2 − ui−1) = (u + i − 1)/(2u + 2i − 2 − u − i + 2) = (u + i − 1)/(u + i). Se sigue que para i = 1, . . . , k − 1 tenemos Ti = Ai u + i − 1 u + i u + i u + i + 1 − Ai u + i u + i + 1 = −Ai 1 u + i + 1 = Ki+1 u + i + 1. Observa que a medida que u−1 varía de 0 a 1, u varía de x a x. Por lo tanto, para maximizar el pago total, debemos elegir u ∈ [x , x ] de manera que maximicemos K2 u + 2 + · · · + Kk u + k = R(u). Por construcción, el único máximo de R(u) en [x, x] es α. Se deduce que en el equilibrio de Nash que maximiza las ganancias de nuestro juego, U0 juega α. Finalmente, cabe destacar que las recompensas en nuestro juego son racionales en lugar de enteras. Sin embargo, es fácil ver que podemos multiplicar todas las ganancias de un jugador por su máximo común denominador sin afectar su estrategia. En el juego resultante, todas las ganancias son enteras. Esto concluye la demostración del Teorema 2.4. APROXIMANDO EL EQUILIBRIO DE NASH ÓPTIMO SOCIAL Hemos visto que el equilibrio de Nash que maximiza el bienestar social puede implicar estrategias que no están en Q. Por lo tanto, en esta sección nos enfocamos en encontrar un equilibrio de Nash que sea casi óptimo desde la perspectiva del bienestar social. Proponemos un algoritmo que, para cualquier > 0, encuentra un equilibrio de Nash cuya recompensa total está dentro de de la óptima. El tiempo de ejecución de este algoritmo es polinómico en 1/ , n y |Pmax| (recuerde que Pmax es el valor absoluto máximo de una entrada de una matriz de pagos). Si bien el resultado negativo de la sección anterior es para juegos gráficos en caminos, nuestro algoritmo se aplica a una gama más amplia de escenarios. Específicamente, se ejecuta en tiempo polinómico en árboles de grado acotado siempre que la política de mejor respuesta de cada vértice, dada su padre, pueda representarse como una unión de un número polinómico de rectángulos. Ten en cuenta que los grafos de camino siempre cumplen esta condición: en [9] mostramos cómo calcular dicha representación, dado un grafo con grado máximo 2. Por consiguiente, para grafos de camino el tiempo de ejecución de nuestro algoritmo está garantizado de ser polinomial. (Nótese que [9] exhibe una familia de juegos gráficos en árboles de grado acotado para los cuales las políticas de mejor respuesta de algunos de los vértices, dados sus padres, tienen tamaño exponencial, cuando se representan como uniones de rectángulos). Debido a restricciones de espacio, en esta versión del artículo presentamos el algoritmo para el caso en el que el grafo subyacente del juego gráfico es un camino. Luego presentamos nuestro resultado para el caso general; la demostración se puede encontrar en la versión completa de este artículo [10]. Supongamos que s es un perfil estratégico para un juego gráfico G. Es decir, s asigna una estrategia mixta a cada vértice de G. Sea EPV (s) el pago esperado del jugador V bajo s y sea EP(s) = Σ V EPV (s). Sea M(G) = max{EP(s) | s es un equilibrio de Nash para G}. TEOREMA 3. Supongamos que G es un juego gráfico en un camino de n vértices. Entonces, para cualquier > 0 existe un algoritmo que construye un equilibrio de Nash s para G que satisface EP(s) ≥ M(G)− . El tiempo de ejecución del algoritmo es O(n4 P3 max/ 3) PRUEBA. Sea {V1, . . . , Vn} el conjunto de todos los jugadores. Comenzamos construyendo las mejores políticas de respuesta para todos los Vi, i = 1, . . . , n − 1. Como se muestra en [9], esto se puede hacer en tiempo O(n3). Sea N > 5n un parámetro que se seleccionará más adelante, establezca δ = 1/N y defina X = {jδ | j = 0, . . . , N}. Decimos que vj es un punto de evento para un jugador Vi si es un punto de evento de Vi para B(Vi, Vi−1) o B(Vi+1, Vi). Para cada jugador Vi, considera un conjunto finito de estrategias Xi dado por Xi = X ∪ {vj | vj es un punto de evento para Vi}. Se ha demostrado en [9] que para cualquier i = 2, . . . , n, la política de mejor respuesta B(Vi, Vi−1) tiene como máximo 2n + 4 puntos de eventos de Vi. Dado que requerimos N > 5n, tenemos |Xi| ≤ 2N; asumimos sin pérdida de generalidad que |Xi| = 2N. Ordena los elementos de Xi en orden creciente como x1 i = 0 < x2 i < · · · < x2N i. Nos referiremos a las estrategias en Xi como estrategias discretas del jugador Vi; un perfil de estrategia en el que cada jugador tiene una estrategia discreta se referirá como un perfil de estrategia discreta. Ahora demostraremos que incluso si restringimos a cada jugador Vi a estrategias de Xi, los jugadores aún pueden lograr un equilibrio de Nash, y además, el mejor equilibrio de Nash (con respecto al bienestar social) tiene un pago total de al menos M(G) - siempre y cuando N sea lo suficientemente grande. Sea s un perfil de estrategia que maximiza el bienestar social. Es decir, sea s = (s1, . . . , sn) donde si es la estrategia mixta del jugador Vi y EP(s) = M(G). Para i = 1, . . . , n, sea ti = max{xj i | xj i ≤ si}. Primero, demostraremos que el perfil estratégico t = (t1, . . . , tn) es un equilibrio de Nash para G. Fijemos cualquier i, 1 < i ≤ n, y sea R = [v1, v2]×[u1, u2] el rectángulo en B(Vi, Vi−1) que contiene (si, si−1). Dado que v1 es un punto de evento Vi de B(Vi, Vi−1), tenemos v1 ≤ ti, por lo que el punto (ti, si−1) está dentro de R. De manera similar, el punto u1 es un punto de evento Vi−1 de B(Vi, Vi−1), por lo que tenemos u1 ≤ ti−1, y por lo tanto el punto (ti, ti−1) está dentro de R. Esto significa que para cualquier i, 1 < i ≤ n, tenemos ti−1 ∈ pbrVi−1 (ti), lo que implica que t = (t1, . . . , tn) es un equilibrio de Nash para G. Ahora, estimemos la pérdida esperada en el bienestar social causada por jugar t en lugar de s. LEMA 3. Para cualquier par de perfiles de estrategia t, s tales que |ti − si| ≤ δ, tenemos |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ para cualquier i = 1, . . . , n. PRUEBA. Sea Pi klm el pago del jugador Vi, cuando juega k, Vi−1 juega l y Vi+1 juega m. Fijemos i = 1, . . . , n y para k, l, m ∈ {0, 1}, definamos tklm = tk i−1(1 − ti−1)1−k tl i(1 − ti)1−l tm i+1(1 − ti+1)1−m sklm = sk i−1(1 − si−1)1−k sl i(1 − si)1−l sm i+1(1 − si+1)1−m. Mostraremos ahora que para cualquier k, l, m ∈ {0, 1} tenemos |tklm − sklm | ≤ 3δ; claramente, esto implica el lema. De hecho, fijar k, l, m ∈ {0, 1}. Establecer x = tk i−1(1 − ti−1)1−k , x = sk i−1(1 − si−1)1−k , y = tl i(1 − ti)1−l , y = sl i(1 − si)1−l , z = tm i+1(1 − ti+1)1−m , z = sm i+1(1 − si+1)1−m. Observa que si k = 0 entonces x − x = (1 − ti−1) − (1 − si−1), y si k = 1 entonces x − x = ti−1 − si−1, por lo tanto |x − x | ≤ δ. Un argumento similar muestra |y − y | ≤ δ, |z − z | ≤ δ. Además, tenemos x, x, y, y, z, z ∈ [0, 1]. Por lo tanto, |tklm − sklm | = |xyz − x y z | = |xyz − x yz + x yz − x y z + x y z − x y z | ≤ |x − x |yz + |y − y |x z + |z − z |x y ≤ 3δ. El Lema 3 implica que Pn i=1 |EPVi (s) − EPVi (t)| ≤ 24nPmaxδ, por lo que al elegir δ < /(24nPmax), o, equivalentemente, estableciendo N > 24nPmax/ , podemos asegurar que el pago esperado total para el perfil estratégico t esté dentro de de lo óptimo. Ahora demostraremos que podemos encontrar el mejor equilibrio de Nash discreto (con respecto al bienestar social) utilizando programación dinámica. Dado que t es un perfil de estrategia discreto, esto significa que el perfil de estrategia encontrado por nuestro algoritmo será al menos tan bueno como t. Defina ml,k i como la máxima ganancia total que V1, . . . , Vi−1 pueden lograr si cada Vj, j ≤ i, elige una estrategia de Xj, para cada j < i la estrategia de Vj es una mejor respuesta potencial a la estrategia de Vj+1, y, además, Vi−1 juega xl i−1, Vi juega xk i. Si no hay forma de elegir las estrategias para V1, . . . , Vi−1 que cumplan con estas condiciones, establecemos ml,k i = −∞. Los valores ml,k i , i = 1, . . . , n; k, l = 1, . . . , N, pueden ser calculados de forma inductiva, de la siguiente manera. Tenemos ml,k 1 = 0 para k, l = 1, . . . , N. Ahora, supongamos que ya hemos calculado ml,k j para todos los j < i; k, l = 1, . . . , N. Para calcular mk,l i , primero verificamos si (xk i , xl i−1) ∈ B(Vi, Vi−1). Si este no es el caso, tenemos ml,k i = −∞. De lo contrario, considera el conjunto Y = Xi−2 ∩ pbrVi−2 (xl i−1), es decir, el conjunto de todas las estrategias discretas de Vi−2 que son potenciales mejores respuestas a xl i−1. La prueba del Teorema 1 en [9] implica que el conjunto pbrVi−2 (xl i−1) no está vacío: el jugador Vi−2 tiene una mejor respuesta potencial a cualquier estrategia de Vi−1, en particular, xl i−1. Por la construcción del conjunto Xi−2, esto implica que Y no está vacío. Para cada xj i−2 ∈ Y, dejemos que pjlk sea la ganancia que Vi−1 recibe cuando Vi−2 juega xj i−2, Vi−1 juega xl i−1, y Vi juega xk i. Claramente, pjlk se puede calcular en tiempo constante. Entonces tenemos ml,k i = max{mj,l i−1 + pjlk | xj i−2 ∈ Y }. Finalmente, supongamos que hemos calculado ml,k n para l, k = 1, . . . , N. Todavía necesitamos tener en cuenta el pago del jugador Vn. Por lo tanto, consideramos todos los pares (xk n, xl n−1) que satisfacen xl n−1 ∈ pbrVn−1 (xk n), y elegimos aquel que maximiza la suma de mk,l n y la ganancia de Vn cuando juega xk n y Vn−1 juega xl n−1. Esto resulta en el pago total máximo que los jugadores pueden lograr en un equilibrio de Nash utilizando estrategias discretas; el perfil de estrategia real que produce este pago puede ser reconstruido utilizando técnicas estándar de programación dinámica. Es fácil ver que cada ml,k se puede calcular en tiempo O(N), es decir, todos ellos se pueden calcular en tiempo O(nN3). Recuerde que debemos seleccionar N ≥ (24nPmax)/ para asegurarnos de que el perfil estratégico que producimos tenga un pago total que esté dentro de lo óptimo. Concluimos que podemos calcular una -aproximación al mejor equilibrio de Nash en tiempo O(n4 P3 max/ 3 ). Esto completa la demostración del Teorema 3. Para enunciar nuestro resultado para el caso general (es decir, cuando el grafo subyacente es un árbol de grado acotado en lugar de un camino), necesitamos notación adicional. Si G tiene n jugadores, sea q(n) una cota superior en el número de puntos de evento en la representación de cualquier política de mejor respuesta. Es decir, asumimos que para cualquier vértice U con padre V, B(V, U) tiene como máximo q(n) puntos de evento. Estaremos interesados en la situación en la que q(n) sea un polinomio en n. TEOREMA 4. Sea G un juego gráfico de n jugadores en un árbol en el que cada nodo tiene a lo sumo Δ hijos. Supongamos que se nos da un conjunto de políticas de mejor respuesta para G en el que cada política de mejor respuesta B(V, U) está representada por un conjunto de rectángulos con un máximo de q(n) puntos de evento. Para cualquier > 0, existe un algoritmo que construye un equilibrio de Nash s para G que satisface EP(s) ≥ M(G) − . El tiempo de ejecución del algoritmo es polinómico en n, Pmax y −1 siempre que el árbol tenga grado acotado (es decir, Δ = O(1)) y q(n) sea un polinomio en n. En particular, si N = max((Δ + 1)q(n) + 1, n2Δ+2 (Δ + 2)Pmax −1 ) y Δ > 1 entonces el tiempo de ejecución es O(nΔ(2N)Δ. Para la demostración de este teorema, ver [10]. 4.1 Un algoritmo de tiempo polinómico para aproximación multiplicativa El tiempo de ejecución de nuestro algoritmo es seudopolinómico en lugar de polinómico, porque incluye un factor que es polinómico en Pmax, la entrada máxima (en valor absoluto) en cualquier matriz de pagos. Si estamos interesados en una aproximación multiplicativa en lugar de una aditiva, esto se puede mejorar a polinomial. Primero, hay que tener en cuenta que no podemos esperar una aproximación multiplicativa para todas las entradas. Es decir, no podemos esperar tener un algoritmo que calcule un equilibrio de Nash con una ganancia total de al menos (1 − )M(G). Si tuviéramos dicho algoritmo, entonces para juegos gráficos G con M(G) = 0, se requeriría que el algoritmo produjera la solución óptima. Para demostrar que esto es inviable, observe que podemos usar las técnicas de la Sección 3.2 para construir dos juegos gráficos de coeficientes enteros en caminos de longitud O(n) de tal manera que para algún X ∈ R, el pago total máximo en el primer juego sea X, el pago total máximo en el segundo juego sea −X, y para ambos juegos, los perfiles estratégicos que logran los pagos totales máximos involucran números algebraicos de grado n. Al combinar los dos juegos de modo que el primer vértice del segundo juego se conecte con el último vértice del primer juego, pero los pagos de todos los jugadores no cambien, obtenemos un juego gráfico en el que el mejor equilibrio de Nash tiene un pago total de 0, sin embargo, las estrategias que conducen a este pago tienen una alta complejidad algebraica. Sin embargo, podemos lograr una aproximación multiplicativa cuando todas las entradas de las matrices de pago son positivas y la relación entre cualquier par de entradas está acotada polinómicamente. Recuerde que asumimos que todos los pagos son enteros, y sea Pmin > 0 la entrada más pequeña de cualquier matriz de pagos. En este caso, para cualquier perfil estratégico, la ganancia para el jugador i es al menos Pmin, por lo que la ganancia total en el equilibrio de Nash que maximiza el bienestar social satisface M(G) ≥ nPmin. Además, el Lema 3 implica que al elegir δ < /(24Pmax/Pmin), podemos asegurar que el equilibrio de Nash t producido por nuestro algoritmo cumple nX i=1 EPVi (s) − nX i=1 EPVi (t) ≤ 24Pmaxδn ≤ nPmin ≤ M(G), es decir, para este valor de δ tenemos Pn i=1 EPVi (t) ≥ (1 − )M(G). Recuerde que el tiempo de ejecución de nuestro algoritmo es O(nN3), donde N debe ser seleccionado para satisfacer N > 5n, N = 1/δ. Se deduce que si Pmin > 0, Pmax/Pmin = poli(n), podemos elegir N de manera que nuestro algoritmo proporcione una garantía de aproximación multiplicativa y se ejecute en tiempo polinómico en n y 1/ . 5. EQUILIBRIOS DE NASH DE PAGO ACOTADO Otra forma natural de definir qué es un buen equilibrio de Nash es exigir que el pago esperado de cada jugador supere cierto umbral. Estos umbrales no tienen que ser iguales para todos los jugadores. En este caso, además de las matrices de pagos de los n jugadores, se nos dan n números T1, . . . , Tn, y nuestro objetivo es encontrar un equilibrio de Nash en el que el pago del jugador i sea al menos Ti, o informar que no existe tal equilibrio de Nash. Resulta que podemos diseñar un FPTAS para este problema utilizando las mismas técnicas que en la sección anterior. TEOREMA 5. Dado un juego gráfico G en un camino de n vértices y n números racionales T1, . . . , Tn, supongamos que existe un perfil estratégico s tal que s es un equilibrio de Nash para G y EPVi (s) ≥ Ti para i = 1, . . . , n. Entonces para cualquier > 0 podemos encontrar en tiempo O(max{nP3 max/ 3 , n4 / 3 }) un perfil estratégico s tal que s es un equilibrio de Nash para G y EPVi (s) ≥ Ti − para i = 1, . . . , n. PRUEBA. La prueba es similar a la del Teorema 3. Primero, construimos las políticas de mejor respuesta para todos los jugadores, elegimos N > 5n, y construimos los conjuntos Xi, i = 1, . . . , n, como se describe en la demostración del Teorema 3. Consideremos un perfil estratégico s tal que s sea un equilibrio de Nash para G y EPVi (s) ≥ Ti para i = 1, . . . , n. Construimos un perfil estratégico ti = max{xj i | xj i ≤ si} y usamos el mismo argumento que en la demostración del Teorema 3 para mostrar que t es un equilibrio de Nash para G. Según el Lema 3, tenemos |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ, por lo que eligiendo δ < /(24Pmax), o, equivalentemente, N > max{5n, 24Pmax/ }, podemos asegurar que EPVi (t) ≥ Ti − para i = 1, . . . , n. Ahora, utilizaremos la programación dinámica para encontrar un equilibrio de Nash discreto que cumpla con EPVi (t) ≥ Ti − para i = 1, . . . , n. Dado que t es un perfil estratégico discreto, nuestro algoritmo tendrá éxito siempre que haya un perfil estratégico s con EPVi (s) ≥ Ti− para i = 1, . . . , n. Sea zl,k i = 1 si hay un perfil estratégico discreto tal que para cualquier j < i la estrategia del jugador Vj es una mejor respuesta potencial a la estrategia de Vj+1, el pago esperado de Vj es al menos Tj − , y, además, Vi−1 juega xl i−1, Vi juega xk i. De lo contrario, deja que zl,k i = 0. Podemos calcular zl,k i, i = 1, . . . , n; k, l = 1, . . . , N de forma inductiva, de la siguiente manera. Tenemos zl,k 1 = 1 para k, l = 1, . . . , N. Ahora, supongamos que ya hemos calculado zl,k j para todos los j < i; k, l = 1, . . . , N. Para calcular zk,l i , primero verificamos si (xk i , xl i−1) ∈ B(Vi, Vi−1). Si este 168 no es el caso, claramente, zk,l i = 0. De lo contrario, considera el conjunto Y = Xi−2 ∩ pbrVi−2 (xl i−1), es decir, el conjunto de todas las estrategias discretas de Vi−2 que son potenciales mejores respuestas a xl i−1. Se ha demostrado en la prueba del Teorema 3 que Y = ∅. Para cada xj i−2 ∈ Y, dejemos que pjlk sea la ganancia que Vi−1 recibe cuando Vi−2 juega xj i−2, Vi−1 juega xl i−1, y Vi juega xk i. Claramente, pjlk se puede calcular en tiempo constante. Si existe un xj i−2 ∈ Y tal que zj,l i−1 = 1 y pjlk ≥ Ti−2 − , establece zl,k i = 1. De lo contrario, establezca zl,k i = 0. Habiendo calculado zl,k n , l, k = 1, . . . , N, verificamos si zl,k n = 1 para algún par (l, k). Si existe tal par de índices, instruimos a Vn a jugar xk n y utilizamos técnicas de programación dinámica (o, de manera equivalente, el paso descendente del algoritmo de [13]) para encontrar un equilibrio de Nash s que satisfaga EPVi (s ) ≥ Ti − para i = 1, . . . , n (recordemos que Vn es un jugador ficticio, es decir, asumimos Tn = 0, EPn(s ) = 0 para cualquier elección de s ). Si zl,k n = 0 para todo l, k = 1, . . . , N, no hay un equilibrio de Nash discreto s que satisfaga EPVi (s) ≥ Ti − para i = 1, . . . , n y, por lo tanto, no hay un equilibrio de Nash s (no necesariamente discreto) tal que EPVi (s) ≥ Ti para i = 1, . . . , n. El análisis del tiempo de ejecución es similar al de la Teorema 3; concluimos que el tiempo de ejecución de nuestro algoritmo es O(nN3) = O(max{nP3 max/3, n4/3}). OBSERVACIÓN 1. El Teorema 5 se puede extender a árboles de grado acotado de la misma manera que el Teorema 4. 5.1 Cálculo Exacto Otro enfoque para encontrar equilibrios de Nash con pagos acotados se basa en calcular de forma inductiva los subconjuntos de las políticas de mejor respuesta de todos los jugadores para excluir los puntos que no proporcionan pagos suficientes a algunos de los jugadores. Formalmente, decimos que una estrategia v del jugador V es una mejor respuesta potencial a una estrategia w de su padre W con respecto a un vector de umbral T = (T1, . . . , Tn), (denotado por v ∈ pbrV (w, T)) si hay un equilibrio en la instancia G(V,W), W = w en el que V juega la estrategia mixta v y la ganancia para cualquier jugador Vi aguas abajo de V (incluyendo a V) es al menos Ti. La mejor política de respuesta para V con respecto a un vector umbral T se define como B(W, V, T) = {(w, v) | v ∈ pbrV (w, T), w ∈ [0, 1]}. Es fácil ver que si alguno de los conjuntos B(Vj, Vj−1, T), j = 1, . . . , n, está vacío, significa que es imposible proporcionar a todos los jugadores los pagos esperados prescritos por T. De lo contrario, se puede aplicar el paso descendente del algoritmo original de [13] para encontrar un equilibrio de Nash. Dado que asumimos que Vn es un vértice ficticio cuya ganancia es idénticamente 0, el equilibrio de Nash con estas ganancias existe siempre y cuando Tn ≤ 0 y B(Vn, Vn−1, T) no esté vacío. Usando las técnicas desarrolladas en [9], no es difícil demostrar que para cualquier j = 1, . . . , n, el conjunto B(Vj , Vj−1, T) consiste en un número finito de rectángulos, y se puede calcular B(Vj+1, Vj , T) dado B(Vj , Vj−1, T). La ventaja de este enfoque es que nos permite representar todos los equilibrios de Nash que proporcionan los pagos requeridos a los jugadores. Sin embargo, no es probable que sea práctico, ya que resulta que los rectángulos que aparecen en la representación de B(Vj , Vj−1, T) pueden tener coordenadas irracionales. AFIRMACIÓN 6. Existe un juego gráfico G en un camino de 3 vértices UVW y un vector T = (T1, T2, T3) tal que B(V, W, T) no puede ser representado como una unión de un número finito de rectángulos con coordenadas racionales. PRUEBA. Definimos las recompensas para los jugadores en G de la siguiente manera. La ganancia para U es idénticamente 0, es decir, P0 (U) = P1 (U) = 0. Usando la Reclamación 1, seleccionamos los pagos para V de manera que P0 (V) = uw, P1 (V) = P0 (V) + w - .8u - .1, donde u y w son las estrategias (mixtas) de U y W, respectivamente. Se deduce que V es indiferente entre jugar 0 y 1 si y solo si w = f(u) = .8u + .1; observe que para cualquier u ∈ [0, 1] tenemos f(u) ∈ [0, 1]. No es difícil ver que tenemos B(W, V) = [0, .1]×{0} ∪ [.1, .9]×[0, 1] ∪ [.9, 1]×{1}. Los pagos para W no son importantes para nuestra construcción; por ejemplo, establezca P0(W) = P0(W) = 0. Ahora, establezca T = (0, 1/8, 0), es decir, estamos interesados en equilibrios de Nash en los que el pago esperado de V sea al menos 1/8. Supongamos que w ∈ [0, 1]. El jugador V puede jugar una estrategia mixta v cuando W está jugando w siempre que U juegue u = f−1 (w) = 5w/4 − 1/8 (para asegurar que V sea indiferente entre 0 y 1) y P0 (V) = P1 (V) = uw = w(5w/4 − 1/8) ≥ 1/8. La última condición se cumple si w ≤ (1 − √ 41)/20 < 0 o w ≥ (1 + √ 41)/20. Ten en cuenta que tenemos .1 < (1 + √ 41)/20 < .9. Para cualquier otro valor de w, cualquier estrategia de U hace que V prefiera una de las estrategias puras o no le proporciona un pago esperado suficiente. También hay algunos valores de w para los cuales V puede jugar una estrategia pura (0 o 1) como una mejor respuesta potencial a W y garantizarse a sí mismo un pago esperado de al menos 1/8; se puede demostrar que estos valores de w forman un número finito de segmentos en [0, 1]. Concluimos que cualquier representación de B(W, V, T) como una unión de un número finito de rectángulos debe contener un rectángulo de la forma [(1 + √ 41)/20, w] × [v, v] para algún w, v, v ∈ [0, 1]. Por otro lado, se puede demostrar que para cualquier matriz de pagos enteros y vectores de umbral, y para cualquier j = 1, . . . , n − 1, los conjuntos B(Vj+1, Vj, T) no contienen rectángulos de la forma [u , u ]×{v} o {v}×[w , w ], donde v ∈ R\\Q. Esto significa que si B(Vn, Vn−1, T) no está vacío, es decir, hay un equilibrio de Nash con pagos prescritos por T, entonces el paso descendente del algoritmo de [13] siempre puede elegir un perfil estratégico que forme un equilibrio de Nash, proporcione un pago de al menos Ti al jugador Vi y no tenga coordenadas irracionales. Por lo tanto, a diferencia del equilibrio de Nash que maximiza el bienestar social, no es necesario trabajar con números irracionales, y el hecho de que el algoritmo discutido en esta sección deba hacerlo puede considerarse como un argumento en contra de utilizar este enfoque. OTROS CRITERIOS PARA SELECCIONAR UN EQUILIBRIO DE NASH En esta sección, consideramos varios otros criterios que pueden ser útiles para seleccionar un equilibrio de Nash. 6.1 Combinando la maximización del bienestar con límites en los pagos En muchos escenarios de la vida real, queremos maximizar el bienestar social sujeto a ciertas restricciones en los pagos a los jugadores individuales. Por ejemplo, es posible que queramos asegurarnos de que ningún jugador obtenga una ganancia esperada negativa, o que la ganancia esperada para el jugador i sea al menos Pi max − ξ, donde Pi max es la entrada máxima de la matriz de ganancias de i y ξ es un parámetro fijo. Formalmente, dado un juego gráfico G y un vector T1, . . . , Tn, sea S el conjunto de todos los equilibrios de Nash s de G que satisfacen Ti ≤ EPVi (s) para i = 1, . . . , n, y sea ˆs = argmaxs∈S EP(s). Si el conjunto S no está vacío, podemos encontrar un equilibrio de Nash ˆs que esté -cerca de satisfacer los límites de pago y esté dentro de ε de ˆs con respecto al pago total al combinar los algoritmos de la Sección 4 y la Sección 5. Es decir, para un dado > 0, elige δ como en la demostración del Teorema 3, y deja que Xi sea el conjunto de todas las estrategias discretas del jugador Vi (para una definición formal, consulta la demostración del Teorema 3). Combinando las pruebas del Teorema 3 y el Teorema 5, podemos ver que el perfil de estrategia ˆt dado por ˆti = max{xj i | xj i ≤ ˆsi} satisface EPVi (ˆt) ≥ Ti − , |EP(ˆs) − EP(ˆt)| ≤ . Define ˆml,k i como la máxima ganancia total que V1, . . . , Vi−1 pueden lograr si cada Vj, j ≤ i, elige una estrategia de Xj, para cada j < i la estrategia de Vj es una mejor respuesta potencial a la estrategia de Vj+1 y la ganancia para el jugador Vj es al menos Tj − , y, además, Vi−1 juega xl i−1, Vi juega xk i. Si no hay forma de elegir las estrategias para V1, . . . , Vi−1 que cumplan con estas condiciones, establecemos ml,k i = −∞. El ˆml,k se puede calcular mediante programación dinámica de manera similar al ml,k y zl,k en las demostraciones de los Teoremas 3 y 5. Finalmente, como en la demostración del Teorema 3, utilizamos ml,k n para seleccionar el mejor equilibrio de Nash discreto sujeto a las restricciones de pago. Incluso de manera más general, es posible que deseemos maximizar el beneficio total para un subconjunto de jugadores (se supone que son capaces de redistribuir justamente las ganancias entre ellos mismos) mientras garantizamos ciertos beneficios esperados a (un subconjunto de) los otros jugadores. Este problema puede ser abordado de manera similar. 6.2 Un enfoque minimax Una medida más igualitaria de la calidad de un equilibrio de Nash es el pago esperado mínimo para un jugador. La solución óptima con respecto a esta medida es un equilibrio de Nash en el cual la ganancia esperada mínima para un jugador es máxima. Para encontrar una aproximación a dicho equilibrio de Nash, podemos combinar el algoritmo de la Sección 5 con la búsqueda binaria en el espacio de límites inferiores potenciales. Ten en cuenta que la ganancia esperada para cualquier jugador Vi dada una estrategia s siempre cumple con −Pmax ≤ EPVi (s) ≤ Pmax. Para un fijo > 0, comenzamos estableciendo T = −Pmax, T = Pmax, T∗ = (T + T )/2. Luego ejecutamos el algoritmo de la Sección 5 con T1 = · · · = Tn = T∗. Si el algoritmo tiene éxito al encontrar un equilibrio de Nash s que cumple con EPVi (s) ≥ T∗ − para todo i = 1, . . . , n, establecemos T = T∗, T∗ = (T + T)/2; de lo contrario, establecemos T = T∗, T∗ = (T + T)/2 y repetimos el ciclo. Repetimos este proceso hasta que |T − T | ≤ . No es difícil comprobar que para cualquier p ∈ R, si existe un equilibrio de Nash s tal que mini=1,...,n EPVi (s) ≥ p, entonces nuestro algoritmo devuelve un equilibrio de Nash s que cumple mini=1,...,n EPVi (s) ≥ p−2. El tiempo de ejecución de nuestro algoritmo es O(max{nP3 max log −1 / 3 , n4 log −1 / 3 }). 6.3 Igualando los pagos Cuando las matrices de pagos de los jugadores no son muy diferentes, es razonable exigir que los pagos esperados para los jugadores tampoco difieran mucho. Ahora demostraremos que los equilibrios de Nash en esta categoría también pueden aproximarse en tiempo polinómico. De hecho, observe que el algoritmo de la Sección 5 puede ser fácilmente modificado para tratar con límites superiores en las ganancias individuales en lugar de límites inferiores. Además, podemos calcular de manera eficiente una aproximación a un equilibrio de Nash que cumpla tanto con el límite superior como con el límite inferior para cada jugador. Más precisamente, supongamos que se nos da un juego gráfico G, 2n números racionales T1, . . . , Tn, T1, . . . , Tn y > 0. Entonces, si existe un perfil estratégico s tal que s es un equilibrio de Nash para G y Ti ≤ EPVi (s) ≤ Ti para i = 1, . . . , n, podemos encontrar un perfil estratégico s tal que s es un equilibrio de Nash para G y Ti − ≤ EPVi (s) ≤ Ti + para i = 1, . . . , n. El algoritmo modificado también se ejecuta en tiempo O(max{nP3 max/ 3 , [4]n4 / 3 }). Esta observación nos permite aproximar equilibrios de Nash en los que las ganancias esperadas de todos los jugadores difieren en un máximo de ξ para cualquier ξ fijo > 0. Dado un > 0, establecemos T1 = · · · = Tn = −Pmax, T1 = · · · = Tn = −Pmax + ξ + , y ejecutamos la versión modificada del algoritmo de la Sección 5. Si no logra encontrar una solución, incrementamos todos los Ti, Ti por y el bucle. Continuamos hasta que el algoritmo encuentre una solución, o Ti ≥ Pmax. Supongamos que existe un equilibrio de Nash s que satisface |EPVi (s) − EPVj (s)| ≤ ξ para todo i, j = 1, . . . , n. Definamos r = mini=1,...,n EPVi (s); tenemos r ≤ EPVi (s) ≤ r + ξ para todo i = 1, . . . , n. Existe un k ≥ 0 tal que −Pmax + (k − 1) ≤ r ≤ −Pmax + k. Durante el paso k del algoritmo, establecemos T1 = · · · = Tn = −Pmax +(k−1) , es decir, tenemos r− ≤ Ti ≤ r, r + ξ ≤ Ti ≤ r + ξ + . Es decir, el equilibrio de Nash s satisface Ti ≤ r ≤ EPVi (s) ≤ r + ξ ≤ Ti, lo que significa que cuando Ti se establece en −Pmax + (k − 1), nuestro algoritmo garantiza producir un equilibrio de Nash t que satisface r − 2 ≤ Ti − ≤ EPVi (t) ≤ Ti + ≤ r + ξ + 2. Concluimos que siempre que exista un equilibrio de Nash s, nuestro algoritmo produce un equilibrio de Nash t que satisface |EPVi (t) − EPVj (t)| ≤ ξ + 4 para todo i, j = 1, . . . , n. El tiempo de ejecución de este algoritmo es O(max{nP3 max/ 4 , n4 / 4 }). También debemos tener en cuenta que podemos encontrar el valor más pequeño de ξ para el cual existe un equilibrio de Nash combinando este algoritmo con una búsqueda binaria en el espacio ξ = [0, 2Pmax]. Esto identifica una aproximación al equilibrio de Nash más justo, es decir, uno en el que las ganancias esperadas de los jugadores difieren por la menor cantidad posible. Finalmente, cabe destacar que todos los resultados de esta sección pueden extenderse a árboles de grado acotado. 7. CONCLUSIONES Hemos estudiado el problema de la selección de equilibrio en juegos gráficos en árboles de grado acotado. Consideramos varios criterios para seleccionar un equilibrio de Nash, como maximizar el bienestar social, garantizar un límite inferior en la recompensa esperada de cada jugador, etc. Primero, nos enfocamos en la complejidad algebraica de un equilibrio de Nash que maximiza el bienestar social, y demostramos resultados negativos contundentes para ese problema. Es decir, demostramos que incluso para juegos gráficos en caminos, cualquier número algebraico α ∈ [0, 1] puede ser la única estrategia disponible para algún jugador en todas las equilibrios de Nash que maximizan el bienestar social. Esto contrasta fuertemente con el hecho de que los juegos gráficos en árboles siempre poseen un equilibrio de Nash en el que las estrategias de todos los jugadores son números racionales. Luego proporcionamos algoritmos de aproximación para seleccionar equilibrios de Nash con propiedades especiales. Si bien el problema de encontrar equilibrios de Nash aproximados para diversas clases de juegos ha recibido mucha atención en los últimos años, la mayoría de los trabajos existentes tienen como objetivo encontrar equilibrios de Nash que satisfagan (o estén cerca de satisfacer) ciertas propiedades. Nuestro enfoque es diferente en que insistimos en producir un equilibrio de Nash exacto, que está cerca de satisfacer un requisito dado. Como se argumenta en la introducción, hay varias razones para preferir una solución que constituya un equilibrio de Nash exacto. Nuestros algoritmos son esquemas de aproximación de tiempo polinomial completo, es decir, su tiempo de ejecución es polinomial en el inverso del parámetro de aproximación, aunque pueden ser seudopolinomiales con respecto al tamaño de la entrada. Bajo restricciones leves en las entradas, estas pueden ser modificadas para ser verdaderamente polinomiales. Este es el resultado positivo más fuerte que se puede obtener para un problema cuyas soluciones exactas pueden ser difíciles de representar, como es el caso de muchos de los problemas considerados aquí. Mientras demostramos nuestros resultados para juegos en un camino, pueden generalizarse a cualquier árbol para el cual las políticas de mejor respuesta tengan representaciones compactas como uniones de rectángulos. En la versión completa del artículo describimos nuestros algoritmos para el caso general. Un trabajo adicional en esta línea podría incluir extensiones a los tipos de garantías buscadas para los equilibrios de Nash, como garantizar los pagos totales para subconjuntos de jugadores, seleccionar equilibrios en los que algunos jugadores estén recibiendo pagos significativamente más altos que sus pares, etc. Sin embargo, en este momento es quizás más importante investigar si los equilibrios de Nash de los juegos gráficos pueden ser calculados de manera descentralizada, en contraste con los algoritmos que hemos introducido aquí. Es natural preguntarse si nuestros resultados o los de [9] pueden generalizarse a juegos con tres o más acciones. Sin embargo, parece que esto hará el análisis significativamente más difícil. En particular, cabe destacar que se pueden considerar los juegos de pago limitado como un caso especial muy restringido de juegos con tres acciones por jugador. Es decir, dado un juego de dos acciones con límites de pago, considera un juego en el que cada jugador Vi tiene una tercera acción que le garantiza un pago de Ti sin importar lo que hagan los demás. Luego, verificar si existe un equilibrio de Nash en el cual ninguno de los jugadores asigna una probabilidad distinta de cero a su tercera acción es equivalente a comprobar si existe un equilibrio de Nash que cumpla con los límites de pago en el juego original, y la Sección 5.1 muestra que encontrar una solución exacta a este problema requiere nuevas ideas. Alternativamente, puede ser interesante buscar resultados similares en el contexto de equilibrios correlacionados (CE), especialmente dado que el mejor CE puede tener un valor más alto (pago esperado total) que el mejor NE. La proporción entre estos valores se llama el valor de mediación en [1]. Se sabe por [1] que el valor de mediación de juegos de 2 jugadores y 2 acciones con pagos no negativos es a lo sumo 4 3, y presentan un juego de 3 jugadores para el cual es infinito. Además, un ejemplo de 2 jugadores y 3 acciones del [1] también tiene un valor de mediación infinito. 8. REFERENCIAS [1] I. Ashlagi, D. Monderer y M. Tenneholtz, Sobre el Valor de la Correlación, Actas del seminario de Dagstuhl 05011 (2005) [2] R. Aumann, Subjetividad y Correlación en Estrategias Aleatorias, Revista de Economía Matemática 1 pp. 67-96 (1974) [3] B. Blum, C. R. Shelton y D. Koller, Un Método de Continuación para Equilibrios de Nash en Juegos Estructurados, Actas de IJCAI03 [4] X. Chen, X. Deng y S. Teng, Computación de Equilibrios de Nash: Aproximación y Complejidad Suavizada, Actas de FOCS06 [5] X. Chen, X. Deng, Resolviendo la Complejidad del Equilibrio de Nash de 2 Jugadores, Actas de FOCS06 [6] V. Conitzer y T. Sandholm, Resultados de Complejidad sobre Equilibrios de Nash, Actas de IJCAI03 [7] C. Daskalakis, P. W. Goldberg y C. H. Papadimitriou, La Complejidad de Calcular un Equilibrio de Nash, Actas de STOC06 [8] R. S. Datta, Universalidad de los Equilibrios de Nash, Matemáticas de la Investigación Operativa 28:3, 2003 [9] E. Elkind, L. A. Goldberg y P. W. Goldberg, Equilibrios de Nash en Juegos Gráficos en Árboles Revisitados, Actas de ACM EC06 [10] E. Elkind, L. A. Goldberg y P. W. Goldberg, Computando Buenos Equilibrios de Nash en Juegos Gráficos, http://arxiv.org/abs/cs.GT/0703133 [11] I. Gilboa y E. Zemel, Equilibrios de Nash y Correlacionados: Algunas Consideraciones de Complejidad, Juegos y Comportamiento Económico, 1 pp. 80-93 (1989) [12] P. W. Goldberg y C. H. Papadimitriou, Reducibilidad entre Problemas de Equilibrio, Actas de STOC06 [13] M. Kearns, M. Littman y S. Singh, Modelos Gráficos para la Teoría de Juegos, Actas de UAI01 [14] M. Littman, M. Kearns y S. Singh, Un Algoritmo Exacto Eficiente para Juegos Gráficos Singularmente Conectados, Actas de NIPS01 [15] R. Lipton y E. Markakis, Equilibrios de Nash a través de Ecuaciones Polinomiales, Actas de LATIN04 [16] L. Ortiz y M. Kearns, Propagación de Nash para Juegos Gráficos con Lazos, Actas de NIPS03 [17] C.H. Papadimitriou, Computando equilibrios correlacionados en juegos de varios jugadores, Actas de STOC05 [18] C.H. Papadimitriou y T. Roughgarden, Computando equilibrios en juegos de múltiples jugadores, Actas de SODA05 [19] D. Vickrey y D. Koller, Algoritmos multiagente para resolver juegos gráficos, Actas de AAAI02 171 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "approximation": {
            "translated_key": "aproximación",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Computing Good Nash Equilibria in Graphical Games ∗ Edith Elkind Hebrew University of Jerusalem, Israel, and University of Southampton, Southampton, SO17 1BJ, U.K. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K. ABSTRACT This paper addresses the problem of fair equilibrium selection in graphical games.",
                "Our approach is based on the data structure called the best response policy, which was proposed by Kearns et al. [13] as a way to represent all Nash equilibria of a graphical game.",
                "In [9], it was shown that the best response policy has polynomial size as long as the underlying graph is a path.",
                "In this paper, we show that if the underlying graph is a bounded-degree tree and the best response policy has polynomial size then there is an efficient algorithm which constructs a Nash equilibrium that guarantees certain payoffs to all participants.",
                "Another attractive solution concept is a Nash equilibrium that maximizes the social welfare.",
                "We show that, while exactly computing the latter is infeasible (we prove that solving this problem may involve algebraic numbers of an arbitrarily high degree), there exists an FPTAS for finding such an equilibrium as long as the best response policy has polynomial size.",
                "These two algorithms can be combined to produce Nash equilibria that satisfy various fairness criteria.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a large community of agents, an agents behavior is not likely to have a direct effect on most other agents: rather, it is just the agents who are close enough to him that will be affected.",
                "However, as these agents respond by adapting their behavior, more agents will feel the consequences and eventually the choices made by a single agent will propagate throughout the entire community.",
                "This is the intuition behind graphical games, which were introduced by Kearns, Littman and Singh in [13] as a compact representation scheme for games with many players.",
                "In an n-player graphical game, each player is associated with a vertex of an underlying graph G, and the payoffs of each player depend on his action as well as on the actions of his neighbors in the graph.",
                "If the maximum degree of G is Δ, and each player has two actions available to him, then the game can be represented using n2Δ+1 numbers.",
                "In contrast, we need n2n numbers to represent a general n-player 2-action game, which is only practical for small values of n. For graphical games with constant Δ, the size of the game is linear in n. One of the most natural problems for a graphical game is that of finding a Nash equilibrium, the existence of which follows from Nashs celebrated theorem (as graphical games are just a special case of n-player games).",
                "The first attempt to tackle this problem was made in [13], where the authors consider graphical games with two actions per player in which the underlying graph is a boundeddegree tree.",
                "They propose a generic algorithm for finding Nash equilibria that can be specialized in two ways: an exponential-time algorithm for finding an (exact) Nash equilibrium, and a fully polynomial time <br>approximation</br> scheme (FPTAS) for finding an <br>approximation</br> to a Nash equilibrium.",
                "For any > 0 this algorithm outputs an -Nash equilibrium, which is a strategy profile in which no player can improve his payoff by more than by unilaterally changing his strategy.",
                "While -Nash equilibria are often easier to compute than exact Nash equilibria, this solution concept has several drawbacks.",
                "First, the players may be sensitive to a small loss in payoffs, so the strategy profile that is an -Nash equilibrium will not be stable.",
                "This will be the case even if there is only a small subset of players who are extremely price-sensitive, and for a large population of players it may be difficult to choose a value of that will satisfy everyone.",
                "Second, the strategy profiles that are close to being Nash equilibria may be much better with respect to the properties under consideration than exact Nash equilibria.",
                "Therefore, the (<br>approximation</br> to the) value of the best solution that corresponds to an -Nash equilibrium may not be indicative of what can be achieved under an exact Nash equilibrium.",
                "This is especially important if the purpose of the approximate solution is to provide a good benchmark for a system of selfish agents, as the benchmark implied by an -Nash equilibrium may be unrealistic.",
                "For these reasons, in this paper we focus on the problem of computing exact Nash equilibria.",
                "Building on ideas of [14], Elkind et al. [9] showed how to find an (exact) Nash equilibrium in polynomial time when the underlying 162 graph has degree 2 (that is, when the graph is a collection of paths and cycles).",
                "By contrast, finding a Nash equilibrium in a general degree-bounded graph appears to be computationally intractable: it has been shown (see [5, 12, 7]) to be complete for the complexity class PPAD. [9] extends this hardness result to the case in which the underlying graph has bounded pathwidth.",
                "A graphical game may not have a unique Nash equilibrium, indeed it may have exponentially many.",
                "Moreover, some Nash equilibria are more desirable than others.",
                "Rather than having an algorithm which merely finds some Nash equilibrium, we would like to have algorithms for finding Nash equilibria with various sociallydesirable properties, such as maximizing overall payoff or distributing profit fairly.",
                "A useful property of the data structure of [13] is that it simultaneously represents the set of all Nash equilibria of the underlying game.",
                "If this representation has polynomial size (as is the case for paths, as shown in [9]), one may hope to extract from it a Nash equilibrium with the desired properties.",
                "In fact, in [13] the authors mention that this is indeed possible if one is interested in finding an (approximate) -Nash equilibrium.",
                "The goal of this paper is to extend this to exact Nash equilibria. 1.1 Our Results In this paper, we study n-player 2-action graphical games on bounded-degree trees for which the data structure of [13] has size poly(n).",
                "We focus on the problem of finding exact Nash equilibria with certain socially-desirable properties.",
                "In particular, we show how to find a Nash equilibrium that (nearly) maximizes the social welfare, i.e., the sum of the players payoffs, and we show how to find a Nash equilibrium that (nearly) satisfies prescribed payoff bounds for all players.",
                "Graphical games on bounded-degree trees have a simple algebraic structure.",
                "One attractive feature, which follows from [13], is that every such game has a Nash equilibrium in which the strategy of every player is a rational number.",
                "Section 3 studies the algebraic structure of those Nash equilibria that maximize social welfare.",
                "We show (Theorems 1 and 2) that, surprisingly, the set of Nash equilibria that maximize social welfare is more complex.",
                "In fact, for any algebraic number α ∈ [0, 1] with degree at most n, we exhibit a graphical game on a path of length O(n) such that, in the unique social welfare-maximizing Nash equilibrium of this game, one of the players plays the mixed strategy α.1 This result shows that it may be difficult to represent an optimal Nash equilibrium.",
                "It seems to be a novel feature of the setting we consider here, that an optimal Nash equilibrium is hard to represent, in a situation where it is easy to find and represent a Nash equilibrium.",
                "As the social welfare-maximizing Nash equilibrium may be hard to represent efficiently, we have to settle for an <br>approximation</br>.",
                "However, the crucial difference between our approach and that of previous papers [13, 16, 19] is that we require our algorithm to output an exact Nash equilibrium, though not necessarily the optimal one with respect to our criteria.",
                "In Section 4, we describe an algorithm that satisfies this requirement.",
                "Namely, we propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within of optimal.",
                "It runs in polynomial time (Theorem 3,4) for any graphical game on a bounded-degree tree for which the data structure proposed by [13] (the so-called best response policy, defined below) is of size poly(n) (note that, as shown in [9], this is always the case when the underlying graph is a path).",
                "More pre1 A related result in a different context was obtained by Datta [8], who shows that n-player 2-action games are universal in the sense that any real algebraic variety can be represented as the set of totally mixed Nash equilibria of such games. cisely, the running time of our algorithm is polynomial in n, Pmax, and 1/ , where Pmax is the maximum absolute value of an entry of a payoff matrix, i.e., it is a pseudopolynomial algorithm, though it is fully polynomial with respect to .",
                "We show (Section 4.1) that under some restrictions on the payoff matrices, the algorithm can be transformed into a (truly) polynomial-time algorithm that outputs a Nash equilibrium whose total payoff is within a 1 − factor from the optimal.",
                "In Section 5, we consider the problem of finding a Nash equilibrium in which the expected payoff of each player Vi exceeds a prescribed threshold Ti.",
                "Using the idea from Section 4 we give (Theorem 5) a fully polynomial time <br>approximation</br> scheme for this problem.",
                "The running time of the algorithm is bounded by a polynomial in n, Pmax, and .",
                "If the instance has a Nash equilibrium satisfying the prescribed thresholds then the algorithm constructs a Nash equilibrium in which the expected payoff of each player Vi is at least Ti − .",
                "In Section 6, we introduce other natural criteria for selecting a good Nash equilibrium and we show that the algorithms described in the two previous sections can be used as building blocks in finding Nash equilibria that satisfy these criteria.",
                "In particular, in Section 6.1 we show how to find a Nash equilibrium that approximates the maximum social welfare, while guaranteeing that each individual payoff is close to a prescribed threshold.",
                "In Section 6.2 we show how to find a Nash equilibrium that (nearly) maximizes the minimum individual payoff.",
                "Finally, in Section 6.3 we show how to find a Nash equilibrium in which the individual payoffs of the players are close to each other. 1.2 Related Work Our <br>approximation</br> scheme (Theorem 3 and Theorem 4) shows a contrast between the games that we study and two-player n-action games, for which the corresponding problems are usually intractable.",
                "For two-player n-action games, the problem of finding Nash equilibria with special properties is typically NP-hard.",
                "In particular, this is the case for Nash equilibria that maximize the social welfare [11, 6].",
                "Moreover, it is likely to be intractable even to approximate such equilibria.",
                "In particular, Chen, Deng and Teng [4] show that there exists some , inverse polynomial in n, for which computing an -Nash equilibrium in 2-player games with n actions per player is PPAD-complete.",
                "Lipton and Markakis [15] study the algebraic properties of Nash equilibria, and point out that standard quantifier elimination algorithms can be used to solve them.",
                "Note that these algorithms are not polynomial-time in general.",
                "The games we study in this paper have polynomial-time computable Nash equilibria in which all mixed strategies are rational numbers, but an optimal Nash equilibrium may necessarily include mixed strategies with high algebraic degree.",
                "A correlated equilibrium (CE) (introduced by Aumann [2]) is a distribution over vectors of players actions with the property that if any player is told his own action (the value of his own component) from a vector generated by that distribution, then he cannot increase his expected payoff by changing his action.",
                "Any Nash equilibrium is a CE but the converse does not hold in general.",
                "In contrast with Nash equilibria, correlated equilibria can be found for low-degree graphical games (as well as other classes of conciselyrepresented multiplayer games) in polynomial time [17].",
                "But, for graphical games it is NP-hard to find a correlated equilibrium that maximizes total payoff [18].",
                "However, the NP-hardness results apply to more general games than the one we consider here, in particular the graphs are not trees.",
                "From [2] it is also known that there exist 2-player, 2-action games for which the expected total payoff 163 of the best correlated equilibrium is higher than the best Nash equilibrium, and we discuss this issue further in Section 7. 2.",
                "PRELIMINARIES AND NOTATION We consider graphical games in which the underlying graph G is an n-vertex tree, in which each vertex has at most Δ children.",
                "Each vertex has two actions, which are denoted by 0 and 1.",
                "A mixed strategy of a player V is represented as a single number v ∈ [0, 1], which denotes the probability that V selects action 1.",
                "For the purposes of the algorithm, the tree is rooted arbitrarily.",
                "For convenience, we assume without loss of generality that the root has a single child, and that its payoff is independent of the action chosen by the child.",
                "This can be achieved by first choosing an arbitrary root of the tree, and then adding a dummy parent of this root, giving the new parent a constant payoff function, e.g., 0.",
                "Given an edge (V, W ) of the tree G, and a mixed strategy w for W , let G(V,W ),W =w be the instance obtained from G by (1) deleting all nodes Z which are separated from V by W (i.e., all nodes Z such that the path from Z to V passes through W ), and (2) restricting the instance so that W is required to play mixed strategy w. Definition 1.",
                "Suppose that (V, W ) is an edge of the tree, that v is a mixed strategy for V and that w is a mixed strategy for W .",
                "We say that v is a potential best response to w (denoted by v ∈ pbrV (w)) if there is an equilibrium in the instance G(V,W ),W =w in which V has mixed strategy v. We define the best response policy for V , given W , as B(W, V ) = {(w, v) | v ∈ pbrV (w), w ∈ [0, 1]}.",
                "The upstream pass of the generic algorithm of [13] considers every node V (other than the root) and computes the best response policy for V given its parent.",
                "With the above assumptions about the root, the downstream pass is straightforward.",
                "The root selects a mixed strategy w for the root W and a mixed strategy v ∈ B(W, V ) for each child V of W .",
                "It instructs each child V to play v. The remainder of the downward pass is recursive.",
                "When a node V is instructed by its parent to adopt mixed strategy v, it does the following for each child U - It finds a pair (v, u) ∈ B(V, U) (with the same v value that it was given by its parent) and instructs U to play u.",
                "The best response policy for a vertex U given its parent V can be represented as a union of rectangles, where a rectangle is defined by a pair of closed intervals (IV , IU ) and consists of all points in IV × IU ; it may be the case that one or both of the intervals IV and IU consists of a single point.",
                "In order to perform computations on B(V, U), and to bound the number of rectangles, [9] used the notion of an event point, which is defined as follows.",
                "For any set A ⊆ [0, 1]2 that is represented as a union of a finite number of rectangles, we say that a point u ∈ [0, 1] on the U-axis is a Uevent point of A if u = 0 or u = 1 or the representation of A contains a rectangle of the form IV × IU and u is an endpoint of IU ; V -event points are defined similarly.",
                "For many games considered in this paper, the underlying graph is an n-vertex path, i.e., a graph G = (V, E) with V = {V1, . . . , Vn} and E = {(V1, V2), . . . , (Vn−1, Vn)}.",
                "In [9], it was shown that for such games, the best response policy has only polynomially-many rectangles.",
                "The proof that the number of rectangles in B(Vj+1, Vj) is polynomial proceeds by first showing that the number of event points in B(Vj+1, Vj ) cannot exceed the number of event points in B(Vj, Vj−1) by more than 2, and using this fact to bound the number of rectangles in B(Vj+1, Vj ).",
                "Let P0 (V ) and P1 (V ) be the expected payoffs to V when it plays 0 and 1, respectively.",
                "Both P0 (V ) and P1 (V ) are multilinear functions of the strategies of V s neighbors.",
                "In what follows, we will frequently use the following simple observation.",
                "CLAIM 1.",
                "For a vertex V with a single child U and parent W , given any A, B, C, D ∈ Q, A , B , C , D ∈ Q, one can select the payoffs to V so that P0 (V ) = Auw + Bu + Cw + D, P1 (V ) = A uw + B u + C w + D .",
                "Moreover, if all A, B, C, D, A , B , C , D are integer, the payoffs to V are integer as well.",
                "PROOF.",
                "We will give the proof for P0 (V ); the proof for P1 (V ) is similar.",
                "For i, j = 0, 1, let Pij be the payoff to V when U plays i, V plays 0 and W plays j.",
                "We have P0 (V ) = P00(1 − u)(1 − w) + P10u(1 − w) + P01(1 − u)w + P11uw.",
                "We have to select the values of Pij so that P00 − P10 − P01 + P11 = A, −P00 + P10 = B, −P00 + P01 = C, P00 = D. It is easy to see that the unique solution is given by P00 = D, P01 = C + D, P10 = B + D, P11 = A + B + C + D. The input to all algorithms considered in this paper includes the payoff matrices for each player.",
                "We assume that all elements of these matrices are integer.",
                "Let Pmax be the greatest absolute value of any element of any payoff matrix.",
                "Then the input consists of at most n2Δ+1 numbers, each of which can be represented using log Pmax bits. 3.",
                "NASH EQUILIBRIA THAT MAXIMIZE THE SOCIAL WELFARE: SOLUTIONS IN R \\ Q From the point of view of social welfare, the best Nash equilibrium is the one that maximizes the sum of the players expected payoffs.",
                "Unfortunately, it turns out that computing such a strategy profile exactly is not possible: in this section, we show that even if all players payoffs are integers, the strategy profile that maximizes the total payoff may have irrational coordinates; moreover, it may involve algebraic numbers of an arbitrary degree. 3.1 Warm-up: quadratic irrationalities We start by providing an example of a graphical game on a path of length 3 with integer payoffs such that in the Nash equilibrium that maximizes the total payoff, one of the players has a strategy in R \\ Q.",
                "In the next subsection, we will extend this example to algebraic numbers of arbitrary degree n; to do so, we have to consider paths of length O(n).",
                "THEOREM 1.",
                "There exists an integer-payoff graphical game G on a 3-vertex path UV W such that, in any Nash equilibrium of G that maximizes social welfare, the strategy, u, of the player U and the total payoff, p, satisfy u, p ∈ R \\ Q.",
                "PROOF.",
                "The payoffs to the players in G are specified as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = −uw + 3w and P1 (V ) = P0 (V ) + w(u + 2) − (u + 1), where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = u+1 u+2 .",
                "Observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "The payoff to W is 0 if it selects the same action as V and 1 otherwise.",
                "CLAIM 2.",
                "All Nash equilibria of the game G are of the form (u, 1/2, f(u)).",
                "That is, in any Nash equilibrium, V plays v = 1/2 and W plays w = f(u).",
                "Moreover, for any value of u, the vector of strategies (u, 1/2, f(u)) constitutes a Nash equilibrium.",
                "PROOF.",
                "It is easy to check that for any u ∈ [0, 1], the vector (u, 1/2, f(u)) is a Nash equilibrium.",
                "Indeed, U is content to play 164 any mixed strategy u no matter what V and W do.",
                "Furthermore, V is indifferent between 0 and 1 as long as w = f(u), so it can play 1/2.",
                "Finally, if V plays 0 and 1 with equal probability, W is indifferent between 0 and 1, so it can play f(u).",
                "Conversely, suppose that v > 1/2.",
                "Then W strictly prefers to play 0, i.e., w = 0.",
                "Then for V we have P1 (V ) = P0 (V ) − (u + 1), i.e., P1 (V ) < P0 (V ), which implies v = 0, a contradiction.",
                "Similarly, if v < 1/2, player W prefers to play 1, so we have w = 1.",
                "Hence, P1 (V ) = P0 (V ) + (u + 2) − (u + 1), i.e., P1 (V ) > P0 (V ), which implies v = 1, a contradiction.",
                "Finally, if v = 1/2, but w = f(u), player V is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "This completes the proof of Claim 2.",
                "By Claim 2, the total payoff in any Nash equilibrium of this game is a function of u.",
                "More specifically, the payoff to U is 0, the payoff to V is −uf(u) + 3f(u), and the payoff to W is 1/2.",
                "Therefore, the Nash equilibrium with the maximum total payoff corresponds to the value of u that maximizes g(u) = −u (u + 1) u + 2 + 3 u + 1 u + 2 = − (u − 3)(u + 1) u + 2 .",
                "To find extrema of g(u), we compute h(u) = − d du g(u).",
                "We have h(u) = (2u − 2)(u + 2) − (u − 3)(u + 1) (u + 2)2 = u2 + 4u − 1 (u + 2)2 .",
                "Hence, h(u) = 0 if and only if u ∈ {−2 + √ 5, −2 − √ 5}.",
                "Note that −2 + √ 5 ∈ [0, 1].",
                "The function g(u) changes sign at −2, −1, and 3.",
                "We have g(u) < 0 for g > 3, g(u) > 0 for u < −2, so the extremum of g(u) that lies between 1 and 3, i.e., u = −2 + √ 5, is a local maximum.",
                "We conclude that the social welfare-maximizing Nash equilibrium for this game is given by the vector of strategies (−2+√ 5, 1/2, (5 − √ 5)/5).",
                "The respective total payoff is 0 − ( √ 5 − 5)( √ 5 − 1) √ 5 + 1 2 = 13/2 − 2 √ 5.",
                "This concludes the proof of Theorem 1. 3.2 Strategies of arbitrary degree We have shown that in the social welfare-maximizing Nash equilibrium, some players strategies can be quadratic irrationalities, and so can the total payoff.",
                "In this subsection, we will extend this result to show that we can construct an integer-payoff graphical game on a path whose social welfare-maximizing Nash equilibrium involves arbitrary algebraic numbers in [0, 1].",
                "THEOREM 2.",
                "For any degree-n algebraic number α ∈ [0, 1], there exists an integer payoff graphical game on a path of length O(n) such that, in all social welfare-maximizing Nash equilibria of this game, one of the players plays α.",
                "PROOF.",
                "Our proof consists of two steps.",
                "First, we construct a rational expression R(x) and a segment [x , x ] such that x , x ∈ Q and α is the only maximum of R(x) on [x , x ].",
                "Second, we construct a graphical game whose Nash equilibria can be parameterized by u ∈ [x , x ], so that at the equilibrium that corresponds to u the total payoff is R(u) and, moreover, some players strategy is u.",
                "It follows that to achieve the payoff-maximizing Nash equilibrium, this player has to play α.",
                "The details follow.",
                "LEMMA 1.",
                "Given an algebraic number α ∈ [0, 1], deg(α) = n, there exist K2, . . . , K2n+2 ∈ Q and x , x ∈ (0, 1) ∩ Q such that α is the only maximum of R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 on [x , x ].",
                "PROOF.",
                "Let P(x) be the minimal polynomial of α, i.e., a polynomial of degree n with rational coefficients whose leading coefficient is 1 such that P(α) = 0.",
                "Let A = {α1, . . . , αn} be the set of all roots of P(x).",
                "Consider the polynomial Q1(x) = −P2 (x).",
                "It has the same roots as P(x), and moreover, for any x ∈ A we have Q1(x) < 0.",
                "Hence, A is the set of all maxima of Q1(x).",
                "Now, set R(x) = Q1(x) (x+2)...(x+2n+1)(x+2n+2) .",
                "Observe that R(x) ≤ 0 for all x ∈ [0, 1] and R(x) = 0 if and only if Q1(x) = 0.",
                "Hence, the set A is also the set of all maxima of R(x) on [0, 1].",
                "Let d = min{|αi − α| | αi ∈ A, αi = α}, and set α = max{α − d/2, 0}, α = min{α + d/2, 1}.",
                "Clearly, α is the only zero (and hence, the only maximum) of R(x) on [α , α ].",
                "Let x and x be some rational numbers in (α , α) and (α, α ), respectively; note that by excluding the endpoints of the intervals we ensure that x , x = 0, 1.",
                "As [x , x ] ⊂ [α , α ], we have that α is the only maximum of R(x) on [x , x ].",
                "As R(x) is a proper rational expression and all roots of its denominator are simple, by partial fraction decomposition theorem, R(x) can be represented as R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 , where K2, . . . , K2n+2 are rational numbers.",
                "Consider a graphical game on the path U−1V−1U0V0U1V1 . . .",
                "Uk−1Vk−1Uk, where k = 2n + 2.",
                "Intuitively, we want each triple (Ui−1, Vi−1, Ui) to behave similarly to the players U, V , and W from the game described in the previous subsection.",
                "More precisely, we define the payoffs to the players in the following way. • The payoff to U−1 is 0 no matter what everyone else does. • The expected payoff to V−1 is 0 if it plays 0 and u0 − (x − x )u−1 −x if it plays 1, where u0 and u−1 are the strategies of U0 and U−1, respectively. • The expected payoff to V0 is 0 if it plays 0 and u1(u0 + 1)− u0 if it plays 1, where u0 and u1 are the strategies of U0 and U1, respectively. • For each i = 1, . . . , k − 1, the expected payoff to Vi when it plays 0 is P0 (Vi) = Aiuiui+1 − Aiui+1, and the expected payoff to Vi when it plays 1 is P1 (Vi) = P0 (Vi) + ui+1(2 − ui) − 1, where Ai = −Ki+1 and ui+1 and ui are the strategies of Ui+1 and Ui, respectively. • For each i = 0, . . . , k, the payoff to Ui does not depend on Vi and is 1 if Ui and Vi−1 select different actions and 0 otherwise.",
                "We will now characterize the Nash equilibria of this game using a sequence of claims.",
                "CLAIM 3.",
                "In all Nash equilibria of this game V−1 plays 1/2, and the strategies of u−1 and u0 satisfy u0 = (x − x )u−1 + x .",
                "Consequently, in all Nash equilibria we have u0 ∈ [x , x ]. 165 PROOF.",
                "The proof is similar to that of Claim 2.",
                "Let f(u−1) = (x − x )u−1 + x .",
                "Clearly, the player V−1 is indifferent between playing 0 and 1 if and only if u0 = f(u−1).",
                "Suppose that v−1 < 1/2.",
                "Then U0 strictly prefers to play 1, i.e., u0 = 1, so we have P1 (V−1) = P0 (V−1) + 1 − (x − x )u−1 − x .",
                "As 1 − x ≤ 1 − (x − x )u−1 − x ≤ 1 − x for u−1 ∈ [0, 1] and x < 1, we have P1 (V−1) > P0 (V−1), so V−1 prefers to play 1, a contradiction.",
                "Similarly, if v−1 > 1/2, the player U0 strictly prefers to play 0, i.e., u0 = 0, so we have P1 (V−1) = P0 (V−1) − (x − x )u−1 − x .",
                "As x < x , x > 0, we have P1 (V−1) < P0 (V−1), so V−1 prefers to play 0, a contradiction.",
                "Finally, if V−1 plays 1/2, but u0 = f(u−1), player V−1 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Also, note that f(0) = x , f(1) = x , and, moreover, f(u−1) ∈ [x , x ] if and only if u−1 ∈ [0, 1].",
                "Hence, in all Nash equilibria of this game we have u0 ∈ [x , x ].",
                "CLAIM 4.",
                "In all Nash equilibria of this game for each i = 0, . . . , k − 1, we have vi = 1/2, and the strategies of the players Ui and Ui+1 satisfy ui+1 = fi(ui), where f0(u) = u/(u + 1) and fi(u) = 1/(2 − u) for i > 0.",
                "PROOF.",
                "The proof of this claim is also similar to that of Claim 2.",
                "We use induction on i to prove that the statement of the claim is true and, additionally, ui = 1 for i > 0.",
                "For the base case i = 0, note that u0 = 0 by the previous claim (recall that x , x are selected so that x , x = 0, 1) and consider the triple (U0, V0, U1).",
                "Let v0 be the strategy of V0.",
                "First, suppose that v0 > 1/2.",
                "Then U1 strictly prefers to play 0, i.e., u1 = 0.",
                "Then for V0 we have P1 (V0) = P0 (V0) − u0.",
                "As u0 = 0, we have P1 (V0) < P0 (V0), which implies v1 = 0, a contradiction.",
                "Similarly, if v0 < 1/2, player U1 prefers to play 1, so we have u1 = 1.",
                "Hence, P1 (V0) = P0 (V0) + 1.",
                "It follows that P1 (V0) > P0 (V0), which implies v0 = 1, a contradiction.",
                "Finally, if v0 = 1/2, but u1 = u0/(u0 + 1), player V0 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as u1 = u0/(u0 + 1) and u0 ∈ [0, 1], we have u1 = 1.",
                "The argument for the inductive step is similar.",
                "Namely, suppose that the statement is proved for all i < i and consider the triple (Ui, Vi, Ui+1).",
                "Let vi be the strategy of Vi.",
                "First, suppose that vi > 1/2.",
                "Then Ui+1 strictly prefers to play 0, i.e., ui+1 = 0.",
                "Then for Vi we have P1 (Vi) = P0 (Vi)−1, i.e., P1 (Vi) < P0 (Vi), which implies vi = 0, a contradiction.",
                "Similarly, if vi < 1/2, player Ui+1 prefers to play 1, so we have ui+1 = 1.",
                "Hence, P1 (Vi) = P0 (Vi) + 1 − ui.",
                "By inductive hypothesis, we have ui < 1.",
                "Consequently, P1 (Vi) > P0 (Vi), which implies vi = 1, a contradiction.",
                "Finally, if vi = 1/2, but ui+1 = 1/(2 − ui), player Vi is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as ui+1 = 1/(2 − ui) and ui < 1, we have ui+1 < 1.",
                "CLAIM 5.",
                "Any strategy profile of the form (u−1, 1/2, u0, 1/2, u1, 1/2, . . . , uk−1, 1/2, uk), where u−1 ∈ [0, 1], u0 = (x − x )u−1 + x , u1 = u0/(u0 + 1), and ui+1 = 1/(2 − ui) for i ≥ 1 constitutes a Nash equilibrium.",
                "PROOF.",
                "First, the player U−1s payoffs do not depend on other players actions, so he is free to play any strategy in [0, 1].",
                "As long as u0 = (x −x )u−1 +x , player V−1 is indifferent between 0 and 1, so he is content to play 1/2; a similar argument applies to players V0, . . . , Vk−1.",
                "Finally, for each i = 0, . . . , k, the payoffs of player Ui only depend on the strategy of player Vi−1.",
                "In particular, as long as vi−1 = 1/2, player Ui is indifferent between playing 0 and 1, so he can play any mixed strategy ui ∈ [0, 1].",
                "To complete the proof, note that (x − x )u−1 + x ∈ [0, 1] for all u−1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] for all u0 ∈ [0, 1], and 1/(2 − ui) ∈ [0, 1] for all ui ∈ [0, 1], so we have ui ∈ [0, 1] for all i = 0, . . . , k. Now, let us compute the total payoff under a strategy profile of the form given in Claim 5.",
                "The payoff to U−1 is 0, and the expected payoff to each of the Ui, i = 0, . . . , k, is 1/2.",
                "The expected payoffs to V−1 and V0 are 0.",
                "Finally, for any i = 1, . . . , k − 1, the expected payoff to Vi is Ti = Aiuiui+1 − Aiui+1.",
                "It follows that to find a Nash equilibrium with the highest total payoff, we have to maximize Pk−1 i=1 Ti subject to conditions u−1 ∈ [0, 1], u0 = (x −x )u−1+x , u1 = u0/(u0+1), and ui+1 = 1/(2−ui) for i = 1, . . . , k − 1.",
                "We would like to express Pk−1 i=1 Ti as a function of u0.",
                "To simplify notation, set u = u0.",
                "LEMMA 2.",
                "For i = 1, . . . , k, we have ui = u+i−1 u+i .",
                "PROOF.",
                "The proof is by induction on i.",
                "For i = 1, we have u1 = u/(u + 1).",
                "Now, for i ≥ 2 suppose that ui−1 = (u + i − 2)/(u + i − 1).",
                "We have ui = 1/(2 − ui−1) = (u + i − 1)/(2u + 2i − 2 − u − i + 2) = (u + i − 1)/(u + i).",
                "It follows that for i = 1, . . . , k − 1 we have Ti = Ai u + i − 1 u + i u + i u + i + 1 − Ai u + i u + i + 1 = −Ai 1 u + i + 1 = Ki+1 u + i + 1 .",
                "Observe that as u−1 varies from 0 to 1, u varies from x to x .",
                "Therefore, to maximize the total payoff, we have to choose u ∈ [x , x ] so as to maximize K2 u + 2 + · · · + Kk u + k = R(u).",
                "By construction, the only maximum of R(u) on [x , x ] is α.",
                "It follows that in the payoff-maximizing Nash equilibrium of our game U0 plays α.",
                "Finally, note that the payoffs in our game are rational rather than integer.",
                "However, it is easy to see that we can multiply all payoffs to a player by their greatest common denominator without affecting his strategy.",
                "In the resulting game, all payoffs are integer.",
                "This concludes the proof of Theorem 2. 4.",
                "APPROXIMATING THE SOCIALLY OPTIMAL NASH EQUILIBRIUM We have seen that the Nash equilibrium that maximizes the social welfare may involve strategies that are not in Q.",
                "Hence, in this section we focus on finding a Nash equilibrium that is almost optimal from the social welfare perspective.",
                "We propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within from optimal.",
                "The running time of this algorithm is polynomial in 1/ , n and |Pmax| (recall that Pmax is the maximum absolute value of an entry of a payoff matrix).",
                "While the negative result of the previous section is for graphical games on paths, our algorithm applies to a wider range of scenarios.",
                "Namely, it runs in polynomial time on bounded-degree trees 166 as long as the best response policy of each vertex, given its parent, can be represented as a union of a polynomial number of rectangles.",
                "Note that path graphs always satisfy this condition: in [9] we showed how to compute such a representation, given a graph with maximum degree 2.",
                "Consequently, for path graphs the running time of our algorithm is guaranteed to be polynomial. (Note that [9] exhibits a family of graphical games on bounded-degree trees for which the best response policies of some of the vertices, given their parents, have exponential size, when represented as unions of rectangles.)",
                "Due to space restrictions, in this version of the paper we present the algorithm for the case where the graph underlying the graphical game is a path.",
                "We then state our result for the general case; the proof can be found in the full version of this paper [10].",
                "Suppose that s is a strategy profile for a graphical game G. That is, s assigns a mixed strategy to each vertex of G. let EPV (s) be the expected payoff of player V under s and let EP(s) =P V EPV (s).",
                "Let M(G) = max{EP(s) | s is a Nash equilibrium for G}.",
                "THEOREM 3.",
                "Suppose that G is a graphical game on an nvertex path.",
                "Then for any > 0 there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G)− .",
                "The running time of the algorithm is O(n4 P3 max/ 3 ) PROOF.",
                "Let {V1, . . . , Vn} be the set of all players.",
                "We start by constructing the best response policies for all Vi, i = 1, . . . , n − 1.",
                "As shown in [9], this can be done in time O(n3 ).",
                "Let N > 5n be a parameter to be selected later, set δ = 1/N, and define X = {jδ | j = 0, . . . , N}.",
                "We say that vj is an event point for a player Vi if it is a Vi-event point for B(Vi, Vi−1) or B(Vi+1, Vi).",
                "For each player Vi, consider a finite set of strategies Xi given by Xi = X ∪ {vj |vj is an event point for Vi}.",
                "It has been shown in [9] that for any i = 2, . . . , n, the best response policy B(Vi, Vi−1) has at most 2n + 4 Vi-event points.",
                "As we require N > 5n, we have |Xi| ≤ 2N; assume without loss of generality that |Xi| = 2N.",
                "Order the elements of Xi in increasing order as x1 i = 0 < x2 i < · · · < x2N i .",
                "We will refer to the strategies in Xi as discrete strategies of player Vi; a strategy profile in which each player has a discrete strategy will be referred to as a discrete strategy profile.",
                "We will now show that even we restrict each player Vi to strategies from Xi, the players can still achieve a Nash equilibrium, and moreover, the best such Nash equilibrium (with respect to the social welfare) has total payoff at least M(G) − as long as N is large enough.",
                "Let s be a strategy profile that maximizes social welfare.",
                "That is, let s = (s1, . . . , sn) where si is the mixed strategy of player Vi and EP(s) = M(G).",
                "For i = 1, . . . , n, let ti = max{xj i | xj i ≤ si}.",
                "First, we will show that the strategy profile t = (t1, . . . , tn) is a Nash equilibrium for G. Fix any i, 1 < i ≤ n, and let R = [v1, v2]×[u1, u2] be the rectangle in B(Vi, Vi−1) that contains (si, si−1).",
                "As v1 is a Vi-event point of B(Vi, Vi−1), we have v1 ≤ ti, so the point (ti, si−1) is inside R. Similarly, the point u1 is a Vi−1-event point of B(Vi, Vi−1), so we have u1 ≤ ti−1, and therefore the point (ti, ti−1) is inside R. This means that for any i, 1 < i ≤ n, we have ti−1 ∈ pbrVi−1 (ti), which implies that t = (t1, . . . , tn) is a Nash equilibrium for G. Now, let us estimate the expected loss in social welfare caused by playing t instead of s. LEMMA 3.",
                "For any pair of strategy profiles t, s such that |ti − si| ≤ δ we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ for any i = 1, . . . , n. PROOF.",
                "Let Pi klm be the payoff of the player Vi, when he plays k, Vi−1 plays l, and Vi+1 plays m. Fix i = 1, . . . , n and for k, l, m ∈ {0, 1}, set tklm = tk i−1(1 − ti−1)1−k tl i(1 − ti)1−l tm i+1(1 − ti+1)1−m sklm = sk i−1(1 − si−1)1−k sl i(1 − si)1−l sm i+1(1 − si+1)1−m .",
                "We have |EPVi (s) − EPVi (t)| ≤ X k,l,m=0,1 |Pi klm(tklm − sklm )| ≤ 8Pmax max klm |tklm − sklm | We will now show that for any k, l, m ∈ {0, 1} we have |tklm − sklm | ≤ 3δ; clearly, this implies the lemma.",
                "Indeed, fix k, l, m ∈ {0, 1}.",
                "Set x = tk i−1(1 − ti−1)1−k , x = sk i−1(1 − si−1)1−k , y = tl i(1 − ti)1−l , y = sl i(1 − si)1−l , z = tm i+1(1 − ti+1)1−m , z = sm i+1(1 − si+1)1−m .",
                "Observe that if k = 0 then x − x = (1 − ti−1) − (1 − si−1), and if k = 1 then x − x = ti−1 − si−1, so |x − x | ≤ δ.",
                "A similar argument shows |y − y | ≤ δ, |z − z | ≤ δ.",
                "Also, we have x, x , y, y , z, z ∈ [0, 1].",
                "Hence, |tklm −sklm | = |xyz−x y z | = |xyz − x yz + x yz − x y z + x y z − x y z | ≤ |x − x |yz + |y − y |x z + |z − z |x y ≤ 3δ.",
                "Lemma 3 implies Pn i=1 |EPVi (s) − EPVi (t)| ≤ 24nPmaxδ, so by choosing δ < /(24nPmax), or, equivalently, setting N > 24nPmax/ , we can ensure that the total expected payoff for the strategy profile t is within from optimal.",
                "We will now show that we can find the best discrete Nash equilibrium (with respect to the social welfare) using dynamic programming.",
                "As t is a discrete strategy profile, this means that the strategy profile found by our algorithm will be at least as good as t. Define ml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj , j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1, and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The values ml,k i , i = 1, . . . , n; k, l = 1, . . . , N, can be computed inductively, as follows.",
                "We have ml,k 1 = 0 for k, l = 1, . . . , N. Now, suppose that we have already computed ml,k j for all j < i; k, l = 1, . . . , N. To compute mk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this is not the case, we have ml,k i = −∞.",
                "Otherwise, consider the set Y = Xi−2 ∩ pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "The proof of Theorem 1 in [9] implies that the set pbrVi−2 (xl i−1) is non-empty: the player Vi−2 has a potential best response to any strategy of Vi−1, in particular, xl i−1.",
                "By construction of the set Xi−2, this implies that Y is not empty.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "Then we have ml,k i = max{mj,l i−1 + pjlk | xj i−2 ∈ Y }.",
                "Finally, suppose that we have computed ml,k n for l, k = 1, . . . , N. We still need to take into account the payoff of player Vn.",
                "Hence, 167 we consider all pairs (xk n, xl n−1) that satisfy xl n−1 ∈ pbrVn−1 (xk n), and pick the one that maximizes the sum of mk,l n and the payoff of Vn when he plays xk n and Vn−1 plays xl n−1.",
                "This results in the maximum total payoff the players can achieve in a Nash equilibrium using discrete strategies; the actual strategy profile that produces this payoff can be reconstructed using standard dynamic programming techniques.",
                "It is easy to see that each ml,k i can be computed in time O(N), i.e., all of them can be computed in time O(nN3 ).",
                "Recall that we have to select N ≥ (24nPmax)/ to ensure that the strategy profile we output has total payoff that is within from optimal.",
                "We conclude that we can compute an -<br>approximation</br> to the best Nash equilibrium in time O(n4 P3 max/ 3 ).",
                "This completes the proof of Theorem 3.",
                "To state our result for the general case (i.e., when the underlying graph is a bounded-degree tree rather than a path), we need additional notation.",
                "If G has n players, let q(n) be an upper bound on the number of event points in the representation of any best response policy.",
                "That is, we assume that for any vertex U with parent V , B(V, U) has at most q(n) event points.",
                "We will be interested in the situation in which q(n) is polynomial in n. THEOREM 4.",
                "Let G be an n-player graphical game on a tree in which each node has at most Δ children.",
                "Suppose we are given a set of best-response policies for G in which each best-response policy B(V, U) is represented by a set of rectangles with at most q(n) event points.",
                "For any > 0, there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G) − .",
                "The running time of the algorithm is polynomial in n, Pmax and −1 provided that the tree has bounded degree (that is, Δ = O(1)) and q(n) is a polynomial in n. In particular, if N = max((Δ + 1)q(n) + 1, n2Δ+2 (Δ + 2)Pmax −1 ) and Δ > 1 then the running time is O(nΔ(2N)Δ .",
                "For the proof of this theorem, see [10]. 4.1 A polynomial-time algorithm for multiplicative <br>approximation</br> The running time of our algorithm is pseudopolynomial rather than polynomial, because it includes a factor which is polynomial in Pmax, the maximum (in absolute value) entry in any payoff matrix.",
                "If we are interested in multiplicative <br>approximation</br> rather than additive one, this can be improved to polynomial.",
                "First, note that we cannot expect a multiplicative <br>approximation</br> for all inputs.",
                "That is, we cannot hope to have an algorithm that computes a Nash equilibrium with total payoff at least (1 − )M(G).",
                "If we had such an algorithm, then for graphical games G with M(G) = 0, the algorithm would be required to output the optimal solution.",
                "To show that this is infeasible, observe that we can use the techniques of Section 3.2 to construct two integercoefficient graphical games on paths of length O(n) such that for some X ∈ R the maximal total payoff in the first game is X, the maximal total payoff in the second game is −X, and for both games, the strategy profiles that achieve the maximal total payoffs involve algebraic numbers of degree n. By combining the two games so that the first vertex of the second game becomes connected to the last vertex of the first game, but the payoffs of all players do not change, we obtain a graphical game in which the best Nash equilibrium has total payoff 0, yet the strategies that lead to this payoff have high algebraic complexity.",
                "However, we can achieve a multiplicative <br>approximation</br> when all entries of the payoff matrices are positive and the ratio between any two entries is polynomially bounded.",
                "Recall that we assume that all payoffs are integer, and let Pmin > 0 be the smallest entry of any payoff matrix.",
                "In this case, for any strategy profile the payoff to player i is at least Pmin, so the total payoff in the social-welfare maximizing Nash equilibrium s satisfies M(G) ≥ nPmin.",
                "Moreover, Lemma 3 implies that by choosing δ < /(24Pmax/Pmin), we can ensure that the Nash equilibrium t produced by our algorithm satisfies nX i=1 EPVi (s) − nX i=1 EPVi (t) ≤ 24Pmaxδn ≤ nPmin ≤ M(G), i.e., for this value of δ we have Pn i=1 EPVi (t) ≥ (1 − )M(G).",
                "Recall that the running time of our algorithm is O(nN3 ), where N has to be selected to satisfy N > 5n, N = 1/δ.",
                "It follows that if Pmin > 0, Pmax/Pmin = poly(n), we can choose N so that our algorithm provides a multiplicative <br>approximation</br> guarantee and runs in time polynomial in n and 1/ . 5.",
                "BOUNDED PAYOFF NASH EQUILIBRIA Another natural way to define what is a good Nash equilibrium is to require that each players expected payoff exceeds a certain threshold.",
                "These thresholds do not have to be the same for all players.",
                "In this case, in addition to the payoff matrices of the n players, we are given n numbers T1, . . . , Tn, and our goal is to find a Nash equilibrium in which the payoff of player i is at least Ti, or report that no such Nash equilibrium exists.",
                "It turns out that we can design an FPTAS for this problem using the same techniques as in the previous section.",
                "THEOREM 5.",
                "Given a graphical game G on an n-vertex path and n rational numbers T1, . . . , Tn, suppose that there exists a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. Then for any > 0 we can find in time O(max{nP3 max/ 3 , n4 / 3 }) a strategy profile s such that s is a Nash equilibrium for G and EPVi (s ) ≥ Ti − for i = 1, . . . , n. PROOF.",
                "The proof is similar to that of Theorem 3.",
                "First, we construct the best response policies for all players, choose N > 5n, and construct the sets Xi, i = 1, . . . , n, as described in the proof of Theorem 3.",
                "Consider a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. We construct a strategy profile ti = max{xj i | xj i ≤ si} and use the same argument as in the proof of Theorem 3 to show that t is a Nash equilibrium for G. By Lemma 3, we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ, so choosing δ < /(24Pmax), or, equivalently, N > max{5n, 24Pmax/ }, we can ensure EPVi (t) ≥ Ti − for i = 1, . . . , n. Now, we will use dynamic programming to find a discrete Nash equilibrium that satisfies EPVi (t) ≥ Ti − for i = 1, . . . , n. As t is a discrete strategy profile, our algorithm will succeed whenever there is a strategy profile s with EPVi (s) ≥ Ti− for i = 1, . . . , n. Let zl,k i = 1 if there is a discrete strategy profile such that for any j < i the strategy of the player Vj is a potential best response to the strategy of Vj+1, the expected payoff of Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "Otherwise, let zl,k i = 0.",
                "We can compute zl,k i , i = 1, . . . , n; k, l = 1, . . . , N inductively, as follows.",
                "We have zl,k 1 = 1 for k, l = 1, . . . , N. Now, suppose that we have already computed zl,k j for all j < i; k, l = 1, . . . , N. To compute zk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this 168 is not the case, clearly, zk,l i = 0.",
                "Otherwise, consider the set Y = Xi−2 ∩pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "It has been shown in the proof of Theorem 3 that Y = ∅.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "If there exists an xj i−2 ∈ Y such that zj,l i−1 = 1 and pjlk ≥ Ti−2 − , set zl,k i = 1.",
                "Otherwise, set zl,k i = 0.",
                "Having computed zl,k n , l, k = 1, . . . , N, we check if zl,k n = 1 for some pair (l, k). if such a pair of indices exists, we instruct Vn to play xk n and use dynamic programming techniques (or, equivalently, the downstream pass of the algorithm of [13]) to find a Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n (recall that Vn is a dummy player, i.e., we assume Tn = 0, EPn(s ) = 0 for any choice of s ).",
                "If zl,k n = 0 for all l, k = 1, . . . , N, there is no discrete Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n and hence no Nash equilibrium s (not necessarily discrete) such that EPVi (s) ≥ Ti for i = 1, . . . , n. The running time analysis is similar to that for Theorem 3; we conclude that the running time of our algorithm is O(nN3 ) = O(max{nP3 max/ 3 , n4 / 3 }).",
                "REMARK 1.",
                "Theorem 5 can be extended to trees of bounded degree in the same way as Theorem 4. 5.1 Exact Computation Another approach to finding Nash equilibria with bounded payoffs is based on inductively computing the subsets of the best response policies of all players so as to exclude the points that do not provide sufficient payoffs to some of the players.",
                "Formally, we say that a strategy v of the player V is a potential best response to a strategy w of its parent W with respect to a threshold vector T = (T1, . . . , Tn), (denoted by v ∈ pbrV (w, T)) if there is an equilibrium in the instance G(V,W ),W =w in which V plays mixed strategy v and the payoff to any player Vi downstream of V (including V ) is at least Ti.",
                "The best response policy for V with respect to a threshold vector T is defined as B(W, V, T) = {(w, v) | v ∈ pbrV (w, T), w ∈ [0, 1]}.",
                "It is easy to see that if any of the sets B(Vj, Vj−1, T), j = 1, . . . , n, is empty, it means that it is impossible to provide all players with expected payoffs prescribed by T. Otherwise, one can apply the downstream pass of the original algorithm of [13] to find a Nash equilibrium.",
                "As we assume that Vn is a dummy vertex whose payoff is identically 0, the Nash equilibrium with these payoffs exists as long as Tn ≤ 0 and B(Vn, Vn−1, T) is not empty.",
                "Using the techniques developed in [9], it is not hard to show that for any j = 1, . . . , n, the set B(Vj , Vj−1, T) consists of a finite number of rectangles, and one can compute B(Vj+1, Vj , T) given B(Vj , Vj−1, T).",
                "The advantage of this approach is that it allows us to represent all Nash equilibria that provide required payoffs to the players.",
                "However, it is not likely to be practical, since it turns out that the rectangles that appear in the representation of B(Vj , Vj−1, T) may have irrational coordinates.",
                "CLAIM 6.",
                "There exists a graphical game G on a 3-vertex path UV W and a vector T = (T1, T2, T3) such that B(V, W, T) cannot be represented as a union of a finite number of rectangles with rational coordinates.",
                "PROOF.",
                "We define the payoffs to the players in G as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = uw, P1 (V ) = P0 (V ) + w − .8u − .1, where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = .8u + .1; observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "It is not hard to see that we have B(W, V ) = [0, .1]×{0} ∪ [.1, .9]×[0, 1] ∪ [.9, 1]×{1}.",
                "The payoffs to W are not important for our construction; for example, set P0(W ) = P0(W ) = 0.",
                "Now, set T = (0, 1/8, 0), i.e., we are interested in Nash equilibria in which V s expected payoff is at least 1/8.",
                "Suppose w ∈ [0, 1].",
                "The player V can play a mixed strategy v when W is playing w as long as U plays u = f−1 (w) = 5w/4 − 1/8 (to ensure that V is indifferent between 0 and 1) and P0 (V ) = P1 (V ) = uw = w(5w/4 − 1/8) ≥ 1/8.",
                "The latter condition is satisfied if w ≤ (1 − √ 41)/20 < 0 or w ≥ (1 + √ 41)/20.",
                "Note that we have .1 < (1 + √ 41)/20 < .9.",
                "For any other value of w, any strategy of U either makes V prefer one of the pure strategies or does not provide it with a sufficient expected payoff.",
                "There are also some values of w for which V can play a pure strategy (0 or 1) as a potential best response to W and guarantee itself an expected payoff of at least 1/8; it can be shown that these values of w form a finite number of segments in [0, 1].",
                "We conclude that any representation of B(W, V, T) as a union of a finite number of rectangles must contain a rectangle of the form [(1 + √ 41)/20, w ]×[v , v ] for some w , v , v ∈ [0, 1].",
                "On the other hand, it can be shown that for any integer payoff matrices and threshold vectors and any j = 1, . . . , n − 1, the sets B(Vj+1, Vj, T) contain no rectangles of the form [u , u ]×{v} or {v}×[w , w ], where v ∈ R\\Q.",
                "This means that if B(Vn, Vn−1, T) is non-empty, i.e., there is a Nash equilibrium with payoffs prescribed by T, then the downstream pass of the algorithm of [13] can always pick a strategy profile that forms a Nash equilibrium, provides a payoff of at least Ti to the player Vi, and has no irrational coordinates.",
                "Hence, unlike in the case of the Nash equilibrium that maximizes the social welfare, working with irrational numbers is not necessary, and the fact that the algorithm discussed in this section has to do so can be seen as an argument against using this approach. 6.",
                "OTHER CRITERIA FOR SELECTING A NASH EQUILIBRIUM In this section, we consider several other criteria that can be useful in selecting a Nash equilibrium. 6.1 Combining welfare maximization with bounds on payoffs In many real life scenarios, we want to maximize the social welfare subject to certain restrictions on the payoffs to individual players.",
                "For example, we may want to ensure that no player gets a negative expected payoff, or that the expected payoff to player i is at least Pi max − ξ, where Pi max is the maximum entry of is payoff matrix and ξ is a fixed parameter.",
                "Formally, given a graphical game G and a vector T1, . . . , Tn, let S be the set of all Nash equilibria s of G that satisfy Ti ≤ EPVi (s) for i = 1, . . . , n, and let ˆs = argmaxs∈S EP(s).",
                "If the set S is non-empty, we can find a Nash equilibrium ˆs that is -close to satisfying the payoff bounds and is within from ˆs with respect to the total payoff by combining the algorithms of Section 4 and Section 5.",
                "Namely, for a given > 0, choose δ as in the proof of Theorem 3, and let Xi be the set of all discrete strategies of player Vi (for a 169 formal definition, see the proof of Theorem 3).",
                "Combining the proofs of Theorem 3 and Theorem 5, we can see that the strategy profile ˆt given by ˆti = max{xj i | xj i ≤ ˆsi} satisfies EPVi (ˆt) ≥ Ti − , |EP(ˆs) − EP(ˆt)| ≤ .",
                "Define ˆml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj, j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1 and the payoff to player Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The ˆml,k i can be computed by dynamic programming similarly to the ml,k i and zl,k i in the proofs of Theorems 3 and 5.",
                "Finally, as in the proof of Theorem 3, we use ml,k n to select the best discrete Nash equilibrium subject to the payoff constraints.",
                "Even more generally, we may want to maximize the total payoff to a subset of players (who are assumed to be able to redistribute the profits fairly among themselves) while guaranteeing certain expected payoffs to (a subset of) the other players.",
                "This problem can be handled similarly. 6.2 A minimax approach A more egalitarian measure of the quality of a Nash equilibrium is the minimal expected payoff to a player.",
                "The optimal solution with respect to this measure is a Nash equilibrium in which the minimal expected payoff to a player is maximal.",
                "To find an <br>approximation</br> to such a Nash equilibrium, we can combine the algorithm of Section 5 with binary search on the space of potential lower bounds.",
                "Note that the expected payoff to any player Vi given a strategy s always satisfies −Pmax ≤ EPVi (s) ≤ Pmax.",
                "For a fixed > 0, we start by setting T = −Pmax, T = Pmax, T∗ = (T + T )/2.",
                "We then run the algorithm of Section 5 with T1 = · · · = Tn = T∗ .",
                "If the algorithm succeeds in finding a Nash equilibrium s that satisfies EPVi (s ) ≥ T∗ − for all i = 1, . . . , n, we set T = T∗ , T∗ = (T + T )/2; otherwise, we set T = T∗ , T∗ = (T + T )/2 and loop.",
                "We repeat this process until |T − T | ≤ .",
                "It is not hard to check that for any p ∈ R, if there is a Nash equilibrium s such that mini=1,...,n EPVi (s) ≥ p, then our algorithm outputs a Nash equilibrium s that satisfies mini=1,...,n EPVi (s) ≥ p−2 .",
                "The running time of our algorithm is O(max{nP3 max log −1 / 3 , n4 log −1 / 3 }). 6.3 Equalizing the payoffs When the players payoff matrices are not very different, it is reasonable to demand that the expected payoffs to the players do not differ by much either.",
                "We will now show that Nash equilibria in this category can be approximated in polynomial time as well.",
                "Indeed, observe that the algorithm of Section 5 can be easily modified to deal with upper bounds on individual payoffs rather than lower bounds.",
                "Moreover, we can efficiently compute an <br>approximation</br> to a Nash equilibrium that satisfies both the upper bound and the lower bound for each player.",
                "More precisely, suppose that we are given a graphical game G, 2n rational numbers T1, . . . , Tn, T1, . . . , Tn and > 0.",
                "Then if there exists a strategy profile s such that s is a Nash equilibrium for G and Ti ≤ EPVi (s) ≤ Ti for i = 1, . . . , n, we can find a strategy profile s such that s is a Nash equilibrium for G and Ti − ≤ EPVi (s ) ≤ Ti + for i = 1, . . . , n. The modified algorithm also runs in time O(max{nP3 max/ 3 , [4]n4 / 3 }).",
                "This observation allows us to approximate Nash equilibria in which all players expected payoffs differ by at most ξ for any fixed ξ > 0.",
                "Given an > 0, we set T1 = · · · = Tn = −Pmax, T1 = · · · = Tn = −Pmax + ξ + , and run the modified version of the algorithm of Section 5.",
                "If it fails to find a solution, we increment all Ti, Ti by and loop.",
                "We continue until the algorithm finds a solution, or Ti ≥ Pmax.",
                "Suppose that there exists a Nash equilibrium s that satisfies |EPVi (s) − EPVj (s)| ≤ ξ for all i, j = 1, . . . , n. Set r = mini=1,...,n EPVi (s); we have r ≤ EPVi (s) ≤ r + ξ for all i = 1, . . . , n. There exists a k ≥ 0 such that −Pmax + (k − 1) ≤ r ≤ −Pmax + k .",
                "During the kth step of the algorithm, we set T1 = · · · = Tn = −Pmax +(k−1) , i.e., we have r− ≤ Ti ≤ r, r + ξ ≤ Ti ≤ r + ξ + .",
                "That is, the Nash equilibrium s satisfies Ti ≤ r ≤ EPVi (s) ≤ r + ξ ≤ Ti , which means that when Ti is set to −Pmax + (k − 1) , our algorithm is guaranteed to output a Nash equilibrium t that satisfies r − 2 ≤ Ti − ≤ EPVi (t) ≤ Ti + ≤ r +ξ +2 .",
                "We conclude that whenever such a Nash equilibrium s exists, our algorithm outputs a Nash equilibrium t that satisfies |EPVi (t) − EPVj (t)| ≤ ξ + 4 for all i, j = 1, . . . , n. The running time of this algorithm is O(max{nP3 max/ 4 , n4 / 4 }).",
                "Note also that we can find the smallest ξ for which such a Nash equilibrium exists by combining this algorithm with binary search over the space ξ = [0, 2Pmax].",
                "This identifies an <br>approximation</br> to the fairest Nash equilibrium, i.e., one in which the players expected payoffs differ by the smallest possible amount.",
                "Finally, note that all results in this section can be extended to bounded-degree trees. 7.",
                "CONCLUSIONS We have studied the problem of equilibrium selection in graphical games on bounded-degree trees.",
                "We considered several criteria for selecting a Nash equilibrium, such as maximizing the social welfare, ensuring a lower bound on the expected payoff of each player, etc.",
                "First, we focused on the algebraic complexity of a social welfare-maximizing Nash equilibrium, and proved strong negative results for that problem.",
                "Namely, we showed that even for graphical games on paths, any algebraic number α ∈ [0, 1] may be the only strategy available to some player in all social welfaremaximizing Nash equilibria.",
                "This is in sharp contrast with the fact that graphical games on trees always possess a Nash equilibrium in which all players strategies are rational numbers.",
                "We then provided <br>approximation</br> algorithms for selecting Nash equilibria with special properties.",
                "While the problem of finding approximate Nash equilibria for various classes of games has received a lot of attention in recent years, most of the existing work aims to find -Nash equilibria that satisfy (or are -close to satisfying) certain properties.",
                "Our approach is different in that we insist on outputting an exact Nash equilibrium, which is -close to satisfying a given requirement.",
                "As argued in the introduction, there are several reasons to prefer a solution that constitutes an exact Nash equilibrium.",
                "Our algorithms are fully polynomial time <br>approximation</br> schemes, i.e., their running time is polynomial in the inverse of the <br>approximation</br> parameter , though they may be pseudopolynomial with respect to the input size.",
                "Under mild restrictions on the inputs, they can be modified to be truly polynomial.",
                "This is the strongest positive result one can derive for a problem whose exact solutions may be hard to represent, as is the case for many of the problems considered here.",
                "While we prove our results for games on a path, they can be generalized to any tree for which the best response policies have compact representations as unions of rectangles.",
                "In the full version of the paper we describe our algorithms for the general case.",
                "Further work in this vein could include extensions to the kinds of guarantees sought for Nash equilibria, such as guaranteeing total payoffs for subsets of players, selecting equilibria in which some players are receiving significantly higher payoffs than their peers, etc.",
                "At the moment however, it is perhaps more important to inves170 tigate whether Nash equilibria of graphical games can be computed in a decentralized manner, in contrast to the algorithms we have introduced here.",
                "It is natural to ask if our results or those of [9] can be generalized to games with three or more actions.",
                "However, it seems that this will make the analysis significantly more difficult.",
                "In particular, note that one can view the bounded payoff games as a very limited special case of games with three actions per player.",
                "Namely, given a two-action game with payoff bounds, consider a game in which each player Vi has a third action that guarantees him a payoff of Ti no matter what everyone else does.",
                "Then checking if there is a Nash equilibrium in which none of the players assigns a nonzero probability to his third action is equivalent to checking if there exists a Nash equilibrium that satisfies the payoff bounds in the original game, and Section 5.1 shows that finding an exact solution to this problem requires new ideas.",
                "Alternatively it may be interesting to look for similar results in the context of correlated equilibria (CE), especially since the best CE may have higher value (total expected payoff) than the best NE.",
                "The ratio between these values is called the mediation value in [1].",
                "It is known from [1] that the mediation value of 2-player, 2-action games with non-negative payoffs is at most 4 3 , and they exhibit a 3-player game for which it is infinite.",
                "Furthermore, a 2-player, 3action example from [1] also has infinite mediation value. 8.",
                "REFERENCES [1] I. Ashlagi, D. Monderer and M. Tenneholtz, On the Value of Correlation, Proceedings of Dagstuhl seminar 05011 (2005) [2] R. Aumann, Subjectivity and Correlation in Randomized Strategies, Journal of Mathematical Economics 1 pp. 67-96 (1974) [3] B. Blum, C. R. Shelton, and D. Koller, A Continuation Method for Nash Equilibria in Structured Games, Proceedings of IJCAI03 [4] X. Chen, X. Deng and S. Teng, Computing Nash Equilibria: <br>approximation</br> and Smoothed Complexity, Proceedings of FOCS06 [5] X. Chen, X. Deng, Settling the Complexity of 2-Player Nash-Equilibrium, Proceedings of FOCS06 [6] V. Conitzer and T. Sandholm, Complexity Results about Nash Equilibria, Proceedings of IJCAI03 [7] C. Daskalakis, P. W. Goldberg and C. H. Papadimitriou, The Complexity of Computing a Nash Equilibrium, Proceedings of STOC06 [8] R. S. Datta, Universality of Nash Equilibria, Mathematics of Operations Research 28:3, 2003 [9] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Nash Equilibria in Graphical games on Trees Revisited, Proceedings of ACM EC06 [10] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Computing Good Nash Equilibria in Graphical Games, http://arxiv.org/abs/cs.GT/0703133 [11] I. Gilboa and E. Zemel, Nash and Correlated Equilibria: Some Complexity Considerations, Games and Economic Behavior, 1 pp. 80-93 (1989) [12] P. W. Goldberg and C. H. Papadimitriou, Reducibility Among Equilibrium Problems, Proceedings of STOC06 [13] M. Kearns, M. Littman, and S. Singh, Graphical Models for Game Theory, Proceedings of UAI01 [14] M. Littman, M. Kearns, and S. Singh, An Efficient Exact Algorithm for Singly Connected Graphical Games, Proceedings of NIPS01 [15] R. Lipton and E. Markakis, Nash Equilibria via Polynomial Equations, Proceedings of LATIN04 [16] L. Ortiz and M. Kearns, Nash Propagation for Loopy Graphical Games, Proceedings of NIPS03 [17] C.H.",
                "Papadimitriou, Computing Correlated Equilibria in Multi-Player Games, Proceedings of STOC05 [18] C.H.",
                "Papadimitriou and T. Roughgarden, Computing Equilibria in Multi-Player Games, Proceedings of SODA05 [19] D. Vickrey and D. Koller, Multi-agent Algorithms for Solving Graphical Games, Proceedings of AAAI02 171"
            ],
            "original_annotated_samples": [
                "They propose a generic algorithm for finding Nash equilibria that can be specialized in two ways: an exponential-time algorithm for finding an (exact) Nash equilibrium, and a fully polynomial time <br>approximation</br> scheme (FPTAS) for finding an <br>approximation</br> to a Nash equilibrium.",
                "Therefore, the (<br>approximation</br> to the) value of the best solution that corresponds to an -Nash equilibrium may not be indicative of what can be achieved under an exact Nash equilibrium.",
                "As the social welfare-maximizing Nash equilibrium may be hard to represent efficiently, we have to settle for an <br>approximation</br>.",
                "Using the idea from Section 4 we give (Theorem 5) a fully polynomial time <br>approximation</br> scheme for this problem.",
                "Finally, in Section 6.3 we show how to find a Nash equilibrium in which the individual payoffs of the players are close to each other. 1.2 Related Work Our <br>approximation</br> scheme (Theorem 3 and Theorem 4) shows a contrast between the games that we study and two-player n-action games, for which the corresponding problems are usually intractable."
            ],
            "translated_annotated_samples": [
                "Proponen un algoritmo genérico para encontrar equilibrios de Nash que puede ser especializado de dos maneras: un algoritmo de tiempo exponencial para encontrar un equilibrio de Nash (exacto) y un esquema de <br>aproximación</br> de tiempo polinómico completo (FPTAS) para encontrar una <br>aproximación</br> a un equilibrio de Nash.",
                "Por lo tanto, la <br>aproximación</br> al valor de la mejor solución que corresponde a un equilibrio de Nash aproximado puede no ser indicativa de lo que se puede lograr bajo un equilibrio de Nash exacto.",
                "Dado que el equilibrio de Nash que maximiza el bienestar social puede ser difícil de representar eficientemente, debemos conformarnos con una <br>aproximación</br>.",
                "Usando la idea de la Sección 4, presentamos (Teorema 5) un esquema de <br>aproximación</br> en tiempo polinómico completo para este problema.",
                "Finalmente, en la Sección 6.3 mostramos cómo encontrar un equilibrio de Nash en el que las ganancias individuales de los jugadores están cerca unas de otras. 1.2 Trabajo Relacionado Nuestro esquema de <br>aproximación</br> (Teorema 3 y Teorema 4) muestra un contraste entre los juegos que estudiamos y los juegos de n acciones de dos jugadores, para los cuales los problemas correspondientes suelen ser intratables."
            ],
            "translated_text": "Calcular buenos equilibrios de Nash en juegos gráficos ∗ Edith Elkind Universidad Hebrea de Jerusalén, Israel, y Universidad de Southampton, Southampton, SO17 1BJ, Reino Unido. Leslie Ann Goldberg Universidad de Liverpool Liverpool L69 3BX, Reino Unido. Paul Goldberg Universidad de Liverpool Liverpool L69 3BX, Reino Unido. RESUMEN Este artículo aborda el problema de la selección justa de equilibrios en juegos gráficos. Nuestro enfoque se basa en la estructura de datos llamada política de mejor respuesta, propuesta por Kearns et al. [13] como una forma de representar todos los equilibrios de Nash de un juego gráfico. En [9], se demostró que la política de mejor respuesta tiene un tamaño polinómico siempre y cuando el grafo subyacente sea un camino. En este artículo, demostramos que si el grafo subyacente es un árbol de grado acotado y la política de mejor respuesta tiene un tamaño polinómico, entonces existe un algoritmo eficiente que construye un equilibrio de Nash que garantiza ciertos pagos a todos los participantes. Otro concepto de solución atractivo es un equilibrio de Nash que maximiza el bienestar social. Mostramos que, si bien calcular exactamente lo último es inviable (demostramos que resolver este problema puede implicar números algebraicos de un grado arbitrariamente alto), existe un FPTAS para encontrar dicho equilibrio siempre y cuando la política de mejor respuesta tenga un tamaño polinómico. Estos dos algoritmos pueden combinarse para producir equilibrios de Nash que satisfacen varios criterios de equidad. Categorías y Descriptores de Asignaturas F.2 [Teoría de la Computación]: Análisis de Algoritmos y Complejidad de Problemas; J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento - Economía Términos Generales Algoritmos, Economía, Teoría 1. INTRODUCCIÓN En una gran comunidad de agentes, es poco probable que el comportamiento de un agente tenga un efecto directo en la mayoría de los otros agentes: más bien, solo serán afectados los agentes que estén lo suficientemente cerca de él. Sin embargo, a medida que estos agentes responden adaptando su comportamiento, más agentes sentirán las consecuencias y eventualmente las decisiones tomadas por un solo agente se propagarán por toda la comunidad. Esta es la intuición detrás de los juegos gráficos, los cuales fueron introducidos por Kearns, Littman y Singh en [13] como un esquema de representación compacto para juegos con muchos jugadores. En un juego gráfico de n jugadores, a cada jugador se le asocia un vértice de un grafo subyacente G, y las ganancias de cada jugador dependen de su acción, así como de las acciones de sus vecinos en el grafo. Si el grado máximo de G es Δ, y cada jugador tiene dos acciones disponibles, entonces el juego se puede representar usando n2Δ+1 números. Por el contrario, necesitamos n^2 números para representar un juego general de n jugadores y 2 acciones, lo cual solo es práctico para valores pequeños de n. Para juegos gráficos con Δ constante, el tamaño del juego es lineal en n. Uno de los problemas más naturales para un juego gráfico es el de encontrar un equilibrio de Nash, cuya existencia se deriva del célebre teorema de Nash (ya que los juegos gráficos son solo un caso especial de juegos de n jugadores). El primer intento de abordar este problema se realizó en [13], donde los autores consideran juegos gráficos con dos acciones por jugador en los que el grafo subyacente es un árbol de grado acotado. Proponen un algoritmo genérico para encontrar equilibrios de Nash que puede ser especializado de dos maneras: un algoritmo de tiempo exponencial para encontrar un equilibrio de Nash (exacto) y un esquema de <br>aproximación</br> de tiempo polinómico completo (FPTAS) para encontrar una <br>aproximación</br> a un equilibrio de Nash. Para cualquier > 0, este algoritmo produce un equilibrio de Nash, que es un perfil estratégico en el que ningún jugador puede mejorar su pago más que al cambiar unilateralmente su estrategia. Si bien los equilibrios de Nash aproximados suelen ser más fáciles de calcular que los equilibrios de Nash exactos, este concepto de solución tiene varias desventajas. Primero, es posible que los jugadores sean sensibles a una pequeña pérdida en las ganancias, por lo que el perfil estratégico que es un equilibrio de Nash no será estable. Esto será así incluso si solo hay un pequeño subconjunto de jugadores que son extremadamente sensibles al precio, y para una gran población de jugadores puede ser difícil elegir un valor que satisfaga a todos. Segundo, los perfiles estratégicos que están cerca de ser equilibrios de Nash pueden ser mucho mejores con respecto a las propiedades consideradas que los equilibrios de Nash exactos. Por lo tanto, la <br>aproximación</br> al valor de la mejor solución que corresponde a un equilibrio de Nash aproximado puede no ser indicativa de lo que se puede lograr bajo un equilibrio de Nash exacto. Esto es especialmente importante si el propósito de la solución aproximada es proporcionar un buen punto de referencia para un sistema de agentes egoístas, ya que el punto de referencia implícito por un equilibrio de Nash puede ser poco realista. Por estas razones, en este artículo nos enfocamos en el problema de calcular equilibrios de Nash exactos. Basándose en las ideas de [14], Elkind et al. [9] mostraron cómo encontrar un equilibrio de Nash (exacto) en tiempo polinómico cuando el grafo subyacente tiene grado 2 (es decir, cuando el grafo es una colección de caminos y ciclos). Por el contrario, encontrar un equilibrio de Nash en un grafo general con grado acotado parece ser computacionalmente intratable: se ha demostrado (ver [5, 12, 7]) que es completo para la clase de complejidad PPAD. [9] extiende este resultado de dificultad al caso en el que el grafo subyacente tiene un ancho de camino acotado. Un juego gráfico puede no tener un equilibrio de Nash único, de hecho, puede tener exponencialmente muchos. Además, algunos equilibrios de Nash son más deseables que otros. En lugar de tener un algoritmo que simplemente encuentre algún equilibrio de Nash, nos gustaría tener algoritmos para encontrar equilibrios de Nash con diversas propiedades socialmente deseables, como maximizar el pago total o distribuir las ganancias de manera justa. Una propiedad útil de la estructura de datos de [13] es que representa simultáneamente el conjunto de todos los equilibrios de Nash del juego subyacente. Si esta representación tiene tamaño polinómico (como es el caso de los caminos, como se muestra en [9]), se puede esperar extraer de ella un equilibrio de Nash con las propiedades deseadas. De hecho, en [13] los autores mencionan que esto es posible si uno está interesado en encontrar un equilibrio de Nash (aproximado). El objetivo de este artículo es extender esto a equilibrios de Nash exactos. 1.1 Nuestros Resultados En este artículo, estudiamos juegos gráficos de n jugadores y 2 acciones en árboles de grado acotado para los cuales la estructura de datos de [13] tiene tamaño polinómico en n. Nos enfocamos en el problema de encontrar equilibrios de Nash exactos con ciertas propiedades socialmente deseables. En particular, mostramos cómo encontrar un equilibrio de Nash que maximiza (casi) el bienestar social, es decir, la suma de las ganancias de los jugadores, y mostramos cómo encontrar un equilibrio de Nash que satisface (casi) los límites de ganancias prescritos para todos los jugadores. Los juegos gráficos en árboles de grado acotado tienen una estructura algebraica simple. Una característica atractiva, que se desprende de [13], es que cada juego de este tipo tiene un equilibrio de Nash en el cual la estrategia de cada jugador es un número racional. La sección 3 estudia la estructura algebraica de aquellos equilibrios de Nash que maximizan el bienestar social. Demostramos (Teoremas 1 y 2) que, sorprendentemente, el conjunto de equilibrios de Nash que maximizan el bienestar social es más complejo. De hecho, para cualquier número algebraico α ∈ [0, 1] con grado a lo sumo n, exhibimos un juego gráfico en un camino de longitud O(n) tal que, en el equilibrio de Nash único que maximiza el bienestar social de este juego, uno de los jugadores juega la estrategia mixta α. Este resultado muestra que puede ser difícil representar un equilibrio de Nash óptimo. Parece ser una característica novedosa del escenario que consideramos aquí, que un equilibrio de Nash óptimo es difícil de representar, en una situación donde es fácil encontrar y representar un equilibrio de Nash. Dado que el equilibrio de Nash que maximiza el bienestar social puede ser difícil de representar eficientemente, debemos conformarnos con una <br>aproximación</br>. Sin embargo, la diferencia crucial entre nuestro enfoque y el de los trabajos anteriores [13, 16, 19] es que requerimos que nuestro algoritmo produzca un equilibrio de Nash exacto, aunque no necesariamente el óptimo con respecto a nuestros criterios. En la Sección 4, describimos un algoritmo que cumple con este requisito. Específicamente, proponemos un algoritmo que, para cualquier > 0, encuentra un equilibrio de Nash cuya recompensa total está dentro de de lo óptimo. Se ejecuta en tiempo polinómico (Teorema 3,4) para cualquier juego gráfico en un árbol de grado acotado para el cual la estructura de datos propuesta por [13] (la llamada política de mejor respuesta, definida a continuación) tiene un tamaño poli(n) (nota que, como se muestra en [9], esto siempre es el caso cuando el grafo subyacente es un camino). Un resultado relacionado en un contexto diferente fue obtenido por Datta [8], quien muestra que los juegos de n jugadores con 2 acciones son universales en el sentido de que cualquier variedad algebraica real puede ser representada como el conjunto de equilibrios de Nash totalmente mixtos de tales juegos. Precisamente, el tiempo de ejecución de nuestro algoritmo es polinómico en n, Pmax y 1/, donde Pmax es el valor absoluto máximo de una entrada de una matriz de pagos, es decir, es un algoritmo seudopolinómico, aunque es completamente polinómico con respecto a . Mostramos (Sección 4.1) que bajo ciertas restricciones en las matrices de pagos, el algoritmo puede ser transformado en un algoritmo de tiempo polinómico (verdaderamente) que produce un equilibrio de Nash cuya ganancia total está dentro de un factor de 1 − del óptimo. En la Sección 5, consideramos el problema de encontrar un equilibrio de Nash en el que la ganancia esperada de cada jugador Vi supere un umbral prescrito Ti. Usando la idea de la Sección 4, presentamos (Teorema 5) un esquema de <br>aproximación</br> en tiempo polinómico completo para este problema. El tiempo de ejecución del algoritmo está acotado por un polinomio en n, Pmax y . Si la instancia tiene un equilibrio de Nash que cumple con los umbrales prescritos, entonces el algoritmo construye un equilibrio de Nash en el que la recompensa esperada de cada jugador Vi es al menos Ti − . En la Sección 6, presentamos otros criterios naturales para seleccionar un buen equilibrio de Nash y mostramos que los algoritmos descritos en las dos secciones anteriores pueden ser utilizados como bloques de construcción para encontrar equilibrios de Nash que cumplan con estos criterios. En particular, en la Sección 6.1 mostramos cómo encontrar un equilibrio de Nash que aproxima el máximo bienestar social, garantizando que la ganancia de cada individuo esté cerca de un umbral prescrito. En la Sección 6.2 mostramos cómo encontrar un equilibrio de Nash que maximiza (casi) al máximo el pago individual mínimo. Finalmente, en la Sección 6.3 mostramos cómo encontrar un equilibrio de Nash en el que las ganancias individuales de los jugadores están cerca unas de otras. 1.2 Trabajo Relacionado Nuestro esquema de <br>aproximación</br> (Teorema 3 y Teorema 4) muestra un contraste entre los juegos que estudiamos y los juegos de n acciones de dos jugadores, para los cuales los problemas correspondientes suelen ser intratables. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "various sociallydesirable properties": {
            "translated_key": "propiedades socialmente deseables",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Computing Good Nash Equilibria in Graphical Games ∗ Edith Elkind Hebrew University of Jerusalem, Israel, and University of Southampton, Southampton, SO17 1BJ, U.K. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K. ABSTRACT This paper addresses the problem of fair equilibrium selection in graphical games.",
                "Our approach is based on the data structure called the best response policy, which was proposed by Kearns et al. [13] as a way to represent all Nash equilibria of a graphical game.",
                "In [9], it was shown that the best response policy has polynomial size as long as the underlying graph is a path.",
                "In this paper, we show that if the underlying graph is a bounded-degree tree and the best response policy has polynomial size then there is an efficient algorithm which constructs a Nash equilibrium that guarantees certain payoffs to all participants.",
                "Another attractive solution concept is a Nash equilibrium that maximizes the social welfare.",
                "We show that, while exactly computing the latter is infeasible (we prove that solving this problem may involve algebraic numbers of an arbitrarily high degree), there exists an FPTAS for finding such an equilibrium as long as the best response policy has polynomial size.",
                "These two algorithms can be combined to produce Nash equilibria that satisfy various fairness criteria.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a large community of agents, an agents behavior is not likely to have a direct effect on most other agents: rather, it is just the agents who are close enough to him that will be affected.",
                "However, as these agents respond by adapting their behavior, more agents will feel the consequences and eventually the choices made by a single agent will propagate throughout the entire community.",
                "This is the intuition behind graphical games, which were introduced by Kearns, Littman and Singh in [13] as a compact representation scheme for games with many players.",
                "In an n-player graphical game, each player is associated with a vertex of an underlying graph G, and the payoffs of each player depend on his action as well as on the actions of his neighbors in the graph.",
                "If the maximum degree of G is Δ, and each player has two actions available to him, then the game can be represented using n2Δ+1 numbers.",
                "In contrast, we need n2n numbers to represent a general n-player 2-action game, which is only practical for small values of n. For graphical games with constant Δ, the size of the game is linear in n. One of the most natural problems for a graphical game is that of finding a Nash equilibrium, the existence of which follows from Nashs celebrated theorem (as graphical games are just a special case of n-player games).",
                "The first attempt to tackle this problem was made in [13], where the authors consider graphical games with two actions per player in which the underlying graph is a boundeddegree tree.",
                "They propose a generic algorithm for finding Nash equilibria that can be specialized in two ways: an exponential-time algorithm for finding an (exact) Nash equilibrium, and a fully polynomial time approximation scheme (FPTAS) for finding an approximation to a Nash equilibrium.",
                "For any > 0 this algorithm outputs an -Nash equilibrium, which is a strategy profile in which no player can improve his payoff by more than by unilaterally changing his strategy.",
                "While -Nash equilibria are often easier to compute than exact Nash equilibria, this solution concept has several drawbacks.",
                "First, the players may be sensitive to a small loss in payoffs, so the strategy profile that is an -Nash equilibrium will not be stable.",
                "This will be the case even if there is only a small subset of players who are extremely price-sensitive, and for a large population of players it may be difficult to choose a value of that will satisfy everyone.",
                "Second, the strategy profiles that are close to being Nash equilibria may be much better with respect to the properties under consideration than exact Nash equilibria.",
                "Therefore, the (approximation to the) value of the best solution that corresponds to an -Nash equilibrium may not be indicative of what can be achieved under an exact Nash equilibrium.",
                "This is especially important if the purpose of the approximate solution is to provide a good benchmark for a system of selfish agents, as the benchmark implied by an -Nash equilibrium may be unrealistic.",
                "For these reasons, in this paper we focus on the problem of computing exact Nash equilibria.",
                "Building on ideas of [14], Elkind et al. [9] showed how to find an (exact) Nash equilibrium in polynomial time when the underlying 162 graph has degree 2 (that is, when the graph is a collection of paths and cycles).",
                "By contrast, finding a Nash equilibrium in a general degree-bounded graph appears to be computationally intractable: it has been shown (see [5, 12, 7]) to be complete for the complexity class PPAD. [9] extends this hardness result to the case in which the underlying graph has bounded pathwidth.",
                "A graphical game may not have a unique Nash equilibrium, indeed it may have exponentially many.",
                "Moreover, some Nash equilibria are more desirable than others.",
                "Rather than having an algorithm which merely finds some Nash equilibrium, we would like to have algorithms for finding Nash equilibria with <br>various sociallydesirable properties</br>, such as maximizing overall payoff or distributing profit fairly.",
                "A useful property of the data structure of [13] is that it simultaneously represents the set of all Nash equilibria of the underlying game.",
                "If this representation has polynomial size (as is the case for paths, as shown in [9]), one may hope to extract from it a Nash equilibrium with the desired properties.",
                "In fact, in [13] the authors mention that this is indeed possible if one is interested in finding an (approximate) -Nash equilibrium.",
                "The goal of this paper is to extend this to exact Nash equilibria. 1.1 Our Results In this paper, we study n-player 2-action graphical games on bounded-degree trees for which the data structure of [13] has size poly(n).",
                "We focus on the problem of finding exact Nash equilibria with certain socially-desirable properties.",
                "In particular, we show how to find a Nash equilibrium that (nearly) maximizes the social welfare, i.e., the sum of the players payoffs, and we show how to find a Nash equilibrium that (nearly) satisfies prescribed payoff bounds for all players.",
                "Graphical games on bounded-degree trees have a simple algebraic structure.",
                "One attractive feature, which follows from [13], is that every such game has a Nash equilibrium in which the strategy of every player is a rational number.",
                "Section 3 studies the algebraic structure of those Nash equilibria that maximize social welfare.",
                "We show (Theorems 1 and 2) that, surprisingly, the set of Nash equilibria that maximize social welfare is more complex.",
                "In fact, for any algebraic number α ∈ [0, 1] with degree at most n, we exhibit a graphical game on a path of length O(n) such that, in the unique social welfare-maximizing Nash equilibrium of this game, one of the players plays the mixed strategy α.1 This result shows that it may be difficult to represent an optimal Nash equilibrium.",
                "It seems to be a novel feature of the setting we consider here, that an optimal Nash equilibrium is hard to represent, in a situation where it is easy to find and represent a Nash equilibrium.",
                "As the social welfare-maximizing Nash equilibrium may be hard to represent efficiently, we have to settle for an approximation.",
                "However, the crucial difference between our approach and that of previous papers [13, 16, 19] is that we require our algorithm to output an exact Nash equilibrium, though not necessarily the optimal one with respect to our criteria.",
                "In Section 4, we describe an algorithm that satisfies this requirement.",
                "Namely, we propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within of optimal.",
                "It runs in polynomial time (Theorem 3,4) for any graphical game on a bounded-degree tree for which the data structure proposed by [13] (the so-called best response policy, defined below) is of size poly(n) (note that, as shown in [9], this is always the case when the underlying graph is a path).",
                "More pre1 A related result in a different context was obtained by Datta [8], who shows that n-player 2-action games are universal in the sense that any real algebraic variety can be represented as the set of totally mixed Nash equilibria of such games. cisely, the running time of our algorithm is polynomial in n, Pmax, and 1/ , where Pmax is the maximum absolute value of an entry of a payoff matrix, i.e., it is a pseudopolynomial algorithm, though it is fully polynomial with respect to .",
                "We show (Section 4.1) that under some restrictions on the payoff matrices, the algorithm can be transformed into a (truly) polynomial-time algorithm that outputs a Nash equilibrium whose total payoff is within a 1 − factor from the optimal.",
                "In Section 5, we consider the problem of finding a Nash equilibrium in which the expected payoff of each player Vi exceeds a prescribed threshold Ti.",
                "Using the idea from Section 4 we give (Theorem 5) a fully polynomial time approximation scheme for this problem.",
                "The running time of the algorithm is bounded by a polynomial in n, Pmax, and .",
                "If the instance has a Nash equilibrium satisfying the prescribed thresholds then the algorithm constructs a Nash equilibrium in which the expected payoff of each player Vi is at least Ti − .",
                "In Section 6, we introduce other natural criteria for selecting a good Nash equilibrium and we show that the algorithms described in the two previous sections can be used as building blocks in finding Nash equilibria that satisfy these criteria.",
                "In particular, in Section 6.1 we show how to find a Nash equilibrium that approximates the maximum social welfare, while guaranteeing that each individual payoff is close to a prescribed threshold.",
                "In Section 6.2 we show how to find a Nash equilibrium that (nearly) maximizes the minimum individual payoff.",
                "Finally, in Section 6.3 we show how to find a Nash equilibrium in which the individual payoffs of the players are close to each other. 1.2 Related Work Our approximation scheme (Theorem 3 and Theorem 4) shows a contrast between the games that we study and two-player n-action games, for which the corresponding problems are usually intractable.",
                "For two-player n-action games, the problem of finding Nash equilibria with special properties is typically NP-hard.",
                "In particular, this is the case for Nash equilibria that maximize the social welfare [11, 6].",
                "Moreover, it is likely to be intractable even to approximate such equilibria.",
                "In particular, Chen, Deng and Teng [4] show that there exists some , inverse polynomial in n, for which computing an -Nash equilibrium in 2-player games with n actions per player is PPAD-complete.",
                "Lipton and Markakis [15] study the algebraic properties of Nash equilibria, and point out that standard quantifier elimination algorithms can be used to solve them.",
                "Note that these algorithms are not polynomial-time in general.",
                "The games we study in this paper have polynomial-time computable Nash equilibria in which all mixed strategies are rational numbers, but an optimal Nash equilibrium may necessarily include mixed strategies with high algebraic degree.",
                "A correlated equilibrium (CE) (introduced by Aumann [2]) is a distribution over vectors of players actions with the property that if any player is told his own action (the value of his own component) from a vector generated by that distribution, then he cannot increase his expected payoff by changing his action.",
                "Any Nash equilibrium is a CE but the converse does not hold in general.",
                "In contrast with Nash equilibria, correlated equilibria can be found for low-degree graphical games (as well as other classes of conciselyrepresented multiplayer games) in polynomial time [17].",
                "But, for graphical games it is NP-hard to find a correlated equilibrium that maximizes total payoff [18].",
                "However, the NP-hardness results apply to more general games than the one we consider here, in particular the graphs are not trees.",
                "From [2] it is also known that there exist 2-player, 2-action games for which the expected total payoff 163 of the best correlated equilibrium is higher than the best Nash equilibrium, and we discuss this issue further in Section 7. 2.",
                "PRELIMINARIES AND NOTATION We consider graphical games in which the underlying graph G is an n-vertex tree, in which each vertex has at most Δ children.",
                "Each vertex has two actions, which are denoted by 0 and 1.",
                "A mixed strategy of a player V is represented as a single number v ∈ [0, 1], which denotes the probability that V selects action 1.",
                "For the purposes of the algorithm, the tree is rooted arbitrarily.",
                "For convenience, we assume without loss of generality that the root has a single child, and that its payoff is independent of the action chosen by the child.",
                "This can be achieved by first choosing an arbitrary root of the tree, and then adding a dummy parent of this root, giving the new parent a constant payoff function, e.g., 0.",
                "Given an edge (V, W ) of the tree G, and a mixed strategy w for W , let G(V,W ),W =w be the instance obtained from G by (1) deleting all nodes Z which are separated from V by W (i.e., all nodes Z such that the path from Z to V passes through W ), and (2) restricting the instance so that W is required to play mixed strategy w. Definition 1.",
                "Suppose that (V, W ) is an edge of the tree, that v is a mixed strategy for V and that w is a mixed strategy for W .",
                "We say that v is a potential best response to w (denoted by v ∈ pbrV (w)) if there is an equilibrium in the instance G(V,W ),W =w in which V has mixed strategy v. We define the best response policy for V , given W , as B(W, V ) = {(w, v) | v ∈ pbrV (w), w ∈ [0, 1]}.",
                "The upstream pass of the generic algorithm of [13] considers every node V (other than the root) and computes the best response policy for V given its parent.",
                "With the above assumptions about the root, the downstream pass is straightforward.",
                "The root selects a mixed strategy w for the root W and a mixed strategy v ∈ B(W, V ) for each child V of W .",
                "It instructs each child V to play v. The remainder of the downward pass is recursive.",
                "When a node V is instructed by its parent to adopt mixed strategy v, it does the following for each child U - It finds a pair (v, u) ∈ B(V, U) (with the same v value that it was given by its parent) and instructs U to play u.",
                "The best response policy for a vertex U given its parent V can be represented as a union of rectangles, where a rectangle is defined by a pair of closed intervals (IV , IU ) and consists of all points in IV × IU ; it may be the case that one or both of the intervals IV and IU consists of a single point.",
                "In order to perform computations on B(V, U), and to bound the number of rectangles, [9] used the notion of an event point, which is defined as follows.",
                "For any set A ⊆ [0, 1]2 that is represented as a union of a finite number of rectangles, we say that a point u ∈ [0, 1] on the U-axis is a Uevent point of A if u = 0 or u = 1 or the representation of A contains a rectangle of the form IV × IU and u is an endpoint of IU ; V -event points are defined similarly.",
                "For many games considered in this paper, the underlying graph is an n-vertex path, i.e., a graph G = (V, E) with V = {V1, . . . , Vn} and E = {(V1, V2), . . . , (Vn−1, Vn)}.",
                "In [9], it was shown that for such games, the best response policy has only polynomially-many rectangles.",
                "The proof that the number of rectangles in B(Vj+1, Vj) is polynomial proceeds by first showing that the number of event points in B(Vj+1, Vj ) cannot exceed the number of event points in B(Vj, Vj−1) by more than 2, and using this fact to bound the number of rectangles in B(Vj+1, Vj ).",
                "Let P0 (V ) and P1 (V ) be the expected payoffs to V when it plays 0 and 1, respectively.",
                "Both P0 (V ) and P1 (V ) are multilinear functions of the strategies of V s neighbors.",
                "In what follows, we will frequently use the following simple observation.",
                "CLAIM 1.",
                "For a vertex V with a single child U and parent W , given any A, B, C, D ∈ Q, A , B , C , D ∈ Q, one can select the payoffs to V so that P0 (V ) = Auw + Bu + Cw + D, P1 (V ) = A uw + B u + C w + D .",
                "Moreover, if all A, B, C, D, A , B , C , D are integer, the payoffs to V are integer as well.",
                "PROOF.",
                "We will give the proof for P0 (V ); the proof for P1 (V ) is similar.",
                "For i, j = 0, 1, let Pij be the payoff to V when U plays i, V plays 0 and W plays j.",
                "We have P0 (V ) = P00(1 − u)(1 − w) + P10u(1 − w) + P01(1 − u)w + P11uw.",
                "We have to select the values of Pij so that P00 − P10 − P01 + P11 = A, −P00 + P10 = B, −P00 + P01 = C, P00 = D. It is easy to see that the unique solution is given by P00 = D, P01 = C + D, P10 = B + D, P11 = A + B + C + D. The input to all algorithms considered in this paper includes the payoff matrices for each player.",
                "We assume that all elements of these matrices are integer.",
                "Let Pmax be the greatest absolute value of any element of any payoff matrix.",
                "Then the input consists of at most n2Δ+1 numbers, each of which can be represented using log Pmax bits. 3.",
                "NASH EQUILIBRIA THAT MAXIMIZE THE SOCIAL WELFARE: SOLUTIONS IN R \\ Q From the point of view of social welfare, the best Nash equilibrium is the one that maximizes the sum of the players expected payoffs.",
                "Unfortunately, it turns out that computing such a strategy profile exactly is not possible: in this section, we show that even if all players payoffs are integers, the strategy profile that maximizes the total payoff may have irrational coordinates; moreover, it may involve algebraic numbers of an arbitrary degree. 3.1 Warm-up: quadratic irrationalities We start by providing an example of a graphical game on a path of length 3 with integer payoffs such that in the Nash equilibrium that maximizes the total payoff, one of the players has a strategy in R \\ Q.",
                "In the next subsection, we will extend this example to algebraic numbers of arbitrary degree n; to do so, we have to consider paths of length O(n).",
                "THEOREM 1.",
                "There exists an integer-payoff graphical game G on a 3-vertex path UV W such that, in any Nash equilibrium of G that maximizes social welfare, the strategy, u, of the player U and the total payoff, p, satisfy u, p ∈ R \\ Q.",
                "PROOF.",
                "The payoffs to the players in G are specified as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = −uw + 3w and P1 (V ) = P0 (V ) + w(u + 2) − (u + 1), where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = u+1 u+2 .",
                "Observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "The payoff to W is 0 if it selects the same action as V and 1 otherwise.",
                "CLAIM 2.",
                "All Nash equilibria of the game G are of the form (u, 1/2, f(u)).",
                "That is, in any Nash equilibrium, V plays v = 1/2 and W plays w = f(u).",
                "Moreover, for any value of u, the vector of strategies (u, 1/2, f(u)) constitutes a Nash equilibrium.",
                "PROOF.",
                "It is easy to check that for any u ∈ [0, 1], the vector (u, 1/2, f(u)) is a Nash equilibrium.",
                "Indeed, U is content to play 164 any mixed strategy u no matter what V and W do.",
                "Furthermore, V is indifferent between 0 and 1 as long as w = f(u), so it can play 1/2.",
                "Finally, if V plays 0 and 1 with equal probability, W is indifferent between 0 and 1, so it can play f(u).",
                "Conversely, suppose that v > 1/2.",
                "Then W strictly prefers to play 0, i.e., w = 0.",
                "Then for V we have P1 (V ) = P0 (V ) − (u + 1), i.e., P1 (V ) < P0 (V ), which implies v = 0, a contradiction.",
                "Similarly, if v < 1/2, player W prefers to play 1, so we have w = 1.",
                "Hence, P1 (V ) = P0 (V ) + (u + 2) − (u + 1), i.e., P1 (V ) > P0 (V ), which implies v = 1, a contradiction.",
                "Finally, if v = 1/2, but w = f(u), player V is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "This completes the proof of Claim 2.",
                "By Claim 2, the total payoff in any Nash equilibrium of this game is a function of u.",
                "More specifically, the payoff to U is 0, the payoff to V is −uf(u) + 3f(u), and the payoff to W is 1/2.",
                "Therefore, the Nash equilibrium with the maximum total payoff corresponds to the value of u that maximizes g(u) = −u (u + 1) u + 2 + 3 u + 1 u + 2 = − (u − 3)(u + 1) u + 2 .",
                "To find extrema of g(u), we compute h(u) = − d du g(u).",
                "We have h(u) = (2u − 2)(u + 2) − (u − 3)(u + 1) (u + 2)2 = u2 + 4u − 1 (u + 2)2 .",
                "Hence, h(u) = 0 if and only if u ∈ {−2 + √ 5, −2 − √ 5}.",
                "Note that −2 + √ 5 ∈ [0, 1].",
                "The function g(u) changes sign at −2, −1, and 3.",
                "We have g(u) < 0 for g > 3, g(u) > 0 for u < −2, so the extremum of g(u) that lies between 1 and 3, i.e., u = −2 + √ 5, is a local maximum.",
                "We conclude that the social welfare-maximizing Nash equilibrium for this game is given by the vector of strategies (−2+√ 5, 1/2, (5 − √ 5)/5).",
                "The respective total payoff is 0 − ( √ 5 − 5)( √ 5 − 1) √ 5 + 1 2 = 13/2 − 2 √ 5.",
                "This concludes the proof of Theorem 1. 3.2 Strategies of arbitrary degree We have shown that in the social welfare-maximizing Nash equilibrium, some players strategies can be quadratic irrationalities, and so can the total payoff.",
                "In this subsection, we will extend this result to show that we can construct an integer-payoff graphical game on a path whose social welfare-maximizing Nash equilibrium involves arbitrary algebraic numbers in [0, 1].",
                "THEOREM 2.",
                "For any degree-n algebraic number α ∈ [0, 1], there exists an integer payoff graphical game on a path of length O(n) such that, in all social welfare-maximizing Nash equilibria of this game, one of the players plays α.",
                "PROOF.",
                "Our proof consists of two steps.",
                "First, we construct a rational expression R(x) and a segment [x , x ] such that x , x ∈ Q and α is the only maximum of R(x) on [x , x ].",
                "Second, we construct a graphical game whose Nash equilibria can be parameterized by u ∈ [x , x ], so that at the equilibrium that corresponds to u the total payoff is R(u) and, moreover, some players strategy is u.",
                "It follows that to achieve the payoff-maximizing Nash equilibrium, this player has to play α.",
                "The details follow.",
                "LEMMA 1.",
                "Given an algebraic number α ∈ [0, 1], deg(α) = n, there exist K2, . . . , K2n+2 ∈ Q and x , x ∈ (0, 1) ∩ Q such that α is the only maximum of R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 on [x , x ].",
                "PROOF.",
                "Let P(x) be the minimal polynomial of α, i.e., a polynomial of degree n with rational coefficients whose leading coefficient is 1 such that P(α) = 0.",
                "Let A = {α1, . . . , αn} be the set of all roots of P(x).",
                "Consider the polynomial Q1(x) = −P2 (x).",
                "It has the same roots as P(x), and moreover, for any x ∈ A we have Q1(x) < 0.",
                "Hence, A is the set of all maxima of Q1(x).",
                "Now, set R(x) = Q1(x) (x+2)...(x+2n+1)(x+2n+2) .",
                "Observe that R(x) ≤ 0 for all x ∈ [0, 1] and R(x) = 0 if and only if Q1(x) = 0.",
                "Hence, the set A is also the set of all maxima of R(x) on [0, 1].",
                "Let d = min{|αi − α| | αi ∈ A, αi = α}, and set α = max{α − d/2, 0}, α = min{α + d/2, 1}.",
                "Clearly, α is the only zero (and hence, the only maximum) of R(x) on [α , α ].",
                "Let x and x be some rational numbers in (α , α) and (α, α ), respectively; note that by excluding the endpoints of the intervals we ensure that x , x = 0, 1.",
                "As [x , x ] ⊂ [α , α ], we have that α is the only maximum of R(x) on [x , x ].",
                "As R(x) is a proper rational expression and all roots of its denominator are simple, by partial fraction decomposition theorem, R(x) can be represented as R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 , where K2, . . . , K2n+2 are rational numbers.",
                "Consider a graphical game on the path U−1V−1U0V0U1V1 . . .",
                "Uk−1Vk−1Uk, where k = 2n + 2.",
                "Intuitively, we want each triple (Ui−1, Vi−1, Ui) to behave similarly to the players U, V , and W from the game described in the previous subsection.",
                "More precisely, we define the payoffs to the players in the following way. • The payoff to U−1 is 0 no matter what everyone else does. • The expected payoff to V−1 is 0 if it plays 0 and u0 − (x − x )u−1 −x if it plays 1, where u0 and u−1 are the strategies of U0 and U−1, respectively. • The expected payoff to V0 is 0 if it plays 0 and u1(u0 + 1)− u0 if it plays 1, where u0 and u1 are the strategies of U0 and U1, respectively. • For each i = 1, . . . , k − 1, the expected payoff to Vi when it plays 0 is P0 (Vi) = Aiuiui+1 − Aiui+1, and the expected payoff to Vi when it plays 1 is P1 (Vi) = P0 (Vi) + ui+1(2 − ui) − 1, where Ai = −Ki+1 and ui+1 and ui are the strategies of Ui+1 and Ui, respectively. • For each i = 0, . . . , k, the payoff to Ui does not depend on Vi and is 1 if Ui and Vi−1 select different actions and 0 otherwise.",
                "We will now characterize the Nash equilibria of this game using a sequence of claims.",
                "CLAIM 3.",
                "In all Nash equilibria of this game V−1 plays 1/2, and the strategies of u−1 and u0 satisfy u0 = (x − x )u−1 + x .",
                "Consequently, in all Nash equilibria we have u0 ∈ [x , x ]. 165 PROOF.",
                "The proof is similar to that of Claim 2.",
                "Let f(u−1) = (x − x )u−1 + x .",
                "Clearly, the player V−1 is indifferent between playing 0 and 1 if and only if u0 = f(u−1).",
                "Suppose that v−1 < 1/2.",
                "Then U0 strictly prefers to play 1, i.e., u0 = 1, so we have P1 (V−1) = P0 (V−1) + 1 − (x − x )u−1 − x .",
                "As 1 − x ≤ 1 − (x − x )u−1 − x ≤ 1 − x for u−1 ∈ [0, 1] and x < 1, we have P1 (V−1) > P0 (V−1), so V−1 prefers to play 1, a contradiction.",
                "Similarly, if v−1 > 1/2, the player U0 strictly prefers to play 0, i.e., u0 = 0, so we have P1 (V−1) = P0 (V−1) − (x − x )u−1 − x .",
                "As x < x , x > 0, we have P1 (V−1) < P0 (V−1), so V−1 prefers to play 0, a contradiction.",
                "Finally, if V−1 plays 1/2, but u0 = f(u−1), player V−1 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Also, note that f(0) = x , f(1) = x , and, moreover, f(u−1) ∈ [x , x ] if and only if u−1 ∈ [0, 1].",
                "Hence, in all Nash equilibria of this game we have u0 ∈ [x , x ].",
                "CLAIM 4.",
                "In all Nash equilibria of this game for each i = 0, . . . , k − 1, we have vi = 1/2, and the strategies of the players Ui and Ui+1 satisfy ui+1 = fi(ui), where f0(u) = u/(u + 1) and fi(u) = 1/(2 − u) for i > 0.",
                "PROOF.",
                "The proof of this claim is also similar to that of Claim 2.",
                "We use induction on i to prove that the statement of the claim is true and, additionally, ui = 1 for i > 0.",
                "For the base case i = 0, note that u0 = 0 by the previous claim (recall that x , x are selected so that x , x = 0, 1) and consider the triple (U0, V0, U1).",
                "Let v0 be the strategy of V0.",
                "First, suppose that v0 > 1/2.",
                "Then U1 strictly prefers to play 0, i.e., u1 = 0.",
                "Then for V0 we have P1 (V0) = P0 (V0) − u0.",
                "As u0 = 0, we have P1 (V0) < P0 (V0), which implies v1 = 0, a contradiction.",
                "Similarly, if v0 < 1/2, player U1 prefers to play 1, so we have u1 = 1.",
                "Hence, P1 (V0) = P0 (V0) + 1.",
                "It follows that P1 (V0) > P0 (V0), which implies v0 = 1, a contradiction.",
                "Finally, if v0 = 1/2, but u1 = u0/(u0 + 1), player V0 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as u1 = u0/(u0 + 1) and u0 ∈ [0, 1], we have u1 = 1.",
                "The argument for the inductive step is similar.",
                "Namely, suppose that the statement is proved for all i < i and consider the triple (Ui, Vi, Ui+1).",
                "Let vi be the strategy of Vi.",
                "First, suppose that vi > 1/2.",
                "Then Ui+1 strictly prefers to play 0, i.e., ui+1 = 0.",
                "Then for Vi we have P1 (Vi) = P0 (Vi)−1, i.e., P1 (Vi) < P0 (Vi), which implies vi = 0, a contradiction.",
                "Similarly, if vi < 1/2, player Ui+1 prefers to play 1, so we have ui+1 = 1.",
                "Hence, P1 (Vi) = P0 (Vi) + 1 − ui.",
                "By inductive hypothesis, we have ui < 1.",
                "Consequently, P1 (Vi) > P0 (Vi), which implies vi = 1, a contradiction.",
                "Finally, if vi = 1/2, but ui+1 = 1/(2 − ui), player Vi is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as ui+1 = 1/(2 − ui) and ui < 1, we have ui+1 < 1.",
                "CLAIM 5.",
                "Any strategy profile of the form (u−1, 1/2, u0, 1/2, u1, 1/2, . . . , uk−1, 1/2, uk), where u−1 ∈ [0, 1], u0 = (x − x )u−1 + x , u1 = u0/(u0 + 1), and ui+1 = 1/(2 − ui) for i ≥ 1 constitutes a Nash equilibrium.",
                "PROOF.",
                "First, the player U−1s payoffs do not depend on other players actions, so he is free to play any strategy in [0, 1].",
                "As long as u0 = (x −x )u−1 +x , player V−1 is indifferent between 0 and 1, so he is content to play 1/2; a similar argument applies to players V0, . . . , Vk−1.",
                "Finally, for each i = 0, . . . , k, the payoffs of player Ui only depend on the strategy of player Vi−1.",
                "In particular, as long as vi−1 = 1/2, player Ui is indifferent between playing 0 and 1, so he can play any mixed strategy ui ∈ [0, 1].",
                "To complete the proof, note that (x − x )u−1 + x ∈ [0, 1] for all u−1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] for all u0 ∈ [0, 1], and 1/(2 − ui) ∈ [0, 1] for all ui ∈ [0, 1], so we have ui ∈ [0, 1] for all i = 0, . . . , k. Now, let us compute the total payoff under a strategy profile of the form given in Claim 5.",
                "The payoff to U−1 is 0, and the expected payoff to each of the Ui, i = 0, . . . , k, is 1/2.",
                "The expected payoffs to V−1 and V0 are 0.",
                "Finally, for any i = 1, . . . , k − 1, the expected payoff to Vi is Ti = Aiuiui+1 − Aiui+1.",
                "It follows that to find a Nash equilibrium with the highest total payoff, we have to maximize Pk−1 i=1 Ti subject to conditions u−1 ∈ [0, 1], u0 = (x −x )u−1+x , u1 = u0/(u0+1), and ui+1 = 1/(2−ui) for i = 1, . . . , k − 1.",
                "We would like to express Pk−1 i=1 Ti as a function of u0.",
                "To simplify notation, set u = u0.",
                "LEMMA 2.",
                "For i = 1, . . . , k, we have ui = u+i−1 u+i .",
                "PROOF.",
                "The proof is by induction on i.",
                "For i = 1, we have u1 = u/(u + 1).",
                "Now, for i ≥ 2 suppose that ui−1 = (u + i − 2)/(u + i − 1).",
                "We have ui = 1/(2 − ui−1) = (u + i − 1)/(2u + 2i − 2 − u − i + 2) = (u + i − 1)/(u + i).",
                "It follows that for i = 1, . . . , k − 1 we have Ti = Ai u + i − 1 u + i u + i u + i + 1 − Ai u + i u + i + 1 = −Ai 1 u + i + 1 = Ki+1 u + i + 1 .",
                "Observe that as u−1 varies from 0 to 1, u varies from x to x .",
                "Therefore, to maximize the total payoff, we have to choose u ∈ [x , x ] so as to maximize K2 u + 2 + · · · + Kk u + k = R(u).",
                "By construction, the only maximum of R(u) on [x , x ] is α.",
                "It follows that in the payoff-maximizing Nash equilibrium of our game U0 plays α.",
                "Finally, note that the payoffs in our game are rational rather than integer.",
                "However, it is easy to see that we can multiply all payoffs to a player by their greatest common denominator without affecting his strategy.",
                "In the resulting game, all payoffs are integer.",
                "This concludes the proof of Theorem 2. 4.",
                "APPROXIMATING THE SOCIALLY OPTIMAL NASH EQUILIBRIUM We have seen that the Nash equilibrium that maximizes the social welfare may involve strategies that are not in Q.",
                "Hence, in this section we focus on finding a Nash equilibrium that is almost optimal from the social welfare perspective.",
                "We propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within from optimal.",
                "The running time of this algorithm is polynomial in 1/ , n and |Pmax| (recall that Pmax is the maximum absolute value of an entry of a payoff matrix).",
                "While the negative result of the previous section is for graphical games on paths, our algorithm applies to a wider range of scenarios.",
                "Namely, it runs in polynomial time on bounded-degree trees 166 as long as the best response policy of each vertex, given its parent, can be represented as a union of a polynomial number of rectangles.",
                "Note that path graphs always satisfy this condition: in [9] we showed how to compute such a representation, given a graph with maximum degree 2.",
                "Consequently, for path graphs the running time of our algorithm is guaranteed to be polynomial. (Note that [9] exhibits a family of graphical games on bounded-degree trees for which the best response policies of some of the vertices, given their parents, have exponential size, when represented as unions of rectangles.)",
                "Due to space restrictions, in this version of the paper we present the algorithm for the case where the graph underlying the graphical game is a path.",
                "We then state our result for the general case; the proof can be found in the full version of this paper [10].",
                "Suppose that s is a strategy profile for a graphical game G. That is, s assigns a mixed strategy to each vertex of G. let EPV (s) be the expected payoff of player V under s and let EP(s) =P V EPV (s).",
                "Let M(G) = max{EP(s) | s is a Nash equilibrium for G}.",
                "THEOREM 3.",
                "Suppose that G is a graphical game on an nvertex path.",
                "Then for any > 0 there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G)− .",
                "The running time of the algorithm is O(n4 P3 max/ 3 ) PROOF.",
                "Let {V1, . . . , Vn} be the set of all players.",
                "We start by constructing the best response policies for all Vi, i = 1, . . . , n − 1.",
                "As shown in [9], this can be done in time O(n3 ).",
                "Let N > 5n be a parameter to be selected later, set δ = 1/N, and define X = {jδ | j = 0, . . . , N}.",
                "We say that vj is an event point for a player Vi if it is a Vi-event point for B(Vi, Vi−1) or B(Vi+1, Vi).",
                "For each player Vi, consider a finite set of strategies Xi given by Xi = X ∪ {vj |vj is an event point for Vi}.",
                "It has been shown in [9] that for any i = 2, . . . , n, the best response policy B(Vi, Vi−1) has at most 2n + 4 Vi-event points.",
                "As we require N > 5n, we have |Xi| ≤ 2N; assume without loss of generality that |Xi| = 2N.",
                "Order the elements of Xi in increasing order as x1 i = 0 < x2 i < · · · < x2N i .",
                "We will refer to the strategies in Xi as discrete strategies of player Vi; a strategy profile in which each player has a discrete strategy will be referred to as a discrete strategy profile.",
                "We will now show that even we restrict each player Vi to strategies from Xi, the players can still achieve a Nash equilibrium, and moreover, the best such Nash equilibrium (with respect to the social welfare) has total payoff at least M(G) − as long as N is large enough.",
                "Let s be a strategy profile that maximizes social welfare.",
                "That is, let s = (s1, . . . , sn) where si is the mixed strategy of player Vi and EP(s) = M(G).",
                "For i = 1, . . . , n, let ti = max{xj i | xj i ≤ si}.",
                "First, we will show that the strategy profile t = (t1, . . . , tn) is a Nash equilibrium for G. Fix any i, 1 < i ≤ n, and let R = [v1, v2]×[u1, u2] be the rectangle in B(Vi, Vi−1) that contains (si, si−1).",
                "As v1 is a Vi-event point of B(Vi, Vi−1), we have v1 ≤ ti, so the point (ti, si−1) is inside R. Similarly, the point u1 is a Vi−1-event point of B(Vi, Vi−1), so we have u1 ≤ ti−1, and therefore the point (ti, ti−1) is inside R. This means that for any i, 1 < i ≤ n, we have ti−1 ∈ pbrVi−1 (ti), which implies that t = (t1, . . . , tn) is a Nash equilibrium for G. Now, let us estimate the expected loss in social welfare caused by playing t instead of s. LEMMA 3.",
                "For any pair of strategy profiles t, s such that |ti − si| ≤ δ we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ for any i = 1, . . . , n. PROOF.",
                "Let Pi klm be the payoff of the player Vi, when he plays k, Vi−1 plays l, and Vi+1 plays m. Fix i = 1, . . . , n and for k, l, m ∈ {0, 1}, set tklm = tk i−1(1 − ti−1)1−k tl i(1 − ti)1−l tm i+1(1 − ti+1)1−m sklm = sk i−1(1 − si−1)1−k sl i(1 − si)1−l sm i+1(1 − si+1)1−m .",
                "We have |EPVi (s) − EPVi (t)| ≤ X k,l,m=0,1 |Pi klm(tklm − sklm )| ≤ 8Pmax max klm |tklm − sklm | We will now show that for any k, l, m ∈ {0, 1} we have |tklm − sklm | ≤ 3δ; clearly, this implies the lemma.",
                "Indeed, fix k, l, m ∈ {0, 1}.",
                "Set x = tk i−1(1 − ti−1)1−k , x = sk i−1(1 − si−1)1−k , y = tl i(1 − ti)1−l , y = sl i(1 − si)1−l , z = tm i+1(1 − ti+1)1−m , z = sm i+1(1 − si+1)1−m .",
                "Observe that if k = 0 then x − x = (1 − ti−1) − (1 − si−1), and if k = 1 then x − x = ti−1 − si−1, so |x − x | ≤ δ.",
                "A similar argument shows |y − y | ≤ δ, |z − z | ≤ δ.",
                "Also, we have x, x , y, y , z, z ∈ [0, 1].",
                "Hence, |tklm −sklm | = |xyz−x y z | = |xyz − x yz + x yz − x y z + x y z − x y z | ≤ |x − x |yz + |y − y |x z + |z − z |x y ≤ 3δ.",
                "Lemma 3 implies Pn i=1 |EPVi (s) − EPVi (t)| ≤ 24nPmaxδ, so by choosing δ < /(24nPmax), or, equivalently, setting N > 24nPmax/ , we can ensure that the total expected payoff for the strategy profile t is within from optimal.",
                "We will now show that we can find the best discrete Nash equilibrium (with respect to the social welfare) using dynamic programming.",
                "As t is a discrete strategy profile, this means that the strategy profile found by our algorithm will be at least as good as t. Define ml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj , j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1, and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The values ml,k i , i = 1, . . . , n; k, l = 1, . . . , N, can be computed inductively, as follows.",
                "We have ml,k 1 = 0 for k, l = 1, . . . , N. Now, suppose that we have already computed ml,k j for all j < i; k, l = 1, . . . , N. To compute mk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this is not the case, we have ml,k i = −∞.",
                "Otherwise, consider the set Y = Xi−2 ∩ pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "The proof of Theorem 1 in [9] implies that the set pbrVi−2 (xl i−1) is non-empty: the player Vi−2 has a potential best response to any strategy of Vi−1, in particular, xl i−1.",
                "By construction of the set Xi−2, this implies that Y is not empty.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "Then we have ml,k i = max{mj,l i−1 + pjlk | xj i−2 ∈ Y }.",
                "Finally, suppose that we have computed ml,k n for l, k = 1, . . . , N. We still need to take into account the payoff of player Vn.",
                "Hence, 167 we consider all pairs (xk n, xl n−1) that satisfy xl n−1 ∈ pbrVn−1 (xk n), and pick the one that maximizes the sum of mk,l n and the payoff of Vn when he plays xk n and Vn−1 plays xl n−1.",
                "This results in the maximum total payoff the players can achieve in a Nash equilibrium using discrete strategies; the actual strategy profile that produces this payoff can be reconstructed using standard dynamic programming techniques.",
                "It is easy to see that each ml,k i can be computed in time O(N), i.e., all of them can be computed in time O(nN3 ).",
                "Recall that we have to select N ≥ (24nPmax)/ to ensure that the strategy profile we output has total payoff that is within from optimal.",
                "We conclude that we can compute an -approximation to the best Nash equilibrium in time O(n4 P3 max/ 3 ).",
                "This completes the proof of Theorem 3.",
                "To state our result for the general case (i.e., when the underlying graph is a bounded-degree tree rather than a path), we need additional notation.",
                "If G has n players, let q(n) be an upper bound on the number of event points in the representation of any best response policy.",
                "That is, we assume that for any vertex U with parent V , B(V, U) has at most q(n) event points.",
                "We will be interested in the situation in which q(n) is polynomial in n. THEOREM 4.",
                "Let G be an n-player graphical game on a tree in which each node has at most Δ children.",
                "Suppose we are given a set of best-response policies for G in which each best-response policy B(V, U) is represented by a set of rectangles with at most q(n) event points.",
                "For any > 0, there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G) − .",
                "The running time of the algorithm is polynomial in n, Pmax and −1 provided that the tree has bounded degree (that is, Δ = O(1)) and q(n) is a polynomial in n. In particular, if N = max((Δ + 1)q(n) + 1, n2Δ+2 (Δ + 2)Pmax −1 ) and Δ > 1 then the running time is O(nΔ(2N)Δ .",
                "For the proof of this theorem, see [10]. 4.1 A polynomial-time algorithm for multiplicative approximation The running time of our algorithm is pseudopolynomial rather than polynomial, because it includes a factor which is polynomial in Pmax, the maximum (in absolute value) entry in any payoff matrix.",
                "If we are interested in multiplicative approximation rather than additive one, this can be improved to polynomial.",
                "First, note that we cannot expect a multiplicative approximation for all inputs.",
                "That is, we cannot hope to have an algorithm that computes a Nash equilibrium with total payoff at least (1 − )M(G).",
                "If we had such an algorithm, then for graphical games G with M(G) = 0, the algorithm would be required to output the optimal solution.",
                "To show that this is infeasible, observe that we can use the techniques of Section 3.2 to construct two integercoefficient graphical games on paths of length O(n) such that for some X ∈ R the maximal total payoff in the first game is X, the maximal total payoff in the second game is −X, and for both games, the strategy profiles that achieve the maximal total payoffs involve algebraic numbers of degree n. By combining the two games so that the first vertex of the second game becomes connected to the last vertex of the first game, but the payoffs of all players do not change, we obtain a graphical game in which the best Nash equilibrium has total payoff 0, yet the strategies that lead to this payoff have high algebraic complexity.",
                "However, we can achieve a multiplicative approximation when all entries of the payoff matrices are positive and the ratio between any two entries is polynomially bounded.",
                "Recall that we assume that all payoffs are integer, and let Pmin > 0 be the smallest entry of any payoff matrix.",
                "In this case, for any strategy profile the payoff to player i is at least Pmin, so the total payoff in the social-welfare maximizing Nash equilibrium s satisfies M(G) ≥ nPmin.",
                "Moreover, Lemma 3 implies that by choosing δ < /(24Pmax/Pmin), we can ensure that the Nash equilibrium t produced by our algorithm satisfies nX i=1 EPVi (s) − nX i=1 EPVi (t) ≤ 24Pmaxδn ≤ nPmin ≤ M(G), i.e., for this value of δ we have Pn i=1 EPVi (t) ≥ (1 − )M(G).",
                "Recall that the running time of our algorithm is O(nN3 ), where N has to be selected to satisfy N > 5n, N = 1/δ.",
                "It follows that if Pmin > 0, Pmax/Pmin = poly(n), we can choose N so that our algorithm provides a multiplicative approximation guarantee and runs in time polynomial in n and 1/ . 5.",
                "BOUNDED PAYOFF NASH EQUILIBRIA Another natural way to define what is a good Nash equilibrium is to require that each players expected payoff exceeds a certain threshold.",
                "These thresholds do not have to be the same for all players.",
                "In this case, in addition to the payoff matrices of the n players, we are given n numbers T1, . . . , Tn, and our goal is to find a Nash equilibrium in which the payoff of player i is at least Ti, or report that no such Nash equilibrium exists.",
                "It turns out that we can design an FPTAS for this problem using the same techniques as in the previous section.",
                "THEOREM 5.",
                "Given a graphical game G on an n-vertex path and n rational numbers T1, . . . , Tn, suppose that there exists a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. Then for any > 0 we can find in time O(max{nP3 max/ 3 , n4 / 3 }) a strategy profile s such that s is a Nash equilibrium for G and EPVi (s ) ≥ Ti − for i = 1, . . . , n. PROOF.",
                "The proof is similar to that of Theorem 3.",
                "First, we construct the best response policies for all players, choose N > 5n, and construct the sets Xi, i = 1, . . . , n, as described in the proof of Theorem 3.",
                "Consider a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. We construct a strategy profile ti = max{xj i | xj i ≤ si} and use the same argument as in the proof of Theorem 3 to show that t is a Nash equilibrium for G. By Lemma 3, we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ, so choosing δ < /(24Pmax), or, equivalently, N > max{5n, 24Pmax/ }, we can ensure EPVi (t) ≥ Ti − for i = 1, . . . , n. Now, we will use dynamic programming to find a discrete Nash equilibrium that satisfies EPVi (t) ≥ Ti − for i = 1, . . . , n. As t is a discrete strategy profile, our algorithm will succeed whenever there is a strategy profile s with EPVi (s) ≥ Ti− for i = 1, . . . , n. Let zl,k i = 1 if there is a discrete strategy profile such that for any j < i the strategy of the player Vj is a potential best response to the strategy of Vj+1, the expected payoff of Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "Otherwise, let zl,k i = 0.",
                "We can compute zl,k i , i = 1, . . . , n; k, l = 1, . . . , N inductively, as follows.",
                "We have zl,k 1 = 1 for k, l = 1, . . . , N. Now, suppose that we have already computed zl,k j for all j < i; k, l = 1, . . . , N. To compute zk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this 168 is not the case, clearly, zk,l i = 0.",
                "Otherwise, consider the set Y = Xi−2 ∩pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "It has been shown in the proof of Theorem 3 that Y = ∅.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "If there exists an xj i−2 ∈ Y such that zj,l i−1 = 1 and pjlk ≥ Ti−2 − , set zl,k i = 1.",
                "Otherwise, set zl,k i = 0.",
                "Having computed zl,k n , l, k = 1, . . . , N, we check if zl,k n = 1 for some pair (l, k). if such a pair of indices exists, we instruct Vn to play xk n and use dynamic programming techniques (or, equivalently, the downstream pass of the algorithm of [13]) to find a Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n (recall that Vn is a dummy player, i.e., we assume Tn = 0, EPn(s ) = 0 for any choice of s ).",
                "If zl,k n = 0 for all l, k = 1, . . . , N, there is no discrete Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n and hence no Nash equilibrium s (not necessarily discrete) such that EPVi (s) ≥ Ti for i = 1, . . . , n. The running time analysis is similar to that for Theorem 3; we conclude that the running time of our algorithm is O(nN3 ) = O(max{nP3 max/ 3 , n4 / 3 }).",
                "REMARK 1.",
                "Theorem 5 can be extended to trees of bounded degree in the same way as Theorem 4. 5.1 Exact Computation Another approach to finding Nash equilibria with bounded payoffs is based on inductively computing the subsets of the best response policies of all players so as to exclude the points that do not provide sufficient payoffs to some of the players.",
                "Formally, we say that a strategy v of the player V is a potential best response to a strategy w of its parent W with respect to a threshold vector T = (T1, . . . , Tn), (denoted by v ∈ pbrV (w, T)) if there is an equilibrium in the instance G(V,W ),W =w in which V plays mixed strategy v and the payoff to any player Vi downstream of V (including V ) is at least Ti.",
                "The best response policy for V with respect to a threshold vector T is defined as B(W, V, T) = {(w, v) | v ∈ pbrV (w, T), w ∈ [0, 1]}.",
                "It is easy to see that if any of the sets B(Vj, Vj−1, T), j = 1, . . . , n, is empty, it means that it is impossible to provide all players with expected payoffs prescribed by T. Otherwise, one can apply the downstream pass of the original algorithm of [13] to find a Nash equilibrium.",
                "As we assume that Vn is a dummy vertex whose payoff is identically 0, the Nash equilibrium with these payoffs exists as long as Tn ≤ 0 and B(Vn, Vn−1, T) is not empty.",
                "Using the techniques developed in [9], it is not hard to show that for any j = 1, . . . , n, the set B(Vj , Vj−1, T) consists of a finite number of rectangles, and one can compute B(Vj+1, Vj , T) given B(Vj , Vj−1, T).",
                "The advantage of this approach is that it allows us to represent all Nash equilibria that provide required payoffs to the players.",
                "However, it is not likely to be practical, since it turns out that the rectangles that appear in the representation of B(Vj , Vj−1, T) may have irrational coordinates.",
                "CLAIM 6.",
                "There exists a graphical game G on a 3-vertex path UV W and a vector T = (T1, T2, T3) such that B(V, W, T) cannot be represented as a union of a finite number of rectangles with rational coordinates.",
                "PROOF.",
                "We define the payoffs to the players in G as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = uw, P1 (V ) = P0 (V ) + w − .8u − .1, where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = .8u + .1; observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "It is not hard to see that we have B(W, V ) = [0, .1]×{0} ∪ [.1, .9]×[0, 1] ∪ [.9, 1]×{1}.",
                "The payoffs to W are not important for our construction; for example, set P0(W ) = P0(W ) = 0.",
                "Now, set T = (0, 1/8, 0), i.e., we are interested in Nash equilibria in which V s expected payoff is at least 1/8.",
                "Suppose w ∈ [0, 1].",
                "The player V can play a mixed strategy v when W is playing w as long as U plays u = f−1 (w) = 5w/4 − 1/8 (to ensure that V is indifferent between 0 and 1) and P0 (V ) = P1 (V ) = uw = w(5w/4 − 1/8) ≥ 1/8.",
                "The latter condition is satisfied if w ≤ (1 − √ 41)/20 < 0 or w ≥ (1 + √ 41)/20.",
                "Note that we have .1 < (1 + √ 41)/20 < .9.",
                "For any other value of w, any strategy of U either makes V prefer one of the pure strategies or does not provide it with a sufficient expected payoff.",
                "There are also some values of w for which V can play a pure strategy (0 or 1) as a potential best response to W and guarantee itself an expected payoff of at least 1/8; it can be shown that these values of w form a finite number of segments in [0, 1].",
                "We conclude that any representation of B(W, V, T) as a union of a finite number of rectangles must contain a rectangle of the form [(1 + √ 41)/20, w ]×[v , v ] for some w , v , v ∈ [0, 1].",
                "On the other hand, it can be shown that for any integer payoff matrices and threshold vectors and any j = 1, . . . , n − 1, the sets B(Vj+1, Vj, T) contain no rectangles of the form [u , u ]×{v} or {v}×[w , w ], where v ∈ R\\Q.",
                "This means that if B(Vn, Vn−1, T) is non-empty, i.e., there is a Nash equilibrium with payoffs prescribed by T, then the downstream pass of the algorithm of [13] can always pick a strategy profile that forms a Nash equilibrium, provides a payoff of at least Ti to the player Vi, and has no irrational coordinates.",
                "Hence, unlike in the case of the Nash equilibrium that maximizes the social welfare, working with irrational numbers is not necessary, and the fact that the algorithm discussed in this section has to do so can be seen as an argument against using this approach. 6.",
                "OTHER CRITERIA FOR SELECTING A NASH EQUILIBRIUM In this section, we consider several other criteria that can be useful in selecting a Nash equilibrium. 6.1 Combining welfare maximization with bounds on payoffs In many real life scenarios, we want to maximize the social welfare subject to certain restrictions on the payoffs to individual players.",
                "For example, we may want to ensure that no player gets a negative expected payoff, or that the expected payoff to player i is at least Pi max − ξ, where Pi max is the maximum entry of is payoff matrix and ξ is a fixed parameter.",
                "Formally, given a graphical game G and a vector T1, . . . , Tn, let S be the set of all Nash equilibria s of G that satisfy Ti ≤ EPVi (s) for i = 1, . . . , n, and let ˆs = argmaxs∈S EP(s).",
                "If the set S is non-empty, we can find a Nash equilibrium ˆs that is -close to satisfying the payoff bounds and is within from ˆs with respect to the total payoff by combining the algorithms of Section 4 and Section 5.",
                "Namely, for a given > 0, choose δ as in the proof of Theorem 3, and let Xi be the set of all discrete strategies of player Vi (for a 169 formal definition, see the proof of Theorem 3).",
                "Combining the proofs of Theorem 3 and Theorem 5, we can see that the strategy profile ˆt given by ˆti = max{xj i | xj i ≤ ˆsi} satisfies EPVi (ˆt) ≥ Ti − , |EP(ˆs) − EP(ˆt)| ≤ .",
                "Define ˆml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj, j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1 and the payoff to player Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The ˆml,k i can be computed by dynamic programming similarly to the ml,k i and zl,k i in the proofs of Theorems 3 and 5.",
                "Finally, as in the proof of Theorem 3, we use ml,k n to select the best discrete Nash equilibrium subject to the payoff constraints.",
                "Even more generally, we may want to maximize the total payoff to a subset of players (who are assumed to be able to redistribute the profits fairly among themselves) while guaranteeing certain expected payoffs to (a subset of) the other players.",
                "This problem can be handled similarly. 6.2 A minimax approach A more egalitarian measure of the quality of a Nash equilibrium is the minimal expected payoff to a player.",
                "The optimal solution with respect to this measure is a Nash equilibrium in which the minimal expected payoff to a player is maximal.",
                "To find an approximation to such a Nash equilibrium, we can combine the algorithm of Section 5 with binary search on the space of potential lower bounds.",
                "Note that the expected payoff to any player Vi given a strategy s always satisfies −Pmax ≤ EPVi (s) ≤ Pmax.",
                "For a fixed > 0, we start by setting T = −Pmax, T = Pmax, T∗ = (T + T )/2.",
                "We then run the algorithm of Section 5 with T1 = · · · = Tn = T∗ .",
                "If the algorithm succeeds in finding a Nash equilibrium s that satisfies EPVi (s ) ≥ T∗ − for all i = 1, . . . , n, we set T = T∗ , T∗ = (T + T )/2; otherwise, we set T = T∗ , T∗ = (T + T )/2 and loop.",
                "We repeat this process until |T − T | ≤ .",
                "It is not hard to check that for any p ∈ R, if there is a Nash equilibrium s such that mini=1,...,n EPVi (s) ≥ p, then our algorithm outputs a Nash equilibrium s that satisfies mini=1,...,n EPVi (s) ≥ p−2 .",
                "The running time of our algorithm is O(max{nP3 max log −1 / 3 , n4 log −1 / 3 }). 6.3 Equalizing the payoffs When the players payoff matrices are not very different, it is reasonable to demand that the expected payoffs to the players do not differ by much either.",
                "We will now show that Nash equilibria in this category can be approximated in polynomial time as well.",
                "Indeed, observe that the algorithm of Section 5 can be easily modified to deal with upper bounds on individual payoffs rather than lower bounds.",
                "Moreover, we can efficiently compute an approximation to a Nash equilibrium that satisfies both the upper bound and the lower bound for each player.",
                "More precisely, suppose that we are given a graphical game G, 2n rational numbers T1, . . . , Tn, T1, . . . , Tn and > 0.",
                "Then if there exists a strategy profile s such that s is a Nash equilibrium for G and Ti ≤ EPVi (s) ≤ Ti for i = 1, . . . , n, we can find a strategy profile s such that s is a Nash equilibrium for G and Ti − ≤ EPVi (s ) ≤ Ti + for i = 1, . . . , n. The modified algorithm also runs in time O(max{nP3 max/ 3 , [4]n4 / 3 }).",
                "This observation allows us to approximate Nash equilibria in which all players expected payoffs differ by at most ξ for any fixed ξ > 0.",
                "Given an > 0, we set T1 = · · · = Tn = −Pmax, T1 = · · · = Tn = −Pmax + ξ + , and run the modified version of the algorithm of Section 5.",
                "If it fails to find a solution, we increment all Ti, Ti by and loop.",
                "We continue until the algorithm finds a solution, or Ti ≥ Pmax.",
                "Suppose that there exists a Nash equilibrium s that satisfies |EPVi (s) − EPVj (s)| ≤ ξ for all i, j = 1, . . . , n. Set r = mini=1,...,n EPVi (s); we have r ≤ EPVi (s) ≤ r + ξ for all i = 1, . . . , n. There exists a k ≥ 0 such that −Pmax + (k − 1) ≤ r ≤ −Pmax + k .",
                "During the kth step of the algorithm, we set T1 = · · · = Tn = −Pmax +(k−1) , i.e., we have r− ≤ Ti ≤ r, r + ξ ≤ Ti ≤ r + ξ + .",
                "That is, the Nash equilibrium s satisfies Ti ≤ r ≤ EPVi (s) ≤ r + ξ ≤ Ti , which means that when Ti is set to −Pmax + (k − 1) , our algorithm is guaranteed to output a Nash equilibrium t that satisfies r − 2 ≤ Ti − ≤ EPVi (t) ≤ Ti + ≤ r +ξ +2 .",
                "We conclude that whenever such a Nash equilibrium s exists, our algorithm outputs a Nash equilibrium t that satisfies |EPVi (t) − EPVj (t)| ≤ ξ + 4 for all i, j = 1, . . . , n. The running time of this algorithm is O(max{nP3 max/ 4 , n4 / 4 }).",
                "Note also that we can find the smallest ξ for which such a Nash equilibrium exists by combining this algorithm with binary search over the space ξ = [0, 2Pmax].",
                "This identifies an approximation to the fairest Nash equilibrium, i.e., one in which the players expected payoffs differ by the smallest possible amount.",
                "Finally, note that all results in this section can be extended to bounded-degree trees. 7.",
                "CONCLUSIONS We have studied the problem of equilibrium selection in graphical games on bounded-degree trees.",
                "We considered several criteria for selecting a Nash equilibrium, such as maximizing the social welfare, ensuring a lower bound on the expected payoff of each player, etc.",
                "First, we focused on the algebraic complexity of a social welfare-maximizing Nash equilibrium, and proved strong negative results for that problem.",
                "Namely, we showed that even for graphical games on paths, any algebraic number α ∈ [0, 1] may be the only strategy available to some player in all social welfaremaximizing Nash equilibria.",
                "This is in sharp contrast with the fact that graphical games on trees always possess a Nash equilibrium in which all players strategies are rational numbers.",
                "We then provided approximation algorithms for selecting Nash equilibria with special properties.",
                "While the problem of finding approximate Nash equilibria for various classes of games has received a lot of attention in recent years, most of the existing work aims to find -Nash equilibria that satisfy (or are -close to satisfying) certain properties.",
                "Our approach is different in that we insist on outputting an exact Nash equilibrium, which is -close to satisfying a given requirement.",
                "As argued in the introduction, there are several reasons to prefer a solution that constitutes an exact Nash equilibrium.",
                "Our algorithms are fully polynomial time approximation schemes, i.e., their running time is polynomial in the inverse of the approximation parameter , though they may be pseudopolynomial with respect to the input size.",
                "Under mild restrictions on the inputs, they can be modified to be truly polynomial.",
                "This is the strongest positive result one can derive for a problem whose exact solutions may be hard to represent, as is the case for many of the problems considered here.",
                "While we prove our results for games on a path, they can be generalized to any tree for which the best response policies have compact representations as unions of rectangles.",
                "In the full version of the paper we describe our algorithms for the general case.",
                "Further work in this vein could include extensions to the kinds of guarantees sought for Nash equilibria, such as guaranteeing total payoffs for subsets of players, selecting equilibria in which some players are receiving significantly higher payoffs than their peers, etc.",
                "At the moment however, it is perhaps more important to inves170 tigate whether Nash equilibria of graphical games can be computed in a decentralized manner, in contrast to the algorithms we have introduced here.",
                "It is natural to ask if our results or those of [9] can be generalized to games with three or more actions.",
                "However, it seems that this will make the analysis significantly more difficult.",
                "In particular, note that one can view the bounded payoff games as a very limited special case of games with three actions per player.",
                "Namely, given a two-action game with payoff bounds, consider a game in which each player Vi has a third action that guarantees him a payoff of Ti no matter what everyone else does.",
                "Then checking if there is a Nash equilibrium in which none of the players assigns a nonzero probability to his third action is equivalent to checking if there exists a Nash equilibrium that satisfies the payoff bounds in the original game, and Section 5.1 shows that finding an exact solution to this problem requires new ideas.",
                "Alternatively it may be interesting to look for similar results in the context of correlated equilibria (CE), especially since the best CE may have higher value (total expected payoff) than the best NE.",
                "The ratio between these values is called the mediation value in [1].",
                "It is known from [1] that the mediation value of 2-player, 2-action games with non-negative payoffs is at most 4 3 , and they exhibit a 3-player game for which it is infinite.",
                "Furthermore, a 2-player, 3action example from [1] also has infinite mediation value. 8.",
                "REFERENCES [1] I. Ashlagi, D. Monderer and M. Tenneholtz, On the Value of Correlation, Proceedings of Dagstuhl seminar 05011 (2005) [2] R. Aumann, Subjectivity and Correlation in Randomized Strategies, Journal of Mathematical Economics 1 pp. 67-96 (1974) [3] B. Blum, C. R. Shelton, and D. Koller, A Continuation Method for Nash Equilibria in Structured Games, Proceedings of IJCAI03 [4] X. Chen, X. Deng and S. Teng, Computing Nash Equilibria: Approximation and Smoothed Complexity, Proceedings of FOCS06 [5] X. Chen, X. Deng, Settling the Complexity of 2-Player Nash-Equilibrium, Proceedings of FOCS06 [6] V. Conitzer and T. Sandholm, Complexity Results about Nash Equilibria, Proceedings of IJCAI03 [7] C. Daskalakis, P. W. Goldberg and C. H. Papadimitriou, The Complexity of Computing a Nash Equilibrium, Proceedings of STOC06 [8] R. S. Datta, Universality of Nash Equilibria, Mathematics of Operations Research 28:3, 2003 [9] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Nash Equilibria in Graphical games on Trees Revisited, Proceedings of ACM EC06 [10] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Computing Good Nash Equilibria in Graphical Games, http://arxiv.org/abs/cs.GT/0703133 [11] I. Gilboa and E. Zemel, Nash and Correlated Equilibria: Some Complexity Considerations, Games and Economic Behavior, 1 pp. 80-93 (1989) [12] P. W. Goldberg and C. H. Papadimitriou, Reducibility Among Equilibrium Problems, Proceedings of STOC06 [13] M. Kearns, M. Littman, and S. Singh, Graphical Models for Game Theory, Proceedings of UAI01 [14] M. Littman, M. Kearns, and S. Singh, An Efficient Exact Algorithm for Singly Connected Graphical Games, Proceedings of NIPS01 [15] R. Lipton and E. Markakis, Nash Equilibria via Polynomial Equations, Proceedings of LATIN04 [16] L. Ortiz and M. Kearns, Nash Propagation for Loopy Graphical Games, Proceedings of NIPS03 [17] C.H.",
                "Papadimitriou, Computing Correlated Equilibria in Multi-Player Games, Proceedings of STOC05 [18] C.H.",
                "Papadimitriou and T. Roughgarden, Computing Equilibria in Multi-Player Games, Proceedings of SODA05 [19] D. Vickrey and D. Koller, Multi-agent Algorithms for Solving Graphical Games, Proceedings of AAAI02 171"
            ],
            "original_annotated_samples": [
                "Rather than having an algorithm which merely finds some Nash equilibrium, we would like to have algorithms for finding Nash equilibria with <br>various sociallydesirable properties</br>, such as maximizing overall payoff or distributing profit fairly."
            ],
            "translated_annotated_samples": [
                "En lugar de tener un algoritmo que simplemente encuentre algún equilibrio de Nash, nos gustaría tener algoritmos para encontrar equilibrios de Nash con diversas <br>propiedades socialmente deseables</br>, como maximizar el pago total o distribuir las ganancias de manera justa."
            ],
            "translated_text": "Calcular buenos equilibrios de Nash en juegos gráficos ∗ Edith Elkind Universidad Hebrea de Jerusalén, Israel, y Universidad de Southampton, Southampton, SO17 1BJ, Reino Unido. Leslie Ann Goldberg Universidad de Liverpool Liverpool L69 3BX, Reino Unido. Paul Goldberg Universidad de Liverpool Liverpool L69 3BX, Reino Unido. RESUMEN Este artículo aborda el problema de la selección justa de equilibrios en juegos gráficos. Nuestro enfoque se basa en la estructura de datos llamada política de mejor respuesta, propuesta por Kearns et al. [13] como una forma de representar todos los equilibrios de Nash de un juego gráfico. En [9], se demostró que la política de mejor respuesta tiene un tamaño polinómico siempre y cuando el grafo subyacente sea un camino. En este artículo, demostramos que si el grafo subyacente es un árbol de grado acotado y la política de mejor respuesta tiene un tamaño polinómico, entonces existe un algoritmo eficiente que construye un equilibrio de Nash que garantiza ciertos pagos a todos los participantes. Otro concepto de solución atractivo es un equilibrio de Nash que maximiza el bienestar social. Mostramos que, si bien calcular exactamente lo último es inviable (demostramos que resolver este problema puede implicar números algebraicos de un grado arbitrariamente alto), existe un FPTAS para encontrar dicho equilibrio siempre y cuando la política de mejor respuesta tenga un tamaño polinómico. Estos dos algoritmos pueden combinarse para producir equilibrios de Nash que satisfacen varios criterios de equidad. Categorías y Descriptores de Asignaturas F.2 [Teoría de la Computación]: Análisis de Algoritmos y Complejidad de Problemas; J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento - Economía Términos Generales Algoritmos, Economía, Teoría 1. INTRODUCCIÓN En una gran comunidad de agentes, es poco probable que el comportamiento de un agente tenga un efecto directo en la mayoría de los otros agentes: más bien, solo serán afectados los agentes que estén lo suficientemente cerca de él. Sin embargo, a medida que estos agentes responden adaptando su comportamiento, más agentes sentirán las consecuencias y eventualmente las decisiones tomadas por un solo agente se propagarán por toda la comunidad. Esta es la intuición detrás de los juegos gráficos, los cuales fueron introducidos por Kearns, Littman y Singh en [13] como un esquema de representación compacto para juegos con muchos jugadores. En un juego gráfico de n jugadores, a cada jugador se le asocia un vértice de un grafo subyacente G, y las ganancias de cada jugador dependen de su acción, así como de las acciones de sus vecinos en el grafo. Si el grado máximo de G es Δ, y cada jugador tiene dos acciones disponibles, entonces el juego se puede representar usando n2Δ+1 números. Por el contrario, necesitamos n^2 números para representar un juego general de n jugadores y 2 acciones, lo cual solo es práctico para valores pequeños de n. Para juegos gráficos con Δ constante, el tamaño del juego es lineal en n. Uno de los problemas más naturales para un juego gráfico es el de encontrar un equilibrio de Nash, cuya existencia se deriva del célebre teorema de Nash (ya que los juegos gráficos son solo un caso especial de juegos de n jugadores). El primer intento de abordar este problema se realizó en [13], donde los autores consideran juegos gráficos con dos acciones por jugador en los que el grafo subyacente es un árbol de grado acotado. Proponen un algoritmo genérico para encontrar equilibrios de Nash que puede ser especializado de dos maneras: un algoritmo de tiempo exponencial para encontrar un equilibrio de Nash (exacto) y un esquema de aproximación de tiempo polinómico completo (FPTAS) para encontrar una aproximación a un equilibrio de Nash. Para cualquier > 0, este algoritmo produce un equilibrio de Nash, que es un perfil estratégico en el que ningún jugador puede mejorar su pago más que al cambiar unilateralmente su estrategia. Si bien los equilibrios de Nash aproximados suelen ser más fáciles de calcular que los equilibrios de Nash exactos, este concepto de solución tiene varias desventajas. Primero, es posible que los jugadores sean sensibles a una pequeña pérdida en las ganancias, por lo que el perfil estratégico que es un equilibrio de Nash no será estable. Esto será así incluso si solo hay un pequeño subconjunto de jugadores que son extremadamente sensibles al precio, y para una gran población de jugadores puede ser difícil elegir un valor que satisfaga a todos. Segundo, los perfiles estratégicos que están cerca de ser equilibrios de Nash pueden ser mucho mejores con respecto a las propiedades consideradas que los equilibrios de Nash exactos. Por lo tanto, la aproximación al valor de la mejor solución que corresponde a un equilibrio de Nash aproximado puede no ser indicativa de lo que se puede lograr bajo un equilibrio de Nash exacto. Esto es especialmente importante si el propósito de la solución aproximada es proporcionar un buen punto de referencia para un sistema de agentes egoístas, ya que el punto de referencia implícito por un equilibrio de Nash puede ser poco realista. Por estas razones, en este artículo nos enfocamos en el problema de calcular equilibrios de Nash exactos. Basándose en las ideas de [14], Elkind et al. [9] mostraron cómo encontrar un equilibrio de Nash (exacto) en tiempo polinómico cuando el grafo subyacente tiene grado 2 (es decir, cuando el grafo es una colección de caminos y ciclos). Por el contrario, encontrar un equilibrio de Nash en un grafo general con grado acotado parece ser computacionalmente intratable: se ha demostrado (ver [5, 12, 7]) que es completo para la clase de complejidad PPAD. [9] extiende este resultado de dificultad al caso en el que el grafo subyacente tiene un ancho de camino acotado. Un juego gráfico puede no tener un equilibrio de Nash único, de hecho, puede tener exponencialmente muchos. Además, algunos equilibrios de Nash son más deseables que otros. En lugar de tener un algoritmo que simplemente encuentre algún equilibrio de Nash, nos gustaría tener algoritmos para encontrar equilibrios de Nash con diversas <br>propiedades socialmente deseables</br>, como maximizar el pago total o distribuir las ganancias de manera justa. Una propiedad útil de la estructura de datos de [13] es que representa simultáneamente el conjunto de todos los equilibrios de Nash del juego subyacente. Si esta representación tiene tamaño polinómico (como es el caso de los caminos, como se muestra en [9]), se puede esperar extraer de ella un equilibrio de Nash con las propiedades deseadas. De hecho, en [13] los autores mencionan que esto es posible si uno está interesado en encontrar un equilibrio de Nash (aproximado). El objetivo de este artículo es extender esto a equilibrios de Nash exactos. 1.1 Nuestros Resultados En este artículo, estudiamos juegos gráficos de n jugadores y 2 acciones en árboles de grado acotado para los cuales la estructura de datos de [13] tiene tamaño polinómico en n. Nos enfocamos en el problema de encontrar equilibrios de Nash exactos con ciertas propiedades socialmente deseables. En particular, mostramos cómo encontrar un equilibrio de Nash que maximiza (casi) el bienestar social, es decir, la suma de las ganancias de los jugadores, y mostramos cómo encontrar un equilibrio de Nash que satisface (casi) los límites de ganancias prescritos para todos los jugadores. Los juegos gráficos en árboles de grado acotado tienen una estructura algebraica simple. Una característica atractiva, que se desprende de [13], es que cada juego de este tipo tiene un equilibrio de Nash en el cual la estrategia de cada jugador es un número racional. La sección 3 estudia la estructura algebraica de aquellos equilibrios de Nash que maximizan el bienestar social. Demostramos (Teoremas 1 y 2) que, sorprendentemente, el conjunto de equilibrios de Nash que maximizan el bienestar social es más complejo. De hecho, para cualquier número algebraico α ∈ [0, 1] con grado a lo sumo n, exhibimos un juego gráfico en un camino de longitud O(n) tal que, en el equilibrio de Nash único que maximiza el bienestar social de este juego, uno de los jugadores juega la estrategia mixta α. Este resultado muestra que puede ser difícil representar un equilibrio de Nash óptimo. Parece ser una característica novedosa del escenario que consideramos aquí, que un equilibrio de Nash óptimo es difícil de representar, en una situación donde es fácil encontrar y representar un equilibrio de Nash. Dado que el equilibrio de Nash que maximiza el bienestar social puede ser difícil de representar eficientemente, debemos conformarnos con una aproximación. Sin embargo, la diferencia crucial entre nuestro enfoque y el de los trabajos anteriores [13, 16, 19] es que requerimos que nuestro algoritmo produzca un equilibrio de Nash exacto, aunque no necesariamente el óptimo con respecto a nuestros criterios. En la Sección 4, describimos un algoritmo que cumple con este requisito. Específicamente, proponemos un algoritmo que, para cualquier > 0, encuentra un equilibrio de Nash cuya recompensa total está dentro de de lo óptimo. Se ejecuta en tiempo polinómico (Teorema 3,4) para cualquier juego gráfico en un árbol de grado acotado para el cual la estructura de datos propuesta por [13] (la llamada política de mejor respuesta, definida a continuación) tiene un tamaño poli(n) (nota que, como se muestra en [9], esto siempre es el caso cuando el grafo subyacente es un camino). Un resultado relacionado en un contexto diferente fue obtenido por Datta [8], quien muestra que los juegos de n jugadores con 2 acciones son universales en el sentido de que cualquier variedad algebraica real puede ser representada como el conjunto de equilibrios de Nash totalmente mixtos de tales juegos. Precisamente, el tiempo de ejecución de nuestro algoritmo es polinómico en n, Pmax y 1/, donde Pmax es el valor absoluto máximo de una entrada de una matriz de pagos, es decir, es un algoritmo seudopolinómico, aunque es completamente polinómico con respecto a . Mostramos (Sección 4.1) que bajo ciertas restricciones en las matrices de pagos, el algoritmo puede ser transformado en un algoritmo de tiempo polinómico (verdaderamente) que produce un equilibrio de Nash cuya ganancia total está dentro de un factor de 1 − del óptimo. En la Sección 5, consideramos el problema de encontrar un equilibrio de Nash en el que la ganancia esperada de cada jugador Vi supere un umbral prescrito Ti. Usando la idea de la Sección 4, presentamos (Teorema 5) un esquema de aproximación en tiempo polinómico completo para este problema. El tiempo de ejecución del algoritmo está acotado por un polinomio en n, Pmax y . Si la instancia tiene un equilibrio de Nash que cumple con los umbrales prescritos, entonces el algoritmo construye un equilibrio de Nash en el que la recompensa esperada de cada jugador Vi es al menos Ti − . En la Sección 6, presentamos otros criterios naturales para seleccionar un buen equilibrio de Nash y mostramos que los algoritmos descritos en las dos secciones anteriores pueden ser utilizados como bloques de construcción para encontrar equilibrios de Nash que cumplan con estos criterios. En particular, en la Sección 6.1 mostramos cómo encontrar un equilibrio de Nash que aproxima el máximo bienestar social, garantizando que la ganancia de cada individuo esté cerca de un umbral prescrito. En la Sección 6.2 mostramos cómo encontrar un equilibrio de Nash que maximiza (casi) al máximo el pago individual mínimo. Finalmente, en la Sección 6.3 mostramos cómo encontrar un equilibrio de Nash en el que las ganancias individuales de los jugadores están cerca unas de otras. 1.2 Trabajo Relacionado Nuestro esquema de aproximación (Teorema 3 y Teorema 4) muestra un contraste entre los juegos que estudiamos y los juegos de n acciones de dos jugadores, para los cuales los problemas correspondientes suelen ser intratables. Para juegos de n acciones de dos jugadores, el problema de encontrar equilibrios de Nash con propiedades especiales suele ser NP-duro. En particular, este es el caso de los equilibrios de Nash que maximizan el bienestar social [11, 6]. Además, es probable que sea intratable incluso aproximarse a tales equilibrios. En particular, Chen, Deng y Teng [4] muestran que existe algún , polinomio inverso en n, para el cual calcular un equilibrio de Nash en juegos de 2 jugadores con n acciones por jugador es PPAD-completo. Lipton y Markakis [15] estudian las propiedades algebraicas de los equilibrios de Nash, y señalan que los algoritmos estándar de eliminación de cuantificadores pueden ser utilizados para resolverlos. Ten en cuenta que estos algoritmos no son de tiempo polinómico en general. Los juegos que estudiamos en este artículo tienen equilibrios de Nash computables en tiempo polinómico en los que todas las estrategias mixtas son números racionales, pero un equilibrio de Nash óptimo puede incluir necesariamente estrategias mixtas con un alto grado algebraico. Un equilibrio correlacionado (CE) (introducido por Aumann [2]) es una distribución sobre vectores de acciones de jugadores con la propiedad de que si a cualquier jugador se le dice su propia acción (el valor de su propio componente) de un vector generado por esa distribución, entonces no puede aumentar su ganancia esperada cambiando su acción. Cualquier equilibrio de Nash es una EC, pero la afirmación contraria no se cumple en general. A diferencia de los equilibrios de Nash, los equilibrios correlacionados se pueden encontrar para juegos gráficos de bajo grado (así como para otras clases de juegos multijugador representados de manera concisa) en tiempo polinómico [17]. Pero, para juegos gráficos es NP-duro encontrar un equilibrio correlacionado que maximice la recompensa total [18]. Sin embargo, los resultados de NP-dificultad se aplican a juegos más generales que el que consideramos aquí, en particular los grafos no son árboles. Del [2] también se sabe que existen juegos de 2 jugadores y 2 acciones para los cuales el pago total esperado 163 del mejor equilibrio correlacionado es mayor que el mejor equilibrio de Nash, y discutimos este tema más a fondo en la Sección 7.2. CONSIDERACIONES PRELIMINARES Y NOTACIÓN Consideramos juegos gráficos en los que el grafo subyacente G es un árbol de n vértices, en el que cada vértice tiene a lo sumo Δ hijos. Cada vértice tiene dos acciones, que están representadas por 0 y 1. Una estrategia mixta de un jugador V se representa como un único número v ∈ [0, 1], que denota la probabilidad de que V seleccione la acción 1. Para los propósitos del algoritmo, el árbol está enraizado de manera arbitraria. Para mayor comodidad, asumimos sin pérdida de generalidad que la raíz tiene un solo hijo y que su recompensa es independiente de la acción elegida por el hijo. Esto se puede lograr primero eligiendo una raíz arbitraria del árbol, y luego agregando un padre ficticio de esta raíz, asignándole una función de recompensa constante, por ejemplo, 0. Dado un borde (V, W) del árbol G, y una estrategia mixta w para W, sea G(V,W), W=w la instancia obtenida de G mediante (1) eliminar todos los nodos Z que están separados de V por W (es decir, todos los nodos Z tales que el camino de Z a V pasa por W), y (2) restringir la instancia de modo que se requiera que W juegue la estrategia mixta w. Definición 1. Supongamos que (V, W) es una arista del árbol, que v es una estrategia mixta para V y que w es una estrategia mixta para W. Decimos que v es una mejor respuesta potencial a w (denotado por v ∈ pbrV (w)) si hay un equilibrio en la instancia G(V,W), W = w en el que V tiene una estrategia mixta v. Definimos la política de mejor respuesta para V, dada W, como B(W, V) = {(w, v) | v ∈ pbrV (w), w ∈ [0, 1]}. El paso ascendente del algoritmo genérico de [13] considera cada nodo V (que no sea la raíz) y calcula la política de mejor respuesta para V dada su padre. Con las suposiciones anteriores sobre la raíz, el paso aguas abajo es sencillo. La raíz selecciona una estrategia mixta w para la raíz W y una estrategia mixta v ∈ B(W, V) para cada hijo V de W. Indica a cada niño V que juegue v. El resto del pase descendente es recursivo. Cuando un nodo V recibe instrucciones de su padre para adoptar la estrategia mixta v, realiza lo siguiente para cada hijo U: encuentra un par (v, u) ∈ B(V, U) (con el mismo valor de v que le fue dado por su padre) e instruye a U a jugar u. La mejor política de respuesta para un vértice U dado su padre V puede representarse como una unión de rectángulos, donde un rectángulo está definido por un par de intervalos cerrados (IV, IU) y consiste en todos los puntos en IV × IU; puede ser el caso de que uno o ambos de los intervalos IV e IU consistan en un solo punto. Para realizar cálculos en B(V, U) y para limitar el número de rectángulos, [9] utilizó el concepto de un punto de evento, el cual se define de la siguiente manera. Para cualquier conjunto A ⊆ [0, 1]2 que se represente como una unión de un número finito de rectángulos, decimos que un punto u ∈ [0, 1] en el eje U es un punto de evento U de A si u = 0 o u = 1 o la representación de A contiene un rectángulo de la forma IV × IU y u es un extremo de IU; los puntos de evento V se definen de manera similar. Para muchos juegos considerados en este documento, el grafo subyacente es un camino de n vértices, es decir, un grafo G = (V, E) con V = {V1, . . . , Vn} y E = {(V1, V2), . . . , (Vn−1, Vn)}. En [9], se demostró que para tales juegos, la política de mejor respuesta tiene solo un número polinomial de rectángulos. La prueba de que el número de rectángulos en B(Vj+1, Vj) es polinomial procede primero mostrando que el número de puntos de evento en B(Vj+1, Vj) no puede exceder el número de puntos de evento en B(Vj, Vj-1) en más de 2, y utilizando este hecho para acotar el número de rectángulos en B(Vj+1, Vj). Sean P0 (V) y P1 (V) las ganancias esperadas para V cuando juega 0 y 1, respectivamente. Tanto P0 (V) como P1 (V) son funciones multilineales de las estrategias de los vecinos de V. En lo que sigue, usaremos frecuentemente la siguiente observación simple. AFIRMACIÓN 1. Para un vértice V con un único hijo U y padre W, dados cualquier A, B, C, D ∈ Q, se pueden seleccionar las recompensas para V de manera que P0(V) = Auw + Bu + Cw + D, P1(V) = Auw + Bu + Cw + D. Además, si todos los valores de A, B, C, D son enteros, los pagos para V también son enteros. PRUEBA. Daremos la prueba para P0 (V); la prueba para P1 (V) es similar. Para i, j = 0, 1, sea Pij la ganancia para V cuando U juega i, V juega 0 y W juega j. Tenemos P0 (V) = P00(1 − u)(1 − w) + P10u(1 − w) + P01(1 − u)w + P11uw. Tenemos que seleccionar los valores de Pij de manera que P00 − P10 − P01 + P11 = A, −P00 + P10 = B, −P00 + P01 = C, P00 = D. Es fácil ver que la solución única está dada por P00 = D, P01 = C + D, P10 = B + D, P11 = A + B + C + D. La entrada a todos los algoritmos considerados en este documento incluye las matrices de pago para cada jugador. Suponemos que todos los elementos de estas matrices son enteros. Sea Pmax el mayor valor absoluto de cualquier elemento de cualquier matriz de pagos. Entonces, la entrada consiste en un máximo de n2Δ+1 números, cada uno de los cuales puede ser representado usando log Pmax bits. EQUILIBRIOS DE NASH QUE MAXIMIZAN EL BIENESTAR SOCIAL: SOLUCIONES EN R \\ Q Desde el punto de vista del bienestar social, el mejor equilibrio de Nash es aquel que maximiza la suma de las ganancias esperadas de los jugadores. Lamentablemente, resulta que calcular exactamente dicho perfil estratégico no es posible: en esta sección, mostramos que incluso si todas las ganancias de los jugadores son números enteros, el perfil estratégico que maximiza la ganancia total puede tener coordenadas irracionales; además, puede involucrar números algebraicos de un grado arbitrario. 3.1 Calentamiento: irracionales cuadráticos Comenzamos proporcionando un ejemplo de un juego gráfico en un camino de longitud 3 con ganancias enteras tal que en el equilibrio de Nash que maximiza la ganancia total, uno de los jugadores tiene una estrategia en R \\ Q. En la siguiente subsección, extenderemos este ejemplo a números algebraicos de grado arbitrario n; para hacerlo, debemos considerar caminos de longitud O(n). TEOREMA 1. Existe un juego gráfico G de pago entero en un camino de 3 vértices UVW tal que, en cualquier equilibrio de Nash de G que maximice el bienestar social, la estrategia u del jugador U y el pago total p cumplen u, p ∈ R \\ Q. PRUEBA. Las recompensas para los jugadores en G están especificadas de la siguiente manera. La ganancia para U es idénticamente 0, es decir, P0 (U) = P1 (U) = 0. Usando la Reclamación 1, seleccionamos las ganancias para V de modo que P0 (V) = -uw + 3w y P1 (V) = P0 (V) + w(u + 2) - (u + 1), donde u y w son las estrategias (mixtas) de U y W, respectivamente. Se deduce que V es indiferente entre jugar 0 y 1 si y solo si w = f(u) = u+1 u+2. Observa que para cualquier u ∈ [0, 1] tenemos f(u) ∈ [0, 1]. La recompensa para W es 0 si selecciona la misma acción que V y 1 en caso contrario. AFIRMACIÓN 2. Todos los equilibrios de Nash del juego G son de la forma (u, 1/2, f(u)). Es decir, en cualquier equilibrio de Nash, V juega v = 1/2 y W juega w = f(u). Además, para cualquier valor de u, el vector de estrategias (u, 1/2, f(u)) constituye un equilibrio de Nash. PRUEBA. Es fácil comprobar que para cualquier u ∈ [0, 1], el vector (u, 1/2, f(u)) es un equilibrio de Nash. De hecho, U está dispuesto a jugar 164 cualquier estrategia mixta u, sin importar lo que hagan V y W. Además, V es indiferente entre 0 y 1 siempre y cuando w = f(u), por lo que puede jugar 1/2. Finalmente, si V juega con probabilidad igual a 0 y 1, W es indiferente entre 0 y 1, por lo que puede jugar f(u). Por el contrario, supongamos que v > 1/2. Entonces W prefiere estrictamente jugar 0, es decir, w = 0. Entonces para V tenemos P1 (V) = P0 (V) - (u + 1), es decir, P1 (V) < P0 (V), lo que implica v = 0, una contradicción. De manera similar, si v < 1/2, el jugador W prefiere jugar 1, por lo que tenemos w = 1. Por lo tanto, P1 (V) = P0 (V) + (u + 2) - (u + 1), es decir, P1 (V) > P0 (V), lo que implica v = 1, una contradicción. Finalmente, si v = 1/2, pero w = f(u), el jugador V no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Esto completa la prueba de la Afirmación 2. Según la Afirmación 2, la ganancia total en cualquier equilibrio de Nash de este juego es una función de u. Más específicamente, la ganancia para U es 0, la ganancia para V es −uf(u) + 3f(u), y la ganancia para W es 1/2. Por lo tanto, el equilibrio de Nash con la máxima ganancia total corresponde al valor de u que maximiza g(u) = −u (u + 1) u + 2 + 3 u + 1 u + 2 = − (u − 3)(u + 1) u + 2. Para encontrar los extremos de g(u), calculamos h(u) = − d du g(u). Tenemos h(u) = (2u − 2)(u + 2) − (u − 3)(u + 1) (u + 2)2 = u2 + 4u − 1 (u + 2)2. Por lo tanto, h(u) = 0 si y solo si u ∈ {−2 + √ 5, −2 − √ 5}. Ten en cuenta que −2 + √ 5 ∈ [0, 1]. La función g(u) cambia de signo en −2, −1 y 3. Tenemos g(u) < 0 para g > 3, g(u) > 0 para u < −2, por lo que el extremo de g(u) que se encuentra entre 1 y 3, es decir, u = −2 + √ 5, es un máximo local. Concluimos que el equilibrio de Nash que maximiza el bienestar social para este juego está dado por el vector de estrategias (−2+√ 5, 1/2, (5 − √ 5)/5). El pago total respectivo es 0 − ( √ 5 − 5)( √ 5 − 1) √ 5 + 1 2 = 13/2 − 2 √ 5. Esto concluye la prueba del Teorema 1. 3.2 Estrategias de grado arbitrario. Hemos demostrado que en el equilibrio de Nash que maximiza el bienestar social, las estrategias de algunos jugadores pueden ser irracionales cuadráticas, al igual que la recompensa total. En esta subsección, extenderemos este resultado para mostrar que podemos construir un juego gráfico de pago entero en un camino cuyo equilibrio de Nash maximizador del bienestar social involucra números algebraicos arbitrarios en [0, 1]. TEOREMA 2. Para cualquier número algebraico α de grado n ∈ [0, 1], existe un juego gráfico de pago entero en un camino de longitud O(n) tal que, en todas las equilibrios de Nash que maximizan el bienestar social de este juego, uno de los jugadores juega α. PRUEBA. Nuestra prueba consta de dos pasos. Primero, construimos una expresión racional R(x) y un segmento [x , x ] tal que x , x ∈ Q y α sea el único máximo de R(x) en [x , x ]. Segundo, construimos un juego gráfico cuyos equilibrios de Nash pueden ser parametrizados por u ∈ [x, x], de modo que en el equilibrio que corresponde a u, la recompensa total es R(u) y, además, la estrategia de algunos jugadores es u. Se deduce que para alcanzar el equilibrio de Nash que maximiza la ganancia, este jugador tiene que jugar α. Los detalles siguen. LEMMA 1. \n\nLEMMA 1. Dado un número algebraico α ∈ [0, 1], deg(α) = n, existen K2, . . . , K2n+2 ∈ Q y x , x ∈ (0, 1) ∩ Q tal que α es el único máximo de R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 en [x , x ]. PRUEBA. Sea P(x) el polinomio minimal de α, es decir, un polinomio de grado n con coeficientes racionales cuyo coeficiente principal es 1 tal que P(α) = 0. Sea A = {α1, . . . , αn} el conjunto de todas las raíces de P(x). Considera el polinomio Q1(x) = −P2(x). Tiene las mismas raíces que P(x), y además, para cualquier x ∈ A tenemos Q1(x) < 0. Por lo tanto, A es el conjunto de todos los máximos de Q1(x). Ahora, establece R(x) = Q1(x) (x+2)...(x+2n+1)(x+2n+2). Observa que R(x) ≤ 0 para todo x ∈ [0, 1] y R(x) = 0 si y solo si Q1(x) = 0. Por lo tanto, el conjunto A también es el conjunto de todos los máximos de R(x) en [0, 1]. Sea d = min{|αi − α| | αi ∈ A, αi = α}, y establezca α = max{α − d/2, 0}, α = min{α + d/2, 1}. Claramente, α es el único cero (y por lo tanto, el único máximo) de R(x) en [α , α ]. Sean x y x algunos números racionales en (α, α) y (α, α), respectivamente; observe que al excluir los extremos de los intervalos aseguramos que x, x = 0, 1. Como [x, x] ⊂ [α, α], tenemos que α es el único máximo de R(x) en [x, x]. Dado que R(x) es una expresión racional adecuada y todas las raíces de su denominador son simples, por el teorema de descomposición en fracciones parciales, R(x) puede representarse como R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2, donde K2, . . . , K2n+2 son números racionales. Considera un juego gráfico en el camino U−1V−1U0V0U1V1 . . . Uk−1Vk−1Uk, donde k = 2n + 2. Intuitivamente, queremos que cada triple (Ui−1, Vi−1, Ui) se comporte de manera similar a los jugadores U, V y W del juego descrito en la subsección anterior. Más precisamente, definimos las ganancias de los jugadores de la siguiente manera. • La ganancia para U−1 es 0 sin importar lo que hagan los demás. • La ganancia esperada para V−1 es 0 si juega 0 y u0 − (x − x )u−1 −x si juega 1, donde u0 y u−1 son las estrategias de U0 y U−1, respectivamente. • La ganancia esperada para V0 es 0 si juega 0 y u1(u0 + 1)− u0 si juega 1, donde u0 y u1 son las estrategias de U0 y U1, respectivamente. • Para cada i = 1, . . . , k − 1, la ganancia esperada para Vi cuando juega 0 es P0 (Vi) = Aiuiui+1 − Aiui+1, y la ganancia esperada para Vi cuando juega 1 es P1 (Vi) = P0 (Vi) + ui+1(2 − ui) − 1, donde Ai = −Ki+1 y ui+1 y ui son las estrategias de Ui+1 y Ui, respectivamente. • Para cada i = 0, . . . , k, la ganancia para Ui no depende de Vi y es 1 si Ui y Vi−1 seleccionan acciones diferentes y 0 en caso contrario. Ahora caracterizaremos los equilibrios de Nash de este juego utilizando una secuencia de afirmaciones. AFIRMACIÓN 3. En todos los equilibrios de Nash de este juego, V−1 juega 1/2, y las estrategias de u−1 y u0 satisfacen u0 = (x − x )u−1 + x. Por consiguiente, en todos los equilibrios de Nash tenemos u0 ∈ [x , x ]. 165 PRUEBA. La prueba es similar a la del Reclamo 2. Que f(u−1) = (x − x )u−1 + x. Claramente, el jugador V−1 es indiferente entre jugar 0 y 1 si y solo si u0 = f(u−1). Supongamos que v−1 < 1/2. Entonces U0 prefiere estrictamente jugar 1, es decir, u0 = 1, por lo que tenemos P1 (V−1) = P0 (V−1) + 1 − (x − x )u−1 − x . Dado que 1 − x ≤ 1 − (x − x )u−1 − x ≤ 1 − x para u−1 ∈ [0, 1] y x < 1, tenemos que P1 (V−1) > P0 (V−1), por lo que V−1 prefiere jugar 1, lo cual es una contradicción. De manera similar, si v−1 > 1/2, el jugador U0 prefiere estrictamente jugar 0, es decir, u0 = 0, por lo que tenemos P1 (V−1) = P0 (V−1) − (x − x )u−1 − x. Dado que x < x, x > 0, tenemos P1 (V−1) < P0 (V−1), por lo que V−1 prefiere jugar 0, lo cual es una contradicción. Finalmente, si V−1 juega 1/2, pero u0 = f(u−1), el jugador V−1 no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Además, ten en cuenta que f(0) = x, f(1) = x y, además, f(u−1) ∈ [x, x] si y solo si u−1 ∈ [0, 1]. Por lo tanto, en todos los equilibrios de Nash de este juego tenemos u0 ∈ [x , x ]. AFIRMACIÓN 4. En todos los equilibrios de Nash de este juego para cada i = 0, . . . , k − 1, tenemos vi = 1/2, y las estrategias de los jugadores Ui y Ui+1 satisfacen ui+1 = fi(ui), donde f0(u) = u/(u + 1) y fi(u) = 1/(2 − u) para i > 0. PRUEBA. La prueba de esta afirmación es también similar a la de la Afirmación 2. Utilizamos inducción en i para demostrar que la afirmación de la proposición es verdadera y, además, ui = 1 para i > 0. Para el caso base i = 0, observe que u0 = 0 según la afirmación anterior (recuerde que x, x se seleccionan de manera que x, x = 0, 1) y considere el trío (U0, V0, U1). Que v0 sea la estrategia de V0. Primero, supongamos que v0 > 1/2. Entonces U1 prefiere estrictamente jugar 0, es decir, u1 = 0. Entonces, para V0 tenemos P1 (V0) = P0 (V0) − u0. Dado que u0 = 0, tenemos que P1 (V0) < P0 (V0), lo cual implica v1 = 0, una contradicción. De manera similar, si v0 < 1/2, el jugador U1 prefiere jugar 1, por lo que tenemos u1 = 1. Por lo tanto, P1 (V0) = P0 (V0) + 1. Se sigue que P1 (V0) > P0 (V0), lo cual implica v0 = 1, una contradicción. Finalmente, si v0 = 1/2, pero u1 = u0/(u0 + 1), el jugador V0 no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Además, dado que u1 = u0/(u0 + 1) y u0 ∈ [0, 1], tenemos que u1 = 1. El argumento para el paso inductivo es similar. Es decir, supongamos que la afirmación se demuestra para todos los i < i y consideremos el trío (Ui, Vi, Ui+1). Que vi sea la estrategia de Vi. Primero, supongamos que vi > 1/2. Entonces Ui+1 prefiere estrictamente jugar 0, es decir, ui+1 = 0. Entonces, para Vi tenemos P1 (Vi) = P0 (Vi)−1, es decir, P1 (Vi) < P0 (Vi), lo cual implica vi = 0, una contradicción. De manera similar, si vi < 1/2, el jugador Ui+1 prefiere jugar 1, por lo que tenemos ui+1 = 1. Por lo tanto, P1 (Vi) = P0 (Vi) + 1 − ui. Por hipótesis inductiva, tenemos ui < 1. Por consiguiente, P1 (Vi) > P0 (Vi), lo que implica vi = 1, una contradicción. Finalmente, si vi = 1/2, pero ui+1 = 1/(2 − ui), el jugador Vi no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Además, como ui+1 = 1/(2 − ui) y ui < 1, tenemos ui+1 < 1. AFIRMACIÓN 5. Cualquier perfil estratégico de la forma (u−1, 1/2, u0, 1/2, u1, 1/2, . . . , uk−1, 1/2, uk), donde u−1 ∈ [0, 1], u0 = (x − x )u−1 + x , u1 = u0/(u0 + 1), y ui+1 = 1/(2 − ui) para i ≥ 1, constituye un equilibrio de Nash. PRUEBA. Primero, las ganancias del jugador U−1 no dependen de las acciones de otros jugadores, por lo que es libre de jugar cualquier estrategia en [0, 1]. Si u0 = (x −x )u−1 +x , el jugador V−1 es indiferente entre 0 y 1, por lo que está contento de jugar 1/2; un argumento similar se aplica a los jugadores V0, . . . , Vk−1. Finalmente, para cada i = 0, . . . , k, las ganancias del jugador Ui solo dependen de la estrategia del jugador Vi−1. En particular, siempre y cuando vi−1 = 1/2, el jugador Ui es indiferente entre jugar 0 y 1, por lo que puede jugar cualquier estrategia mixta ui ∈ [0, 1]. Para completar la prueba, observe que (x − x )u−1 + x ∈ [0, 1] para todo u−1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] para todo u0 ∈ [0, 1], y 1/(2 − ui) ∈ [0, 1] para todo ui ∈ [0, 1], por lo que tenemos ui ∈ [0, 1] para todo i = 0, . . . , k. Ahora, calculemos la ganancia total bajo un perfil estratégico de la forma dada en la Afirmación 5. El pago para U−1 es 0, y el pago esperado para cada uno de los Ui, i = 0, . . . , k, es 1/2. Los beneficios esperados para V−1 y V0 son 0. Finalmente, para cualquier i = 1, . . . , k − 1, la ganancia esperada para Vi es Ti = Aiuiui+1 − Aiui+1. Se deduce que para encontrar un equilibrio de Nash con el mayor pago total, debemos maximizar Pk−1 i=1 Ti sujeto a las condiciones u−1 ∈ [0, 1], u0 = (x −x )u−1+x , u1 = u0/(u0+1), y ui+1 = 1/(2−ui) para i = 1, . . . , k − 1. Nos gustaría expresar Pk−1 i=1 Ti como una función de u0. Para simplificar la notación, establezca u = u0. LEMMA 2. \n\nLEMMA 2. Para i = 1, . . . , k, tenemos ui = u+i−1 u+i. PRUEBA. La demostración es por inducción en i. Para i = 1, tenemos u1 = u/(u + 1). Ahora, para i ≥ 2 supongamos que ui−1 = (u + i − 2)/(u + i − 1). Tenemos ui = 1/(2 − ui−1) = (u + i − 1)/(2u + 2i − 2 − u − i + 2) = (u + i − 1)/(u + i). Se sigue que para i = 1, . . . , k − 1 tenemos Ti = Ai u + i − 1 u + i u + i u + i + 1 − Ai u + i u + i + 1 = −Ai 1 u + i + 1 = Ki+1 u + i + 1. Observa que a medida que u−1 varía de 0 a 1, u varía de x a x. Por lo tanto, para maximizar el pago total, debemos elegir u ∈ [x , x ] de manera que maximicemos K2 u + 2 + · · · + Kk u + k = R(u). Por construcción, el único máximo de R(u) en [x, x] es α. Se deduce que en el equilibrio de Nash que maximiza las ganancias de nuestro juego, U0 juega α. Finalmente, cabe destacar que las recompensas en nuestro juego son racionales en lugar de enteras. Sin embargo, es fácil ver que podemos multiplicar todas las ganancias de un jugador por su máximo común denominador sin afectar su estrategia. En el juego resultante, todas las ganancias son enteras. Esto concluye la demostración del Teorema 2.4. APROXIMANDO EL EQUILIBRIO DE NASH ÓPTIMO SOCIAL Hemos visto que el equilibrio de Nash que maximiza el bienestar social puede implicar estrategias que no están en Q. Por lo tanto, en esta sección nos enfocamos en encontrar un equilibrio de Nash que sea casi óptimo desde la perspectiva del bienestar social. Proponemos un algoritmo que, para cualquier > 0, encuentra un equilibrio de Nash cuya recompensa total está dentro de de la óptima. El tiempo de ejecución de este algoritmo es polinómico en 1/ , n y |Pmax| (recuerde que Pmax es el valor absoluto máximo de una entrada de una matriz de pagos). Si bien el resultado negativo de la sección anterior es para juegos gráficos en caminos, nuestro algoritmo se aplica a una gama más amplia de escenarios. Específicamente, se ejecuta en tiempo polinómico en árboles de grado acotado siempre que la política de mejor respuesta de cada vértice, dada su padre, pueda representarse como una unión de un número polinómico de rectángulos. Ten en cuenta que los grafos de camino siempre cumplen esta condición: en [9] mostramos cómo calcular dicha representación, dado un grafo con grado máximo 2. Por consiguiente, para grafos de camino el tiempo de ejecución de nuestro algoritmo está garantizado de ser polinomial. (Nótese que [9] exhibe una familia de juegos gráficos en árboles de grado acotado para los cuales las políticas de mejor respuesta de algunos de los vértices, dados sus padres, tienen tamaño exponencial, cuando se representan como uniones de rectángulos). Debido a restricciones de espacio, en esta versión del artículo presentamos el algoritmo para el caso en el que el grafo subyacente del juego gráfico es un camino. Luego presentamos nuestro resultado para el caso general; la demostración se puede encontrar en la versión completa de este artículo [10]. Supongamos que s es un perfil estratégico para un juego gráfico G. Es decir, s asigna una estrategia mixta a cada vértice de G. Sea EPV (s) el pago esperado del jugador V bajo s y sea EP(s) = Σ V EPV (s). Sea M(G) = max{EP(s) | s es un equilibrio de Nash para G}. TEOREMA 3. Supongamos que G es un juego gráfico en un camino de n vértices. Entonces, para cualquier > 0 existe un algoritmo que construye un equilibrio de Nash s para G que satisface EP(s) ≥ M(G)− . El tiempo de ejecución del algoritmo es O(n4 P3 max/ 3) PRUEBA. Sea {V1, . . . , Vn} el conjunto de todos los jugadores. Comenzamos construyendo las mejores políticas de respuesta para todos los Vi, i = 1, . . . , n − 1. Como se muestra en [9], esto se puede hacer en tiempo O(n3). Sea N > 5n un parámetro que se seleccionará más adelante, establezca δ = 1/N y defina X = {jδ | j = 0, . . . , N}. Decimos que vj es un punto de evento para un jugador Vi si es un punto de evento de Vi para B(Vi, Vi−1) o B(Vi+1, Vi). Para cada jugador Vi, considera un conjunto finito de estrategias Xi dado por Xi = X ∪ {vj | vj es un punto de evento para Vi}. Se ha demostrado en [9] que para cualquier i = 2, . . . , n, la política de mejor respuesta B(Vi, Vi−1) tiene como máximo 2n + 4 puntos de eventos de Vi. Dado que requerimos N > 5n, tenemos |Xi| ≤ 2N; asumimos sin pérdida de generalidad que |Xi| = 2N. Ordena los elementos de Xi en orden creciente como x1 i = 0 < x2 i < · · · < x2N i. Nos referiremos a las estrategias en Xi como estrategias discretas del jugador Vi; un perfil de estrategia en el que cada jugador tiene una estrategia discreta se referirá como un perfil de estrategia discreta. Ahora demostraremos que incluso si restringimos a cada jugador Vi a estrategias de Xi, los jugadores aún pueden lograr un equilibrio de Nash, y además, el mejor equilibrio de Nash (con respecto al bienestar social) tiene un pago total de al menos M(G) - siempre y cuando N sea lo suficientemente grande. Sea s un perfil de estrategia que maximiza el bienestar social. Es decir, sea s = (s1, . . . , sn) donde si es la estrategia mixta del jugador Vi y EP(s) = M(G). Para i = 1, . . . , n, sea ti = max{xj i | xj i ≤ si}. Primero, demostraremos que el perfil estratégico t = (t1, . . . , tn) es un equilibrio de Nash para G. Fijemos cualquier i, 1 < i ≤ n, y sea R = [v1, v2]×[u1, u2] el rectángulo en B(Vi, Vi−1) que contiene (si, si−1). Dado que v1 es un punto de evento Vi de B(Vi, Vi−1), tenemos v1 ≤ ti, por lo que el punto (ti, si−1) está dentro de R. De manera similar, el punto u1 es un punto de evento Vi−1 de B(Vi, Vi−1), por lo que tenemos u1 ≤ ti−1, y por lo tanto el punto (ti, ti−1) está dentro de R. Esto significa que para cualquier i, 1 < i ≤ n, tenemos ti−1 ∈ pbrVi−1 (ti), lo que implica que t = (t1, . . . , tn) es un equilibrio de Nash para G. Ahora, estimemos la pérdida esperada en el bienestar social causada por jugar t en lugar de s. LEMA 3. Para cualquier par de perfiles de estrategia t, s tales que |ti − si| ≤ δ, tenemos |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ para cualquier i = 1, . . . , n. PRUEBA. Sea Pi klm el pago del jugador Vi, cuando juega k, Vi−1 juega l y Vi+1 juega m. Fijemos i = 1, . . . , n y para k, l, m ∈ {0, 1}, definamos tklm = tk i−1(1 − ti−1)1−k tl i(1 − ti)1−l tm i+1(1 − ti+1)1−m sklm = sk i−1(1 − si−1)1−k sl i(1 − si)1−l sm i+1(1 − si+1)1−m. Mostraremos ahora que para cualquier k, l, m ∈ {0, 1} tenemos |tklm − sklm | ≤ 3δ; claramente, esto implica el lema. De hecho, fijar k, l, m ∈ {0, 1}. Establecer x = tk i−1(1 − ti−1)1−k , x = sk i−1(1 − si−1)1−k , y = tl i(1 − ti)1−l , y = sl i(1 − si)1−l , z = tm i+1(1 − ti+1)1−m , z = sm i+1(1 − si+1)1−m. Observa que si k = 0 entonces x − x = (1 − ti−1) − (1 − si−1), y si k = 1 entonces x − x = ti−1 − si−1, por lo tanto |x − x | ≤ δ. Un argumento similar muestra |y − y | ≤ δ, |z − z | ≤ δ. Además, tenemos x, x, y, y, z, z ∈ [0, 1]. Por lo tanto, |tklm − sklm | = |xyz − x y z | = |xyz − x yz + x yz − x y z + x y z − x y z | ≤ |x − x |yz + |y − y |x z + |z − z |x y ≤ 3δ. El Lema 3 implica que Pn i=1 |EPVi (s) − EPVi (t)| ≤ 24nPmaxδ, por lo que al elegir δ < /(24nPmax), o, equivalentemente, estableciendo N > 24nPmax/ , podemos asegurar que el pago esperado total para el perfil estratégico t esté dentro de de lo óptimo. Ahora demostraremos que podemos encontrar el mejor equilibrio de Nash discreto (con respecto al bienestar social) utilizando programación dinámica. Dado que t es un perfil de estrategia discreto, esto significa que el perfil de estrategia encontrado por nuestro algoritmo será al menos tan bueno como t. Defina ml,k i como la máxima ganancia total que V1, . . . , Vi−1 pueden lograr si cada Vj, j ≤ i, elige una estrategia de Xj, para cada j < i la estrategia de Vj es una mejor respuesta potencial a la estrategia de Vj+1, y, además, Vi−1 juega xl i−1, Vi juega xk i. Si no hay forma de elegir las estrategias para V1, . . . , Vi−1 que cumplan con estas condiciones, establecemos ml,k i = −∞. Los valores ml,k i , i = 1, . . . , n; k, l = 1, . . . , N, pueden ser calculados de forma inductiva, de la siguiente manera. Tenemos ml,k 1 = 0 para k, l = 1, . . . , N. Ahora, supongamos que ya hemos calculado ml,k j para todos los j < i; k, l = 1, . . . , N. Para calcular mk,l i , primero verificamos si (xk i , xl i−1) ∈ B(Vi, Vi−1). Si este no es el caso, tenemos ml,k i = −∞. De lo contrario, considera el conjunto Y = Xi−2 ∩ pbrVi−2 (xl i−1), es decir, el conjunto de todas las estrategias discretas de Vi−2 que son potenciales mejores respuestas a xl i−1. La prueba del Teorema 1 en [9] implica que el conjunto pbrVi−2 (xl i−1) no está vacío: el jugador Vi−2 tiene una mejor respuesta potencial a cualquier estrategia de Vi−1, en particular, xl i−1. Por la construcción del conjunto Xi−2, esto implica que Y no está vacío. Para cada xj i−2 ∈ Y, dejemos que pjlk sea la ganancia que Vi−1 recibe cuando Vi−2 juega xj i−2, Vi−1 juega xl i−1, y Vi juega xk i. Claramente, pjlk se puede calcular en tiempo constante. Entonces tenemos ml,k i = max{mj,l i−1 + pjlk | xj i−2 ∈ Y }. Finalmente, supongamos que hemos calculado ml,k n para l, k = 1, . . . , N. Todavía necesitamos tener en cuenta el pago del jugador Vn. Por lo tanto, consideramos todos los pares (xk n, xl n−1) que satisfacen xl n−1 ∈ pbrVn−1 (xk n), y elegimos aquel que maximiza la suma de mk,l n y la ganancia de Vn cuando juega xk n y Vn−1 juega xl n−1. Esto resulta en el pago total máximo que los jugadores pueden lograr en un equilibrio de Nash utilizando estrategias discretas; el perfil de estrategia real que produce este pago puede ser reconstruido utilizando técnicas estándar de programación dinámica. Es fácil ver que cada ml,k se puede calcular en tiempo O(N), es decir, todos ellos se pueden calcular en tiempo O(nN3). Recuerde que debemos seleccionar N ≥ (24nPmax)/ para asegurarnos de que el perfil estratégico que producimos tenga un pago total que esté dentro de lo óptimo. Concluimos que podemos calcular una -aproximación al mejor equilibrio de Nash en tiempo O(n4 P3 max/ 3 ). Esto completa la demostración del Teorema 3. Para enunciar nuestro resultado para el caso general (es decir, cuando el grafo subyacente es un árbol de grado acotado en lugar de un camino), necesitamos notación adicional. Si G tiene n jugadores, sea q(n) una cota superior en el número de puntos de evento en la representación de cualquier política de mejor respuesta. Es decir, asumimos que para cualquier vértice U con padre V, B(V, U) tiene como máximo q(n) puntos de evento. Estaremos interesados en la situación en la que q(n) sea un polinomio en n. TEOREMA 4. Sea G un juego gráfico de n jugadores en un árbol en el que cada nodo tiene a lo sumo Δ hijos. Supongamos que se nos da un conjunto de políticas de mejor respuesta para G en el que cada política de mejor respuesta B(V, U) está representada por un conjunto de rectángulos con un máximo de q(n) puntos de evento. Para cualquier > 0, existe un algoritmo que construye un equilibrio de Nash s para G que satisface EP(s) ≥ M(G) − . El tiempo de ejecución del algoritmo es polinómico en n, Pmax y −1 siempre que el árbol tenga grado acotado (es decir, Δ = O(1)) y q(n) sea un polinomio en n. En particular, si N = max((Δ + 1)q(n) + 1, n2Δ+2 (Δ + 2)Pmax −1 ) y Δ > 1 entonces el tiempo de ejecución es O(nΔ(2N)Δ. Para la demostración de este teorema, ver [10]. 4.1 Un algoritmo de tiempo polinómico para aproximación multiplicativa El tiempo de ejecución de nuestro algoritmo es seudopolinómico en lugar de polinómico, porque incluye un factor que es polinómico en Pmax, la entrada máxima (en valor absoluto) en cualquier matriz de pagos. Si estamos interesados en una aproximación multiplicativa en lugar de una aditiva, esto se puede mejorar a polinomial. Primero, hay que tener en cuenta que no podemos esperar una aproximación multiplicativa para todas las entradas. Es decir, no podemos esperar tener un algoritmo que calcule un equilibrio de Nash con una ganancia total de al menos (1 − )M(G). Si tuviéramos dicho algoritmo, entonces para juegos gráficos G con M(G) = 0, se requeriría que el algoritmo produjera la solución óptima. Para demostrar que esto es inviable, observe que podemos usar las técnicas de la Sección 3.2 para construir dos juegos gráficos de coeficientes enteros en caminos de longitud O(n) de tal manera que para algún X ∈ R, el pago total máximo en el primer juego sea X, el pago total máximo en el segundo juego sea −X, y para ambos juegos, los perfiles estratégicos que logran los pagos totales máximos involucran números algebraicos de grado n. Al combinar los dos juegos de modo que el primer vértice del segundo juego se conecte con el último vértice del primer juego, pero los pagos de todos los jugadores no cambien, obtenemos un juego gráfico en el que el mejor equilibrio de Nash tiene un pago total de 0, sin embargo, las estrategias que conducen a este pago tienen una alta complejidad algebraica. Sin embargo, podemos lograr una aproximación multiplicativa cuando todas las entradas de las matrices de pago son positivas y la relación entre cualquier par de entradas está acotada polinómicamente. Recuerde que asumimos que todos los pagos son enteros, y sea Pmin > 0 la entrada más pequeña de cualquier matriz de pagos. En este caso, para cualquier perfil estratégico, la ganancia para el jugador i es al menos Pmin, por lo que la ganancia total en el equilibrio de Nash que maximiza el bienestar social satisface M(G) ≥ nPmin. Además, el Lema 3 implica que al elegir δ < /(24Pmax/Pmin), podemos asegurar que el equilibrio de Nash t producido por nuestro algoritmo cumple nX i=1 EPVi (s) − nX i=1 EPVi (t) ≤ 24Pmaxδn ≤ nPmin ≤ M(G), es decir, para este valor de δ tenemos Pn i=1 EPVi (t) ≥ (1 − )M(G). Recuerde que el tiempo de ejecución de nuestro algoritmo es O(nN3), donde N debe ser seleccionado para satisfacer N > 5n, N = 1/δ. Se deduce que si Pmin > 0, Pmax/Pmin = poli(n), podemos elegir N de manera que nuestro algoritmo proporcione una garantía de aproximación multiplicativa y se ejecute en tiempo polinómico en n y 1/ . 5. EQUILIBRIOS DE NASH DE PAGO ACOTADO Otra forma natural de definir qué es un buen equilibrio de Nash es exigir que el pago esperado de cada jugador supere cierto umbral. Estos umbrales no tienen que ser iguales para todos los jugadores. En este caso, además de las matrices de pagos de los n jugadores, se nos dan n números T1, . . . , Tn, y nuestro objetivo es encontrar un equilibrio de Nash en el que el pago del jugador i sea al menos Ti, o informar que no existe tal equilibrio de Nash. Resulta que podemos diseñar un FPTAS para este problema utilizando las mismas técnicas que en la sección anterior. TEOREMA 5. Dado un juego gráfico G en un camino de n vértices y n números racionales T1, . . . , Tn, supongamos que existe un perfil estratégico s tal que s es un equilibrio de Nash para G y EPVi (s) ≥ Ti para i = 1, . . . , n. Entonces para cualquier > 0 podemos encontrar en tiempo O(max{nP3 max/ 3 , n4 / 3 }) un perfil estratégico s tal que s es un equilibrio de Nash para G y EPVi (s) ≥ Ti − para i = 1, . . . , n. PRUEBA. La prueba es similar a la del Teorema 3. Primero, construimos las políticas de mejor respuesta para todos los jugadores, elegimos N > 5n, y construimos los conjuntos Xi, i = 1, . . . , n, como se describe en la demostración del Teorema 3. Consideremos un perfil estratégico s tal que s sea un equilibrio de Nash para G y EPVi (s) ≥ Ti para i = 1, . . . , n. Construimos un perfil estratégico ti = max{xj i | xj i ≤ si} y usamos el mismo argumento que en la demostración del Teorema 3 para mostrar que t es un equilibrio de Nash para G. Según el Lema 3, tenemos |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ, por lo que eligiendo δ < /(24Pmax), o, equivalentemente, N > max{5n, 24Pmax/ }, podemos asegurar que EPVi (t) ≥ Ti − para i = 1, . . . , n. Ahora, utilizaremos la programación dinámica para encontrar un equilibrio de Nash discreto que cumpla con EPVi (t) ≥ Ti − para i = 1, . . . , n. Dado que t es un perfil estratégico discreto, nuestro algoritmo tendrá éxito siempre que haya un perfil estratégico s con EPVi (s) ≥ Ti− para i = 1, . . . , n. Sea zl,k i = 1 si hay un perfil estratégico discreto tal que para cualquier j < i la estrategia del jugador Vj es una mejor respuesta potencial a la estrategia de Vj+1, el pago esperado de Vj es al menos Tj − , y, además, Vi−1 juega xl i−1, Vi juega xk i. De lo contrario, deja que zl,k i = 0. Podemos calcular zl,k i, i = 1, . . . , n; k, l = 1, . . . , N de forma inductiva, de la siguiente manera. Tenemos zl,k 1 = 1 para k, l = 1, . . . , N. Ahora, supongamos que ya hemos calculado zl,k j para todos los j < i; k, l = 1, . . . , N. Para calcular zk,l i , primero verificamos si (xk i , xl i−1) ∈ B(Vi, Vi−1). Si este 168 no es el caso, claramente, zk,l i = 0. De lo contrario, considera el conjunto Y = Xi−2 ∩ pbrVi−2 (xl i−1), es decir, el conjunto de todas las estrategias discretas de Vi−2 que son potenciales mejores respuestas a xl i−1. Se ha demostrado en la prueba del Teorema 3 que Y = ∅. Para cada xj i−2 ∈ Y, dejemos que pjlk sea la ganancia que Vi−1 recibe cuando Vi−2 juega xj i−2, Vi−1 juega xl i−1, y Vi juega xk i. Claramente, pjlk se puede calcular en tiempo constante. Si existe un xj i−2 ∈ Y tal que zj,l i−1 = 1 y pjlk ≥ Ti−2 − , establece zl,k i = 1. De lo contrario, establezca zl,k i = 0. Habiendo calculado zl,k n , l, k = 1, . . . , N, verificamos si zl,k n = 1 para algún par (l, k). Si existe tal par de índices, instruimos a Vn a jugar xk n y utilizamos técnicas de programación dinámica (o, de manera equivalente, el paso descendente del algoritmo de [13]) para encontrar un equilibrio de Nash s que satisfaga EPVi (s ) ≥ Ti − para i = 1, . . . , n (recordemos que Vn es un jugador ficticio, es decir, asumimos Tn = 0, EPn(s ) = 0 para cualquier elección de s ). Si zl,k n = 0 para todo l, k = 1, . . . , N, no hay un equilibrio de Nash discreto s que satisfaga EPVi (s) ≥ Ti − para i = 1, . . . , n y, por lo tanto, no hay un equilibrio de Nash s (no necesariamente discreto) tal que EPVi (s) ≥ Ti para i = 1, . . . , n. El análisis del tiempo de ejecución es similar al de la Teorema 3; concluimos que el tiempo de ejecución de nuestro algoritmo es O(nN3) = O(max{nP3 max/3, n4/3}). OBSERVACIÓN 1. El Teorema 5 se puede extender a árboles de grado acotado de la misma manera que el Teorema 4. 5.1 Cálculo Exacto Otro enfoque para encontrar equilibrios de Nash con pagos acotados se basa en calcular de forma inductiva los subconjuntos de las políticas de mejor respuesta de todos los jugadores para excluir los puntos que no proporcionan pagos suficientes a algunos de los jugadores. Formalmente, decimos que una estrategia v del jugador V es una mejor respuesta potencial a una estrategia w de su padre W con respecto a un vector de umbral T = (T1, . . . , Tn), (denotado por v ∈ pbrV (w, T)) si hay un equilibrio en la instancia G(V,W), W = w en el que V juega la estrategia mixta v y la ganancia para cualquier jugador Vi aguas abajo de V (incluyendo a V) es al menos Ti. La mejor política de respuesta para V con respecto a un vector umbral T se define como B(W, V, T) = {(w, v) | v ∈ pbrV (w, T), w ∈ [0, 1]}. Es fácil ver que si alguno de los conjuntos B(Vj, Vj−1, T), j = 1, . . . , n, está vacío, significa que es imposible proporcionar a todos los jugadores los pagos esperados prescritos por T. De lo contrario, se puede aplicar el paso descendente del algoritmo original de [13] para encontrar un equilibrio de Nash. Dado que asumimos que Vn es un vértice ficticio cuya ganancia es idénticamente 0, el equilibrio de Nash con estas ganancias existe siempre y cuando Tn ≤ 0 y B(Vn, Vn−1, T) no esté vacío. Usando las técnicas desarrolladas en [9], no es difícil demostrar que para cualquier j = 1, . . . , n, el conjunto B(Vj , Vj−1, T) consiste en un número finito de rectángulos, y se puede calcular B(Vj+1, Vj , T) dado B(Vj , Vj−1, T). La ventaja de este enfoque es que nos permite representar todos los equilibrios de Nash que proporcionan los pagos requeridos a los jugadores. Sin embargo, no es probable que sea práctico, ya que resulta que los rectángulos que aparecen en la representación de B(Vj , Vj−1, T) pueden tener coordenadas irracionales. AFIRMACIÓN 6. Existe un juego gráfico G en un camino de 3 vértices UVW y un vector T = (T1, T2, T3) tal que B(V, W, T) no puede ser representado como una unión de un número finito de rectángulos con coordenadas racionales. PRUEBA. Definimos las recompensas para los jugadores en G de la siguiente manera. La ganancia para U es idénticamente 0, es decir, P0 (U) = P1 (U) = 0. Usando la Reclamación 1, seleccionamos los pagos para V de manera que P0 (V) = uw, P1 (V) = P0 (V) + w - .8u - .1, donde u y w son las estrategias (mixtas) de U y W, respectivamente. Se deduce que V es indiferente entre jugar 0 y 1 si y solo si w = f(u) = .8u + .1; observe que para cualquier u ∈ [0, 1] tenemos f(u) ∈ [0, 1]. No es difícil ver que tenemos B(W, V) = [0, .1]×{0} ∪ [.1, .9]×[0, 1] ∪ [.9, 1]×{1}. Los pagos para W no son importantes para nuestra construcción; por ejemplo, establezca P0(W) = P0(W) = 0. Ahora, establezca T = (0, 1/8, 0), es decir, estamos interesados en equilibrios de Nash en los que el pago esperado de V sea al menos 1/8. Supongamos que w ∈ [0, 1]. El jugador V puede jugar una estrategia mixta v cuando W está jugando w siempre que U juegue u = f−1 (w) = 5w/4 − 1/8 (para asegurar que V sea indiferente entre 0 y 1) y P0 (V) = P1 (V) = uw = w(5w/4 − 1/8) ≥ 1/8. La última condición se cumple si w ≤ (1 − √ 41)/20 < 0 o w ≥ (1 + √ 41)/20. Ten en cuenta que tenemos .1 < (1 + √ 41)/20 < .9. Para cualquier otro valor de w, cualquier estrategia de U hace que V prefiera una de las estrategias puras o no le proporciona un pago esperado suficiente. También hay algunos valores de w para los cuales V puede jugar una estrategia pura (0 o 1) como una mejor respuesta potencial a W y garantizarse a sí mismo un pago esperado de al menos 1/8; se puede demostrar que estos valores de w forman un número finito de segmentos en [0, 1]. Concluimos que cualquier representación de B(W, V, T) como una unión de un número finito de rectángulos debe contener un rectángulo de la forma [(1 + √ 41)/20, w] × [v, v] para algún w, v, v ∈ [0, 1]. Por otro lado, se puede demostrar que para cualquier matriz de pagos enteros y vectores de umbral, y para cualquier j = 1, . . . , n − 1, los conjuntos B(Vj+1, Vj, T) no contienen rectángulos de la forma [u , u ]×{v} o {v}×[w , w ], donde v ∈ R\\Q. Esto significa que si B(Vn, Vn−1, T) no está vacío, es decir, hay un equilibrio de Nash con pagos prescritos por T, entonces el paso descendente del algoritmo de [13] siempre puede elegir un perfil estratégico que forme un equilibrio de Nash, proporcione un pago de al menos Ti al jugador Vi y no tenga coordenadas irracionales. Por lo tanto, a diferencia del equilibrio de Nash que maximiza el bienestar social, no es necesario trabajar con números irracionales, y el hecho de que el algoritmo discutido en esta sección deba hacerlo puede considerarse como un argumento en contra de utilizar este enfoque. OTROS CRITERIOS PARA SELECCIONAR UN EQUILIBRIO DE NASH En esta sección, consideramos varios otros criterios que pueden ser útiles para seleccionar un equilibrio de Nash. 6.1 Combinando la maximización del bienestar con límites en los pagos En muchos escenarios de la vida real, queremos maximizar el bienestar social sujeto a ciertas restricciones en los pagos a los jugadores individuales. Por ejemplo, es posible que queramos asegurarnos de que ningún jugador obtenga una ganancia esperada negativa, o que la ganancia esperada para el jugador i sea al menos Pi max − ξ, donde Pi max es la entrada máxima de la matriz de ganancias de i y ξ es un parámetro fijo. Formalmente, dado un juego gráfico G y un vector T1, . . . , Tn, sea S el conjunto de todos los equilibrios de Nash s de G que satisfacen Ti ≤ EPVi (s) para i = 1, . . . , n, y sea ˆs = argmaxs∈S EP(s). Si el conjunto S no está vacío, podemos encontrar un equilibrio de Nash ˆs que esté -cerca de satisfacer los límites de pago y esté dentro de ε de ˆs con respecto al pago total al combinar los algoritmos de la Sección 4 y la Sección 5. Es decir, para un dado > 0, elige δ como en la demostración del Teorema 3, y deja que Xi sea el conjunto de todas las estrategias discretas del jugador Vi (para una definición formal, consulta la demostración del Teorema 3). Combinando las pruebas del Teorema 3 y el Teorema 5, podemos ver que el perfil de estrategia ˆt dado por ˆti = max{xj i | xj i ≤ ˆsi} satisface EPVi (ˆt) ≥ Ti − , |EP(ˆs) − EP(ˆt)| ≤ . Define ˆml,k i como la máxima ganancia total que V1, . . . , Vi−1 pueden lograr si cada Vj, j ≤ i, elige una estrategia de Xj, para cada j < i la estrategia de Vj es una mejor respuesta potencial a la estrategia de Vj+1 y la ganancia para el jugador Vj es al menos Tj − , y, además, Vi−1 juega xl i−1, Vi juega xk i. Si no hay forma de elegir las estrategias para V1, . . . , Vi−1 que cumplan con estas condiciones, establecemos ml,k i = −∞. El ˆml,k se puede calcular mediante programación dinámica de manera similar al ml,k y zl,k en las demostraciones de los Teoremas 3 y 5. Finalmente, como en la demostración del Teorema 3, utilizamos ml,k n para seleccionar el mejor equilibrio de Nash discreto sujeto a las restricciones de pago. Incluso de manera más general, es posible que deseemos maximizar el beneficio total para un subconjunto de jugadores (se supone que son capaces de redistribuir justamente las ganancias entre ellos mismos) mientras garantizamos ciertos beneficios esperados a (un subconjunto de) los otros jugadores. Este problema puede ser abordado de manera similar. 6.2 Un enfoque minimax Una medida más igualitaria de la calidad de un equilibrio de Nash es el pago esperado mínimo para un jugador. La solución óptima con respecto a esta medida es un equilibrio de Nash en el cual la ganancia esperada mínima para un jugador es máxima. Para encontrar una aproximación a dicho equilibrio de Nash, podemos combinar el algoritmo de la Sección 5 con la búsqueda binaria en el espacio de límites inferiores potenciales. Ten en cuenta que la ganancia esperada para cualquier jugador Vi dada una estrategia s siempre cumple con −Pmax ≤ EPVi (s) ≤ Pmax. Para un fijo > 0, comenzamos estableciendo T = −Pmax, T = Pmax, T∗ = (T + T )/2. Luego ejecutamos el algoritmo de la Sección 5 con T1 = · · · = Tn = T∗. Si el algoritmo tiene éxito al encontrar un equilibrio de Nash s que cumple con EPVi (s) ≥ T∗ − para todo i = 1, . . . , n, establecemos T = T∗, T∗ = (T + T)/2; de lo contrario, establecemos T = T∗, T∗ = (T + T)/2 y repetimos el ciclo. Repetimos este proceso hasta que |T − T | ≤ . No es difícil comprobar que para cualquier p ∈ R, si existe un equilibrio de Nash s tal que mini=1,...,n EPVi (s) ≥ p, entonces nuestro algoritmo devuelve un equilibrio de Nash s que cumple mini=1,...,n EPVi (s) ≥ p−2. El tiempo de ejecución de nuestro algoritmo es O(max{nP3 max log −1 / 3 , n4 log −1 / 3 }). 6.3 Igualando los pagos Cuando las matrices de pagos de los jugadores no son muy diferentes, es razonable exigir que los pagos esperados para los jugadores tampoco difieran mucho. Ahora demostraremos que los equilibrios de Nash en esta categoría también pueden aproximarse en tiempo polinómico. De hecho, observe que el algoritmo de la Sección 5 puede ser fácilmente modificado para tratar con límites superiores en las ganancias individuales en lugar de límites inferiores. Además, podemos calcular de manera eficiente una aproximación a un equilibrio de Nash que cumpla tanto con el límite superior como con el límite inferior para cada jugador. Más precisamente, supongamos que se nos da un juego gráfico G, 2n números racionales T1, . . . , Tn, T1, . . . , Tn y > 0. Entonces, si existe un perfil estratégico s tal que s es un equilibrio de Nash para G y Ti ≤ EPVi (s) ≤ Ti para i = 1, . . . , n, podemos encontrar un perfil estratégico s tal que s es un equilibrio de Nash para G y Ti − ≤ EPVi (s) ≤ Ti + para i = 1, . . . , n. El algoritmo modificado también se ejecuta en tiempo O(max{nP3 max/ 3 , [4]n4 / 3 }). Esta observación nos permite aproximar equilibrios de Nash en los que las ganancias esperadas de todos los jugadores difieren en un máximo de ξ para cualquier ξ fijo > 0. Dado un > 0, establecemos T1 = · · · = Tn = −Pmax, T1 = · · · = Tn = −Pmax + ξ + , y ejecutamos la versión modificada del algoritmo de la Sección 5. Si no logra encontrar una solución, incrementamos todos los Ti, Ti por y el bucle. Continuamos hasta que el algoritmo encuentre una solución, o Ti ≥ Pmax. Supongamos que existe un equilibrio de Nash s que satisface |EPVi (s) − EPVj (s)| ≤ ξ para todo i, j = 1, . . . , n. Definamos r = mini=1,...,n EPVi (s); tenemos r ≤ EPVi (s) ≤ r + ξ para todo i = 1, . . . , n. Existe un k ≥ 0 tal que −Pmax + (k − 1) ≤ r ≤ −Pmax + k. Durante el paso k del algoritmo, establecemos T1 = · · · = Tn = −Pmax +(k−1) , es decir, tenemos r− ≤ Ti ≤ r, r + ξ ≤ Ti ≤ r + ξ + . Es decir, el equilibrio de Nash s satisface Ti ≤ r ≤ EPVi (s) ≤ r + ξ ≤ Ti, lo que significa que cuando Ti se establece en −Pmax + (k − 1), nuestro algoritmo garantiza producir un equilibrio de Nash t que satisface r − 2 ≤ Ti − ≤ EPVi (t) ≤ Ti + ≤ r + ξ + 2. Concluimos que siempre que exista un equilibrio de Nash s, nuestro algoritmo produce un equilibrio de Nash t que satisface |EPVi (t) − EPVj (t)| ≤ ξ + 4 para todo i, j = 1, . . . , n. El tiempo de ejecución de este algoritmo es O(max{nP3 max/ 4 , n4 / 4 }). También debemos tener en cuenta que podemos encontrar el valor más pequeño de ξ para el cual existe un equilibrio de Nash combinando este algoritmo con una búsqueda binaria en el espacio ξ = [0, 2Pmax]. Esto identifica una aproximación al equilibrio de Nash más justo, es decir, uno en el que las ganancias esperadas de los jugadores difieren por la menor cantidad posible. Finalmente, cabe destacar que todos los resultados de esta sección pueden extenderse a árboles de grado acotado. 7. CONCLUSIONES Hemos estudiado el problema de la selección de equilibrio en juegos gráficos en árboles de grado acotado. Consideramos varios criterios para seleccionar un equilibrio de Nash, como maximizar el bienestar social, garantizar un límite inferior en la recompensa esperada de cada jugador, etc. Primero, nos enfocamos en la complejidad algebraica de un equilibrio de Nash que maximiza el bienestar social, y demostramos resultados negativos contundentes para ese problema. Es decir, demostramos que incluso para juegos gráficos en caminos, cualquier número algebraico α ∈ [0, 1] puede ser la única estrategia disponible para algún jugador en todas las equilibrios de Nash que maximizan el bienestar social. Esto contrasta fuertemente con el hecho de que los juegos gráficos en árboles siempre poseen un equilibrio de Nash en el que las estrategias de todos los jugadores son números racionales. Luego proporcionamos algoritmos de aproximación para seleccionar equilibrios de Nash con propiedades especiales. Si bien el problema de encontrar equilibrios de Nash aproximados para diversas clases de juegos ha recibido mucha atención en los últimos años, la mayoría de los trabajos existentes tienen como objetivo encontrar equilibrios de Nash que satisfagan (o estén cerca de satisfacer) ciertas propiedades. Nuestro enfoque es diferente en que insistimos en producir un equilibrio de Nash exacto, que está cerca de satisfacer un requisito dado. Como se argumenta en la introducción, hay varias razones para preferir una solución que constituya un equilibrio de Nash exacto. Nuestros algoritmos son esquemas de aproximación de tiempo polinomial completo, es decir, su tiempo de ejecución es polinomial en el inverso del parámetro de aproximación, aunque pueden ser seudopolinomiales con respecto al tamaño de la entrada. Bajo restricciones leves en las entradas, estas pueden ser modificadas para ser verdaderamente polinomiales. Este es el resultado positivo más fuerte que se puede obtener para un problema cuyas soluciones exactas pueden ser difíciles de representar, como es el caso de muchos de los problemas considerados aquí. Mientras demostramos nuestros resultados para juegos en un camino, pueden generalizarse a cualquier árbol para el cual las políticas de mejor respuesta tengan representaciones compactas como uniones de rectángulos. En la versión completa del artículo describimos nuestros algoritmos para el caso general. Un trabajo adicional en esta línea podría incluir extensiones a los tipos de garantías buscadas para los equilibrios de Nash, como garantizar los pagos totales para subconjuntos de jugadores, seleccionar equilibrios en los que algunos jugadores estén recibiendo pagos significativamente más altos que sus pares, etc. Sin embargo, en este momento es quizás más importante investigar si los equilibrios de Nash de los juegos gráficos pueden ser calculados de manera descentralizada, en contraste con los algoritmos que hemos introducido aquí. Es natural preguntarse si nuestros resultados o los de [9] pueden generalizarse a juegos con tres o más acciones. Sin embargo, parece que esto hará el análisis significativamente más difícil. En particular, cabe destacar que se pueden considerar los juegos de pago limitado como un caso especial muy restringido de juegos con tres acciones por jugador. Es decir, dado un juego de dos acciones con límites de pago, considera un juego en el que cada jugador Vi tiene una tercera acción que le garantiza un pago de Ti sin importar lo que hagan los demás. Luego, verificar si existe un equilibrio de Nash en el cual ninguno de los jugadores asigna una probabilidad distinta de cero a su tercera acción es equivalente a comprobar si existe un equilibrio de Nash que cumpla con los límites de pago en el juego original, y la Sección 5.1 muestra que encontrar una solución exacta a este problema requiere nuevas ideas. Alternativamente, puede ser interesante buscar resultados similares en el contexto de equilibrios correlacionados (CE), especialmente dado que el mejor CE puede tener un valor más alto (pago esperado total) que el mejor NE. La proporción entre estos valores se llama el valor de mediación en [1]. Se sabe por [1] que el valor de mediación de juegos de 2 jugadores y 2 acciones con pagos no negativos es a lo sumo 4 3, y presentan un juego de 3 jugadores para el cual es infinito. Además, un ejemplo de 2 jugadores y 3 acciones del [1] también tiene un valor de mediación infinito. 8. REFERENCIAS [1] I. Ashlagi, D. Monderer y M. Tenneholtz, Sobre el Valor de la Correlación, Actas del seminario de Dagstuhl 05011 (2005) [2] R. Aumann, Subjetividad y Correlación en Estrategias Aleatorias, Revista de Economía Matemática 1 pp. 67-96 (1974) [3] B. Blum, C. R. Shelton y D. Koller, Un Método de Continuación para Equilibrios de Nash en Juegos Estructurados, Actas de IJCAI03 [4] X. Chen, X. Deng y S. Teng, Computación de Equilibrios de Nash: Aproximación y Complejidad Suavizada, Actas de FOCS06 [5] X. Chen, X. Deng, Resolviendo la Complejidad del Equilibrio de Nash de 2 Jugadores, Actas de FOCS06 [6] V. Conitzer y T. Sandholm, Resultados de Complejidad sobre Equilibrios de Nash, Actas de IJCAI03 [7] C. Daskalakis, P. W. Goldberg y C. H. Papadimitriou, La Complejidad de Calcular un Equilibrio de Nash, Actas de STOC06 [8] R. S. Datta, Universalidad de los Equilibrios de Nash, Matemáticas de la Investigación Operativa 28:3, 2003 [9] E. Elkind, L. A. Goldberg y P. W. Goldberg, Equilibrios de Nash en Juegos Gráficos en Árboles Revisitados, Actas de ACM EC06 [10] E. Elkind, L. A. Goldberg y P. W. Goldberg, Computando Buenos Equilibrios de Nash en Juegos Gráficos, http://arxiv.org/abs/cs.GT/0703133 [11] I. Gilboa y E. Zemel, Equilibrios de Nash y Correlacionados: Algunas Consideraciones de Complejidad, Juegos y Comportamiento Económico, 1 pp. 80-93 (1989) [12] P. W. Goldberg y C. H. Papadimitriou, Reducibilidad entre Problemas de Equilibrio, Actas de STOC06 [13] M. Kearns, M. Littman y S. Singh, Modelos Gráficos para la Teoría de Juegos, Actas de UAI01 [14] M. Littman, M. Kearns y S. Singh, Un Algoritmo Exacto Eficiente para Juegos Gráficos Singularmente Conectados, Actas de NIPS01 [15] R. Lipton y E. Markakis, Equilibrios de Nash a través de Ecuaciones Polinomiales, Actas de LATIN04 [16] L. Ortiz y M. Kearns, Propagación de Nash para Juegos Gráficos con Lazos, Actas de NIPS03 [17] C.H. Papadimitriou, Computando equilibrios correlacionados en juegos de varios jugadores, Actas de STOC05 [18] C.H. Papadimitriou y T. Roughgarden, Computando equilibrios en juegos de múltiples jugadores, Actas de SODA05 [19] D. Vickrey y D. Koller, Algoritmos multiagente para resolver juegos gráficos, Actas de AAAI02 171 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "overall payoff": {
            "translated_key": "pago total",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Computing Good Nash Equilibria in Graphical Games ∗ Edith Elkind Hebrew University of Jerusalem, Israel, and University of Southampton, Southampton, SO17 1BJ, U.K. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K. ABSTRACT This paper addresses the problem of fair equilibrium selection in graphical games.",
                "Our approach is based on the data structure called the best response policy, which was proposed by Kearns et al. [13] as a way to represent all Nash equilibria of a graphical game.",
                "In [9], it was shown that the best response policy has polynomial size as long as the underlying graph is a path.",
                "In this paper, we show that if the underlying graph is a bounded-degree tree and the best response policy has polynomial size then there is an efficient algorithm which constructs a Nash equilibrium that guarantees certain payoffs to all participants.",
                "Another attractive solution concept is a Nash equilibrium that maximizes the social welfare.",
                "We show that, while exactly computing the latter is infeasible (we prove that solving this problem may involve algebraic numbers of an arbitrarily high degree), there exists an FPTAS for finding such an equilibrium as long as the best response policy has polynomial size.",
                "These two algorithms can be combined to produce Nash equilibria that satisfy various fairness criteria.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a large community of agents, an agents behavior is not likely to have a direct effect on most other agents: rather, it is just the agents who are close enough to him that will be affected.",
                "However, as these agents respond by adapting their behavior, more agents will feel the consequences and eventually the choices made by a single agent will propagate throughout the entire community.",
                "This is the intuition behind graphical games, which were introduced by Kearns, Littman and Singh in [13] as a compact representation scheme for games with many players.",
                "In an n-player graphical game, each player is associated with a vertex of an underlying graph G, and the payoffs of each player depend on his action as well as on the actions of his neighbors in the graph.",
                "If the maximum degree of G is Δ, and each player has two actions available to him, then the game can be represented using n2Δ+1 numbers.",
                "In contrast, we need n2n numbers to represent a general n-player 2-action game, which is only practical for small values of n. For graphical games with constant Δ, the size of the game is linear in n. One of the most natural problems for a graphical game is that of finding a Nash equilibrium, the existence of which follows from Nashs celebrated theorem (as graphical games are just a special case of n-player games).",
                "The first attempt to tackle this problem was made in [13], where the authors consider graphical games with two actions per player in which the underlying graph is a boundeddegree tree.",
                "They propose a generic algorithm for finding Nash equilibria that can be specialized in two ways: an exponential-time algorithm for finding an (exact) Nash equilibrium, and a fully polynomial time approximation scheme (FPTAS) for finding an approximation to a Nash equilibrium.",
                "For any > 0 this algorithm outputs an -Nash equilibrium, which is a strategy profile in which no player can improve his payoff by more than by unilaterally changing his strategy.",
                "While -Nash equilibria are often easier to compute than exact Nash equilibria, this solution concept has several drawbacks.",
                "First, the players may be sensitive to a small loss in payoffs, so the strategy profile that is an -Nash equilibrium will not be stable.",
                "This will be the case even if there is only a small subset of players who are extremely price-sensitive, and for a large population of players it may be difficult to choose a value of that will satisfy everyone.",
                "Second, the strategy profiles that are close to being Nash equilibria may be much better with respect to the properties under consideration than exact Nash equilibria.",
                "Therefore, the (approximation to the) value of the best solution that corresponds to an -Nash equilibrium may not be indicative of what can be achieved under an exact Nash equilibrium.",
                "This is especially important if the purpose of the approximate solution is to provide a good benchmark for a system of selfish agents, as the benchmark implied by an -Nash equilibrium may be unrealistic.",
                "For these reasons, in this paper we focus on the problem of computing exact Nash equilibria.",
                "Building on ideas of [14], Elkind et al. [9] showed how to find an (exact) Nash equilibrium in polynomial time when the underlying 162 graph has degree 2 (that is, when the graph is a collection of paths and cycles).",
                "By contrast, finding a Nash equilibrium in a general degree-bounded graph appears to be computationally intractable: it has been shown (see [5, 12, 7]) to be complete for the complexity class PPAD. [9] extends this hardness result to the case in which the underlying graph has bounded pathwidth.",
                "A graphical game may not have a unique Nash equilibrium, indeed it may have exponentially many.",
                "Moreover, some Nash equilibria are more desirable than others.",
                "Rather than having an algorithm which merely finds some Nash equilibrium, we would like to have algorithms for finding Nash equilibria with various sociallydesirable properties, such as maximizing <br>overall payoff</br> or distributing profit fairly.",
                "A useful property of the data structure of [13] is that it simultaneously represents the set of all Nash equilibria of the underlying game.",
                "If this representation has polynomial size (as is the case for paths, as shown in [9]), one may hope to extract from it a Nash equilibrium with the desired properties.",
                "In fact, in [13] the authors mention that this is indeed possible if one is interested in finding an (approximate) -Nash equilibrium.",
                "The goal of this paper is to extend this to exact Nash equilibria. 1.1 Our Results In this paper, we study n-player 2-action graphical games on bounded-degree trees for which the data structure of [13] has size poly(n).",
                "We focus on the problem of finding exact Nash equilibria with certain socially-desirable properties.",
                "In particular, we show how to find a Nash equilibrium that (nearly) maximizes the social welfare, i.e., the sum of the players payoffs, and we show how to find a Nash equilibrium that (nearly) satisfies prescribed payoff bounds for all players.",
                "Graphical games on bounded-degree trees have a simple algebraic structure.",
                "One attractive feature, which follows from [13], is that every such game has a Nash equilibrium in which the strategy of every player is a rational number.",
                "Section 3 studies the algebraic structure of those Nash equilibria that maximize social welfare.",
                "We show (Theorems 1 and 2) that, surprisingly, the set of Nash equilibria that maximize social welfare is more complex.",
                "In fact, for any algebraic number α ∈ [0, 1] with degree at most n, we exhibit a graphical game on a path of length O(n) such that, in the unique social welfare-maximizing Nash equilibrium of this game, one of the players plays the mixed strategy α.1 This result shows that it may be difficult to represent an optimal Nash equilibrium.",
                "It seems to be a novel feature of the setting we consider here, that an optimal Nash equilibrium is hard to represent, in a situation where it is easy to find and represent a Nash equilibrium.",
                "As the social welfare-maximizing Nash equilibrium may be hard to represent efficiently, we have to settle for an approximation.",
                "However, the crucial difference between our approach and that of previous papers [13, 16, 19] is that we require our algorithm to output an exact Nash equilibrium, though not necessarily the optimal one with respect to our criteria.",
                "In Section 4, we describe an algorithm that satisfies this requirement.",
                "Namely, we propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within of optimal.",
                "It runs in polynomial time (Theorem 3,4) for any graphical game on a bounded-degree tree for which the data structure proposed by [13] (the so-called best response policy, defined below) is of size poly(n) (note that, as shown in [9], this is always the case when the underlying graph is a path).",
                "More pre1 A related result in a different context was obtained by Datta [8], who shows that n-player 2-action games are universal in the sense that any real algebraic variety can be represented as the set of totally mixed Nash equilibria of such games. cisely, the running time of our algorithm is polynomial in n, Pmax, and 1/ , where Pmax is the maximum absolute value of an entry of a payoff matrix, i.e., it is a pseudopolynomial algorithm, though it is fully polynomial with respect to .",
                "We show (Section 4.1) that under some restrictions on the payoff matrices, the algorithm can be transformed into a (truly) polynomial-time algorithm that outputs a Nash equilibrium whose total payoff is within a 1 − factor from the optimal.",
                "In Section 5, we consider the problem of finding a Nash equilibrium in which the expected payoff of each player Vi exceeds a prescribed threshold Ti.",
                "Using the idea from Section 4 we give (Theorem 5) a fully polynomial time approximation scheme for this problem.",
                "The running time of the algorithm is bounded by a polynomial in n, Pmax, and .",
                "If the instance has a Nash equilibrium satisfying the prescribed thresholds then the algorithm constructs a Nash equilibrium in which the expected payoff of each player Vi is at least Ti − .",
                "In Section 6, we introduce other natural criteria for selecting a good Nash equilibrium and we show that the algorithms described in the two previous sections can be used as building blocks in finding Nash equilibria that satisfy these criteria.",
                "In particular, in Section 6.1 we show how to find a Nash equilibrium that approximates the maximum social welfare, while guaranteeing that each individual payoff is close to a prescribed threshold.",
                "In Section 6.2 we show how to find a Nash equilibrium that (nearly) maximizes the minimum individual payoff.",
                "Finally, in Section 6.3 we show how to find a Nash equilibrium in which the individual payoffs of the players are close to each other. 1.2 Related Work Our approximation scheme (Theorem 3 and Theorem 4) shows a contrast between the games that we study and two-player n-action games, for which the corresponding problems are usually intractable.",
                "For two-player n-action games, the problem of finding Nash equilibria with special properties is typically NP-hard.",
                "In particular, this is the case for Nash equilibria that maximize the social welfare [11, 6].",
                "Moreover, it is likely to be intractable even to approximate such equilibria.",
                "In particular, Chen, Deng and Teng [4] show that there exists some , inverse polynomial in n, for which computing an -Nash equilibrium in 2-player games with n actions per player is PPAD-complete.",
                "Lipton and Markakis [15] study the algebraic properties of Nash equilibria, and point out that standard quantifier elimination algorithms can be used to solve them.",
                "Note that these algorithms are not polynomial-time in general.",
                "The games we study in this paper have polynomial-time computable Nash equilibria in which all mixed strategies are rational numbers, but an optimal Nash equilibrium may necessarily include mixed strategies with high algebraic degree.",
                "A correlated equilibrium (CE) (introduced by Aumann [2]) is a distribution over vectors of players actions with the property that if any player is told his own action (the value of his own component) from a vector generated by that distribution, then he cannot increase his expected payoff by changing his action.",
                "Any Nash equilibrium is a CE but the converse does not hold in general.",
                "In contrast with Nash equilibria, correlated equilibria can be found for low-degree graphical games (as well as other classes of conciselyrepresented multiplayer games) in polynomial time [17].",
                "But, for graphical games it is NP-hard to find a correlated equilibrium that maximizes total payoff [18].",
                "However, the NP-hardness results apply to more general games than the one we consider here, in particular the graphs are not trees.",
                "From [2] it is also known that there exist 2-player, 2-action games for which the expected total payoff 163 of the best correlated equilibrium is higher than the best Nash equilibrium, and we discuss this issue further in Section 7. 2.",
                "PRELIMINARIES AND NOTATION We consider graphical games in which the underlying graph G is an n-vertex tree, in which each vertex has at most Δ children.",
                "Each vertex has two actions, which are denoted by 0 and 1.",
                "A mixed strategy of a player V is represented as a single number v ∈ [0, 1], which denotes the probability that V selects action 1.",
                "For the purposes of the algorithm, the tree is rooted arbitrarily.",
                "For convenience, we assume without loss of generality that the root has a single child, and that its payoff is independent of the action chosen by the child.",
                "This can be achieved by first choosing an arbitrary root of the tree, and then adding a dummy parent of this root, giving the new parent a constant payoff function, e.g., 0.",
                "Given an edge (V, W ) of the tree G, and a mixed strategy w for W , let G(V,W ),W =w be the instance obtained from G by (1) deleting all nodes Z which are separated from V by W (i.e., all nodes Z such that the path from Z to V passes through W ), and (2) restricting the instance so that W is required to play mixed strategy w. Definition 1.",
                "Suppose that (V, W ) is an edge of the tree, that v is a mixed strategy for V and that w is a mixed strategy for W .",
                "We say that v is a potential best response to w (denoted by v ∈ pbrV (w)) if there is an equilibrium in the instance G(V,W ),W =w in which V has mixed strategy v. We define the best response policy for V , given W , as B(W, V ) = {(w, v) | v ∈ pbrV (w), w ∈ [0, 1]}.",
                "The upstream pass of the generic algorithm of [13] considers every node V (other than the root) and computes the best response policy for V given its parent.",
                "With the above assumptions about the root, the downstream pass is straightforward.",
                "The root selects a mixed strategy w for the root W and a mixed strategy v ∈ B(W, V ) for each child V of W .",
                "It instructs each child V to play v. The remainder of the downward pass is recursive.",
                "When a node V is instructed by its parent to adopt mixed strategy v, it does the following for each child U - It finds a pair (v, u) ∈ B(V, U) (with the same v value that it was given by its parent) and instructs U to play u.",
                "The best response policy for a vertex U given its parent V can be represented as a union of rectangles, where a rectangle is defined by a pair of closed intervals (IV , IU ) and consists of all points in IV × IU ; it may be the case that one or both of the intervals IV and IU consists of a single point.",
                "In order to perform computations on B(V, U), and to bound the number of rectangles, [9] used the notion of an event point, which is defined as follows.",
                "For any set A ⊆ [0, 1]2 that is represented as a union of a finite number of rectangles, we say that a point u ∈ [0, 1] on the U-axis is a Uevent point of A if u = 0 or u = 1 or the representation of A contains a rectangle of the form IV × IU and u is an endpoint of IU ; V -event points are defined similarly.",
                "For many games considered in this paper, the underlying graph is an n-vertex path, i.e., a graph G = (V, E) with V = {V1, . . . , Vn} and E = {(V1, V2), . . . , (Vn−1, Vn)}.",
                "In [9], it was shown that for such games, the best response policy has only polynomially-many rectangles.",
                "The proof that the number of rectangles in B(Vj+1, Vj) is polynomial proceeds by first showing that the number of event points in B(Vj+1, Vj ) cannot exceed the number of event points in B(Vj, Vj−1) by more than 2, and using this fact to bound the number of rectangles in B(Vj+1, Vj ).",
                "Let P0 (V ) and P1 (V ) be the expected payoffs to V when it plays 0 and 1, respectively.",
                "Both P0 (V ) and P1 (V ) are multilinear functions of the strategies of V s neighbors.",
                "In what follows, we will frequently use the following simple observation.",
                "CLAIM 1.",
                "For a vertex V with a single child U and parent W , given any A, B, C, D ∈ Q, A , B , C , D ∈ Q, one can select the payoffs to V so that P0 (V ) = Auw + Bu + Cw + D, P1 (V ) = A uw + B u + C w + D .",
                "Moreover, if all A, B, C, D, A , B , C , D are integer, the payoffs to V are integer as well.",
                "PROOF.",
                "We will give the proof for P0 (V ); the proof for P1 (V ) is similar.",
                "For i, j = 0, 1, let Pij be the payoff to V when U plays i, V plays 0 and W plays j.",
                "We have P0 (V ) = P00(1 − u)(1 − w) + P10u(1 − w) + P01(1 − u)w + P11uw.",
                "We have to select the values of Pij so that P00 − P10 − P01 + P11 = A, −P00 + P10 = B, −P00 + P01 = C, P00 = D. It is easy to see that the unique solution is given by P00 = D, P01 = C + D, P10 = B + D, P11 = A + B + C + D. The input to all algorithms considered in this paper includes the payoff matrices for each player.",
                "We assume that all elements of these matrices are integer.",
                "Let Pmax be the greatest absolute value of any element of any payoff matrix.",
                "Then the input consists of at most n2Δ+1 numbers, each of which can be represented using log Pmax bits. 3.",
                "NASH EQUILIBRIA THAT MAXIMIZE THE SOCIAL WELFARE: SOLUTIONS IN R \\ Q From the point of view of social welfare, the best Nash equilibrium is the one that maximizes the sum of the players expected payoffs.",
                "Unfortunately, it turns out that computing such a strategy profile exactly is not possible: in this section, we show that even if all players payoffs are integers, the strategy profile that maximizes the total payoff may have irrational coordinates; moreover, it may involve algebraic numbers of an arbitrary degree. 3.1 Warm-up: quadratic irrationalities We start by providing an example of a graphical game on a path of length 3 with integer payoffs such that in the Nash equilibrium that maximizes the total payoff, one of the players has a strategy in R \\ Q.",
                "In the next subsection, we will extend this example to algebraic numbers of arbitrary degree n; to do so, we have to consider paths of length O(n).",
                "THEOREM 1.",
                "There exists an integer-payoff graphical game G on a 3-vertex path UV W such that, in any Nash equilibrium of G that maximizes social welfare, the strategy, u, of the player U and the total payoff, p, satisfy u, p ∈ R \\ Q.",
                "PROOF.",
                "The payoffs to the players in G are specified as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = −uw + 3w and P1 (V ) = P0 (V ) + w(u + 2) − (u + 1), where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = u+1 u+2 .",
                "Observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "The payoff to W is 0 if it selects the same action as V and 1 otherwise.",
                "CLAIM 2.",
                "All Nash equilibria of the game G are of the form (u, 1/2, f(u)).",
                "That is, in any Nash equilibrium, V plays v = 1/2 and W plays w = f(u).",
                "Moreover, for any value of u, the vector of strategies (u, 1/2, f(u)) constitutes a Nash equilibrium.",
                "PROOF.",
                "It is easy to check that for any u ∈ [0, 1], the vector (u, 1/2, f(u)) is a Nash equilibrium.",
                "Indeed, U is content to play 164 any mixed strategy u no matter what V and W do.",
                "Furthermore, V is indifferent between 0 and 1 as long as w = f(u), so it can play 1/2.",
                "Finally, if V plays 0 and 1 with equal probability, W is indifferent between 0 and 1, so it can play f(u).",
                "Conversely, suppose that v > 1/2.",
                "Then W strictly prefers to play 0, i.e., w = 0.",
                "Then for V we have P1 (V ) = P0 (V ) − (u + 1), i.e., P1 (V ) < P0 (V ), which implies v = 0, a contradiction.",
                "Similarly, if v < 1/2, player W prefers to play 1, so we have w = 1.",
                "Hence, P1 (V ) = P0 (V ) + (u + 2) − (u + 1), i.e., P1 (V ) > P0 (V ), which implies v = 1, a contradiction.",
                "Finally, if v = 1/2, but w = f(u), player V is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "This completes the proof of Claim 2.",
                "By Claim 2, the total payoff in any Nash equilibrium of this game is a function of u.",
                "More specifically, the payoff to U is 0, the payoff to V is −uf(u) + 3f(u), and the payoff to W is 1/2.",
                "Therefore, the Nash equilibrium with the maximum total payoff corresponds to the value of u that maximizes g(u) = −u (u + 1) u + 2 + 3 u + 1 u + 2 = − (u − 3)(u + 1) u + 2 .",
                "To find extrema of g(u), we compute h(u) = − d du g(u).",
                "We have h(u) = (2u − 2)(u + 2) − (u − 3)(u + 1) (u + 2)2 = u2 + 4u − 1 (u + 2)2 .",
                "Hence, h(u) = 0 if and only if u ∈ {−2 + √ 5, −2 − √ 5}.",
                "Note that −2 + √ 5 ∈ [0, 1].",
                "The function g(u) changes sign at −2, −1, and 3.",
                "We have g(u) < 0 for g > 3, g(u) > 0 for u < −2, so the extremum of g(u) that lies between 1 and 3, i.e., u = −2 + √ 5, is a local maximum.",
                "We conclude that the social welfare-maximizing Nash equilibrium for this game is given by the vector of strategies (−2+√ 5, 1/2, (5 − √ 5)/5).",
                "The respective total payoff is 0 − ( √ 5 − 5)( √ 5 − 1) √ 5 + 1 2 = 13/2 − 2 √ 5.",
                "This concludes the proof of Theorem 1. 3.2 Strategies of arbitrary degree We have shown that in the social welfare-maximizing Nash equilibrium, some players strategies can be quadratic irrationalities, and so can the total payoff.",
                "In this subsection, we will extend this result to show that we can construct an integer-payoff graphical game on a path whose social welfare-maximizing Nash equilibrium involves arbitrary algebraic numbers in [0, 1].",
                "THEOREM 2.",
                "For any degree-n algebraic number α ∈ [0, 1], there exists an integer payoff graphical game on a path of length O(n) such that, in all social welfare-maximizing Nash equilibria of this game, one of the players plays α.",
                "PROOF.",
                "Our proof consists of two steps.",
                "First, we construct a rational expression R(x) and a segment [x , x ] such that x , x ∈ Q and α is the only maximum of R(x) on [x , x ].",
                "Second, we construct a graphical game whose Nash equilibria can be parameterized by u ∈ [x , x ], so that at the equilibrium that corresponds to u the total payoff is R(u) and, moreover, some players strategy is u.",
                "It follows that to achieve the payoff-maximizing Nash equilibrium, this player has to play α.",
                "The details follow.",
                "LEMMA 1.",
                "Given an algebraic number α ∈ [0, 1], deg(α) = n, there exist K2, . . . , K2n+2 ∈ Q and x , x ∈ (0, 1) ∩ Q such that α is the only maximum of R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 on [x , x ].",
                "PROOF.",
                "Let P(x) be the minimal polynomial of α, i.e., a polynomial of degree n with rational coefficients whose leading coefficient is 1 such that P(α) = 0.",
                "Let A = {α1, . . . , αn} be the set of all roots of P(x).",
                "Consider the polynomial Q1(x) = −P2 (x).",
                "It has the same roots as P(x), and moreover, for any x ∈ A we have Q1(x) < 0.",
                "Hence, A is the set of all maxima of Q1(x).",
                "Now, set R(x) = Q1(x) (x+2)...(x+2n+1)(x+2n+2) .",
                "Observe that R(x) ≤ 0 for all x ∈ [0, 1] and R(x) = 0 if and only if Q1(x) = 0.",
                "Hence, the set A is also the set of all maxima of R(x) on [0, 1].",
                "Let d = min{|αi − α| | αi ∈ A, αi = α}, and set α = max{α − d/2, 0}, α = min{α + d/2, 1}.",
                "Clearly, α is the only zero (and hence, the only maximum) of R(x) on [α , α ].",
                "Let x and x be some rational numbers in (α , α) and (α, α ), respectively; note that by excluding the endpoints of the intervals we ensure that x , x = 0, 1.",
                "As [x , x ] ⊂ [α , α ], we have that α is the only maximum of R(x) on [x , x ].",
                "As R(x) is a proper rational expression and all roots of its denominator are simple, by partial fraction decomposition theorem, R(x) can be represented as R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 , where K2, . . . , K2n+2 are rational numbers.",
                "Consider a graphical game on the path U−1V−1U0V0U1V1 . . .",
                "Uk−1Vk−1Uk, where k = 2n + 2.",
                "Intuitively, we want each triple (Ui−1, Vi−1, Ui) to behave similarly to the players U, V , and W from the game described in the previous subsection.",
                "More precisely, we define the payoffs to the players in the following way. • The payoff to U−1 is 0 no matter what everyone else does. • The expected payoff to V−1 is 0 if it plays 0 and u0 − (x − x )u−1 −x if it plays 1, where u0 and u−1 are the strategies of U0 and U−1, respectively. • The expected payoff to V0 is 0 if it plays 0 and u1(u0 + 1)− u0 if it plays 1, where u0 and u1 are the strategies of U0 and U1, respectively. • For each i = 1, . . . , k − 1, the expected payoff to Vi when it plays 0 is P0 (Vi) = Aiuiui+1 − Aiui+1, and the expected payoff to Vi when it plays 1 is P1 (Vi) = P0 (Vi) + ui+1(2 − ui) − 1, where Ai = −Ki+1 and ui+1 and ui are the strategies of Ui+1 and Ui, respectively. • For each i = 0, . . . , k, the payoff to Ui does not depend on Vi and is 1 if Ui and Vi−1 select different actions and 0 otherwise.",
                "We will now characterize the Nash equilibria of this game using a sequence of claims.",
                "CLAIM 3.",
                "In all Nash equilibria of this game V−1 plays 1/2, and the strategies of u−1 and u0 satisfy u0 = (x − x )u−1 + x .",
                "Consequently, in all Nash equilibria we have u0 ∈ [x , x ]. 165 PROOF.",
                "The proof is similar to that of Claim 2.",
                "Let f(u−1) = (x − x )u−1 + x .",
                "Clearly, the player V−1 is indifferent between playing 0 and 1 if and only if u0 = f(u−1).",
                "Suppose that v−1 < 1/2.",
                "Then U0 strictly prefers to play 1, i.e., u0 = 1, so we have P1 (V−1) = P0 (V−1) + 1 − (x − x )u−1 − x .",
                "As 1 − x ≤ 1 − (x − x )u−1 − x ≤ 1 − x for u−1 ∈ [0, 1] and x < 1, we have P1 (V−1) > P0 (V−1), so V−1 prefers to play 1, a contradiction.",
                "Similarly, if v−1 > 1/2, the player U0 strictly prefers to play 0, i.e., u0 = 0, so we have P1 (V−1) = P0 (V−1) − (x − x )u−1 − x .",
                "As x < x , x > 0, we have P1 (V−1) < P0 (V−1), so V−1 prefers to play 0, a contradiction.",
                "Finally, if V−1 plays 1/2, but u0 = f(u−1), player V−1 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Also, note that f(0) = x , f(1) = x , and, moreover, f(u−1) ∈ [x , x ] if and only if u−1 ∈ [0, 1].",
                "Hence, in all Nash equilibria of this game we have u0 ∈ [x , x ].",
                "CLAIM 4.",
                "In all Nash equilibria of this game for each i = 0, . . . , k − 1, we have vi = 1/2, and the strategies of the players Ui and Ui+1 satisfy ui+1 = fi(ui), where f0(u) = u/(u + 1) and fi(u) = 1/(2 − u) for i > 0.",
                "PROOF.",
                "The proof of this claim is also similar to that of Claim 2.",
                "We use induction on i to prove that the statement of the claim is true and, additionally, ui = 1 for i > 0.",
                "For the base case i = 0, note that u0 = 0 by the previous claim (recall that x , x are selected so that x , x = 0, 1) and consider the triple (U0, V0, U1).",
                "Let v0 be the strategy of V0.",
                "First, suppose that v0 > 1/2.",
                "Then U1 strictly prefers to play 0, i.e., u1 = 0.",
                "Then for V0 we have P1 (V0) = P0 (V0) − u0.",
                "As u0 = 0, we have P1 (V0) < P0 (V0), which implies v1 = 0, a contradiction.",
                "Similarly, if v0 < 1/2, player U1 prefers to play 1, so we have u1 = 1.",
                "Hence, P1 (V0) = P0 (V0) + 1.",
                "It follows that P1 (V0) > P0 (V0), which implies v0 = 1, a contradiction.",
                "Finally, if v0 = 1/2, but u1 = u0/(u0 + 1), player V0 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as u1 = u0/(u0 + 1) and u0 ∈ [0, 1], we have u1 = 1.",
                "The argument for the inductive step is similar.",
                "Namely, suppose that the statement is proved for all i < i and consider the triple (Ui, Vi, Ui+1).",
                "Let vi be the strategy of Vi.",
                "First, suppose that vi > 1/2.",
                "Then Ui+1 strictly prefers to play 0, i.e., ui+1 = 0.",
                "Then for Vi we have P1 (Vi) = P0 (Vi)−1, i.e., P1 (Vi) < P0 (Vi), which implies vi = 0, a contradiction.",
                "Similarly, if vi < 1/2, player Ui+1 prefers to play 1, so we have ui+1 = 1.",
                "Hence, P1 (Vi) = P0 (Vi) + 1 − ui.",
                "By inductive hypothesis, we have ui < 1.",
                "Consequently, P1 (Vi) > P0 (Vi), which implies vi = 1, a contradiction.",
                "Finally, if vi = 1/2, but ui+1 = 1/(2 − ui), player Vi is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as ui+1 = 1/(2 − ui) and ui < 1, we have ui+1 < 1.",
                "CLAIM 5.",
                "Any strategy profile of the form (u−1, 1/2, u0, 1/2, u1, 1/2, . . . , uk−1, 1/2, uk), where u−1 ∈ [0, 1], u0 = (x − x )u−1 + x , u1 = u0/(u0 + 1), and ui+1 = 1/(2 − ui) for i ≥ 1 constitutes a Nash equilibrium.",
                "PROOF.",
                "First, the player U−1s payoffs do not depend on other players actions, so he is free to play any strategy in [0, 1].",
                "As long as u0 = (x −x )u−1 +x , player V−1 is indifferent between 0 and 1, so he is content to play 1/2; a similar argument applies to players V0, . . . , Vk−1.",
                "Finally, for each i = 0, . . . , k, the payoffs of player Ui only depend on the strategy of player Vi−1.",
                "In particular, as long as vi−1 = 1/2, player Ui is indifferent between playing 0 and 1, so he can play any mixed strategy ui ∈ [0, 1].",
                "To complete the proof, note that (x − x )u−1 + x ∈ [0, 1] for all u−1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] for all u0 ∈ [0, 1], and 1/(2 − ui) ∈ [0, 1] for all ui ∈ [0, 1], so we have ui ∈ [0, 1] for all i = 0, . . . , k. Now, let us compute the total payoff under a strategy profile of the form given in Claim 5.",
                "The payoff to U−1 is 0, and the expected payoff to each of the Ui, i = 0, . . . , k, is 1/2.",
                "The expected payoffs to V−1 and V0 are 0.",
                "Finally, for any i = 1, . . . , k − 1, the expected payoff to Vi is Ti = Aiuiui+1 − Aiui+1.",
                "It follows that to find a Nash equilibrium with the highest total payoff, we have to maximize Pk−1 i=1 Ti subject to conditions u−1 ∈ [0, 1], u0 = (x −x )u−1+x , u1 = u0/(u0+1), and ui+1 = 1/(2−ui) for i = 1, . . . , k − 1.",
                "We would like to express Pk−1 i=1 Ti as a function of u0.",
                "To simplify notation, set u = u0.",
                "LEMMA 2.",
                "For i = 1, . . . , k, we have ui = u+i−1 u+i .",
                "PROOF.",
                "The proof is by induction on i.",
                "For i = 1, we have u1 = u/(u + 1).",
                "Now, for i ≥ 2 suppose that ui−1 = (u + i − 2)/(u + i − 1).",
                "We have ui = 1/(2 − ui−1) = (u + i − 1)/(2u + 2i − 2 − u − i + 2) = (u + i − 1)/(u + i).",
                "It follows that for i = 1, . . . , k − 1 we have Ti = Ai u + i − 1 u + i u + i u + i + 1 − Ai u + i u + i + 1 = −Ai 1 u + i + 1 = Ki+1 u + i + 1 .",
                "Observe that as u−1 varies from 0 to 1, u varies from x to x .",
                "Therefore, to maximize the total payoff, we have to choose u ∈ [x , x ] so as to maximize K2 u + 2 + · · · + Kk u + k = R(u).",
                "By construction, the only maximum of R(u) on [x , x ] is α.",
                "It follows that in the payoff-maximizing Nash equilibrium of our game U0 plays α.",
                "Finally, note that the payoffs in our game are rational rather than integer.",
                "However, it is easy to see that we can multiply all payoffs to a player by their greatest common denominator without affecting his strategy.",
                "In the resulting game, all payoffs are integer.",
                "This concludes the proof of Theorem 2. 4.",
                "APPROXIMATING THE SOCIALLY OPTIMAL NASH EQUILIBRIUM We have seen that the Nash equilibrium that maximizes the social welfare may involve strategies that are not in Q.",
                "Hence, in this section we focus on finding a Nash equilibrium that is almost optimal from the social welfare perspective.",
                "We propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within from optimal.",
                "The running time of this algorithm is polynomial in 1/ , n and |Pmax| (recall that Pmax is the maximum absolute value of an entry of a payoff matrix).",
                "While the negative result of the previous section is for graphical games on paths, our algorithm applies to a wider range of scenarios.",
                "Namely, it runs in polynomial time on bounded-degree trees 166 as long as the best response policy of each vertex, given its parent, can be represented as a union of a polynomial number of rectangles.",
                "Note that path graphs always satisfy this condition: in [9] we showed how to compute such a representation, given a graph with maximum degree 2.",
                "Consequently, for path graphs the running time of our algorithm is guaranteed to be polynomial. (Note that [9] exhibits a family of graphical games on bounded-degree trees for which the best response policies of some of the vertices, given their parents, have exponential size, when represented as unions of rectangles.)",
                "Due to space restrictions, in this version of the paper we present the algorithm for the case where the graph underlying the graphical game is a path.",
                "We then state our result for the general case; the proof can be found in the full version of this paper [10].",
                "Suppose that s is a strategy profile for a graphical game G. That is, s assigns a mixed strategy to each vertex of G. let EPV (s) be the expected payoff of player V under s and let EP(s) =P V EPV (s).",
                "Let M(G) = max{EP(s) | s is a Nash equilibrium for G}.",
                "THEOREM 3.",
                "Suppose that G is a graphical game on an nvertex path.",
                "Then for any > 0 there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G)− .",
                "The running time of the algorithm is O(n4 P3 max/ 3 ) PROOF.",
                "Let {V1, . . . , Vn} be the set of all players.",
                "We start by constructing the best response policies for all Vi, i = 1, . . . , n − 1.",
                "As shown in [9], this can be done in time O(n3 ).",
                "Let N > 5n be a parameter to be selected later, set δ = 1/N, and define X = {jδ | j = 0, . . . , N}.",
                "We say that vj is an event point for a player Vi if it is a Vi-event point for B(Vi, Vi−1) or B(Vi+1, Vi).",
                "For each player Vi, consider a finite set of strategies Xi given by Xi = X ∪ {vj |vj is an event point for Vi}.",
                "It has been shown in [9] that for any i = 2, . . . , n, the best response policy B(Vi, Vi−1) has at most 2n + 4 Vi-event points.",
                "As we require N > 5n, we have |Xi| ≤ 2N; assume without loss of generality that |Xi| = 2N.",
                "Order the elements of Xi in increasing order as x1 i = 0 < x2 i < · · · < x2N i .",
                "We will refer to the strategies in Xi as discrete strategies of player Vi; a strategy profile in which each player has a discrete strategy will be referred to as a discrete strategy profile.",
                "We will now show that even we restrict each player Vi to strategies from Xi, the players can still achieve a Nash equilibrium, and moreover, the best such Nash equilibrium (with respect to the social welfare) has total payoff at least M(G) − as long as N is large enough.",
                "Let s be a strategy profile that maximizes social welfare.",
                "That is, let s = (s1, . . . , sn) where si is the mixed strategy of player Vi and EP(s) = M(G).",
                "For i = 1, . . . , n, let ti = max{xj i | xj i ≤ si}.",
                "First, we will show that the strategy profile t = (t1, . . . , tn) is a Nash equilibrium for G. Fix any i, 1 < i ≤ n, and let R = [v1, v2]×[u1, u2] be the rectangle in B(Vi, Vi−1) that contains (si, si−1).",
                "As v1 is a Vi-event point of B(Vi, Vi−1), we have v1 ≤ ti, so the point (ti, si−1) is inside R. Similarly, the point u1 is a Vi−1-event point of B(Vi, Vi−1), so we have u1 ≤ ti−1, and therefore the point (ti, ti−1) is inside R. This means that for any i, 1 < i ≤ n, we have ti−1 ∈ pbrVi−1 (ti), which implies that t = (t1, . . . , tn) is a Nash equilibrium for G. Now, let us estimate the expected loss in social welfare caused by playing t instead of s. LEMMA 3.",
                "For any pair of strategy profiles t, s such that |ti − si| ≤ δ we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ for any i = 1, . . . , n. PROOF.",
                "Let Pi klm be the payoff of the player Vi, when he plays k, Vi−1 plays l, and Vi+1 plays m. Fix i = 1, . . . , n and for k, l, m ∈ {0, 1}, set tklm = tk i−1(1 − ti−1)1−k tl i(1 − ti)1−l tm i+1(1 − ti+1)1−m sklm = sk i−1(1 − si−1)1−k sl i(1 − si)1−l sm i+1(1 − si+1)1−m .",
                "We have |EPVi (s) − EPVi (t)| ≤ X k,l,m=0,1 |Pi klm(tklm − sklm )| ≤ 8Pmax max klm |tklm − sklm | We will now show that for any k, l, m ∈ {0, 1} we have |tklm − sklm | ≤ 3δ; clearly, this implies the lemma.",
                "Indeed, fix k, l, m ∈ {0, 1}.",
                "Set x = tk i−1(1 − ti−1)1−k , x = sk i−1(1 − si−1)1−k , y = tl i(1 − ti)1−l , y = sl i(1 − si)1−l , z = tm i+1(1 − ti+1)1−m , z = sm i+1(1 − si+1)1−m .",
                "Observe that if k = 0 then x − x = (1 − ti−1) − (1 − si−1), and if k = 1 then x − x = ti−1 − si−1, so |x − x | ≤ δ.",
                "A similar argument shows |y − y | ≤ δ, |z − z | ≤ δ.",
                "Also, we have x, x , y, y , z, z ∈ [0, 1].",
                "Hence, |tklm −sklm | = |xyz−x y z | = |xyz − x yz + x yz − x y z + x y z − x y z | ≤ |x − x |yz + |y − y |x z + |z − z |x y ≤ 3δ.",
                "Lemma 3 implies Pn i=1 |EPVi (s) − EPVi (t)| ≤ 24nPmaxδ, so by choosing δ < /(24nPmax), or, equivalently, setting N > 24nPmax/ , we can ensure that the total expected payoff for the strategy profile t is within from optimal.",
                "We will now show that we can find the best discrete Nash equilibrium (with respect to the social welfare) using dynamic programming.",
                "As t is a discrete strategy profile, this means that the strategy profile found by our algorithm will be at least as good as t. Define ml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj , j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1, and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The values ml,k i , i = 1, . . . , n; k, l = 1, . . . , N, can be computed inductively, as follows.",
                "We have ml,k 1 = 0 for k, l = 1, . . . , N. Now, suppose that we have already computed ml,k j for all j < i; k, l = 1, . . . , N. To compute mk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this is not the case, we have ml,k i = −∞.",
                "Otherwise, consider the set Y = Xi−2 ∩ pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "The proof of Theorem 1 in [9] implies that the set pbrVi−2 (xl i−1) is non-empty: the player Vi−2 has a potential best response to any strategy of Vi−1, in particular, xl i−1.",
                "By construction of the set Xi−2, this implies that Y is not empty.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "Then we have ml,k i = max{mj,l i−1 + pjlk | xj i−2 ∈ Y }.",
                "Finally, suppose that we have computed ml,k n for l, k = 1, . . . , N. We still need to take into account the payoff of player Vn.",
                "Hence, 167 we consider all pairs (xk n, xl n−1) that satisfy xl n−1 ∈ pbrVn−1 (xk n), and pick the one that maximizes the sum of mk,l n and the payoff of Vn when he plays xk n and Vn−1 plays xl n−1.",
                "This results in the maximum total payoff the players can achieve in a Nash equilibrium using discrete strategies; the actual strategy profile that produces this payoff can be reconstructed using standard dynamic programming techniques.",
                "It is easy to see that each ml,k i can be computed in time O(N), i.e., all of them can be computed in time O(nN3 ).",
                "Recall that we have to select N ≥ (24nPmax)/ to ensure that the strategy profile we output has total payoff that is within from optimal.",
                "We conclude that we can compute an -approximation to the best Nash equilibrium in time O(n4 P3 max/ 3 ).",
                "This completes the proof of Theorem 3.",
                "To state our result for the general case (i.e., when the underlying graph is a bounded-degree tree rather than a path), we need additional notation.",
                "If G has n players, let q(n) be an upper bound on the number of event points in the representation of any best response policy.",
                "That is, we assume that for any vertex U with parent V , B(V, U) has at most q(n) event points.",
                "We will be interested in the situation in which q(n) is polynomial in n. THEOREM 4.",
                "Let G be an n-player graphical game on a tree in which each node has at most Δ children.",
                "Suppose we are given a set of best-response policies for G in which each best-response policy B(V, U) is represented by a set of rectangles with at most q(n) event points.",
                "For any > 0, there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G) − .",
                "The running time of the algorithm is polynomial in n, Pmax and −1 provided that the tree has bounded degree (that is, Δ = O(1)) and q(n) is a polynomial in n. In particular, if N = max((Δ + 1)q(n) + 1, n2Δ+2 (Δ + 2)Pmax −1 ) and Δ > 1 then the running time is O(nΔ(2N)Δ .",
                "For the proof of this theorem, see [10]. 4.1 A polynomial-time algorithm for multiplicative approximation The running time of our algorithm is pseudopolynomial rather than polynomial, because it includes a factor which is polynomial in Pmax, the maximum (in absolute value) entry in any payoff matrix.",
                "If we are interested in multiplicative approximation rather than additive one, this can be improved to polynomial.",
                "First, note that we cannot expect a multiplicative approximation for all inputs.",
                "That is, we cannot hope to have an algorithm that computes a Nash equilibrium with total payoff at least (1 − )M(G).",
                "If we had such an algorithm, then for graphical games G with M(G) = 0, the algorithm would be required to output the optimal solution.",
                "To show that this is infeasible, observe that we can use the techniques of Section 3.2 to construct two integercoefficient graphical games on paths of length O(n) such that for some X ∈ R the maximal total payoff in the first game is X, the maximal total payoff in the second game is −X, and for both games, the strategy profiles that achieve the maximal total payoffs involve algebraic numbers of degree n. By combining the two games so that the first vertex of the second game becomes connected to the last vertex of the first game, but the payoffs of all players do not change, we obtain a graphical game in which the best Nash equilibrium has total payoff 0, yet the strategies that lead to this payoff have high algebraic complexity.",
                "However, we can achieve a multiplicative approximation when all entries of the payoff matrices are positive and the ratio between any two entries is polynomially bounded.",
                "Recall that we assume that all payoffs are integer, and let Pmin > 0 be the smallest entry of any payoff matrix.",
                "In this case, for any strategy profile the payoff to player i is at least Pmin, so the total payoff in the social-welfare maximizing Nash equilibrium s satisfies M(G) ≥ nPmin.",
                "Moreover, Lemma 3 implies that by choosing δ < /(24Pmax/Pmin), we can ensure that the Nash equilibrium t produced by our algorithm satisfies nX i=1 EPVi (s) − nX i=1 EPVi (t) ≤ 24Pmaxδn ≤ nPmin ≤ M(G), i.e., for this value of δ we have Pn i=1 EPVi (t) ≥ (1 − )M(G).",
                "Recall that the running time of our algorithm is O(nN3 ), where N has to be selected to satisfy N > 5n, N = 1/δ.",
                "It follows that if Pmin > 0, Pmax/Pmin = poly(n), we can choose N so that our algorithm provides a multiplicative approximation guarantee and runs in time polynomial in n and 1/ . 5.",
                "BOUNDED PAYOFF NASH EQUILIBRIA Another natural way to define what is a good Nash equilibrium is to require that each players expected payoff exceeds a certain threshold.",
                "These thresholds do not have to be the same for all players.",
                "In this case, in addition to the payoff matrices of the n players, we are given n numbers T1, . . . , Tn, and our goal is to find a Nash equilibrium in which the payoff of player i is at least Ti, or report that no such Nash equilibrium exists.",
                "It turns out that we can design an FPTAS for this problem using the same techniques as in the previous section.",
                "THEOREM 5.",
                "Given a graphical game G on an n-vertex path and n rational numbers T1, . . . , Tn, suppose that there exists a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. Then for any > 0 we can find in time O(max{nP3 max/ 3 , n4 / 3 }) a strategy profile s such that s is a Nash equilibrium for G and EPVi (s ) ≥ Ti − for i = 1, . . . , n. PROOF.",
                "The proof is similar to that of Theorem 3.",
                "First, we construct the best response policies for all players, choose N > 5n, and construct the sets Xi, i = 1, . . . , n, as described in the proof of Theorem 3.",
                "Consider a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. We construct a strategy profile ti = max{xj i | xj i ≤ si} and use the same argument as in the proof of Theorem 3 to show that t is a Nash equilibrium for G. By Lemma 3, we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ, so choosing δ < /(24Pmax), or, equivalently, N > max{5n, 24Pmax/ }, we can ensure EPVi (t) ≥ Ti − for i = 1, . . . , n. Now, we will use dynamic programming to find a discrete Nash equilibrium that satisfies EPVi (t) ≥ Ti − for i = 1, . . . , n. As t is a discrete strategy profile, our algorithm will succeed whenever there is a strategy profile s with EPVi (s) ≥ Ti− for i = 1, . . . , n. Let zl,k i = 1 if there is a discrete strategy profile such that for any j < i the strategy of the player Vj is a potential best response to the strategy of Vj+1, the expected payoff of Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "Otherwise, let zl,k i = 0.",
                "We can compute zl,k i , i = 1, . . . , n; k, l = 1, . . . , N inductively, as follows.",
                "We have zl,k 1 = 1 for k, l = 1, . . . , N. Now, suppose that we have already computed zl,k j for all j < i; k, l = 1, . . . , N. To compute zk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this 168 is not the case, clearly, zk,l i = 0.",
                "Otherwise, consider the set Y = Xi−2 ∩pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "It has been shown in the proof of Theorem 3 that Y = ∅.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "If there exists an xj i−2 ∈ Y such that zj,l i−1 = 1 and pjlk ≥ Ti−2 − , set zl,k i = 1.",
                "Otherwise, set zl,k i = 0.",
                "Having computed zl,k n , l, k = 1, . . . , N, we check if zl,k n = 1 for some pair (l, k). if such a pair of indices exists, we instruct Vn to play xk n and use dynamic programming techniques (or, equivalently, the downstream pass of the algorithm of [13]) to find a Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n (recall that Vn is a dummy player, i.e., we assume Tn = 0, EPn(s ) = 0 for any choice of s ).",
                "If zl,k n = 0 for all l, k = 1, . . . , N, there is no discrete Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n and hence no Nash equilibrium s (not necessarily discrete) such that EPVi (s) ≥ Ti for i = 1, . . . , n. The running time analysis is similar to that for Theorem 3; we conclude that the running time of our algorithm is O(nN3 ) = O(max{nP3 max/ 3 , n4 / 3 }).",
                "REMARK 1.",
                "Theorem 5 can be extended to trees of bounded degree in the same way as Theorem 4. 5.1 Exact Computation Another approach to finding Nash equilibria with bounded payoffs is based on inductively computing the subsets of the best response policies of all players so as to exclude the points that do not provide sufficient payoffs to some of the players.",
                "Formally, we say that a strategy v of the player V is a potential best response to a strategy w of its parent W with respect to a threshold vector T = (T1, . . . , Tn), (denoted by v ∈ pbrV (w, T)) if there is an equilibrium in the instance G(V,W ),W =w in which V plays mixed strategy v and the payoff to any player Vi downstream of V (including V ) is at least Ti.",
                "The best response policy for V with respect to a threshold vector T is defined as B(W, V, T) = {(w, v) | v ∈ pbrV (w, T), w ∈ [0, 1]}.",
                "It is easy to see that if any of the sets B(Vj, Vj−1, T), j = 1, . . . , n, is empty, it means that it is impossible to provide all players with expected payoffs prescribed by T. Otherwise, one can apply the downstream pass of the original algorithm of [13] to find a Nash equilibrium.",
                "As we assume that Vn is a dummy vertex whose payoff is identically 0, the Nash equilibrium with these payoffs exists as long as Tn ≤ 0 and B(Vn, Vn−1, T) is not empty.",
                "Using the techniques developed in [9], it is not hard to show that for any j = 1, . . . , n, the set B(Vj , Vj−1, T) consists of a finite number of rectangles, and one can compute B(Vj+1, Vj , T) given B(Vj , Vj−1, T).",
                "The advantage of this approach is that it allows us to represent all Nash equilibria that provide required payoffs to the players.",
                "However, it is not likely to be practical, since it turns out that the rectangles that appear in the representation of B(Vj , Vj−1, T) may have irrational coordinates.",
                "CLAIM 6.",
                "There exists a graphical game G on a 3-vertex path UV W and a vector T = (T1, T2, T3) such that B(V, W, T) cannot be represented as a union of a finite number of rectangles with rational coordinates.",
                "PROOF.",
                "We define the payoffs to the players in G as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = uw, P1 (V ) = P0 (V ) + w − .8u − .1, where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = .8u + .1; observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "It is not hard to see that we have B(W, V ) = [0, .1]×{0} ∪ [.1, .9]×[0, 1] ∪ [.9, 1]×{1}.",
                "The payoffs to W are not important for our construction; for example, set P0(W ) = P0(W ) = 0.",
                "Now, set T = (0, 1/8, 0), i.e., we are interested in Nash equilibria in which V s expected payoff is at least 1/8.",
                "Suppose w ∈ [0, 1].",
                "The player V can play a mixed strategy v when W is playing w as long as U plays u = f−1 (w) = 5w/4 − 1/8 (to ensure that V is indifferent between 0 and 1) and P0 (V ) = P1 (V ) = uw = w(5w/4 − 1/8) ≥ 1/8.",
                "The latter condition is satisfied if w ≤ (1 − √ 41)/20 < 0 or w ≥ (1 + √ 41)/20.",
                "Note that we have .1 < (1 + √ 41)/20 < .9.",
                "For any other value of w, any strategy of U either makes V prefer one of the pure strategies or does not provide it with a sufficient expected payoff.",
                "There are also some values of w for which V can play a pure strategy (0 or 1) as a potential best response to W and guarantee itself an expected payoff of at least 1/8; it can be shown that these values of w form a finite number of segments in [0, 1].",
                "We conclude that any representation of B(W, V, T) as a union of a finite number of rectangles must contain a rectangle of the form [(1 + √ 41)/20, w ]×[v , v ] for some w , v , v ∈ [0, 1].",
                "On the other hand, it can be shown that for any integer payoff matrices and threshold vectors and any j = 1, . . . , n − 1, the sets B(Vj+1, Vj, T) contain no rectangles of the form [u , u ]×{v} or {v}×[w , w ], where v ∈ R\\Q.",
                "This means that if B(Vn, Vn−1, T) is non-empty, i.e., there is a Nash equilibrium with payoffs prescribed by T, then the downstream pass of the algorithm of [13] can always pick a strategy profile that forms a Nash equilibrium, provides a payoff of at least Ti to the player Vi, and has no irrational coordinates.",
                "Hence, unlike in the case of the Nash equilibrium that maximizes the social welfare, working with irrational numbers is not necessary, and the fact that the algorithm discussed in this section has to do so can be seen as an argument against using this approach. 6.",
                "OTHER CRITERIA FOR SELECTING A NASH EQUILIBRIUM In this section, we consider several other criteria that can be useful in selecting a Nash equilibrium. 6.1 Combining welfare maximization with bounds on payoffs In many real life scenarios, we want to maximize the social welfare subject to certain restrictions on the payoffs to individual players.",
                "For example, we may want to ensure that no player gets a negative expected payoff, or that the expected payoff to player i is at least Pi max − ξ, where Pi max is the maximum entry of is payoff matrix and ξ is a fixed parameter.",
                "Formally, given a graphical game G and a vector T1, . . . , Tn, let S be the set of all Nash equilibria s of G that satisfy Ti ≤ EPVi (s) for i = 1, . . . , n, and let ˆs = argmaxs∈S EP(s).",
                "If the set S is non-empty, we can find a Nash equilibrium ˆs that is -close to satisfying the payoff bounds and is within from ˆs with respect to the total payoff by combining the algorithms of Section 4 and Section 5.",
                "Namely, for a given > 0, choose δ as in the proof of Theorem 3, and let Xi be the set of all discrete strategies of player Vi (for a 169 formal definition, see the proof of Theorem 3).",
                "Combining the proofs of Theorem 3 and Theorem 5, we can see that the strategy profile ˆt given by ˆti = max{xj i | xj i ≤ ˆsi} satisfies EPVi (ˆt) ≥ Ti − , |EP(ˆs) − EP(ˆt)| ≤ .",
                "Define ˆml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj, j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1 and the payoff to player Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The ˆml,k i can be computed by dynamic programming similarly to the ml,k i and zl,k i in the proofs of Theorems 3 and 5.",
                "Finally, as in the proof of Theorem 3, we use ml,k n to select the best discrete Nash equilibrium subject to the payoff constraints.",
                "Even more generally, we may want to maximize the total payoff to a subset of players (who are assumed to be able to redistribute the profits fairly among themselves) while guaranteeing certain expected payoffs to (a subset of) the other players.",
                "This problem can be handled similarly. 6.2 A minimax approach A more egalitarian measure of the quality of a Nash equilibrium is the minimal expected payoff to a player.",
                "The optimal solution with respect to this measure is a Nash equilibrium in which the minimal expected payoff to a player is maximal.",
                "To find an approximation to such a Nash equilibrium, we can combine the algorithm of Section 5 with binary search on the space of potential lower bounds.",
                "Note that the expected payoff to any player Vi given a strategy s always satisfies −Pmax ≤ EPVi (s) ≤ Pmax.",
                "For a fixed > 0, we start by setting T = −Pmax, T = Pmax, T∗ = (T + T )/2.",
                "We then run the algorithm of Section 5 with T1 = · · · = Tn = T∗ .",
                "If the algorithm succeeds in finding a Nash equilibrium s that satisfies EPVi (s ) ≥ T∗ − for all i = 1, . . . , n, we set T = T∗ , T∗ = (T + T )/2; otherwise, we set T = T∗ , T∗ = (T + T )/2 and loop.",
                "We repeat this process until |T − T | ≤ .",
                "It is not hard to check that for any p ∈ R, if there is a Nash equilibrium s such that mini=1,...,n EPVi (s) ≥ p, then our algorithm outputs a Nash equilibrium s that satisfies mini=1,...,n EPVi (s) ≥ p−2 .",
                "The running time of our algorithm is O(max{nP3 max log −1 / 3 , n4 log −1 / 3 }). 6.3 Equalizing the payoffs When the players payoff matrices are not very different, it is reasonable to demand that the expected payoffs to the players do not differ by much either.",
                "We will now show that Nash equilibria in this category can be approximated in polynomial time as well.",
                "Indeed, observe that the algorithm of Section 5 can be easily modified to deal with upper bounds on individual payoffs rather than lower bounds.",
                "Moreover, we can efficiently compute an approximation to a Nash equilibrium that satisfies both the upper bound and the lower bound for each player.",
                "More precisely, suppose that we are given a graphical game G, 2n rational numbers T1, . . . , Tn, T1, . . . , Tn and > 0.",
                "Then if there exists a strategy profile s such that s is a Nash equilibrium for G and Ti ≤ EPVi (s) ≤ Ti for i = 1, . . . , n, we can find a strategy profile s such that s is a Nash equilibrium for G and Ti − ≤ EPVi (s ) ≤ Ti + for i = 1, . . . , n. The modified algorithm also runs in time O(max{nP3 max/ 3 , [4]n4 / 3 }).",
                "This observation allows us to approximate Nash equilibria in which all players expected payoffs differ by at most ξ for any fixed ξ > 0.",
                "Given an > 0, we set T1 = · · · = Tn = −Pmax, T1 = · · · = Tn = −Pmax + ξ + , and run the modified version of the algorithm of Section 5.",
                "If it fails to find a solution, we increment all Ti, Ti by and loop.",
                "We continue until the algorithm finds a solution, or Ti ≥ Pmax.",
                "Suppose that there exists a Nash equilibrium s that satisfies |EPVi (s) − EPVj (s)| ≤ ξ for all i, j = 1, . . . , n. Set r = mini=1,...,n EPVi (s); we have r ≤ EPVi (s) ≤ r + ξ for all i = 1, . . . , n. There exists a k ≥ 0 such that −Pmax + (k − 1) ≤ r ≤ −Pmax + k .",
                "During the kth step of the algorithm, we set T1 = · · · = Tn = −Pmax +(k−1) , i.e., we have r− ≤ Ti ≤ r, r + ξ ≤ Ti ≤ r + ξ + .",
                "That is, the Nash equilibrium s satisfies Ti ≤ r ≤ EPVi (s) ≤ r + ξ ≤ Ti , which means that when Ti is set to −Pmax + (k − 1) , our algorithm is guaranteed to output a Nash equilibrium t that satisfies r − 2 ≤ Ti − ≤ EPVi (t) ≤ Ti + ≤ r +ξ +2 .",
                "We conclude that whenever such a Nash equilibrium s exists, our algorithm outputs a Nash equilibrium t that satisfies |EPVi (t) − EPVj (t)| ≤ ξ + 4 for all i, j = 1, . . . , n. The running time of this algorithm is O(max{nP3 max/ 4 , n4 / 4 }).",
                "Note also that we can find the smallest ξ for which such a Nash equilibrium exists by combining this algorithm with binary search over the space ξ = [0, 2Pmax].",
                "This identifies an approximation to the fairest Nash equilibrium, i.e., one in which the players expected payoffs differ by the smallest possible amount.",
                "Finally, note that all results in this section can be extended to bounded-degree trees. 7.",
                "CONCLUSIONS We have studied the problem of equilibrium selection in graphical games on bounded-degree trees.",
                "We considered several criteria for selecting a Nash equilibrium, such as maximizing the social welfare, ensuring a lower bound on the expected payoff of each player, etc.",
                "First, we focused on the algebraic complexity of a social welfare-maximizing Nash equilibrium, and proved strong negative results for that problem.",
                "Namely, we showed that even for graphical games on paths, any algebraic number α ∈ [0, 1] may be the only strategy available to some player in all social welfaremaximizing Nash equilibria.",
                "This is in sharp contrast with the fact that graphical games on trees always possess a Nash equilibrium in which all players strategies are rational numbers.",
                "We then provided approximation algorithms for selecting Nash equilibria with special properties.",
                "While the problem of finding approximate Nash equilibria for various classes of games has received a lot of attention in recent years, most of the existing work aims to find -Nash equilibria that satisfy (or are -close to satisfying) certain properties.",
                "Our approach is different in that we insist on outputting an exact Nash equilibrium, which is -close to satisfying a given requirement.",
                "As argued in the introduction, there are several reasons to prefer a solution that constitutes an exact Nash equilibrium.",
                "Our algorithms are fully polynomial time approximation schemes, i.e., their running time is polynomial in the inverse of the approximation parameter , though they may be pseudopolynomial with respect to the input size.",
                "Under mild restrictions on the inputs, they can be modified to be truly polynomial.",
                "This is the strongest positive result one can derive for a problem whose exact solutions may be hard to represent, as is the case for many of the problems considered here.",
                "While we prove our results for games on a path, they can be generalized to any tree for which the best response policies have compact representations as unions of rectangles.",
                "In the full version of the paper we describe our algorithms for the general case.",
                "Further work in this vein could include extensions to the kinds of guarantees sought for Nash equilibria, such as guaranteeing total payoffs for subsets of players, selecting equilibria in which some players are receiving significantly higher payoffs than their peers, etc.",
                "At the moment however, it is perhaps more important to inves170 tigate whether Nash equilibria of graphical games can be computed in a decentralized manner, in contrast to the algorithms we have introduced here.",
                "It is natural to ask if our results or those of [9] can be generalized to games with three or more actions.",
                "However, it seems that this will make the analysis significantly more difficult.",
                "In particular, note that one can view the bounded payoff games as a very limited special case of games with three actions per player.",
                "Namely, given a two-action game with payoff bounds, consider a game in which each player Vi has a third action that guarantees him a payoff of Ti no matter what everyone else does.",
                "Then checking if there is a Nash equilibrium in which none of the players assigns a nonzero probability to his third action is equivalent to checking if there exists a Nash equilibrium that satisfies the payoff bounds in the original game, and Section 5.1 shows that finding an exact solution to this problem requires new ideas.",
                "Alternatively it may be interesting to look for similar results in the context of correlated equilibria (CE), especially since the best CE may have higher value (total expected payoff) than the best NE.",
                "The ratio between these values is called the mediation value in [1].",
                "It is known from [1] that the mediation value of 2-player, 2-action games with non-negative payoffs is at most 4 3 , and they exhibit a 3-player game for which it is infinite.",
                "Furthermore, a 2-player, 3action example from [1] also has infinite mediation value. 8.",
                "REFERENCES [1] I. Ashlagi, D. Monderer and M. Tenneholtz, On the Value of Correlation, Proceedings of Dagstuhl seminar 05011 (2005) [2] R. Aumann, Subjectivity and Correlation in Randomized Strategies, Journal of Mathematical Economics 1 pp. 67-96 (1974) [3] B. Blum, C. R. Shelton, and D. Koller, A Continuation Method for Nash Equilibria in Structured Games, Proceedings of IJCAI03 [4] X. Chen, X. Deng and S. Teng, Computing Nash Equilibria: Approximation and Smoothed Complexity, Proceedings of FOCS06 [5] X. Chen, X. Deng, Settling the Complexity of 2-Player Nash-Equilibrium, Proceedings of FOCS06 [6] V. Conitzer and T. Sandholm, Complexity Results about Nash Equilibria, Proceedings of IJCAI03 [7] C. Daskalakis, P. W. Goldberg and C. H. Papadimitriou, The Complexity of Computing a Nash Equilibrium, Proceedings of STOC06 [8] R. S. Datta, Universality of Nash Equilibria, Mathematics of Operations Research 28:3, 2003 [9] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Nash Equilibria in Graphical games on Trees Revisited, Proceedings of ACM EC06 [10] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Computing Good Nash Equilibria in Graphical Games, http://arxiv.org/abs/cs.GT/0703133 [11] I. Gilboa and E. Zemel, Nash and Correlated Equilibria: Some Complexity Considerations, Games and Economic Behavior, 1 pp. 80-93 (1989) [12] P. W. Goldberg and C. H. Papadimitriou, Reducibility Among Equilibrium Problems, Proceedings of STOC06 [13] M. Kearns, M. Littman, and S. Singh, Graphical Models for Game Theory, Proceedings of UAI01 [14] M. Littman, M. Kearns, and S. Singh, An Efficient Exact Algorithm for Singly Connected Graphical Games, Proceedings of NIPS01 [15] R. Lipton and E. Markakis, Nash Equilibria via Polynomial Equations, Proceedings of LATIN04 [16] L. Ortiz and M. Kearns, Nash Propagation for Loopy Graphical Games, Proceedings of NIPS03 [17] C.H.",
                "Papadimitriou, Computing Correlated Equilibria in Multi-Player Games, Proceedings of STOC05 [18] C.H.",
                "Papadimitriou and T. Roughgarden, Computing Equilibria in Multi-Player Games, Proceedings of SODA05 [19] D. Vickrey and D. Koller, Multi-agent Algorithms for Solving Graphical Games, Proceedings of AAAI02 171"
            ],
            "original_annotated_samples": [
                "Rather than having an algorithm which merely finds some Nash equilibrium, we would like to have algorithms for finding Nash equilibria with various sociallydesirable properties, such as maximizing <br>overall payoff</br> or distributing profit fairly."
            ],
            "translated_annotated_samples": [
                "En lugar de tener un algoritmo que simplemente encuentre algún equilibrio de Nash, nos gustaría tener algoritmos para encontrar equilibrios de Nash con diversas propiedades socialmente deseables, como maximizar el <br>pago total</br> o distribuir las ganancias de manera justa."
            ],
            "translated_text": "Calcular buenos equilibrios de Nash en juegos gráficos ∗ Edith Elkind Universidad Hebrea de Jerusalén, Israel, y Universidad de Southampton, Southampton, SO17 1BJ, Reino Unido. Leslie Ann Goldberg Universidad de Liverpool Liverpool L69 3BX, Reino Unido. Paul Goldberg Universidad de Liverpool Liverpool L69 3BX, Reino Unido. RESUMEN Este artículo aborda el problema de la selección justa de equilibrios en juegos gráficos. Nuestro enfoque se basa en la estructura de datos llamada política de mejor respuesta, propuesta por Kearns et al. [13] como una forma de representar todos los equilibrios de Nash de un juego gráfico. En [9], se demostró que la política de mejor respuesta tiene un tamaño polinómico siempre y cuando el grafo subyacente sea un camino. En este artículo, demostramos que si el grafo subyacente es un árbol de grado acotado y la política de mejor respuesta tiene un tamaño polinómico, entonces existe un algoritmo eficiente que construye un equilibrio de Nash que garantiza ciertos pagos a todos los participantes. Otro concepto de solución atractivo es un equilibrio de Nash que maximiza el bienestar social. Mostramos que, si bien calcular exactamente lo último es inviable (demostramos que resolver este problema puede implicar números algebraicos de un grado arbitrariamente alto), existe un FPTAS para encontrar dicho equilibrio siempre y cuando la política de mejor respuesta tenga un tamaño polinómico. Estos dos algoritmos pueden combinarse para producir equilibrios de Nash que satisfacen varios criterios de equidad. Categorías y Descriptores de Asignaturas F.2 [Teoría de la Computación]: Análisis de Algoritmos y Complejidad de Problemas; J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento - Economía Términos Generales Algoritmos, Economía, Teoría 1. INTRODUCCIÓN En una gran comunidad de agentes, es poco probable que el comportamiento de un agente tenga un efecto directo en la mayoría de los otros agentes: más bien, solo serán afectados los agentes que estén lo suficientemente cerca de él. Sin embargo, a medida que estos agentes responden adaptando su comportamiento, más agentes sentirán las consecuencias y eventualmente las decisiones tomadas por un solo agente se propagarán por toda la comunidad. Esta es la intuición detrás de los juegos gráficos, los cuales fueron introducidos por Kearns, Littman y Singh en [13] como un esquema de representación compacto para juegos con muchos jugadores. En un juego gráfico de n jugadores, a cada jugador se le asocia un vértice de un grafo subyacente G, y las ganancias de cada jugador dependen de su acción, así como de las acciones de sus vecinos en el grafo. Si el grado máximo de G es Δ, y cada jugador tiene dos acciones disponibles, entonces el juego se puede representar usando n2Δ+1 números. Por el contrario, necesitamos n^2 números para representar un juego general de n jugadores y 2 acciones, lo cual solo es práctico para valores pequeños de n. Para juegos gráficos con Δ constante, el tamaño del juego es lineal en n. Uno de los problemas más naturales para un juego gráfico es el de encontrar un equilibrio de Nash, cuya existencia se deriva del célebre teorema de Nash (ya que los juegos gráficos son solo un caso especial de juegos de n jugadores). El primer intento de abordar este problema se realizó en [13], donde los autores consideran juegos gráficos con dos acciones por jugador en los que el grafo subyacente es un árbol de grado acotado. Proponen un algoritmo genérico para encontrar equilibrios de Nash que puede ser especializado de dos maneras: un algoritmo de tiempo exponencial para encontrar un equilibrio de Nash (exacto) y un esquema de aproximación de tiempo polinómico completo (FPTAS) para encontrar una aproximación a un equilibrio de Nash. Para cualquier > 0, este algoritmo produce un equilibrio de Nash, que es un perfil estratégico en el que ningún jugador puede mejorar su pago más que al cambiar unilateralmente su estrategia. Si bien los equilibrios de Nash aproximados suelen ser más fáciles de calcular que los equilibrios de Nash exactos, este concepto de solución tiene varias desventajas. Primero, es posible que los jugadores sean sensibles a una pequeña pérdida en las ganancias, por lo que el perfil estratégico que es un equilibrio de Nash no será estable. Esto será así incluso si solo hay un pequeño subconjunto de jugadores que son extremadamente sensibles al precio, y para una gran población de jugadores puede ser difícil elegir un valor que satisfaga a todos. Segundo, los perfiles estratégicos que están cerca de ser equilibrios de Nash pueden ser mucho mejores con respecto a las propiedades consideradas que los equilibrios de Nash exactos. Por lo tanto, la aproximación al valor de la mejor solución que corresponde a un equilibrio de Nash aproximado puede no ser indicativa de lo que se puede lograr bajo un equilibrio de Nash exacto. Esto es especialmente importante si el propósito de la solución aproximada es proporcionar un buen punto de referencia para un sistema de agentes egoístas, ya que el punto de referencia implícito por un equilibrio de Nash puede ser poco realista. Por estas razones, en este artículo nos enfocamos en el problema de calcular equilibrios de Nash exactos. Basándose en las ideas de [14], Elkind et al. [9] mostraron cómo encontrar un equilibrio de Nash (exacto) en tiempo polinómico cuando el grafo subyacente tiene grado 2 (es decir, cuando el grafo es una colección de caminos y ciclos). Por el contrario, encontrar un equilibrio de Nash en un grafo general con grado acotado parece ser computacionalmente intratable: se ha demostrado (ver [5, 12, 7]) que es completo para la clase de complejidad PPAD. [9] extiende este resultado de dificultad al caso en el que el grafo subyacente tiene un ancho de camino acotado. Un juego gráfico puede no tener un equilibrio de Nash único, de hecho, puede tener exponencialmente muchos. Además, algunos equilibrios de Nash son más deseables que otros. En lugar de tener un algoritmo que simplemente encuentre algún equilibrio de Nash, nos gustaría tener algoritmos para encontrar equilibrios de Nash con diversas propiedades socialmente deseables, como maximizar el <br>pago total</br> o distribuir las ganancias de manera justa. Una propiedad útil de la estructura de datos de [13] es que representa simultáneamente el conjunto de todos los equilibrios de Nash del juego subyacente. Si esta representación tiene tamaño polinómico (como es el caso de los caminos, como se muestra en [9]), se puede esperar extraer de ella un equilibrio de Nash con las propiedades deseadas. De hecho, en [13] los autores mencionan que esto es posible si uno está interesado en encontrar un equilibrio de Nash (aproximado). El objetivo de este artículo es extender esto a equilibrios de Nash exactos. 1.1 Nuestros Resultados En este artículo, estudiamos juegos gráficos de n jugadores y 2 acciones en árboles de grado acotado para los cuales la estructura de datos de [13] tiene tamaño polinómico en n. Nos enfocamos en el problema de encontrar equilibrios de Nash exactos con ciertas propiedades socialmente deseables. En particular, mostramos cómo encontrar un equilibrio de Nash que maximiza (casi) el bienestar social, es decir, la suma de las ganancias de los jugadores, y mostramos cómo encontrar un equilibrio de Nash que satisface (casi) los límites de ganancias prescritos para todos los jugadores. Los juegos gráficos en árboles de grado acotado tienen una estructura algebraica simple. Una característica atractiva, que se desprende de [13], es que cada juego de este tipo tiene un equilibrio de Nash en el cual la estrategia de cada jugador es un número racional. La sección 3 estudia la estructura algebraica de aquellos equilibrios de Nash que maximizan el bienestar social. Demostramos (Teoremas 1 y 2) que, sorprendentemente, el conjunto de equilibrios de Nash que maximizan el bienestar social es más complejo. De hecho, para cualquier número algebraico α ∈ [0, 1] con grado a lo sumo n, exhibimos un juego gráfico en un camino de longitud O(n) tal que, en el equilibrio de Nash único que maximiza el bienestar social de este juego, uno de los jugadores juega la estrategia mixta α. Este resultado muestra que puede ser difícil representar un equilibrio de Nash óptimo. Parece ser una característica novedosa del escenario que consideramos aquí, que un equilibrio de Nash óptimo es difícil de representar, en una situación donde es fácil encontrar y representar un equilibrio de Nash. Dado que el equilibrio de Nash que maximiza el bienestar social puede ser difícil de representar eficientemente, debemos conformarnos con una aproximación. Sin embargo, la diferencia crucial entre nuestro enfoque y el de los trabajos anteriores [13, 16, 19] es que requerimos que nuestro algoritmo produzca un equilibrio de Nash exacto, aunque no necesariamente el óptimo con respecto a nuestros criterios. En la Sección 4, describimos un algoritmo que cumple con este requisito. Específicamente, proponemos un algoritmo que, para cualquier > 0, encuentra un equilibrio de Nash cuya recompensa total está dentro de de lo óptimo. Se ejecuta en tiempo polinómico (Teorema 3,4) para cualquier juego gráfico en un árbol de grado acotado para el cual la estructura de datos propuesta por [13] (la llamada política de mejor respuesta, definida a continuación) tiene un tamaño poli(n) (nota que, como se muestra en [9], esto siempre es el caso cuando el grafo subyacente es un camino). Un resultado relacionado en un contexto diferente fue obtenido por Datta [8], quien muestra que los juegos de n jugadores con 2 acciones son universales en el sentido de que cualquier variedad algebraica real puede ser representada como el conjunto de equilibrios de Nash totalmente mixtos de tales juegos. Precisamente, el tiempo de ejecución de nuestro algoritmo es polinómico en n, Pmax y 1/, donde Pmax es el valor absoluto máximo de una entrada de una matriz de pagos, es decir, es un algoritmo seudopolinómico, aunque es completamente polinómico con respecto a . Mostramos (Sección 4.1) que bajo ciertas restricciones en las matrices de pagos, el algoritmo puede ser transformado en un algoritmo de tiempo polinómico (verdaderamente) que produce un equilibrio de Nash cuya ganancia total está dentro de un factor de 1 − del óptimo. En la Sección 5, consideramos el problema de encontrar un equilibrio de Nash en el que la ganancia esperada de cada jugador Vi supere un umbral prescrito Ti. Usando la idea de la Sección 4, presentamos (Teorema 5) un esquema de aproximación en tiempo polinómico completo para este problema. El tiempo de ejecución del algoritmo está acotado por un polinomio en n, Pmax y . Si la instancia tiene un equilibrio de Nash que cumple con los umbrales prescritos, entonces el algoritmo construye un equilibrio de Nash en el que la recompensa esperada de cada jugador Vi es al menos Ti − . En la Sección 6, presentamos otros criterios naturales para seleccionar un buen equilibrio de Nash y mostramos que los algoritmos descritos en las dos secciones anteriores pueden ser utilizados como bloques de construcción para encontrar equilibrios de Nash que cumplan con estos criterios. En particular, en la Sección 6.1 mostramos cómo encontrar un equilibrio de Nash que aproxima el máximo bienestar social, garantizando que la ganancia de cada individuo esté cerca de un umbral prescrito. En la Sección 6.2 mostramos cómo encontrar un equilibrio de Nash que maximiza (casi) al máximo el pago individual mínimo. Finalmente, en la Sección 6.3 mostramos cómo encontrar un equilibrio de Nash en el que las ganancias individuales de los jugadores están cerca unas de otras. 1.2 Trabajo Relacionado Nuestro esquema de aproximación (Teorema 3 y Teorema 4) muestra un contraste entre los juegos que estudiamos y los juegos de n acciones de dos jugadores, para los cuales los problemas correspondientes suelen ser intratables. Para juegos de n acciones de dos jugadores, el problema de encontrar equilibrios de Nash con propiedades especiales suele ser NP-duro. En particular, este es el caso de los equilibrios de Nash que maximizan el bienestar social [11, 6]. Además, es probable que sea intratable incluso aproximarse a tales equilibrios. En particular, Chen, Deng y Teng [4] muestran que existe algún , polinomio inverso en n, para el cual calcular un equilibrio de Nash en juegos de 2 jugadores con n acciones por jugador es PPAD-completo. Lipton y Markakis [15] estudian las propiedades algebraicas de los equilibrios de Nash, y señalan que los algoritmos estándar de eliminación de cuantificadores pueden ser utilizados para resolverlos. Ten en cuenta que estos algoritmos no son de tiempo polinómico en general. Los juegos que estudiamos en este artículo tienen equilibrios de Nash computables en tiempo polinómico en los que todas las estrategias mixtas son números racionales, pero un equilibrio de Nash óptimo puede incluir necesariamente estrategias mixtas con un alto grado algebraico. Un equilibrio correlacionado (CE) (introducido por Aumann [2]) es una distribución sobre vectores de acciones de jugadores con la propiedad de que si a cualquier jugador se le dice su propia acción (el valor de su propio componente) de un vector generado por esa distribución, entonces no puede aumentar su ganancia esperada cambiando su acción. Cualquier equilibrio de Nash es una EC, pero la afirmación contraria no se cumple en general. A diferencia de los equilibrios de Nash, los equilibrios correlacionados se pueden encontrar para juegos gráficos de bajo grado (así como para otras clases de juegos multijugador representados de manera concisa) en tiempo polinómico [17]. Pero, para juegos gráficos es NP-duro encontrar un equilibrio correlacionado que maximice la recompensa total [18]. Sin embargo, los resultados de NP-dificultad se aplican a juegos más generales que el que consideramos aquí, en particular los grafos no son árboles. Del [2] también se sabe que existen juegos de 2 jugadores y 2 acciones para los cuales el pago total esperado 163 del mejor equilibrio correlacionado es mayor que el mejor equilibrio de Nash, y discutimos este tema más a fondo en la Sección 7.2. CONSIDERACIONES PRELIMINARES Y NOTACIÓN Consideramos juegos gráficos en los que el grafo subyacente G es un árbol de n vértices, en el que cada vértice tiene a lo sumo Δ hijos. Cada vértice tiene dos acciones, que están representadas por 0 y 1. Una estrategia mixta de un jugador V se representa como un único número v ∈ [0, 1], que denota la probabilidad de que V seleccione la acción 1. Para los propósitos del algoritmo, el árbol está enraizado de manera arbitraria. Para mayor comodidad, asumimos sin pérdida de generalidad que la raíz tiene un solo hijo y que su recompensa es independiente de la acción elegida por el hijo. Esto se puede lograr primero eligiendo una raíz arbitraria del árbol, y luego agregando un padre ficticio de esta raíz, asignándole una función de recompensa constante, por ejemplo, 0. Dado un borde (V, W) del árbol G, y una estrategia mixta w para W, sea G(V,W), W=w la instancia obtenida de G mediante (1) eliminar todos los nodos Z que están separados de V por W (es decir, todos los nodos Z tales que el camino de Z a V pasa por W), y (2) restringir la instancia de modo que se requiera que W juegue la estrategia mixta w. Definición 1. Supongamos que (V, W) es una arista del árbol, que v es una estrategia mixta para V y que w es una estrategia mixta para W. Decimos que v es una mejor respuesta potencial a w (denotado por v ∈ pbrV (w)) si hay un equilibrio en la instancia G(V,W), W = w en el que V tiene una estrategia mixta v. Definimos la política de mejor respuesta para V, dada W, como B(W, V) = {(w, v) | v ∈ pbrV (w), w ∈ [0, 1]}. El paso ascendente del algoritmo genérico de [13] considera cada nodo V (que no sea la raíz) y calcula la política de mejor respuesta para V dada su padre. Con las suposiciones anteriores sobre la raíz, el paso aguas abajo es sencillo. La raíz selecciona una estrategia mixta w para la raíz W y una estrategia mixta v ∈ B(W, V) para cada hijo V de W. Indica a cada niño V que juegue v. El resto del pase descendente es recursivo. Cuando un nodo V recibe instrucciones de su padre para adoptar la estrategia mixta v, realiza lo siguiente para cada hijo U: encuentra un par (v, u) ∈ B(V, U) (con el mismo valor de v que le fue dado por su padre) e instruye a U a jugar u. La mejor política de respuesta para un vértice U dado su padre V puede representarse como una unión de rectángulos, donde un rectángulo está definido por un par de intervalos cerrados (IV, IU) y consiste en todos los puntos en IV × IU; puede ser el caso de que uno o ambos de los intervalos IV e IU consistan en un solo punto. Para realizar cálculos en B(V, U) y para limitar el número de rectángulos, [9] utilizó el concepto de un punto de evento, el cual se define de la siguiente manera. Para cualquier conjunto A ⊆ [0, 1]2 que se represente como una unión de un número finito de rectángulos, decimos que un punto u ∈ [0, 1] en el eje U es un punto de evento U de A si u = 0 o u = 1 o la representación de A contiene un rectángulo de la forma IV × IU y u es un extremo de IU; los puntos de evento V se definen de manera similar. Para muchos juegos considerados en este documento, el grafo subyacente es un camino de n vértices, es decir, un grafo G = (V, E) con V = {V1, . . . , Vn} y E = {(V1, V2), . . . , (Vn−1, Vn)}. En [9], se demostró que para tales juegos, la política de mejor respuesta tiene solo un número polinomial de rectángulos. La prueba de que el número de rectángulos en B(Vj+1, Vj) es polinomial procede primero mostrando que el número de puntos de evento en B(Vj+1, Vj) no puede exceder el número de puntos de evento en B(Vj, Vj-1) en más de 2, y utilizando este hecho para acotar el número de rectángulos en B(Vj+1, Vj). Sean P0 (V) y P1 (V) las ganancias esperadas para V cuando juega 0 y 1, respectivamente. Tanto P0 (V) como P1 (V) son funciones multilineales de las estrategias de los vecinos de V. En lo que sigue, usaremos frecuentemente la siguiente observación simple. AFIRMACIÓN 1. Para un vértice V con un único hijo U y padre W, dados cualquier A, B, C, D ∈ Q, se pueden seleccionar las recompensas para V de manera que P0(V) = Auw + Bu + Cw + D, P1(V) = Auw + Bu + Cw + D. Además, si todos los valores de A, B, C, D son enteros, los pagos para V también son enteros. PRUEBA. Daremos la prueba para P0 (V); la prueba para P1 (V) es similar. Para i, j = 0, 1, sea Pij la ganancia para V cuando U juega i, V juega 0 y W juega j. Tenemos P0 (V) = P00(1 − u)(1 − w) + P10u(1 − w) + P01(1 − u)w + P11uw. Tenemos que seleccionar los valores de Pij de manera que P00 − P10 − P01 + P11 = A, −P00 + P10 = B, −P00 + P01 = C, P00 = D. Es fácil ver que la solución única está dada por P00 = D, P01 = C + D, P10 = B + D, P11 = A + B + C + D. La entrada a todos los algoritmos considerados en este documento incluye las matrices de pago para cada jugador. Suponemos que todos los elementos de estas matrices son enteros. Sea Pmax el mayor valor absoluto de cualquier elemento de cualquier matriz de pagos. Entonces, la entrada consiste en un máximo de n2Δ+1 números, cada uno de los cuales puede ser representado usando log Pmax bits. EQUILIBRIOS DE NASH QUE MAXIMIZAN EL BIENESTAR SOCIAL: SOLUCIONES EN R \\ Q Desde el punto de vista del bienestar social, el mejor equilibrio de Nash es aquel que maximiza la suma de las ganancias esperadas de los jugadores. Lamentablemente, resulta que calcular exactamente dicho perfil estratégico no es posible: en esta sección, mostramos que incluso si todas las ganancias de los jugadores son números enteros, el perfil estratégico que maximiza la ganancia total puede tener coordenadas irracionales; además, puede involucrar números algebraicos de un grado arbitrario. 3.1 Calentamiento: irracionales cuadráticos Comenzamos proporcionando un ejemplo de un juego gráfico en un camino de longitud 3 con ganancias enteras tal que en el equilibrio de Nash que maximiza la ganancia total, uno de los jugadores tiene una estrategia en R \\ Q. En la siguiente subsección, extenderemos este ejemplo a números algebraicos de grado arbitrario n; para hacerlo, debemos considerar caminos de longitud O(n). TEOREMA 1. Existe un juego gráfico G de pago entero en un camino de 3 vértices UVW tal que, en cualquier equilibrio de Nash de G que maximice el bienestar social, la estrategia u del jugador U y el pago total p cumplen u, p ∈ R \\ Q. PRUEBA. Las recompensas para los jugadores en G están especificadas de la siguiente manera. La ganancia para U es idénticamente 0, es decir, P0 (U) = P1 (U) = 0. Usando la Reclamación 1, seleccionamos las ganancias para V de modo que P0 (V) = -uw + 3w y P1 (V) = P0 (V) + w(u + 2) - (u + 1), donde u y w son las estrategias (mixtas) de U y W, respectivamente. Se deduce que V es indiferente entre jugar 0 y 1 si y solo si w = f(u) = u+1 u+2. Observa que para cualquier u ∈ [0, 1] tenemos f(u) ∈ [0, 1]. La recompensa para W es 0 si selecciona la misma acción que V y 1 en caso contrario. AFIRMACIÓN 2. Todos los equilibrios de Nash del juego G son de la forma (u, 1/2, f(u)). Es decir, en cualquier equilibrio de Nash, V juega v = 1/2 y W juega w = f(u). Además, para cualquier valor de u, el vector de estrategias (u, 1/2, f(u)) constituye un equilibrio de Nash. PRUEBA. Es fácil comprobar que para cualquier u ∈ [0, 1], el vector (u, 1/2, f(u)) es un equilibrio de Nash. De hecho, U está dispuesto a jugar 164 cualquier estrategia mixta u, sin importar lo que hagan V y W. Además, V es indiferente entre 0 y 1 siempre y cuando w = f(u), por lo que puede jugar 1/2. Finalmente, si V juega con probabilidad igual a 0 y 1, W es indiferente entre 0 y 1, por lo que puede jugar f(u). Por el contrario, supongamos que v > 1/2. Entonces W prefiere estrictamente jugar 0, es decir, w = 0. Entonces para V tenemos P1 (V) = P0 (V) - (u + 1), es decir, P1 (V) < P0 (V), lo que implica v = 0, una contradicción. De manera similar, si v < 1/2, el jugador W prefiere jugar 1, por lo que tenemos w = 1. Por lo tanto, P1 (V) = P0 (V) + (u + 2) - (u + 1), es decir, P1 (V) > P0 (V), lo que implica v = 1, una contradicción. Finalmente, si v = 1/2, pero w = f(u), el jugador V no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Esto completa la prueba de la Afirmación 2. Según la Afirmación 2, la ganancia total en cualquier equilibrio de Nash de este juego es una función de u. Más específicamente, la ganancia para U es 0, la ganancia para V es −uf(u) + 3f(u), y la ganancia para W es 1/2. Por lo tanto, el equilibrio de Nash con la máxima ganancia total corresponde al valor de u que maximiza g(u) = −u (u + 1) u + 2 + 3 u + 1 u + 2 = − (u − 3)(u + 1) u + 2. Para encontrar los extremos de g(u), calculamos h(u) = − d du g(u). Tenemos h(u) = (2u − 2)(u + 2) − (u − 3)(u + 1) (u + 2)2 = u2 + 4u − 1 (u + 2)2. Por lo tanto, h(u) = 0 si y solo si u ∈ {−2 + √ 5, −2 − √ 5}. Ten en cuenta que −2 + √ 5 ∈ [0, 1]. La función g(u) cambia de signo en −2, −1 y 3. Tenemos g(u) < 0 para g > 3, g(u) > 0 para u < −2, por lo que el extremo de g(u) que se encuentra entre 1 y 3, es decir, u = −2 + √ 5, es un máximo local. Concluimos que el equilibrio de Nash que maximiza el bienestar social para este juego está dado por el vector de estrategias (−2+√ 5, 1/2, (5 − √ 5)/5). El pago total respectivo es 0 − ( √ 5 − 5)( √ 5 − 1) √ 5 + 1 2 = 13/2 − 2 √ 5. Esto concluye la prueba del Teorema 1. 3.2 Estrategias de grado arbitrario. Hemos demostrado que en el equilibrio de Nash que maximiza el bienestar social, las estrategias de algunos jugadores pueden ser irracionales cuadráticas, al igual que la recompensa total. En esta subsección, extenderemos este resultado para mostrar que podemos construir un juego gráfico de pago entero en un camino cuyo equilibrio de Nash maximizador del bienestar social involucra números algebraicos arbitrarios en [0, 1]. TEOREMA 2. Para cualquier número algebraico α de grado n ∈ [0, 1], existe un juego gráfico de pago entero en un camino de longitud O(n) tal que, en todas las equilibrios de Nash que maximizan el bienestar social de este juego, uno de los jugadores juega α. PRUEBA. Nuestra prueba consta de dos pasos. Primero, construimos una expresión racional R(x) y un segmento [x , x ] tal que x , x ∈ Q y α sea el único máximo de R(x) en [x , x ]. Segundo, construimos un juego gráfico cuyos equilibrios de Nash pueden ser parametrizados por u ∈ [x, x], de modo que en el equilibrio que corresponde a u, la recompensa total es R(u) y, además, la estrategia de algunos jugadores es u. Se deduce que para alcanzar el equilibrio de Nash que maximiza la ganancia, este jugador tiene que jugar α. Los detalles siguen. LEMMA 1. \n\nLEMMA 1. Dado un número algebraico α ∈ [0, 1], deg(α) = n, existen K2, . . . , K2n+2 ∈ Q y x , x ∈ (0, 1) ∩ Q tal que α es el único máximo de R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 en [x , x ]. PRUEBA. Sea P(x) el polinomio minimal de α, es decir, un polinomio de grado n con coeficientes racionales cuyo coeficiente principal es 1 tal que P(α) = 0. Sea A = {α1, . . . , αn} el conjunto de todas las raíces de P(x). Considera el polinomio Q1(x) = −P2(x). Tiene las mismas raíces que P(x), y además, para cualquier x ∈ A tenemos Q1(x) < 0. Por lo tanto, A es el conjunto de todos los máximos de Q1(x). Ahora, establece R(x) = Q1(x) (x+2)...(x+2n+1)(x+2n+2). Observa que R(x) ≤ 0 para todo x ∈ [0, 1] y R(x) = 0 si y solo si Q1(x) = 0. Por lo tanto, el conjunto A también es el conjunto de todos los máximos de R(x) en [0, 1]. Sea d = min{|αi − α| | αi ∈ A, αi = α}, y establezca α = max{α − d/2, 0}, α = min{α + d/2, 1}. Claramente, α es el único cero (y por lo tanto, el único máximo) de R(x) en [α , α ]. Sean x y x algunos números racionales en (α, α) y (α, α), respectivamente; observe que al excluir los extremos de los intervalos aseguramos que x, x = 0, 1. Como [x, x] ⊂ [α, α], tenemos que α es el único máximo de R(x) en [x, x]. Dado que R(x) es una expresión racional adecuada y todas las raíces de su denominador son simples, por el teorema de descomposición en fracciones parciales, R(x) puede representarse como R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2, donde K2, . . . , K2n+2 son números racionales. Considera un juego gráfico en el camino U−1V−1U0V0U1V1 . . . Uk−1Vk−1Uk, donde k = 2n + 2. Intuitivamente, queremos que cada triple (Ui−1, Vi−1, Ui) se comporte de manera similar a los jugadores U, V y W del juego descrito en la subsección anterior. Más precisamente, definimos las ganancias de los jugadores de la siguiente manera. • La ganancia para U−1 es 0 sin importar lo que hagan los demás. • La ganancia esperada para V−1 es 0 si juega 0 y u0 − (x − x )u−1 −x si juega 1, donde u0 y u−1 son las estrategias de U0 y U−1, respectivamente. • La ganancia esperada para V0 es 0 si juega 0 y u1(u0 + 1)− u0 si juega 1, donde u0 y u1 son las estrategias de U0 y U1, respectivamente. • Para cada i = 1, . . . , k − 1, la ganancia esperada para Vi cuando juega 0 es P0 (Vi) = Aiuiui+1 − Aiui+1, y la ganancia esperada para Vi cuando juega 1 es P1 (Vi) = P0 (Vi) + ui+1(2 − ui) − 1, donde Ai = −Ki+1 y ui+1 y ui son las estrategias de Ui+1 y Ui, respectivamente. • Para cada i = 0, . . . , k, la ganancia para Ui no depende de Vi y es 1 si Ui y Vi−1 seleccionan acciones diferentes y 0 en caso contrario. Ahora caracterizaremos los equilibrios de Nash de este juego utilizando una secuencia de afirmaciones. AFIRMACIÓN 3. En todos los equilibrios de Nash de este juego, V−1 juega 1/2, y las estrategias de u−1 y u0 satisfacen u0 = (x − x )u−1 + x. Por consiguiente, en todos los equilibrios de Nash tenemos u0 ∈ [x , x ]. 165 PRUEBA. La prueba es similar a la del Reclamo 2. Que f(u−1) = (x − x )u−1 + x. Claramente, el jugador V−1 es indiferente entre jugar 0 y 1 si y solo si u0 = f(u−1). Supongamos que v−1 < 1/2. Entonces U0 prefiere estrictamente jugar 1, es decir, u0 = 1, por lo que tenemos P1 (V−1) = P0 (V−1) + 1 − (x − x )u−1 − x . Dado que 1 − x ≤ 1 − (x − x )u−1 − x ≤ 1 − x para u−1 ∈ [0, 1] y x < 1, tenemos que P1 (V−1) > P0 (V−1), por lo que V−1 prefiere jugar 1, lo cual es una contradicción. De manera similar, si v−1 > 1/2, el jugador U0 prefiere estrictamente jugar 0, es decir, u0 = 0, por lo que tenemos P1 (V−1) = P0 (V−1) − (x − x )u−1 − x. Dado que x < x, x > 0, tenemos P1 (V−1) < P0 (V−1), por lo que V−1 prefiere jugar 0, lo cual es una contradicción. Finalmente, si V−1 juega 1/2, pero u0 = f(u−1), el jugador V−1 no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Además, ten en cuenta que f(0) = x, f(1) = x y, además, f(u−1) ∈ [x, x] si y solo si u−1 ∈ [0, 1]. Por lo tanto, en todos los equilibrios de Nash de este juego tenemos u0 ∈ [x , x ]. AFIRMACIÓN 4. En todos los equilibrios de Nash de este juego para cada i = 0, . . . , k − 1, tenemos vi = 1/2, y las estrategias de los jugadores Ui y Ui+1 satisfacen ui+1 = fi(ui), donde f0(u) = u/(u + 1) y fi(u) = 1/(2 − u) para i > 0. PRUEBA. La prueba de esta afirmación es también similar a la de la Afirmación 2. Utilizamos inducción en i para demostrar que la afirmación de la proposición es verdadera y, además, ui = 1 para i > 0. Para el caso base i = 0, observe que u0 = 0 según la afirmación anterior (recuerde que x, x se seleccionan de manera que x, x = 0, 1) y considere el trío (U0, V0, U1). Que v0 sea la estrategia de V0. Primero, supongamos que v0 > 1/2. Entonces U1 prefiere estrictamente jugar 0, es decir, u1 = 0. Entonces, para V0 tenemos P1 (V0) = P0 (V0) − u0. Dado que u0 = 0, tenemos que P1 (V0) < P0 (V0), lo cual implica v1 = 0, una contradicción. De manera similar, si v0 < 1/2, el jugador U1 prefiere jugar 1, por lo que tenemos u1 = 1. Por lo tanto, P1 (V0) = P0 (V0) + 1. Se sigue que P1 (V0) > P0 (V0), lo cual implica v0 = 1, una contradicción. Finalmente, si v0 = 1/2, pero u1 = u0/(u0 + 1), el jugador V0 no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Además, dado que u1 = u0/(u0 + 1) y u0 ∈ [0, 1], tenemos que u1 = 1. El argumento para el paso inductivo es similar. Es decir, supongamos que la afirmación se demuestra para todos los i < i y consideremos el trío (Ui, Vi, Ui+1). Que vi sea la estrategia de Vi. Primero, supongamos que vi > 1/2. Entonces Ui+1 prefiere estrictamente jugar 0, es decir, ui+1 = 0. Entonces, para Vi tenemos P1 (Vi) = P0 (Vi)−1, es decir, P1 (Vi) < P0 (Vi), lo cual implica vi = 0, una contradicción. De manera similar, si vi < 1/2, el jugador Ui+1 prefiere jugar 1, por lo que tenemos ui+1 = 1. Por lo tanto, P1 (Vi) = P0 (Vi) + 1 − ui. Por hipótesis inductiva, tenemos ui < 1. Por consiguiente, P1 (Vi) > P0 (Vi), lo que implica vi = 1, una contradicción. Finalmente, si vi = 1/2, pero ui+1 = 1/(2 − ui), el jugador Vi no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Además, como ui+1 = 1/(2 − ui) y ui < 1, tenemos ui+1 < 1. AFIRMACIÓN 5. Cualquier perfil estratégico de la forma (u−1, 1/2, u0, 1/2, u1, 1/2, . . . , uk−1, 1/2, uk), donde u−1 ∈ [0, 1], u0 = (x − x )u−1 + x , u1 = u0/(u0 + 1), y ui+1 = 1/(2 − ui) para i ≥ 1, constituye un equilibrio de Nash. PRUEBA. Primero, las ganancias del jugador U−1 no dependen de las acciones de otros jugadores, por lo que es libre de jugar cualquier estrategia en [0, 1]. Si u0 = (x −x )u−1 +x , el jugador V−1 es indiferente entre 0 y 1, por lo que está contento de jugar 1/2; un argumento similar se aplica a los jugadores V0, . . . , Vk−1. Finalmente, para cada i = 0, . . . , k, las ganancias del jugador Ui solo dependen de la estrategia del jugador Vi−1. En particular, siempre y cuando vi−1 = 1/2, el jugador Ui es indiferente entre jugar 0 y 1, por lo que puede jugar cualquier estrategia mixta ui ∈ [0, 1]. Para completar la prueba, observe que (x − x )u−1 + x ∈ [0, 1] para todo u−1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] para todo u0 ∈ [0, 1], y 1/(2 − ui) ∈ [0, 1] para todo ui ∈ [0, 1], por lo que tenemos ui ∈ [0, 1] para todo i = 0, . . . , k. Ahora, calculemos la ganancia total bajo un perfil estratégico de la forma dada en la Afirmación 5. El pago para U−1 es 0, y el pago esperado para cada uno de los Ui, i = 0, . . . , k, es 1/2. Los beneficios esperados para V−1 y V0 son 0. Finalmente, para cualquier i = 1, . . . , k − 1, la ganancia esperada para Vi es Ti = Aiuiui+1 − Aiui+1. Se deduce que para encontrar un equilibrio de Nash con el mayor pago total, debemos maximizar Pk−1 i=1 Ti sujeto a las condiciones u−1 ∈ [0, 1], u0 = (x −x )u−1+x , u1 = u0/(u0+1), y ui+1 = 1/(2−ui) para i = 1, . . . , k − 1. Nos gustaría expresar Pk−1 i=1 Ti como una función de u0. Para simplificar la notación, establezca u = u0. LEMMA 2. \n\nLEMMA 2. Para i = 1, . . . , k, tenemos ui = u+i−1 u+i. PRUEBA. La demostración es por inducción en i. Para i = 1, tenemos u1 = u/(u + 1). Ahora, para i ≥ 2 supongamos que ui−1 = (u + i − 2)/(u + i − 1). Tenemos ui = 1/(2 − ui−1) = (u + i − 1)/(2u + 2i − 2 − u − i + 2) = (u + i − 1)/(u + i). Se sigue que para i = 1, . . . , k − 1 tenemos Ti = Ai u + i − 1 u + i u + i u + i + 1 − Ai u + i u + i + 1 = −Ai 1 u + i + 1 = Ki+1 u + i + 1. Observa que a medida que u−1 varía de 0 a 1, u varía de x a x. Por lo tanto, para maximizar el pago total, debemos elegir u ∈ [x , x ] de manera que maximicemos K2 u + 2 + · · · + Kk u + k = R(u). Por construcción, el único máximo de R(u) en [x, x] es α. Se deduce que en el equilibrio de Nash que maximiza las ganancias de nuestro juego, U0 juega α. Finalmente, cabe destacar que las recompensas en nuestro juego son racionales en lugar de enteras. Sin embargo, es fácil ver que podemos multiplicar todas las ganancias de un jugador por su máximo común denominador sin afectar su estrategia. En el juego resultante, todas las ganancias son enteras. Esto concluye la demostración del Teorema 2.4. APROXIMANDO EL EQUILIBRIO DE NASH ÓPTIMO SOCIAL Hemos visto que el equilibrio de Nash que maximiza el bienestar social puede implicar estrategias que no están en Q. Por lo tanto, en esta sección nos enfocamos en encontrar un equilibrio de Nash que sea casi óptimo desde la perspectiva del bienestar social. Proponemos un algoritmo que, para cualquier > 0, encuentra un equilibrio de Nash cuya recompensa total está dentro de de la óptima. El tiempo de ejecución de este algoritmo es polinómico en 1/ , n y |Pmax| (recuerde que Pmax es el valor absoluto máximo de una entrada de una matriz de pagos). Si bien el resultado negativo de la sección anterior es para juegos gráficos en caminos, nuestro algoritmo se aplica a una gama más amplia de escenarios. Específicamente, se ejecuta en tiempo polinómico en árboles de grado acotado siempre que la política de mejor respuesta de cada vértice, dada su padre, pueda representarse como una unión de un número polinómico de rectángulos. Ten en cuenta que los grafos de camino siempre cumplen esta condición: en [9] mostramos cómo calcular dicha representación, dado un grafo con grado máximo 2. Por consiguiente, para grafos de camino el tiempo de ejecución de nuestro algoritmo está garantizado de ser polinomial. (Nótese que [9] exhibe una familia de juegos gráficos en árboles de grado acotado para los cuales las políticas de mejor respuesta de algunos de los vértices, dados sus padres, tienen tamaño exponencial, cuando se representan como uniones de rectángulos). Debido a restricciones de espacio, en esta versión del artículo presentamos el algoritmo para el caso en el que el grafo subyacente del juego gráfico es un camino. Luego presentamos nuestro resultado para el caso general; la demostración se puede encontrar en la versión completa de este artículo [10]. Supongamos que s es un perfil estratégico para un juego gráfico G. Es decir, s asigna una estrategia mixta a cada vértice de G. Sea EPV (s) el pago esperado del jugador V bajo s y sea EP(s) = Σ V EPV (s). Sea M(G) = max{EP(s) | s es un equilibrio de Nash para G}. TEOREMA 3. Supongamos que G es un juego gráfico en un camino de n vértices. Entonces, para cualquier > 0 existe un algoritmo que construye un equilibrio de Nash s para G que satisface EP(s) ≥ M(G)− . El tiempo de ejecución del algoritmo es O(n4 P3 max/ 3) PRUEBA. Sea {V1, . . . , Vn} el conjunto de todos los jugadores. Comenzamos construyendo las mejores políticas de respuesta para todos los Vi, i = 1, . . . , n − 1. Como se muestra en [9], esto se puede hacer en tiempo O(n3). Sea N > 5n un parámetro que se seleccionará más adelante, establezca δ = 1/N y defina X = {jδ | j = 0, . . . , N}. Decimos que vj es un punto de evento para un jugador Vi si es un punto de evento de Vi para B(Vi, Vi−1) o B(Vi+1, Vi). Para cada jugador Vi, considera un conjunto finito de estrategias Xi dado por Xi = X ∪ {vj | vj es un punto de evento para Vi}. Se ha demostrado en [9] que para cualquier i = 2, . . . , n, la política de mejor respuesta B(Vi, Vi−1) tiene como máximo 2n + 4 puntos de eventos de Vi. Dado que requerimos N > 5n, tenemos |Xi| ≤ 2N; asumimos sin pérdida de generalidad que |Xi| = 2N. Ordena los elementos de Xi en orden creciente como x1 i = 0 < x2 i < · · · < x2N i. Nos referiremos a las estrategias en Xi como estrategias discretas del jugador Vi; un perfil de estrategia en el que cada jugador tiene una estrategia discreta se referirá como un perfil de estrategia discreta. Ahora demostraremos que incluso si restringimos a cada jugador Vi a estrategias de Xi, los jugadores aún pueden lograr un equilibrio de Nash, y además, el mejor equilibrio de Nash (con respecto al bienestar social) tiene un pago total de al menos M(G) - siempre y cuando N sea lo suficientemente grande. Sea s un perfil de estrategia que maximiza el bienestar social. Es decir, sea s = (s1, . . . , sn) donde si es la estrategia mixta del jugador Vi y EP(s) = M(G). Para i = 1, . . . , n, sea ti = max{xj i | xj i ≤ si}. Primero, demostraremos que el perfil estratégico t = (t1, . . . , tn) es un equilibrio de Nash para G. Fijemos cualquier i, 1 < i ≤ n, y sea R = [v1, v2]×[u1, u2] el rectángulo en B(Vi, Vi−1) que contiene (si, si−1). Dado que v1 es un punto de evento Vi de B(Vi, Vi−1), tenemos v1 ≤ ti, por lo que el punto (ti, si−1) está dentro de R. De manera similar, el punto u1 es un punto de evento Vi−1 de B(Vi, Vi−1), por lo que tenemos u1 ≤ ti−1, y por lo tanto el punto (ti, ti−1) está dentro de R. Esto significa que para cualquier i, 1 < i ≤ n, tenemos ti−1 ∈ pbrVi−1 (ti), lo que implica que t = (t1, . . . , tn) es un equilibrio de Nash para G. Ahora, estimemos la pérdida esperada en el bienestar social causada por jugar t en lugar de s. LEMA 3. Para cualquier par de perfiles de estrategia t, s tales que |ti − si| ≤ δ, tenemos |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ para cualquier i = 1, . . . , n. PRUEBA. Sea Pi klm el pago del jugador Vi, cuando juega k, Vi−1 juega l y Vi+1 juega m. Fijemos i = 1, . . . , n y para k, l, m ∈ {0, 1}, definamos tklm = tk i−1(1 − ti−1)1−k tl i(1 − ti)1−l tm i+1(1 − ti+1)1−m sklm = sk i−1(1 − si−1)1−k sl i(1 − si)1−l sm i+1(1 − si+1)1−m. Mostraremos ahora que para cualquier k, l, m ∈ {0, 1} tenemos |tklm − sklm | ≤ 3δ; claramente, esto implica el lema. De hecho, fijar k, l, m ∈ {0, 1}. Establecer x = tk i−1(1 − ti−1)1−k , x = sk i−1(1 − si−1)1−k , y = tl i(1 − ti)1−l , y = sl i(1 − si)1−l , z = tm i+1(1 − ti+1)1−m , z = sm i+1(1 − si+1)1−m. Observa que si k = 0 entonces x − x = (1 − ti−1) − (1 − si−1), y si k = 1 entonces x − x = ti−1 − si−1, por lo tanto |x − x | ≤ δ. Un argumento similar muestra |y − y | ≤ δ, |z − z | ≤ δ. Además, tenemos x, x, y, y, z, z ∈ [0, 1]. Por lo tanto, |tklm − sklm | = |xyz − x y z | = |xyz − x yz + x yz − x y z + x y z − x y z | ≤ |x − x |yz + |y − y |x z + |z − z |x y ≤ 3δ. El Lema 3 implica que Pn i=1 |EPVi (s) − EPVi (t)| ≤ 24nPmaxδ, por lo que al elegir δ < /(24nPmax), o, equivalentemente, estableciendo N > 24nPmax/ , podemos asegurar que el pago esperado total para el perfil estratégico t esté dentro de de lo óptimo. Ahora demostraremos que podemos encontrar el mejor equilibrio de Nash discreto (con respecto al bienestar social) utilizando programación dinámica. Dado que t es un perfil de estrategia discreto, esto significa que el perfil de estrategia encontrado por nuestro algoritmo será al menos tan bueno como t. Defina ml,k i como la máxima ganancia total que V1, . . . , Vi−1 pueden lograr si cada Vj, j ≤ i, elige una estrategia de Xj, para cada j < i la estrategia de Vj es una mejor respuesta potencial a la estrategia de Vj+1, y, además, Vi−1 juega xl i−1, Vi juega xk i. Si no hay forma de elegir las estrategias para V1, . . . , Vi−1 que cumplan con estas condiciones, establecemos ml,k i = −∞. Los valores ml,k i , i = 1, . . . , n; k, l = 1, . . . , N, pueden ser calculados de forma inductiva, de la siguiente manera. Tenemos ml,k 1 = 0 para k, l = 1, . . . , N. Ahora, supongamos que ya hemos calculado ml,k j para todos los j < i; k, l = 1, . . . , N. Para calcular mk,l i , primero verificamos si (xk i , xl i−1) ∈ B(Vi, Vi−1). Si este no es el caso, tenemos ml,k i = −∞. De lo contrario, considera el conjunto Y = Xi−2 ∩ pbrVi−2 (xl i−1), es decir, el conjunto de todas las estrategias discretas de Vi−2 que son potenciales mejores respuestas a xl i−1. La prueba del Teorema 1 en [9] implica que el conjunto pbrVi−2 (xl i−1) no está vacío: el jugador Vi−2 tiene una mejor respuesta potencial a cualquier estrategia de Vi−1, en particular, xl i−1. Por la construcción del conjunto Xi−2, esto implica que Y no está vacío. Para cada xj i−2 ∈ Y, dejemos que pjlk sea la ganancia que Vi−1 recibe cuando Vi−2 juega xj i−2, Vi−1 juega xl i−1, y Vi juega xk i. Claramente, pjlk se puede calcular en tiempo constante. Entonces tenemos ml,k i = max{mj,l i−1 + pjlk | xj i−2 ∈ Y }. Finalmente, supongamos que hemos calculado ml,k n para l, k = 1, . . . , N. Todavía necesitamos tener en cuenta el pago del jugador Vn. Por lo tanto, consideramos todos los pares (xk n, xl n−1) que satisfacen xl n−1 ∈ pbrVn−1 (xk n), y elegimos aquel que maximiza la suma de mk,l n y la ganancia de Vn cuando juega xk n y Vn−1 juega xl n−1. Esto resulta en el pago total máximo que los jugadores pueden lograr en un equilibrio de Nash utilizando estrategias discretas; el perfil de estrategia real que produce este pago puede ser reconstruido utilizando técnicas estándar de programación dinámica. Es fácil ver que cada ml,k se puede calcular en tiempo O(N), es decir, todos ellos se pueden calcular en tiempo O(nN3). Recuerde que debemos seleccionar N ≥ (24nPmax)/ para asegurarnos de que el perfil estratégico que producimos tenga un pago total que esté dentro de lo óptimo. Concluimos que podemos calcular una -aproximación al mejor equilibrio de Nash en tiempo O(n4 P3 max/ 3 ). Esto completa la demostración del Teorema 3. Para enunciar nuestro resultado para el caso general (es decir, cuando el grafo subyacente es un árbol de grado acotado en lugar de un camino), necesitamos notación adicional. Si G tiene n jugadores, sea q(n) una cota superior en el número de puntos de evento en la representación de cualquier política de mejor respuesta. Es decir, asumimos que para cualquier vértice U con padre V, B(V, U) tiene como máximo q(n) puntos de evento. Estaremos interesados en la situación en la que q(n) sea un polinomio en n. TEOREMA 4. Sea G un juego gráfico de n jugadores en un árbol en el que cada nodo tiene a lo sumo Δ hijos. Supongamos que se nos da un conjunto de políticas de mejor respuesta para G en el que cada política de mejor respuesta B(V, U) está representada por un conjunto de rectángulos con un máximo de q(n) puntos de evento. Para cualquier > 0, existe un algoritmo que construye un equilibrio de Nash s para G que satisface EP(s) ≥ M(G) − . El tiempo de ejecución del algoritmo es polinómico en n, Pmax y −1 siempre que el árbol tenga grado acotado (es decir, Δ = O(1)) y q(n) sea un polinomio en n. En particular, si N = max((Δ + 1)q(n) + 1, n2Δ+2 (Δ + 2)Pmax −1 ) y Δ > 1 entonces el tiempo de ejecución es O(nΔ(2N)Δ. Para la demostración de este teorema, ver [10]. 4.1 Un algoritmo de tiempo polinómico para aproximación multiplicativa El tiempo de ejecución de nuestro algoritmo es seudopolinómico en lugar de polinómico, porque incluye un factor que es polinómico en Pmax, la entrada máxima (en valor absoluto) en cualquier matriz de pagos. Si estamos interesados en una aproximación multiplicativa en lugar de una aditiva, esto se puede mejorar a polinomial. Primero, hay que tener en cuenta que no podemos esperar una aproximación multiplicativa para todas las entradas. Es decir, no podemos esperar tener un algoritmo que calcule un equilibrio de Nash con una ganancia total de al menos (1 − )M(G). Si tuviéramos dicho algoritmo, entonces para juegos gráficos G con M(G) = 0, se requeriría que el algoritmo produjera la solución óptima. Para demostrar que esto es inviable, observe que podemos usar las técnicas de la Sección 3.2 para construir dos juegos gráficos de coeficientes enteros en caminos de longitud O(n) de tal manera que para algún X ∈ R, el pago total máximo en el primer juego sea X, el pago total máximo en el segundo juego sea −X, y para ambos juegos, los perfiles estratégicos que logran los pagos totales máximos involucran números algebraicos de grado n. Al combinar los dos juegos de modo que el primer vértice del segundo juego se conecte con el último vértice del primer juego, pero los pagos de todos los jugadores no cambien, obtenemos un juego gráfico en el que el mejor equilibrio de Nash tiene un pago total de 0, sin embargo, las estrategias que conducen a este pago tienen una alta complejidad algebraica. Sin embargo, podemos lograr una aproximación multiplicativa cuando todas las entradas de las matrices de pago son positivas y la relación entre cualquier par de entradas está acotada polinómicamente. Recuerde que asumimos que todos los pagos son enteros, y sea Pmin > 0 la entrada más pequeña de cualquier matriz de pagos. En este caso, para cualquier perfil estratégico, la ganancia para el jugador i es al menos Pmin, por lo que la ganancia total en el equilibrio de Nash que maximiza el bienestar social satisface M(G) ≥ nPmin. Además, el Lema 3 implica que al elegir δ < /(24Pmax/Pmin), podemos asegurar que el equilibrio de Nash t producido por nuestro algoritmo cumple nX i=1 EPVi (s) − nX i=1 EPVi (t) ≤ 24Pmaxδn ≤ nPmin ≤ M(G), es decir, para este valor de δ tenemos Pn i=1 EPVi (t) ≥ (1 − )M(G). Recuerde que el tiempo de ejecución de nuestro algoritmo es O(nN3), donde N debe ser seleccionado para satisfacer N > 5n, N = 1/δ. Se deduce que si Pmin > 0, Pmax/Pmin = poli(n), podemos elegir N de manera que nuestro algoritmo proporcione una garantía de aproximación multiplicativa y se ejecute en tiempo polinómico en n y 1/ . 5. EQUILIBRIOS DE NASH DE PAGO ACOTADO Otra forma natural de definir qué es un buen equilibrio de Nash es exigir que el pago esperado de cada jugador supere cierto umbral. Estos umbrales no tienen que ser iguales para todos los jugadores. En este caso, además de las matrices de pagos de los n jugadores, se nos dan n números T1, . . . , Tn, y nuestro objetivo es encontrar un equilibrio de Nash en el que el pago del jugador i sea al menos Ti, o informar que no existe tal equilibrio de Nash. Resulta que podemos diseñar un FPTAS para este problema utilizando las mismas técnicas que en la sección anterior. TEOREMA 5. Dado un juego gráfico G en un camino de n vértices y n números racionales T1, . . . , Tn, supongamos que existe un perfil estratégico s tal que s es un equilibrio de Nash para G y EPVi (s) ≥ Ti para i = 1, . . . , n. Entonces para cualquier > 0 podemos encontrar en tiempo O(max{nP3 max/ 3 , n4 / 3 }) un perfil estratégico s tal que s es un equilibrio de Nash para G y EPVi (s) ≥ Ti − para i = 1, . . . , n. PRUEBA. La prueba es similar a la del Teorema 3. Primero, construimos las políticas de mejor respuesta para todos los jugadores, elegimos N > 5n, y construimos los conjuntos Xi, i = 1, . . . , n, como se describe en la demostración del Teorema 3. Consideremos un perfil estratégico s tal que s sea un equilibrio de Nash para G y EPVi (s) ≥ Ti para i = 1, . . . , n. Construimos un perfil estratégico ti = max{xj i | xj i ≤ si} y usamos el mismo argumento que en la demostración del Teorema 3 para mostrar que t es un equilibrio de Nash para G. Según el Lema 3, tenemos |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ, por lo que eligiendo δ < /(24Pmax), o, equivalentemente, N > max{5n, 24Pmax/ }, podemos asegurar que EPVi (t) ≥ Ti − para i = 1, . . . , n. Ahora, utilizaremos la programación dinámica para encontrar un equilibrio de Nash discreto que cumpla con EPVi (t) ≥ Ti − para i = 1, . . . , n. Dado que t es un perfil estratégico discreto, nuestro algoritmo tendrá éxito siempre que haya un perfil estratégico s con EPVi (s) ≥ Ti− para i = 1, . . . , n. Sea zl,k i = 1 si hay un perfil estratégico discreto tal que para cualquier j < i la estrategia del jugador Vj es una mejor respuesta potencial a la estrategia de Vj+1, el pago esperado de Vj es al menos Tj − , y, además, Vi−1 juega xl i−1, Vi juega xk i. De lo contrario, deja que zl,k i = 0. Podemos calcular zl,k i, i = 1, . . . , n; k, l = 1, . . . , N de forma inductiva, de la siguiente manera. Tenemos zl,k 1 = 1 para k, l = 1, . . . , N. Ahora, supongamos que ya hemos calculado zl,k j para todos los j < i; k, l = 1, . . . , N. Para calcular zk,l i , primero verificamos si (xk i , xl i−1) ∈ B(Vi, Vi−1). Si este 168 no es el caso, claramente, zk,l i = 0. De lo contrario, considera el conjunto Y = Xi−2 ∩ pbrVi−2 (xl i−1), es decir, el conjunto de todas las estrategias discretas de Vi−2 que son potenciales mejores respuestas a xl i−1. Se ha demostrado en la prueba del Teorema 3 que Y = ∅. Para cada xj i−2 ∈ Y, dejemos que pjlk sea la ganancia que Vi−1 recibe cuando Vi−2 juega xj i−2, Vi−1 juega xl i−1, y Vi juega xk i. Claramente, pjlk se puede calcular en tiempo constante. Si existe un xj i−2 ∈ Y tal que zj,l i−1 = 1 y pjlk ≥ Ti−2 − , establece zl,k i = 1. De lo contrario, establezca zl,k i = 0. Habiendo calculado zl,k n , l, k = 1, . . . , N, verificamos si zl,k n = 1 para algún par (l, k). Si existe tal par de índices, instruimos a Vn a jugar xk n y utilizamos técnicas de programación dinámica (o, de manera equivalente, el paso descendente del algoritmo de [13]) para encontrar un equilibrio de Nash s que satisfaga EPVi (s ) ≥ Ti − para i = 1, . . . , n (recordemos que Vn es un jugador ficticio, es decir, asumimos Tn = 0, EPn(s ) = 0 para cualquier elección de s ). Si zl,k n = 0 para todo l, k = 1, . . . , N, no hay un equilibrio de Nash discreto s que satisfaga EPVi (s) ≥ Ti − para i = 1, . . . , n y, por lo tanto, no hay un equilibrio de Nash s (no necesariamente discreto) tal que EPVi (s) ≥ Ti para i = 1, . . . , n. El análisis del tiempo de ejecución es similar al de la Teorema 3; concluimos que el tiempo de ejecución de nuestro algoritmo es O(nN3) = O(max{nP3 max/3, n4/3}). OBSERVACIÓN 1. El Teorema 5 se puede extender a árboles de grado acotado de la misma manera que el Teorema 4. 5.1 Cálculo Exacto Otro enfoque para encontrar equilibrios de Nash con pagos acotados se basa en calcular de forma inductiva los subconjuntos de las políticas de mejor respuesta de todos los jugadores para excluir los puntos que no proporcionan pagos suficientes a algunos de los jugadores. Formalmente, decimos que una estrategia v del jugador V es una mejor respuesta potencial a una estrategia w de su padre W con respecto a un vector de umbral T = (T1, . . . , Tn), (denotado por v ∈ pbrV (w, T)) si hay un equilibrio en la instancia G(V,W), W = w en el que V juega la estrategia mixta v y la ganancia para cualquier jugador Vi aguas abajo de V (incluyendo a V) es al menos Ti. La mejor política de respuesta para V con respecto a un vector umbral T se define como B(W, V, T) = {(w, v) | v ∈ pbrV (w, T), w ∈ [0, 1]}. Es fácil ver que si alguno de los conjuntos B(Vj, Vj−1, T), j = 1, . . . , n, está vacío, significa que es imposible proporcionar a todos los jugadores los pagos esperados prescritos por T. De lo contrario, se puede aplicar el paso descendente del algoritmo original de [13] para encontrar un equilibrio de Nash. Dado que asumimos que Vn es un vértice ficticio cuya ganancia es idénticamente 0, el equilibrio de Nash con estas ganancias existe siempre y cuando Tn ≤ 0 y B(Vn, Vn−1, T) no esté vacío. Usando las técnicas desarrolladas en [9], no es difícil demostrar que para cualquier j = 1, . . . , n, el conjunto B(Vj , Vj−1, T) consiste en un número finito de rectángulos, y se puede calcular B(Vj+1, Vj , T) dado B(Vj , Vj−1, T). La ventaja de este enfoque es que nos permite representar todos los equilibrios de Nash que proporcionan los pagos requeridos a los jugadores. Sin embargo, no es probable que sea práctico, ya que resulta que los rectángulos que aparecen en la representación de B(Vj , Vj−1, T) pueden tener coordenadas irracionales. AFIRMACIÓN 6. Existe un juego gráfico G en un camino de 3 vértices UVW y un vector T = (T1, T2, T3) tal que B(V, W, T) no puede ser representado como una unión de un número finito de rectángulos con coordenadas racionales. PRUEBA. Definimos las recompensas para los jugadores en G de la siguiente manera. La ganancia para U es idénticamente 0, es decir, P0 (U) = P1 (U) = 0. Usando la Reclamación 1, seleccionamos los pagos para V de manera que P0 (V) = uw, P1 (V) = P0 (V) + w - .8u - .1, donde u y w son las estrategias (mixtas) de U y W, respectivamente. Se deduce que V es indiferente entre jugar 0 y 1 si y solo si w = f(u) = .8u + .1; observe que para cualquier u ∈ [0, 1] tenemos f(u) ∈ [0, 1]. No es difícil ver que tenemos B(W, V) = [0, .1]×{0} ∪ [.1, .9]×[0, 1] ∪ [.9, 1]×{1}. Los pagos para W no son importantes para nuestra construcción; por ejemplo, establezca P0(W) = P0(W) = 0. Ahora, establezca T = (0, 1/8, 0), es decir, estamos interesados en equilibrios de Nash en los que el pago esperado de V sea al menos 1/8. Supongamos que w ∈ [0, 1]. El jugador V puede jugar una estrategia mixta v cuando W está jugando w siempre que U juegue u = f−1 (w) = 5w/4 − 1/8 (para asegurar que V sea indiferente entre 0 y 1) y P0 (V) = P1 (V) = uw = w(5w/4 − 1/8) ≥ 1/8. La última condición se cumple si w ≤ (1 − √ 41)/20 < 0 o w ≥ (1 + √ 41)/20. Ten en cuenta que tenemos .1 < (1 + √ 41)/20 < .9. Para cualquier otro valor de w, cualquier estrategia de U hace que V prefiera una de las estrategias puras o no le proporciona un pago esperado suficiente. También hay algunos valores de w para los cuales V puede jugar una estrategia pura (0 o 1) como una mejor respuesta potencial a W y garantizarse a sí mismo un pago esperado de al menos 1/8; se puede demostrar que estos valores de w forman un número finito de segmentos en [0, 1]. Concluimos que cualquier representación de B(W, V, T) como una unión de un número finito de rectángulos debe contener un rectángulo de la forma [(1 + √ 41)/20, w] × [v, v] para algún w, v, v ∈ [0, 1]. Por otro lado, se puede demostrar que para cualquier matriz de pagos enteros y vectores de umbral, y para cualquier j = 1, . . . , n − 1, los conjuntos B(Vj+1, Vj, T) no contienen rectángulos de la forma [u , u ]×{v} o {v}×[w , w ], donde v ∈ R\\Q. Esto significa que si B(Vn, Vn−1, T) no está vacío, es decir, hay un equilibrio de Nash con pagos prescritos por T, entonces el paso descendente del algoritmo de [13] siempre puede elegir un perfil estratégico que forme un equilibrio de Nash, proporcione un pago de al menos Ti al jugador Vi y no tenga coordenadas irracionales. Por lo tanto, a diferencia del equilibrio de Nash que maximiza el bienestar social, no es necesario trabajar con números irracionales, y el hecho de que el algoritmo discutido en esta sección deba hacerlo puede considerarse como un argumento en contra de utilizar este enfoque. OTROS CRITERIOS PARA SELECCIONAR UN EQUILIBRIO DE NASH En esta sección, consideramos varios otros criterios que pueden ser útiles para seleccionar un equilibrio de Nash. 6.1 Combinando la maximización del bienestar con límites en los pagos En muchos escenarios de la vida real, queremos maximizar el bienestar social sujeto a ciertas restricciones en los pagos a los jugadores individuales. Por ejemplo, es posible que queramos asegurarnos de que ningún jugador obtenga una ganancia esperada negativa, o que la ganancia esperada para el jugador i sea al menos Pi max − ξ, donde Pi max es la entrada máxima de la matriz de ganancias de i y ξ es un parámetro fijo. Formalmente, dado un juego gráfico G y un vector T1, . . . , Tn, sea S el conjunto de todos los equilibrios de Nash s de G que satisfacen Ti ≤ EPVi (s) para i = 1, . . . , n, y sea ˆs = argmaxs∈S EP(s). Si el conjunto S no está vacío, podemos encontrar un equilibrio de Nash ˆs que esté -cerca de satisfacer los límites de pago y esté dentro de ε de ˆs con respecto al pago total al combinar los algoritmos de la Sección 4 y la Sección 5. Es decir, para un dado > 0, elige δ como en la demostración del Teorema 3, y deja que Xi sea el conjunto de todas las estrategias discretas del jugador Vi (para una definición formal, consulta la demostración del Teorema 3). Combinando las pruebas del Teorema 3 y el Teorema 5, podemos ver que el perfil de estrategia ˆt dado por ˆti = max{xj i | xj i ≤ ˆsi} satisface EPVi (ˆt) ≥ Ti − , |EP(ˆs) − EP(ˆt)| ≤ . Define ˆml,k i como la máxima ganancia total que V1, . . . , Vi−1 pueden lograr si cada Vj, j ≤ i, elige una estrategia de Xj, para cada j < i la estrategia de Vj es una mejor respuesta potencial a la estrategia de Vj+1 y la ganancia para el jugador Vj es al menos Tj − , y, además, Vi−1 juega xl i−1, Vi juega xk i. Si no hay forma de elegir las estrategias para V1, . . . , Vi−1 que cumplan con estas condiciones, establecemos ml,k i = −∞. El ˆml,k se puede calcular mediante programación dinámica de manera similar al ml,k y zl,k en las demostraciones de los Teoremas 3 y 5. Finalmente, como en la demostración del Teorema 3, utilizamos ml,k n para seleccionar el mejor equilibrio de Nash discreto sujeto a las restricciones de pago. Incluso de manera más general, es posible que deseemos maximizar el beneficio total para un subconjunto de jugadores (se supone que son capaces de redistribuir justamente las ganancias entre ellos mismos) mientras garantizamos ciertos beneficios esperados a (un subconjunto de) los otros jugadores. Este problema puede ser abordado de manera similar. 6.2 Un enfoque minimax Una medida más igualitaria de la calidad de un equilibrio de Nash es el pago esperado mínimo para un jugador. La solución óptima con respecto a esta medida es un equilibrio de Nash en el cual la ganancia esperada mínima para un jugador es máxima. Para encontrar una aproximación a dicho equilibrio de Nash, podemos combinar el algoritmo de la Sección 5 con la búsqueda binaria en el espacio de límites inferiores potenciales. Ten en cuenta que la ganancia esperada para cualquier jugador Vi dada una estrategia s siempre cumple con −Pmax ≤ EPVi (s) ≤ Pmax. Para un fijo > 0, comenzamos estableciendo T = −Pmax, T = Pmax, T∗ = (T + T )/2. Luego ejecutamos el algoritmo de la Sección 5 con T1 = · · · = Tn = T∗. Si el algoritmo tiene éxito al encontrar un equilibrio de Nash s que cumple con EPVi (s) ≥ T∗ − para todo i = 1, . . . , n, establecemos T = T∗, T∗ = (T + T)/2; de lo contrario, establecemos T = T∗, T∗ = (T + T)/2 y repetimos el ciclo. Repetimos este proceso hasta que |T − T | ≤ . No es difícil comprobar que para cualquier p ∈ R, si existe un equilibrio de Nash s tal que mini=1,...,n EPVi (s) ≥ p, entonces nuestro algoritmo devuelve un equilibrio de Nash s que cumple mini=1,...,n EPVi (s) ≥ p−2. El tiempo de ejecución de nuestro algoritmo es O(max{nP3 max log −1 / 3 , n4 log −1 / 3 }). 6.3 Igualando los pagos Cuando las matrices de pagos de los jugadores no son muy diferentes, es razonable exigir que los pagos esperados para los jugadores tampoco difieran mucho. Ahora demostraremos que los equilibrios de Nash en esta categoría también pueden aproximarse en tiempo polinómico. De hecho, observe que el algoritmo de la Sección 5 puede ser fácilmente modificado para tratar con límites superiores en las ganancias individuales en lugar de límites inferiores. Además, podemos calcular de manera eficiente una aproximación a un equilibrio de Nash que cumpla tanto con el límite superior como con el límite inferior para cada jugador. Más precisamente, supongamos que se nos da un juego gráfico G, 2n números racionales T1, . . . , Tn, T1, . . . , Tn y > 0. Entonces, si existe un perfil estratégico s tal que s es un equilibrio de Nash para G y Ti ≤ EPVi (s) ≤ Ti para i = 1, . . . , n, podemos encontrar un perfil estratégico s tal que s es un equilibrio de Nash para G y Ti − ≤ EPVi (s) ≤ Ti + para i = 1, . . . , n. El algoritmo modificado también se ejecuta en tiempo O(max{nP3 max/ 3 , [4]n4 / 3 }). Esta observación nos permite aproximar equilibrios de Nash en los que las ganancias esperadas de todos los jugadores difieren en un máximo de ξ para cualquier ξ fijo > 0. Dado un > 0, establecemos T1 = · · · = Tn = −Pmax, T1 = · · · = Tn = −Pmax + ξ + , y ejecutamos la versión modificada del algoritmo de la Sección 5. Si no logra encontrar una solución, incrementamos todos los Ti, Ti por y el bucle. Continuamos hasta que el algoritmo encuentre una solución, o Ti ≥ Pmax. Supongamos que existe un equilibrio de Nash s que satisface |EPVi (s) − EPVj (s)| ≤ ξ para todo i, j = 1, . . . , n. Definamos r = mini=1,...,n EPVi (s); tenemos r ≤ EPVi (s) ≤ r + ξ para todo i = 1, . . . , n. Existe un k ≥ 0 tal que −Pmax + (k − 1) ≤ r ≤ −Pmax + k. Durante el paso k del algoritmo, establecemos T1 = · · · = Tn = −Pmax +(k−1) , es decir, tenemos r− ≤ Ti ≤ r, r + ξ ≤ Ti ≤ r + ξ + . Es decir, el equilibrio de Nash s satisface Ti ≤ r ≤ EPVi (s) ≤ r + ξ ≤ Ti, lo que significa que cuando Ti se establece en −Pmax + (k − 1), nuestro algoritmo garantiza producir un equilibrio de Nash t que satisface r − 2 ≤ Ti − ≤ EPVi (t) ≤ Ti + ≤ r + ξ + 2. Concluimos que siempre que exista un equilibrio de Nash s, nuestro algoritmo produce un equilibrio de Nash t que satisface |EPVi (t) − EPVj (t)| ≤ ξ + 4 para todo i, j = 1, . . . , n. El tiempo de ejecución de este algoritmo es O(max{nP3 max/ 4 , n4 / 4 }). También debemos tener en cuenta que podemos encontrar el valor más pequeño de ξ para el cual existe un equilibrio de Nash combinando este algoritmo con una búsqueda binaria en el espacio ξ = [0, 2Pmax]. Esto identifica una aproximación al equilibrio de Nash más justo, es decir, uno en el que las ganancias esperadas de los jugadores difieren por la menor cantidad posible. Finalmente, cabe destacar que todos los resultados de esta sección pueden extenderse a árboles de grado acotado. 7. CONCLUSIONES Hemos estudiado el problema de la selección de equilibrio en juegos gráficos en árboles de grado acotado. Consideramos varios criterios para seleccionar un equilibrio de Nash, como maximizar el bienestar social, garantizar un límite inferior en la recompensa esperada de cada jugador, etc. Primero, nos enfocamos en la complejidad algebraica de un equilibrio de Nash que maximiza el bienestar social, y demostramos resultados negativos contundentes para ese problema. Es decir, demostramos que incluso para juegos gráficos en caminos, cualquier número algebraico α ∈ [0, 1] puede ser la única estrategia disponible para algún jugador en todas las equilibrios de Nash que maximizan el bienestar social. Esto contrasta fuertemente con el hecho de que los juegos gráficos en árboles siempre poseen un equilibrio de Nash en el que las estrategias de todos los jugadores son números racionales. Luego proporcionamos algoritmos de aproximación para seleccionar equilibrios de Nash con propiedades especiales. Si bien el problema de encontrar equilibrios de Nash aproximados para diversas clases de juegos ha recibido mucha atención en los últimos años, la mayoría de los trabajos existentes tienen como objetivo encontrar equilibrios de Nash que satisfagan (o estén cerca de satisfacer) ciertas propiedades. Nuestro enfoque es diferente en que insistimos en producir un equilibrio de Nash exacto, que está cerca de satisfacer un requisito dado. Como se argumenta en la introducción, hay varias razones para preferir una solución que constituya un equilibrio de Nash exacto. Nuestros algoritmos son esquemas de aproximación de tiempo polinomial completo, es decir, su tiempo de ejecución es polinomial en el inverso del parámetro de aproximación, aunque pueden ser seudopolinomiales con respecto al tamaño de la entrada. Bajo restricciones leves en las entradas, estas pueden ser modificadas para ser verdaderamente polinomiales. Este es el resultado positivo más fuerte que se puede obtener para un problema cuyas soluciones exactas pueden ser difíciles de representar, como es el caso de muchos de los problemas considerados aquí. Mientras demostramos nuestros resultados para juegos en un camino, pueden generalizarse a cualquier árbol para el cual las políticas de mejor respuesta tengan representaciones compactas como uniones de rectángulos. En la versión completa del artículo describimos nuestros algoritmos para el caso general. Un trabajo adicional en esta línea podría incluir extensiones a los tipos de garantías buscadas para los equilibrios de Nash, como garantizar los pagos totales para subconjuntos de jugadores, seleccionar equilibrios en los que algunos jugadores estén recibiendo pagos significativamente más altos que sus pares, etc. Sin embargo, en este momento es quizás más importante investigar si los equilibrios de Nash de los juegos gráficos pueden ser calculados de manera descentralizada, en contraste con los algoritmos que hemos introducido aquí. Es natural preguntarse si nuestros resultados o los de [9] pueden generalizarse a juegos con tres o más acciones. Sin embargo, parece que esto hará el análisis significativamente más difícil. En particular, cabe destacar que se pueden considerar los juegos de pago limitado como un caso especial muy restringido de juegos con tres acciones por jugador. Es decir, dado un juego de dos acciones con límites de pago, considera un juego en el que cada jugador Vi tiene una tercera acción que le garantiza un pago de Ti sin importar lo que hagan los demás. Luego, verificar si existe un equilibrio de Nash en el cual ninguno de los jugadores asigna una probabilidad distinta de cero a su tercera acción es equivalente a comprobar si existe un equilibrio de Nash que cumpla con los límites de pago en el juego original, y la Sección 5.1 muestra que encontrar una solución exacta a este problema requiere nuevas ideas. Alternativamente, puede ser interesante buscar resultados similares en el contexto de equilibrios correlacionados (CE), especialmente dado que el mejor CE puede tener un valor más alto (pago esperado total) que el mejor NE. La proporción entre estos valores se llama el valor de mediación en [1]. Se sabe por [1] que el valor de mediación de juegos de 2 jugadores y 2 acciones con pagos no negativos es a lo sumo 4 3, y presentan un juego de 3 jugadores para el cual es infinito. Además, un ejemplo de 2 jugadores y 3 acciones del [1] también tiene un valor de mediación infinito. 8. REFERENCIAS [1] I. Ashlagi, D. Monderer y M. Tenneholtz, Sobre el Valor de la Correlación, Actas del seminario de Dagstuhl 05011 (2005) [2] R. Aumann, Subjetividad y Correlación en Estrategias Aleatorias, Revista de Economía Matemática 1 pp. 67-96 (1974) [3] B. Blum, C. R. Shelton y D. Koller, Un Método de Continuación para Equilibrios de Nash en Juegos Estructurados, Actas de IJCAI03 [4] X. Chen, X. Deng y S. Teng, Computación de Equilibrios de Nash: Aproximación y Complejidad Suavizada, Actas de FOCS06 [5] X. Chen, X. Deng, Resolviendo la Complejidad del Equilibrio de Nash de 2 Jugadores, Actas de FOCS06 [6] V. Conitzer y T. Sandholm, Resultados de Complejidad sobre Equilibrios de Nash, Actas de IJCAI03 [7] C. Daskalakis, P. W. Goldberg y C. H. Papadimitriou, La Complejidad de Calcular un Equilibrio de Nash, Actas de STOC06 [8] R. S. Datta, Universalidad de los Equilibrios de Nash, Matemáticas de la Investigación Operativa 28:3, 2003 [9] E. Elkind, L. A. Goldberg y P. W. Goldberg, Equilibrios de Nash en Juegos Gráficos en Árboles Revisitados, Actas de ACM EC06 [10] E. Elkind, L. A. Goldberg y P. W. Goldberg, Computando Buenos Equilibrios de Nash en Juegos Gráficos, http://arxiv.org/abs/cs.GT/0703133 [11] I. Gilboa y E. Zemel, Equilibrios de Nash y Correlacionados: Algunas Consideraciones de Complejidad, Juegos y Comportamiento Económico, 1 pp. 80-93 (1989) [12] P. W. Goldberg y C. H. Papadimitriou, Reducibilidad entre Problemas de Equilibrio, Actas de STOC06 [13] M. Kearns, M. Littman y S. Singh, Modelos Gráficos para la Teoría de Juegos, Actas de UAI01 [14] M. Littman, M. Kearns y S. Singh, Un Algoritmo Exacto Eficiente para Juegos Gráficos Singularmente Conectados, Actas de NIPS01 [15] R. Lipton y E. Markakis, Equilibrios de Nash a través de Ecuaciones Polinomiales, Actas de LATIN04 [16] L. Ortiz y M. Kearns, Propagación de Nash para Juegos Gráficos con Lazos, Actas de NIPS03 [17] C.H. Papadimitriou, Computando equilibrios correlacionados en juegos de varios jugadores, Actas de STOC05 [18] C.H. Papadimitriou y T. Roughgarden, Computando equilibrios en juegos de múltiples jugadores, Actas de SODA05 [19] D. Vickrey y D. Koller, Algoritmos multiagente para resolver juegos gráficos, Actas de AAAI02 171 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "distributing profit": {
            "translated_key": "distribuir las ganancias",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Computing Good Nash Equilibria in Graphical Games ∗ Edith Elkind Hebrew University of Jerusalem, Israel, and University of Southampton, Southampton, SO17 1BJ, U.K. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K. ABSTRACT This paper addresses the problem of fair equilibrium selection in graphical games.",
                "Our approach is based on the data structure called the best response policy, which was proposed by Kearns et al. [13] as a way to represent all Nash equilibria of a graphical game.",
                "In [9], it was shown that the best response policy has polynomial size as long as the underlying graph is a path.",
                "In this paper, we show that if the underlying graph is a bounded-degree tree and the best response policy has polynomial size then there is an efficient algorithm which constructs a Nash equilibrium that guarantees certain payoffs to all participants.",
                "Another attractive solution concept is a Nash equilibrium that maximizes the social welfare.",
                "We show that, while exactly computing the latter is infeasible (we prove that solving this problem may involve algebraic numbers of an arbitrarily high degree), there exists an FPTAS for finding such an equilibrium as long as the best response policy has polynomial size.",
                "These two algorithms can be combined to produce Nash equilibria that satisfy various fairness criteria.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a large community of agents, an agents behavior is not likely to have a direct effect on most other agents: rather, it is just the agents who are close enough to him that will be affected.",
                "However, as these agents respond by adapting their behavior, more agents will feel the consequences and eventually the choices made by a single agent will propagate throughout the entire community.",
                "This is the intuition behind graphical games, which were introduced by Kearns, Littman and Singh in [13] as a compact representation scheme for games with many players.",
                "In an n-player graphical game, each player is associated with a vertex of an underlying graph G, and the payoffs of each player depend on his action as well as on the actions of his neighbors in the graph.",
                "If the maximum degree of G is Δ, and each player has two actions available to him, then the game can be represented using n2Δ+1 numbers.",
                "In contrast, we need n2n numbers to represent a general n-player 2-action game, which is only practical for small values of n. For graphical games with constant Δ, the size of the game is linear in n. One of the most natural problems for a graphical game is that of finding a Nash equilibrium, the existence of which follows from Nashs celebrated theorem (as graphical games are just a special case of n-player games).",
                "The first attempt to tackle this problem was made in [13], where the authors consider graphical games with two actions per player in which the underlying graph is a boundeddegree tree.",
                "They propose a generic algorithm for finding Nash equilibria that can be specialized in two ways: an exponential-time algorithm for finding an (exact) Nash equilibrium, and a fully polynomial time approximation scheme (FPTAS) for finding an approximation to a Nash equilibrium.",
                "For any > 0 this algorithm outputs an -Nash equilibrium, which is a strategy profile in which no player can improve his payoff by more than by unilaterally changing his strategy.",
                "While -Nash equilibria are often easier to compute than exact Nash equilibria, this solution concept has several drawbacks.",
                "First, the players may be sensitive to a small loss in payoffs, so the strategy profile that is an -Nash equilibrium will not be stable.",
                "This will be the case even if there is only a small subset of players who are extremely price-sensitive, and for a large population of players it may be difficult to choose a value of that will satisfy everyone.",
                "Second, the strategy profiles that are close to being Nash equilibria may be much better with respect to the properties under consideration than exact Nash equilibria.",
                "Therefore, the (approximation to the) value of the best solution that corresponds to an -Nash equilibrium may not be indicative of what can be achieved under an exact Nash equilibrium.",
                "This is especially important if the purpose of the approximate solution is to provide a good benchmark for a system of selfish agents, as the benchmark implied by an -Nash equilibrium may be unrealistic.",
                "For these reasons, in this paper we focus on the problem of computing exact Nash equilibria.",
                "Building on ideas of [14], Elkind et al. [9] showed how to find an (exact) Nash equilibrium in polynomial time when the underlying 162 graph has degree 2 (that is, when the graph is a collection of paths and cycles).",
                "By contrast, finding a Nash equilibrium in a general degree-bounded graph appears to be computationally intractable: it has been shown (see [5, 12, 7]) to be complete for the complexity class PPAD. [9] extends this hardness result to the case in which the underlying graph has bounded pathwidth.",
                "A graphical game may not have a unique Nash equilibrium, indeed it may have exponentially many.",
                "Moreover, some Nash equilibria are more desirable than others.",
                "Rather than having an algorithm which merely finds some Nash equilibrium, we would like to have algorithms for finding Nash equilibria with various sociallydesirable properties, such as maximizing overall payoff or <br>distributing profit</br> fairly.",
                "A useful property of the data structure of [13] is that it simultaneously represents the set of all Nash equilibria of the underlying game.",
                "If this representation has polynomial size (as is the case for paths, as shown in [9]), one may hope to extract from it a Nash equilibrium with the desired properties.",
                "In fact, in [13] the authors mention that this is indeed possible if one is interested in finding an (approximate) -Nash equilibrium.",
                "The goal of this paper is to extend this to exact Nash equilibria. 1.1 Our Results In this paper, we study n-player 2-action graphical games on bounded-degree trees for which the data structure of [13] has size poly(n).",
                "We focus on the problem of finding exact Nash equilibria with certain socially-desirable properties.",
                "In particular, we show how to find a Nash equilibrium that (nearly) maximizes the social welfare, i.e., the sum of the players payoffs, and we show how to find a Nash equilibrium that (nearly) satisfies prescribed payoff bounds for all players.",
                "Graphical games on bounded-degree trees have a simple algebraic structure.",
                "One attractive feature, which follows from [13], is that every such game has a Nash equilibrium in which the strategy of every player is a rational number.",
                "Section 3 studies the algebraic structure of those Nash equilibria that maximize social welfare.",
                "We show (Theorems 1 and 2) that, surprisingly, the set of Nash equilibria that maximize social welfare is more complex.",
                "In fact, for any algebraic number α ∈ [0, 1] with degree at most n, we exhibit a graphical game on a path of length O(n) such that, in the unique social welfare-maximizing Nash equilibrium of this game, one of the players plays the mixed strategy α.1 This result shows that it may be difficult to represent an optimal Nash equilibrium.",
                "It seems to be a novel feature of the setting we consider here, that an optimal Nash equilibrium is hard to represent, in a situation where it is easy to find and represent a Nash equilibrium.",
                "As the social welfare-maximizing Nash equilibrium may be hard to represent efficiently, we have to settle for an approximation.",
                "However, the crucial difference between our approach and that of previous papers [13, 16, 19] is that we require our algorithm to output an exact Nash equilibrium, though not necessarily the optimal one with respect to our criteria.",
                "In Section 4, we describe an algorithm that satisfies this requirement.",
                "Namely, we propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within of optimal.",
                "It runs in polynomial time (Theorem 3,4) for any graphical game on a bounded-degree tree for which the data structure proposed by [13] (the so-called best response policy, defined below) is of size poly(n) (note that, as shown in [9], this is always the case when the underlying graph is a path).",
                "More pre1 A related result in a different context was obtained by Datta [8], who shows that n-player 2-action games are universal in the sense that any real algebraic variety can be represented as the set of totally mixed Nash equilibria of such games. cisely, the running time of our algorithm is polynomial in n, Pmax, and 1/ , where Pmax is the maximum absolute value of an entry of a payoff matrix, i.e., it is a pseudopolynomial algorithm, though it is fully polynomial with respect to .",
                "We show (Section 4.1) that under some restrictions on the payoff matrices, the algorithm can be transformed into a (truly) polynomial-time algorithm that outputs a Nash equilibrium whose total payoff is within a 1 − factor from the optimal.",
                "In Section 5, we consider the problem of finding a Nash equilibrium in which the expected payoff of each player Vi exceeds a prescribed threshold Ti.",
                "Using the idea from Section 4 we give (Theorem 5) a fully polynomial time approximation scheme for this problem.",
                "The running time of the algorithm is bounded by a polynomial in n, Pmax, and .",
                "If the instance has a Nash equilibrium satisfying the prescribed thresholds then the algorithm constructs a Nash equilibrium in which the expected payoff of each player Vi is at least Ti − .",
                "In Section 6, we introduce other natural criteria for selecting a good Nash equilibrium and we show that the algorithms described in the two previous sections can be used as building blocks in finding Nash equilibria that satisfy these criteria.",
                "In particular, in Section 6.1 we show how to find a Nash equilibrium that approximates the maximum social welfare, while guaranteeing that each individual payoff is close to a prescribed threshold.",
                "In Section 6.2 we show how to find a Nash equilibrium that (nearly) maximizes the minimum individual payoff.",
                "Finally, in Section 6.3 we show how to find a Nash equilibrium in which the individual payoffs of the players are close to each other. 1.2 Related Work Our approximation scheme (Theorem 3 and Theorem 4) shows a contrast between the games that we study and two-player n-action games, for which the corresponding problems are usually intractable.",
                "For two-player n-action games, the problem of finding Nash equilibria with special properties is typically NP-hard.",
                "In particular, this is the case for Nash equilibria that maximize the social welfare [11, 6].",
                "Moreover, it is likely to be intractable even to approximate such equilibria.",
                "In particular, Chen, Deng and Teng [4] show that there exists some , inverse polynomial in n, for which computing an -Nash equilibrium in 2-player games with n actions per player is PPAD-complete.",
                "Lipton and Markakis [15] study the algebraic properties of Nash equilibria, and point out that standard quantifier elimination algorithms can be used to solve them.",
                "Note that these algorithms are not polynomial-time in general.",
                "The games we study in this paper have polynomial-time computable Nash equilibria in which all mixed strategies are rational numbers, but an optimal Nash equilibrium may necessarily include mixed strategies with high algebraic degree.",
                "A correlated equilibrium (CE) (introduced by Aumann [2]) is a distribution over vectors of players actions with the property that if any player is told his own action (the value of his own component) from a vector generated by that distribution, then he cannot increase his expected payoff by changing his action.",
                "Any Nash equilibrium is a CE but the converse does not hold in general.",
                "In contrast with Nash equilibria, correlated equilibria can be found for low-degree graphical games (as well as other classes of conciselyrepresented multiplayer games) in polynomial time [17].",
                "But, for graphical games it is NP-hard to find a correlated equilibrium that maximizes total payoff [18].",
                "However, the NP-hardness results apply to more general games than the one we consider here, in particular the graphs are not trees.",
                "From [2] it is also known that there exist 2-player, 2-action games for which the expected total payoff 163 of the best correlated equilibrium is higher than the best Nash equilibrium, and we discuss this issue further in Section 7. 2.",
                "PRELIMINARIES AND NOTATION We consider graphical games in which the underlying graph G is an n-vertex tree, in which each vertex has at most Δ children.",
                "Each vertex has two actions, which are denoted by 0 and 1.",
                "A mixed strategy of a player V is represented as a single number v ∈ [0, 1], which denotes the probability that V selects action 1.",
                "For the purposes of the algorithm, the tree is rooted arbitrarily.",
                "For convenience, we assume without loss of generality that the root has a single child, and that its payoff is independent of the action chosen by the child.",
                "This can be achieved by first choosing an arbitrary root of the tree, and then adding a dummy parent of this root, giving the new parent a constant payoff function, e.g., 0.",
                "Given an edge (V, W ) of the tree G, and a mixed strategy w for W , let G(V,W ),W =w be the instance obtained from G by (1) deleting all nodes Z which are separated from V by W (i.e., all nodes Z such that the path from Z to V passes through W ), and (2) restricting the instance so that W is required to play mixed strategy w. Definition 1.",
                "Suppose that (V, W ) is an edge of the tree, that v is a mixed strategy for V and that w is a mixed strategy for W .",
                "We say that v is a potential best response to w (denoted by v ∈ pbrV (w)) if there is an equilibrium in the instance G(V,W ),W =w in which V has mixed strategy v. We define the best response policy for V , given W , as B(W, V ) = {(w, v) | v ∈ pbrV (w), w ∈ [0, 1]}.",
                "The upstream pass of the generic algorithm of [13] considers every node V (other than the root) and computes the best response policy for V given its parent.",
                "With the above assumptions about the root, the downstream pass is straightforward.",
                "The root selects a mixed strategy w for the root W and a mixed strategy v ∈ B(W, V ) for each child V of W .",
                "It instructs each child V to play v. The remainder of the downward pass is recursive.",
                "When a node V is instructed by its parent to adopt mixed strategy v, it does the following for each child U - It finds a pair (v, u) ∈ B(V, U) (with the same v value that it was given by its parent) and instructs U to play u.",
                "The best response policy for a vertex U given its parent V can be represented as a union of rectangles, where a rectangle is defined by a pair of closed intervals (IV , IU ) and consists of all points in IV × IU ; it may be the case that one or both of the intervals IV and IU consists of a single point.",
                "In order to perform computations on B(V, U), and to bound the number of rectangles, [9] used the notion of an event point, which is defined as follows.",
                "For any set A ⊆ [0, 1]2 that is represented as a union of a finite number of rectangles, we say that a point u ∈ [0, 1] on the U-axis is a Uevent point of A if u = 0 or u = 1 or the representation of A contains a rectangle of the form IV × IU and u is an endpoint of IU ; V -event points are defined similarly.",
                "For many games considered in this paper, the underlying graph is an n-vertex path, i.e., a graph G = (V, E) with V = {V1, . . . , Vn} and E = {(V1, V2), . . . , (Vn−1, Vn)}.",
                "In [9], it was shown that for such games, the best response policy has only polynomially-many rectangles.",
                "The proof that the number of rectangles in B(Vj+1, Vj) is polynomial proceeds by first showing that the number of event points in B(Vj+1, Vj ) cannot exceed the number of event points in B(Vj, Vj−1) by more than 2, and using this fact to bound the number of rectangles in B(Vj+1, Vj ).",
                "Let P0 (V ) and P1 (V ) be the expected payoffs to V when it plays 0 and 1, respectively.",
                "Both P0 (V ) and P1 (V ) are multilinear functions of the strategies of V s neighbors.",
                "In what follows, we will frequently use the following simple observation.",
                "CLAIM 1.",
                "For a vertex V with a single child U and parent W , given any A, B, C, D ∈ Q, A , B , C , D ∈ Q, one can select the payoffs to V so that P0 (V ) = Auw + Bu + Cw + D, P1 (V ) = A uw + B u + C w + D .",
                "Moreover, if all A, B, C, D, A , B , C , D are integer, the payoffs to V are integer as well.",
                "PROOF.",
                "We will give the proof for P0 (V ); the proof for P1 (V ) is similar.",
                "For i, j = 0, 1, let Pij be the payoff to V when U plays i, V plays 0 and W plays j.",
                "We have P0 (V ) = P00(1 − u)(1 − w) + P10u(1 − w) + P01(1 − u)w + P11uw.",
                "We have to select the values of Pij so that P00 − P10 − P01 + P11 = A, −P00 + P10 = B, −P00 + P01 = C, P00 = D. It is easy to see that the unique solution is given by P00 = D, P01 = C + D, P10 = B + D, P11 = A + B + C + D. The input to all algorithms considered in this paper includes the payoff matrices for each player.",
                "We assume that all elements of these matrices are integer.",
                "Let Pmax be the greatest absolute value of any element of any payoff matrix.",
                "Then the input consists of at most n2Δ+1 numbers, each of which can be represented using log Pmax bits. 3.",
                "NASH EQUILIBRIA THAT MAXIMIZE THE SOCIAL WELFARE: SOLUTIONS IN R \\ Q From the point of view of social welfare, the best Nash equilibrium is the one that maximizes the sum of the players expected payoffs.",
                "Unfortunately, it turns out that computing such a strategy profile exactly is not possible: in this section, we show that even if all players payoffs are integers, the strategy profile that maximizes the total payoff may have irrational coordinates; moreover, it may involve algebraic numbers of an arbitrary degree. 3.1 Warm-up: quadratic irrationalities We start by providing an example of a graphical game on a path of length 3 with integer payoffs such that in the Nash equilibrium that maximizes the total payoff, one of the players has a strategy in R \\ Q.",
                "In the next subsection, we will extend this example to algebraic numbers of arbitrary degree n; to do so, we have to consider paths of length O(n).",
                "THEOREM 1.",
                "There exists an integer-payoff graphical game G on a 3-vertex path UV W such that, in any Nash equilibrium of G that maximizes social welfare, the strategy, u, of the player U and the total payoff, p, satisfy u, p ∈ R \\ Q.",
                "PROOF.",
                "The payoffs to the players in G are specified as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = −uw + 3w and P1 (V ) = P0 (V ) + w(u + 2) − (u + 1), where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = u+1 u+2 .",
                "Observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "The payoff to W is 0 if it selects the same action as V and 1 otherwise.",
                "CLAIM 2.",
                "All Nash equilibria of the game G are of the form (u, 1/2, f(u)).",
                "That is, in any Nash equilibrium, V plays v = 1/2 and W plays w = f(u).",
                "Moreover, for any value of u, the vector of strategies (u, 1/2, f(u)) constitutes a Nash equilibrium.",
                "PROOF.",
                "It is easy to check that for any u ∈ [0, 1], the vector (u, 1/2, f(u)) is a Nash equilibrium.",
                "Indeed, U is content to play 164 any mixed strategy u no matter what V and W do.",
                "Furthermore, V is indifferent between 0 and 1 as long as w = f(u), so it can play 1/2.",
                "Finally, if V plays 0 and 1 with equal probability, W is indifferent between 0 and 1, so it can play f(u).",
                "Conversely, suppose that v > 1/2.",
                "Then W strictly prefers to play 0, i.e., w = 0.",
                "Then for V we have P1 (V ) = P0 (V ) − (u + 1), i.e., P1 (V ) < P0 (V ), which implies v = 0, a contradiction.",
                "Similarly, if v < 1/2, player W prefers to play 1, so we have w = 1.",
                "Hence, P1 (V ) = P0 (V ) + (u + 2) − (u + 1), i.e., P1 (V ) > P0 (V ), which implies v = 1, a contradiction.",
                "Finally, if v = 1/2, but w = f(u), player V is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "This completes the proof of Claim 2.",
                "By Claim 2, the total payoff in any Nash equilibrium of this game is a function of u.",
                "More specifically, the payoff to U is 0, the payoff to V is −uf(u) + 3f(u), and the payoff to W is 1/2.",
                "Therefore, the Nash equilibrium with the maximum total payoff corresponds to the value of u that maximizes g(u) = −u (u + 1) u + 2 + 3 u + 1 u + 2 = − (u − 3)(u + 1) u + 2 .",
                "To find extrema of g(u), we compute h(u) = − d du g(u).",
                "We have h(u) = (2u − 2)(u + 2) − (u − 3)(u + 1) (u + 2)2 = u2 + 4u − 1 (u + 2)2 .",
                "Hence, h(u) = 0 if and only if u ∈ {−2 + √ 5, −2 − √ 5}.",
                "Note that −2 + √ 5 ∈ [0, 1].",
                "The function g(u) changes sign at −2, −1, and 3.",
                "We have g(u) < 0 for g > 3, g(u) > 0 for u < −2, so the extremum of g(u) that lies between 1 and 3, i.e., u = −2 + √ 5, is a local maximum.",
                "We conclude that the social welfare-maximizing Nash equilibrium for this game is given by the vector of strategies (−2+√ 5, 1/2, (5 − √ 5)/5).",
                "The respective total payoff is 0 − ( √ 5 − 5)( √ 5 − 1) √ 5 + 1 2 = 13/2 − 2 √ 5.",
                "This concludes the proof of Theorem 1. 3.2 Strategies of arbitrary degree We have shown that in the social welfare-maximizing Nash equilibrium, some players strategies can be quadratic irrationalities, and so can the total payoff.",
                "In this subsection, we will extend this result to show that we can construct an integer-payoff graphical game on a path whose social welfare-maximizing Nash equilibrium involves arbitrary algebraic numbers in [0, 1].",
                "THEOREM 2.",
                "For any degree-n algebraic number α ∈ [0, 1], there exists an integer payoff graphical game on a path of length O(n) such that, in all social welfare-maximizing Nash equilibria of this game, one of the players plays α.",
                "PROOF.",
                "Our proof consists of two steps.",
                "First, we construct a rational expression R(x) and a segment [x , x ] such that x , x ∈ Q and α is the only maximum of R(x) on [x , x ].",
                "Second, we construct a graphical game whose Nash equilibria can be parameterized by u ∈ [x , x ], so that at the equilibrium that corresponds to u the total payoff is R(u) and, moreover, some players strategy is u.",
                "It follows that to achieve the payoff-maximizing Nash equilibrium, this player has to play α.",
                "The details follow.",
                "LEMMA 1.",
                "Given an algebraic number α ∈ [0, 1], deg(α) = n, there exist K2, . . . , K2n+2 ∈ Q and x , x ∈ (0, 1) ∩ Q such that α is the only maximum of R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 on [x , x ].",
                "PROOF.",
                "Let P(x) be the minimal polynomial of α, i.e., a polynomial of degree n with rational coefficients whose leading coefficient is 1 such that P(α) = 0.",
                "Let A = {α1, . . . , αn} be the set of all roots of P(x).",
                "Consider the polynomial Q1(x) = −P2 (x).",
                "It has the same roots as P(x), and moreover, for any x ∈ A we have Q1(x) < 0.",
                "Hence, A is the set of all maxima of Q1(x).",
                "Now, set R(x) = Q1(x) (x+2)...(x+2n+1)(x+2n+2) .",
                "Observe that R(x) ≤ 0 for all x ∈ [0, 1] and R(x) = 0 if and only if Q1(x) = 0.",
                "Hence, the set A is also the set of all maxima of R(x) on [0, 1].",
                "Let d = min{|αi − α| | αi ∈ A, αi = α}, and set α = max{α − d/2, 0}, α = min{α + d/2, 1}.",
                "Clearly, α is the only zero (and hence, the only maximum) of R(x) on [α , α ].",
                "Let x and x be some rational numbers in (α , α) and (α, α ), respectively; note that by excluding the endpoints of the intervals we ensure that x , x = 0, 1.",
                "As [x , x ] ⊂ [α , α ], we have that α is the only maximum of R(x) on [x , x ].",
                "As R(x) is a proper rational expression and all roots of its denominator are simple, by partial fraction decomposition theorem, R(x) can be represented as R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 , where K2, . . . , K2n+2 are rational numbers.",
                "Consider a graphical game on the path U−1V−1U0V0U1V1 . . .",
                "Uk−1Vk−1Uk, where k = 2n + 2.",
                "Intuitively, we want each triple (Ui−1, Vi−1, Ui) to behave similarly to the players U, V , and W from the game described in the previous subsection.",
                "More precisely, we define the payoffs to the players in the following way. • The payoff to U−1 is 0 no matter what everyone else does. • The expected payoff to V−1 is 0 if it plays 0 and u0 − (x − x )u−1 −x if it plays 1, where u0 and u−1 are the strategies of U0 and U−1, respectively. • The expected payoff to V0 is 0 if it plays 0 and u1(u0 + 1)− u0 if it plays 1, where u0 and u1 are the strategies of U0 and U1, respectively. • For each i = 1, . . . , k − 1, the expected payoff to Vi when it plays 0 is P0 (Vi) = Aiuiui+1 − Aiui+1, and the expected payoff to Vi when it plays 1 is P1 (Vi) = P0 (Vi) + ui+1(2 − ui) − 1, where Ai = −Ki+1 and ui+1 and ui are the strategies of Ui+1 and Ui, respectively. • For each i = 0, . . . , k, the payoff to Ui does not depend on Vi and is 1 if Ui and Vi−1 select different actions and 0 otherwise.",
                "We will now characterize the Nash equilibria of this game using a sequence of claims.",
                "CLAIM 3.",
                "In all Nash equilibria of this game V−1 plays 1/2, and the strategies of u−1 and u0 satisfy u0 = (x − x )u−1 + x .",
                "Consequently, in all Nash equilibria we have u0 ∈ [x , x ]. 165 PROOF.",
                "The proof is similar to that of Claim 2.",
                "Let f(u−1) = (x − x )u−1 + x .",
                "Clearly, the player V−1 is indifferent between playing 0 and 1 if and only if u0 = f(u−1).",
                "Suppose that v−1 < 1/2.",
                "Then U0 strictly prefers to play 1, i.e., u0 = 1, so we have P1 (V−1) = P0 (V−1) + 1 − (x − x )u−1 − x .",
                "As 1 − x ≤ 1 − (x − x )u−1 − x ≤ 1 − x for u−1 ∈ [0, 1] and x < 1, we have P1 (V−1) > P0 (V−1), so V−1 prefers to play 1, a contradiction.",
                "Similarly, if v−1 > 1/2, the player U0 strictly prefers to play 0, i.e., u0 = 0, so we have P1 (V−1) = P0 (V−1) − (x − x )u−1 − x .",
                "As x < x , x > 0, we have P1 (V−1) < P0 (V−1), so V−1 prefers to play 0, a contradiction.",
                "Finally, if V−1 plays 1/2, but u0 = f(u−1), player V−1 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Also, note that f(0) = x , f(1) = x , and, moreover, f(u−1) ∈ [x , x ] if and only if u−1 ∈ [0, 1].",
                "Hence, in all Nash equilibria of this game we have u0 ∈ [x , x ].",
                "CLAIM 4.",
                "In all Nash equilibria of this game for each i = 0, . . . , k − 1, we have vi = 1/2, and the strategies of the players Ui and Ui+1 satisfy ui+1 = fi(ui), where f0(u) = u/(u + 1) and fi(u) = 1/(2 − u) for i > 0.",
                "PROOF.",
                "The proof of this claim is also similar to that of Claim 2.",
                "We use induction on i to prove that the statement of the claim is true and, additionally, ui = 1 for i > 0.",
                "For the base case i = 0, note that u0 = 0 by the previous claim (recall that x , x are selected so that x , x = 0, 1) and consider the triple (U0, V0, U1).",
                "Let v0 be the strategy of V0.",
                "First, suppose that v0 > 1/2.",
                "Then U1 strictly prefers to play 0, i.e., u1 = 0.",
                "Then for V0 we have P1 (V0) = P0 (V0) − u0.",
                "As u0 = 0, we have P1 (V0) < P0 (V0), which implies v1 = 0, a contradiction.",
                "Similarly, if v0 < 1/2, player U1 prefers to play 1, so we have u1 = 1.",
                "Hence, P1 (V0) = P0 (V0) + 1.",
                "It follows that P1 (V0) > P0 (V0), which implies v0 = 1, a contradiction.",
                "Finally, if v0 = 1/2, but u1 = u0/(u0 + 1), player V0 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as u1 = u0/(u0 + 1) and u0 ∈ [0, 1], we have u1 = 1.",
                "The argument for the inductive step is similar.",
                "Namely, suppose that the statement is proved for all i < i and consider the triple (Ui, Vi, Ui+1).",
                "Let vi be the strategy of Vi.",
                "First, suppose that vi > 1/2.",
                "Then Ui+1 strictly prefers to play 0, i.e., ui+1 = 0.",
                "Then for Vi we have P1 (Vi) = P0 (Vi)−1, i.e., P1 (Vi) < P0 (Vi), which implies vi = 0, a contradiction.",
                "Similarly, if vi < 1/2, player Ui+1 prefers to play 1, so we have ui+1 = 1.",
                "Hence, P1 (Vi) = P0 (Vi) + 1 − ui.",
                "By inductive hypothesis, we have ui < 1.",
                "Consequently, P1 (Vi) > P0 (Vi), which implies vi = 1, a contradiction.",
                "Finally, if vi = 1/2, but ui+1 = 1/(2 − ui), player Vi is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as ui+1 = 1/(2 − ui) and ui < 1, we have ui+1 < 1.",
                "CLAIM 5.",
                "Any strategy profile of the form (u−1, 1/2, u0, 1/2, u1, 1/2, . . . , uk−1, 1/2, uk), where u−1 ∈ [0, 1], u0 = (x − x )u−1 + x , u1 = u0/(u0 + 1), and ui+1 = 1/(2 − ui) for i ≥ 1 constitutes a Nash equilibrium.",
                "PROOF.",
                "First, the player U−1s payoffs do not depend on other players actions, so he is free to play any strategy in [0, 1].",
                "As long as u0 = (x −x )u−1 +x , player V−1 is indifferent between 0 and 1, so he is content to play 1/2; a similar argument applies to players V0, . . . , Vk−1.",
                "Finally, for each i = 0, . . . , k, the payoffs of player Ui only depend on the strategy of player Vi−1.",
                "In particular, as long as vi−1 = 1/2, player Ui is indifferent between playing 0 and 1, so he can play any mixed strategy ui ∈ [0, 1].",
                "To complete the proof, note that (x − x )u−1 + x ∈ [0, 1] for all u−1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] for all u0 ∈ [0, 1], and 1/(2 − ui) ∈ [0, 1] for all ui ∈ [0, 1], so we have ui ∈ [0, 1] for all i = 0, . . . , k. Now, let us compute the total payoff under a strategy profile of the form given in Claim 5.",
                "The payoff to U−1 is 0, and the expected payoff to each of the Ui, i = 0, . . . , k, is 1/2.",
                "The expected payoffs to V−1 and V0 are 0.",
                "Finally, for any i = 1, . . . , k − 1, the expected payoff to Vi is Ti = Aiuiui+1 − Aiui+1.",
                "It follows that to find a Nash equilibrium with the highest total payoff, we have to maximize Pk−1 i=1 Ti subject to conditions u−1 ∈ [0, 1], u0 = (x −x )u−1+x , u1 = u0/(u0+1), and ui+1 = 1/(2−ui) for i = 1, . . . , k − 1.",
                "We would like to express Pk−1 i=1 Ti as a function of u0.",
                "To simplify notation, set u = u0.",
                "LEMMA 2.",
                "For i = 1, . . . , k, we have ui = u+i−1 u+i .",
                "PROOF.",
                "The proof is by induction on i.",
                "For i = 1, we have u1 = u/(u + 1).",
                "Now, for i ≥ 2 suppose that ui−1 = (u + i − 2)/(u + i − 1).",
                "We have ui = 1/(2 − ui−1) = (u + i − 1)/(2u + 2i − 2 − u − i + 2) = (u + i − 1)/(u + i).",
                "It follows that for i = 1, . . . , k − 1 we have Ti = Ai u + i − 1 u + i u + i u + i + 1 − Ai u + i u + i + 1 = −Ai 1 u + i + 1 = Ki+1 u + i + 1 .",
                "Observe that as u−1 varies from 0 to 1, u varies from x to x .",
                "Therefore, to maximize the total payoff, we have to choose u ∈ [x , x ] so as to maximize K2 u + 2 + · · · + Kk u + k = R(u).",
                "By construction, the only maximum of R(u) on [x , x ] is α.",
                "It follows that in the payoff-maximizing Nash equilibrium of our game U0 plays α.",
                "Finally, note that the payoffs in our game are rational rather than integer.",
                "However, it is easy to see that we can multiply all payoffs to a player by their greatest common denominator without affecting his strategy.",
                "In the resulting game, all payoffs are integer.",
                "This concludes the proof of Theorem 2. 4.",
                "APPROXIMATING THE SOCIALLY OPTIMAL NASH EQUILIBRIUM We have seen that the Nash equilibrium that maximizes the social welfare may involve strategies that are not in Q.",
                "Hence, in this section we focus on finding a Nash equilibrium that is almost optimal from the social welfare perspective.",
                "We propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within from optimal.",
                "The running time of this algorithm is polynomial in 1/ , n and |Pmax| (recall that Pmax is the maximum absolute value of an entry of a payoff matrix).",
                "While the negative result of the previous section is for graphical games on paths, our algorithm applies to a wider range of scenarios.",
                "Namely, it runs in polynomial time on bounded-degree trees 166 as long as the best response policy of each vertex, given its parent, can be represented as a union of a polynomial number of rectangles.",
                "Note that path graphs always satisfy this condition: in [9] we showed how to compute such a representation, given a graph with maximum degree 2.",
                "Consequently, for path graphs the running time of our algorithm is guaranteed to be polynomial. (Note that [9] exhibits a family of graphical games on bounded-degree trees for which the best response policies of some of the vertices, given their parents, have exponential size, when represented as unions of rectangles.)",
                "Due to space restrictions, in this version of the paper we present the algorithm for the case where the graph underlying the graphical game is a path.",
                "We then state our result for the general case; the proof can be found in the full version of this paper [10].",
                "Suppose that s is a strategy profile for a graphical game G. That is, s assigns a mixed strategy to each vertex of G. let EPV (s) be the expected payoff of player V under s and let EP(s) =P V EPV (s).",
                "Let M(G) = max{EP(s) | s is a Nash equilibrium for G}.",
                "THEOREM 3.",
                "Suppose that G is a graphical game on an nvertex path.",
                "Then for any > 0 there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G)− .",
                "The running time of the algorithm is O(n4 P3 max/ 3 ) PROOF.",
                "Let {V1, . . . , Vn} be the set of all players.",
                "We start by constructing the best response policies for all Vi, i = 1, . . . , n − 1.",
                "As shown in [9], this can be done in time O(n3 ).",
                "Let N > 5n be a parameter to be selected later, set δ = 1/N, and define X = {jδ | j = 0, . . . , N}.",
                "We say that vj is an event point for a player Vi if it is a Vi-event point for B(Vi, Vi−1) or B(Vi+1, Vi).",
                "For each player Vi, consider a finite set of strategies Xi given by Xi = X ∪ {vj |vj is an event point for Vi}.",
                "It has been shown in [9] that for any i = 2, . . . , n, the best response policy B(Vi, Vi−1) has at most 2n + 4 Vi-event points.",
                "As we require N > 5n, we have |Xi| ≤ 2N; assume without loss of generality that |Xi| = 2N.",
                "Order the elements of Xi in increasing order as x1 i = 0 < x2 i < · · · < x2N i .",
                "We will refer to the strategies in Xi as discrete strategies of player Vi; a strategy profile in which each player has a discrete strategy will be referred to as a discrete strategy profile.",
                "We will now show that even we restrict each player Vi to strategies from Xi, the players can still achieve a Nash equilibrium, and moreover, the best such Nash equilibrium (with respect to the social welfare) has total payoff at least M(G) − as long as N is large enough.",
                "Let s be a strategy profile that maximizes social welfare.",
                "That is, let s = (s1, . . . , sn) where si is the mixed strategy of player Vi and EP(s) = M(G).",
                "For i = 1, . . . , n, let ti = max{xj i | xj i ≤ si}.",
                "First, we will show that the strategy profile t = (t1, . . . , tn) is a Nash equilibrium for G. Fix any i, 1 < i ≤ n, and let R = [v1, v2]×[u1, u2] be the rectangle in B(Vi, Vi−1) that contains (si, si−1).",
                "As v1 is a Vi-event point of B(Vi, Vi−1), we have v1 ≤ ti, so the point (ti, si−1) is inside R. Similarly, the point u1 is a Vi−1-event point of B(Vi, Vi−1), so we have u1 ≤ ti−1, and therefore the point (ti, ti−1) is inside R. This means that for any i, 1 < i ≤ n, we have ti−1 ∈ pbrVi−1 (ti), which implies that t = (t1, . . . , tn) is a Nash equilibrium for G. Now, let us estimate the expected loss in social welfare caused by playing t instead of s. LEMMA 3.",
                "For any pair of strategy profiles t, s such that |ti − si| ≤ δ we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ for any i = 1, . . . , n. PROOF.",
                "Let Pi klm be the payoff of the player Vi, when he plays k, Vi−1 plays l, and Vi+1 plays m. Fix i = 1, . . . , n and for k, l, m ∈ {0, 1}, set tklm = tk i−1(1 − ti−1)1−k tl i(1 − ti)1−l tm i+1(1 − ti+1)1−m sklm = sk i−1(1 − si−1)1−k sl i(1 − si)1−l sm i+1(1 − si+1)1−m .",
                "We have |EPVi (s) − EPVi (t)| ≤ X k,l,m=0,1 |Pi klm(tklm − sklm )| ≤ 8Pmax max klm |tklm − sklm | We will now show that for any k, l, m ∈ {0, 1} we have |tklm − sklm | ≤ 3δ; clearly, this implies the lemma.",
                "Indeed, fix k, l, m ∈ {0, 1}.",
                "Set x = tk i−1(1 − ti−1)1−k , x = sk i−1(1 − si−1)1−k , y = tl i(1 − ti)1−l , y = sl i(1 − si)1−l , z = tm i+1(1 − ti+1)1−m , z = sm i+1(1 − si+1)1−m .",
                "Observe that if k = 0 then x − x = (1 − ti−1) − (1 − si−1), and if k = 1 then x − x = ti−1 − si−1, so |x − x | ≤ δ.",
                "A similar argument shows |y − y | ≤ δ, |z − z | ≤ δ.",
                "Also, we have x, x , y, y , z, z ∈ [0, 1].",
                "Hence, |tklm −sklm | = |xyz−x y z | = |xyz − x yz + x yz − x y z + x y z − x y z | ≤ |x − x |yz + |y − y |x z + |z − z |x y ≤ 3δ.",
                "Lemma 3 implies Pn i=1 |EPVi (s) − EPVi (t)| ≤ 24nPmaxδ, so by choosing δ < /(24nPmax), or, equivalently, setting N > 24nPmax/ , we can ensure that the total expected payoff for the strategy profile t is within from optimal.",
                "We will now show that we can find the best discrete Nash equilibrium (with respect to the social welfare) using dynamic programming.",
                "As t is a discrete strategy profile, this means that the strategy profile found by our algorithm will be at least as good as t. Define ml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj , j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1, and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The values ml,k i , i = 1, . . . , n; k, l = 1, . . . , N, can be computed inductively, as follows.",
                "We have ml,k 1 = 0 for k, l = 1, . . . , N. Now, suppose that we have already computed ml,k j for all j < i; k, l = 1, . . . , N. To compute mk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this is not the case, we have ml,k i = −∞.",
                "Otherwise, consider the set Y = Xi−2 ∩ pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "The proof of Theorem 1 in [9] implies that the set pbrVi−2 (xl i−1) is non-empty: the player Vi−2 has a potential best response to any strategy of Vi−1, in particular, xl i−1.",
                "By construction of the set Xi−2, this implies that Y is not empty.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "Then we have ml,k i = max{mj,l i−1 + pjlk | xj i−2 ∈ Y }.",
                "Finally, suppose that we have computed ml,k n for l, k = 1, . . . , N. We still need to take into account the payoff of player Vn.",
                "Hence, 167 we consider all pairs (xk n, xl n−1) that satisfy xl n−1 ∈ pbrVn−1 (xk n), and pick the one that maximizes the sum of mk,l n and the payoff of Vn when he plays xk n and Vn−1 plays xl n−1.",
                "This results in the maximum total payoff the players can achieve in a Nash equilibrium using discrete strategies; the actual strategy profile that produces this payoff can be reconstructed using standard dynamic programming techniques.",
                "It is easy to see that each ml,k i can be computed in time O(N), i.e., all of them can be computed in time O(nN3 ).",
                "Recall that we have to select N ≥ (24nPmax)/ to ensure that the strategy profile we output has total payoff that is within from optimal.",
                "We conclude that we can compute an -approximation to the best Nash equilibrium in time O(n4 P3 max/ 3 ).",
                "This completes the proof of Theorem 3.",
                "To state our result for the general case (i.e., when the underlying graph is a bounded-degree tree rather than a path), we need additional notation.",
                "If G has n players, let q(n) be an upper bound on the number of event points in the representation of any best response policy.",
                "That is, we assume that for any vertex U with parent V , B(V, U) has at most q(n) event points.",
                "We will be interested in the situation in which q(n) is polynomial in n. THEOREM 4.",
                "Let G be an n-player graphical game on a tree in which each node has at most Δ children.",
                "Suppose we are given a set of best-response policies for G in which each best-response policy B(V, U) is represented by a set of rectangles with at most q(n) event points.",
                "For any > 0, there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G) − .",
                "The running time of the algorithm is polynomial in n, Pmax and −1 provided that the tree has bounded degree (that is, Δ = O(1)) and q(n) is a polynomial in n. In particular, if N = max((Δ + 1)q(n) + 1, n2Δ+2 (Δ + 2)Pmax −1 ) and Δ > 1 then the running time is O(nΔ(2N)Δ .",
                "For the proof of this theorem, see [10]. 4.1 A polynomial-time algorithm for multiplicative approximation The running time of our algorithm is pseudopolynomial rather than polynomial, because it includes a factor which is polynomial in Pmax, the maximum (in absolute value) entry in any payoff matrix.",
                "If we are interested in multiplicative approximation rather than additive one, this can be improved to polynomial.",
                "First, note that we cannot expect a multiplicative approximation for all inputs.",
                "That is, we cannot hope to have an algorithm that computes a Nash equilibrium with total payoff at least (1 − )M(G).",
                "If we had such an algorithm, then for graphical games G with M(G) = 0, the algorithm would be required to output the optimal solution.",
                "To show that this is infeasible, observe that we can use the techniques of Section 3.2 to construct two integercoefficient graphical games on paths of length O(n) such that for some X ∈ R the maximal total payoff in the first game is X, the maximal total payoff in the second game is −X, and for both games, the strategy profiles that achieve the maximal total payoffs involve algebraic numbers of degree n. By combining the two games so that the first vertex of the second game becomes connected to the last vertex of the first game, but the payoffs of all players do not change, we obtain a graphical game in which the best Nash equilibrium has total payoff 0, yet the strategies that lead to this payoff have high algebraic complexity.",
                "However, we can achieve a multiplicative approximation when all entries of the payoff matrices are positive and the ratio between any two entries is polynomially bounded.",
                "Recall that we assume that all payoffs are integer, and let Pmin > 0 be the smallest entry of any payoff matrix.",
                "In this case, for any strategy profile the payoff to player i is at least Pmin, so the total payoff in the social-welfare maximizing Nash equilibrium s satisfies M(G) ≥ nPmin.",
                "Moreover, Lemma 3 implies that by choosing δ < /(24Pmax/Pmin), we can ensure that the Nash equilibrium t produced by our algorithm satisfies nX i=1 EPVi (s) − nX i=1 EPVi (t) ≤ 24Pmaxδn ≤ nPmin ≤ M(G), i.e., for this value of δ we have Pn i=1 EPVi (t) ≥ (1 − )M(G).",
                "Recall that the running time of our algorithm is O(nN3 ), where N has to be selected to satisfy N > 5n, N = 1/δ.",
                "It follows that if Pmin > 0, Pmax/Pmin = poly(n), we can choose N so that our algorithm provides a multiplicative approximation guarantee and runs in time polynomial in n and 1/ . 5.",
                "BOUNDED PAYOFF NASH EQUILIBRIA Another natural way to define what is a good Nash equilibrium is to require that each players expected payoff exceeds a certain threshold.",
                "These thresholds do not have to be the same for all players.",
                "In this case, in addition to the payoff matrices of the n players, we are given n numbers T1, . . . , Tn, and our goal is to find a Nash equilibrium in which the payoff of player i is at least Ti, or report that no such Nash equilibrium exists.",
                "It turns out that we can design an FPTAS for this problem using the same techniques as in the previous section.",
                "THEOREM 5.",
                "Given a graphical game G on an n-vertex path and n rational numbers T1, . . . , Tn, suppose that there exists a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. Then for any > 0 we can find in time O(max{nP3 max/ 3 , n4 / 3 }) a strategy profile s such that s is a Nash equilibrium for G and EPVi (s ) ≥ Ti − for i = 1, . . . , n. PROOF.",
                "The proof is similar to that of Theorem 3.",
                "First, we construct the best response policies for all players, choose N > 5n, and construct the sets Xi, i = 1, . . . , n, as described in the proof of Theorem 3.",
                "Consider a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. We construct a strategy profile ti = max{xj i | xj i ≤ si} and use the same argument as in the proof of Theorem 3 to show that t is a Nash equilibrium for G. By Lemma 3, we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ, so choosing δ < /(24Pmax), or, equivalently, N > max{5n, 24Pmax/ }, we can ensure EPVi (t) ≥ Ti − for i = 1, . . . , n. Now, we will use dynamic programming to find a discrete Nash equilibrium that satisfies EPVi (t) ≥ Ti − for i = 1, . . . , n. As t is a discrete strategy profile, our algorithm will succeed whenever there is a strategy profile s with EPVi (s) ≥ Ti− for i = 1, . . . , n. Let zl,k i = 1 if there is a discrete strategy profile such that for any j < i the strategy of the player Vj is a potential best response to the strategy of Vj+1, the expected payoff of Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "Otherwise, let zl,k i = 0.",
                "We can compute zl,k i , i = 1, . . . , n; k, l = 1, . . . , N inductively, as follows.",
                "We have zl,k 1 = 1 for k, l = 1, . . . , N. Now, suppose that we have already computed zl,k j for all j < i; k, l = 1, . . . , N. To compute zk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this 168 is not the case, clearly, zk,l i = 0.",
                "Otherwise, consider the set Y = Xi−2 ∩pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "It has been shown in the proof of Theorem 3 that Y = ∅.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "If there exists an xj i−2 ∈ Y such that zj,l i−1 = 1 and pjlk ≥ Ti−2 − , set zl,k i = 1.",
                "Otherwise, set zl,k i = 0.",
                "Having computed zl,k n , l, k = 1, . . . , N, we check if zl,k n = 1 for some pair (l, k). if such a pair of indices exists, we instruct Vn to play xk n and use dynamic programming techniques (or, equivalently, the downstream pass of the algorithm of [13]) to find a Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n (recall that Vn is a dummy player, i.e., we assume Tn = 0, EPn(s ) = 0 for any choice of s ).",
                "If zl,k n = 0 for all l, k = 1, . . . , N, there is no discrete Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n and hence no Nash equilibrium s (not necessarily discrete) such that EPVi (s) ≥ Ti for i = 1, . . . , n. The running time analysis is similar to that for Theorem 3; we conclude that the running time of our algorithm is O(nN3 ) = O(max{nP3 max/ 3 , n4 / 3 }).",
                "REMARK 1.",
                "Theorem 5 can be extended to trees of bounded degree in the same way as Theorem 4. 5.1 Exact Computation Another approach to finding Nash equilibria with bounded payoffs is based on inductively computing the subsets of the best response policies of all players so as to exclude the points that do not provide sufficient payoffs to some of the players.",
                "Formally, we say that a strategy v of the player V is a potential best response to a strategy w of its parent W with respect to a threshold vector T = (T1, . . . , Tn), (denoted by v ∈ pbrV (w, T)) if there is an equilibrium in the instance G(V,W ),W =w in which V plays mixed strategy v and the payoff to any player Vi downstream of V (including V ) is at least Ti.",
                "The best response policy for V with respect to a threshold vector T is defined as B(W, V, T) = {(w, v) | v ∈ pbrV (w, T), w ∈ [0, 1]}.",
                "It is easy to see that if any of the sets B(Vj, Vj−1, T), j = 1, . . . , n, is empty, it means that it is impossible to provide all players with expected payoffs prescribed by T. Otherwise, one can apply the downstream pass of the original algorithm of [13] to find a Nash equilibrium.",
                "As we assume that Vn is a dummy vertex whose payoff is identically 0, the Nash equilibrium with these payoffs exists as long as Tn ≤ 0 and B(Vn, Vn−1, T) is not empty.",
                "Using the techniques developed in [9], it is not hard to show that for any j = 1, . . . , n, the set B(Vj , Vj−1, T) consists of a finite number of rectangles, and one can compute B(Vj+1, Vj , T) given B(Vj , Vj−1, T).",
                "The advantage of this approach is that it allows us to represent all Nash equilibria that provide required payoffs to the players.",
                "However, it is not likely to be practical, since it turns out that the rectangles that appear in the representation of B(Vj , Vj−1, T) may have irrational coordinates.",
                "CLAIM 6.",
                "There exists a graphical game G on a 3-vertex path UV W and a vector T = (T1, T2, T3) such that B(V, W, T) cannot be represented as a union of a finite number of rectangles with rational coordinates.",
                "PROOF.",
                "We define the payoffs to the players in G as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = uw, P1 (V ) = P0 (V ) + w − .8u − .1, where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = .8u + .1; observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "It is not hard to see that we have B(W, V ) = [0, .1]×{0} ∪ [.1, .9]×[0, 1] ∪ [.9, 1]×{1}.",
                "The payoffs to W are not important for our construction; for example, set P0(W ) = P0(W ) = 0.",
                "Now, set T = (0, 1/8, 0), i.e., we are interested in Nash equilibria in which V s expected payoff is at least 1/8.",
                "Suppose w ∈ [0, 1].",
                "The player V can play a mixed strategy v when W is playing w as long as U plays u = f−1 (w) = 5w/4 − 1/8 (to ensure that V is indifferent between 0 and 1) and P0 (V ) = P1 (V ) = uw = w(5w/4 − 1/8) ≥ 1/8.",
                "The latter condition is satisfied if w ≤ (1 − √ 41)/20 < 0 or w ≥ (1 + √ 41)/20.",
                "Note that we have .1 < (1 + √ 41)/20 < .9.",
                "For any other value of w, any strategy of U either makes V prefer one of the pure strategies or does not provide it with a sufficient expected payoff.",
                "There are also some values of w for which V can play a pure strategy (0 or 1) as a potential best response to W and guarantee itself an expected payoff of at least 1/8; it can be shown that these values of w form a finite number of segments in [0, 1].",
                "We conclude that any representation of B(W, V, T) as a union of a finite number of rectangles must contain a rectangle of the form [(1 + √ 41)/20, w ]×[v , v ] for some w , v , v ∈ [0, 1].",
                "On the other hand, it can be shown that for any integer payoff matrices and threshold vectors and any j = 1, . . . , n − 1, the sets B(Vj+1, Vj, T) contain no rectangles of the form [u , u ]×{v} or {v}×[w , w ], where v ∈ R\\Q.",
                "This means that if B(Vn, Vn−1, T) is non-empty, i.e., there is a Nash equilibrium with payoffs prescribed by T, then the downstream pass of the algorithm of [13] can always pick a strategy profile that forms a Nash equilibrium, provides a payoff of at least Ti to the player Vi, and has no irrational coordinates.",
                "Hence, unlike in the case of the Nash equilibrium that maximizes the social welfare, working with irrational numbers is not necessary, and the fact that the algorithm discussed in this section has to do so can be seen as an argument against using this approach. 6.",
                "OTHER CRITERIA FOR SELECTING A NASH EQUILIBRIUM In this section, we consider several other criteria that can be useful in selecting a Nash equilibrium. 6.1 Combining welfare maximization with bounds on payoffs In many real life scenarios, we want to maximize the social welfare subject to certain restrictions on the payoffs to individual players.",
                "For example, we may want to ensure that no player gets a negative expected payoff, or that the expected payoff to player i is at least Pi max − ξ, where Pi max is the maximum entry of is payoff matrix and ξ is a fixed parameter.",
                "Formally, given a graphical game G and a vector T1, . . . , Tn, let S be the set of all Nash equilibria s of G that satisfy Ti ≤ EPVi (s) for i = 1, . . . , n, and let ˆs = argmaxs∈S EP(s).",
                "If the set S is non-empty, we can find a Nash equilibrium ˆs that is -close to satisfying the payoff bounds and is within from ˆs with respect to the total payoff by combining the algorithms of Section 4 and Section 5.",
                "Namely, for a given > 0, choose δ as in the proof of Theorem 3, and let Xi be the set of all discrete strategies of player Vi (for a 169 formal definition, see the proof of Theorem 3).",
                "Combining the proofs of Theorem 3 and Theorem 5, we can see that the strategy profile ˆt given by ˆti = max{xj i | xj i ≤ ˆsi} satisfies EPVi (ˆt) ≥ Ti − , |EP(ˆs) − EP(ˆt)| ≤ .",
                "Define ˆml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj, j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1 and the payoff to player Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The ˆml,k i can be computed by dynamic programming similarly to the ml,k i and zl,k i in the proofs of Theorems 3 and 5.",
                "Finally, as in the proof of Theorem 3, we use ml,k n to select the best discrete Nash equilibrium subject to the payoff constraints.",
                "Even more generally, we may want to maximize the total payoff to a subset of players (who are assumed to be able to redistribute the profits fairly among themselves) while guaranteeing certain expected payoffs to (a subset of) the other players.",
                "This problem can be handled similarly. 6.2 A minimax approach A more egalitarian measure of the quality of a Nash equilibrium is the minimal expected payoff to a player.",
                "The optimal solution with respect to this measure is a Nash equilibrium in which the minimal expected payoff to a player is maximal.",
                "To find an approximation to such a Nash equilibrium, we can combine the algorithm of Section 5 with binary search on the space of potential lower bounds.",
                "Note that the expected payoff to any player Vi given a strategy s always satisfies −Pmax ≤ EPVi (s) ≤ Pmax.",
                "For a fixed > 0, we start by setting T = −Pmax, T = Pmax, T∗ = (T + T )/2.",
                "We then run the algorithm of Section 5 with T1 = · · · = Tn = T∗ .",
                "If the algorithm succeeds in finding a Nash equilibrium s that satisfies EPVi (s ) ≥ T∗ − for all i = 1, . . . , n, we set T = T∗ , T∗ = (T + T )/2; otherwise, we set T = T∗ , T∗ = (T + T )/2 and loop.",
                "We repeat this process until |T − T | ≤ .",
                "It is not hard to check that for any p ∈ R, if there is a Nash equilibrium s such that mini=1,...,n EPVi (s) ≥ p, then our algorithm outputs a Nash equilibrium s that satisfies mini=1,...,n EPVi (s) ≥ p−2 .",
                "The running time of our algorithm is O(max{nP3 max log −1 / 3 , n4 log −1 / 3 }). 6.3 Equalizing the payoffs When the players payoff matrices are not very different, it is reasonable to demand that the expected payoffs to the players do not differ by much either.",
                "We will now show that Nash equilibria in this category can be approximated in polynomial time as well.",
                "Indeed, observe that the algorithm of Section 5 can be easily modified to deal with upper bounds on individual payoffs rather than lower bounds.",
                "Moreover, we can efficiently compute an approximation to a Nash equilibrium that satisfies both the upper bound and the lower bound for each player.",
                "More precisely, suppose that we are given a graphical game G, 2n rational numbers T1, . . . , Tn, T1, . . . , Tn and > 0.",
                "Then if there exists a strategy profile s such that s is a Nash equilibrium for G and Ti ≤ EPVi (s) ≤ Ti for i = 1, . . . , n, we can find a strategy profile s such that s is a Nash equilibrium for G and Ti − ≤ EPVi (s ) ≤ Ti + for i = 1, . . . , n. The modified algorithm also runs in time O(max{nP3 max/ 3 , [4]n4 / 3 }).",
                "This observation allows us to approximate Nash equilibria in which all players expected payoffs differ by at most ξ for any fixed ξ > 0.",
                "Given an > 0, we set T1 = · · · = Tn = −Pmax, T1 = · · · = Tn = −Pmax + ξ + , and run the modified version of the algorithm of Section 5.",
                "If it fails to find a solution, we increment all Ti, Ti by and loop.",
                "We continue until the algorithm finds a solution, or Ti ≥ Pmax.",
                "Suppose that there exists a Nash equilibrium s that satisfies |EPVi (s) − EPVj (s)| ≤ ξ for all i, j = 1, . . . , n. Set r = mini=1,...,n EPVi (s); we have r ≤ EPVi (s) ≤ r + ξ for all i = 1, . . . , n. There exists a k ≥ 0 such that −Pmax + (k − 1) ≤ r ≤ −Pmax + k .",
                "During the kth step of the algorithm, we set T1 = · · · = Tn = −Pmax +(k−1) , i.e., we have r− ≤ Ti ≤ r, r + ξ ≤ Ti ≤ r + ξ + .",
                "That is, the Nash equilibrium s satisfies Ti ≤ r ≤ EPVi (s) ≤ r + ξ ≤ Ti , which means that when Ti is set to −Pmax + (k − 1) , our algorithm is guaranteed to output a Nash equilibrium t that satisfies r − 2 ≤ Ti − ≤ EPVi (t) ≤ Ti + ≤ r +ξ +2 .",
                "We conclude that whenever such a Nash equilibrium s exists, our algorithm outputs a Nash equilibrium t that satisfies |EPVi (t) − EPVj (t)| ≤ ξ + 4 for all i, j = 1, . . . , n. The running time of this algorithm is O(max{nP3 max/ 4 , n4 / 4 }).",
                "Note also that we can find the smallest ξ for which such a Nash equilibrium exists by combining this algorithm with binary search over the space ξ = [0, 2Pmax].",
                "This identifies an approximation to the fairest Nash equilibrium, i.e., one in which the players expected payoffs differ by the smallest possible amount.",
                "Finally, note that all results in this section can be extended to bounded-degree trees. 7.",
                "CONCLUSIONS We have studied the problem of equilibrium selection in graphical games on bounded-degree trees.",
                "We considered several criteria for selecting a Nash equilibrium, such as maximizing the social welfare, ensuring a lower bound on the expected payoff of each player, etc.",
                "First, we focused on the algebraic complexity of a social welfare-maximizing Nash equilibrium, and proved strong negative results for that problem.",
                "Namely, we showed that even for graphical games on paths, any algebraic number α ∈ [0, 1] may be the only strategy available to some player in all social welfaremaximizing Nash equilibria.",
                "This is in sharp contrast with the fact that graphical games on trees always possess a Nash equilibrium in which all players strategies are rational numbers.",
                "We then provided approximation algorithms for selecting Nash equilibria with special properties.",
                "While the problem of finding approximate Nash equilibria for various classes of games has received a lot of attention in recent years, most of the existing work aims to find -Nash equilibria that satisfy (or are -close to satisfying) certain properties.",
                "Our approach is different in that we insist on outputting an exact Nash equilibrium, which is -close to satisfying a given requirement.",
                "As argued in the introduction, there are several reasons to prefer a solution that constitutes an exact Nash equilibrium.",
                "Our algorithms are fully polynomial time approximation schemes, i.e., their running time is polynomial in the inverse of the approximation parameter , though they may be pseudopolynomial with respect to the input size.",
                "Under mild restrictions on the inputs, they can be modified to be truly polynomial.",
                "This is the strongest positive result one can derive for a problem whose exact solutions may be hard to represent, as is the case for many of the problems considered here.",
                "While we prove our results for games on a path, they can be generalized to any tree for which the best response policies have compact representations as unions of rectangles.",
                "In the full version of the paper we describe our algorithms for the general case.",
                "Further work in this vein could include extensions to the kinds of guarantees sought for Nash equilibria, such as guaranteeing total payoffs for subsets of players, selecting equilibria in which some players are receiving significantly higher payoffs than their peers, etc.",
                "At the moment however, it is perhaps more important to inves170 tigate whether Nash equilibria of graphical games can be computed in a decentralized manner, in contrast to the algorithms we have introduced here.",
                "It is natural to ask if our results or those of [9] can be generalized to games with three or more actions.",
                "However, it seems that this will make the analysis significantly more difficult.",
                "In particular, note that one can view the bounded payoff games as a very limited special case of games with three actions per player.",
                "Namely, given a two-action game with payoff bounds, consider a game in which each player Vi has a third action that guarantees him a payoff of Ti no matter what everyone else does.",
                "Then checking if there is a Nash equilibrium in which none of the players assigns a nonzero probability to his third action is equivalent to checking if there exists a Nash equilibrium that satisfies the payoff bounds in the original game, and Section 5.1 shows that finding an exact solution to this problem requires new ideas.",
                "Alternatively it may be interesting to look for similar results in the context of correlated equilibria (CE), especially since the best CE may have higher value (total expected payoff) than the best NE.",
                "The ratio between these values is called the mediation value in [1].",
                "It is known from [1] that the mediation value of 2-player, 2-action games with non-negative payoffs is at most 4 3 , and they exhibit a 3-player game for which it is infinite.",
                "Furthermore, a 2-player, 3action example from [1] also has infinite mediation value. 8.",
                "REFERENCES [1] I. Ashlagi, D. Monderer and M. Tenneholtz, On the Value of Correlation, Proceedings of Dagstuhl seminar 05011 (2005) [2] R. Aumann, Subjectivity and Correlation in Randomized Strategies, Journal of Mathematical Economics 1 pp. 67-96 (1974) [3] B. Blum, C. R. Shelton, and D. Koller, A Continuation Method for Nash Equilibria in Structured Games, Proceedings of IJCAI03 [4] X. Chen, X. Deng and S. Teng, Computing Nash Equilibria: Approximation and Smoothed Complexity, Proceedings of FOCS06 [5] X. Chen, X. Deng, Settling the Complexity of 2-Player Nash-Equilibrium, Proceedings of FOCS06 [6] V. Conitzer and T. Sandholm, Complexity Results about Nash Equilibria, Proceedings of IJCAI03 [7] C. Daskalakis, P. W. Goldberg and C. H. Papadimitriou, The Complexity of Computing a Nash Equilibrium, Proceedings of STOC06 [8] R. S. Datta, Universality of Nash Equilibria, Mathematics of Operations Research 28:3, 2003 [9] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Nash Equilibria in Graphical games on Trees Revisited, Proceedings of ACM EC06 [10] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Computing Good Nash Equilibria in Graphical Games, http://arxiv.org/abs/cs.GT/0703133 [11] I. Gilboa and E. Zemel, Nash and Correlated Equilibria: Some Complexity Considerations, Games and Economic Behavior, 1 pp. 80-93 (1989) [12] P. W. Goldberg and C. H. Papadimitriou, Reducibility Among Equilibrium Problems, Proceedings of STOC06 [13] M. Kearns, M. Littman, and S. Singh, Graphical Models for Game Theory, Proceedings of UAI01 [14] M. Littman, M. Kearns, and S. Singh, An Efficient Exact Algorithm for Singly Connected Graphical Games, Proceedings of NIPS01 [15] R. Lipton and E. Markakis, Nash Equilibria via Polynomial Equations, Proceedings of LATIN04 [16] L. Ortiz and M. Kearns, Nash Propagation for Loopy Graphical Games, Proceedings of NIPS03 [17] C.H.",
                "Papadimitriou, Computing Correlated Equilibria in Multi-Player Games, Proceedings of STOC05 [18] C.H.",
                "Papadimitriou and T. Roughgarden, Computing Equilibria in Multi-Player Games, Proceedings of SODA05 [19] D. Vickrey and D. Koller, Multi-agent Algorithms for Solving Graphical Games, Proceedings of AAAI02 171"
            ],
            "original_annotated_samples": [
                "Rather than having an algorithm which merely finds some Nash equilibrium, we would like to have algorithms for finding Nash equilibria with various sociallydesirable properties, such as maximizing overall payoff or <br>distributing profit</br> fairly."
            ],
            "translated_annotated_samples": [
                "En lugar de tener un algoritmo que simplemente encuentre algún equilibrio de Nash, nos gustaría tener algoritmos para encontrar equilibrios de Nash con diversas propiedades socialmente deseables, como maximizar el pago total o <br>distribuir las ganancias</br> de manera justa."
            ],
            "translated_text": "Calcular buenos equilibrios de Nash en juegos gráficos ∗ Edith Elkind Universidad Hebrea de Jerusalén, Israel, y Universidad de Southampton, Southampton, SO17 1BJ, Reino Unido. Leslie Ann Goldberg Universidad de Liverpool Liverpool L69 3BX, Reino Unido. Paul Goldberg Universidad de Liverpool Liverpool L69 3BX, Reino Unido. RESUMEN Este artículo aborda el problema de la selección justa de equilibrios en juegos gráficos. Nuestro enfoque se basa en la estructura de datos llamada política de mejor respuesta, propuesta por Kearns et al. [13] como una forma de representar todos los equilibrios de Nash de un juego gráfico. En [9], se demostró que la política de mejor respuesta tiene un tamaño polinómico siempre y cuando el grafo subyacente sea un camino. En este artículo, demostramos que si el grafo subyacente es un árbol de grado acotado y la política de mejor respuesta tiene un tamaño polinómico, entonces existe un algoritmo eficiente que construye un equilibrio de Nash que garantiza ciertos pagos a todos los participantes. Otro concepto de solución atractivo es un equilibrio de Nash que maximiza el bienestar social. Mostramos que, si bien calcular exactamente lo último es inviable (demostramos que resolver este problema puede implicar números algebraicos de un grado arbitrariamente alto), existe un FPTAS para encontrar dicho equilibrio siempre y cuando la política de mejor respuesta tenga un tamaño polinómico. Estos dos algoritmos pueden combinarse para producir equilibrios de Nash que satisfacen varios criterios de equidad. Categorías y Descriptores de Asignaturas F.2 [Teoría de la Computación]: Análisis de Algoritmos y Complejidad de Problemas; J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento - Economía Términos Generales Algoritmos, Economía, Teoría 1. INTRODUCCIÓN En una gran comunidad de agentes, es poco probable que el comportamiento de un agente tenga un efecto directo en la mayoría de los otros agentes: más bien, solo serán afectados los agentes que estén lo suficientemente cerca de él. Sin embargo, a medida que estos agentes responden adaptando su comportamiento, más agentes sentirán las consecuencias y eventualmente las decisiones tomadas por un solo agente se propagarán por toda la comunidad. Esta es la intuición detrás de los juegos gráficos, los cuales fueron introducidos por Kearns, Littman y Singh en [13] como un esquema de representación compacto para juegos con muchos jugadores. En un juego gráfico de n jugadores, a cada jugador se le asocia un vértice de un grafo subyacente G, y las ganancias de cada jugador dependen de su acción, así como de las acciones de sus vecinos en el grafo. Si el grado máximo de G es Δ, y cada jugador tiene dos acciones disponibles, entonces el juego se puede representar usando n2Δ+1 números. Por el contrario, necesitamos n^2 números para representar un juego general de n jugadores y 2 acciones, lo cual solo es práctico para valores pequeños de n. Para juegos gráficos con Δ constante, el tamaño del juego es lineal en n. Uno de los problemas más naturales para un juego gráfico es el de encontrar un equilibrio de Nash, cuya existencia se deriva del célebre teorema de Nash (ya que los juegos gráficos son solo un caso especial de juegos de n jugadores). El primer intento de abordar este problema se realizó en [13], donde los autores consideran juegos gráficos con dos acciones por jugador en los que el grafo subyacente es un árbol de grado acotado. Proponen un algoritmo genérico para encontrar equilibrios de Nash que puede ser especializado de dos maneras: un algoritmo de tiempo exponencial para encontrar un equilibrio de Nash (exacto) y un esquema de aproximación de tiempo polinómico completo (FPTAS) para encontrar una aproximación a un equilibrio de Nash. Para cualquier > 0, este algoritmo produce un equilibrio de Nash, que es un perfil estratégico en el que ningún jugador puede mejorar su pago más que al cambiar unilateralmente su estrategia. Si bien los equilibrios de Nash aproximados suelen ser más fáciles de calcular que los equilibrios de Nash exactos, este concepto de solución tiene varias desventajas. Primero, es posible que los jugadores sean sensibles a una pequeña pérdida en las ganancias, por lo que el perfil estratégico que es un equilibrio de Nash no será estable. Esto será así incluso si solo hay un pequeño subconjunto de jugadores que son extremadamente sensibles al precio, y para una gran población de jugadores puede ser difícil elegir un valor que satisfaga a todos. Segundo, los perfiles estratégicos que están cerca de ser equilibrios de Nash pueden ser mucho mejores con respecto a las propiedades consideradas que los equilibrios de Nash exactos. Por lo tanto, la aproximación al valor de la mejor solución que corresponde a un equilibrio de Nash aproximado puede no ser indicativa de lo que se puede lograr bajo un equilibrio de Nash exacto. Esto es especialmente importante si el propósito de la solución aproximada es proporcionar un buen punto de referencia para un sistema de agentes egoístas, ya que el punto de referencia implícito por un equilibrio de Nash puede ser poco realista. Por estas razones, en este artículo nos enfocamos en el problema de calcular equilibrios de Nash exactos. Basándose en las ideas de [14], Elkind et al. [9] mostraron cómo encontrar un equilibrio de Nash (exacto) en tiempo polinómico cuando el grafo subyacente tiene grado 2 (es decir, cuando el grafo es una colección de caminos y ciclos). Por el contrario, encontrar un equilibrio de Nash en un grafo general con grado acotado parece ser computacionalmente intratable: se ha demostrado (ver [5, 12, 7]) que es completo para la clase de complejidad PPAD. [9] extiende este resultado de dificultad al caso en el que el grafo subyacente tiene un ancho de camino acotado. Un juego gráfico puede no tener un equilibrio de Nash único, de hecho, puede tener exponencialmente muchos. Además, algunos equilibrios de Nash son más deseables que otros. En lugar de tener un algoritmo que simplemente encuentre algún equilibrio de Nash, nos gustaría tener algoritmos para encontrar equilibrios de Nash con diversas propiedades socialmente deseables, como maximizar el pago total o <br>distribuir las ganancias</br> de manera justa. Una propiedad útil de la estructura de datos de [13] es que representa simultáneamente el conjunto de todos los equilibrios de Nash del juego subyacente. Si esta representación tiene tamaño polinómico (como es el caso de los caminos, como se muestra en [9]), se puede esperar extraer de ella un equilibrio de Nash con las propiedades deseadas. De hecho, en [13] los autores mencionan que esto es posible si uno está interesado en encontrar un equilibrio de Nash (aproximado). El objetivo de este artículo es extender esto a equilibrios de Nash exactos. 1.1 Nuestros Resultados En este artículo, estudiamos juegos gráficos de n jugadores y 2 acciones en árboles de grado acotado para los cuales la estructura de datos de [13] tiene tamaño polinómico en n. Nos enfocamos en el problema de encontrar equilibrios de Nash exactos con ciertas propiedades socialmente deseables. En particular, mostramos cómo encontrar un equilibrio de Nash que maximiza (casi) el bienestar social, es decir, la suma de las ganancias de los jugadores, y mostramos cómo encontrar un equilibrio de Nash que satisface (casi) los límites de ganancias prescritos para todos los jugadores. Los juegos gráficos en árboles de grado acotado tienen una estructura algebraica simple. Una característica atractiva, que se desprende de [13], es que cada juego de este tipo tiene un equilibrio de Nash en el cual la estrategia de cada jugador es un número racional. La sección 3 estudia la estructura algebraica de aquellos equilibrios de Nash que maximizan el bienestar social. Demostramos (Teoremas 1 y 2) que, sorprendentemente, el conjunto de equilibrios de Nash que maximizan el bienestar social es más complejo. De hecho, para cualquier número algebraico α ∈ [0, 1] con grado a lo sumo n, exhibimos un juego gráfico en un camino de longitud O(n) tal que, en el equilibrio de Nash único que maximiza el bienestar social de este juego, uno de los jugadores juega la estrategia mixta α. Este resultado muestra que puede ser difícil representar un equilibrio de Nash óptimo. Parece ser una característica novedosa del escenario que consideramos aquí, que un equilibrio de Nash óptimo es difícil de representar, en una situación donde es fácil encontrar y representar un equilibrio de Nash. Dado que el equilibrio de Nash que maximiza el bienestar social puede ser difícil de representar eficientemente, debemos conformarnos con una aproximación. Sin embargo, la diferencia crucial entre nuestro enfoque y el de los trabajos anteriores [13, 16, 19] es que requerimos que nuestro algoritmo produzca un equilibrio de Nash exacto, aunque no necesariamente el óptimo con respecto a nuestros criterios. En la Sección 4, describimos un algoritmo que cumple con este requisito. Específicamente, proponemos un algoritmo que, para cualquier > 0, encuentra un equilibrio de Nash cuya recompensa total está dentro de de lo óptimo. Se ejecuta en tiempo polinómico (Teorema 3,4) para cualquier juego gráfico en un árbol de grado acotado para el cual la estructura de datos propuesta por [13] (la llamada política de mejor respuesta, definida a continuación) tiene un tamaño poli(n) (nota que, como se muestra en [9], esto siempre es el caso cuando el grafo subyacente es un camino). Un resultado relacionado en un contexto diferente fue obtenido por Datta [8], quien muestra que los juegos de n jugadores con 2 acciones son universales en el sentido de que cualquier variedad algebraica real puede ser representada como el conjunto de equilibrios de Nash totalmente mixtos de tales juegos. Precisamente, el tiempo de ejecución de nuestro algoritmo es polinómico en n, Pmax y 1/, donde Pmax es el valor absoluto máximo de una entrada de una matriz de pagos, es decir, es un algoritmo seudopolinómico, aunque es completamente polinómico con respecto a . Mostramos (Sección 4.1) que bajo ciertas restricciones en las matrices de pagos, el algoritmo puede ser transformado en un algoritmo de tiempo polinómico (verdaderamente) que produce un equilibrio de Nash cuya ganancia total está dentro de un factor de 1 − del óptimo. En la Sección 5, consideramos el problema de encontrar un equilibrio de Nash en el que la ganancia esperada de cada jugador Vi supere un umbral prescrito Ti. Usando la idea de la Sección 4, presentamos (Teorema 5) un esquema de aproximación en tiempo polinómico completo para este problema. El tiempo de ejecución del algoritmo está acotado por un polinomio en n, Pmax y . Si la instancia tiene un equilibrio de Nash que cumple con los umbrales prescritos, entonces el algoritmo construye un equilibrio de Nash en el que la recompensa esperada de cada jugador Vi es al menos Ti − . En la Sección 6, presentamos otros criterios naturales para seleccionar un buen equilibrio de Nash y mostramos que los algoritmos descritos en las dos secciones anteriores pueden ser utilizados como bloques de construcción para encontrar equilibrios de Nash que cumplan con estos criterios. En particular, en la Sección 6.1 mostramos cómo encontrar un equilibrio de Nash que aproxima el máximo bienestar social, garantizando que la ganancia de cada individuo esté cerca de un umbral prescrito. En la Sección 6.2 mostramos cómo encontrar un equilibrio de Nash que maximiza (casi) al máximo el pago individual mínimo. Finalmente, en la Sección 6.3 mostramos cómo encontrar un equilibrio de Nash en el que las ganancias individuales de los jugadores están cerca unas de otras. 1.2 Trabajo Relacionado Nuestro esquema de aproximación (Teorema 3 y Teorema 4) muestra un contraste entre los juegos que estudiamos y los juegos de n acciones de dos jugadores, para los cuales los problemas correspondientes suelen ser intratables. Para juegos de n acciones de dos jugadores, el problema de encontrar equilibrios de Nash con propiedades especiales suele ser NP-duro. En particular, este es el caso de los equilibrios de Nash que maximizan el bienestar social [11, 6]. Además, es probable que sea intratable incluso aproximarse a tales equilibrios. En particular, Chen, Deng y Teng [4] muestran que existe algún , polinomio inverso en n, para el cual calcular un equilibrio de Nash en juegos de 2 jugadores con n acciones por jugador es PPAD-completo. Lipton y Markakis [15] estudian las propiedades algebraicas de los equilibrios de Nash, y señalan que los algoritmos estándar de eliminación de cuantificadores pueden ser utilizados para resolverlos. Ten en cuenta que estos algoritmos no son de tiempo polinómico en general. Los juegos que estudiamos en este artículo tienen equilibrios de Nash computables en tiempo polinómico en los que todas las estrategias mixtas son números racionales, pero un equilibrio de Nash óptimo puede incluir necesariamente estrategias mixtas con un alto grado algebraico. Un equilibrio correlacionado (CE) (introducido por Aumann [2]) es una distribución sobre vectores de acciones de jugadores con la propiedad de que si a cualquier jugador se le dice su propia acción (el valor de su propio componente) de un vector generado por esa distribución, entonces no puede aumentar su ganancia esperada cambiando su acción. Cualquier equilibrio de Nash es una EC, pero la afirmación contraria no se cumple en general. A diferencia de los equilibrios de Nash, los equilibrios correlacionados se pueden encontrar para juegos gráficos de bajo grado (así como para otras clases de juegos multijugador representados de manera concisa) en tiempo polinómico [17]. Pero, para juegos gráficos es NP-duro encontrar un equilibrio correlacionado que maximice la recompensa total [18]. Sin embargo, los resultados de NP-dificultad se aplican a juegos más generales que el que consideramos aquí, en particular los grafos no son árboles. Del [2] también se sabe que existen juegos de 2 jugadores y 2 acciones para los cuales el pago total esperado 163 del mejor equilibrio correlacionado es mayor que el mejor equilibrio de Nash, y discutimos este tema más a fondo en la Sección 7.2. CONSIDERACIONES PRELIMINARES Y NOTACIÓN Consideramos juegos gráficos en los que el grafo subyacente G es un árbol de n vértices, en el que cada vértice tiene a lo sumo Δ hijos. Cada vértice tiene dos acciones, que están representadas por 0 y 1. Una estrategia mixta de un jugador V se representa como un único número v ∈ [0, 1], que denota la probabilidad de que V seleccione la acción 1. Para los propósitos del algoritmo, el árbol está enraizado de manera arbitraria. Para mayor comodidad, asumimos sin pérdida de generalidad que la raíz tiene un solo hijo y que su recompensa es independiente de la acción elegida por el hijo. Esto se puede lograr primero eligiendo una raíz arbitraria del árbol, y luego agregando un padre ficticio de esta raíz, asignándole una función de recompensa constante, por ejemplo, 0. Dado un borde (V, W) del árbol G, y una estrategia mixta w para W, sea G(V,W), W=w la instancia obtenida de G mediante (1) eliminar todos los nodos Z que están separados de V por W (es decir, todos los nodos Z tales que el camino de Z a V pasa por W), y (2) restringir la instancia de modo que se requiera que W juegue la estrategia mixta w. Definición 1. Supongamos que (V, W) es una arista del árbol, que v es una estrategia mixta para V y que w es una estrategia mixta para W. Decimos que v es una mejor respuesta potencial a w (denotado por v ∈ pbrV (w)) si hay un equilibrio en la instancia G(V,W), W = w en el que V tiene una estrategia mixta v. Definimos la política de mejor respuesta para V, dada W, como B(W, V) = {(w, v) | v ∈ pbrV (w), w ∈ [0, 1]}. El paso ascendente del algoritmo genérico de [13] considera cada nodo V (que no sea la raíz) y calcula la política de mejor respuesta para V dada su padre. Con las suposiciones anteriores sobre la raíz, el paso aguas abajo es sencillo. La raíz selecciona una estrategia mixta w para la raíz W y una estrategia mixta v ∈ B(W, V) para cada hijo V de W. Indica a cada niño V que juegue v. El resto del pase descendente es recursivo. Cuando un nodo V recibe instrucciones de su padre para adoptar la estrategia mixta v, realiza lo siguiente para cada hijo U: encuentra un par (v, u) ∈ B(V, U) (con el mismo valor de v que le fue dado por su padre) e instruye a U a jugar u. La mejor política de respuesta para un vértice U dado su padre V puede representarse como una unión de rectángulos, donde un rectángulo está definido por un par de intervalos cerrados (IV, IU) y consiste en todos los puntos en IV × IU; puede ser el caso de que uno o ambos de los intervalos IV e IU consistan en un solo punto. Para realizar cálculos en B(V, U) y para limitar el número de rectángulos, [9] utilizó el concepto de un punto de evento, el cual se define de la siguiente manera. Para cualquier conjunto A ⊆ [0, 1]2 que se represente como una unión de un número finito de rectángulos, decimos que un punto u ∈ [0, 1] en el eje U es un punto de evento U de A si u = 0 o u = 1 o la representación de A contiene un rectángulo de la forma IV × IU y u es un extremo de IU; los puntos de evento V se definen de manera similar. Para muchos juegos considerados en este documento, el grafo subyacente es un camino de n vértices, es decir, un grafo G = (V, E) con V = {V1, . . . , Vn} y E = {(V1, V2), . . . , (Vn−1, Vn)}. En [9], se demostró que para tales juegos, la política de mejor respuesta tiene solo un número polinomial de rectángulos. La prueba de que el número de rectángulos en B(Vj+1, Vj) es polinomial procede primero mostrando que el número de puntos de evento en B(Vj+1, Vj) no puede exceder el número de puntos de evento en B(Vj, Vj-1) en más de 2, y utilizando este hecho para acotar el número de rectángulos en B(Vj+1, Vj). Sean P0 (V) y P1 (V) las ganancias esperadas para V cuando juega 0 y 1, respectivamente. Tanto P0 (V) como P1 (V) son funciones multilineales de las estrategias de los vecinos de V. En lo que sigue, usaremos frecuentemente la siguiente observación simple. AFIRMACIÓN 1. Para un vértice V con un único hijo U y padre W, dados cualquier A, B, C, D ∈ Q, se pueden seleccionar las recompensas para V de manera que P0(V) = Auw + Bu + Cw + D, P1(V) = Auw + Bu + Cw + D. Además, si todos los valores de A, B, C, D son enteros, los pagos para V también son enteros. PRUEBA. Daremos la prueba para P0 (V); la prueba para P1 (V) es similar. Para i, j = 0, 1, sea Pij la ganancia para V cuando U juega i, V juega 0 y W juega j. Tenemos P0 (V) = P00(1 − u)(1 − w) + P10u(1 − w) + P01(1 − u)w + P11uw. Tenemos que seleccionar los valores de Pij de manera que P00 − P10 − P01 + P11 = A, −P00 + P10 = B, −P00 + P01 = C, P00 = D. Es fácil ver que la solución única está dada por P00 = D, P01 = C + D, P10 = B + D, P11 = A + B + C + D. La entrada a todos los algoritmos considerados en este documento incluye las matrices de pago para cada jugador. Suponemos que todos los elementos de estas matrices son enteros. Sea Pmax el mayor valor absoluto de cualquier elemento de cualquier matriz de pagos. Entonces, la entrada consiste en un máximo de n2Δ+1 números, cada uno de los cuales puede ser representado usando log Pmax bits. EQUILIBRIOS DE NASH QUE MAXIMIZAN EL BIENESTAR SOCIAL: SOLUCIONES EN R \\ Q Desde el punto de vista del bienestar social, el mejor equilibrio de Nash es aquel que maximiza la suma de las ganancias esperadas de los jugadores. Lamentablemente, resulta que calcular exactamente dicho perfil estratégico no es posible: en esta sección, mostramos que incluso si todas las ganancias de los jugadores son números enteros, el perfil estratégico que maximiza la ganancia total puede tener coordenadas irracionales; además, puede involucrar números algebraicos de un grado arbitrario. 3.1 Calentamiento: irracionales cuadráticos Comenzamos proporcionando un ejemplo de un juego gráfico en un camino de longitud 3 con ganancias enteras tal que en el equilibrio de Nash que maximiza la ganancia total, uno de los jugadores tiene una estrategia en R \\ Q. En la siguiente subsección, extenderemos este ejemplo a números algebraicos de grado arbitrario n; para hacerlo, debemos considerar caminos de longitud O(n). TEOREMA 1. Existe un juego gráfico G de pago entero en un camino de 3 vértices UVW tal que, en cualquier equilibrio de Nash de G que maximice el bienestar social, la estrategia u del jugador U y el pago total p cumplen u, p ∈ R \\ Q. PRUEBA. Las recompensas para los jugadores en G están especificadas de la siguiente manera. La ganancia para U es idénticamente 0, es decir, P0 (U) = P1 (U) = 0. Usando la Reclamación 1, seleccionamos las ganancias para V de modo que P0 (V) = -uw + 3w y P1 (V) = P0 (V) + w(u + 2) - (u + 1), donde u y w son las estrategias (mixtas) de U y W, respectivamente. Se deduce que V es indiferente entre jugar 0 y 1 si y solo si w = f(u) = u+1 u+2. Observa que para cualquier u ∈ [0, 1] tenemos f(u) ∈ [0, 1]. La recompensa para W es 0 si selecciona la misma acción que V y 1 en caso contrario. AFIRMACIÓN 2. Todos los equilibrios de Nash del juego G son de la forma (u, 1/2, f(u)). Es decir, en cualquier equilibrio de Nash, V juega v = 1/2 y W juega w = f(u). Además, para cualquier valor de u, el vector de estrategias (u, 1/2, f(u)) constituye un equilibrio de Nash. PRUEBA. Es fácil comprobar que para cualquier u ∈ [0, 1], el vector (u, 1/2, f(u)) es un equilibrio de Nash. De hecho, U está dispuesto a jugar 164 cualquier estrategia mixta u, sin importar lo que hagan V y W. Además, V es indiferente entre 0 y 1 siempre y cuando w = f(u), por lo que puede jugar 1/2. Finalmente, si V juega con probabilidad igual a 0 y 1, W es indiferente entre 0 y 1, por lo que puede jugar f(u). Por el contrario, supongamos que v > 1/2. Entonces W prefiere estrictamente jugar 0, es decir, w = 0. Entonces para V tenemos P1 (V) = P0 (V) - (u + 1), es decir, P1 (V) < P0 (V), lo que implica v = 0, una contradicción. De manera similar, si v < 1/2, el jugador W prefiere jugar 1, por lo que tenemos w = 1. Por lo tanto, P1 (V) = P0 (V) + (u + 2) - (u + 1), es decir, P1 (V) > P0 (V), lo que implica v = 1, una contradicción. Finalmente, si v = 1/2, pero w = f(u), el jugador V no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Esto completa la prueba de la Afirmación 2. Según la Afirmación 2, la ganancia total en cualquier equilibrio de Nash de este juego es una función de u. Más específicamente, la ganancia para U es 0, la ganancia para V es −uf(u) + 3f(u), y la ganancia para W es 1/2. Por lo tanto, el equilibrio de Nash con la máxima ganancia total corresponde al valor de u que maximiza g(u) = −u (u + 1) u + 2 + 3 u + 1 u + 2 = − (u − 3)(u + 1) u + 2. Para encontrar los extremos de g(u), calculamos h(u) = − d du g(u). Tenemos h(u) = (2u − 2)(u + 2) − (u − 3)(u + 1) (u + 2)2 = u2 + 4u − 1 (u + 2)2. Por lo tanto, h(u) = 0 si y solo si u ∈ {−2 + √ 5, −2 − √ 5}. Ten en cuenta que −2 + √ 5 ∈ [0, 1]. La función g(u) cambia de signo en −2, −1 y 3. Tenemos g(u) < 0 para g > 3, g(u) > 0 para u < −2, por lo que el extremo de g(u) que se encuentra entre 1 y 3, es decir, u = −2 + √ 5, es un máximo local. Concluimos que el equilibrio de Nash que maximiza el bienestar social para este juego está dado por el vector de estrategias (−2+√ 5, 1/2, (5 − √ 5)/5). El pago total respectivo es 0 − ( √ 5 − 5)( √ 5 − 1) √ 5 + 1 2 = 13/2 − 2 √ 5. Esto concluye la prueba del Teorema 1. 3.2 Estrategias de grado arbitrario. Hemos demostrado que en el equilibrio de Nash que maximiza el bienestar social, las estrategias de algunos jugadores pueden ser irracionales cuadráticas, al igual que la recompensa total. En esta subsección, extenderemos este resultado para mostrar que podemos construir un juego gráfico de pago entero en un camino cuyo equilibrio de Nash maximizador del bienestar social involucra números algebraicos arbitrarios en [0, 1]. TEOREMA 2. Para cualquier número algebraico α de grado n ∈ [0, 1], existe un juego gráfico de pago entero en un camino de longitud O(n) tal que, en todas las equilibrios de Nash que maximizan el bienestar social de este juego, uno de los jugadores juega α. PRUEBA. Nuestra prueba consta de dos pasos. Primero, construimos una expresión racional R(x) y un segmento [x , x ] tal que x , x ∈ Q y α sea el único máximo de R(x) en [x , x ]. Segundo, construimos un juego gráfico cuyos equilibrios de Nash pueden ser parametrizados por u ∈ [x, x], de modo que en el equilibrio que corresponde a u, la recompensa total es R(u) y, además, la estrategia de algunos jugadores es u. Se deduce que para alcanzar el equilibrio de Nash que maximiza la ganancia, este jugador tiene que jugar α. Los detalles siguen. LEMMA 1. \n\nLEMMA 1. Dado un número algebraico α ∈ [0, 1], deg(α) = n, existen K2, . . . , K2n+2 ∈ Q y x , x ∈ (0, 1) ∩ Q tal que α es el único máximo de R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 en [x , x ]. PRUEBA. Sea P(x) el polinomio minimal de α, es decir, un polinomio de grado n con coeficientes racionales cuyo coeficiente principal es 1 tal que P(α) = 0. Sea A = {α1, . . . , αn} el conjunto de todas las raíces de P(x). Considera el polinomio Q1(x) = −P2(x). Tiene las mismas raíces que P(x), y además, para cualquier x ∈ A tenemos Q1(x) < 0. Por lo tanto, A es el conjunto de todos los máximos de Q1(x). Ahora, establece R(x) = Q1(x) (x+2)...(x+2n+1)(x+2n+2). Observa que R(x) ≤ 0 para todo x ∈ [0, 1] y R(x) = 0 si y solo si Q1(x) = 0. Por lo tanto, el conjunto A también es el conjunto de todos los máximos de R(x) en [0, 1]. Sea d = min{|αi − α| | αi ∈ A, αi = α}, y establezca α = max{α − d/2, 0}, α = min{α + d/2, 1}. Claramente, α es el único cero (y por lo tanto, el único máximo) de R(x) en [α , α ]. Sean x y x algunos números racionales en (α, α) y (α, α), respectivamente; observe que al excluir los extremos de los intervalos aseguramos que x, x = 0, 1. Como [x, x] ⊂ [α, α], tenemos que α es el único máximo de R(x) en [x, x]. Dado que R(x) es una expresión racional adecuada y todas las raíces de su denominador son simples, por el teorema de descomposición en fracciones parciales, R(x) puede representarse como R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2, donde K2, . . . , K2n+2 son números racionales. Considera un juego gráfico en el camino U−1V−1U0V0U1V1 . . . Uk−1Vk−1Uk, donde k = 2n + 2. Intuitivamente, queremos que cada triple (Ui−1, Vi−1, Ui) se comporte de manera similar a los jugadores U, V y W del juego descrito en la subsección anterior. Más precisamente, definimos las ganancias de los jugadores de la siguiente manera. • La ganancia para U−1 es 0 sin importar lo que hagan los demás. • La ganancia esperada para V−1 es 0 si juega 0 y u0 − (x − x )u−1 −x si juega 1, donde u0 y u−1 son las estrategias de U0 y U−1, respectivamente. • La ganancia esperada para V0 es 0 si juega 0 y u1(u0 + 1)− u0 si juega 1, donde u0 y u1 son las estrategias de U0 y U1, respectivamente. • Para cada i = 1, . . . , k − 1, la ganancia esperada para Vi cuando juega 0 es P0 (Vi) = Aiuiui+1 − Aiui+1, y la ganancia esperada para Vi cuando juega 1 es P1 (Vi) = P0 (Vi) + ui+1(2 − ui) − 1, donde Ai = −Ki+1 y ui+1 y ui son las estrategias de Ui+1 y Ui, respectivamente. • Para cada i = 0, . . . , k, la ganancia para Ui no depende de Vi y es 1 si Ui y Vi−1 seleccionan acciones diferentes y 0 en caso contrario. Ahora caracterizaremos los equilibrios de Nash de este juego utilizando una secuencia de afirmaciones. AFIRMACIÓN 3. En todos los equilibrios de Nash de este juego, V−1 juega 1/2, y las estrategias de u−1 y u0 satisfacen u0 = (x − x )u−1 + x. Por consiguiente, en todos los equilibrios de Nash tenemos u0 ∈ [x , x ]. 165 PRUEBA. La prueba es similar a la del Reclamo 2. Que f(u−1) = (x − x )u−1 + x. Claramente, el jugador V−1 es indiferente entre jugar 0 y 1 si y solo si u0 = f(u−1). Supongamos que v−1 < 1/2. Entonces U0 prefiere estrictamente jugar 1, es decir, u0 = 1, por lo que tenemos P1 (V−1) = P0 (V−1) + 1 − (x − x )u−1 − x . Dado que 1 − x ≤ 1 − (x − x )u−1 − x ≤ 1 − x para u−1 ∈ [0, 1] y x < 1, tenemos que P1 (V−1) > P0 (V−1), por lo que V−1 prefiere jugar 1, lo cual es una contradicción. De manera similar, si v−1 > 1/2, el jugador U0 prefiere estrictamente jugar 0, es decir, u0 = 0, por lo que tenemos P1 (V−1) = P0 (V−1) − (x − x )u−1 − x. Dado que x < x, x > 0, tenemos P1 (V−1) < P0 (V−1), por lo que V−1 prefiere jugar 0, lo cual es una contradicción. Finalmente, si V−1 juega 1/2, pero u0 = f(u−1), el jugador V−1 no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Además, ten en cuenta que f(0) = x, f(1) = x y, además, f(u−1) ∈ [x, x] si y solo si u−1 ∈ [0, 1]. Por lo tanto, en todos los equilibrios de Nash de este juego tenemos u0 ∈ [x , x ]. AFIRMACIÓN 4. En todos los equilibrios de Nash de este juego para cada i = 0, . . . , k − 1, tenemos vi = 1/2, y las estrategias de los jugadores Ui y Ui+1 satisfacen ui+1 = fi(ui), donde f0(u) = u/(u + 1) y fi(u) = 1/(2 − u) para i > 0. PRUEBA. La prueba de esta afirmación es también similar a la de la Afirmación 2. Utilizamos inducción en i para demostrar que la afirmación de la proposición es verdadera y, además, ui = 1 para i > 0. Para el caso base i = 0, observe que u0 = 0 según la afirmación anterior (recuerde que x, x se seleccionan de manera que x, x = 0, 1) y considere el trío (U0, V0, U1). Que v0 sea la estrategia de V0. Primero, supongamos que v0 > 1/2. Entonces U1 prefiere estrictamente jugar 0, es decir, u1 = 0. Entonces, para V0 tenemos P1 (V0) = P0 (V0) − u0. Dado que u0 = 0, tenemos que P1 (V0) < P0 (V0), lo cual implica v1 = 0, una contradicción. De manera similar, si v0 < 1/2, el jugador U1 prefiere jugar 1, por lo que tenemos u1 = 1. Por lo tanto, P1 (V0) = P0 (V0) + 1. Se sigue que P1 (V0) > P0 (V0), lo cual implica v0 = 1, una contradicción. Finalmente, si v0 = 1/2, pero u1 = u0/(u0 + 1), el jugador V0 no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Además, dado que u1 = u0/(u0 + 1) y u0 ∈ [0, 1], tenemos que u1 = 1. El argumento para el paso inductivo es similar. Es decir, supongamos que la afirmación se demuestra para todos los i < i y consideremos el trío (Ui, Vi, Ui+1). Que vi sea la estrategia de Vi. Primero, supongamos que vi > 1/2. Entonces Ui+1 prefiere estrictamente jugar 0, es decir, ui+1 = 0. Entonces, para Vi tenemos P1 (Vi) = P0 (Vi)−1, es decir, P1 (Vi) < P0 (Vi), lo cual implica vi = 0, una contradicción. De manera similar, si vi < 1/2, el jugador Ui+1 prefiere jugar 1, por lo que tenemos ui+1 = 1. Por lo tanto, P1 (Vi) = P0 (Vi) + 1 − ui. Por hipótesis inductiva, tenemos ui < 1. Por consiguiente, P1 (Vi) > P0 (Vi), lo que implica vi = 1, una contradicción. Finalmente, si vi = 1/2, pero ui+1 = 1/(2 − ui), el jugador Vi no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Además, como ui+1 = 1/(2 − ui) y ui < 1, tenemos ui+1 < 1. AFIRMACIÓN 5. Cualquier perfil estratégico de la forma (u−1, 1/2, u0, 1/2, u1, 1/2, . . . , uk−1, 1/2, uk), donde u−1 ∈ [0, 1], u0 = (x − x )u−1 + x , u1 = u0/(u0 + 1), y ui+1 = 1/(2 − ui) para i ≥ 1, constituye un equilibrio de Nash. PRUEBA. Primero, las ganancias del jugador U−1 no dependen de las acciones de otros jugadores, por lo que es libre de jugar cualquier estrategia en [0, 1]. Si u0 = (x −x )u−1 +x , el jugador V−1 es indiferente entre 0 y 1, por lo que está contento de jugar 1/2; un argumento similar se aplica a los jugadores V0, . . . , Vk−1. Finalmente, para cada i = 0, . . . , k, las ganancias del jugador Ui solo dependen de la estrategia del jugador Vi−1. En particular, siempre y cuando vi−1 = 1/2, el jugador Ui es indiferente entre jugar 0 y 1, por lo que puede jugar cualquier estrategia mixta ui ∈ [0, 1]. Para completar la prueba, observe que (x − x )u−1 + x ∈ [0, 1] para todo u−1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] para todo u0 ∈ [0, 1], y 1/(2 − ui) ∈ [0, 1] para todo ui ∈ [0, 1], por lo que tenemos ui ∈ [0, 1] para todo i = 0, . . . , k. Ahora, calculemos la ganancia total bajo un perfil estratégico de la forma dada en la Afirmación 5. El pago para U−1 es 0, y el pago esperado para cada uno de los Ui, i = 0, . . . , k, es 1/2. Los beneficios esperados para V−1 y V0 son 0. Finalmente, para cualquier i = 1, . . . , k − 1, la ganancia esperada para Vi es Ti = Aiuiui+1 − Aiui+1. Se deduce que para encontrar un equilibrio de Nash con el mayor pago total, debemos maximizar Pk−1 i=1 Ti sujeto a las condiciones u−1 ∈ [0, 1], u0 = (x −x )u−1+x , u1 = u0/(u0+1), y ui+1 = 1/(2−ui) para i = 1, . . . , k − 1. Nos gustaría expresar Pk−1 i=1 Ti como una función de u0. Para simplificar la notación, establezca u = u0. LEMMA 2. \n\nLEMMA 2. Para i = 1, . . . , k, tenemos ui = u+i−1 u+i. PRUEBA. La demostración es por inducción en i. Para i = 1, tenemos u1 = u/(u + 1). Ahora, para i ≥ 2 supongamos que ui−1 = (u + i − 2)/(u + i − 1). Tenemos ui = 1/(2 − ui−1) = (u + i − 1)/(2u + 2i − 2 − u − i + 2) = (u + i − 1)/(u + i). Se sigue que para i = 1, . . . , k − 1 tenemos Ti = Ai u + i − 1 u + i u + i u + i + 1 − Ai u + i u + i + 1 = −Ai 1 u + i + 1 = Ki+1 u + i + 1. Observa que a medida que u−1 varía de 0 a 1, u varía de x a x. Por lo tanto, para maximizar el pago total, debemos elegir u ∈ [x , x ] de manera que maximicemos K2 u + 2 + · · · + Kk u + k = R(u). Por construcción, el único máximo de R(u) en [x, x] es α. Se deduce que en el equilibrio de Nash que maximiza las ganancias de nuestro juego, U0 juega α. Finalmente, cabe destacar que las recompensas en nuestro juego son racionales en lugar de enteras. Sin embargo, es fácil ver que podemos multiplicar todas las ganancias de un jugador por su máximo común denominador sin afectar su estrategia. En el juego resultante, todas las ganancias son enteras. Esto concluye la demostración del Teorema 2.4. APROXIMANDO EL EQUILIBRIO DE NASH ÓPTIMO SOCIAL Hemos visto que el equilibrio de Nash que maximiza el bienestar social puede implicar estrategias que no están en Q. Por lo tanto, en esta sección nos enfocamos en encontrar un equilibrio de Nash que sea casi óptimo desde la perspectiva del bienestar social. Proponemos un algoritmo que, para cualquier > 0, encuentra un equilibrio de Nash cuya recompensa total está dentro de de la óptima. El tiempo de ejecución de este algoritmo es polinómico en 1/ , n y |Pmax| (recuerde que Pmax es el valor absoluto máximo de una entrada de una matriz de pagos). Si bien el resultado negativo de la sección anterior es para juegos gráficos en caminos, nuestro algoritmo se aplica a una gama más amplia de escenarios. Específicamente, se ejecuta en tiempo polinómico en árboles de grado acotado siempre que la política de mejor respuesta de cada vértice, dada su padre, pueda representarse como una unión de un número polinómico de rectángulos. Ten en cuenta que los grafos de camino siempre cumplen esta condición: en [9] mostramos cómo calcular dicha representación, dado un grafo con grado máximo 2. Por consiguiente, para grafos de camino el tiempo de ejecución de nuestro algoritmo está garantizado de ser polinomial. (Nótese que [9] exhibe una familia de juegos gráficos en árboles de grado acotado para los cuales las políticas de mejor respuesta de algunos de los vértices, dados sus padres, tienen tamaño exponencial, cuando se representan como uniones de rectángulos). Debido a restricciones de espacio, en esta versión del artículo presentamos el algoritmo para el caso en el que el grafo subyacente del juego gráfico es un camino. Luego presentamos nuestro resultado para el caso general; la demostración se puede encontrar en la versión completa de este artículo [10]. Supongamos que s es un perfil estratégico para un juego gráfico G. Es decir, s asigna una estrategia mixta a cada vértice de G. Sea EPV (s) el pago esperado del jugador V bajo s y sea EP(s) = Σ V EPV (s). Sea M(G) = max{EP(s) | s es un equilibrio de Nash para G}. TEOREMA 3. Supongamos que G es un juego gráfico en un camino de n vértices. Entonces, para cualquier > 0 existe un algoritmo que construye un equilibrio de Nash s para G que satisface EP(s) ≥ M(G)− . El tiempo de ejecución del algoritmo es O(n4 P3 max/ 3) PRUEBA. Sea {V1, . . . , Vn} el conjunto de todos los jugadores. Comenzamos construyendo las mejores políticas de respuesta para todos los Vi, i = 1, . . . , n − 1. Como se muestra en [9], esto se puede hacer en tiempo O(n3). Sea N > 5n un parámetro que se seleccionará más adelante, establezca δ = 1/N y defina X = {jδ | j = 0, . . . , N}. Decimos que vj es un punto de evento para un jugador Vi si es un punto de evento de Vi para B(Vi, Vi−1) o B(Vi+1, Vi). Para cada jugador Vi, considera un conjunto finito de estrategias Xi dado por Xi = X ∪ {vj | vj es un punto de evento para Vi}. Se ha demostrado en [9] que para cualquier i = 2, . . . , n, la política de mejor respuesta B(Vi, Vi−1) tiene como máximo 2n + 4 puntos de eventos de Vi. Dado que requerimos N > 5n, tenemos |Xi| ≤ 2N; asumimos sin pérdida de generalidad que |Xi| = 2N. Ordena los elementos de Xi en orden creciente como x1 i = 0 < x2 i < · · · < x2N i. Nos referiremos a las estrategias en Xi como estrategias discretas del jugador Vi; un perfil de estrategia en el que cada jugador tiene una estrategia discreta se referirá como un perfil de estrategia discreta. Ahora demostraremos que incluso si restringimos a cada jugador Vi a estrategias de Xi, los jugadores aún pueden lograr un equilibrio de Nash, y además, el mejor equilibrio de Nash (con respecto al bienestar social) tiene un pago total de al menos M(G) - siempre y cuando N sea lo suficientemente grande. Sea s un perfil de estrategia que maximiza el bienestar social. Es decir, sea s = (s1, . . . , sn) donde si es la estrategia mixta del jugador Vi y EP(s) = M(G). Para i = 1, . . . , n, sea ti = max{xj i | xj i ≤ si}. Primero, demostraremos que el perfil estratégico t = (t1, . . . , tn) es un equilibrio de Nash para G. Fijemos cualquier i, 1 < i ≤ n, y sea R = [v1, v2]×[u1, u2] el rectángulo en B(Vi, Vi−1) que contiene (si, si−1). Dado que v1 es un punto de evento Vi de B(Vi, Vi−1), tenemos v1 ≤ ti, por lo que el punto (ti, si−1) está dentro de R. De manera similar, el punto u1 es un punto de evento Vi−1 de B(Vi, Vi−1), por lo que tenemos u1 ≤ ti−1, y por lo tanto el punto (ti, ti−1) está dentro de R. Esto significa que para cualquier i, 1 < i ≤ n, tenemos ti−1 ∈ pbrVi−1 (ti), lo que implica que t = (t1, . . . , tn) es un equilibrio de Nash para G. Ahora, estimemos la pérdida esperada en el bienestar social causada por jugar t en lugar de s. LEMA 3. Para cualquier par de perfiles de estrategia t, s tales que |ti − si| ≤ δ, tenemos |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ para cualquier i = 1, . . . , n. PRUEBA. Sea Pi klm el pago del jugador Vi, cuando juega k, Vi−1 juega l y Vi+1 juega m. Fijemos i = 1, . . . , n y para k, l, m ∈ {0, 1}, definamos tklm = tk i−1(1 − ti−1)1−k tl i(1 − ti)1−l tm i+1(1 − ti+1)1−m sklm = sk i−1(1 − si−1)1−k sl i(1 − si)1−l sm i+1(1 − si+1)1−m. Mostraremos ahora que para cualquier k, l, m ∈ {0, 1} tenemos |tklm − sklm | ≤ 3δ; claramente, esto implica el lema. De hecho, fijar k, l, m ∈ {0, 1}. Establecer x = tk i−1(1 − ti−1)1−k , x = sk i−1(1 − si−1)1−k , y = tl i(1 − ti)1−l , y = sl i(1 − si)1−l , z = tm i+1(1 − ti+1)1−m , z = sm i+1(1 − si+1)1−m. Observa que si k = 0 entonces x − x = (1 − ti−1) − (1 − si−1), y si k = 1 entonces x − x = ti−1 − si−1, por lo tanto |x − x | ≤ δ. Un argumento similar muestra |y − y | ≤ δ, |z − z | ≤ δ. Además, tenemos x, x, y, y, z, z ∈ [0, 1]. Por lo tanto, |tklm − sklm | = |xyz − x y z | = |xyz − x yz + x yz − x y z + x y z − x y z | ≤ |x − x |yz + |y − y |x z + |z − z |x y ≤ 3δ. El Lema 3 implica que Pn i=1 |EPVi (s) − EPVi (t)| ≤ 24nPmaxδ, por lo que al elegir δ < /(24nPmax), o, equivalentemente, estableciendo N > 24nPmax/ , podemos asegurar que el pago esperado total para el perfil estratégico t esté dentro de de lo óptimo. Ahora demostraremos que podemos encontrar el mejor equilibrio de Nash discreto (con respecto al bienestar social) utilizando programación dinámica. Dado que t es un perfil de estrategia discreto, esto significa que el perfil de estrategia encontrado por nuestro algoritmo será al menos tan bueno como t. Defina ml,k i como la máxima ganancia total que V1, . . . , Vi−1 pueden lograr si cada Vj, j ≤ i, elige una estrategia de Xj, para cada j < i la estrategia de Vj es una mejor respuesta potencial a la estrategia de Vj+1, y, además, Vi−1 juega xl i−1, Vi juega xk i. Si no hay forma de elegir las estrategias para V1, . . . , Vi−1 que cumplan con estas condiciones, establecemos ml,k i = −∞. Los valores ml,k i , i = 1, . . . , n; k, l = 1, . . . , N, pueden ser calculados de forma inductiva, de la siguiente manera. Tenemos ml,k 1 = 0 para k, l = 1, . . . , N. Ahora, supongamos que ya hemos calculado ml,k j para todos los j < i; k, l = 1, . . . , N. Para calcular mk,l i , primero verificamos si (xk i , xl i−1) ∈ B(Vi, Vi−1). Si este no es el caso, tenemos ml,k i = −∞. De lo contrario, considera el conjunto Y = Xi−2 ∩ pbrVi−2 (xl i−1), es decir, el conjunto de todas las estrategias discretas de Vi−2 que son potenciales mejores respuestas a xl i−1. La prueba del Teorema 1 en [9] implica que el conjunto pbrVi−2 (xl i−1) no está vacío: el jugador Vi−2 tiene una mejor respuesta potencial a cualquier estrategia de Vi−1, en particular, xl i−1. Por la construcción del conjunto Xi−2, esto implica que Y no está vacío. Para cada xj i−2 ∈ Y, dejemos que pjlk sea la ganancia que Vi−1 recibe cuando Vi−2 juega xj i−2, Vi−1 juega xl i−1, y Vi juega xk i. Claramente, pjlk se puede calcular en tiempo constante. Entonces tenemos ml,k i = max{mj,l i−1 + pjlk | xj i−2 ∈ Y }. Finalmente, supongamos que hemos calculado ml,k n para l, k = 1, . . . , N. Todavía necesitamos tener en cuenta el pago del jugador Vn. Por lo tanto, consideramos todos los pares (xk n, xl n−1) que satisfacen xl n−1 ∈ pbrVn−1 (xk n), y elegimos aquel que maximiza la suma de mk,l n y la ganancia de Vn cuando juega xk n y Vn−1 juega xl n−1. Esto resulta en el pago total máximo que los jugadores pueden lograr en un equilibrio de Nash utilizando estrategias discretas; el perfil de estrategia real que produce este pago puede ser reconstruido utilizando técnicas estándar de programación dinámica. Es fácil ver que cada ml,k se puede calcular en tiempo O(N), es decir, todos ellos se pueden calcular en tiempo O(nN3). Recuerde que debemos seleccionar N ≥ (24nPmax)/ para asegurarnos de que el perfil estratégico que producimos tenga un pago total que esté dentro de lo óptimo. Concluimos que podemos calcular una -aproximación al mejor equilibrio de Nash en tiempo O(n4 P3 max/ 3 ). Esto completa la demostración del Teorema 3. Para enunciar nuestro resultado para el caso general (es decir, cuando el grafo subyacente es un árbol de grado acotado en lugar de un camino), necesitamos notación adicional. Si G tiene n jugadores, sea q(n) una cota superior en el número de puntos de evento en la representación de cualquier política de mejor respuesta. Es decir, asumimos que para cualquier vértice U con padre V, B(V, U) tiene como máximo q(n) puntos de evento. Estaremos interesados en la situación en la que q(n) sea un polinomio en n. TEOREMA 4. Sea G un juego gráfico de n jugadores en un árbol en el que cada nodo tiene a lo sumo Δ hijos. Supongamos que se nos da un conjunto de políticas de mejor respuesta para G en el que cada política de mejor respuesta B(V, U) está representada por un conjunto de rectángulos con un máximo de q(n) puntos de evento. Para cualquier > 0, existe un algoritmo que construye un equilibrio de Nash s para G que satisface EP(s) ≥ M(G) − . El tiempo de ejecución del algoritmo es polinómico en n, Pmax y −1 siempre que el árbol tenga grado acotado (es decir, Δ = O(1)) y q(n) sea un polinomio en n. En particular, si N = max((Δ + 1)q(n) + 1, n2Δ+2 (Δ + 2)Pmax −1 ) y Δ > 1 entonces el tiempo de ejecución es O(nΔ(2N)Δ. Para la demostración de este teorema, ver [10]. 4.1 Un algoritmo de tiempo polinómico para aproximación multiplicativa El tiempo de ejecución de nuestro algoritmo es seudopolinómico en lugar de polinómico, porque incluye un factor que es polinómico en Pmax, la entrada máxima (en valor absoluto) en cualquier matriz de pagos. Si estamos interesados en una aproximación multiplicativa en lugar de una aditiva, esto se puede mejorar a polinomial. Primero, hay que tener en cuenta que no podemos esperar una aproximación multiplicativa para todas las entradas. Es decir, no podemos esperar tener un algoritmo que calcule un equilibrio de Nash con una ganancia total de al menos (1 − )M(G). Si tuviéramos dicho algoritmo, entonces para juegos gráficos G con M(G) = 0, se requeriría que el algoritmo produjera la solución óptima. Para demostrar que esto es inviable, observe que podemos usar las técnicas de la Sección 3.2 para construir dos juegos gráficos de coeficientes enteros en caminos de longitud O(n) de tal manera que para algún X ∈ R, el pago total máximo en el primer juego sea X, el pago total máximo en el segundo juego sea −X, y para ambos juegos, los perfiles estratégicos que logran los pagos totales máximos involucran números algebraicos de grado n. Al combinar los dos juegos de modo que el primer vértice del segundo juego se conecte con el último vértice del primer juego, pero los pagos de todos los jugadores no cambien, obtenemos un juego gráfico en el que el mejor equilibrio de Nash tiene un pago total de 0, sin embargo, las estrategias que conducen a este pago tienen una alta complejidad algebraica. Sin embargo, podemos lograr una aproximación multiplicativa cuando todas las entradas de las matrices de pago son positivas y la relación entre cualquier par de entradas está acotada polinómicamente. Recuerde que asumimos que todos los pagos son enteros, y sea Pmin > 0 la entrada más pequeña de cualquier matriz de pagos. En este caso, para cualquier perfil estratégico, la ganancia para el jugador i es al menos Pmin, por lo que la ganancia total en el equilibrio de Nash que maximiza el bienestar social satisface M(G) ≥ nPmin. Además, el Lema 3 implica que al elegir δ < /(24Pmax/Pmin), podemos asegurar que el equilibrio de Nash t producido por nuestro algoritmo cumple nX i=1 EPVi (s) − nX i=1 EPVi (t) ≤ 24Pmaxδn ≤ nPmin ≤ M(G), es decir, para este valor de δ tenemos Pn i=1 EPVi (t) ≥ (1 − )M(G). Recuerde que el tiempo de ejecución de nuestro algoritmo es O(nN3), donde N debe ser seleccionado para satisfacer N > 5n, N = 1/δ. Se deduce que si Pmin > 0, Pmax/Pmin = poli(n), podemos elegir N de manera que nuestro algoritmo proporcione una garantía de aproximación multiplicativa y se ejecute en tiempo polinómico en n y 1/ . 5. EQUILIBRIOS DE NASH DE PAGO ACOTADO Otra forma natural de definir qué es un buen equilibrio de Nash es exigir que el pago esperado de cada jugador supere cierto umbral. Estos umbrales no tienen que ser iguales para todos los jugadores. En este caso, además de las matrices de pagos de los n jugadores, se nos dan n números T1, . . . , Tn, y nuestro objetivo es encontrar un equilibrio de Nash en el que el pago del jugador i sea al menos Ti, o informar que no existe tal equilibrio de Nash. Resulta que podemos diseñar un FPTAS para este problema utilizando las mismas técnicas que en la sección anterior. TEOREMA 5. Dado un juego gráfico G en un camino de n vértices y n números racionales T1, . . . , Tn, supongamos que existe un perfil estratégico s tal que s es un equilibrio de Nash para G y EPVi (s) ≥ Ti para i = 1, . . . , n. Entonces para cualquier > 0 podemos encontrar en tiempo O(max{nP3 max/ 3 , n4 / 3 }) un perfil estratégico s tal que s es un equilibrio de Nash para G y EPVi (s) ≥ Ti − para i = 1, . . . , n. PRUEBA. La prueba es similar a la del Teorema 3. Primero, construimos las políticas de mejor respuesta para todos los jugadores, elegimos N > 5n, y construimos los conjuntos Xi, i = 1, . . . , n, como se describe en la demostración del Teorema 3. Consideremos un perfil estratégico s tal que s sea un equilibrio de Nash para G y EPVi (s) ≥ Ti para i = 1, . . . , n. Construimos un perfil estratégico ti = max{xj i | xj i ≤ si} y usamos el mismo argumento que en la demostración del Teorema 3 para mostrar que t es un equilibrio de Nash para G. Según el Lema 3, tenemos |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ, por lo que eligiendo δ < /(24Pmax), o, equivalentemente, N > max{5n, 24Pmax/ }, podemos asegurar que EPVi (t) ≥ Ti − para i = 1, . . . , n. Ahora, utilizaremos la programación dinámica para encontrar un equilibrio de Nash discreto que cumpla con EPVi (t) ≥ Ti − para i = 1, . . . , n. Dado que t es un perfil estratégico discreto, nuestro algoritmo tendrá éxito siempre que haya un perfil estratégico s con EPVi (s) ≥ Ti− para i = 1, . . . , n. Sea zl,k i = 1 si hay un perfil estratégico discreto tal que para cualquier j < i la estrategia del jugador Vj es una mejor respuesta potencial a la estrategia de Vj+1, el pago esperado de Vj es al menos Tj − , y, además, Vi−1 juega xl i−1, Vi juega xk i. De lo contrario, deja que zl,k i = 0. Podemos calcular zl,k i, i = 1, . . . , n; k, l = 1, . . . , N de forma inductiva, de la siguiente manera. Tenemos zl,k 1 = 1 para k, l = 1, . . . , N. Ahora, supongamos que ya hemos calculado zl,k j para todos los j < i; k, l = 1, . . . , N. Para calcular zk,l i , primero verificamos si (xk i , xl i−1) ∈ B(Vi, Vi−1). Si este 168 no es el caso, claramente, zk,l i = 0. De lo contrario, considera el conjunto Y = Xi−2 ∩ pbrVi−2 (xl i−1), es decir, el conjunto de todas las estrategias discretas de Vi−2 que son potenciales mejores respuestas a xl i−1. Se ha demostrado en la prueba del Teorema 3 que Y = ∅. Para cada xj i−2 ∈ Y, dejemos que pjlk sea la ganancia que Vi−1 recibe cuando Vi−2 juega xj i−2, Vi−1 juega xl i−1, y Vi juega xk i. Claramente, pjlk se puede calcular en tiempo constante. Si existe un xj i−2 ∈ Y tal que zj,l i−1 = 1 y pjlk ≥ Ti−2 − , establece zl,k i = 1. De lo contrario, establezca zl,k i = 0. Habiendo calculado zl,k n , l, k = 1, . . . , N, verificamos si zl,k n = 1 para algún par (l, k). Si existe tal par de índices, instruimos a Vn a jugar xk n y utilizamos técnicas de programación dinámica (o, de manera equivalente, el paso descendente del algoritmo de [13]) para encontrar un equilibrio de Nash s que satisfaga EPVi (s ) ≥ Ti − para i = 1, . . . , n (recordemos que Vn es un jugador ficticio, es decir, asumimos Tn = 0, EPn(s ) = 0 para cualquier elección de s ). Si zl,k n = 0 para todo l, k = 1, . . . , N, no hay un equilibrio de Nash discreto s que satisfaga EPVi (s) ≥ Ti − para i = 1, . . . , n y, por lo tanto, no hay un equilibrio de Nash s (no necesariamente discreto) tal que EPVi (s) ≥ Ti para i = 1, . . . , n. El análisis del tiempo de ejecución es similar al de la Teorema 3; concluimos que el tiempo de ejecución de nuestro algoritmo es O(nN3) = O(max{nP3 max/3, n4/3}). OBSERVACIÓN 1. El Teorema 5 se puede extender a árboles de grado acotado de la misma manera que el Teorema 4. 5.1 Cálculo Exacto Otro enfoque para encontrar equilibrios de Nash con pagos acotados se basa en calcular de forma inductiva los subconjuntos de las políticas de mejor respuesta de todos los jugadores para excluir los puntos que no proporcionan pagos suficientes a algunos de los jugadores. Formalmente, decimos que una estrategia v del jugador V es una mejor respuesta potencial a una estrategia w de su padre W con respecto a un vector de umbral T = (T1, . . . , Tn), (denotado por v ∈ pbrV (w, T)) si hay un equilibrio en la instancia G(V,W), W = w en el que V juega la estrategia mixta v y la ganancia para cualquier jugador Vi aguas abajo de V (incluyendo a V) es al menos Ti. La mejor política de respuesta para V con respecto a un vector umbral T se define como B(W, V, T) = {(w, v) | v ∈ pbrV (w, T), w ∈ [0, 1]}. Es fácil ver que si alguno de los conjuntos B(Vj, Vj−1, T), j = 1, . . . , n, está vacío, significa que es imposible proporcionar a todos los jugadores los pagos esperados prescritos por T. De lo contrario, se puede aplicar el paso descendente del algoritmo original de [13] para encontrar un equilibrio de Nash. Dado que asumimos que Vn es un vértice ficticio cuya ganancia es idénticamente 0, el equilibrio de Nash con estas ganancias existe siempre y cuando Tn ≤ 0 y B(Vn, Vn−1, T) no esté vacío. Usando las técnicas desarrolladas en [9], no es difícil demostrar que para cualquier j = 1, . . . , n, el conjunto B(Vj , Vj−1, T) consiste en un número finito de rectángulos, y se puede calcular B(Vj+1, Vj , T) dado B(Vj , Vj−1, T). La ventaja de este enfoque es que nos permite representar todos los equilibrios de Nash que proporcionan los pagos requeridos a los jugadores. Sin embargo, no es probable que sea práctico, ya que resulta que los rectángulos que aparecen en la representación de B(Vj , Vj−1, T) pueden tener coordenadas irracionales. AFIRMACIÓN 6. Existe un juego gráfico G en un camino de 3 vértices UVW y un vector T = (T1, T2, T3) tal que B(V, W, T) no puede ser representado como una unión de un número finito de rectángulos con coordenadas racionales. PRUEBA. Definimos las recompensas para los jugadores en G de la siguiente manera. La ganancia para U es idénticamente 0, es decir, P0 (U) = P1 (U) = 0. Usando la Reclamación 1, seleccionamos los pagos para V de manera que P0 (V) = uw, P1 (V) = P0 (V) + w - .8u - .1, donde u y w son las estrategias (mixtas) de U y W, respectivamente. Se deduce que V es indiferente entre jugar 0 y 1 si y solo si w = f(u) = .8u + .1; observe que para cualquier u ∈ [0, 1] tenemos f(u) ∈ [0, 1]. No es difícil ver que tenemos B(W, V) = [0, .1]×{0} ∪ [.1, .9]×[0, 1] ∪ [.9, 1]×{1}. Los pagos para W no son importantes para nuestra construcción; por ejemplo, establezca P0(W) = P0(W) = 0. Ahora, establezca T = (0, 1/8, 0), es decir, estamos interesados en equilibrios de Nash en los que el pago esperado de V sea al menos 1/8. Supongamos que w ∈ [0, 1]. El jugador V puede jugar una estrategia mixta v cuando W está jugando w siempre que U juegue u = f−1 (w) = 5w/4 − 1/8 (para asegurar que V sea indiferente entre 0 y 1) y P0 (V) = P1 (V) = uw = w(5w/4 − 1/8) ≥ 1/8. La última condición se cumple si w ≤ (1 − √ 41)/20 < 0 o w ≥ (1 + √ 41)/20. Ten en cuenta que tenemos .1 < (1 + √ 41)/20 < .9. Para cualquier otro valor de w, cualquier estrategia de U hace que V prefiera una de las estrategias puras o no le proporciona un pago esperado suficiente. También hay algunos valores de w para los cuales V puede jugar una estrategia pura (0 o 1) como una mejor respuesta potencial a W y garantizarse a sí mismo un pago esperado de al menos 1/8; se puede demostrar que estos valores de w forman un número finito de segmentos en [0, 1]. Concluimos que cualquier representación de B(W, V, T) como una unión de un número finito de rectángulos debe contener un rectángulo de la forma [(1 + √ 41)/20, w] × [v, v] para algún w, v, v ∈ [0, 1]. Por otro lado, se puede demostrar que para cualquier matriz de pagos enteros y vectores de umbral, y para cualquier j = 1, . . . , n − 1, los conjuntos B(Vj+1, Vj, T) no contienen rectángulos de la forma [u , u ]×{v} o {v}×[w , w ], donde v ∈ R\\Q. Esto significa que si B(Vn, Vn−1, T) no está vacío, es decir, hay un equilibrio de Nash con pagos prescritos por T, entonces el paso descendente del algoritmo de [13] siempre puede elegir un perfil estratégico que forme un equilibrio de Nash, proporcione un pago de al menos Ti al jugador Vi y no tenga coordenadas irracionales. Por lo tanto, a diferencia del equilibrio de Nash que maximiza el bienestar social, no es necesario trabajar con números irracionales, y el hecho de que el algoritmo discutido en esta sección deba hacerlo puede considerarse como un argumento en contra de utilizar este enfoque. OTROS CRITERIOS PARA SELECCIONAR UN EQUILIBRIO DE NASH En esta sección, consideramos varios otros criterios que pueden ser útiles para seleccionar un equilibrio de Nash. 6.1 Combinando la maximización del bienestar con límites en los pagos En muchos escenarios de la vida real, queremos maximizar el bienestar social sujeto a ciertas restricciones en los pagos a los jugadores individuales. Por ejemplo, es posible que queramos asegurarnos de que ningún jugador obtenga una ganancia esperada negativa, o que la ganancia esperada para el jugador i sea al menos Pi max − ξ, donde Pi max es la entrada máxima de la matriz de ganancias de i y ξ es un parámetro fijo. Formalmente, dado un juego gráfico G y un vector T1, . . . , Tn, sea S el conjunto de todos los equilibrios de Nash s de G que satisfacen Ti ≤ EPVi (s) para i = 1, . . . , n, y sea ˆs = argmaxs∈S EP(s). Si el conjunto S no está vacío, podemos encontrar un equilibrio de Nash ˆs que esté -cerca de satisfacer los límites de pago y esté dentro de ε de ˆs con respecto al pago total al combinar los algoritmos de la Sección 4 y la Sección 5. Es decir, para un dado > 0, elige δ como en la demostración del Teorema 3, y deja que Xi sea el conjunto de todas las estrategias discretas del jugador Vi (para una definición formal, consulta la demostración del Teorema 3). Combinando las pruebas del Teorema 3 y el Teorema 5, podemos ver que el perfil de estrategia ˆt dado por ˆti = max{xj i | xj i ≤ ˆsi} satisface EPVi (ˆt) ≥ Ti − , |EP(ˆs) − EP(ˆt)| ≤ . Define ˆml,k i como la máxima ganancia total que V1, . . . , Vi−1 pueden lograr si cada Vj, j ≤ i, elige una estrategia de Xj, para cada j < i la estrategia de Vj es una mejor respuesta potencial a la estrategia de Vj+1 y la ganancia para el jugador Vj es al menos Tj − , y, además, Vi−1 juega xl i−1, Vi juega xk i. Si no hay forma de elegir las estrategias para V1, . . . , Vi−1 que cumplan con estas condiciones, establecemos ml,k i = −∞. El ˆml,k se puede calcular mediante programación dinámica de manera similar al ml,k y zl,k en las demostraciones de los Teoremas 3 y 5. Finalmente, como en la demostración del Teorema 3, utilizamos ml,k n para seleccionar el mejor equilibrio de Nash discreto sujeto a las restricciones de pago. Incluso de manera más general, es posible que deseemos maximizar el beneficio total para un subconjunto de jugadores (se supone que son capaces de redistribuir justamente las ganancias entre ellos mismos) mientras garantizamos ciertos beneficios esperados a (un subconjunto de) los otros jugadores. Este problema puede ser abordado de manera similar. 6.2 Un enfoque minimax Una medida más igualitaria de la calidad de un equilibrio de Nash es el pago esperado mínimo para un jugador. La solución óptima con respecto a esta medida es un equilibrio de Nash en el cual la ganancia esperada mínima para un jugador es máxima. Para encontrar una aproximación a dicho equilibrio de Nash, podemos combinar el algoritmo de la Sección 5 con la búsqueda binaria en el espacio de límites inferiores potenciales. Ten en cuenta que la ganancia esperada para cualquier jugador Vi dada una estrategia s siempre cumple con −Pmax ≤ EPVi (s) ≤ Pmax. Para un fijo > 0, comenzamos estableciendo T = −Pmax, T = Pmax, T∗ = (T + T )/2. Luego ejecutamos el algoritmo de la Sección 5 con T1 = · · · = Tn = T∗. Si el algoritmo tiene éxito al encontrar un equilibrio de Nash s que cumple con EPVi (s) ≥ T∗ − para todo i = 1, . . . , n, establecemos T = T∗, T∗ = (T + T)/2; de lo contrario, establecemos T = T∗, T∗ = (T + T)/2 y repetimos el ciclo. Repetimos este proceso hasta que |T − T | ≤ . No es difícil comprobar que para cualquier p ∈ R, si existe un equilibrio de Nash s tal que mini=1,...,n EPVi (s) ≥ p, entonces nuestro algoritmo devuelve un equilibrio de Nash s que cumple mini=1,...,n EPVi (s) ≥ p−2. El tiempo de ejecución de nuestro algoritmo es O(max{nP3 max log −1 / 3 , n4 log −1 / 3 }). 6.3 Igualando los pagos Cuando las matrices de pagos de los jugadores no son muy diferentes, es razonable exigir que los pagos esperados para los jugadores tampoco difieran mucho. Ahora demostraremos que los equilibrios de Nash en esta categoría también pueden aproximarse en tiempo polinómico. De hecho, observe que el algoritmo de la Sección 5 puede ser fácilmente modificado para tratar con límites superiores en las ganancias individuales en lugar de límites inferiores. Además, podemos calcular de manera eficiente una aproximación a un equilibrio de Nash que cumpla tanto con el límite superior como con el límite inferior para cada jugador. Más precisamente, supongamos que se nos da un juego gráfico G, 2n números racionales T1, . . . , Tn, T1, . . . , Tn y > 0. Entonces, si existe un perfil estratégico s tal que s es un equilibrio de Nash para G y Ti ≤ EPVi (s) ≤ Ti para i = 1, . . . , n, podemos encontrar un perfil estratégico s tal que s es un equilibrio de Nash para G y Ti − ≤ EPVi (s) ≤ Ti + para i = 1, . . . , n. El algoritmo modificado también se ejecuta en tiempo O(max{nP3 max/ 3 , [4]n4 / 3 }). Esta observación nos permite aproximar equilibrios de Nash en los que las ganancias esperadas de todos los jugadores difieren en un máximo de ξ para cualquier ξ fijo > 0. Dado un > 0, establecemos T1 = · · · = Tn = −Pmax, T1 = · · · = Tn = −Pmax + ξ + , y ejecutamos la versión modificada del algoritmo de la Sección 5. Si no logra encontrar una solución, incrementamos todos los Ti, Ti por y el bucle. Continuamos hasta que el algoritmo encuentre una solución, o Ti ≥ Pmax. Supongamos que existe un equilibrio de Nash s que satisface |EPVi (s) − EPVj (s)| ≤ ξ para todo i, j = 1, . . . , n. Definamos r = mini=1,...,n EPVi (s); tenemos r ≤ EPVi (s) ≤ r + ξ para todo i = 1, . . . , n. Existe un k ≥ 0 tal que −Pmax + (k − 1) ≤ r ≤ −Pmax + k. Durante el paso k del algoritmo, establecemos T1 = · · · = Tn = −Pmax +(k−1) , es decir, tenemos r− ≤ Ti ≤ r, r + ξ ≤ Ti ≤ r + ξ + . Es decir, el equilibrio de Nash s satisface Ti ≤ r ≤ EPVi (s) ≤ r + ξ ≤ Ti, lo que significa que cuando Ti se establece en −Pmax + (k − 1), nuestro algoritmo garantiza producir un equilibrio de Nash t que satisface r − 2 ≤ Ti − ≤ EPVi (t) ≤ Ti + ≤ r + ξ + 2. Concluimos que siempre que exista un equilibrio de Nash s, nuestro algoritmo produce un equilibrio de Nash t que satisface |EPVi (t) − EPVj (t)| ≤ ξ + 4 para todo i, j = 1, . . . , n. El tiempo de ejecución de este algoritmo es O(max{nP3 max/ 4 , n4 / 4 }). También debemos tener en cuenta que podemos encontrar el valor más pequeño de ξ para el cual existe un equilibrio de Nash combinando este algoritmo con una búsqueda binaria en el espacio ξ = [0, 2Pmax]. Esto identifica una aproximación al equilibrio de Nash más justo, es decir, uno en el que las ganancias esperadas de los jugadores difieren por la menor cantidad posible. Finalmente, cabe destacar que todos los resultados de esta sección pueden extenderse a árboles de grado acotado. 7. CONCLUSIONES Hemos estudiado el problema de la selección de equilibrio en juegos gráficos en árboles de grado acotado. Consideramos varios criterios para seleccionar un equilibrio de Nash, como maximizar el bienestar social, garantizar un límite inferior en la recompensa esperada de cada jugador, etc. Primero, nos enfocamos en la complejidad algebraica de un equilibrio de Nash que maximiza el bienestar social, y demostramos resultados negativos contundentes para ese problema. Es decir, demostramos que incluso para juegos gráficos en caminos, cualquier número algebraico α ∈ [0, 1] puede ser la única estrategia disponible para algún jugador en todas las equilibrios de Nash que maximizan el bienestar social. Esto contrasta fuertemente con el hecho de que los juegos gráficos en árboles siempre poseen un equilibrio de Nash en el que las estrategias de todos los jugadores son números racionales. Luego proporcionamos algoritmos de aproximación para seleccionar equilibrios de Nash con propiedades especiales. Si bien el problema de encontrar equilibrios de Nash aproximados para diversas clases de juegos ha recibido mucha atención en los últimos años, la mayoría de los trabajos existentes tienen como objetivo encontrar equilibrios de Nash que satisfagan (o estén cerca de satisfacer) ciertas propiedades. Nuestro enfoque es diferente en que insistimos en producir un equilibrio de Nash exacto, que está cerca de satisfacer un requisito dado. Como se argumenta en la introducción, hay varias razones para preferir una solución que constituya un equilibrio de Nash exacto. Nuestros algoritmos son esquemas de aproximación de tiempo polinomial completo, es decir, su tiempo de ejecución es polinomial en el inverso del parámetro de aproximación, aunque pueden ser seudopolinomiales con respecto al tamaño de la entrada. Bajo restricciones leves en las entradas, estas pueden ser modificadas para ser verdaderamente polinomiales. Este es el resultado positivo más fuerte que se puede obtener para un problema cuyas soluciones exactas pueden ser difíciles de representar, como es el caso de muchos de los problemas considerados aquí. Mientras demostramos nuestros resultados para juegos en un camino, pueden generalizarse a cualquier árbol para el cual las políticas de mejor respuesta tengan representaciones compactas como uniones de rectángulos. En la versión completa del artículo describimos nuestros algoritmos para el caso general. Un trabajo adicional en esta línea podría incluir extensiones a los tipos de garantías buscadas para los equilibrios de Nash, como garantizar los pagos totales para subconjuntos de jugadores, seleccionar equilibrios en los que algunos jugadores estén recibiendo pagos significativamente más altos que sus pares, etc. Sin embargo, en este momento es quizás más importante investigar si los equilibrios de Nash de los juegos gráficos pueden ser calculados de manera descentralizada, en contraste con los algoritmos que hemos introducido aquí. Es natural preguntarse si nuestros resultados o los de [9] pueden generalizarse a juegos con tres o más acciones. Sin embargo, parece que esto hará el análisis significativamente más difícil. En particular, cabe destacar que se pueden considerar los juegos de pago limitado como un caso especial muy restringido de juegos con tres acciones por jugador. Es decir, dado un juego de dos acciones con límites de pago, considera un juego en el que cada jugador Vi tiene una tercera acción que le garantiza un pago de Ti sin importar lo que hagan los demás. Luego, verificar si existe un equilibrio de Nash en el cual ninguno de los jugadores asigna una probabilidad distinta de cero a su tercera acción es equivalente a comprobar si existe un equilibrio de Nash que cumpla con los límites de pago en el juego original, y la Sección 5.1 muestra que encontrar una solución exacta a este problema requiere nuevas ideas. Alternativamente, puede ser interesante buscar resultados similares en el contexto de equilibrios correlacionados (CE), especialmente dado que el mejor CE puede tener un valor más alto (pago esperado total) que el mejor NE. La proporción entre estos valores se llama el valor de mediación en [1]. Se sabe por [1] que el valor de mediación de juegos de 2 jugadores y 2 acciones con pagos no negativos es a lo sumo 4 3, y presentan un juego de 3 jugadores para el cual es infinito. Además, un ejemplo de 2 jugadores y 3 acciones del [1] también tiene un valor de mediación infinito. 8. REFERENCIAS [1] I. Ashlagi, D. Monderer y M. Tenneholtz, Sobre el Valor de la Correlación, Actas del seminario de Dagstuhl 05011 (2005) [2] R. Aumann, Subjetividad y Correlación en Estrategias Aleatorias, Revista de Economía Matemática 1 pp. 67-96 (1974) [3] B. Blum, C. R. Shelton y D. Koller, Un Método de Continuación para Equilibrios de Nash en Juegos Estructurados, Actas de IJCAI03 [4] X. Chen, X. Deng y S. Teng, Computación de Equilibrios de Nash: Aproximación y Complejidad Suavizada, Actas de FOCS06 [5] X. Chen, X. Deng, Resolviendo la Complejidad del Equilibrio de Nash de 2 Jugadores, Actas de FOCS06 [6] V. Conitzer y T. Sandholm, Resultados de Complejidad sobre Equilibrios de Nash, Actas de IJCAI03 [7] C. Daskalakis, P. W. Goldberg y C. H. Papadimitriou, La Complejidad de Calcular un Equilibrio de Nash, Actas de STOC06 [8] R. S. Datta, Universalidad de los Equilibrios de Nash, Matemáticas de la Investigación Operativa 28:3, 2003 [9] E. Elkind, L. A. Goldberg y P. W. Goldberg, Equilibrios de Nash en Juegos Gráficos en Árboles Revisitados, Actas de ACM EC06 [10] E. Elkind, L. A. Goldberg y P. W. Goldberg, Computando Buenos Equilibrios de Nash en Juegos Gráficos, http://arxiv.org/abs/cs.GT/0703133 [11] I. Gilboa y E. Zemel, Equilibrios de Nash y Correlacionados: Algunas Consideraciones de Complejidad, Juegos y Comportamiento Económico, 1 pp. 80-93 (1989) [12] P. W. Goldberg y C. H. Papadimitriou, Reducibilidad entre Problemas de Equilibrio, Actas de STOC06 [13] M. Kearns, M. Littman y S. Singh, Modelos Gráficos para la Teoría de Juegos, Actas de UAI01 [14] M. Littman, M. Kearns y S. Singh, Un Algoritmo Exacto Eficiente para Juegos Gráficos Singularmente Conectados, Actas de NIPS01 [15] R. Lipton y E. Markakis, Equilibrios de Nash a través de Ecuaciones Polinomiales, Actas de LATIN04 [16] L. Ortiz y M. Kearns, Propagación de Nash para Juegos Gráficos con Lazos, Actas de NIPS03 [17] C.H. Papadimitriou, Computando equilibrios correlacionados en juegos de varios jugadores, Actas de STOC05 [18] C.H. Papadimitriou y T. Roughgarden, Computando equilibrios en juegos de múltiples jugadores, Actas de SODA05 [19] D. Vickrey y D. Koller, Algoritmos multiagente para resolver juegos gráficos, Actas de AAAI02 171 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "social welfare": {
            "translated_key": "bienestar social",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Computing Good Nash Equilibria in Graphical Games ∗ Edith Elkind Hebrew University of Jerusalem, Israel, and University of Southampton, Southampton, SO17 1BJ, U.K. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K. ABSTRACT This paper addresses the problem of fair equilibrium selection in graphical games.",
                "Our approach is based on the data structure called the best response policy, which was proposed by Kearns et al. [13] as a way to represent all Nash equilibria of a graphical game.",
                "In [9], it was shown that the best response policy has polynomial size as long as the underlying graph is a path.",
                "In this paper, we show that if the underlying graph is a bounded-degree tree and the best response policy has polynomial size then there is an efficient algorithm which constructs a Nash equilibrium that guarantees certain payoffs to all participants.",
                "Another attractive solution concept is a Nash equilibrium that maximizes the <br>social welfare</br>.",
                "We show that, while exactly computing the latter is infeasible (we prove that solving this problem may involve algebraic numbers of an arbitrarily high degree), there exists an FPTAS for finding such an equilibrium as long as the best response policy has polynomial size.",
                "These two algorithms can be combined to produce Nash equilibria that satisfy various fairness criteria.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a large community of agents, an agents behavior is not likely to have a direct effect on most other agents: rather, it is just the agents who are close enough to him that will be affected.",
                "However, as these agents respond by adapting their behavior, more agents will feel the consequences and eventually the choices made by a single agent will propagate throughout the entire community.",
                "This is the intuition behind graphical games, which were introduced by Kearns, Littman and Singh in [13] as a compact representation scheme for games with many players.",
                "In an n-player graphical game, each player is associated with a vertex of an underlying graph G, and the payoffs of each player depend on his action as well as on the actions of his neighbors in the graph.",
                "If the maximum degree of G is Δ, and each player has two actions available to him, then the game can be represented using n2Δ+1 numbers.",
                "In contrast, we need n2n numbers to represent a general n-player 2-action game, which is only practical for small values of n. For graphical games with constant Δ, the size of the game is linear in n. One of the most natural problems for a graphical game is that of finding a Nash equilibrium, the existence of which follows from Nashs celebrated theorem (as graphical games are just a special case of n-player games).",
                "The first attempt to tackle this problem was made in [13], where the authors consider graphical games with two actions per player in which the underlying graph is a boundeddegree tree.",
                "They propose a generic algorithm for finding Nash equilibria that can be specialized in two ways: an exponential-time algorithm for finding an (exact) Nash equilibrium, and a fully polynomial time approximation scheme (FPTAS) for finding an approximation to a Nash equilibrium.",
                "For any > 0 this algorithm outputs an -Nash equilibrium, which is a strategy profile in which no player can improve his payoff by more than by unilaterally changing his strategy.",
                "While -Nash equilibria are often easier to compute than exact Nash equilibria, this solution concept has several drawbacks.",
                "First, the players may be sensitive to a small loss in payoffs, so the strategy profile that is an -Nash equilibrium will not be stable.",
                "This will be the case even if there is only a small subset of players who are extremely price-sensitive, and for a large population of players it may be difficult to choose a value of that will satisfy everyone.",
                "Second, the strategy profiles that are close to being Nash equilibria may be much better with respect to the properties under consideration than exact Nash equilibria.",
                "Therefore, the (approximation to the) value of the best solution that corresponds to an -Nash equilibrium may not be indicative of what can be achieved under an exact Nash equilibrium.",
                "This is especially important if the purpose of the approximate solution is to provide a good benchmark for a system of selfish agents, as the benchmark implied by an -Nash equilibrium may be unrealistic.",
                "For these reasons, in this paper we focus on the problem of computing exact Nash equilibria.",
                "Building on ideas of [14], Elkind et al. [9] showed how to find an (exact) Nash equilibrium in polynomial time when the underlying 162 graph has degree 2 (that is, when the graph is a collection of paths and cycles).",
                "By contrast, finding a Nash equilibrium in a general degree-bounded graph appears to be computationally intractable: it has been shown (see [5, 12, 7]) to be complete for the complexity class PPAD. [9] extends this hardness result to the case in which the underlying graph has bounded pathwidth.",
                "A graphical game may not have a unique Nash equilibrium, indeed it may have exponentially many.",
                "Moreover, some Nash equilibria are more desirable than others.",
                "Rather than having an algorithm which merely finds some Nash equilibrium, we would like to have algorithms for finding Nash equilibria with various sociallydesirable properties, such as maximizing overall payoff or distributing profit fairly.",
                "A useful property of the data structure of [13] is that it simultaneously represents the set of all Nash equilibria of the underlying game.",
                "If this representation has polynomial size (as is the case for paths, as shown in [9]), one may hope to extract from it a Nash equilibrium with the desired properties.",
                "In fact, in [13] the authors mention that this is indeed possible if one is interested in finding an (approximate) -Nash equilibrium.",
                "The goal of this paper is to extend this to exact Nash equilibria. 1.1 Our Results In this paper, we study n-player 2-action graphical games on bounded-degree trees for which the data structure of [13] has size poly(n).",
                "We focus on the problem of finding exact Nash equilibria with certain socially-desirable properties.",
                "In particular, we show how to find a Nash equilibrium that (nearly) maximizes the <br>social welfare</br>, i.e., the sum of the players payoffs, and we show how to find a Nash equilibrium that (nearly) satisfies prescribed payoff bounds for all players.",
                "Graphical games on bounded-degree trees have a simple algebraic structure.",
                "One attractive feature, which follows from [13], is that every such game has a Nash equilibrium in which the strategy of every player is a rational number.",
                "Section 3 studies the algebraic structure of those Nash equilibria that maximize <br>social welfare</br>.",
                "We show (Theorems 1 and 2) that, surprisingly, the set of Nash equilibria that maximize <br>social welfare</br> is more complex.",
                "In fact, for any algebraic number α ∈ [0, 1] with degree at most n, we exhibit a graphical game on a path of length O(n) such that, in the unique <br>social welfare</br>-maximizing Nash equilibrium of this game, one of the players plays the mixed strategy α.1 This result shows that it may be difficult to represent an optimal Nash equilibrium.",
                "It seems to be a novel feature of the setting we consider here, that an optimal Nash equilibrium is hard to represent, in a situation where it is easy to find and represent a Nash equilibrium.",
                "As the <br>social welfare</br>-maximizing Nash equilibrium may be hard to represent efficiently, we have to settle for an approximation.",
                "However, the crucial difference between our approach and that of previous papers [13, 16, 19] is that we require our algorithm to output an exact Nash equilibrium, though not necessarily the optimal one with respect to our criteria.",
                "In Section 4, we describe an algorithm that satisfies this requirement.",
                "Namely, we propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within of optimal.",
                "It runs in polynomial time (Theorem 3,4) for any graphical game on a bounded-degree tree for which the data structure proposed by [13] (the so-called best response policy, defined below) is of size poly(n) (note that, as shown in [9], this is always the case when the underlying graph is a path).",
                "More pre1 A related result in a different context was obtained by Datta [8], who shows that n-player 2-action games are universal in the sense that any real algebraic variety can be represented as the set of totally mixed Nash equilibria of such games. cisely, the running time of our algorithm is polynomial in n, Pmax, and 1/ , where Pmax is the maximum absolute value of an entry of a payoff matrix, i.e., it is a pseudopolynomial algorithm, though it is fully polynomial with respect to .",
                "We show (Section 4.1) that under some restrictions on the payoff matrices, the algorithm can be transformed into a (truly) polynomial-time algorithm that outputs a Nash equilibrium whose total payoff is within a 1 − factor from the optimal.",
                "In Section 5, we consider the problem of finding a Nash equilibrium in which the expected payoff of each player Vi exceeds a prescribed threshold Ti.",
                "Using the idea from Section 4 we give (Theorem 5) a fully polynomial time approximation scheme for this problem.",
                "The running time of the algorithm is bounded by a polynomial in n, Pmax, and .",
                "If the instance has a Nash equilibrium satisfying the prescribed thresholds then the algorithm constructs a Nash equilibrium in which the expected payoff of each player Vi is at least Ti − .",
                "In Section 6, we introduce other natural criteria for selecting a good Nash equilibrium and we show that the algorithms described in the two previous sections can be used as building blocks in finding Nash equilibria that satisfy these criteria.",
                "In particular, in Section 6.1 we show how to find a Nash equilibrium that approximates the maximum <br>social welfare</br>, while guaranteeing that each individual payoff is close to a prescribed threshold.",
                "In Section 6.2 we show how to find a Nash equilibrium that (nearly) maximizes the minimum individual payoff.",
                "Finally, in Section 6.3 we show how to find a Nash equilibrium in which the individual payoffs of the players are close to each other. 1.2 Related Work Our approximation scheme (Theorem 3 and Theorem 4) shows a contrast between the games that we study and two-player n-action games, for which the corresponding problems are usually intractable.",
                "For two-player n-action games, the problem of finding Nash equilibria with special properties is typically NP-hard.",
                "In particular, this is the case for Nash equilibria that maximize the <br>social welfare</br> [11, 6].",
                "Moreover, it is likely to be intractable even to approximate such equilibria.",
                "In particular, Chen, Deng and Teng [4] show that there exists some , inverse polynomial in n, for which computing an -Nash equilibrium in 2-player games with n actions per player is PPAD-complete.",
                "Lipton and Markakis [15] study the algebraic properties of Nash equilibria, and point out that standard quantifier elimination algorithms can be used to solve them.",
                "Note that these algorithms are not polynomial-time in general.",
                "The games we study in this paper have polynomial-time computable Nash equilibria in which all mixed strategies are rational numbers, but an optimal Nash equilibrium may necessarily include mixed strategies with high algebraic degree.",
                "A correlated equilibrium (CE) (introduced by Aumann [2]) is a distribution over vectors of players actions with the property that if any player is told his own action (the value of his own component) from a vector generated by that distribution, then he cannot increase his expected payoff by changing his action.",
                "Any Nash equilibrium is a CE but the converse does not hold in general.",
                "In contrast with Nash equilibria, correlated equilibria can be found for low-degree graphical games (as well as other classes of conciselyrepresented multiplayer games) in polynomial time [17].",
                "But, for graphical games it is NP-hard to find a correlated equilibrium that maximizes total payoff [18].",
                "However, the NP-hardness results apply to more general games than the one we consider here, in particular the graphs are not trees.",
                "From [2] it is also known that there exist 2-player, 2-action games for which the expected total payoff 163 of the best correlated equilibrium is higher than the best Nash equilibrium, and we discuss this issue further in Section 7. 2.",
                "PRELIMINARIES AND NOTATION We consider graphical games in which the underlying graph G is an n-vertex tree, in which each vertex has at most Δ children.",
                "Each vertex has two actions, which are denoted by 0 and 1.",
                "A mixed strategy of a player V is represented as a single number v ∈ [0, 1], which denotes the probability that V selects action 1.",
                "For the purposes of the algorithm, the tree is rooted arbitrarily.",
                "For convenience, we assume without loss of generality that the root has a single child, and that its payoff is independent of the action chosen by the child.",
                "This can be achieved by first choosing an arbitrary root of the tree, and then adding a dummy parent of this root, giving the new parent a constant payoff function, e.g., 0.",
                "Given an edge (V, W ) of the tree G, and a mixed strategy w for W , let G(V,W ),W =w be the instance obtained from G by (1) deleting all nodes Z which are separated from V by W (i.e., all nodes Z such that the path from Z to V passes through W ), and (2) restricting the instance so that W is required to play mixed strategy w. Definition 1.",
                "Suppose that (V, W ) is an edge of the tree, that v is a mixed strategy for V and that w is a mixed strategy for W .",
                "We say that v is a potential best response to w (denoted by v ∈ pbrV (w)) if there is an equilibrium in the instance G(V,W ),W =w in which V has mixed strategy v. We define the best response policy for V , given W , as B(W, V ) = {(w, v) | v ∈ pbrV (w), w ∈ [0, 1]}.",
                "The upstream pass of the generic algorithm of [13] considers every node V (other than the root) and computes the best response policy for V given its parent.",
                "With the above assumptions about the root, the downstream pass is straightforward.",
                "The root selects a mixed strategy w for the root W and a mixed strategy v ∈ B(W, V ) for each child V of W .",
                "It instructs each child V to play v. The remainder of the downward pass is recursive.",
                "When a node V is instructed by its parent to adopt mixed strategy v, it does the following for each child U - It finds a pair (v, u) ∈ B(V, U) (with the same v value that it was given by its parent) and instructs U to play u.",
                "The best response policy for a vertex U given its parent V can be represented as a union of rectangles, where a rectangle is defined by a pair of closed intervals (IV , IU ) and consists of all points in IV × IU ; it may be the case that one or both of the intervals IV and IU consists of a single point.",
                "In order to perform computations on B(V, U), and to bound the number of rectangles, [9] used the notion of an event point, which is defined as follows.",
                "For any set A ⊆ [0, 1]2 that is represented as a union of a finite number of rectangles, we say that a point u ∈ [0, 1] on the U-axis is a Uevent point of A if u = 0 or u = 1 or the representation of A contains a rectangle of the form IV × IU and u is an endpoint of IU ; V -event points are defined similarly.",
                "For many games considered in this paper, the underlying graph is an n-vertex path, i.e., a graph G = (V, E) with V = {V1, . . . , Vn} and E = {(V1, V2), . . . , (Vn−1, Vn)}.",
                "In [9], it was shown that for such games, the best response policy has only polynomially-many rectangles.",
                "The proof that the number of rectangles in B(Vj+1, Vj) is polynomial proceeds by first showing that the number of event points in B(Vj+1, Vj ) cannot exceed the number of event points in B(Vj, Vj−1) by more than 2, and using this fact to bound the number of rectangles in B(Vj+1, Vj ).",
                "Let P0 (V ) and P1 (V ) be the expected payoffs to V when it plays 0 and 1, respectively.",
                "Both P0 (V ) and P1 (V ) are multilinear functions of the strategies of V s neighbors.",
                "In what follows, we will frequently use the following simple observation.",
                "CLAIM 1.",
                "For a vertex V with a single child U and parent W , given any A, B, C, D ∈ Q, A , B , C , D ∈ Q, one can select the payoffs to V so that P0 (V ) = Auw + Bu + Cw + D, P1 (V ) = A uw + B u + C w + D .",
                "Moreover, if all A, B, C, D, A , B , C , D are integer, the payoffs to V are integer as well.",
                "PROOF.",
                "We will give the proof for P0 (V ); the proof for P1 (V ) is similar.",
                "For i, j = 0, 1, let Pij be the payoff to V when U plays i, V plays 0 and W plays j.",
                "We have P0 (V ) = P00(1 − u)(1 − w) + P10u(1 − w) + P01(1 − u)w + P11uw.",
                "We have to select the values of Pij so that P00 − P10 − P01 + P11 = A, −P00 + P10 = B, −P00 + P01 = C, P00 = D. It is easy to see that the unique solution is given by P00 = D, P01 = C + D, P10 = B + D, P11 = A + B + C + D. The input to all algorithms considered in this paper includes the payoff matrices for each player.",
                "We assume that all elements of these matrices are integer.",
                "Let Pmax be the greatest absolute value of any element of any payoff matrix.",
                "Then the input consists of at most n2Δ+1 numbers, each of which can be represented using log Pmax bits. 3.",
                "NASH EQUILIBRIA THAT MAXIMIZE THE <br>social welfare</br>: SOLUTIONS IN R \\ Q From the point of view of <br>social welfare</br>, the best Nash equilibrium is the one that maximizes the sum of the players expected payoffs.",
                "Unfortunately, it turns out that computing such a strategy profile exactly is not possible: in this section, we show that even if all players payoffs are integers, the strategy profile that maximizes the total payoff may have irrational coordinates; moreover, it may involve algebraic numbers of an arbitrary degree. 3.1 Warm-up: quadratic irrationalities We start by providing an example of a graphical game on a path of length 3 with integer payoffs such that in the Nash equilibrium that maximizes the total payoff, one of the players has a strategy in R \\ Q.",
                "In the next subsection, we will extend this example to algebraic numbers of arbitrary degree n; to do so, we have to consider paths of length O(n).",
                "THEOREM 1.",
                "There exists an integer-payoff graphical game G on a 3-vertex path UV W such that, in any Nash equilibrium of G that maximizes <br>social welfare</br>, the strategy, u, of the player U and the total payoff, p, satisfy u, p ∈ R \\ Q.",
                "PROOF.",
                "The payoffs to the players in G are specified as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = −uw + 3w and P1 (V ) = P0 (V ) + w(u + 2) − (u + 1), where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = u+1 u+2 .",
                "Observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "The payoff to W is 0 if it selects the same action as V and 1 otherwise.",
                "CLAIM 2.",
                "All Nash equilibria of the game G are of the form (u, 1/2, f(u)).",
                "That is, in any Nash equilibrium, V plays v = 1/2 and W plays w = f(u).",
                "Moreover, for any value of u, the vector of strategies (u, 1/2, f(u)) constitutes a Nash equilibrium.",
                "PROOF.",
                "It is easy to check that for any u ∈ [0, 1], the vector (u, 1/2, f(u)) is a Nash equilibrium.",
                "Indeed, U is content to play 164 any mixed strategy u no matter what V and W do.",
                "Furthermore, V is indifferent between 0 and 1 as long as w = f(u), so it can play 1/2.",
                "Finally, if V plays 0 and 1 with equal probability, W is indifferent between 0 and 1, so it can play f(u).",
                "Conversely, suppose that v > 1/2.",
                "Then W strictly prefers to play 0, i.e., w = 0.",
                "Then for V we have P1 (V ) = P0 (V ) − (u + 1), i.e., P1 (V ) < P0 (V ), which implies v = 0, a contradiction.",
                "Similarly, if v < 1/2, player W prefers to play 1, so we have w = 1.",
                "Hence, P1 (V ) = P0 (V ) + (u + 2) − (u + 1), i.e., P1 (V ) > P0 (V ), which implies v = 1, a contradiction.",
                "Finally, if v = 1/2, but w = f(u), player V is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "This completes the proof of Claim 2.",
                "By Claim 2, the total payoff in any Nash equilibrium of this game is a function of u.",
                "More specifically, the payoff to U is 0, the payoff to V is −uf(u) + 3f(u), and the payoff to W is 1/2.",
                "Therefore, the Nash equilibrium with the maximum total payoff corresponds to the value of u that maximizes g(u) = −u (u + 1) u + 2 + 3 u + 1 u + 2 = − (u − 3)(u + 1) u + 2 .",
                "To find extrema of g(u), we compute h(u) = − d du g(u).",
                "We have h(u) = (2u − 2)(u + 2) − (u − 3)(u + 1) (u + 2)2 = u2 + 4u − 1 (u + 2)2 .",
                "Hence, h(u) = 0 if and only if u ∈ {−2 + √ 5, −2 − √ 5}.",
                "Note that −2 + √ 5 ∈ [0, 1].",
                "The function g(u) changes sign at −2, −1, and 3.",
                "We have g(u) < 0 for g > 3, g(u) > 0 for u < −2, so the extremum of g(u) that lies between 1 and 3, i.e., u = −2 + √ 5, is a local maximum.",
                "We conclude that the <br>social welfare</br>-maximizing Nash equilibrium for this game is given by the vector of strategies (−2+√ 5, 1/2, (5 − √ 5)/5).",
                "The respective total payoff is 0 − ( √ 5 − 5)( √ 5 − 1) √ 5 + 1 2 = 13/2 − 2 √ 5.",
                "This concludes the proof of Theorem 1. 3.2 Strategies of arbitrary degree We have shown that in the <br>social welfare</br>-maximizing Nash equilibrium, some players strategies can be quadratic irrationalities, and so can the total payoff.",
                "In this subsection, we will extend this result to show that we can construct an integer-payoff graphical game on a path whose <br>social welfare</br>-maximizing Nash equilibrium involves arbitrary algebraic numbers in [0, 1].",
                "THEOREM 2.",
                "For any degree-n algebraic number α ∈ [0, 1], there exists an integer payoff graphical game on a path of length O(n) such that, in all <br>social welfare</br>-maximizing Nash equilibria of this game, one of the players plays α.",
                "PROOF.",
                "Our proof consists of two steps.",
                "First, we construct a rational expression R(x) and a segment [x , x ] such that x , x ∈ Q and α is the only maximum of R(x) on [x , x ].",
                "Second, we construct a graphical game whose Nash equilibria can be parameterized by u ∈ [x , x ], so that at the equilibrium that corresponds to u the total payoff is R(u) and, moreover, some players strategy is u.",
                "It follows that to achieve the payoff-maximizing Nash equilibrium, this player has to play α.",
                "The details follow.",
                "LEMMA 1.",
                "Given an algebraic number α ∈ [0, 1], deg(α) = n, there exist K2, . . . , K2n+2 ∈ Q and x , x ∈ (0, 1) ∩ Q such that α is the only maximum of R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 on [x , x ].",
                "PROOF.",
                "Let P(x) be the minimal polynomial of α, i.e., a polynomial of degree n with rational coefficients whose leading coefficient is 1 such that P(α) = 0.",
                "Let A = {α1, . . . , αn} be the set of all roots of P(x).",
                "Consider the polynomial Q1(x) = −P2 (x).",
                "It has the same roots as P(x), and moreover, for any x ∈ A we have Q1(x) < 0.",
                "Hence, A is the set of all maxima of Q1(x).",
                "Now, set R(x) = Q1(x) (x+2)...(x+2n+1)(x+2n+2) .",
                "Observe that R(x) ≤ 0 for all x ∈ [0, 1] and R(x) = 0 if and only if Q1(x) = 0.",
                "Hence, the set A is also the set of all maxima of R(x) on [0, 1].",
                "Let d = min{|αi − α| | αi ∈ A, αi = α}, and set α = max{α − d/2, 0}, α = min{α + d/2, 1}.",
                "Clearly, α is the only zero (and hence, the only maximum) of R(x) on [α , α ].",
                "Let x and x be some rational numbers in (α , α) and (α, α ), respectively; note that by excluding the endpoints of the intervals we ensure that x , x = 0, 1.",
                "As [x , x ] ⊂ [α , α ], we have that α is the only maximum of R(x) on [x , x ].",
                "As R(x) is a proper rational expression and all roots of its denominator are simple, by partial fraction decomposition theorem, R(x) can be represented as R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 , where K2, . . . , K2n+2 are rational numbers.",
                "Consider a graphical game on the path U−1V−1U0V0U1V1 . . .",
                "Uk−1Vk−1Uk, where k = 2n + 2.",
                "Intuitively, we want each triple (Ui−1, Vi−1, Ui) to behave similarly to the players U, V , and W from the game described in the previous subsection.",
                "More precisely, we define the payoffs to the players in the following way. • The payoff to U−1 is 0 no matter what everyone else does. • The expected payoff to V−1 is 0 if it plays 0 and u0 − (x − x )u−1 −x if it plays 1, where u0 and u−1 are the strategies of U0 and U−1, respectively. • The expected payoff to V0 is 0 if it plays 0 and u1(u0 + 1)− u0 if it plays 1, where u0 and u1 are the strategies of U0 and U1, respectively. • For each i = 1, . . . , k − 1, the expected payoff to Vi when it plays 0 is P0 (Vi) = Aiuiui+1 − Aiui+1, and the expected payoff to Vi when it plays 1 is P1 (Vi) = P0 (Vi) + ui+1(2 − ui) − 1, where Ai = −Ki+1 and ui+1 and ui are the strategies of Ui+1 and Ui, respectively. • For each i = 0, . . . , k, the payoff to Ui does not depend on Vi and is 1 if Ui and Vi−1 select different actions and 0 otherwise.",
                "We will now characterize the Nash equilibria of this game using a sequence of claims.",
                "CLAIM 3.",
                "In all Nash equilibria of this game V−1 plays 1/2, and the strategies of u−1 and u0 satisfy u0 = (x − x )u−1 + x .",
                "Consequently, in all Nash equilibria we have u0 ∈ [x , x ]. 165 PROOF.",
                "The proof is similar to that of Claim 2.",
                "Let f(u−1) = (x − x )u−1 + x .",
                "Clearly, the player V−1 is indifferent between playing 0 and 1 if and only if u0 = f(u−1).",
                "Suppose that v−1 < 1/2.",
                "Then U0 strictly prefers to play 1, i.e., u0 = 1, so we have P1 (V−1) = P0 (V−1) + 1 − (x − x )u−1 − x .",
                "As 1 − x ≤ 1 − (x − x )u−1 − x ≤ 1 − x for u−1 ∈ [0, 1] and x < 1, we have P1 (V−1) > P0 (V−1), so V−1 prefers to play 1, a contradiction.",
                "Similarly, if v−1 > 1/2, the player U0 strictly prefers to play 0, i.e., u0 = 0, so we have P1 (V−1) = P0 (V−1) − (x − x )u−1 − x .",
                "As x < x , x > 0, we have P1 (V−1) < P0 (V−1), so V−1 prefers to play 0, a contradiction.",
                "Finally, if V−1 plays 1/2, but u0 = f(u−1), player V−1 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Also, note that f(0) = x , f(1) = x , and, moreover, f(u−1) ∈ [x , x ] if and only if u−1 ∈ [0, 1].",
                "Hence, in all Nash equilibria of this game we have u0 ∈ [x , x ].",
                "CLAIM 4.",
                "In all Nash equilibria of this game for each i = 0, . . . , k − 1, we have vi = 1/2, and the strategies of the players Ui and Ui+1 satisfy ui+1 = fi(ui), where f0(u) = u/(u + 1) and fi(u) = 1/(2 − u) for i > 0.",
                "PROOF.",
                "The proof of this claim is also similar to that of Claim 2.",
                "We use induction on i to prove that the statement of the claim is true and, additionally, ui = 1 for i > 0.",
                "For the base case i = 0, note that u0 = 0 by the previous claim (recall that x , x are selected so that x , x = 0, 1) and consider the triple (U0, V0, U1).",
                "Let v0 be the strategy of V0.",
                "First, suppose that v0 > 1/2.",
                "Then U1 strictly prefers to play 0, i.e., u1 = 0.",
                "Then for V0 we have P1 (V0) = P0 (V0) − u0.",
                "As u0 = 0, we have P1 (V0) < P0 (V0), which implies v1 = 0, a contradiction.",
                "Similarly, if v0 < 1/2, player U1 prefers to play 1, so we have u1 = 1.",
                "Hence, P1 (V0) = P0 (V0) + 1.",
                "It follows that P1 (V0) > P0 (V0), which implies v0 = 1, a contradiction.",
                "Finally, if v0 = 1/2, but u1 = u0/(u0 + 1), player V0 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as u1 = u0/(u0 + 1) and u0 ∈ [0, 1], we have u1 = 1.",
                "The argument for the inductive step is similar.",
                "Namely, suppose that the statement is proved for all i < i and consider the triple (Ui, Vi, Ui+1).",
                "Let vi be the strategy of Vi.",
                "First, suppose that vi > 1/2.",
                "Then Ui+1 strictly prefers to play 0, i.e., ui+1 = 0.",
                "Then for Vi we have P1 (Vi) = P0 (Vi)−1, i.e., P1 (Vi) < P0 (Vi), which implies vi = 0, a contradiction.",
                "Similarly, if vi < 1/2, player Ui+1 prefers to play 1, so we have ui+1 = 1.",
                "Hence, P1 (Vi) = P0 (Vi) + 1 − ui.",
                "By inductive hypothesis, we have ui < 1.",
                "Consequently, P1 (Vi) > P0 (Vi), which implies vi = 1, a contradiction.",
                "Finally, if vi = 1/2, but ui+1 = 1/(2 − ui), player Vi is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as ui+1 = 1/(2 − ui) and ui < 1, we have ui+1 < 1.",
                "CLAIM 5.",
                "Any strategy profile of the form (u−1, 1/2, u0, 1/2, u1, 1/2, . . . , uk−1, 1/2, uk), where u−1 ∈ [0, 1], u0 = (x − x )u−1 + x , u1 = u0/(u0 + 1), and ui+1 = 1/(2 − ui) for i ≥ 1 constitutes a Nash equilibrium.",
                "PROOF.",
                "First, the player U−1s payoffs do not depend on other players actions, so he is free to play any strategy in [0, 1].",
                "As long as u0 = (x −x )u−1 +x , player V−1 is indifferent between 0 and 1, so he is content to play 1/2; a similar argument applies to players V0, . . . , Vk−1.",
                "Finally, for each i = 0, . . . , k, the payoffs of player Ui only depend on the strategy of player Vi−1.",
                "In particular, as long as vi−1 = 1/2, player Ui is indifferent between playing 0 and 1, so he can play any mixed strategy ui ∈ [0, 1].",
                "To complete the proof, note that (x − x )u−1 + x ∈ [0, 1] for all u−1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] for all u0 ∈ [0, 1], and 1/(2 − ui) ∈ [0, 1] for all ui ∈ [0, 1], so we have ui ∈ [0, 1] for all i = 0, . . . , k. Now, let us compute the total payoff under a strategy profile of the form given in Claim 5.",
                "The payoff to U−1 is 0, and the expected payoff to each of the Ui, i = 0, . . . , k, is 1/2.",
                "The expected payoffs to V−1 and V0 are 0.",
                "Finally, for any i = 1, . . . , k − 1, the expected payoff to Vi is Ti = Aiuiui+1 − Aiui+1.",
                "It follows that to find a Nash equilibrium with the highest total payoff, we have to maximize Pk−1 i=1 Ti subject to conditions u−1 ∈ [0, 1], u0 = (x −x )u−1+x , u1 = u0/(u0+1), and ui+1 = 1/(2−ui) for i = 1, . . . , k − 1.",
                "We would like to express Pk−1 i=1 Ti as a function of u0.",
                "To simplify notation, set u = u0.",
                "LEMMA 2.",
                "For i = 1, . . . , k, we have ui = u+i−1 u+i .",
                "PROOF.",
                "The proof is by induction on i.",
                "For i = 1, we have u1 = u/(u + 1).",
                "Now, for i ≥ 2 suppose that ui−1 = (u + i − 2)/(u + i − 1).",
                "We have ui = 1/(2 − ui−1) = (u + i − 1)/(2u + 2i − 2 − u − i + 2) = (u + i − 1)/(u + i).",
                "It follows that for i = 1, . . . , k − 1 we have Ti = Ai u + i − 1 u + i u + i u + i + 1 − Ai u + i u + i + 1 = −Ai 1 u + i + 1 = Ki+1 u + i + 1 .",
                "Observe that as u−1 varies from 0 to 1, u varies from x to x .",
                "Therefore, to maximize the total payoff, we have to choose u ∈ [x , x ] so as to maximize K2 u + 2 + · · · + Kk u + k = R(u).",
                "By construction, the only maximum of R(u) on [x , x ] is α.",
                "It follows that in the payoff-maximizing Nash equilibrium of our game U0 plays α.",
                "Finally, note that the payoffs in our game are rational rather than integer.",
                "However, it is easy to see that we can multiply all payoffs to a player by their greatest common denominator without affecting his strategy.",
                "In the resulting game, all payoffs are integer.",
                "This concludes the proof of Theorem 2. 4.",
                "APPROXIMATING THE SOCIALLY OPTIMAL NASH EQUILIBRIUM We have seen that the Nash equilibrium that maximizes the <br>social welfare</br> may involve strategies that are not in Q.",
                "Hence, in this section we focus on finding a Nash equilibrium that is almost optimal from the <br>social welfare</br> perspective.",
                "We propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within from optimal.",
                "The running time of this algorithm is polynomial in 1/ , n and |Pmax| (recall that Pmax is the maximum absolute value of an entry of a payoff matrix).",
                "While the negative result of the previous section is for graphical games on paths, our algorithm applies to a wider range of scenarios.",
                "Namely, it runs in polynomial time on bounded-degree trees 166 as long as the best response policy of each vertex, given its parent, can be represented as a union of a polynomial number of rectangles.",
                "Note that path graphs always satisfy this condition: in [9] we showed how to compute such a representation, given a graph with maximum degree 2.",
                "Consequently, for path graphs the running time of our algorithm is guaranteed to be polynomial. (Note that [9] exhibits a family of graphical games on bounded-degree trees for which the best response policies of some of the vertices, given their parents, have exponential size, when represented as unions of rectangles.)",
                "Due to space restrictions, in this version of the paper we present the algorithm for the case where the graph underlying the graphical game is a path.",
                "We then state our result for the general case; the proof can be found in the full version of this paper [10].",
                "Suppose that s is a strategy profile for a graphical game G. That is, s assigns a mixed strategy to each vertex of G. let EPV (s) be the expected payoff of player V under s and let EP(s) =P V EPV (s).",
                "Let M(G) = max{EP(s) | s is a Nash equilibrium for G}.",
                "THEOREM 3.",
                "Suppose that G is a graphical game on an nvertex path.",
                "Then for any > 0 there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G)− .",
                "The running time of the algorithm is O(n4 P3 max/ 3 ) PROOF.",
                "Let {V1, . . . , Vn} be the set of all players.",
                "We start by constructing the best response policies for all Vi, i = 1, . . . , n − 1.",
                "As shown in [9], this can be done in time O(n3 ).",
                "Let N > 5n be a parameter to be selected later, set δ = 1/N, and define X = {jδ | j = 0, . . . , N}.",
                "We say that vj is an event point for a player Vi if it is a Vi-event point for B(Vi, Vi−1) or B(Vi+1, Vi).",
                "For each player Vi, consider a finite set of strategies Xi given by Xi = X ∪ {vj |vj is an event point for Vi}.",
                "It has been shown in [9] that for any i = 2, . . . , n, the best response policy B(Vi, Vi−1) has at most 2n + 4 Vi-event points.",
                "As we require N > 5n, we have |Xi| ≤ 2N; assume without loss of generality that |Xi| = 2N.",
                "Order the elements of Xi in increasing order as x1 i = 0 < x2 i < · · · < x2N i .",
                "We will refer to the strategies in Xi as discrete strategies of player Vi; a strategy profile in which each player has a discrete strategy will be referred to as a discrete strategy profile.",
                "We will now show that even we restrict each player Vi to strategies from Xi, the players can still achieve a Nash equilibrium, and moreover, the best such Nash equilibrium (with respect to the <br>social welfare</br>) has total payoff at least M(G) − as long as N is large enough.",
                "Let s be a strategy profile that maximizes <br>social welfare</br>.",
                "That is, let s = (s1, . . . , sn) where si is the mixed strategy of player Vi and EP(s) = M(G).",
                "For i = 1, . . . , n, let ti = max{xj i | xj i ≤ si}.",
                "First, we will show that the strategy profile t = (t1, . . . , tn) is a Nash equilibrium for G. Fix any i, 1 < i ≤ n, and let R = [v1, v2]×[u1, u2] be the rectangle in B(Vi, Vi−1) that contains (si, si−1).",
                "As v1 is a Vi-event point of B(Vi, Vi−1), we have v1 ≤ ti, so the point (ti, si−1) is inside R. Similarly, the point u1 is a Vi−1-event point of B(Vi, Vi−1), so we have u1 ≤ ti−1, and therefore the point (ti, ti−1) is inside R. This means that for any i, 1 < i ≤ n, we have ti−1 ∈ pbrVi−1 (ti), which implies that t = (t1, . . . , tn) is a Nash equilibrium for G. Now, let us estimate the expected loss in <br>social welfare</br> caused by playing t instead of s. LEMMA 3.",
                "For any pair of strategy profiles t, s such that |ti − si| ≤ δ we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ for any i = 1, . . . , n. PROOF.",
                "Let Pi klm be the payoff of the player Vi, when he plays k, Vi−1 plays l, and Vi+1 plays m. Fix i = 1, . . . , n and for k, l, m ∈ {0, 1}, set tklm = tk i−1(1 − ti−1)1−k tl i(1 − ti)1−l tm i+1(1 − ti+1)1−m sklm = sk i−1(1 − si−1)1−k sl i(1 − si)1−l sm i+1(1 − si+1)1−m .",
                "We have |EPVi (s) − EPVi (t)| ≤ X k,l,m=0,1 |Pi klm(tklm − sklm )| ≤ 8Pmax max klm |tklm − sklm | We will now show that for any k, l, m ∈ {0, 1} we have |tklm − sklm | ≤ 3δ; clearly, this implies the lemma.",
                "Indeed, fix k, l, m ∈ {0, 1}.",
                "Set x = tk i−1(1 − ti−1)1−k , x = sk i−1(1 − si−1)1−k , y = tl i(1 − ti)1−l , y = sl i(1 − si)1−l , z = tm i+1(1 − ti+1)1−m , z = sm i+1(1 − si+1)1−m .",
                "Observe that if k = 0 then x − x = (1 − ti−1) − (1 − si−1), and if k = 1 then x − x = ti−1 − si−1, so |x − x | ≤ δ.",
                "A similar argument shows |y − y | ≤ δ, |z − z | ≤ δ.",
                "Also, we have x, x , y, y , z, z ∈ [0, 1].",
                "Hence, |tklm −sklm | = |xyz−x y z | = |xyz − x yz + x yz − x y z + x y z − x y z | ≤ |x − x |yz + |y − y |x z + |z − z |x y ≤ 3δ.",
                "Lemma 3 implies Pn i=1 |EPVi (s) − EPVi (t)| ≤ 24nPmaxδ, so by choosing δ < /(24nPmax), or, equivalently, setting N > 24nPmax/ , we can ensure that the total expected payoff for the strategy profile t is within from optimal.",
                "We will now show that we can find the best discrete Nash equilibrium (with respect to the <br>social welfare</br>) using dynamic programming.",
                "As t is a discrete strategy profile, this means that the strategy profile found by our algorithm will be at least as good as t. Define ml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj , j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1, and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The values ml,k i , i = 1, . . . , n; k, l = 1, . . . , N, can be computed inductively, as follows.",
                "We have ml,k 1 = 0 for k, l = 1, . . . , N. Now, suppose that we have already computed ml,k j for all j < i; k, l = 1, . . . , N. To compute mk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this is not the case, we have ml,k i = −∞.",
                "Otherwise, consider the set Y = Xi−2 ∩ pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "The proof of Theorem 1 in [9] implies that the set pbrVi−2 (xl i−1) is non-empty: the player Vi−2 has a potential best response to any strategy of Vi−1, in particular, xl i−1.",
                "By construction of the set Xi−2, this implies that Y is not empty.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "Then we have ml,k i = max{mj,l i−1 + pjlk | xj i−2 ∈ Y }.",
                "Finally, suppose that we have computed ml,k n for l, k = 1, . . . , N. We still need to take into account the payoff of player Vn.",
                "Hence, 167 we consider all pairs (xk n, xl n−1) that satisfy xl n−1 ∈ pbrVn−1 (xk n), and pick the one that maximizes the sum of mk,l n and the payoff of Vn when he plays xk n and Vn−1 plays xl n−1.",
                "This results in the maximum total payoff the players can achieve in a Nash equilibrium using discrete strategies; the actual strategy profile that produces this payoff can be reconstructed using standard dynamic programming techniques.",
                "It is easy to see that each ml,k i can be computed in time O(N), i.e., all of them can be computed in time O(nN3 ).",
                "Recall that we have to select N ≥ (24nPmax)/ to ensure that the strategy profile we output has total payoff that is within from optimal.",
                "We conclude that we can compute an -approximation to the best Nash equilibrium in time O(n4 P3 max/ 3 ).",
                "This completes the proof of Theorem 3.",
                "To state our result for the general case (i.e., when the underlying graph is a bounded-degree tree rather than a path), we need additional notation.",
                "If G has n players, let q(n) be an upper bound on the number of event points in the representation of any best response policy.",
                "That is, we assume that for any vertex U with parent V , B(V, U) has at most q(n) event points.",
                "We will be interested in the situation in which q(n) is polynomial in n. THEOREM 4.",
                "Let G be an n-player graphical game on a tree in which each node has at most Δ children.",
                "Suppose we are given a set of best-response policies for G in which each best-response policy B(V, U) is represented by a set of rectangles with at most q(n) event points.",
                "For any > 0, there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G) − .",
                "The running time of the algorithm is polynomial in n, Pmax and −1 provided that the tree has bounded degree (that is, Δ = O(1)) and q(n) is a polynomial in n. In particular, if N = max((Δ + 1)q(n) + 1, n2Δ+2 (Δ + 2)Pmax −1 ) and Δ > 1 then the running time is O(nΔ(2N)Δ .",
                "For the proof of this theorem, see [10]. 4.1 A polynomial-time algorithm for multiplicative approximation The running time of our algorithm is pseudopolynomial rather than polynomial, because it includes a factor which is polynomial in Pmax, the maximum (in absolute value) entry in any payoff matrix.",
                "If we are interested in multiplicative approximation rather than additive one, this can be improved to polynomial.",
                "First, note that we cannot expect a multiplicative approximation for all inputs.",
                "That is, we cannot hope to have an algorithm that computes a Nash equilibrium with total payoff at least (1 − )M(G).",
                "If we had such an algorithm, then for graphical games G with M(G) = 0, the algorithm would be required to output the optimal solution.",
                "To show that this is infeasible, observe that we can use the techniques of Section 3.2 to construct two integercoefficient graphical games on paths of length O(n) such that for some X ∈ R the maximal total payoff in the first game is X, the maximal total payoff in the second game is −X, and for both games, the strategy profiles that achieve the maximal total payoffs involve algebraic numbers of degree n. By combining the two games so that the first vertex of the second game becomes connected to the last vertex of the first game, but the payoffs of all players do not change, we obtain a graphical game in which the best Nash equilibrium has total payoff 0, yet the strategies that lead to this payoff have high algebraic complexity.",
                "However, we can achieve a multiplicative approximation when all entries of the payoff matrices are positive and the ratio between any two entries is polynomially bounded.",
                "Recall that we assume that all payoffs are integer, and let Pmin > 0 be the smallest entry of any payoff matrix.",
                "In this case, for any strategy profile the payoff to player i is at least Pmin, so the total payoff in the social-welfare maximizing Nash equilibrium s satisfies M(G) ≥ nPmin.",
                "Moreover, Lemma 3 implies that by choosing δ < /(24Pmax/Pmin), we can ensure that the Nash equilibrium t produced by our algorithm satisfies nX i=1 EPVi (s) − nX i=1 EPVi (t) ≤ 24Pmaxδn ≤ nPmin ≤ M(G), i.e., for this value of δ we have Pn i=1 EPVi (t) ≥ (1 − )M(G).",
                "Recall that the running time of our algorithm is O(nN3 ), where N has to be selected to satisfy N > 5n, N = 1/δ.",
                "It follows that if Pmin > 0, Pmax/Pmin = poly(n), we can choose N so that our algorithm provides a multiplicative approximation guarantee and runs in time polynomial in n and 1/ . 5.",
                "BOUNDED PAYOFF NASH EQUILIBRIA Another natural way to define what is a good Nash equilibrium is to require that each players expected payoff exceeds a certain threshold.",
                "These thresholds do not have to be the same for all players.",
                "In this case, in addition to the payoff matrices of the n players, we are given n numbers T1, . . . , Tn, and our goal is to find a Nash equilibrium in which the payoff of player i is at least Ti, or report that no such Nash equilibrium exists.",
                "It turns out that we can design an FPTAS for this problem using the same techniques as in the previous section.",
                "THEOREM 5.",
                "Given a graphical game G on an n-vertex path and n rational numbers T1, . . . , Tn, suppose that there exists a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. Then for any > 0 we can find in time O(max{nP3 max/ 3 , n4 / 3 }) a strategy profile s such that s is a Nash equilibrium for G and EPVi (s ) ≥ Ti − for i = 1, . . . , n. PROOF.",
                "The proof is similar to that of Theorem 3.",
                "First, we construct the best response policies for all players, choose N > 5n, and construct the sets Xi, i = 1, . . . , n, as described in the proof of Theorem 3.",
                "Consider a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. We construct a strategy profile ti = max{xj i | xj i ≤ si} and use the same argument as in the proof of Theorem 3 to show that t is a Nash equilibrium for G. By Lemma 3, we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ, so choosing δ < /(24Pmax), or, equivalently, N > max{5n, 24Pmax/ }, we can ensure EPVi (t) ≥ Ti − for i = 1, . . . , n. Now, we will use dynamic programming to find a discrete Nash equilibrium that satisfies EPVi (t) ≥ Ti − for i = 1, . . . , n. As t is a discrete strategy profile, our algorithm will succeed whenever there is a strategy profile s with EPVi (s) ≥ Ti− for i = 1, . . . , n. Let zl,k i = 1 if there is a discrete strategy profile such that for any j < i the strategy of the player Vj is a potential best response to the strategy of Vj+1, the expected payoff of Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "Otherwise, let zl,k i = 0.",
                "We can compute zl,k i , i = 1, . . . , n; k, l = 1, . . . , N inductively, as follows.",
                "We have zl,k 1 = 1 for k, l = 1, . . . , N. Now, suppose that we have already computed zl,k j for all j < i; k, l = 1, . . . , N. To compute zk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this 168 is not the case, clearly, zk,l i = 0.",
                "Otherwise, consider the set Y = Xi−2 ∩pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "It has been shown in the proof of Theorem 3 that Y = ∅.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "If there exists an xj i−2 ∈ Y such that zj,l i−1 = 1 and pjlk ≥ Ti−2 − , set zl,k i = 1.",
                "Otherwise, set zl,k i = 0.",
                "Having computed zl,k n , l, k = 1, . . . , N, we check if zl,k n = 1 for some pair (l, k). if such a pair of indices exists, we instruct Vn to play xk n and use dynamic programming techniques (or, equivalently, the downstream pass of the algorithm of [13]) to find a Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n (recall that Vn is a dummy player, i.e., we assume Tn = 0, EPn(s ) = 0 for any choice of s ).",
                "If zl,k n = 0 for all l, k = 1, . . . , N, there is no discrete Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n and hence no Nash equilibrium s (not necessarily discrete) such that EPVi (s) ≥ Ti for i = 1, . . . , n. The running time analysis is similar to that for Theorem 3; we conclude that the running time of our algorithm is O(nN3 ) = O(max{nP3 max/ 3 , n4 / 3 }).",
                "REMARK 1.",
                "Theorem 5 can be extended to trees of bounded degree in the same way as Theorem 4. 5.1 Exact Computation Another approach to finding Nash equilibria with bounded payoffs is based on inductively computing the subsets of the best response policies of all players so as to exclude the points that do not provide sufficient payoffs to some of the players.",
                "Formally, we say that a strategy v of the player V is a potential best response to a strategy w of its parent W with respect to a threshold vector T = (T1, . . . , Tn), (denoted by v ∈ pbrV (w, T)) if there is an equilibrium in the instance G(V,W ),W =w in which V plays mixed strategy v and the payoff to any player Vi downstream of V (including V ) is at least Ti.",
                "The best response policy for V with respect to a threshold vector T is defined as B(W, V, T) = {(w, v) | v ∈ pbrV (w, T), w ∈ [0, 1]}.",
                "It is easy to see that if any of the sets B(Vj, Vj−1, T), j = 1, . . . , n, is empty, it means that it is impossible to provide all players with expected payoffs prescribed by T. Otherwise, one can apply the downstream pass of the original algorithm of [13] to find a Nash equilibrium.",
                "As we assume that Vn is a dummy vertex whose payoff is identically 0, the Nash equilibrium with these payoffs exists as long as Tn ≤ 0 and B(Vn, Vn−1, T) is not empty.",
                "Using the techniques developed in [9], it is not hard to show that for any j = 1, . . . , n, the set B(Vj , Vj−1, T) consists of a finite number of rectangles, and one can compute B(Vj+1, Vj , T) given B(Vj , Vj−1, T).",
                "The advantage of this approach is that it allows us to represent all Nash equilibria that provide required payoffs to the players.",
                "However, it is not likely to be practical, since it turns out that the rectangles that appear in the representation of B(Vj , Vj−1, T) may have irrational coordinates.",
                "CLAIM 6.",
                "There exists a graphical game G on a 3-vertex path UV W and a vector T = (T1, T2, T3) such that B(V, W, T) cannot be represented as a union of a finite number of rectangles with rational coordinates.",
                "PROOF.",
                "We define the payoffs to the players in G as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = uw, P1 (V ) = P0 (V ) + w − .8u − .1, where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = .8u + .1; observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "It is not hard to see that we have B(W, V ) = [0, .1]×{0} ∪ [.1, .9]×[0, 1] ∪ [.9, 1]×{1}.",
                "The payoffs to W are not important for our construction; for example, set P0(W ) = P0(W ) = 0.",
                "Now, set T = (0, 1/8, 0), i.e., we are interested in Nash equilibria in which V s expected payoff is at least 1/8.",
                "Suppose w ∈ [0, 1].",
                "The player V can play a mixed strategy v when W is playing w as long as U plays u = f−1 (w) = 5w/4 − 1/8 (to ensure that V is indifferent between 0 and 1) and P0 (V ) = P1 (V ) = uw = w(5w/4 − 1/8) ≥ 1/8.",
                "The latter condition is satisfied if w ≤ (1 − √ 41)/20 < 0 or w ≥ (1 + √ 41)/20.",
                "Note that we have .1 < (1 + √ 41)/20 < .9.",
                "For any other value of w, any strategy of U either makes V prefer one of the pure strategies or does not provide it with a sufficient expected payoff.",
                "There are also some values of w for which V can play a pure strategy (0 or 1) as a potential best response to W and guarantee itself an expected payoff of at least 1/8; it can be shown that these values of w form a finite number of segments in [0, 1].",
                "We conclude that any representation of B(W, V, T) as a union of a finite number of rectangles must contain a rectangle of the form [(1 + √ 41)/20, w ]×[v , v ] for some w , v , v ∈ [0, 1].",
                "On the other hand, it can be shown that for any integer payoff matrices and threshold vectors and any j = 1, . . . , n − 1, the sets B(Vj+1, Vj, T) contain no rectangles of the form [u , u ]×{v} or {v}×[w , w ], where v ∈ R\\Q.",
                "This means that if B(Vn, Vn−1, T) is non-empty, i.e., there is a Nash equilibrium with payoffs prescribed by T, then the downstream pass of the algorithm of [13] can always pick a strategy profile that forms a Nash equilibrium, provides a payoff of at least Ti to the player Vi, and has no irrational coordinates.",
                "Hence, unlike in the case of the Nash equilibrium that maximizes the <br>social welfare</br>, working with irrational numbers is not necessary, and the fact that the algorithm discussed in this section has to do so can be seen as an argument against using this approach. 6.",
                "OTHER CRITERIA FOR SELECTING A NASH EQUILIBRIUM In this section, we consider several other criteria that can be useful in selecting a Nash equilibrium. 6.1 Combining welfare maximization with bounds on payoffs In many real life scenarios, we want to maximize the <br>social welfare</br> subject to certain restrictions on the payoffs to individual players.",
                "For example, we may want to ensure that no player gets a negative expected payoff, or that the expected payoff to player i is at least Pi max − ξ, where Pi max is the maximum entry of is payoff matrix and ξ is a fixed parameter.",
                "Formally, given a graphical game G and a vector T1, . . . , Tn, let S be the set of all Nash equilibria s of G that satisfy Ti ≤ EPVi (s) for i = 1, . . . , n, and let ˆs = argmaxs∈S EP(s).",
                "If the set S is non-empty, we can find a Nash equilibrium ˆs that is -close to satisfying the payoff bounds and is within from ˆs with respect to the total payoff by combining the algorithms of Section 4 and Section 5.",
                "Namely, for a given > 0, choose δ as in the proof of Theorem 3, and let Xi be the set of all discrete strategies of player Vi (for a 169 formal definition, see the proof of Theorem 3).",
                "Combining the proofs of Theorem 3 and Theorem 5, we can see that the strategy profile ˆt given by ˆti = max{xj i | xj i ≤ ˆsi} satisfies EPVi (ˆt) ≥ Ti − , |EP(ˆs) − EP(ˆt)| ≤ .",
                "Define ˆml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj, j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1 and the payoff to player Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The ˆml,k i can be computed by dynamic programming similarly to the ml,k i and zl,k i in the proofs of Theorems 3 and 5.",
                "Finally, as in the proof of Theorem 3, we use ml,k n to select the best discrete Nash equilibrium subject to the payoff constraints.",
                "Even more generally, we may want to maximize the total payoff to a subset of players (who are assumed to be able to redistribute the profits fairly among themselves) while guaranteeing certain expected payoffs to (a subset of) the other players.",
                "This problem can be handled similarly. 6.2 A minimax approach A more egalitarian measure of the quality of a Nash equilibrium is the minimal expected payoff to a player.",
                "The optimal solution with respect to this measure is a Nash equilibrium in which the minimal expected payoff to a player is maximal.",
                "To find an approximation to such a Nash equilibrium, we can combine the algorithm of Section 5 with binary search on the space of potential lower bounds.",
                "Note that the expected payoff to any player Vi given a strategy s always satisfies −Pmax ≤ EPVi (s) ≤ Pmax.",
                "For a fixed > 0, we start by setting T = −Pmax, T = Pmax, T∗ = (T + T )/2.",
                "We then run the algorithm of Section 5 with T1 = · · · = Tn = T∗ .",
                "If the algorithm succeeds in finding a Nash equilibrium s that satisfies EPVi (s ) ≥ T∗ − for all i = 1, . . . , n, we set T = T∗ , T∗ = (T + T )/2; otherwise, we set T = T∗ , T∗ = (T + T )/2 and loop.",
                "We repeat this process until |T − T | ≤ .",
                "It is not hard to check that for any p ∈ R, if there is a Nash equilibrium s such that mini=1,...,n EPVi (s) ≥ p, then our algorithm outputs a Nash equilibrium s that satisfies mini=1,...,n EPVi (s) ≥ p−2 .",
                "The running time of our algorithm is O(max{nP3 max log −1 / 3 , n4 log −1 / 3 }). 6.3 Equalizing the payoffs When the players payoff matrices are not very different, it is reasonable to demand that the expected payoffs to the players do not differ by much either.",
                "We will now show that Nash equilibria in this category can be approximated in polynomial time as well.",
                "Indeed, observe that the algorithm of Section 5 can be easily modified to deal with upper bounds on individual payoffs rather than lower bounds.",
                "Moreover, we can efficiently compute an approximation to a Nash equilibrium that satisfies both the upper bound and the lower bound for each player.",
                "More precisely, suppose that we are given a graphical game G, 2n rational numbers T1, . . . , Tn, T1, . . . , Tn and > 0.",
                "Then if there exists a strategy profile s such that s is a Nash equilibrium for G and Ti ≤ EPVi (s) ≤ Ti for i = 1, . . . , n, we can find a strategy profile s such that s is a Nash equilibrium for G and Ti − ≤ EPVi (s ) ≤ Ti + for i = 1, . . . , n. The modified algorithm also runs in time O(max{nP3 max/ 3 , [4]n4 / 3 }).",
                "This observation allows us to approximate Nash equilibria in which all players expected payoffs differ by at most ξ for any fixed ξ > 0.",
                "Given an > 0, we set T1 = · · · = Tn = −Pmax, T1 = · · · = Tn = −Pmax + ξ + , and run the modified version of the algorithm of Section 5.",
                "If it fails to find a solution, we increment all Ti, Ti by and loop.",
                "We continue until the algorithm finds a solution, or Ti ≥ Pmax.",
                "Suppose that there exists a Nash equilibrium s that satisfies |EPVi (s) − EPVj (s)| ≤ ξ for all i, j = 1, . . . , n. Set r = mini=1,...,n EPVi (s); we have r ≤ EPVi (s) ≤ r + ξ for all i = 1, . . . , n. There exists a k ≥ 0 such that −Pmax + (k − 1) ≤ r ≤ −Pmax + k .",
                "During the kth step of the algorithm, we set T1 = · · · = Tn = −Pmax +(k−1) , i.e., we have r− ≤ Ti ≤ r, r + ξ ≤ Ti ≤ r + ξ + .",
                "That is, the Nash equilibrium s satisfies Ti ≤ r ≤ EPVi (s) ≤ r + ξ ≤ Ti , which means that when Ti is set to −Pmax + (k − 1) , our algorithm is guaranteed to output a Nash equilibrium t that satisfies r − 2 ≤ Ti − ≤ EPVi (t) ≤ Ti + ≤ r +ξ +2 .",
                "We conclude that whenever such a Nash equilibrium s exists, our algorithm outputs a Nash equilibrium t that satisfies |EPVi (t) − EPVj (t)| ≤ ξ + 4 for all i, j = 1, . . . , n. The running time of this algorithm is O(max{nP3 max/ 4 , n4 / 4 }).",
                "Note also that we can find the smallest ξ for which such a Nash equilibrium exists by combining this algorithm with binary search over the space ξ = [0, 2Pmax].",
                "This identifies an approximation to the fairest Nash equilibrium, i.e., one in which the players expected payoffs differ by the smallest possible amount.",
                "Finally, note that all results in this section can be extended to bounded-degree trees. 7.",
                "CONCLUSIONS We have studied the problem of equilibrium selection in graphical games on bounded-degree trees.",
                "We considered several criteria for selecting a Nash equilibrium, such as maximizing the <br>social welfare</br>, ensuring a lower bound on the expected payoff of each player, etc.",
                "First, we focused on the algebraic complexity of a <br>social welfare</br>-maximizing Nash equilibrium, and proved strong negative results for that problem.",
                "Namely, we showed that even for graphical games on paths, any algebraic number α ∈ [0, 1] may be the only strategy available to some player in all social welfaremaximizing Nash equilibria.",
                "This is in sharp contrast with the fact that graphical games on trees always possess a Nash equilibrium in which all players strategies are rational numbers.",
                "We then provided approximation algorithms for selecting Nash equilibria with special properties.",
                "While the problem of finding approximate Nash equilibria for various classes of games has received a lot of attention in recent years, most of the existing work aims to find -Nash equilibria that satisfy (or are -close to satisfying) certain properties.",
                "Our approach is different in that we insist on outputting an exact Nash equilibrium, which is -close to satisfying a given requirement.",
                "As argued in the introduction, there are several reasons to prefer a solution that constitutes an exact Nash equilibrium.",
                "Our algorithms are fully polynomial time approximation schemes, i.e., their running time is polynomial in the inverse of the approximation parameter , though they may be pseudopolynomial with respect to the input size.",
                "Under mild restrictions on the inputs, they can be modified to be truly polynomial.",
                "This is the strongest positive result one can derive for a problem whose exact solutions may be hard to represent, as is the case for many of the problems considered here.",
                "While we prove our results for games on a path, they can be generalized to any tree for which the best response policies have compact representations as unions of rectangles.",
                "In the full version of the paper we describe our algorithms for the general case.",
                "Further work in this vein could include extensions to the kinds of guarantees sought for Nash equilibria, such as guaranteeing total payoffs for subsets of players, selecting equilibria in which some players are receiving significantly higher payoffs than their peers, etc.",
                "At the moment however, it is perhaps more important to inves170 tigate whether Nash equilibria of graphical games can be computed in a decentralized manner, in contrast to the algorithms we have introduced here.",
                "It is natural to ask if our results or those of [9] can be generalized to games with three or more actions.",
                "However, it seems that this will make the analysis significantly more difficult.",
                "In particular, note that one can view the bounded payoff games as a very limited special case of games with three actions per player.",
                "Namely, given a two-action game with payoff bounds, consider a game in which each player Vi has a third action that guarantees him a payoff of Ti no matter what everyone else does.",
                "Then checking if there is a Nash equilibrium in which none of the players assigns a nonzero probability to his third action is equivalent to checking if there exists a Nash equilibrium that satisfies the payoff bounds in the original game, and Section 5.1 shows that finding an exact solution to this problem requires new ideas.",
                "Alternatively it may be interesting to look for similar results in the context of correlated equilibria (CE), especially since the best CE may have higher value (total expected payoff) than the best NE.",
                "The ratio between these values is called the mediation value in [1].",
                "It is known from [1] that the mediation value of 2-player, 2-action games with non-negative payoffs is at most 4 3 , and they exhibit a 3-player game for which it is infinite.",
                "Furthermore, a 2-player, 3action example from [1] also has infinite mediation value. 8.",
                "REFERENCES [1] I. Ashlagi, D. Monderer and M. Tenneholtz, On the Value of Correlation, Proceedings of Dagstuhl seminar 05011 (2005) [2] R. Aumann, Subjectivity and Correlation in Randomized Strategies, Journal of Mathematical Economics 1 pp. 67-96 (1974) [3] B. Blum, C. R. Shelton, and D. Koller, A Continuation Method for Nash Equilibria in Structured Games, Proceedings of IJCAI03 [4] X. Chen, X. Deng and S. Teng, Computing Nash Equilibria: Approximation and Smoothed Complexity, Proceedings of FOCS06 [5] X. Chen, X. Deng, Settling the Complexity of 2-Player Nash-Equilibrium, Proceedings of FOCS06 [6] V. Conitzer and T. Sandholm, Complexity Results about Nash Equilibria, Proceedings of IJCAI03 [7] C. Daskalakis, P. W. Goldberg and C. H. Papadimitriou, The Complexity of Computing a Nash Equilibrium, Proceedings of STOC06 [8] R. S. Datta, Universality of Nash Equilibria, Mathematics of Operations Research 28:3, 2003 [9] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Nash Equilibria in Graphical games on Trees Revisited, Proceedings of ACM EC06 [10] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Computing Good Nash Equilibria in Graphical Games, http://arxiv.org/abs/cs.GT/0703133 [11] I. Gilboa and E. Zemel, Nash and Correlated Equilibria: Some Complexity Considerations, Games and Economic Behavior, 1 pp. 80-93 (1989) [12] P. W. Goldberg and C. H. Papadimitriou, Reducibility Among Equilibrium Problems, Proceedings of STOC06 [13] M. Kearns, M. Littman, and S. Singh, Graphical Models for Game Theory, Proceedings of UAI01 [14] M. Littman, M. Kearns, and S. Singh, An Efficient Exact Algorithm for Singly Connected Graphical Games, Proceedings of NIPS01 [15] R. Lipton and E. Markakis, Nash Equilibria via Polynomial Equations, Proceedings of LATIN04 [16] L. Ortiz and M. Kearns, Nash Propagation for Loopy Graphical Games, Proceedings of NIPS03 [17] C.H.",
                "Papadimitriou, Computing Correlated Equilibria in Multi-Player Games, Proceedings of STOC05 [18] C.H.",
                "Papadimitriou and T. Roughgarden, Computing Equilibria in Multi-Player Games, Proceedings of SODA05 [19] D. Vickrey and D. Koller, Multi-agent Algorithms for Solving Graphical Games, Proceedings of AAAI02 171"
            ],
            "original_annotated_samples": [
                "Another attractive solution concept is a Nash equilibrium that maximizes the <br>social welfare</br>.",
                "In particular, we show how to find a Nash equilibrium that (nearly) maximizes the <br>social welfare</br>, i.e., the sum of the players payoffs, and we show how to find a Nash equilibrium that (nearly) satisfies prescribed payoff bounds for all players.",
                "Section 3 studies the algebraic structure of those Nash equilibria that maximize <br>social welfare</br>.",
                "We show (Theorems 1 and 2) that, surprisingly, the set of Nash equilibria that maximize <br>social welfare</br> is more complex.",
                "In fact, for any algebraic number α ∈ [0, 1] with degree at most n, we exhibit a graphical game on a path of length O(n) such that, in the unique <br>social welfare</br>-maximizing Nash equilibrium of this game, one of the players plays the mixed strategy α.1 This result shows that it may be difficult to represent an optimal Nash equilibrium."
            ],
            "translated_annotated_samples": [
                "Otro concepto de solución atractivo es un equilibrio de Nash que maximiza el <br>bienestar social</br>.",
                "En particular, mostramos cómo encontrar un equilibrio de Nash que maximiza (casi) el <br>bienestar social</br>, es decir, la suma de las ganancias de los jugadores, y mostramos cómo encontrar un equilibrio de Nash que satisface (casi) los límites de ganancias prescritos para todos los jugadores.",
                "La sección 3 estudia la estructura algebraica de aquellos equilibrios de Nash que maximizan el <br>bienestar social</br>.",
                "Demostramos (Teoremas 1 y 2) que, sorprendentemente, el conjunto de equilibrios de Nash que maximizan el <br>bienestar social</br> es más complejo.",
                "De hecho, para cualquier número algebraico α ∈ [0, 1] con grado a lo sumo n, exhibimos un juego gráfico en un camino de longitud O(n) tal que, en el equilibrio de Nash único que maximiza el <br>bienestar social</br> de este juego, uno de los jugadores juega la estrategia mixta α. Este resultado muestra que puede ser difícil representar un equilibrio de Nash óptimo."
            ],
            "translated_text": "Calcular buenos equilibrios de Nash en juegos gráficos ∗ Edith Elkind Universidad Hebrea de Jerusalén, Israel, y Universidad de Southampton, Southampton, SO17 1BJ, Reino Unido. Leslie Ann Goldberg Universidad de Liverpool Liverpool L69 3BX, Reino Unido. Paul Goldberg Universidad de Liverpool Liverpool L69 3BX, Reino Unido. RESUMEN Este artículo aborda el problema de la selección justa de equilibrios en juegos gráficos. Nuestro enfoque se basa en la estructura de datos llamada política de mejor respuesta, propuesta por Kearns et al. [13] como una forma de representar todos los equilibrios de Nash de un juego gráfico. En [9], se demostró que la política de mejor respuesta tiene un tamaño polinómico siempre y cuando el grafo subyacente sea un camino. En este artículo, demostramos que si el grafo subyacente es un árbol de grado acotado y la política de mejor respuesta tiene un tamaño polinómico, entonces existe un algoritmo eficiente que construye un equilibrio de Nash que garantiza ciertos pagos a todos los participantes. Otro concepto de solución atractivo es un equilibrio de Nash que maximiza el <br>bienestar social</br>. Mostramos que, si bien calcular exactamente lo último es inviable (demostramos que resolver este problema puede implicar números algebraicos de un grado arbitrariamente alto), existe un FPTAS para encontrar dicho equilibrio siempre y cuando la política de mejor respuesta tenga un tamaño polinómico. Estos dos algoritmos pueden combinarse para producir equilibrios de Nash que satisfacen varios criterios de equidad. Categorías y Descriptores de Asignaturas F.2 [Teoría de la Computación]: Análisis de Algoritmos y Complejidad de Problemas; J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento - Economía Términos Generales Algoritmos, Economía, Teoría 1. INTRODUCCIÓN En una gran comunidad de agentes, es poco probable que el comportamiento de un agente tenga un efecto directo en la mayoría de los otros agentes: más bien, solo serán afectados los agentes que estén lo suficientemente cerca de él. Sin embargo, a medida que estos agentes responden adaptando su comportamiento, más agentes sentirán las consecuencias y eventualmente las decisiones tomadas por un solo agente se propagarán por toda la comunidad. Esta es la intuición detrás de los juegos gráficos, los cuales fueron introducidos por Kearns, Littman y Singh en [13] como un esquema de representación compacto para juegos con muchos jugadores. En un juego gráfico de n jugadores, a cada jugador se le asocia un vértice de un grafo subyacente G, y las ganancias de cada jugador dependen de su acción, así como de las acciones de sus vecinos en el grafo. Si el grado máximo de G es Δ, y cada jugador tiene dos acciones disponibles, entonces el juego se puede representar usando n2Δ+1 números. Por el contrario, necesitamos n^2 números para representar un juego general de n jugadores y 2 acciones, lo cual solo es práctico para valores pequeños de n. Para juegos gráficos con Δ constante, el tamaño del juego es lineal en n. Uno de los problemas más naturales para un juego gráfico es el de encontrar un equilibrio de Nash, cuya existencia se deriva del célebre teorema de Nash (ya que los juegos gráficos son solo un caso especial de juegos de n jugadores). El primer intento de abordar este problema se realizó en [13], donde los autores consideran juegos gráficos con dos acciones por jugador en los que el grafo subyacente es un árbol de grado acotado. Proponen un algoritmo genérico para encontrar equilibrios de Nash que puede ser especializado de dos maneras: un algoritmo de tiempo exponencial para encontrar un equilibrio de Nash (exacto) y un esquema de aproximación de tiempo polinómico completo (FPTAS) para encontrar una aproximación a un equilibrio de Nash. Para cualquier > 0, este algoritmo produce un equilibrio de Nash, que es un perfil estratégico en el que ningún jugador puede mejorar su pago más que al cambiar unilateralmente su estrategia. Si bien los equilibrios de Nash aproximados suelen ser más fáciles de calcular que los equilibrios de Nash exactos, este concepto de solución tiene varias desventajas. Primero, es posible que los jugadores sean sensibles a una pequeña pérdida en las ganancias, por lo que el perfil estratégico que es un equilibrio de Nash no será estable. Esto será así incluso si solo hay un pequeño subconjunto de jugadores que son extremadamente sensibles al precio, y para una gran población de jugadores puede ser difícil elegir un valor que satisfaga a todos. Segundo, los perfiles estratégicos que están cerca de ser equilibrios de Nash pueden ser mucho mejores con respecto a las propiedades consideradas que los equilibrios de Nash exactos. Por lo tanto, la aproximación al valor de la mejor solución que corresponde a un equilibrio de Nash aproximado puede no ser indicativa de lo que se puede lograr bajo un equilibrio de Nash exacto. Esto es especialmente importante si el propósito de la solución aproximada es proporcionar un buen punto de referencia para un sistema de agentes egoístas, ya que el punto de referencia implícito por un equilibrio de Nash puede ser poco realista. Por estas razones, en este artículo nos enfocamos en el problema de calcular equilibrios de Nash exactos. Basándose en las ideas de [14], Elkind et al. [9] mostraron cómo encontrar un equilibrio de Nash (exacto) en tiempo polinómico cuando el grafo subyacente tiene grado 2 (es decir, cuando el grafo es una colección de caminos y ciclos). Por el contrario, encontrar un equilibrio de Nash en un grafo general con grado acotado parece ser computacionalmente intratable: se ha demostrado (ver [5, 12, 7]) que es completo para la clase de complejidad PPAD. [9] extiende este resultado de dificultad al caso en el que el grafo subyacente tiene un ancho de camino acotado. Un juego gráfico puede no tener un equilibrio de Nash único, de hecho, puede tener exponencialmente muchos. Además, algunos equilibrios de Nash son más deseables que otros. En lugar de tener un algoritmo que simplemente encuentre algún equilibrio de Nash, nos gustaría tener algoritmos para encontrar equilibrios de Nash con diversas propiedades socialmente deseables, como maximizar el pago total o distribuir las ganancias de manera justa. Una propiedad útil de la estructura de datos de [13] es que representa simultáneamente el conjunto de todos los equilibrios de Nash del juego subyacente. Si esta representación tiene tamaño polinómico (como es el caso de los caminos, como se muestra en [9]), se puede esperar extraer de ella un equilibrio de Nash con las propiedades deseadas. De hecho, en [13] los autores mencionan que esto es posible si uno está interesado en encontrar un equilibrio de Nash (aproximado). El objetivo de este artículo es extender esto a equilibrios de Nash exactos. 1.1 Nuestros Resultados En este artículo, estudiamos juegos gráficos de n jugadores y 2 acciones en árboles de grado acotado para los cuales la estructura de datos de [13] tiene tamaño polinómico en n. Nos enfocamos en el problema de encontrar equilibrios de Nash exactos con ciertas propiedades socialmente deseables. En particular, mostramos cómo encontrar un equilibrio de Nash que maximiza (casi) el <br>bienestar social</br>, es decir, la suma de las ganancias de los jugadores, y mostramos cómo encontrar un equilibrio de Nash que satisface (casi) los límites de ganancias prescritos para todos los jugadores. Los juegos gráficos en árboles de grado acotado tienen una estructura algebraica simple. Una característica atractiva, que se desprende de [13], es que cada juego de este tipo tiene un equilibrio de Nash en el cual la estrategia de cada jugador es un número racional. La sección 3 estudia la estructura algebraica de aquellos equilibrios de Nash que maximizan el <br>bienestar social</br>. Demostramos (Teoremas 1 y 2) que, sorprendentemente, el conjunto de equilibrios de Nash que maximizan el <br>bienestar social</br> es más complejo. De hecho, para cualquier número algebraico α ∈ [0, 1] con grado a lo sumo n, exhibimos un juego gráfico en un camino de longitud O(n) tal que, en el equilibrio de Nash único que maximiza el <br>bienestar social</br> de este juego, uno de los jugadores juega la estrategia mixta α. Este resultado muestra que puede ser difícil representar un equilibrio de Nash óptimo. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "integer-payoff graphical game g": {
            "translated_key": "pago entero",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Computing Good Nash Equilibria in Graphical Games ∗ Edith Elkind Hebrew University of Jerusalem, Israel, and University of Southampton, Southampton, SO17 1BJ, U.K. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K. ABSTRACT This paper addresses the problem of fair equilibrium selection in graphical games.",
                "Our approach is based on the data structure called the best response policy, which was proposed by Kearns et al. [13] as a way to represent all Nash equilibria of a graphical game.",
                "In [9], it was shown that the best response policy has polynomial size as long as the underlying graph is a path.",
                "In this paper, we show that if the underlying graph is a bounded-degree tree and the best response policy has polynomial size then there is an efficient algorithm which constructs a Nash equilibrium that guarantees certain payoffs to all participants.",
                "Another attractive solution concept is a Nash equilibrium that maximizes the social welfare.",
                "We show that, while exactly computing the latter is infeasible (we prove that solving this problem may involve algebraic numbers of an arbitrarily high degree), there exists an FPTAS for finding such an equilibrium as long as the best response policy has polynomial size.",
                "These two algorithms can be combined to produce Nash equilibria that satisfy various fairness criteria.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a large community of agents, an agents behavior is not likely to have a direct effect on most other agents: rather, it is just the agents who are close enough to him that will be affected.",
                "However, as these agents respond by adapting their behavior, more agents will feel the consequences and eventually the choices made by a single agent will propagate throughout the entire community.",
                "This is the intuition behind graphical games, which were introduced by Kearns, Littman and Singh in [13] as a compact representation scheme for games with many players.",
                "In an n-player graphical game, each player is associated with a vertex of an underlying graph G, and the payoffs of each player depend on his action as well as on the actions of his neighbors in the graph.",
                "If the maximum degree of G is Δ, and each player has two actions available to him, then the game can be represented using n2Δ+1 numbers.",
                "In contrast, we need n2n numbers to represent a general n-player 2-action game, which is only practical for small values of n. For graphical games with constant Δ, the size of the game is linear in n. One of the most natural problems for a graphical game is that of finding a Nash equilibrium, the existence of which follows from Nashs celebrated theorem (as graphical games are just a special case of n-player games).",
                "The first attempt to tackle this problem was made in [13], where the authors consider graphical games with two actions per player in which the underlying graph is a boundeddegree tree.",
                "They propose a generic algorithm for finding Nash equilibria that can be specialized in two ways: an exponential-time algorithm for finding an (exact) Nash equilibrium, and a fully polynomial time approximation scheme (FPTAS) for finding an approximation to a Nash equilibrium.",
                "For any > 0 this algorithm outputs an -Nash equilibrium, which is a strategy profile in which no player can improve his payoff by more than by unilaterally changing his strategy.",
                "While -Nash equilibria are often easier to compute than exact Nash equilibria, this solution concept has several drawbacks.",
                "First, the players may be sensitive to a small loss in payoffs, so the strategy profile that is an -Nash equilibrium will not be stable.",
                "This will be the case even if there is only a small subset of players who are extremely price-sensitive, and for a large population of players it may be difficult to choose a value of that will satisfy everyone.",
                "Second, the strategy profiles that are close to being Nash equilibria may be much better with respect to the properties under consideration than exact Nash equilibria.",
                "Therefore, the (approximation to the) value of the best solution that corresponds to an -Nash equilibrium may not be indicative of what can be achieved under an exact Nash equilibrium.",
                "This is especially important if the purpose of the approximate solution is to provide a good benchmark for a system of selfish agents, as the benchmark implied by an -Nash equilibrium may be unrealistic.",
                "For these reasons, in this paper we focus on the problem of computing exact Nash equilibria.",
                "Building on ideas of [14], Elkind et al. [9] showed how to find an (exact) Nash equilibrium in polynomial time when the underlying 162 graph has degree 2 (that is, when the graph is a collection of paths and cycles).",
                "By contrast, finding a Nash equilibrium in a general degree-bounded graph appears to be computationally intractable: it has been shown (see [5, 12, 7]) to be complete for the complexity class PPAD. [9] extends this hardness result to the case in which the underlying graph has bounded pathwidth.",
                "A graphical game may not have a unique Nash equilibrium, indeed it may have exponentially many.",
                "Moreover, some Nash equilibria are more desirable than others.",
                "Rather than having an algorithm which merely finds some Nash equilibrium, we would like to have algorithms for finding Nash equilibria with various sociallydesirable properties, such as maximizing overall payoff or distributing profit fairly.",
                "A useful property of the data structure of [13] is that it simultaneously represents the set of all Nash equilibria of the underlying game.",
                "If this representation has polynomial size (as is the case for paths, as shown in [9]), one may hope to extract from it a Nash equilibrium with the desired properties.",
                "In fact, in [13] the authors mention that this is indeed possible if one is interested in finding an (approximate) -Nash equilibrium.",
                "The goal of this paper is to extend this to exact Nash equilibria. 1.1 Our Results In this paper, we study n-player 2-action graphical games on bounded-degree trees for which the data structure of [13] has size poly(n).",
                "We focus on the problem of finding exact Nash equilibria with certain socially-desirable properties.",
                "In particular, we show how to find a Nash equilibrium that (nearly) maximizes the social welfare, i.e., the sum of the players payoffs, and we show how to find a Nash equilibrium that (nearly) satisfies prescribed payoff bounds for all players.",
                "Graphical games on bounded-degree trees have a simple algebraic structure.",
                "One attractive feature, which follows from [13], is that every such game has a Nash equilibrium in which the strategy of every player is a rational number.",
                "Section 3 studies the algebraic structure of those Nash equilibria that maximize social welfare.",
                "We show (Theorems 1 and 2) that, surprisingly, the set of Nash equilibria that maximize social welfare is more complex.",
                "In fact, for any algebraic number α ∈ [0, 1] with degree at most n, we exhibit a graphical game on a path of length O(n) such that, in the unique social welfare-maximizing Nash equilibrium of this game, one of the players plays the mixed strategy α.1 This result shows that it may be difficult to represent an optimal Nash equilibrium.",
                "It seems to be a novel feature of the setting we consider here, that an optimal Nash equilibrium is hard to represent, in a situation where it is easy to find and represent a Nash equilibrium.",
                "As the social welfare-maximizing Nash equilibrium may be hard to represent efficiently, we have to settle for an approximation.",
                "However, the crucial difference between our approach and that of previous papers [13, 16, 19] is that we require our algorithm to output an exact Nash equilibrium, though not necessarily the optimal one with respect to our criteria.",
                "In Section 4, we describe an algorithm that satisfies this requirement.",
                "Namely, we propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within of optimal.",
                "It runs in polynomial time (Theorem 3,4) for any graphical game on a bounded-degree tree for which the data structure proposed by [13] (the so-called best response policy, defined below) is of size poly(n) (note that, as shown in [9], this is always the case when the underlying graph is a path).",
                "More pre1 A related result in a different context was obtained by Datta [8], who shows that n-player 2-action games are universal in the sense that any real algebraic variety can be represented as the set of totally mixed Nash equilibria of such games. cisely, the running time of our algorithm is polynomial in n, Pmax, and 1/ , where Pmax is the maximum absolute value of an entry of a payoff matrix, i.e., it is a pseudopolynomial algorithm, though it is fully polynomial with respect to .",
                "We show (Section 4.1) that under some restrictions on the payoff matrices, the algorithm can be transformed into a (truly) polynomial-time algorithm that outputs a Nash equilibrium whose total payoff is within a 1 − factor from the optimal.",
                "In Section 5, we consider the problem of finding a Nash equilibrium in which the expected payoff of each player Vi exceeds a prescribed threshold Ti.",
                "Using the idea from Section 4 we give (Theorem 5) a fully polynomial time approximation scheme for this problem.",
                "The running time of the algorithm is bounded by a polynomial in n, Pmax, and .",
                "If the instance has a Nash equilibrium satisfying the prescribed thresholds then the algorithm constructs a Nash equilibrium in which the expected payoff of each player Vi is at least Ti − .",
                "In Section 6, we introduce other natural criteria for selecting a good Nash equilibrium and we show that the algorithms described in the two previous sections can be used as building blocks in finding Nash equilibria that satisfy these criteria.",
                "In particular, in Section 6.1 we show how to find a Nash equilibrium that approximates the maximum social welfare, while guaranteeing that each individual payoff is close to a prescribed threshold.",
                "In Section 6.2 we show how to find a Nash equilibrium that (nearly) maximizes the minimum individual payoff.",
                "Finally, in Section 6.3 we show how to find a Nash equilibrium in which the individual payoffs of the players are close to each other. 1.2 Related Work Our approximation scheme (Theorem 3 and Theorem 4) shows a contrast between the games that we study and two-player n-action games, for which the corresponding problems are usually intractable.",
                "For two-player n-action games, the problem of finding Nash equilibria with special properties is typically NP-hard.",
                "In particular, this is the case for Nash equilibria that maximize the social welfare [11, 6].",
                "Moreover, it is likely to be intractable even to approximate such equilibria.",
                "In particular, Chen, Deng and Teng [4] show that there exists some , inverse polynomial in n, for which computing an -Nash equilibrium in 2-player games with n actions per player is PPAD-complete.",
                "Lipton and Markakis [15] study the algebraic properties of Nash equilibria, and point out that standard quantifier elimination algorithms can be used to solve them.",
                "Note that these algorithms are not polynomial-time in general.",
                "The games we study in this paper have polynomial-time computable Nash equilibria in which all mixed strategies are rational numbers, but an optimal Nash equilibrium may necessarily include mixed strategies with high algebraic degree.",
                "A correlated equilibrium (CE) (introduced by Aumann [2]) is a distribution over vectors of players actions with the property that if any player is told his own action (the value of his own component) from a vector generated by that distribution, then he cannot increase his expected payoff by changing his action.",
                "Any Nash equilibrium is a CE but the converse does not hold in general.",
                "In contrast with Nash equilibria, correlated equilibria can be found for low-degree graphical games (as well as other classes of conciselyrepresented multiplayer games) in polynomial time [17].",
                "But, for graphical games it is NP-hard to find a correlated equilibrium that maximizes total payoff [18].",
                "However, the NP-hardness results apply to more general games than the one we consider here, in particular the graphs are not trees.",
                "From [2] it is also known that there exist 2-player, 2-action games for which the expected total payoff 163 of the best correlated equilibrium is higher than the best Nash equilibrium, and we discuss this issue further in Section 7. 2.",
                "PRELIMINARIES AND NOTATION We consider graphical games in which the underlying graph G is an n-vertex tree, in which each vertex has at most Δ children.",
                "Each vertex has two actions, which are denoted by 0 and 1.",
                "A mixed strategy of a player V is represented as a single number v ∈ [0, 1], which denotes the probability that V selects action 1.",
                "For the purposes of the algorithm, the tree is rooted arbitrarily.",
                "For convenience, we assume without loss of generality that the root has a single child, and that its payoff is independent of the action chosen by the child.",
                "This can be achieved by first choosing an arbitrary root of the tree, and then adding a dummy parent of this root, giving the new parent a constant payoff function, e.g., 0.",
                "Given an edge (V, W ) of the tree G, and a mixed strategy w for W , let G(V,W ),W =w be the instance obtained from G by (1) deleting all nodes Z which are separated from V by W (i.e., all nodes Z such that the path from Z to V passes through W ), and (2) restricting the instance so that W is required to play mixed strategy w. Definition 1.",
                "Suppose that (V, W ) is an edge of the tree, that v is a mixed strategy for V and that w is a mixed strategy for W .",
                "We say that v is a potential best response to w (denoted by v ∈ pbrV (w)) if there is an equilibrium in the instance G(V,W ),W =w in which V has mixed strategy v. We define the best response policy for V , given W , as B(W, V ) = {(w, v) | v ∈ pbrV (w), w ∈ [0, 1]}.",
                "The upstream pass of the generic algorithm of [13] considers every node V (other than the root) and computes the best response policy for V given its parent.",
                "With the above assumptions about the root, the downstream pass is straightforward.",
                "The root selects a mixed strategy w for the root W and a mixed strategy v ∈ B(W, V ) for each child V of W .",
                "It instructs each child V to play v. The remainder of the downward pass is recursive.",
                "When a node V is instructed by its parent to adopt mixed strategy v, it does the following for each child U - It finds a pair (v, u) ∈ B(V, U) (with the same v value that it was given by its parent) and instructs U to play u.",
                "The best response policy for a vertex U given its parent V can be represented as a union of rectangles, where a rectangle is defined by a pair of closed intervals (IV , IU ) and consists of all points in IV × IU ; it may be the case that one or both of the intervals IV and IU consists of a single point.",
                "In order to perform computations on B(V, U), and to bound the number of rectangles, [9] used the notion of an event point, which is defined as follows.",
                "For any set A ⊆ [0, 1]2 that is represented as a union of a finite number of rectangles, we say that a point u ∈ [0, 1] on the U-axis is a Uevent point of A if u = 0 or u = 1 or the representation of A contains a rectangle of the form IV × IU and u is an endpoint of IU ; V -event points are defined similarly.",
                "For many games considered in this paper, the underlying graph is an n-vertex path, i.e., a graph G = (V, E) with V = {V1, . . . , Vn} and E = {(V1, V2), . . . , (Vn−1, Vn)}.",
                "In [9], it was shown that for such games, the best response policy has only polynomially-many rectangles.",
                "The proof that the number of rectangles in B(Vj+1, Vj) is polynomial proceeds by first showing that the number of event points in B(Vj+1, Vj ) cannot exceed the number of event points in B(Vj, Vj−1) by more than 2, and using this fact to bound the number of rectangles in B(Vj+1, Vj ).",
                "Let P0 (V ) and P1 (V ) be the expected payoffs to V when it plays 0 and 1, respectively.",
                "Both P0 (V ) and P1 (V ) are multilinear functions of the strategies of V s neighbors.",
                "In what follows, we will frequently use the following simple observation.",
                "CLAIM 1.",
                "For a vertex V with a single child U and parent W , given any A, B, C, D ∈ Q, A , B , C , D ∈ Q, one can select the payoffs to V so that P0 (V ) = Auw + Bu + Cw + D, P1 (V ) = A uw + B u + C w + D .",
                "Moreover, if all A, B, C, D, A , B , C , D are integer, the payoffs to V are integer as well.",
                "PROOF.",
                "We will give the proof for P0 (V ); the proof for P1 (V ) is similar.",
                "For i, j = 0, 1, let Pij be the payoff to V when U plays i, V plays 0 and W plays j.",
                "We have P0 (V ) = P00(1 − u)(1 − w) + P10u(1 − w) + P01(1 − u)w + P11uw.",
                "We have to select the values of Pij so that P00 − P10 − P01 + P11 = A, −P00 + P10 = B, −P00 + P01 = C, P00 = D. It is easy to see that the unique solution is given by P00 = D, P01 = C + D, P10 = B + D, P11 = A + B + C + D. The input to all algorithms considered in this paper includes the payoff matrices for each player.",
                "We assume that all elements of these matrices are integer.",
                "Let Pmax be the greatest absolute value of any element of any payoff matrix.",
                "Then the input consists of at most n2Δ+1 numbers, each of which can be represented using log Pmax bits. 3.",
                "NASH EQUILIBRIA THAT MAXIMIZE THE SOCIAL WELFARE: SOLUTIONS IN R \\ Q From the point of view of social welfare, the best Nash equilibrium is the one that maximizes the sum of the players expected payoffs.",
                "Unfortunately, it turns out that computing such a strategy profile exactly is not possible: in this section, we show that even if all players payoffs are integers, the strategy profile that maximizes the total payoff may have irrational coordinates; moreover, it may involve algebraic numbers of an arbitrary degree. 3.1 Warm-up: quadratic irrationalities We start by providing an example of a graphical game on a path of length 3 with integer payoffs such that in the Nash equilibrium that maximizes the total payoff, one of the players has a strategy in R \\ Q.",
                "In the next subsection, we will extend this example to algebraic numbers of arbitrary degree n; to do so, we have to consider paths of length O(n).",
                "THEOREM 1.",
                "There exists an <br>integer-payoff graphical game g</br> on a 3-vertex path UV W such that, in any Nash equilibrium of G that maximizes social welfare, the strategy, u, of the player U and the total payoff, p, satisfy u, p ∈ R \\ Q.",
                "PROOF.",
                "The payoffs to the players in G are specified as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = −uw + 3w and P1 (V ) = P0 (V ) + w(u + 2) − (u + 1), where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = u+1 u+2 .",
                "Observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "The payoff to W is 0 if it selects the same action as V and 1 otherwise.",
                "CLAIM 2.",
                "All Nash equilibria of the game G are of the form (u, 1/2, f(u)).",
                "That is, in any Nash equilibrium, V plays v = 1/2 and W plays w = f(u).",
                "Moreover, for any value of u, the vector of strategies (u, 1/2, f(u)) constitutes a Nash equilibrium.",
                "PROOF.",
                "It is easy to check that for any u ∈ [0, 1], the vector (u, 1/2, f(u)) is a Nash equilibrium.",
                "Indeed, U is content to play 164 any mixed strategy u no matter what V and W do.",
                "Furthermore, V is indifferent between 0 and 1 as long as w = f(u), so it can play 1/2.",
                "Finally, if V plays 0 and 1 with equal probability, W is indifferent between 0 and 1, so it can play f(u).",
                "Conversely, suppose that v > 1/2.",
                "Then W strictly prefers to play 0, i.e., w = 0.",
                "Then for V we have P1 (V ) = P0 (V ) − (u + 1), i.e., P1 (V ) < P0 (V ), which implies v = 0, a contradiction.",
                "Similarly, if v < 1/2, player W prefers to play 1, so we have w = 1.",
                "Hence, P1 (V ) = P0 (V ) + (u + 2) − (u + 1), i.e., P1 (V ) > P0 (V ), which implies v = 1, a contradiction.",
                "Finally, if v = 1/2, but w = f(u), player V is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "This completes the proof of Claim 2.",
                "By Claim 2, the total payoff in any Nash equilibrium of this game is a function of u.",
                "More specifically, the payoff to U is 0, the payoff to V is −uf(u) + 3f(u), and the payoff to W is 1/2.",
                "Therefore, the Nash equilibrium with the maximum total payoff corresponds to the value of u that maximizes g(u) = −u (u + 1) u + 2 + 3 u + 1 u + 2 = − (u − 3)(u + 1) u + 2 .",
                "To find extrema of g(u), we compute h(u) = − d du g(u).",
                "We have h(u) = (2u − 2)(u + 2) − (u − 3)(u + 1) (u + 2)2 = u2 + 4u − 1 (u + 2)2 .",
                "Hence, h(u) = 0 if and only if u ∈ {−2 + √ 5, −2 − √ 5}.",
                "Note that −2 + √ 5 ∈ [0, 1].",
                "The function g(u) changes sign at −2, −1, and 3.",
                "We have g(u) < 0 for g > 3, g(u) > 0 for u < −2, so the extremum of g(u) that lies between 1 and 3, i.e., u = −2 + √ 5, is a local maximum.",
                "We conclude that the social welfare-maximizing Nash equilibrium for this game is given by the vector of strategies (−2+√ 5, 1/2, (5 − √ 5)/5).",
                "The respective total payoff is 0 − ( √ 5 − 5)( √ 5 − 1) √ 5 + 1 2 = 13/2 − 2 √ 5.",
                "This concludes the proof of Theorem 1. 3.2 Strategies of arbitrary degree We have shown that in the social welfare-maximizing Nash equilibrium, some players strategies can be quadratic irrationalities, and so can the total payoff.",
                "In this subsection, we will extend this result to show that we can construct an integer-payoff graphical game on a path whose social welfare-maximizing Nash equilibrium involves arbitrary algebraic numbers in [0, 1].",
                "THEOREM 2.",
                "For any degree-n algebraic number α ∈ [0, 1], there exists an integer payoff graphical game on a path of length O(n) such that, in all social welfare-maximizing Nash equilibria of this game, one of the players plays α.",
                "PROOF.",
                "Our proof consists of two steps.",
                "First, we construct a rational expression R(x) and a segment [x , x ] such that x , x ∈ Q and α is the only maximum of R(x) on [x , x ].",
                "Second, we construct a graphical game whose Nash equilibria can be parameterized by u ∈ [x , x ], so that at the equilibrium that corresponds to u the total payoff is R(u) and, moreover, some players strategy is u.",
                "It follows that to achieve the payoff-maximizing Nash equilibrium, this player has to play α.",
                "The details follow.",
                "LEMMA 1.",
                "Given an algebraic number α ∈ [0, 1], deg(α) = n, there exist K2, . . . , K2n+2 ∈ Q and x , x ∈ (0, 1) ∩ Q such that α is the only maximum of R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 on [x , x ].",
                "PROOF.",
                "Let P(x) be the minimal polynomial of α, i.e., a polynomial of degree n with rational coefficients whose leading coefficient is 1 such that P(α) = 0.",
                "Let A = {α1, . . . , αn} be the set of all roots of P(x).",
                "Consider the polynomial Q1(x) = −P2 (x).",
                "It has the same roots as P(x), and moreover, for any x ∈ A we have Q1(x) < 0.",
                "Hence, A is the set of all maxima of Q1(x).",
                "Now, set R(x) = Q1(x) (x+2)...(x+2n+1)(x+2n+2) .",
                "Observe that R(x) ≤ 0 for all x ∈ [0, 1] and R(x) = 0 if and only if Q1(x) = 0.",
                "Hence, the set A is also the set of all maxima of R(x) on [0, 1].",
                "Let d = min{|αi − α| | αi ∈ A, αi = α}, and set α = max{α − d/2, 0}, α = min{α + d/2, 1}.",
                "Clearly, α is the only zero (and hence, the only maximum) of R(x) on [α , α ].",
                "Let x and x be some rational numbers in (α , α) and (α, α ), respectively; note that by excluding the endpoints of the intervals we ensure that x , x = 0, 1.",
                "As [x , x ] ⊂ [α , α ], we have that α is the only maximum of R(x) on [x , x ].",
                "As R(x) is a proper rational expression and all roots of its denominator are simple, by partial fraction decomposition theorem, R(x) can be represented as R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 , where K2, . . . , K2n+2 are rational numbers.",
                "Consider a graphical game on the path U−1V−1U0V0U1V1 . . .",
                "Uk−1Vk−1Uk, where k = 2n + 2.",
                "Intuitively, we want each triple (Ui−1, Vi−1, Ui) to behave similarly to the players U, V , and W from the game described in the previous subsection.",
                "More precisely, we define the payoffs to the players in the following way. • The payoff to U−1 is 0 no matter what everyone else does. • The expected payoff to V−1 is 0 if it plays 0 and u0 − (x − x )u−1 −x if it plays 1, where u0 and u−1 are the strategies of U0 and U−1, respectively. • The expected payoff to V0 is 0 if it plays 0 and u1(u0 + 1)− u0 if it plays 1, where u0 and u1 are the strategies of U0 and U1, respectively. • For each i = 1, . . . , k − 1, the expected payoff to Vi when it plays 0 is P0 (Vi) = Aiuiui+1 − Aiui+1, and the expected payoff to Vi when it plays 1 is P1 (Vi) = P0 (Vi) + ui+1(2 − ui) − 1, where Ai = −Ki+1 and ui+1 and ui are the strategies of Ui+1 and Ui, respectively. • For each i = 0, . . . , k, the payoff to Ui does not depend on Vi and is 1 if Ui and Vi−1 select different actions and 0 otherwise.",
                "We will now characterize the Nash equilibria of this game using a sequence of claims.",
                "CLAIM 3.",
                "In all Nash equilibria of this game V−1 plays 1/2, and the strategies of u−1 and u0 satisfy u0 = (x − x )u−1 + x .",
                "Consequently, in all Nash equilibria we have u0 ∈ [x , x ]. 165 PROOF.",
                "The proof is similar to that of Claim 2.",
                "Let f(u−1) = (x − x )u−1 + x .",
                "Clearly, the player V−1 is indifferent between playing 0 and 1 if and only if u0 = f(u−1).",
                "Suppose that v−1 < 1/2.",
                "Then U0 strictly prefers to play 1, i.e., u0 = 1, so we have P1 (V−1) = P0 (V−1) + 1 − (x − x )u−1 − x .",
                "As 1 − x ≤ 1 − (x − x )u−1 − x ≤ 1 − x for u−1 ∈ [0, 1] and x < 1, we have P1 (V−1) > P0 (V−1), so V−1 prefers to play 1, a contradiction.",
                "Similarly, if v−1 > 1/2, the player U0 strictly prefers to play 0, i.e., u0 = 0, so we have P1 (V−1) = P0 (V−1) − (x − x )u−1 − x .",
                "As x < x , x > 0, we have P1 (V−1) < P0 (V−1), so V−1 prefers to play 0, a contradiction.",
                "Finally, if V−1 plays 1/2, but u0 = f(u−1), player V−1 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Also, note that f(0) = x , f(1) = x , and, moreover, f(u−1) ∈ [x , x ] if and only if u−1 ∈ [0, 1].",
                "Hence, in all Nash equilibria of this game we have u0 ∈ [x , x ].",
                "CLAIM 4.",
                "In all Nash equilibria of this game for each i = 0, . . . , k − 1, we have vi = 1/2, and the strategies of the players Ui and Ui+1 satisfy ui+1 = fi(ui), where f0(u) = u/(u + 1) and fi(u) = 1/(2 − u) for i > 0.",
                "PROOF.",
                "The proof of this claim is also similar to that of Claim 2.",
                "We use induction on i to prove that the statement of the claim is true and, additionally, ui = 1 for i > 0.",
                "For the base case i = 0, note that u0 = 0 by the previous claim (recall that x , x are selected so that x , x = 0, 1) and consider the triple (U0, V0, U1).",
                "Let v0 be the strategy of V0.",
                "First, suppose that v0 > 1/2.",
                "Then U1 strictly prefers to play 0, i.e., u1 = 0.",
                "Then for V0 we have P1 (V0) = P0 (V0) − u0.",
                "As u0 = 0, we have P1 (V0) < P0 (V0), which implies v1 = 0, a contradiction.",
                "Similarly, if v0 < 1/2, player U1 prefers to play 1, so we have u1 = 1.",
                "Hence, P1 (V0) = P0 (V0) + 1.",
                "It follows that P1 (V0) > P0 (V0), which implies v0 = 1, a contradiction.",
                "Finally, if v0 = 1/2, but u1 = u0/(u0 + 1), player V0 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as u1 = u0/(u0 + 1) and u0 ∈ [0, 1], we have u1 = 1.",
                "The argument for the inductive step is similar.",
                "Namely, suppose that the statement is proved for all i < i and consider the triple (Ui, Vi, Ui+1).",
                "Let vi be the strategy of Vi.",
                "First, suppose that vi > 1/2.",
                "Then Ui+1 strictly prefers to play 0, i.e., ui+1 = 0.",
                "Then for Vi we have P1 (Vi) = P0 (Vi)−1, i.e., P1 (Vi) < P0 (Vi), which implies vi = 0, a contradiction.",
                "Similarly, if vi < 1/2, player Ui+1 prefers to play 1, so we have ui+1 = 1.",
                "Hence, P1 (Vi) = P0 (Vi) + 1 − ui.",
                "By inductive hypothesis, we have ui < 1.",
                "Consequently, P1 (Vi) > P0 (Vi), which implies vi = 1, a contradiction.",
                "Finally, if vi = 1/2, but ui+1 = 1/(2 − ui), player Vi is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as ui+1 = 1/(2 − ui) and ui < 1, we have ui+1 < 1.",
                "CLAIM 5.",
                "Any strategy profile of the form (u−1, 1/2, u0, 1/2, u1, 1/2, . . . , uk−1, 1/2, uk), where u−1 ∈ [0, 1], u0 = (x − x )u−1 + x , u1 = u0/(u0 + 1), and ui+1 = 1/(2 − ui) for i ≥ 1 constitutes a Nash equilibrium.",
                "PROOF.",
                "First, the player U−1s payoffs do not depend on other players actions, so he is free to play any strategy in [0, 1].",
                "As long as u0 = (x −x )u−1 +x , player V−1 is indifferent between 0 and 1, so he is content to play 1/2; a similar argument applies to players V0, . . . , Vk−1.",
                "Finally, for each i = 0, . . . , k, the payoffs of player Ui only depend on the strategy of player Vi−1.",
                "In particular, as long as vi−1 = 1/2, player Ui is indifferent between playing 0 and 1, so he can play any mixed strategy ui ∈ [0, 1].",
                "To complete the proof, note that (x − x )u−1 + x ∈ [0, 1] for all u−1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] for all u0 ∈ [0, 1], and 1/(2 − ui) ∈ [0, 1] for all ui ∈ [0, 1], so we have ui ∈ [0, 1] for all i = 0, . . . , k. Now, let us compute the total payoff under a strategy profile of the form given in Claim 5.",
                "The payoff to U−1 is 0, and the expected payoff to each of the Ui, i = 0, . . . , k, is 1/2.",
                "The expected payoffs to V−1 and V0 are 0.",
                "Finally, for any i = 1, . . . , k − 1, the expected payoff to Vi is Ti = Aiuiui+1 − Aiui+1.",
                "It follows that to find a Nash equilibrium with the highest total payoff, we have to maximize Pk−1 i=1 Ti subject to conditions u−1 ∈ [0, 1], u0 = (x −x )u−1+x , u1 = u0/(u0+1), and ui+1 = 1/(2−ui) for i = 1, . . . , k − 1.",
                "We would like to express Pk−1 i=1 Ti as a function of u0.",
                "To simplify notation, set u = u0.",
                "LEMMA 2.",
                "For i = 1, . . . , k, we have ui = u+i−1 u+i .",
                "PROOF.",
                "The proof is by induction on i.",
                "For i = 1, we have u1 = u/(u + 1).",
                "Now, for i ≥ 2 suppose that ui−1 = (u + i − 2)/(u + i − 1).",
                "We have ui = 1/(2 − ui−1) = (u + i − 1)/(2u + 2i − 2 − u − i + 2) = (u + i − 1)/(u + i).",
                "It follows that for i = 1, . . . , k − 1 we have Ti = Ai u + i − 1 u + i u + i u + i + 1 − Ai u + i u + i + 1 = −Ai 1 u + i + 1 = Ki+1 u + i + 1 .",
                "Observe that as u−1 varies from 0 to 1, u varies from x to x .",
                "Therefore, to maximize the total payoff, we have to choose u ∈ [x , x ] so as to maximize K2 u + 2 + · · · + Kk u + k = R(u).",
                "By construction, the only maximum of R(u) on [x , x ] is α.",
                "It follows that in the payoff-maximizing Nash equilibrium of our game U0 plays α.",
                "Finally, note that the payoffs in our game are rational rather than integer.",
                "However, it is easy to see that we can multiply all payoffs to a player by their greatest common denominator without affecting his strategy.",
                "In the resulting game, all payoffs are integer.",
                "This concludes the proof of Theorem 2. 4.",
                "APPROXIMATING THE SOCIALLY OPTIMAL NASH EQUILIBRIUM We have seen that the Nash equilibrium that maximizes the social welfare may involve strategies that are not in Q.",
                "Hence, in this section we focus on finding a Nash equilibrium that is almost optimal from the social welfare perspective.",
                "We propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within from optimal.",
                "The running time of this algorithm is polynomial in 1/ , n and |Pmax| (recall that Pmax is the maximum absolute value of an entry of a payoff matrix).",
                "While the negative result of the previous section is for graphical games on paths, our algorithm applies to a wider range of scenarios.",
                "Namely, it runs in polynomial time on bounded-degree trees 166 as long as the best response policy of each vertex, given its parent, can be represented as a union of a polynomial number of rectangles.",
                "Note that path graphs always satisfy this condition: in [9] we showed how to compute such a representation, given a graph with maximum degree 2.",
                "Consequently, for path graphs the running time of our algorithm is guaranteed to be polynomial. (Note that [9] exhibits a family of graphical games on bounded-degree trees for which the best response policies of some of the vertices, given their parents, have exponential size, when represented as unions of rectangles.)",
                "Due to space restrictions, in this version of the paper we present the algorithm for the case where the graph underlying the graphical game is a path.",
                "We then state our result for the general case; the proof can be found in the full version of this paper [10].",
                "Suppose that s is a strategy profile for a graphical game G. That is, s assigns a mixed strategy to each vertex of G. let EPV (s) be the expected payoff of player V under s and let EP(s) =P V EPV (s).",
                "Let M(G) = max{EP(s) | s is a Nash equilibrium for G}.",
                "THEOREM 3.",
                "Suppose that G is a graphical game on an nvertex path.",
                "Then for any > 0 there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G)− .",
                "The running time of the algorithm is O(n4 P3 max/ 3 ) PROOF.",
                "Let {V1, . . . , Vn} be the set of all players.",
                "We start by constructing the best response policies for all Vi, i = 1, . . . , n − 1.",
                "As shown in [9], this can be done in time O(n3 ).",
                "Let N > 5n be a parameter to be selected later, set δ = 1/N, and define X = {jδ | j = 0, . . . , N}.",
                "We say that vj is an event point for a player Vi if it is a Vi-event point for B(Vi, Vi−1) or B(Vi+1, Vi).",
                "For each player Vi, consider a finite set of strategies Xi given by Xi = X ∪ {vj |vj is an event point for Vi}.",
                "It has been shown in [9] that for any i = 2, . . . , n, the best response policy B(Vi, Vi−1) has at most 2n + 4 Vi-event points.",
                "As we require N > 5n, we have |Xi| ≤ 2N; assume without loss of generality that |Xi| = 2N.",
                "Order the elements of Xi in increasing order as x1 i = 0 < x2 i < · · · < x2N i .",
                "We will refer to the strategies in Xi as discrete strategies of player Vi; a strategy profile in which each player has a discrete strategy will be referred to as a discrete strategy profile.",
                "We will now show that even we restrict each player Vi to strategies from Xi, the players can still achieve a Nash equilibrium, and moreover, the best such Nash equilibrium (with respect to the social welfare) has total payoff at least M(G) − as long as N is large enough.",
                "Let s be a strategy profile that maximizes social welfare.",
                "That is, let s = (s1, . . . , sn) where si is the mixed strategy of player Vi and EP(s) = M(G).",
                "For i = 1, . . . , n, let ti = max{xj i | xj i ≤ si}.",
                "First, we will show that the strategy profile t = (t1, . . . , tn) is a Nash equilibrium for G. Fix any i, 1 < i ≤ n, and let R = [v1, v2]×[u1, u2] be the rectangle in B(Vi, Vi−1) that contains (si, si−1).",
                "As v1 is a Vi-event point of B(Vi, Vi−1), we have v1 ≤ ti, so the point (ti, si−1) is inside R. Similarly, the point u1 is a Vi−1-event point of B(Vi, Vi−1), so we have u1 ≤ ti−1, and therefore the point (ti, ti−1) is inside R. This means that for any i, 1 < i ≤ n, we have ti−1 ∈ pbrVi−1 (ti), which implies that t = (t1, . . . , tn) is a Nash equilibrium for G. Now, let us estimate the expected loss in social welfare caused by playing t instead of s. LEMMA 3.",
                "For any pair of strategy profiles t, s such that |ti − si| ≤ δ we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ for any i = 1, . . . , n. PROOF.",
                "Let Pi klm be the payoff of the player Vi, when he plays k, Vi−1 plays l, and Vi+1 plays m. Fix i = 1, . . . , n and for k, l, m ∈ {0, 1}, set tklm = tk i−1(1 − ti−1)1−k tl i(1 − ti)1−l tm i+1(1 − ti+1)1−m sklm = sk i−1(1 − si−1)1−k sl i(1 − si)1−l sm i+1(1 − si+1)1−m .",
                "We have |EPVi (s) − EPVi (t)| ≤ X k,l,m=0,1 |Pi klm(tklm − sklm )| ≤ 8Pmax max klm |tklm − sklm | We will now show that for any k, l, m ∈ {0, 1} we have |tklm − sklm | ≤ 3δ; clearly, this implies the lemma.",
                "Indeed, fix k, l, m ∈ {0, 1}.",
                "Set x = tk i−1(1 − ti−1)1−k , x = sk i−1(1 − si−1)1−k , y = tl i(1 − ti)1−l , y = sl i(1 − si)1−l , z = tm i+1(1 − ti+1)1−m , z = sm i+1(1 − si+1)1−m .",
                "Observe that if k = 0 then x − x = (1 − ti−1) − (1 − si−1), and if k = 1 then x − x = ti−1 − si−1, so |x − x | ≤ δ.",
                "A similar argument shows |y − y | ≤ δ, |z − z | ≤ δ.",
                "Also, we have x, x , y, y , z, z ∈ [0, 1].",
                "Hence, |tklm −sklm | = |xyz−x y z | = |xyz − x yz + x yz − x y z + x y z − x y z | ≤ |x − x |yz + |y − y |x z + |z − z |x y ≤ 3δ.",
                "Lemma 3 implies Pn i=1 |EPVi (s) − EPVi (t)| ≤ 24nPmaxδ, so by choosing δ < /(24nPmax), or, equivalently, setting N > 24nPmax/ , we can ensure that the total expected payoff for the strategy profile t is within from optimal.",
                "We will now show that we can find the best discrete Nash equilibrium (with respect to the social welfare) using dynamic programming.",
                "As t is a discrete strategy profile, this means that the strategy profile found by our algorithm will be at least as good as t. Define ml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj , j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1, and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The values ml,k i , i = 1, . . . , n; k, l = 1, . . . , N, can be computed inductively, as follows.",
                "We have ml,k 1 = 0 for k, l = 1, . . . , N. Now, suppose that we have already computed ml,k j for all j < i; k, l = 1, . . . , N. To compute mk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this is not the case, we have ml,k i = −∞.",
                "Otherwise, consider the set Y = Xi−2 ∩ pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "The proof of Theorem 1 in [9] implies that the set pbrVi−2 (xl i−1) is non-empty: the player Vi−2 has a potential best response to any strategy of Vi−1, in particular, xl i−1.",
                "By construction of the set Xi−2, this implies that Y is not empty.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "Then we have ml,k i = max{mj,l i−1 + pjlk | xj i−2 ∈ Y }.",
                "Finally, suppose that we have computed ml,k n for l, k = 1, . . . , N. We still need to take into account the payoff of player Vn.",
                "Hence, 167 we consider all pairs (xk n, xl n−1) that satisfy xl n−1 ∈ pbrVn−1 (xk n), and pick the one that maximizes the sum of mk,l n and the payoff of Vn when he plays xk n and Vn−1 plays xl n−1.",
                "This results in the maximum total payoff the players can achieve in a Nash equilibrium using discrete strategies; the actual strategy profile that produces this payoff can be reconstructed using standard dynamic programming techniques.",
                "It is easy to see that each ml,k i can be computed in time O(N), i.e., all of them can be computed in time O(nN3 ).",
                "Recall that we have to select N ≥ (24nPmax)/ to ensure that the strategy profile we output has total payoff that is within from optimal.",
                "We conclude that we can compute an -approximation to the best Nash equilibrium in time O(n4 P3 max/ 3 ).",
                "This completes the proof of Theorem 3.",
                "To state our result for the general case (i.e., when the underlying graph is a bounded-degree tree rather than a path), we need additional notation.",
                "If G has n players, let q(n) be an upper bound on the number of event points in the representation of any best response policy.",
                "That is, we assume that for any vertex U with parent V , B(V, U) has at most q(n) event points.",
                "We will be interested in the situation in which q(n) is polynomial in n. THEOREM 4.",
                "Let G be an n-player graphical game on a tree in which each node has at most Δ children.",
                "Suppose we are given a set of best-response policies for G in which each best-response policy B(V, U) is represented by a set of rectangles with at most q(n) event points.",
                "For any > 0, there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G) − .",
                "The running time of the algorithm is polynomial in n, Pmax and −1 provided that the tree has bounded degree (that is, Δ = O(1)) and q(n) is a polynomial in n. In particular, if N = max((Δ + 1)q(n) + 1, n2Δ+2 (Δ + 2)Pmax −1 ) and Δ > 1 then the running time is O(nΔ(2N)Δ .",
                "For the proof of this theorem, see [10]. 4.1 A polynomial-time algorithm for multiplicative approximation The running time of our algorithm is pseudopolynomial rather than polynomial, because it includes a factor which is polynomial in Pmax, the maximum (in absolute value) entry in any payoff matrix.",
                "If we are interested in multiplicative approximation rather than additive one, this can be improved to polynomial.",
                "First, note that we cannot expect a multiplicative approximation for all inputs.",
                "That is, we cannot hope to have an algorithm that computes a Nash equilibrium with total payoff at least (1 − )M(G).",
                "If we had such an algorithm, then for graphical games G with M(G) = 0, the algorithm would be required to output the optimal solution.",
                "To show that this is infeasible, observe that we can use the techniques of Section 3.2 to construct two integercoefficient graphical games on paths of length O(n) such that for some X ∈ R the maximal total payoff in the first game is X, the maximal total payoff in the second game is −X, and for both games, the strategy profiles that achieve the maximal total payoffs involve algebraic numbers of degree n. By combining the two games so that the first vertex of the second game becomes connected to the last vertex of the first game, but the payoffs of all players do not change, we obtain a graphical game in which the best Nash equilibrium has total payoff 0, yet the strategies that lead to this payoff have high algebraic complexity.",
                "However, we can achieve a multiplicative approximation when all entries of the payoff matrices are positive and the ratio between any two entries is polynomially bounded.",
                "Recall that we assume that all payoffs are integer, and let Pmin > 0 be the smallest entry of any payoff matrix.",
                "In this case, for any strategy profile the payoff to player i is at least Pmin, so the total payoff in the social-welfare maximizing Nash equilibrium s satisfies M(G) ≥ nPmin.",
                "Moreover, Lemma 3 implies that by choosing δ < /(24Pmax/Pmin), we can ensure that the Nash equilibrium t produced by our algorithm satisfies nX i=1 EPVi (s) − nX i=1 EPVi (t) ≤ 24Pmaxδn ≤ nPmin ≤ M(G), i.e., for this value of δ we have Pn i=1 EPVi (t) ≥ (1 − )M(G).",
                "Recall that the running time of our algorithm is O(nN3 ), where N has to be selected to satisfy N > 5n, N = 1/δ.",
                "It follows that if Pmin > 0, Pmax/Pmin = poly(n), we can choose N so that our algorithm provides a multiplicative approximation guarantee and runs in time polynomial in n and 1/ . 5.",
                "BOUNDED PAYOFF NASH EQUILIBRIA Another natural way to define what is a good Nash equilibrium is to require that each players expected payoff exceeds a certain threshold.",
                "These thresholds do not have to be the same for all players.",
                "In this case, in addition to the payoff matrices of the n players, we are given n numbers T1, . . . , Tn, and our goal is to find a Nash equilibrium in which the payoff of player i is at least Ti, or report that no such Nash equilibrium exists.",
                "It turns out that we can design an FPTAS for this problem using the same techniques as in the previous section.",
                "THEOREM 5.",
                "Given a graphical game G on an n-vertex path and n rational numbers T1, . . . , Tn, suppose that there exists a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. Then for any > 0 we can find in time O(max{nP3 max/ 3 , n4 / 3 }) a strategy profile s such that s is a Nash equilibrium for G and EPVi (s ) ≥ Ti − for i = 1, . . . , n. PROOF.",
                "The proof is similar to that of Theorem 3.",
                "First, we construct the best response policies for all players, choose N > 5n, and construct the sets Xi, i = 1, . . . , n, as described in the proof of Theorem 3.",
                "Consider a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. We construct a strategy profile ti = max{xj i | xj i ≤ si} and use the same argument as in the proof of Theorem 3 to show that t is a Nash equilibrium for G. By Lemma 3, we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ, so choosing δ < /(24Pmax), or, equivalently, N > max{5n, 24Pmax/ }, we can ensure EPVi (t) ≥ Ti − for i = 1, . . . , n. Now, we will use dynamic programming to find a discrete Nash equilibrium that satisfies EPVi (t) ≥ Ti − for i = 1, . . . , n. As t is a discrete strategy profile, our algorithm will succeed whenever there is a strategy profile s with EPVi (s) ≥ Ti− for i = 1, . . . , n. Let zl,k i = 1 if there is a discrete strategy profile such that for any j < i the strategy of the player Vj is a potential best response to the strategy of Vj+1, the expected payoff of Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "Otherwise, let zl,k i = 0.",
                "We can compute zl,k i , i = 1, . . . , n; k, l = 1, . . . , N inductively, as follows.",
                "We have zl,k 1 = 1 for k, l = 1, . . . , N. Now, suppose that we have already computed zl,k j for all j < i; k, l = 1, . . . , N. To compute zk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this 168 is not the case, clearly, zk,l i = 0.",
                "Otherwise, consider the set Y = Xi−2 ∩pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "It has been shown in the proof of Theorem 3 that Y = ∅.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "If there exists an xj i−2 ∈ Y such that zj,l i−1 = 1 and pjlk ≥ Ti−2 − , set zl,k i = 1.",
                "Otherwise, set zl,k i = 0.",
                "Having computed zl,k n , l, k = 1, . . . , N, we check if zl,k n = 1 for some pair (l, k). if such a pair of indices exists, we instruct Vn to play xk n and use dynamic programming techniques (or, equivalently, the downstream pass of the algorithm of [13]) to find a Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n (recall that Vn is a dummy player, i.e., we assume Tn = 0, EPn(s ) = 0 for any choice of s ).",
                "If zl,k n = 0 for all l, k = 1, . . . , N, there is no discrete Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n and hence no Nash equilibrium s (not necessarily discrete) such that EPVi (s) ≥ Ti for i = 1, . . . , n. The running time analysis is similar to that for Theorem 3; we conclude that the running time of our algorithm is O(nN3 ) = O(max{nP3 max/ 3 , n4 / 3 }).",
                "REMARK 1.",
                "Theorem 5 can be extended to trees of bounded degree in the same way as Theorem 4. 5.1 Exact Computation Another approach to finding Nash equilibria with bounded payoffs is based on inductively computing the subsets of the best response policies of all players so as to exclude the points that do not provide sufficient payoffs to some of the players.",
                "Formally, we say that a strategy v of the player V is a potential best response to a strategy w of its parent W with respect to a threshold vector T = (T1, . . . , Tn), (denoted by v ∈ pbrV (w, T)) if there is an equilibrium in the instance G(V,W ),W =w in which V plays mixed strategy v and the payoff to any player Vi downstream of V (including V ) is at least Ti.",
                "The best response policy for V with respect to a threshold vector T is defined as B(W, V, T) = {(w, v) | v ∈ pbrV (w, T), w ∈ [0, 1]}.",
                "It is easy to see that if any of the sets B(Vj, Vj−1, T), j = 1, . . . , n, is empty, it means that it is impossible to provide all players with expected payoffs prescribed by T. Otherwise, one can apply the downstream pass of the original algorithm of [13] to find a Nash equilibrium.",
                "As we assume that Vn is a dummy vertex whose payoff is identically 0, the Nash equilibrium with these payoffs exists as long as Tn ≤ 0 and B(Vn, Vn−1, T) is not empty.",
                "Using the techniques developed in [9], it is not hard to show that for any j = 1, . . . , n, the set B(Vj , Vj−1, T) consists of a finite number of rectangles, and one can compute B(Vj+1, Vj , T) given B(Vj , Vj−1, T).",
                "The advantage of this approach is that it allows us to represent all Nash equilibria that provide required payoffs to the players.",
                "However, it is not likely to be practical, since it turns out that the rectangles that appear in the representation of B(Vj , Vj−1, T) may have irrational coordinates.",
                "CLAIM 6.",
                "There exists a graphical game G on a 3-vertex path UV W and a vector T = (T1, T2, T3) such that B(V, W, T) cannot be represented as a union of a finite number of rectangles with rational coordinates.",
                "PROOF.",
                "We define the payoffs to the players in G as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = uw, P1 (V ) = P0 (V ) + w − .8u − .1, where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = .8u + .1; observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "It is not hard to see that we have B(W, V ) = [0, .1]×{0} ∪ [.1, .9]×[0, 1] ∪ [.9, 1]×{1}.",
                "The payoffs to W are not important for our construction; for example, set P0(W ) = P0(W ) = 0.",
                "Now, set T = (0, 1/8, 0), i.e., we are interested in Nash equilibria in which V s expected payoff is at least 1/8.",
                "Suppose w ∈ [0, 1].",
                "The player V can play a mixed strategy v when W is playing w as long as U plays u = f−1 (w) = 5w/4 − 1/8 (to ensure that V is indifferent between 0 and 1) and P0 (V ) = P1 (V ) = uw = w(5w/4 − 1/8) ≥ 1/8.",
                "The latter condition is satisfied if w ≤ (1 − √ 41)/20 < 0 or w ≥ (1 + √ 41)/20.",
                "Note that we have .1 < (1 + √ 41)/20 < .9.",
                "For any other value of w, any strategy of U either makes V prefer one of the pure strategies or does not provide it with a sufficient expected payoff.",
                "There are also some values of w for which V can play a pure strategy (0 or 1) as a potential best response to W and guarantee itself an expected payoff of at least 1/8; it can be shown that these values of w form a finite number of segments in [0, 1].",
                "We conclude that any representation of B(W, V, T) as a union of a finite number of rectangles must contain a rectangle of the form [(1 + √ 41)/20, w ]×[v , v ] for some w , v , v ∈ [0, 1].",
                "On the other hand, it can be shown that for any integer payoff matrices and threshold vectors and any j = 1, . . . , n − 1, the sets B(Vj+1, Vj, T) contain no rectangles of the form [u , u ]×{v} or {v}×[w , w ], where v ∈ R\\Q.",
                "This means that if B(Vn, Vn−1, T) is non-empty, i.e., there is a Nash equilibrium with payoffs prescribed by T, then the downstream pass of the algorithm of [13] can always pick a strategy profile that forms a Nash equilibrium, provides a payoff of at least Ti to the player Vi, and has no irrational coordinates.",
                "Hence, unlike in the case of the Nash equilibrium that maximizes the social welfare, working with irrational numbers is not necessary, and the fact that the algorithm discussed in this section has to do so can be seen as an argument against using this approach. 6.",
                "OTHER CRITERIA FOR SELECTING A NASH EQUILIBRIUM In this section, we consider several other criteria that can be useful in selecting a Nash equilibrium. 6.1 Combining welfare maximization with bounds on payoffs In many real life scenarios, we want to maximize the social welfare subject to certain restrictions on the payoffs to individual players.",
                "For example, we may want to ensure that no player gets a negative expected payoff, or that the expected payoff to player i is at least Pi max − ξ, where Pi max is the maximum entry of is payoff matrix and ξ is a fixed parameter.",
                "Formally, given a graphical game G and a vector T1, . . . , Tn, let S be the set of all Nash equilibria s of G that satisfy Ti ≤ EPVi (s) for i = 1, . . . , n, and let ˆs = argmaxs∈S EP(s).",
                "If the set S is non-empty, we can find a Nash equilibrium ˆs that is -close to satisfying the payoff bounds and is within from ˆs with respect to the total payoff by combining the algorithms of Section 4 and Section 5.",
                "Namely, for a given > 0, choose δ as in the proof of Theorem 3, and let Xi be the set of all discrete strategies of player Vi (for a 169 formal definition, see the proof of Theorem 3).",
                "Combining the proofs of Theorem 3 and Theorem 5, we can see that the strategy profile ˆt given by ˆti = max{xj i | xj i ≤ ˆsi} satisfies EPVi (ˆt) ≥ Ti − , |EP(ˆs) − EP(ˆt)| ≤ .",
                "Define ˆml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj, j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1 and the payoff to player Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The ˆml,k i can be computed by dynamic programming similarly to the ml,k i and zl,k i in the proofs of Theorems 3 and 5.",
                "Finally, as in the proof of Theorem 3, we use ml,k n to select the best discrete Nash equilibrium subject to the payoff constraints.",
                "Even more generally, we may want to maximize the total payoff to a subset of players (who are assumed to be able to redistribute the profits fairly among themselves) while guaranteeing certain expected payoffs to (a subset of) the other players.",
                "This problem can be handled similarly. 6.2 A minimax approach A more egalitarian measure of the quality of a Nash equilibrium is the minimal expected payoff to a player.",
                "The optimal solution with respect to this measure is a Nash equilibrium in which the minimal expected payoff to a player is maximal.",
                "To find an approximation to such a Nash equilibrium, we can combine the algorithm of Section 5 with binary search on the space of potential lower bounds.",
                "Note that the expected payoff to any player Vi given a strategy s always satisfies −Pmax ≤ EPVi (s) ≤ Pmax.",
                "For a fixed > 0, we start by setting T = −Pmax, T = Pmax, T∗ = (T + T )/2.",
                "We then run the algorithm of Section 5 with T1 = · · · = Tn = T∗ .",
                "If the algorithm succeeds in finding a Nash equilibrium s that satisfies EPVi (s ) ≥ T∗ − for all i = 1, . . . , n, we set T = T∗ , T∗ = (T + T )/2; otherwise, we set T = T∗ , T∗ = (T + T )/2 and loop.",
                "We repeat this process until |T − T | ≤ .",
                "It is not hard to check that for any p ∈ R, if there is a Nash equilibrium s such that mini=1,...,n EPVi (s) ≥ p, then our algorithm outputs a Nash equilibrium s that satisfies mini=1,...,n EPVi (s) ≥ p−2 .",
                "The running time of our algorithm is O(max{nP3 max log −1 / 3 , n4 log −1 / 3 }). 6.3 Equalizing the payoffs When the players payoff matrices are not very different, it is reasonable to demand that the expected payoffs to the players do not differ by much either.",
                "We will now show that Nash equilibria in this category can be approximated in polynomial time as well.",
                "Indeed, observe that the algorithm of Section 5 can be easily modified to deal with upper bounds on individual payoffs rather than lower bounds.",
                "Moreover, we can efficiently compute an approximation to a Nash equilibrium that satisfies both the upper bound and the lower bound for each player.",
                "More precisely, suppose that we are given a graphical game G, 2n rational numbers T1, . . . , Tn, T1, . . . , Tn and > 0.",
                "Then if there exists a strategy profile s such that s is a Nash equilibrium for G and Ti ≤ EPVi (s) ≤ Ti for i = 1, . . . , n, we can find a strategy profile s such that s is a Nash equilibrium for G and Ti − ≤ EPVi (s ) ≤ Ti + for i = 1, . . . , n. The modified algorithm also runs in time O(max{nP3 max/ 3 , [4]n4 / 3 }).",
                "This observation allows us to approximate Nash equilibria in which all players expected payoffs differ by at most ξ for any fixed ξ > 0.",
                "Given an > 0, we set T1 = · · · = Tn = −Pmax, T1 = · · · = Tn = −Pmax + ξ + , and run the modified version of the algorithm of Section 5.",
                "If it fails to find a solution, we increment all Ti, Ti by and loop.",
                "We continue until the algorithm finds a solution, or Ti ≥ Pmax.",
                "Suppose that there exists a Nash equilibrium s that satisfies |EPVi (s) − EPVj (s)| ≤ ξ for all i, j = 1, . . . , n. Set r = mini=1,...,n EPVi (s); we have r ≤ EPVi (s) ≤ r + ξ for all i = 1, . . . , n. There exists a k ≥ 0 such that −Pmax + (k − 1) ≤ r ≤ −Pmax + k .",
                "During the kth step of the algorithm, we set T1 = · · · = Tn = −Pmax +(k−1) , i.e., we have r− ≤ Ti ≤ r, r + ξ ≤ Ti ≤ r + ξ + .",
                "That is, the Nash equilibrium s satisfies Ti ≤ r ≤ EPVi (s) ≤ r + ξ ≤ Ti , which means that when Ti is set to −Pmax + (k − 1) , our algorithm is guaranteed to output a Nash equilibrium t that satisfies r − 2 ≤ Ti − ≤ EPVi (t) ≤ Ti + ≤ r +ξ +2 .",
                "We conclude that whenever such a Nash equilibrium s exists, our algorithm outputs a Nash equilibrium t that satisfies |EPVi (t) − EPVj (t)| ≤ ξ + 4 for all i, j = 1, . . . , n. The running time of this algorithm is O(max{nP3 max/ 4 , n4 / 4 }).",
                "Note also that we can find the smallest ξ for which such a Nash equilibrium exists by combining this algorithm with binary search over the space ξ = [0, 2Pmax].",
                "This identifies an approximation to the fairest Nash equilibrium, i.e., one in which the players expected payoffs differ by the smallest possible amount.",
                "Finally, note that all results in this section can be extended to bounded-degree trees. 7.",
                "CONCLUSIONS We have studied the problem of equilibrium selection in graphical games on bounded-degree trees.",
                "We considered several criteria for selecting a Nash equilibrium, such as maximizing the social welfare, ensuring a lower bound on the expected payoff of each player, etc.",
                "First, we focused on the algebraic complexity of a social welfare-maximizing Nash equilibrium, and proved strong negative results for that problem.",
                "Namely, we showed that even for graphical games on paths, any algebraic number α ∈ [0, 1] may be the only strategy available to some player in all social welfaremaximizing Nash equilibria.",
                "This is in sharp contrast with the fact that graphical games on trees always possess a Nash equilibrium in which all players strategies are rational numbers.",
                "We then provided approximation algorithms for selecting Nash equilibria with special properties.",
                "While the problem of finding approximate Nash equilibria for various classes of games has received a lot of attention in recent years, most of the existing work aims to find -Nash equilibria that satisfy (or are -close to satisfying) certain properties.",
                "Our approach is different in that we insist on outputting an exact Nash equilibrium, which is -close to satisfying a given requirement.",
                "As argued in the introduction, there are several reasons to prefer a solution that constitutes an exact Nash equilibrium.",
                "Our algorithms are fully polynomial time approximation schemes, i.e., their running time is polynomial in the inverse of the approximation parameter , though they may be pseudopolynomial with respect to the input size.",
                "Under mild restrictions on the inputs, they can be modified to be truly polynomial.",
                "This is the strongest positive result one can derive for a problem whose exact solutions may be hard to represent, as is the case for many of the problems considered here.",
                "While we prove our results for games on a path, they can be generalized to any tree for which the best response policies have compact representations as unions of rectangles.",
                "In the full version of the paper we describe our algorithms for the general case.",
                "Further work in this vein could include extensions to the kinds of guarantees sought for Nash equilibria, such as guaranteeing total payoffs for subsets of players, selecting equilibria in which some players are receiving significantly higher payoffs than their peers, etc.",
                "At the moment however, it is perhaps more important to inves170 tigate whether Nash equilibria of graphical games can be computed in a decentralized manner, in contrast to the algorithms we have introduced here.",
                "It is natural to ask if our results or those of [9] can be generalized to games with three or more actions.",
                "However, it seems that this will make the analysis significantly more difficult.",
                "In particular, note that one can view the bounded payoff games as a very limited special case of games with three actions per player.",
                "Namely, given a two-action game with payoff bounds, consider a game in which each player Vi has a third action that guarantees him a payoff of Ti no matter what everyone else does.",
                "Then checking if there is a Nash equilibrium in which none of the players assigns a nonzero probability to his third action is equivalent to checking if there exists a Nash equilibrium that satisfies the payoff bounds in the original game, and Section 5.1 shows that finding an exact solution to this problem requires new ideas.",
                "Alternatively it may be interesting to look for similar results in the context of correlated equilibria (CE), especially since the best CE may have higher value (total expected payoff) than the best NE.",
                "The ratio between these values is called the mediation value in [1].",
                "It is known from [1] that the mediation value of 2-player, 2-action games with non-negative payoffs is at most 4 3 , and they exhibit a 3-player game for which it is infinite.",
                "Furthermore, a 2-player, 3action example from [1] also has infinite mediation value. 8.",
                "REFERENCES [1] I. Ashlagi, D. Monderer and M. Tenneholtz, On the Value of Correlation, Proceedings of Dagstuhl seminar 05011 (2005) [2] R. Aumann, Subjectivity and Correlation in Randomized Strategies, Journal of Mathematical Economics 1 pp. 67-96 (1974) [3] B. Blum, C. R. Shelton, and D. Koller, A Continuation Method for Nash Equilibria in Structured Games, Proceedings of IJCAI03 [4] X. Chen, X. Deng and S. Teng, Computing Nash Equilibria: Approximation and Smoothed Complexity, Proceedings of FOCS06 [5] X. Chen, X. Deng, Settling the Complexity of 2-Player Nash-Equilibrium, Proceedings of FOCS06 [6] V. Conitzer and T. Sandholm, Complexity Results about Nash Equilibria, Proceedings of IJCAI03 [7] C. Daskalakis, P. W. Goldberg and C. H. Papadimitriou, The Complexity of Computing a Nash Equilibrium, Proceedings of STOC06 [8] R. S. Datta, Universality of Nash Equilibria, Mathematics of Operations Research 28:3, 2003 [9] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Nash Equilibria in Graphical games on Trees Revisited, Proceedings of ACM EC06 [10] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Computing Good Nash Equilibria in Graphical Games, http://arxiv.org/abs/cs.GT/0703133 [11] I. Gilboa and E. Zemel, Nash and Correlated Equilibria: Some Complexity Considerations, Games and Economic Behavior, 1 pp. 80-93 (1989) [12] P. W. Goldberg and C. H. Papadimitriou, Reducibility Among Equilibrium Problems, Proceedings of STOC06 [13] M. Kearns, M. Littman, and S. Singh, Graphical Models for Game Theory, Proceedings of UAI01 [14] M. Littman, M. Kearns, and S. Singh, An Efficient Exact Algorithm for Singly Connected Graphical Games, Proceedings of NIPS01 [15] R. Lipton and E. Markakis, Nash Equilibria via Polynomial Equations, Proceedings of LATIN04 [16] L. Ortiz and M. Kearns, Nash Propagation for Loopy Graphical Games, Proceedings of NIPS03 [17] C.H.",
                "Papadimitriou, Computing Correlated Equilibria in Multi-Player Games, Proceedings of STOC05 [18] C.H.",
                "Papadimitriou and T. Roughgarden, Computing Equilibria in Multi-Player Games, Proceedings of SODA05 [19] D. Vickrey and D. Koller, Multi-agent Algorithms for Solving Graphical Games, Proceedings of AAAI02 171"
            ],
            "original_annotated_samples": [
                "There exists an <br>integer-payoff graphical game g</br> on a 3-vertex path UV W such that, in any Nash equilibrium of G that maximizes social welfare, the strategy, u, of the player U and the total payoff, p, satisfy u, p ∈ R \\ Q."
            ],
            "translated_annotated_samples": [
                "Existe un juego gráfico G de <br>pago entero</br> en un camino de 3 vértices UVW tal que, en cualquier equilibrio de Nash de G que maximice el bienestar social, la estrategia u del jugador U y el pago total p cumplen u, p ∈ R \\ Q."
            ],
            "translated_text": "Calcular buenos equilibrios de Nash en juegos gráficos ∗ Edith Elkind Universidad Hebrea de Jerusalén, Israel, y Universidad de Southampton, Southampton, SO17 1BJ, Reino Unido. Leslie Ann Goldberg Universidad de Liverpool Liverpool L69 3BX, Reino Unido. Paul Goldberg Universidad de Liverpool Liverpool L69 3BX, Reino Unido. RESUMEN Este artículo aborda el problema de la selección justa de equilibrios en juegos gráficos. Nuestro enfoque se basa en la estructura de datos llamada política de mejor respuesta, propuesta por Kearns et al. [13] como una forma de representar todos los equilibrios de Nash de un juego gráfico. En [9], se demostró que la política de mejor respuesta tiene un tamaño polinómico siempre y cuando el grafo subyacente sea un camino. En este artículo, demostramos que si el grafo subyacente es un árbol de grado acotado y la política de mejor respuesta tiene un tamaño polinómico, entonces existe un algoritmo eficiente que construye un equilibrio de Nash que garantiza ciertos pagos a todos los participantes. Otro concepto de solución atractivo es un equilibrio de Nash que maximiza el bienestar social. Mostramos que, si bien calcular exactamente lo último es inviable (demostramos que resolver este problema puede implicar números algebraicos de un grado arbitrariamente alto), existe un FPTAS para encontrar dicho equilibrio siempre y cuando la política de mejor respuesta tenga un tamaño polinómico. Estos dos algoritmos pueden combinarse para producir equilibrios de Nash que satisfacen varios criterios de equidad. Categorías y Descriptores de Asignaturas F.2 [Teoría de la Computación]: Análisis de Algoritmos y Complejidad de Problemas; J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento - Economía Términos Generales Algoritmos, Economía, Teoría 1. INTRODUCCIÓN En una gran comunidad de agentes, es poco probable que el comportamiento de un agente tenga un efecto directo en la mayoría de los otros agentes: más bien, solo serán afectados los agentes que estén lo suficientemente cerca de él. Sin embargo, a medida que estos agentes responden adaptando su comportamiento, más agentes sentirán las consecuencias y eventualmente las decisiones tomadas por un solo agente se propagarán por toda la comunidad. Esta es la intuición detrás de los juegos gráficos, los cuales fueron introducidos por Kearns, Littman y Singh en [13] como un esquema de representación compacto para juegos con muchos jugadores. En un juego gráfico de n jugadores, a cada jugador se le asocia un vértice de un grafo subyacente G, y las ganancias de cada jugador dependen de su acción, así como de las acciones de sus vecinos en el grafo. Si el grado máximo de G es Δ, y cada jugador tiene dos acciones disponibles, entonces el juego se puede representar usando n2Δ+1 números. Por el contrario, necesitamos n^2 números para representar un juego general de n jugadores y 2 acciones, lo cual solo es práctico para valores pequeños de n. Para juegos gráficos con Δ constante, el tamaño del juego es lineal en n. Uno de los problemas más naturales para un juego gráfico es el de encontrar un equilibrio de Nash, cuya existencia se deriva del célebre teorema de Nash (ya que los juegos gráficos son solo un caso especial de juegos de n jugadores). El primer intento de abordar este problema se realizó en [13], donde los autores consideran juegos gráficos con dos acciones por jugador en los que el grafo subyacente es un árbol de grado acotado. Proponen un algoritmo genérico para encontrar equilibrios de Nash que puede ser especializado de dos maneras: un algoritmo de tiempo exponencial para encontrar un equilibrio de Nash (exacto) y un esquema de aproximación de tiempo polinómico completo (FPTAS) para encontrar una aproximación a un equilibrio de Nash. Para cualquier > 0, este algoritmo produce un equilibrio de Nash, que es un perfil estratégico en el que ningún jugador puede mejorar su pago más que al cambiar unilateralmente su estrategia. Si bien los equilibrios de Nash aproximados suelen ser más fáciles de calcular que los equilibrios de Nash exactos, este concepto de solución tiene varias desventajas. Primero, es posible que los jugadores sean sensibles a una pequeña pérdida en las ganancias, por lo que el perfil estratégico que es un equilibrio de Nash no será estable. Esto será así incluso si solo hay un pequeño subconjunto de jugadores que son extremadamente sensibles al precio, y para una gran población de jugadores puede ser difícil elegir un valor que satisfaga a todos. Segundo, los perfiles estratégicos que están cerca de ser equilibrios de Nash pueden ser mucho mejores con respecto a las propiedades consideradas que los equilibrios de Nash exactos. Por lo tanto, la aproximación al valor de la mejor solución que corresponde a un equilibrio de Nash aproximado puede no ser indicativa de lo que se puede lograr bajo un equilibrio de Nash exacto. Esto es especialmente importante si el propósito de la solución aproximada es proporcionar un buen punto de referencia para un sistema de agentes egoístas, ya que el punto de referencia implícito por un equilibrio de Nash puede ser poco realista. Por estas razones, en este artículo nos enfocamos en el problema de calcular equilibrios de Nash exactos. Basándose en las ideas de [14], Elkind et al. [9] mostraron cómo encontrar un equilibrio de Nash (exacto) en tiempo polinómico cuando el grafo subyacente tiene grado 2 (es decir, cuando el grafo es una colección de caminos y ciclos). Por el contrario, encontrar un equilibrio de Nash en un grafo general con grado acotado parece ser computacionalmente intratable: se ha demostrado (ver [5, 12, 7]) que es completo para la clase de complejidad PPAD. [9] extiende este resultado de dificultad al caso en el que el grafo subyacente tiene un ancho de camino acotado. Un juego gráfico puede no tener un equilibrio de Nash único, de hecho, puede tener exponencialmente muchos. Además, algunos equilibrios de Nash son más deseables que otros. En lugar de tener un algoritmo que simplemente encuentre algún equilibrio de Nash, nos gustaría tener algoritmos para encontrar equilibrios de Nash con diversas propiedades socialmente deseables, como maximizar el pago total o distribuir las ganancias de manera justa. Una propiedad útil de la estructura de datos de [13] es que representa simultáneamente el conjunto de todos los equilibrios de Nash del juego subyacente. Si esta representación tiene tamaño polinómico (como es el caso de los caminos, como se muestra en [9]), se puede esperar extraer de ella un equilibrio de Nash con las propiedades deseadas. De hecho, en [13] los autores mencionan que esto es posible si uno está interesado en encontrar un equilibrio de Nash (aproximado). El objetivo de este artículo es extender esto a equilibrios de Nash exactos. 1.1 Nuestros Resultados En este artículo, estudiamos juegos gráficos de n jugadores y 2 acciones en árboles de grado acotado para los cuales la estructura de datos de [13] tiene tamaño polinómico en n. Nos enfocamos en el problema de encontrar equilibrios de Nash exactos con ciertas propiedades socialmente deseables. En particular, mostramos cómo encontrar un equilibrio de Nash que maximiza (casi) el bienestar social, es decir, la suma de las ganancias de los jugadores, y mostramos cómo encontrar un equilibrio de Nash que satisface (casi) los límites de ganancias prescritos para todos los jugadores. Los juegos gráficos en árboles de grado acotado tienen una estructura algebraica simple. Una característica atractiva, que se desprende de [13], es que cada juego de este tipo tiene un equilibrio de Nash en el cual la estrategia de cada jugador es un número racional. La sección 3 estudia la estructura algebraica de aquellos equilibrios de Nash que maximizan el bienestar social. Demostramos (Teoremas 1 y 2) que, sorprendentemente, el conjunto de equilibrios de Nash que maximizan el bienestar social es más complejo. De hecho, para cualquier número algebraico α ∈ [0, 1] con grado a lo sumo n, exhibimos un juego gráfico en un camino de longitud O(n) tal que, en el equilibrio de Nash único que maximiza el bienestar social de este juego, uno de los jugadores juega la estrategia mixta α. Este resultado muestra que puede ser difícil representar un equilibrio de Nash óptimo. Parece ser una característica novedosa del escenario que consideramos aquí, que un equilibrio de Nash óptimo es difícil de representar, en una situación donde es fácil encontrar y representar un equilibrio de Nash. Dado que el equilibrio de Nash que maximiza el bienestar social puede ser difícil de representar eficientemente, debemos conformarnos con una aproximación. Sin embargo, la diferencia crucial entre nuestro enfoque y el de los trabajos anteriores [13, 16, 19] es que requerimos que nuestro algoritmo produzca un equilibrio de Nash exacto, aunque no necesariamente el óptimo con respecto a nuestros criterios. En la Sección 4, describimos un algoritmo que cumple con este requisito. Específicamente, proponemos un algoritmo que, para cualquier > 0, encuentra un equilibrio de Nash cuya recompensa total está dentro de de lo óptimo. Se ejecuta en tiempo polinómico (Teorema 3,4) para cualquier juego gráfico en un árbol de grado acotado para el cual la estructura de datos propuesta por [13] (la llamada política de mejor respuesta, definida a continuación) tiene un tamaño poli(n) (nota que, como se muestra en [9], esto siempre es el caso cuando el grafo subyacente es un camino). Un resultado relacionado en un contexto diferente fue obtenido por Datta [8], quien muestra que los juegos de n jugadores con 2 acciones son universales en el sentido de que cualquier variedad algebraica real puede ser representada como el conjunto de equilibrios de Nash totalmente mixtos de tales juegos. Precisamente, el tiempo de ejecución de nuestro algoritmo es polinómico en n, Pmax y 1/, donde Pmax es el valor absoluto máximo de una entrada de una matriz de pagos, es decir, es un algoritmo seudopolinómico, aunque es completamente polinómico con respecto a . Mostramos (Sección 4.1) que bajo ciertas restricciones en las matrices de pagos, el algoritmo puede ser transformado en un algoritmo de tiempo polinómico (verdaderamente) que produce un equilibrio de Nash cuya ganancia total está dentro de un factor de 1 − del óptimo. En la Sección 5, consideramos el problema de encontrar un equilibrio de Nash en el que la ganancia esperada de cada jugador Vi supere un umbral prescrito Ti. Usando la idea de la Sección 4, presentamos (Teorema 5) un esquema de aproximación en tiempo polinómico completo para este problema. El tiempo de ejecución del algoritmo está acotado por un polinomio en n, Pmax y . Si la instancia tiene un equilibrio de Nash que cumple con los umbrales prescritos, entonces el algoritmo construye un equilibrio de Nash en el que la recompensa esperada de cada jugador Vi es al menos Ti − . En la Sección 6, presentamos otros criterios naturales para seleccionar un buen equilibrio de Nash y mostramos que los algoritmos descritos en las dos secciones anteriores pueden ser utilizados como bloques de construcción para encontrar equilibrios de Nash que cumplan con estos criterios. En particular, en la Sección 6.1 mostramos cómo encontrar un equilibrio de Nash que aproxima el máximo bienestar social, garantizando que la ganancia de cada individuo esté cerca de un umbral prescrito. En la Sección 6.2 mostramos cómo encontrar un equilibrio de Nash que maximiza (casi) al máximo el pago individual mínimo. Finalmente, en la Sección 6.3 mostramos cómo encontrar un equilibrio de Nash en el que las ganancias individuales de los jugadores están cerca unas de otras. 1.2 Trabajo Relacionado Nuestro esquema de aproximación (Teorema 3 y Teorema 4) muestra un contraste entre los juegos que estudiamos y los juegos de n acciones de dos jugadores, para los cuales los problemas correspondientes suelen ser intratables. Para juegos de n acciones de dos jugadores, el problema de encontrar equilibrios de Nash con propiedades especiales suele ser NP-duro. En particular, este es el caso de los equilibrios de Nash que maximizan el bienestar social [11, 6]. Además, es probable que sea intratable incluso aproximarse a tales equilibrios. En particular, Chen, Deng y Teng [4] muestran que existe algún , polinomio inverso en n, para el cual calcular un equilibrio de Nash en juegos de 2 jugadores con n acciones por jugador es PPAD-completo. Lipton y Markakis [15] estudian las propiedades algebraicas de los equilibrios de Nash, y señalan que los algoritmos estándar de eliminación de cuantificadores pueden ser utilizados para resolverlos. Ten en cuenta que estos algoritmos no son de tiempo polinómico en general. Los juegos que estudiamos en este artículo tienen equilibrios de Nash computables en tiempo polinómico en los que todas las estrategias mixtas son números racionales, pero un equilibrio de Nash óptimo puede incluir necesariamente estrategias mixtas con un alto grado algebraico. Un equilibrio correlacionado (CE) (introducido por Aumann [2]) es una distribución sobre vectores de acciones de jugadores con la propiedad de que si a cualquier jugador se le dice su propia acción (el valor de su propio componente) de un vector generado por esa distribución, entonces no puede aumentar su ganancia esperada cambiando su acción. Cualquier equilibrio de Nash es una EC, pero la afirmación contraria no se cumple en general. A diferencia de los equilibrios de Nash, los equilibrios correlacionados se pueden encontrar para juegos gráficos de bajo grado (así como para otras clases de juegos multijugador representados de manera concisa) en tiempo polinómico [17]. Pero, para juegos gráficos es NP-duro encontrar un equilibrio correlacionado que maximice la recompensa total [18]. Sin embargo, los resultados de NP-dificultad se aplican a juegos más generales que el que consideramos aquí, en particular los grafos no son árboles. Del [2] también se sabe que existen juegos de 2 jugadores y 2 acciones para los cuales el pago total esperado 163 del mejor equilibrio correlacionado es mayor que el mejor equilibrio de Nash, y discutimos este tema más a fondo en la Sección 7.2. CONSIDERACIONES PRELIMINARES Y NOTACIÓN Consideramos juegos gráficos en los que el grafo subyacente G es un árbol de n vértices, en el que cada vértice tiene a lo sumo Δ hijos. Cada vértice tiene dos acciones, que están representadas por 0 y 1. Una estrategia mixta de un jugador V se representa como un único número v ∈ [0, 1], que denota la probabilidad de que V seleccione la acción 1. Para los propósitos del algoritmo, el árbol está enraizado de manera arbitraria. Para mayor comodidad, asumimos sin pérdida de generalidad que la raíz tiene un solo hijo y que su recompensa es independiente de la acción elegida por el hijo. Esto se puede lograr primero eligiendo una raíz arbitraria del árbol, y luego agregando un padre ficticio de esta raíz, asignándole una función de recompensa constante, por ejemplo, 0. Dado un borde (V, W) del árbol G, y una estrategia mixta w para W, sea G(V,W), W=w la instancia obtenida de G mediante (1) eliminar todos los nodos Z que están separados de V por W (es decir, todos los nodos Z tales que el camino de Z a V pasa por W), y (2) restringir la instancia de modo que se requiera que W juegue la estrategia mixta w. Definición 1. Supongamos que (V, W) es una arista del árbol, que v es una estrategia mixta para V y que w es una estrategia mixta para W. Decimos que v es una mejor respuesta potencial a w (denotado por v ∈ pbrV (w)) si hay un equilibrio en la instancia G(V,W), W = w en el que V tiene una estrategia mixta v. Definimos la política de mejor respuesta para V, dada W, como B(W, V) = {(w, v) | v ∈ pbrV (w), w ∈ [0, 1]}. El paso ascendente del algoritmo genérico de [13] considera cada nodo V (que no sea la raíz) y calcula la política de mejor respuesta para V dada su padre. Con las suposiciones anteriores sobre la raíz, el paso aguas abajo es sencillo. La raíz selecciona una estrategia mixta w para la raíz W y una estrategia mixta v ∈ B(W, V) para cada hijo V de W. Indica a cada niño V que juegue v. El resto del pase descendente es recursivo. Cuando un nodo V recibe instrucciones de su padre para adoptar la estrategia mixta v, realiza lo siguiente para cada hijo U: encuentra un par (v, u) ∈ B(V, U) (con el mismo valor de v que le fue dado por su padre) e instruye a U a jugar u. La mejor política de respuesta para un vértice U dado su padre V puede representarse como una unión de rectángulos, donde un rectángulo está definido por un par de intervalos cerrados (IV, IU) y consiste en todos los puntos en IV × IU; puede ser el caso de que uno o ambos de los intervalos IV e IU consistan en un solo punto. Para realizar cálculos en B(V, U) y para limitar el número de rectángulos, [9] utilizó el concepto de un punto de evento, el cual se define de la siguiente manera. Para cualquier conjunto A ⊆ [0, 1]2 que se represente como una unión de un número finito de rectángulos, decimos que un punto u ∈ [0, 1] en el eje U es un punto de evento U de A si u = 0 o u = 1 o la representación de A contiene un rectángulo de la forma IV × IU y u es un extremo de IU; los puntos de evento V se definen de manera similar. Para muchos juegos considerados en este documento, el grafo subyacente es un camino de n vértices, es decir, un grafo G = (V, E) con V = {V1, . . . , Vn} y E = {(V1, V2), . . . , (Vn−1, Vn)}. En [9], se demostró que para tales juegos, la política de mejor respuesta tiene solo un número polinomial de rectángulos. La prueba de que el número de rectángulos en B(Vj+1, Vj) es polinomial procede primero mostrando que el número de puntos de evento en B(Vj+1, Vj) no puede exceder el número de puntos de evento en B(Vj, Vj-1) en más de 2, y utilizando este hecho para acotar el número de rectángulos en B(Vj+1, Vj). Sean P0 (V) y P1 (V) las ganancias esperadas para V cuando juega 0 y 1, respectivamente. Tanto P0 (V) como P1 (V) son funciones multilineales de las estrategias de los vecinos de V. En lo que sigue, usaremos frecuentemente la siguiente observación simple. AFIRMACIÓN 1. Para un vértice V con un único hijo U y padre W, dados cualquier A, B, C, D ∈ Q, se pueden seleccionar las recompensas para V de manera que P0(V) = Auw + Bu + Cw + D, P1(V) = Auw + Bu + Cw + D. Además, si todos los valores de A, B, C, D son enteros, los pagos para V también son enteros. PRUEBA. Daremos la prueba para P0 (V); la prueba para P1 (V) es similar. Para i, j = 0, 1, sea Pij la ganancia para V cuando U juega i, V juega 0 y W juega j. Tenemos P0 (V) = P00(1 − u)(1 − w) + P10u(1 − w) + P01(1 − u)w + P11uw. Tenemos que seleccionar los valores de Pij de manera que P00 − P10 − P01 + P11 = A, −P00 + P10 = B, −P00 + P01 = C, P00 = D. Es fácil ver que la solución única está dada por P00 = D, P01 = C + D, P10 = B + D, P11 = A + B + C + D. La entrada a todos los algoritmos considerados en este documento incluye las matrices de pago para cada jugador. Suponemos que todos los elementos de estas matrices son enteros. Sea Pmax el mayor valor absoluto de cualquier elemento de cualquier matriz de pagos. Entonces, la entrada consiste en un máximo de n2Δ+1 números, cada uno de los cuales puede ser representado usando log Pmax bits. EQUILIBRIOS DE NASH QUE MAXIMIZAN EL BIENESTAR SOCIAL: SOLUCIONES EN R \\ Q Desde el punto de vista del bienestar social, el mejor equilibrio de Nash es aquel que maximiza la suma de las ganancias esperadas de los jugadores. Lamentablemente, resulta que calcular exactamente dicho perfil estratégico no es posible: en esta sección, mostramos que incluso si todas las ganancias de los jugadores son números enteros, el perfil estratégico que maximiza la ganancia total puede tener coordenadas irracionales; además, puede involucrar números algebraicos de un grado arbitrario. 3.1 Calentamiento: irracionales cuadráticos Comenzamos proporcionando un ejemplo de un juego gráfico en un camino de longitud 3 con ganancias enteras tal que en el equilibrio de Nash que maximiza la ganancia total, uno de los jugadores tiene una estrategia en R \\ Q. En la siguiente subsección, extenderemos este ejemplo a números algebraicos de grado arbitrario n; para hacerlo, debemos considerar caminos de longitud O(n). TEOREMA 1. Existe un juego gráfico G de <br>pago entero</br> en un camino de 3 vértices UVW tal que, en cualquier equilibrio de Nash de G que maximice el bienestar social, la estrategia u del jugador U y el pago total p cumplen u, p ∈ R \\ Q. PRUEBA. Las recompensas para los jugadores en G están especificadas de la siguiente manera. La ganancia para U es idénticamente 0, es decir, P0 (U) = P1 (U) = 0. Usando la Reclamación 1, seleccionamos las ganancias para V de modo que P0 (V) = -uw + 3w y P1 (V) = P0 (V) + w(u + 2) - (u + 1), donde u y w son las estrategias (mixtas) de U y W, respectivamente. Se deduce que V es indiferente entre jugar 0 y 1 si y solo si w = f(u) = u+1 u+2. Observa que para cualquier u ∈ [0, 1] tenemos f(u) ∈ [0, 1]. La recompensa para W es 0 si selecciona la misma acción que V y 1 en caso contrario. AFIRMACIÓN 2. Todos los equilibrios de Nash del juego G son de la forma (u, 1/2, f(u)). Es decir, en cualquier equilibrio de Nash, V juega v = 1/2 y W juega w = f(u). Además, para cualquier valor de u, el vector de estrategias (u, 1/2, f(u)) constituye un equilibrio de Nash. PRUEBA. Es fácil comprobar que para cualquier u ∈ [0, 1], el vector (u, 1/2, f(u)) es un equilibrio de Nash. De hecho, U está dispuesto a jugar 164 cualquier estrategia mixta u, sin importar lo que hagan V y W. Además, V es indiferente entre 0 y 1 siempre y cuando w = f(u), por lo que puede jugar 1/2. Finalmente, si V juega con probabilidad igual a 0 y 1, W es indiferente entre 0 y 1, por lo que puede jugar f(u). Por el contrario, supongamos que v > 1/2. Entonces W prefiere estrictamente jugar 0, es decir, w = 0. Entonces para V tenemos P1 (V) = P0 (V) - (u + 1), es decir, P1 (V) < P0 (V), lo que implica v = 0, una contradicción. De manera similar, si v < 1/2, el jugador W prefiere jugar 1, por lo que tenemos w = 1. Por lo tanto, P1 (V) = P0 (V) + (u + 2) - (u + 1), es decir, P1 (V) > P0 (V), lo que implica v = 1, una contradicción. Finalmente, si v = 1/2, pero w = f(u), el jugador V no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Esto completa la prueba de la Afirmación 2. Según la Afirmación 2, la ganancia total en cualquier equilibrio de Nash de este juego es una función de u. Más específicamente, la ganancia para U es 0, la ganancia para V es −uf(u) + 3f(u), y la ganancia para W es 1/2. Por lo tanto, el equilibrio de Nash con la máxima ganancia total corresponde al valor de u que maximiza g(u) = −u (u + 1) u + 2 + 3 u + 1 u + 2 = − (u − 3)(u + 1) u + 2. Para encontrar los extremos de g(u), calculamos h(u) = − d du g(u). Tenemos h(u) = (2u − 2)(u + 2) − (u − 3)(u + 1) (u + 2)2 = u2 + 4u − 1 (u + 2)2. Por lo tanto, h(u) = 0 si y solo si u ∈ {−2 + √ 5, −2 − √ 5}. Ten en cuenta que −2 + √ 5 ∈ [0, 1]. La función g(u) cambia de signo en −2, −1 y 3. Tenemos g(u) < 0 para g > 3, g(u) > 0 para u < −2, por lo que el extremo de g(u) que se encuentra entre 1 y 3, es decir, u = −2 + √ 5, es un máximo local. Concluimos que el equilibrio de Nash que maximiza el bienestar social para este juego está dado por el vector de estrategias (−2+√ 5, 1/2, (5 − √ 5)/5). El pago total respectivo es 0 − ( √ 5 − 5)( √ 5 − 1) √ 5 + 1 2 = 13/2 − 2 √ 5. Esto concluye la prueba del Teorema 1. 3.2 Estrategias de grado arbitrario. Hemos demostrado que en el equilibrio de Nash que maximiza el bienestar social, las estrategias de algunos jugadores pueden ser irracionales cuadráticas, al igual que la recompensa total. En esta subsección, extenderemos este resultado para mostrar que podemos construir un juego gráfico de pago entero en un camino cuyo equilibrio de Nash maximizador del bienestar social involucra números algebraicos arbitrarios en [0, 1]. TEOREMA 2. Para cualquier número algebraico α de grado n ∈ [0, 1], existe un juego gráfico de pago entero en un camino de longitud O(n) tal que, en todas las equilibrios de Nash que maximizan el bienestar social de este juego, uno de los jugadores juega α. PRUEBA. Nuestra prueba consta de dos pasos. Primero, construimos una expresión racional R(x) y un segmento [x , x ] tal que x , x ∈ Q y α sea el único máximo de R(x) en [x , x ]. Segundo, construimos un juego gráfico cuyos equilibrios de Nash pueden ser parametrizados por u ∈ [x, x], de modo que en el equilibrio que corresponde a u, la recompensa total es R(u) y, además, la estrategia de algunos jugadores es u. Se deduce que para alcanzar el equilibrio de Nash que maximiza la ganancia, este jugador tiene que jugar α. Los detalles siguen. LEMMA 1. \n\nLEMMA 1. Dado un número algebraico α ∈ [0, 1], deg(α) = n, existen K2, . . . , K2n+2 ∈ Q y x , x ∈ (0, 1) ∩ Q tal que α es el único máximo de R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 en [x , x ]. PRUEBA. Sea P(x) el polinomio minimal de α, es decir, un polinomio de grado n con coeficientes racionales cuyo coeficiente principal es 1 tal que P(α) = 0. Sea A = {α1, . . . , αn} el conjunto de todas las raíces de P(x). Considera el polinomio Q1(x) = −P2(x). Tiene las mismas raíces que P(x), y además, para cualquier x ∈ A tenemos Q1(x) < 0. Por lo tanto, A es el conjunto de todos los máximos de Q1(x). Ahora, establece R(x) = Q1(x) (x+2)...(x+2n+1)(x+2n+2). Observa que R(x) ≤ 0 para todo x ∈ [0, 1] y R(x) = 0 si y solo si Q1(x) = 0. Por lo tanto, el conjunto A también es el conjunto de todos los máximos de R(x) en [0, 1]. Sea d = min{|αi − α| | αi ∈ A, αi = α}, y establezca α = max{α − d/2, 0}, α = min{α + d/2, 1}. Claramente, α es el único cero (y por lo tanto, el único máximo) de R(x) en [α , α ]. Sean x y x algunos números racionales en (α, α) y (α, α), respectivamente; observe que al excluir los extremos de los intervalos aseguramos que x, x = 0, 1. Como [x, x] ⊂ [α, α], tenemos que α es el único máximo de R(x) en [x, x]. Dado que R(x) es una expresión racional adecuada y todas las raíces de su denominador son simples, por el teorema de descomposición en fracciones parciales, R(x) puede representarse como R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2, donde K2, . . . , K2n+2 son números racionales. Considera un juego gráfico en el camino U−1V−1U0V0U1V1 . . . Uk−1Vk−1Uk, donde k = 2n + 2. Intuitivamente, queremos que cada triple (Ui−1, Vi−1, Ui) se comporte de manera similar a los jugadores U, V y W del juego descrito en la subsección anterior. Más precisamente, definimos las ganancias de los jugadores de la siguiente manera. • La ganancia para U−1 es 0 sin importar lo que hagan los demás. • La ganancia esperada para V−1 es 0 si juega 0 y u0 − (x − x )u−1 −x si juega 1, donde u0 y u−1 son las estrategias de U0 y U−1, respectivamente. • La ganancia esperada para V0 es 0 si juega 0 y u1(u0 + 1)− u0 si juega 1, donde u0 y u1 son las estrategias de U0 y U1, respectivamente. • Para cada i = 1, . . . , k − 1, la ganancia esperada para Vi cuando juega 0 es P0 (Vi) = Aiuiui+1 − Aiui+1, y la ganancia esperada para Vi cuando juega 1 es P1 (Vi) = P0 (Vi) + ui+1(2 − ui) − 1, donde Ai = −Ki+1 y ui+1 y ui son las estrategias de Ui+1 y Ui, respectivamente. • Para cada i = 0, . . . , k, la ganancia para Ui no depende de Vi y es 1 si Ui y Vi−1 seleccionan acciones diferentes y 0 en caso contrario. Ahora caracterizaremos los equilibrios de Nash de este juego utilizando una secuencia de afirmaciones. AFIRMACIÓN 3. En todos los equilibrios de Nash de este juego, V−1 juega 1/2, y las estrategias de u−1 y u0 satisfacen u0 = (x − x )u−1 + x. Por consiguiente, en todos los equilibrios de Nash tenemos u0 ∈ [x , x ]. 165 PRUEBA. La prueba es similar a la del Reclamo 2. Que f(u−1) = (x − x )u−1 + x. Claramente, el jugador V−1 es indiferente entre jugar 0 y 1 si y solo si u0 = f(u−1). Supongamos que v−1 < 1/2. Entonces U0 prefiere estrictamente jugar 1, es decir, u0 = 1, por lo que tenemos P1 (V−1) = P0 (V−1) + 1 − (x − x )u−1 − x . Dado que 1 − x ≤ 1 − (x − x )u−1 − x ≤ 1 − x para u−1 ∈ [0, 1] y x < 1, tenemos que P1 (V−1) > P0 (V−1), por lo que V−1 prefiere jugar 1, lo cual es una contradicción. De manera similar, si v−1 > 1/2, el jugador U0 prefiere estrictamente jugar 0, es decir, u0 = 0, por lo que tenemos P1 (V−1) = P0 (V−1) − (x − x )u−1 − x. Dado que x < x, x > 0, tenemos P1 (V−1) < P0 (V−1), por lo que V−1 prefiere jugar 0, lo cual es una contradicción. Finalmente, si V−1 juega 1/2, pero u0 = f(u−1), el jugador V−1 no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Además, ten en cuenta que f(0) = x, f(1) = x y, además, f(u−1) ∈ [x, x] si y solo si u−1 ∈ [0, 1]. Por lo tanto, en todos los equilibrios de Nash de este juego tenemos u0 ∈ [x , x ]. AFIRMACIÓN 4. En todos los equilibrios de Nash de este juego para cada i = 0, . . . , k − 1, tenemos vi = 1/2, y las estrategias de los jugadores Ui y Ui+1 satisfacen ui+1 = fi(ui), donde f0(u) = u/(u + 1) y fi(u) = 1/(2 − u) para i > 0. PRUEBA. La prueba de esta afirmación es también similar a la de la Afirmación 2. Utilizamos inducción en i para demostrar que la afirmación de la proposición es verdadera y, además, ui = 1 para i > 0. Para el caso base i = 0, observe que u0 = 0 según la afirmación anterior (recuerde que x, x se seleccionan de manera que x, x = 0, 1) y considere el trío (U0, V0, U1). Que v0 sea la estrategia de V0. Primero, supongamos que v0 > 1/2. Entonces U1 prefiere estrictamente jugar 0, es decir, u1 = 0. Entonces, para V0 tenemos P1 (V0) = P0 (V0) − u0. Dado que u0 = 0, tenemos que P1 (V0) < P0 (V0), lo cual implica v1 = 0, una contradicción. De manera similar, si v0 < 1/2, el jugador U1 prefiere jugar 1, por lo que tenemos u1 = 1. Por lo tanto, P1 (V0) = P0 (V0) + 1. Se sigue que P1 (V0) > P0 (V0), lo cual implica v0 = 1, una contradicción. Finalmente, si v0 = 1/2, pero u1 = u0/(u0 + 1), el jugador V0 no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Además, dado que u1 = u0/(u0 + 1) y u0 ∈ [0, 1], tenemos que u1 = 1. El argumento para el paso inductivo es similar. Es decir, supongamos que la afirmación se demuestra para todos los i < i y consideremos el trío (Ui, Vi, Ui+1). Que vi sea la estrategia de Vi. Primero, supongamos que vi > 1/2. Entonces Ui+1 prefiere estrictamente jugar 0, es decir, ui+1 = 0. Entonces, para Vi tenemos P1 (Vi) = P0 (Vi)−1, es decir, P1 (Vi) < P0 (Vi), lo cual implica vi = 0, una contradicción. De manera similar, si vi < 1/2, el jugador Ui+1 prefiere jugar 1, por lo que tenemos ui+1 = 1. Por lo tanto, P1 (Vi) = P0 (Vi) + 1 − ui. Por hipótesis inductiva, tenemos ui < 1. Por consiguiente, P1 (Vi) > P0 (Vi), lo que implica vi = 1, una contradicción. Finalmente, si vi = 1/2, pero ui+1 = 1/(2 − ui), el jugador Vi no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Además, como ui+1 = 1/(2 − ui) y ui < 1, tenemos ui+1 < 1. AFIRMACIÓN 5. Cualquier perfil estratégico de la forma (u−1, 1/2, u0, 1/2, u1, 1/2, . . . , uk−1, 1/2, uk), donde u−1 ∈ [0, 1], u0 = (x − x )u−1 + x , u1 = u0/(u0 + 1), y ui+1 = 1/(2 − ui) para i ≥ 1, constituye un equilibrio de Nash. PRUEBA. Primero, las ganancias del jugador U−1 no dependen de las acciones de otros jugadores, por lo que es libre de jugar cualquier estrategia en [0, 1]. Si u0 = (x −x )u−1 +x , el jugador V−1 es indiferente entre 0 y 1, por lo que está contento de jugar 1/2; un argumento similar se aplica a los jugadores V0, . . . , Vk−1. Finalmente, para cada i = 0, . . . , k, las ganancias del jugador Ui solo dependen de la estrategia del jugador Vi−1. En particular, siempre y cuando vi−1 = 1/2, el jugador Ui es indiferente entre jugar 0 y 1, por lo que puede jugar cualquier estrategia mixta ui ∈ [0, 1]. Para completar la prueba, observe que (x − x )u−1 + x ∈ [0, 1] para todo u−1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] para todo u0 ∈ [0, 1], y 1/(2 − ui) ∈ [0, 1] para todo ui ∈ [0, 1], por lo que tenemos ui ∈ [0, 1] para todo i = 0, . . . , k. Ahora, calculemos la ganancia total bajo un perfil estratégico de la forma dada en la Afirmación 5. El pago para U−1 es 0, y el pago esperado para cada uno de los Ui, i = 0, . . . , k, es 1/2. Los beneficios esperados para V−1 y V0 son 0. Finalmente, para cualquier i = 1, . . . , k − 1, la ganancia esperada para Vi es Ti = Aiuiui+1 − Aiui+1. Se deduce que para encontrar un equilibrio de Nash con el mayor pago total, debemos maximizar Pk−1 i=1 Ti sujeto a las condiciones u−1 ∈ [0, 1], u0 = (x −x )u−1+x , u1 = u0/(u0+1), y ui+1 = 1/(2−ui) para i = 1, . . . , k − 1. Nos gustaría expresar Pk−1 i=1 Ti como una función de u0. Para simplificar la notación, establezca u = u0. LEMMA 2. \n\nLEMMA 2. Para i = 1, . . . , k, tenemos ui = u+i−1 u+i. PRUEBA. La demostración es por inducción en i. Para i = 1, tenemos u1 = u/(u + 1). Ahora, para i ≥ 2 supongamos que ui−1 = (u + i − 2)/(u + i − 1). Tenemos ui = 1/(2 − ui−1) = (u + i − 1)/(2u + 2i − 2 − u − i + 2) = (u + i − 1)/(u + i). Se sigue que para i = 1, . . . , k − 1 tenemos Ti = Ai u + i − 1 u + i u + i u + i + 1 − Ai u + i u + i + 1 = −Ai 1 u + i + 1 = Ki+1 u + i + 1. Observa que a medida que u−1 varía de 0 a 1, u varía de x a x. Por lo tanto, para maximizar el pago total, debemos elegir u ∈ [x , x ] de manera que maximicemos K2 u + 2 + · · · + Kk u + k = R(u). Por construcción, el único máximo de R(u) en [x, x] es α. Se deduce que en el equilibrio de Nash que maximiza las ganancias de nuestro juego, U0 juega α. Finalmente, cabe destacar que las recompensas en nuestro juego son racionales en lugar de enteras. Sin embargo, es fácil ver que podemos multiplicar todas las ganancias de un jugador por su máximo común denominador sin afectar su estrategia. En el juego resultante, todas las ganancias son enteras. Esto concluye la demostración del Teorema 2.4. APROXIMANDO EL EQUILIBRIO DE NASH ÓPTIMO SOCIAL Hemos visto que el equilibrio de Nash que maximiza el bienestar social puede implicar estrategias que no están en Q. Por lo tanto, en esta sección nos enfocamos en encontrar un equilibrio de Nash que sea casi óptimo desde la perspectiva del bienestar social. Proponemos un algoritmo que, para cualquier > 0, encuentra un equilibrio de Nash cuya recompensa total está dentro de de la óptima. El tiempo de ejecución de este algoritmo es polinómico en 1/ , n y |Pmax| (recuerde que Pmax es el valor absoluto máximo de una entrada de una matriz de pagos). Si bien el resultado negativo de la sección anterior es para juegos gráficos en caminos, nuestro algoritmo se aplica a una gama más amplia de escenarios. Específicamente, se ejecuta en tiempo polinómico en árboles de grado acotado siempre que la política de mejor respuesta de cada vértice, dada su padre, pueda representarse como una unión de un número polinómico de rectángulos. Ten en cuenta que los grafos de camino siempre cumplen esta condición: en [9] mostramos cómo calcular dicha representación, dado un grafo con grado máximo 2. Por consiguiente, para grafos de camino el tiempo de ejecución de nuestro algoritmo está garantizado de ser polinomial. (Nótese que [9] exhibe una familia de juegos gráficos en árboles de grado acotado para los cuales las políticas de mejor respuesta de algunos de los vértices, dados sus padres, tienen tamaño exponencial, cuando se representan como uniones de rectángulos). Debido a restricciones de espacio, en esta versión del artículo presentamos el algoritmo para el caso en el que el grafo subyacente del juego gráfico es un camino. Luego presentamos nuestro resultado para el caso general; la demostración se puede encontrar en la versión completa de este artículo [10]. Supongamos que s es un perfil estratégico para un juego gráfico G. Es decir, s asigna una estrategia mixta a cada vértice de G. Sea EPV (s) el pago esperado del jugador V bajo s y sea EP(s) = Σ V EPV (s). Sea M(G) = max{EP(s) | s es un equilibrio de Nash para G}. TEOREMA 3. Supongamos que G es un juego gráfico en un camino de n vértices. Entonces, para cualquier > 0 existe un algoritmo que construye un equilibrio de Nash s para G que satisface EP(s) ≥ M(G)− . El tiempo de ejecución del algoritmo es O(n4 P3 max/ 3) PRUEBA. Sea {V1, . . . , Vn} el conjunto de todos los jugadores. Comenzamos construyendo las mejores políticas de respuesta para todos los Vi, i = 1, . . . , n − 1. Como se muestra en [9], esto se puede hacer en tiempo O(n3). Sea N > 5n un parámetro que se seleccionará más adelante, establezca δ = 1/N y defina X = {jδ | j = 0, . . . , N}. Decimos que vj es un punto de evento para un jugador Vi si es un punto de evento de Vi para B(Vi, Vi−1) o B(Vi+1, Vi). Para cada jugador Vi, considera un conjunto finito de estrategias Xi dado por Xi = X ∪ {vj | vj es un punto de evento para Vi}. Se ha demostrado en [9] que para cualquier i = 2, . . . , n, la política de mejor respuesta B(Vi, Vi−1) tiene como máximo 2n + 4 puntos de eventos de Vi. Dado que requerimos N > 5n, tenemos |Xi| ≤ 2N; asumimos sin pérdida de generalidad que |Xi| = 2N. Ordena los elementos de Xi en orden creciente como x1 i = 0 < x2 i < · · · < x2N i. Nos referiremos a las estrategias en Xi como estrategias discretas del jugador Vi; un perfil de estrategia en el que cada jugador tiene una estrategia discreta se referirá como un perfil de estrategia discreta. Ahora demostraremos que incluso si restringimos a cada jugador Vi a estrategias de Xi, los jugadores aún pueden lograr un equilibrio de Nash, y además, el mejor equilibrio de Nash (con respecto al bienestar social) tiene un pago total de al menos M(G) - siempre y cuando N sea lo suficientemente grande. Sea s un perfil de estrategia que maximiza el bienestar social. Es decir, sea s = (s1, . . . , sn) donde si es la estrategia mixta del jugador Vi y EP(s) = M(G). Para i = 1, . . . , n, sea ti = max{xj i | xj i ≤ si}. Primero, demostraremos que el perfil estratégico t = (t1, . . . , tn) es un equilibrio de Nash para G. Fijemos cualquier i, 1 < i ≤ n, y sea R = [v1, v2]×[u1, u2] el rectángulo en B(Vi, Vi−1) que contiene (si, si−1). Dado que v1 es un punto de evento Vi de B(Vi, Vi−1), tenemos v1 ≤ ti, por lo que el punto (ti, si−1) está dentro de R. De manera similar, el punto u1 es un punto de evento Vi−1 de B(Vi, Vi−1), por lo que tenemos u1 ≤ ti−1, y por lo tanto el punto (ti, ti−1) está dentro de R. Esto significa que para cualquier i, 1 < i ≤ n, tenemos ti−1 ∈ pbrVi−1 (ti), lo que implica que t = (t1, . . . , tn) es un equilibrio de Nash para G. Ahora, estimemos la pérdida esperada en el bienestar social causada por jugar t en lugar de s. LEMA 3. Para cualquier par de perfiles de estrategia t, s tales que |ti − si| ≤ δ, tenemos |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ para cualquier i = 1, . . . , n. PRUEBA. Sea Pi klm el pago del jugador Vi, cuando juega k, Vi−1 juega l y Vi+1 juega m. Fijemos i = 1, . . . , n y para k, l, m ∈ {0, 1}, definamos tklm = tk i−1(1 − ti−1)1−k tl i(1 − ti)1−l tm i+1(1 − ti+1)1−m sklm = sk i−1(1 − si−1)1−k sl i(1 − si)1−l sm i+1(1 − si+1)1−m. Mostraremos ahora que para cualquier k, l, m ∈ {0, 1} tenemos |tklm − sklm | ≤ 3δ; claramente, esto implica el lema. De hecho, fijar k, l, m ∈ {0, 1}. Establecer x = tk i−1(1 − ti−1)1−k , x = sk i−1(1 − si−1)1−k , y = tl i(1 − ti)1−l , y = sl i(1 − si)1−l , z = tm i+1(1 − ti+1)1−m , z = sm i+1(1 − si+1)1−m. Observa que si k = 0 entonces x − x = (1 − ti−1) − (1 − si−1), y si k = 1 entonces x − x = ti−1 − si−1, por lo tanto |x − x | ≤ δ. Un argumento similar muestra |y − y | ≤ δ, |z − z | ≤ δ. Además, tenemos x, x, y, y, z, z ∈ [0, 1]. Por lo tanto, |tklm − sklm | = |xyz − x y z | = |xyz − x yz + x yz − x y z + x y z − x y z | ≤ |x − x |yz + |y − y |x z + |z − z |x y ≤ 3δ. El Lema 3 implica que Pn i=1 |EPVi (s) − EPVi (t)| ≤ 24nPmaxδ, por lo que al elegir δ < /(24nPmax), o, equivalentemente, estableciendo N > 24nPmax/ , podemos asegurar que el pago esperado total para el perfil estratégico t esté dentro de de lo óptimo. Ahora demostraremos que podemos encontrar el mejor equilibrio de Nash discreto (con respecto al bienestar social) utilizando programación dinámica. Dado que t es un perfil de estrategia discreto, esto significa que el perfil de estrategia encontrado por nuestro algoritmo será al menos tan bueno como t. Defina ml,k i como la máxima ganancia total que V1, . . . , Vi−1 pueden lograr si cada Vj, j ≤ i, elige una estrategia de Xj, para cada j < i la estrategia de Vj es una mejor respuesta potencial a la estrategia de Vj+1, y, además, Vi−1 juega xl i−1, Vi juega xk i. Si no hay forma de elegir las estrategias para V1, . . . , Vi−1 que cumplan con estas condiciones, establecemos ml,k i = −∞. Los valores ml,k i , i = 1, . . . , n; k, l = 1, . . . , N, pueden ser calculados de forma inductiva, de la siguiente manera. Tenemos ml,k 1 = 0 para k, l = 1, . . . , N. Ahora, supongamos que ya hemos calculado ml,k j para todos los j < i; k, l = 1, . . . , N. Para calcular mk,l i , primero verificamos si (xk i , xl i−1) ∈ B(Vi, Vi−1). Si este no es el caso, tenemos ml,k i = −∞. De lo contrario, considera el conjunto Y = Xi−2 ∩ pbrVi−2 (xl i−1), es decir, el conjunto de todas las estrategias discretas de Vi−2 que son potenciales mejores respuestas a xl i−1. La prueba del Teorema 1 en [9] implica que el conjunto pbrVi−2 (xl i−1) no está vacío: el jugador Vi−2 tiene una mejor respuesta potencial a cualquier estrategia de Vi−1, en particular, xl i−1. Por la construcción del conjunto Xi−2, esto implica que Y no está vacío. Para cada xj i−2 ∈ Y, dejemos que pjlk sea la ganancia que Vi−1 recibe cuando Vi−2 juega xj i−2, Vi−1 juega xl i−1, y Vi juega xk i. Claramente, pjlk se puede calcular en tiempo constante. Entonces tenemos ml,k i = max{mj,l i−1 + pjlk | xj i−2 ∈ Y }. Finalmente, supongamos que hemos calculado ml,k n para l, k = 1, . . . , N. Todavía necesitamos tener en cuenta el pago del jugador Vn. Por lo tanto, consideramos todos los pares (xk n, xl n−1) que satisfacen xl n−1 ∈ pbrVn−1 (xk n), y elegimos aquel que maximiza la suma de mk,l n y la ganancia de Vn cuando juega xk n y Vn−1 juega xl n−1. Esto resulta en el pago total máximo que los jugadores pueden lograr en un equilibrio de Nash utilizando estrategias discretas; el perfil de estrategia real que produce este pago puede ser reconstruido utilizando técnicas estándar de programación dinámica. Es fácil ver que cada ml,k se puede calcular en tiempo O(N), es decir, todos ellos se pueden calcular en tiempo O(nN3). Recuerde que debemos seleccionar N ≥ (24nPmax)/ para asegurarnos de que el perfil estratégico que producimos tenga un pago total que esté dentro de lo óptimo. Concluimos que podemos calcular una -aproximación al mejor equilibrio de Nash en tiempo O(n4 P3 max/ 3 ). Esto completa la demostración del Teorema 3. Para enunciar nuestro resultado para el caso general (es decir, cuando el grafo subyacente es un árbol de grado acotado en lugar de un camino), necesitamos notación adicional. Si G tiene n jugadores, sea q(n) una cota superior en el número de puntos de evento en la representación de cualquier política de mejor respuesta. Es decir, asumimos que para cualquier vértice U con padre V, B(V, U) tiene como máximo q(n) puntos de evento. Estaremos interesados en la situación en la que q(n) sea un polinomio en n. TEOREMA 4. Sea G un juego gráfico de n jugadores en un árbol en el que cada nodo tiene a lo sumo Δ hijos. Supongamos que se nos da un conjunto de políticas de mejor respuesta para G en el que cada política de mejor respuesta B(V, U) está representada por un conjunto de rectángulos con un máximo de q(n) puntos de evento. Para cualquier > 0, existe un algoritmo que construye un equilibrio de Nash s para G que satisface EP(s) ≥ M(G) − . El tiempo de ejecución del algoritmo es polinómico en n, Pmax y −1 siempre que el árbol tenga grado acotado (es decir, Δ = O(1)) y q(n) sea un polinomio en n. En particular, si N = max((Δ + 1)q(n) + 1, n2Δ+2 (Δ + 2)Pmax −1 ) y Δ > 1 entonces el tiempo de ejecución es O(nΔ(2N)Δ. Para la demostración de este teorema, ver [10]. 4.1 Un algoritmo de tiempo polinómico para aproximación multiplicativa El tiempo de ejecución de nuestro algoritmo es seudopolinómico en lugar de polinómico, porque incluye un factor que es polinómico en Pmax, la entrada máxima (en valor absoluto) en cualquier matriz de pagos. Si estamos interesados en una aproximación multiplicativa en lugar de una aditiva, esto se puede mejorar a polinomial. Primero, hay que tener en cuenta que no podemos esperar una aproximación multiplicativa para todas las entradas. Es decir, no podemos esperar tener un algoritmo que calcule un equilibrio de Nash con una ganancia total de al menos (1 − )M(G). Si tuviéramos dicho algoritmo, entonces para juegos gráficos G con M(G) = 0, se requeriría que el algoritmo produjera la solución óptima. Para demostrar que esto es inviable, observe que podemos usar las técnicas de la Sección 3.2 para construir dos juegos gráficos de coeficientes enteros en caminos de longitud O(n) de tal manera que para algún X ∈ R, el pago total máximo en el primer juego sea X, el pago total máximo en el segundo juego sea −X, y para ambos juegos, los perfiles estratégicos que logran los pagos totales máximos involucran números algebraicos de grado n. Al combinar los dos juegos de modo que el primer vértice del segundo juego se conecte con el último vértice del primer juego, pero los pagos de todos los jugadores no cambien, obtenemos un juego gráfico en el que el mejor equilibrio de Nash tiene un pago total de 0, sin embargo, las estrategias que conducen a este pago tienen una alta complejidad algebraica. Sin embargo, podemos lograr una aproximación multiplicativa cuando todas las entradas de las matrices de pago son positivas y la relación entre cualquier par de entradas está acotada polinómicamente. Recuerde que asumimos que todos los pagos son enteros, y sea Pmin > 0 la entrada más pequeña de cualquier matriz de pagos. En este caso, para cualquier perfil estratégico, la ganancia para el jugador i es al menos Pmin, por lo que la ganancia total en el equilibrio de Nash que maximiza el bienestar social satisface M(G) ≥ nPmin. Además, el Lema 3 implica que al elegir δ < /(24Pmax/Pmin), podemos asegurar que el equilibrio de Nash t producido por nuestro algoritmo cumple nX i=1 EPVi (s) − nX i=1 EPVi (t) ≤ 24Pmaxδn ≤ nPmin ≤ M(G), es decir, para este valor de δ tenemos Pn i=1 EPVi (t) ≥ (1 − )M(G). Recuerde que el tiempo de ejecución de nuestro algoritmo es O(nN3), donde N debe ser seleccionado para satisfacer N > 5n, N = 1/δ. Se deduce que si Pmin > 0, Pmax/Pmin = poli(n), podemos elegir N de manera que nuestro algoritmo proporcione una garantía de aproximación multiplicativa y se ejecute en tiempo polinómico en n y 1/ . 5. EQUILIBRIOS DE NASH DE PAGO ACOTADO Otra forma natural de definir qué es un buen equilibrio de Nash es exigir que el pago esperado de cada jugador supere cierto umbral. Estos umbrales no tienen que ser iguales para todos los jugadores. En este caso, además de las matrices de pagos de los n jugadores, se nos dan n números T1, . . . , Tn, y nuestro objetivo es encontrar un equilibrio de Nash en el que el pago del jugador i sea al menos Ti, o informar que no existe tal equilibrio de Nash. Resulta que podemos diseñar un FPTAS para este problema utilizando las mismas técnicas que en la sección anterior. TEOREMA 5. Dado un juego gráfico G en un camino de n vértices y n números racionales T1, . . . , Tn, supongamos que existe un perfil estratégico s tal que s es un equilibrio de Nash para G y EPVi (s) ≥ Ti para i = 1, . . . , n. Entonces para cualquier > 0 podemos encontrar en tiempo O(max{nP3 max/ 3 , n4 / 3 }) un perfil estratégico s tal que s es un equilibrio de Nash para G y EPVi (s) ≥ Ti − para i = 1, . . . , n. PRUEBA. La prueba es similar a la del Teorema 3. Primero, construimos las políticas de mejor respuesta para todos los jugadores, elegimos N > 5n, y construimos los conjuntos Xi, i = 1, . . . , n, como se describe en la demostración del Teorema 3. Consideremos un perfil estratégico s tal que s sea un equilibrio de Nash para G y EPVi (s) ≥ Ti para i = 1, . . . , n. Construimos un perfil estratégico ti = max{xj i | xj i ≤ si} y usamos el mismo argumento que en la demostración del Teorema 3 para mostrar que t es un equilibrio de Nash para G. Según el Lema 3, tenemos |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ, por lo que eligiendo δ < /(24Pmax), o, equivalentemente, N > max{5n, 24Pmax/ }, podemos asegurar que EPVi (t) ≥ Ti − para i = 1, . . . , n. Ahora, utilizaremos la programación dinámica para encontrar un equilibrio de Nash discreto que cumpla con EPVi (t) ≥ Ti − para i = 1, . . . , n. Dado que t es un perfil estratégico discreto, nuestro algoritmo tendrá éxito siempre que haya un perfil estratégico s con EPVi (s) ≥ Ti− para i = 1, . . . , n. Sea zl,k i = 1 si hay un perfil estratégico discreto tal que para cualquier j < i la estrategia del jugador Vj es una mejor respuesta potencial a la estrategia de Vj+1, el pago esperado de Vj es al menos Tj − , y, además, Vi−1 juega xl i−1, Vi juega xk i. De lo contrario, deja que zl,k i = 0. Podemos calcular zl,k i, i = 1, . . . , n; k, l = 1, . . . , N de forma inductiva, de la siguiente manera. Tenemos zl,k 1 = 1 para k, l = 1, . . . , N. Ahora, supongamos que ya hemos calculado zl,k j para todos los j < i; k, l = 1, . . . , N. Para calcular zk,l i , primero verificamos si (xk i , xl i−1) ∈ B(Vi, Vi−1). Si este 168 no es el caso, claramente, zk,l i = 0. De lo contrario, considera el conjunto Y = Xi−2 ∩ pbrVi−2 (xl i−1), es decir, el conjunto de todas las estrategias discretas de Vi−2 que son potenciales mejores respuestas a xl i−1. Se ha demostrado en la prueba del Teorema 3 que Y = ∅. Para cada xj i−2 ∈ Y, dejemos que pjlk sea la ganancia que Vi−1 recibe cuando Vi−2 juega xj i−2, Vi−1 juega xl i−1, y Vi juega xk i. Claramente, pjlk se puede calcular en tiempo constante. Si existe un xj i−2 ∈ Y tal que zj,l i−1 = 1 y pjlk ≥ Ti−2 − , establece zl,k i = 1. De lo contrario, establezca zl,k i = 0. Habiendo calculado zl,k n , l, k = 1, . . . , N, verificamos si zl,k n = 1 para algún par (l, k). Si existe tal par de índices, instruimos a Vn a jugar xk n y utilizamos técnicas de programación dinámica (o, de manera equivalente, el paso descendente del algoritmo de [13]) para encontrar un equilibrio de Nash s que satisfaga EPVi (s ) ≥ Ti − para i = 1, . . . , n (recordemos que Vn es un jugador ficticio, es decir, asumimos Tn = 0, EPn(s ) = 0 para cualquier elección de s ). Si zl,k n = 0 para todo l, k = 1, . . . , N, no hay un equilibrio de Nash discreto s que satisfaga EPVi (s) ≥ Ti − para i = 1, . . . , n y, por lo tanto, no hay un equilibrio de Nash s (no necesariamente discreto) tal que EPVi (s) ≥ Ti para i = 1, . . . , n. El análisis del tiempo de ejecución es similar al de la Teorema 3; concluimos que el tiempo de ejecución de nuestro algoritmo es O(nN3) = O(max{nP3 max/3, n4/3}). OBSERVACIÓN 1. El Teorema 5 se puede extender a árboles de grado acotado de la misma manera que el Teorema 4. 5.1 Cálculo Exacto Otro enfoque para encontrar equilibrios de Nash con pagos acotados se basa en calcular de forma inductiva los subconjuntos de las políticas de mejor respuesta de todos los jugadores para excluir los puntos que no proporcionan pagos suficientes a algunos de los jugadores. Formalmente, decimos que una estrategia v del jugador V es una mejor respuesta potencial a una estrategia w de su padre W con respecto a un vector de umbral T = (T1, . . . , Tn), (denotado por v ∈ pbrV (w, T)) si hay un equilibrio en la instancia G(V,W), W = w en el que V juega la estrategia mixta v y la ganancia para cualquier jugador Vi aguas abajo de V (incluyendo a V) es al menos Ti. La mejor política de respuesta para V con respecto a un vector umbral T se define como B(W, V, T) = {(w, v) | v ∈ pbrV (w, T), w ∈ [0, 1]}. Es fácil ver que si alguno de los conjuntos B(Vj, Vj−1, T), j = 1, . . . , n, está vacío, significa que es imposible proporcionar a todos los jugadores los pagos esperados prescritos por T. De lo contrario, se puede aplicar el paso descendente del algoritmo original de [13] para encontrar un equilibrio de Nash. Dado que asumimos que Vn es un vértice ficticio cuya ganancia es idénticamente 0, el equilibrio de Nash con estas ganancias existe siempre y cuando Tn ≤ 0 y B(Vn, Vn−1, T) no esté vacío. Usando las técnicas desarrolladas en [9], no es difícil demostrar que para cualquier j = 1, . . . , n, el conjunto B(Vj , Vj−1, T) consiste en un número finito de rectángulos, y se puede calcular B(Vj+1, Vj , T) dado B(Vj , Vj−1, T). La ventaja de este enfoque es que nos permite representar todos los equilibrios de Nash que proporcionan los pagos requeridos a los jugadores. Sin embargo, no es probable que sea práctico, ya que resulta que los rectángulos que aparecen en la representación de B(Vj , Vj−1, T) pueden tener coordenadas irracionales. AFIRMACIÓN 6. Existe un juego gráfico G en un camino de 3 vértices UVW y un vector T = (T1, T2, T3) tal que B(V, W, T) no puede ser representado como una unión de un número finito de rectángulos con coordenadas racionales. PRUEBA. Definimos las recompensas para los jugadores en G de la siguiente manera. La ganancia para U es idénticamente 0, es decir, P0 (U) = P1 (U) = 0. Usando la Reclamación 1, seleccionamos los pagos para V de manera que P0 (V) = uw, P1 (V) = P0 (V) + w - .8u - .1, donde u y w son las estrategias (mixtas) de U y W, respectivamente. Se deduce que V es indiferente entre jugar 0 y 1 si y solo si w = f(u) = .8u + .1; observe que para cualquier u ∈ [0, 1] tenemos f(u) ∈ [0, 1]. No es difícil ver que tenemos B(W, V) = [0, .1]×{0} ∪ [.1, .9]×[0, 1] ∪ [.9, 1]×{1}. Los pagos para W no son importantes para nuestra construcción; por ejemplo, establezca P0(W) = P0(W) = 0. Ahora, establezca T = (0, 1/8, 0), es decir, estamos interesados en equilibrios de Nash en los que el pago esperado de V sea al menos 1/8. Supongamos que w ∈ [0, 1]. El jugador V puede jugar una estrategia mixta v cuando W está jugando w siempre que U juegue u = f−1 (w) = 5w/4 − 1/8 (para asegurar que V sea indiferente entre 0 y 1) y P0 (V) = P1 (V) = uw = w(5w/4 − 1/8) ≥ 1/8. La última condición se cumple si w ≤ (1 − √ 41)/20 < 0 o w ≥ (1 + √ 41)/20. Ten en cuenta que tenemos .1 < (1 + √ 41)/20 < .9. Para cualquier otro valor de w, cualquier estrategia de U hace que V prefiera una de las estrategias puras o no le proporciona un pago esperado suficiente. También hay algunos valores de w para los cuales V puede jugar una estrategia pura (0 o 1) como una mejor respuesta potencial a W y garantizarse a sí mismo un pago esperado de al menos 1/8; se puede demostrar que estos valores de w forman un número finito de segmentos en [0, 1]. Concluimos que cualquier representación de B(W, V, T) como una unión de un número finito de rectángulos debe contener un rectángulo de la forma [(1 + √ 41)/20, w] × [v, v] para algún w, v, v ∈ [0, 1]. Por otro lado, se puede demostrar que para cualquier matriz de pagos enteros y vectores de umbral, y para cualquier j = 1, . . . , n − 1, los conjuntos B(Vj+1, Vj, T) no contienen rectángulos de la forma [u , u ]×{v} o {v}×[w , w ], donde v ∈ R\\Q. Esto significa que si B(Vn, Vn−1, T) no está vacío, es decir, hay un equilibrio de Nash con pagos prescritos por T, entonces el paso descendente del algoritmo de [13] siempre puede elegir un perfil estratégico que forme un equilibrio de Nash, proporcione un pago de al menos Ti al jugador Vi y no tenga coordenadas irracionales. Por lo tanto, a diferencia del equilibrio de Nash que maximiza el bienestar social, no es necesario trabajar con números irracionales, y el hecho de que el algoritmo discutido en esta sección deba hacerlo puede considerarse como un argumento en contra de utilizar este enfoque. OTROS CRITERIOS PARA SELECCIONAR UN EQUILIBRIO DE NASH En esta sección, consideramos varios otros criterios que pueden ser útiles para seleccionar un equilibrio de Nash. 6.1 Combinando la maximización del bienestar con límites en los pagos En muchos escenarios de la vida real, queremos maximizar el bienestar social sujeto a ciertas restricciones en los pagos a los jugadores individuales. Por ejemplo, es posible que queramos asegurarnos de que ningún jugador obtenga una ganancia esperada negativa, o que la ganancia esperada para el jugador i sea al menos Pi max − ξ, donde Pi max es la entrada máxima de la matriz de ganancias de i y ξ es un parámetro fijo. Formalmente, dado un juego gráfico G y un vector T1, . . . , Tn, sea S el conjunto de todos los equilibrios de Nash s de G que satisfacen Ti ≤ EPVi (s) para i = 1, . . . , n, y sea ˆs = argmaxs∈S EP(s). Si el conjunto S no está vacío, podemos encontrar un equilibrio de Nash ˆs que esté -cerca de satisfacer los límites de pago y esté dentro de ε de ˆs con respecto al pago total al combinar los algoritmos de la Sección 4 y la Sección 5. Es decir, para un dado > 0, elige δ como en la demostración del Teorema 3, y deja que Xi sea el conjunto de todas las estrategias discretas del jugador Vi (para una definición formal, consulta la demostración del Teorema 3). Combinando las pruebas del Teorema 3 y el Teorema 5, podemos ver que el perfil de estrategia ˆt dado por ˆti = max{xj i | xj i ≤ ˆsi} satisface EPVi (ˆt) ≥ Ti − , |EP(ˆs) − EP(ˆt)| ≤ . Define ˆml,k i como la máxima ganancia total que V1, . . . , Vi−1 pueden lograr si cada Vj, j ≤ i, elige una estrategia de Xj, para cada j < i la estrategia de Vj es una mejor respuesta potencial a la estrategia de Vj+1 y la ganancia para el jugador Vj es al menos Tj − , y, además, Vi−1 juega xl i−1, Vi juega xk i. Si no hay forma de elegir las estrategias para V1, . . . , Vi−1 que cumplan con estas condiciones, establecemos ml,k i = −∞. El ˆml,k se puede calcular mediante programación dinámica de manera similar al ml,k y zl,k en las demostraciones de los Teoremas 3 y 5. Finalmente, como en la demostración del Teorema 3, utilizamos ml,k n para seleccionar el mejor equilibrio de Nash discreto sujeto a las restricciones de pago. Incluso de manera más general, es posible que deseemos maximizar el beneficio total para un subconjunto de jugadores (se supone que son capaces de redistribuir justamente las ganancias entre ellos mismos) mientras garantizamos ciertos beneficios esperados a (un subconjunto de) los otros jugadores. Este problema puede ser abordado de manera similar. 6.2 Un enfoque minimax Una medida más igualitaria de la calidad de un equilibrio de Nash es el pago esperado mínimo para un jugador. La solución óptima con respecto a esta medida es un equilibrio de Nash en el cual la ganancia esperada mínima para un jugador es máxima. Para encontrar una aproximación a dicho equilibrio de Nash, podemos combinar el algoritmo de la Sección 5 con la búsqueda binaria en el espacio de límites inferiores potenciales. Ten en cuenta que la ganancia esperada para cualquier jugador Vi dada una estrategia s siempre cumple con −Pmax ≤ EPVi (s) ≤ Pmax. Para un fijo > 0, comenzamos estableciendo T = −Pmax, T = Pmax, T∗ = (T + T )/2. Luego ejecutamos el algoritmo de la Sección 5 con T1 = · · · = Tn = T∗. Si el algoritmo tiene éxito al encontrar un equilibrio de Nash s que cumple con EPVi (s) ≥ T∗ − para todo i = 1, . . . , n, establecemos T = T∗, T∗ = (T + T)/2; de lo contrario, establecemos T = T∗, T∗ = (T + T)/2 y repetimos el ciclo. Repetimos este proceso hasta que |T − T | ≤ . No es difícil comprobar que para cualquier p ∈ R, si existe un equilibrio de Nash s tal que mini=1,...,n EPVi (s) ≥ p, entonces nuestro algoritmo devuelve un equilibrio de Nash s que cumple mini=1,...,n EPVi (s) ≥ p−2. El tiempo de ejecución de nuestro algoritmo es O(max{nP3 max log −1 / 3 , n4 log −1 / 3 }). 6.3 Igualando los pagos Cuando las matrices de pagos de los jugadores no son muy diferentes, es razonable exigir que los pagos esperados para los jugadores tampoco difieran mucho. Ahora demostraremos que los equilibrios de Nash en esta categoría también pueden aproximarse en tiempo polinómico. De hecho, observe que el algoritmo de la Sección 5 puede ser fácilmente modificado para tratar con límites superiores en las ganancias individuales en lugar de límites inferiores. Además, podemos calcular de manera eficiente una aproximación a un equilibrio de Nash que cumpla tanto con el límite superior como con el límite inferior para cada jugador. Más precisamente, supongamos que se nos da un juego gráfico G, 2n números racionales T1, . . . , Tn, T1, . . . , Tn y > 0. Entonces, si existe un perfil estratégico s tal que s es un equilibrio de Nash para G y Ti ≤ EPVi (s) ≤ Ti para i = 1, . . . , n, podemos encontrar un perfil estratégico s tal que s es un equilibrio de Nash para G y Ti − ≤ EPVi (s) ≤ Ti + para i = 1, . . . , n. El algoritmo modificado también se ejecuta en tiempo O(max{nP3 max/ 3 , [4]n4 / 3 }). Esta observación nos permite aproximar equilibrios de Nash en los que las ganancias esperadas de todos los jugadores difieren en un máximo de ξ para cualquier ξ fijo > 0. Dado un > 0, establecemos T1 = · · · = Tn = −Pmax, T1 = · · · = Tn = −Pmax + ξ + , y ejecutamos la versión modificada del algoritmo de la Sección 5. Si no logra encontrar una solución, incrementamos todos los Ti, Ti por y el bucle. Continuamos hasta que el algoritmo encuentre una solución, o Ti ≥ Pmax. Supongamos que existe un equilibrio de Nash s que satisface |EPVi (s) − EPVj (s)| ≤ ξ para todo i, j = 1, . . . , n. Definamos r = mini=1,...,n EPVi (s); tenemos r ≤ EPVi (s) ≤ r + ξ para todo i = 1, . . . , n. Existe un k ≥ 0 tal que −Pmax + (k − 1) ≤ r ≤ −Pmax + k. Durante el paso k del algoritmo, establecemos T1 = · · · = Tn = −Pmax +(k−1) , es decir, tenemos r− ≤ Ti ≤ r, r + ξ ≤ Ti ≤ r + ξ + . Es decir, el equilibrio de Nash s satisface Ti ≤ r ≤ EPVi (s) ≤ r + ξ ≤ Ti, lo que significa que cuando Ti se establece en −Pmax + (k − 1), nuestro algoritmo garantiza producir un equilibrio de Nash t que satisface r − 2 ≤ Ti − ≤ EPVi (t) ≤ Ti + ≤ r + ξ + 2. Concluimos que siempre que exista un equilibrio de Nash s, nuestro algoritmo produce un equilibrio de Nash t que satisface |EPVi (t) − EPVj (t)| ≤ ξ + 4 para todo i, j = 1, . . . , n. El tiempo de ejecución de este algoritmo es O(max{nP3 max/ 4 , n4 / 4 }). También debemos tener en cuenta que podemos encontrar el valor más pequeño de ξ para el cual existe un equilibrio de Nash combinando este algoritmo con una búsqueda binaria en el espacio ξ = [0, 2Pmax]. Esto identifica una aproximación al equilibrio de Nash más justo, es decir, uno en el que las ganancias esperadas de los jugadores difieren por la menor cantidad posible. Finalmente, cabe destacar que todos los resultados de esta sección pueden extenderse a árboles de grado acotado. 7. CONCLUSIONES Hemos estudiado el problema de la selección de equilibrio en juegos gráficos en árboles de grado acotado. Consideramos varios criterios para seleccionar un equilibrio de Nash, como maximizar el bienestar social, garantizar un límite inferior en la recompensa esperada de cada jugador, etc. Primero, nos enfocamos en la complejidad algebraica de un equilibrio de Nash que maximiza el bienestar social, y demostramos resultados negativos contundentes para ese problema. Es decir, demostramos que incluso para juegos gráficos en caminos, cualquier número algebraico α ∈ [0, 1] puede ser la única estrategia disponible para algún jugador en todas las equilibrios de Nash que maximizan el bienestar social. Esto contrasta fuertemente con el hecho de que los juegos gráficos en árboles siempre poseen un equilibrio de Nash en el que las estrategias de todos los jugadores son números racionales. Luego proporcionamos algoritmos de aproximación para seleccionar equilibrios de Nash con propiedades especiales. Si bien el problema de encontrar equilibrios de Nash aproximados para diversas clases de juegos ha recibido mucha atención en los últimos años, la mayoría de los trabajos existentes tienen como objetivo encontrar equilibrios de Nash que satisfagan (o estén cerca de satisfacer) ciertas propiedades. Nuestro enfoque es diferente en que insistimos en producir un equilibrio de Nash exacto, que está cerca de satisfacer un requisito dado. Como se argumenta en la introducción, hay varias razones para preferir una solución que constituya un equilibrio de Nash exacto. Nuestros algoritmos son esquemas de aproximación de tiempo polinomial completo, es decir, su tiempo de ejecución es polinomial en el inverso del parámetro de aproximación, aunque pueden ser seudopolinomiales con respecto al tamaño de la entrada. Bajo restricciones leves en las entradas, estas pueden ser modificadas para ser verdaderamente polinomiales. Este es el resultado positivo más fuerte que se puede obtener para un problema cuyas soluciones exactas pueden ser difíciles de representar, como es el caso de muchos de los problemas considerados aquí. Mientras demostramos nuestros resultados para juegos en un camino, pueden generalizarse a cualquier árbol para el cual las políticas de mejor respuesta tengan representaciones compactas como uniones de rectángulos. En la versión completa del artículo describimos nuestros algoritmos para el caso general. Un trabajo adicional en esta línea podría incluir extensiones a los tipos de garantías buscadas para los equilibrios de Nash, como garantizar los pagos totales para subconjuntos de jugadores, seleccionar equilibrios en los que algunos jugadores estén recibiendo pagos significativamente más altos que sus pares, etc. Sin embargo, en este momento es quizás más importante investigar si los equilibrios de Nash de los juegos gráficos pueden ser calculados de manera descentralizada, en contraste con los algoritmos que hemos introducido aquí. Es natural preguntarse si nuestros resultados o los de [9] pueden generalizarse a juegos con tres o más acciones. Sin embargo, parece que esto hará el análisis significativamente más difícil. En particular, cabe destacar que se pueden considerar los juegos de pago limitado como un caso especial muy restringido de juegos con tres acciones por jugador. Es decir, dado un juego de dos acciones con límites de pago, considera un juego en el que cada jugador Vi tiene una tercera acción que le garantiza un pago de Ti sin importar lo que hagan los demás. Luego, verificar si existe un equilibrio de Nash en el cual ninguno de los jugadores asigna una probabilidad distinta de cero a su tercera acción es equivalente a comprobar si existe un equilibrio de Nash que cumpla con los límites de pago en el juego original, y la Sección 5.1 muestra que encontrar una solución exacta a este problema requiere nuevas ideas. Alternativamente, puede ser interesante buscar resultados similares en el contexto de equilibrios correlacionados (CE), especialmente dado que el mejor CE puede tener un valor más alto (pago esperado total) que el mejor NE. La proporción entre estos valores se llama el valor de mediación en [1]. Se sabe por [1] que el valor de mediación de juegos de 2 jugadores y 2 acciones con pagos no negativos es a lo sumo 4 3, y presentan un juego de 3 jugadores para el cual es infinito. Además, un ejemplo de 2 jugadores y 3 acciones del [1] también tiene un valor de mediación infinito. 8. REFERENCIAS [1] I. Ashlagi, D. Monderer y M. Tenneholtz, Sobre el Valor de la Correlación, Actas del seminario de Dagstuhl 05011 (2005) [2] R. Aumann, Subjetividad y Correlación en Estrategias Aleatorias, Revista de Economía Matemática 1 pp. 67-96 (1974) [3] B. Blum, C. R. Shelton y D. Koller, Un Método de Continuación para Equilibrios de Nash en Juegos Estructurados, Actas de IJCAI03 [4] X. Chen, X. Deng y S. Teng, Computación de Equilibrios de Nash: Aproximación y Complejidad Suavizada, Actas de FOCS06 [5] X. Chen, X. Deng, Resolviendo la Complejidad del Equilibrio de Nash de 2 Jugadores, Actas de FOCS06 [6] V. Conitzer y T. Sandholm, Resultados de Complejidad sobre Equilibrios de Nash, Actas de IJCAI03 [7] C. Daskalakis, P. W. Goldberg y C. H. Papadimitriou, La Complejidad de Calcular un Equilibrio de Nash, Actas de STOC06 [8] R. S. Datta, Universalidad de los Equilibrios de Nash, Matemáticas de la Investigación Operativa 28:3, 2003 [9] E. Elkind, L. A. Goldberg y P. W. Goldberg, Equilibrios de Nash en Juegos Gráficos en Árboles Revisitados, Actas de ACM EC06 [10] E. Elkind, L. A. Goldberg y P. W. Goldberg, Computando Buenos Equilibrios de Nash en Juegos Gráficos, http://arxiv.org/abs/cs.GT/0703133 [11] I. Gilboa y E. Zemel, Equilibrios de Nash y Correlacionados: Algunas Consideraciones de Complejidad, Juegos y Comportamiento Económico, 1 pp. 80-93 (1989) [12] P. W. Goldberg y C. H. Papadimitriou, Reducibilidad entre Problemas de Equilibrio, Actas de STOC06 [13] M. Kearns, M. Littman y S. Singh, Modelos Gráficos para la Teoría de Juegos, Actas de UAI01 [14] M. Littman, M. Kearns y S. Singh, Un Algoritmo Exacto Eficiente para Juegos Gráficos Singularmente Conectados, Actas de NIPS01 [15] R. Lipton y E. Markakis, Equilibrios de Nash a través de Ecuaciones Polinomiales, Actas de LATIN04 [16] L. Ortiz y M. Kearns, Propagación de Nash para Juegos Gráficos con Lazos, Actas de NIPS03 [17] C.H. Papadimitriou, Computando equilibrios correlacionados en juegos de varios jugadores, Actas de STOC05 [18] C.H. Papadimitriou y T. Roughgarden, Computando equilibrios en juegos de múltiples jugadores, Actas de SODA05 [19] D. Vickrey y D. Koller, Algoritmos multiagente para resolver juegos gráficos, Actas de AAAI02 171 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "several drawback": {
            "translated_key": "varias desventajas",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Computing Good Nash Equilibria in Graphical Games ∗ Edith Elkind Hebrew University of Jerusalem, Israel, and University of Southampton, Southampton, SO17 1BJ, U.K. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K. ABSTRACT This paper addresses the problem of fair equilibrium selection in graphical games.",
                "Our approach is based on the data structure called the best response policy, which was proposed by Kearns et al. [13] as a way to represent all Nash equilibria of a graphical game.",
                "In [9], it was shown that the best response policy has polynomial size as long as the underlying graph is a path.",
                "In this paper, we show that if the underlying graph is a bounded-degree tree and the best response policy has polynomial size then there is an efficient algorithm which constructs a Nash equilibrium that guarantees certain payoffs to all participants.",
                "Another attractive solution concept is a Nash equilibrium that maximizes the social welfare.",
                "We show that, while exactly computing the latter is infeasible (we prove that solving this problem may involve algebraic numbers of an arbitrarily high degree), there exists an FPTAS for finding such an equilibrium as long as the best response policy has polynomial size.",
                "These two algorithms can be combined to produce Nash equilibria that satisfy various fairness criteria.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a large community of agents, an agents behavior is not likely to have a direct effect on most other agents: rather, it is just the agents who are close enough to him that will be affected.",
                "However, as these agents respond by adapting their behavior, more agents will feel the consequences and eventually the choices made by a single agent will propagate throughout the entire community.",
                "This is the intuition behind graphical games, which were introduced by Kearns, Littman and Singh in [13] as a compact representation scheme for games with many players.",
                "In an n-player graphical game, each player is associated with a vertex of an underlying graph G, and the payoffs of each player depend on his action as well as on the actions of his neighbors in the graph.",
                "If the maximum degree of G is Δ, and each player has two actions available to him, then the game can be represented using n2Δ+1 numbers.",
                "In contrast, we need n2n numbers to represent a general n-player 2-action game, which is only practical for small values of n. For graphical games with constant Δ, the size of the game is linear in n. One of the most natural problems for a graphical game is that of finding a Nash equilibrium, the existence of which follows from Nashs celebrated theorem (as graphical games are just a special case of n-player games).",
                "The first attempt to tackle this problem was made in [13], where the authors consider graphical games with two actions per player in which the underlying graph is a boundeddegree tree.",
                "They propose a generic algorithm for finding Nash equilibria that can be specialized in two ways: an exponential-time algorithm for finding an (exact) Nash equilibrium, and a fully polynomial time approximation scheme (FPTAS) for finding an approximation to a Nash equilibrium.",
                "For any > 0 this algorithm outputs an -Nash equilibrium, which is a strategy profile in which no player can improve his payoff by more than by unilaterally changing his strategy.",
                "While -Nash equilibria are often easier to compute than exact Nash equilibria, this solution concept has <br>several drawback</br>s.",
                "First, the players may be sensitive to a small loss in payoffs, so the strategy profile that is an -Nash equilibrium will not be stable.",
                "This will be the case even if there is only a small subset of players who are extremely price-sensitive, and for a large population of players it may be difficult to choose a value of that will satisfy everyone.",
                "Second, the strategy profiles that are close to being Nash equilibria may be much better with respect to the properties under consideration than exact Nash equilibria.",
                "Therefore, the (approximation to the) value of the best solution that corresponds to an -Nash equilibrium may not be indicative of what can be achieved under an exact Nash equilibrium.",
                "This is especially important if the purpose of the approximate solution is to provide a good benchmark for a system of selfish agents, as the benchmark implied by an -Nash equilibrium may be unrealistic.",
                "For these reasons, in this paper we focus on the problem of computing exact Nash equilibria.",
                "Building on ideas of [14], Elkind et al. [9] showed how to find an (exact) Nash equilibrium in polynomial time when the underlying 162 graph has degree 2 (that is, when the graph is a collection of paths and cycles).",
                "By contrast, finding a Nash equilibrium in a general degree-bounded graph appears to be computationally intractable: it has been shown (see [5, 12, 7]) to be complete for the complexity class PPAD. [9] extends this hardness result to the case in which the underlying graph has bounded pathwidth.",
                "A graphical game may not have a unique Nash equilibrium, indeed it may have exponentially many.",
                "Moreover, some Nash equilibria are more desirable than others.",
                "Rather than having an algorithm which merely finds some Nash equilibrium, we would like to have algorithms for finding Nash equilibria with various sociallydesirable properties, such as maximizing overall payoff or distributing profit fairly.",
                "A useful property of the data structure of [13] is that it simultaneously represents the set of all Nash equilibria of the underlying game.",
                "If this representation has polynomial size (as is the case for paths, as shown in [9]), one may hope to extract from it a Nash equilibrium with the desired properties.",
                "In fact, in [13] the authors mention that this is indeed possible if one is interested in finding an (approximate) -Nash equilibrium.",
                "The goal of this paper is to extend this to exact Nash equilibria. 1.1 Our Results In this paper, we study n-player 2-action graphical games on bounded-degree trees for which the data structure of [13] has size poly(n).",
                "We focus on the problem of finding exact Nash equilibria with certain socially-desirable properties.",
                "In particular, we show how to find a Nash equilibrium that (nearly) maximizes the social welfare, i.e., the sum of the players payoffs, and we show how to find a Nash equilibrium that (nearly) satisfies prescribed payoff bounds for all players.",
                "Graphical games on bounded-degree trees have a simple algebraic structure.",
                "One attractive feature, which follows from [13], is that every such game has a Nash equilibrium in which the strategy of every player is a rational number.",
                "Section 3 studies the algebraic structure of those Nash equilibria that maximize social welfare.",
                "We show (Theorems 1 and 2) that, surprisingly, the set of Nash equilibria that maximize social welfare is more complex.",
                "In fact, for any algebraic number α ∈ [0, 1] with degree at most n, we exhibit a graphical game on a path of length O(n) such that, in the unique social welfare-maximizing Nash equilibrium of this game, one of the players plays the mixed strategy α.1 This result shows that it may be difficult to represent an optimal Nash equilibrium.",
                "It seems to be a novel feature of the setting we consider here, that an optimal Nash equilibrium is hard to represent, in a situation where it is easy to find and represent a Nash equilibrium.",
                "As the social welfare-maximizing Nash equilibrium may be hard to represent efficiently, we have to settle for an approximation.",
                "However, the crucial difference between our approach and that of previous papers [13, 16, 19] is that we require our algorithm to output an exact Nash equilibrium, though not necessarily the optimal one with respect to our criteria.",
                "In Section 4, we describe an algorithm that satisfies this requirement.",
                "Namely, we propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within of optimal.",
                "It runs in polynomial time (Theorem 3,4) for any graphical game on a bounded-degree tree for which the data structure proposed by [13] (the so-called best response policy, defined below) is of size poly(n) (note that, as shown in [9], this is always the case when the underlying graph is a path).",
                "More pre1 A related result in a different context was obtained by Datta [8], who shows that n-player 2-action games are universal in the sense that any real algebraic variety can be represented as the set of totally mixed Nash equilibria of such games. cisely, the running time of our algorithm is polynomial in n, Pmax, and 1/ , where Pmax is the maximum absolute value of an entry of a payoff matrix, i.e., it is a pseudopolynomial algorithm, though it is fully polynomial with respect to .",
                "We show (Section 4.1) that under some restrictions on the payoff matrices, the algorithm can be transformed into a (truly) polynomial-time algorithm that outputs a Nash equilibrium whose total payoff is within a 1 − factor from the optimal.",
                "In Section 5, we consider the problem of finding a Nash equilibrium in which the expected payoff of each player Vi exceeds a prescribed threshold Ti.",
                "Using the idea from Section 4 we give (Theorem 5) a fully polynomial time approximation scheme for this problem.",
                "The running time of the algorithm is bounded by a polynomial in n, Pmax, and .",
                "If the instance has a Nash equilibrium satisfying the prescribed thresholds then the algorithm constructs a Nash equilibrium in which the expected payoff of each player Vi is at least Ti − .",
                "In Section 6, we introduce other natural criteria for selecting a good Nash equilibrium and we show that the algorithms described in the two previous sections can be used as building blocks in finding Nash equilibria that satisfy these criteria.",
                "In particular, in Section 6.1 we show how to find a Nash equilibrium that approximates the maximum social welfare, while guaranteeing that each individual payoff is close to a prescribed threshold.",
                "In Section 6.2 we show how to find a Nash equilibrium that (nearly) maximizes the minimum individual payoff.",
                "Finally, in Section 6.3 we show how to find a Nash equilibrium in which the individual payoffs of the players are close to each other. 1.2 Related Work Our approximation scheme (Theorem 3 and Theorem 4) shows a contrast between the games that we study and two-player n-action games, for which the corresponding problems are usually intractable.",
                "For two-player n-action games, the problem of finding Nash equilibria with special properties is typically NP-hard.",
                "In particular, this is the case for Nash equilibria that maximize the social welfare [11, 6].",
                "Moreover, it is likely to be intractable even to approximate such equilibria.",
                "In particular, Chen, Deng and Teng [4] show that there exists some , inverse polynomial in n, for which computing an -Nash equilibrium in 2-player games with n actions per player is PPAD-complete.",
                "Lipton and Markakis [15] study the algebraic properties of Nash equilibria, and point out that standard quantifier elimination algorithms can be used to solve them.",
                "Note that these algorithms are not polynomial-time in general.",
                "The games we study in this paper have polynomial-time computable Nash equilibria in which all mixed strategies are rational numbers, but an optimal Nash equilibrium may necessarily include mixed strategies with high algebraic degree.",
                "A correlated equilibrium (CE) (introduced by Aumann [2]) is a distribution over vectors of players actions with the property that if any player is told his own action (the value of his own component) from a vector generated by that distribution, then he cannot increase his expected payoff by changing his action.",
                "Any Nash equilibrium is a CE but the converse does not hold in general.",
                "In contrast with Nash equilibria, correlated equilibria can be found for low-degree graphical games (as well as other classes of conciselyrepresented multiplayer games) in polynomial time [17].",
                "But, for graphical games it is NP-hard to find a correlated equilibrium that maximizes total payoff [18].",
                "However, the NP-hardness results apply to more general games than the one we consider here, in particular the graphs are not trees.",
                "From [2] it is also known that there exist 2-player, 2-action games for which the expected total payoff 163 of the best correlated equilibrium is higher than the best Nash equilibrium, and we discuss this issue further in Section 7. 2.",
                "PRELIMINARIES AND NOTATION We consider graphical games in which the underlying graph G is an n-vertex tree, in which each vertex has at most Δ children.",
                "Each vertex has two actions, which are denoted by 0 and 1.",
                "A mixed strategy of a player V is represented as a single number v ∈ [0, 1], which denotes the probability that V selects action 1.",
                "For the purposes of the algorithm, the tree is rooted arbitrarily.",
                "For convenience, we assume without loss of generality that the root has a single child, and that its payoff is independent of the action chosen by the child.",
                "This can be achieved by first choosing an arbitrary root of the tree, and then adding a dummy parent of this root, giving the new parent a constant payoff function, e.g., 0.",
                "Given an edge (V, W ) of the tree G, and a mixed strategy w for W , let G(V,W ),W =w be the instance obtained from G by (1) deleting all nodes Z which are separated from V by W (i.e., all nodes Z such that the path from Z to V passes through W ), and (2) restricting the instance so that W is required to play mixed strategy w. Definition 1.",
                "Suppose that (V, W ) is an edge of the tree, that v is a mixed strategy for V and that w is a mixed strategy for W .",
                "We say that v is a potential best response to w (denoted by v ∈ pbrV (w)) if there is an equilibrium in the instance G(V,W ),W =w in which V has mixed strategy v. We define the best response policy for V , given W , as B(W, V ) = {(w, v) | v ∈ pbrV (w), w ∈ [0, 1]}.",
                "The upstream pass of the generic algorithm of [13] considers every node V (other than the root) and computes the best response policy for V given its parent.",
                "With the above assumptions about the root, the downstream pass is straightforward.",
                "The root selects a mixed strategy w for the root W and a mixed strategy v ∈ B(W, V ) for each child V of W .",
                "It instructs each child V to play v. The remainder of the downward pass is recursive.",
                "When a node V is instructed by its parent to adopt mixed strategy v, it does the following for each child U - It finds a pair (v, u) ∈ B(V, U) (with the same v value that it was given by its parent) and instructs U to play u.",
                "The best response policy for a vertex U given its parent V can be represented as a union of rectangles, where a rectangle is defined by a pair of closed intervals (IV , IU ) and consists of all points in IV × IU ; it may be the case that one or both of the intervals IV and IU consists of a single point.",
                "In order to perform computations on B(V, U), and to bound the number of rectangles, [9] used the notion of an event point, which is defined as follows.",
                "For any set A ⊆ [0, 1]2 that is represented as a union of a finite number of rectangles, we say that a point u ∈ [0, 1] on the U-axis is a Uevent point of A if u = 0 or u = 1 or the representation of A contains a rectangle of the form IV × IU and u is an endpoint of IU ; V -event points are defined similarly.",
                "For many games considered in this paper, the underlying graph is an n-vertex path, i.e., a graph G = (V, E) with V = {V1, . . . , Vn} and E = {(V1, V2), . . . , (Vn−1, Vn)}.",
                "In [9], it was shown that for such games, the best response policy has only polynomially-many rectangles.",
                "The proof that the number of rectangles in B(Vj+1, Vj) is polynomial proceeds by first showing that the number of event points in B(Vj+1, Vj ) cannot exceed the number of event points in B(Vj, Vj−1) by more than 2, and using this fact to bound the number of rectangles in B(Vj+1, Vj ).",
                "Let P0 (V ) and P1 (V ) be the expected payoffs to V when it plays 0 and 1, respectively.",
                "Both P0 (V ) and P1 (V ) are multilinear functions of the strategies of V s neighbors.",
                "In what follows, we will frequently use the following simple observation.",
                "CLAIM 1.",
                "For a vertex V with a single child U and parent W , given any A, B, C, D ∈ Q, A , B , C , D ∈ Q, one can select the payoffs to V so that P0 (V ) = Auw + Bu + Cw + D, P1 (V ) = A uw + B u + C w + D .",
                "Moreover, if all A, B, C, D, A , B , C , D are integer, the payoffs to V are integer as well.",
                "PROOF.",
                "We will give the proof for P0 (V ); the proof for P1 (V ) is similar.",
                "For i, j = 0, 1, let Pij be the payoff to V when U plays i, V plays 0 and W plays j.",
                "We have P0 (V ) = P00(1 − u)(1 − w) + P10u(1 − w) + P01(1 − u)w + P11uw.",
                "We have to select the values of Pij so that P00 − P10 − P01 + P11 = A, −P00 + P10 = B, −P00 + P01 = C, P00 = D. It is easy to see that the unique solution is given by P00 = D, P01 = C + D, P10 = B + D, P11 = A + B + C + D. The input to all algorithms considered in this paper includes the payoff matrices for each player.",
                "We assume that all elements of these matrices are integer.",
                "Let Pmax be the greatest absolute value of any element of any payoff matrix.",
                "Then the input consists of at most n2Δ+1 numbers, each of which can be represented using log Pmax bits. 3.",
                "NASH EQUILIBRIA THAT MAXIMIZE THE SOCIAL WELFARE: SOLUTIONS IN R \\ Q From the point of view of social welfare, the best Nash equilibrium is the one that maximizes the sum of the players expected payoffs.",
                "Unfortunately, it turns out that computing such a strategy profile exactly is not possible: in this section, we show that even if all players payoffs are integers, the strategy profile that maximizes the total payoff may have irrational coordinates; moreover, it may involve algebraic numbers of an arbitrary degree. 3.1 Warm-up: quadratic irrationalities We start by providing an example of a graphical game on a path of length 3 with integer payoffs such that in the Nash equilibrium that maximizes the total payoff, one of the players has a strategy in R \\ Q.",
                "In the next subsection, we will extend this example to algebraic numbers of arbitrary degree n; to do so, we have to consider paths of length O(n).",
                "THEOREM 1.",
                "There exists an integer-payoff graphical game G on a 3-vertex path UV W such that, in any Nash equilibrium of G that maximizes social welfare, the strategy, u, of the player U and the total payoff, p, satisfy u, p ∈ R \\ Q.",
                "PROOF.",
                "The payoffs to the players in G are specified as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = −uw + 3w and P1 (V ) = P0 (V ) + w(u + 2) − (u + 1), where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = u+1 u+2 .",
                "Observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "The payoff to W is 0 if it selects the same action as V and 1 otherwise.",
                "CLAIM 2.",
                "All Nash equilibria of the game G are of the form (u, 1/2, f(u)).",
                "That is, in any Nash equilibrium, V plays v = 1/2 and W plays w = f(u).",
                "Moreover, for any value of u, the vector of strategies (u, 1/2, f(u)) constitutes a Nash equilibrium.",
                "PROOF.",
                "It is easy to check that for any u ∈ [0, 1], the vector (u, 1/2, f(u)) is a Nash equilibrium.",
                "Indeed, U is content to play 164 any mixed strategy u no matter what V and W do.",
                "Furthermore, V is indifferent between 0 and 1 as long as w = f(u), so it can play 1/2.",
                "Finally, if V plays 0 and 1 with equal probability, W is indifferent between 0 and 1, so it can play f(u).",
                "Conversely, suppose that v > 1/2.",
                "Then W strictly prefers to play 0, i.e., w = 0.",
                "Then for V we have P1 (V ) = P0 (V ) − (u + 1), i.e., P1 (V ) < P0 (V ), which implies v = 0, a contradiction.",
                "Similarly, if v < 1/2, player W prefers to play 1, so we have w = 1.",
                "Hence, P1 (V ) = P0 (V ) + (u + 2) − (u + 1), i.e., P1 (V ) > P0 (V ), which implies v = 1, a contradiction.",
                "Finally, if v = 1/2, but w = f(u), player V is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "This completes the proof of Claim 2.",
                "By Claim 2, the total payoff in any Nash equilibrium of this game is a function of u.",
                "More specifically, the payoff to U is 0, the payoff to V is −uf(u) + 3f(u), and the payoff to W is 1/2.",
                "Therefore, the Nash equilibrium with the maximum total payoff corresponds to the value of u that maximizes g(u) = −u (u + 1) u + 2 + 3 u + 1 u + 2 = − (u − 3)(u + 1) u + 2 .",
                "To find extrema of g(u), we compute h(u) = − d du g(u).",
                "We have h(u) = (2u − 2)(u + 2) − (u − 3)(u + 1) (u + 2)2 = u2 + 4u − 1 (u + 2)2 .",
                "Hence, h(u) = 0 if and only if u ∈ {−2 + √ 5, −2 − √ 5}.",
                "Note that −2 + √ 5 ∈ [0, 1].",
                "The function g(u) changes sign at −2, −1, and 3.",
                "We have g(u) < 0 for g > 3, g(u) > 0 for u < −2, so the extremum of g(u) that lies between 1 and 3, i.e., u = −2 + √ 5, is a local maximum.",
                "We conclude that the social welfare-maximizing Nash equilibrium for this game is given by the vector of strategies (−2+√ 5, 1/2, (5 − √ 5)/5).",
                "The respective total payoff is 0 − ( √ 5 − 5)( √ 5 − 1) √ 5 + 1 2 = 13/2 − 2 √ 5.",
                "This concludes the proof of Theorem 1. 3.2 Strategies of arbitrary degree We have shown that in the social welfare-maximizing Nash equilibrium, some players strategies can be quadratic irrationalities, and so can the total payoff.",
                "In this subsection, we will extend this result to show that we can construct an integer-payoff graphical game on a path whose social welfare-maximizing Nash equilibrium involves arbitrary algebraic numbers in [0, 1].",
                "THEOREM 2.",
                "For any degree-n algebraic number α ∈ [0, 1], there exists an integer payoff graphical game on a path of length O(n) such that, in all social welfare-maximizing Nash equilibria of this game, one of the players plays α.",
                "PROOF.",
                "Our proof consists of two steps.",
                "First, we construct a rational expression R(x) and a segment [x , x ] such that x , x ∈ Q and α is the only maximum of R(x) on [x , x ].",
                "Second, we construct a graphical game whose Nash equilibria can be parameterized by u ∈ [x , x ], so that at the equilibrium that corresponds to u the total payoff is R(u) and, moreover, some players strategy is u.",
                "It follows that to achieve the payoff-maximizing Nash equilibrium, this player has to play α.",
                "The details follow.",
                "LEMMA 1.",
                "Given an algebraic number α ∈ [0, 1], deg(α) = n, there exist K2, . . . , K2n+2 ∈ Q and x , x ∈ (0, 1) ∩ Q such that α is the only maximum of R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 on [x , x ].",
                "PROOF.",
                "Let P(x) be the minimal polynomial of α, i.e., a polynomial of degree n with rational coefficients whose leading coefficient is 1 such that P(α) = 0.",
                "Let A = {α1, . . . , αn} be the set of all roots of P(x).",
                "Consider the polynomial Q1(x) = −P2 (x).",
                "It has the same roots as P(x), and moreover, for any x ∈ A we have Q1(x) < 0.",
                "Hence, A is the set of all maxima of Q1(x).",
                "Now, set R(x) = Q1(x) (x+2)...(x+2n+1)(x+2n+2) .",
                "Observe that R(x) ≤ 0 for all x ∈ [0, 1] and R(x) = 0 if and only if Q1(x) = 0.",
                "Hence, the set A is also the set of all maxima of R(x) on [0, 1].",
                "Let d = min{|αi − α| | αi ∈ A, αi = α}, and set α = max{α − d/2, 0}, α = min{α + d/2, 1}.",
                "Clearly, α is the only zero (and hence, the only maximum) of R(x) on [α , α ].",
                "Let x and x be some rational numbers in (α , α) and (α, α ), respectively; note that by excluding the endpoints of the intervals we ensure that x , x = 0, 1.",
                "As [x , x ] ⊂ [α , α ], we have that α is the only maximum of R(x) on [x , x ].",
                "As R(x) is a proper rational expression and all roots of its denominator are simple, by partial fraction decomposition theorem, R(x) can be represented as R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 , where K2, . . . , K2n+2 are rational numbers.",
                "Consider a graphical game on the path U−1V−1U0V0U1V1 . . .",
                "Uk−1Vk−1Uk, where k = 2n + 2.",
                "Intuitively, we want each triple (Ui−1, Vi−1, Ui) to behave similarly to the players U, V , and W from the game described in the previous subsection.",
                "More precisely, we define the payoffs to the players in the following way. • The payoff to U−1 is 0 no matter what everyone else does. • The expected payoff to V−1 is 0 if it plays 0 and u0 − (x − x )u−1 −x if it plays 1, where u0 and u−1 are the strategies of U0 and U−1, respectively. • The expected payoff to V0 is 0 if it plays 0 and u1(u0 + 1)− u0 if it plays 1, where u0 and u1 are the strategies of U0 and U1, respectively. • For each i = 1, . . . , k − 1, the expected payoff to Vi when it plays 0 is P0 (Vi) = Aiuiui+1 − Aiui+1, and the expected payoff to Vi when it plays 1 is P1 (Vi) = P0 (Vi) + ui+1(2 − ui) − 1, where Ai = −Ki+1 and ui+1 and ui are the strategies of Ui+1 and Ui, respectively. • For each i = 0, . . . , k, the payoff to Ui does not depend on Vi and is 1 if Ui and Vi−1 select different actions and 0 otherwise.",
                "We will now characterize the Nash equilibria of this game using a sequence of claims.",
                "CLAIM 3.",
                "In all Nash equilibria of this game V−1 plays 1/2, and the strategies of u−1 and u0 satisfy u0 = (x − x )u−1 + x .",
                "Consequently, in all Nash equilibria we have u0 ∈ [x , x ]. 165 PROOF.",
                "The proof is similar to that of Claim 2.",
                "Let f(u−1) = (x − x )u−1 + x .",
                "Clearly, the player V−1 is indifferent between playing 0 and 1 if and only if u0 = f(u−1).",
                "Suppose that v−1 < 1/2.",
                "Then U0 strictly prefers to play 1, i.e., u0 = 1, so we have P1 (V−1) = P0 (V−1) + 1 − (x − x )u−1 − x .",
                "As 1 − x ≤ 1 − (x − x )u−1 − x ≤ 1 − x for u−1 ∈ [0, 1] and x < 1, we have P1 (V−1) > P0 (V−1), so V−1 prefers to play 1, a contradiction.",
                "Similarly, if v−1 > 1/2, the player U0 strictly prefers to play 0, i.e., u0 = 0, so we have P1 (V−1) = P0 (V−1) − (x − x )u−1 − x .",
                "As x < x , x > 0, we have P1 (V−1) < P0 (V−1), so V−1 prefers to play 0, a contradiction.",
                "Finally, if V−1 plays 1/2, but u0 = f(u−1), player V−1 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Also, note that f(0) = x , f(1) = x , and, moreover, f(u−1) ∈ [x , x ] if and only if u−1 ∈ [0, 1].",
                "Hence, in all Nash equilibria of this game we have u0 ∈ [x , x ].",
                "CLAIM 4.",
                "In all Nash equilibria of this game for each i = 0, . . . , k − 1, we have vi = 1/2, and the strategies of the players Ui and Ui+1 satisfy ui+1 = fi(ui), where f0(u) = u/(u + 1) and fi(u) = 1/(2 − u) for i > 0.",
                "PROOF.",
                "The proof of this claim is also similar to that of Claim 2.",
                "We use induction on i to prove that the statement of the claim is true and, additionally, ui = 1 for i > 0.",
                "For the base case i = 0, note that u0 = 0 by the previous claim (recall that x , x are selected so that x , x = 0, 1) and consider the triple (U0, V0, U1).",
                "Let v0 be the strategy of V0.",
                "First, suppose that v0 > 1/2.",
                "Then U1 strictly prefers to play 0, i.e., u1 = 0.",
                "Then for V0 we have P1 (V0) = P0 (V0) − u0.",
                "As u0 = 0, we have P1 (V0) < P0 (V0), which implies v1 = 0, a contradiction.",
                "Similarly, if v0 < 1/2, player U1 prefers to play 1, so we have u1 = 1.",
                "Hence, P1 (V0) = P0 (V0) + 1.",
                "It follows that P1 (V0) > P0 (V0), which implies v0 = 1, a contradiction.",
                "Finally, if v0 = 1/2, but u1 = u0/(u0 + 1), player V0 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as u1 = u0/(u0 + 1) and u0 ∈ [0, 1], we have u1 = 1.",
                "The argument for the inductive step is similar.",
                "Namely, suppose that the statement is proved for all i < i and consider the triple (Ui, Vi, Ui+1).",
                "Let vi be the strategy of Vi.",
                "First, suppose that vi > 1/2.",
                "Then Ui+1 strictly prefers to play 0, i.e., ui+1 = 0.",
                "Then for Vi we have P1 (Vi) = P0 (Vi)−1, i.e., P1 (Vi) < P0 (Vi), which implies vi = 0, a contradiction.",
                "Similarly, if vi < 1/2, player Ui+1 prefers to play 1, so we have ui+1 = 1.",
                "Hence, P1 (Vi) = P0 (Vi) + 1 − ui.",
                "By inductive hypothesis, we have ui < 1.",
                "Consequently, P1 (Vi) > P0 (Vi), which implies vi = 1, a contradiction.",
                "Finally, if vi = 1/2, but ui+1 = 1/(2 − ui), player Vi is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as ui+1 = 1/(2 − ui) and ui < 1, we have ui+1 < 1.",
                "CLAIM 5.",
                "Any strategy profile of the form (u−1, 1/2, u0, 1/2, u1, 1/2, . . . , uk−1, 1/2, uk), where u−1 ∈ [0, 1], u0 = (x − x )u−1 + x , u1 = u0/(u0 + 1), and ui+1 = 1/(2 − ui) for i ≥ 1 constitutes a Nash equilibrium.",
                "PROOF.",
                "First, the player U−1s payoffs do not depend on other players actions, so he is free to play any strategy in [0, 1].",
                "As long as u0 = (x −x )u−1 +x , player V−1 is indifferent between 0 and 1, so he is content to play 1/2; a similar argument applies to players V0, . . . , Vk−1.",
                "Finally, for each i = 0, . . . , k, the payoffs of player Ui only depend on the strategy of player Vi−1.",
                "In particular, as long as vi−1 = 1/2, player Ui is indifferent between playing 0 and 1, so he can play any mixed strategy ui ∈ [0, 1].",
                "To complete the proof, note that (x − x )u−1 + x ∈ [0, 1] for all u−1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] for all u0 ∈ [0, 1], and 1/(2 − ui) ∈ [0, 1] for all ui ∈ [0, 1], so we have ui ∈ [0, 1] for all i = 0, . . . , k. Now, let us compute the total payoff under a strategy profile of the form given in Claim 5.",
                "The payoff to U−1 is 0, and the expected payoff to each of the Ui, i = 0, . . . , k, is 1/2.",
                "The expected payoffs to V−1 and V0 are 0.",
                "Finally, for any i = 1, . . . , k − 1, the expected payoff to Vi is Ti = Aiuiui+1 − Aiui+1.",
                "It follows that to find a Nash equilibrium with the highest total payoff, we have to maximize Pk−1 i=1 Ti subject to conditions u−1 ∈ [0, 1], u0 = (x −x )u−1+x , u1 = u0/(u0+1), and ui+1 = 1/(2−ui) for i = 1, . . . , k − 1.",
                "We would like to express Pk−1 i=1 Ti as a function of u0.",
                "To simplify notation, set u = u0.",
                "LEMMA 2.",
                "For i = 1, . . . , k, we have ui = u+i−1 u+i .",
                "PROOF.",
                "The proof is by induction on i.",
                "For i = 1, we have u1 = u/(u + 1).",
                "Now, for i ≥ 2 suppose that ui−1 = (u + i − 2)/(u + i − 1).",
                "We have ui = 1/(2 − ui−1) = (u + i − 1)/(2u + 2i − 2 − u − i + 2) = (u + i − 1)/(u + i).",
                "It follows that for i = 1, . . . , k − 1 we have Ti = Ai u + i − 1 u + i u + i u + i + 1 − Ai u + i u + i + 1 = −Ai 1 u + i + 1 = Ki+1 u + i + 1 .",
                "Observe that as u−1 varies from 0 to 1, u varies from x to x .",
                "Therefore, to maximize the total payoff, we have to choose u ∈ [x , x ] so as to maximize K2 u + 2 + · · · + Kk u + k = R(u).",
                "By construction, the only maximum of R(u) on [x , x ] is α.",
                "It follows that in the payoff-maximizing Nash equilibrium of our game U0 plays α.",
                "Finally, note that the payoffs in our game are rational rather than integer.",
                "However, it is easy to see that we can multiply all payoffs to a player by their greatest common denominator without affecting his strategy.",
                "In the resulting game, all payoffs are integer.",
                "This concludes the proof of Theorem 2. 4.",
                "APPROXIMATING THE SOCIALLY OPTIMAL NASH EQUILIBRIUM We have seen that the Nash equilibrium that maximizes the social welfare may involve strategies that are not in Q.",
                "Hence, in this section we focus on finding a Nash equilibrium that is almost optimal from the social welfare perspective.",
                "We propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within from optimal.",
                "The running time of this algorithm is polynomial in 1/ , n and |Pmax| (recall that Pmax is the maximum absolute value of an entry of a payoff matrix).",
                "While the negative result of the previous section is for graphical games on paths, our algorithm applies to a wider range of scenarios.",
                "Namely, it runs in polynomial time on bounded-degree trees 166 as long as the best response policy of each vertex, given its parent, can be represented as a union of a polynomial number of rectangles.",
                "Note that path graphs always satisfy this condition: in [9] we showed how to compute such a representation, given a graph with maximum degree 2.",
                "Consequently, for path graphs the running time of our algorithm is guaranteed to be polynomial. (Note that [9] exhibits a family of graphical games on bounded-degree trees for which the best response policies of some of the vertices, given their parents, have exponential size, when represented as unions of rectangles.)",
                "Due to space restrictions, in this version of the paper we present the algorithm for the case where the graph underlying the graphical game is a path.",
                "We then state our result for the general case; the proof can be found in the full version of this paper [10].",
                "Suppose that s is a strategy profile for a graphical game G. That is, s assigns a mixed strategy to each vertex of G. let EPV (s) be the expected payoff of player V under s and let EP(s) =P V EPV (s).",
                "Let M(G) = max{EP(s) | s is a Nash equilibrium for G}.",
                "THEOREM 3.",
                "Suppose that G is a graphical game on an nvertex path.",
                "Then for any > 0 there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G)− .",
                "The running time of the algorithm is O(n4 P3 max/ 3 ) PROOF.",
                "Let {V1, . . . , Vn} be the set of all players.",
                "We start by constructing the best response policies for all Vi, i = 1, . . . , n − 1.",
                "As shown in [9], this can be done in time O(n3 ).",
                "Let N > 5n be a parameter to be selected later, set δ = 1/N, and define X = {jδ | j = 0, . . . , N}.",
                "We say that vj is an event point for a player Vi if it is a Vi-event point for B(Vi, Vi−1) or B(Vi+1, Vi).",
                "For each player Vi, consider a finite set of strategies Xi given by Xi = X ∪ {vj |vj is an event point for Vi}.",
                "It has been shown in [9] that for any i = 2, . . . , n, the best response policy B(Vi, Vi−1) has at most 2n + 4 Vi-event points.",
                "As we require N > 5n, we have |Xi| ≤ 2N; assume without loss of generality that |Xi| = 2N.",
                "Order the elements of Xi in increasing order as x1 i = 0 < x2 i < · · · < x2N i .",
                "We will refer to the strategies in Xi as discrete strategies of player Vi; a strategy profile in which each player has a discrete strategy will be referred to as a discrete strategy profile.",
                "We will now show that even we restrict each player Vi to strategies from Xi, the players can still achieve a Nash equilibrium, and moreover, the best such Nash equilibrium (with respect to the social welfare) has total payoff at least M(G) − as long as N is large enough.",
                "Let s be a strategy profile that maximizes social welfare.",
                "That is, let s = (s1, . . . , sn) where si is the mixed strategy of player Vi and EP(s) = M(G).",
                "For i = 1, . . . , n, let ti = max{xj i | xj i ≤ si}.",
                "First, we will show that the strategy profile t = (t1, . . . , tn) is a Nash equilibrium for G. Fix any i, 1 < i ≤ n, and let R = [v1, v2]×[u1, u2] be the rectangle in B(Vi, Vi−1) that contains (si, si−1).",
                "As v1 is a Vi-event point of B(Vi, Vi−1), we have v1 ≤ ti, so the point (ti, si−1) is inside R. Similarly, the point u1 is a Vi−1-event point of B(Vi, Vi−1), so we have u1 ≤ ti−1, and therefore the point (ti, ti−1) is inside R. This means that for any i, 1 < i ≤ n, we have ti−1 ∈ pbrVi−1 (ti), which implies that t = (t1, . . . , tn) is a Nash equilibrium for G. Now, let us estimate the expected loss in social welfare caused by playing t instead of s. LEMMA 3.",
                "For any pair of strategy profiles t, s such that |ti − si| ≤ δ we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ for any i = 1, . . . , n. PROOF.",
                "Let Pi klm be the payoff of the player Vi, when he plays k, Vi−1 plays l, and Vi+1 plays m. Fix i = 1, . . . , n and for k, l, m ∈ {0, 1}, set tklm = tk i−1(1 − ti−1)1−k tl i(1 − ti)1−l tm i+1(1 − ti+1)1−m sklm = sk i−1(1 − si−1)1−k sl i(1 − si)1−l sm i+1(1 − si+1)1−m .",
                "We have |EPVi (s) − EPVi (t)| ≤ X k,l,m=0,1 |Pi klm(tklm − sklm )| ≤ 8Pmax max klm |tklm − sklm | We will now show that for any k, l, m ∈ {0, 1} we have |tklm − sklm | ≤ 3δ; clearly, this implies the lemma.",
                "Indeed, fix k, l, m ∈ {0, 1}.",
                "Set x = tk i−1(1 − ti−1)1−k , x = sk i−1(1 − si−1)1−k , y = tl i(1 − ti)1−l , y = sl i(1 − si)1−l , z = tm i+1(1 − ti+1)1−m , z = sm i+1(1 − si+1)1−m .",
                "Observe that if k = 0 then x − x = (1 − ti−1) − (1 − si−1), and if k = 1 then x − x = ti−1 − si−1, so |x − x | ≤ δ.",
                "A similar argument shows |y − y | ≤ δ, |z − z | ≤ δ.",
                "Also, we have x, x , y, y , z, z ∈ [0, 1].",
                "Hence, |tklm −sklm | = |xyz−x y z | = |xyz − x yz + x yz − x y z + x y z − x y z | ≤ |x − x |yz + |y − y |x z + |z − z |x y ≤ 3δ.",
                "Lemma 3 implies Pn i=1 |EPVi (s) − EPVi (t)| ≤ 24nPmaxδ, so by choosing δ < /(24nPmax), or, equivalently, setting N > 24nPmax/ , we can ensure that the total expected payoff for the strategy profile t is within from optimal.",
                "We will now show that we can find the best discrete Nash equilibrium (with respect to the social welfare) using dynamic programming.",
                "As t is a discrete strategy profile, this means that the strategy profile found by our algorithm will be at least as good as t. Define ml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj , j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1, and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The values ml,k i , i = 1, . . . , n; k, l = 1, . . . , N, can be computed inductively, as follows.",
                "We have ml,k 1 = 0 for k, l = 1, . . . , N. Now, suppose that we have already computed ml,k j for all j < i; k, l = 1, . . . , N. To compute mk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this is not the case, we have ml,k i = −∞.",
                "Otherwise, consider the set Y = Xi−2 ∩ pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "The proof of Theorem 1 in [9] implies that the set pbrVi−2 (xl i−1) is non-empty: the player Vi−2 has a potential best response to any strategy of Vi−1, in particular, xl i−1.",
                "By construction of the set Xi−2, this implies that Y is not empty.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "Then we have ml,k i = max{mj,l i−1 + pjlk | xj i−2 ∈ Y }.",
                "Finally, suppose that we have computed ml,k n for l, k = 1, . . . , N. We still need to take into account the payoff of player Vn.",
                "Hence, 167 we consider all pairs (xk n, xl n−1) that satisfy xl n−1 ∈ pbrVn−1 (xk n), and pick the one that maximizes the sum of mk,l n and the payoff of Vn when he plays xk n and Vn−1 plays xl n−1.",
                "This results in the maximum total payoff the players can achieve in a Nash equilibrium using discrete strategies; the actual strategy profile that produces this payoff can be reconstructed using standard dynamic programming techniques.",
                "It is easy to see that each ml,k i can be computed in time O(N), i.e., all of them can be computed in time O(nN3 ).",
                "Recall that we have to select N ≥ (24nPmax)/ to ensure that the strategy profile we output has total payoff that is within from optimal.",
                "We conclude that we can compute an -approximation to the best Nash equilibrium in time O(n4 P3 max/ 3 ).",
                "This completes the proof of Theorem 3.",
                "To state our result for the general case (i.e., when the underlying graph is a bounded-degree tree rather than a path), we need additional notation.",
                "If G has n players, let q(n) be an upper bound on the number of event points in the representation of any best response policy.",
                "That is, we assume that for any vertex U with parent V , B(V, U) has at most q(n) event points.",
                "We will be interested in the situation in which q(n) is polynomial in n. THEOREM 4.",
                "Let G be an n-player graphical game on a tree in which each node has at most Δ children.",
                "Suppose we are given a set of best-response policies for G in which each best-response policy B(V, U) is represented by a set of rectangles with at most q(n) event points.",
                "For any > 0, there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G) − .",
                "The running time of the algorithm is polynomial in n, Pmax and −1 provided that the tree has bounded degree (that is, Δ = O(1)) and q(n) is a polynomial in n. In particular, if N = max((Δ + 1)q(n) + 1, n2Δ+2 (Δ + 2)Pmax −1 ) and Δ > 1 then the running time is O(nΔ(2N)Δ .",
                "For the proof of this theorem, see [10]. 4.1 A polynomial-time algorithm for multiplicative approximation The running time of our algorithm is pseudopolynomial rather than polynomial, because it includes a factor which is polynomial in Pmax, the maximum (in absolute value) entry in any payoff matrix.",
                "If we are interested in multiplicative approximation rather than additive one, this can be improved to polynomial.",
                "First, note that we cannot expect a multiplicative approximation for all inputs.",
                "That is, we cannot hope to have an algorithm that computes a Nash equilibrium with total payoff at least (1 − )M(G).",
                "If we had such an algorithm, then for graphical games G with M(G) = 0, the algorithm would be required to output the optimal solution.",
                "To show that this is infeasible, observe that we can use the techniques of Section 3.2 to construct two integercoefficient graphical games on paths of length O(n) such that for some X ∈ R the maximal total payoff in the first game is X, the maximal total payoff in the second game is −X, and for both games, the strategy profiles that achieve the maximal total payoffs involve algebraic numbers of degree n. By combining the two games so that the first vertex of the second game becomes connected to the last vertex of the first game, but the payoffs of all players do not change, we obtain a graphical game in which the best Nash equilibrium has total payoff 0, yet the strategies that lead to this payoff have high algebraic complexity.",
                "However, we can achieve a multiplicative approximation when all entries of the payoff matrices are positive and the ratio between any two entries is polynomially bounded.",
                "Recall that we assume that all payoffs are integer, and let Pmin > 0 be the smallest entry of any payoff matrix.",
                "In this case, for any strategy profile the payoff to player i is at least Pmin, so the total payoff in the social-welfare maximizing Nash equilibrium s satisfies M(G) ≥ nPmin.",
                "Moreover, Lemma 3 implies that by choosing δ < /(24Pmax/Pmin), we can ensure that the Nash equilibrium t produced by our algorithm satisfies nX i=1 EPVi (s) − nX i=1 EPVi (t) ≤ 24Pmaxδn ≤ nPmin ≤ M(G), i.e., for this value of δ we have Pn i=1 EPVi (t) ≥ (1 − )M(G).",
                "Recall that the running time of our algorithm is O(nN3 ), where N has to be selected to satisfy N > 5n, N = 1/δ.",
                "It follows that if Pmin > 0, Pmax/Pmin = poly(n), we can choose N so that our algorithm provides a multiplicative approximation guarantee and runs in time polynomial in n and 1/ . 5.",
                "BOUNDED PAYOFF NASH EQUILIBRIA Another natural way to define what is a good Nash equilibrium is to require that each players expected payoff exceeds a certain threshold.",
                "These thresholds do not have to be the same for all players.",
                "In this case, in addition to the payoff matrices of the n players, we are given n numbers T1, . . . , Tn, and our goal is to find a Nash equilibrium in which the payoff of player i is at least Ti, or report that no such Nash equilibrium exists.",
                "It turns out that we can design an FPTAS for this problem using the same techniques as in the previous section.",
                "THEOREM 5.",
                "Given a graphical game G on an n-vertex path and n rational numbers T1, . . . , Tn, suppose that there exists a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. Then for any > 0 we can find in time O(max{nP3 max/ 3 , n4 / 3 }) a strategy profile s such that s is a Nash equilibrium for G and EPVi (s ) ≥ Ti − for i = 1, . . . , n. PROOF.",
                "The proof is similar to that of Theorem 3.",
                "First, we construct the best response policies for all players, choose N > 5n, and construct the sets Xi, i = 1, . . . , n, as described in the proof of Theorem 3.",
                "Consider a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. We construct a strategy profile ti = max{xj i | xj i ≤ si} and use the same argument as in the proof of Theorem 3 to show that t is a Nash equilibrium for G. By Lemma 3, we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ, so choosing δ < /(24Pmax), or, equivalently, N > max{5n, 24Pmax/ }, we can ensure EPVi (t) ≥ Ti − for i = 1, . . . , n. Now, we will use dynamic programming to find a discrete Nash equilibrium that satisfies EPVi (t) ≥ Ti − for i = 1, . . . , n. As t is a discrete strategy profile, our algorithm will succeed whenever there is a strategy profile s with EPVi (s) ≥ Ti− for i = 1, . . . , n. Let zl,k i = 1 if there is a discrete strategy profile such that for any j < i the strategy of the player Vj is a potential best response to the strategy of Vj+1, the expected payoff of Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "Otherwise, let zl,k i = 0.",
                "We can compute zl,k i , i = 1, . . . , n; k, l = 1, . . . , N inductively, as follows.",
                "We have zl,k 1 = 1 for k, l = 1, . . . , N. Now, suppose that we have already computed zl,k j for all j < i; k, l = 1, . . . , N. To compute zk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this 168 is not the case, clearly, zk,l i = 0.",
                "Otherwise, consider the set Y = Xi−2 ∩pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "It has been shown in the proof of Theorem 3 that Y = ∅.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "If there exists an xj i−2 ∈ Y such that zj,l i−1 = 1 and pjlk ≥ Ti−2 − , set zl,k i = 1.",
                "Otherwise, set zl,k i = 0.",
                "Having computed zl,k n , l, k = 1, . . . , N, we check if zl,k n = 1 for some pair (l, k). if such a pair of indices exists, we instruct Vn to play xk n and use dynamic programming techniques (or, equivalently, the downstream pass of the algorithm of [13]) to find a Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n (recall that Vn is a dummy player, i.e., we assume Tn = 0, EPn(s ) = 0 for any choice of s ).",
                "If zl,k n = 0 for all l, k = 1, . . . , N, there is no discrete Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n and hence no Nash equilibrium s (not necessarily discrete) such that EPVi (s) ≥ Ti for i = 1, . . . , n. The running time analysis is similar to that for Theorem 3; we conclude that the running time of our algorithm is O(nN3 ) = O(max{nP3 max/ 3 , n4 / 3 }).",
                "REMARK 1.",
                "Theorem 5 can be extended to trees of bounded degree in the same way as Theorem 4. 5.1 Exact Computation Another approach to finding Nash equilibria with bounded payoffs is based on inductively computing the subsets of the best response policies of all players so as to exclude the points that do not provide sufficient payoffs to some of the players.",
                "Formally, we say that a strategy v of the player V is a potential best response to a strategy w of its parent W with respect to a threshold vector T = (T1, . . . , Tn), (denoted by v ∈ pbrV (w, T)) if there is an equilibrium in the instance G(V,W ),W =w in which V plays mixed strategy v and the payoff to any player Vi downstream of V (including V ) is at least Ti.",
                "The best response policy for V with respect to a threshold vector T is defined as B(W, V, T) = {(w, v) | v ∈ pbrV (w, T), w ∈ [0, 1]}.",
                "It is easy to see that if any of the sets B(Vj, Vj−1, T), j = 1, . . . , n, is empty, it means that it is impossible to provide all players with expected payoffs prescribed by T. Otherwise, one can apply the downstream pass of the original algorithm of [13] to find a Nash equilibrium.",
                "As we assume that Vn is a dummy vertex whose payoff is identically 0, the Nash equilibrium with these payoffs exists as long as Tn ≤ 0 and B(Vn, Vn−1, T) is not empty.",
                "Using the techniques developed in [9], it is not hard to show that for any j = 1, . . . , n, the set B(Vj , Vj−1, T) consists of a finite number of rectangles, and one can compute B(Vj+1, Vj , T) given B(Vj , Vj−1, T).",
                "The advantage of this approach is that it allows us to represent all Nash equilibria that provide required payoffs to the players.",
                "However, it is not likely to be practical, since it turns out that the rectangles that appear in the representation of B(Vj , Vj−1, T) may have irrational coordinates.",
                "CLAIM 6.",
                "There exists a graphical game G on a 3-vertex path UV W and a vector T = (T1, T2, T3) such that B(V, W, T) cannot be represented as a union of a finite number of rectangles with rational coordinates.",
                "PROOF.",
                "We define the payoffs to the players in G as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = uw, P1 (V ) = P0 (V ) + w − .8u − .1, where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = .8u + .1; observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "It is not hard to see that we have B(W, V ) = [0, .1]×{0} ∪ [.1, .9]×[0, 1] ∪ [.9, 1]×{1}.",
                "The payoffs to W are not important for our construction; for example, set P0(W ) = P0(W ) = 0.",
                "Now, set T = (0, 1/8, 0), i.e., we are interested in Nash equilibria in which V s expected payoff is at least 1/8.",
                "Suppose w ∈ [0, 1].",
                "The player V can play a mixed strategy v when W is playing w as long as U plays u = f−1 (w) = 5w/4 − 1/8 (to ensure that V is indifferent between 0 and 1) and P0 (V ) = P1 (V ) = uw = w(5w/4 − 1/8) ≥ 1/8.",
                "The latter condition is satisfied if w ≤ (1 − √ 41)/20 < 0 or w ≥ (1 + √ 41)/20.",
                "Note that we have .1 < (1 + √ 41)/20 < .9.",
                "For any other value of w, any strategy of U either makes V prefer one of the pure strategies or does not provide it with a sufficient expected payoff.",
                "There are also some values of w for which V can play a pure strategy (0 or 1) as a potential best response to W and guarantee itself an expected payoff of at least 1/8; it can be shown that these values of w form a finite number of segments in [0, 1].",
                "We conclude that any representation of B(W, V, T) as a union of a finite number of rectangles must contain a rectangle of the form [(1 + √ 41)/20, w ]×[v , v ] for some w , v , v ∈ [0, 1].",
                "On the other hand, it can be shown that for any integer payoff matrices and threshold vectors and any j = 1, . . . , n − 1, the sets B(Vj+1, Vj, T) contain no rectangles of the form [u , u ]×{v} or {v}×[w , w ], where v ∈ R\\Q.",
                "This means that if B(Vn, Vn−1, T) is non-empty, i.e., there is a Nash equilibrium with payoffs prescribed by T, then the downstream pass of the algorithm of [13] can always pick a strategy profile that forms a Nash equilibrium, provides a payoff of at least Ti to the player Vi, and has no irrational coordinates.",
                "Hence, unlike in the case of the Nash equilibrium that maximizes the social welfare, working with irrational numbers is not necessary, and the fact that the algorithm discussed in this section has to do so can be seen as an argument against using this approach. 6.",
                "OTHER CRITERIA FOR SELECTING A NASH EQUILIBRIUM In this section, we consider several other criteria that can be useful in selecting a Nash equilibrium. 6.1 Combining welfare maximization with bounds on payoffs In many real life scenarios, we want to maximize the social welfare subject to certain restrictions on the payoffs to individual players.",
                "For example, we may want to ensure that no player gets a negative expected payoff, or that the expected payoff to player i is at least Pi max − ξ, where Pi max is the maximum entry of is payoff matrix and ξ is a fixed parameter.",
                "Formally, given a graphical game G and a vector T1, . . . , Tn, let S be the set of all Nash equilibria s of G that satisfy Ti ≤ EPVi (s) for i = 1, . . . , n, and let ˆs = argmaxs∈S EP(s).",
                "If the set S is non-empty, we can find a Nash equilibrium ˆs that is -close to satisfying the payoff bounds and is within from ˆs with respect to the total payoff by combining the algorithms of Section 4 and Section 5.",
                "Namely, for a given > 0, choose δ as in the proof of Theorem 3, and let Xi be the set of all discrete strategies of player Vi (for a 169 formal definition, see the proof of Theorem 3).",
                "Combining the proofs of Theorem 3 and Theorem 5, we can see that the strategy profile ˆt given by ˆti = max{xj i | xj i ≤ ˆsi} satisfies EPVi (ˆt) ≥ Ti − , |EP(ˆs) − EP(ˆt)| ≤ .",
                "Define ˆml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj, j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1 and the payoff to player Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The ˆml,k i can be computed by dynamic programming similarly to the ml,k i and zl,k i in the proofs of Theorems 3 and 5.",
                "Finally, as in the proof of Theorem 3, we use ml,k n to select the best discrete Nash equilibrium subject to the payoff constraints.",
                "Even more generally, we may want to maximize the total payoff to a subset of players (who are assumed to be able to redistribute the profits fairly among themselves) while guaranteeing certain expected payoffs to (a subset of) the other players.",
                "This problem can be handled similarly. 6.2 A minimax approach A more egalitarian measure of the quality of a Nash equilibrium is the minimal expected payoff to a player.",
                "The optimal solution with respect to this measure is a Nash equilibrium in which the minimal expected payoff to a player is maximal.",
                "To find an approximation to such a Nash equilibrium, we can combine the algorithm of Section 5 with binary search on the space of potential lower bounds.",
                "Note that the expected payoff to any player Vi given a strategy s always satisfies −Pmax ≤ EPVi (s) ≤ Pmax.",
                "For a fixed > 0, we start by setting T = −Pmax, T = Pmax, T∗ = (T + T )/2.",
                "We then run the algorithm of Section 5 with T1 = · · · = Tn = T∗ .",
                "If the algorithm succeeds in finding a Nash equilibrium s that satisfies EPVi (s ) ≥ T∗ − for all i = 1, . . . , n, we set T = T∗ , T∗ = (T + T )/2; otherwise, we set T = T∗ , T∗ = (T + T )/2 and loop.",
                "We repeat this process until |T − T | ≤ .",
                "It is not hard to check that for any p ∈ R, if there is a Nash equilibrium s such that mini=1,...,n EPVi (s) ≥ p, then our algorithm outputs a Nash equilibrium s that satisfies mini=1,...,n EPVi (s) ≥ p−2 .",
                "The running time of our algorithm is O(max{nP3 max log −1 / 3 , n4 log −1 / 3 }). 6.3 Equalizing the payoffs When the players payoff matrices are not very different, it is reasonable to demand that the expected payoffs to the players do not differ by much either.",
                "We will now show that Nash equilibria in this category can be approximated in polynomial time as well.",
                "Indeed, observe that the algorithm of Section 5 can be easily modified to deal with upper bounds on individual payoffs rather than lower bounds.",
                "Moreover, we can efficiently compute an approximation to a Nash equilibrium that satisfies both the upper bound and the lower bound for each player.",
                "More precisely, suppose that we are given a graphical game G, 2n rational numbers T1, . . . , Tn, T1, . . . , Tn and > 0.",
                "Then if there exists a strategy profile s such that s is a Nash equilibrium for G and Ti ≤ EPVi (s) ≤ Ti for i = 1, . . . , n, we can find a strategy profile s such that s is a Nash equilibrium for G and Ti − ≤ EPVi (s ) ≤ Ti + for i = 1, . . . , n. The modified algorithm also runs in time O(max{nP3 max/ 3 , [4]n4 / 3 }).",
                "This observation allows us to approximate Nash equilibria in which all players expected payoffs differ by at most ξ for any fixed ξ > 0.",
                "Given an > 0, we set T1 = · · · = Tn = −Pmax, T1 = · · · = Tn = −Pmax + ξ + , and run the modified version of the algorithm of Section 5.",
                "If it fails to find a solution, we increment all Ti, Ti by and loop.",
                "We continue until the algorithm finds a solution, or Ti ≥ Pmax.",
                "Suppose that there exists a Nash equilibrium s that satisfies |EPVi (s) − EPVj (s)| ≤ ξ for all i, j = 1, . . . , n. Set r = mini=1,...,n EPVi (s); we have r ≤ EPVi (s) ≤ r + ξ for all i = 1, . . . , n. There exists a k ≥ 0 such that −Pmax + (k − 1) ≤ r ≤ −Pmax + k .",
                "During the kth step of the algorithm, we set T1 = · · · = Tn = −Pmax +(k−1) , i.e., we have r− ≤ Ti ≤ r, r + ξ ≤ Ti ≤ r + ξ + .",
                "That is, the Nash equilibrium s satisfies Ti ≤ r ≤ EPVi (s) ≤ r + ξ ≤ Ti , which means that when Ti is set to −Pmax + (k − 1) , our algorithm is guaranteed to output a Nash equilibrium t that satisfies r − 2 ≤ Ti − ≤ EPVi (t) ≤ Ti + ≤ r +ξ +2 .",
                "We conclude that whenever such a Nash equilibrium s exists, our algorithm outputs a Nash equilibrium t that satisfies |EPVi (t) − EPVj (t)| ≤ ξ + 4 for all i, j = 1, . . . , n. The running time of this algorithm is O(max{nP3 max/ 4 , n4 / 4 }).",
                "Note also that we can find the smallest ξ for which such a Nash equilibrium exists by combining this algorithm with binary search over the space ξ = [0, 2Pmax].",
                "This identifies an approximation to the fairest Nash equilibrium, i.e., one in which the players expected payoffs differ by the smallest possible amount.",
                "Finally, note that all results in this section can be extended to bounded-degree trees. 7.",
                "CONCLUSIONS We have studied the problem of equilibrium selection in graphical games on bounded-degree trees.",
                "We considered several criteria for selecting a Nash equilibrium, such as maximizing the social welfare, ensuring a lower bound on the expected payoff of each player, etc.",
                "First, we focused on the algebraic complexity of a social welfare-maximizing Nash equilibrium, and proved strong negative results for that problem.",
                "Namely, we showed that even for graphical games on paths, any algebraic number α ∈ [0, 1] may be the only strategy available to some player in all social welfaremaximizing Nash equilibria.",
                "This is in sharp contrast with the fact that graphical games on trees always possess a Nash equilibrium in which all players strategies are rational numbers.",
                "We then provided approximation algorithms for selecting Nash equilibria with special properties.",
                "While the problem of finding approximate Nash equilibria for various classes of games has received a lot of attention in recent years, most of the existing work aims to find -Nash equilibria that satisfy (or are -close to satisfying) certain properties.",
                "Our approach is different in that we insist on outputting an exact Nash equilibrium, which is -close to satisfying a given requirement.",
                "As argued in the introduction, there are several reasons to prefer a solution that constitutes an exact Nash equilibrium.",
                "Our algorithms are fully polynomial time approximation schemes, i.e., their running time is polynomial in the inverse of the approximation parameter , though they may be pseudopolynomial with respect to the input size.",
                "Under mild restrictions on the inputs, they can be modified to be truly polynomial.",
                "This is the strongest positive result one can derive for a problem whose exact solutions may be hard to represent, as is the case for many of the problems considered here.",
                "While we prove our results for games on a path, they can be generalized to any tree for which the best response policies have compact representations as unions of rectangles.",
                "In the full version of the paper we describe our algorithms for the general case.",
                "Further work in this vein could include extensions to the kinds of guarantees sought for Nash equilibria, such as guaranteeing total payoffs for subsets of players, selecting equilibria in which some players are receiving significantly higher payoffs than their peers, etc.",
                "At the moment however, it is perhaps more important to inves170 tigate whether Nash equilibria of graphical games can be computed in a decentralized manner, in contrast to the algorithms we have introduced here.",
                "It is natural to ask if our results or those of [9] can be generalized to games with three or more actions.",
                "However, it seems that this will make the analysis significantly more difficult.",
                "In particular, note that one can view the bounded payoff games as a very limited special case of games with three actions per player.",
                "Namely, given a two-action game with payoff bounds, consider a game in which each player Vi has a third action that guarantees him a payoff of Ti no matter what everyone else does.",
                "Then checking if there is a Nash equilibrium in which none of the players assigns a nonzero probability to his third action is equivalent to checking if there exists a Nash equilibrium that satisfies the payoff bounds in the original game, and Section 5.1 shows that finding an exact solution to this problem requires new ideas.",
                "Alternatively it may be interesting to look for similar results in the context of correlated equilibria (CE), especially since the best CE may have higher value (total expected payoff) than the best NE.",
                "The ratio between these values is called the mediation value in [1].",
                "It is known from [1] that the mediation value of 2-player, 2-action games with non-negative payoffs is at most 4 3 , and they exhibit a 3-player game for which it is infinite.",
                "Furthermore, a 2-player, 3action example from [1] also has infinite mediation value. 8.",
                "REFERENCES [1] I. Ashlagi, D. Monderer and M. Tenneholtz, On the Value of Correlation, Proceedings of Dagstuhl seminar 05011 (2005) [2] R. Aumann, Subjectivity and Correlation in Randomized Strategies, Journal of Mathematical Economics 1 pp. 67-96 (1974) [3] B. Blum, C. R. Shelton, and D. Koller, A Continuation Method for Nash Equilibria in Structured Games, Proceedings of IJCAI03 [4] X. Chen, X. Deng and S. Teng, Computing Nash Equilibria: Approximation and Smoothed Complexity, Proceedings of FOCS06 [5] X. Chen, X. Deng, Settling the Complexity of 2-Player Nash-Equilibrium, Proceedings of FOCS06 [6] V. Conitzer and T. Sandholm, Complexity Results about Nash Equilibria, Proceedings of IJCAI03 [7] C. Daskalakis, P. W. Goldberg and C. H. Papadimitriou, The Complexity of Computing a Nash Equilibrium, Proceedings of STOC06 [8] R. S. Datta, Universality of Nash Equilibria, Mathematics of Operations Research 28:3, 2003 [9] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Nash Equilibria in Graphical games on Trees Revisited, Proceedings of ACM EC06 [10] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Computing Good Nash Equilibria in Graphical Games, http://arxiv.org/abs/cs.GT/0703133 [11] I. Gilboa and E. Zemel, Nash and Correlated Equilibria: Some Complexity Considerations, Games and Economic Behavior, 1 pp. 80-93 (1989) [12] P. W. Goldberg and C. H. Papadimitriou, Reducibility Among Equilibrium Problems, Proceedings of STOC06 [13] M. Kearns, M. Littman, and S. Singh, Graphical Models for Game Theory, Proceedings of UAI01 [14] M. Littman, M. Kearns, and S. Singh, An Efficient Exact Algorithm for Singly Connected Graphical Games, Proceedings of NIPS01 [15] R. Lipton and E. Markakis, Nash Equilibria via Polynomial Equations, Proceedings of LATIN04 [16] L. Ortiz and M. Kearns, Nash Propagation for Loopy Graphical Games, Proceedings of NIPS03 [17] C.H.",
                "Papadimitriou, Computing Correlated Equilibria in Multi-Player Games, Proceedings of STOC05 [18] C.H.",
                "Papadimitriou and T. Roughgarden, Computing Equilibria in Multi-Player Games, Proceedings of SODA05 [19] D. Vickrey and D. Koller, Multi-agent Algorithms for Solving Graphical Games, Proceedings of AAAI02 171"
            ],
            "original_annotated_samples": [
                "While -Nash equilibria are often easier to compute than exact Nash equilibria, this solution concept has <br>several drawback</br>s."
            ],
            "translated_annotated_samples": [
                "Si bien los equilibrios de Nash aproximados suelen ser más fáciles de calcular que los equilibrios de Nash exactos, este concepto de solución tiene <br>varias desventajas</br>."
            ],
            "translated_text": "Calcular buenos equilibrios de Nash en juegos gráficos ∗ Edith Elkind Universidad Hebrea de Jerusalén, Israel, y Universidad de Southampton, Southampton, SO17 1BJ, Reino Unido. Leslie Ann Goldberg Universidad de Liverpool Liverpool L69 3BX, Reino Unido. Paul Goldberg Universidad de Liverpool Liverpool L69 3BX, Reino Unido. RESUMEN Este artículo aborda el problema de la selección justa de equilibrios en juegos gráficos. Nuestro enfoque se basa en la estructura de datos llamada política de mejor respuesta, propuesta por Kearns et al. [13] como una forma de representar todos los equilibrios de Nash de un juego gráfico. En [9], se demostró que la política de mejor respuesta tiene un tamaño polinómico siempre y cuando el grafo subyacente sea un camino. En este artículo, demostramos que si el grafo subyacente es un árbol de grado acotado y la política de mejor respuesta tiene un tamaño polinómico, entonces existe un algoritmo eficiente que construye un equilibrio de Nash que garantiza ciertos pagos a todos los participantes. Otro concepto de solución atractivo es un equilibrio de Nash que maximiza el bienestar social. Mostramos que, si bien calcular exactamente lo último es inviable (demostramos que resolver este problema puede implicar números algebraicos de un grado arbitrariamente alto), existe un FPTAS para encontrar dicho equilibrio siempre y cuando la política de mejor respuesta tenga un tamaño polinómico. Estos dos algoritmos pueden combinarse para producir equilibrios de Nash que satisfacen varios criterios de equidad. Categorías y Descriptores de Asignaturas F.2 [Teoría de la Computación]: Análisis de Algoritmos y Complejidad de Problemas; J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento - Economía Términos Generales Algoritmos, Economía, Teoría 1. INTRODUCCIÓN En una gran comunidad de agentes, es poco probable que el comportamiento de un agente tenga un efecto directo en la mayoría de los otros agentes: más bien, solo serán afectados los agentes que estén lo suficientemente cerca de él. Sin embargo, a medida que estos agentes responden adaptando su comportamiento, más agentes sentirán las consecuencias y eventualmente las decisiones tomadas por un solo agente se propagarán por toda la comunidad. Esta es la intuición detrás de los juegos gráficos, los cuales fueron introducidos por Kearns, Littman y Singh en [13] como un esquema de representación compacto para juegos con muchos jugadores. En un juego gráfico de n jugadores, a cada jugador se le asocia un vértice de un grafo subyacente G, y las ganancias de cada jugador dependen de su acción, así como de las acciones de sus vecinos en el grafo. Si el grado máximo de G es Δ, y cada jugador tiene dos acciones disponibles, entonces el juego se puede representar usando n2Δ+1 números. Por el contrario, necesitamos n^2 números para representar un juego general de n jugadores y 2 acciones, lo cual solo es práctico para valores pequeños de n. Para juegos gráficos con Δ constante, el tamaño del juego es lineal en n. Uno de los problemas más naturales para un juego gráfico es el de encontrar un equilibrio de Nash, cuya existencia se deriva del célebre teorema de Nash (ya que los juegos gráficos son solo un caso especial de juegos de n jugadores). El primer intento de abordar este problema se realizó en [13], donde los autores consideran juegos gráficos con dos acciones por jugador en los que el grafo subyacente es un árbol de grado acotado. Proponen un algoritmo genérico para encontrar equilibrios de Nash que puede ser especializado de dos maneras: un algoritmo de tiempo exponencial para encontrar un equilibrio de Nash (exacto) y un esquema de aproximación de tiempo polinómico completo (FPTAS) para encontrar una aproximación a un equilibrio de Nash. Para cualquier > 0, este algoritmo produce un equilibrio de Nash, que es un perfil estratégico en el que ningún jugador puede mejorar su pago más que al cambiar unilateralmente su estrategia. Si bien los equilibrios de Nash aproximados suelen ser más fáciles de calcular que los equilibrios de Nash exactos, este concepto de solución tiene <br>varias desventajas</br>. Primero, es posible que los jugadores sean sensibles a una pequeña pérdida en las ganancias, por lo que el perfil estratégico que es un equilibrio de Nash no será estable. Esto será así incluso si solo hay un pequeño subconjunto de jugadores que son extremadamente sensibles al precio, y para una gran población de jugadores puede ser difícil elegir un valor que satisfaga a todos. Segundo, los perfiles estratégicos que están cerca de ser equilibrios de Nash pueden ser mucho mejores con respecto a las propiedades consideradas que los equilibrios de Nash exactos. Por lo tanto, la aproximación al valor de la mejor solución que corresponde a un equilibrio de Nash aproximado puede no ser indicativa de lo que se puede lograr bajo un equilibrio de Nash exacto. Esto es especialmente importante si el propósito de la solución aproximada es proporcionar un buen punto de referencia para un sistema de agentes egoístas, ya que el punto de referencia implícito por un equilibrio de Nash puede ser poco realista. Por estas razones, en este artículo nos enfocamos en el problema de calcular equilibrios de Nash exactos. Basándose en las ideas de [14], Elkind et al. [9] mostraron cómo encontrar un equilibrio de Nash (exacto) en tiempo polinómico cuando el grafo subyacente tiene grado 2 (es decir, cuando el grafo es una colección de caminos y ciclos). Por el contrario, encontrar un equilibrio de Nash en un grafo general con grado acotado parece ser computacionalmente intratable: se ha demostrado (ver [5, 12, 7]) que es completo para la clase de complejidad PPAD. [9] extiende este resultado de dificultad al caso en el que el grafo subyacente tiene un ancho de camino acotado. Un juego gráfico puede no tener un equilibrio de Nash único, de hecho, puede tener exponencialmente muchos. Además, algunos equilibrios de Nash son más deseables que otros. En lugar de tener un algoritmo que simplemente encuentre algún equilibrio de Nash, nos gustaría tener algoritmos para encontrar equilibrios de Nash con diversas propiedades socialmente deseables, como maximizar el pago total o distribuir las ganancias de manera justa. Una propiedad útil de la estructura de datos de [13] es que representa simultáneamente el conjunto de todos los equilibrios de Nash del juego subyacente. Si esta representación tiene tamaño polinómico (como es el caso de los caminos, como se muestra en [9]), se puede esperar extraer de ella un equilibrio de Nash con las propiedades deseadas. De hecho, en [13] los autores mencionan que esto es posible si uno está interesado en encontrar un equilibrio de Nash (aproximado). El objetivo de este artículo es extender esto a equilibrios de Nash exactos. 1.1 Nuestros Resultados En este artículo, estudiamos juegos gráficos de n jugadores y 2 acciones en árboles de grado acotado para los cuales la estructura de datos de [13] tiene tamaño polinómico en n. Nos enfocamos en el problema de encontrar equilibrios de Nash exactos con ciertas propiedades socialmente deseables. En particular, mostramos cómo encontrar un equilibrio de Nash que maximiza (casi) el bienestar social, es decir, la suma de las ganancias de los jugadores, y mostramos cómo encontrar un equilibrio de Nash que satisface (casi) los límites de ganancias prescritos para todos los jugadores. Los juegos gráficos en árboles de grado acotado tienen una estructura algebraica simple. Una característica atractiva, que se desprende de [13], es que cada juego de este tipo tiene un equilibrio de Nash en el cual la estrategia de cada jugador es un número racional. La sección 3 estudia la estructura algebraica de aquellos equilibrios de Nash que maximizan el bienestar social. Demostramos (Teoremas 1 y 2) que, sorprendentemente, el conjunto de equilibrios de Nash que maximizan el bienestar social es más complejo. De hecho, para cualquier número algebraico α ∈ [0, 1] con grado a lo sumo n, exhibimos un juego gráfico en un camino de longitud O(n) tal que, en el equilibrio de Nash único que maximiza el bienestar social de este juego, uno de los jugadores juega la estrategia mixta α. Este resultado muestra que puede ser difícil representar un equilibrio de Nash óptimo. Parece ser una característica novedosa del escenario que consideramos aquí, que un equilibrio de Nash óptimo es difícil de representar, en una situación donde es fácil encontrar y representar un equilibrio de Nash. Dado que el equilibrio de Nash que maximiza el bienestar social puede ser difícil de representar eficientemente, debemos conformarnos con una aproximación. Sin embargo, la diferencia crucial entre nuestro enfoque y el de los trabajos anteriores [13, 16, 19] es que requerimos que nuestro algoritmo produzca un equilibrio de Nash exacto, aunque no necesariamente el óptimo con respecto a nuestros criterios. En la Sección 4, describimos un algoritmo que cumple con este requisito. Específicamente, proponemos un algoritmo que, para cualquier > 0, encuentra un equilibrio de Nash cuya recompensa total está dentro de de lo óptimo. Se ejecuta en tiempo polinómico (Teorema 3,4) para cualquier juego gráfico en un árbol de grado acotado para el cual la estructura de datos propuesta por [13] (la llamada política de mejor respuesta, definida a continuación) tiene un tamaño poli(n) (nota que, como se muestra en [9], esto siempre es el caso cuando el grafo subyacente es un camino). Un resultado relacionado en un contexto diferente fue obtenido por Datta [8], quien muestra que los juegos de n jugadores con 2 acciones son universales en el sentido de que cualquier variedad algebraica real puede ser representada como el conjunto de equilibrios de Nash totalmente mixtos de tales juegos. Precisamente, el tiempo de ejecución de nuestro algoritmo es polinómico en n, Pmax y 1/, donde Pmax es el valor absoluto máximo de una entrada de una matriz de pagos, es decir, es un algoritmo seudopolinómico, aunque es completamente polinómico con respecto a . Mostramos (Sección 4.1) que bajo ciertas restricciones en las matrices de pagos, el algoritmo puede ser transformado en un algoritmo de tiempo polinómico (verdaderamente) que produce un equilibrio de Nash cuya ganancia total está dentro de un factor de 1 − del óptimo. En la Sección 5, consideramos el problema de encontrar un equilibrio de Nash en el que la ganancia esperada de cada jugador Vi supere un umbral prescrito Ti. Usando la idea de la Sección 4, presentamos (Teorema 5) un esquema de aproximación en tiempo polinómico completo para este problema. El tiempo de ejecución del algoritmo está acotado por un polinomio en n, Pmax y . Si la instancia tiene un equilibrio de Nash que cumple con los umbrales prescritos, entonces el algoritmo construye un equilibrio de Nash en el que la recompensa esperada de cada jugador Vi es al menos Ti − . En la Sección 6, presentamos otros criterios naturales para seleccionar un buen equilibrio de Nash y mostramos que los algoritmos descritos en las dos secciones anteriores pueden ser utilizados como bloques de construcción para encontrar equilibrios de Nash que cumplan con estos criterios. En particular, en la Sección 6.1 mostramos cómo encontrar un equilibrio de Nash que aproxima el máximo bienestar social, garantizando que la ganancia de cada individuo esté cerca de un umbral prescrito. En la Sección 6.2 mostramos cómo encontrar un equilibrio de Nash que maximiza (casi) al máximo el pago individual mínimo. Finalmente, en la Sección 6.3 mostramos cómo encontrar un equilibrio de Nash en el que las ganancias individuales de los jugadores están cerca unas de otras. 1.2 Trabajo Relacionado Nuestro esquema de aproximación (Teorema 3 y Teorema 4) muestra un contraste entre los juegos que estudiamos y los juegos de n acciones de dos jugadores, para los cuales los problemas correspondientes suelen ser intratables. Para juegos de n acciones de dos jugadores, el problema de encontrar equilibrios de Nash con propiedades especiales suele ser NP-duro. En particular, este es el caso de los equilibrios de Nash que maximizan el bienestar social [11, 6]. Además, es probable que sea intratable incluso aproximarse a tales equilibrios. En particular, Chen, Deng y Teng [4] muestran que existe algún , polinomio inverso en n, para el cual calcular un equilibrio de Nash en juegos de 2 jugadores con n acciones por jugador es PPAD-completo. Lipton y Markakis [15] estudian las propiedades algebraicas de los equilibrios de Nash, y señalan que los algoritmos estándar de eliminación de cuantificadores pueden ser utilizados para resolverlos. Ten en cuenta que estos algoritmos no son de tiempo polinómico en general. Los juegos que estudiamos en este artículo tienen equilibrios de Nash computables en tiempo polinómico en los que todas las estrategias mixtas son números racionales, pero un equilibrio de Nash óptimo puede incluir necesariamente estrategias mixtas con un alto grado algebraico. Un equilibrio correlacionado (CE) (introducido por Aumann [2]) es una distribución sobre vectores de acciones de jugadores con la propiedad de que si a cualquier jugador se le dice su propia acción (el valor de su propio componente) de un vector generado por esa distribución, entonces no puede aumentar su ganancia esperada cambiando su acción. Cualquier equilibrio de Nash es una EC, pero la afirmación contraria no se cumple en general. A diferencia de los equilibrios de Nash, los equilibrios correlacionados se pueden encontrar para juegos gráficos de bajo grado (así como para otras clases de juegos multijugador representados de manera concisa) en tiempo polinómico [17]. Pero, para juegos gráficos es NP-duro encontrar un equilibrio correlacionado que maximice la recompensa total [18]. Sin embargo, los resultados de NP-dificultad se aplican a juegos más generales que el que consideramos aquí, en particular los grafos no son árboles. Del [2] también se sabe que existen juegos de 2 jugadores y 2 acciones para los cuales el pago total esperado 163 del mejor equilibrio correlacionado es mayor que el mejor equilibrio de Nash, y discutimos este tema más a fondo en la Sección 7.2. CONSIDERACIONES PRELIMINARES Y NOTACIÓN Consideramos juegos gráficos en los que el grafo subyacente G es un árbol de n vértices, en el que cada vértice tiene a lo sumo Δ hijos. Cada vértice tiene dos acciones, que están representadas por 0 y 1. Una estrategia mixta de un jugador V se representa como un único número v ∈ [0, 1], que denota la probabilidad de que V seleccione la acción 1. Para los propósitos del algoritmo, el árbol está enraizado de manera arbitraria. Para mayor comodidad, asumimos sin pérdida de generalidad que la raíz tiene un solo hijo y que su recompensa es independiente de la acción elegida por el hijo. Esto se puede lograr primero eligiendo una raíz arbitraria del árbol, y luego agregando un padre ficticio de esta raíz, asignándole una función de recompensa constante, por ejemplo, 0. Dado un borde (V, W) del árbol G, y una estrategia mixta w para W, sea G(V,W), W=w la instancia obtenida de G mediante (1) eliminar todos los nodos Z que están separados de V por W (es decir, todos los nodos Z tales que el camino de Z a V pasa por W), y (2) restringir la instancia de modo que se requiera que W juegue la estrategia mixta w. Definición 1. Supongamos que (V, W) es una arista del árbol, que v es una estrategia mixta para V y que w es una estrategia mixta para W. Decimos que v es una mejor respuesta potencial a w (denotado por v ∈ pbrV (w)) si hay un equilibrio en la instancia G(V,W), W = w en el que V tiene una estrategia mixta v. Definimos la política de mejor respuesta para V, dada W, como B(W, V) = {(w, v) | v ∈ pbrV (w), w ∈ [0, 1]}. El paso ascendente del algoritmo genérico de [13] considera cada nodo V (que no sea la raíz) y calcula la política de mejor respuesta para V dada su padre. Con las suposiciones anteriores sobre la raíz, el paso aguas abajo es sencillo. La raíz selecciona una estrategia mixta w para la raíz W y una estrategia mixta v ∈ B(W, V) para cada hijo V de W. Indica a cada niño V que juegue v. El resto del pase descendente es recursivo. Cuando un nodo V recibe instrucciones de su padre para adoptar la estrategia mixta v, realiza lo siguiente para cada hijo U: encuentra un par (v, u) ∈ B(V, U) (con el mismo valor de v que le fue dado por su padre) e instruye a U a jugar u. La mejor política de respuesta para un vértice U dado su padre V puede representarse como una unión de rectángulos, donde un rectángulo está definido por un par de intervalos cerrados (IV, IU) y consiste en todos los puntos en IV × IU; puede ser el caso de que uno o ambos de los intervalos IV e IU consistan en un solo punto. Para realizar cálculos en B(V, U) y para limitar el número de rectángulos, [9] utilizó el concepto de un punto de evento, el cual se define de la siguiente manera. Para cualquier conjunto A ⊆ [0, 1]2 que se represente como una unión de un número finito de rectángulos, decimos que un punto u ∈ [0, 1] en el eje U es un punto de evento U de A si u = 0 o u = 1 o la representación de A contiene un rectángulo de la forma IV × IU y u es un extremo de IU; los puntos de evento V se definen de manera similar. Para muchos juegos considerados en este documento, el grafo subyacente es un camino de n vértices, es decir, un grafo G = (V, E) con V = {V1, . . . , Vn} y E = {(V1, V2), . . . , (Vn−1, Vn)}. En [9], se demostró que para tales juegos, la política de mejor respuesta tiene solo un número polinomial de rectángulos. La prueba de que el número de rectángulos en B(Vj+1, Vj) es polinomial procede primero mostrando que el número de puntos de evento en B(Vj+1, Vj) no puede exceder el número de puntos de evento en B(Vj, Vj-1) en más de 2, y utilizando este hecho para acotar el número de rectángulos en B(Vj+1, Vj). Sean P0 (V) y P1 (V) las ganancias esperadas para V cuando juega 0 y 1, respectivamente. Tanto P0 (V) como P1 (V) son funciones multilineales de las estrategias de los vecinos de V. En lo que sigue, usaremos frecuentemente la siguiente observación simple. AFIRMACIÓN 1. Para un vértice V con un único hijo U y padre W, dados cualquier A, B, C, D ∈ Q, se pueden seleccionar las recompensas para V de manera que P0(V) = Auw + Bu + Cw + D, P1(V) = Auw + Bu + Cw + D. Además, si todos los valores de A, B, C, D son enteros, los pagos para V también son enteros. PRUEBA. Daremos la prueba para P0 (V); la prueba para P1 (V) es similar. Para i, j = 0, 1, sea Pij la ganancia para V cuando U juega i, V juega 0 y W juega j. Tenemos P0 (V) = P00(1 − u)(1 − w) + P10u(1 − w) + P01(1 − u)w + P11uw. Tenemos que seleccionar los valores de Pij de manera que P00 − P10 − P01 + P11 = A, −P00 + P10 = B, −P00 + P01 = C, P00 = D. Es fácil ver que la solución única está dada por P00 = D, P01 = C + D, P10 = B + D, P11 = A + B + C + D. La entrada a todos los algoritmos considerados en este documento incluye las matrices de pago para cada jugador. Suponemos que todos los elementos de estas matrices son enteros. Sea Pmax el mayor valor absoluto de cualquier elemento de cualquier matriz de pagos. Entonces, la entrada consiste en un máximo de n2Δ+1 números, cada uno de los cuales puede ser representado usando log Pmax bits. EQUILIBRIOS DE NASH QUE MAXIMIZAN EL BIENESTAR SOCIAL: SOLUCIONES EN R \\ Q Desde el punto de vista del bienestar social, el mejor equilibrio de Nash es aquel que maximiza la suma de las ganancias esperadas de los jugadores. Lamentablemente, resulta que calcular exactamente dicho perfil estratégico no es posible: en esta sección, mostramos que incluso si todas las ganancias de los jugadores son números enteros, el perfil estratégico que maximiza la ganancia total puede tener coordenadas irracionales; además, puede involucrar números algebraicos de un grado arbitrario. 3.1 Calentamiento: irracionales cuadráticos Comenzamos proporcionando un ejemplo de un juego gráfico en un camino de longitud 3 con ganancias enteras tal que en el equilibrio de Nash que maximiza la ganancia total, uno de los jugadores tiene una estrategia en R \\ Q. En la siguiente subsección, extenderemos este ejemplo a números algebraicos de grado arbitrario n; para hacerlo, debemos considerar caminos de longitud O(n). TEOREMA 1. Existe un juego gráfico G de pago entero en un camino de 3 vértices UVW tal que, en cualquier equilibrio de Nash de G que maximice el bienestar social, la estrategia u del jugador U y el pago total p cumplen u, p ∈ R \\ Q. PRUEBA. Las recompensas para los jugadores en G están especificadas de la siguiente manera. La ganancia para U es idénticamente 0, es decir, P0 (U) = P1 (U) = 0. Usando la Reclamación 1, seleccionamos las ganancias para V de modo que P0 (V) = -uw + 3w y P1 (V) = P0 (V) + w(u + 2) - (u + 1), donde u y w son las estrategias (mixtas) de U y W, respectivamente. Se deduce que V es indiferente entre jugar 0 y 1 si y solo si w = f(u) = u+1 u+2. Observa que para cualquier u ∈ [0, 1] tenemos f(u) ∈ [0, 1]. La recompensa para W es 0 si selecciona la misma acción que V y 1 en caso contrario. AFIRMACIÓN 2. Todos los equilibrios de Nash del juego G son de la forma (u, 1/2, f(u)). Es decir, en cualquier equilibrio de Nash, V juega v = 1/2 y W juega w = f(u). Además, para cualquier valor de u, el vector de estrategias (u, 1/2, f(u)) constituye un equilibrio de Nash. PRUEBA. Es fácil comprobar que para cualquier u ∈ [0, 1], el vector (u, 1/2, f(u)) es un equilibrio de Nash. De hecho, U está dispuesto a jugar 164 cualquier estrategia mixta u, sin importar lo que hagan V y W. Además, V es indiferente entre 0 y 1 siempre y cuando w = f(u), por lo que puede jugar 1/2. Finalmente, si V juega con probabilidad igual a 0 y 1, W es indiferente entre 0 y 1, por lo que puede jugar f(u). Por el contrario, supongamos que v > 1/2. Entonces W prefiere estrictamente jugar 0, es decir, w = 0. Entonces para V tenemos P1 (V) = P0 (V) - (u + 1), es decir, P1 (V) < P0 (V), lo que implica v = 0, una contradicción. De manera similar, si v < 1/2, el jugador W prefiere jugar 1, por lo que tenemos w = 1. Por lo tanto, P1 (V) = P0 (V) + (u + 2) - (u + 1), es decir, P1 (V) > P0 (V), lo que implica v = 1, una contradicción. Finalmente, si v = 1/2, pero w = f(u), el jugador V no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Esto completa la prueba de la Afirmación 2. Según la Afirmación 2, la ganancia total en cualquier equilibrio de Nash de este juego es una función de u. Más específicamente, la ganancia para U es 0, la ganancia para V es −uf(u) + 3f(u), y la ganancia para W es 1/2. Por lo tanto, el equilibrio de Nash con la máxima ganancia total corresponde al valor de u que maximiza g(u) = −u (u + 1) u + 2 + 3 u + 1 u + 2 = − (u − 3)(u + 1) u + 2. Para encontrar los extremos de g(u), calculamos h(u) = − d du g(u). Tenemos h(u) = (2u − 2)(u + 2) − (u − 3)(u + 1) (u + 2)2 = u2 + 4u − 1 (u + 2)2. Por lo tanto, h(u) = 0 si y solo si u ∈ {−2 + √ 5, −2 − √ 5}. Ten en cuenta que −2 + √ 5 ∈ [0, 1]. La función g(u) cambia de signo en −2, −1 y 3. Tenemos g(u) < 0 para g > 3, g(u) > 0 para u < −2, por lo que el extremo de g(u) que se encuentra entre 1 y 3, es decir, u = −2 + √ 5, es un máximo local. Concluimos que el equilibrio de Nash que maximiza el bienestar social para este juego está dado por el vector de estrategias (−2+√ 5, 1/2, (5 − √ 5)/5). El pago total respectivo es 0 − ( √ 5 − 5)( √ 5 − 1) √ 5 + 1 2 = 13/2 − 2 √ 5. Esto concluye la prueba del Teorema 1. 3.2 Estrategias de grado arbitrario. Hemos demostrado que en el equilibrio de Nash que maximiza el bienestar social, las estrategias de algunos jugadores pueden ser irracionales cuadráticas, al igual que la recompensa total. En esta subsección, extenderemos este resultado para mostrar que podemos construir un juego gráfico de pago entero en un camino cuyo equilibrio de Nash maximizador del bienestar social involucra números algebraicos arbitrarios en [0, 1]. TEOREMA 2. Para cualquier número algebraico α de grado n ∈ [0, 1], existe un juego gráfico de pago entero en un camino de longitud O(n) tal que, en todas las equilibrios de Nash que maximizan el bienestar social de este juego, uno de los jugadores juega α. PRUEBA. Nuestra prueba consta de dos pasos. Primero, construimos una expresión racional R(x) y un segmento [x , x ] tal que x , x ∈ Q y α sea el único máximo de R(x) en [x , x ]. Segundo, construimos un juego gráfico cuyos equilibrios de Nash pueden ser parametrizados por u ∈ [x, x], de modo que en el equilibrio que corresponde a u, la recompensa total es R(u) y, además, la estrategia de algunos jugadores es u. Se deduce que para alcanzar el equilibrio de Nash que maximiza la ganancia, este jugador tiene que jugar α. Los detalles siguen. LEMMA 1. \n\nLEMMA 1. Dado un número algebraico α ∈ [0, 1], deg(α) = n, existen K2, . . . , K2n+2 ∈ Q y x , x ∈ (0, 1) ∩ Q tal que α es el único máximo de R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 en [x , x ]. PRUEBA. Sea P(x) el polinomio minimal de α, es decir, un polinomio de grado n con coeficientes racionales cuyo coeficiente principal es 1 tal que P(α) = 0. Sea A = {α1, . . . , αn} el conjunto de todas las raíces de P(x). Considera el polinomio Q1(x) = −P2(x). Tiene las mismas raíces que P(x), y además, para cualquier x ∈ A tenemos Q1(x) < 0. Por lo tanto, A es el conjunto de todos los máximos de Q1(x). Ahora, establece R(x) = Q1(x) (x+2)...(x+2n+1)(x+2n+2). Observa que R(x) ≤ 0 para todo x ∈ [0, 1] y R(x) = 0 si y solo si Q1(x) = 0. Por lo tanto, el conjunto A también es el conjunto de todos los máximos de R(x) en [0, 1]. Sea d = min{|αi − α| | αi ∈ A, αi = α}, y establezca α = max{α − d/2, 0}, α = min{α + d/2, 1}. Claramente, α es el único cero (y por lo tanto, el único máximo) de R(x) en [α , α ]. Sean x y x algunos números racionales en (α, α) y (α, α), respectivamente; observe que al excluir los extremos de los intervalos aseguramos que x, x = 0, 1. Como [x, x] ⊂ [α, α], tenemos que α es el único máximo de R(x) en [x, x]. Dado que R(x) es una expresión racional adecuada y todas las raíces de su denominador son simples, por el teorema de descomposición en fracciones parciales, R(x) puede representarse como R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2, donde K2, . . . , K2n+2 son números racionales. Considera un juego gráfico en el camino U−1V−1U0V0U1V1 . . . Uk−1Vk−1Uk, donde k = 2n + 2. Intuitivamente, queremos que cada triple (Ui−1, Vi−1, Ui) se comporte de manera similar a los jugadores U, V y W del juego descrito en la subsección anterior. Más precisamente, definimos las ganancias de los jugadores de la siguiente manera. • La ganancia para U−1 es 0 sin importar lo que hagan los demás. • La ganancia esperada para V−1 es 0 si juega 0 y u0 − (x − x )u−1 −x si juega 1, donde u0 y u−1 son las estrategias de U0 y U−1, respectivamente. • La ganancia esperada para V0 es 0 si juega 0 y u1(u0 + 1)− u0 si juega 1, donde u0 y u1 son las estrategias de U0 y U1, respectivamente. • Para cada i = 1, . . . , k − 1, la ganancia esperada para Vi cuando juega 0 es P0 (Vi) = Aiuiui+1 − Aiui+1, y la ganancia esperada para Vi cuando juega 1 es P1 (Vi) = P0 (Vi) + ui+1(2 − ui) − 1, donde Ai = −Ki+1 y ui+1 y ui son las estrategias de Ui+1 y Ui, respectivamente. • Para cada i = 0, . . . , k, la ganancia para Ui no depende de Vi y es 1 si Ui y Vi−1 seleccionan acciones diferentes y 0 en caso contrario. Ahora caracterizaremos los equilibrios de Nash de este juego utilizando una secuencia de afirmaciones. AFIRMACIÓN 3. En todos los equilibrios de Nash de este juego, V−1 juega 1/2, y las estrategias de u−1 y u0 satisfacen u0 = (x − x )u−1 + x. Por consiguiente, en todos los equilibrios de Nash tenemos u0 ∈ [x , x ]. 165 PRUEBA. La prueba es similar a la del Reclamo 2. Que f(u−1) = (x − x )u−1 + x. Claramente, el jugador V−1 es indiferente entre jugar 0 y 1 si y solo si u0 = f(u−1). Supongamos que v−1 < 1/2. Entonces U0 prefiere estrictamente jugar 1, es decir, u0 = 1, por lo que tenemos P1 (V−1) = P0 (V−1) + 1 − (x − x )u−1 − x . Dado que 1 − x ≤ 1 − (x − x )u−1 − x ≤ 1 − x para u−1 ∈ [0, 1] y x < 1, tenemos que P1 (V−1) > P0 (V−1), por lo que V−1 prefiere jugar 1, lo cual es una contradicción. De manera similar, si v−1 > 1/2, el jugador U0 prefiere estrictamente jugar 0, es decir, u0 = 0, por lo que tenemos P1 (V−1) = P0 (V−1) − (x − x )u−1 − x. Dado que x < x, x > 0, tenemos P1 (V−1) < P0 (V−1), por lo que V−1 prefiere jugar 0, lo cual es una contradicción. Finalmente, si V−1 juega 1/2, pero u0 = f(u−1), el jugador V−1 no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Además, ten en cuenta que f(0) = x, f(1) = x y, además, f(u−1) ∈ [x, x] si y solo si u−1 ∈ [0, 1]. Por lo tanto, en todos los equilibrios de Nash de este juego tenemos u0 ∈ [x , x ]. AFIRMACIÓN 4. En todos los equilibrios de Nash de este juego para cada i = 0, . . . , k − 1, tenemos vi = 1/2, y las estrategias de los jugadores Ui y Ui+1 satisfacen ui+1 = fi(ui), donde f0(u) = u/(u + 1) y fi(u) = 1/(2 − u) para i > 0. PRUEBA. La prueba de esta afirmación es también similar a la de la Afirmación 2. Utilizamos inducción en i para demostrar que la afirmación de la proposición es verdadera y, además, ui = 1 para i > 0. Para el caso base i = 0, observe que u0 = 0 según la afirmación anterior (recuerde que x, x se seleccionan de manera que x, x = 0, 1) y considere el trío (U0, V0, U1). Que v0 sea la estrategia de V0. Primero, supongamos que v0 > 1/2. Entonces U1 prefiere estrictamente jugar 0, es decir, u1 = 0. Entonces, para V0 tenemos P1 (V0) = P0 (V0) − u0. Dado que u0 = 0, tenemos que P1 (V0) < P0 (V0), lo cual implica v1 = 0, una contradicción. De manera similar, si v0 < 1/2, el jugador U1 prefiere jugar 1, por lo que tenemos u1 = 1. Por lo tanto, P1 (V0) = P0 (V0) + 1. Se sigue que P1 (V0) > P0 (V0), lo cual implica v0 = 1, una contradicción. Finalmente, si v0 = 1/2, pero u1 = u0/(u0 + 1), el jugador V0 no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Además, dado que u1 = u0/(u0 + 1) y u0 ∈ [0, 1], tenemos que u1 = 1. El argumento para el paso inductivo es similar. Es decir, supongamos que la afirmación se demuestra para todos los i < i y consideremos el trío (Ui, Vi, Ui+1). Que vi sea la estrategia de Vi. Primero, supongamos que vi > 1/2. Entonces Ui+1 prefiere estrictamente jugar 0, es decir, ui+1 = 0. Entonces, para Vi tenemos P1 (Vi) = P0 (Vi)−1, es decir, P1 (Vi) < P0 (Vi), lo cual implica vi = 0, una contradicción. De manera similar, si vi < 1/2, el jugador Ui+1 prefiere jugar 1, por lo que tenemos ui+1 = 1. Por lo tanto, P1 (Vi) = P0 (Vi) + 1 − ui. Por hipótesis inductiva, tenemos ui < 1. Por consiguiente, P1 (Vi) > P0 (Vi), lo que implica vi = 1, una contradicción. Finalmente, si vi = 1/2, pero ui+1 = 1/(2 − ui), el jugador Vi no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Además, como ui+1 = 1/(2 − ui) y ui < 1, tenemos ui+1 < 1. AFIRMACIÓN 5. Cualquier perfil estratégico de la forma (u−1, 1/2, u0, 1/2, u1, 1/2, . . . , uk−1, 1/2, uk), donde u−1 ∈ [0, 1], u0 = (x − x )u−1 + x , u1 = u0/(u0 + 1), y ui+1 = 1/(2 − ui) para i ≥ 1, constituye un equilibrio de Nash. PRUEBA. Primero, las ganancias del jugador U−1 no dependen de las acciones de otros jugadores, por lo que es libre de jugar cualquier estrategia en [0, 1]. Si u0 = (x −x )u−1 +x , el jugador V−1 es indiferente entre 0 y 1, por lo que está contento de jugar 1/2; un argumento similar se aplica a los jugadores V0, . . . , Vk−1. Finalmente, para cada i = 0, . . . , k, las ganancias del jugador Ui solo dependen de la estrategia del jugador Vi−1. En particular, siempre y cuando vi−1 = 1/2, el jugador Ui es indiferente entre jugar 0 y 1, por lo que puede jugar cualquier estrategia mixta ui ∈ [0, 1]. Para completar la prueba, observe que (x − x )u−1 + x ∈ [0, 1] para todo u−1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] para todo u0 ∈ [0, 1], y 1/(2 − ui) ∈ [0, 1] para todo ui ∈ [0, 1], por lo que tenemos ui ∈ [0, 1] para todo i = 0, . . . , k. Ahora, calculemos la ganancia total bajo un perfil estratégico de la forma dada en la Afirmación 5. El pago para U−1 es 0, y el pago esperado para cada uno de los Ui, i = 0, . . . , k, es 1/2. Los beneficios esperados para V−1 y V0 son 0. Finalmente, para cualquier i = 1, . . . , k − 1, la ganancia esperada para Vi es Ti = Aiuiui+1 − Aiui+1. Se deduce que para encontrar un equilibrio de Nash con el mayor pago total, debemos maximizar Pk−1 i=1 Ti sujeto a las condiciones u−1 ∈ [0, 1], u0 = (x −x )u−1+x , u1 = u0/(u0+1), y ui+1 = 1/(2−ui) para i = 1, . . . , k − 1. Nos gustaría expresar Pk−1 i=1 Ti como una función de u0. Para simplificar la notación, establezca u = u0. LEMMA 2. \n\nLEMMA 2. Para i = 1, . . . , k, tenemos ui = u+i−1 u+i. PRUEBA. La demostración es por inducción en i. Para i = 1, tenemos u1 = u/(u + 1). Ahora, para i ≥ 2 supongamos que ui−1 = (u + i − 2)/(u + i − 1). Tenemos ui = 1/(2 − ui−1) = (u + i − 1)/(2u + 2i − 2 − u − i + 2) = (u + i − 1)/(u + i). Se sigue que para i = 1, . . . , k − 1 tenemos Ti = Ai u + i − 1 u + i u + i u + i + 1 − Ai u + i u + i + 1 = −Ai 1 u + i + 1 = Ki+1 u + i + 1. Observa que a medida que u−1 varía de 0 a 1, u varía de x a x. Por lo tanto, para maximizar el pago total, debemos elegir u ∈ [x , x ] de manera que maximicemos K2 u + 2 + · · · + Kk u + k = R(u). Por construcción, el único máximo de R(u) en [x, x] es α. Se deduce que en el equilibrio de Nash que maximiza las ganancias de nuestro juego, U0 juega α. Finalmente, cabe destacar que las recompensas en nuestro juego son racionales en lugar de enteras. Sin embargo, es fácil ver que podemos multiplicar todas las ganancias de un jugador por su máximo común denominador sin afectar su estrategia. En el juego resultante, todas las ganancias son enteras. Esto concluye la demostración del Teorema 2.4. APROXIMANDO EL EQUILIBRIO DE NASH ÓPTIMO SOCIAL Hemos visto que el equilibrio de Nash que maximiza el bienestar social puede implicar estrategias que no están en Q. Por lo tanto, en esta sección nos enfocamos en encontrar un equilibrio de Nash que sea casi óptimo desde la perspectiva del bienestar social. Proponemos un algoritmo que, para cualquier > 0, encuentra un equilibrio de Nash cuya recompensa total está dentro de de la óptima. El tiempo de ejecución de este algoritmo es polinómico en 1/ , n y |Pmax| (recuerde que Pmax es el valor absoluto máximo de una entrada de una matriz de pagos). Si bien el resultado negativo de la sección anterior es para juegos gráficos en caminos, nuestro algoritmo se aplica a una gama más amplia de escenarios. Específicamente, se ejecuta en tiempo polinómico en árboles de grado acotado siempre que la política de mejor respuesta de cada vértice, dada su padre, pueda representarse como una unión de un número polinómico de rectángulos. Ten en cuenta que los grafos de camino siempre cumplen esta condición: en [9] mostramos cómo calcular dicha representación, dado un grafo con grado máximo 2. Por consiguiente, para grafos de camino el tiempo de ejecución de nuestro algoritmo está garantizado de ser polinomial. (Nótese que [9] exhibe una familia de juegos gráficos en árboles de grado acotado para los cuales las políticas de mejor respuesta de algunos de los vértices, dados sus padres, tienen tamaño exponencial, cuando se representan como uniones de rectángulos). Debido a restricciones de espacio, en esta versión del artículo presentamos el algoritmo para el caso en el que el grafo subyacente del juego gráfico es un camino. Luego presentamos nuestro resultado para el caso general; la demostración se puede encontrar en la versión completa de este artículo [10]. Supongamos que s es un perfil estratégico para un juego gráfico G. Es decir, s asigna una estrategia mixta a cada vértice de G. Sea EPV (s) el pago esperado del jugador V bajo s y sea EP(s) = Σ V EPV (s). Sea M(G) = max{EP(s) | s es un equilibrio de Nash para G}. TEOREMA 3. Supongamos que G es un juego gráfico en un camino de n vértices. Entonces, para cualquier > 0 existe un algoritmo que construye un equilibrio de Nash s para G que satisface EP(s) ≥ M(G)− . El tiempo de ejecución del algoritmo es O(n4 P3 max/ 3) PRUEBA. Sea {V1, . . . , Vn} el conjunto de todos los jugadores. Comenzamos construyendo las mejores políticas de respuesta para todos los Vi, i = 1, . . . , n − 1. Como se muestra en [9], esto se puede hacer en tiempo O(n3). Sea N > 5n un parámetro que se seleccionará más adelante, establezca δ = 1/N y defina X = {jδ | j = 0, . . . , N}. Decimos que vj es un punto de evento para un jugador Vi si es un punto de evento de Vi para B(Vi, Vi−1) o B(Vi+1, Vi). Para cada jugador Vi, considera un conjunto finito de estrategias Xi dado por Xi = X ∪ {vj | vj es un punto de evento para Vi}. Se ha demostrado en [9] que para cualquier i = 2, . . . , n, la política de mejor respuesta B(Vi, Vi−1) tiene como máximo 2n + 4 puntos de eventos de Vi. Dado que requerimos N > 5n, tenemos |Xi| ≤ 2N; asumimos sin pérdida de generalidad que |Xi| = 2N. Ordena los elementos de Xi en orden creciente como x1 i = 0 < x2 i < · · · < x2N i. Nos referiremos a las estrategias en Xi como estrategias discretas del jugador Vi; un perfil de estrategia en el que cada jugador tiene una estrategia discreta se referirá como un perfil de estrategia discreta. Ahora demostraremos que incluso si restringimos a cada jugador Vi a estrategias de Xi, los jugadores aún pueden lograr un equilibrio de Nash, y además, el mejor equilibrio de Nash (con respecto al bienestar social) tiene un pago total de al menos M(G) - siempre y cuando N sea lo suficientemente grande. Sea s un perfil de estrategia que maximiza el bienestar social. Es decir, sea s = (s1, . . . , sn) donde si es la estrategia mixta del jugador Vi y EP(s) = M(G). Para i = 1, . . . , n, sea ti = max{xj i | xj i ≤ si}. Primero, demostraremos que el perfil estratégico t = (t1, . . . , tn) es un equilibrio de Nash para G. Fijemos cualquier i, 1 < i ≤ n, y sea R = [v1, v2]×[u1, u2] el rectángulo en B(Vi, Vi−1) que contiene (si, si−1). Dado que v1 es un punto de evento Vi de B(Vi, Vi−1), tenemos v1 ≤ ti, por lo que el punto (ti, si−1) está dentro de R. De manera similar, el punto u1 es un punto de evento Vi−1 de B(Vi, Vi−1), por lo que tenemos u1 ≤ ti−1, y por lo tanto el punto (ti, ti−1) está dentro de R. Esto significa que para cualquier i, 1 < i ≤ n, tenemos ti−1 ∈ pbrVi−1 (ti), lo que implica que t = (t1, . . . , tn) es un equilibrio de Nash para G. Ahora, estimemos la pérdida esperada en el bienestar social causada por jugar t en lugar de s. LEMA 3. Para cualquier par de perfiles de estrategia t, s tales que |ti − si| ≤ δ, tenemos |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ para cualquier i = 1, . . . , n. PRUEBA. Sea Pi klm el pago del jugador Vi, cuando juega k, Vi−1 juega l y Vi+1 juega m. Fijemos i = 1, . . . , n y para k, l, m ∈ {0, 1}, definamos tklm = tk i−1(1 − ti−1)1−k tl i(1 − ti)1−l tm i+1(1 − ti+1)1−m sklm = sk i−1(1 − si−1)1−k sl i(1 − si)1−l sm i+1(1 − si+1)1−m. Mostraremos ahora que para cualquier k, l, m ∈ {0, 1} tenemos |tklm − sklm | ≤ 3δ; claramente, esto implica el lema. De hecho, fijar k, l, m ∈ {0, 1}. Establecer x = tk i−1(1 − ti−1)1−k , x = sk i−1(1 − si−1)1−k , y = tl i(1 − ti)1−l , y = sl i(1 − si)1−l , z = tm i+1(1 − ti+1)1−m , z = sm i+1(1 − si+1)1−m. Observa que si k = 0 entonces x − x = (1 − ti−1) − (1 − si−1), y si k = 1 entonces x − x = ti−1 − si−1, por lo tanto |x − x | ≤ δ. Un argumento similar muestra |y − y | ≤ δ, |z − z | ≤ δ. Además, tenemos x, x, y, y, z, z ∈ [0, 1]. Por lo tanto, |tklm − sklm | = |xyz − x y z | = |xyz − x yz + x yz − x y z + x y z − x y z | ≤ |x − x |yz + |y − y |x z + |z − z |x y ≤ 3δ. El Lema 3 implica que Pn i=1 |EPVi (s) − EPVi (t)| ≤ 24nPmaxδ, por lo que al elegir δ < /(24nPmax), o, equivalentemente, estableciendo N > 24nPmax/ , podemos asegurar que el pago esperado total para el perfil estratégico t esté dentro de de lo óptimo. Ahora demostraremos que podemos encontrar el mejor equilibrio de Nash discreto (con respecto al bienestar social) utilizando programación dinámica. Dado que t es un perfil de estrategia discreto, esto significa que el perfil de estrategia encontrado por nuestro algoritmo será al menos tan bueno como t. Defina ml,k i como la máxima ganancia total que V1, . . . , Vi−1 pueden lograr si cada Vj, j ≤ i, elige una estrategia de Xj, para cada j < i la estrategia de Vj es una mejor respuesta potencial a la estrategia de Vj+1, y, además, Vi−1 juega xl i−1, Vi juega xk i. Si no hay forma de elegir las estrategias para V1, . . . , Vi−1 que cumplan con estas condiciones, establecemos ml,k i = −∞. Los valores ml,k i , i = 1, . . . , n; k, l = 1, . . . , N, pueden ser calculados de forma inductiva, de la siguiente manera. Tenemos ml,k 1 = 0 para k, l = 1, . . . , N. Ahora, supongamos que ya hemos calculado ml,k j para todos los j < i; k, l = 1, . . . , N. Para calcular mk,l i , primero verificamos si (xk i , xl i−1) ∈ B(Vi, Vi−1). Si este no es el caso, tenemos ml,k i = −∞. De lo contrario, considera el conjunto Y = Xi−2 ∩ pbrVi−2 (xl i−1), es decir, el conjunto de todas las estrategias discretas de Vi−2 que son potenciales mejores respuestas a xl i−1. La prueba del Teorema 1 en [9] implica que el conjunto pbrVi−2 (xl i−1) no está vacío: el jugador Vi−2 tiene una mejor respuesta potencial a cualquier estrategia de Vi−1, en particular, xl i−1. Por la construcción del conjunto Xi−2, esto implica que Y no está vacío. Para cada xj i−2 ∈ Y, dejemos que pjlk sea la ganancia que Vi−1 recibe cuando Vi−2 juega xj i−2, Vi−1 juega xl i−1, y Vi juega xk i. Claramente, pjlk se puede calcular en tiempo constante. Entonces tenemos ml,k i = max{mj,l i−1 + pjlk | xj i−2 ∈ Y }. Finalmente, supongamos que hemos calculado ml,k n para l, k = 1, . . . , N. Todavía necesitamos tener en cuenta el pago del jugador Vn. Por lo tanto, consideramos todos los pares (xk n, xl n−1) que satisfacen xl n−1 ∈ pbrVn−1 (xk n), y elegimos aquel que maximiza la suma de mk,l n y la ganancia de Vn cuando juega xk n y Vn−1 juega xl n−1. Esto resulta en el pago total máximo que los jugadores pueden lograr en un equilibrio de Nash utilizando estrategias discretas; el perfil de estrategia real que produce este pago puede ser reconstruido utilizando técnicas estándar de programación dinámica. Es fácil ver que cada ml,k se puede calcular en tiempo O(N), es decir, todos ellos se pueden calcular en tiempo O(nN3). Recuerde que debemos seleccionar N ≥ (24nPmax)/ para asegurarnos de que el perfil estratégico que producimos tenga un pago total que esté dentro de lo óptimo. Concluimos que podemos calcular una -aproximación al mejor equilibrio de Nash en tiempo O(n4 P3 max/ 3 ). Esto completa la demostración del Teorema 3. Para enunciar nuestro resultado para el caso general (es decir, cuando el grafo subyacente es un árbol de grado acotado en lugar de un camino), necesitamos notación adicional. Si G tiene n jugadores, sea q(n) una cota superior en el número de puntos de evento en la representación de cualquier política de mejor respuesta. Es decir, asumimos que para cualquier vértice U con padre V, B(V, U) tiene como máximo q(n) puntos de evento. Estaremos interesados en la situación en la que q(n) sea un polinomio en n. TEOREMA 4. Sea G un juego gráfico de n jugadores en un árbol en el que cada nodo tiene a lo sumo Δ hijos. Supongamos que se nos da un conjunto de políticas de mejor respuesta para G en el que cada política de mejor respuesta B(V, U) está representada por un conjunto de rectángulos con un máximo de q(n) puntos de evento. Para cualquier > 0, existe un algoritmo que construye un equilibrio de Nash s para G que satisface EP(s) ≥ M(G) − . El tiempo de ejecución del algoritmo es polinómico en n, Pmax y −1 siempre que el árbol tenga grado acotado (es decir, Δ = O(1)) y q(n) sea un polinomio en n. En particular, si N = max((Δ + 1)q(n) + 1, n2Δ+2 (Δ + 2)Pmax −1 ) y Δ > 1 entonces el tiempo de ejecución es O(nΔ(2N)Δ. Para la demostración de este teorema, ver [10]. 4.1 Un algoritmo de tiempo polinómico para aproximación multiplicativa El tiempo de ejecución de nuestro algoritmo es seudopolinómico en lugar de polinómico, porque incluye un factor que es polinómico en Pmax, la entrada máxima (en valor absoluto) en cualquier matriz de pagos. Si estamos interesados en una aproximación multiplicativa en lugar de una aditiva, esto se puede mejorar a polinomial. Primero, hay que tener en cuenta que no podemos esperar una aproximación multiplicativa para todas las entradas. Es decir, no podemos esperar tener un algoritmo que calcule un equilibrio de Nash con una ganancia total de al menos (1 − )M(G). Si tuviéramos dicho algoritmo, entonces para juegos gráficos G con M(G) = 0, se requeriría que el algoritmo produjera la solución óptima. Para demostrar que esto es inviable, observe que podemos usar las técnicas de la Sección 3.2 para construir dos juegos gráficos de coeficientes enteros en caminos de longitud O(n) de tal manera que para algún X ∈ R, el pago total máximo en el primer juego sea X, el pago total máximo en el segundo juego sea −X, y para ambos juegos, los perfiles estratégicos que logran los pagos totales máximos involucran números algebraicos de grado n. Al combinar los dos juegos de modo que el primer vértice del segundo juego se conecte con el último vértice del primer juego, pero los pagos de todos los jugadores no cambien, obtenemos un juego gráfico en el que el mejor equilibrio de Nash tiene un pago total de 0, sin embargo, las estrategias que conducen a este pago tienen una alta complejidad algebraica. Sin embargo, podemos lograr una aproximación multiplicativa cuando todas las entradas de las matrices de pago son positivas y la relación entre cualquier par de entradas está acotada polinómicamente. Recuerde que asumimos que todos los pagos son enteros, y sea Pmin > 0 la entrada más pequeña de cualquier matriz de pagos. En este caso, para cualquier perfil estratégico, la ganancia para el jugador i es al menos Pmin, por lo que la ganancia total en el equilibrio de Nash que maximiza el bienestar social satisface M(G) ≥ nPmin. Además, el Lema 3 implica que al elegir δ < /(24Pmax/Pmin), podemos asegurar que el equilibrio de Nash t producido por nuestro algoritmo cumple nX i=1 EPVi (s) − nX i=1 EPVi (t) ≤ 24Pmaxδn ≤ nPmin ≤ M(G), es decir, para este valor de δ tenemos Pn i=1 EPVi (t) ≥ (1 − )M(G). Recuerde que el tiempo de ejecución de nuestro algoritmo es O(nN3), donde N debe ser seleccionado para satisfacer N > 5n, N = 1/δ. Se deduce que si Pmin > 0, Pmax/Pmin = poli(n), podemos elegir N de manera que nuestro algoritmo proporcione una garantía de aproximación multiplicativa y se ejecute en tiempo polinómico en n y 1/ . 5. EQUILIBRIOS DE NASH DE PAGO ACOTADO Otra forma natural de definir qué es un buen equilibrio de Nash es exigir que el pago esperado de cada jugador supere cierto umbral. Estos umbrales no tienen que ser iguales para todos los jugadores. En este caso, además de las matrices de pagos de los n jugadores, se nos dan n números T1, . . . , Tn, y nuestro objetivo es encontrar un equilibrio de Nash en el que el pago del jugador i sea al menos Ti, o informar que no existe tal equilibrio de Nash. Resulta que podemos diseñar un FPTAS para este problema utilizando las mismas técnicas que en la sección anterior. TEOREMA 5. Dado un juego gráfico G en un camino de n vértices y n números racionales T1, . . . , Tn, supongamos que existe un perfil estratégico s tal que s es un equilibrio de Nash para G y EPVi (s) ≥ Ti para i = 1, . . . , n. Entonces para cualquier > 0 podemos encontrar en tiempo O(max{nP3 max/ 3 , n4 / 3 }) un perfil estratégico s tal que s es un equilibrio de Nash para G y EPVi (s) ≥ Ti − para i = 1, . . . , n. PRUEBA. La prueba es similar a la del Teorema 3. Primero, construimos las políticas de mejor respuesta para todos los jugadores, elegimos N > 5n, y construimos los conjuntos Xi, i = 1, . . . , n, como se describe en la demostración del Teorema 3. Consideremos un perfil estratégico s tal que s sea un equilibrio de Nash para G y EPVi (s) ≥ Ti para i = 1, . . . , n. Construimos un perfil estratégico ti = max{xj i | xj i ≤ si} y usamos el mismo argumento que en la demostración del Teorema 3 para mostrar que t es un equilibrio de Nash para G. Según el Lema 3, tenemos |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ, por lo que eligiendo δ < /(24Pmax), o, equivalentemente, N > max{5n, 24Pmax/ }, podemos asegurar que EPVi (t) ≥ Ti − para i = 1, . . . , n. Ahora, utilizaremos la programación dinámica para encontrar un equilibrio de Nash discreto que cumpla con EPVi (t) ≥ Ti − para i = 1, . . . , n. Dado que t es un perfil estratégico discreto, nuestro algoritmo tendrá éxito siempre que haya un perfil estratégico s con EPVi (s) ≥ Ti− para i = 1, . . . , n. Sea zl,k i = 1 si hay un perfil estratégico discreto tal que para cualquier j < i la estrategia del jugador Vj es una mejor respuesta potencial a la estrategia de Vj+1, el pago esperado de Vj es al menos Tj − , y, además, Vi−1 juega xl i−1, Vi juega xk i. De lo contrario, deja que zl,k i = 0. Podemos calcular zl,k i, i = 1, . . . , n; k, l = 1, . . . , N de forma inductiva, de la siguiente manera. Tenemos zl,k 1 = 1 para k, l = 1, . . . , N. Ahora, supongamos que ya hemos calculado zl,k j para todos los j < i; k, l = 1, . . . , N. Para calcular zk,l i , primero verificamos si (xk i , xl i−1) ∈ B(Vi, Vi−1). Si este 168 no es el caso, claramente, zk,l i = 0. De lo contrario, considera el conjunto Y = Xi−2 ∩ pbrVi−2 (xl i−1), es decir, el conjunto de todas las estrategias discretas de Vi−2 que son potenciales mejores respuestas a xl i−1. Se ha demostrado en la prueba del Teorema 3 que Y = ∅. Para cada xj i−2 ∈ Y, dejemos que pjlk sea la ganancia que Vi−1 recibe cuando Vi−2 juega xj i−2, Vi−1 juega xl i−1, y Vi juega xk i. Claramente, pjlk se puede calcular en tiempo constante. Si existe un xj i−2 ∈ Y tal que zj,l i−1 = 1 y pjlk ≥ Ti−2 − , establece zl,k i = 1. De lo contrario, establezca zl,k i = 0. Habiendo calculado zl,k n , l, k = 1, . . . , N, verificamos si zl,k n = 1 para algún par (l, k). Si existe tal par de índices, instruimos a Vn a jugar xk n y utilizamos técnicas de programación dinámica (o, de manera equivalente, el paso descendente del algoritmo de [13]) para encontrar un equilibrio de Nash s que satisfaga EPVi (s ) ≥ Ti − para i = 1, . . . , n (recordemos que Vn es un jugador ficticio, es decir, asumimos Tn = 0, EPn(s ) = 0 para cualquier elección de s ). Si zl,k n = 0 para todo l, k = 1, . . . , N, no hay un equilibrio de Nash discreto s que satisfaga EPVi (s) ≥ Ti − para i = 1, . . . , n y, por lo tanto, no hay un equilibrio de Nash s (no necesariamente discreto) tal que EPVi (s) ≥ Ti para i = 1, . . . , n. El análisis del tiempo de ejecución es similar al de la Teorema 3; concluimos que el tiempo de ejecución de nuestro algoritmo es O(nN3) = O(max{nP3 max/3, n4/3}). OBSERVACIÓN 1. El Teorema 5 se puede extender a árboles de grado acotado de la misma manera que el Teorema 4. 5.1 Cálculo Exacto Otro enfoque para encontrar equilibrios de Nash con pagos acotados se basa en calcular de forma inductiva los subconjuntos de las políticas de mejor respuesta de todos los jugadores para excluir los puntos que no proporcionan pagos suficientes a algunos de los jugadores. Formalmente, decimos que una estrategia v del jugador V es una mejor respuesta potencial a una estrategia w de su padre W con respecto a un vector de umbral T = (T1, . . . , Tn), (denotado por v ∈ pbrV (w, T)) si hay un equilibrio en la instancia G(V,W), W = w en el que V juega la estrategia mixta v y la ganancia para cualquier jugador Vi aguas abajo de V (incluyendo a V) es al menos Ti. La mejor política de respuesta para V con respecto a un vector umbral T se define como B(W, V, T) = {(w, v) | v ∈ pbrV (w, T), w ∈ [0, 1]}. Es fácil ver que si alguno de los conjuntos B(Vj, Vj−1, T), j = 1, . . . , n, está vacío, significa que es imposible proporcionar a todos los jugadores los pagos esperados prescritos por T. De lo contrario, se puede aplicar el paso descendente del algoritmo original de [13] para encontrar un equilibrio de Nash. Dado que asumimos que Vn es un vértice ficticio cuya ganancia es idénticamente 0, el equilibrio de Nash con estas ganancias existe siempre y cuando Tn ≤ 0 y B(Vn, Vn−1, T) no esté vacío. Usando las técnicas desarrolladas en [9], no es difícil demostrar que para cualquier j = 1, . . . , n, el conjunto B(Vj , Vj−1, T) consiste en un número finito de rectángulos, y se puede calcular B(Vj+1, Vj , T) dado B(Vj , Vj−1, T). La ventaja de este enfoque es que nos permite representar todos los equilibrios de Nash que proporcionan los pagos requeridos a los jugadores. Sin embargo, no es probable que sea práctico, ya que resulta que los rectángulos que aparecen en la representación de B(Vj , Vj−1, T) pueden tener coordenadas irracionales. AFIRMACIÓN 6. Existe un juego gráfico G en un camino de 3 vértices UVW y un vector T = (T1, T2, T3) tal que B(V, W, T) no puede ser representado como una unión de un número finito de rectángulos con coordenadas racionales. PRUEBA. Definimos las recompensas para los jugadores en G de la siguiente manera. La ganancia para U es idénticamente 0, es decir, P0 (U) = P1 (U) = 0. Usando la Reclamación 1, seleccionamos los pagos para V de manera que P0 (V) = uw, P1 (V) = P0 (V) + w - .8u - .1, donde u y w son las estrategias (mixtas) de U y W, respectivamente. Se deduce que V es indiferente entre jugar 0 y 1 si y solo si w = f(u) = .8u + .1; observe que para cualquier u ∈ [0, 1] tenemos f(u) ∈ [0, 1]. No es difícil ver que tenemos B(W, V) = [0, .1]×{0} ∪ [.1, .9]×[0, 1] ∪ [.9, 1]×{1}. Los pagos para W no son importantes para nuestra construcción; por ejemplo, establezca P0(W) = P0(W) = 0. Ahora, establezca T = (0, 1/8, 0), es decir, estamos interesados en equilibrios de Nash en los que el pago esperado de V sea al menos 1/8. Supongamos que w ∈ [0, 1]. El jugador V puede jugar una estrategia mixta v cuando W está jugando w siempre que U juegue u = f−1 (w) = 5w/4 − 1/8 (para asegurar que V sea indiferente entre 0 y 1) y P0 (V) = P1 (V) = uw = w(5w/4 − 1/8) ≥ 1/8. La última condición se cumple si w ≤ (1 − √ 41)/20 < 0 o w ≥ (1 + √ 41)/20. Ten en cuenta que tenemos .1 < (1 + √ 41)/20 < .9. Para cualquier otro valor de w, cualquier estrategia de U hace que V prefiera una de las estrategias puras o no le proporciona un pago esperado suficiente. También hay algunos valores de w para los cuales V puede jugar una estrategia pura (0 o 1) como una mejor respuesta potencial a W y garantizarse a sí mismo un pago esperado de al menos 1/8; se puede demostrar que estos valores de w forman un número finito de segmentos en [0, 1]. Concluimos que cualquier representación de B(W, V, T) como una unión de un número finito de rectángulos debe contener un rectángulo de la forma [(1 + √ 41)/20, w] × [v, v] para algún w, v, v ∈ [0, 1]. Por otro lado, se puede demostrar que para cualquier matriz de pagos enteros y vectores de umbral, y para cualquier j = 1, . . . , n − 1, los conjuntos B(Vj+1, Vj, T) no contienen rectángulos de la forma [u , u ]×{v} o {v}×[w , w ], donde v ∈ R\\Q. Esto significa que si B(Vn, Vn−1, T) no está vacío, es decir, hay un equilibrio de Nash con pagos prescritos por T, entonces el paso descendente del algoritmo de [13] siempre puede elegir un perfil estratégico que forme un equilibrio de Nash, proporcione un pago de al menos Ti al jugador Vi y no tenga coordenadas irracionales. Por lo tanto, a diferencia del equilibrio de Nash que maximiza el bienestar social, no es necesario trabajar con números irracionales, y el hecho de que el algoritmo discutido en esta sección deba hacerlo puede considerarse como un argumento en contra de utilizar este enfoque. OTROS CRITERIOS PARA SELECCIONAR UN EQUILIBRIO DE NASH En esta sección, consideramos varios otros criterios que pueden ser útiles para seleccionar un equilibrio de Nash. 6.1 Combinando la maximización del bienestar con límites en los pagos En muchos escenarios de la vida real, queremos maximizar el bienestar social sujeto a ciertas restricciones en los pagos a los jugadores individuales. Por ejemplo, es posible que queramos asegurarnos de que ningún jugador obtenga una ganancia esperada negativa, o que la ganancia esperada para el jugador i sea al menos Pi max − ξ, donde Pi max es la entrada máxima de la matriz de ganancias de i y ξ es un parámetro fijo. Formalmente, dado un juego gráfico G y un vector T1, . . . , Tn, sea S el conjunto de todos los equilibrios de Nash s de G que satisfacen Ti ≤ EPVi (s) para i = 1, . . . , n, y sea ˆs = argmaxs∈S EP(s). Si el conjunto S no está vacío, podemos encontrar un equilibrio de Nash ˆs que esté -cerca de satisfacer los límites de pago y esté dentro de ε de ˆs con respecto al pago total al combinar los algoritmos de la Sección 4 y la Sección 5. Es decir, para un dado > 0, elige δ como en la demostración del Teorema 3, y deja que Xi sea el conjunto de todas las estrategias discretas del jugador Vi (para una definición formal, consulta la demostración del Teorema 3). Combinando las pruebas del Teorema 3 y el Teorema 5, podemos ver que el perfil de estrategia ˆt dado por ˆti = max{xj i | xj i ≤ ˆsi} satisface EPVi (ˆt) ≥ Ti − , |EP(ˆs) − EP(ˆt)| ≤ . Define ˆml,k i como la máxima ganancia total que V1, . . . , Vi−1 pueden lograr si cada Vj, j ≤ i, elige una estrategia de Xj, para cada j < i la estrategia de Vj es una mejor respuesta potencial a la estrategia de Vj+1 y la ganancia para el jugador Vj es al menos Tj − , y, además, Vi−1 juega xl i−1, Vi juega xk i. Si no hay forma de elegir las estrategias para V1, . . . , Vi−1 que cumplan con estas condiciones, establecemos ml,k i = −∞. El ˆml,k se puede calcular mediante programación dinámica de manera similar al ml,k y zl,k en las demostraciones de los Teoremas 3 y 5. Finalmente, como en la demostración del Teorema 3, utilizamos ml,k n para seleccionar el mejor equilibrio de Nash discreto sujeto a las restricciones de pago. Incluso de manera más general, es posible que deseemos maximizar el beneficio total para un subconjunto de jugadores (se supone que son capaces de redistribuir justamente las ganancias entre ellos mismos) mientras garantizamos ciertos beneficios esperados a (un subconjunto de) los otros jugadores. Este problema puede ser abordado de manera similar. 6.2 Un enfoque minimax Una medida más igualitaria de la calidad de un equilibrio de Nash es el pago esperado mínimo para un jugador. La solución óptima con respecto a esta medida es un equilibrio de Nash en el cual la ganancia esperada mínima para un jugador es máxima. Para encontrar una aproximación a dicho equilibrio de Nash, podemos combinar el algoritmo de la Sección 5 con la búsqueda binaria en el espacio de límites inferiores potenciales. Ten en cuenta que la ganancia esperada para cualquier jugador Vi dada una estrategia s siempre cumple con −Pmax ≤ EPVi (s) ≤ Pmax. Para un fijo > 0, comenzamos estableciendo T = −Pmax, T = Pmax, T∗ = (T + T )/2. Luego ejecutamos el algoritmo de la Sección 5 con T1 = · · · = Tn = T∗. Si el algoritmo tiene éxito al encontrar un equilibrio de Nash s que cumple con EPVi (s) ≥ T∗ − para todo i = 1, . . . , n, establecemos T = T∗, T∗ = (T + T)/2; de lo contrario, establecemos T = T∗, T∗ = (T + T)/2 y repetimos el ciclo. Repetimos este proceso hasta que |T − T | ≤ . No es difícil comprobar que para cualquier p ∈ R, si existe un equilibrio de Nash s tal que mini=1,...,n EPVi (s) ≥ p, entonces nuestro algoritmo devuelve un equilibrio de Nash s que cumple mini=1,...,n EPVi (s) ≥ p−2. El tiempo de ejecución de nuestro algoritmo es O(max{nP3 max log −1 / 3 , n4 log −1 / 3 }). 6.3 Igualando los pagos Cuando las matrices de pagos de los jugadores no son muy diferentes, es razonable exigir que los pagos esperados para los jugadores tampoco difieran mucho. Ahora demostraremos que los equilibrios de Nash en esta categoría también pueden aproximarse en tiempo polinómico. De hecho, observe que el algoritmo de la Sección 5 puede ser fácilmente modificado para tratar con límites superiores en las ganancias individuales en lugar de límites inferiores. Además, podemos calcular de manera eficiente una aproximación a un equilibrio de Nash que cumpla tanto con el límite superior como con el límite inferior para cada jugador. Más precisamente, supongamos que se nos da un juego gráfico G, 2n números racionales T1, . . . , Tn, T1, . . . , Tn y > 0. Entonces, si existe un perfil estratégico s tal que s es un equilibrio de Nash para G y Ti ≤ EPVi (s) ≤ Ti para i = 1, . . . , n, podemos encontrar un perfil estratégico s tal que s es un equilibrio de Nash para G y Ti − ≤ EPVi (s) ≤ Ti + para i = 1, . . . , n. El algoritmo modificado también se ejecuta en tiempo O(max{nP3 max/ 3 , [4]n4 / 3 }). Esta observación nos permite aproximar equilibrios de Nash en los que las ganancias esperadas de todos los jugadores difieren en un máximo de ξ para cualquier ξ fijo > 0. Dado un > 0, establecemos T1 = · · · = Tn = −Pmax, T1 = · · · = Tn = −Pmax + ξ + , y ejecutamos la versión modificada del algoritmo de la Sección 5. Si no logra encontrar una solución, incrementamos todos los Ti, Ti por y el bucle. Continuamos hasta que el algoritmo encuentre una solución, o Ti ≥ Pmax. Supongamos que existe un equilibrio de Nash s que satisface |EPVi (s) − EPVj (s)| ≤ ξ para todo i, j = 1, . . . , n. Definamos r = mini=1,...,n EPVi (s); tenemos r ≤ EPVi (s) ≤ r + ξ para todo i = 1, . . . , n. Existe un k ≥ 0 tal que −Pmax + (k − 1) ≤ r ≤ −Pmax + k. Durante el paso k del algoritmo, establecemos T1 = · · · = Tn = −Pmax +(k−1) , es decir, tenemos r− ≤ Ti ≤ r, r + ξ ≤ Ti ≤ r + ξ + . Es decir, el equilibrio de Nash s satisface Ti ≤ r ≤ EPVi (s) ≤ r + ξ ≤ Ti, lo que significa que cuando Ti se establece en −Pmax + (k − 1), nuestro algoritmo garantiza producir un equilibrio de Nash t que satisface r − 2 ≤ Ti − ≤ EPVi (t) ≤ Ti + ≤ r + ξ + 2. Concluimos que siempre que exista un equilibrio de Nash s, nuestro algoritmo produce un equilibrio de Nash t que satisface |EPVi (t) − EPVj (t)| ≤ ξ + 4 para todo i, j = 1, . . . , n. El tiempo de ejecución de este algoritmo es O(max{nP3 max/ 4 , n4 / 4 }). También debemos tener en cuenta que podemos encontrar el valor más pequeño de ξ para el cual existe un equilibrio de Nash combinando este algoritmo con una búsqueda binaria en el espacio ξ = [0, 2Pmax]. Esto identifica una aproximación al equilibrio de Nash más justo, es decir, uno en el que las ganancias esperadas de los jugadores difieren por la menor cantidad posible. Finalmente, cabe destacar que todos los resultados de esta sección pueden extenderse a árboles de grado acotado. 7. CONCLUSIONES Hemos estudiado el problema de la selección de equilibrio en juegos gráficos en árboles de grado acotado. Consideramos varios criterios para seleccionar un equilibrio de Nash, como maximizar el bienestar social, garantizar un límite inferior en la recompensa esperada de cada jugador, etc. Primero, nos enfocamos en la complejidad algebraica de un equilibrio de Nash que maximiza el bienestar social, y demostramos resultados negativos contundentes para ese problema. Es decir, demostramos que incluso para juegos gráficos en caminos, cualquier número algebraico α ∈ [0, 1] puede ser la única estrategia disponible para algún jugador en todas las equilibrios de Nash que maximizan el bienestar social. Esto contrasta fuertemente con el hecho de que los juegos gráficos en árboles siempre poseen un equilibrio de Nash en el que las estrategias de todos los jugadores son números racionales. Luego proporcionamos algoritmos de aproximación para seleccionar equilibrios de Nash con propiedades especiales. Si bien el problema de encontrar equilibrios de Nash aproximados para diversas clases de juegos ha recibido mucha atención en los últimos años, la mayoría de los trabajos existentes tienen como objetivo encontrar equilibrios de Nash que satisfagan (o estén cerca de satisfacer) ciertas propiedades. Nuestro enfoque es diferente en que insistimos en producir un equilibrio de Nash exacto, que está cerca de satisfacer un requisito dado. Como se argumenta en la introducción, hay varias razones para preferir una solución que constituya un equilibrio de Nash exacto. Nuestros algoritmos son esquemas de aproximación de tiempo polinomial completo, es decir, su tiempo de ejecución es polinomial en el inverso del parámetro de aproximación, aunque pueden ser seudopolinomiales con respecto al tamaño de la entrada. Bajo restricciones leves en las entradas, estas pueden ser modificadas para ser verdaderamente polinomiales. Este es el resultado positivo más fuerte que se puede obtener para un problema cuyas soluciones exactas pueden ser difíciles de representar, como es el caso de muchos de los problemas considerados aquí. Mientras demostramos nuestros resultados para juegos en un camino, pueden generalizarse a cualquier árbol para el cual las políticas de mejor respuesta tengan representaciones compactas como uniones de rectángulos. En la versión completa del artículo describimos nuestros algoritmos para el caso general. Un trabajo adicional en esta línea podría incluir extensiones a los tipos de garantías buscadas para los equilibrios de Nash, como garantizar los pagos totales para subconjuntos de jugadores, seleccionar equilibrios en los que algunos jugadores estén recibiendo pagos significativamente más altos que sus pares, etc. Sin embargo, en este momento es quizás más importante investigar si los equilibrios de Nash de los juegos gráficos pueden ser calculados de manera descentralizada, en contraste con los algoritmos que hemos introducido aquí. Es natural preguntarse si nuestros resultados o los de [9] pueden generalizarse a juegos con tres o más acciones. Sin embargo, parece que esto hará el análisis significativamente más difícil. En particular, cabe destacar que se pueden considerar los juegos de pago limitado como un caso especial muy restringido de juegos con tres acciones por jugador. Es decir, dado un juego de dos acciones con límites de pago, considera un juego en el que cada jugador Vi tiene una tercera acción que le garantiza un pago de Ti sin importar lo que hagan los demás. Luego, verificar si existe un equilibrio de Nash en el cual ninguno de los jugadores asigna una probabilidad distinta de cero a su tercera acción es equivalente a comprobar si existe un equilibrio de Nash que cumpla con los límites de pago en el juego original, y la Sección 5.1 muestra que encontrar una solución exacta a este problema requiere nuevas ideas. Alternativamente, puede ser interesante buscar resultados similares en el contexto de equilibrios correlacionados (CE), especialmente dado que el mejor CE puede tener un valor más alto (pago esperado total) que el mejor NE. La proporción entre estos valores se llama el valor de mediación en [1]. Se sabe por [1] que el valor de mediación de juegos de 2 jugadores y 2 acciones con pagos no negativos es a lo sumo 4 3, y presentan un juego de 3 jugadores para el cual es infinito. Además, un ejemplo de 2 jugadores y 3 acciones del [1] también tiene un valor de mediación infinito. 8. REFERENCIAS [1] I. Ashlagi, D. Monderer y M. Tenneholtz, Sobre el Valor de la Correlación, Actas del seminario de Dagstuhl 05011 (2005) [2] R. Aumann, Subjetividad y Correlación en Estrategias Aleatorias, Revista de Economía Matemática 1 pp. 67-96 (1974) [3] B. Blum, C. R. Shelton y D. Koller, Un Método de Continuación para Equilibrios de Nash en Juegos Estructurados, Actas de IJCAI03 [4] X. Chen, X. Deng y S. Teng, Computación de Equilibrios de Nash: Aproximación y Complejidad Suavizada, Actas de FOCS06 [5] X. Chen, X. Deng, Resolviendo la Complejidad del Equilibrio de Nash de 2 Jugadores, Actas de FOCS06 [6] V. Conitzer y T. Sandholm, Resultados de Complejidad sobre Equilibrios de Nash, Actas de IJCAI03 [7] C. Daskalakis, P. W. Goldberg y C. H. Papadimitriou, La Complejidad de Calcular un Equilibrio de Nash, Actas de STOC06 [8] R. S. Datta, Universalidad de los Equilibrios de Nash, Matemáticas de la Investigación Operativa 28:3, 2003 [9] E. Elkind, L. A. Goldberg y P. W. Goldberg, Equilibrios de Nash en Juegos Gráficos en Árboles Revisitados, Actas de ACM EC06 [10] E. Elkind, L. A. Goldberg y P. W. Goldberg, Computando Buenos Equilibrios de Nash en Juegos Gráficos, http://arxiv.org/abs/cs.GT/0703133 [11] I. Gilboa y E. Zemel, Equilibrios de Nash y Correlacionados: Algunas Consideraciones de Complejidad, Juegos y Comportamiento Económico, 1 pp. 80-93 (1989) [12] P. W. Goldberg y C. H. Papadimitriou, Reducibilidad entre Problemas de Equilibrio, Actas de STOC06 [13] M. Kearns, M. Littman y S. Singh, Modelos Gráficos para la Teoría de Juegos, Actas de UAI01 [14] M. Littman, M. Kearns y S. Singh, Un Algoritmo Exacto Eficiente para Juegos Gráficos Singularmente Conectados, Actas de NIPS01 [15] R. Lipton y E. Markakis, Equilibrios de Nash a través de Ecuaciones Polinomiales, Actas de LATIN04 [16] L. Ortiz y M. Kearns, Propagación de Nash para Juegos Gráficos con Lazos, Actas de NIPS03 [17] C.H. Papadimitriou, Computando equilibrios correlacionados en juegos de varios jugadores, Actas de STOC05 [18] C.H. Papadimitriou y T. Roughgarden, Computando equilibrios en juegos de múltiples jugadores, Actas de SODA05 [19] D. Vickrey y D. Koller, Algoritmos multiagente para resolver juegos gráficos, Actas de AAAI02 171 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "strategy profile": {
            "translated_key": "perfil estratégico",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Computing Good Nash Equilibria in Graphical Games ∗ Edith Elkind Hebrew University of Jerusalem, Israel, and University of Southampton, Southampton, SO17 1BJ, U.K. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K. ABSTRACT This paper addresses the problem of fair equilibrium selection in graphical games.",
                "Our approach is based on the data structure called the best response policy, which was proposed by Kearns et al. [13] as a way to represent all Nash equilibria of a graphical game.",
                "In [9], it was shown that the best response policy has polynomial size as long as the underlying graph is a path.",
                "In this paper, we show that if the underlying graph is a bounded-degree tree and the best response policy has polynomial size then there is an efficient algorithm which constructs a Nash equilibrium that guarantees certain payoffs to all participants.",
                "Another attractive solution concept is a Nash equilibrium that maximizes the social welfare.",
                "We show that, while exactly computing the latter is infeasible (we prove that solving this problem may involve algebraic numbers of an arbitrarily high degree), there exists an FPTAS for finding such an equilibrium as long as the best response policy has polynomial size.",
                "These two algorithms can be combined to produce Nash equilibria that satisfy various fairness criteria.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a large community of agents, an agents behavior is not likely to have a direct effect on most other agents: rather, it is just the agents who are close enough to him that will be affected.",
                "However, as these agents respond by adapting their behavior, more agents will feel the consequences and eventually the choices made by a single agent will propagate throughout the entire community.",
                "This is the intuition behind graphical games, which were introduced by Kearns, Littman and Singh in [13] as a compact representation scheme for games with many players.",
                "In an n-player graphical game, each player is associated with a vertex of an underlying graph G, and the payoffs of each player depend on his action as well as on the actions of his neighbors in the graph.",
                "If the maximum degree of G is Δ, and each player has two actions available to him, then the game can be represented using n2Δ+1 numbers.",
                "In contrast, we need n2n numbers to represent a general n-player 2-action game, which is only practical for small values of n. For graphical games with constant Δ, the size of the game is linear in n. One of the most natural problems for a graphical game is that of finding a Nash equilibrium, the existence of which follows from Nashs celebrated theorem (as graphical games are just a special case of n-player games).",
                "The first attempt to tackle this problem was made in [13], where the authors consider graphical games with two actions per player in which the underlying graph is a boundeddegree tree.",
                "They propose a generic algorithm for finding Nash equilibria that can be specialized in two ways: an exponential-time algorithm for finding an (exact) Nash equilibrium, and a fully polynomial time approximation scheme (FPTAS) for finding an approximation to a Nash equilibrium.",
                "For any > 0 this algorithm outputs an -Nash equilibrium, which is a <br>strategy profile</br> in which no player can improve his payoff by more than by unilaterally changing his strategy.",
                "While -Nash equilibria are often easier to compute than exact Nash equilibria, this solution concept has several drawbacks.",
                "First, the players may be sensitive to a small loss in payoffs, so the <br>strategy profile</br> that is an -Nash equilibrium will not be stable.",
                "This will be the case even if there is only a small subset of players who are extremely price-sensitive, and for a large population of players it may be difficult to choose a value of that will satisfy everyone.",
                "Second, the strategy profiles that are close to being Nash equilibria may be much better with respect to the properties under consideration than exact Nash equilibria.",
                "Therefore, the (approximation to the) value of the best solution that corresponds to an -Nash equilibrium may not be indicative of what can be achieved under an exact Nash equilibrium.",
                "This is especially important if the purpose of the approximate solution is to provide a good benchmark for a system of selfish agents, as the benchmark implied by an -Nash equilibrium may be unrealistic.",
                "For these reasons, in this paper we focus on the problem of computing exact Nash equilibria.",
                "Building on ideas of [14], Elkind et al. [9] showed how to find an (exact) Nash equilibrium in polynomial time when the underlying 162 graph has degree 2 (that is, when the graph is a collection of paths and cycles).",
                "By contrast, finding a Nash equilibrium in a general degree-bounded graph appears to be computationally intractable: it has been shown (see [5, 12, 7]) to be complete for the complexity class PPAD. [9] extends this hardness result to the case in which the underlying graph has bounded pathwidth.",
                "A graphical game may not have a unique Nash equilibrium, indeed it may have exponentially many.",
                "Moreover, some Nash equilibria are more desirable than others.",
                "Rather than having an algorithm which merely finds some Nash equilibrium, we would like to have algorithms for finding Nash equilibria with various sociallydesirable properties, such as maximizing overall payoff or distributing profit fairly.",
                "A useful property of the data structure of [13] is that it simultaneously represents the set of all Nash equilibria of the underlying game.",
                "If this representation has polynomial size (as is the case for paths, as shown in [9]), one may hope to extract from it a Nash equilibrium with the desired properties.",
                "In fact, in [13] the authors mention that this is indeed possible if one is interested in finding an (approximate) -Nash equilibrium.",
                "The goal of this paper is to extend this to exact Nash equilibria. 1.1 Our Results In this paper, we study n-player 2-action graphical games on bounded-degree trees for which the data structure of [13] has size poly(n).",
                "We focus on the problem of finding exact Nash equilibria with certain socially-desirable properties.",
                "In particular, we show how to find a Nash equilibrium that (nearly) maximizes the social welfare, i.e., the sum of the players payoffs, and we show how to find a Nash equilibrium that (nearly) satisfies prescribed payoff bounds for all players.",
                "Graphical games on bounded-degree trees have a simple algebraic structure.",
                "One attractive feature, which follows from [13], is that every such game has a Nash equilibrium in which the strategy of every player is a rational number.",
                "Section 3 studies the algebraic structure of those Nash equilibria that maximize social welfare.",
                "We show (Theorems 1 and 2) that, surprisingly, the set of Nash equilibria that maximize social welfare is more complex.",
                "In fact, for any algebraic number α ∈ [0, 1] with degree at most n, we exhibit a graphical game on a path of length O(n) such that, in the unique social welfare-maximizing Nash equilibrium of this game, one of the players plays the mixed strategy α.1 This result shows that it may be difficult to represent an optimal Nash equilibrium.",
                "It seems to be a novel feature of the setting we consider here, that an optimal Nash equilibrium is hard to represent, in a situation where it is easy to find and represent a Nash equilibrium.",
                "As the social welfare-maximizing Nash equilibrium may be hard to represent efficiently, we have to settle for an approximation.",
                "However, the crucial difference between our approach and that of previous papers [13, 16, 19] is that we require our algorithm to output an exact Nash equilibrium, though not necessarily the optimal one with respect to our criteria.",
                "In Section 4, we describe an algorithm that satisfies this requirement.",
                "Namely, we propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within of optimal.",
                "It runs in polynomial time (Theorem 3,4) for any graphical game on a bounded-degree tree for which the data structure proposed by [13] (the so-called best response policy, defined below) is of size poly(n) (note that, as shown in [9], this is always the case when the underlying graph is a path).",
                "More pre1 A related result in a different context was obtained by Datta [8], who shows that n-player 2-action games are universal in the sense that any real algebraic variety can be represented as the set of totally mixed Nash equilibria of such games. cisely, the running time of our algorithm is polynomial in n, Pmax, and 1/ , where Pmax is the maximum absolute value of an entry of a payoff matrix, i.e., it is a pseudopolynomial algorithm, though it is fully polynomial with respect to .",
                "We show (Section 4.1) that under some restrictions on the payoff matrices, the algorithm can be transformed into a (truly) polynomial-time algorithm that outputs a Nash equilibrium whose total payoff is within a 1 − factor from the optimal.",
                "In Section 5, we consider the problem of finding a Nash equilibrium in which the expected payoff of each player Vi exceeds a prescribed threshold Ti.",
                "Using the idea from Section 4 we give (Theorem 5) a fully polynomial time approximation scheme for this problem.",
                "The running time of the algorithm is bounded by a polynomial in n, Pmax, and .",
                "If the instance has a Nash equilibrium satisfying the prescribed thresholds then the algorithm constructs a Nash equilibrium in which the expected payoff of each player Vi is at least Ti − .",
                "In Section 6, we introduce other natural criteria for selecting a good Nash equilibrium and we show that the algorithms described in the two previous sections can be used as building blocks in finding Nash equilibria that satisfy these criteria.",
                "In particular, in Section 6.1 we show how to find a Nash equilibrium that approximates the maximum social welfare, while guaranteeing that each individual payoff is close to a prescribed threshold.",
                "In Section 6.2 we show how to find a Nash equilibrium that (nearly) maximizes the minimum individual payoff.",
                "Finally, in Section 6.3 we show how to find a Nash equilibrium in which the individual payoffs of the players are close to each other. 1.2 Related Work Our approximation scheme (Theorem 3 and Theorem 4) shows a contrast between the games that we study and two-player n-action games, for which the corresponding problems are usually intractable.",
                "For two-player n-action games, the problem of finding Nash equilibria with special properties is typically NP-hard.",
                "In particular, this is the case for Nash equilibria that maximize the social welfare [11, 6].",
                "Moreover, it is likely to be intractable even to approximate such equilibria.",
                "In particular, Chen, Deng and Teng [4] show that there exists some , inverse polynomial in n, for which computing an -Nash equilibrium in 2-player games with n actions per player is PPAD-complete.",
                "Lipton and Markakis [15] study the algebraic properties of Nash equilibria, and point out that standard quantifier elimination algorithms can be used to solve them.",
                "Note that these algorithms are not polynomial-time in general.",
                "The games we study in this paper have polynomial-time computable Nash equilibria in which all mixed strategies are rational numbers, but an optimal Nash equilibrium may necessarily include mixed strategies with high algebraic degree.",
                "A correlated equilibrium (CE) (introduced by Aumann [2]) is a distribution over vectors of players actions with the property that if any player is told his own action (the value of his own component) from a vector generated by that distribution, then he cannot increase his expected payoff by changing his action.",
                "Any Nash equilibrium is a CE but the converse does not hold in general.",
                "In contrast with Nash equilibria, correlated equilibria can be found for low-degree graphical games (as well as other classes of conciselyrepresented multiplayer games) in polynomial time [17].",
                "But, for graphical games it is NP-hard to find a correlated equilibrium that maximizes total payoff [18].",
                "However, the NP-hardness results apply to more general games than the one we consider here, in particular the graphs are not trees.",
                "From [2] it is also known that there exist 2-player, 2-action games for which the expected total payoff 163 of the best correlated equilibrium is higher than the best Nash equilibrium, and we discuss this issue further in Section 7. 2.",
                "PRELIMINARIES AND NOTATION We consider graphical games in which the underlying graph G is an n-vertex tree, in which each vertex has at most Δ children.",
                "Each vertex has two actions, which are denoted by 0 and 1.",
                "A mixed strategy of a player V is represented as a single number v ∈ [0, 1], which denotes the probability that V selects action 1.",
                "For the purposes of the algorithm, the tree is rooted arbitrarily.",
                "For convenience, we assume without loss of generality that the root has a single child, and that its payoff is independent of the action chosen by the child.",
                "This can be achieved by first choosing an arbitrary root of the tree, and then adding a dummy parent of this root, giving the new parent a constant payoff function, e.g., 0.",
                "Given an edge (V, W ) of the tree G, and a mixed strategy w for W , let G(V,W ),W =w be the instance obtained from G by (1) deleting all nodes Z which are separated from V by W (i.e., all nodes Z such that the path from Z to V passes through W ), and (2) restricting the instance so that W is required to play mixed strategy w. Definition 1.",
                "Suppose that (V, W ) is an edge of the tree, that v is a mixed strategy for V and that w is a mixed strategy for W .",
                "We say that v is a potential best response to w (denoted by v ∈ pbrV (w)) if there is an equilibrium in the instance G(V,W ),W =w in which V has mixed strategy v. We define the best response policy for V , given W , as B(W, V ) = {(w, v) | v ∈ pbrV (w), w ∈ [0, 1]}.",
                "The upstream pass of the generic algorithm of [13] considers every node V (other than the root) and computes the best response policy for V given its parent.",
                "With the above assumptions about the root, the downstream pass is straightforward.",
                "The root selects a mixed strategy w for the root W and a mixed strategy v ∈ B(W, V ) for each child V of W .",
                "It instructs each child V to play v. The remainder of the downward pass is recursive.",
                "When a node V is instructed by its parent to adopt mixed strategy v, it does the following for each child U - It finds a pair (v, u) ∈ B(V, U) (with the same v value that it was given by its parent) and instructs U to play u.",
                "The best response policy for a vertex U given its parent V can be represented as a union of rectangles, where a rectangle is defined by a pair of closed intervals (IV , IU ) and consists of all points in IV × IU ; it may be the case that one or both of the intervals IV and IU consists of a single point.",
                "In order to perform computations on B(V, U), and to bound the number of rectangles, [9] used the notion of an event point, which is defined as follows.",
                "For any set A ⊆ [0, 1]2 that is represented as a union of a finite number of rectangles, we say that a point u ∈ [0, 1] on the U-axis is a Uevent point of A if u = 0 or u = 1 or the representation of A contains a rectangle of the form IV × IU and u is an endpoint of IU ; V -event points are defined similarly.",
                "For many games considered in this paper, the underlying graph is an n-vertex path, i.e., a graph G = (V, E) with V = {V1, . . . , Vn} and E = {(V1, V2), . . . , (Vn−1, Vn)}.",
                "In [9], it was shown that for such games, the best response policy has only polynomially-many rectangles.",
                "The proof that the number of rectangles in B(Vj+1, Vj) is polynomial proceeds by first showing that the number of event points in B(Vj+1, Vj ) cannot exceed the number of event points in B(Vj, Vj−1) by more than 2, and using this fact to bound the number of rectangles in B(Vj+1, Vj ).",
                "Let P0 (V ) and P1 (V ) be the expected payoffs to V when it plays 0 and 1, respectively.",
                "Both P0 (V ) and P1 (V ) are multilinear functions of the strategies of V s neighbors.",
                "In what follows, we will frequently use the following simple observation.",
                "CLAIM 1.",
                "For a vertex V with a single child U and parent W , given any A, B, C, D ∈ Q, A , B , C , D ∈ Q, one can select the payoffs to V so that P0 (V ) = Auw + Bu + Cw + D, P1 (V ) = A uw + B u + C w + D .",
                "Moreover, if all A, B, C, D, A , B , C , D are integer, the payoffs to V are integer as well.",
                "PROOF.",
                "We will give the proof for P0 (V ); the proof for P1 (V ) is similar.",
                "For i, j = 0, 1, let Pij be the payoff to V when U plays i, V plays 0 and W plays j.",
                "We have P0 (V ) = P00(1 − u)(1 − w) + P10u(1 − w) + P01(1 − u)w + P11uw.",
                "We have to select the values of Pij so that P00 − P10 − P01 + P11 = A, −P00 + P10 = B, −P00 + P01 = C, P00 = D. It is easy to see that the unique solution is given by P00 = D, P01 = C + D, P10 = B + D, P11 = A + B + C + D. The input to all algorithms considered in this paper includes the payoff matrices for each player.",
                "We assume that all elements of these matrices are integer.",
                "Let Pmax be the greatest absolute value of any element of any payoff matrix.",
                "Then the input consists of at most n2Δ+1 numbers, each of which can be represented using log Pmax bits. 3.",
                "NASH EQUILIBRIA THAT MAXIMIZE THE SOCIAL WELFARE: SOLUTIONS IN R \\ Q From the point of view of social welfare, the best Nash equilibrium is the one that maximizes the sum of the players expected payoffs.",
                "Unfortunately, it turns out that computing such a <br>strategy profile</br> exactly is not possible: in this section, we show that even if all players payoffs are integers, the <br>strategy profile</br> that maximizes the total payoff may have irrational coordinates; moreover, it may involve algebraic numbers of an arbitrary degree. 3.1 Warm-up: quadratic irrationalities We start by providing an example of a graphical game on a path of length 3 with integer payoffs such that in the Nash equilibrium that maximizes the total payoff, one of the players has a strategy in R \\ Q.",
                "In the next subsection, we will extend this example to algebraic numbers of arbitrary degree n; to do so, we have to consider paths of length O(n).",
                "THEOREM 1.",
                "There exists an integer-payoff graphical game G on a 3-vertex path UV W such that, in any Nash equilibrium of G that maximizes social welfare, the strategy, u, of the player U and the total payoff, p, satisfy u, p ∈ R \\ Q.",
                "PROOF.",
                "The payoffs to the players in G are specified as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = −uw + 3w and P1 (V ) = P0 (V ) + w(u + 2) − (u + 1), where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = u+1 u+2 .",
                "Observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "The payoff to W is 0 if it selects the same action as V and 1 otherwise.",
                "CLAIM 2.",
                "All Nash equilibria of the game G are of the form (u, 1/2, f(u)).",
                "That is, in any Nash equilibrium, V plays v = 1/2 and W plays w = f(u).",
                "Moreover, for any value of u, the vector of strategies (u, 1/2, f(u)) constitutes a Nash equilibrium.",
                "PROOF.",
                "It is easy to check that for any u ∈ [0, 1], the vector (u, 1/2, f(u)) is a Nash equilibrium.",
                "Indeed, U is content to play 164 any mixed strategy u no matter what V and W do.",
                "Furthermore, V is indifferent between 0 and 1 as long as w = f(u), so it can play 1/2.",
                "Finally, if V plays 0 and 1 with equal probability, W is indifferent between 0 and 1, so it can play f(u).",
                "Conversely, suppose that v > 1/2.",
                "Then W strictly prefers to play 0, i.e., w = 0.",
                "Then for V we have P1 (V ) = P0 (V ) − (u + 1), i.e., P1 (V ) < P0 (V ), which implies v = 0, a contradiction.",
                "Similarly, if v < 1/2, player W prefers to play 1, so we have w = 1.",
                "Hence, P1 (V ) = P0 (V ) + (u + 2) − (u + 1), i.e., P1 (V ) > P0 (V ), which implies v = 1, a contradiction.",
                "Finally, if v = 1/2, but w = f(u), player V is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "This completes the proof of Claim 2.",
                "By Claim 2, the total payoff in any Nash equilibrium of this game is a function of u.",
                "More specifically, the payoff to U is 0, the payoff to V is −uf(u) + 3f(u), and the payoff to W is 1/2.",
                "Therefore, the Nash equilibrium with the maximum total payoff corresponds to the value of u that maximizes g(u) = −u (u + 1) u + 2 + 3 u + 1 u + 2 = − (u − 3)(u + 1) u + 2 .",
                "To find extrema of g(u), we compute h(u) = − d du g(u).",
                "We have h(u) = (2u − 2)(u + 2) − (u − 3)(u + 1) (u + 2)2 = u2 + 4u − 1 (u + 2)2 .",
                "Hence, h(u) = 0 if and only if u ∈ {−2 + √ 5, −2 − √ 5}.",
                "Note that −2 + √ 5 ∈ [0, 1].",
                "The function g(u) changes sign at −2, −1, and 3.",
                "We have g(u) < 0 for g > 3, g(u) > 0 for u < −2, so the extremum of g(u) that lies between 1 and 3, i.e., u = −2 + √ 5, is a local maximum.",
                "We conclude that the social welfare-maximizing Nash equilibrium for this game is given by the vector of strategies (−2+√ 5, 1/2, (5 − √ 5)/5).",
                "The respective total payoff is 0 − ( √ 5 − 5)( √ 5 − 1) √ 5 + 1 2 = 13/2 − 2 √ 5.",
                "This concludes the proof of Theorem 1. 3.2 Strategies of arbitrary degree We have shown that in the social welfare-maximizing Nash equilibrium, some players strategies can be quadratic irrationalities, and so can the total payoff.",
                "In this subsection, we will extend this result to show that we can construct an integer-payoff graphical game on a path whose social welfare-maximizing Nash equilibrium involves arbitrary algebraic numbers in [0, 1].",
                "THEOREM 2.",
                "For any degree-n algebraic number α ∈ [0, 1], there exists an integer payoff graphical game on a path of length O(n) such that, in all social welfare-maximizing Nash equilibria of this game, one of the players plays α.",
                "PROOF.",
                "Our proof consists of two steps.",
                "First, we construct a rational expression R(x) and a segment [x , x ] such that x , x ∈ Q and α is the only maximum of R(x) on [x , x ].",
                "Second, we construct a graphical game whose Nash equilibria can be parameterized by u ∈ [x , x ], so that at the equilibrium that corresponds to u the total payoff is R(u) and, moreover, some players strategy is u.",
                "It follows that to achieve the payoff-maximizing Nash equilibrium, this player has to play α.",
                "The details follow.",
                "LEMMA 1.",
                "Given an algebraic number α ∈ [0, 1], deg(α) = n, there exist K2, . . . , K2n+2 ∈ Q and x , x ∈ (0, 1) ∩ Q such that α is the only maximum of R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 on [x , x ].",
                "PROOF.",
                "Let P(x) be the minimal polynomial of α, i.e., a polynomial of degree n with rational coefficients whose leading coefficient is 1 such that P(α) = 0.",
                "Let A = {α1, . . . , αn} be the set of all roots of P(x).",
                "Consider the polynomial Q1(x) = −P2 (x).",
                "It has the same roots as P(x), and moreover, for any x ∈ A we have Q1(x) < 0.",
                "Hence, A is the set of all maxima of Q1(x).",
                "Now, set R(x) = Q1(x) (x+2)...(x+2n+1)(x+2n+2) .",
                "Observe that R(x) ≤ 0 for all x ∈ [0, 1] and R(x) = 0 if and only if Q1(x) = 0.",
                "Hence, the set A is also the set of all maxima of R(x) on [0, 1].",
                "Let d = min{|αi − α| | αi ∈ A, αi = α}, and set α = max{α − d/2, 0}, α = min{α + d/2, 1}.",
                "Clearly, α is the only zero (and hence, the only maximum) of R(x) on [α , α ].",
                "Let x and x be some rational numbers in (α , α) and (α, α ), respectively; note that by excluding the endpoints of the intervals we ensure that x , x = 0, 1.",
                "As [x , x ] ⊂ [α , α ], we have that α is the only maximum of R(x) on [x , x ].",
                "As R(x) is a proper rational expression and all roots of its denominator are simple, by partial fraction decomposition theorem, R(x) can be represented as R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 , where K2, . . . , K2n+2 are rational numbers.",
                "Consider a graphical game on the path U−1V−1U0V0U1V1 . . .",
                "Uk−1Vk−1Uk, where k = 2n + 2.",
                "Intuitively, we want each triple (Ui−1, Vi−1, Ui) to behave similarly to the players U, V , and W from the game described in the previous subsection.",
                "More precisely, we define the payoffs to the players in the following way. • The payoff to U−1 is 0 no matter what everyone else does. • The expected payoff to V−1 is 0 if it plays 0 and u0 − (x − x )u−1 −x if it plays 1, where u0 and u−1 are the strategies of U0 and U−1, respectively. • The expected payoff to V0 is 0 if it plays 0 and u1(u0 + 1)− u0 if it plays 1, where u0 and u1 are the strategies of U0 and U1, respectively. • For each i = 1, . . . , k − 1, the expected payoff to Vi when it plays 0 is P0 (Vi) = Aiuiui+1 − Aiui+1, and the expected payoff to Vi when it plays 1 is P1 (Vi) = P0 (Vi) + ui+1(2 − ui) − 1, where Ai = −Ki+1 and ui+1 and ui are the strategies of Ui+1 and Ui, respectively. • For each i = 0, . . . , k, the payoff to Ui does not depend on Vi and is 1 if Ui and Vi−1 select different actions and 0 otherwise.",
                "We will now characterize the Nash equilibria of this game using a sequence of claims.",
                "CLAIM 3.",
                "In all Nash equilibria of this game V−1 plays 1/2, and the strategies of u−1 and u0 satisfy u0 = (x − x )u−1 + x .",
                "Consequently, in all Nash equilibria we have u0 ∈ [x , x ]. 165 PROOF.",
                "The proof is similar to that of Claim 2.",
                "Let f(u−1) = (x − x )u−1 + x .",
                "Clearly, the player V−1 is indifferent between playing 0 and 1 if and only if u0 = f(u−1).",
                "Suppose that v−1 < 1/2.",
                "Then U0 strictly prefers to play 1, i.e., u0 = 1, so we have P1 (V−1) = P0 (V−1) + 1 − (x − x )u−1 − x .",
                "As 1 − x ≤ 1 − (x − x )u−1 − x ≤ 1 − x for u−1 ∈ [0, 1] and x < 1, we have P1 (V−1) > P0 (V−1), so V−1 prefers to play 1, a contradiction.",
                "Similarly, if v−1 > 1/2, the player U0 strictly prefers to play 0, i.e., u0 = 0, so we have P1 (V−1) = P0 (V−1) − (x − x )u−1 − x .",
                "As x < x , x > 0, we have P1 (V−1) < P0 (V−1), so V−1 prefers to play 0, a contradiction.",
                "Finally, if V−1 plays 1/2, but u0 = f(u−1), player V−1 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Also, note that f(0) = x , f(1) = x , and, moreover, f(u−1) ∈ [x , x ] if and only if u−1 ∈ [0, 1].",
                "Hence, in all Nash equilibria of this game we have u0 ∈ [x , x ].",
                "CLAIM 4.",
                "In all Nash equilibria of this game for each i = 0, . . . , k − 1, we have vi = 1/2, and the strategies of the players Ui and Ui+1 satisfy ui+1 = fi(ui), where f0(u) = u/(u + 1) and fi(u) = 1/(2 − u) for i > 0.",
                "PROOF.",
                "The proof of this claim is also similar to that of Claim 2.",
                "We use induction on i to prove that the statement of the claim is true and, additionally, ui = 1 for i > 0.",
                "For the base case i = 0, note that u0 = 0 by the previous claim (recall that x , x are selected so that x , x = 0, 1) and consider the triple (U0, V0, U1).",
                "Let v0 be the strategy of V0.",
                "First, suppose that v0 > 1/2.",
                "Then U1 strictly prefers to play 0, i.e., u1 = 0.",
                "Then for V0 we have P1 (V0) = P0 (V0) − u0.",
                "As u0 = 0, we have P1 (V0) < P0 (V0), which implies v1 = 0, a contradiction.",
                "Similarly, if v0 < 1/2, player U1 prefers to play 1, so we have u1 = 1.",
                "Hence, P1 (V0) = P0 (V0) + 1.",
                "It follows that P1 (V0) > P0 (V0), which implies v0 = 1, a contradiction.",
                "Finally, if v0 = 1/2, but u1 = u0/(u0 + 1), player V0 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as u1 = u0/(u0 + 1) and u0 ∈ [0, 1], we have u1 = 1.",
                "The argument for the inductive step is similar.",
                "Namely, suppose that the statement is proved for all i < i and consider the triple (Ui, Vi, Ui+1).",
                "Let vi be the strategy of Vi.",
                "First, suppose that vi > 1/2.",
                "Then Ui+1 strictly prefers to play 0, i.e., ui+1 = 0.",
                "Then for Vi we have P1 (Vi) = P0 (Vi)−1, i.e., P1 (Vi) < P0 (Vi), which implies vi = 0, a contradiction.",
                "Similarly, if vi < 1/2, player Ui+1 prefers to play 1, so we have ui+1 = 1.",
                "Hence, P1 (Vi) = P0 (Vi) + 1 − ui.",
                "By inductive hypothesis, we have ui < 1.",
                "Consequently, P1 (Vi) > P0 (Vi), which implies vi = 1, a contradiction.",
                "Finally, if vi = 1/2, but ui+1 = 1/(2 − ui), player Vi is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as ui+1 = 1/(2 − ui) and ui < 1, we have ui+1 < 1.",
                "CLAIM 5.",
                "Any <br>strategy profile</br> of the form (u−1, 1/2, u0, 1/2, u1, 1/2, . . . , uk−1, 1/2, uk), where u−1 ∈ [0, 1], u0 = (x − x )u−1 + x , u1 = u0/(u0 + 1), and ui+1 = 1/(2 − ui) for i ≥ 1 constitutes a Nash equilibrium.",
                "PROOF.",
                "First, the player U−1s payoffs do not depend on other players actions, so he is free to play any strategy in [0, 1].",
                "As long as u0 = (x −x )u−1 +x , player V−1 is indifferent between 0 and 1, so he is content to play 1/2; a similar argument applies to players V0, . . . , Vk−1.",
                "Finally, for each i = 0, . . . , k, the payoffs of player Ui only depend on the strategy of player Vi−1.",
                "In particular, as long as vi−1 = 1/2, player Ui is indifferent between playing 0 and 1, so he can play any mixed strategy ui ∈ [0, 1].",
                "To complete the proof, note that (x − x )u−1 + x ∈ [0, 1] for all u−1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] for all u0 ∈ [0, 1], and 1/(2 − ui) ∈ [0, 1] for all ui ∈ [0, 1], so we have ui ∈ [0, 1] for all i = 0, . . . , k. Now, let us compute the total payoff under a <br>strategy profile</br> of the form given in Claim 5.",
                "The payoff to U−1 is 0, and the expected payoff to each of the Ui, i = 0, . . . , k, is 1/2.",
                "The expected payoffs to V−1 and V0 are 0.",
                "Finally, for any i = 1, . . . , k − 1, the expected payoff to Vi is Ti = Aiuiui+1 − Aiui+1.",
                "It follows that to find a Nash equilibrium with the highest total payoff, we have to maximize Pk−1 i=1 Ti subject to conditions u−1 ∈ [0, 1], u0 = (x −x )u−1+x , u1 = u0/(u0+1), and ui+1 = 1/(2−ui) for i = 1, . . . , k − 1.",
                "We would like to express Pk−1 i=1 Ti as a function of u0.",
                "To simplify notation, set u = u0.",
                "LEMMA 2.",
                "For i = 1, . . . , k, we have ui = u+i−1 u+i .",
                "PROOF.",
                "The proof is by induction on i.",
                "For i = 1, we have u1 = u/(u + 1).",
                "Now, for i ≥ 2 suppose that ui−1 = (u + i − 2)/(u + i − 1).",
                "We have ui = 1/(2 − ui−1) = (u + i − 1)/(2u + 2i − 2 − u − i + 2) = (u + i − 1)/(u + i).",
                "It follows that for i = 1, . . . , k − 1 we have Ti = Ai u + i − 1 u + i u + i u + i + 1 − Ai u + i u + i + 1 = −Ai 1 u + i + 1 = Ki+1 u + i + 1 .",
                "Observe that as u−1 varies from 0 to 1, u varies from x to x .",
                "Therefore, to maximize the total payoff, we have to choose u ∈ [x , x ] so as to maximize K2 u + 2 + · · · + Kk u + k = R(u).",
                "By construction, the only maximum of R(u) on [x , x ] is α.",
                "It follows that in the payoff-maximizing Nash equilibrium of our game U0 plays α.",
                "Finally, note that the payoffs in our game are rational rather than integer.",
                "However, it is easy to see that we can multiply all payoffs to a player by their greatest common denominator without affecting his strategy.",
                "In the resulting game, all payoffs are integer.",
                "This concludes the proof of Theorem 2. 4.",
                "APPROXIMATING THE SOCIALLY OPTIMAL NASH EQUILIBRIUM We have seen that the Nash equilibrium that maximizes the social welfare may involve strategies that are not in Q.",
                "Hence, in this section we focus on finding a Nash equilibrium that is almost optimal from the social welfare perspective.",
                "We propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within from optimal.",
                "The running time of this algorithm is polynomial in 1/ , n and |Pmax| (recall that Pmax is the maximum absolute value of an entry of a payoff matrix).",
                "While the negative result of the previous section is for graphical games on paths, our algorithm applies to a wider range of scenarios.",
                "Namely, it runs in polynomial time on bounded-degree trees 166 as long as the best response policy of each vertex, given its parent, can be represented as a union of a polynomial number of rectangles.",
                "Note that path graphs always satisfy this condition: in [9] we showed how to compute such a representation, given a graph with maximum degree 2.",
                "Consequently, for path graphs the running time of our algorithm is guaranteed to be polynomial. (Note that [9] exhibits a family of graphical games on bounded-degree trees for which the best response policies of some of the vertices, given their parents, have exponential size, when represented as unions of rectangles.)",
                "Due to space restrictions, in this version of the paper we present the algorithm for the case where the graph underlying the graphical game is a path.",
                "We then state our result for the general case; the proof can be found in the full version of this paper [10].",
                "Suppose that s is a <br>strategy profile</br> for a graphical game G. That is, s assigns a mixed strategy to each vertex of G. let EPV (s) be the expected payoff of player V under s and let EP(s) =P V EPV (s).",
                "Let M(G) = max{EP(s) | s is a Nash equilibrium for G}.",
                "THEOREM 3.",
                "Suppose that G is a graphical game on an nvertex path.",
                "Then for any > 0 there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G)− .",
                "The running time of the algorithm is O(n4 P3 max/ 3 ) PROOF.",
                "Let {V1, . . . , Vn} be the set of all players.",
                "We start by constructing the best response policies for all Vi, i = 1, . . . , n − 1.",
                "As shown in [9], this can be done in time O(n3 ).",
                "Let N > 5n be a parameter to be selected later, set δ = 1/N, and define X = {jδ | j = 0, . . . , N}.",
                "We say that vj is an event point for a player Vi if it is a Vi-event point for B(Vi, Vi−1) or B(Vi+1, Vi).",
                "For each player Vi, consider a finite set of strategies Xi given by Xi = X ∪ {vj |vj is an event point for Vi}.",
                "It has been shown in [9] that for any i = 2, . . . , n, the best response policy B(Vi, Vi−1) has at most 2n + 4 Vi-event points.",
                "As we require N > 5n, we have |Xi| ≤ 2N; assume without loss of generality that |Xi| = 2N.",
                "Order the elements of Xi in increasing order as x1 i = 0 < x2 i < · · · < x2N i .",
                "We will refer to the strategies in Xi as discrete strategies of player Vi; a <br>strategy profile</br> in which each player has a discrete strategy will be referred to as a discrete <br>strategy profile</br>.",
                "We will now show that even we restrict each player Vi to strategies from Xi, the players can still achieve a Nash equilibrium, and moreover, the best such Nash equilibrium (with respect to the social welfare) has total payoff at least M(G) − as long as N is large enough.",
                "Let s be a <br>strategy profile</br> that maximizes social welfare.",
                "That is, let s = (s1, . . . , sn) where si is the mixed strategy of player Vi and EP(s) = M(G).",
                "For i = 1, . . . , n, let ti = max{xj i | xj i ≤ si}.",
                "First, we will show that the <br>strategy profile</br> t = (t1, . . . , tn) is a Nash equilibrium for G. Fix any i, 1 < i ≤ n, and let R = [v1, v2]×[u1, u2] be the rectangle in B(Vi, Vi−1) that contains (si, si−1).",
                "As v1 is a Vi-event point of B(Vi, Vi−1), we have v1 ≤ ti, so the point (ti, si−1) is inside R. Similarly, the point u1 is a Vi−1-event point of B(Vi, Vi−1), so we have u1 ≤ ti−1, and therefore the point (ti, ti−1) is inside R. This means that for any i, 1 < i ≤ n, we have ti−1 ∈ pbrVi−1 (ti), which implies that t = (t1, . . . , tn) is a Nash equilibrium for G. Now, let us estimate the expected loss in social welfare caused by playing t instead of s. LEMMA 3.",
                "For any pair of strategy profiles t, s such that |ti − si| ≤ δ we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ for any i = 1, . . . , n. PROOF.",
                "Let Pi klm be the payoff of the player Vi, when he plays k, Vi−1 plays l, and Vi+1 plays m. Fix i = 1, . . . , n and for k, l, m ∈ {0, 1}, set tklm = tk i−1(1 − ti−1)1−k tl i(1 − ti)1−l tm i+1(1 − ti+1)1−m sklm = sk i−1(1 − si−1)1−k sl i(1 − si)1−l sm i+1(1 − si+1)1−m .",
                "We have |EPVi (s) − EPVi (t)| ≤ X k,l,m=0,1 |Pi klm(tklm − sklm )| ≤ 8Pmax max klm |tklm − sklm | We will now show that for any k, l, m ∈ {0, 1} we have |tklm − sklm | ≤ 3δ; clearly, this implies the lemma.",
                "Indeed, fix k, l, m ∈ {0, 1}.",
                "Set x = tk i−1(1 − ti−1)1−k , x = sk i−1(1 − si−1)1−k , y = tl i(1 − ti)1−l , y = sl i(1 − si)1−l , z = tm i+1(1 − ti+1)1−m , z = sm i+1(1 − si+1)1−m .",
                "Observe that if k = 0 then x − x = (1 − ti−1) − (1 − si−1), and if k = 1 then x − x = ti−1 − si−1, so |x − x | ≤ δ.",
                "A similar argument shows |y − y | ≤ δ, |z − z | ≤ δ.",
                "Also, we have x, x , y, y , z, z ∈ [0, 1].",
                "Hence, |tklm −sklm | = |xyz−x y z | = |xyz − x yz + x yz − x y z + x y z − x y z | ≤ |x − x |yz + |y − y |x z + |z − z |x y ≤ 3δ.",
                "Lemma 3 implies Pn i=1 |EPVi (s) − EPVi (t)| ≤ 24nPmaxδ, so by choosing δ < /(24nPmax), or, equivalently, setting N > 24nPmax/ , we can ensure that the total expected payoff for the <br>strategy profile</br> t is within from optimal.",
                "We will now show that we can find the best discrete Nash equilibrium (with respect to the social welfare) using dynamic programming.",
                "As t is a discrete <br>strategy profile</br>, this means that the <br>strategy profile</br> found by our algorithm will be at least as good as t. Define ml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj , j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1, and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The values ml,k i , i = 1, . . . , n; k, l = 1, . . . , N, can be computed inductively, as follows.",
                "We have ml,k 1 = 0 for k, l = 1, . . . , N. Now, suppose that we have already computed ml,k j for all j < i; k, l = 1, . . . , N. To compute mk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this is not the case, we have ml,k i = −∞.",
                "Otherwise, consider the set Y = Xi−2 ∩ pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "The proof of Theorem 1 in [9] implies that the set pbrVi−2 (xl i−1) is non-empty: the player Vi−2 has a potential best response to any strategy of Vi−1, in particular, xl i−1.",
                "By construction of the set Xi−2, this implies that Y is not empty.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "Then we have ml,k i = max{mj,l i−1 + pjlk | xj i−2 ∈ Y }.",
                "Finally, suppose that we have computed ml,k n for l, k = 1, . . . , N. We still need to take into account the payoff of player Vn.",
                "Hence, 167 we consider all pairs (xk n, xl n−1) that satisfy xl n−1 ∈ pbrVn−1 (xk n), and pick the one that maximizes the sum of mk,l n and the payoff of Vn when he plays xk n and Vn−1 plays xl n−1.",
                "This results in the maximum total payoff the players can achieve in a Nash equilibrium using discrete strategies; the actual <br>strategy profile</br> that produces this payoff can be reconstructed using standard dynamic programming techniques.",
                "It is easy to see that each ml,k i can be computed in time O(N), i.e., all of them can be computed in time O(nN3 ).",
                "Recall that we have to select N ≥ (24nPmax)/ to ensure that the <br>strategy profile</br> we output has total payoff that is within from optimal.",
                "We conclude that we can compute an -approximation to the best Nash equilibrium in time O(n4 P3 max/ 3 ).",
                "This completes the proof of Theorem 3.",
                "To state our result for the general case (i.e., when the underlying graph is a bounded-degree tree rather than a path), we need additional notation.",
                "If G has n players, let q(n) be an upper bound on the number of event points in the representation of any best response policy.",
                "That is, we assume that for any vertex U with parent V , B(V, U) has at most q(n) event points.",
                "We will be interested in the situation in which q(n) is polynomial in n. THEOREM 4.",
                "Let G be an n-player graphical game on a tree in which each node has at most Δ children.",
                "Suppose we are given a set of best-response policies for G in which each best-response policy B(V, U) is represented by a set of rectangles with at most q(n) event points.",
                "For any > 0, there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G) − .",
                "The running time of the algorithm is polynomial in n, Pmax and −1 provided that the tree has bounded degree (that is, Δ = O(1)) and q(n) is a polynomial in n. In particular, if N = max((Δ + 1)q(n) + 1, n2Δ+2 (Δ + 2)Pmax −1 ) and Δ > 1 then the running time is O(nΔ(2N)Δ .",
                "For the proof of this theorem, see [10]. 4.1 A polynomial-time algorithm for multiplicative approximation The running time of our algorithm is pseudopolynomial rather than polynomial, because it includes a factor which is polynomial in Pmax, the maximum (in absolute value) entry in any payoff matrix.",
                "If we are interested in multiplicative approximation rather than additive one, this can be improved to polynomial.",
                "First, note that we cannot expect a multiplicative approximation for all inputs.",
                "That is, we cannot hope to have an algorithm that computes a Nash equilibrium with total payoff at least (1 − )M(G).",
                "If we had such an algorithm, then for graphical games G with M(G) = 0, the algorithm would be required to output the optimal solution.",
                "To show that this is infeasible, observe that we can use the techniques of Section 3.2 to construct two integercoefficient graphical games on paths of length O(n) such that for some X ∈ R the maximal total payoff in the first game is X, the maximal total payoff in the second game is −X, and for both games, the strategy profiles that achieve the maximal total payoffs involve algebraic numbers of degree n. By combining the two games so that the first vertex of the second game becomes connected to the last vertex of the first game, but the payoffs of all players do not change, we obtain a graphical game in which the best Nash equilibrium has total payoff 0, yet the strategies that lead to this payoff have high algebraic complexity.",
                "However, we can achieve a multiplicative approximation when all entries of the payoff matrices are positive and the ratio between any two entries is polynomially bounded.",
                "Recall that we assume that all payoffs are integer, and let Pmin > 0 be the smallest entry of any payoff matrix.",
                "In this case, for any <br>strategy profile</br> the payoff to player i is at least Pmin, so the total payoff in the social-welfare maximizing Nash equilibrium s satisfies M(G) ≥ nPmin.",
                "Moreover, Lemma 3 implies that by choosing δ < /(24Pmax/Pmin), we can ensure that the Nash equilibrium t produced by our algorithm satisfies nX i=1 EPVi (s) − nX i=1 EPVi (t) ≤ 24Pmaxδn ≤ nPmin ≤ M(G), i.e., for this value of δ we have Pn i=1 EPVi (t) ≥ (1 − )M(G).",
                "Recall that the running time of our algorithm is O(nN3 ), where N has to be selected to satisfy N > 5n, N = 1/δ.",
                "It follows that if Pmin > 0, Pmax/Pmin = poly(n), we can choose N so that our algorithm provides a multiplicative approximation guarantee and runs in time polynomial in n and 1/ . 5.",
                "BOUNDED PAYOFF NASH EQUILIBRIA Another natural way to define what is a good Nash equilibrium is to require that each players expected payoff exceeds a certain threshold.",
                "These thresholds do not have to be the same for all players.",
                "In this case, in addition to the payoff matrices of the n players, we are given n numbers T1, . . . , Tn, and our goal is to find a Nash equilibrium in which the payoff of player i is at least Ti, or report that no such Nash equilibrium exists.",
                "It turns out that we can design an FPTAS for this problem using the same techniques as in the previous section.",
                "THEOREM 5.",
                "Given a graphical game G on an n-vertex path and n rational numbers T1, . . . , Tn, suppose that there exists a <br>strategy profile</br> s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. Then for any > 0 we can find in time O(max{nP3 max/ 3 , n4 / 3 }) a <br>strategy profile</br> s such that s is a Nash equilibrium for G and EPVi (s ) ≥ Ti − for i = 1, . . . , n. PROOF.",
                "The proof is similar to that of Theorem 3.",
                "First, we construct the best response policies for all players, choose N > 5n, and construct the sets Xi, i = 1, . . . , n, as described in the proof of Theorem 3.",
                "Consider a <br>strategy profile</br> s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. We construct a <br>strategy profile</br> ti = max{xj i | xj i ≤ si} and use the same argument as in the proof of Theorem 3 to show that t is a Nash equilibrium for G. By Lemma 3, we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ, so choosing δ < /(24Pmax), or, equivalently, N > max{5n, 24Pmax/ }, we can ensure EPVi (t) ≥ Ti − for i = 1, . . . , n. Now, we will use dynamic programming to find a discrete Nash equilibrium that satisfies EPVi (t) ≥ Ti − for i = 1, . . . , n. As t is a discrete strategy profile, our algorithm will succeed whenever there is a strategy profile s with EPVi (s) ≥ Ti− for i = 1, . . . , n. Let zl,k i = 1 if there is a discrete strategy profile such that for any j < i the strategy of the player Vj is a potential best response to the strategy of Vj+1, the expected payoff of Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "Otherwise, let zl,k i = 0.",
                "We can compute zl,k i , i = 1, . . . , n; k, l = 1, . . . , N inductively, as follows.",
                "We have zl,k 1 = 1 for k, l = 1, . . . , N. Now, suppose that we have already computed zl,k j for all j < i; k, l = 1, . . . , N. To compute zk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this 168 is not the case, clearly, zk,l i = 0.",
                "Otherwise, consider the set Y = Xi−2 ∩pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "It has been shown in the proof of Theorem 3 that Y = ∅.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "If there exists an xj i−2 ∈ Y such that zj,l i−1 = 1 and pjlk ≥ Ti−2 − , set zl,k i = 1.",
                "Otherwise, set zl,k i = 0.",
                "Having computed zl,k n , l, k = 1, . . . , N, we check if zl,k n = 1 for some pair (l, k). if such a pair of indices exists, we instruct Vn to play xk n and use dynamic programming techniques (or, equivalently, the downstream pass of the algorithm of [13]) to find a Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n (recall that Vn is a dummy player, i.e., we assume Tn = 0, EPn(s ) = 0 for any choice of s ).",
                "If zl,k n = 0 for all l, k = 1, . . . , N, there is no discrete Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n and hence no Nash equilibrium s (not necessarily discrete) such that EPVi (s) ≥ Ti for i = 1, . . . , n. The running time analysis is similar to that for Theorem 3; we conclude that the running time of our algorithm is O(nN3 ) = O(max{nP3 max/ 3 , n4 / 3 }).",
                "REMARK 1.",
                "Theorem 5 can be extended to trees of bounded degree in the same way as Theorem 4. 5.1 Exact Computation Another approach to finding Nash equilibria with bounded payoffs is based on inductively computing the subsets of the best response policies of all players so as to exclude the points that do not provide sufficient payoffs to some of the players.",
                "Formally, we say that a strategy v of the player V is a potential best response to a strategy w of its parent W with respect to a threshold vector T = (T1, . . . , Tn), (denoted by v ∈ pbrV (w, T)) if there is an equilibrium in the instance G(V,W ),W =w in which V plays mixed strategy v and the payoff to any player Vi downstream of V (including V ) is at least Ti.",
                "The best response policy for V with respect to a threshold vector T is defined as B(W, V, T) = {(w, v) | v ∈ pbrV (w, T), w ∈ [0, 1]}.",
                "It is easy to see that if any of the sets B(Vj, Vj−1, T), j = 1, . . . , n, is empty, it means that it is impossible to provide all players with expected payoffs prescribed by T. Otherwise, one can apply the downstream pass of the original algorithm of [13] to find a Nash equilibrium.",
                "As we assume that Vn is a dummy vertex whose payoff is identically 0, the Nash equilibrium with these payoffs exists as long as Tn ≤ 0 and B(Vn, Vn−1, T) is not empty.",
                "Using the techniques developed in [9], it is not hard to show that for any j = 1, . . . , n, the set B(Vj , Vj−1, T) consists of a finite number of rectangles, and one can compute B(Vj+1, Vj , T) given B(Vj , Vj−1, T).",
                "The advantage of this approach is that it allows us to represent all Nash equilibria that provide required payoffs to the players.",
                "However, it is not likely to be practical, since it turns out that the rectangles that appear in the representation of B(Vj , Vj−1, T) may have irrational coordinates.",
                "CLAIM 6.",
                "There exists a graphical game G on a 3-vertex path UV W and a vector T = (T1, T2, T3) such that B(V, W, T) cannot be represented as a union of a finite number of rectangles with rational coordinates.",
                "PROOF.",
                "We define the payoffs to the players in G as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = uw, P1 (V ) = P0 (V ) + w − .8u − .1, where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = .8u + .1; observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "It is not hard to see that we have B(W, V ) = [0, .1]×{0} ∪ [.1, .9]×[0, 1] ∪ [.9, 1]×{1}.",
                "The payoffs to W are not important for our construction; for example, set P0(W ) = P0(W ) = 0.",
                "Now, set T = (0, 1/8, 0), i.e., we are interested in Nash equilibria in which V s expected payoff is at least 1/8.",
                "Suppose w ∈ [0, 1].",
                "The player V can play a mixed strategy v when W is playing w as long as U plays u = f−1 (w) = 5w/4 − 1/8 (to ensure that V is indifferent between 0 and 1) and P0 (V ) = P1 (V ) = uw = w(5w/4 − 1/8) ≥ 1/8.",
                "The latter condition is satisfied if w ≤ (1 − √ 41)/20 < 0 or w ≥ (1 + √ 41)/20.",
                "Note that we have .1 < (1 + √ 41)/20 < .9.",
                "For any other value of w, any strategy of U either makes V prefer one of the pure strategies or does not provide it with a sufficient expected payoff.",
                "There are also some values of w for which V can play a pure strategy (0 or 1) as a potential best response to W and guarantee itself an expected payoff of at least 1/8; it can be shown that these values of w form a finite number of segments in [0, 1].",
                "We conclude that any representation of B(W, V, T) as a union of a finite number of rectangles must contain a rectangle of the form [(1 + √ 41)/20, w ]×[v , v ] for some w , v , v ∈ [0, 1].",
                "On the other hand, it can be shown that for any integer payoff matrices and threshold vectors and any j = 1, . . . , n − 1, the sets B(Vj+1, Vj, T) contain no rectangles of the form [u , u ]×{v} or {v}×[w , w ], where v ∈ R\\Q.",
                "This means that if B(Vn, Vn−1, T) is non-empty, i.e., there is a Nash equilibrium with payoffs prescribed by T, then the downstream pass of the algorithm of [13] can always pick a <br>strategy profile</br> that forms a Nash equilibrium, provides a payoff of at least Ti to the player Vi, and has no irrational coordinates.",
                "Hence, unlike in the case of the Nash equilibrium that maximizes the social welfare, working with irrational numbers is not necessary, and the fact that the algorithm discussed in this section has to do so can be seen as an argument against using this approach. 6.",
                "OTHER CRITERIA FOR SELECTING A NASH EQUILIBRIUM In this section, we consider several other criteria that can be useful in selecting a Nash equilibrium. 6.1 Combining welfare maximization with bounds on payoffs In many real life scenarios, we want to maximize the social welfare subject to certain restrictions on the payoffs to individual players.",
                "For example, we may want to ensure that no player gets a negative expected payoff, or that the expected payoff to player i is at least Pi max − ξ, where Pi max is the maximum entry of is payoff matrix and ξ is a fixed parameter.",
                "Formally, given a graphical game G and a vector T1, . . . , Tn, let S be the set of all Nash equilibria s of G that satisfy Ti ≤ EPVi (s) for i = 1, . . . , n, and let ˆs = argmaxs∈S EP(s).",
                "If the set S is non-empty, we can find a Nash equilibrium ˆs that is -close to satisfying the payoff bounds and is within from ˆs with respect to the total payoff by combining the algorithms of Section 4 and Section 5.",
                "Namely, for a given > 0, choose δ as in the proof of Theorem 3, and let Xi be the set of all discrete strategies of player Vi (for a 169 formal definition, see the proof of Theorem 3).",
                "Combining the proofs of Theorem 3 and Theorem 5, we can see that the <br>strategy profile</br> ˆt given by ˆti = max{xj i | xj i ≤ ˆsi} satisfies EPVi (ˆt) ≥ Ti − , |EP(ˆs) − EP(ˆt)| ≤ .",
                "Define ˆml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj, j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1 and the payoff to player Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The ˆml,k i can be computed by dynamic programming similarly to the ml,k i and zl,k i in the proofs of Theorems 3 and 5.",
                "Finally, as in the proof of Theorem 3, we use ml,k n to select the best discrete Nash equilibrium subject to the payoff constraints.",
                "Even more generally, we may want to maximize the total payoff to a subset of players (who are assumed to be able to redistribute the profits fairly among themselves) while guaranteeing certain expected payoffs to (a subset of) the other players.",
                "This problem can be handled similarly. 6.2 A minimax approach A more egalitarian measure of the quality of a Nash equilibrium is the minimal expected payoff to a player.",
                "The optimal solution with respect to this measure is a Nash equilibrium in which the minimal expected payoff to a player is maximal.",
                "To find an approximation to such a Nash equilibrium, we can combine the algorithm of Section 5 with binary search on the space of potential lower bounds.",
                "Note that the expected payoff to any player Vi given a strategy s always satisfies −Pmax ≤ EPVi (s) ≤ Pmax.",
                "For a fixed > 0, we start by setting T = −Pmax, T = Pmax, T∗ = (T + T )/2.",
                "We then run the algorithm of Section 5 with T1 = · · · = Tn = T∗ .",
                "If the algorithm succeeds in finding a Nash equilibrium s that satisfies EPVi (s ) ≥ T∗ − for all i = 1, . . . , n, we set T = T∗ , T∗ = (T + T )/2; otherwise, we set T = T∗ , T∗ = (T + T )/2 and loop.",
                "We repeat this process until |T − T | ≤ .",
                "It is not hard to check that for any p ∈ R, if there is a Nash equilibrium s such that mini=1,...,n EPVi (s) ≥ p, then our algorithm outputs a Nash equilibrium s that satisfies mini=1,...,n EPVi (s) ≥ p−2 .",
                "The running time of our algorithm is O(max{nP3 max log −1 / 3 , n4 log −1 / 3 }). 6.3 Equalizing the payoffs When the players payoff matrices are not very different, it is reasonable to demand that the expected payoffs to the players do not differ by much either.",
                "We will now show that Nash equilibria in this category can be approximated in polynomial time as well.",
                "Indeed, observe that the algorithm of Section 5 can be easily modified to deal with upper bounds on individual payoffs rather than lower bounds.",
                "Moreover, we can efficiently compute an approximation to a Nash equilibrium that satisfies both the upper bound and the lower bound for each player.",
                "More precisely, suppose that we are given a graphical game G, 2n rational numbers T1, . . . , Tn, T1, . . . , Tn and > 0.",
                "Then if there exists a <br>strategy profile</br> s such that s is a Nash equilibrium for G and Ti ≤ EPVi (s) ≤ Ti for i = 1, . . . , n, we can find a <br>strategy profile</br> s such that s is a Nash equilibrium for G and Ti − ≤ EPVi (s ) ≤ Ti + for i = 1, . . . , n. The modified algorithm also runs in time O(max{nP3 max/ 3 , [4]n4 / 3 }).",
                "This observation allows us to approximate Nash equilibria in which all players expected payoffs differ by at most ξ for any fixed ξ > 0.",
                "Given an > 0, we set T1 = · · · = Tn = −Pmax, T1 = · · · = Tn = −Pmax + ξ + , and run the modified version of the algorithm of Section 5.",
                "If it fails to find a solution, we increment all Ti, Ti by and loop.",
                "We continue until the algorithm finds a solution, or Ti ≥ Pmax.",
                "Suppose that there exists a Nash equilibrium s that satisfies |EPVi (s) − EPVj (s)| ≤ ξ for all i, j = 1, . . . , n. Set r = mini=1,...,n EPVi (s); we have r ≤ EPVi (s) ≤ r + ξ for all i = 1, . . . , n. There exists a k ≥ 0 such that −Pmax + (k − 1) ≤ r ≤ −Pmax + k .",
                "During the kth step of the algorithm, we set T1 = · · · = Tn = −Pmax +(k−1) , i.e., we have r− ≤ Ti ≤ r, r + ξ ≤ Ti ≤ r + ξ + .",
                "That is, the Nash equilibrium s satisfies Ti ≤ r ≤ EPVi (s) ≤ r + ξ ≤ Ti , which means that when Ti is set to −Pmax + (k − 1) , our algorithm is guaranteed to output a Nash equilibrium t that satisfies r − 2 ≤ Ti − ≤ EPVi (t) ≤ Ti + ≤ r +ξ +2 .",
                "We conclude that whenever such a Nash equilibrium s exists, our algorithm outputs a Nash equilibrium t that satisfies |EPVi (t) − EPVj (t)| ≤ ξ + 4 for all i, j = 1, . . . , n. The running time of this algorithm is O(max{nP3 max/ 4 , n4 / 4 }).",
                "Note also that we can find the smallest ξ for which such a Nash equilibrium exists by combining this algorithm with binary search over the space ξ = [0, 2Pmax].",
                "This identifies an approximation to the fairest Nash equilibrium, i.e., one in which the players expected payoffs differ by the smallest possible amount.",
                "Finally, note that all results in this section can be extended to bounded-degree trees. 7.",
                "CONCLUSIONS We have studied the problem of equilibrium selection in graphical games on bounded-degree trees.",
                "We considered several criteria for selecting a Nash equilibrium, such as maximizing the social welfare, ensuring a lower bound on the expected payoff of each player, etc.",
                "First, we focused on the algebraic complexity of a social welfare-maximizing Nash equilibrium, and proved strong negative results for that problem.",
                "Namely, we showed that even for graphical games on paths, any algebraic number α ∈ [0, 1] may be the only strategy available to some player in all social welfaremaximizing Nash equilibria.",
                "This is in sharp contrast with the fact that graphical games on trees always possess a Nash equilibrium in which all players strategies are rational numbers.",
                "We then provided approximation algorithms for selecting Nash equilibria with special properties.",
                "While the problem of finding approximate Nash equilibria for various classes of games has received a lot of attention in recent years, most of the existing work aims to find -Nash equilibria that satisfy (or are -close to satisfying) certain properties.",
                "Our approach is different in that we insist on outputting an exact Nash equilibrium, which is -close to satisfying a given requirement.",
                "As argued in the introduction, there are several reasons to prefer a solution that constitutes an exact Nash equilibrium.",
                "Our algorithms are fully polynomial time approximation schemes, i.e., their running time is polynomial in the inverse of the approximation parameter , though they may be pseudopolynomial with respect to the input size.",
                "Under mild restrictions on the inputs, they can be modified to be truly polynomial.",
                "This is the strongest positive result one can derive for a problem whose exact solutions may be hard to represent, as is the case for many of the problems considered here.",
                "While we prove our results for games on a path, they can be generalized to any tree for which the best response policies have compact representations as unions of rectangles.",
                "In the full version of the paper we describe our algorithms for the general case.",
                "Further work in this vein could include extensions to the kinds of guarantees sought for Nash equilibria, such as guaranteeing total payoffs for subsets of players, selecting equilibria in which some players are receiving significantly higher payoffs than their peers, etc.",
                "At the moment however, it is perhaps more important to inves170 tigate whether Nash equilibria of graphical games can be computed in a decentralized manner, in contrast to the algorithms we have introduced here.",
                "It is natural to ask if our results or those of [9] can be generalized to games with three or more actions.",
                "However, it seems that this will make the analysis significantly more difficult.",
                "In particular, note that one can view the bounded payoff games as a very limited special case of games with three actions per player.",
                "Namely, given a two-action game with payoff bounds, consider a game in which each player Vi has a third action that guarantees him a payoff of Ti no matter what everyone else does.",
                "Then checking if there is a Nash equilibrium in which none of the players assigns a nonzero probability to his third action is equivalent to checking if there exists a Nash equilibrium that satisfies the payoff bounds in the original game, and Section 5.1 shows that finding an exact solution to this problem requires new ideas.",
                "Alternatively it may be interesting to look for similar results in the context of correlated equilibria (CE), especially since the best CE may have higher value (total expected payoff) than the best NE.",
                "The ratio between these values is called the mediation value in [1].",
                "It is known from [1] that the mediation value of 2-player, 2-action games with non-negative payoffs is at most 4 3 , and they exhibit a 3-player game for which it is infinite.",
                "Furthermore, a 2-player, 3action example from [1] also has infinite mediation value. 8.",
                "REFERENCES [1] I. Ashlagi, D. Monderer and M. Tenneholtz, On the Value of Correlation, Proceedings of Dagstuhl seminar 05011 (2005) [2] R. Aumann, Subjectivity and Correlation in Randomized Strategies, Journal of Mathematical Economics 1 pp. 67-96 (1974) [3] B. Blum, C. R. Shelton, and D. Koller, A Continuation Method for Nash Equilibria in Structured Games, Proceedings of IJCAI03 [4] X. Chen, X. Deng and S. Teng, Computing Nash Equilibria: Approximation and Smoothed Complexity, Proceedings of FOCS06 [5] X. Chen, X. Deng, Settling the Complexity of 2-Player Nash-Equilibrium, Proceedings of FOCS06 [6] V. Conitzer and T. Sandholm, Complexity Results about Nash Equilibria, Proceedings of IJCAI03 [7] C. Daskalakis, P. W. Goldberg and C. H. Papadimitriou, The Complexity of Computing a Nash Equilibrium, Proceedings of STOC06 [8] R. S. Datta, Universality of Nash Equilibria, Mathematics of Operations Research 28:3, 2003 [9] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Nash Equilibria in Graphical games on Trees Revisited, Proceedings of ACM EC06 [10] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Computing Good Nash Equilibria in Graphical Games, http://arxiv.org/abs/cs.GT/0703133 [11] I. Gilboa and E. Zemel, Nash and Correlated Equilibria: Some Complexity Considerations, Games and Economic Behavior, 1 pp. 80-93 (1989) [12] P. W. Goldberg and C. H. Papadimitriou, Reducibility Among Equilibrium Problems, Proceedings of STOC06 [13] M. Kearns, M. Littman, and S. Singh, Graphical Models for Game Theory, Proceedings of UAI01 [14] M. Littman, M. Kearns, and S. Singh, An Efficient Exact Algorithm for Singly Connected Graphical Games, Proceedings of NIPS01 [15] R. Lipton and E. Markakis, Nash Equilibria via Polynomial Equations, Proceedings of LATIN04 [16] L. Ortiz and M. Kearns, Nash Propagation for Loopy Graphical Games, Proceedings of NIPS03 [17] C.H.",
                "Papadimitriou, Computing Correlated Equilibria in Multi-Player Games, Proceedings of STOC05 [18] C.H.",
                "Papadimitriou and T. Roughgarden, Computing Equilibria in Multi-Player Games, Proceedings of SODA05 [19] D. Vickrey and D. Koller, Multi-agent Algorithms for Solving Graphical Games, Proceedings of AAAI02 171"
            ],
            "original_annotated_samples": [
                "For any > 0 this algorithm outputs an -Nash equilibrium, which is a <br>strategy profile</br> in which no player can improve his payoff by more than by unilaterally changing his strategy.",
                "First, the players may be sensitive to a small loss in payoffs, so the <br>strategy profile</br> that is an -Nash equilibrium will not be stable.",
                "Unfortunately, it turns out that computing such a <br>strategy profile</br> exactly is not possible: in this section, we show that even if all players payoffs are integers, the <br>strategy profile</br> that maximizes the total payoff may have irrational coordinates; moreover, it may involve algebraic numbers of an arbitrary degree. 3.1 Warm-up: quadratic irrationalities We start by providing an example of a graphical game on a path of length 3 with integer payoffs such that in the Nash equilibrium that maximizes the total payoff, one of the players has a strategy in R \\ Q.",
                "Any <br>strategy profile</br> of the form (u−1, 1/2, u0, 1/2, u1, 1/2, . . . , uk−1, 1/2, uk), where u−1 ∈ [0, 1], u0 = (x − x )u−1 + x , u1 = u0/(u0 + 1), and ui+1 = 1/(2 − ui) for i ≥ 1 constitutes a Nash equilibrium.",
                "To complete the proof, note that (x − x )u−1 + x ∈ [0, 1] for all u−1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] for all u0 ∈ [0, 1], and 1/(2 − ui) ∈ [0, 1] for all ui ∈ [0, 1], so we have ui ∈ [0, 1] for all i = 0, . . . , k. Now, let us compute the total payoff under a <br>strategy profile</br> of the form given in Claim 5."
            ],
            "translated_annotated_samples": [
                "Para cualquier > 0, este algoritmo produce un equilibrio de Nash, que es un <br>perfil estratégico</br> en el que ningún jugador puede mejorar su pago más que al cambiar unilateralmente su estrategia.",
                "Primero, es posible que los jugadores sean sensibles a una pequeña pérdida en las ganancias, por lo que el <br>perfil estratégico</br> que es un equilibrio de Nash no será estable.",
                "Lamentablemente, resulta que calcular exactamente dicho <br>perfil estratégico</br> no es posible: en esta sección, mostramos que incluso si todas las ganancias de los jugadores son números enteros, el <br>perfil estratégico</br> que maximiza la ganancia total puede tener coordenadas irracionales; además, puede involucrar números algebraicos de un grado arbitrario. 3.1 Calentamiento: irracionales cuadráticos Comenzamos proporcionando un ejemplo de un juego gráfico en un camino de longitud 3 con ganancias enteras tal que en el equilibrio de Nash que maximiza la ganancia total, uno de los jugadores tiene una estrategia en R \\ Q.",
                "Cualquier <br>perfil estratégico</br> de la forma (u−1, 1/2, u0, 1/2, u1, 1/2, . . . , uk−1, 1/2, uk), donde u−1 ∈ [0, 1], u0 = (x − x )u−1 + x , u1 = u0/(u0 + 1), y ui+1 = 1/(2 − ui) para i ≥ 1, constituye un equilibrio de Nash.",
                "Para completar la prueba, observe que (x − x )u−1 + x ∈ [0, 1] para todo u−1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] para todo u0 ∈ [0, 1], y 1/(2 − ui) ∈ [0, 1] para todo ui ∈ [0, 1], por lo que tenemos ui ∈ [0, 1] para todo i = 0, . . . , k. Ahora, calculemos la ganancia total bajo un <br>perfil estratégico</br> de la forma dada en la Afirmación 5."
            ],
            "translated_text": "Calcular buenos equilibrios de Nash en juegos gráficos ∗ Edith Elkind Universidad Hebrea de Jerusalén, Israel, y Universidad de Southampton, Southampton, SO17 1BJ, Reino Unido. Leslie Ann Goldberg Universidad de Liverpool Liverpool L69 3BX, Reino Unido. Paul Goldberg Universidad de Liverpool Liverpool L69 3BX, Reino Unido. RESUMEN Este artículo aborda el problema de la selección justa de equilibrios en juegos gráficos. Nuestro enfoque se basa en la estructura de datos llamada política de mejor respuesta, propuesta por Kearns et al. [13] como una forma de representar todos los equilibrios de Nash de un juego gráfico. En [9], se demostró que la política de mejor respuesta tiene un tamaño polinómico siempre y cuando el grafo subyacente sea un camino. En este artículo, demostramos que si el grafo subyacente es un árbol de grado acotado y la política de mejor respuesta tiene un tamaño polinómico, entonces existe un algoritmo eficiente que construye un equilibrio de Nash que garantiza ciertos pagos a todos los participantes. Otro concepto de solución atractivo es un equilibrio de Nash que maximiza el bienestar social. Mostramos que, si bien calcular exactamente lo último es inviable (demostramos que resolver este problema puede implicar números algebraicos de un grado arbitrariamente alto), existe un FPTAS para encontrar dicho equilibrio siempre y cuando la política de mejor respuesta tenga un tamaño polinómico. Estos dos algoritmos pueden combinarse para producir equilibrios de Nash que satisfacen varios criterios de equidad. Categorías y Descriptores de Asignaturas F.2 [Teoría de la Computación]: Análisis de Algoritmos y Complejidad de Problemas; J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento - Economía Términos Generales Algoritmos, Economía, Teoría 1. INTRODUCCIÓN En una gran comunidad de agentes, es poco probable que el comportamiento de un agente tenga un efecto directo en la mayoría de los otros agentes: más bien, solo serán afectados los agentes que estén lo suficientemente cerca de él. Sin embargo, a medida que estos agentes responden adaptando su comportamiento, más agentes sentirán las consecuencias y eventualmente las decisiones tomadas por un solo agente se propagarán por toda la comunidad. Esta es la intuición detrás de los juegos gráficos, los cuales fueron introducidos por Kearns, Littman y Singh en [13] como un esquema de representación compacto para juegos con muchos jugadores. En un juego gráfico de n jugadores, a cada jugador se le asocia un vértice de un grafo subyacente G, y las ganancias de cada jugador dependen de su acción, así como de las acciones de sus vecinos en el grafo. Si el grado máximo de G es Δ, y cada jugador tiene dos acciones disponibles, entonces el juego se puede representar usando n2Δ+1 números. Por el contrario, necesitamos n^2 números para representar un juego general de n jugadores y 2 acciones, lo cual solo es práctico para valores pequeños de n. Para juegos gráficos con Δ constante, el tamaño del juego es lineal en n. Uno de los problemas más naturales para un juego gráfico es el de encontrar un equilibrio de Nash, cuya existencia se deriva del célebre teorema de Nash (ya que los juegos gráficos son solo un caso especial de juegos de n jugadores). El primer intento de abordar este problema se realizó en [13], donde los autores consideran juegos gráficos con dos acciones por jugador en los que el grafo subyacente es un árbol de grado acotado. Proponen un algoritmo genérico para encontrar equilibrios de Nash que puede ser especializado de dos maneras: un algoritmo de tiempo exponencial para encontrar un equilibrio de Nash (exacto) y un esquema de aproximación de tiempo polinómico completo (FPTAS) para encontrar una aproximación a un equilibrio de Nash. Para cualquier > 0, este algoritmo produce un equilibrio de Nash, que es un <br>perfil estratégico</br> en el que ningún jugador puede mejorar su pago más que al cambiar unilateralmente su estrategia. Si bien los equilibrios de Nash aproximados suelen ser más fáciles de calcular que los equilibrios de Nash exactos, este concepto de solución tiene varias desventajas. Primero, es posible que los jugadores sean sensibles a una pequeña pérdida en las ganancias, por lo que el <br>perfil estratégico</br> que es un equilibrio de Nash no será estable. Esto será así incluso si solo hay un pequeño subconjunto de jugadores que son extremadamente sensibles al precio, y para una gran población de jugadores puede ser difícil elegir un valor que satisfaga a todos. Segundo, los perfiles estratégicos que están cerca de ser equilibrios de Nash pueden ser mucho mejores con respecto a las propiedades consideradas que los equilibrios de Nash exactos. Por lo tanto, la aproximación al valor de la mejor solución que corresponde a un equilibrio de Nash aproximado puede no ser indicativa de lo que se puede lograr bajo un equilibrio de Nash exacto. Esto es especialmente importante si el propósito de la solución aproximada es proporcionar un buen punto de referencia para un sistema de agentes egoístas, ya que el punto de referencia implícito por un equilibrio de Nash puede ser poco realista. Por estas razones, en este artículo nos enfocamos en el problema de calcular equilibrios de Nash exactos. Basándose en las ideas de [14], Elkind et al. [9] mostraron cómo encontrar un equilibrio de Nash (exacto) en tiempo polinómico cuando el grafo subyacente tiene grado 2 (es decir, cuando el grafo es una colección de caminos y ciclos). Por el contrario, encontrar un equilibrio de Nash en un grafo general con grado acotado parece ser computacionalmente intratable: se ha demostrado (ver [5, 12, 7]) que es completo para la clase de complejidad PPAD. [9] extiende este resultado de dificultad al caso en el que el grafo subyacente tiene un ancho de camino acotado. Un juego gráfico puede no tener un equilibrio de Nash único, de hecho, puede tener exponencialmente muchos. Además, algunos equilibrios de Nash son más deseables que otros. En lugar de tener un algoritmo que simplemente encuentre algún equilibrio de Nash, nos gustaría tener algoritmos para encontrar equilibrios de Nash con diversas propiedades socialmente deseables, como maximizar el pago total o distribuir las ganancias de manera justa. Una propiedad útil de la estructura de datos de [13] es que representa simultáneamente el conjunto de todos los equilibrios de Nash del juego subyacente. Si esta representación tiene tamaño polinómico (como es el caso de los caminos, como se muestra en [9]), se puede esperar extraer de ella un equilibrio de Nash con las propiedades deseadas. De hecho, en [13] los autores mencionan que esto es posible si uno está interesado en encontrar un equilibrio de Nash (aproximado). El objetivo de este artículo es extender esto a equilibrios de Nash exactos. 1.1 Nuestros Resultados En este artículo, estudiamos juegos gráficos de n jugadores y 2 acciones en árboles de grado acotado para los cuales la estructura de datos de [13] tiene tamaño polinómico en n. Nos enfocamos en el problema de encontrar equilibrios de Nash exactos con ciertas propiedades socialmente deseables. En particular, mostramos cómo encontrar un equilibrio de Nash que maximiza (casi) el bienestar social, es decir, la suma de las ganancias de los jugadores, y mostramos cómo encontrar un equilibrio de Nash que satisface (casi) los límites de ganancias prescritos para todos los jugadores. Los juegos gráficos en árboles de grado acotado tienen una estructura algebraica simple. Una característica atractiva, que se desprende de [13], es que cada juego de este tipo tiene un equilibrio de Nash en el cual la estrategia de cada jugador es un número racional. La sección 3 estudia la estructura algebraica de aquellos equilibrios de Nash que maximizan el bienestar social. Demostramos (Teoremas 1 y 2) que, sorprendentemente, el conjunto de equilibrios de Nash que maximizan el bienestar social es más complejo. De hecho, para cualquier número algebraico α ∈ [0, 1] con grado a lo sumo n, exhibimos un juego gráfico en un camino de longitud O(n) tal que, en el equilibrio de Nash único que maximiza el bienestar social de este juego, uno de los jugadores juega la estrategia mixta α. Este resultado muestra que puede ser difícil representar un equilibrio de Nash óptimo. Parece ser una característica novedosa del escenario que consideramos aquí, que un equilibrio de Nash óptimo es difícil de representar, en una situación donde es fácil encontrar y representar un equilibrio de Nash. Dado que el equilibrio de Nash que maximiza el bienestar social puede ser difícil de representar eficientemente, debemos conformarnos con una aproximación. Sin embargo, la diferencia crucial entre nuestro enfoque y el de los trabajos anteriores [13, 16, 19] es que requerimos que nuestro algoritmo produzca un equilibrio de Nash exacto, aunque no necesariamente el óptimo con respecto a nuestros criterios. En la Sección 4, describimos un algoritmo que cumple con este requisito. Específicamente, proponemos un algoritmo que, para cualquier > 0, encuentra un equilibrio de Nash cuya recompensa total está dentro de de lo óptimo. Se ejecuta en tiempo polinómico (Teorema 3,4) para cualquier juego gráfico en un árbol de grado acotado para el cual la estructura de datos propuesta por [13] (la llamada política de mejor respuesta, definida a continuación) tiene un tamaño poli(n) (nota que, como se muestra en [9], esto siempre es el caso cuando el grafo subyacente es un camino). Un resultado relacionado en un contexto diferente fue obtenido por Datta [8], quien muestra que los juegos de n jugadores con 2 acciones son universales en el sentido de que cualquier variedad algebraica real puede ser representada como el conjunto de equilibrios de Nash totalmente mixtos de tales juegos. Precisamente, el tiempo de ejecución de nuestro algoritmo es polinómico en n, Pmax y 1/, donde Pmax es el valor absoluto máximo de una entrada de una matriz de pagos, es decir, es un algoritmo seudopolinómico, aunque es completamente polinómico con respecto a . Mostramos (Sección 4.1) que bajo ciertas restricciones en las matrices de pagos, el algoritmo puede ser transformado en un algoritmo de tiempo polinómico (verdaderamente) que produce un equilibrio de Nash cuya ganancia total está dentro de un factor de 1 − del óptimo. En la Sección 5, consideramos el problema de encontrar un equilibrio de Nash en el que la ganancia esperada de cada jugador Vi supere un umbral prescrito Ti. Usando la idea de la Sección 4, presentamos (Teorema 5) un esquema de aproximación en tiempo polinómico completo para este problema. El tiempo de ejecución del algoritmo está acotado por un polinomio en n, Pmax y . Si la instancia tiene un equilibrio de Nash que cumple con los umbrales prescritos, entonces el algoritmo construye un equilibrio de Nash en el que la recompensa esperada de cada jugador Vi es al menos Ti − . En la Sección 6, presentamos otros criterios naturales para seleccionar un buen equilibrio de Nash y mostramos que los algoritmos descritos en las dos secciones anteriores pueden ser utilizados como bloques de construcción para encontrar equilibrios de Nash que cumplan con estos criterios. En particular, en la Sección 6.1 mostramos cómo encontrar un equilibrio de Nash que aproxima el máximo bienestar social, garantizando que la ganancia de cada individuo esté cerca de un umbral prescrito. En la Sección 6.2 mostramos cómo encontrar un equilibrio de Nash que maximiza (casi) al máximo el pago individual mínimo. Finalmente, en la Sección 6.3 mostramos cómo encontrar un equilibrio de Nash en el que las ganancias individuales de los jugadores están cerca unas de otras. 1.2 Trabajo Relacionado Nuestro esquema de aproximación (Teorema 3 y Teorema 4) muestra un contraste entre los juegos que estudiamos y los juegos de n acciones de dos jugadores, para los cuales los problemas correspondientes suelen ser intratables. Para juegos de n acciones de dos jugadores, el problema de encontrar equilibrios de Nash con propiedades especiales suele ser NP-duro. En particular, este es el caso de los equilibrios de Nash que maximizan el bienestar social [11, 6]. Además, es probable que sea intratable incluso aproximarse a tales equilibrios. En particular, Chen, Deng y Teng [4] muestran que existe algún , polinomio inverso en n, para el cual calcular un equilibrio de Nash en juegos de 2 jugadores con n acciones por jugador es PPAD-completo. Lipton y Markakis [15] estudian las propiedades algebraicas de los equilibrios de Nash, y señalan que los algoritmos estándar de eliminación de cuantificadores pueden ser utilizados para resolverlos. Ten en cuenta que estos algoritmos no son de tiempo polinómico en general. Los juegos que estudiamos en este artículo tienen equilibrios de Nash computables en tiempo polinómico en los que todas las estrategias mixtas son números racionales, pero un equilibrio de Nash óptimo puede incluir necesariamente estrategias mixtas con un alto grado algebraico. Un equilibrio correlacionado (CE) (introducido por Aumann [2]) es una distribución sobre vectores de acciones de jugadores con la propiedad de que si a cualquier jugador se le dice su propia acción (el valor de su propio componente) de un vector generado por esa distribución, entonces no puede aumentar su ganancia esperada cambiando su acción. Cualquier equilibrio de Nash es una EC, pero la afirmación contraria no se cumple en general. A diferencia de los equilibrios de Nash, los equilibrios correlacionados se pueden encontrar para juegos gráficos de bajo grado (así como para otras clases de juegos multijugador representados de manera concisa) en tiempo polinómico [17]. Pero, para juegos gráficos es NP-duro encontrar un equilibrio correlacionado que maximice la recompensa total [18]. Sin embargo, los resultados de NP-dificultad se aplican a juegos más generales que el que consideramos aquí, en particular los grafos no son árboles. Del [2] también se sabe que existen juegos de 2 jugadores y 2 acciones para los cuales el pago total esperado 163 del mejor equilibrio correlacionado es mayor que el mejor equilibrio de Nash, y discutimos este tema más a fondo en la Sección 7.2. CONSIDERACIONES PRELIMINARES Y NOTACIÓN Consideramos juegos gráficos en los que el grafo subyacente G es un árbol de n vértices, en el que cada vértice tiene a lo sumo Δ hijos. Cada vértice tiene dos acciones, que están representadas por 0 y 1. Una estrategia mixta de un jugador V se representa como un único número v ∈ [0, 1], que denota la probabilidad de que V seleccione la acción 1. Para los propósitos del algoritmo, el árbol está enraizado de manera arbitraria. Para mayor comodidad, asumimos sin pérdida de generalidad que la raíz tiene un solo hijo y que su recompensa es independiente de la acción elegida por el hijo. Esto se puede lograr primero eligiendo una raíz arbitraria del árbol, y luego agregando un padre ficticio de esta raíz, asignándole una función de recompensa constante, por ejemplo, 0. Dado un borde (V, W) del árbol G, y una estrategia mixta w para W, sea G(V,W), W=w la instancia obtenida de G mediante (1) eliminar todos los nodos Z que están separados de V por W (es decir, todos los nodos Z tales que el camino de Z a V pasa por W), y (2) restringir la instancia de modo que se requiera que W juegue la estrategia mixta w. Definición 1. Supongamos que (V, W) es una arista del árbol, que v es una estrategia mixta para V y que w es una estrategia mixta para W. Decimos que v es una mejor respuesta potencial a w (denotado por v ∈ pbrV (w)) si hay un equilibrio en la instancia G(V,W), W = w en el que V tiene una estrategia mixta v. Definimos la política de mejor respuesta para V, dada W, como B(W, V) = {(w, v) | v ∈ pbrV (w), w ∈ [0, 1]}. El paso ascendente del algoritmo genérico de [13] considera cada nodo V (que no sea la raíz) y calcula la política de mejor respuesta para V dada su padre. Con las suposiciones anteriores sobre la raíz, el paso aguas abajo es sencillo. La raíz selecciona una estrategia mixta w para la raíz W y una estrategia mixta v ∈ B(W, V) para cada hijo V de W. Indica a cada niño V que juegue v. El resto del pase descendente es recursivo. Cuando un nodo V recibe instrucciones de su padre para adoptar la estrategia mixta v, realiza lo siguiente para cada hijo U: encuentra un par (v, u) ∈ B(V, U) (con el mismo valor de v que le fue dado por su padre) e instruye a U a jugar u. La mejor política de respuesta para un vértice U dado su padre V puede representarse como una unión de rectángulos, donde un rectángulo está definido por un par de intervalos cerrados (IV, IU) y consiste en todos los puntos en IV × IU; puede ser el caso de que uno o ambos de los intervalos IV e IU consistan en un solo punto. Para realizar cálculos en B(V, U) y para limitar el número de rectángulos, [9] utilizó el concepto de un punto de evento, el cual se define de la siguiente manera. Para cualquier conjunto A ⊆ [0, 1]2 que se represente como una unión de un número finito de rectángulos, decimos que un punto u ∈ [0, 1] en el eje U es un punto de evento U de A si u = 0 o u = 1 o la representación de A contiene un rectángulo de la forma IV × IU y u es un extremo de IU; los puntos de evento V se definen de manera similar. Para muchos juegos considerados en este documento, el grafo subyacente es un camino de n vértices, es decir, un grafo G = (V, E) con V = {V1, . . . , Vn} y E = {(V1, V2), . . . , (Vn−1, Vn)}. En [9], se demostró que para tales juegos, la política de mejor respuesta tiene solo un número polinomial de rectángulos. La prueba de que el número de rectángulos en B(Vj+1, Vj) es polinomial procede primero mostrando que el número de puntos de evento en B(Vj+1, Vj) no puede exceder el número de puntos de evento en B(Vj, Vj-1) en más de 2, y utilizando este hecho para acotar el número de rectángulos en B(Vj+1, Vj). Sean P0 (V) y P1 (V) las ganancias esperadas para V cuando juega 0 y 1, respectivamente. Tanto P0 (V) como P1 (V) son funciones multilineales de las estrategias de los vecinos de V. En lo que sigue, usaremos frecuentemente la siguiente observación simple. AFIRMACIÓN 1. Para un vértice V con un único hijo U y padre W, dados cualquier A, B, C, D ∈ Q, se pueden seleccionar las recompensas para V de manera que P0(V) = Auw + Bu + Cw + D, P1(V) = Auw + Bu + Cw + D. Además, si todos los valores de A, B, C, D son enteros, los pagos para V también son enteros. PRUEBA. Daremos la prueba para P0 (V); la prueba para P1 (V) es similar. Para i, j = 0, 1, sea Pij la ganancia para V cuando U juega i, V juega 0 y W juega j. Tenemos P0 (V) = P00(1 − u)(1 − w) + P10u(1 − w) + P01(1 − u)w + P11uw. Tenemos que seleccionar los valores de Pij de manera que P00 − P10 − P01 + P11 = A, −P00 + P10 = B, −P00 + P01 = C, P00 = D. Es fácil ver que la solución única está dada por P00 = D, P01 = C + D, P10 = B + D, P11 = A + B + C + D. La entrada a todos los algoritmos considerados en este documento incluye las matrices de pago para cada jugador. Suponemos que todos los elementos de estas matrices son enteros. Sea Pmax el mayor valor absoluto de cualquier elemento de cualquier matriz de pagos. Entonces, la entrada consiste en un máximo de n2Δ+1 números, cada uno de los cuales puede ser representado usando log Pmax bits. EQUILIBRIOS DE NASH QUE MAXIMIZAN EL BIENESTAR SOCIAL: SOLUCIONES EN R \\ Q Desde el punto de vista del bienestar social, el mejor equilibrio de Nash es aquel que maximiza la suma de las ganancias esperadas de los jugadores. Lamentablemente, resulta que calcular exactamente dicho <br>perfil estratégico</br> no es posible: en esta sección, mostramos que incluso si todas las ganancias de los jugadores son números enteros, el <br>perfil estratégico</br> que maximiza la ganancia total puede tener coordenadas irracionales; además, puede involucrar números algebraicos de un grado arbitrario. 3.1 Calentamiento: irracionales cuadráticos Comenzamos proporcionando un ejemplo de un juego gráfico en un camino de longitud 3 con ganancias enteras tal que en el equilibrio de Nash que maximiza la ganancia total, uno de los jugadores tiene una estrategia en R \\ Q. En la siguiente subsección, extenderemos este ejemplo a números algebraicos de grado arbitrario n; para hacerlo, debemos considerar caminos de longitud O(n). TEOREMA 1. Existe un juego gráfico G de pago entero en un camino de 3 vértices UVW tal que, en cualquier equilibrio de Nash de G que maximice el bienestar social, la estrategia u del jugador U y el pago total p cumplen u, p ∈ R \\ Q. PRUEBA. Las recompensas para los jugadores en G están especificadas de la siguiente manera. La ganancia para U es idénticamente 0, es decir, P0 (U) = P1 (U) = 0. Usando la Reclamación 1, seleccionamos las ganancias para V de modo que P0 (V) = -uw + 3w y P1 (V) = P0 (V) + w(u + 2) - (u + 1), donde u y w son las estrategias (mixtas) de U y W, respectivamente. Se deduce que V es indiferente entre jugar 0 y 1 si y solo si w = f(u) = u+1 u+2. Observa que para cualquier u ∈ [0, 1] tenemos f(u) ∈ [0, 1]. La recompensa para W es 0 si selecciona la misma acción que V y 1 en caso contrario. AFIRMACIÓN 2. Todos los equilibrios de Nash del juego G son de la forma (u, 1/2, f(u)). Es decir, en cualquier equilibrio de Nash, V juega v = 1/2 y W juega w = f(u). Además, para cualquier valor de u, el vector de estrategias (u, 1/2, f(u)) constituye un equilibrio de Nash. PRUEBA. Es fácil comprobar que para cualquier u ∈ [0, 1], el vector (u, 1/2, f(u)) es un equilibrio de Nash. De hecho, U está dispuesto a jugar 164 cualquier estrategia mixta u, sin importar lo que hagan V y W. Además, V es indiferente entre 0 y 1 siempre y cuando w = f(u), por lo que puede jugar 1/2. Finalmente, si V juega con probabilidad igual a 0 y 1, W es indiferente entre 0 y 1, por lo que puede jugar f(u). Por el contrario, supongamos que v > 1/2. Entonces W prefiere estrictamente jugar 0, es decir, w = 0. Entonces para V tenemos P1 (V) = P0 (V) - (u + 1), es decir, P1 (V) < P0 (V), lo que implica v = 0, una contradicción. De manera similar, si v < 1/2, el jugador W prefiere jugar 1, por lo que tenemos w = 1. Por lo tanto, P1 (V) = P0 (V) + (u + 2) - (u + 1), es decir, P1 (V) > P0 (V), lo que implica v = 1, una contradicción. Finalmente, si v = 1/2, pero w = f(u), el jugador V no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Esto completa la prueba de la Afirmación 2. Según la Afirmación 2, la ganancia total en cualquier equilibrio de Nash de este juego es una función de u. Más específicamente, la ganancia para U es 0, la ganancia para V es −uf(u) + 3f(u), y la ganancia para W es 1/2. Por lo tanto, el equilibrio de Nash con la máxima ganancia total corresponde al valor de u que maximiza g(u) = −u (u + 1) u + 2 + 3 u + 1 u + 2 = − (u − 3)(u + 1) u + 2. Para encontrar los extremos de g(u), calculamos h(u) = − d du g(u). Tenemos h(u) = (2u − 2)(u + 2) − (u − 3)(u + 1) (u + 2)2 = u2 + 4u − 1 (u + 2)2. Por lo tanto, h(u) = 0 si y solo si u ∈ {−2 + √ 5, −2 − √ 5}. Ten en cuenta que −2 + √ 5 ∈ [0, 1]. La función g(u) cambia de signo en −2, −1 y 3. Tenemos g(u) < 0 para g > 3, g(u) > 0 para u < −2, por lo que el extremo de g(u) que se encuentra entre 1 y 3, es decir, u = −2 + √ 5, es un máximo local. Concluimos que el equilibrio de Nash que maximiza el bienestar social para este juego está dado por el vector de estrategias (−2+√ 5, 1/2, (5 − √ 5)/5). El pago total respectivo es 0 − ( √ 5 − 5)( √ 5 − 1) √ 5 + 1 2 = 13/2 − 2 √ 5. Esto concluye la prueba del Teorema 1. 3.2 Estrategias de grado arbitrario. Hemos demostrado que en el equilibrio de Nash que maximiza el bienestar social, las estrategias de algunos jugadores pueden ser irracionales cuadráticas, al igual que la recompensa total. En esta subsección, extenderemos este resultado para mostrar que podemos construir un juego gráfico de pago entero en un camino cuyo equilibrio de Nash maximizador del bienestar social involucra números algebraicos arbitrarios en [0, 1]. TEOREMA 2. Para cualquier número algebraico α de grado n ∈ [0, 1], existe un juego gráfico de pago entero en un camino de longitud O(n) tal que, en todas las equilibrios de Nash que maximizan el bienestar social de este juego, uno de los jugadores juega α. PRUEBA. Nuestra prueba consta de dos pasos. Primero, construimos una expresión racional R(x) y un segmento [x , x ] tal que x , x ∈ Q y α sea el único máximo de R(x) en [x , x ]. Segundo, construimos un juego gráfico cuyos equilibrios de Nash pueden ser parametrizados por u ∈ [x, x], de modo que en el equilibrio que corresponde a u, la recompensa total es R(u) y, además, la estrategia de algunos jugadores es u. Se deduce que para alcanzar el equilibrio de Nash que maximiza la ganancia, este jugador tiene que jugar α. Los detalles siguen. LEMMA 1. \n\nLEMMA 1. Dado un número algebraico α ∈ [0, 1], deg(α) = n, existen K2, . . . , K2n+2 ∈ Q y x , x ∈ (0, 1) ∩ Q tal que α es el único máximo de R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 en [x , x ]. PRUEBA. Sea P(x) el polinomio minimal de α, es decir, un polinomio de grado n con coeficientes racionales cuyo coeficiente principal es 1 tal que P(α) = 0. Sea A = {α1, . . . , αn} el conjunto de todas las raíces de P(x). Considera el polinomio Q1(x) = −P2(x). Tiene las mismas raíces que P(x), y además, para cualquier x ∈ A tenemos Q1(x) < 0. Por lo tanto, A es el conjunto de todos los máximos de Q1(x). Ahora, establece R(x) = Q1(x) (x+2)...(x+2n+1)(x+2n+2). Observa que R(x) ≤ 0 para todo x ∈ [0, 1] y R(x) = 0 si y solo si Q1(x) = 0. Por lo tanto, el conjunto A también es el conjunto de todos los máximos de R(x) en [0, 1]. Sea d = min{|αi − α| | αi ∈ A, αi = α}, y establezca α = max{α − d/2, 0}, α = min{α + d/2, 1}. Claramente, α es el único cero (y por lo tanto, el único máximo) de R(x) en [α , α ]. Sean x y x algunos números racionales en (α, α) y (α, α), respectivamente; observe que al excluir los extremos de los intervalos aseguramos que x, x = 0, 1. Como [x, x] ⊂ [α, α], tenemos que α es el único máximo de R(x) en [x, x]. Dado que R(x) es una expresión racional adecuada y todas las raíces de su denominador son simples, por el teorema de descomposición en fracciones parciales, R(x) puede representarse como R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2, donde K2, . . . , K2n+2 son números racionales. Considera un juego gráfico en el camino U−1V−1U0V0U1V1 . . . Uk−1Vk−1Uk, donde k = 2n + 2. Intuitivamente, queremos que cada triple (Ui−1, Vi−1, Ui) se comporte de manera similar a los jugadores U, V y W del juego descrito en la subsección anterior. Más precisamente, definimos las ganancias de los jugadores de la siguiente manera. • La ganancia para U−1 es 0 sin importar lo que hagan los demás. • La ganancia esperada para V−1 es 0 si juega 0 y u0 − (x − x )u−1 −x si juega 1, donde u0 y u−1 son las estrategias de U0 y U−1, respectivamente. • La ganancia esperada para V0 es 0 si juega 0 y u1(u0 + 1)− u0 si juega 1, donde u0 y u1 son las estrategias de U0 y U1, respectivamente. • Para cada i = 1, . . . , k − 1, la ganancia esperada para Vi cuando juega 0 es P0 (Vi) = Aiuiui+1 − Aiui+1, y la ganancia esperada para Vi cuando juega 1 es P1 (Vi) = P0 (Vi) + ui+1(2 − ui) − 1, donde Ai = −Ki+1 y ui+1 y ui son las estrategias de Ui+1 y Ui, respectivamente. • Para cada i = 0, . . . , k, la ganancia para Ui no depende de Vi y es 1 si Ui y Vi−1 seleccionan acciones diferentes y 0 en caso contrario. Ahora caracterizaremos los equilibrios de Nash de este juego utilizando una secuencia de afirmaciones. AFIRMACIÓN 3. En todos los equilibrios de Nash de este juego, V−1 juega 1/2, y las estrategias de u−1 y u0 satisfacen u0 = (x − x )u−1 + x. Por consiguiente, en todos los equilibrios de Nash tenemos u0 ∈ [x , x ]. 165 PRUEBA. La prueba es similar a la del Reclamo 2. Que f(u−1) = (x − x )u−1 + x. Claramente, el jugador V−1 es indiferente entre jugar 0 y 1 si y solo si u0 = f(u−1). Supongamos que v−1 < 1/2. Entonces U0 prefiere estrictamente jugar 1, es decir, u0 = 1, por lo que tenemos P1 (V−1) = P0 (V−1) + 1 − (x − x )u−1 − x . Dado que 1 − x ≤ 1 − (x − x )u−1 − x ≤ 1 − x para u−1 ∈ [0, 1] y x < 1, tenemos que P1 (V−1) > P0 (V−1), por lo que V−1 prefiere jugar 1, lo cual es una contradicción. De manera similar, si v−1 > 1/2, el jugador U0 prefiere estrictamente jugar 0, es decir, u0 = 0, por lo que tenemos P1 (V−1) = P0 (V−1) − (x − x )u−1 − x. Dado que x < x, x > 0, tenemos P1 (V−1) < P0 (V−1), por lo que V−1 prefiere jugar 0, lo cual es una contradicción. Finalmente, si V−1 juega 1/2, pero u0 = f(u−1), el jugador V−1 no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Además, ten en cuenta que f(0) = x, f(1) = x y, además, f(u−1) ∈ [x, x] si y solo si u−1 ∈ [0, 1]. Por lo tanto, en todos los equilibrios de Nash de este juego tenemos u0 ∈ [x , x ]. AFIRMACIÓN 4. En todos los equilibrios de Nash de este juego para cada i = 0, . . . , k − 1, tenemos vi = 1/2, y las estrategias de los jugadores Ui y Ui+1 satisfacen ui+1 = fi(ui), donde f0(u) = u/(u + 1) y fi(u) = 1/(2 − u) para i > 0. PRUEBA. La prueba de esta afirmación es también similar a la de la Afirmación 2. Utilizamos inducción en i para demostrar que la afirmación de la proposición es verdadera y, además, ui = 1 para i > 0. Para el caso base i = 0, observe que u0 = 0 según la afirmación anterior (recuerde que x, x se seleccionan de manera que x, x = 0, 1) y considere el trío (U0, V0, U1). Que v0 sea la estrategia de V0. Primero, supongamos que v0 > 1/2. Entonces U1 prefiere estrictamente jugar 0, es decir, u1 = 0. Entonces, para V0 tenemos P1 (V0) = P0 (V0) − u0. Dado que u0 = 0, tenemos que P1 (V0) < P0 (V0), lo cual implica v1 = 0, una contradicción. De manera similar, si v0 < 1/2, el jugador U1 prefiere jugar 1, por lo que tenemos u1 = 1. Por lo tanto, P1 (V0) = P0 (V0) + 1. Se sigue que P1 (V0) > P0 (V0), lo cual implica v0 = 1, una contradicción. Finalmente, si v0 = 1/2, pero u1 = u0/(u0 + 1), el jugador V0 no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Además, dado que u1 = u0/(u0 + 1) y u0 ∈ [0, 1], tenemos que u1 = 1. El argumento para el paso inductivo es similar. Es decir, supongamos que la afirmación se demuestra para todos los i < i y consideremos el trío (Ui, Vi, Ui+1). Que vi sea la estrategia de Vi. Primero, supongamos que vi > 1/2. Entonces Ui+1 prefiere estrictamente jugar 0, es decir, ui+1 = 0. Entonces, para Vi tenemos P1 (Vi) = P0 (Vi)−1, es decir, P1 (Vi) < P0 (Vi), lo cual implica vi = 0, una contradicción. De manera similar, si vi < 1/2, el jugador Ui+1 prefiere jugar 1, por lo que tenemos ui+1 = 1. Por lo tanto, P1 (Vi) = P0 (Vi) + 1 − ui. Por hipótesis inductiva, tenemos ui < 1. Por consiguiente, P1 (Vi) > P0 (Vi), lo que implica vi = 1, una contradicción. Finalmente, si vi = 1/2, pero ui+1 = 1/(2 − ui), el jugador Vi no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Además, como ui+1 = 1/(2 − ui) y ui < 1, tenemos ui+1 < 1. AFIRMACIÓN 5. Cualquier <br>perfil estratégico</br> de la forma (u−1, 1/2, u0, 1/2, u1, 1/2, . . . , uk−1, 1/2, uk), donde u−1 ∈ [0, 1], u0 = (x − x )u−1 + x , u1 = u0/(u0 + 1), y ui+1 = 1/(2 − ui) para i ≥ 1, constituye un equilibrio de Nash. PRUEBA. Primero, las ganancias del jugador U−1 no dependen de las acciones de otros jugadores, por lo que es libre de jugar cualquier estrategia en [0, 1]. Si u0 = (x −x )u−1 +x , el jugador V−1 es indiferente entre 0 y 1, por lo que está contento de jugar 1/2; un argumento similar se aplica a los jugadores V0, . . . , Vk−1. Finalmente, para cada i = 0, . . . , k, las ganancias del jugador Ui solo dependen de la estrategia del jugador Vi−1. En particular, siempre y cuando vi−1 = 1/2, el jugador Ui es indiferente entre jugar 0 y 1, por lo que puede jugar cualquier estrategia mixta ui ∈ [0, 1]. Para completar la prueba, observe que (x − x )u−1 + x ∈ [0, 1] para todo u−1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] para todo u0 ∈ [0, 1], y 1/(2 − ui) ∈ [0, 1] para todo ui ∈ [0, 1], por lo que tenemos ui ∈ [0, 1] para todo i = 0, . . . , k. Ahora, calculemos la ganancia total bajo un <br>perfil estratégico</br> de la forma dada en la Afirmación 5. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "degree-bounded graph": {
            "translated_key": "grado acotado",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Computing Good Nash Equilibria in Graphical Games ∗ Edith Elkind Hebrew University of Jerusalem, Israel, and University of Southampton, Southampton, SO17 1BJ, U.K. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K. ABSTRACT This paper addresses the problem of fair equilibrium selection in graphical games.",
                "Our approach is based on the data structure called the best response policy, which was proposed by Kearns et al. [13] as a way to represent all Nash equilibria of a graphical game.",
                "In [9], it was shown that the best response policy has polynomial size as long as the underlying graph is a path.",
                "In this paper, we show that if the underlying graph is a bounded-degree tree and the best response policy has polynomial size then there is an efficient algorithm which constructs a Nash equilibrium that guarantees certain payoffs to all participants.",
                "Another attractive solution concept is a Nash equilibrium that maximizes the social welfare.",
                "We show that, while exactly computing the latter is infeasible (we prove that solving this problem may involve algebraic numbers of an arbitrarily high degree), there exists an FPTAS for finding such an equilibrium as long as the best response policy has polynomial size.",
                "These two algorithms can be combined to produce Nash equilibria that satisfy various fairness criteria.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a large community of agents, an agents behavior is not likely to have a direct effect on most other agents: rather, it is just the agents who are close enough to him that will be affected.",
                "However, as these agents respond by adapting their behavior, more agents will feel the consequences and eventually the choices made by a single agent will propagate throughout the entire community.",
                "This is the intuition behind graphical games, which were introduced by Kearns, Littman and Singh in [13] as a compact representation scheme for games with many players.",
                "In an n-player graphical game, each player is associated with a vertex of an underlying graph G, and the payoffs of each player depend on his action as well as on the actions of his neighbors in the graph.",
                "If the maximum degree of G is Δ, and each player has two actions available to him, then the game can be represented using n2Δ+1 numbers.",
                "In contrast, we need n2n numbers to represent a general n-player 2-action game, which is only practical for small values of n. For graphical games with constant Δ, the size of the game is linear in n. One of the most natural problems for a graphical game is that of finding a Nash equilibrium, the existence of which follows from Nashs celebrated theorem (as graphical games are just a special case of n-player games).",
                "The first attempt to tackle this problem was made in [13], where the authors consider graphical games with two actions per player in which the underlying graph is a boundeddegree tree.",
                "They propose a generic algorithm for finding Nash equilibria that can be specialized in two ways: an exponential-time algorithm for finding an (exact) Nash equilibrium, and a fully polynomial time approximation scheme (FPTAS) for finding an approximation to a Nash equilibrium.",
                "For any > 0 this algorithm outputs an -Nash equilibrium, which is a strategy profile in which no player can improve his payoff by more than by unilaterally changing his strategy.",
                "While -Nash equilibria are often easier to compute than exact Nash equilibria, this solution concept has several drawbacks.",
                "First, the players may be sensitive to a small loss in payoffs, so the strategy profile that is an -Nash equilibrium will not be stable.",
                "This will be the case even if there is only a small subset of players who are extremely price-sensitive, and for a large population of players it may be difficult to choose a value of that will satisfy everyone.",
                "Second, the strategy profiles that are close to being Nash equilibria may be much better with respect to the properties under consideration than exact Nash equilibria.",
                "Therefore, the (approximation to the) value of the best solution that corresponds to an -Nash equilibrium may not be indicative of what can be achieved under an exact Nash equilibrium.",
                "This is especially important if the purpose of the approximate solution is to provide a good benchmark for a system of selfish agents, as the benchmark implied by an -Nash equilibrium may be unrealistic.",
                "For these reasons, in this paper we focus on the problem of computing exact Nash equilibria.",
                "Building on ideas of [14], Elkind et al. [9] showed how to find an (exact) Nash equilibrium in polynomial time when the underlying 162 graph has degree 2 (that is, when the graph is a collection of paths and cycles).",
                "By contrast, finding a Nash equilibrium in a general <br>degree-bounded graph</br> appears to be computationally intractable: it has been shown (see [5, 12, 7]) to be complete for the complexity class PPAD. [9] extends this hardness result to the case in which the underlying graph has bounded pathwidth.",
                "A graphical game may not have a unique Nash equilibrium, indeed it may have exponentially many.",
                "Moreover, some Nash equilibria are more desirable than others.",
                "Rather than having an algorithm which merely finds some Nash equilibrium, we would like to have algorithms for finding Nash equilibria with various sociallydesirable properties, such as maximizing overall payoff or distributing profit fairly.",
                "A useful property of the data structure of [13] is that it simultaneously represents the set of all Nash equilibria of the underlying game.",
                "If this representation has polynomial size (as is the case for paths, as shown in [9]), one may hope to extract from it a Nash equilibrium with the desired properties.",
                "In fact, in [13] the authors mention that this is indeed possible if one is interested in finding an (approximate) -Nash equilibrium.",
                "The goal of this paper is to extend this to exact Nash equilibria. 1.1 Our Results In this paper, we study n-player 2-action graphical games on bounded-degree trees for which the data structure of [13] has size poly(n).",
                "We focus on the problem of finding exact Nash equilibria with certain socially-desirable properties.",
                "In particular, we show how to find a Nash equilibrium that (nearly) maximizes the social welfare, i.e., the sum of the players payoffs, and we show how to find a Nash equilibrium that (nearly) satisfies prescribed payoff bounds for all players.",
                "Graphical games on bounded-degree trees have a simple algebraic structure.",
                "One attractive feature, which follows from [13], is that every such game has a Nash equilibrium in which the strategy of every player is a rational number.",
                "Section 3 studies the algebraic structure of those Nash equilibria that maximize social welfare.",
                "We show (Theorems 1 and 2) that, surprisingly, the set of Nash equilibria that maximize social welfare is more complex.",
                "In fact, for any algebraic number α ∈ [0, 1] with degree at most n, we exhibit a graphical game on a path of length O(n) such that, in the unique social welfare-maximizing Nash equilibrium of this game, one of the players plays the mixed strategy α.1 This result shows that it may be difficult to represent an optimal Nash equilibrium.",
                "It seems to be a novel feature of the setting we consider here, that an optimal Nash equilibrium is hard to represent, in a situation where it is easy to find and represent a Nash equilibrium.",
                "As the social welfare-maximizing Nash equilibrium may be hard to represent efficiently, we have to settle for an approximation.",
                "However, the crucial difference between our approach and that of previous papers [13, 16, 19] is that we require our algorithm to output an exact Nash equilibrium, though not necessarily the optimal one with respect to our criteria.",
                "In Section 4, we describe an algorithm that satisfies this requirement.",
                "Namely, we propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within of optimal.",
                "It runs in polynomial time (Theorem 3,4) for any graphical game on a bounded-degree tree for which the data structure proposed by [13] (the so-called best response policy, defined below) is of size poly(n) (note that, as shown in [9], this is always the case when the underlying graph is a path).",
                "More pre1 A related result in a different context was obtained by Datta [8], who shows that n-player 2-action games are universal in the sense that any real algebraic variety can be represented as the set of totally mixed Nash equilibria of such games. cisely, the running time of our algorithm is polynomial in n, Pmax, and 1/ , where Pmax is the maximum absolute value of an entry of a payoff matrix, i.e., it is a pseudopolynomial algorithm, though it is fully polynomial with respect to .",
                "We show (Section 4.1) that under some restrictions on the payoff matrices, the algorithm can be transformed into a (truly) polynomial-time algorithm that outputs a Nash equilibrium whose total payoff is within a 1 − factor from the optimal.",
                "In Section 5, we consider the problem of finding a Nash equilibrium in which the expected payoff of each player Vi exceeds a prescribed threshold Ti.",
                "Using the idea from Section 4 we give (Theorem 5) a fully polynomial time approximation scheme for this problem.",
                "The running time of the algorithm is bounded by a polynomial in n, Pmax, and .",
                "If the instance has a Nash equilibrium satisfying the prescribed thresholds then the algorithm constructs a Nash equilibrium in which the expected payoff of each player Vi is at least Ti − .",
                "In Section 6, we introduce other natural criteria for selecting a good Nash equilibrium and we show that the algorithms described in the two previous sections can be used as building blocks in finding Nash equilibria that satisfy these criteria.",
                "In particular, in Section 6.1 we show how to find a Nash equilibrium that approximates the maximum social welfare, while guaranteeing that each individual payoff is close to a prescribed threshold.",
                "In Section 6.2 we show how to find a Nash equilibrium that (nearly) maximizes the minimum individual payoff.",
                "Finally, in Section 6.3 we show how to find a Nash equilibrium in which the individual payoffs of the players are close to each other. 1.2 Related Work Our approximation scheme (Theorem 3 and Theorem 4) shows a contrast between the games that we study and two-player n-action games, for which the corresponding problems are usually intractable.",
                "For two-player n-action games, the problem of finding Nash equilibria with special properties is typically NP-hard.",
                "In particular, this is the case for Nash equilibria that maximize the social welfare [11, 6].",
                "Moreover, it is likely to be intractable even to approximate such equilibria.",
                "In particular, Chen, Deng and Teng [4] show that there exists some , inverse polynomial in n, for which computing an -Nash equilibrium in 2-player games with n actions per player is PPAD-complete.",
                "Lipton and Markakis [15] study the algebraic properties of Nash equilibria, and point out that standard quantifier elimination algorithms can be used to solve them.",
                "Note that these algorithms are not polynomial-time in general.",
                "The games we study in this paper have polynomial-time computable Nash equilibria in which all mixed strategies are rational numbers, but an optimal Nash equilibrium may necessarily include mixed strategies with high algebraic degree.",
                "A correlated equilibrium (CE) (introduced by Aumann [2]) is a distribution over vectors of players actions with the property that if any player is told his own action (the value of his own component) from a vector generated by that distribution, then he cannot increase his expected payoff by changing his action.",
                "Any Nash equilibrium is a CE but the converse does not hold in general.",
                "In contrast with Nash equilibria, correlated equilibria can be found for low-degree graphical games (as well as other classes of conciselyrepresented multiplayer games) in polynomial time [17].",
                "But, for graphical games it is NP-hard to find a correlated equilibrium that maximizes total payoff [18].",
                "However, the NP-hardness results apply to more general games than the one we consider here, in particular the graphs are not trees.",
                "From [2] it is also known that there exist 2-player, 2-action games for which the expected total payoff 163 of the best correlated equilibrium is higher than the best Nash equilibrium, and we discuss this issue further in Section 7. 2.",
                "PRELIMINARIES AND NOTATION We consider graphical games in which the underlying graph G is an n-vertex tree, in which each vertex has at most Δ children.",
                "Each vertex has two actions, which are denoted by 0 and 1.",
                "A mixed strategy of a player V is represented as a single number v ∈ [0, 1], which denotes the probability that V selects action 1.",
                "For the purposes of the algorithm, the tree is rooted arbitrarily.",
                "For convenience, we assume without loss of generality that the root has a single child, and that its payoff is independent of the action chosen by the child.",
                "This can be achieved by first choosing an arbitrary root of the tree, and then adding a dummy parent of this root, giving the new parent a constant payoff function, e.g., 0.",
                "Given an edge (V, W ) of the tree G, and a mixed strategy w for W , let G(V,W ),W =w be the instance obtained from G by (1) deleting all nodes Z which are separated from V by W (i.e., all nodes Z such that the path from Z to V passes through W ), and (2) restricting the instance so that W is required to play mixed strategy w. Definition 1.",
                "Suppose that (V, W ) is an edge of the tree, that v is a mixed strategy for V and that w is a mixed strategy for W .",
                "We say that v is a potential best response to w (denoted by v ∈ pbrV (w)) if there is an equilibrium in the instance G(V,W ),W =w in which V has mixed strategy v. We define the best response policy for V , given W , as B(W, V ) = {(w, v) | v ∈ pbrV (w), w ∈ [0, 1]}.",
                "The upstream pass of the generic algorithm of [13] considers every node V (other than the root) and computes the best response policy for V given its parent.",
                "With the above assumptions about the root, the downstream pass is straightforward.",
                "The root selects a mixed strategy w for the root W and a mixed strategy v ∈ B(W, V ) for each child V of W .",
                "It instructs each child V to play v. The remainder of the downward pass is recursive.",
                "When a node V is instructed by its parent to adopt mixed strategy v, it does the following for each child U - It finds a pair (v, u) ∈ B(V, U) (with the same v value that it was given by its parent) and instructs U to play u.",
                "The best response policy for a vertex U given its parent V can be represented as a union of rectangles, where a rectangle is defined by a pair of closed intervals (IV , IU ) and consists of all points in IV × IU ; it may be the case that one or both of the intervals IV and IU consists of a single point.",
                "In order to perform computations on B(V, U), and to bound the number of rectangles, [9] used the notion of an event point, which is defined as follows.",
                "For any set A ⊆ [0, 1]2 that is represented as a union of a finite number of rectangles, we say that a point u ∈ [0, 1] on the U-axis is a Uevent point of A if u = 0 or u = 1 or the representation of A contains a rectangle of the form IV × IU and u is an endpoint of IU ; V -event points are defined similarly.",
                "For many games considered in this paper, the underlying graph is an n-vertex path, i.e., a graph G = (V, E) with V = {V1, . . . , Vn} and E = {(V1, V2), . . . , (Vn−1, Vn)}.",
                "In [9], it was shown that for such games, the best response policy has only polynomially-many rectangles.",
                "The proof that the number of rectangles in B(Vj+1, Vj) is polynomial proceeds by first showing that the number of event points in B(Vj+1, Vj ) cannot exceed the number of event points in B(Vj, Vj−1) by more than 2, and using this fact to bound the number of rectangles in B(Vj+1, Vj ).",
                "Let P0 (V ) and P1 (V ) be the expected payoffs to V when it plays 0 and 1, respectively.",
                "Both P0 (V ) and P1 (V ) are multilinear functions of the strategies of V s neighbors.",
                "In what follows, we will frequently use the following simple observation.",
                "CLAIM 1.",
                "For a vertex V with a single child U and parent W , given any A, B, C, D ∈ Q, A , B , C , D ∈ Q, one can select the payoffs to V so that P0 (V ) = Auw + Bu + Cw + D, P1 (V ) = A uw + B u + C w + D .",
                "Moreover, if all A, B, C, D, A , B , C , D are integer, the payoffs to V are integer as well.",
                "PROOF.",
                "We will give the proof for P0 (V ); the proof for P1 (V ) is similar.",
                "For i, j = 0, 1, let Pij be the payoff to V when U plays i, V plays 0 and W plays j.",
                "We have P0 (V ) = P00(1 − u)(1 − w) + P10u(1 − w) + P01(1 − u)w + P11uw.",
                "We have to select the values of Pij so that P00 − P10 − P01 + P11 = A, −P00 + P10 = B, −P00 + P01 = C, P00 = D. It is easy to see that the unique solution is given by P00 = D, P01 = C + D, P10 = B + D, P11 = A + B + C + D. The input to all algorithms considered in this paper includes the payoff matrices for each player.",
                "We assume that all elements of these matrices are integer.",
                "Let Pmax be the greatest absolute value of any element of any payoff matrix.",
                "Then the input consists of at most n2Δ+1 numbers, each of which can be represented using log Pmax bits. 3.",
                "NASH EQUILIBRIA THAT MAXIMIZE THE SOCIAL WELFARE: SOLUTIONS IN R \\ Q From the point of view of social welfare, the best Nash equilibrium is the one that maximizes the sum of the players expected payoffs.",
                "Unfortunately, it turns out that computing such a strategy profile exactly is not possible: in this section, we show that even if all players payoffs are integers, the strategy profile that maximizes the total payoff may have irrational coordinates; moreover, it may involve algebraic numbers of an arbitrary degree. 3.1 Warm-up: quadratic irrationalities We start by providing an example of a graphical game on a path of length 3 with integer payoffs such that in the Nash equilibrium that maximizes the total payoff, one of the players has a strategy in R \\ Q.",
                "In the next subsection, we will extend this example to algebraic numbers of arbitrary degree n; to do so, we have to consider paths of length O(n).",
                "THEOREM 1.",
                "There exists an integer-payoff graphical game G on a 3-vertex path UV W such that, in any Nash equilibrium of G that maximizes social welfare, the strategy, u, of the player U and the total payoff, p, satisfy u, p ∈ R \\ Q.",
                "PROOF.",
                "The payoffs to the players in G are specified as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = −uw + 3w and P1 (V ) = P0 (V ) + w(u + 2) − (u + 1), where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = u+1 u+2 .",
                "Observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "The payoff to W is 0 if it selects the same action as V and 1 otherwise.",
                "CLAIM 2.",
                "All Nash equilibria of the game G are of the form (u, 1/2, f(u)).",
                "That is, in any Nash equilibrium, V plays v = 1/2 and W plays w = f(u).",
                "Moreover, for any value of u, the vector of strategies (u, 1/2, f(u)) constitutes a Nash equilibrium.",
                "PROOF.",
                "It is easy to check that for any u ∈ [0, 1], the vector (u, 1/2, f(u)) is a Nash equilibrium.",
                "Indeed, U is content to play 164 any mixed strategy u no matter what V and W do.",
                "Furthermore, V is indifferent between 0 and 1 as long as w = f(u), so it can play 1/2.",
                "Finally, if V plays 0 and 1 with equal probability, W is indifferent between 0 and 1, so it can play f(u).",
                "Conversely, suppose that v > 1/2.",
                "Then W strictly prefers to play 0, i.e., w = 0.",
                "Then for V we have P1 (V ) = P0 (V ) − (u + 1), i.e., P1 (V ) < P0 (V ), which implies v = 0, a contradiction.",
                "Similarly, if v < 1/2, player W prefers to play 1, so we have w = 1.",
                "Hence, P1 (V ) = P0 (V ) + (u + 2) − (u + 1), i.e., P1 (V ) > P0 (V ), which implies v = 1, a contradiction.",
                "Finally, if v = 1/2, but w = f(u), player V is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "This completes the proof of Claim 2.",
                "By Claim 2, the total payoff in any Nash equilibrium of this game is a function of u.",
                "More specifically, the payoff to U is 0, the payoff to V is −uf(u) + 3f(u), and the payoff to W is 1/2.",
                "Therefore, the Nash equilibrium with the maximum total payoff corresponds to the value of u that maximizes g(u) = −u (u + 1) u + 2 + 3 u + 1 u + 2 = − (u − 3)(u + 1) u + 2 .",
                "To find extrema of g(u), we compute h(u) = − d du g(u).",
                "We have h(u) = (2u − 2)(u + 2) − (u − 3)(u + 1) (u + 2)2 = u2 + 4u − 1 (u + 2)2 .",
                "Hence, h(u) = 0 if and only if u ∈ {−2 + √ 5, −2 − √ 5}.",
                "Note that −2 + √ 5 ∈ [0, 1].",
                "The function g(u) changes sign at −2, −1, and 3.",
                "We have g(u) < 0 for g > 3, g(u) > 0 for u < −2, so the extremum of g(u) that lies between 1 and 3, i.e., u = −2 + √ 5, is a local maximum.",
                "We conclude that the social welfare-maximizing Nash equilibrium for this game is given by the vector of strategies (−2+√ 5, 1/2, (5 − √ 5)/5).",
                "The respective total payoff is 0 − ( √ 5 − 5)( √ 5 − 1) √ 5 + 1 2 = 13/2 − 2 √ 5.",
                "This concludes the proof of Theorem 1. 3.2 Strategies of arbitrary degree We have shown that in the social welfare-maximizing Nash equilibrium, some players strategies can be quadratic irrationalities, and so can the total payoff.",
                "In this subsection, we will extend this result to show that we can construct an integer-payoff graphical game on a path whose social welfare-maximizing Nash equilibrium involves arbitrary algebraic numbers in [0, 1].",
                "THEOREM 2.",
                "For any degree-n algebraic number α ∈ [0, 1], there exists an integer payoff graphical game on a path of length O(n) such that, in all social welfare-maximizing Nash equilibria of this game, one of the players plays α.",
                "PROOF.",
                "Our proof consists of two steps.",
                "First, we construct a rational expression R(x) and a segment [x , x ] such that x , x ∈ Q and α is the only maximum of R(x) on [x , x ].",
                "Second, we construct a graphical game whose Nash equilibria can be parameterized by u ∈ [x , x ], so that at the equilibrium that corresponds to u the total payoff is R(u) and, moreover, some players strategy is u.",
                "It follows that to achieve the payoff-maximizing Nash equilibrium, this player has to play α.",
                "The details follow.",
                "LEMMA 1.",
                "Given an algebraic number α ∈ [0, 1], deg(α) = n, there exist K2, . . . , K2n+2 ∈ Q and x , x ∈ (0, 1) ∩ Q such that α is the only maximum of R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 on [x , x ].",
                "PROOF.",
                "Let P(x) be the minimal polynomial of α, i.e., a polynomial of degree n with rational coefficients whose leading coefficient is 1 such that P(α) = 0.",
                "Let A = {α1, . . . , αn} be the set of all roots of P(x).",
                "Consider the polynomial Q1(x) = −P2 (x).",
                "It has the same roots as P(x), and moreover, for any x ∈ A we have Q1(x) < 0.",
                "Hence, A is the set of all maxima of Q1(x).",
                "Now, set R(x) = Q1(x) (x+2)...(x+2n+1)(x+2n+2) .",
                "Observe that R(x) ≤ 0 for all x ∈ [0, 1] and R(x) = 0 if and only if Q1(x) = 0.",
                "Hence, the set A is also the set of all maxima of R(x) on [0, 1].",
                "Let d = min{|αi − α| | αi ∈ A, αi = α}, and set α = max{α − d/2, 0}, α = min{α + d/2, 1}.",
                "Clearly, α is the only zero (and hence, the only maximum) of R(x) on [α , α ].",
                "Let x and x be some rational numbers in (α , α) and (α, α ), respectively; note that by excluding the endpoints of the intervals we ensure that x , x = 0, 1.",
                "As [x , x ] ⊂ [α , α ], we have that α is the only maximum of R(x) on [x , x ].",
                "As R(x) is a proper rational expression and all roots of its denominator are simple, by partial fraction decomposition theorem, R(x) can be represented as R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 , where K2, . . . , K2n+2 are rational numbers.",
                "Consider a graphical game on the path U−1V−1U0V0U1V1 . . .",
                "Uk−1Vk−1Uk, where k = 2n + 2.",
                "Intuitively, we want each triple (Ui−1, Vi−1, Ui) to behave similarly to the players U, V , and W from the game described in the previous subsection.",
                "More precisely, we define the payoffs to the players in the following way. • The payoff to U−1 is 0 no matter what everyone else does. • The expected payoff to V−1 is 0 if it plays 0 and u0 − (x − x )u−1 −x if it plays 1, where u0 and u−1 are the strategies of U0 and U−1, respectively. • The expected payoff to V0 is 0 if it plays 0 and u1(u0 + 1)− u0 if it plays 1, where u0 and u1 are the strategies of U0 and U1, respectively. • For each i = 1, . . . , k − 1, the expected payoff to Vi when it plays 0 is P0 (Vi) = Aiuiui+1 − Aiui+1, and the expected payoff to Vi when it plays 1 is P1 (Vi) = P0 (Vi) + ui+1(2 − ui) − 1, where Ai = −Ki+1 and ui+1 and ui are the strategies of Ui+1 and Ui, respectively. • For each i = 0, . . . , k, the payoff to Ui does not depend on Vi and is 1 if Ui and Vi−1 select different actions and 0 otherwise.",
                "We will now characterize the Nash equilibria of this game using a sequence of claims.",
                "CLAIM 3.",
                "In all Nash equilibria of this game V−1 plays 1/2, and the strategies of u−1 and u0 satisfy u0 = (x − x )u−1 + x .",
                "Consequently, in all Nash equilibria we have u0 ∈ [x , x ]. 165 PROOF.",
                "The proof is similar to that of Claim 2.",
                "Let f(u−1) = (x − x )u−1 + x .",
                "Clearly, the player V−1 is indifferent between playing 0 and 1 if and only if u0 = f(u−1).",
                "Suppose that v−1 < 1/2.",
                "Then U0 strictly prefers to play 1, i.e., u0 = 1, so we have P1 (V−1) = P0 (V−1) + 1 − (x − x )u−1 − x .",
                "As 1 − x ≤ 1 − (x − x )u−1 − x ≤ 1 − x for u−1 ∈ [0, 1] and x < 1, we have P1 (V−1) > P0 (V−1), so V−1 prefers to play 1, a contradiction.",
                "Similarly, if v−1 > 1/2, the player U0 strictly prefers to play 0, i.e., u0 = 0, so we have P1 (V−1) = P0 (V−1) − (x − x )u−1 − x .",
                "As x < x , x > 0, we have P1 (V−1) < P0 (V−1), so V−1 prefers to play 0, a contradiction.",
                "Finally, if V−1 plays 1/2, but u0 = f(u−1), player V−1 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Also, note that f(0) = x , f(1) = x , and, moreover, f(u−1) ∈ [x , x ] if and only if u−1 ∈ [0, 1].",
                "Hence, in all Nash equilibria of this game we have u0 ∈ [x , x ].",
                "CLAIM 4.",
                "In all Nash equilibria of this game for each i = 0, . . . , k − 1, we have vi = 1/2, and the strategies of the players Ui and Ui+1 satisfy ui+1 = fi(ui), where f0(u) = u/(u + 1) and fi(u) = 1/(2 − u) for i > 0.",
                "PROOF.",
                "The proof of this claim is also similar to that of Claim 2.",
                "We use induction on i to prove that the statement of the claim is true and, additionally, ui = 1 for i > 0.",
                "For the base case i = 0, note that u0 = 0 by the previous claim (recall that x , x are selected so that x , x = 0, 1) and consider the triple (U0, V0, U1).",
                "Let v0 be the strategy of V0.",
                "First, suppose that v0 > 1/2.",
                "Then U1 strictly prefers to play 0, i.e., u1 = 0.",
                "Then for V0 we have P1 (V0) = P0 (V0) − u0.",
                "As u0 = 0, we have P1 (V0) < P0 (V0), which implies v1 = 0, a contradiction.",
                "Similarly, if v0 < 1/2, player U1 prefers to play 1, so we have u1 = 1.",
                "Hence, P1 (V0) = P0 (V0) + 1.",
                "It follows that P1 (V0) > P0 (V0), which implies v0 = 1, a contradiction.",
                "Finally, if v0 = 1/2, but u1 = u0/(u0 + 1), player V0 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as u1 = u0/(u0 + 1) and u0 ∈ [0, 1], we have u1 = 1.",
                "The argument for the inductive step is similar.",
                "Namely, suppose that the statement is proved for all i < i and consider the triple (Ui, Vi, Ui+1).",
                "Let vi be the strategy of Vi.",
                "First, suppose that vi > 1/2.",
                "Then Ui+1 strictly prefers to play 0, i.e., ui+1 = 0.",
                "Then for Vi we have P1 (Vi) = P0 (Vi)−1, i.e., P1 (Vi) < P0 (Vi), which implies vi = 0, a contradiction.",
                "Similarly, if vi < 1/2, player Ui+1 prefers to play 1, so we have ui+1 = 1.",
                "Hence, P1 (Vi) = P0 (Vi) + 1 − ui.",
                "By inductive hypothesis, we have ui < 1.",
                "Consequently, P1 (Vi) > P0 (Vi), which implies vi = 1, a contradiction.",
                "Finally, if vi = 1/2, but ui+1 = 1/(2 − ui), player Vi is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as ui+1 = 1/(2 − ui) and ui < 1, we have ui+1 < 1.",
                "CLAIM 5.",
                "Any strategy profile of the form (u−1, 1/2, u0, 1/2, u1, 1/2, . . . , uk−1, 1/2, uk), where u−1 ∈ [0, 1], u0 = (x − x )u−1 + x , u1 = u0/(u0 + 1), and ui+1 = 1/(2 − ui) for i ≥ 1 constitutes a Nash equilibrium.",
                "PROOF.",
                "First, the player U−1s payoffs do not depend on other players actions, so he is free to play any strategy in [0, 1].",
                "As long as u0 = (x −x )u−1 +x , player V−1 is indifferent between 0 and 1, so he is content to play 1/2; a similar argument applies to players V0, . . . , Vk−1.",
                "Finally, for each i = 0, . . . , k, the payoffs of player Ui only depend on the strategy of player Vi−1.",
                "In particular, as long as vi−1 = 1/2, player Ui is indifferent between playing 0 and 1, so he can play any mixed strategy ui ∈ [0, 1].",
                "To complete the proof, note that (x − x )u−1 + x ∈ [0, 1] for all u−1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] for all u0 ∈ [0, 1], and 1/(2 − ui) ∈ [0, 1] for all ui ∈ [0, 1], so we have ui ∈ [0, 1] for all i = 0, . . . , k. Now, let us compute the total payoff under a strategy profile of the form given in Claim 5.",
                "The payoff to U−1 is 0, and the expected payoff to each of the Ui, i = 0, . . . , k, is 1/2.",
                "The expected payoffs to V−1 and V0 are 0.",
                "Finally, for any i = 1, . . . , k − 1, the expected payoff to Vi is Ti = Aiuiui+1 − Aiui+1.",
                "It follows that to find a Nash equilibrium with the highest total payoff, we have to maximize Pk−1 i=1 Ti subject to conditions u−1 ∈ [0, 1], u0 = (x −x )u−1+x , u1 = u0/(u0+1), and ui+1 = 1/(2−ui) for i = 1, . . . , k − 1.",
                "We would like to express Pk−1 i=1 Ti as a function of u0.",
                "To simplify notation, set u = u0.",
                "LEMMA 2.",
                "For i = 1, . . . , k, we have ui = u+i−1 u+i .",
                "PROOF.",
                "The proof is by induction on i.",
                "For i = 1, we have u1 = u/(u + 1).",
                "Now, for i ≥ 2 suppose that ui−1 = (u + i − 2)/(u + i − 1).",
                "We have ui = 1/(2 − ui−1) = (u + i − 1)/(2u + 2i − 2 − u − i + 2) = (u + i − 1)/(u + i).",
                "It follows that for i = 1, . . . , k − 1 we have Ti = Ai u + i − 1 u + i u + i u + i + 1 − Ai u + i u + i + 1 = −Ai 1 u + i + 1 = Ki+1 u + i + 1 .",
                "Observe that as u−1 varies from 0 to 1, u varies from x to x .",
                "Therefore, to maximize the total payoff, we have to choose u ∈ [x , x ] so as to maximize K2 u + 2 + · · · + Kk u + k = R(u).",
                "By construction, the only maximum of R(u) on [x , x ] is α.",
                "It follows that in the payoff-maximizing Nash equilibrium of our game U0 plays α.",
                "Finally, note that the payoffs in our game are rational rather than integer.",
                "However, it is easy to see that we can multiply all payoffs to a player by their greatest common denominator without affecting his strategy.",
                "In the resulting game, all payoffs are integer.",
                "This concludes the proof of Theorem 2. 4.",
                "APPROXIMATING THE SOCIALLY OPTIMAL NASH EQUILIBRIUM We have seen that the Nash equilibrium that maximizes the social welfare may involve strategies that are not in Q.",
                "Hence, in this section we focus on finding a Nash equilibrium that is almost optimal from the social welfare perspective.",
                "We propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within from optimal.",
                "The running time of this algorithm is polynomial in 1/ , n and |Pmax| (recall that Pmax is the maximum absolute value of an entry of a payoff matrix).",
                "While the negative result of the previous section is for graphical games on paths, our algorithm applies to a wider range of scenarios.",
                "Namely, it runs in polynomial time on bounded-degree trees 166 as long as the best response policy of each vertex, given its parent, can be represented as a union of a polynomial number of rectangles.",
                "Note that path graphs always satisfy this condition: in [9] we showed how to compute such a representation, given a graph with maximum degree 2.",
                "Consequently, for path graphs the running time of our algorithm is guaranteed to be polynomial. (Note that [9] exhibits a family of graphical games on bounded-degree trees for which the best response policies of some of the vertices, given their parents, have exponential size, when represented as unions of rectangles.)",
                "Due to space restrictions, in this version of the paper we present the algorithm for the case where the graph underlying the graphical game is a path.",
                "We then state our result for the general case; the proof can be found in the full version of this paper [10].",
                "Suppose that s is a strategy profile for a graphical game G. That is, s assigns a mixed strategy to each vertex of G. let EPV (s) be the expected payoff of player V under s and let EP(s) =P V EPV (s).",
                "Let M(G) = max{EP(s) | s is a Nash equilibrium for G}.",
                "THEOREM 3.",
                "Suppose that G is a graphical game on an nvertex path.",
                "Then for any > 0 there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G)− .",
                "The running time of the algorithm is O(n4 P3 max/ 3 ) PROOF.",
                "Let {V1, . . . , Vn} be the set of all players.",
                "We start by constructing the best response policies for all Vi, i = 1, . . . , n − 1.",
                "As shown in [9], this can be done in time O(n3 ).",
                "Let N > 5n be a parameter to be selected later, set δ = 1/N, and define X = {jδ | j = 0, . . . , N}.",
                "We say that vj is an event point for a player Vi if it is a Vi-event point for B(Vi, Vi−1) or B(Vi+1, Vi).",
                "For each player Vi, consider a finite set of strategies Xi given by Xi = X ∪ {vj |vj is an event point for Vi}.",
                "It has been shown in [9] that for any i = 2, . . . , n, the best response policy B(Vi, Vi−1) has at most 2n + 4 Vi-event points.",
                "As we require N > 5n, we have |Xi| ≤ 2N; assume without loss of generality that |Xi| = 2N.",
                "Order the elements of Xi in increasing order as x1 i = 0 < x2 i < · · · < x2N i .",
                "We will refer to the strategies in Xi as discrete strategies of player Vi; a strategy profile in which each player has a discrete strategy will be referred to as a discrete strategy profile.",
                "We will now show that even we restrict each player Vi to strategies from Xi, the players can still achieve a Nash equilibrium, and moreover, the best such Nash equilibrium (with respect to the social welfare) has total payoff at least M(G) − as long as N is large enough.",
                "Let s be a strategy profile that maximizes social welfare.",
                "That is, let s = (s1, . . . , sn) where si is the mixed strategy of player Vi and EP(s) = M(G).",
                "For i = 1, . . . , n, let ti = max{xj i | xj i ≤ si}.",
                "First, we will show that the strategy profile t = (t1, . . . , tn) is a Nash equilibrium for G. Fix any i, 1 < i ≤ n, and let R = [v1, v2]×[u1, u2] be the rectangle in B(Vi, Vi−1) that contains (si, si−1).",
                "As v1 is a Vi-event point of B(Vi, Vi−1), we have v1 ≤ ti, so the point (ti, si−1) is inside R. Similarly, the point u1 is a Vi−1-event point of B(Vi, Vi−1), so we have u1 ≤ ti−1, and therefore the point (ti, ti−1) is inside R. This means that for any i, 1 < i ≤ n, we have ti−1 ∈ pbrVi−1 (ti), which implies that t = (t1, . . . , tn) is a Nash equilibrium for G. Now, let us estimate the expected loss in social welfare caused by playing t instead of s. LEMMA 3.",
                "For any pair of strategy profiles t, s such that |ti − si| ≤ δ we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ for any i = 1, . . . , n. PROOF.",
                "Let Pi klm be the payoff of the player Vi, when he plays k, Vi−1 plays l, and Vi+1 plays m. Fix i = 1, . . . , n and for k, l, m ∈ {0, 1}, set tklm = tk i−1(1 − ti−1)1−k tl i(1 − ti)1−l tm i+1(1 − ti+1)1−m sklm = sk i−1(1 − si−1)1−k sl i(1 − si)1−l sm i+1(1 − si+1)1−m .",
                "We have |EPVi (s) − EPVi (t)| ≤ X k,l,m=0,1 |Pi klm(tklm − sklm )| ≤ 8Pmax max klm |tklm − sklm | We will now show that for any k, l, m ∈ {0, 1} we have |tklm − sklm | ≤ 3δ; clearly, this implies the lemma.",
                "Indeed, fix k, l, m ∈ {0, 1}.",
                "Set x = tk i−1(1 − ti−1)1−k , x = sk i−1(1 − si−1)1−k , y = tl i(1 − ti)1−l , y = sl i(1 − si)1−l , z = tm i+1(1 − ti+1)1−m , z = sm i+1(1 − si+1)1−m .",
                "Observe that if k = 0 then x − x = (1 − ti−1) − (1 − si−1), and if k = 1 then x − x = ti−1 − si−1, so |x − x | ≤ δ.",
                "A similar argument shows |y − y | ≤ δ, |z − z | ≤ δ.",
                "Also, we have x, x , y, y , z, z ∈ [0, 1].",
                "Hence, |tklm −sklm | = |xyz−x y z | = |xyz − x yz + x yz − x y z + x y z − x y z | ≤ |x − x |yz + |y − y |x z + |z − z |x y ≤ 3δ.",
                "Lemma 3 implies Pn i=1 |EPVi (s) − EPVi (t)| ≤ 24nPmaxδ, so by choosing δ < /(24nPmax), or, equivalently, setting N > 24nPmax/ , we can ensure that the total expected payoff for the strategy profile t is within from optimal.",
                "We will now show that we can find the best discrete Nash equilibrium (with respect to the social welfare) using dynamic programming.",
                "As t is a discrete strategy profile, this means that the strategy profile found by our algorithm will be at least as good as t. Define ml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj , j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1, and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The values ml,k i , i = 1, . . . , n; k, l = 1, . . . , N, can be computed inductively, as follows.",
                "We have ml,k 1 = 0 for k, l = 1, . . . , N. Now, suppose that we have already computed ml,k j for all j < i; k, l = 1, . . . , N. To compute mk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this is not the case, we have ml,k i = −∞.",
                "Otherwise, consider the set Y = Xi−2 ∩ pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "The proof of Theorem 1 in [9] implies that the set pbrVi−2 (xl i−1) is non-empty: the player Vi−2 has a potential best response to any strategy of Vi−1, in particular, xl i−1.",
                "By construction of the set Xi−2, this implies that Y is not empty.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "Then we have ml,k i = max{mj,l i−1 + pjlk | xj i−2 ∈ Y }.",
                "Finally, suppose that we have computed ml,k n for l, k = 1, . . . , N. We still need to take into account the payoff of player Vn.",
                "Hence, 167 we consider all pairs (xk n, xl n−1) that satisfy xl n−1 ∈ pbrVn−1 (xk n), and pick the one that maximizes the sum of mk,l n and the payoff of Vn when he plays xk n and Vn−1 plays xl n−1.",
                "This results in the maximum total payoff the players can achieve in a Nash equilibrium using discrete strategies; the actual strategy profile that produces this payoff can be reconstructed using standard dynamic programming techniques.",
                "It is easy to see that each ml,k i can be computed in time O(N), i.e., all of them can be computed in time O(nN3 ).",
                "Recall that we have to select N ≥ (24nPmax)/ to ensure that the strategy profile we output has total payoff that is within from optimal.",
                "We conclude that we can compute an -approximation to the best Nash equilibrium in time O(n4 P3 max/ 3 ).",
                "This completes the proof of Theorem 3.",
                "To state our result for the general case (i.e., when the underlying graph is a bounded-degree tree rather than a path), we need additional notation.",
                "If G has n players, let q(n) be an upper bound on the number of event points in the representation of any best response policy.",
                "That is, we assume that for any vertex U with parent V , B(V, U) has at most q(n) event points.",
                "We will be interested in the situation in which q(n) is polynomial in n. THEOREM 4.",
                "Let G be an n-player graphical game on a tree in which each node has at most Δ children.",
                "Suppose we are given a set of best-response policies for G in which each best-response policy B(V, U) is represented by a set of rectangles with at most q(n) event points.",
                "For any > 0, there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G) − .",
                "The running time of the algorithm is polynomial in n, Pmax and −1 provided that the tree has bounded degree (that is, Δ = O(1)) and q(n) is a polynomial in n. In particular, if N = max((Δ + 1)q(n) + 1, n2Δ+2 (Δ + 2)Pmax −1 ) and Δ > 1 then the running time is O(nΔ(2N)Δ .",
                "For the proof of this theorem, see [10]. 4.1 A polynomial-time algorithm for multiplicative approximation The running time of our algorithm is pseudopolynomial rather than polynomial, because it includes a factor which is polynomial in Pmax, the maximum (in absolute value) entry in any payoff matrix.",
                "If we are interested in multiplicative approximation rather than additive one, this can be improved to polynomial.",
                "First, note that we cannot expect a multiplicative approximation for all inputs.",
                "That is, we cannot hope to have an algorithm that computes a Nash equilibrium with total payoff at least (1 − )M(G).",
                "If we had such an algorithm, then for graphical games G with M(G) = 0, the algorithm would be required to output the optimal solution.",
                "To show that this is infeasible, observe that we can use the techniques of Section 3.2 to construct two integercoefficient graphical games on paths of length O(n) such that for some X ∈ R the maximal total payoff in the first game is X, the maximal total payoff in the second game is −X, and for both games, the strategy profiles that achieve the maximal total payoffs involve algebraic numbers of degree n. By combining the two games so that the first vertex of the second game becomes connected to the last vertex of the first game, but the payoffs of all players do not change, we obtain a graphical game in which the best Nash equilibrium has total payoff 0, yet the strategies that lead to this payoff have high algebraic complexity.",
                "However, we can achieve a multiplicative approximation when all entries of the payoff matrices are positive and the ratio between any two entries is polynomially bounded.",
                "Recall that we assume that all payoffs are integer, and let Pmin > 0 be the smallest entry of any payoff matrix.",
                "In this case, for any strategy profile the payoff to player i is at least Pmin, so the total payoff in the social-welfare maximizing Nash equilibrium s satisfies M(G) ≥ nPmin.",
                "Moreover, Lemma 3 implies that by choosing δ < /(24Pmax/Pmin), we can ensure that the Nash equilibrium t produced by our algorithm satisfies nX i=1 EPVi (s) − nX i=1 EPVi (t) ≤ 24Pmaxδn ≤ nPmin ≤ M(G), i.e., for this value of δ we have Pn i=1 EPVi (t) ≥ (1 − )M(G).",
                "Recall that the running time of our algorithm is O(nN3 ), where N has to be selected to satisfy N > 5n, N = 1/δ.",
                "It follows that if Pmin > 0, Pmax/Pmin = poly(n), we can choose N so that our algorithm provides a multiplicative approximation guarantee and runs in time polynomial in n and 1/ . 5.",
                "BOUNDED PAYOFF NASH EQUILIBRIA Another natural way to define what is a good Nash equilibrium is to require that each players expected payoff exceeds a certain threshold.",
                "These thresholds do not have to be the same for all players.",
                "In this case, in addition to the payoff matrices of the n players, we are given n numbers T1, . . . , Tn, and our goal is to find a Nash equilibrium in which the payoff of player i is at least Ti, or report that no such Nash equilibrium exists.",
                "It turns out that we can design an FPTAS for this problem using the same techniques as in the previous section.",
                "THEOREM 5.",
                "Given a graphical game G on an n-vertex path and n rational numbers T1, . . . , Tn, suppose that there exists a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. Then for any > 0 we can find in time O(max{nP3 max/ 3 , n4 / 3 }) a strategy profile s such that s is a Nash equilibrium for G and EPVi (s ) ≥ Ti − for i = 1, . . . , n. PROOF.",
                "The proof is similar to that of Theorem 3.",
                "First, we construct the best response policies for all players, choose N > 5n, and construct the sets Xi, i = 1, . . . , n, as described in the proof of Theorem 3.",
                "Consider a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. We construct a strategy profile ti = max{xj i | xj i ≤ si} and use the same argument as in the proof of Theorem 3 to show that t is a Nash equilibrium for G. By Lemma 3, we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ, so choosing δ < /(24Pmax), or, equivalently, N > max{5n, 24Pmax/ }, we can ensure EPVi (t) ≥ Ti − for i = 1, . . . , n. Now, we will use dynamic programming to find a discrete Nash equilibrium that satisfies EPVi (t) ≥ Ti − for i = 1, . . . , n. As t is a discrete strategy profile, our algorithm will succeed whenever there is a strategy profile s with EPVi (s) ≥ Ti− for i = 1, . . . , n. Let zl,k i = 1 if there is a discrete strategy profile such that for any j < i the strategy of the player Vj is a potential best response to the strategy of Vj+1, the expected payoff of Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "Otherwise, let zl,k i = 0.",
                "We can compute zl,k i , i = 1, . . . , n; k, l = 1, . . . , N inductively, as follows.",
                "We have zl,k 1 = 1 for k, l = 1, . . . , N. Now, suppose that we have already computed zl,k j for all j < i; k, l = 1, . . . , N. To compute zk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this 168 is not the case, clearly, zk,l i = 0.",
                "Otherwise, consider the set Y = Xi−2 ∩pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "It has been shown in the proof of Theorem 3 that Y = ∅.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "If there exists an xj i−2 ∈ Y such that zj,l i−1 = 1 and pjlk ≥ Ti−2 − , set zl,k i = 1.",
                "Otherwise, set zl,k i = 0.",
                "Having computed zl,k n , l, k = 1, . . . , N, we check if zl,k n = 1 for some pair (l, k). if such a pair of indices exists, we instruct Vn to play xk n and use dynamic programming techniques (or, equivalently, the downstream pass of the algorithm of [13]) to find a Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n (recall that Vn is a dummy player, i.e., we assume Tn = 0, EPn(s ) = 0 for any choice of s ).",
                "If zl,k n = 0 for all l, k = 1, . . . , N, there is no discrete Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n and hence no Nash equilibrium s (not necessarily discrete) such that EPVi (s) ≥ Ti for i = 1, . . . , n. The running time analysis is similar to that for Theorem 3; we conclude that the running time of our algorithm is O(nN3 ) = O(max{nP3 max/ 3 , n4 / 3 }).",
                "REMARK 1.",
                "Theorem 5 can be extended to trees of bounded degree in the same way as Theorem 4. 5.1 Exact Computation Another approach to finding Nash equilibria with bounded payoffs is based on inductively computing the subsets of the best response policies of all players so as to exclude the points that do not provide sufficient payoffs to some of the players.",
                "Formally, we say that a strategy v of the player V is a potential best response to a strategy w of its parent W with respect to a threshold vector T = (T1, . . . , Tn), (denoted by v ∈ pbrV (w, T)) if there is an equilibrium in the instance G(V,W ),W =w in which V plays mixed strategy v and the payoff to any player Vi downstream of V (including V ) is at least Ti.",
                "The best response policy for V with respect to a threshold vector T is defined as B(W, V, T) = {(w, v) | v ∈ pbrV (w, T), w ∈ [0, 1]}.",
                "It is easy to see that if any of the sets B(Vj, Vj−1, T), j = 1, . . . , n, is empty, it means that it is impossible to provide all players with expected payoffs prescribed by T. Otherwise, one can apply the downstream pass of the original algorithm of [13] to find a Nash equilibrium.",
                "As we assume that Vn is a dummy vertex whose payoff is identically 0, the Nash equilibrium with these payoffs exists as long as Tn ≤ 0 and B(Vn, Vn−1, T) is not empty.",
                "Using the techniques developed in [9], it is not hard to show that for any j = 1, . . . , n, the set B(Vj , Vj−1, T) consists of a finite number of rectangles, and one can compute B(Vj+1, Vj , T) given B(Vj , Vj−1, T).",
                "The advantage of this approach is that it allows us to represent all Nash equilibria that provide required payoffs to the players.",
                "However, it is not likely to be practical, since it turns out that the rectangles that appear in the representation of B(Vj , Vj−1, T) may have irrational coordinates.",
                "CLAIM 6.",
                "There exists a graphical game G on a 3-vertex path UV W and a vector T = (T1, T2, T3) such that B(V, W, T) cannot be represented as a union of a finite number of rectangles with rational coordinates.",
                "PROOF.",
                "We define the payoffs to the players in G as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = uw, P1 (V ) = P0 (V ) + w − .8u − .1, where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = .8u + .1; observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "It is not hard to see that we have B(W, V ) = [0, .1]×{0} ∪ [.1, .9]×[0, 1] ∪ [.9, 1]×{1}.",
                "The payoffs to W are not important for our construction; for example, set P0(W ) = P0(W ) = 0.",
                "Now, set T = (0, 1/8, 0), i.e., we are interested in Nash equilibria in which V s expected payoff is at least 1/8.",
                "Suppose w ∈ [0, 1].",
                "The player V can play a mixed strategy v when W is playing w as long as U plays u = f−1 (w) = 5w/4 − 1/8 (to ensure that V is indifferent between 0 and 1) and P0 (V ) = P1 (V ) = uw = w(5w/4 − 1/8) ≥ 1/8.",
                "The latter condition is satisfied if w ≤ (1 − √ 41)/20 < 0 or w ≥ (1 + √ 41)/20.",
                "Note that we have .1 < (1 + √ 41)/20 < .9.",
                "For any other value of w, any strategy of U either makes V prefer one of the pure strategies or does not provide it with a sufficient expected payoff.",
                "There are also some values of w for which V can play a pure strategy (0 or 1) as a potential best response to W and guarantee itself an expected payoff of at least 1/8; it can be shown that these values of w form a finite number of segments in [0, 1].",
                "We conclude that any representation of B(W, V, T) as a union of a finite number of rectangles must contain a rectangle of the form [(1 + √ 41)/20, w ]×[v , v ] for some w , v , v ∈ [0, 1].",
                "On the other hand, it can be shown that for any integer payoff matrices and threshold vectors and any j = 1, . . . , n − 1, the sets B(Vj+1, Vj, T) contain no rectangles of the form [u , u ]×{v} or {v}×[w , w ], where v ∈ R\\Q.",
                "This means that if B(Vn, Vn−1, T) is non-empty, i.e., there is a Nash equilibrium with payoffs prescribed by T, then the downstream pass of the algorithm of [13] can always pick a strategy profile that forms a Nash equilibrium, provides a payoff of at least Ti to the player Vi, and has no irrational coordinates.",
                "Hence, unlike in the case of the Nash equilibrium that maximizes the social welfare, working with irrational numbers is not necessary, and the fact that the algorithm discussed in this section has to do so can be seen as an argument against using this approach. 6.",
                "OTHER CRITERIA FOR SELECTING A NASH EQUILIBRIUM In this section, we consider several other criteria that can be useful in selecting a Nash equilibrium. 6.1 Combining welfare maximization with bounds on payoffs In many real life scenarios, we want to maximize the social welfare subject to certain restrictions on the payoffs to individual players.",
                "For example, we may want to ensure that no player gets a negative expected payoff, or that the expected payoff to player i is at least Pi max − ξ, where Pi max is the maximum entry of is payoff matrix and ξ is a fixed parameter.",
                "Formally, given a graphical game G and a vector T1, . . . , Tn, let S be the set of all Nash equilibria s of G that satisfy Ti ≤ EPVi (s) for i = 1, . . . , n, and let ˆs = argmaxs∈S EP(s).",
                "If the set S is non-empty, we can find a Nash equilibrium ˆs that is -close to satisfying the payoff bounds and is within from ˆs with respect to the total payoff by combining the algorithms of Section 4 and Section 5.",
                "Namely, for a given > 0, choose δ as in the proof of Theorem 3, and let Xi be the set of all discrete strategies of player Vi (for a 169 formal definition, see the proof of Theorem 3).",
                "Combining the proofs of Theorem 3 and Theorem 5, we can see that the strategy profile ˆt given by ˆti = max{xj i | xj i ≤ ˆsi} satisfies EPVi (ˆt) ≥ Ti − , |EP(ˆs) − EP(ˆt)| ≤ .",
                "Define ˆml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj, j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1 and the payoff to player Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The ˆml,k i can be computed by dynamic programming similarly to the ml,k i and zl,k i in the proofs of Theorems 3 and 5.",
                "Finally, as in the proof of Theorem 3, we use ml,k n to select the best discrete Nash equilibrium subject to the payoff constraints.",
                "Even more generally, we may want to maximize the total payoff to a subset of players (who are assumed to be able to redistribute the profits fairly among themselves) while guaranteeing certain expected payoffs to (a subset of) the other players.",
                "This problem can be handled similarly. 6.2 A minimax approach A more egalitarian measure of the quality of a Nash equilibrium is the minimal expected payoff to a player.",
                "The optimal solution with respect to this measure is a Nash equilibrium in which the minimal expected payoff to a player is maximal.",
                "To find an approximation to such a Nash equilibrium, we can combine the algorithm of Section 5 with binary search on the space of potential lower bounds.",
                "Note that the expected payoff to any player Vi given a strategy s always satisfies −Pmax ≤ EPVi (s) ≤ Pmax.",
                "For a fixed > 0, we start by setting T = −Pmax, T = Pmax, T∗ = (T + T )/2.",
                "We then run the algorithm of Section 5 with T1 = · · · = Tn = T∗ .",
                "If the algorithm succeeds in finding a Nash equilibrium s that satisfies EPVi (s ) ≥ T∗ − for all i = 1, . . . , n, we set T = T∗ , T∗ = (T + T )/2; otherwise, we set T = T∗ , T∗ = (T + T )/2 and loop.",
                "We repeat this process until |T − T | ≤ .",
                "It is not hard to check that for any p ∈ R, if there is a Nash equilibrium s such that mini=1,...,n EPVi (s) ≥ p, then our algorithm outputs a Nash equilibrium s that satisfies mini=1,...,n EPVi (s) ≥ p−2 .",
                "The running time of our algorithm is O(max{nP3 max log −1 / 3 , n4 log −1 / 3 }). 6.3 Equalizing the payoffs When the players payoff matrices are not very different, it is reasonable to demand that the expected payoffs to the players do not differ by much either.",
                "We will now show that Nash equilibria in this category can be approximated in polynomial time as well.",
                "Indeed, observe that the algorithm of Section 5 can be easily modified to deal with upper bounds on individual payoffs rather than lower bounds.",
                "Moreover, we can efficiently compute an approximation to a Nash equilibrium that satisfies both the upper bound and the lower bound for each player.",
                "More precisely, suppose that we are given a graphical game G, 2n rational numbers T1, . . . , Tn, T1, . . . , Tn and > 0.",
                "Then if there exists a strategy profile s such that s is a Nash equilibrium for G and Ti ≤ EPVi (s) ≤ Ti for i = 1, . . . , n, we can find a strategy profile s such that s is a Nash equilibrium for G and Ti − ≤ EPVi (s ) ≤ Ti + for i = 1, . . . , n. The modified algorithm also runs in time O(max{nP3 max/ 3 , [4]n4 / 3 }).",
                "This observation allows us to approximate Nash equilibria in which all players expected payoffs differ by at most ξ for any fixed ξ > 0.",
                "Given an > 0, we set T1 = · · · = Tn = −Pmax, T1 = · · · = Tn = −Pmax + ξ + , and run the modified version of the algorithm of Section 5.",
                "If it fails to find a solution, we increment all Ti, Ti by and loop.",
                "We continue until the algorithm finds a solution, or Ti ≥ Pmax.",
                "Suppose that there exists a Nash equilibrium s that satisfies |EPVi (s) − EPVj (s)| ≤ ξ for all i, j = 1, . . . , n. Set r = mini=1,...,n EPVi (s); we have r ≤ EPVi (s) ≤ r + ξ for all i = 1, . . . , n. There exists a k ≥ 0 such that −Pmax + (k − 1) ≤ r ≤ −Pmax + k .",
                "During the kth step of the algorithm, we set T1 = · · · = Tn = −Pmax +(k−1) , i.e., we have r− ≤ Ti ≤ r, r + ξ ≤ Ti ≤ r + ξ + .",
                "That is, the Nash equilibrium s satisfies Ti ≤ r ≤ EPVi (s) ≤ r + ξ ≤ Ti , which means that when Ti is set to −Pmax + (k − 1) , our algorithm is guaranteed to output a Nash equilibrium t that satisfies r − 2 ≤ Ti − ≤ EPVi (t) ≤ Ti + ≤ r +ξ +2 .",
                "We conclude that whenever such a Nash equilibrium s exists, our algorithm outputs a Nash equilibrium t that satisfies |EPVi (t) − EPVj (t)| ≤ ξ + 4 for all i, j = 1, . . . , n. The running time of this algorithm is O(max{nP3 max/ 4 , n4 / 4 }).",
                "Note also that we can find the smallest ξ for which such a Nash equilibrium exists by combining this algorithm with binary search over the space ξ = [0, 2Pmax].",
                "This identifies an approximation to the fairest Nash equilibrium, i.e., one in which the players expected payoffs differ by the smallest possible amount.",
                "Finally, note that all results in this section can be extended to bounded-degree trees. 7.",
                "CONCLUSIONS We have studied the problem of equilibrium selection in graphical games on bounded-degree trees.",
                "We considered several criteria for selecting a Nash equilibrium, such as maximizing the social welfare, ensuring a lower bound on the expected payoff of each player, etc.",
                "First, we focused on the algebraic complexity of a social welfare-maximizing Nash equilibrium, and proved strong negative results for that problem.",
                "Namely, we showed that even for graphical games on paths, any algebraic number α ∈ [0, 1] may be the only strategy available to some player in all social welfaremaximizing Nash equilibria.",
                "This is in sharp contrast with the fact that graphical games on trees always possess a Nash equilibrium in which all players strategies are rational numbers.",
                "We then provided approximation algorithms for selecting Nash equilibria with special properties.",
                "While the problem of finding approximate Nash equilibria for various classes of games has received a lot of attention in recent years, most of the existing work aims to find -Nash equilibria that satisfy (or are -close to satisfying) certain properties.",
                "Our approach is different in that we insist on outputting an exact Nash equilibrium, which is -close to satisfying a given requirement.",
                "As argued in the introduction, there are several reasons to prefer a solution that constitutes an exact Nash equilibrium.",
                "Our algorithms are fully polynomial time approximation schemes, i.e., their running time is polynomial in the inverse of the approximation parameter , though they may be pseudopolynomial with respect to the input size.",
                "Under mild restrictions on the inputs, they can be modified to be truly polynomial.",
                "This is the strongest positive result one can derive for a problem whose exact solutions may be hard to represent, as is the case for many of the problems considered here.",
                "While we prove our results for games on a path, they can be generalized to any tree for which the best response policies have compact representations as unions of rectangles.",
                "In the full version of the paper we describe our algorithms for the general case.",
                "Further work in this vein could include extensions to the kinds of guarantees sought for Nash equilibria, such as guaranteeing total payoffs for subsets of players, selecting equilibria in which some players are receiving significantly higher payoffs than their peers, etc.",
                "At the moment however, it is perhaps more important to inves170 tigate whether Nash equilibria of graphical games can be computed in a decentralized manner, in contrast to the algorithms we have introduced here.",
                "It is natural to ask if our results or those of [9] can be generalized to games with three or more actions.",
                "However, it seems that this will make the analysis significantly more difficult.",
                "In particular, note that one can view the bounded payoff games as a very limited special case of games with three actions per player.",
                "Namely, given a two-action game with payoff bounds, consider a game in which each player Vi has a third action that guarantees him a payoff of Ti no matter what everyone else does.",
                "Then checking if there is a Nash equilibrium in which none of the players assigns a nonzero probability to his third action is equivalent to checking if there exists a Nash equilibrium that satisfies the payoff bounds in the original game, and Section 5.1 shows that finding an exact solution to this problem requires new ideas.",
                "Alternatively it may be interesting to look for similar results in the context of correlated equilibria (CE), especially since the best CE may have higher value (total expected payoff) than the best NE.",
                "The ratio between these values is called the mediation value in [1].",
                "It is known from [1] that the mediation value of 2-player, 2-action games with non-negative payoffs is at most 4 3 , and they exhibit a 3-player game for which it is infinite.",
                "Furthermore, a 2-player, 3action example from [1] also has infinite mediation value. 8.",
                "REFERENCES [1] I. Ashlagi, D. Monderer and M. Tenneholtz, On the Value of Correlation, Proceedings of Dagstuhl seminar 05011 (2005) [2] R. Aumann, Subjectivity and Correlation in Randomized Strategies, Journal of Mathematical Economics 1 pp. 67-96 (1974) [3] B. Blum, C. R. Shelton, and D. Koller, A Continuation Method for Nash Equilibria in Structured Games, Proceedings of IJCAI03 [4] X. Chen, X. Deng and S. Teng, Computing Nash Equilibria: Approximation and Smoothed Complexity, Proceedings of FOCS06 [5] X. Chen, X. Deng, Settling the Complexity of 2-Player Nash-Equilibrium, Proceedings of FOCS06 [6] V. Conitzer and T. Sandholm, Complexity Results about Nash Equilibria, Proceedings of IJCAI03 [7] C. Daskalakis, P. W. Goldberg and C. H. Papadimitriou, The Complexity of Computing a Nash Equilibrium, Proceedings of STOC06 [8] R. S. Datta, Universality of Nash Equilibria, Mathematics of Operations Research 28:3, 2003 [9] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Nash Equilibria in Graphical games on Trees Revisited, Proceedings of ACM EC06 [10] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Computing Good Nash Equilibria in Graphical Games, http://arxiv.org/abs/cs.GT/0703133 [11] I. Gilboa and E. Zemel, Nash and Correlated Equilibria: Some Complexity Considerations, Games and Economic Behavior, 1 pp. 80-93 (1989) [12] P. W. Goldberg and C. H. Papadimitriou, Reducibility Among Equilibrium Problems, Proceedings of STOC06 [13] M. Kearns, M. Littman, and S. Singh, Graphical Models for Game Theory, Proceedings of UAI01 [14] M. Littman, M. Kearns, and S. Singh, An Efficient Exact Algorithm for Singly Connected Graphical Games, Proceedings of NIPS01 [15] R. Lipton and E. Markakis, Nash Equilibria via Polynomial Equations, Proceedings of LATIN04 [16] L. Ortiz and M. Kearns, Nash Propagation for Loopy Graphical Games, Proceedings of NIPS03 [17] C.H.",
                "Papadimitriou, Computing Correlated Equilibria in Multi-Player Games, Proceedings of STOC05 [18] C.H.",
                "Papadimitriou and T. Roughgarden, Computing Equilibria in Multi-Player Games, Proceedings of SODA05 [19] D. Vickrey and D. Koller, Multi-agent Algorithms for Solving Graphical Games, Proceedings of AAAI02 171"
            ],
            "original_annotated_samples": [
                "By contrast, finding a Nash equilibrium in a general <br>degree-bounded graph</br> appears to be computationally intractable: it has been shown (see [5, 12, 7]) to be complete for the complexity class PPAD. [9] extends this hardness result to the case in which the underlying graph has bounded pathwidth."
            ],
            "translated_annotated_samples": [
                "Por el contrario, encontrar un equilibrio de Nash en un grafo general con <br>grado acotado</br> parece ser computacionalmente intratable: se ha demostrado (ver [5, 12, 7]) que es completo para la clase de complejidad PPAD. [9] extiende este resultado de dificultad al caso en el que el grafo subyacente tiene un ancho de camino acotado."
            ],
            "translated_text": "Calcular buenos equilibrios de Nash en juegos gráficos ∗ Edith Elkind Universidad Hebrea de Jerusalén, Israel, y Universidad de Southampton, Southampton, SO17 1BJ, Reino Unido. Leslie Ann Goldberg Universidad de Liverpool Liverpool L69 3BX, Reino Unido. Paul Goldberg Universidad de Liverpool Liverpool L69 3BX, Reino Unido. RESUMEN Este artículo aborda el problema de la selección justa de equilibrios en juegos gráficos. Nuestro enfoque se basa en la estructura de datos llamada política de mejor respuesta, propuesta por Kearns et al. [13] como una forma de representar todos los equilibrios de Nash de un juego gráfico. En [9], se demostró que la política de mejor respuesta tiene un tamaño polinómico siempre y cuando el grafo subyacente sea un camino. En este artículo, demostramos que si el grafo subyacente es un árbol de grado acotado y la política de mejor respuesta tiene un tamaño polinómico, entonces existe un algoritmo eficiente que construye un equilibrio de Nash que garantiza ciertos pagos a todos los participantes. Otro concepto de solución atractivo es un equilibrio de Nash que maximiza el bienestar social. Mostramos que, si bien calcular exactamente lo último es inviable (demostramos que resolver este problema puede implicar números algebraicos de un grado arbitrariamente alto), existe un FPTAS para encontrar dicho equilibrio siempre y cuando la política de mejor respuesta tenga un tamaño polinómico. Estos dos algoritmos pueden combinarse para producir equilibrios de Nash que satisfacen varios criterios de equidad. Categorías y Descriptores de Asignaturas F.2 [Teoría de la Computación]: Análisis de Algoritmos y Complejidad de Problemas; J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento - Economía Términos Generales Algoritmos, Economía, Teoría 1. INTRODUCCIÓN En una gran comunidad de agentes, es poco probable que el comportamiento de un agente tenga un efecto directo en la mayoría de los otros agentes: más bien, solo serán afectados los agentes que estén lo suficientemente cerca de él. Sin embargo, a medida que estos agentes responden adaptando su comportamiento, más agentes sentirán las consecuencias y eventualmente las decisiones tomadas por un solo agente se propagarán por toda la comunidad. Esta es la intuición detrás de los juegos gráficos, los cuales fueron introducidos por Kearns, Littman y Singh en [13] como un esquema de representación compacto para juegos con muchos jugadores. En un juego gráfico de n jugadores, a cada jugador se le asocia un vértice de un grafo subyacente G, y las ganancias de cada jugador dependen de su acción, así como de las acciones de sus vecinos en el grafo. Si el grado máximo de G es Δ, y cada jugador tiene dos acciones disponibles, entonces el juego se puede representar usando n2Δ+1 números. Por el contrario, necesitamos n^2 números para representar un juego general de n jugadores y 2 acciones, lo cual solo es práctico para valores pequeños de n. Para juegos gráficos con Δ constante, el tamaño del juego es lineal en n. Uno de los problemas más naturales para un juego gráfico es el de encontrar un equilibrio de Nash, cuya existencia se deriva del célebre teorema de Nash (ya que los juegos gráficos son solo un caso especial de juegos de n jugadores). El primer intento de abordar este problema se realizó en [13], donde los autores consideran juegos gráficos con dos acciones por jugador en los que el grafo subyacente es un árbol de grado acotado. Proponen un algoritmo genérico para encontrar equilibrios de Nash que puede ser especializado de dos maneras: un algoritmo de tiempo exponencial para encontrar un equilibrio de Nash (exacto) y un esquema de aproximación de tiempo polinómico completo (FPTAS) para encontrar una aproximación a un equilibrio de Nash. Para cualquier > 0, este algoritmo produce un equilibrio de Nash, que es un perfil estratégico en el que ningún jugador puede mejorar su pago más que al cambiar unilateralmente su estrategia. Si bien los equilibrios de Nash aproximados suelen ser más fáciles de calcular que los equilibrios de Nash exactos, este concepto de solución tiene varias desventajas. Primero, es posible que los jugadores sean sensibles a una pequeña pérdida en las ganancias, por lo que el perfil estratégico que es un equilibrio de Nash no será estable. Esto será así incluso si solo hay un pequeño subconjunto de jugadores que son extremadamente sensibles al precio, y para una gran población de jugadores puede ser difícil elegir un valor que satisfaga a todos. Segundo, los perfiles estratégicos que están cerca de ser equilibrios de Nash pueden ser mucho mejores con respecto a las propiedades consideradas que los equilibrios de Nash exactos. Por lo tanto, la aproximación al valor de la mejor solución que corresponde a un equilibrio de Nash aproximado puede no ser indicativa de lo que se puede lograr bajo un equilibrio de Nash exacto. Esto es especialmente importante si el propósito de la solución aproximada es proporcionar un buen punto de referencia para un sistema de agentes egoístas, ya que el punto de referencia implícito por un equilibrio de Nash puede ser poco realista. Por estas razones, en este artículo nos enfocamos en el problema de calcular equilibrios de Nash exactos. Basándose en las ideas de [14], Elkind et al. [9] mostraron cómo encontrar un equilibrio de Nash (exacto) en tiempo polinómico cuando el grafo subyacente tiene grado 2 (es decir, cuando el grafo es una colección de caminos y ciclos). Por el contrario, encontrar un equilibrio de Nash en un grafo general con <br>grado acotado</br> parece ser computacionalmente intratable: se ha demostrado (ver [5, 12, 7]) que es completo para la clase de complejidad PPAD. [9] extiende este resultado de dificultad al caso en el que el grafo subyacente tiene un ancho de camino acotado. Un juego gráfico puede no tener un equilibrio de Nash único, de hecho, puede tener exponencialmente muchos. Además, algunos equilibrios de Nash son más deseables que otros. En lugar de tener un algoritmo que simplemente encuentre algún equilibrio de Nash, nos gustaría tener algoritmos para encontrar equilibrios de Nash con diversas propiedades socialmente deseables, como maximizar el pago total o distribuir las ganancias de manera justa. Una propiedad útil de la estructura de datos de [13] es que representa simultáneamente el conjunto de todos los equilibrios de Nash del juego subyacente. Si esta representación tiene tamaño polinómico (como es el caso de los caminos, como se muestra en [9]), se puede esperar extraer de ella un equilibrio de Nash con las propiedades deseadas. De hecho, en [13] los autores mencionan que esto es posible si uno está interesado en encontrar un equilibrio de Nash (aproximado). El objetivo de este artículo es extender esto a equilibrios de Nash exactos. 1.1 Nuestros Resultados En este artículo, estudiamos juegos gráficos de n jugadores y 2 acciones en árboles de grado acotado para los cuales la estructura de datos de [13] tiene tamaño polinómico en n. Nos enfocamos en el problema de encontrar equilibrios de Nash exactos con ciertas propiedades socialmente deseables. En particular, mostramos cómo encontrar un equilibrio de Nash que maximiza (casi) el bienestar social, es decir, la suma de las ganancias de los jugadores, y mostramos cómo encontrar un equilibrio de Nash que satisface (casi) los límites de ganancias prescritos para todos los jugadores. Los juegos gráficos en árboles de grado acotado tienen una estructura algebraica simple. Una característica atractiva, que se desprende de [13], es que cada juego de este tipo tiene un equilibrio de Nash en el cual la estrategia de cada jugador es un número racional. La sección 3 estudia la estructura algebraica de aquellos equilibrios de Nash que maximizan el bienestar social. Demostramos (Teoremas 1 y 2) que, sorprendentemente, el conjunto de equilibrios de Nash que maximizan el bienestar social es más complejo. De hecho, para cualquier número algebraico α ∈ [0, 1] con grado a lo sumo n, exhibimos un juego gráfico en un camino de longitud O(n) tal que, en el equilibrio de Nash único que maximiza el bienestar social de este juego, uno de los jugadores juega la estrategia mixta α. Este resultado muestra que puede ser difícil representar un equilibrio de Nash óptimo. Parece ser una característica novedosa del escenario que consideramos aquí, que un equilibrio de Nash óptimo es difícil de representar, en una situación donde es fácil encontrar y representar un equilibrio de Nash. Dado que el equilibrio de Nash que maximiza el bienestar social puede ser difícil de representar eficientemente, debemos conformarnos con una aproximación. Sin embargo, la diferencia crucial entre nuestro enfoque y el de los trabajos anteriores [13, 16, 19] es que requerimos que nuestro algoritmo produzca un equilibrio de Nash exacto, aunque no necesariamente el óptimo con respecto a nuestros criterios. En la Sección 4, describimos un algoritmo que cumple con este requisito. Específicamente, proponemos un algoritmo que, para cualquier > 0, encuentra un equilibrio de Nash cuya recompensa total está dentro de de lo óptimo. Se ejecuta en tiempo polinómico (Teorema 3,4) para cualquier juego gráfico en un árbol de grado acotado para el cual la estructura de datos propuesta por [13] (la llamada política de mejor respuesta, definida a continuación) tiene un tamaño poli(n) (nota que, como se muestra en [9], esto siempre es el caso cuando el grafo subyacente es un camino). Un resultado relacionado en un contexto diferente fue obtenido por Datta [8], quien muestra que los juegos de n jugadores con 2 acciones son universales en el sentido de que cualquier variedad algebraica real puede ser representada como el conjunto de equilibrios de Nash totalmente mixtos de tales juegos. Precisamente, el tiempo de ejecución de nuestro algoritmo es polinómico en n, Pmax y 1/, donde Pmax es el valor absoluto máximo de una entrada de una matriz de pagos, es decir, es un algoritmo seudopolinómico, aunque es completamente polinómico con respecto a . Mostramos (Sección 4.1) que bajo ciertas restricciones en las matrices de pagos, el algoritmo puede ser transformado en un algoritmo de tiempo polinómico (verdaderamente) que produce un equilibrio de Nash cuya ganancia total está dentro de un factor de 1 − del óptimo. En la Sección 5, consideramos el problema de encontrar un equilibrio de Nash en el que la ganancia esperada de cada jugador Vi supere un umbral prescrito Ti. Usando la idea de la Sección 4, presentamos (Teorema 5) un esquema de aproximación en tiempo polinómico completo para este problema. El tiempo de ejecución del algoritmo está acotado por un polinomio en n, Pmax y . Si la instancia tiene un equilibrio de Nash que cumple con los umbrales prescritos, entonces el algoritmo construye un equilibrio de Nash en el que la recompensa esperada de cada jugador Vi es al menos Ti − . En la Sección 6, presentamos otros criterios naturales para seleccionar un buen equilibrio de Nash y mostramos que los algoritmos descritos en las dos secciones anteriores pueden ser utilizados como bloques de construcción para encontrar equilibrios de Nash que cumplan con estos criterios. En particular, en la Sección 6.1 mostramos cómo encontrar un equilibrio de Nash que aproxima el máximo bienestar social, garantizando que la ganancia de cada individuo esté cerca de un umbral prescrito. En la Sección 6.2 mostramos cómo encontrar un equilibrio de Nash que maximiza (casi) al máximo el pago individual mínimo. Finalmente, en la Sección 6.3 mostramos cómo encontrar un equilibrio de Nash en el que las ganancias individuales de los jugadores están cerca unas de otras. 1.2 Trabajo Relacionado Nuestro esquema de aproximación (Teorema 3 y Teorema 4) muestra un contraste entre los juegos que estudiamos y los juegos de n acciones de dos jugadores, para los cuales los problemas correspondientes suelen ser intratables. Para juegos de n acciones de dos jugadores, el problema de encontrar equilibrios de Nash con propiedades especiales suele ser NP-duro. En particular, este es el caso de los equilibrios de Nash que maximizan el bienestar social [11, 6]. Además, es probable que sea intratable incluso aproximarse a tales equilibrios. En particular, Chen, Deng y Teng [4] muestran que existe algún , polinomio inverso en n, para el cual calcular un equilibrio de Nash en juegos de 2 jugadores con n acciones por jugador es PPAD-completo. Lipton y Markakis [15] estudian las propiedades algebraicas de los equilibrios de Nash, y señalan que los algoritmos estándar de eliminación de cuantificadores pueden ser utilizados para resolverlos. Ten en cuenta que estos algoritmos no son de tiempo polinómico en general. Los juegos que estudiamos en este artículo tienen equilibrios de Nash computables en tiempo polinómico en los que todas las estrategias mixtas son números racionales, pero un equilibrio de Nash óptimo puede incluir necesariamente estrategias mixtas con un alto grado algebraico. Un equilibrio correlacionado (CE) (introducido por Aumann [2]) es una distribución sobre vectores de acciones de jugadores con la propiedad de que si a cualquier jugador se le dice su propia acción (el valor de su propio componente) de un vector generado por esa distribución, entonces no puede aumentar su ganancia esperada cambiando su acción. Cualquier equilibrio de Nash es una EC, pero la afirmación contraria no se cumple en general. A diferencia de los equilibrios de Nash, los equilibrios correlacionados se pueden encontrar para juegos gráficos de bajo grado (así como para otras clases de juegos multijugador representados de manera concisa) en tiempo polinómico [17]. Pero, para juegos gráficos es NP-duro encontrar un equilibrio correlacionado que maximice la recompensa total [18]. Sin embargo, los resultados de NP-dificultad se aplican a juegos más generales que el que consideramos aquí, en particular los grafos no son árboles. Del [2] también se sabe que existen juegos de 2 jugadores y 2 acciones para los cuales el pago total esperado 163 del mejor equilibrio correlacionado es mayor que el mejor equilibrio de Nash, y discutimos este tema más a fondo en la Sección 7.2. CONSIDERACIONES PRELIMINARES Y NOTACIÓN Consideramos juegos gráficos en los que el grafo subyacente G es un árbol de n vértices, en el que cada vértice tiene a lo sumo Δ hijos. Cada vértice tiene dos acciones, que están representadas por 0 y 1. Una estrategia mixta de un jugador V se representa como un único número v ∈ [0, 1], que denota la probabilidad de que V seleccione la acción 1. Para los propósitos del algoritmo, el árbol está enraizado de manera arbitraria. Para mayor comodidad, asumimos sin pérdida de generalidad que la raíz tiene un solo hijo y que su recompensa es independiente de la acción elegida por el hijo. Esto se puede lograr primero eligiendo una raíz arbitraria del árbol, y luego agregando un padre ficticio de esta raíz, asignándole una función de recompensa constante, por ejemplo, 0. Dado un borde (V, W) del árbol G, y una estrategia mixta w para W, sea G(V,W), W=w la instancia obtenida de G mediante (1) eliminar todos los nodos Z que están separados de V por W (es decir, todos los nodos Z tales que el camino de Z a V pasa por W), y (2) restringir la instancia de modo que se requiera que W juegue la estrategia mixta w. Definición 1. Supongamos que (V, W) es una arista del árbol, que v es una estrategia mixta para V y que w es una estrategia mixta para W. Decimos que v es una mejor respuesta potencial a w (denotado por v ∈ pbrV (w)) si hay un equilibrio en la instancia G(V,W), W = w en el que V tiene una estrategia mixta v. Definimos la política de mejor respuesta para V, dada W, como B(W, V) = {(w, v) | v ∈ pbrV (w), w ∈ [0, 1]}. El paso ascendente del algoritmo genérico de [13] considera cada nodo V (que no sea la raíz) y calcula la política de mejor respuesta para V dada su padre. Con las suposiciones anteriores sobre la raíz, el paso aguas abajo es sencillo. La raíz selecciona una estrategia mixta w para la raíz W y una estrategia mixta v ∈ B(W, V) para cada hijo V de W. Indica a cada niño V que juegue v. El resto del pase descendente es recursivo. Cuando un nodo V recibe instrucciones de su padre para adoptar la estrategia mixta v, realiza lo siguiente para cada hijo U: encuentra un par (v, u) ∈ B(V, U) (con el mismo valor de v que le fue dado por su padre) e instruye a U a jugar u. La mejor política de respuesta para un vértice U dado su padre V puede representarse como una unión de rectángulos, donde un rectángulo está definido por un par de intervalos cerrados (IV, IU) y consiste en todos los puntos en IV × IU; puede ser el caso de que uno o ambos de los intervalos IV e IU consistan en un solo punto. Para realizar cálculos en B(V, U) y para limitar el número de rectángulos, [9] utilizó el concepto de un punto de evento, el cual se define de la siguiente manera. Para cualquier conjunto A ⊆ [0, 1]2 que se represente como una unión de un número finito de rectángulos, decimos que un punto u ∈ [0, 1] en el eje U es un punto de evento U de A si u = 0 o u = 1 o la representación de A contiene un rectángulo de la forma IV × IU y u es un extremo de IU; los puntos de evento V se definen de manera similar. Para muchos juegos considerados en este documento, el grafo subyacente es un camino de n vértices, es decir, un grafo G = (V, E) con V = {V1, . . . , Vn} y E = {(V1, V2), . . . , (Vn−1, Vn)}. En [9], se demostró que para tales juegos, la política de mejor respuesta tiene solo un número polinomial de rectángulos. La prueba de que el número de rectángulos en B(Vj+1, Vj) es polinomial procede primero mostrando que el número de puntos de evento en B(Vj+1, Vj) no puede exceder el número de puntos de evento en B(Vj, Vj-1) en más de 2, y utilizando este hecho para acotar el número de rectángulos en B(Vj+1, Vj). Sean P0 (V) y P1 (V) las ganancias esperadas para V cuando juega 0 y 1, respectivamente. Tanto P0 (V) como P1 (V) son funciones multilineales de las estrategias de los vecinos de V. En lo que sigue, usaremos frecuentemente la siguiente observación simple. AFIRMACIÓN 1. Para un vértice V con un único hijo U y padre W, dados cualquier A, B, C, D ∈ Q, se pueden seleccionar las recompensas para V de manera que P0(V) = Auw + Bu + Cw + D, P1(V) = Auw + Bu + Cw + D. Además, si todos los valores de A, B, C, D son enteros, los pagos para V también son enteros. PRUEBA. Daremos la prueba para P0 (V); la prueba para P1 (V) es similar. Para i, j = 0, 1, sea Pij la ganancia para V cuando U juega i, V juega 0 y W juega j. Tenemos P0 (V) = P00(1 − u)(1 − w) + P10u(1 − w) + P01(1 − u)w + P11uw. Tenemos que seleccionar los valores de Pij de manera que P00 − P10 − P01 + P11 = A, −P00 + P10 = B, −P00 + P01 = C, P00 = D. Es fácil ver que la solución única está dada por P00 = D, P01 = C + D, P10 = B + D, P11 = A + B + C + D. La entrada a todos los algoritmos considerados en este documento incluye las matrices de pago para cada jugador. Suponemos que todos los elementos de estas matrices son enteros. Sea Pmax el mayor valor absoluto de cualquier elemento de cualquier matriz de pagos. Entonces, la entrada consiste en un máximo de n2Δ+1 números, cada uno de los cuales puede ser representado usando log Pmax bits. EQUILIBRIOS DE NASH QUE MAXIMIZAN EL BIENESTAR SOCIAL: SOLUCIONES EN R \\ Q Desde el punto de vista del bienestar social, el mejor equilibrio de Nash es aquel que maximiza la suma de las ganancias esperadas de los jugadores. Lamentablemente, resulta que calcular exactamente dicho perfil estratégico no es posible: en esta sección, mostramos que incluso si todas las ganancias de los jugadores son números enteros, el perfil estratégico que maximiza la ganancia total puede tener coordenadas irracionales; además, puede involucrar números algebraicos de un grado arbitrario. 3.1 Calentamiento: irracionales cuadráticos Comenzamos proporcionando un ejemplo de un juego gráfico en un camino de longitud 3 con ganancias enteras tal que en el equilibrio de Nash que maximiza la ganancia total, uno de los jugadores tiene una estrategia en R \\ Q. En la siguiente subsección, extenderemos este ejemplo a números algebraicos de grado arbitrario n; para hacerlo, debemos considerar caminos de longitud O(n). TEOREMA 1. Existe un juego gráfico G de pago entero en un camino de 3 vértices UVW tal que, en cualquier equilibrio de Nash de G que maximice el bienestar social, la estrategia u del jugador U y el pago total p cumplen u, p ∈ R \\ Q. PRUEBA. Las recompensas para los jugadores en G están especificadas de la siguiente manera. La ganancia para U es idénticamente 0, es decir, P0 (U) = P1 (U) = 0. Usando la Reclamación 1, seleccionamos las ganancias para V de modo que P0 (V) = -uw + 3w y P1 (V) = P0 (V) + w(u + 2) - (u + 1), donde u y w son las estrategias (mixtas) de U y W, respectivamente. Se deduce que V es indiferente entre jugar 0 y 1 si y solo si w = f(u) = u+1 u+2. Observa que para cualquier u ∈ [0, 1] tenemos f(u) ∈ [0, 1]. La recompensa para W es 0 si selecciona la misma acción que V y 1 en caso contrario. AFIRMACIÓN 2. Todos los equilibrios de Nash del juego G son de la forma (u, 1/2, f(u)). Es decir, en cualquier equilibrio de Nash, V juega v = 1/2 y W juega w = f(u). Además, para cualquier valor de u, el vector de estrategias (u, 1/2, f(u)) constituye un equilibrio de Nash. PRUEBA. Es fácil comprobar que para cualquier u ∈ [0, 1], el vector (u, 1/2, f(u)) es un equilibrio de Nash. De hecho, U está dispuesto a jugar 164 cualquier estrategia mixta u, sin importar lo que hagan V y W. Además, V es indiferente entre 0 y 1 siempre y cuando w = f(u), por lo que puede jugar 1/2. Finalmente, si V juega con probabilidad igual a 0 y 1, W es indiferente entre 0 y 1, por lo que puede jugar f(u). Por el contrario, supongamos que v > 1/2. Entonces W prefiere estrictamente jugar 0, es decir, w = 0. Entonces para V tenemos P1 (V) = P0 (V) - (u + 1), es decir, P1 (V) < P0 (V), lo que implica v = 0, una contradicción. De manera similar, si v < 1/2, el jugador W prefiere jugar 1, por lo que tenemos w = 1. Por lo tanto, P1 (V) = P0 (V) + (u + 2) - (u + 1), es decir, P1 (V) > P0 (V), lo que implica v = 1, una contradicción. Finalmente, si v = 1/2, pero w = f(u), el jugador V no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Esto completa la prueba de la Afirmación 2. Según la Afirmación 2, la ganancia total en cualquier equilibrio de Nash de este juego es una función de u. Más específicamente, la ganancia para U es 0, la ganancia para V es −uf(u) + 3f(u), y la ganancia para W es 1/2. Por lo tanto, el equilibrio de Nash con la máxima ganancia total corresponde al valor de u que maximiza g(u) = −u (u + 1) u + 2 + 3 u + 1 u + 2 = − (u − 3)(u + 1) u + 2. Para encontrar los extremos de g(u), calculamos h(u) = − d du g(u). Tenemos h(u) = (2u − 2)(u + 2) − (u − 3)(u + 1) (u + 2)2 = u2 + 4u − 1 (u + 2)2. Por lo tanto, h(u) = 0 si y solo si u ∈ {−2 + √ 5, −2 − √ 5}. Ten en cuenta que −2 + √ 5 ∈ [0, 1]. La función g(u) cambia de signo en −2, −1 y 3. Tenemos g(u) < 0 para g > 3, g(u) > 0 para u < −2, por lo que el extremo de g(u) que se encuentra entre 1 y 3, es decir, u = −2 + √ 5, es un máximo local. Concluimos que el equilibrio de Nash que maximiza el bienestar social para este juego está dado por el vector de estrategias (−2+√ 5, 1/2, (5 − √ 5)/5). El pago total respectivo es 0 − ( √ 5 − 5)( √ 5 − 1) √ 5 + 1 2 = 13/2 − 2 √ 5. Esto concluye la prueba del Teorema 1. 3.2 Estrategias de grado arbitrario. Hemos demostrado que en el equilibrio de Nash que maximiza el bienestar social, las estrategias de algunos jugadores pueden ser irracionales cuadráticas, al igual que la recompensa total. En esta subsección, extenderemos este resultado para mostrar que podemos construir un juego gráfico de pago entero en un camino cuyo equilibrio de Nash maximizador del bienestar social involucra números algebraicos arbitrarios en [0, 1]. TEOREMA 2. Para cualquier número algebraico α de grado n ∈ [0, 1], existe un juego gráfico de pago entero en un camino de longitud O(n) tal que, en todas las equilibrios de Nash que maximizan el bienestar social de este juego, uno de los jugadores juega α. PRUEBA. Nuestra prueba consta de dos pasos. Primero, construimos una expresión racional R(x) y un segmento [x , x ] tal que x , x ∈ Q y α sea el único máximo de R(x) en [x , x ]. Segundo, construimos un juego gráfico cuyos equilibrios de Nash pueden ser parametrizados por u ∈ [x, x], de modo que en el equilibrio que corresponde a u, la recompensa total es R(u) y, además, la estrategia de algunos jugadores es u. Se deduce que para alcanzar el equilibrio de Nash que maximiza la ganancia, este jugador tiene que jugar α. Los detalles siguen. LEMMA 1. \n\nLEMMA 1. Dado un número algebraico α ∈ [0, 1], deg(α) = n, existen K2, . . . , K2n+2 ∈ Q y x , x ∈ (0, 1) ∩ Q tal que α es el único máximo de R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 en [x , x ]. PRUEBA. Sea P(x) el polinomio minimal de α, es decir, un polinomio de grado n con coeficientes racionales cuyo coeficiente principal es 1 tal que P(α) = 0. Sea A = {α1, . . . , αn} el conjunto de todas las raíces de P(x). Considera el polinomio Q1(x) = −P2(x). Tiene las mismas raíces que P(x), y además, para cualquier x ∈ A tenemos Q1(x) < 0. Por lo tanto, A es el conjunto de todos los máximos de Q1(x). Ahora, establece R(x) = Q1(x) (x+2)...(x+2n+1)(x+2n+2). Observa que R(x) ≤ 0 para todo x ∈ [0, 1] y R(x) = 0 si y solo si Q1(x) = 0. Por lo tanto, el conjunto A también es el conjunto de todos los máximos de R(x) en [0, 1]. Sea d = min{|αi − α| | αi ∈ A, αi = α}, y establezca α = max{α − d/2, 0}, α = min{α + d/2, 1}. Claramente, α es el único cero (y por lo tanto, el único máximo) de R(x) en [α , α ]. Sean x y x algunos números racionales en (α, α) y (α, α), respectivamente; observe que al excluir los extremos de los intervalos aseguramos que x, x = 0, 1. Como [x, x] ⊂ [α, α], tenemos que α es el único máximo de R(x) en [x, x]. Dado que R(x) es una expresión racional adecuada y todas las raíces de su denominador son simples, por el teorema de descomposición en fracciones parciales, R(x) puede representarse como R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2, donde K2, . . . , K2n+2 son números racionales. Considera un juego gráfico en el camino U−1V−1U0V0U1V1 . . . Uk−1Vk−1Uk, donde k = 2n + 2. Intuitivamente, queremos que cada triple (Ui−1, Vi−1, Ui) se comporte de manera similar a los jugadores U, V y W del juego descrito en la subsección anterior. Más precisamente, definimos las ganancias de los jugadores de la siguiente manera. • La ganancia para U−1 es 0 sin importar lo que hagan los demás. • La ganancia esperada para V−1 es 0 si juega 0 y u0 − (x − x )u−1 −x si juega 1, donde u0 y u−1 son las estrategias de U0 y U−1, respectivamente. • La ganancia esperada para V0 es 0 si juega 0 y u1(u0 + 1)− u0 si juega 1, donde u0 y u1 son las estrategias de U0 y U1, respectivamente. • Para cada i = 1, . . . , k − 1, la ganancia esperada para Vi cuando juega 0 es P0 (Vi) = Aiuiui+1 − Aiui+1, y la ganancia esperada para Vi cuando juega 1 es P1 (Vi) = P0 (Vi) + ui+1(2 − ui) − 1, donde Ai = −Ki+1 y ui+1 y ui son las estrategias de Ui+1 y Ui, respectivamente. • Para cada i = 0, . . . , k, la ganancia para Ui no depende de Vi y es 1 si Ui y Vi−1 seleccionan acciones diferentes y 0 en caso contrario. Ahora caracterizaremos los equilibrios de Nash de este juego utilizando una secuencia de afirmaciones. AFIRMACIÓN 3. En todos los equilibrios de Nash de este juego, V−1 juega 1/2, y las estrategias de u−1 y u0 satisfacen u0 = (x − x )u−1 + x. Por consiguiente, en todos los equilibrios de Nash tenemos u0 ∈ [x , x ]. 165 PRUEBA. La prueba es similar a la del Reclamo 2. Que f(u−1) = (x − x )u−1 + x. Claramente, el jugador V−1 es indiferente entre jugar 0 y 1 si y solo si u0 = f(u−1). Supongamos que v−1 < 1/2. Entonces U0 prefiere estrictamente jugar 1, es decir, u0 = 1, por lo que tenemos P1 (V−1) = P0 (V−1) + 1 − (x − x )u−1 − x . Dado que 1 − x ≤ 1 − (x − x )u−1 − x ≤ 1 − x para u−1 ∈ [0, 1] y x < 1, tenemos que P1 (V−1) > P0 (V−1), por lo que V−1 prefiere jugar 1, lo cual es una contradicción. De manera similar, si v−1 > 1/2, el jugador U0 prefiere estrictamente jugar 0, es decir, u0 = 0, por lo que tenemos P1 (V−1) = P0 (V−1) − (x − x )u−1 − x. Dado que x < x, x > 0, tenemos P1 (V−1) < P0 (V−1), por lo que V−1 prefiere jugar 0, lo cual es una contradicción. Finalmente, si V−1 juega 1/2, pero u0 = f(u−1), el jugador V−1 no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Además, ten en cuenta que f(0) = x, f(1) = x y, además, f(u−1) ∈ [x, x] si y solo si u−1 ∈ [0, 1]. Por lo tanto, en todos los equilibrios de Nash de este juego tenemos u0 ∈ [x , x ]. AFIRMACIÓN 4. En todos los equilibrios de Nash de este juego para cada i = 0, . . . , k − 1, tenemos vi = 1/2, y las estrategias de los jugadores Ui y Ui+1 satisfacen ui+1 = fi(ui), donde f0(u) = u/(u + 1) y fi(u) = 1/(2 − u) para i > 0. PRUEBA. La prueba de esta afirmación es también similar a la de la Afirmación 2. Utilizamos inducción en i para demostrar que la afirmación de la proposición es verdadera y, además, ui = 1 para i > 0. Para el caso base i = 0, observe que u0 = 0 según la afirmación anterior (recuerde que x, x se seleccionan de manera que x, x = 0, 1) y considere el trío (U0, V0, U1). Que v0 sea la estrategia de V0. Primero, supongamos que v0 > 1/2. Entonces U1 prefiere estrictamente jugar 0, es decir, u1 = 0. Entonces, para V0 tenemos P1 (V0) = P0 (V0) − u0. Dado que u0 = 0, tenemos que P1 (V0) < P0 (V0), lo cual implica v1 = 0, una contradicción. De manera similar, si v0 < 1/2, el jugador U1 prefiere jugar 1, por lo que tenemos u1 = 1. Por lo tanto, P1 (V0) = P0 (V0) + 1. Se sigue que P1 (V0) > P0 (V0), lo cual implica v0 = 1, una contradicción. Finalmente, si v0 = 1/2, pero u1 = u0/(u0 + 1), el jugador V0 no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Además, dado que u1 = u0/(u0 + 1) y u0 ∈ [0, 1], tenemos que u1 = 1. El argumento para el paso inductivo es similar. Es decir, supongamos que la afirmación se demuestra para todos los i < i y consideremos el trío (Ui, Vi, Ui+1). Que vi sea la estrategia de Vi. Primero, supongamos que vi > 1/2. Entonces Ui+1 prefiere estrictamente jugar 0, es decir, ui+1 = 0. Entonces, para Vi tenemos P1 (Vi) = P0 (Vi)−1, es decir, P1 (Vi) < P0 (Vi), lo cual implica vi = 0, una contradicción. De manera similar, si vi < 1/2, el jugador Ui+1 prefiere jugar 1, por lo que tenemos ui+1 = 1. Por lo tanto, P1 (Vi) = P0 (Vi) + 1 − ui. Por hipótesis inductiva, tenemos ui < 1. Por consiguiente, P1 (Vi) > P0 (Vi), lo que implica vi = 1, una contradicción. Finalmente, si vi = 1/2, pero ui+1 = 1/(2 − ui), el jugador Vi no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Además, como ui+1 = 1/(2 − ui) y ui < 1, tenemos ui+1 < 1. AFIRMACIÓN 5. Cualquier perfil estratégico de la forma (u−1, 1/2, u0, 1/2, u1, 1/2, . . . , uk−1, 1/2, uk), donde u−1 ∈ [0, 1], u0 = (x − x )u−1 + x , u1 = u0/(u0 + 1), y ui+1 = 1/(2 − ui) para i ≥ 1, constituye un equilibrio de Nash. PRUEBA. Primero, las ganancias del jugador U−1 no dependen de las acciones de otros jugadores, por lo que es libre de jugar cualquier estrategia en [0, 1]. Si u0 = (x −x )u−1 +x , el jugador V−1 es indiferente entre 0 y 1, por lo que está contento de jugar 1/2; un argumento similar se aplica a los jugadores V0, . . . , Vk−1. Finalmente, para cada i = 0, . . . , k, las ganancias del jugador Ui solo dependen de la estrategia del jugador Vi−1. En particular, siempre y cuando vi−1 = 1/2, el jugador Ui es indiferente entre jugar 0 y 1, por lo que puede jugar cualquier estrategia mixta ui ∈ [0, 1]. Para completar la prueba, observe que (x − x )u−1 + x ∈ [0, 1] para todo u−1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] para todo u0 ∈ [0, 1], y 1/(2 − ui) ∈ [0, 1] para todo ui ∈ [0, 1], por lo que tenemos ui ∈ [0, 1] para todo i = 0, . . . , k. Ahora, calculemos la ganancia total bajo un perfil estratégico de la forma dada en la Afirmación 5. El pago para U−1 es 0, y el pago esperado para cada uno de los Ui, i = 0, . . . , k, es 1/2. Los beneficios esperados para V−1 y V0 son 0. Finalmente, para cualquier i = 1, . . . , k − 1, la ganancia esperada para Vi es Ti = Aiuiui+1 − Aiui+1. Se deduce que para encontrar un equilibrio de Nash con el mayor pago total, debemos maximizar Pk−1 i=1 Ti sujeto a las condiciones u−1 ∈ [0, 1], u0 = (x −x )u−1+x , u1 = u0/(u0+1), y ui+1 = 1/(2−ui) para i = 1, . . . , k − 1. Nos gustaría expresar Pk−1 i=1 Ti como una función de u0. Para simplificar la notación, establezca u = u0. LEMMA 2. \n\nLEMMA 2. Para i = 1, . . . , k, tenemos ui = u+i−1 u+i. PRUEBA. La demostración es por inducción en i. Para i = 1, tenemos u1 = u/(u + 1). Ahora, para i ≥ 2 supongamos que ui−1 = (u + i − 2)/(u + i − 1). Tenemos ui = 1/(2 − ui−1) = (u + i − 1)/(2u + 2i − 2 − u − i + 2) = (u + i − 1)/(u + i). Se sigue que para i = 1, . . . , k − 1 tenemos Ti = Ai u + i − 1 u + i u + i u + i + 1 − Ai u + i u + i + 1 = −Ai 1 u + i + 1 = Ki+1 u + i + 1. Observa que a medida que u−1 varía de 0 a 1, u varía de x a x. Por lo tanto, para maximizar el pago total, debemos elegir u ∈ [x , x ] de manera que maximicemos K2 u + 2 + · · · + Kk u + k = R(u). Por construcción, el único máximo de R(u) en [x, x] es α. Se deduce que en el equilibrio de Nash que maximiza las ganancias de nuestro juego, U0 juega α. Finalmente, cabe destacar que las recompensas en nuestro juego son racionales en lugar de enteras. Sin embargo, es fácil ver que podemos multiplicar todas las ganancias de un jugador por su máximo común denominador sin afectar su estrategia. En el juego resultante, todas las ganancias son enteras. Esto concluye la demostración del Teorema 2.4. APROXIMANDO EL EQUILIBRIO DE NASH ÓPTIMO SOCIAL Hemos visto que el equilibrio de Nash que maximiza el bienestar social puede implicar estrategias que no están en Q. Por lo tanto, en esta sección nos enfocamos en encontrar un equilibrio de Nash que sea casi óptimo desde la perspectiva del bienestar social. Proponemos un algoritmo que, para cualquier > 0, encuentra un equilibrio de Nash cuya recompensa total está dentro de de la óptima. El tiempo de ejecución de este algoritmo es polinómico en 1/ , n y |Pmax| (recuerde que Pmax es el valor absoluto máximo de una entrada de una matriz de pagos). Si bien el resultado negativo de la sección anterior es para juegos gráficos en caminos, nuestro algoritmo se aplica a una gama más amplia de escenarios. Específicamente, se ejecuta en tiempo polinómico en árboles de grado acotado siempre que la política de mejor respuesta de cada vértice, dada su padre, pueda representarse como una unión de un número polinómico de rectángulos. Ten en cuenta que los grafos de camino siempre cumplen esta condición: en [9] mostramos cómo calcular dicha representación, dado un grafo con grado máximo 2. Por consiguiente, para grafos de camino el tiempo de ejecución de nuestro algoritmo está garantizado de ser polinomial. (Nótese que [9] exhibe una familia de juegos gráficos en árboles de grado acotado para los cuales las políticas de mejor respuesta de algunos de los vértices, dados sus padres, tienen tamaño exponencial, cuando se representan como uniones de rectángulos). Debido a restricciones de espacio, en esta versión del artículo presentamos el algoritmo para el caso en el que el grafo subyacente del juego gráfico es un camino. Luego presentamos nuestro resultado para el caso general; la demostración se puede encontrar en la versión completa de este artículo [10]. Supongamos que s es un perfil estratégico para un juego gráfico G. Es decir, s asigna una estrategia mixta a cada vértice de G. Sea EPV (s) el pago esperado del jugador V bajo s y sea EP(s) = Σ V EPV (s). Sea M(G) = max{EP(s) | s es un equilibrio de Nash para G}. TEOREMA 3. Supongamos que G es un juego gráfico en un camino de n vértices. Entonces, para cualquier > 0 existe un algoritmo que construye un equilibrio de Nash s para G que satisface EP(s) ≥ M(G)− . El tiempo de ejecución del algoritmo es O(n4 P3 max/ 3) PRUEBA. Sea {V1, . . . , Vn} el conjunto de todos los jugadores. Comenzamos construyendo las mejores políticas de respuesta para todos los Vi, i = 1, . . . , n − 1. Como se muestra en [9], esto se puede hacer en tiempo O(n3). Sea N > 5n un parámetro que se seleccionará más adelante, establezca δ = 1/N y defina X = {jδ | j = 0, . . . , N}. Decimos que vj es un punto de evento para un jugador Vi si es un punto de evento de Vi para B(Vi, Vi−1) o B(Vi+1, Vi). Para cada jugador Vi, considera un conjunto finito de estrategias Xi dado por Xi = X ∪ {vj | vj es un punto de evento para Vi}. Se ha demostrado en [9] que para cualquier i = 2, . . . , n, la política de mejor respuesta B(Vi, Vi−1) tiene como máximo 2n + 4 puntos de eventos de Vi. Dado que requerimos N > 5n, tenemos |Xi| ≤ 2N; asumimos sin pérdida de generalidad que |Xi| = 2N. Ordena los elementos de Xi en orden creciente como x1 i = 0 < x2 i < · · · < x2N i. Nos referiremos a las estrategias en Xi como estrategias discretas del jugador Vi; un perfil de estrategia en el que cada jugador tiene una estrategia discreta se referirá como un perfil de estrategia discreta. Ahora demostraremos que incluso si restringimos a cada jugador Vi a estrategias de Xi, los jugadores aún pueden lograr un equilibrio de Nash, y además, el mejor equilibrio de Nash (con respecto al bienestar social) tiene un pago total de al menos M(G) - siempre y cuando N sea lo suficientemente grande. Sea s un perfil de estrategia que maximiza el bienestar social. Es decir, sea s = (s1, . . . , sn) donde si es la estrategia mixta del jugador Vi y EP(s) = M(G). Para i = 1, . . . , n, sea ti = max{xj i | xj i ≤ si}. Primero, demostraremos que el perfil estratégico t = (t1, . . . , tn) es un equilibrio de Nash para G. Fijemos cualquier i, 1 < i ≤ n, y sea R = [v1, v2]×[u1, u2] el rectángulo en B(Vi, Vi−1) que contiene (si, si−1). Dado que v1 es un punto de evento Vi de B(Vi, Vi−1), tenemos v1 ≤ ti, por lo que el punto (ti, si−1) está dentro de R. De manera similar, el punto u1 es un punto de evento Vi−1 de B(Vi, Vi−1), por lo que tenemos u1 ≤ ti−1, y por lo tanto el punto (ti, ti−1) está dentro de R. Esto significa que para cualquier i, 1 < i ≤ n, tenemos ti−1 ∈ pbrVi−1 (ti), lo que implica que t = (t1, . . . , tn) es un equilibrio de Nash para G. Ahora, estimemos la pérdida esperada en el bienestar social causada por jugar t en lugar de s. LEMA 3. Para cualquier par de perfiles de estrategia t, s tales que |ti − si| ≤ δ, tenemos |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ para cualquier i = 1, . . . , n. PRUEBA. Sea Pi klm el pago del jugador Vi, cuando juega k, Vi−1 juega l y Vi+1 juega m. Fijemos i = 1, . . . , n y para k, l, m ∈ {0, 1}, definamos tklm = tk i−1(1 − ti−1)1−k tl i(1 − ti)1−l tm i+1(1 − ti+1)1−m sklm = sk i−1(1 − si−1)1−k sl i(1 − si)1−l sm i+1(1 − si+1)1−m. Mostraremos ahora que para cualquier k, l, m ∈ {0, 1} tenemos |tklm − sklm | ≤ 3δ; claramente, esto implica el lema. De hecho, fijar k, l, m ∈ {0, 1}. Establecer x = tk i−1(1 − ti−1)1−k , x = sk i−1(1 − si−1)1−k , y = tl i(1 − ti)1−l , y = sl i(1 − si)1−l , z = tm i+1(1 − ti+1)1−m , z = sm i+1(1 − si+1)1−m. Observa que si k = 0 entonces x − x = (1 − ti−1) − (1 − si−1), y si k = 1 entonces x − x = ti−1 − si−1, por lo tanto |x − x | ≤ δ. Un argumento similar muestra |y − y | ≤ δ, |z − z | ≤ δ. Además, tenemos x, x, y, y, z, z ∈ [0, 1]. Por lo tanto, |tklm − sklm | = |xyz − x y z | = |xyz − x yz + x yz − x y z + x y z − x y z | ≤ |x − x |yz + |y − y |x z + |z − z |x y ≤ 3δ. El Lema 3 implica que Pn i=1 |EPVi (s) − EPVi (t)| ≤ 24nPmaxδ, por lo que al elegir δ < /(24nPmax), o, equivalentemente, estableciendo N > 24nPmax/ , podemos asegurar que el pago esperado total para el perfil estratégico t esté dentro de de lo óptimo. Ahora demostraremos que podemos encontrar el mejor equilibrio de Nash discreto (con respecto al bienestar social) utilizando programación dinámica. Dado que t es un perfil de estrategia discreto, esto significa que el perfil de estrategia encontrado por nuestro algoritmo será al menos tan bueno como t. Defina ml,k i como la máxima ganancia total que V1, . . . , Vi−1 pueden lograr si cada Vj, j ≤ i, elige una estrategia de Xj, para cada j < i la estrategia de Vj es una mejor respuesta potencial a la estrategia de Vj+1, y, además, Vi−1 juega xl i−1, Vi juega xk i. Si no hay forma de elegir las estrategias para V1, . . . , Vi−1 que cumplan con estas condiciones, establecemos ml,k i = −∞. Los valores ml,k i , i = 1, . . . , n; k, l = 1, . . . , N, pueden ser calculados de forma inductiva, de la siguiente manera. Tenemos ml,k 1 = 0 para k, l = 1, . . . , N. Ahora, supongamos que ya hemos calculado ml,k j para todos los j < i; k, l = 1, . . . , N. Para calcular mk,l i , primero verificamos si (xk i , xl i−1) ∈ B(Vi, Vi−1). Si este no es el caso, tenemos ml,k i = −∞. De lo contrario, considera el conjunto Y = Xi−2 ∩ pbrVi−2 (xl i−1), es decir, el conjunto de todas las estrategias discretas de Vi−2 que son potenciales mejores respuestas a xl i−1. La prueba del Teorema 1 en [9] implica que el conjunto pbrVi−2 (xl i−1) no está vacío: el jugador Vi−2 tiene una mejor respuesta potencial a cualquier estrategia de Vi−1, en particular, xl i−1. Por la construcción del conjunto Xi−2, esto implica que Y no está vacío. Para cada xj i−2 ∈ Y, dejemos que pjlk sea la ganancia que Vi−1 recibe cuando Vi−2 juega xj i−2, Vi−1 juega xl i−1, y Vi juega xk i. Claramente, pjlk se puede calcular en tiempo constante. Entonces tenemos ml,k i = max{mj,l i−1 + pjlk | xj i−2 ∈ Y }. Finalmente, supongamos que hemos calculado ml,k n para l, k = 1, . . . , N. Todavía necesitamos tener en cuenta el pago del jugador Vn. Por lo tanto, consideramos todos los pares (xk n, xl n−1) que satisfacen xl n−1 ∈ pbrVn−1 (xk n), y elegimos aquel que maximiza la suma de mk,l n y la ganancia de Vn cuando juega xk n y Vn−1 juega xl n−1. Esto resulta en el pago total máximo que los jugadores pueden lograr en un equilibrio de Nash utilizando estrategias discretas; el perfil de estrategia real que produce este pago puede ser reconstruido utilizando técnicas estándar de programación dinámica. Es fácil ver que cada ml,k se puede calcular en tiempo O(N), es decir, todos ellos se pueden calcular en tiempo O(nN3). Recuerde que debemos seleccionar N ≥ (24nPmax)/ para asegurarnos de que el perfil estratégico que producimos tenga un pago total que esté dentro de lo óptimo. Concluimos que podemos calcular una -aproximación al mejor equilibrio de Nash en tiempo O(n4 P3 max/ 3 ). Esto completa la demostración del Teorema 3. Para enunciar nuestro resultado para el caso general (es decir, cuando el grafo subyacente es un árbol de grado acotado en lugar de un camino), necesitamos notación adicional. Si G tiene n jugadores, sea q(n) una cota superior en el número de puntos de evento en la representación de cualquier política de mejor respuesta. Es decir, asumimos que para cualquier vértice U con padre V, B(V, U) tiene como máximo q(n) puntos de evento. Estaremos interesados en la situación en la que q(n) sea un polinomio en n. TEOREMA 4. Sea G un juego gráfico de n jugadores en un árbol en el que cada nodo tiene a lo sumo Δ hijos. Supongamos que se nos da un conjunto de políticas de mejor respuesta para G en el que cada política de mejor respuesta B(V, U) está representada por un conjunto de rectángulos con un máximo de q(n) puntos de evento. Para cualquier > 0, existe un algoritmo que construye un equilibrio de Nash s para G que satisface EP(s) ≥ M(G) − . El tiempo de ejecución del algoritmo es polinómico en n, Pmax y −1 siempre que el árbol tenga grado acotado (es decir, Δ = O(1)) y q(n) sea un polinomio en n. En particular, si N = max((Δ + 1)q(n) + 1, n2Δ+2 (Δ + 2)Pmax −1 ) y Δ > 1 entonces el tiempo de ejecución es O(nΔ(2N)Δ. Para la demostración de este teorema, ver [10]. 4.1 Un algoritmo de tiempo polinómico para aproximación multiplicativa El tiempo de ejecución de nuestro algoritmo es seudopolinómico en lugar de polinómico, porque incluye un factor que es polinómico en Pmax, la entrada máxima (en valor absoluto) en cualquier matriz de pagos. Si estamos interesados en una aproximación multiplicativa en lugar de una aditiva, esto se puede mejorar a polinomial. Primero, hay que tener en cuenta que no podemos esperar una aproximación multiplicativa para todas las entradas. Es decir, no podemos esperar tener un algoritmo que calcule un equilibrio de Nash con una ganancia total de al menos (1 − )M(G). Si tuviéramos dicho algoritmo, entonces para juegos gráficos G con M(G) = 0, se requeriría que el algoritmo produjera la solución óptima. Para demostrar que esto es inviable, observe que podemos usar las técnicas de la Sección 3.2 para construir dos juegos gráficos de coeficientes enteros en caminos de longitud O(n) de tal manera que para algún X ∈ R, el pago total máximo en el primer juego sea X, el pago total máximo en el segundo juego sea −X, y para ambos juegos, los perfiles estratégicos que logran los pagos totales máximos involucran números algebraicos de grado n. Al combinar los dos juegos de modo que el primer vértice del segundo juego se conecte con el último vértice del primer juego, pero los pagos de todos los jugadores no cambien, obtenemos un juego gráfico en el que el mejor equilibrio de Nash tiene un pago total de 0, sin embargo, las estrategias que conducen a este pago tienen una alta complejidad algebraica. Sin embargo, podemos lograr una aproximación multiplicativa cuando todas las entradas de las matrices de pago son positivas y la relación entre cualquier par de entradas está acotada polinómicamente. Recuerde que asumimos que todos los pagos son enteros, y sea Pmin > 0 la entrada más pequeña de cualquier matriz de pagos. En este caso, para cualquier perfil estratégico, la ganancia para el jugador i es al menos Pmin, por lo que la ganancia total en el equilibrio de Nash que maximiza el bienestar social satisface M(G) ≥ nPmin. Además, el Lema 3 implica que al elegir δ < /(24Pmax/Pmin), podemos asegurar que el equilibrio de Nash t producido por nuestro algoritmo cumple nX i=1 EPVi (s) − nX i=1 EPVi (t) ≤ 24Pmaxδn ≤ nPmin ≤ M(G), es decir, para este valor de δ tenemos Pn i=1 EPVi (t) ≥ (1 − )M(G). Recuerde que el tiempo de ejecución de nuestro algoritmo es O(nN3), donde N debe ser seleccionado para satisfacer N > 5n, N = 1/δ. Se deduce que si Pmin > 0, Pmax/Pmin = poli(n), podemos elegir N de manera que nuestro algoritmo proporcione una garantía de aproximación multiplicativa y se ejecute en tiempo polinómico en n y 1/ . 5. EQUILIBRIOS DE NASH DE PAGO ACOTADO Otra forma natural de definir qué es un buen equilibrio de Nash es exigir que el pago esperado de cada jugador supere cierto umbral. Estos umbrales no tienen que ser iguales para todos los jugadores. En este caso, además de las matrices de pagos de los n jugadores, se nos dan n números T1, . . . , Tn, y nuestro objetivo es encontrar un equilibrio de Nash en el que el pago del jugador i sea al menos Ti, o informar que no existe tal equilibrio de Nash. Resulta que podemos diseñar un FPTAS para este problema utilizando las mismas técnicas que en la sección anterior. TEOREMA 5. Dado un juego gráfico G en un camino de n vértices y n números racionales T1, . . . , Tn, supongamos que existe un perfil estratégico s tal que s es un equilibrio de Nash para G y EPVi (s) ≥ Ti para i = 1, . . . , n. Entonces para cualquier > 0 podemos encontrar en tiempo O(max{nP3 max/ 3 , n4 / 3 }) un perfil estratégico s tal que s es un equilibrio de Nash para G y EPVi (s) ≥ Ti − para i = 1, . . . , n. PRUEBA. La prueba es similar a la del Teorema 3. Primero, construimos las políticas de mejor respuesta para todos los jugadores, elegimos N > 5n, y construimos los conjuntos Xi, i = 1, . . . , n, como se describe en la demostración del Teorema 3. Consideremos un perfil estratégico s tal que s sea un equilibrio de Nash para G y EPVi (s) ≥ Ti para i = 1, . . . , n. Construimos un perfil estratégico ti = max{xj i | xj i ≤ si} y usamos el mismo argumento que en la demostración del Teorema 3 para mostrar que t es un equilibrio de Nash para G. Según el Lema 3, tenemos |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ, por lo que eligiendo δ < /(24Pmax), o, equivalentemente, N > max{5n, 24Pmax/ }, podemos asegurar que EPVi (t) ≥ Ti − para i = 1, . . . , n. Ahora, utilizaremos la programación dinámica para encontrar un equilibrio de Nash discreto que cumpla con EPVi (t) ≥ Ti − para i = 1, . . . , n. Dado que t es un perfil estratégico discreto, nuestro algoritmo tendrá éxito siempre que haya un perfil estratégico s con EPVi (s) ≥ Ti− para i = 1, . . . , n. Sea zl,k i = 1 si hay un perfil estratégico discreto tal que para cualquier j < i la estrategia del jugador Vj es una mejor respuesta potencial a la estrategia de Vj+1, el pago esperado de Vj es al menos Tj − , y, además, Vi−1 juega xl i−1, Vi juega xk i. De lo contrario, deja que zl,k i = 0. Podemos calcular zl,k i, i = 1, . . . , n; k, l = 1, . . . , N de forma inductiva, de la siguiente manera. Tenemos zl,k 1 = 1 para k, l = 1, . . . , N. Ahora, supongamos que ya hemos calculado zl,k j para todos los j < i; k, l = 1, . . . , N. Para calcular zk,l i , primero verificamos si (xk i , xl i−1) ∈ B(Vi, Vi−1). Si este 168 no es el caso, claramente, zk,l i = 0. De lo contrario, considera el conjunto Y = Xi−2 ∩ pbrVi−2 (xl i−1), es decir, el conjunto de todas las estrategias discretas de Vi−2 que son potenciales mejores respuestas a xl i−1. Se ha demostrado en la prueba del Teorema 3 que Y = ∅. Para cada xj i−2 ∈ Y, dejemos que pjlk sea la ganancia que Vi−1 recibe cuando Vi−2 juega xj i−2, Vi−1 juega xl i−1, y Vi juega xk i. Claramente, pjlk se puede calcular en tiempo constante. Si existe un xj i−2 ∈ Y tal que zj,l i−1 = 1 y pjlk ≥ Ti−2 − , establece zl,k i = 1. De lo contrario, establezca zl,k i = 0. Habiendo calculado zl,k n , l, k = 1, . . . , N, verificamos si zl,k n = 1 para algún par (l, k). Si existe tal par de índices, instruimos a Vn a jugar xk n y utilizamos técnicas de programación dinámica (o, de manera equivalente, el paso descendente del algoritmo de [13]) para encontrar un equilibrio de Nash s que satisfaga EPVi (s ) ≥ Ti − para i = 1, . . . , n (recordemos que Vn es un jugador ficticio, es decir, asumimos Tn = 0, EPn(s ) = 0 para cualquier elección de s ). Si zl,k n = 0 para todo l, k = 1, . . . , N, no hay un equilibrio de Nash discreto s que satisfaga EPVi (s) ≥ Ti − para i = 1, . . . , n y, por lo tanto, no hay un equilibrio de Nash s (no necesariamente discreto) tal que EPVi (s) ≥ Ti para i = 1, . . . , n. El análisis del tiempo de ejecución es similar al de la Teorema 3; concluimos que el tiempo de ejecución de nuestro algoritmo es O(nN3) = O(max{nP3 max/3, n4/3}). OBSERVACIÓN 1. El Teorema 5 se puede extender a árboles de grado acotado de la misma manera que el Teorema 4. 5.1 Cálculo Exacto Otro enfoque para encontrar equilibrios de Nash con pagos acotados se basa en calcular de forma inductiva los subconjuntos de las políticas de mejor respuesta de todos los jugadores para excluir los puntos que no proporcionan pagos suficientes a algunos de los jugadores. Formalmente, decimos que una estrategia v del jugador V es una mejor respuesta potencial a una estrategia w de su padre W con respecto a un vector de umbral T = (T1, . . . , Tn), (denotado por v ∈ pbrV (w, T)) si hay un equilibrio en la instancia G(V,W), W = w en el que V juega la estrategia mixta v y la ganancia para cualquier jugador Vi aguas abajo de V (incluyendo a V) es al menos Ti. La mejor política de respuesta para V con respecto a un vector umbral T se define como B(W, V, T) = {(w, v) | v ∈ pbrV (w, T), w ∈ [0, 1]}. Es fácil ver que si alguno de los conjuntos B(Vj, Vj−1, T), j = 1, . . . , n, está vacío, significa que es imposible proporcionar a todos los jugadores los pagos esperados prescritos por T. De lo contrario, se puede aplicar el paso descendente del algoritmo original de [13] para encontrar un equilibrio de Nash. Dado que asumimos que Vn es un vértice ficticio cuya ganancia es idénticamente 0, el equilibrio de Nash con estas ganancias existe siempre y cuando Tn ≤ 0 y B(Vn, Vn−1, T) no esté vacío. Usando las técnicas desarrolladas en [9], no es difícil demostrar que para cualquier j = 1, . . . , n, el conjunto B(Vj , Vj−1, T) consiste en un número finito de rectángulos, y se puede calcular B(Vj+1, Vj , T) dado B(Vj , Vj−1, T). La ventaja de este enfoque es que nos permite representar todos los equilibrios de Nash que proporcionan los pagos requeridos a los jugadores. Sin embargo, no es probable que sea práctico, ya que resulta que los rectángulos que aparecen en la representación de B(Vj , Vj−1, T) pueden tener coordenadas irracionales. AFIRMACIÓN 6. Existe un juego gráfico G en un camino de 3 vértices UVW y un vector T = (T1, T2, T3) tal que B(V, W, T) no puede ser representado como una unión de un número finito de rectángulos con coordenadas racionales. PRUEBA. Definimos las recompensas para los jugadores en G de la siguiente manera. La ganancia para U es idénticamente 0, es decir, P0 (U) = P1 (U) = 0. Usando la Reclamación 1, seleccionamos los pagos para V de manera que P0 (V) = uw, P1 (V) = P0 (V) + w - .8u - .1, donde u y w son las estrategias (mixtas) de U y W, respectivamente. Se deduce que V es indiferente entre jugar 0 y 1 si y solo si w = f(u) = .8u + .1; observe que para cualquier u ∈ [0, 1] tenemos f(u) ∈ [0, 1]. No es difícil ver que tenemos B(W, V) = [0, .1]×{0} ∪ [.1, .9]×[0, 1] ∪ [.9, 1]×{1}. Los pagos para W no son importantes para nuestra construcción; por ejemplo, establezca P0(W) = P0(W) = 0. Ahora, establezca T = (0, 1/8, 0), es decir, estamos interesados en equilibrios de Nash en los que el pago esperado de V sea al menos 1/8. Supongamos que w ∈ [0, 1]. El jugador V puede jugar una estrategia mixta v cuando W está jugando w siempre que U juegue u = f−1 (w) = 5w/4 − 1/8 (para asegurar que V sea indiferente entre 0 y 1) y P0 (V) = P1 (V) = uw = w(5w/4 − 1/8) ≥ 1/8. La última condición se cumple si w ≤ (1 − √ 41)/20 < 0 o w ≥ (1 + √ 41)/20. Ten en cuenta que tenemos .1 < (1 + √ 41)/20 < .9. Para cualquier otro valor de w, cualquier estrategia de U hace que V prefiera una de las estrategias puras o no le proporciona un pago esperado suficiente. También hay algunos valores de w para los cuales V puede jugar una estrategia pura (0 o 1) como una mejor respuesta potencial a W y garantizarse a sí mismo un pago esperado de al menos 1/8; se puede demostrar que estos valores de w forman un número finito de segmentos en [0, 1]. Concluimos que cualquier representación de B(W, V, T) como una unión de un número finito de rectángulos debe contener un rectángulo de la forma [(1 + √ 41)/20, w] × [v, v] para algún w, v, v ∈ [0, 1]. Por otro lado, se puede demostrar que para cualquier matriz de pagos enteros y vectores de umbral, y para cualquier j = 1, . . . , n − 1, los conjuntos B(Vj+1, Vj, T) no contienen rectángulos de la forma [u , u ]×{v} o {v}×[w , w ], donde v ∈ R\\Q. Esto significa que si B(Vn, Vn−1, T) no está vacío, es decir, hay un equilibrio de Nash con pagos prescritos por T, entonces el paso descendente del algoritmo de [13] siempre puede elegir un perfil estratégico que forme un equilibrio de Nash, proporcione un pago de al menos Ti al jugador Vi y no tenga coordenadas irracionales. Por lo tanto, a diferencia del equilibrio de Nash que maximiza el bienestar social, no es necesario trabajar con números irracionales, y el hecho de que el algoritmo discutido en esta sección deba hacerlo puede considerarse como un argumento en contra de utilizar este enfoque. OTROS CRITERIOS PARA SELECCIONAR UN EQUILIBRIO DE NASH En esta sección, consideramos varios otros criterios que pueden ser útiles para seleccionar un equilibrio de Nash. 6.1 Combinando la maximización del bienestar con límites en los pagos En muchos escenarios de la vida real, queremos maximizar el bienestar social sujeto a ciertas restricciones en los pagos a los jugadores individuales. Por ejemplo, es posible que queramos asegurarnos de que ningún jugador obtenga una ganancia esperada negativa, o que la ganancia esperada para el jugador i sea al menos Pi max − ξ, donde Pi max es la entrada máxima de la matriz de ganancias de i y ξ es un parámetro fijo. Formalmente, dado un juego gráfico G y un vector T1, . . . , Tn, sea S el conjunto de todos los equilibrios de Nash s de G que satisfacen Ti ≤ EPVi (s) para i = 1, . . . , n, y sea ˆs = argmaxs∈S EP(s). Si el conjunto S no está vacío, podemos encontrar un equilibrio de Nash ˆs que esté -cerca de satisfacer los límites de pago y esté dentro de ε de ˆs con respecto al pago total al combinar los algoritmos de la Sección 4 y la Sección 5. Es decir, para un dado > 0, elige δ como en la demostración del Teorema 3, y deja que Xi sea el conjunto de todas las estrategias discretas del jugador Vi (para una definición formal, consulta la demostración del Teorema 3). Combinando las pruebas del Teorema 3 y el Teorema 5, podemos ver que el perfil de estrategia ˆt dado por ˆti = max{xj i | xj i ≤ ˆsi} satisface EPVi (ˆt) ≥ Ti − , |EP(ˆs) − EP(ˆt)| ≤ . Define ˆml,k i como la máxima ganancia total que V1, . . . , Vi−1 pueden lograr si cada Vj, j ≤ i, elige una estrategia de Xj, para cada j < i la estrategia de Vj es una mejor respuesta potencial a la estrategia de Vj+1 y la ganancia para el jugador Vj es al menos Tj − , y, además, Vi−1 juega xl i−1, Vi juega xk i. Si no hay forma de elegir las estrategias para V1, . . . , Vi−1 que cumplan con estas condiciones, establecemos ml,k i = −∞. El ˆml,k se puede calcular mediante programación dinámica de manera similar al ml,k y zl,k en las demostraciones de los Teoremas 3 y 5. Finalmente, como en la demostración del Teorema 3, utilizamos ml,k n para seleccionar el mejor equilibrio de Nash discreto sujeto a las restricciones de pago. Incluso de manera más general, es posible que deseemos maximizar el beneficio total para un subconjunto de jugadores (se supone que son capaces de redistribuir justamente las ganancias entre ellos mismos) mientras garantizamos ciertos beneficios esperados a (un subconjunto de) los otros jugadores. Este problema puede ser abordado de manera similar. 6.2 Un enfoque minimax Una medida más igualitaria de la calidad de un equilibrio de Nash es el pago esperado mínimo para un jugador. La solución óptima con respecto a esta medida es un equilibrio de Nash en el cual la ganancia esperada mínima para un jugador es máxima. Para encontrar una aproximación a dicho equilibrio de Nash, podemos combinar el algoritmo de la Sección 5 con la búsqueda binaria en el espacio de límites inferiores potenciales. Ten en cuenta que la ganancia esperada para cualquier jugador Vi dada una estrategia s siempre cumple con −Pmax ≤ EPVi (s) ≤ Pmax. Para un fijo > 0, comenzamos estableciendo T = −Pmax, T = Pmax, T∗ = (T + T )/2. Luego ejecutamos el algoritmo de la Sección 5 con T1 = · · · = Tn = T∗. Si el algoritmo tiene éxito al encontrar un equilibrio de Nash s que cumple con EPVi (s) ≥ T∗ − para todo i = 1, . . . , n, establecemos T = T∗, T∗ = (T + T)/2; de lo contrario, establecemos T = T∗, T∗ = (T + T)/2 y repetimos el ciclo. Repetimos este proceso hasta que |T − T | ≤ . No es difícil comprobar que para cualquier p ∈ R, si existe un equilibrio de Nash s tal que mini=1,...,n EPVi (s) ≥ p, entonces nuestro algoritmo devuelve un equilibrio de Nash s que cumple mini=1,...,n EPVi (s) ≥ p−2. El tiempo de ejecución de nuestro algoritmo es O(max{nP3 max log −1 / 3 , n4 log −1 / 3 }). 6.3 Igualando los pagos Cuando las matrices de pagos de los jugadores no son muy diferentes, es razonable exigir que los pagos esperados para los jugadores tampoco difieran mucho. Ahora demostraremos que los equilibrios de Nash en esta categoría también pueden aproximarse en tiempo polinómico. De hecho, observe que el algoritmo de la Sección 5 puede ser fácilmente modificado para tratar con límites superiores en las ganancias individuales en lugar de límites inferiores. Además, podemos calcular de manera eficiente una aproximación a un equilibrio de Nash que cumpla tanto con el límite superior como con el límite inferior para cada jugador. Más precisamente, supongamos que se nos da un juego gráfico G, 2n números racionales T1, . . . , Tn, T1, . . . , Tn y > 0. Entonces, si existe un perfil estratégico s tal que s es un equilibrio de Nash para G y Ti ≤ EPVi (s) ≤ Ti para i = 1, . . . , n, podemos encontrar un perfil estratégico s tal que s es un equilibrio de Nash para G y Ti − ≤ EPVi (s) ≤ Ti + para i = 1, . . . , n. El algoritmo modificado también se ejecuta en tiempo O(max{nP3 max/ 3 , [4]n4 / 3 }). Esta observación nos permite aproximar equilibrios de Nash en los que las ganancias esperadas de todos los jugadores difieren en un máximo de ξ para cualquier ξ fijo > 0. Dado un > 0, establecemos T1 = · · · = Tn = −Pmax, T1 = · · · = Tn = −Pmax + ξ + , y ejecutamos la versión modificada del algoritmo de la Sección 5. Si no logra encontrar una solución, incrementamos todos los Ti, Ti por y el bucle. Continuamos hasta que el algoritmo encuentre una solución, o Ti ≥ Pmax. Supongamos que existe un equilibrio de Nash s que satisface |EPVi (s) − EPVj (s)| ≤ ξ para todo i, j = 1, . . . , n. Definamos r = mini=1,...,n EPVi (s); tenemos r ≤ EPVi (s) ≤ r + ξ para todo i = 1, . . . , n. Existe un k ≥ 0 tal que −Pmax + (k − 1) ≤ r ≤ −Pmax + k. Durante el paso k del algoritmo, establecemos T1 = · · · = Tn = −Pmax +(k−1) , es decir, tenemos r− ≤ Ti ≤ r, r + ξ ≤ Ti ≤ r + ξ + . Es decir, el equilibrio de Nash s satisface Ti ≤ r ≤ EPVi (s) ≤ r + ξ ≤ Ti, lo que significa que cuando Ti se establece en −Pmax + (k − 1), nuestro algoritmo garantiza producir un equilibrio de Nash t que satisface r − 2 ≤ Ti − ≤ EPVi (t) ≤ Ti + ≤ r + ξ + 2. Concluimos que siempre que exista un equilibrio de Nash s, nuestro algoritmo produce un equilibrio de Nash t que satisface |EPVi (t) − EPVj (t)| ≤ ξ + 4 para todo i, j = 1, . . . , n. El tiempo de ejecución de este algoritmo es O(max{nP3 max/ 4 , n4 / 4 }). También debemos tener en cuenta que podemos encontrar el valor más pequeño de ξ para el cual existe un equilibrio de Nash combinando este algoritmo con una búsqueda binaria en el espacio ξ = [0, 2Pmax]. Esto identifica una aproximación al equilibrio de Nash más justo, es decir, uno en el que las ganancias esperadas de los jugadores difieren por la menor cantidad posible. Finalmente, cabe destacar que todos los resultados de esta sección pueden extenderse a árboles de grado acotado. 7. CONCLUSIONES Hemos estudiado el problema de la selección de equilibrio en juegos gráficos en árboles de grado acotado. Consideramos varios criterios para seleccionar un equilibrio de Nash, como maximizar el bienestar social, garantizar un límite inferior en la recompensa esperada de cada jugador, etc. Primero, nos enfocamos en la complejidad algebraica de un equilibrio de Nash que maximiza el bienestar social, y demostramos resultados negativos contundentes para ese problema. Es decir, demostramos que incluso para juegos gráficos en caminos, cualquier número algebraico α ∈ [0, 1] puede ser la única estrategia disponible para algún jugador en todas las equilibrios de Nash que maximizan el bienestar social. Esto contrasta fuertemente con el hecho de que los juegos gráficos en árboles siempre poseen un equilibrio de Nash en el que las estrategias de todos los jugadores son números racionales. Luego proporcionamos algoritmos de aproximación para seleccionar equilibrios de Nash con propiedades especiales. Si bien el problema de encontrar equilibrios de Nash aproximados para diversas clases de juegos ha recibido mucha atención en los últimos años, la mayoría de los trabajos existentes tienen como objetivo encontrar equilibrios de Nash que satisfagan (o estén cerca de satisfacer) ciertas propiedades. Nuestro enfoque es diferente en que insistimos en producir un equilibrio de Nash exacto, que está cerca de satisfacer un requisito dado. Como se argumenta en la introducción, hay varias razones para preferir una solución que constituya un equilibrio de Nash exacto. Nuestros algoritmos son esquemas de aproximación de tiempo polinomial completo, es decir, su tiempo de ejecución es polinomial en el inverso del parámetro de aproximación, aunque pueden ser seudopolinomiales con respecto al tamaño de la entrada. Bajo restricciones leves en las entradas, estas pueden ser modificadas para ser verdaderamente polinomiales. Este es el resultado positivo más fuerte que se puede obtener para un problema cuyas soluciones exactas pueden ser difíciles de representar, como es el caso de muchos de los problemas considerados aquí. Mientras demostramos nuestros resultados para juegos en un camino, pueden generalizarse a cualquier árbol para el cual las políticas de mejor respuesta tengan representaciones compactas como uniones de rectángulos. En la versión completa del artículo describimos nuestros algoritmos para el caso general. Un trabajo adicional en esta línea podría incluir extensiones a los tipos de garantías buscadas para los equilibrios de Nash, como garantizar los pagos totales para subconjuntos de jugadores, seleccionar equilibrios en los que algunos jugadores estén recibiendo pagos significativamente más altos que sus pares, etc. Sin embargo, en este momento es quizás más importante investigar si los equilibrios de Nash de los juegos gráficos pueden ser calculados de manera descentralizada, en contraste con los algoritmos que hemos introducido aquí. Es natural preguntarse si nuestros resultados o los de [9] pueden generalizarse a juegos con tres o más acciones. Sin embargo, parece que esto hará el análisis significativamente más difícil. En particular, cabe destacar que se pueden considerar los juegos de pago limitado como un caso especial muy restringido de juegos con tres acciones por jugador. Es decir, dado un juego de dos acciones con límites de pago, considera un juego en el que cada jugador Vi tiene una tercera acción que le garantiza un pago de Ti sin importar lo que hagan los demás. Luego, verificar si existe un equilibrio de Nash en el cual ninguno de los jugadores asigna una probabilidad distinta de cero a su tercera acción es equivalente a comprobar si existe un equilibrio de Nash que cumpla con los límites de pago en el juego original, y la Sección 5.1 muestra que encontrar una solución exacta a este problema requiere nuevas ideas. Alternativamente, puede ser interesante buscar resultados similares en el contexto de equilibrios correlacionados (CE), especialmente dado que el mejor CE puede tener un valor más alto (pago esperado total) que el mejor NE. La proporción entre estos valores se llama el valor de mediación en [1]. Se sabe por [1] que el valor de mediación de juegos de 2 jugadores y 2 acciones con pagos no negativos es a lo sumo 4 3, y presentan un juego de 3 jugadores para el cual es infinito. Además, un ejemplo de 2 jugadores y 3 acciones del [1] también tiene un valor de mediación infinito. 8. REFERENCIAS [1] I. Ashlagi, D. Monderer y M. Tenneholtz, Sobre el Valor de la Correlación, Actas del seminario de Dagstuhl 05011 (2005) [2] R. Aumann, Subjetividad y Correlación en Estrategias Aleatorias, Revista de Economía Matemática 1 pp. 67-96 (1974) [3] B. Blum, C. R. Shelton y D. Koller, Un Método de Continuación para Equilibrios de Nash en Juegos Estructurados, Actas de IJCAI03 [4] X. Chen, X. Deng y S. Teng, Computación de Equilibrios de Nash: Aproximación y Complejidad Suavizada, Actas de FOCS06 [5] X. Chen, X. Deng, Resolviendo la Complejidad del Equilibrio de Nash de 2 Jugadores, Actas de FOCS06 [6] V. Conitzer y T. Sandholm, Resultados de Complejidad sobre Equilibrios de Nash, Actas de IJCAI03 [7] C. Daskalakis, P. W. Goldberg y C. H. Papadimitriou, La Complejidad de Calcular un Equilibrio de Nash, Actas de STOC06 [8] R. S. Datta, Universalidad de los Equilibrios de Nash, Matemáticas de la Investigación Operativa 28:3, 2003 [9] E. Elkind, L. A. Goldberg y P. W. Goldberg, Equilibrios de Nash en Juegos Gráficos en Árboles Revisitados, Actas de ACM EC06 [10] E. Elkind, L. A. Goldberg y P. W. Goldberg, Computando Buenos Equilibrios de Nash en Juegos Gráficos, http://arxiv.org/abs/cs.GT/0703133 [11] I. Gilboa y E. Zemel, Equilibrios de Nash y Correlacionados: Algunas Consideraciones de Complejidad, Juegos y Comportamiento Económico, 1 pp. 80-93 (1989) [12] P. W. Goldberg y C. H. Papadimitriou, Reducibilidad entre Problemas de Equilibrio, Actas de STOC06 [13] M. Kearns, M. Littman y S. Singh, Modelos Gráficos para la Teoría de Juegos, Actas de UAI01 [14] M. Littman, M. Kearns y S. Singh, Un Algoritmo Exacto Eficiente para Juegos Gráficos Singularmente Conectados, Actas de NIPS01 [15] R. Lipton y E. Markakis, Equilibrios de Nash a través de Ecuaciones Polinomiales, Actas de LATIN04 [16] L. Ortiz y M. Kearns, Propagación de Nash para Juegos Gráficos con Lazos, Actas de NIPS03 [17] C.H. Papadimitriou, Computando equilibrios correlacionados en juegos de varios jugadores, Actas de STOC05 [18] C.H. Papadimitriou y T. Roughgarden, Computando equilibrios en juegos de múltiples jugadores, Actas de SODA05 [19] D. Vickrey y D. Koller, Algoritmos multiagente para resolver juegos gráficos, Actas de AAAI02 171 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        }
    }
}