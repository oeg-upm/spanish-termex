{
    "id": "C-17",
    "original_text": "Deployment Issues of a VoIP Conferencing System in a Virtual Conferencing Environment R. Venkatesha Prasad i Richard Hurni ii H.S. Jamadagni iii H.N. Shankar iv i, iii Centre for Electronics Design and Technology Indian Institute of Science, Bangalore, India Telephone: +91 80 360 0810 i, iii {vprasad, hsjam}@cedt.iisc.ernet.in ii hurni@ieee.org iv hn_shankar@yahoo.com ABSTRACT Real-time services have been supported by and large on circuitswitched networks. Recent trends favour services ported on packet-switched networks. For audio conferencing, we need to consider many issues - scalability, quality of the conference application, floor control and load on the clients/servers - to name a few. In this paper, we describe an audio service framework designed to provide a Virtual Conferencing Environment (VCE). The system is designed to accommodate a large number of end users speaking at the same time and spread across the Internet. The framework is based on Conference Servers [14], which facilitate the audio handling, while we exploit the SIP capabilities for signaling purposes. Client selection is based on a recent quantifier called Loudness Number that helps mimic a physical face-to-face conference. We deal with deployment issues of the proposed solution both in terms of scalability and interactivity, while explaining the techniques we use to reduce the traffic. We have implemented a Conference Server (CS) application on a campus-wide network at our Institute. Categories and Subjects Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - Client / Server, distributed applications. General Terms Algorithms, Performance, Design, Theory. 1. INTRODUCTION Todays Internet uses the IP protocol suite that was primarily designed for the transport of data and provides best effort data delivery. Delay-constraints and characteristics separate traditional data on the one hand from voice & video applications on the other. Hence, as progressively time-sensitive voice and video applications are deployed on the Internet, the inadequacy of the Internet is exposed. Further, we seek to port telephone services on the Internet. Among them, virtual conference (teleconference) facility is at the cutting edge. Audio and video conferencing on Internet are popular [25] for the several advantages they inhere [3,6]. Clearly, the bandwidth required for a teleconference over the Internet increases rapidly with the number of participants; reducing bandwidth without compromising audio quality is a challenge in Internet Telephony. Additional critical issues are: (a) packet delay, (b) echo, (c) mixing of audio from selected clients, (d) automatic selection of clients to participate in the conference, (e) playout of mixed audio for every client, (f) handling clients not capable of mixing audio streams (such clients are known as dumb clients), and (g) deciding the number of simultaneously active clients in the conference without compromising voice quality. While all the above requirements are from the technology point of view, the users perspective and interactions are also essential factors. There is plenty of discussion amongst HCI and CSCW community on the use of Ethnomethodology for design of CSCW applications. The basic approach is to provide larger bandwidth, more facilities and more advanced control mechanisms, looking forward to better quality of interaction. This approach ignores the functional utility of the environment that is used for collaboration. Eckehard Doerry [4] criticizes this approach by saying it is keeping form before function. Thus, the need is to take an approach that considers both aspects - the technical and the functional. Regarding the functional aspect, we refer to [15] where it has been dealt with in some detail. In this work, we do not discuss video conferencing; its inclusion does not significantly benefit conference quality [4]. Our focus is on virtual audio environments. We first outline the challenges encountered in virtual audio conferences. Then we look into the motivations followed by relevant literature. In Section 5, we explain the architecture of our system. Section 6 comprises description of the various algorithms used in our setup. We address deployment issues. A discussion on Swiss Federal Institute of Technology, Lausanne. Former visitor at CEDT. PESIT and NIAS, Bangalore, India.iv ii performance follows. We conclude taking alongside some implementation issues. 2. CHALLENGES IN VoIP CONFERENCING Many challenges arise in building a VoIP application. The following are of particular concern in the process: • Ease of use: Conferencing must be simple; users need no domain expertise. Management (addition/removal) of clients and servers must be uncomplicated. Application development should not presuppose specific characteristics of the underlying system or of network layers. Ease of use may include leveraging readily available, technically feasible and economically viable technologies. • Scalability: Conferencing must seem uninterrupted under heavy loads, i.e., when many additional users are added on. Traffic on WAN should not grow appreciably with the total number of clients; else, this has lead to congestion. So a means to regulate traffic to a minimum is needed for this kind of real-time applications. • Interactivity: In Virtual Conferencing Environments (VCEs), we intend a face-to-face-like conferencing application that mimics a real conference, where more vocal participants invite attention. Turn-taking in floor occupation by participants must be adapted gracefully to give a feel of natural transition. • Standardization: The solution must conform to established standards so as to gain interoperability and peer acceptance. The above requirements are placed in the perspective of observations made in earlier works (vide Sections 3 and 4) and will steer the VCE design. 3. THE MOTIVATION Ramanathan and Rangan [20] have studied in detail the architectural configurations comparing many conferencing architecture schemes taking into consideration the network delay and computation requirements for mixing. Functional division and object-oriented architecture design that aid in implementation is presented in [1]. An overview of many issues involved in supporting a large conference is dealt in [8]. H. P. Dommel [5] and many others highlight floor control as another pivotal aspect to be taken into account in designing a conferencing tool. Tightly coupled conference control protocols in Internet belong to the ITU-T H.323 family [9]; however, they are mainly for small conferences. The latest IETF draft by Rosenberg and Schulzrinne [23] discusses conferencing models with SIP [22] in the background. Aspects of implementation for centralized SIP conferencing are reported in [26]. A new approach called partial mixing by Radenkovic [18] allows for mixed and non-mixed streams to coexist. In all the above proposals, while there are some very useful suggestions, they share one or more of the following limitations: • In an audio conference, streams from all the clients need not be mixed. Actually, mixing many arbitrary streams [24] from clients degrades the quality of the conference due to the reduction in the volume (spatial aspect of speech). The number of streams mixed varies dynamically depending on the number of active participants. This would lead to fluctuations in the volume of every individual participant causing severe degradation in quality. Customized mixing of streams is not possible when many clients are active. There is a threshold on the number of simultaneous speakers above which increasing the number of speakers becomes counterproductive to conference quality. Fixing the maximum number of simultaneous speakers is dealt in a recent work [15] using Ethnomethodology, and is conjectured to be three. Thus it is advisable to honour that constraint. • There cannot be many intermediate mixers (similarly, Conference Servers as in [10]) in stages as in [20] because it brings in inordinate delay by increasing the number of hops and is not scalable with interactivity in focus. • Floor Control for an audio conference (even video conference) with explicit turn-taking instructions to participants renders the conference essentially a one-speakerat-a-time affair, not a live and free-to-interrupt one. This way, the conference becomes markedly artificial and its quality degrades. Schulzrinne et al. [24], assume only one participant is speaking at a time. In this case, if applications are implemented with some control [5], the service becomes gagging for the users. • Partial mixing [18] has a similar problem as that of mixing when more streams are mixed. Moreover, in [18], to allow impromptu speech, mixing is not done when the network can afford high bandwidth requirements for sending/receiving all the streams, but it is unnecessary [15]. • For large conferences [23, 10] a centralized conference cannot scale up. With multicasting, clients will have to parse many streams and traffic on a clients network increases unnecessarily. Evidently, different particular issues, all of which are a subset of requirements (defined in [14] and [16]) for a VoIP conferencing support, are tackled. Thus there is a need to address conferencing as a whole with all its requirements considered concurrently. Towards this goal, the VoIP conferencing system we propose is intended to be scalable and interactive. We make use of the Loudness Number for implementing floor control. This permits a participant to freely get into the speaking mode to interrupt the current speaker as in a natural face-to-face meeting. An upper limit on the number of floors (i.e., the number of speakers allowed to speak at the same time) is fixed using a conjecture proposed in [15]. The work presented here is in continuation of our studies into conferencing based on the Session Initiation Protocol in [14] and [16]. SIP, defined in [22] is now the most popular standard for VoIP deployment and has been chosen for its strength, ease of use, extensibility and compatibility. This is the reason it will be in the background of all controlling messages that will implicitly arise between the entities in our architecture. The actual messages are described in [16] and, as such, we do not present a complete description of them here. 4. RELATED WORK The SIP standard defined in RFC 3261 [22] and in later extensions such as [21] does not offer conference control services such as floor control or voting and does not prescribe how a conference is to be managed. However SIP can be used to initiate a session that uses some other conference control protocol. The core SIP specification supports many models for conferencing [26, 23]. In the server-based models, a server mixes media streams, whereas in a server-less conference, mixing is done at the end systems. SDP [7] can be used to define media capabilities and provide other information about the conference. We shall now consider a few conference models in SIP that have been proposed recently [23]. First, let us look into server-less models. In End-System Mixing, only one client (SIP UA) handles the signaling and media mixing for all the others, which is clearly not scalable and causes problems when that particular client leaves the conference. In the Users Joining model, a tree grows, as each invited party constitutes a new branch in the distribution path. This leads to an increasing number of hops for the remote leaves and is not scalable. Another option would be to use multicast for conferencing but multicast is not enabled over Internet and only possible on a LAN presently. Among server-based models, in a Dial-In Conference, UAs connect to a central server that handles all the mixing. This model is not scalable as it is limited by the processing power of the server and bandwidth of the network. Adhoc Centralized Conferences and Dial-Out Conference Servers have similar mechanisms and problems. Hybrid models involving centralized signaling and distributed media, with the latter using unicast or multicast, raise scalability problems as before. However an advantage is that the conference control can be a third party solution. Distributed Partial Mixing, presented in [18], proposes that in case of bandwidth limitation, some streams are mixed and some are not, leaving interactivity intact. Loss of spatialism when they mix and the bandwidth increase when they do not are open problems. A related study [19] by the same author proposes conferencing architecture for Collaborative Virtual Environments (CVEs) but does not provide the scalability angle without the availability of multicasting. With the limitations of proposed conferencing systems in mind, we will now detail our proposal. 5. SYSTEM ARCHITECTURE This section is dedicated to the description of the proposed system architecture. However, as this paper constitutes the continuation of our work started in [14] and furthered in [16], we will not present here all the details about the proposed entities and invite the readers to consult the papers mentioned above for a full and thorough description. First, we do not restrict our conferencing system to work on small conferences only, but rather on large audio VCEs that have hundreds (or even thousands) of users across a Wide Area Network (WAN) such as the Internet. This view stems from an appraisal that VCEs will gain in importance in the future, as interactive audio conferences will be more popular because of the spread of the media culture around the world. Two issues must be taken care of when building a VoIP conferencing system: (i) the front-end, consisting of the application program running on the end-users computers and (ii) the back-end that provides other application programs that facilitate conferencing and conference. The participating users are grouped into several domains. These domains are Local Area Networks (LANs), such as corporate or educational networks. This distributed assumption asks for distributed controlling and media handling solutions, as centralized systems would not scale for such very large conferences (vide Section 4). More explicitly, in each domain, we can identify several relevant logical components of a conferencing facility (Fig. 1):  An arbitrary number of end users (clients) that can take part in at most one audio conference at a time. Every user is Fig. 1. Conference example - 3 domains containing the necessary entities so that the conference can take place. included in one and only one domain at a given instant, but can move from domain to domain (nomadism). In our conferencing environment, these clients are regular SIP User Agents (SIP UAs), as defined in [22] so to gain in interoperability with other existing SIP-compatible systems. These clients are thus not aware of the complex setting that supports the conference and this is highlighted below.  One SIP Server (SIPS) per domain, taking care of all the signaling aspects of the conference (clients joining, leaving, etc.) [16]. In particular, it is considered as a physical implementation encompassing different logical roles, namely a SIP Proxy Server, a SIP Registrar Server, a SIP Redirect Server and a SIP B2BUA (Back-to-Back User Agent) [22]. This physical implementation enables the handling of incoming/outgoing SIP messages by one or another logical entity according to the needs. SIPS is entrusted with maintaining total service and has many advantages such as (a) it works as a centralized entity that can keep track of the activities of the UAs in a conference; (b) it can do all the switching for providing PBX features; (c) it can locate the UAs and invite them for a conference; (d) it can do the billing as well. SIPSs in different domains communicate with each other using SIP messages as described in [16]. If the load on a particular SIPS is too heavy, it can create another SIPS in the same domain so that the load will be shared.  One Master Conference Server (M-CS) (simply a Conference Server (CS)) for each conference is created by the local SIPS when a conference starts. This server will be used for handling media packets for the clients of the domain. Its mechanism will be described in the next section. The M-CS will be able to create a hierarchy of CSs inside a domain by adding one or more Slave CSs (S-CSs) to accommodate all the active clients and prevent its own flooding at the same time. We will see this mechanism in some detail in the sequel. The entities described here are exhaustive and conform to the SIP philosophy. Thus, the use of SIP makes this architecture more useful and interoperable with any other SIP clients or servers. 6. ALGORITHMIC ISSUES 6.1 Selecting the Streams Similar to SipConf in [27], a Conference Server (CS) [17] has the function of supporting the conference; it is responsible for handling audio streams using RTP. It can also double to convert audio stream formats for a given client if necessary and can work as Translators/Mixers of RTP specification behind firewalls. We have based the design of our CS on H.323 Multipoint Processor (MP) [9]. In short, the MP receives audio streams from the endpoints involved in a centralized or hybrid multipoint conference, processes them and returns them to the endpoints. An MP that processes audio prepares NMax audio outputs from M input streams after selection, mixing, or both. Audio mixing requires decoding the input audio to linear signals (PCM or analog), performing a linear combination of the signals and reencoding the result in an appropriate audio format. The MP may eliminate or attenuate some of the input signals in order to reduce noise and unwanted components. Fig. 2. Schematic diagram of a CS The limitation of H.323 is that it does not address the scalability of a conference. The architecture proposes a cascaded or daisy chain topology [10], which can be shown that it cannot scale up for a large conference. A CS serves many clients in the same conference. Thus it handles only one conference at a time. Multiple CSs may coexist in a domain, as when there are several conferences under way. Signaling-related messages of CSs are dealt in [11]. The working of a CS is illustrated on Fig. 2: For each mixing interval, CS 1 chooses the best NMax audio packets out of the M1 (using a criterion termed Loudness Number, described in the next subsection). It may possibly receive and sends these to CSs 2 to P. The set of packets sent is denoted as ToOtherCSs. In the same mixing interval, it also receives the best NMax audio packets (out of possibly M2) from CS 2, similarly the best NMax (out of possibly MP) from CS P. For simplicity, we ignore propagation delay between CSs which indeed can be taken into account; it is beyond the scope of this presentation. The set of packets received is denoted as FromOtherCSs. Finally, it selects the best NMax packets from the set {ToOtherCSs union FromOtherCSs} and passes these packets to its own group. It can be seen that the set {ToOtherCSs union FromOtherCSs} is the same at all CSs. This ensures that any client in the conference finally receives the same set of packets for mixing. Hence all clients obtain a common view of the conference. Similarly, for each time slot (packet time), a subset, F of all clients is selected (using the same criterion) from the pool of packets from all other CSs plus the NMax clients selected locally. Their packets are mixed and played out at the clients. According to [15], the cardinality of F, |F| is NMax and is fixed at three. In our conferencing setup, selection is by the Master Conference Server (M-CS), which comes into the picture exclusively for media handling. Note that even if the SIP specification enables direct UA-to-UA media communication in a one-to-one call, it is also possible to use the Conference Server for two-party calls, especially because it is then more functional to create a real conference by adding a third and subsequently more participant(s). There are cases wherein the processing capacity of an M-CS is exceeded as it may have too many packets - from local domains and from remote domains - to process. In that case, the M-CS will create one or many S-CS (Fig. 6) and transfer its own clients as well as the new clients to them. In this configuration, the algorithm outlined above will be slightly modified, as the audio packets will go from clients to their dedicated S-CS that will select NMax packets to send to the local M-CS, which will then select NMax packets from all its S-CSs in the domain before sending them to the remote domains. The incoming packets from other domains will be received by the M-CS, select NMax of them and send them directly to the domain clients, bypassing the SCSs. This change implies that at most three intermediate entities exist for each audio packet, instead of two in the conventional setup. As the extra hop happens inside the LAN supposed to have a high-speed connectivity, we consider that it should not prevent us from using this hierarchy of CSs when theres a need to do so. 6.2 Loudness Number (LN) A basic question to be answered by the CS is the following. In a mixing interval, how should it choose NMax packets out of the M it might possibly receive? One way is to rank the M packets received according to their energies, and choose the top NMax. However, this is usually found to be inadequate because random fluctuations in packet energies can lead to poor audio quality. This indicates the need for a metric different from mere individual packet energies. The metric should have the following characteristics [12]: • A speaker (floor occupant) should not be cut off by a spike in the packet energy of another speaker. This implies that a speakers speech history should be given some weight. This is often referred to as Persistence or Hangover. • A participant who wants to interrupt a speaker will have to (i) speak loudly and (ii) keep trying for a little while. In a face-to-face conference, body language often indicates the intent to interrupt. But in a blind conference under discussion, a participants intention to interrupt can be conveyed effectively through LN. A floor control mechanism empowered to cut off a speaker forcefully must be ensured. These requirements are met by Loudness Number [12], which changes smoothly with time so that the selection (addition and deletion) of clients for conference is graceful. LN (= ) is a function of the amplitude of the current audio stream plus the activity and amplitude over a specific window in the past. Fig. 3. The different windows used for LN computation The Loudness Number is updated on a packet-by-packet basis. The basic parameter used here is packet amplitude, which is calculated as root mean square (rms) of the energies in audio samples of a packet, and denoted by XK. Three windows are defined as shown in Fig. 3. The present amplitude level of the speaker is found by calculating the moving average of packet amplitude (XK) within a window called Recent Past Window starting from the present instant to some past time. The past activity of the speaker is found by calculating the moving average of the packet amplitude (XK) within a window called Distant Past Window, which starts at the point where the Recent Past window ends and stretches back in the past for a pre-defined interval. The activity of the speaker in the past is found with a window called Activity Horizon, which spans the recent past window as well as the distant past window and beyond if necessary. Though the contribution of the activity horizon looks similar to the contribution of the recent past and distant past windows, past activity is computed from activity horizon window in a differently. Define the quantities during these three intervals as L1, L2 and L3. L1 quantifies the Recent Past speech activity, L2 the Distant Past speech activity and L3 gives a number corresponding to the speech activity in the Activity Horizon window quantifying how active the speaker was in the past few intervals. L3 yields a quantity that is proportional to the fraction of packets having energies above a pre-defined threshold (Eq. 3). The threshold is invariant across clients. ∑ +− = = 1 1 1 RPP P Wt tK K RP X W L (1) ∑ +−− −= = 1 2 1 DPRPP RPP WWt WtK K DP X W L (2) ∑ +− = ≥= 1 }{3 * 1 AHP P K Wt tK X AH I W L θθ (3) Where ifI KX 1}{ =≥θ θ≥KX = otherwise,0 The threshold is a constant. is set at 10-20 percent of the amplitude of the voice samples of a packet in our implementation here. Loudness Number λ for the present time instant (or the present packet) is calculated as, 332211 *L*L*L αααλ ++= (4) Here 1\u000f 2 DQG 3 are chosen such that: 0< 1\u000f 2\u001f\u0014\u000f \u0013\u001f 1\u000e 2\u001f\u0014 DQG 3=1-\u000b 1\u000e 2) Here, 1 is the weight given to the recent past speech, 2 is the weight given to distant past speech and 3 is the weight given to speech activity in the activity horizon window considered. 6.3 Safety, Liveness and Fairness The λ parameter KDV VRPH PHPRU\\ GHSHQGLQJ RQ WKH VSUHDG RI the windows. After one conferee becomes silent, another can take the floor. Also, as there is more than one channel, interruption is enabled. A loud conferee is more likely to be heard because of elevated λ. This ensures fairness to all conferees. After all, even in a face-to-face conference, a more vocal speaker grabs special attention. All these desirable characteristics are embedded into the LN. A comprehensive discussion on selection of the various parameters and the dynamics of LN are beyond the scope of this paper. 6.4 Selection Algorithm using the LN Following the developments in subsections 6.1 and 6.2, we present the simple algorithm that runs at each Master-Conference Server (Algorithm. 1). This algorithm is based on the discussions in section 6.1. The globally unique set F is found using this procedure. Repeat for each time slot at each M-CS { 1. Get all the packets from the Clients that belong to it. 2. Find at most NMax Clients that have PD[LPXP RXW RI 0 &OLHQWV LQ LWV GRPDLQ\u0011 3. Store a copy of packets from those NMax Clients in database DB1. 4. Send these NMax packets to other M-CSs (on Unicast or Multicast, depending on the configuration). 5. Similarly, receive packets from all other M-CSs and store them in database DB2. 6. Now compare the packets in DB1 and DB2 on WKH EDVLV RI DQG VHOHFW D PD[LPXP RI NMax amongst them (to form set F) that should be played out at each Client. 7. Send the NMax packets in set F to the Clients in its domain. 8. Mix these NMax audio packets in set F after linearising and send it to dumb Clients in the domain. } Algorithm 1. Selection algorithm The mechanism proposed here is also depicted on Fig. 6, where a single conference takes place between three domains. The shaded clients are the ones selected in their local domains; their audio streams will be sent to other CSs. 7. DEPLOYMENT ISSUES We now analyze deployment issues associated with conference management. How are domains to be organized to maximize the number of participants able to join? To address this, we define some useful parameters.  Let d be the number of different domains in which there are active clients in a given conference.  Let Mi be the number of active clients present in domain i ( di ≤≤1 ) in a given conference. The total number of active clients in the conference is thus ∑= = d i iMM 1 .  Let C be the maximum number of audio streams a Conference Server can handle in a packet time, also called capacity. C is set according to the processing power of the weakest CS in the conference but as it cannot be assumed that we know it a-priori, it can be set according to some minimum system requirement a machine must meet in order to take part in a conference.  Let NMax be the number of output streams a CS has to send to other CSs in remote domains (see section 6.1). We will set NMax =3 (=|F|), according to [15]. The optimization problem is now to find the value of d that maximizes the total number of clients Mi served by one CS in a domain with capacity C. We first dispose the case where the capacity is not exceeded (the existing CS is not overloaded), and then proceed to the case where there exists a need to create more CSs when a single CS is overloaded. We assume that clients are equally distributed amongst the domains, as we may not have information to assume an a-priori distribution of the clients. We can specify no more than an upper bound on the number of clients acceptable, given the number of active domains d. 7.1 Conferencing with only One Level of CSs In this subsection, we consider that we have only one CS, i.e., a unique M-CS in each domain. Thus it cannot be overloaded. We consider that the system works as outlined in section 6.1: The Clients send their audio packets to their local CS, which selects NMax streams, before sending them to other CSs. In parallel, it also receives NMax streams for every other CSs before taking a decision on which NMax streams will be selected, sent and played out at each individual clients. For system stability, any CS in the conference should be able to handle its local clients in addition to the audio packets from other domains. Clearly then, the following inequality must hold for every domain: )1( −⋅+≥ dN d M C Max (5) The limiting case of (5) (taking the equality) takes the form 2 )( dNdNCM MaxMax ⋅−⋅+= (6) To optimize d with respect to M, we set 0)(2 =+−⋅⋅= ∂ ∂ MaxMax NCdN d M (7) yielding     ⋅ + = Max Max N NC d 2 (8) ([ ]* = Rounding to nearest integer) and hence, M from (6). C d M 50 9 234 100 17 884 150 26 1950 200 34 3434 250 42 5334 300 51 7650 350 59 10384 400 67 13534 450 76 17100 500 84 21084 Table 1. Values of d and M computed for some values of C with NMax = 3. In Table 1, we give the values of d and M that were computed using (8) and (6) with NMax = 3. We see that the values of d and M, being dependent of C, are therefore based on the weakest CS. We see that there is a trade-off between M and d. We could admit more domains in the conference, but at the expense of restricting the total number of clients M in the conference. While implementing and testing the Conference Servers on a Pentium III 1.4 GHz running Windows NT, we were able to set C=300. But with the advent of faster computers (> 3 GHz), one can easily set C to higher values and determine d and M accordingly. Fig. 4 shows a contour plot and Fig. 5, a 3D-mesh showing optimized solutions for CSs of different capacities. These lead us to maximize the number of domains, and hence, to maximize the total number of clients based on the capacity of various CSs. In Fig. 4, the individual curves represent the total number of clients targeted, and we select a lower value of d, for capacity C, for targeted M to reduce traffic on WAN. Fig. 5 represents a different perspective of the same data in 3D. Fig. 4. Contour Plot of Capacity versus Optimum number of domains for various conference sizes 7.2 Conferencing with Two Levels of CSs Now considering the case where the number of clients in a particular domain is too large, i.e., d M Mi ≥ (9) one has to avoid the denial of service for new clients due to overloading of Conference Server. This problem can be solved by introducing a second level of CSs inside the given domain, as in Fig. 6. The existing M-CS creates a Slave CS (S-CS) that can handle up to C end-users and to which it transfers all its active clients. Here, the system works differently as outlined in section 6.1: The Clients send their audio packets to their local S-CS, which selects NMax streams, before sending them to a local M-CS, which will proceed in the same way, before sending NMax streams to the other domains. Each newly created S-CS must run on a separate machine. The M-CS has to create more S-CSs if the number of active clients exceeds C in the course of the conference after the transfer. With this mechanism, the M-CS will be able to create utmost     −⋅− = Max Max N dNC U )1( S-CSs, (10) as it must handle 3 (= NMax) packets for each local S-CSs and 3 (= NMax) packets from each other remote domains. We can then calculate the maximum theoretical number of active clients CUMi ⋅= in each domain as well as M, for the whole conference as CUdM ⋅⋅= . Fig. 5. 3D Plot of Capacity versus Optimum number of domains for various conference sizes Of course, one could further create a third level in the hierarchy, giving the possibility of accommodating even more clients. This may be unnecessary as the number of possible clients is large enough with two levels. 8. PERFORMANCE DISCUSSION We now analyze the performance of the algorithm presented in subsection 6.3, i.e., the one taking care of the exchange of audio packets between the different domains. Note that the packets that are transiting within the LAN take advantage of the higher capacity (generally coupled with multicast capabilities) and therefore do not require a performance analysis. Thus we have to look only at the RTP packets over the WAN, i.e., between participating M-CSs. As each M-CS from a domain will be sending only NMax out of d M packets to the other CSs ( MaxN d M >> ), the bandwidth used by the application over a WAN is upper-bounded by the following expression. The total number of audio packets transiting over the WAN for each time slot is ∑ ∑= ≠=        d i d ijj MaxN 1 ,1 which is quadratic in the number of domains (i.e., O(d2 )). However, it is independent of the total number of active clients. This would not have been the case had all packets been sent over the network in each time slot. The saving is tremendous. Yet, one may contend that sending three packets to and from all domains is a waste of resources, as most of these streams will not be selected. If just one client is active, selecting a subset of clients in that domain is unnecessary. Pessimistic and optimistic algorithms as presented in the sequel aim at reducing the traffic further by harnessing the slow varying nature of the LN. 8.1 Pessimistic algorithm Consider a scenario wherein the lowest LN (called LNt) of the three globally selected streams (set F of Section 6.1) exceeds the LN of the most dominant stream of a domain. Evidently, the chances that the next two dominant streams of that domain being selected to F in the next packet period are less. Here, we send this most dominant stream and withhold the other two. There may be an error in unique selection across all domains for one packet period only. As LN varies slowly, the error would get automatically rectified in a subsequent packet period (slot). In this algorithm, there is at least one stream in each period. The net network traffic in a packet period in the best case is )1( −⋅ dd , i.e., )( 2 dO using unicast, instead of MaxNdd ⋅−⋅ )1( . Considerable valuable bandwidth can be saved using this heuristic. The resulting traffic complexity reduces from O(d2 ) to O(d) in multicast-enabled networks. Initialize LNt = 0 at an M-CS/S-CS A. In the first time slot (packet time), each CS sends the top NMax streams (based on their LN) to all other CSs. At each M-CS/S-CS and for each packet time: B. Find the value of lowest LN of the NMax globally selected streams (set F) from the previous time slot. Set LNt with this value. C. At each CS domain, select the NMax local streams that have maximum value of LN (ToOtherCSs set). D. Select streams that have LN > LNt. IF there are >= NMax streams with LN > LNt then send top NMax to other CSs. ELSE IF there are (NMax-1) streams with LN>LNt then send top (NMax-1) plus the one lower than LNt (i.e., top NMax) to other CSs. ELSE IF there are (NMax-2) streams with LN>LNt then send top (NMax-2) plus the one lower than LNt (i.e. top (NMax -1)) to other CSs. …… ELSE IF there are NO streams with LN> LNt then send top 1 stream to other CSs. E. Packets sent in step D form DB1. Packets received from other CSs form DB2. F. For this time slot, find global NMax streams based on LN from DB1 U DB2 (set F) G. Send set F to the clients in its domain. Update LNt for the next period. Algorithm 2. Pessimistic algorithm to reduce the number of packets sent over the Internet. Fig. 6. Example of a 2-level hierarchy of Conference Servers; the shaded Clients are the one selected by the M-CS and will be sent to other domains CSs. In this algorithm the saving in traffic is at the cost of relaxing the condition of formation of globally unique set F. However, the discrepancies in selected streams at different domains remain for a short period of time depending on the transportation delay between any two domains. Even for a total delay of 400ms, for only 10 packet time slots the uniqueness is lost. This duration in a real-time interactive conversation is non-perceivable by the listener. In the case that there is a joke and every one laughs, then there would be sudden rise in the number of packets and it would be upper bounded by MaxN)d(O 2 for a short period. 8.2 Optimistic Algorithm The traffic can be reduced further. The scheme in the following algorithm (Algorithm. 3) is withholding all the streams that have less value of LN compared to the least of the three in the set F. We can find the correct and unique three streams after a few time slots depending on the transportation delay between the domains. As the packet period is of the order of 40ms, the error in the selection is unnoticeable. The number of streams on network in this case is always restricted to NMax (=3). Even without Voice Activity Detection (VAD), there will be no more than three streams in the network in the best case, thus the total traffic is constant. A sudden burst of traffic, as described in 8.1, is a particular case. These advantages are due to exploitation of the characteristics of LN. Initialize LNt = 0 at an M-CS/S-CS A. In the first time slot (packet time), each CS sends the top NMax streams (based on their LN) to all other CSs. At each M-CS/S-CS and for each packet time: B. Find the value of lowest LN of the NMax globally selected streams (set F) from the previous time slot. Set LNt with this value. C. At each CS domain, select the NMax local streams that have maximum value of LN (ToOtherCSs set) D. Select streams that have LN > LNt IF there are >= NMax streams with LN > LNt then send top NMax to other CSs. ELSE IF there are (NMax-1) streams with LN>LNt then send top (NMax-1) and see E. ELSE IF there are (NMax-2) streams with LN>LNt then send top (NMax-2) and see E. …… ELSE IF there are NO streams with LN> LNt then dont send any stream. E. Exceptions: IF the stream that was in F in the last interval belongs to this CS then select and send that stream even if its LN is now < LNt. (Note this occurs only at that CS which had the stream that was the last of the three in the previous packet period.) F. Packets sent in step D and E form DB1. Packets received from other CSs form DB2. G. For this time slot, find global NMax streams based on LN from DB1 U DB2 (set F). H. Send set F to the clients in its domain. Update LNt for the next period. Algorithm 3. Optimistic algorithm to reduce the number of packets sent over the Internet Furthermore, when VAD is used [13], it would further reduce the traffic by sending the header part of the RTP packet only and not the whole packet, thus in order to keep updating the LN across. The traffic here in this case is O(NMax) for multicast and O(d) for unicast. We see that the above algorithms save bandwidth and computation at each CS, and leads to a scalable architecture with multiple CSs mainly because clients are grouped in domains. The necessary bandwidth is not dependent on the total number of active clients. As the CS always chooses the best three clients out of all the clients assigned to it in the domain, addition of new clients to the existing conference will not cause any scalability problem. 8.3 Availability of Multicasting In the architecture that has been proposed, no assumption was made about the availability of multicasting support from the network. The traffic will be further reduced if multicasting is available over WAN. It is simple to show that the order of traffic would tend to become O(d) from O(d2 ). This is an approximation as saving in multicasting depends also on the topology. The analysis was done for the case wherein multicast is not available (a realistic assumption in todays Internet). The advantage of this set up is that we can use it even if multicasting is partially available. We can instruct CSs during the set-up phase to send unicast packets to those CSs that cannot receive multicast packets whereas CSs on multicast enabled routers can exchange packets on a multicast address. The data structures and conference objects inside a CS is given in [14]. Fig. 7. User Interface for setting the weight for NMax audio streams (setting Self-bar to zero avoids echo). 8.4 Quality Improvement The observed improvement in the perceived quality of the conference service is due to: (1) limiting the number of concurrent speakers to a low number such as three. Generally, in a conference if more than two participants speak the intelligibility is lost. The conversational analysis demonstrates that there would be a repair mechanism [15] in such a case. (2) Delay: The audio stream between any two clients will pass through at most two CSs thus reducing the end-to-end delay. For a large conference there might be three CSs however, one hop is within the domain incurring negligible delay. (3) As the streams are mixed only at the clients, there can be a customized mix of the streams. The individual tuning of mixing with weights the spatialism is preserved. Fig. 7 shows the user interface for the same. The echo when self-stream is selected can be avoided by reducing the weight. Nonetheless, feedback helps in reassuring speaker that he/she is heard by all. 9. CONCLUSION In this paper, we have presented a discussion on a voice-only virtual conferencing environment. We have argued that the distributed nature of deployment here makes it scalable. Interactivity is achieved by adapting a recent stream selection scheme based on Loudness Number. Additionally, we incorporate a result from a more recent work [15] where the sufficiency of three simultaneous speakers has been demonstrated. Thus, there is significantly effective utilization of bandwidth. A mixed stream is played out at each client; each client may choose to have a customized mix since mixing is done at the local terminal of each client. These render impromptu speech in a virtual teleconference over VoIP a reality, as in a real face-to-face conference. Compatibility is assured thanks to the use of SIP, the most soughtafter signaling protocol. To ensure a satisfying performance, we do not demand the availability of multicast, but use it if and when available. The traffic in the WAN (Internet) is upper-bounded by the square of the number of domains, -- further reduced by using heuristic algorithms -- which is far below the total number of clients in the conference. This is due to the use of a Conference Server local to each domain. VAD techniques help further traffic reduction. Using SIP standard for signaling makes this solution highly interoperable. We have implemented a CS application on a campus-wide network. We believe this new generation of virtual conferencing environments will gain more popularity in the future as their ease of deployment is assured thanks to readily available technologies and scalable frameworks. 10. REFERENCES [1] L Aguilar et al., Architecture for a Multimedia Teleconferencing System, in Proceedings of the ACM SIGCOMM, Aug 1986, pp. 126-136. [2] Carsten Bormann, Joerg Ott et al., Simple Conference Control Protocol, Internet Draft, Dec. 1996. [3] M. Decina and V. Trecordi, Voice over Internet Protocol and Human Assisted E-Commerce, IEEE Comm. Magazine, Sept. 1999, pp. 64-67. [4] Eckehard Doerry, An Empirical Comparison of Copresent and Technologically-mediated Interaction based on Communicative Breakdown, Phd Thesis, Graduate School of the University of Oregon, 1995. [5] H. P. Dommel and J.J. Garcia-Luna-Aceves, Floor Control for Multimedia Conferencing and Collaboration, J. Multimedia Systems, Vol. 5, No. 1, January 1997, pp. 23-38. [6] Amitava Dutta-Roy, Virtual Meetings with desktop conferencing, IEEE Spectrum, July 1998, pp. 47-56. [7] M. Handley and V. Jacobson, SDP: Session Description Protocol, RFC 2327, IETF, April 1998. [8] M. Handley, J. Crowcroft et al., Very large conferences on the Internet: the Internet multimedia conferencing architecture, Journal of Computer Networks, vol. 31, No. 3, Feb 1999, pp. 191-204. [9] ITU-T Rec. H.323, Packet based Multimedia Communications Systems, vol. 2, 1998. [10] P. Koskelainen, H. Schulzrinne and X. Wu, A SIP-based Conference Control Framework, NOSSDAV02, May 2002, pp. 53-61. [11] R Venkatesha Prasad et al., Control Protocol for VoIP Audio Conferencing Support, International Conference on Advanced Communication Technology, Mu-Ju, South Korea, Feb 2001, pp. 419-424. [12] R Venkatesha Prasad et al., Automatic Addition and Deletion of Clients in VoIP Conferencing, 6th IEEE Symposium on Computers and Communications, July 2001, Hammamet, Tunisia, pp. 386-390. [13] R Venkatesha Prasad, H S Jamadagni, Abjijeet, et al Comparison of Voice Activity Detection Algorithms, 7th IEEE Symposium on Computers and Communications. July 2002, Sicily, Italy, pp. 530-535. [14] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, A Scalable Distributed VoIP Conferencing using SIP, Proc. of the 8th IEEE Symposium on Computers and Communications, Antalya, Turkey, June 2003. [15] R Venkatesha Prasad, H S Jamadagni and H N Shankar, On Problem of Specifying Number of Floors in a Voice Only Conference, To appear in IEEE ITRE 2003. [16] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, A Proposal for Distributed Conferencing on SIP using Conference Servers, To appear in the Proc. of MMNS 2003, Belfast, UK, September 2003. [17] R. Venkatesha Prasad, H.S. Jamadagni, J. Kuri, R.S. Varchas, A Distributed VoIP Conferencing Support Using Loudness Number, Tech. Rep. TR-CEDT-TE-03-01 [18] M. Radenkovic et al, Scaleable and Adaptable Audio Service for Supporting Collaborative Work and Entertainment over the Internet, SSGRR 2002, LAquila, Italy, Jan. 2002. [19] M. Radenkovic, C. Greenhalgh, S. Benford, Deployment Issues for Multi-User Audio Support in CVEs, ACM VRST 2002, Nov. 2002, pp. 179-185. [20] Srinivas Ramanathan, P. Venkata Rangan, Harrick M. Vin, Designing Communication Architectures for Interorganizational Multimedia Collaboration, Journal of Organizational Computing, 2 (3&4), pp.277-302, 1992. [21] A. B. Roach, Session Initiation Protocol (SIP)-Specific Event Notification, RFC 3265, IETF, June 2002. [22] J. Rosenberg, H. Schulzrinne et al., SIP: Session Initiation Protocol, RFC 3261, IETF, June 2002. [23] J. Rosenberg, H. Schulzrinne, Models for Multy Party Conferencing in SIP, Internet Draft, IETF, July 2002. [24] H. Schulzrinne et al., RTP: a transport protocol for realtime applications, RFC 1889, IETF, Jan 1996. [25] Lisa R. Silverman, Coming of Age: Conferencing Solutions Cut Corporate Costs, White Paper, www.imcca.org/wpcomingofage.asp [26] Kundan Singh, Gautam Nair and Henning Schulzrinne, Centralized Conferencing using SIP, Proceedings of the 2nd IP-Telephony Workshop (IPTel), April 2001. [27] D. Thaler, M. Handley and D. Estrin, The Internet Multicast Address Allocation Architecture, RFC 2908, IETF, Sept. 2000.",
    "original_translation": "Problemas de implementación de un sistema de conferencias VoIP en un entorno de conferencias virtuales. R. Venkatesha Prasad y Richard Hurni. Jamadagni iii H.N. Shankar iv i, iii Centro de Diseño y Tecnología Electrónica Instituto Indio de Ciencias, Bangalore, India Teléfono: +91 80 360 0810 i, iii {vprasad, hsjam}@cedt.iisc.ernet.in ii hurni@ieee.org iv hn_shankar@yahoo.com RESUMEN Los servicios en tiempo real han sido principalmente respaldados en redes conmutadas por circuitos. Las tendencias recientes favorecen los servicios trasladados a redes de conmutación de paquetes. Para las conferencias de audio, necesitamos considerar muchos aspectos, como la escalabilidad, la calidad de la aplicación de conferencia, el control de piso y la carga en los clientes/servidores, por nombrar algunos. En este documento, describimos un marco de servicio de audio diseñado para proporcionar un Entorno de Conferencias Virtuales (ECV). El sistema está diseñado para dar cabida a un gran número de usuarios finales hablando al mismo tiempo y distribuidos por Internet. El marco se basa en Servidores de Conferencia [14], que facilitan el manejo del audio, mientras que explotamos las capacidades de SIP para propósitos de señalización. La selección de clientes se basa en un reciente cuantificador llamado Número de Volumen que ayuda a imitar una conferencia física cara a cara. Nos ocupamos de los problemas de implementación de la solución propuesta tanto en términos de escalabilidad como de interactividad, mientras explicamos las técnicas que utilizamos para reducir el tráfico. Hemos implementado una aplicación de Servidor de Conferencias (CS) en una red de campus en nuestro Instituto. Categorías y Descriptores de Temas C.2.4 [Redes de Computadoras y Comunicación]: Sistemas Distribuidos - Cliente/Servidor, aplicaciones distribuidas. Términos generales Algoritmos, Rendimiento, Diseño, Teoría. 1. INTRODUCCIÓN El Internet de hoy utiliza el conjunto de protocolos IP que fue diseñado principalmente para el transporte de datos y proporciona la entrega de datos con el mejor esfuerzo. Las restricciones de retraso y las características diferencian los datos tradicionales por un lado, de las aplicaciones de voz y video por el otro. Por lo tanto, a medida que se implementan aplicaciones de voz y video cada vez más sensibles al tiempo en Internet, se pone de manifiesto la insuficiencia de la red. Además, buscamos trasladar servicios telefónicos a través de Internet. Entre ellos, la instalación de conferencia virtual (teleconferencia) está a la vanguardia. Las videoconferencias y conferencias de audio en Internet son populares por las varias ventajas que poseen. Claramente, el ancho de banda necesario para una videoconferencia a través de Internet aumenta rápidamente con el número de participantes; reducir el ancho de banda sin comprometer la calidad del audio es un desafío en la telefonía por Internet. Los problemas críticos adicionales son: (a) retraso de paquetes, (b) eco, (c) mezcla de audio de clientes seleccionados, (d) selección automática de clientes para participar en la conferencia, (e) reproducción de audio mezclado para cada cliente, (f) manejo de clientes que no son capaces de mezclar flujos de audio (estos clientes se conocen como clientes tontos), y (g) decidir el número de clientes activos simultáneamente en la conferencia sin comprometer la calidad de voz. Si bien todos los requisitos anteriores son desde el punto de vista tecnológico, la perspectiva de los usuarios y las interacciones también son factores esenciales. Hay mucha discusión entre la comunidad de HCI y CSCW sobre el uso de la Etnometodología para el diseño de aplicaciones de CSCW. El enfoque básico es proporcionar un ancho de banda más amplio, más instalaciones y mecanismos de control más avanzados, con miras a una mejor calidad de interacción. Este enfoque ignora la utilidad funcional del entorno que se utiliza para la colaboración. Eckehard Doerry [4] critica este enfoque diciendo que pone la forma antes que la función. Por lo tanto, la necesidad es adoptar un enfoque que considere ambos aspectos: el técnico y el funcional. En cuanto al aspecto funcional, nos referimos a [15] donde se ha tratado en cierto detalle. En este trabajo, no discutimos la videoconferencia; su inclusión no beneficia significativamente la calidad de la conferencia [4]. Nuestro enfoque está en entornos de audio virtuales. Primero describimos los desafíos encontrados en las conferencias de audio virtuales. Luego investigamos las motivaciones seguidas por la literatura relevante. En la Sección 5, explicamos la arquitectura de nuestro sistema. La sección 6 comprende la descripción de los diversos algoritmos utilizados en nuestra configuración. Abordamos problemas de implementación. Una discusión sobre el Instituto Federal Suizo de Tecnología, Lausana. Antiguo visitante en CEDT. PESIT y NIAS, Bangalore, India. El rendimiento sigue. Concluimos teniendo en cuenta algunos problemas de implementación. 2. DESAFÍOS EN LA VIDEOCONFERENCIA VoIP Surgen muchos desafíos al construir una aplicación VoIP. Lo siguiente es de particular preocupación en el proceso: • Facilidad de uso: la conferencia debe ser sencilla; los usuarios no necesitan experiencia en el dominio. La gestión (adición/eliminación) de clientes y servidores debe ser sencilla. El desarrollo de aplicaciones no debe presuponer características específicas del sistema subyacente o de las capas de red. La facilidad de uso puede incluir el aprovechamiento de tecnologías fácilmente disponibles, técnicamente factibles y económicamente viables. • Escalabilidad: Las conferencias deben parecer ininterrumpidas bajo cargas pesadas, es decir, cuando se agregan muchos usuarios adicionales. El tráfico en la WAN no debería aumentar apreciablemente con el número total de clientes; de lo contrario, esto podría provocar congestión. Por lo tanto, se necesita un medio para regular el tráfico al mínimo para este tipo de aplicaciones en tiempo real. • Interactividad: En Entornos de Conferencias Virtuales (ECVs), pretendemos una aplicación de conferencias cara a cara que imite una conferencia real, donde los participantes más vocales invitan la atención. El intercambio de turnos en la ocupación del espacio por parte de los participantes debe adaptarse con gracia para lograr una transición natural. • Estandarización: La solución debe cumplir con los estándares establecidos para lograr interoperabilidad y aceptación entre pares. Los requisitos anteriores se colocan en la perspectiva de las observaciones realizadas en trabajos anteriores (véase Secciones 3 y 4) y guiarán el diseño del VCE. 3. La motivación Ramanathan y Rangan [20] han estudiado en detalle las configuraciones arquitectónicas comparando muchos esquemas de arquitectura de conferencias teniendo en cuenta la demora de red y los requisitos de computación para la mezcla. La división funcional y el diseño de arquitectura orientada a objetos que ayudan en la implementación se presentan en [1]. Un resumen de muchos temas relacionados con el apoyo a una conferencia grande se aborda en [8]. H. P. Dommel [5] y muchos otros destacan el control de piso como otro aspecto fundamental a tener en cuenta en el diseño de una herramienta de conferencias. Los protocolos de control de conferencias fuertemente acoplados en Internet pertenecen a la familia ITU-T H.323 [9]; sin embargo, están principalmente diseñados para conferencias pequeñas. El último borrador del IETF de Rosenberg y Schulzrinne [23] discute modelos de conferencia con SIP [22] en el fondo. Los aspectos de implementación para la conferencia SIP centralizada se informan en [26]. Un nuevo enfoque llamado mezcla parcial por Radenkovic [18] permite que flujos mezclados y no mezclados coexistan. En todas las propuestas anteriores, si bien hay algunas sugerencias muy útiles, comparten una o más de las siguientes limitaciones: • En una conferencia de audio, no es necesario mezclar los flujos de todos los clientes. De hecho, mezclar muchas corrientes arbitrarias [24] de clientes degrada la calidad de la conferencia debido a la reducción en el volumen (aspecto espacial del habla). El número de flujos mezclados varía dinámicamente dependiendo del número de participantes activos. Esto provocaría fluctuaciones en el volumen de cada participante individual, causando una degradación severa en la calidad. La mezcla personalizada de flujos no es posible cuando hay muchos clientes activos. Existe un umbral en el número de oradores simultáneos por encima del cual aumentar el número de oradores se vuelve contraproducente para la calidad de la conferencia. La fijación del número máximo de hablantes simultáneos se aborda en un trabajo reciente [15] utilizando la Etnometodología, y se postula que es tres. Por lo tanto, es recomendable respetar esa restricción. • No puede haber muchos mezcladores intermedios (similarmente, Servidores de Conferencia como en [10]) en etapas como en [20] porque provoca un retraso desmedido al aumentar el número de saltos y no es escalable con la interactividad como enfoque. • El Control de Piso para una conferencia de audio (incluso de video) con instrucciones explícitas de toma de turnos para los participantes convierte la conferencia en esencia en un asunto de un orador a la vez, no en una en vivo y libre de interrupciones. De esta manera, la conferencia se vuelve notablemente artificial y su calidad se degrada. Schulzrinne et al. [24], asumen que solo un participante está hablando en un momento dado. En este caso, si las aplicaciones se implementan con cierto control [5], el servicio se vuelve asfixiante para los usuarios. • La mezcla parcial [18] tiene un problema similar al de la mezcla cuando se mezclan más flujos. Además, en [18], para permitir el discurso improvisado, la mezcla no se realiza cuando la red puede soportar altos requisitos de ancho de banda para enviar/recibir todas las transmisiones, pero es innecesaria [15]. • Para conferencias grandes [23, 10] una conferencia centralizada no puede escalar. Con la multidifusión, los clientes tendrán que analizar muchos flujos y el tráfico en la red de los clientes aumenta innecesariamente. Evidentemente, se abordan diferentes problemas particulares, todos los cuales son un subconjunto de los requisitos (definidos en [14] y [16]) para el soporte de conferencias de VoIP. Por lo tanto, es necesario abordar la conferencia en su totalidad teniendo en cuenta todos sus requisitos de manera simultánea. Con este objetivo, el sistema de conferencias VoIP que proponemos está diseñado para ser escalable e interactivo. Hacemos uso del Número de Sonoridad para implementar el control de volumen. Esto permite a un participante entrar libremente en el modo de hablar para interrumpir al orador actual como en una reunión natural cara a cara. Un límite superior en el número de pisos (es decir, el número de oradores permitidos para hablar al mismo tiempo) se fija utilizando una conjetura propuesta en [15]. El trabajo presentado aquí es una continuación de nuestros estudios sobre conferencias basadas en el Protocolo de Inicio de Sesión en [14] y [16]. SIP, definido en [22], es ahora el estándar más popular para implementación de VoIP y ha sido elegido por su fortaleza, facilidad de uso, extensibilidad y compatibilidad. Esta es la razón por la cual estará en el trasfondo de todos los mensajes de control que surgirán implícitamente entre las entidades en nuestra arquitectura. Los mensajes actuales están descritos en [16] y, como tal, no presentamos una descripción completa de ellos aquí. 4. TRABAJO RELACIONADO El estándar SIP definido en el RFC 3261 [22] y en extensiones posteriores como [21] no ofrece servicios de control de conferencias como control de piso o votación y no prescribe cómo debe ser gestionada una conferencia. Sin embargo, SIP se puede utilizar para iniciar una sesión que utilice algún otro protocolo de control de conferencias. La especificación central de SIP soporta muchos modelos para conferencias [26, 23]. En los modelos basados en servidor, un servidor mezcla flujos de medios, mientras que en una conferencia sin servidor, la mezcla se realiza en los sistemas finales. SDP [7] se puede utilizar para definir las capacidades de los medios y proporcionar otra información sobre la conferencia. Ahora consideraremos algunos modelos de conferencia en SIP que han sido propuestos recientemente [23]. Primero, veamos los modelos sin servidor. En la mezcla de extremos del sistema, solo un cliente (SIP UA) maneja la señalización y la mezcla de medios para todos los demás, lo cual claramente no es escalable y causa problemas cuando ese cliente en particular abandona la conferencia. En el modelo de Usuarios que se unen, un árbol crece, ya que cada parte invitada constituye una nueva rama en el camino de distribución. Esto conduce a un número creciente de saltos para las hojas remotas y no es escalable. Otra opción sería utilizar la multidifusión para las videoconferencias, pero actualmente la multidifusión no está habilitada en Internet y solo es posible en una LAN. Entre los modelos basados en servidor, en una conferencia de marcado, los UAs se conectan a un servidor central que maneja todas las mezclas. Este modelo no es escalable ya que está limitado por la potencia de procesamiento del servidor y el ancho de banda de la red. Las conferencias centralizadas ad hoc y los servidores de conferencias de marcado tienen mecanismos y problemas similares. Los modelos híbridos que involucran señalización centralizada y medios distribuidos, con estos últimos utilizando unicast o multicast, plantean problemas de escalabilidad como antes. Sin embargo, una ventaja es que el control de la conferencia puede ser una solución de terceros. La Mezcla Parcial Distribuida, presentada en [18], propone que en caso de limitación de ancho de banda, algunos flujos se mezclan y otros no, manteniendo la interactividad intacta. La pérdida de espacialidad cuando se mezclan y el aumento del ancho de banda cuando no lo hacen son problemas abiertos. Un estudio relacionado [19] del mismo autor propone una arquitectura de conferencias para Entornos Virtuales Colaborativos (CVEs) pero no proporciona el enfoque de escalabilidad sin la disponibilidad de la multidifusión. Teniendo en cuenta las limitaciones de los sistemas de conferencias propuestos, detallaremos ahora nuestra propuesta. 5. ARQUITECTURA DEL SISTEMA Esta sección está dedicada a la descripción de la arquitectura del sistema propuesto. Sin embargo, dado que este documento constituye la continuación de nuestro trabajo iniciado en [14] y ampliado en [16], no presentaremos aquí todos los detalles sobre las entidades propuestas e invitamos a los lectores a consultar los documentos mencionados anteriormente para obtener una descripción completa y detallada. Primero, no restringimos nuestro sistema de conferencias para funcionar solo en conferencias pequeñas, sino en grandes VCEs de audio que tienen cientos (o incluso miles) de usuarios a través de una Red de Área Amplia (WAN) como Internet. Esta perspectiva se deriva de una evaluación de que los VCEs ganarán importancia en el futuro, ya que las conferencias de audio interactivas serán más populares debido a la difusión de la cultura mediática en todo el mundo. Dos aspectos deben ser atendidos al construir un sistema de conferencias VoIP: (i) el front-end, que consiste en el programa de aplicación que se ejecuta en las computadoras de los usuarios finales y (ii) el back-end que proporciona otros programas de aplicación que facilitan las conferencias y la conferencia. Los usuarios participantes se agrupan en varios dominios. Estos dominios son Redes de Área Local (LAN), como redes corporativas o educativas. Esta suposición distribuida requiere soluciones de control y manejo de medios distribuidos, ya que los sistemas centralizados no serían escalables para conferencias tan grandes (ver Sección 4). Más explícitamente, en cada dominio, podemos identificar varios componentes lógicos relevantes de una instalación de conferencias (Fig. 1): Un número arbitrario de usuarios finales (clientes) que pueden participar en como máximo una conferencia de audio a la vez. Cada usuario es la Fig. 1. Ejemplo de conferencia: 3 dominios que contienen las entidades necesarias para que la conferencia pueda tener lugar. Incluidas en un único dominio en un instante dado, pero pueden moverse de un dominio a otro (nomadismo). En nuestro entorno de conferencias, estos clientes son Agentes de Usuario SIP (SIP UAs) regulares, según se define en [22], para lograr interoperabilidad con otros sistemas compatibles con SIP existentes. Estos clientes no son conscientes del entorno complejo que respalda la conferencia, lo cual se destaca a continuación. Un servidor SIP (SIPS) por dominio, encargándose de todos los aspectos de señalización de la conferencia (clientes que se unen, salen, etc.) [16]. En particular, se considera como una implementación física que abarca diferentes roles lógicos, a saber, un Servidor Proxy SIP, un Servidor Registrador SIP, un Servidor de Redirección SIP y un SIP B2BUA (Agente de Usuario de Vuelta a Vuelta) [22]. Esta implementación física permite el manejo de mensajes SIP entrantes/salientes por una u otra entidad lógica según sea necesario. SIPS está encargado de mantener un servicio total y tiene muchas ventajas, como (a) funciona como una entidad centralizada que puede hacer un seguimiento de las actividades de los UAs en una conferencia; (b) puede realizar todo el cambio para proporcionar funciones de PBX; (c) puede localizar a los UAs e invitarlos a una conferencia; (d) también puede encargarse de la facturación. Los SIPS en diferentes dominios se comunican entre sí utilizando mensajes SIP como se describe en [16]. Si la carga en un SIPS particular es demasiado pesada, puede crear otro SIPS en el mismo dominio para que la carga se comparta. Se crea un Servidor de Conferencias Maestro (M-CS) (simplemente un Servidor de Conferencias (CS)) para cada conferencia por el SIPS local cuando una conferencia comienza. Este servidor se utilizará para manejar paquetes de medios para los clientes del dominio. Su mecanismo será descrito en la siguiente sección. El M-CS podrá crear una jerarquía de CSs dentro de un dominio agregando uno o más CSs esclavos (S-CSs) para dar cabida a todos los clientes activos y prevenir su propia saturación al mismo tiempo. Veremos este mecanismo con cierto detalle en la secuela. Las entidades descritas aquí son exhaustivas y se ajustan a la filosofía del SIP. Por lo tanto, el uso de SIP hace que esta arquitectura sea más útil e interoperable con cualquier otro cliente o servidor SIP. PROBLEMAS ALGORÍTMICOS 6.1 Seleccionar los flujos similares a SipConf en [27], un Servidor de Conferencias (CS) [17] tiene la función de soportar la conferencia; es responsable de manejar los flujos de audio utilizando RTP. También puede duplicarse para convertir formatos de transmisión de audio para un cliente dado si es necesario y puede funcionar como Traductores/Mezcladores de la especificación RTP detrás de cortafuegos. Hemos basado el diseño de nuestro CS en el Procesador Multipunto (MP) H.323 [9]. En resumen, el MP recibe flujos de audio de los puntos finales involucrados en una conferencia multipunto centralizada o híbrida, los procesa y los devuelve a los puntos finales. Un procesador de señales de audio prepara N salidas de audio NMax a partir de M flujos de entrada después de la selección, mezcla o ambas. La mezcla de audio requiere decodificar el audio de entrada a señales lineales (PCM o analógicas), realizar una combinación lineal de las señales y volver a codificar el resultado en un formato de audio apropiado. El procesador de señales puede eliminar o atenuar algunas de las señales de entrada para reducir el ruido y los componentes no deseados. Fig. 2. \n\nFig. 2. El diagrama esquemático de un CS. La limitación de H.323 es que no aborda la escalabilidad de una conferencia. La arquitectura propone una topología en cascada o en cadena de margaritas [10], la cual se puede demostrar que no puede escalar para una conferencia grande. Un CS atiende a muchos clientes en la misma conferencia. Por lo tanto, solo maneja una conferencia a la vez. Varios CS pueden coexistir en un dominio, como cuando hay varias conferencias en curso. Los mensajes relacionados con la señalización de los CSs se tratan en [11]. El funcionamiento de un CS se ilustra en la Fig. 2: Para cada intervalo de mezcla, CS 1 elige los mejores NMax paquetes de audio de los M1 (utilizando un criterio denominado Número de Volumen, descrito en la siguiente subsección). Puede posiblemente recibir y enviar estos a CSs 2 a P. El conjunto de paquetes enviados se denota como AotrosCSs. En el mismo intervalo de mezcla, también recibe los mejores paquetes de audio NMax (de un posible M2) de CS 2, de manera similar a los mejores NMax (de un posible MP) de CS P. Para simplificar, ignoramos el retardo de propagación entre los CSs, que de hecho se puede tener en cuenta; está más allá del alcance de esta presentación. El conjunto de paquetes recibidos se denota como FromOtherCSs. Finalmente, selecciona los mejores paquetes NMax del conjunto {ToOtherCSs unión FromOtherCSs} y envía estos paquetes a su propio grupo. Se puede observar que el conjunto {ToOtherCSs unión FromOtherCSs} es el mismo en todos los CSs. Esto garantiza que cualquier cliente en la conferencia finalmente reciba el mismo conjunto de paquetes para mezclar. Por lo tanto, todos los clientes obtienen una vista común de la conferencia. De manera similar, para cada intervalo de tiempo (tiempo de paquete), se selecciona un subconjunto, F, de todos los clientes (utilizando el mismo criterio) del conjunto de paquetes de todos los otros CS más los NMax clientes seleccionados localmente. Sus paquetes se mezclan y se reproducen en los clientes. Según [15], la cardinalidad de F, |F| es NMax y está fijada en tres. En nuestra configuración de conferencias, la selección la realiza el Servidor Maestro de Conferencias (M-CS), que interviene exclusivamente en el manejo de medios. Ten en cuenta que aunque la especificación de SIP permite la comunicación directa de medios de usuario a usuario en una llamada uno a uno, también es posible utilizar el Servidor de Conferencias para llamadas de dos partes, especialmente porque es entonces más funcional crear una conferencia real agregando un tercero y posteriormente más participantes. Existen casos en los que la capacidad de procesamiento de un M-CS se ve superada, ya que puede tener demasiados paquetes, tanto de dominios locales como de dominios remotos, para procesar. En ese caso, el M-CS creará uno o varios S-CS (Fig. 6) y transferirá a sus propios clientes, así como a los nuevos clientes, a ellos. En esta configuración, el algoritmo descrito anteriormente se modificará ligeramente, ya que los paquetes de audio irán de los clientes a su S-CS dedicado, que seleccionará NMax paquetes para enviar al M-CS local, que luego seleccionará NMax paquetes de todos sus S-CS en el dominio antes de enviarlos a los dominios remotos. Los paquetes entrantes de otros dominios serán recibidos por el M-CS, se seleccionarán NMax de ellos y se enviarán directamente a los clientes del dominio, evitando los SCSs. Este cambio implica que existen como máximo tres entidades intermedias para cada paquete de audio, en lugar de dos en la configuración convencional. Dado que el salto adicional ocurre dentro de la LAN que se supone tiene una conectividad de alta velocidad, consideramos que no debería impedirnos usar esta jerarquía de CS cuando sea necesario hacerlo. 6.2 Número de Sonoridad (LN) Una pregunta básica que debe responder el CS es la siguiente. En un intervalo de mezcla, ¿cómo debería elegir NMax paquetes de los M que podría recibir? Una forma es clasificar los paquetes M recibidos según sus energías y elegir los NMax mejores. Sin embargo, esto suele considerarse insuficiente porque las fluctuaciones aleatorias en las energías de los paquetes pueden provocar una mala calidad de audio. Esto indica la necesidad de una métrica diferente de meras energías individuales de paquetes. El medidor debe tener las siguientes características [12]: • Un hablante (ocupante del suelo) no debe ser interrumpido por un pico en la energía del paquete de otro hablante. Esto implica que la historia del discurso de un hablante debería tener cierto peso. Esto se suele llamar Persistencia o Resaca. • Un participante que quiera interrumpir a un orador tendrá que (i) hablar en voz alta y (ii) seguir intentándolo por un tiempo breve. En una conferencia presencial, el lenguaje corporal a menudo indica la intención de interrumpir. Pero en una conferencia a ciegas en discusión, la intención de un participante de interrumpir puede ser transmitida de manera efectiva a través de LN. Se debe garantizar un mecanismo de control de piso habilitado para cortar a un orador de manera contundente. Estos requisitos son cumplidos por el Número de Volumen [12], que cambia suavemente con el tiempo para que la selección (adición y eliminación) de clientes para la conferencia sea elegante. LN (= ) es una función de la amplitud de la corriente de audio actual más la actividad y amplitud en una ventana específica en el pasado. Fig. 3. \n\nFig. 3. Las diferentes ventanas utilizadas para el cálculo de LN se actualizan en una base de paquete por paquete. El parámetro básico utilizado aquí es la amplitud del paquete, que se calcula como la raíz cuadrada de la media cuadrática (rms) de las energías en las muestras de audio de un paquete, y se denota como XK. Tres ventanas están definidas como se muestra en la Fig. 3. El nivel de amplitud actual del altavoz se encuentra calculando el promedio móvil de la amplitud del paquete (XK) dentro de una ventana llamada Ventana de Pasado Reciente, que va desde el instante presente hasta algún momento pasado. La actividad pasada del hablante se encuentra calculando el promedio móvil de la amplitud del paquete (XK) dentro de una ventana llamada Ventana de Pasado Lejano, que comienza en el punto donde termina la ventana de Pasado Reciente y se extiende hacia atrás en el pasado por un intervalo predefinido. La actividad del hablante en el pasado se encuentra con una ventana llamada Horizonte de Actividad, que abarca la ventana del pasado reciente, así como la ventana del pasado lejano y más allá si es necesario. Aunque la contribución del horizonte de actividad parece similar a la contribución de las ventanas del pasado reciente y pasado lejano, la actividad pasada se calcula de manera diferente a partir de la ventana del horizonte de actividad. Define las cantidades durante estos tres intervalos como L1, L2 y L3. L1 cuantifica la actividad de habla del Pasado Reciente, L2 la actividad de habla del Pasado Lejano y L3 proporciona un número correspondiente a la actividad de habla en la ventana del Horizonte de Actividad, cuantificando qué tan activo estuvo el hablante en los últimos intervalos. L3 produce una cantidad que es proporcional a la fracción de paquetes que tienen energías por encima de un umbral predefinido (Ec. 3). El umbral es invariable entre clientes. ∑ +− = = 1 1 1 RPP P Wt tK K RP X W L (1) ∑ +−− −= = 1 2 1 DPRPP RPP WWt WtK K DP X W L (2) ∑ +− = ≥= 1 }{3 * 1 AHP P K Wt tK X AH I W L θθ (3) Donde siI KX 1}{ =≥θ θ≥KX = de lo contrario,0 El umbral es una constante. Se establece en el 10-20 por ciento de la amplitud de las muestras de voz de un paquete en nuestra implementación aquí. El número de intensidad λ para el instante de tiempo presente (o el paquete presente) se calcula como, 332211 *L*L*L αααλ ++= (4) Aquí 1, 2 y 3 son elegidos de tal manera que: 0< 1, 2 y 3=1- 1) Aquí, 1 es el peso dado al habla del pasado reciente, 2 es el peso dado al habla del pasado lejano y 3 es el peso dado a la actividad del habla en la ventana de horizonte de actividad considerada. 6.3 Seguridad, Vida y Equidad El parámetro λ tiene un efecto significativo en la evaluación de la ventana. Después de que un conferenciante se queda en silencio, otro puede tomar la palabra. Además, dado que hay más de un canal, la interrupción está habilitada. Un conferenciante ruidoso es más probable que sea escuchado debido a un λ elevado. Esto garantiza equidad para todos los conferenciantes. Después de todo, incluso en una conferencia presencial, un orador más vocal capta una atención especial. Todas estas características deseables están integradas en la LN. Una discusión exhaustiva sobre la selección de los diversos parámetros y la dinámica de LN están fuera del alcance de este documento. 6.4 Algoritmo de selección utilizando LN Siguiendo los desarrollos en las subsecciones 6.1 y 6.2, presentamos el algoritmo simple que se ejecuta en cada Servidor Maestro-Conferencia (Algoritmo 1). Este algoritmo se basa en las discusiones de la sección 6.1. El conjunto F, único a nivel mundial, se encuentra utilizando este procedimiento. Repetir para cada intervalo de tiempo en cada M-CS { 1. Obtener todos los paquetes de los clientes que le pertenecen. 2. Encuentra como máximo NMax clientes que tengan un PD[LPXP RXW RI 0 &OLHQWV LQ LWV GRPDLQ\u0011 3. Almacene una copia de los paquetes de esos clientes NMax en la base de datos DB1. Envía estos paquetes NMax a otros M-CSs (en Unicast o Multicast, dependiendo de la configuración). 5. De igual manera, recibir paquetes de todos los demás M-CSs y almacenarlos en la base de datos DB2. 6. Ahora compara los paquetes en DB1 y DB2 en WKH EDVLV RI DQG VHOHFW D PD[LPXP RI NMax entre ellos (para formar el conjunto F) que deberían ser reproducidos en cada Cliente. 7. Enviar los paquetes NMax en el conjunto F a los Clientes en su dominio. 8. Mezcla estos paquetes de audio NMax en el conjunto F después de linearizarlos y envíalos a Clientes sin capacidad en el dominio. Algoritmo 1. Algoritmo de selección El mecanismo propuesto aquí también se muestra en la Fig. 6, donde tiene lugar una única conferencia entre tres dominios. Los clientes sombreados son los seleccionados en sus dominios locales; sus flujos de audio serán enviados a otros CSs. 7. PROBLEMAS DE DESPLIEGUE Ahora analizamos los problemas de despliegue asociados con la gestión de conferencias. ¿Cómo deben organizarse los dominios para maximizar el número de participantes que pueden unirse? Para abordar esto, definimos algunos parámetros útiles.  Sea d el número de dominios diferentes en los que hay clientes activos en una conferencia dada.  Sea Mi el número de clientes activos presentes en el dominio i (di ≤≤1) en una conferencia dada. El número total de clientes activos en la conferencia es por lo tanto ∑= = d i iMM 1. Sea C el número máximo de flujos de audio que un Servidor de Conferencias puede manejar en un tiempo de paquete, también llamado capacidad. C se establece de acuerdo con la potencia de procesamiento del CS más débil en la conferencia, pero como no se puede asumir que lo conocemos de antemano, se puede establecer de acuerdo con algún requisito mínimo del sistema que una máquina debe cumplir para participar en una conferencia. Deje que NMax sea el número de flujos de salida que un CS debe enviar a otros CS en dominios remotos (ver sección 6.1). Estableceremos NMax = 3 (=|F|), según [15]. El problema de optimización consiste en encontrar el valor de d que maximiza el número total de clientes Mi atendidos por un CS en un dominio con capacidad C. Primero consideramos el caso en el que la capacidad no es excedida (el CS existente no está sobrecargado), y luego procedemos al caso en el que es necesario crear más CS cuando un CS único está sobrecargado. Suponemos que los clientes están distribuidos de manera equitativa entre los dominios, ya que no tenemos información para asumir una distribución a priori de los clientes. Podemos especificar únicamente un límite superior en el número de clientes aceptables, dado el número de dominios activos d. 7.1 Conferencias con solo un nivel de CSs En esta subsección, consideramos que tenemos solo un CS, es decir, un único M-CS en cada dominio. Por lo tanto, no se puede sobrecargar. Consideramos que el sistema funciona tal como se describe en la sección 6.1: Los clientes envían sus paquetes de audio a su CS local, que selecciona NMax flujos antes de enviarlos a otros CS. De manera paralela, también recibe NMax transmisiones para cada otro CS antes de tomar una decisión sobre cuáles de las NMax transmisiones serán seleccionadas, enviadas y reproducidas en cada cliente individual. Para la estabilidad del sistema, cualquier servidor de conferencias debería ser capaz de manejar a sus clientes locales además de los paquetes de audio de otros dominios. Claramente entonces, la siguiente desigualdad debe cumplirse para todo dominio: )1( −⋅+≥ dN d M C Max (5) El caso límite de (5) (tomando la igualdad) toma la forma 2 )( dNdNCM MaxMax ⋅−⋅+= (6) Para optimizar d con respecto a M, establecemos 0)(2 =+−⋅⋅= ∂ ∂ MaxMax NCdN d M (7) obteniendo     ⋅ + = Max Max N NC d 2 (8) ([ ]* = Redondeando al entero más cercano) y por lo tanto, M de (6). Tabla 1. Valores de d y M calculados para algunos valores de C con NMax = 3. En la Tabla 1, se presentan los valores de d y M que fueron calculados utilizando (8) y (6) con NMax = 3. Vemos que los valores de d y M, al depender de C, se basan en el CS más débil. Vemos que hay un equilibrio entre M y d. Podríamos admitir más dominios en la conferencia, pero a costa de restringir el número total de clientes M en la conferencia. Durante la implementación y prueba de los Servidores de Conferencia en un Pentium III 1.4 GHz con Windows NT, pudimos establecer C=300. Pero con la llegada de computadoras más rápidas (> 3 GHz), uno puede fácilmente establecer C a valores más altos y determinar d y M en consecuencia. La Fig. 4 muestra un mapa de contorno y la Fig. 5, una malla 3D que muestra soluciones optimizadas para CSs de diferentes capacidades. Estos nos llevan a maximizar el número de dominios, y por lo tanto, a maximizar el número total de clientes basado en la capacidad de varios CSs. En la Fig. 4, las curvas individuales representan el número total de clientes objetivo, y seleccionamos un valor más bajo de d, para la capacidad C, para el objetivo M con el fin de reducir el tráfico en la WAN. La Fig. 5 representa una perspectiva diferente de los mismos datos en 3D. Fig. 4. \n\nFig. 4. Diagrama de contorno de la capacidad versus el número óptimo de dominios para varios tamaños de conferencias 7.2 Conferencias con Dos Niveles de CSs. Ahora considerando el caso en el que el número de clientes en un dominio particular es demasiado grande, es decir, d M Mi ≥ (9), se debe evitar la denegación de servicio para nuevos clientes debido a la sobrecarga del Servidor de Conferencias. Este problema se puede resolver introduciendo un segundo nivel de CSs dentro del dominio dado, como se muestra en la Figura 6. El M-CS existente crea un CS esclavo (S-CS) que puede manejar hasta C usuarios finales y al que transfiere todos sus clientes activos. Aquí, el sistema funciona de manera diferente como se describe en la sección 6.1: Los clientes envían sus paquetes de audio a su S-CS local, que selecciona NMax flujos, antes de enviarlos a un M-CS local, que procederá de la misma manera, antes de enviar NMax flujos a los otros dominios. Cada S-CS recién creado debe ejecutarse en una máquina separada. El M-CS tiene que crear más S-CSs si el número de clientes activos supera C durante el transcurso de la conferencia después de la transferencia. Con este mecanismo, el M-CS podrá crear un máximo de     −⋅− = Max Max N dNC U )1( S-CSs, (10) ya que debe manejar 3 (= NMax) paquetes para cada S-CS local y 3 (= NMax) paquetes de cada otro dominio remoto. Podemos entonces calcular el número máximo teórico de clientes activos CUMi ⋅= en cada dominio, así como M, para toda la conferencia como CUdM ⋅⋅= . Fig. 5. Gráfico 3D de Capacidad versus Número óptimo de dominios para varios tamaños de conferencia. Por supuesto, se podría crear un tercer nivel en la jerarquía, lo que daría la posibilidad de alojar aún más clientes. Esto puede ser innecesario ya que el número de posibles clientes es lo suficientemente grande con dos niveles. 8. DISCUSIÓN DE RENDIMIENTO Ahora analizamos el rendimiento del algoritmo presentado en la subsección 6.3, es decir, el que se encarga del intercambio de paquetes de audio entre los diferentes dominios. Ten en cuenta que los paquetes que están en tránsito dentro de la LAN aprovechan la mayor capacidad (generalmente junto con capacidades de multidifusión) y por lo tanto no requieren un análisis de rendimiento. Por lo tanto, debemos examinar solo los paquetes RTP a través de la WAN, es decir, entre los M-CS participantes. Dado que cada M-CS de un dominio solo enviará NMax de los d paquetes M a los otros CS (MaxN d M >>), el ancho de banda utilizado por la aplicación en una WAN está limitado por la siguiente expresión. El número total de paquetes de audio que transitan por la WAN para cada intervalo de tiempo es ∑ ∑= ≠=        d i d ijj MaxN 1 ,1, lo cual es cuadrático en el número de dominios (es decir, O(d2)). Sin embargo, es independiente del número total de clientes activos. Esto no habría sido el caso si todos los paquetes se hubieran enviado por la red en cada intervalo de tiempo. El ahorro es tremendo. Sin embargo, se podría argumentar que enviar tres paquetes hacia y desde todos los dominios es un desperdicio de recursos, ya que la mayoría de estos flujos no serán seleccionados. Si solo hay un cliente activo, seleccionar un subconjunto de clientes en ese dominio es innecesario. Los algoritmos pesimistas y optimistas presentados en la secuela tienen como objetivo reducir aún más el tráfico aprovechando la naturaleza lenta y variable de la LN. 8.1 Algoritmo pesimista Consideremos un escenario en el que el LN más bajo (llamado LNt) de los tres flujos seleccionados globalmente (conjunto F de la Sección 6.1) excede el LN del flujo más dominante de un dominio. Evidentemente, las posibilidades de que los dos próximos flujos dominantes de ese dominio sean seleccionados para F en el próximo período de paquetes son menores. Aquí enviamos este flujo más dominante y retenemos los otros dos. Puede haber un error en la selección única en todos los dominios por un solo período de paquete. Como LN varía lentamente, el error se corregiría automáticamente en un período (ranura) de paquete posterior. En este algoritmo, hay al menos un flujo en cada período. El tráfico de red neto en un período de paquetes en el mejor caso es )1( −⋅ dd, es decir, )( 2 dO utilizando unicast, en lugar de MaxNdd ⋅−⋅ )1(. Se puede ahorrar un ancho de banda considerablemente valioso utilizando esta heurística. La complejidad del tráfico resultante se reduce de O(d2) a O(d) en redes habilitadas para multidifusión. Inicializar LNt = 0 en un M-CS/S-CS A. En el primer intervalo de tiempo (tiempo de paquete), cada CS envía las primeras NMax secuencias (basadas en su LN) a todos los demás CSs. En cada M-CS/S-CS y para cada tiempo de paquete: B. Encuentra el valor del LN más bajo de los flujos NMax seleccionados globalmente (conjunto F) del intervalo de tiempo anterior. Establece LNt con este valor. C. En cada dominio de CS, selecciona los NMax flujos locales que tengan el valor máximo de LN (conjunto ToOtherCSs). D. Seleccionar los flujos que tengan LN > LNt. Si hay >= NMax flujos con LN > LNt, entonces enviar los mejores NMax a otros CSs. EN OTRO CASO, si hay (NMax-1) flujos con LN>LNt, enviar los mejores (NMax-1) más el que esté por debajo de LNt (es decir, los mejores NMax) a otros CSs. EN OTRO CASO, si hay (NMax-2) flujos con LN>LNt, entonces enviar los mejores (NMax-2) más el que esté por debajo de LNt (es decir, los mejores (NMax-1)) a otros CSs. ... EN OTRO CASO, si NO hay flujos con LN>LNt, entonces enviar el mejor flujo a otros CSs. Los paquetes enviados en el paso D forman DB1. Los paquetes recibidos de otros CSs forman DB2. F. Para este intervalo de tiempo, encuentra flujos globales NMax basados en LN de DB1 y DB2 (conjunto F) G. Envía el conjunto F a los clientes en su dominio. Actualiza LNt para el próximo período. Algoritmo 2. Algoritmo pesimista para reducir el número de paquetes enviados por Internet. Fig. 6. \n\nFig. 6. Ejemplo de una jerarquía de 2 niveles de Servidores de Conferencias; los Clientes sombreados son los seleccionados por el M-CS y serán enviados a otros CSs de dominios. En este algoritmo, el ahorro en tráfico se logra a expensas de relajar la condición de formación del conjunto F globalmente único. Sin embargo, las discrepancias en los flujos seleccionados en diferentes dominios permanecen por un corto período de tiempo dependiendo del retraso en el transporte entre dos dominios. Incluso para un retraso total de 400 ms, con solo 10 ranuras de tiempo de paquete, se pierde la unicidad. Esta duración en una conversación interactiva en tiempo real no es perceptible por el oyente. En el caso de que haya una broma y todos se rían, entonces habría un aumento repentino en el número de paquetes y estaría limitado por MaxN)d(O 2 durante un corto período. 8.2 Algoritmo Optimista El tráfico puede reducirse aún más. El esquema en el siguiente algoritmo (Algoritmo 3) retiene todos los flujos que tienen un valor de LN menor que el mínimo de los tres en el conjunto F. Podemos encontrar los tres flujos correctos y únicos después de unos cuantos intervalos de tiempo, dependiendo del retraso de transporte entre los dominios. Dado que el período del paquete es del orden de 40 ms, el error en la selección es imperceptible. El número de flujos en la red en este caso siempre está restringido a NMax (=3). Incluso sin Detección de Actividad de Voz (VAD), en el mejor de los casos no habrá más de tres flujos en la red, por lo tanto, el tráfico total es constante. Una repentina oleada de tráfico, como se describe en la sección 8.1, es un caso particular. Estas ventajas se deben a la explotación de las características de LN. Inicializar LNt = 0 en un M-CS/S-CS A. En el primer intervalo de tiempo (tiempo de paquete), cada CS envía las primeras NMax secuencias (basadas en su LN) a todos los demás CS. En cada M-CS/S-CS y para cada tiempo de paquete: B. Encuentra el valor del LN más bajo de los flujos seleccionados globalmente de NMax (conjunto F) del intervalo de tiempo anterior. Establece LNt con este valor. C. En cada dominio de CS, selecciona los NMax flujos locales que tengan el valor máximo de LN (conjunto ToOtherCSs). D. Selecciona los flujos que tengan LN > LNt SI hay >= NMax flujos con LN > LNt, entonces envía los mejores NMax a otros CSs. EN OTRO CASO, si hay (NMax-1) flujos con LN>LNt, entonces enviar los primeros (NMax-1) y ver E. EN OTRO CASO, si hay (NMax-2) flujos con LN>LNt, entonces enviar los primeros (NMax-2) y ver E. ... EN OTRO CASO, si NO hay flujos con LN>LNt, entonces no enviar ningún flujo. E. Excepciones: SI el flujo que estaba en F en el último intervalo pertenece a este CS, entonces selecciona y envía ese flujo incluso si su LN es ahora < LNt. (Nota: esto ocurre solo en ese CS que tenía el flujo que fue el último de los tres en el período de paquetes anterior). Los paquetes enviados en los pasos D y E forman DB1. Los paquetes recibidos de otros CSs forman DB2. Para este intervalo de tiempo, encuentra los flujos globales NMax basados en LN de DB1 y DB2 (conjunto F). H. Envíe el conjunto F a los clientes en su dominio. Actualiza LNt para el próximo período. Algoritmo 3. Algoritmo optimista para reducir el número de paquetes enviados a través de Internet. Además, cuando se utiliza VAD [13], se reduciría aún más el tráfico al enviar solo la parte del encabezado del paquete RTP y no todo el paquete, con el fin de mantener actualizada la LN en todo momento. El tráfico aquí en este caso es O(NMax) para multicast y O(d) para unicast. Vemos que los algoritmos anteriores ahorran ancho de banda y cálculos en cada CS, y conducen a una arquitectura escalable con múltiples CS principalmente porque los clientes están agrupados en dominios. El ancho de banda necesario no depende del número total de clientes activos. Como el CS siempre elige a los tres mejores clientes de entre todos los clientes asignados en el dominio, la adición de nuevos clientes a la conferencia existente no causará ningún problema de escalabilidad. 8.3 Disponibilidad de Multidifusión En la arquitectura propuesta, no se hizo ninguna suposición sobre la disponibilidad de soporte de multidifusión de la red. El tráfico se reducirá aún más si la multidifusión está disponible a través de WAN. Es sencillo demostrar que el orden del tráfico tiende a ser O(d) en lugar de O(d2). Esta es una aproximación ya que el ahorro en la multidifusión también depende de la topología. El análisis se realizó para el caso en el que la multidifusión no está disponible (una suposición realista en el Internet de hoy en día). La ventaja de esta configuración es que podemos usarla incluso si la multidifusión está parcialmente disponible. Podemos instruir a los CSs durante la fase de configuración para enviar paquetes unicast a aquellos CSs que no pueden recibir paquetes multicast, mientras que los CSs en enrutadores habilitados para multicast pueden intercambiar paquetes en una dirección multicast. Las estructuras de datos y objetos de conferencia dentro de una CS se encuentran en [14]. Fig. 7. \n\nFig. 7. Interfaz de usuario para establecer el peso de las corrientes de audio NMax (establecer la barra de auto a cero evita el eco). Mejora de calidad 8.4 La mejora observada en la calidad percibida del servicio de conferencias se debe a: (1) limitar el número de oradores concurrentes a un número bajo, como tres. Generalmente, en una conferencia, si hablan más de dos participantes se pierde la inteligibilidad. El análisis conversacional demuestra que en tal caso habría un mecanismo de reparación [15]. (2) Retraso: La transmisión de audio entre dos clientes pasará como máximo por dos servidores centrales, reduciendo así el retraso de extremo a extremo. Para una conferencia grande puede haber tres CSs, sin embargo, un salto está dentro del dominio incurriendo en un retraso insignificante. (3) Dado que las transmisiones se mezclan solo en los clientes, puede haber una mezcla personalizada de las transmisiones. La sintonización individual de la mezcla con pesos preserva el espacialismo. La Fig. 7 muestra la interfaz de usuario para lo mismo. El eco al seleccionar la auto-transmisión se puede evitar reduciendo el peso. Sin embargo, la retroalimentación ayuda a asegurar al hablante de que está siendo escuchado por todos. CONCLUSIÓN En este artículo, hemos presentado una discusión sobre un entorno de conferencias virtuales solo de voz. Hemos argumentado que la naturaleza distribuida de la implementación aquí la hace escalable. La interactividad se logra adaptando un esquema reciente de selección de flujo basado en el Número de Sonoridad. Además, incorporamos un resultado de un trabajo más reciente [15] donde se ha demostrado la suficiencia de tres hablantes simultáneos. Por lo tanto, hay una utilización significativamente efectiva del ancho de banda. Un flujo mixto se reproduce en cada cliente; cada cliente puede elegir tener una mezcla personalizada ya que la mezcla se realiza en el terminal local de cada cliente. Estos permiten que el discurso improvisado en una videoconferencia virtual a través de VoIP sea una realidad, como en una conferencia presencial real. La compatibilidad está asegurada gracias al uso de SIP, el protocolo de señalización más buscado. Para garantizar un rendimiento satisfactorio, no exigimos la disponibilidad de multidifusión, pero la utilizamos si está disponible. El tráfico en la WAN (Internet) está limitado por arriba por el cuadrado del número de dominios, --además se reduce aún más mediante el uso de algoritmos heurísticos-- lo cual está muy por debajo del número total de clientes en la conferencia. Esto se debe al uso de un Servidor de Conferencias local para cada dominio. Las técnicas de VAD ayudan a reducir aún más el tráfico. El uso del estándar SIP para la señalización hace que esta solución sea altamente interoperable. Hemos implementado una aplicación de CS en una red de campus. Creemos que esta nueva generación de entornos de conferencias virtuales ganará más popularidad en el futuro, ya que su facilidad de implementación está garantizada gracias a las tecnologías fácilmente disponibles y los marcos escalables. REFERENCIAS [1] L. Aguilar et al., Arquitectura para un Sistema de Teleconferencia Multimedia, en Actas de ACM SIGCOMM, Ago 1986, pp. 126-136. [2] Carsten Bormann, Joerg Ott et al., Protocolo de Control de Conferencias Simple, Borrador de Internet, Dic. 1996. [3] M. Decina y V. Trecordi, Voz sobre Protocolo de Internet y Comercio Electrónico Asistido por Humanos, IEEE Comm. Revista, septiembre de 1999, pp. 64-67. [4] Eckehard Doerry, Una comparación empírica de la interacción copresente y mediada tecnológicamente basada en la ruptura comunicativa, Tesis de doctorado, Escuela de Graduados de la Universidad de Oregón, 1995. [5] H. P. Dommel y J.J. Garcia-Luna-Aceves, Control de piso para conferencias y colaboración multimedia, J. Sistemas Multimedia, Vol. 5, No. 1, enero de 1997, pp. 23-38. [6] Amitava Dutta-Roy, Reuniones virtuales con videoconferencias de escritorio, IEEE Spectrum, julio de 1998, pp. 47-56. [7] M. Handley y V. Jacobson, SDP: Protocolo de Descripción de Sesiones, RFC 2327, IETF, abril de 1998. [8] M. Handley, J. Crowcroft et al., Conferencias muy grandes en Internet: la arquitectura de conferencias multimedia en Internet, Revista de Redes de Computadoras, vol. 31, No. 3, febrero de 1999, pp. 191-204. [9] Rec. ITU-T. H.323, Sistemas de Comunicaciones Multimedia basados en Paquetes, vol. 2, 1998. [10] P. Koskelainen, H. Schulzrinne y X. Wu, Un Marco de Control de Conferencias basado en SIP, NOSSDAV02, mayo de 2002, pp. 53-61. [11] R Venkatesha Prasad et al., Protocolo de Control para Soporte de Conferencias de Audio VoIP, Conferencia Internacional sobre Tecnología de Comunicación Avanzada, Mu-Ju, Corea del Sur, febrero de 2001, pp. 419-424. [12] R Venkatesha Prasad et al., Adición y Eliminación Automáticas de Clientes en Conferencias VoIP, 6º Simposio IEEE sobre Computadoras y Comunicaciones, julio de 2001, Hammamet, Túnez, pp. 386-390. [13] R Venkatesha Prasad, H S Jamadagni, Abjijeet, et al Comparación de Algoritmos de Detección de Actividad de Voz, 7º Simposio IEEE sobre Computadoras y Comunicaciones. Julio de 2002, Sicilia, Italia, pp. 530-535. [14] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, Una Conferencia VoIP Distribuida Escalable utilizando SIP, Actas del 8º Simposio de Computadoras y Comunicaciones de IEEE, Antalya, Turquía, junio de 2003. [15] R Venkatesha Prasad, H S Jamadagni y H N Shankar, Sobre el Problema de Especificar el Número de Pisos en una Conferencia Solo de Voz, Por aparecer en IEEE ITRE 2003. [16] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, Una Propuesta para Conferencias Distribuidas en SIP utilizando Servidores de Conferencias, Por aparecer en las Actas de MMNS 2003, Belfast, Reino Unido, septiembre de 2003. [17] R. Venkatesha Prasad, H.S. Jamadagni, J. Kuri, R.S. Varchas, un soporte de conferencias VoIP distribuido que utiliza el número de sonoridad, Tech. Rep. TR-CEDT-TE-03-01 [18] M. Radenkovic et al, Servicio de audio escalable y adaptable para apoyar el trabajo colaborativo y el entretenimiento a través de Internet, SSGRR 2002, LAquila, Italia, enero de 2002. [19] M. Radenkovic, C. Greenhalgh, S. Benford, Problemas de implementación para el soporte de audio multiusuario en CVEs, ACM VRST 2002, noviembre de 2002, pp. 179-185. [20] Srinivas Ramanathan, P. Venkata Rangan, Harrick M. Vin, Diseñando arquitecturas de comunicación para la colaboración multimedia interorganizacional, Journal of Organizational Computing, 2 (3&4), pp.277-302, 1992. [21] A. B. Roach, Notificación de Eventos Específicos del Protocolo de Inicio de Sesión (SIP), RFC 3265, IETF, junio de 2002. [22] J. Rosenberg, H. Schulzrinne et al., SIP: Protocolo de Inicio de Sesión, RFC 3261, IETF, junio de 2002. [23] J. Rosenberg, H. Schulzrinne, Modelos para Conferencias de Múltiples Partes en SIP, Borrador de Internet, IETF, julio de 2002. [24] H. Schulzrinne et al., RTP: un protocolo de transporte para aplicaciones en tiempo real, RFC 1889, IETF, enero de 1996. [25] Lisa R. Silverman, Llegada a la Madurez: Soluciones de Conferencias que Reducen Costos Corporativos, Documento Técnico, www.imcca.org/wpcomingofage.asp [26] Kundan Singh, Gautam Nair y Henning Schulzrinne, Conferencias Centralizadas utilizando SIP, Actas del 2do Taller de IP-Telefonía (IPTel), abril de 2001. [27] D. Thaler, M. Handley y D. Estrin, Arquitectura de Asignación de Direcciones de Multidifusión en Internet, RFC 2908, IETF, septiembre de 2000.",
    "original_sentences": [
        "Deployment Issues of a VoIP Conferencing System in a Virtual Conferencing Environment R. Venkatesha Prasad i Richard Hurni ii H.S.",
        "Jamadagni iii H.N.",
        "Shankar iv i, iii Centre for Electronics Design and Technology Indian Institute of Science, Bangalore, India Telephone: +91 80 360 0810 i, iii {vprasad, hsjam}@cedt.iisc.ernet.in ii hurni@ieee.org iv hn_shankar@yahoo.com ABSTRACT Real-time services have been supported by and large on circuitswitched networks.",
        "Recent trends favour services ported on packet-switched networks.",
        "For audio conferencing, we need to consider many issues - scalability, quality of the conference application, floor control and load on the clients/servers - to name a few.",
        "In this paper, we describe an audio service framework designed to provide a Virtual Conferencing Environment (VCE).",
        "The system is designed to accommodate a large number of end users speaking at the same time and spread across the Internet.",
        "The framework is based on Conference Servers [14], which facilitate the audio handling, while we exploit the SIP capabilities for signaling purposes.",
        "Client selection is based on a recent quantifier called Loudness Number that helps mimic a physical face-to-face conference.",
        "We deal with deployment issues of the proposed solution both in terms of scalability and interactivity, while explaining the techniques we use to reduce the traffic.",
        "We have implemented a Conference Server (CS) application on a campus-wide network at our Institute.",
        "Categories and Subjects Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - Client / Server, distributed applications.",
        "General Terms Algorithms, Performance, Design, Theory. 1.",
        "INTRODUCTION Todays Internet uses the IP protocol suite that was primarily designed for the transport of data and provides best effort data delivery.",
        "Delay-constraints and characteristics separate traditional data on the one hand from voice & video applications on the other.",
        "Hence, as progressively time-sensitive voice and video applications are deployed on the Internet, the inadequacy of the Internet is exposed.",
        "Further, we seek to port telephone services on the Internet.",
        "Among them, virtual conference (teleconference) facility is at the cutting edge.",
        "Audio and video conferencing on Internet are popular [25] for the several advantages they inhere [3,6].",
        "Clearly, the bandwidth required for a teleconference over the Internet increases rapidly with the number of participants; reducing bandwidth without compromising audio quality is a challenge in Internet Telephony.",
        "Additional critical issues are: (a) packet delay, (b) echo, (c) mixing of audio from selected clients, (d) automatic selection of clients to participate in the conference, (e) playout of mixed audio for every client, (f) handling clients not capable of mixing audio streams (such clients are known as dumb clients), and (g) deciding the number of simultaneously active clients in the conference without compromising voice quality.",
        "While all the above requirements are from the technology point of view, the users perspective and interactions are also essential factors.",
        "There is plenty of discussion amongst HCI and CSCW community on the use of Ethnomethodology for design of CSCW applications.",
        "The basic approach is to provide larger bandwidth, more facilities and more advanced control mechanisms, looking forward to better quality of interaction.",
        "This approach ignores the functional utility of the environment that is used for collaboration.",
        "Eckehard Doerry [4] criticizes this approach by saying it is keeping form before function.",
        "Thus, the need is to take an approach that considers both aspects - the technical and the functional.",
        "Regarding the functional aspect, we refer to [15] where it has been dealt with in some detail.",
        "In this work, we do not discuss video conferencing; its inclusion does not significantly benefit conference quality [4].",
        "Our focus is on virtual audio environments.",
        "We first outline the challenges encountered in virtual audio conferences.",
        "Then we look into the motivations followed by relevant literature.",
        "In Section 5, we explain the architecture of our system.",
        "Section 6 comprises description of the various algorithms used in our setup.",
        "We address deployment issues.",
        "A discussion on Swiss Federal Institute of Technology, Lausanne.",
        "Former visitor at CEDT.",
        "PESIT and NIAS, Bangalore, India.iv ii performance follows.",
        "We conclude taking alongside some implementation issues. 2.",
        "CHALLENGES IN VoIP CONFERENCING Many challenges arise in building a VoIP application.",
        "The following are of particular concern in the process: • Ease of use: Conferencing must be simple; users need no domain expertise.",
        "Management (addition/removal) of clients and servers must be uncomplicated.",
        "Application development should not presuppose specific characteristics of the underlying system or of network layers.",
        "Ease of use may include leveraging readily available, technically feasible and economically viable technologies. • Scalability: Conferencing must seem uninterrupted under heavy loads, i.e., when many additional users are added on.",
        "Traffic on WAN should not grow appreciably with the total number of clients; else, this has lead to congestion.",
        "So a means to regulate traffic to a minimum is needed for this kind of real-time applications. • Interactivity: In Virtual Conferencing Environments (VCEs), we intend a face-to-face-like conferencing application that mimics a real conference, where more vocal participants invite attention.",
        "Turn-taking in floor occupation by participants must be adapted gracefully to give a feel of natural transition. • Standardization: The solution must conform to established standards so as to gain interoperability and peer acceptance.",
        "The above requirements are placed in the perspective of observations made in earlier works (vide Sections 3 and 4) and will steer the VCE design. 3.",
        "THE MOTIVATION Ramanathan and Rangan [20] have studied in detail the architectural configurations comparing many conferencing architecture schemes taking into consideration the network delay and computation requirements for mixing.",
        "Functional division and object-oriented architecture design that aid in implementation is presented in [1].",
        "An overview of many issues involved in supporting a large conference is dealt in [8].",
        "H. P. Dommel [5] and many others highlight floor control as another pivotal aspect to be taken into account in designing a conferencing tool.",
        "Tightly coupled conference control protocols in Internet belong to the ITU-T H.323 family [9]; however, they are mainly for small conferences.",
        "The latest IETF draft by Rosenberg and Schulzrinne [23] discusses conferencing models with SIP [22] in the background.",
        "Aspects of implementation for centralized SIP conferencing are reported in [26].",
        "A new approach called partial mixing by Radenkovic [18] allows for mixed and non-mixed streams to coexist.",
        "In all the above proposals, while there are some very useful suggestions, they share one or more of the following limitations: • In an audio conference, streams from all the clients need not be mixed.",
        "Actually, mixing many arbitrary streams [24] from clients degrades the quality of the conference due to the reduction in the volume (spatial aspect of speech).",
        "The number of streams mixed varies dynamically depending on the number of active participants.",
        "This would lead to fluctuations in the volume of every individual participant causing severe degradation in quality.",
        "Customized mixing of streams is not possible when many clients are active.",
        "There is a threshold on the number of simultaneous speakers above which increasing the number of speakers becomes counterproductive to conference quality.",
        "Fixing the maximum number of simultaneous speakers is dealt in a recent work [15] using Ethnomethodology, and is conjectured to be three.",
        "Thus it is advisable to honour that constraint. • There cannot be many intermediate mixers (similarly, Conference Servers as in [10]) in stages as in [20] because it brings in inordinate delay by increasing the number of hops and is not scalable with interactivity in focus. • Floor Control for an audio conference (even video conference) with explicit turn-taking instructions to participants renders the conference essentially a one-speakerat-a-time affair, not a live and free-to-interrupt one.",
        "This way, the conference becomes markedly artificial and its quality degrades.",
        "Schulzrinne et al. [24], assume only one participant is speaking at a time.",
        "In this case, if applications are implemented with some control [5], the service becomes gagging for the users. • Partial mixing [18] has a similar problem as that of mixing when more streams are mixed.",
        "Moreover, in [18], to allow impromptu speech, mixing is not done when the network can afford high bandwidth requirements for sending/receiving all the streams, but it is unnecessary [15]. • For large conferences [23, 10] a centralized conference cannot scale up.",
        "With multicasting, clients will have to parse many streams and traffic on a clients network increases unnecessarily.",
        "Evidently, different particular issues, all of which are a subset of requirements (defined in [14] and [16]) for a VoIP conferencing support, are tackled.",
        "Thus there is a need to address conferencing as a whole with all its requirements considered concurrently.",
        "Towards this goal, the VoIP conferencing system we propose is intended to be scalable and interactive.",
        "We make use of the Loudness Number for implementing floor control.",
        "This permits a participant to freely get into the speaking mode to interrupt the current speaker as in a natural face-to-face meeting.",
        "An upper limit on the number of floors (i.e., the number of speakers allowed to speak at the same time) is fixed using a conjecture proposed in [15].",
        "The work presented here is in continuation of our studies into conferencing based on the Session Initiation Protocol in [14] and [16].",
        "SIP, defined in [22] is now the most popular standard for VoIP deployment and has been chosen for its strength, ease of use, extensibility and compatibility.",
        "This is the reason it will be in the background of all controlling messages that will implicitly arise between the entities in our architecture.",
        "The actual messages are described in [16] and, as such, we do not present a complete description of them here. 4.",
        "RELATED WORK The SIP standard defined in RFC 3261 [22] and in later extensions such as [21] does not offer conference control services such as floor control or voting and does not prescribe how a conference is to be managed.",
        "However SIP can be used to initiate a session that uses some other conference control protocol.",
        "The core SIP specification supports many models for conferencing [26, 23].",
        "In the server-based models, a server mixes media streams, whereas in a server-less conference, mixing is done at the end systems.",
        "SDP [7] can be used to define media capabilities and provide other information about the conference.",
        "We shall now consider a few conference models in SIP that have been proposed recently [23].",
        "First, let us look into server-less models.",
        "In End-System Mixing, only one client (SIP UA) handles the signaling and media mixing for all the others, which is clearly not scalable and causes problems when that particular client leaves the conference.",
        "In the Users Joining model, a tree grows, as each invited party constitutes a new branch in the distribution path.",
        "This leads to an increasing number of hops for the remote leaves and is not scalable.",
        "Another option would be to use multicast for conferencing but multicast is not enabled over Internet and only possible on a LAN presently.",
        "Among server-based models, in a Dial-In Conference, UAs connect to a central server that handles all the mixing.",
        "This model is not scalable as it is limited by the processing power of the server and bandwidth of the network.",
        "Adhoc Centralized Conferences and Dial-Out Conference Servers have similar mechanisms and problems.",
        "Hybrid models involving centralized signaling and distributed media, with the latter using unicast or multicast, raise scalability problems as before.",
        "However an advantage is that the conference control can be a third party solution.",
        "Distributed Partial Mixing, presented in [18], proposes that in case of bandwidth limitation, some streams are mixed and some are not, leaving interactivity intact.",
        "Loss of spatialism when they mix and the bandwidth increase when they do not are open problems.",
        "A related study [19] by the same author proposes conferencing architecture for Collaborative Virtual Environments (CVEs) but does not provide the scalability angle without the availability of multicasting.",
        "With the limitations of proposed conferencing systems in mind, we will now detail our proposal. 5.",
        "SYSTEM ARCHITECTURE This section is dedicated to the description of the proposed system architecture.",
        "However, as this paper constitutes the continuation of our work started in [14] and furthered in [16], we will not present here all the details about the proposed entities and invite the readers to consult the papers mentioned above for a full and thorough description.",
        "First, we do not restrict our conferencing system to work on small conferences only, but rather on large audio VCEs that have hundreds (or even thousands) of users across a Wide Area Network (WAN) such as the Internet.",
        "This view stems from an appraisal that VCEs will gain in importance in the future, as interactive audio conferences will be more popular because of the spread of the media culture around the world.",
        "Two issues must be taken care of when building a VoIP conferencing system: (i) the front-end, consisting of the application program running on the end-users computers and (ii) the back-end that provides other application programs that facilitate conferencing and conference.",
        "The participating users are grouped into several domains.",
        "These domains are Local Area Networks (LANs), such as corporate or educational networks.",
        "This distributed assumption asks for distributed controlling and media handling solutions, as centralized systems would not scale for such very large conferences (vide Section 4).",
        "More explicitly, in each domain, we can identify several relevant logical components of a conferencing facility (Fig. 1):  An arbitrary number of end users (clients) that can take part in at most one audio conference at a time.",
        "Every user is Fig. 1.",
        "Conference example - 3 domains containing the necessary entities so that the conference can take place. included in one and only one domain at a given instant, but can move from domain to domain (nomadism).",
        "In our conferencing environment, these clients are regular SIP User Agents (SIP UAs), as defined in [22] so to gain in interoperability with other existing SIP-compatible systems.",
        "These clients are thus not aware of the complex setting that supports the conference and this is highlighted below.  One SIP Server (SIPS) per domain, taking care of all the signaling aspects of the conference (clients joining, leaving, etc.) [16].",
        "In particular, it is considered as a physical implementation encompassing different logical roles, namely a SIP Proxy Server, a SIP Registrar Server, a SIP Redirect Server and a SIP B2BUA (Back-to-Back User Agent) [22].",
        "This physical implementation enables the handling of incoming/outgoing SIP messages by one or another logical entity according to the needs.",
        "SIPS is entrusted with maintaining total service and has many advantages such as (a) it works as a centralized entity that can keep track of the activities of the UAs in a conference; (b) it can do all the switching for providing PBX features; (c) it can locate the UAs and invite them for a conference; (d) it can do the billing as well.",
        "SIPSs in different domains communicate with each other using SIP messages as described in [16].",
        "If the load on a particular SIPS is too heavy, it can create another SIPS in the same domain so that the load will be shared.  One Master Conference Server (M-CS) (simply a Conference Server (CS)) for each conference is created by the local SIPS when a conference starts.",
        "This server will be used for handling media packets for the clients of the domain.",
        "Its mechanism will be described in the next section.",
        "The M-CS will be able to create a hierarchy of CSs inside a domain by adding one or more Slave CSs (S-CSs) to accommodate all the active clients and prevent its own flooding at the same time.",
        "We will see this mechanism in some detail in the sequel.",
        "The entities described here are exhaustive and conform to the SIP philosophy.",
        "Thus, the use of SIP makes this architecture more useful and interoperable with any other SIP clients or servers. 6.",
        "ALGORITHMIC ISSUES 6.1 Selecting the Streams Similar to SipConf in [27], a Conference Server (CS) [17] has the function of supporting the conference; it is responsible for handling audio streams using RTP.",
        "It can also double to convert audio stream formats for a given client if necessary and can work as Translators/Mixers of RTP specification behind firewalls.",
        "We have based the design of our CS on H.323 Multipoint Processor (MP) [9].",
        "In short, the MP receives audio streams from the endpoints involved in a centralized or hybrid multipoint conference, processes them and returns them to the endpoints.",
        "An MP that processes audio prepares NMax audio outputs from M input streams after selection, mixing, or both.",
        "Audio mixing requires decoding the input audio to linear signals (PCM or analog), performing a linear combination of the signals and reencoding the result in an appropriate audio format.",
        "The MP may eliminate or attenuate some of the input signals in order to reduce noise and unwanted components.",
        "Fig. 2.",
        "Schematic diagram of a CS The limitation of H.323 is that it does not address the scalability of a conference.",
        "The architecture proposes a cascaded or daisy chain topology [10], which can be shown that it cannot scale up for a large conference.",
        "A CS serves many clients in the same conference.",
        "Thus it handles only one conference at a time.",
        "Multiple CSs may coexist in a domain, as when there are several conferences under way.",
        "Signaling-related messages of CSs are dealt in [11].",
        "The working of a CS is illustrated on Fig. 2: For each mixing interval, CS 1 chooses the best NMax audio packets out of the M1 (using a criterion termed Loudness Number, described in the next subsection).",
        "It may possibly receive and sends these to CSs 2 to P. The set of packets sent is denoted as ToOtherCSs.",
        "In the same mixing interval, it also receives the best NMax audio packets (out of possibly M2) from CS 2, similarly the best NMax (out of possibly MP) from CS P. For simplicity, we ignore propagation delay between CSs which indeed can be taken into account; it is beyond the scope of this presentation.",
        "The set of packets received is denoted as FromOtherCSs.",
        "Finally, it selects the best NMax packets from the set {ToOtherCSs union FromOtherCSs} and passes these packets to its own group.",
        "It can be seen that the set {ToOtherCSs union FromOtherCSs} is the same at all CSs.",
        "This ensures that any client in the conference finally receives the same set of packets for mixing.",
        "Hence all clients obtain a common view of the conference.",
        "Similarly, for each time slot (packet time), a subset, F of all clients is selected (using the same criterion) from the pool of packets from all other CSs plus the NMax clients selected locally.",
        "Their packets are mixed and played out at the clients.",
        "According to [15], the cardinality of F, |F| is NMax and is fixed at three.",
        "In our conferencing setup, selection is by the Master Conference Server (M-CS), which comes into the picture exclusively for media handling.",
        "Note that even if the SIP specification enables direct UA-to-UA media communication in a one-to-one call, it is also possible to use the Conference Server for two-party calls, especially because it is then more functional to create a real conference by adding a third and subsequently more participant(s).",
        "There are cases wherein the processing capacity of an M-CS is exceeded as it may have too many packets - from local domains and from remote domains - to process.",
        "In that case, the M-CS will create one or many S-CS (Fig. 6) and transfer its own clients as well as the new clients to them.",
        "In this configuration, the algorithm outlined above will be slightly modified, as the audio packets will go from clients to their dedicated S-CS that will select NMax packets to send to the local M-CS, which will then select NMax packets from all its S-CSs in the domain before sending them to the remote domains.",
        "The incoming packets from other domains will be received by the M-CS, select NMax of them and send them directly to the domain clients, bypassing the SCSs.",
        "This change implies that at most three intermediate entities exist for each audio packet, instead of two in the conventional setup.",
        "As the extra hop happens inside the LAN supposed to have a high-speed connectivity, we consider that it should not prevent us from using this hierarchy of CSs when theres a need to do so. 6.2 Loudness Number (LN) A basic question to be answered by the CS is the following.",
        "In a mixing interval, how should it choose NMax packets out of the M it might possibly receive?",
        "One way is to rank the M packets received according to their energies, and choose the top NMax.",
        "However, this is usually found to be inadequate because random fluctuations in packet energies can lead to poor audio quality.",
        "This indicates the need for a metric different from mere individual packet energies.",
        "The metric should have the following characteristics [12]: • A speaker (floor occupant) should not be cut off by a spike in the packet energy of another speaker.",
        "This implies that a speakers speech history should be given some weight.",
        "This is often referred to as Persistence or Hangover. • A participant who wants to interrupt a speaker will have to (i) speak loudly and (ii) keep trying for a little while.",
        "In a face-to-face conference, body language often indicates the intent to interrupt.",
        "But in a blind conference under discussion, a participants intention to interrupt can be conveyed effectively through LN.",
        "A floor control mechanism empowered to cut off a speaker forcefully must be ensured.",
        "These requirements are met by Loudness Number [12], which changes smoothly with time so that the selection (addition and deletion) of clients for conference is graceful.",
        "LN (= ) is a function of the amplitude of the current audio stream plus the activity and amplitude over a specific window in the past.",
        "Fig. 3.",
        "The different windows used for LN computation The Loudness Number is updated on a packet-by-packet basis.",
        "The basic parameter used here is packet amplitude, which is calculated as root mean square (rms) of the energies in audio samples of a packet, and denoted by XK.",
        "Three windows are defined as shown in Fig. 3.",
        "The present amplitude level of the speaker is found by calculating the moving average of packet amplitude (XK) within a window called Recent Past Window starting from the present instant to some past time.",
        "The past activity of the speaker is found by calculating the moving average of the packet amplitude (XK) within a window called Distant Past Window, which starts at the point where the Recent Past window ends and stretches back in the past for a pre-defined interval.",
        "The activity of the speaker in the past is found with a window called Activity Horizon, which spans the recent past window as well as the distant past window and beyond if necessary.",
        "Though the contribution of the activity horizon looks similar to the contribution of the recent past and distant past windows, past activity is computed from activity horizon window in a differently.",
        "Define the quantities during these three intervals as L1, L2 and L3.",
        "L1 quantifies the Recent Past speech activity, L2 the Distant Past speech activity and L3 gives a number corresponding to the speech activity in the Activity Horizon window quantifying how active the speaker was in the past few intervals.",
        "L3 yields a quantity that is proportional to the fraction of packets having energies above a pre-defined threshold (Eq. 3).",
        "The threshold is invariant across clients. ∑ +− = = 1 1 1 RPP P Wt tK K RP X W L (1) ∑ +−− −= = 1 2 1 DPRPP RPP WWt WtK K DP X W L (2) ∑ +− = ≥= 1 }{3 * 1 AHP P K Wt tK X AH I W L θθ (3) Where ifI KX 1}{ =≥θ θ≥KX = otherwise,0 The threshold is a constant. is set at 10-20 percent of the amplitude of the voice samples of a packet in our implementation here.",
        "Loudness Number λ for the present time instant (or the present packet) is calculated as, 332211 *L*L*L αααλ ++= (4) Here 1\u000f 2 DQG 3 are chosen such that: 0< 1\u000f 2\u001f\u0014\u000f \u0013\u001f 1\u000e 2\u001f\u0014 DQG 3=1-\u000b 1\u000e 2) Here, 1 is the weight given to the recent past speech, 2 is the weight given to distant past speech and 3 is the weight given to speech activity in the activity horizon window considered. 6.3 Safety, Liveness and Fairness The λ parameter KDV VRPH PHPRU\\ GHSHQGLQJ RQ WKH VSUHDG RI the windows.",
        "After one conferee becomes silent, another can take the floor.",
        "Also, as there is more than one channel, interruption is enabled.",
        "A loud conferee is more likely to be heard because of elevated λ.",
        "This ensures fairness to all conferees.",
        "After all, even in a face-to-face conference, a more vocal speaker grabs special attention.",
        "All these desirable characteristics are embedded into the LN.",
        "A comprehensive discussion on selection of the various parameters and the dynamics of LN are beyond the scope of this paper. 6.4 Selection Algorithm using the LN Following the developments in subsections 6.1 and 6.2, we present the simple algorithm that runs at each Master-Conference Server (Algorithm. 1).",
        "This algorithm is based on the discussions in section 6.1.",
        "The globally unique set F is found using this procedure.",
        "Repeat for each time slot at each M-CS { 1.",
        "Get all the packets from the Clients that belong to it. 2.",
        "Find at most NMax Clients that have PD[LPXP RXW RI 0 &OLHQWV LQ LWV GRPDLQ\u0011 3.",
        "Store a copy of packets from those NMax Clients in database DB1. 4.",
        "Send these NMax packets to other M-CSs (on Unicast or Multicast, depending on the configuration). 5.",
        "Similarly, receive packets from all other M-CSs and store them in database DB2. 6.",
        "Now compare the packets in DB1 and DB2 on WKH EDVLV RI DQG VHOHFW D PD[LPXP RI NMax amongst them (to form set F) that should be played out at each Client. 7.",
        "Send the NMax packets in set F to the Clients in its domain. 8.",
        "Mix these NMax audio packets in set F after linearising and send it to dumb Clients in the domain. }",
        "Algorithm 1.",
        "Selection algorithm The mechanism proposed here is also depicted on Fig. 6, where a single conference takes place between three domains.",
        "The shaded clients are the ones selected in their local domains; their audio streams will be sent to other CSs. 7.",
        "DEPLOYMENT ISSUES We now analyze deployment issues associated with conference management.",
        "How are domains to be organized to maximize the number of participants able to join?",
        "To address this, we define some useful parameters.  Let d be the number of different domains in which there are active clients in a given conference.  Let Mi be the number of active clients present in domain i ( di ≤≤1 ) in a given conference.",
        "The total number of active clients in the conference is thus ∑= = d i iMM 1 .  Let C be the maximum number of audio streams a Conference Server can handle in a packet time, also called capacity.",
        "C is set according to the processing power of the weakest CS in the conference but as it cannot be assumed that we know it a-priori, it can be set according to some minimum system requirement a machine must meet in order to take part in a conference.  Let NMax be the number of output streams a CS has to send to other CSs in remote domains (see section 6.1).",
        "We will set NMax =3 (=|F|), according to [15].",
        "The optimization problem is now to find the value of d that maximizes the total number of clients Mi served by one CS in a domain with capacity C. We first dispose the case where the capacity is not exceeded (the existing CS is not overloaded), and then proceed to the case where there exists a need to create more CSs when a single CS is overloaded.",
        "We assume that clients are equally distributed amongst the domains, as we may not have information to assume an a-priori distribution of the clients.",
        "We can specify no more than an upper bound on the number of clients acceptable, given the number of active domains d. 7.1 Conferencing with only One Level of CSs In this subsection, we consider that we have only one CS, i.e., a unique M-CS in each domain.",
        "Thus it cannot be overloaded.",
        "We consider that the system works as outlined in section 6.1: The Clients send their audio packets to their local CS, which selects NMax streams, before sending them to other CSs.",
        "In parallel, it also receives NMax streams for every other CSs before taking a decision on which NMax streams will be selected, sent and played out at each individual clients.",
        "For system stability, any CS in the conference should be able to handle its local clients in addition to the audio packets from other domains.",
        "Clearly then, the following inequality must hold for every domain: )1( −⋅+≥ dN d M C Max (5) The limiting case of (5) (taking the equality) takes the form 2 )( dNdNCM MaxMax ⋅−⋅+= (6) To optimize d with respect to M, we set 0)(2 =+−⋅⋅= ∂ ∂ MaxMax NCdN d M (7) yielding     ⋅ + = Max Max N NC d 2 (8) ([ ]* = Rounding to nearest integer) and hence, M from (6).",
        "C d M 50 9 234 100 17 884 150 26 1950 200 34 3434 250 42 5334 300 51 7650 350 59 10384 400 67 13534 450 76 17100 500 84 21084 Table 1.",
        "Values of d and M computed for some values of C with NMax = 3.",
        "In Table 1, we give the values of d and M that were computed using (8) and (6) with NMax = 3.",
        "We see that the values of d and M, being dependent of C, are therefore based on the weakest CS.",
        "We see that there is a trade-off between M and d. We could admit more domains in the conference, but at the expense of restricting the total number of clients M in the conference.",
        "While implementing and testing the Conference Servers on a Pentium III 1.4 GHz running Windows NT, we were able to set C=300.",
        "But with the advent of faster computers (> 3 GHz), one can easily set C to higher values and determine d and M accordingly.",
        "Fig. 4 shows a contour plot and Fig. 5, a 3D-mesh showing optimized solutions for CSs of different capacities.",
        "These lead us to maximize the number of domains, and hence, to maximize the total number of clients based on the capacity of various CSs.",
        "In Fig. 4, the individual curves represent the total number of clients targeted, and we select a lower value of d, for capacity C, for targeted M to reduce traffic on WAN.",
        "Fig. 5 represents a different perspective of the same data in 3D.",
        "Fig. 4.",
        "Contour Plot of Capacity versus Optimum number of domains for various conference sizes 7.2 Conferencing with Two Levels of CSs Now considering the case where the number of clients in a particular domain is too large, i.e., d M Mi ≥ (9) one has to avoid the denial of service for new clients due to overloading of Conference Server.",
        "This problem can be solved by introducing a second level of CSs inside the given domain, as in Fig. 6.",
        "The existing M-CS creates a Slave CS (S-CS) that can handle up to C end-users and to which it transfers all its active clients.",
        "Here, the system works differently as outlined in section 6.1: The Clients send their audio packets to their local S-CS, which selects NMax streams, before sending them to a local M-CS, which will proceed in the same way, before sending NMax streams to the other domains.",
        "Each newly created S-CS must run on a separate machine.",
        "The M-CS has to create more S-CSs if the number of active clients exceeds C in the course of the conference after the transfer.",
        "With this mechanism, the M-CS will be able to create utmost     −⋅− = Max Max N dNC U )1( S-CSs, (10) as it must handle 3 (= NMax) packets for each local S-CSs and 3 (= NMax) packets from each other remote domains.",
        "We can then calculate the maximum theoretical number of active clients CUMi ⋅= in each domain as well as M, for the whole conference as CUdM ⋅⋅= .",
        "Fig. 5. 3D Plot of Capacity versus Optimum number of domains for various conference sizes Of course, one could further create a third level in the hierarchy, giving the possibility of accommodating even more clients.",
        "This may be unnecessary as the number of possible clients is large enough with two levels. 8.",
        "PERFORMANCE DISCUSSION We now analyze the performance of the algorithm presented in subsection 6.3, i.e., the one taking care of the exchange of audio packets between the different domains.",
        "Note that the packets that are transiting within the LAN take advantage of the higher capacity (generally coupled with multicast capabilities) and therefore do not require a performance analysis.",
        "Thus we have to look only at the RTP packets over the WAN, i.e., between participating M-CSs.",
        "As each M-CS from a domain will be sending only NMax out of d M packets to the other CSs ( MaxN d M >> ), the bandwidth used by the application over a WAN is upper-bounded by the following expression.",
        "The total number of audio packets transiting over the WAN for each time slot is ∑ ∑= ≠=        d i d ijj MaxN 1 ,1 which is quadratic in the number of domains (i.e., O(d2 )).",
        "However, it is independent of the total number of active clients.",
        "This would not have been the case had all packets been sent over the network in each time slot.",
        "The saving is tremendous.",
        "Yet, one may contend that sending three packets to and from all domains is a waste of resources, as most of these streams will not be selected.",
        "If just one client is active, selecting a subset of clients in that domain is unnecessary.",
        "Pessimistic and optimistic algorithms as presented in the sequel aim at reducing the traffic further by harnessing the slow varying nature of the LN. 8.1 Pessimistic algorithm Consider a scenario wherein the lowest LN (called LNt) of the three globally selected streams (set F of Section 6.1) exceeds the LN of the most dominant stream of a domain.",
        "Evidently, the chances that the next two dominant streams of that domain being selected to F in the next packet period are less.",
        "Here, we send this most dominant stream and withhold the other two.",
        "There may be an error in unique selection across all domains for one packet period only.",
        "As LN varies slowly, the error would get automatically rectified in a subsequent packet period (slot).",
        "In this algorithm, there is at least one stream in each period.",
        "The net network traffic in a packet period in the best case is )1( −⋅ dd , i.e., )( 2 dO using unicast, instead of MaxNdd ⋅−⋅ )1( .",
        "Considerable valuable bandwidth can be saved using this heuristic.",
        "The resulting traffic complexity reduces from O(d2 ) to O(d) in multicast-enabled networks.",
        "Initialize LNt = 0 at an M-CS/S-CS A.",
        "In the first time slot (packet time), each CS sends the top NMax streams (based on their LN) to all other CSs.",
        "At each M-CS/S-CS and for each packet time: B.",
        "Find the value of lowest LN of the NMax globally selected streams (set F) from the previous time slot.",
        "Set LNt with this value.",
        "C. At each CS domain, select the NMax local streams that have maximum value of LN (ToOtherCSs set).",
        "D. Select streams that have LN > LNt.",
        "IF there are >= NMax streams with LN > LNt then send top NMax to other CSs.",
        "ELSE IF there are (NMax-1) streams with LN>LNt then send top (NMax-1) plus the one lower than LNt (i.e., top NMax) to other CSs.",
        "ELSE IF there are (NMax-2) streams with LN>LNt then send top (NMax-2) plus the one lower than LNt (i.e. top (NMax -1)) to other CSs. …… ELSE IF there are NO streams with LN> LNt then send top 1 stream to other CSs.",
        "E. Packets sent in step D form DB1.",
        "Packets received from other CSs form DB2.",
        "F. For this time slot, find global NMax streams based on LN from DB1 U DB2 (set F) G. Send set F to the clients in its domain.",
        "Update LNt for the next period.",
        "Algorithm 2.",
        "Pessimistic algorithm to reduce the number of packets sent over the Internet.",
        "Fig. 6.",
        "Example of a 2-level hierarchy of Conference Servers; the shaded Clients are the one selected by the M-CS and will be sent to other domains CSs.",
        "In this algorithm the saving in traffic is at the cost of relaxing the condition of formation of globally unique set F. However, the discrepancies in selected streams at different domains remain for a short period of time depending on the transportation delay between any two domains.",
        "Even for a total delay of 400ms, for only 10 packet time slots the uniqueness is lost.",
        "This duration in a real-time interactive conversation is non-perceivable by the listener.",
        "In the case that there is a joke and every one laughs, then there would be sudden rise in the number of packets and it would be upper bounded by MaxN)d(O 2 for a short period. 8.2 Optimistic Algorithm The traffic can be reduced further.",
        "The scheme in the following algorithm (Algorithm. 3) is withholding all the streams that have less value of LN compared to the least of the three in the set F. We can find the correct and unique three streams after a few time slots depending on the transportation delay between the domains.",
        "As the packet period is of the order of 40ms, the error in the selection is unnoticeable.",
        "The number of streams on network in this case is always restricted to NMax (=3).",
        "Even without Voice Activity Detection (VAD), there will be no more than three streams in the network in the best case, thus the total traffic is constant.",
        "A sudden burst of traffic, as described in 8.1, is a particular case.",
        "These advantages are due to exploitation of the characteristics of LN.",
        "Initialize LNt = 0 at an M-CS/S-CS A.",
        "In the first time slot (packet time), each CS sends the top NMax streams (based on their LN) to all other CSs.",
        "At each M-CS/S-CS and for each packet time: B.",
        "Find the value of lowest LN of the NMax globally selected streams (set F) from the previous time slot.",
        "Set LNt with this value.",
        "C. At each CS domain, select the NMax local streams that have maximum value of LN (ToOtherCSs set) D. Select streams that have LN > LNt IF there are >= NMax streams with LN > LNt then send top NMax to other CSs.",
        "ELSE IF there are (NMax-1) streams with LN>LNt then send top (NMax-1) and see E. ELSE IF there are (NMax-2) streams with LN>LNt then send top (NMax-2) and see E. …… ELSE IF there are NO streams with LN> LNt then dont send any stream.",
        "E. Exceptions: IF the stream that was in F in the last interval belongs to this CS then select and send that stream even if its LN is now < LNt. (Note this occurs only at that CS which had the stream that was the last of the three in the previous packet period.)",
        "F. Packets sent in step D and E form DB1.",
        "Packets received from other CSs form DB2.",
        "G. For this time slot, find global NMax streams based on LN from DB1 U DB2 (set F).",
        "H. Send set F to the clients in its domain.",
        "Update LNt for the next period.",
        "Algorithm 3.",
        "Optimistic algorithm to reduce the number of packets sent over the Internet Furthermore, when VAD is used [13], it would further reduce the traffic by sending the header part of the RTP packet only and not the whole packet, thus in order to keep updating the LN across.",
        "The traffic here in this case is O(NMax) for multicast and O(d) for unicast.",
        "We see that the above algorithms save bandwidth and computation at each CS, and leads to a scalable architecture with multiple CSs mainly because clients are grouped in domains.",
        "The necessary bandwidth is not dependent on the total number of active clients.",
        "As the CS always chooses the best three clients out of all the clients assigned to it in the domain, addition of new clients to the existing conference will not cause any scalability problem. 8.3 Availability of Multicasting In the architecture that has been proposed, no assumption was made about the availability of multicasting support from the network.",
        "The traffic will be further reduced if multicasting is available over WAN.",
        "It is simple to show that the order of traffic would tend to become O(d) from O(d2 ).",
        "This is an approximation as saving in multicasting depends also on the topology.",
        "The analysis was done for the case wherein multicast is not available (a realistic assumption in todays Internet).",
        "The advantage of this set up is that we can use it even if multicasting is partially available.",
        "We can instruct CSs during the set-up phase to send unicast packets to those CSs that cannot receive multicast packets whereas CSs on multicast enabled routers can exchange packets on a multicast address.",
        "The data structures and conference objects inside a CS is given in [14].",
        "Fig. 7.",
        "User Interface for setting the weight for NMax audio streams (setting Self-bar to zero avoids echo). 8.4 Quality Improvement The observed improvement in the perceived quality of the conference service is due to: (1) limiting the number of concurrent speakers to a low number such as three.",
        "Generally, in a conference if more than two participants speak the intelligibility is lost.",
        "The conversational analysis demonstrates that there would be a repair mechanism [15] in such a case. (2) Delay: The audio stream between any two clients will pass through at most two CSs thus reducing the end-to-end delay.",
        "For a large conference there might be three CSs however, one hop is within the domain incurring negligible delay. (3) As the streams are mixed only at the clients, there can be a customized mix of the streams.",
        "The individual tuning of mixing with weights the spatialism is preserved.",
        "Fig. 7 shows the user interface for the same.",
        "The echo when self-stream is selected can be avoided by reducing the weight.",
        "Nonetheless, feedback helps in reassuring speaker that he/she is heard by all. 9.",
        "CONCLUSION In this paper, we have presented a discussion on a voice-only virtual conferencing environment.",
        "We have argued that the distributed nature of deployment here makes it scalable.",
        "Interactivity is achieved by adapting a recent stream selection scheme based on Loudness Number.",
        "Additionally, we incorporate a result from a more recent work [15] where the sufficiency of three simultaneous speakers has been demonstrated.",
        "Thus, there is significantly effective utilization of bandwidth.",
        "A mixed stream is played out at each client; each client may choose to have a customized mix since mixing is done at the local terminal of each client.",
        "These render impromptu speech in a virtual teleconference over VoIP a reality, as in a real face-to-face conference.",
        "Compatibility is assured thanks to the use of SIP, the most soughtafter signaling protocol.",
        "To ensure a satisfying performance, we do not demand the availability of multicast, but use it if and when available.",
        "The traffic in the WAN (Internet) is upper-bounded by the square of the number of domains, -- further reduced by using heuristic algorithms -- which is far below the total number of clients in the conference.",
        "This is due to the use of a Conference Server local to each domain.",
        "VAD techniques help further traffic reduction.",
        "Using SIP standard for signaling makes this solution highly interoperable.",
        "We have implemented a CS application on a campus-wide network.",
        "We believe this new generation of virtual conferencing environments will gain more popularity in the future as their ease of deployment is assured thanks to readily available technologies and scalable frameworks. 10.",
        "REFERENCES [1] L Aguilar et al., Architecture for a Multimedia Teleconferencing System, in Proceedings of the ACM SIGCOMM, Aug 1986, pp. 126-136. [2] Carsten Bormann, Joerg Ott et al., Simple Conference Control Protocol, Internet Draft, Dec. 1996. [3] M. Decina and V. Trecordi, Voice over Internet Protocol and Human Assisted E-Commerce, IEEE Comm.",
        "Magazine, Sept. 1999, pp. 64-67. [4] Eckehard Doerry, An Empirical Comparison of Copresent and Technologically-mediated Interaction based on Communicative Breakdown, Phd Thesis, Graduate School of the University of Oregon, 1995. [5] H. P. Dommel and J.J. Garcia-Luna-Aceves, Floor Control for Multimedia Conferencing and Collaboration, J. Multimedia Systems, Vol. 5, No. 1, January 1997, pp. 23-38. [6] Amitava Dutta-Roy, Virtual Meetings with desktop conferencing, IEEE Spectrum, July 1998, pp. 47-56. [7] M. Handley and V. Jacobson, SDP: Session Description Protocol, RFC 2327, IETF, April 1998. [8] M. Handley, J. Crowcroft et al., Very large conferences on the Internet: the Internet multimedia conferencing architecture, Journal of Computer Networks, vol. 31, No. 3, Feb 1999, pp. 191-204. [9] ITU-T Rec.",
        "H.323, Packet based Multimedia Communications Systems, vol. 2, 1998. [10] P. Koskelainen, H. Schulzrinne and X. Wu, A SIP-based Conference Control Framework, NOSSDAV02, May 2002, pp. 53-61. [11] R Venkatesha Prasad et al., Control Protocol for VoIP Audio Conferencing Support, International Conference on Advanced Communication Technology, Mu-Ju, South Korea, Feb 2001, pp. 419-424. [12] R Venkatesha Prasad et al., Automatic Addition and Deletion of Clients in VoIP Conferencing, 6th IEEE Symposium on Computers and Communications, July 2001, Hammamet, Tunisia, pp. 386-390. [13] R Venkatesha Prasad, H S Jamadagni, Abjijeet, et al Comparison of Voice Activity Detection Algorithms, 7th IEEE Symposium on Computers and Communications.",
        "July 2002, Sicily, Italy, pp. 530-535. [14] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, A Scalable Distributed VoIP Conferencing using SIP, Proc. of the 8th IEEE Symposium on Computers and Communications, Antalya, Turkey, June 2003. [15] R Venkatesha Prasad, H S Jamadagni and H N Shankar, On Problem of Specifying Number of Floors in a Voice Only Conference, To appear in IEEE ITRE 2003. [16] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, A Proposal for Distributed Conferencing on SIP using Conference Servers, To appear in the Proc. of MMNS 2003, Belfast, UK, September 2003. [17] R. Venkatesha Prasad, H.S.",
        "Jamadagni, J. Kuri, R.S.",
        "Varchas, A Distributed VoIP Conferencing Support Using Loudness Number, Tech.",
        "Rep. TR-CEDT-TE-03-01 [18] M. Radenkovic et al, Scaleable and Adaptable Audio Service for Supporting Collaborative Work and Entertainment over the Internet, SSGRR 2002, LAquila, Italy, Jan. 2002. [19] M. Radenkovic, C. Greenhalgh, S. Benford, Deployment Issues for Multi-User Audio Support in CVEs, ACM VRST 2002, Nov. 2002, pp. 179-185. [20] Srinivas Ramanathan, P. Venkata Rangan, Harrick M. Vin, Designing Communication Architectures for Interorganizational Multimedia Collaboration, Journal of Organizational Computing, 2 (3&4), pp.277-302, 1992. [21] A.",
        "B. Roach, Session Initiation Protocol (SIP)-Specific Event Notification, RFC 3265, IETF, June 2002. [22] J. Rosenberg, H. Schulzrinne et al., SIP: Session Initiation Protocol, RFC 3261, IETF, June 2002. [23] J. Rosenberg, H. Schulzrinne, Models for Multy Party Conferencing in SIP, Internet Draft, IETF, July 2002. [24] H. Schulzrinne et al., RTP: a transport protocol for realtime applications, RFC 1889, IETF, Jan 1996. [25] Lisa R. Silverman, Coming of Age: Conferencing Solutions Cut Corporate Costs, White Paper, www.imcca.org/wpcomingofage.asp [26] Kundan Singh, Gautam Nair and Henning Schulzrinne, Centralized Conferencing using SIP, Proceedings of the 2nd IP-Telephony Workshop (IPTel), April 2001. [27] D. Thaler, M. Handley and D. Estrin, The Internet Multicast Address Allocation Architecture, RFC 2908, IETF, Sept. 2000."
    ],
    "translated_text_sentences": [
        "Problemas de implementación de un sistema de conferencias VoIP en un entorno de conferencias virtuales. R. Venkatesha Prasad y Richard Hurni.",
        "Jamadagni iii H.N.",
        "Shankar iv i, iii Centro de Diseño y Tecnología Electrónica Instituto Indio de Ciencias, Bangalore, India Teléfono: +91 80 360 0810 i, iii {vprasad, hsjam}@cedt.iisc.ernet.in ii hurni@ieee.org iv hn_shankar@yahoo.com RESUMEN Los servicios en tiempo real han sido principalmente respaldados en redes conmutadas por circuitos.",
        "Las tendencias recientes favorecen los servicios trasladados a redes de conmutación de paquetes.",
        "Para las conferencias de audio, necesitamos considerar muchos aspectos, como la escalabilidad, la calidad de la aplicación de conferencia, el control de piso y la carga en los clientes/servidores, por nombrar algunos.",
        "En este documento, describimos un marco de servicio de audio diseñado para proporcionar un Entorno de Conferencias Virtuales (ECV).",
        "El sistema está diseñado para dar cabida a un gran número de usuarios finales hablando al mismo tiempo y distribuidos por Internet.",
        "El marco se basa en Servidores de Conferencia [14], que facilitan el manejo del audio, mientras que explotamos las capacidades de SIP para propósitos de señalización.",
        "La selección de clientes se basa en un reciente cuantificador llamado Número de Volumen que ayuda a imitar una conferencia física cara a cara.",
        "Nos ocupamos de los problemas de implementación de la solución propuesta tanto en términos de escalabilidad como de interactividad, mientras explicamos las técnicas que utilizamos para reducir el tráfico.",
        "Hemos implementado una aplicación de Servidor de Conferencias (CS) en una red de campus en nuestro Instituto.",
        "Categorías y Descriptores de Temas C.2.4 [Redes de Computadoras y Comunicación]: Sistemas Distribuidos - Cliente/Servidor, aplicaciones distribuidas.",
        "Términos generales Algoritmos, Rendimiento, Diseño, Teoría. 1.",
        "INTRODUCCIÓN El Internet de hoy utiliza el conjunto de protocolos IP que fue diseñado principalmente para el transporte de datos y proporciona la entrega de datos con el mejor esfuerzo.",
        "Las restricciones de retraso y las características diferencian los datos tradicionales por un lado, de las aplicaciones de voz y video por el otro.",
        "Por lo tanto, a medida que se implementan aplicaciones de voz y video cada vez más sensibles al tiempo en Internet, se pone de manifiesto la insuficiencia de la red.",
        "Además, buscamos trasladar servicios telefónicos a través de Internet.",
        "Entre ellos, la instalación de conferencia virtual (teleconferencia) está a la vanguardia.",
        "Las videoconferencias y conferencias de audio en Internet son populares por las varias ventajas que poseen.",
        "Claramente, el ancho de banda necesario para una videoconferencia a través de Internet aumenta rápidamente con el número de participantes; reducir el ancho de banda sin comprometer la calidad del audio es un desafío en la telefonía por Internet.",
        "Los problemas críticos adicionales son: (a) retraso de paquetes, (b) eco, (c) mezcla de audio de clientes seleccionados, (d) selección automática de clientes para participar en la conferencia, (e) reproducción de audio mezclado para cada cliente, (f) manejo de clientes que no son capaces de mezclar flujos de audio (estos clientes se conocen como clientes tontos), y (g) decidir el número de clientes activos simultáneamente en la conferencia sin comprometer la calidad de voz.",
        "Si bien todos los requisitos anteriores son desde el punto de vista tecnológico, la perspectiva de los usuarios y las interacciones también son factores esenciales.",
        "Hay mucha discusión entre la comunidad de HCI y CSCW sobre el uso de la Etnometodología para el diseño de aplicaciones de CSCW.",
        "El enfoque básico es proporcionar un ancho de banda más amplio, más instalaciones y mecanismos de control más avanzados, con miras a una mejor calidad de interacción.",
        "Este enfoque ignora la utilidad funcional del entorno que se utiliza para la colaboración.",
        "Eckehard Doerry [4] critica este enfoque diciendo que pone la forma antes que la función.",
        "Por lo tanto, la necesidad es adoptar un enfoque que considere ambos aspectos: el técnico y el funcional.",
        "En cuanto al aspecto funcional, nos referimos a [15] donde se ha tratado en cierto detalle.",
        "En este trabajo, no discutimos la videoconferencia; su inclusión no beneficia significativamente la calidad de la conferencia [4].",
        "Nuestro enfoque está en entornos de audio virtuales.",
        "Primero describimos los desafíos encontrados en las conferencias de audio virtuales.",
        "Luego investigamos las motivaciones seguidas por la literatura relevante.",
        "En la Sección 5, explicamos la arquitectura de nuestro sistema.",
        "La sección 6 comprende la descripción de los diversos algoritmos utilizados en nuestra configuración.",
        "Abordamos problemas de implementación.",
        "Una discusión sobre el Instituto Federal Suizo de Tecnología, Lausana.",
        "Antiguo visitante en CEDT.",
        "PESIT y NIAS, Bangalore, India. El rendimiento sigue.",
        "Concluimos teniendo en cuenta algunos problemas de implementación. 2.",
        "DESAFÍOS EN LA VIDEOCONFERENCIA VoIP Surgen muchos desafíos al construir una aplicación VoIP.",
        "Lo siguiente es de particular preocupación en el proceso: • Facilidad de uso: la conferencia debe ser sencilla; los usuarios no necesitan experiencia en el dominio.",
        "La gestión (adición/eliminación) de clientes y servidores debe ser sencilla.",
        "El desarrollo de aplicaciones no debe presuponer características específicas del sistema subyacente o de las capas de red.",
        "La facilidad de uso puede incluir el aprovechamiento de tecnologías fácilmente disponibles, técnicamente factibles y económicamente viables. • Escalabilidad: Las conferencias deben parecer ininterrumpidas bajo cargas pesadas, es decir, cuando se agregan muchos usuarios adicionales.",
        "El tráfico en la WAN no debería aumentar apreciablemente con el número total de clientes; de lo contrario, esto podría provocar congestión.",
        "Por lo tanto, se necesita un medio para regular el tráfico al mínimo para este tipo de aplicaciones en tiempo real. • Interactividad: En Entornos de Conferencias Virtuales (ECVs), pretendemos una aplicación de conferencias cara a cara que imite una conferencia real, donde los participantes más vocales invitan la atención.",
        "El intercambio de turnos en la ocupación del espacio por parte de los participantes debe adaptarse con gracia para lograr una transición natural. • Estandarización: La solución debe cumplir con los estándares establecidos para lograr interoperabilidad y aceptación entre pares.",
        "Los requisitos anteriores se colocan en la perspectiva de las observaciones realizadas en trabajos anteriores (véase Secciones 3 y 4) y guiarán el diseño del VCE. 3.",
        "La motivación Ramanathan y Rangan [20] han estudiado en detalle las configuraciones arquitectónicas comparando muchos esquemas de arquitectura de conferencias teniendo en cuenta la demora de red y los requisitos de computación para la mezcla.",
        "La división funcional y el diseño de arquitectura orientada a objetos que ayudan en la implementación se presentan en [1].",
        "Un resumen de muchos temas relacionados con el apoyo a una conferencia grande se aborda en [8].",
        "H. P. Dommel [5] y muchos otros destacan el control de piso como otro aspecto fundamental a tener en cuenta en el diseño de una herramienta de conferencias.",
        "Los protocolos de control de conferencias fuertemente acoplados en Internet pertenecen a la familia ITU-T H.323 [9]; sin embargo, están principalmente diseñados para conferencias pequeñas.",
        "El último borrador del IETF de Rosenberg y Schulzrinne [23] discute modelos de conferencia con SIP [22] en el fondo.",
        "Los aspectos de implementación para la conferencia SIP centralizada se informan en [26].",
        "Un nuevo enfoque llamado mezcla parcial por Radenkovic [18] permite que flujos mezclados y no mezclados coexistan.",
        "En todas las propuestas anteriores, si bien hay algunas sugerencias muy útiles, comparten una o más de las siguientes limitaciones: • En una conferencia de audio, no es necesario mezclar los flujos de todos los clientes.",
        "De hecho, mezclar muchas corrientes arbitrarias [24] de clientes degrada la calidad de la conferencia debido a la reducción en el volumen (aspecto espacial del habla).",
        "El número de flujos mezclados varía dinámicamente dependiendo del número de participantes activos.",
        "Esto provocaría fluctuaciones en el volumen de cada participante individual, causando una degradación severa en la calidad.",
        "La mezcla personalizada de flujos no es posible cuando hay muchos clientes activos.",
        "Existe un umbral en el número de oradores simultáneos por encima del cual aumentar el número de oradores se vuelve contraproducente para la calidad de la conferencia.",
        "La fijación del número máximo de hablantes simultáneos se aborda en un trabajo reciente [15] utilizando la Etnometodología, y se postula que es tres.",
        "Por lo tanto, es recomendable respetar esa restricción. • No puede haber muchos mezcladores intermedios (similarmente, Servidores de Conferencia como en [10]) en etapas como en [20] porque provoca un retraso desmedido al aumentar el número de saltos y no es escalable con la interactividad como enfoque. • El Control de Piso para una conferencia de audio (incluso de video) con instrucciones explícitas de toma de turnos para los participantes convierte la conferencia en esencia en un asunto de un orador a la vez, no en una en vivo y libre de interrupciones.",
        "De esta manera, la conferencia se vuelve notablemente artificial y su calidad se degrada.",
        "Schulzrinne et al. [24], asumen que solo un participante está hablando en un momento dado.",
        "En este caso, si las aplicaciones se implementan con cierto control [5], el servicio se vuelve asfixiante para los usuarios. • La mezcla parcial [18] tiene un problema similar al de la mezcla cuando se mezclan más flujos.",
        "Además, en [18], para permitir el discurso improvisado, la mezcla no se realiza cuando la red puede soportar altos requisitos de ancho de banda para enviar/recibir todas las transmisiones, pero es innecesaria [15]. • Para conferencias grandes [23, 10] una conferencia centralizada no puede escalar.",
        "Con la multidifusión, los clientes tendrán que analizar muchos flujos y el tráfico en la red de los clientes aumenta innecesariamente.",
        "Evidentemente, se abordan diferentes problemas particulares, todos los cuales son un subconjunto de los requisitos (definidos en [14] y [16]) para el soporte de conferencias de VoIP.",
        "Por lo tanto, es necesario abordar la conferencia en su totalidad teniendo en cuenta todos sus requisitos de manera simultánea.",
        "Con este objetivo, el sistema de conferencias VoIP que proponemos está diseñado para ser escalable e interactivo.",
        "Hacemos uso del Número de Sonoridad para implementar el control de volumen.",
        "Esto permite a un participante entrar libremente en el modo de hablar para interrumpir al orador actual como en una reunión natural cara a cara.",
        "Un límite superior en el número de pisos (es decir, el número de oradores permitidos para hablar al mismo tiempo) se fija utilizando una conjetura propuesta en [15].",
        "El trabajo presentado aquí es una continuación de nuestros estudios sobre conferencias basadas en el Protocolo de Inicio de Sesión en [14] y [16].",
        "SIP, definido en [22], es ahora el estándar más popular para implementación de VoIP y ha sido elegido por su fortaleza, facilidad de uso, extensibilidad y compatibilidad.",
        "Esta es la razón por la cual estará en el trasfondo de todos los mensajes de control que surgirán implícitamente entre las entidades en nuestra arquitectura.",
        "Los mensajes actuales están descritos en [16] y, como tal, no presentamos una descripción completa de ellos aquí. 4.",
        "TRABAJO RELACIONADO El estándar SIP definido en el RFC 3261 [22] y en extensiones posteriores como [21] no ofrece servicios de control de conferencias como control de piso o votación y no prescribe cómo debe ser gestionada una conferencia.",
        "Sin embargo, SIP se puede utilizar para iniciar una sesión que utilice algún otro protocolo de control de conferencias.",
        "La especificación central de SIP soporta muchos modelos para conferencias [26, 23].",
        "En los modelos basados en servidor, un servidor mezcla flujos de medios, mientras que en una conferencia sin servidor, la mezcla se realiza en los sistemas finales.",
        "SDP [7] se puede utilizar para definir las capacidades de los medios y proporcionar otra información sobre la conferencia.",
        "Ahora consideraremos algunos modelos de conferencia en SIP que han sido propuestos recientemente [23].",
        "Primero, veamos los modelos sin servidor.",
        "En la mezcla de extremos del sistema, solo un cliente (SIP UA) maneja la señalización y la mezcla de medios para todos los demás, lo cual claramente no es escalable y causa problemas cuando ese cliente en particular abandona la conferencia.",
        "En el modelo de Usuarios que se unen, un árbol crece, ya que cada parte invitada constituye una nueva rama en el camino de distribución.",
        "Esto conduce a un número creciente de saltos para las hojas remotas y no es escalable.",
        "Otra opción sería utilizar la multidifusión para las videoconferencias, pero actualmente la multidifusión no está habilitada en Internet y solo es posible en una LAN.",
        "Entre los modelos basados en servidor, en una conferencia de marcado, los UAs se conectan a un servidor central que maneja todas las mezclas.",
        "Este modelo no es escalable ya que está limitado por la potencia de procesamiento del servidor y el ancho de banda de la red.",
        "Las conferencias centralizadas ad hoc y los servidores de conferencias de marcado tienen mecanismos y problemas similares.",
        "Los modelos híbridos que involucran señalización centralizada y medios distribuidos, con estos últimos utilizando unicast o multicast, plantean problemas de escalabilidad como antes.",
        "Sin embargo, una ventaja es que el control de la conferencia puede ser una solución de terceros.",
        "La Mezcla Parcial Distribuida, presentada en [18], propone que en caso de limitación de ancho de banda, algunos flujos se mezclan y otros no, manteniendo la interactividad intacta.",
        "La pérdida de espacialidad cuando se mezclan y el aumento del ancho de banda cuando no lo hacen son problemas abiertos.",
        "Un estudio relacionado [19] del mismo autor propone una arquitectura de conferencias para Entornos Virtuales Colaborativos (CVEs) pero no proporciona el enfoque de escalabilidad sin la disponibilidad de la multidifusión.",
        "Teniendo en cuenta las limitaciones de los sistemas de conferencias propuestos, detallaremos ahora nuestra propuesta. 5.",
        "ARQUITECTURA DEL SISTEMA Esta sección está dedicada a la descripción de la arquitectura del sistema propuesto.",
        "Sin embargo, dado que este documento constituye la continuación de nuestro trabajo iniciado en [14] y ampliado en [16], no presentaremos aquí todos los detalles sobre las entidades propuestas e invitamos a los lectores a consultar los documentos mencionados anteriormente para obtener una descripción completa y detallada.",
        "Primero, no restringimos nuestro sistema de conferencias para funcionar solo en conferencias pequeñas, sino en grandes VCEs de audio que tienen cientos (o incluso miles) de usuarios a través de una Red de Área Amplia (WAN) como Internet.",
        "Esta perspectiva se deriva de una evaluación de que los VCEs ganarán importancia en el futuro, ya que las conferencias de audio interactivas serán más populares debido a la difusión de la cultura mediática en todo el mundo.",
        "Dos aspectos deben ser atendidos al construir un sistema de conferencias VoIP: (i) el front-end, que consiste en el programa de aplicación que se ejecuta en las computadoras de los usuarios finales y (ii) el back-end que proporciona otros programas de aplicación que facilitan las conferencias y la conferencia.",
        "Los usuarios participantes se agrupan en varios dominios.",
        "Estos dominios son Redes de Área Local (LAN), como redes corporativas o educativas.",
        "Esta suposición distribuida requiere soluciones de control y manejo de medios distribuidos, ya que los sistemas centralizados no serían escalables para conferencias tan grandes (ver Sección 4).",
        "Más explícitamente, en cada dominio, podemos identificar varios componentes lógicos relevantes de una instalación de conferencias (Fig. 1): Un número arbitrario de usuarios finales (clientes) que pueden participar en como máximo una conferencia de audio a la vez.",
        "Cada usuario es la Fig. 1.",
        "Ejemplo de conferencia: 3 dominios que contienen las entidades necesarias para que la conferencia pueda tener lugar. Incluidas en un único dominio en un instante dado, pero pueden moverse de un dominio a otro (nomadismo).",
        "En nuestro entorno de conferencias, estos clientes son Agentes de Usuario SIP (SIP UAs) regulares, según se define en [22], para lograr interoperabilidad con otros sistemas compatibles con SIP existentes.",
        "Estos clientes no son conscientes del entorno complejo que respalda la conferencia, lo cual se destaca a continuación. Un servidor SIP (SIPS) por dominio, encargándose de todos los aspectos de señalización de la conferencia (clientes que se unen, salen, etc.) [16].",
        "En particular, se considera como una implementación física que abarca diferentes roles lógicos, a saber, un Servidor Proxy SIP, un Servidor Registrador SIP, un Servidor de Redirección SIP y un SIP B2BUA (Agente de Usuario de Vuelta a Vuelta) [22].",
        "Esta implementación física permite el manejo de mensajes SIP entrantes/salientes por una u otra entidad lógica según sea necesario.",
        "SIPS está encargado de mantener un servicio total y tiene muchas ventajas, como (a) funciona como una entidad centralizada que puede hacer un seguimiento de las actividades de los UAs en una conferencia; (b) puede realizar todo el cambio para proporcionar funciones de PBX; (c) puede localizar a los UAs e invitarlos a una conferencia; (d) también puede encargarse de la facturación.",
        "Los SIPS en diferentes dominios se comunican entre sí utilizando mensajes SIP como se describe en [16].",
        "Si la carga en un SIPS particular es demasiado pesada, puede crear otro SIPS en el mismo dominio para que la carga se comparta. Se crea un Servidor de Conferencias Maestro (M-CS) (simplemente un Servidor de Conferencias (CS)) para cada conferencia por el SIPS local cuando una conferencia comienza.",
        "Este servidor se utilizará para manejar paquetes de medios para los clientes del dominio.",
        "Su mecanismo será descrito en la siguiente sección.",
        "El M-CS podrá crear una jerarquía de CSs dentro de un dominio agregando uno o más CSs esclavos (S-CSs) para dar cabida a todos los clientes activos y prevenir su propia saturación al mismo tiempo.",
        "Veremos este mecanismo con cierto detalle en la secuela.",
        "Las entidades descritas aquí son exhaustivas y se ajustan a la filosofía del SIP.",
        "Por lo tanto, el uso de SIP hace que esta arquitectura sea más útil e interoperable con cualquier otro cliente o servidor SIP.",
        "PROBLEMAS ALGORÍTMICOS 6.1 Seleccionar los flujos similares a SipConf en [27], un Servidor de Conferencias (CS) [17] tiene la función de soportar la conferencia; es responsable de manejar los flujos de audio utilizando RTP.",
        "También puede duplicarse para convertir formatos de transmisión de audio para un cliente dado si es necesario y puede funcionar como Traductores/Mezcladores de la especificación RTP detrás de cortafuegos.",
        "Hemos basado el diseño de nuestro CS en el Procesador Multipunto (MP) H.323 [9].",
        "En resumen, el MP recibe flujos de audio de los puntos finales involucrados en una conferencia multipunto centralizada o híbrida, los procesa y los devuelve a los puntos finales.",
        "Un procesador de señales de audio prepara N salidas de audio NMax a partir de M flujos de entrada después de la selección, mezcla o ambas.",
        "La mezcla de audio requiere decodificar el audio de entrada a señales lineales (PCM o analógicas), realizar una combinación lineal de las señales y volver a codificar el resultado en un formato de audio apropiado.",
        "El procesador de señales puede eliminar o atenuar algunas de las señales de entrada para reducir el ruido y los componentes no deseados.",
        "Fig. 2. \n\nFig. 2.",
        "El diagrama esquemático de un CS. La limitación de H.323 es que no aborda la escalabilidad de una conferencia.",
        "La arquitectura propone una topología en cascada o en cadena de margaritas [10], la cual se puede demostrar que no puede escalar para una conferencia grande.",
        "Un CS atiende a muchos clientes en la misma conferencia.",
        "Por lo tanto, solo maneja una conferencia a la vez.",
        "Varios CS pueden coexistir en un dominio, como cuando hay varias conferencias en curso.",
        "Los mensajes relacionados con la señalización de los CSs se tratan en [11].",
        "El funcionamiento de un CS se ilustra en la Fig. 2: Para cada intervalo de mezcla, CS 1 elige los mejores NMax paquetes de audio de los M1 (utilizando un criterio denominado Número de Volumen, descrito en la siguiente subsección).",
        "Puede posiblemente recibir y enviar estos a CSs 2 a P. El conjunto de paquetes enviados se denota como AotrosCSs.",
        "En el mismo intervalo de mezcla, también recibe los mejores paquetes de audio NMax (de un posible M2) de CS 2, de manera similar a los mejores NMax (de un posible MP) de CS P. Para simplificar, ignoramos el retardo de propagación entre los CSs, que de hecho se puede tener en cuenta; está más allá del alcance de esta presentación.",
        "El conjunto de paquetes recibidos se denota como FromOtherCSs.",
        "Finalmente, selecciona los mejores paquetes NMax del conjunto {ToOtherCSs unión FromOtherCSs} y envía estos paquetes a su propio grupo.",
        "Se puede observar que el conjunto {ToOtherCSs unión FromOtherCSs} es el mismo en todos los CSs.",
        "Esto garantiza que cualquier cliente en la conferencia finalmente reciba el mismo conjunto de paquetes para mezclar.",
        "Por lo tanto, todos los clientes obtienen una vista común de la conferencia.",
        "De manera similar, para cada intervalo de tiempo (tiempo de paquete), se selecciona un subconjunto, F, de todos los clientes (utilizando el mismo criterio) del conjunto de paquetes de todos los otros CS más los NMax clientes seleccionados localmente.",
        "Sus paquetes se mezclan y se reproducen en los clientes.",
        "Según [15], la cardinalidad de F, |F| es NMax y está fijada en tres.",
        "En nuestra configuración de conferencias, la selección la realiza el Servidor Maestro de Conferencias (M-CS), que interviene exclusivamente en el manejo de medios.",
        "Ten en cuenta que aunque la especificación de SIP permite la comunicación directa de medios de usuario a usuario en una llamada uno a uno, también es posible utilizar el Servidor de Conferencias para llamadas de dos partes, especialmente porque es entonces más funcional crear una conferencia real agregando un tercero y posteriormente más participantes.",
        "Existen casos en los que la capacidad de procesamiento de un M-CS se ve superada, ya que puede tener demasiados paquetes, tanto de dominios locales como de dominios remotos, para procesar.",
        "En ese caso, el M-CS creará uno o varios S-CS (Fig. 6) y transferirá a sus propios clientes, así como a los nuevos clientes, a ellos.",
        "En esta configuración, el algoritmo descrito anteriormente se modificará ligeramente, ya que los paquetes de audio irán de los clientes a su S-CS dedicado, que seleccionará NMax paquetes para enviar al M-CS local, que luego seleccionará NMax paquetes de todos sus S-CS en el dominio antes de enviarlos a los dominios remotos.",
        "Los paquetes entrantes de otros dominios serán recibidos por el M-CS, se seleccionarán NMax de ellos y se enviarán directamente a los clientes del dominio, evitando los SCSs.",
        "Este cambio implica que existen como máximo tres entidades intermedias para cada paquete de audio, en lugar de dos en la configuración convencional.",
        "Dado que el salto adicional ocurre dentro de la LAN que se supone tiene una conectividad de alta velocidad, consideramos que no debería impedirnos usar esta jerarquía de CS cuando sea necesario hacerlo. 6.2 Número de Sonoridad (LN) Una pregunta básica que debe responder el CS es la siguiente.",
        "En un intervalo de mezcla, ¿cómo debería elegir NMax paquetes de los M que podría recibir?",
        "Una forma es clasificar los paquetes M recibidos según sus energías y elegir los NMax mejores.",
        "Sin embargo, esto suele considerarse insuficiente porque las fluctuaciones aleatorias en las energías de los paquetes pueden provocar una mala calidad de audio.",
        "Esto indica la necesidad de una métrica diferente de meras energías individuales de paquetes.",
        "El medidor debe tener las siguientes características [12]: • Un hablante (ocupante del suelo) no debe ser interrumpido por un pico en la energía del paquete de otro hablante.",
        "Esto implica que la historia del discurso de un hablante debería tener cierto peso.",
        "Esto se suele llamar Persistencia o Resaca. • Un participante que quiera interrumpir a un orador tendrá que (i) hablar en voz alta y (ii) seguir intentándolo por un tiempo breve.",
        "En una conferencia presencial, el lenguaje corporal a menudo indica la intención de interrumpir.",
        "Pero en una conferencia a ciegas en discusión, la intención de un participante de interrumpir puede ser transmitida de manera efectiva a través de LN.",
        "Se debe garantizar un mecanismo de control de piso habilitado para cortar a un orador de manera contundente.",
        "Estos requisitos son cumplidos por el Número de Volumen [12], que cambia suavemente con el tiempo para que la selección (adición y eliminación) de clientes para la conferencia sea elegante.",
        "LN (= ) es una función de la amplitud de la corriente de audio actual más la actividad y amplitud en una ventana específica en el pasado.",
        "Fig. 3. \n\nFig. 3.",
        "Las diferentes ventanas utilizadas para el cálculo de LN se actualizan en una base de paquete por paquete.",
        "El parámetro básico utilizado aquí es la amplitud del paquete, que se calcula como la raíz cuadrada de la media cuadrática (rms) de las energías en las muestras de audio de un paquete, y se denota como XK.",
        "Tres ventanas están definidas como se muestra en la Fig. 3.",
        "El nivel de amplitud actual del altavoz se encuentra calculando el promedio móvil de la amplitud del paquete (XK) dentro de una ventana llamada Ventana de Pasado Reciente, que va desde el instante presente hasta algún momento pasado.",
        "La actividad pasada del hablante se encuentra calculando el promedio móvil de la amplitud del paquete (XK) dentro de una ventana llamada Ventana de Pasado Lejano, que comienza en el punto donde termina la ventana de Pasado Reciente y se extiende hacia atrás en el pasado por un intervalo predefinido.",
        "La actividad del hablante en el pasado se encuentra con una ventana llamada Horizonte de Actividad, que abarca la ventana del pasado reciente, así como la ventana del pasado lejano y más allá si es necesario.",
        "Aunque la contribución del horizonte de actividad parece similar a la contribución de las ventanas del pasado reciente y pasado lejano, la actividad pasada se calcula de manera diferente a partir de la ventana del horizonte de actividad.",
        "Define las cantidades durante estos tres intervalos como L1, L2 y L3.",
        "L1 cuantifica la actividad de habla del Pasado Reciente, L2 la actividad de habla del Pasado Lejano y L3 proporciona un número correspondiente a la actividad de habla en la ventana del Horizonte de Actividad, cuantificando qué tan activo estuvo el hablante en los últimos intervalos.",
        "L3 produce una cantidad que es proporcional a la fracción de paquetes que tienen energías por encima de un umbral predefinido (Ec. 3).",
        "El umbral es invariable entre clientes. ∑ +− = = 1 1 1 RPP P Wt tK K RP X W L (1) ∑ +−− −= = 1 2 1 DPRPP RPP WWt WtK K DP X W L (2) ∑ +− = ≥= 1 }{3 * 1 AHP P K Wt tK X AH I W L θθ (3) Donde siI KX 1}{ =≥θ θ≥KX = de lo contrario,0 El umbral es una constante. Se establece en el 10-20 por ciento de la amplitud de las muestras de voz de un paquete en nuestra implementación aquí.",
        "El número de intensidad λ para el instante de tiempo presente (o el paquete presente) se calcula como, 332211 *L*L*L αααλ ++= (4) Aquí 1, 2 y 3 son elegidos de tal manera que: 0< 1, 2 y 3=1- 1) Aquí, 1 es el peso dado al habla del pasado reciente, 2 es el peso dado al habla del pasado lejano y 3 es el peso dado a la actividad del habla en la ventana de horizonte de actividad considerada. 6.3 Seguridad, Vida y Equidad El parámetro λ tiene un efecto significativo en la evaluación de la ventana.",
        "Después de que un conferenciante se queda en silencio, otro puede tomar la palabra.",
        "Además, dado que hay más de un canal, la interrupción está habilitada.",
        "Un conferenciante ruidoso es más probable que sea escuchado debido a un λ elevado.",
        "Esto garantiza equidad para todos los conferenciantes.",
        "Después de todo, incluso en una conferencia presencial, un orador más vocal capta una atención especial.",
        "Todas estas características deseables están integradas en la LN.",
        "Una discusión exhaustiva sobre la selección de los diversos parámetros y la dinámica de LN están fuera del alcance de este documento. 6.4 Algoritmo de selección utilizando LN Siguiendo los desarrollos en las subsecciones 6.1 y 6.2, presentamos el algoritmo simple que se ejecuta en cada Servidor Maestro-Conferencia (Algoritmo 1).",
        "Este algoritmo se basa en las discusiones de la sección 6.1.",
        "El conjunto F, único a nivel mundial, se encuentra utilizando este procedimiento.",
        "Repetir para cada intervalo de tiempo en cada M-CS { 1.",
        "Obtener todos los paquetes de los clientes que le pertenecen. 2.",
        "Encuentra como máximo NMax clientes que tengan un PD[LPXP RXW RI 0 &OLHQWV LQ LWV GRPDLQ\u0011 3.",
        "Almacene una copia de los paquetes de esos clientes NMax en la base de datos DB1.",
        "Envía estos paquetes NMax a otros M-CSs (en Unicast o Multicast, dependiendo de la configuración). 5.",
        "De igual manera, recibir paquetes de todos los demás M-CSs y almacenarlos en la base de datos DB2. 6.",
        "Ahora compara los paquetes en DB1 y DB2 en WKH EDVLV RI DQG VHOHFW D PD[LPXP RI NMax entre ellos (para formar el conjunto F) que deberían ser reproducidos en cada Cliente. 7.",
        "Enviar los paquetes NMax en el conjunto F a los Clientes en su dominio. 8.",
        "Mezcla estos paquetes de audio NMax en el conjunto F después de linearizarlos y envíalos a Clientes sin capacidad en el dominio.",
        "Algoritmo 1.",
        "Algoritmo de selección El mecanismo propuesto aquí también se muestra en la Fig. 6, donde tiene lugar una única conferencia entre tres dominios.",
        "Los clientes sombreados son los seleccionados en sus dominios locales; sus flujos de audio serán enviados a otros CSs. 7.",
        "PROBLEMAS DE DESPLIEGUE Ahora analizamos los problemas de despliegue asociados con la gestión de conferencias.",
        "¿Cómo deben organizarse los dominios para maximizar el número de participantes que pueden unirse?",
        "Para abordar esto, definimos algunos parámetros útiles.  Sea d el número de dominios diferentes en los que hay clientes activos en una conferencia dada.  Sea Mi el número de clientes activos presentes en el dominio i (di ≤≤1) en una conferencia dada.",
        "El número total de clientes activos en la conferencia es por lo tanto ∑= = d i iMM 1. Sea C el número máximo de flujos de audio que un Servidor de Conferencias puede manejar en un tiempo de paquete, también llamado capacidad.",
        "C se establece de acuerdo con la potencia de procesamiento del CS más débil en la conferencia, pero como no se puede asumir que lo conocemos de antemano, se puede establecer de acuerdo con algún requisito mínimo del sistema que una máquina debe cumplir para participar en una conferencia. Deje que NMax sea el número de flujos de salida que un CS debe enviar a otros CS en dominios remotos (ver sección 6.1).",
        "Estableceremos NMax = 3 (=|F|), según [15].",
        "El problema de optimización consiste en encontrar el valor de d que maximiza el número total de clientes Mi atendidos por un CS en un dominio con capacidad C. Primero consideramos el caso en el que la capacidad no es excedida (el CS existente no está sobrecargado), y luego procedemos al caso en el que es necesario crear más CS cuando un CS único está sobrecargado.",
        "Suponemos que los clientes están distribuidos de manera equitativa entre los dominios, ya que no tenemos información para asumir una distribución a priori de los clientes.",
        "Podemos especificar únicamente un límite superior en el número de clientes aceptables, dado el número de dominios activos d. 7.1 Conferencias con solo un nivel de CSs En esta subsección, consideramos que tenemos solo un CS, es decir, un único M-CS en cada dominio.",
        "Por lo tanto, no se puede sobrecargar.",
        "Consideramos que el sistema funciona tal como se describe en la sección 6.1: Los clientes envían sus paquetes de audio a su CS local, que selecciona NMax flujos antes de enviarlos a otros CS.",
        "De manera paralela, también recibe NMax transmisiones para cada otro CS antes de tomar una decisión sobre cuáles de las NMax transmisiones serán seleccionadas, enviadas y reproducidas en cada cliente individual.",
        "Para la estabilidad del sistema, cualquier servidor de conferencias debería ser capaz de manejar a sus clientes locales además de los paquetes de audio de otros dominios.",
        "Claramente entonces, la siguiente desigualdad debe cumplirse para todo dominio: )1( −⋅+≥ dN d M C Max (5) El caso límite de (5) (tomando la igualdad) toma la forma 2 )( dNdNCM MaxMax ⋅−⋅+= (6) Para optimizar d con respecto a M, establecemos 0)(2 =+−⋅⋅= ∂ ∂ MaxMax NCdN d M (7) obteniendo     ⋅ + = Max Max N NC d 2 (8) ([ ]* = Redondeando al entero más cercano) y por lo tanto, M de (6).",
        "Tabla 1.",
        "Valores de d y M calculados para algunos valores de C con NMax = 3.",
        "En la Tabla 1, se presentan los valores de d y M que fueron calculados utilizando (8) y (6) con NMax = 3.",
        "Vemos que los valores de d y M, al depender de C, se basan en el CS más débil.",
        "Vemos que hay un equilibrio entre M y d. Podríamos admitir más dominios en la conferencia, pero a costa de restringir el número total de clientes M en la conferencia.",
        "Durante la implementación y prueba de los Servidores de Conferencia en un Pentium III 1.4 GHz con Windows NT, pudimos establecer C=300.",
        "Pero con la llegada de computadoras más rápidas (> 3 GHz), uno puede fácilmente establecer C a valores más altos y determinar d y M en consecuencia.",
        "La Fig. 4 muestra un mapa de contorno y la Fig. 5, una malla 3D que muestra soluciones optimizadas para CSs de diferentes capacidades.",
        "Estos nos llevan a maximizar el número de dominios, y por lo tanto, a maximizar el número total de clientes basado en la capacidad de varios CSs.",
        "En la Fig. 4, las curvas individuales representan el número total de clientes objetivo, y seleccionamos un valor más bajo de d, para la capacidad C, para el objetivo M con el fin de reducir el tráfico en la WAN.",
        "La Fig. 5 representa una perspectiva diferente de los mismos datos en 3D.",
        "Fig. 4. \n\nFig. 4.",
        "Diagrama de contorno de la capacidad versus el número óptimo de dominios para varios tamaños de conferencias 7.2 Conferencias con Dos Niveles de CSs. Ahora considerando el caso en el que el número de clientes en un dominio particular es demasiado grande, es decir, d M Mi ≥ (9), se debe evitar la denegación de servicio para nuevos clientes debido a la sobrecarga del Servidor de Conferencias.",
        "Este problema se puede resolver introduciendo un segundo nivel de CSs dentro del dominio dado, como se muestra en la Figura 6.",
        "El M-CS existente crea un CS esclavo (S-CS) que puede manejar hasta C usuarios finales y al que transfiere todos sus clientes activos.",
        "Aquí, el sistema funciona de manera diferente como se describe en la sección 6.1: Los clientes envían sus paquetes de audio a su S-CS local, que selecciona NMax flujos, antes de enviarlos a un M-CS local, que procederá de la misma manera, antes de enviar NMax flujos a los otros dominios.",
        "Cada S-CS recién creado debe ejecutarse en una máquina separada.",
        "El M-CS tiene que crear más S-CSs si el número de clientes activos supera C durante el transcurso de la conferencia después de la transferencia.",
        "Con este mecanismo, el M-CS podrá crear un máximo de     −⋅− = Max Max N dNC U )1( S-CSs, (10) ya que debe manejar 3 (= NMax) paquetes para cada S-CS local y 3 (= NMax) paquetes de cada otro dominio remoto.",
        "Podemos entonces calcular el número máximo teórico de clientes activos CUMi ⋅= en cada dominio, así como M, para toda la conferencia como CUdM ⋅⋅= .",
        "Fig. 5. Gráfico 3D de Capacidad versus Número óptimo de dominios para varios tamaños de conferencia. Por supuesto, se podría crear un tercer nivel en la jerarquía, lo que daría la posibilidad de alojar aún más clientes.",
        "Esto puede ser innecesario ya que el número de posibles clientes es lo suficientemente grande con dos niveles. 8.",
        "DISCUSIÓN DE RENDIMIENTO Ahora analizamos el rendimiento del algoritmo presentado en la subsección 6.3, es decir, el que se encarga del intercambio de paquetes de audio entre los diferentes dominios.",
        "Ten en cuenta que los paquetes que están en tránsito dentro de la LAN aprovechan la mayor capacidad (generalmente junto con capacidades de multidifusión) y por lo tanto no requieren un análisis de rendimiento.",
        "Por lo tanto, debemos examinar solo los paquetes RTP a través de la WAN, es decir, entre los M-CS participantes.",
        "Dado que cada M-CS de un dominio solo enviará NMax de los d paquetes M a los otros CS (MaxN d M >>), el ancho de banda utilizado por la aplicación en una WAN está limitado por la siguiente expresión.",
        "El número total de paquetes de audio que transitan por la WAN para cada intervalo de tiempo es ∑ ∑= ≠=        d i d ijj MaxN 1 ,1, lo cual es cuadrático en el número de dominios (es decir, O(d2)).",
        "Sin embargo, es independiente del número total de clientes activos.",
        "Esto no habría sido el caso si todos los paquetes se hubieran enviado por la red en cada intervalo de tiempo.",
        "El ahorro es tremendo.",
        "Sin embargo, se podría argumentar que enviar tres paquetes hacia y desde todos los dominios es un desperdicio de recursos, ya que la mayoría de estos flujos no serán seleccionados.",
        "Si solo hay un cliente activo, seleccionar un subconjunto de clientes en ese dominio es innecesario.",
        "Los algoritmos pesimistas y optimistas presentados en la secuela tienen como objetivo reducir aún más el tráfico aprovechando la naturaleza lenta y variable de la LN. 8.1 Algoritmo pesimista Consideremos un escenario en el que el LN más bajo (llamado LNt) de los tres flujos seleccionados globalmente (conjunto F de la Sección 6.1) excede el LN del flujo más dominante de un dominio.",
        "Evidentemente, las posibilidades de que los dos próximos flujos dominantes de ese dominio sean seleccionados para F en el próximo período de paquetes son menores.",
        "Aquí enviamos este flujo más dominante y retenemos los otros dos.",
        "Puede haber un error en la selección única en todos los dominios por un solo período de paquete.",
        "Como LN varía lentamente, el error se corregiría automáticamente en un período (ranura) de paquete posterior.",
        "En este algoritmo, hay al menos un flujo en cada período.",
        "El tráfico de red neto en un período de paquetes en el mejor caso es )1( −⋅ dd, es decir, )( 2 dO utilizando unicast, en lugar de MaxNdd ⋅−⋅ )1(.",
        "Se puede ahorrar un ancho de banda considerablemente valioso utilizando esta heurística.",
        "La complejidad del tráfico resultante se reduce de O(d2) a O(d) en redes habilitadas para multidifusión.",
        "Inicializar LNt = 0 en un M-CS/S-CS A.",
        "En el primer intervalo de tiempo (tiempo de paquete), cada CS envía las primeras NMax secuencias (basadas en su LN) a todos los demás CSs.",
        "En cada M-CS/S-CS y para cada tiempo de paquete: B.",
        "Encuentra el valor del LN más bajo de los flujos NMax seleccionados globalmente (conjunto F) del intervalo de tiempo anterior.",
        "Establece LNt con este valor.",
        "C. En cada dominio de CS, selecciona los NMax flujos locales que tengan el valor máximo de LN (conjunto ToOtherCSs).",
        "D. Seleccionar los flujos que tengan LN > LNt.",
        "Si hay >= NMax flujos con LN > LNt, entonces enviar los mejores NMax a otros CSs.",
        "EN OTRO CASO, si hay (NMax-1) flujos con LN>LNt, enviar los mejores (NMax-1) más el que esté por debajo de LNt (es decir, los mejores NMax) a otros CSs.",
        "EN OTRO CASO, si hay (NMax-2) flujos con LN>LNt, entonces enviar los mejores (NMax-2) más el que esté por debajo de LNt (es decir, los mejores (NMax-1)) a otros CSs. ... EN OTRO CASO, si NO hay flujos con LN>LNt, entonces enviar el mejor flujo a otros CSs.",
        "Los paquetes enviados en el paso D forman DB1.",
        "Los paquetes recibidos de otros CSs forman DB2.",
        "F. Para este intervalo de tiempo, encuentra flujos globales NMax basados en LN de DB1 y DB2 (conjunto F) G. Envía el conjunto F a los clientes en su dominio.",
        "Actualiza LNt para el próximo período.",
        "Algoritmo 2.",
        "Algoritmo pesimista para reducir el número de paquetes enviados por Internet.",
        "Fig. 6. \n\nFig. 6.",
        "Ejemplo de una jerarquía de 2 niveles de Servidores de Conferencias; los Clientes sombreados son los seleccionados por el M-CS y serán enviados a otros CSs de dominios.",
        "En este algoritmo, el ahorro en tráfico se logra a expensas de relajar la condición de formación del conjunto F globalmente único. Sin embargo, las discrepancias en los flujos seleccionados en diferentes dominios permanecen por un corto período de tiempo dependiendo del retraso en el transporte entre dos dominios.",
        "Incluso para un retraso total de 400 ms, con solo 10 ranuras de tiempo de paquete, se pierde la unicidad.",
        "Esta duración en una conversación interactiva en tiempo real no es perceptible por el oyente.",
        "En el caso de que haya una broma y todos se rían, entonces habría un aumento repentino en el número de paquetes y estaría limitado por MaxN)d(O 2 durante un corto período. 8.2 Algoritmo Optimista El tráfico puede reducirse aún más.",
        "El esquema en el siguiente algoritmo (Algoritmo 3) retiene todos los flujos que tienen un valor de LN menor que el mínimo de los tres en el conjunto F. Podemos encontrar los tres flujos correctos y únicos después de unos cuantos intervalos de tiempo, dependiendo del retraso de transporte entre los dominios.",
        "Dado que el período del paquete es del orden de 40 ms, el error en la selección es imperceptible.",
        "El número de flujos en la red en este caso siempre está restringido a NMax (=3).",
        "Incluso sin Detección de Actividad de Voz (VAD), en el mejor de los casos no habrá más de tres flujos en la red, por lo tanto, el tráfico total es constante.",
        "Una repentina oleada de tráfico, como se describe en la sección 8.1, es un caso particular.",
        "Estas ventajas se deben a la explotación de las características de LN.",
        "Inicializar LNt = 0 en un M-CS/S-CS A.",
        "En el primer intervalo de tiempo (tiempo de paquete), cada CS envía las primeras NMax secuencias (basadas en su LN) a todos los demás CS.",
        "En cada M-CS/S-CS y para cada tiempo de paquete: B.",
        "Encuentra el valor del LN más bajo de los flujos seleccionados globalmente de NMax (conjunto F) del intervalo de tiempo anterior.",
        "Establece LNt con este valor.",
        "C. En cada dominio de CS, selecciona los NMax flujos locales que tengan el valor máximo de LN (conjunto ToOtherCSs). D. Selecciona los flujos que tengan LN > LNt SI hay >= NMax flujos con LN > LNt, entonces envía los mejores NMax a otros CSs.",
        "EN OTRO CASO, si hay (NMax-1) flujos con LN>LNt, entonces enviar los primeros (NMax-1) y ver E. EN OTRO CASO, si hay (NMax-2) flujos con LN>LNt, entonces enviar los primeros (NMax-2) y ver E. ... EN OTRO CASO, si NO hay flujos con LN>LNt, entonces no enviar ningún flujo.",
        "E. Excepciones: SI el flujo que estaba en F en el último intervalo pertenece a este CS, entonces selecciona y envía ese flujo incluso si su LN es ahora < LNt. (Nota: esto ocurre solo en ese CS que tenía el flujo que fue el último de los tres en el período de paquetes anterior).",
        "Los paquetes enviados en los pasos D y E forman DB1.",
        "Los paquetes recibidos de otros CSs forman DB2.",
        "Para este intervalo de tiempo, encuentra los flujos globales NMax basados en LN de DB1 y DB2 (conjunto F).",
        "H. Envíe el conjunto F a los clientes en su dominio.",
        "Actualiza LNt para el próximo período.",
        "Algoritmo 3.",
        "Algoritmo optimista para reducir el número de paquetes enviados a través de Internet. Además, cuando se utiliza VAD [13], se reduciría aún más el tráfico al enviar solo la parte del encabezado del paquete RTP y no todo el paquete, con el fin de mantener actualizada la LN en todo momento.",
        "El tráfico aquí en este caso es O(NMax) para multicast y O(d) para unicast.",
        "Vemos que los algoritmos anteriores ahorran ancho de banda y cálculos en cada CS, y conducen a una arquitectura escalable con múltiples CS principalmente porque los clientes están agrupados en dominios.",
        "El ancho de banda necesario no depende del número total de clientes activos.",
        "Como el CS siempre elige a los tres mejores clientes de entre todos los clientes asignados en el dominio, la adición de nuevos clientes a la conferencia existente no causará ningún problema de escalabilidad. 8.3 Disponibilidad de Multidifusión En la arquitectura propuesta, no se hizo ninguna suposición sobre la disponibilidad de soporte de multidifusión de la red.",
        "El tráfico se reducirá aún más si la multidifusión está disponible a través de WAN.",
        "Es sencillo demostrar que el orden del tráfico tiende a ser O(d) en lugar de O(d2).",
        "Esta es una aproximación ya que el ahorro en la multidifusión también depende de la topología.",
        "El análisis se realizó para el caso en el que la multidifusión no está disponible (una suposición realista en el Internet de hoy en día).",
        "La ventaja de esta configuración es que podemos usarla incluso si la multidifusión está parcialmente disponible.",
        "Podemos instruir a los CSs durante la fase de configuración para enviar paquetes unicast a aquellos CSs que no pueden recibir paquetes multicast, mientras que los CSs en enrutadores habilitados para multicast pueden intercambiar paquetes en una dirección multicast.",
        "Las estructuras de datos y objetos de conferencia dentro de una CS se encuentran en [14].",
        "Fig. 7. \n\nFig. 7.",
        "Interfaz de usuario para establecer el peso de las corrientes de audio NMax (establecer la barra de auto a cero evita el eco). Mejora de calidad 8.4 La mejora observada en la calidad percibida del servicio de conferencias se debe a: (1) limitar el número de oradores concurrentes a un número bajo, como tres.",
        "Generalmente, en una conferencia, si hablan más de dos participantes se pierde la inteligibilidad.",
        "El análisis conversacional demuestra que en tal caso habría un mecanismo de reparación [15]. (2) Retraso: La transmisión de audio entre dos clientes pasará como máximo por dos servidores centrales, reduciendo así el retraso de extremo a extremo.",
        "Para una conferencia grande puede haber tres CSs, sin embargo, un salto está dentro del dominio incurriendo en un retraso insignificante. (3) Dado que las transmisiones se mezclan solo en los clientes, puede haber una mezcla personalizada de las transmisiones.",
        "La sintonización individual de la mezcla con pesos preserva el espacialismo.",
        "La Fig. 7 muestra la interfaz de usuario para lo mismo.",
        "El eco al seleccionar la auto-transmisión se puede evitar reduciendo el peso.",
        "Sin embargo, la retroalimentación ayuda a asegurar al hablante de que está siendo escuchado por todos.",
        "CONCLUSIÓN En este artículo, hemos presentado una discusión sobre un entorno de conferencias virtuales solo de voz.",
        "Hemos argumentado que la naturaleza distribuida de la implementación aquí la hace escalable.",
        "La interactividad se logra adaptando un esquema reciente de selección de flujo basado en el Número de Sonoridad.",
        "Además, incorporamos un resultado de un trabajo más reciente [15] donde se ha demostrado la suficiencia de tres hablantes simultáneos.",
        "Por lo tanto, hay una utilización significativamente efectiva del ancho de banda.",
        "Un flujo mixto se reproduce en cada cliente; cada cliente puede elegir tener una mezcla personalizada ya que la mezcla se realiza en el terminal local de cada cliente.",
        "Estos permiten que el discurso improvisado en una videoconferencia virtual a través de VoIP sea una realidad, como en una conferencia presencial real.",
        "La compatibilidad está asegurada gracias al uso de SIP, el protocolo de señalización más buscado.",
        "Para garantizar un rendimiento satisfactorio, no exigimos la disponibilidad de multidifusión, pero la utilizamos si está disponible.",
        "El tráfico en la WAN (Internet) está limitado por arriba por el cuadrado del número de dominios, --además se reduce aún más mediante el uso de algoritmos heurísticos-- lo cual está muy por debajo del número total de clientes en la conferencia.",
        "Esto se debe al uso de un Servidor de Conferencias local para cada dominio.",
        "Las técnicas de VAD ayudan a reducir aún más el tráfico.",
        "El uso del estándar SIP para la señalización hace que esta solución sea altamente interoperable.",
        "Hemos implementado una aplicación de CS en una red de campus.",
        "Creemos que esta nueva generación de entornos de conferencias virtuales ganará más popularidad en el futuro, ya que su facilidad de implementación está garantizada gracias a las tecnologías fácilmente disponibles y los marcos escalables.",
        "REFERENCIAS [1] L. Aguilar et al., Arquitectura para un Sistema de Teleconferencia Multimedia, en Actas de ACM SIGCOMM, Ago 1986, pp. 126-136. [2] Carsten Bormann, Joerg Ott et al., Protocolo de Control de Conferencias Simple, Borrador de Internet, Dic. 1996. [3] M. Decina y V. Trecordi, Voz sobre Protocolo de Internet y Comercio Electrónico Asistido por Humanos, IEEE Comm.",
        "Revista, septiembre de 1999, pp. 64-67. [4] Eckehard Doerry, Una comparación empírica de la interacción copresente y mediada tecnológicamente basada en la ruptura comunicativa, Tesis de doctorado, Escuela de Graduados de la Universidad de Oregón, 1995. [5] H. P. Dommel y J.J. Garcia-Luna-Aceves, Control de piso para conferencias y colaboración multimedia, J. Sistemas Multimedia, Vol. 5, No. 1, enero de 1997, pp. 23-38. [6] Amitava Dutta-Roy, Reuniones virtuales con videoconferencias de escritorio, IEEE Spectrum, julio de 1998, pp. 47-56. [7] M. Handley y V. Jacobson, SDP: Protocolo de Descripción de Sesiones, RFC 2327, IETF, abril de 1998. [8] M. Handley, J. Crowcroft et al., Conferencias muy grandes en Internet: la arquitectura de conferencias multimedia en Internet, Revista de Redes de Computadoras, vol. 31, No. 3, febrero de 1999, pp. 191-204. [9] Rec. ITU-T.",
        "H.323, Sistemas de Comunicaciones Multimedia basados en Paquetes, vol. 2, 1998. [10] P. Koskelainen, H. Schulzrinne y X. Wu, Un Marco de Control de Conferencias basado en SIP, NOSSDAV02, mayo de 2002, pp. 53-61. [11] R Venkatesha Prasad et al., Protocolo de Control para Soporte de Conferencias de Audio VoIP, Conferencia Internacional sobre Tecnología de Comunicación Avanzada, Mu-Ju, Corea del Sur, febrero de 2001, pp. 419-424. [12] R Venkatesha Prasad et al., Adición y Eliminación Automáticas de Clientes en Conferencias VoIP, 6º Simposio IEEE sobre Computadoras y Comunicaciones, julio de 2001, Hammamet, Túnez, pp. 386-390. [13] R Venkatesha Prasad, H S Jamadagni, Abjijeet, et al Comparación de Algoritmos de Detección de Actividad de Voz, 7º Simposio IEEE sobre Computadoras y Comunicaciones.",
        "Julio de 2002, Sicilia, Italia, pp. 530-535. [14] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, Una Conferencia VoIP Distribuida Escalable utilizando SIP, Actas del 8º Simposio de Computadoras y Comunicaciones de IEEE, Antalya, Turquía, junio de 2003. [15] R Venkatesha Prasad, H S Jamadagni y H N Shankar, Sobre el Problema de Especificar el Número de Pisos en una Conferencia Solo de Voz, Por aparecer en IEEE ITRE 2003. [16] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, Una Propuesta para Conferencias Distribuidas en SIP utilizando Servidores de Conferencias, Por aparecer en las Actas de MMNS 2003, Belfast, Reino Unido, septiembre de 2003. [17] R. Venkatesha Prasad, H.S.",
        "Jamadagni, J. Kuri, R.S.",
        "Varchas, un soporte de conferencias VoIP distribuido que utiliza el número de sonoridad, Tech.",
        "Rep. TR-CEDT-TE-03-01 [18] M. Radenkovic et al, Servicio de audio escalable y adaptable para apoyar el trabajo colaborativo y el entretenimiento a través de Internet, SSGRR 2002, LAquila, Italia, enero de 2002. [19] M. Radenkovic, C. Greenhalgh, S. Benford, Problemas de implementación para el soporte de audio multiusuario en CVEs, ACM VRST 2002, noviembre de 2002, pp. 179-185. [20] Srinivas Ramanathan, P. Venkata Rangan, Harrick M. Vin, Diseñando arquitecturas de comunicación para la colaboración multimedia interorganizacional, Journal of Organizational Computing, 2 (3&4), pp.277-302, 1992. [21] A.",
        "B. Roach, Notificación de Eventos Específicos del Protocolo de Inicio de Sesión (SIP), RFC 3265, IETF, junio de 2002. [22] J. Rosenberg, H. Schulzrinne et al., SIP: Protocolo de Inicio de Sesión, RFC 3261, IETF, junio de 2002. [23] J. Rosenberg, H. Schulzrinne, Modelos para Conferencias de Múltiples Partes en SIP, Borrador de Internet, IETF, julio de 2002. [24] H. Schulzrinne et al., RTP: un protocolo de transporte para aplicaciones en tiempo real, RFC 1889, IETF, enero de 1996. [25] Lisa R. Silverman, Llegada a la Madurez: Soluciones de Conferencias que Reducen Costos Corporativos, Documento Técnico, www.imcca.org/wpcomingofage.asp [26] Kundan Singh, Gautam Nair y Henning Schulzrinne, Conferencias Centralizadas utilizando SIP, Actas del 2do Taller de IP-Telefonía (IPTel), abril de 2001. [27] D. Thaler, M. Handley y D. Estrin, Arquitectura de Asignación de Direcciones de Multidifusión en Internet, RFC 2908, IETF, septiembre de 2000."
    ],
    "error_count": 3,
    "keys": {
        "voip conferencing system": {
            "translated_key": "sistema de conferencias VoIP",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Deployment Issues of a <br>voip conferencing system</br> in a Virtual Conferencing Environment R. Venkatesha Prasad i Richard Hurni ii H.S.",
                "Jamadagni iii H.N.",
                "Shankar iv i, iii Centre for Electronics Design and Technology Indian Institute of Science, Bangalore, India Telephone: +91 80 360 0810 i, iii {vprasad, hsjam}@cedt.iisc.ernet.in ii hurni@ieee.org iv hn_shankar@yahoo.com ABSTRACT Real-time services have been supported by and large on circuitswitched networks.",
                "Recent trends favour services ported on packet-switched networks.",
                "For audio conferencing, we need to consider many issues - scalability, quality of the conference application, floor control and load on the clients/servers - to name a few.",
                "In this paper, we describe an audio service framework designed to provide a Virtual Conferencing Environment (VCE).",
                "The system is designed to accommodate a large number of end users speaking at the same time and spread across the Internet.",
                "The framework is based on Conference Servers [14], which facilitate the audio handling, while we exploit the SIP capabilities for signaling purposes.",
                "Client selection is based on a recent quantifier called Loudness Number that helps mimic a physical face-to-face conference.",
                "We deal with deployment issues of the proposed solution both in terms of scalability and interactivity, while explaining the techniques we use to reduce the traffic.",
                "We have implemented a Conference Server (CS) application on a campus-wide network at our Institute.",
                "Categories and Subjects Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - Client / Server, distributed applications.",
                "General Terms Algorithms, Performance, Design, Theory. 1.",
                "INTRODUCTION Todays Internet uses the IP protocol suite that was primarily designed for the transport of data and provides best effort data delivery.",
                "Delay-constraints and characteristics separate traditional data on the one hand from voice & video applications on the other.",
                "Hence, as progressively time-sensitive voice and video applications are deployed on the Internet, the inadequacy of the Internet is exposed.",
                "Further, we seek to port telephone services on the Internet.",
                "Among them, virtual conference (teleconference) facility is at the cutting edge.",
                "Audio and video conferencing on Internet are popular [25] for the several advantages they inhere [3,6].",
                "Clearly, the bandwidth required for a teleconference over the Internet increases rapidly with the number of participants; reducing bandwidth without compromising audio quality is a challenge in Internet Telephony.",
                "Additional critical issues are: (a) packet delay, (b) echo, (c) mixing of audio from selected clients, (d) automatic selection of clients to participate in the conference, (e) playout of mixed audio for every client, (f) handling clients not capable of mixing audio streams (such clients are known as dumb clients), and (g) deciding the number of simultaneously active clients in the conference without compromising voice quality.",
                "While all the above requirements are from the technology point of view, the users perspective and interactions are also essential factors.",
                "There is plenty of discussion amongst HCI and CSCW community on the use of Ethnomethodology for design of CSCW applications.",
                "The basic approach is to provide larger bandwidth, more facilities and more advanced control mechanisms, looking forward to better quality of interaction.",
                "This approach ignores the functional utility of the environment that is used for collaboration.",
                "Eckehard Doerry [4] criticizes this approach by saying it is keeping form before function.",
                "Thus, the need is to take an approach that considers both aspects - the technical and the functional.",
                "Regarding the functional aspect, we refer to [15] where it has been dealt with in some detail.",
                "In this work, we do not discuss video conferencing; its inclusion does not significantly benefit conference quality [4].",
                "Our focus is on virtual audio environments.",
                "We first outline the challenges encountered in virtual audio conferences.",
                "Then we look into the motivations followed by relevant literature.",
                "In Section 5, we explain the architecture of our system.",
                "Section 6 comprises description of the various algorithms used in our setup.",
                "We address deployment issues.",
                "A discussion on Swiss Federal Institute of Technology, Lausanne.",
                "Former visitor at CEDT.",
                "PESIT and NIAS, Bangalore, India.iv ii performance follows.",
                "We conclude taking alongside some implementation issues. 2.",
                "CHALLENGES IN VoIP CONFERENCING Many challenges arise in building a VoIP application.",
                "The following are of particular concern in the process: • Ease of use: Conferencing must be simple; users need no domain expertise.",
                "Management (addition/removal) of clients and servers must be uncomplicated.",
                "Application development should not presuppose specific characteristics of the underlying system or of network layers.",
                "Ease of use may include leveraging readily available, technically feasible and economically viable technologies. • Scalability: Conferencing must seem uninterrupted under heavy loads, i.e., when many additional users are added on.",
                "Traffic on WAN should not grow appreciably with the total number of clients; else, this has lead to congestion.",
                "So a means to regulate traffic to a minimum is needed for this kind of real-time applications. • Interactivity: In Virtual Conferencing Environments (VCEs), we intend a face-to-face-like conferencing application that mimics a real conference, where more vocal participants invite attention.",
                "Turn-taking in floor occupation by participants must be adapted gracefully to give a feel of natural transition. • Standardization: The solution must conform to established standards so as to gain interoperability and peer acceptance.",
                "The above requirements are placed in the perspective of observations made in earlier works (vide Sections 3 and 4) and will steer the VCE design. 3.",
                "THE MOTIVATION Ramanathan and Rangan [20] have studied in detail the architectural configurations comparing many conferencing architecture schemes taking into consideration the network delay and computation requirements for mixing.",
                "Functional division and object-oriented architecture design that aid in implementation is presented in [1].",
                "An overview of many issues involved in supporting a large conference is dealt in [8].",
                "H. P. Dommel [5] and many others highlight floor control as another pivotal aspect to be taken into account in designing a conferencing tool.",
                "Tightly coupled conference control protocols in Internet belong to the ITU-T H.323 family [9]; however, they are mainly for small conferences.",
                "The latest IETF draft by Rosenberg and Schulzrinne [23] discusses conferencing models with SIP [22] in the background.",
                "Aspects of implementation for centralized SIP conferencing are reported in [26].",
                "A new approach called partial mixing by Radenkovic [18] allows for mixed and non-mixed streams to coexist.",
                "In all the above proposals, while there are some very useful suggestions, they share one or more of the following limitations: • In an audio conference, streams from all the clients need not be mixed.",
                "Actually, mixing many arbitrary streams [24] from clients degrades the quality of the conference due to the reduction in the volume (spatial aspect of speech).",
                "The number of streams mixed varies dynamically depending on the number of active participants.",
                "This would lead to fluctuations in the volume of every individual participant causing severe degradation in quality.",
                "Customized mixing of streams is not possible when many clients are active.",
                "There is a threshold on the number of simultaneous speakers above which increasing the number of speakers becomes counterproductive to conference quality.",
                "Fixing the maximum number of simultaneous speakers is dealt in a recent work [15] using Ethnomethodology, and is conjectured to be three.",
                "Thus it is advisable to honour that constraint. • There cannot be many intermediate mixers (similarly, Conference Servers as in [10]) in stages as in [20] because it brings in inordinate delay by increasing the number of hops and is not scalable with interactivity in focus. • Floor Control for an audio conference (even video conference) with explicit turn-taking instructions to participants renders the conference essentially a one-speakerat-a-time affair, not a live and free-to-interrupt one.",
                "This way, the conference becomes markedly artificial and its quality degrades.",
                "Schulzrinne et al. [24], assume only one participant is speaking at a time.",
                "In this case, if applications are implemented with some control [5], the service becomes gagging for the users. • Partial mixing [18] has a similar problem as that of mixing when more streams are mixed.",
                "Moreover, in [18], to allow impromptu speech, mixing is not done when the network can afford high bandwidth requirements for sending/receiving all the streams, but it is unnecessary [15]. • For large conferences [23, 10] a centralized conference cannot scale up.",
                "With multicasting, clients will have to parse many streams and traffic on a clients network increases unnecessarily.",
                "Evidently, different particular issues, all of which are a subset of requirements (defined in [14] and [16]) for a VoIP conferencing support, are tackled.",
                "Thus there is a need to address conferencing as a whole with all its requirements considered concurrently.",
                "Towards this goal, the <br>voip conferencing system</br> we propose is intended to be scalable and interactive.",
                "We make use of the Loudness Number for implementing floor control.",
                "This permits a participant to freely get into the speaking mode to interrupt the current speaker as in a natural face-to-face meeting.",
                "An upper limit on the number of floors (i.e., the number of speakers allowed to speak at the same time) is fixed using a conjecture proposed in [15].",
                "The work presented here is in continuation of our studies into conferencing based on the Session Initiation Protocol in [14] and [16].",
                "SIP, defined in [22] is now the most popular standard for VoIP deployment and has been chosen for its strength, ease of use, extensibility and compatibility.",
                "This is the reason it will be in the background of all controlling messages that will implicitly arise between the entities in our architecture.",
                "The actual messages are described in [16] and, as such, we do not present a complete description of them here. 4.",
                "RELATED WORK The SIP standard defined in RFC 3261 [22] and in later extensions such as [21] does not offer conference control services such as floor control or voting and does not prescribe how a conference is to be managed.",
                "However SIP can be used to initiate a session that uses some other conference control protocol.",
                "The core SIP specification supports many models for conferencing [26, 23].",
                "In the server-based models, a server mixes media streams, whereas in a server-less conference, mixing is done at the end systems.",
                "SDP [7] can be used to define media capabilities and provide other information about the conference.",
                "We shall now consider a few conference models in SIP that have been proposed recently [23].",
                "First, let us look into server-less models.",
                "In End-System Mixing, only one client (SIP UA) handles the signaling and media mixing for all the others, which is clearly not scalable and causes problems when that particular client leaves the conference.",
                "In the Users Joining model, a tree grows, as each invited party constitutes a new branch in the distribution path.",
                "This leads to an increasing number of hops for the remote leaves and is not scalable.",
                "Another option would be to use multicast for conferencing but multicast is not enabled over Internet and only possible on a LAN presently.",
                "Among server-based models, in a Dial-In Conference, UAs connect to a central server that handles all the mixing.",
                "This model is not scalable as it is limited by the processing power of the server and bandwidth of the network.",
                "Adhoc Centralized Conferences and Dial-Out Conference Servers have similar mechanisms and problems.",
                "Hybrid models involving centralized signaling and distributed media, with the latter using unicast or multicast, raise scalability problems as before.",
                "However an advantage is that the conference control can be a third party solution.",
                "Distributed Partial Mixing, presented in [18], proposes that in case of bandwidth limitation, some streams are mixed and some are not, leaving interactivity intact.",
                "Loss of spatialism when they mix and the bandwidth increase when they do not are open problems.",
                "A related study [19] by the same author proposes conferencing architecture for Collaborative Virtual Environments (CVEs) but does not provide the scalability angle without the availability of multicasting.",
                "With the limitations of proposed conferencing systems in mind, we will now detail our proposal. 5.",
                "SYSTEM ARCHITECTURE This section is dedicated to the description of the proposed system architecture.",
                "However, as this paper constitutes the continuation of our work started in [14] and furthered in [16], we will not present here all the details about the proposed entities and invite the readers to consult the papers mentioned above for a full and thorough description.",
                "First, we do not restrict our conferencing system to work on small conferences only, but rather on large audio VCEs that have hundreds (or even thousands) of users across a Wide Area Network (WAN) such as the Internet.",
                "This view stems from an appraisal that VCEs will gain in importance in the future, as interactive audio conferences will be more popular because of the spread of the media culture around the world.",
                "Two issues must be taken care of when building a <br>voip conferencing system</br>: (i) the front-end, consisting of the application program running on the end-users computers and (ii) the back-end that provides other application programs that facilitate conferencing and conference.",
                "The participating users are grouped into several domains.",
                "These domains are Local Area Networks (LANs), such as corporate or educational networks.",
                "This distributed assumption asks for distributed controlling and media handling solutions, as centralized systems would not scale for such very large conferences (vide Section 4).",
                "More explicitly, in each domain, we can identify several relevant logical components of a conferencing facility (Fig. 1):  An arbitrary number of end users (clients) that can take part in at most one audio conference at a time.",
                "Every user is Fig. 1.",
                "Conference example - 3 domains containing the necessary entities so that the conference can take place. included in one and only one domain at a given instant, but can move from domain to domain (nomadism).",
                "In our conferencing environment, these clients are regular SIP User Agents (SIP UAs), as defined in [22] so to gain in interoperability with other existing SIP-compatible systems.",
                "These clients are thus not aware of the complex setting that supports the conference and this is highlighted below.  One SIP Server (SIPS) per domain, taking care of all the signaling aspects of the conference (clients joining, leaving, etc.) [16].",
                "In particular, it is considered as a physical implementation encompassing different logical roles, namely a SIP Proxy Server, a SIP Registrar Server, a SIP Redirect Server and a SIP B2BUA (Back-to-Back User Agent) [22].",
                "This physical implementation enables the handling of incoming/outgoing SIP messages by one or another logical entity according to the needs.",
                "SIPS is entrusted with maintaining total service and has many advantages such as (a) it works as a centralized entity that can keep track of the activities of the UAs in a conference; (b) it can do all the switching for providing PBX features; (c) it can locate the UAs and invite them for a conference; (d) it can do the billing as well.",
                "SIPSs in different domains communicate with each other using SIP messages as described in [16].",
                "If the load on a particular SIPS is too heavy, it can create another SIPS in the same domain so that the load will be shared.  One Master Conference Server (M-CS) (simply a Conference Server (CS)) for each conference is created by the local SIPS when a conference starts.",
                "This server will be used for handling media packets for the clients of the domain.",
                "Its mechanism will be described in the next section.",
                "The M-CS will be able to create a hierarchy of CSs inside a domain by adding one or more Slave CSs (S-CSs) to accommodate all the active clients and prevent its own flooding at the same time.",
                "We will see this mechanism in some detail in the sequel.",
                "The entities described here are exhaustive and conform to the SIP philosophy.",
                "Thus, the use of SIP makes this architecture more useful and interoperable with any other SIP clients or servers. 6.",
                "ALGORITHMIC ISSUES 6.1 Selecting the Streams Similar to SipConf in [27], a Conference Server (CS) [17] has the function of supporting the conference; it is responsible for handling audio streams using RTP.",
                "It can also double to convert audio stream formats for a given client if necessary and can work as Translators/Mixers of RTP specification behind firewalls.",
                "We have based the design of our CS on H.323 Multipoint Processor (MP) [9].",
                "In short, the MP receives audio streams from the endpoints involved in a centralized or hybrid multipoint conference, processes them and returns them to the endpoints.",
                "An MP that processes audio prepares NMax audio outputs from M input streams after selection, mixing, or both.",
                "Audio mixing requires decoding the input audio to linear signals (PCM or analog), performing a linear combination of the signals and reencoding the result in an appropriate audio format.",
                "The MP may eliminate or attenuate some of the input signals in order to reduce noise and unwanted components.",
                "Fig. 2.",
                "Schematic diagram of a CS The limitation of H.323 is that it does not address the scalability of a conference.",
                "The architecture proposes a cascaded or daisy chain topology [10], which can be shown that it cannot scale up for a large conference.",
                "A CS serves many clients in the same conference.",
                "Thus it handles only one conference at a time.",
                "Multiple CSs may coexist in a domain, as when there are several conferences under way.",
                "Signaling-related messages of CSs are dealt in [11].",
                "The working of a CS is illustrated on Fig. 2: For each mixing interval, CS 1 chooses the best NMax audio packets out of the M1 (using a criterion termed Loudness Number, described in the next subsection).",
                "It may possibly receive and sends these to CSs 2 to P. The set of packets sent is denoted as ToOtherCSs.",
                "In the same mixing interval, it also receives the best NMax audio packets (out of possibly M2) from CS 2, similarly the best NMax (out of possibly MP) from CS P. For simplicity, we ignore propagation delay between CSs which indeed can be taken into account; it is beyond the scope of this presentation.",
                "The set of packets received is denoted as FromOtherCSs.",
                "Finally, it selects the best NMax packets from the set {ToOtherCSs union FromOtherCSs} and passes these packets to its own group.",
                "It can be seen that the set {ToOtherCSs union FromOtherCSs} is the same at all CSs.",
                "This ensures that any client in the conference finally receives the same set of packets for mixing.",
                "Hence all clients obtain a common view of the conference.",
                "Similarly, for each time slot (packet time), a subset, F of all clients is selected (using the same criterion) from the pool of packets from all other CSs plus the NMax clients selected locally.",
                "Their packets are mixed and played out at the clients.",
                "According to [15], the cardinality of F, |F| is NMax and is fixed at three.",
                "In our conferencing setup, selection is by the Master Conference Server (M-CS), which comes into the picture exclusively for media handling.",
                "Note that even if the SIP specification enables direct UA-to-UA media communication in a one-to-one call, it is also possible to use the Conference Server for two-party calls, especially because it is then more functional to create a real conference by adding a third and subsequently more participant(s).",
                "There are cases wherein the processing capacity of an M-CS is exceeded as it may have too many packets - from local domains and from remote domains - to process.",
                "In that case, the M-CS will create one or many S-CS (Fig. 6) and transfer its own clients as well as the new clients to them.",
                "In this configuration, the algorithm outlined above will be slightly modified, as the audio packets will go from clients to their dedicated S-CS that will select NMax packets to send to the local M-CS, which will then select NMax packets from all its S-CSs in the domain before sending them to the remote domains.",
                "The incoming packets from other domains will be received by the M-CS, select NMax of them and send them directly to the domain clients, bypassing the SCSs.",
                "This change implies that at most three intermediate entities exist for each audio packet, instead of two in the conventional setup.",
                "As the extra hop happens inside the LAN supposed to have a high-speed connectivity, we consider that it should not prevent us from using this hierarchy of CSs when theres a need to do so. 6.2 Loudness Number (LN) A basic question to be answered by the CS is the following.",
                "In a mixing interval, how should it choose NMax packets out of the M it might possibly receive?",
                "One way is to rank the M packets received according to their energies, and choose the top NMax.",
                "However, this is usually found to be inadequate because random fluctuations in packet energies can lead to poor audio quality.",
                "This indicates the need for a metric different from mere individual packet energies.",
                "The metric should have the following characteristics [12]: • A speaker (floor occupant) should not be cut off by a spike in the packet energy of another speaker.",
                "This implies that a speakers speech history should be given some weight.",
                "This is often referred to as Persistence or Hangover. • A participant who wants to interrupt a speaker will have to (i) speak loudly and (ii) keep trying for a little while.",
                "In a face-to-face conference, body language often indicates the intent to interrupt.",
                "But in a blind conference under discussion, a participants intention to interrupt can be conveyed effectively through LN.",
                "A floor control mechanism empowered to cut off a speaker forcefully must be ensured.",
                "These requirements are met by Loudness Number [12], which changes smoothly with time so that the selection (addition and deletion) of clients for conference is graceful.",
                "LN (= ) is a function of the amplitude of the current audio stream plus the activity and amplitude over a specific window in the past.",
                "Fig. 3.",
                "The different windows used for LN computation The Loudness Number is updated on a packet-by-packet basis.",
                "The basic parameter used here is packet amplitude, which is calculated as root mean square (rms) of the energies in audio samples of a packet, and denoted by XK.",
                "Three windows are defined as shown in Fig. 3.",
                "The present amplitude level of the speaker is found by calculating the moving average of packet amplitude (XK) within a window called Recent Past Window starting from the present instant to some past time.",
                "The past activity of the speaker is found by calculating the moving average of the packet amplitude (XK) within a window called Distant Past Window, which starts at the point where the Recent Past window ends and stretches back in the past for a pre-defined interval.",
                "The activity of the speaker in the past is found with a window called Activity Horizon, which spans the recent past window as well as the distant past window and beyond if necessary.",
                "Though the contribution of the activity horizon looks similar to the contribution of the recent past and distant past windows, past activity is computed from activity horizon window in a differently.",
                "Define the quantities during these three intervals as L1, L2 and L3.",
                "L1 quantifies the Recent Past speech activity, L2 the Distant Past speech activity and L3 gives a number corresponding to the speech activity in the Activity Horizon window quantifying how active the speaker was in the past few intervals.",
                "L3 yields a quantity that is proportional to the fraction of packets having energies above a pre-defined threshold (Eq. 3).",
                "The threshold is invariant across clients. ∑ +− = = 1 1 1 RPP P Wt tK K RP X W L (1) ∑ +−− −= = 1 2 1 DPRPP RPP WWt WtK K DP X W L (2) ∑ +− = ≥= 1 }{3 * 1 AHP P K Wt tK X AH I W L θθ (3) Where ifI KX 1}{ =≥θ θ≥KX = otherwise,0 The threshold is a constant. is set at 10-20 percent of the amplitude of the voice samples of a packet in our implementation here.",
                "Loudness Number λ for the present time instant (or the present packet) is calculated as, 332211 *L*L*L αααλ ++= (4) Here 1\u000f 2 DQG 3 are chosen such that: 0< 1\u000f 2\u001f\u0014\u000f \u0013\u001f 1\u000e 2\u001f\u0014 DQG 3=1-\u000b 1\u000e 2) Here, 1 is the weight given to the recent past speech, 2 is the weight given to distant past speech and 3 is the weight given to speech activity in the activity horizon window considered. 6.3 Safety, Liveness and Fairness The λ parameter KDV VRPH PHPRU\\ GHSHQGLQJ RQ WKH VSUHDG RI the windows.",
                "After one conferee becomes silent, another can take the floor.",
                "Also, as there is more than one channel, interruption is enabled.",
                "A loud conferee is more likely to be heard because of elevated λ.",
                "This ensures fairness to all conferees.",
                "After all, even in a face-to-face conference, a more vocal speaker grabs special attention.",
                "All these desirable characteristics are embedded into the LN.",
                "A comprehensive discussion on selection of the various parameters and the dynamics of LN are beyond the scope of this paper. 6.4 Selection Algorithm using the LN Following the developments in subsections 6.1 and 6.2, we present the simple algorithm that runs at each Master-Conference Server (Algorithm. 1).",
                "This algorithm is based on the discussions in section 6.1.",
                "The globally unique set F is found using this procedure.",
                "Repeat for each time slot at each M-CS { 1.",
                "Get all the packets from the Clients that belong to it. 2.",
                "Find at most NMax Clients that have PD[LPXP RXW RI 0 &OLHQWV LQ LWV GRPDLQ\u0011 3.",
                "Store a copy of packets from those NMax Clients in database DB1. 4.",
                "Send these NMax packets to other M-CSs (on Unicast or Multicast, depending on the configuration). 5.",
                "Similarly, receive packets from all other M-CSs and store them in database DB2. 6.",
                "Now compare the packets in DB1 and DB2 on WKH EDVLV RI DQG VHOHFW D PD[LPXP RI NMax amongst them (to form set F) that should be played out at each Client. 7.",
                "Send the NMax packets in set F to the Clients in its domain. 8.",
                "Mix these NMax audio packets in set F after linearising and send it to dumb Clients in the domain. }",
                "Algorithm 1.",
                "Selection algorithm The mechanism proposed here is also depicted on Fig. 6, where a single conference takes place between three domains.",
                "The shaded clients are the ones selected in their local domains; their audio streams will be sent to other CSs. 7.",
                "DEPLOYMENT ISSUES We now analyze deployment issues associated with conference management.",
                "How are domains to be organized to maximize the number of participants able to join?",
                "To address this, we define some useful parameters.  Let d be the number of different domains in which there are active clients in a given conference.  Let Mi be the number of active clients present in domain i ( di ≤≤1 ) in a given conference.",
                "The total number of active clients in the conference is thus ∑= = d i iMM 1 .  Let C be the maximum number of audio streams a Conference Server can handle in a packet time, also called capacity.",
                "C is set according to the processing power of the weakest CS in the conference but as it cannot be assumed that we know it a-priori, it can be set according to some minimum system requirement a machine must meet in order to take part in a conference.  Let NMax be the number of output streams a CS has to send to other CSs in remote domains (see section 6.1).",
                "We will set NMax =3 (=|F|), according to [15].",
                "The optimization problem is now to find the value of d that maximizes the total number of clients Mi served by one CS in a domain with capacity C. We first dispose the case where the capacity is not exceeded (the existing CS is not overloaded), and then proceed to the case where there exists a need to create more CSs when a single CS is overloaded.",
                "We assume that clients are equally distributed amongst the domains, as we may not have information to assume an a-priori distribution of the clients.",
                "We can specify no more than an upper bound on the number of clients acceptable, given the number of active domains d. 7.1 Conferencing with only One Level of CSs In this subsection, we consider that we have only one CS, i.e., a unique M-CS in each domain.",
                "Thus it cannot be overloaded.",
                "We consider that the system works as outlined in section 6.1: The Clients send their audio packets to their local CS, which selects NMax streams, before sending them to other CSs.",
                "In parallel, it also receives NMax streams for every other CSs before taking a decision on which NMax streams will be selected, sent and played out at each individual clients.",
                "For system stability, any CS in the conference should be able to handle its local clients in addition to the audio packets from other domains.",
                "Clearly then, the following inequality must hold for every domain: )1( −⋅+≥ dN d M C Max (5) The limiting case of (5) (taking the equality) takes the form 2 )( dNdNCM MaxMax ⋅−⋅+= (6) To optimize d with respect to M, we set 0)(2 =+−⋅⋅= ∂ ∂ MaxMax NCdN d M (7) yielding     ⋅ + = Max Max N NC d 2 (8) ([ ]* = Rounding to nearest integer) and hence, M from (6).",
                "C d M 50 9 234 100 17 884 150 26 1950 200 34 3434 250 42 5334 300 51 7650 350 59 10384 400 67 13534 450 76 17100 500 84 21084 Table 1.",
                "Values of d and M computed for some values of C with NMax = 3.",
                "In Table 1, we give the values of d and M that were computed using (8) and (6) with NMax = 3.",
                "We see that the values of d and M, being dependent of C, are therefore based on the weakest CS.",
                "We see that there is a trade-off between M and d. We could admit more domains in the conference, but at the expense of restricting the total number of clients M in the conference.",
                "While implementing and testing the Conference Servers on a Pentium III 1.4 GHz running Windows NT, we were able to set C=300.",
                "But with the advent of faster computers (> 3 GHz), one can easily set C to higher values and determine d and M accordingly.",
                "Fig. 4 shows a contour plot and Fig. 5, a 3D-mesh showing optimized solutions for CSs of different capacities.",
                "These lead us to maximize the number of domains, and hence, to maximize the total number of clients based on the capacity of various CSs.",
                "In Fig. 4, the individual curves represent the total number of clients targeted, and we select a lower value of d, for capacity C, for targeted M to reduce traffic on WAN.",
                "Fig. 5 represents a different perspective of the same data in 3D.",
                "Fig. 4.",
                "Contour Plot of Capacity versus Optimum number of domains for various conference sizes 7.2 Conferencing with Two Levels of CSs Now considering the case where the number of clients in a particular domain is too large, i.e., d M Mi ≥ (9) one has to avoid the denial of service for new clients due to overloading of Conference Server.",
                "This problem can be solved by introducing a second level of CSs inside the given domain, as in Fig. 6.",
                "The existing M-CS creates a Slave CS (S-CS) that can handle up to C end-users and to which it transfers all its active clients.",
                "Here, the system works differently as outlined in section 6.1: The Clients send their audio packets to their local S-CS, which selects NMax streams, before sending them to a local M-CS, which will proceed in the same way, before sending NMax streams to the other domains.",
                "Each newly created S-CS must run on a separate machine.",
                "The M-CS has to create more S-CSs if the number of active clients exceeds C in the course of the conference after the transfer.",
                "With this mechanism, the M-CS will be able to create utmost     −⋅− = Max Max N dNC U )1( S-CSs, (10) as it must handle 3 (= NMax) packets for each local S-CSs and 3 (= NMax) packets from each other remote domains.",
                "We can then calculate the maximum theoretical number of active clients CUMi ⋅= in each domain as well as M, for the whole conference as CUdM ⋅⋅= .",
                "Fig. 5. 3D Plot of Capacity versus Optimum number of domains for various conference sizes Of course, one could further create a third level in the hierarchy, giving the possibility of accommodating even more clients.",
                "This may be unnecessary as the number of possible clients is large enough with two levels. 8.",
                "PERFORMANCE DISCUSSION We now analyze the performance of the algorithm presented in subsection 6.3, i.e., the one taking care of the exchange of audio packets between the different domains.",
                "Note that the packets that are transiting within the LAN take advantage of the higher capacity (generally coupled with multicast capabilities) and therefore do not require a performance analysis.",
                "Thus we have to look only at the RTP packets over the WAN, i.e., between participating M-CSs.",
                "As each M-CS from a domain will be sending only NMax out of d M packets to the other CSs ( MaxN d M >> ), the bandwidth used by the application over a WAN is upper-bounded by the following expression.",
                "The total number of audio packets transiting over the WAN for each time slot is ∑ ∑= ≠=        d i d ijj MaxN 1 ,1 which is quadratic in the number of domains (i.e., O(d2 )).",
                "However, it is independent of the total number of active clients.",
                "This would not have been the case had all packets been sent over the network in each time slot.",
                "The saving is tremendous.",
                "Yet, one may contend that sending three packets to and from all domains is a waste of resources, as most of these streams will not be selected.",
                "If just one client is active, selecting a subset of clients in that domain is unnecessary.",
                "Pessimistic and optimistic algorithms as presented in the sequel aim at reducing the traffic further by harnessing the slow varying nature of the LN. 8.1 Pessimistic algorithm Consider a scenario wherein the lowest LN (called LNt) of the three globally selected streams (set F of Section 6.1) exceeds the LN of the most dominant stream of a domain.",
                "Evidently, the chances that the next two dominant streams of that domain being selected to F in the next packet period are less.",
                "Here, we send this most dominant stream and withhold the other two.",
                "There may be an error in unique selection across all domains for one packet period only.",
                "As LN varies slowly, the error would get automatically rectified in a subsequent packet period (slot).",
                "In this algorithm, there is at least one stream in each period.",
                "The net network traffic in a packet period in the best case is )1( −⋅ dd , i.e., )( 2 dO using unicast, instead of MaxNdd ⋅−⋅ )1( .",
                "Considerable valuable bandwidth can be saved using this heuristic.",
                "The resulting traffic complexity reduces from O(d2 ) to O(d) in multicast-enabled networks.",
                "Initialize LNt = 0 at an M-CS/S-CS A.",
                "In the first time slot (packet time), each CS sends the top NMax streams (based on their LN) to all other CSs.",
                "At each M-CS/S-CS and for each packet time: B.",
                "Find the value of lowest LN of the NMax globally selected streams (set F) from the previous time slot.",
                "Set LNt with this value.",
                "C. At each CS domain, select the NMax local streams that have maximum value of LN (ToOtherCSs set).",
                "D. Select streams that have LN > LNt.",
                "IF there are >= NMax streams with LN > LNt then send top NMax to other CSs.",
                "ELSE IF there are (NMax-1) streams with LN>LNt then send top (NMax-1) plus the one lower than LNt (i.e., top NMax) to other CSs.",
                "ELSE IF there are (NMax-2) streams with LN>LNt then send top (NMax-2) plus the one lower than LNt (i.e. top (NMax -1)) to other CSs. …… ELSE IF there are NO streams with LN> LNt then send top 1 stream to other CSs.",
                "E. Packets sent in step D form DB1.",
                "Packets received from other CSs form DB2.",
                "F. For this time slot, find global NMax streams based on LN from DB1 U DB2 (set F) G. Send set F to the clients in its domain.",
                "Update LNt for the next period.",
                "Algorithm 2.",
                "Pessimistic algorithm to reduce the number of packets sent over the Internet.",
                "Fig. 6.",
                "Example of a 2-level hierarchy of Conference Servers; the shaded Clients are the one selected by the M-CS and will be sent to other domains CSs.",
                "In this algorithm the saving in traffic is at the cost of relaxing the condition of formation of globally unique set F. However, the discrepancies in selected streams at different domains remain for a short period of time depending on the transportation delay between any two domains.",
                "Even for a total delay of 400ms, for only 10 packet time slots the uniqueness is lost.",
                "This duration in a real-time interactive conversation is non-perceivable by the listener.",
                "In the case that there is a joke and every one laughs, then there would be sudden rise in the number of packets and it would be upper bounded by MaxN)d(O 2 for a short period. 8.2 Optimistic Algorithm The traffic can be reduced further.",
                "The scheme in the following algorithm (Algorithm. 3) is withholding all the streams that have less value of LN compared to the least of the three in the set F. We can find the correct and unique three streams after a few time slots depending on the transportation delay between the domains.",
                "As the packet period is of the order of 40ms, the error in the selection is unnoticeable.",
                "The number of streams on network in this case is always restricted to NMax (=3).",
                "Even without Voice Activity Detection (VAD), there will be no more than three streams in the network in the best case, thus the total traffic is constant.",
                "A sudden burst of traffic, as described in 8.1, is a particular case.",
                "These advantages are due to exploitation of the characteristics of LN.",
                "Initialize LNt = 0 at an M-CS/S-CS A.",
                "In the first time slot (packet time), each CS sends the top NMax streams (based on their LN) to all other CSs.",
                "At each M-CS/S-CS and for each packet time: B.",
                "Find the value of lowest LN of the NMax globally selected streams (set F) from the previous time slot.",
                "Set LNt with this value.",
                "C. At each CS domain, select the NMax local streams that have maximum value of LN (ToOtherCSs set) D. Select streams that have LN > LNt IF there are >= NMax streams with LN > LNt then send top NMax to other CSs.",
                "ELSE IF there are (NMax-1) streams with LN>LNt then send top (NMax-1) and see E. ELSE IF there are (NMax-2) streams with LN>LNt then send top (NMax-2) and see E. …… ELSE IF there are NO streams with LN> LNt then dont send any stream.",
                "E. Exceptions: IF the stream that was in F in the last interval belongs to this CS then select and send that stream even if its LN is now < LNt. (Note this occurs only at that CS which had the stream that was the last of the three in the previous packet period.)",
                "F. Packets sent in step D and E form DB1.",
                "Packets received from other CSs form DB2.",
                "G. For this time slot, find global NMax streams based on LN from DB1 U DB2 (set F).",
                "H. Send set F to the clients in its domain.",
                "Update LNt for the next period.",
                "Algorithm 3.",
                "Optimistic algorithm to reduce the number of packets sent over the Internet Furthermore, when VAD is used [13], it would further reduce the traffic by sending the header part of the RTP packet only and not the whole packet, thus in order to keep updating the LN across.",
                "The traffic here in this case is O(NMax) for multicast and O(d) for unicast.",
                "We see that the above algorithms save bandwidth and computation at each CS, and leads to a scalable architecture with multiple CSs mainly because clients are grouped in domains.",
                "The necessary bandwidth is not dependent on the total number of active clients.",
                "As the CS always chooses the best three clients out of all the clients assigned to it in the domain, addition of new clients to the existing conference will not cause any scalability problem. 8.3 Availability of Multicasting In the architecture that has been proposed, no assumption was made about the availability of multicasting support from the network.",
                "The traffic will be further reduced if multicasting is available over WAN.",
                "It is simple to show that the order of traffic would tend to become O(d) from O(d2 ).",
                "This is an approximation as saving in multicasting depends also on the topology.",
                "The analysis was done for the case wherein multicast is not available (a realistic assumption in todays Internet).",
                "The advantage of this set up is that we can use it even if multicasting is partially available.",
                "We can instruct CSs during the set-up phase to send unicast packets to those CSs that cannot receive multicast packets whereas CSs on multicast enabled routers can exchange packets on a multicast address.",
                "The data structures and conference objects inside a CS is given in [14].",
                "Fig. 7.",
                "User Interface for setting the weight for NMax audio streams (setting Self-bar to zero avoids echo). 8.4 Quality Improvement The observed improvement in the perceived quality of the conference service is due to: (1) limiting the number of concurrent speakers to a low number such as three.",
                "Generally, in a conference if more than two participants speak the intelligibility is lost.",
                "The conversational analysis demonstrates that there would be a repair mechanism [15] in such a case. (2) Delay: The audio stream between any two clients will pass through at most two CSs thus reducing the end-to-end delay.",
                "For a large conference there might be three CSs however, one hop is within the domain incurring negligible delay. (3) As the streams are mixed only at the clients, there can be a customized mix of the streams.",
                "The individual tuning of mixing with weights the spatialism is preserved.",
                "Fig. 7 shows the user interface for the same.",
                "The echo when self-stream is selected can be avoided by reducing the weight.",
                "Nonetheless, feedback helps in reassuring speaker that he/she is heard by all. 9.",
                "CONCLUSION In this paper, we have presented a discussion on a voice-only virtual conferencing environment.",
                "We have argued that the distributed nature of deployment here makes it scalable.",
                "Interactivity is achieved by adapting a recent stream selection scheme based on Loudness Number.",
                "Additionally, we incorporate a result from a more recent work [15] where the sufficiency of three simultaneous speakers has been demonstrated.",
                "Thus, there is significantly effective utilization of bandwidth.",
                "A mixed stream is played out at each client; each client may choose to have a customized mix since mixing is done at the local terminal of each client.",
                "These render impromptu speech in a virtual teleconference over VoIP a reality, as in a real face-to-face conference.",
                "Compatibility is assured thanks to the use of SIP, the most soughtafter signaling protocol.",
                "To ensure a satisfying performance, we do not demand the availability of multicast, but use it if and when available.",
                "The traffic in the WAN (Internet) is upper-bounded by the square of the number of domains, -- further reduced by using heuristic algorithms -- which is far below the total number of clients in the conference.",
                "This is due to the use of a Conference Server local to each domain.",
                "VAD techniques help further traffic reduction.",
                "Using SIP standard for signaling makes this solution highly interoperable.",
                "We have implemented a CS application on a campus-wide network.",
                "We believe this new generation of virtual conferencing environments will gain more popularity in the future as their ease of deployment is assured thanks to readily available technologies and scalable frameworks. 10.",
                "REFERENCES [1] L Aguilar et al., Architecture for a Multimedia Teleconferencing System, in Proceedings of the ACM SIGCOMM, Aug 1986, pp. 126-136. [2] Carsten Bormann, Joerg Ott et al., Simple Conference Control Protocol, Internet Draft, Dec. 1996. [3] M. Decina and V. Trecordi, Voice over Internet Protocol and Human Assisted E-Commerce, IEEE Comm.",
                "Magazine, Sept. 1999, pp. 64-67. [4] Eckehard Doerry, An Empirical Comparison of Copresent and Technologically-mediated Interaction based on Communicative Breakdown, Phd Thesis, Graduate School of the University of Oregon, 1995. [5] H. P. Dommel and J.J. Garcia-Luna-Aceves, Floor Control for Multimedia Conferencing and Collaboration, J. Multimedia Systems, Vol. 5, No. 1, January 1997, pp. 23-38. [6] Amitava Dutta-Roy, Virtual Meetings with desktop conferencing, IEEE Spectrum, July 1998, pp. 47-56. [7] M. Handley and V. Jacobson, SDP: Session Description Protocol, RFC 2327, IETF, April 1998. [8] M. Handley, J. Crowcroft et al., Very large conferences on the Internet: the Internet multimedia conferencing architecture, Journal of Computer Networks, vol. 31, No. 3, Feb 1999, pp. 191-204. [9] ITU-T Rec.",
                "H.323, Packet based Multimedia Communications Systems, vol. 2, 1998. [10] P. Koskelainen, H. Schulzrinne and X. Wu, A SIP-based Conference Control Framework, NOSSDAV02, May 2002, pp. 53-61. [11] R Venkatesha Prasad et al., Control Protocol for VoIP Audio Conferencing Support, International Conference on Advanced Communication Technology, Mu-Ju, South Korea, Feb 2001, pp. 419-424. [12] R Venkatesha Prasad et al., Automatic Addition and Deletion of Clients in VoIP Conferencing, 6th IEEE Symposium on Computers and Communications, July 2001, Hammamet, Tunisia, pp. 386-390. [13] R Venkatesha Prasad, H S Jamadagni, Abjijeet, et al Comparison of Voice Activity Detection Algorithms, 7th IEEE Symposium on Computers and Communications.",
                "July 2002, Sicily, Italy, pp. 530-535. [14] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, A Scalable Distributed VoIP Conferencing using SIP, Proc. of the 8th IEEE Symposium on Computers and Communications, Antalya, Turkey, June 2003. [15] R Venkatesha Prasad, H S Jamadagni and H N Shankar, On Problem of Specifying Number of Floors in a Voice Only Conference, To appear in IEEE ITRE 2003. [16] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, A Proposal for Distributed Conferencing on SIP using Conference Servers, To appear in the Proc. of MMNS 2003, Belfast, UK, September 2003. [17] R. Venkatesha Prasad, H.S.",
                "Jamadagni, J. Kuri, R.S.",
                "Varchas, A Distributed VoIP Conferencing Support Using Loudness Number, Tech.",
                "Rep. TR-CEDT-TE-03-01 [18] M. Radenkovic et al, Scaleable and Adaptable Audio Service for Supporting Collaborative Work and Entertainment over the Internet, SSGRR 2002, LAquila, Italy, Jan. 2002. [19] M. Radenkovic, C. Greenhalgh, S. Benford, Deployment Issues for Multi-User Audio Support in CVEs, ACM VRST 2002, Nov. 2002, pp. 179-185. [20] Srinivas Ramanathan, P. Venkata Rangan, Harrick M. Vin, Designing Communication Architectures for Interorganizational Multimedia Collaboration, Journal of Organizational Computing, 2 (3&4), pp.277-302, 1992. [21] A.",
                "B. Roach, Session Initiation Protocol (SIP)-Specific Event Notification, RFC 3265, IETF, June 2002. [22] J. Rosenberg, H. Schulzrinne et al., SIP: Session Initiation Protocol, RFC 3261, IETF, June 2002. [23] J. Rosenberg, H. Schulzrinne, Models for Multy Party Conferencing in SIP, Internet Draft, IETF, July 2002. [24] H. Schulzrinne et al., RTP: a transport protocol for realtime applications, RFC 1889, IETF, Jan 1996. [25] Lisa R. Silverman, Coming of Age: Conferencing Solutions Cut Corporate Costs, White Paper, www.imcca.org/wpcomingofage.asp [26] Kundan Singh, Gautam Nair and Henning Schulzrinne, Centralized Conferencing using SIP, Proceedings of the 2nd IP-Telephony Workshop (IPTel), April 2001. [27] D. Thaler, M. Handley and D. Estrin, The Internet Multicast Address Allocation Architecture, RFC 2908, IETF, Sept. 2000."
            ],
            "original_annotated_samples": [
                "Deployment Issues of a <br>voip conferencing system</br> in a Virtual Conferencing Environment R. Venkatesha Prasad i Richard Hurni ii H.S.",
                "Towards this goal, the <br>voip conferencing system</br> we propose is intended to be scalable and interactive.",
                "Two issues must be taken care of when building a <br>voip conferencing system</br>: (i) the front-end, consisting of the application program running on the end-users computers and (ii) the back-end that provides other application programs that facilitate conferencing and conference."
            ],
            "translated_annotated_samples": [
                "Problemas de implementación de un <br>sistema de conferencias VoIP</br> en un entorno de conferencias virtuales. R. Venkatesha Prasad y Richard Hurni.",
                "Con este objetivo, el <br>sistema de conferencias VoIP</br> que proponemos está diseñado para ser escalable e interactivo.",
                "Dos aspectos deben ser atendidos al construir un <br>sistema de conferencias VoIP</br>: (i) el front-end, que consiste en el programa de aplicación que se ejecuta en las computadoras de los usuarios finales y (ii) el back-end que proporciona otros programas de aplicación que facilitan las conferencias y la conferencia."
            ],
            "translated_text": "Problemas de implementación de un <br>sistema de conferencias VoIP</br> en un entorno de conferencias virtuales. R. Venkatesha Prasad y Richard Hurni. Jamadagni iii H.N. Shankar iv i, iii Centro de Diseño y Tecnología Electrónica Instituto Indio de Ciencias, Bangalore, India Teléfono: +91 80 360 0810 i, iii {vprasad, hsjam}@cedt.iisc.ernet.in ii hurni@ieee.org iv hn_shankar@yahoo.com RESUMEN Los servicios en tiempo real han sido principalmente respaldados en redes conmutadas por circuitos. Las tendencias recientes favorecen los servicios trasladados a redes de conmutación de paquetes. Para las conferencias de audio, necesitamos considerar muchos aspectos, como la escalabilidad, la calidad de la aplicación de conferencia, el control de piso y la carga en los clientes/servidores, por nombrar algunos. En este documento, describimos un marco de servicio de audio diseñado para proporcionar un Entorno de Conferencias Virtuales (ECV). El sistema está diseñado para dar cabida a un gran número de usuarios finales hablando al mismo tiempo y distribuidos por Internet. El marco se basa en Servidores de Conferencia [14], que facilitan el manejo del audio, mientras que explotamos las capacidades de SIP para propósitos de señalización. La selección de clientes se basa en un reciente cuantificador llamado Número de Volumen que ayuda a imitar una conferencia física cara a cara. Nos ocupamos de los problemas de implementación de la solución propuesta tanto en términos de escalabilidad como de interactividad, mientras explicamos las técnicas que utilizamos para reducir el tráfico. Hemos implementado una aplicación de Servidor de Conferencias (CS) en una red de campus en nuestro Instituto. Categorías y Descriptores de Temas C.2.4 [Redes de Computadoras y Comunicación]: Sistemas Distribuidos - Cliente/Servidor, aplicaciones distribuidas. Términos generales Algoritmos, Rendimiento, Diseño, Teoría. 1. INTRODUCCIÓN El Internet de hoy utiliza el conjunto de protocolos IP que fue diseñado principalmente para el transporte de datos y proporciona la entrega de datos con el mejor esfuerzo. Las restricciones de retraso y las características diferencian los datos tradicionales por un lado, de las aplicaciones de voz y video por el otro. Por lo tanto, a medida que se implementan aplicaciones de voz y video cada vez más sensibles al tiempo en Internet, se pone de manifiesto la insuficiencia de la red. Además, buscamos trasladar servicios telefónicos a través de Internet. Entre ellos, la instalación de conferencia virtual (teleconferencia) está a la vanguardia. Las videoconferencias y conferencias de audio en Internet son populares por las varias ventajas que poseen. Claramente, el ancho de banda necesario para una videoconferencia a través de Internet aumenta rápidamente con el número de participantes; reducir el ancho de banda sin comprometer la calidad del audio es un desafío en la telefonía por Internet. Los problemas críticos adicionales son: (a) retraso de paquetes, (b) eco, (c) mezcla de audio de clientes seleccionados, (d) selección automática de clientes para participar en la conferencia, (e) reproducción de audio mezclado para cada cliente, (f) manejo de clientes que no son capaces de mezclar flujos de audio (estos clientes se conocen como clientes tontos), y (g) decidir el número de clientes activos simultáneamente en la conferencia sin comprometer la calidad de voz. Si bien todos los requisitos anteriores son desde el punto de vista tecnológico, la perspectiva de los usuarios y las interacciones también son factores esenciales. Hay mucha discusión entre la comunidad de HCI y CSCW sobre el uso de la Etnometodología para el diseño de aplicaciones de CSCW. El enfoque básico es proporcionar un ancho de banda más amplio, más instalaciones y mecanismos de control más avanzados, con miras a una mejor calidad de interacción. Este enfoque ignora la utilidad funcional del entorno que se utiliza para la colaboración. Eckehard Doerry [4] critica este enfoque diciendo que pone la forma antes que la función. Por lo tanto, la necesidad es adoptar un enfoque que considere ambos aspectos: el técnico y el funcional. En cuanto al aspecto funcional, nos referimos a [15] donde se ha tratado en cierto detalle. En este trabajo, no discutimos la videoconferencia; su inclusión no beneficia significativamente la calidad de la conferencia [4]. Nuestro enfoque está en entornos de audio virtuales. Primero describimos los desafíos encontrados en las conferencias de audio virtuales. Luego investigamos las motivaciones seguidas por la literatura relevante. En la Sección 5, explicamos la arquitectura de nuestro sistema. La sección 6 comprende la descripción de los diversos algoritmos utilizados en nuestra configuración. Abordamos problemas de implementación. Una discusión sobre el Instituto Federal Suizo de Tecnología, Lausana. Antiguo visitante en CEDT. PESIT y NIAS, Bangalore, India. El rendimiento sigue. Concluimos teniendo en cuenta algunos problemas de implementación. 2. DESAFÍOS EN LA VIDEOCONFERENCIA VoIP Surgen muchos desafíos al construir una aplicación VoIP. Lo siguiente es de particular preocupación en el proceso: • Facilidad de uso: la conferencia debe ser sencilla; los usuarios no necesitan experiencia en el dominio. La gestión (adición/eliminación) de clientes y servidores debe ser sencilla. El desarrollo de aplicaciones no debe presuponer características específicas del sistema subyacente o de las capas de red. La facilidad de uso puede incluir el aprovechamiento de tecnologías fácilmente disponibles, técnicamente factibles y económicamente viables. • Escalabilidad: Las conferencias deben parecer ininterrumpidas bajo cargas pesadas, es decir, cuando se agregan muchos usuarios adicionales. El tráfico en la WAN no debería aumentar apreciablemente con el número total de clientes; de lo contrario, esto podría provocar congestión. Por lo tanto, se necesita un medio para regular el tráfico al mínimo para este tipo de aplicaciones en tiempo real. • Interactividad: En Entornos de Conferencias Virtuales (ECVs), pretendemos una aplicación de conferencias cara a cara que imite una conferencia real, donde los participantes más vocales invitan la atención. El intercambio de turnos en la ocupación del espacio por parte de los participantes debe adaptarse con gracia para lograr una transición natural. • Estandarización: La solución debe cumplir con los estándares establecidos para lograr interoperabilidad y aceptación entre pares. Los requisitos anteriores se colocan en la perspectiva de las observaciones realizadas en trabajos anteriores (véase Secciones 3 y 4) y guiarán el diseño del VCE. 3. La motivación Ramanathan y Rangan [20] han estudiado en detalle las configuraciones arquitectónicas comparando muchos esquemas de arquitectura de conferencias teniendo en cuenta la demora de red y los requisitos de computación para la mezcla. La división funcional y el diseño de arquitectura orientada a objetos que ayudan en la implementación se presentan en [1]. Un resumen de muchos temas relacionados con el apoyo a una conferencia grande se aborda en [8]. H. P. Dommel [5] y muchos otros destacan el control de piso como otro aspecto fundamental a tener en cuenta en el diseño de una herramienta de conferencias. Los protocolos de control de conferencias fuertemente acoplados en Internet pertenecen a la familia ITU-T H.323 [9]; sin embargo, están principalmente diseñados para conferencias pequeñas. El último borrador del IETF de Rosenberg y Schulzrinne [23] discute modelos de conferencia con SIP [22] en el fondo. Los aspectos de implementación para la conferencia SIP centralizada se informan en [26]. Un nuevo enfoque llamado mezcla parcial por Radenkovic [18] permite que flujos mezclados y no mezclados coexistan. En todas las propuestas anteriores, si bien hay algunas sugerencias muy útiles, comparten una o más de las siguientes limitaciones: • En una conferencia de audio, no es necesario mezclar los flujos de todos los clientes. De hecho, mezclar muchas corrientes arbitrarias [24] de clientes degrada la calidad de la conferencia debido a la reducción en el volumen (aspecto espacial del habla). El número de flujos mezclados varía dinámicamente dependiendo del número de participantes activos. Esto provocaría fluctuaciones en el volumen de cada participante individual, causando una degradación severa en la calidad. La mezcla personalizada de flujos no es posible cuando hay muchos clientes activos. Existe un umbral en el número de oradores simultáneos por encima del cual aumentar el número de oradores se vuelve contraproducente para la calidad de la conferencia. La fijación del número máximo de hablantes simultáneos se aborda en un trabajo reciente [15] utilizando la Etnometodología, y se postula que es tres. Por lo tanto, es recomendable respetar esa restricción. • No puede haber muchos mezcladores intermedios (similarmente, Servidores de Conferencia como en [10]) en etapas como en [20] porque provoca un retraso desmedido al aumentar el número de saltos y no es escalable con la interactividad como enfoque. • El Control de Piso para una conferencia de audio (incluso de video) con instrucciones explícitas de toma de turnos para los participantes convierte la conferencia en esencia en un asunto de un orador a la vez, no en una en vivo y libre de interrupciones. De esta manera, la conferencia se vuelve notablemente artificial y su calidad se degrada. Schulzrinne et al. [24], asumen que solo un participante está hablando en un momento dado. En este caso, si las aplicaciones se implementan con cierto control [5], el servicio se vuelve asfixiante para los usuarios. • La mezcla parcial [18] tiene un problema similar al de la mezcla cuando se mezclan más flujos. Además, en [18], para permitir el discurso improvisado, la mezcla no se realiza cuando la red puede soportar altos requisitos de ancho de banda para enviar/recibir todas las transmisiones, pero es innecesaria [15]. • Para conferencias grandes [23, 10] una conferencia centralizada no puede escalar. Con la multidifusión, los clientes tendrán que analizar muchos flujos y el tráfico en la red de los clientes aumenta innecesariamente. Evidentemente, se abordan diferentes problemas particulares, todos los cuales son un subconjunto de los requisitos (definidos en [14] y [16]) para el soporte de conferencias de VoIP. Por lo tanto, es necesario abordar la conferencia en su totalidad teniendo en cuenta todos sus requisitos de manera simultánea. Con este objetivo, el <br>sistema de conferencias VoIP</br> que proponemos está diseñado para ser escalable e interactivo. Hacemos uso del Número de Sonoridad para implementar el control de volumen. Esto permite a un participante entrar libremente en el modo de hablar para interrumpir al orador actual como en una reunión natural cara a cara. Un límite superior en el número de pisos (es decir, el número de oradores permitidos para hablar al mismo tiempo) se fija utilizando una conjetura propuesta en [15]. El trabajo presentado aquí es una continuación de nuestros estudios sobre conferencias basadas en el Protocolo de Inicio de Sesión en [14] y [16]. SIP, definido en [22], es ahora el estándar más popular para implementación de VoIP y ha sido elegido por su fortaleza, facilidad de uso, extensibilidad y compatibilidad. Esta es la razón por la cual estará en el trasfondo de todos los mensajes de control que surgirán implícitamente entre las entidades en nuestra arquitectura. Los mensajes actuales están descritos en [16] y, como tal, no presentamos una descripción completa de ellos aquí. 4. TRABAJO RELACIONADO El estándar SIP definido en el RFC 3261 [22] y en extensiones posteriores como [21] no ofrece servicios de control de conferencias como control de piso o votación y no prescribe cómo debe ser gestionada una conferencia. Sin embargo, SIP se puede utilizar para iniciar una sesión que utilice algún otro protocolo de control de conferencias. La especificación central de SIP soporta muchos modelos para conferencias [26, 23]. En los modelos basados en servidor, un servidor mezcla flujos de medios, mientras que en una conferencia sin servidor, la mezcla se realiza en los sistemas finales. SDP [7] se puede utilizar para definir las capacidades de los medios y proporcionar otra información sobre la conferencia. Ahora consideraremos algunos modelos de conferencia en SIP que han sido propuestos recientemente [23]. Primero, veamos los modelos sin servidor. En la mezcla de extremos del sistema, solo un cliente (SIP UA) maneja la señalización y la mezcla de medios para todos los demás, lo cual claramente no es escalable y causa problemas cuando ese cliente en particular abandona la conferencia. En el modelo de Usuarios que se unen, un árbol crece, ya que cada parte invitada constituye una nueva rama en el camino de distribución. Esto conduce a un número creciente de saltos para las hojas remotas y no es escalable. Otra opción sería utilizar la multidifusión para las videoconferencias, pero actualmente la multidifusión no está habilitada en Internet y solo es posible en una LAN. Entre los modelos basados en servidor, en una conferencia de marcado, los UAs se conectan a un servidor central que maneja todas las mezclas. Este modelo no es escalable ya que está limitado por la potencia de procesamiento del servidor y el ancho de banda de la red. Las conferencias centralizadas ad hoc y los servidores de conferencias de marcado tienen mecanismos y problemas similares. Los modelos híbridos que involucran señalización centralizada y medios distribuidos, con estos últimos utilizando unicast o multicast, plantean problemas de escalabilidad como antes. Sin embargo, una ventaja es que el control de la conferencia puede ser una solución de terceros. La Mezcla Parcial Distribuida, presentada en [18], propone que en caso de limitación de ancho de banda, algunos flujos se mezclan y otros no, manteniendo la interactividad intacta. La pérdida de espacialidad cuando se mezclan y el aumento del ancho de banda cuando no lo hacen son problemas abiertos. Un estudio relacionado [19] del mismo autor propone una arquitectura de conferencias para Entornos Virtuales Colaborativos (CVEs) pero no proporciona el enfoque de escalabilidad sin la disponibilidad de la multidifusión. Teniendo en cuenta las limitaciones de los sistemas de conferencias propuestos, detallaremos ahora nuestra propuesta. 5. ARQUITECTURA DEL SISTEMA Esta sección está dedicada a la descripción de la arquitectura del sistema propuesto. Sin embargo, dado que este documento constituye la continuación de nuestro trabajo iniciado en [14] y ampliado en [16], no presentaremos aquí todos los detalles sobre las entidades propuestas e invitamos a los lectores a consultar los documentos mencionados anteriormente para obtener una descripción completa y detallada. Primero, no restringimos nuestro sistema de conferencias para funcionar solo en conferencias pequeñas, sino en grandes VCEs de audio que tienen cientos (o incluso miles) de usuarios a través de una Red de Área Amplia (WAN) como Internet. Esta perspectiva se deriva de una evaluación de que los VCEs ganarán importancia en el futuro, ya que las conferencias de audio interactivas serán más populares debido a la difusión de la cultura mediática en todo el mundo. Dos aspectos deben ser atendidos al construir un <br>sistema de conferencias VoIP</br>: (i) el front-end, que consiste en el programa de aplicación que se ejecuta en las computadoras de los usuarios finales y (ii) el back-end que proporciona otros programas de aplicación que facilitan las conferencias y la conferencia. Los usuarios participantes se agrupan en varios dominios. Estos dominios son Redes de Área Local (LAN), como redes corporativas o educativas. Esta suposición distribuida requiere soluciones de control y manejo de medios distribuidos, ya que los sistemas centralizados no serían escalables para conferencias tan grandes (ver Sección 4). Más explícitamente, en cada dominio, podemos identificar varios componentes lógicos relevantes de una instalación de conferencias (Fig. 1): Un número arbitrario de usuarios finales (clientes) que pueden participar en como máximo una conferencia de audio a la vez. Cada usuario es la Fig. 1. Ejemplo de conferencia: 3 dominios que contienen las entidades necesarias para que la conferencia pueda tener lugar. Incluidas en un único dominio en un instante dado, pero pueden moverse de un dominio a otro (nomadismo). En nuestro entorno de conferencias, estos clientes son Agentes de Usuario SIP (SIP UAs) regulares, según se define en [22], para lograr interoperabilidad con otros sistemas compatibles con SIP existentes. Estos clientes no son conscientes del entorno complejo que respalda la conferencia, lo cual se destaca a continuación. Un servidor SIP (SIPS) por dominio, encargándose de todos los aspectos de señalización de la conferencia (clientes que se unen, salen, etc.) [16]. En particular, se considera como una implementación física que abarca diferentes roles lógicos, a saber, un Servidor Proxy SIP, un Servidor Registrador SIP, un Servidor de Redirección SIP y un SIP B2BUA (Agente de Usuario de Vuelta a Vuelta) [22]. Esta implementación física permite el manejo de mensajes SIP entrantes/salientes por una u otra entidad lógica según sea necesario. SIPS está encargado de mantener un servicio total y tiene muchas ventajas, como (a) funciona como una entidad centralizada que puede hacer un seguimiento de las actividades de los UAs en una conferencia; (b) puede realizar todo el cambio para proporcionar funciones de PBX; (c) puede localizar a los UAs e invitarlos a una conferencia; (d) también puede encargarse de la facturación. Los SIPS en diferentes dominios se comunican entre sí utilizando mensajes SIP como se describe en [16]. Si la carga en un SIPS particular es demasiado pesada, puede crear otro SIPS en el mismo dominio para que la carga se comparta. Se crea un Servidor de Conferencias Maestro (M-CS) (simplemente un Servidor de Conferencias (CS)) para cada conferencia por el SIPS local cuando una conferencia comienza. Este servidor se utilizará para manejar paquetes de medios para los clientes del dominio. Su mecanismo será descrito en la siguiente sección. El M-CS podrá crear una jerarquía de CSs dentro de un dominio agregando uno o más CSs esclavos (S-CSs) para dar cabida a todos los clientes activos y prevenir su propia saturación al mismo tiempo. Veremos este mecanismo con cierto detalle en la secuela. Las entidades descritas aquí son exhaustivas y se ajustan a la filosofía del SIP. Por lo tanto, el uso de SIP hace que esta arquitectura sea más útil e interoperable con cualquier otro cliente o servidor SIP. PROBLEMAS ALGORÍTMICOS 6.1 Seleccionar los flujos similares a SipConf en [27], un Servidor de Conferencias (CS) [17] tiene la función de soportar la conferencia; es responsable de manejar los flujos de audio utilizando RTP. También puede duplicarse para convertir formatos de transmisión de audio para un cliente dado si es necesario y puede funcionar como Traductores/Mezcladores de la especificación RTP detrás de cortafuegos. Hemos basado el diseño de nuestro CS en el Procesador Multipunto (MP) H.323 [9]. En resumen, el MP recibe flujos de audio de los puntos finales involucrados en una conferencia multipunto centralizada o híbrida, los procesa y los devuelve a los puntos finales. Un procesador de señales de audio prepara N salidas de audio NMax a partir de M flujos de entrada después de la selección, mezcla o ambas. La mezcla de audio requiere decodificar el audio de entrada a señales lineales (PCM o analógicas), realizar una combinación lineal de las señales y volver a codificar el resultado en un formato de audio apropiado. El procesador de señales puede eliminar o atenuar algunas de las señales de entrada para reducir el ruido y los componentes no deseados. Fig. 2. \n\nFig. 2. El diagrama esquemático de un CS. La limitación de H.323 es que no aborda la escalabilidad de una conferencia. La arquitectura propone una topología en cascada o en cadena de margaritas [10], la cual se puede demostrar que no puede escalar para una conferencia grande. Un CS atiende a muchos clientes en la misma conferencia. Por lo tanto, solo maneja una conferencia a la vez. Varios CS pueden coexistir en un dominio, como cuando hay varias conferencias en curso. Los mensajes relacionados con la señalización de los CSs se tratan en [11]. El funcionamiento de un CS se ilustra en la Fig. 2: Para cada intervalo de mezcla, CS 1 elige los mejores NMax paquetes de audio de los M1 (utilizando un criterio denominado Número de Volumen, descrito en la siguiente subsección). Puede posiblemente recibir y enviar estos a CSs 2 a P. El conjunto de paquetes enviados se denota como AotrosCSs. En el mismo intervalo de mezcla, también recibe los mejores paquetes de audio NMax (de un posible M2) de CS 2, de manera similar a los mejores NMax (de un posible MP) de CS P. Para simplificar, ignoramos el retardo de propagación entre los CSs, que de hecho se puede tener en cuenta; está más allá del alcance de esta presentación. El conjunto de paquetes recibidos se denota como FromOtherCSs. Finalmente, selecciona los mejores paquetes NMax del conjunto {ToOtherCSs unión FromOtherCSs} y envía estos paquetes a su propio grupo. Se puede observar que el conjunto {ToOtherCSs unión FromOtherCSs} es el mismo en todos los CSs. Esto garantiza que cualquier cliente en la conferencia finalmente reciba el mismo conjunto de paquetes para mezclar. Por lo tanto, todos los clientes obtienen una vista común de la conferencia. De manera similar, para cada intervalo de tiempo (tiempo de paquete), se selecciona un subconjunto, F, de todos los clientes (utilizando el mismo criterio) del conjunto de paquetes de todos los otros CS más los NMax clientes seleccionados localmente. Sus paquetes se mezclan y se reproducen en los clientes. Según [15], la cardinalidad de F, |F| es NMax y está fijada en tres. En nuestra configuración de conferencias, la selección la realiza el Servidor Maestro de Conferencias (M-CS), que interviene exclusivamente en el manejo de medios. Ten en cuenta que aunque la especificación de SIP permite la comunicación directa de medios de usuario a usuario en una llamada uno a uno, también es posible utilizar el Servidor de Conferencias para llamadas de dos partes, especialmente porque es entonces más funcional crear una conferencia real agregando un tercero y posteriormente más participantes. Existen casos en los que la capacidad de procesamiento de un M-CS se ve superada, ya que puede tener demasiados paquetes, tanto de dominios locales como de dominios remotos, para procesar. En ese caso, el M-CS creará uno o varios S-CS (Fig. 6) y transferirá a sus propios clientes, así como a los nuevos clientes, a ellos. En esta configuración, el algoritmo descrito anteriormente se modificará ligeramente, ya que los paquetes de audio irán de los clientes a su S-CS dedicado, que seleccionará NMax paquetes para enviar al M-CS local, que luego seleccionará NMax paquetes de todos sus S-CS en el dominio antes de enviarlos a los dominios remotos. Los paquetes entrantes de otros dominios serán recibidos por el M-CS, se seleccionarán NMax de ellos y se enviarán directamente a los clientes del dominio, evitando los SCSs. Este cambio implica que existen como máximo tres entidades intermedias para cada paquete de audio, en lugar de dos en la configuración convencional. Dado que el salto adicional ocurre dentro de la LAN que se supone tiene una conectividad de alta velocidad, consideramos que no debería impedirnos usar esta jerarquía de CS cuando sea necesario hacerlo. 6.2 Número de Sonoridad (LN) Una pregunta básica que debe responder el CS es la siguiente. En un intervalo de mezcla, ¿cómo debería elegir NMax paquetes de los M que podría recibir? Una forma es clasificar los paquetes M recibidos según sus energías y elegir los NMax mejores. Sin embargo, esto suele considerarse insuficiente porque las fluctuaciones aleatorias en las energías de los paquetes pueden provocar una mala calidad de audio. Esto indica la necesidad de una métrica diferente de meras energías individuales de paquetes. El medidor debe tener las siguientes características [12]: • Un hablante (ocupante del suelo) no debe ser interrumpido por un pico en la energía del paquete de otro hablante. Esto implica que la historia del discurso de un hablante debería tener cierto peso. Esto se suele llamar Persistencia o Resaca. • Un participante que quiera interrumpir a un orador tendrá que (i) hablar en voz alta y (ii) seguir intentándolo por un tiempo breve. En una conferencia presencial, el lenguaje corporal a menudo indica la intención de interrumpir. Pero en una conferencia a ciegas en discusión, la intención de un participante de interrumpir puede ser transmitida de manera efectiva a través de LN. Se debe garantizar un mecanismo de control de piso habilitado para cortar a un orador de manera contundente. Estos requisitos son cumplidos por el Número de Volumen [12], que cambia suavemente con el tiempo para que la selección (adición y eliminación) de clientes para la conferencia sea elegante. LN (= ) es una función de la amplitud de la corriente de audio actual más la actividad y amplitud en una ventana específica en el pasado. Fig. 3. \n\nFig. 3. Las diferentes ventanas utilizadas para el cálculo de LN se actualizan en una base de paquete por paquete. El parámetro básico utilizado aquí es la amplitud del paquete, que se calcula como la raíz cuadrada de la media cuadrática (rms) de las energías en las muestras de audio de un paquete, y se denota como XK. Tres ventanas están definidas como se muestra en la Fig. 3. El nivel de amplitud actual del altavoz se encuentra calculando el promedio móvil de la amplitud del paquete (XK) dentro de una ventana llamada Ventana de Pasado Reciente, que va desde el instante presente hasta algún momento pasado. La actividad pasada del hablante se encuentra calculando el promedio móvil de la amplitud del paquete (XK) dentro de una ventana llamada Ventana de Pasado Lejano, que comienza en el punto donde termina la ventana de Pasado Reciente y se extiende hacia atrás en el pasado por un intervalo predefinido. La actividad del hablante en el pasado se encuentra con una ventana llamada Horizonte de Actividad, que abarca la ventana del pasado reciente, así como la ventana del pasado lejano y más allá si es necesario. Aunque la contribución del horizonte de actividad parece similar a la contribución de las ventanas del pasado reciente y pasado lejano, la actividad pasada se calcula de manera diferente a partir de la ventana del horizonte de actividad. Define las cantidades durante estos tres intervalos como L1, L2 y L3. L1 cuantifica la actividad de habla del Pasado Reciente, L2 la actividad de habla del Pasado Lejano y L3 proporciona un número correspondiente a la actividad de habla en la ventana del Horizonte de Actividad, cuantificando qué tan activo estuvo el hablante en los últimos intervalos. L3 produce una cantidad que es proporcional a la fracción de paquetes que tienen energías por encima de un umbral predefinido (Ec. 3). El umbral es invariable entre clientes. ∑ +− = = 1 1 1 RPP P Wt tK K RP X W L (1) ∑ +−− −= = 1 2 1 DPRPP RPP WWt WtK K DP X W L (2) ∑ +− = ≥= 1 }{3 * 1 AHP P K Wt tK X AH I W L θθ (3) Donde siI KX 1}{ =≥θ θ≥KX = de lo contrario,0 El umbral es una constante. Se establece en el 10-20 por ciento de la amplitud de las muestras de voz de un paquete en nuestra implementación aquí. El número de intensidad λ para el instante de tiempo presente (o el paquete presente) se calcula como, 332211 *L*L*L αααλ ++= (4) Aquí 1, 2 y 3 son elegidos de tal manera que: 0< 1, 2 y 3=1- 1) Aquí, 1 es el peso dado al habla del pasado reciente, 2 es el peso dado al habla del pasado lejano y 3 es el peso dado a la actividad del habla en la ventana de horizonte de actividad considerada. 6.3 Seguridad, Vida y Equidad El parámetro λ tiene un efecto significativo en la evaluación de la ventana. Después de que un conferenciante se queda en silencio, otro puede tomar la palabra. Además, dado que hay más de un canal, la interrupción está habilitada. Un conferenciante ruidoso es más probable que sea escuchado debido a un λ elevado. Esto garantiza equidad para todos los conferenciantes. Después de todo, incluso en una conferencia presencial, un orador más vocal capta una atención especial. Todas estas características deseables están integradas en la LN. Una discusión exhaustiva sobre la selección de los diversos parámetros y la dinámica de LN están fuera del alcance de este documento. 6.4 Algoritmo de selección utilizando LN Siguiendo los desarrollos en las subsecciones 6.1 y 6.2, presentamos el algoritmo simple que se ejecuta en cada Servidor Maestro-Conferencia (Algoritmo 1). Este algoritmo se basa en las discusiones de la sección 6.1. El conjunto F, único a nivel mundial, se encuentra utilizando este procedimiento. Repetir para cada intervalo de tiempo en cada M-CS { 1. Obtener todos los paquetes de los clientes que le pertenecen. 2. Encuentra como máximo NMax clientes que tengan un PD[LPXP RXW RI 0 &OLHQWV LQ LWV GRPDLQ\u0011 3. Almacene una copia de los paquetes de esos clientes NMax en la base de datos DB1. Envía estos paquetes NMax a otros M-CSs (en Unicast o Multicast, dependiendo de la configuración). 5. De igual manera, recibir paquetes de todos los demás M-CSs y almacenarlos en la base de datos DB2. 6. Ahora compara los paquetes en DB1 y DB2 en WKH EDVLV RI DQG VHOHFW D PD[LPXP RI NMax entre ellos (para formar el conjunto F) que deberían ser reproducidos en cada Cliente. 7. Enviar los paquetes NMax en el conjunto F a los Clientes en su dominio. 8. Mezcla estos paquetes de audio NMax en el conjunto F después de linearizarlos y envíalos a Clientes sin capacidad en el dominio. Algoritmo 1. Algoritmo de selección El mecanismo propuesto aquí también se muestra en la Fig. 6, donde tiene lugar una única conferencia entre tres dominios. Los clientes sombreados son los seleccionados en sus dominios locales; sus flujos de audio serán enviados a otros CSs. 7. PROBLEMAS DE DESPLIEGUE Ahora analizamos los problemas de despliegue asociados con la gestión de conferencias. ¿Cómo deben organizarse los dominios para maximizar el número de participantes que pueden unirse? Para abordar esto, definimos algunos parámetros útiles.  Sea d el número de dominios diferentes en los que hay clientes activos en una conferencia dada.  Sea Mi el número de clientes activos presentes en el dominio i (di ≤≤1) en una conferencia dada. El número total de clientes activos en la conferencia es por lo tanto ∑= = d i iMM 1. Sea C el número máximo de flujos de audio que un Servidor de Conferencias puede manejar en un tiempo de paquete, también llamado capacidad. C se establece de acuerdo con la potencia de procesamiento del CS más débil en la conferencia, pero como no se puede asumir que lo conocemos de antemano, se puede establecer de acuerdo con algún requisito mínimo del sistema que una máquina debe cumplir para participar en una conferencia. Deje que NMax sea el número de flujos de salida que un CS debe enviar a otros CS en dominios remotos (ver sección 6.1). Estableceremos NMax = 3 (=|F|), según [15]. El problema de optimización consiste en encontrar el valor de d que maximiza el número total de clientes Mi atendidos por un CS en un dominio con capacidad C. Primero consideramos el caso en el que la capacidad no es excedida (el CS existente no está sobrecargado), y luego procedemos al caso en el que es necesario crear más CS cuando un CS único está sobrecargado. Suponemos que los clientes están distribuidos de manera equitativa entre los dominios, ya que no tenemos información para asumir una distribución a priori de los clientes. Podemos especificar únicamente un límite superior en el número de clientes aceptables, dado el número de dominios activos d. 7.1 Conferencias con solo un nivel de CSs En esta subsección, consideramos que tenemos solo un CS, es decir, un único M-CS en cada dominio. Por lo tanto, no se puede sobrecargar. Consideramos que el sistema funciona tal como se describe en la sección 6.1: Los clientes envían sus paquetes de audio a su CS local, que selecciona NMax flujos antes de enviarlos a otros CS. De manera paralela, también recibe NMax transmisiones para cada otro CS antes de tomar una decisión sobre cuáles de las NMax transmisiones serán seleccionadas, enviadas y reproducidas en cada cliente individual. Para la estabilidad del sistema, cualquier servidor de conferencias debería ser capaz de manejar a sus clientes locales además de los paquetes de audio de otros dominios. Claramente entonces, la siguiente desigualdad debe cumplirse para todo dominio: )1( −⋅+≥ dN d M C Max (5) El caso límite de (5) (tomando la igualdad) toma la forma 2 )( dNdNCM MaxMax ⋅−⋅+= (6) Para optimizar d con respecto a M, establecemos 0)(2 =+−⋅⋅= ∂ ∂ MaxMax NCdN d M (7) obteniendo     ⋅ + = Max Max N NC d 2 (8) ([ ]* = Redondeando al entero más cercano) y por lo tanto, M de (6). Tabla 1. Valores de d y M calculados para algunos valores de C con NMax = 3. En la Tabla 1, se presentan los valores de d y M que fueron calculados utilizando (8) y (6) con NMax = 3. Vemos que los valores de d y M, al depender de C, se basan en el CS más débil. Vemos que hay un equilibrio entre M y d. Podríamos admitir más dominios en la conferencia, pero a costa de restringir el número total de clientes M en la conferencia. Durante la implementación y prueba de los Servidores de Conferencia en un Pentium III 1.4 GHz con Windows NT, pudimos establecer C=300. Pero con la llegada de computadoras más rápidas (> 3 GHz), uno puede fácilmente establecer C a valores más altos y determinar d y M en consecuencia. La Fig. 4 muestra un mapa de contorno y la Fig. 5, una malla 3D que muestra soluciones optimizadas para CSs de diferentes capacidades. Estos nos llevan a maximizar el número de dominios, y por lo tanto, a maximizar el número total de clientes basado en la capacidad de varios CSs. En la Fig. 4, las curvas individuales representan el número total de clientes objetivo, y seleccionamos un valor más bajo de d, para la capacidad C, para el objetivo M con el fin de reducir el tráfico en la WAN. La Fig. 5 representa una perspectiva diferente de los mismos datos en 3D. Fig. 4. \n\nFig. 4. Diagrama de contorno de la capacidad versus el número óptimo de dominios para varios tamaños de conferencias 7.2 Conferencias con Dos Niveles de CSs. Ahora considerando el caso en el que el número de clientes en un dominio particular es demasiado grande, es decir, d M Mi ≥ (9), se debe evitar la denegación de servicio para nuevos clientes debido a la sobrecarga del Servidor de Conferencias. Este problema se puede resolver introduciendo un segundo nivel de CSs dentro del dominio dado, como se muestra en la Figura 6. El M-CS existente crea un CS esclavo (S-CS) que puede manejar hasta C usuarios finales y al que transfiere todos sus clientes activos. Aquí, el sistema funciona de manera diferente como se describe en la sección 6.1: Los clientes envían sus paquetes de audio a su S-CS local, que selecciona NMax flujos, antes de enviarlos a un M-CS local, que procederá de la misma manera, antes de enviar NMax flujos a los otros dominios. Cada S-CS recién creado debe ejecutarse en una máquina separada. El M-CS tiene que crear más S-CSs si el número de clientes activos supera C durante el transcurso de la conferencia después de la transferencia. Con este mecanismo, el M-CS podrá crear un máximo de     −⋅− = Max Max N dNC U )1( S-CSs, (10) ya que debe manejar 3 (= NMax) paquetes para cada S-CS local y 3 (= NMax) paquetes de cada otro dominio remoto. Podemos entonces calcular el número máximo teórico de clientes activos CUMi ⋅= en cada dominio, así como M, para toda la conferencia como CUdM ⋅⋅= . Fig. 5. Gráfico 3D de Capacidad versus Número óptimo de dominios para varios tamaños de conferencia. Por supuesto, se podría crear un tercer nivel en la jerarquía, lo que daría la posibilidad de alojar aún más clientes. Esto puede ser innecesario ya que el número de posibles clientes es lo suficientemente grande con dos niveles. 8. DISCUSIÓN DE RENDIMIENTO Ahora analizamos el rendimiento del algoritmo presentado en la subsección 6.3, es decir, el que se encarga del intercambio de paquetes de audio entre los diferentes dominios. Ten en cuenta que los paquetes que están en tránsito dentro de la LAN aprovechan la mayor capacidad (generalmente junto con capacidades de multidifusión) y por lo tanto no requieren un análisis de rendimiento. Por lo tanto, debemos examinar solo los paquetes RTP a través de la WAN, es decir, entre los M-CS participantes. Dado que cada M-CS de un dominio solo enviará NMax de los d paquetes M a los otros CS (MaxN d M >>), el ancho de banda utilizado por la aplicación en una WAN está limitado por la siguiente expresión. El número total de paquetes de audio que transitan por la WAN para cada intervalo de tiempo es ∑ ∑= ≠=        d i d ijj MaxN 1 ,1, lo cual es cuadrático en el número de dominios (es decir, O(d2)). Sin embargo, es independiente del número total de clientes activos. Esto no habría sido el caso si todos los paquetes se hubieran enviado por la red en cada intervalo de tiempo. El ahorro es tremendo. Sin embargo, se podría argumentar que enviar tres paquetes hacia y desde todos los dominios es un desperdicio de recursos, ya que la mayoría de estos flujos no serán seleccionados. Si solo hay un cliente activo, seleccionar un subconjunto de clientes en ese dominio es innecesario. Los algoritmos pesimistas y optimistas presentados en la secuela tienen como objetivo reducir aún más el tráfico aprovechando la naturaleza lenta y variable de la LN. 8.1 Algoritmo pesimista Consideremos un escenario en el que el LN más bajo (llamado LNt) de los tres flujos seleccionados globalmente (conjunto F de la Sección 6.1) excede el LN del flujo más dominante de un dominio. Evidentemente, las posibilidades de que los dos próximos flujos dominantes de ese dominio sean seleccionados para F en el próximo período de paquetes son menores. Aquí enviamos este flujo más dominante y retenemos los otros dos. Puede haber un error en la selección única en todos los dominios por un solo período de paquete. Como LN varía lentamente, el error se corregiría automáticamente en un período (ranura) de paquete posterior. En este algoritmo, hay al menos un flujo en cada período. El tráfico de red neto en un período de paquetes en el mejor caso es )1( −⋅ dd, es decir, )( 2 dO utilizando unicast, en lugar de MaxNdd ⋅−⋅ )1(. Se puede ahorrar un ancho de banda considerablemente valioso utilizando esta heurística. La complejidad del tráfico resultante se reduce de O(d2) a O(d) en redes habilitadas para multidifusión. Inicializar LNt = 0 en un M-CS/S-CS A. En el primer intervalo de tiempo (tiempo de paquete), cada CS envía las primeras NMax secuencias (basadas en su LN) a todos los demás CSs. En cada M-CS/S-CS y para cada tiempo de paquete: B. Encuentra el valor del LN más bajo de los flujos NMax seleccionados globalmente (conjunto F) del intervalo de tiempo anterior. Establece LNt con este valor. C. En cada dominio de CS, selecciona los NMax flujos locales que tengan el valor máximo de LN (conjunto ToOtherCSs). D. Seleccionar los flujos que tengan LN > LNt. Si hay >= NMax flujos con LN > LNt, entonces enviar los mejores NMax a otros CSs. EN OTRO CASO, si hay (NMax-1) flujos con LN>LNt, enviar los mejores (NMax-1) más el que esté por debajo de LNt (es decir, los mejores NMax) a otros CSs. EN OTRO CASO, si hay (NMax-2) flujos con LN>LNt, entonces enviar los mejores (NMax-2) más el que esté por debajo de LNt (es decir, los mejores (NMax-1)) a otros CSs. ... EN OTRO CASO, si NO hay flujos con LN>LNt, entonces enviar el mejor flujo a otros CSs. Los paquetes enviados en el paso D forman DB1. Los paquetes recibidos de otros CSs forman DB2. F. Para este intervalo de tiempo, encuentra flujos globales NMax basados en LN de DB1 y DB2 (conjunto F) G. Envía el conjunto F a los clientes en su dominio. Actualiza LNt para el próximo período. Algoritmo 2. Algoritmo pesimista para reducir el número de paquetes enviados por Internet. Fig. 6. \n\nFig. 6. Ejemplo de una jerarquía de 2 niveles de Servidores de Conferencias; los Clientes sombreados son los seleccionados por el M-CS y serán enviados a otros CSs de dominios. En este algoritmo, el ahorro en tráfico se logra a expensas de relajar la condición de formación del conjunto F globalmente único. Sin embargo, las discrepancias en los flujos seleccionados en diferentes dominios permanecen por un corto período de tiempo dependiendo del retraso en el transporte entre dos dominios. Incluso para un retraso total de 400 ms, con solo 10 ranuras de tiempo de paquete, se pierde la unicidad. Esta duración en una conversación interactiva en tiempo real no es perceptible por el oyente. En el caso de que haya una broma y todos se rían, entonces habría un aumento repentino en el número de paquetes y estaría limitado por MaxN)d(O 2 durante un corto período. 8.2 Algoritmo Optimista El tráfico puede reducirse aún más. El esquema en el siguiente algoritmo (Algoritmo 3) retiene todos los flujos que tienen un valor de LN menor que el mínimo de los tres en el conjunto F. Podemos encontrar los tres flujos correctos y únicos después de unos cuantos intervalos de tiempo, dependiendo del retraso de transporte entre los dominios. Dado que el período del paquete es del orden de 40 ms, el error en la selección es imperceptible. El número de flujos en la red en este caso siempre está restringido a NMax (=3). Incluso sin Detección de Actividad de Voz (VAD), en el mejor de los casos no habrá más de tres flujos en la red, por lo tanto, el tráfico total es constante. Una repentina oleada de tráfico, como se describe en la sección 8.1, es un caso particular. Estas ventajas se deben a la explotación de las características de LN. Inicializar LNt = 0 en un M-CS/S-CS A. En el primer intervalo de tiempo (tiempo de paquete), cada CS envía las primeras NMax secuencias (basadas en su LN) a todos los demás CS. En cada M-CS/S-CS y para cada tiempo de paquete: B. Encuentra el valor del LN más bajo de los flujos seleccionados globalmente de NMax (conjunto F) del intervalo de tiempo anterior. Establece LNt con este valor. C. En cada dominio de CS, selecciona los NMax flujos locales que tengan el valor máximo de LN (conjunto ToOtherCSs). D. Selecciona los flujos que tengan LN > LNt SI hay >= NMax flujos con LN > LNt, entonces envía los mejores NMax a otros CSs. EN OTRO CASO, si hay (NMax-1) flujos con LN>LNt, entonces enviar los primeros (NMax-1) y ver E. EN OTRO CASO, si hay (NMax-2) flujos con LN>LNt, entonces enviar los primeros (NMax-2) y ver E. ... EN OTRO CASO, si NO hay flujos con LN>LNt, entonces no enviar ningún flujo. E. Excepciones: SI el flujo que estaba en F en el último intervalo pertenece a este CS, entonces selecciona y envía ese flujo incluso si su LN es ahora < LNt. (Nota: esto ocurre solo en ese CS que tenía el flujo que fue el último de los tres en el período de paquetes anterior). Los paquetes enviados en los pasos D y E forman DB1. Los paquetes recibidos de otros CSs forman DB2. Para este intervalo de tiempo, encuentra los flujos globales NMax basados en LN de DB1 y DB2 (conjunto F). H. Envíe el conjunto F a los clientes en su dominio. Actualiza LNt para el próximo período. Algoritmo 3. Algoritmo optimista para reducir el número de paquetes enviados a través de Internet. Además, cuando se utiliza VAD [13], se reduciría aún más el tráfico al enviar solo la parte del encabezado del paquete RTP y no todo el paquete, con el fin de mantener actualizada la LN en todo momento. El tráfico aquí en este caso es O(NMax) para multicast y O(d) para unicast. Vemos que los algoritmos anteriores ahorran ancho de banda y cálculos en cada CS, y conducen a una arquitectura escalable con múltiples CS principalmente porque los clientes están agrupados en dominios. El ancho de banda necesario no depende del número total de clientes activos. Como el CS siempre elige a los tres mejores clientes de entre todos los clientes asignados en el dominio, la adición de nuevos clientes a la conferencia existente no causará ningún problema de escalabilidad. 8.3 Disponibilidad de Multidifusión En la arquitectura propuesta, no se hizo ninguna suposición sobre la disponibilidad de soporte de multidifusión de la red. El tráfico se reducirá aún más si la multidifusión está disponible a través de WAN. Es sencillo demostrar que el orden del tráfico tiende a ser O(d) en lugar de O(d2). Esta es una aproximación ya que el ahorro en la multidifusión también depende de la topología. El análisis se realizó para el caso en el que la multidifusión no está disponible (una suposición realista en el Internet de hoy en día). La ventaja de esta configuración es que podemos usarla incluso si la multidifusión está parcialmente disponible. Podemos instruir a los CSs durante la fase de configuración para enviar paquetes unicast a aquellos CSs que no pueden recibir paquetes multicast, mientras que los CSs en enrutadores habilitados para multicast pueden intercambiar paquetes en una dirección multicast. Las estructuras de datos y objetos de conferencia dentro de una CS se encuentran en [14]. Fig. 7. \n\nFig. 7. Interfaz de usuario para establecer el peso de las corrientes de audio NMax (establecer la barra de auto a cero evita el eco). Mejora de calidad 8.4 La mejora observada en la calidad percibida del servicio de conferencias se debe a: (1) limitar el número de oradores concurrentes a un número bajo, como tres. Generalmente, en una conferencia, si hablan más de dos participantes se pierde la inteligibilidad. El análisis conversacional demuestra que en tal caso habría un mecanismo de reparación [15]. (2) Retraso: La transmisión de audio entre dos clientes pasará como máximo por dos servidores centrales, reduciendo así el retraso de extremo a extremo. Para una conferencia grande puede haber tres CSs, sin embargo, un salto está dentro del dominio incurriendo en un retraso insignificante. (3) Dado que las transmisiones se mezclan solo en los clientes, puede haber una mezcla personalizada de las transmisiones. La sintonización individual de la mezcla con pesos preserva el espacialismo. La Fig. 7 muestra la interfaz de usuario para lo mismo. El eco al seleccionar la auto-transmisión se puede evitar reduciendo el peso. Sin embargo, la retroalimentación ayuda a asegurar al hablante de que está siendo escuchado por todos. CONCLUSIÓN En este artículo, hemos presentado una discusión sobre un entorno de conferencias virtuales solo de voz. Hemos argumentado que la naturaleza distribuida de la implementación aquí la hace escalable. La interactividad se logra adaptando un esquema reciente de selección de flujo basado en el Número de Sonoridad. Además, incorporamos un resultado de un trabajo más reciente [15] donde se ha demostrado la suficiencia de tres hablantes simultáneos. Por lo tanto, hay una utilización significativamente efectiva del ancho de banda. Un flujo mixto se reproduce en cada cliente; cada cliente puede elegir tener una mezcla personalizada ya que la mezcla se realiza en el terminal local de cada cliente. Estos permiten que el discurso improvisado en una videoconferencia virtual a través de VoIP sea una realidad, como en una conferencia presencial real. La compatibilidad está asegurada gracias al uso de SIP, el protocolo de señalización más buscado. Para garantizar un rendimiento satisfactorio, no exigimos la disponibilidad de multidifusión, pero la utilizamos si está disponible. El tráfico en la WAN (Internet) está limitado por arriba por el cuadrado del número de dominios, --además se reduce aún más mediante el uso de algoritmos heurísticos-- lo cual está muy por debajo del número total de clientes en la conferencia. Esto se debe al uso de un Servidor de Conferencias local para cada dominio. Las técnicas de VAD ayudan a reducir aún más el tráfico. El uso del estándar SIP para la señalización hace que esta solución sea altamente interoperable. Hemos implementado una aplicación de CS en una red de campus. Creemos que esta nueva generación de entornos de conferencias virtuales ganará más popularidad en el futuro, ya que su facilidad de implementación está garantizada gracias a las tecnologías fácilmente disponibles y los marcos escalables. REFERENCIAS [1] L. Aguilar et al., Arquitectura para un Sistema de Teleconferencia Multimedia, en Actas de ACM SIGCOMM, Ago 1986, pp. 126-136. [2] Carsten Bormann, Joerg Ott et al., Protocolo de Control de Conferencias Simple, Borrador de Internet, Dic. 1996. [3] M. Decina y V. Trecordi, Voz sobre Protocolo de Internet y Comercio Electrónico Asistido por Humanos, IEEE Comm. Revista, septiembre de 1999, pp. 64-67. [4] Eckehard Doerry, Una comparación empírica de la interacción copresente y mediada tecnológicamente basada en la ruptura comunicativa, Tesis de doctorado, Escuela de Graduados de la Universidad de Oregón, 1995. [5] H. P. Dommel y J.J. Garcia-Luna-Aceves, Control de piso para conferencias y colaboración multimedia, J. Sistemas Multimedia, Vol. 5, No. 1, enero de 1997, pp. 23-38. [6] Amitava Dutta-Roy, Reuniones virtuales con videoconferencias de escritorio, IEEE Spectrum, julio de 1998, pp. 47-56. [7] M. Handley y V. Jacobson, SDP: Protocolo de Descripción de Sesiones, RFC 2327, IETF, abril de 1998. [8] M. Handley, J. Crowcroft et al., Conferencias muy grandes en Internet: la arquitectura de conferencias multimedia en Internet, Revista de Redes de Computadoras, vol. 31, No. 3, febrero de 1999, pp. 191-204. [9] Rec. ITU-T. H.323, Sistemas de Comunicaciones Multimedia basados en Paquetes, vol. 2, 1998. [10] P. Koskelainen, H. Schulzrinne y X. Wu, Un Marco de Control de Conferencias basado en SIP, NOSSDAV02, mayo de 2002, pp. 53-61. [11] R Venkatesha Prasad et al., Protocolo de Control para Soporte de Conferencias de Audio VoIP, Conferencia Internacional sobre Tecnología de Comunicación Avanzada, Mu-Ju, Corea del Sur, febrero de 2001, pp. 419-424. [12] R Venkatesha Prasad et al., Adición y Eliminación Automáticas de Clientes en Conferencias VoIP, 6º Simposio IEEE sobre Computadoras y Comunicaciones, julio de 2001, Hammamet, Túnez, pp. 386-390. [13] R Venkatesha Prasad, H S Jamadagni, Abjijeet, et al Comparación de Algoritmos de Detección de Actividad de Voz, 7º Simposio IEEE sobre Computadoras y Comunicaciones. Julio de 2002, Sicilia, Italia, pp. 530-535. [14] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, Una Conferencia VoIP Distribuida Escalable utilizando SIP, Actas del 8º Simposio de Computadoras y Comunicaciones de IEEE, Antalya, Turquía, junio de 2003. [15] R Venkatesha Prasad, H S Jamadagni y H N Shankar, Sobre el Problema de Especificar el Número de Pisos en una Conferencia Solo de Voz, Por aparecer en IEEE ITRE 2003. [16] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, Una Propuesta para Conferencias Distribuidas en SIP utilizando Servidores de Conferencias, Por aparecer en las Actas de MMNS 2003, Belfast, Reino Unido, septiembre de 2003. [17] R. Venkatesha Prasad, H.S. Jamadagni, J. Kuri, R.S. Varchas, un soporte de conferencias VoIP distribuido que utiliza el número de sonoridad, Tech. Rep. TR-CEDT-TE-03-01 [18] M. Radenkovic et al, Servicio de audio escalable y adaptable para apoyar el trabajo colaborativo y el entretenimiento a través de Internet, SSGRR 2002, LAquila, Italia, enero de 2002. [19] M. Radenkovic, C. Greenhalgh, S. Benford, Problemas de implementación para el soporte de audio multiusuario en CVEs, ACM VRST 2002, noviembre de 2002, pp. 179-185. [20] Srinivas Ramanathan, P. Venkata Rangan, Harrick M. Vin, Diseñando arquitecturas de comunicación para la colaboración multimedia interorganizacional, Journal of Organizational Computing, 2 (3&4), pp.277-302, 1992. [21] A. B. Roach, Notificación de Eventos Específicos del Protocolo de Inicio de Sesión (SIP), RFC 3265, IETF, junio de 2002. [22] J. Rosenberg, H. Schulzrinne et al., SIP: Protocolo de Inicio de Sesión, RFC 3261, IETF, junio de 2002. [23] J. Rosenberg, H. Schulzrinne, Modelos para Conferencias de Múltiples Partes en SIP, Borrador de Internet, IETF, julio de 2002. [24] H. Schulzrinne et al., RTP: un protocolo de transporte para aplicaciones en tiempo real, RFC 1889, IETF, enero de 1996. [25] Lisa R. Silverman, Llegada a la Madurez: Soluciones de Conferencias que Reducen Costos Corporativos, Documento Técnico, www.imcca.org/wpcomingofage.asp [26] Kundan Singh, Gautam Nair y Henning Schulzrinne, Conferencias Centralizadas utilizando SIP, Actas del 2do Taller de IP-Telefonía (IPTel), abril de 2001. [27] D. Thaler, M. Handley y D. Estrin, Arquitectura de Asignación de Direcciones de Multidifusión en Internet, RFC 2908, IETF, septiembre de 2000. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "packet-switched network": {
            "translated_key": "redes de conmutación de paquetes",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Deployment Issues of a VoIP Conferencing System in a Virtual Conferencing Environment R. Venkatesha Prasad i Richard Hurni ii H.S.",
                "Jamadagni iii H.N.",
                "Shankar iv i, iii Centre for Electronics Design and Technology Indian Institute of Science, Bangalore, India Telephone: +91 80 360 0810 i, iii {vprasad, hsjam}@cedt.iisc.ernet.in ii hurni@ieee.org iv hn_shankar@yahoo.com ABSTRACT Real-time services have been supported by and large on circuitswitched networks.",
                "Recent trends favour services ported on <br>packet-switched network</br>s.",
                "For audio conferencing, we need to consider many issues - scalability, quality of the conference application, floor control and load on the clients/servers - to name a few.",
                "In this paper, we describe an audio service framework designed to provide a Virtual Conferencing Environment (VCE).",
                "The system is designed to accommodate a large number of end users speaking at the same time and spread across the Internet.",
                "The framework is based on Conference Servers [14], which facilitate the audio handling, while we exploit the SIP capabilities for signaling purposes.",
                "Client selection is based on a recent quantifier called Loudness Number that helps mimic a physical face-to-face conference.",
                "We deal with deployment issues of the proposed solution both in terms of scalability and interactivity, while explaining the techniques we use to reduce the traffic.",
                "We have implemented a Conference Server (CS) application on a campus-wide network at our Institute.",
                "Categories and Subjects Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - Client / Server, distributed applications.",
                "General Terms Algorithms, Performance, Design, Theory. 1.",
                "INTRODUCTION Todays Internet uses the IP protocol suite that was primarily designed for the transport of data and provides best effort data delivery.",
                "Delay-constraints and characteristics separate traditional data on the one hand from voice & video applications on the other.",
                "Hence, as progressively time-sensitive voice and video applications are deployed on the Internet, the inadequacy of the Internet is exposed.",
                "Further, we seek to port telephone services on the Internet.",
                "Among them, virtual conference (teleconference) facility is at the cutting edge.",
                "Audio and video conferencing on Internet are popular [25] for the several advantages they inhere [3,6].",
                "Clearly, the bandwidth required for a teleconference over the Internet increases rapidly with the number of participants; reducing bandwidth without compromising audio quality is a challenge in Internet Telephony.",
                "Additional critical issues are: (a) packet delay, (b) echo, (c) mixing of audio from selected clients, (d) automatic selection of clients to participate in the conference, (e) playout of mixed audio for every client, (f) handling clients not capable of mixing audio streams (such clients are known as dumb clients), and (g) deciding the number of simultaneously active clients in the conference without compromising voice quality.",
                "While all the above requirements are from the technology point of view, the users perspective and interactions are also essential factors.",
                "There is plenty of discussion amongst HCI and CSCW community on the use of Ethnomethodology for design of CSCW applications.",
                "The basic approach is to provide larger bandwidth, more facilities and more advanced control mechanisms, looking forward to better quality of interaction.",
                "This approach ignores the functional utility of the environment that is used for collaboration.",
                "Eckehard Doerry [4] criticizes this approach by saying it is keeping form before function.",
                "Thus, the need is to take an approach that considers both aspects - the technical and the functional.",
                "Regarding the functional aspect, we refer to [15] where it has been dealt with in some detail.",
                "In this work, we do not discuss video conferencing; its inclusion does not significantly benefit conference quality [4].",
                "Our focus is on virtual audio environments.",
                "We first outline the challenges encountered in virtual audio conferences.",
                "Then we look into the motivations followed by relevant literature.",
                "In Section 5, we explain the architecture of our system.",
                "Section 6 comprises description of the various algorithms used in our setup.",
                "We address deployment issues.",
                "A discussion on Swiss Federal Institute of Technology, Lausanne.",
                "Former visitor at CEDT.",
                "PESIT and NIAS, Bangalore, India.iv ii performance follows.",
                "We conclude taking alongside some implementation issues. 2.",
                "CHALLENGES IN VoIP CONFERENCING Many challenges arise in building a VoIP application.",
                "The following are of particular concern in the process: • Ease of use: Conferencing must be simple; users need no domain expertise.",
                "Management (addition/removal) of clients and servers must be uncomplicated.",
                "Application development should not presuppose specific characteristics of the underlying system or of network layers.",
                "Ease of use may include leveraging readily available, technically feasible and economically viable technologies. • Scalability: Conferencing must seem uninterrupted under heavy loads, i.e., when many additional users are added on.",
                "Traffic on WAN should not grow appreciably with the total number of clients; else, this has lead to congestion.",
                "So a means to regulate traffic to a minimum is needed for this kind of real-time applications. • Interactivity: In Virtual Conferencing Environments (VCEs), we intend a face-to-face-like conferencing application that mimics a real conference, where more vocal participants invite attention.",
                "Turn-taking in floor occupation by participants must be adapted gracefully to give a feel of natural transition. • Standardization: The solution must conform to established standards so as to gain interoperability and peer acceptance.",
                "The above requirements are placed in the perspective of observations made in earlier works (vide Sections 3 and 4) and will steer the VCE design. 3.",
                "THE MOTIVATION Ramanathan and Rangan [20] have studied in detail the architectural configurations comparing many conferencing architecture schemes taking into consideration the network delay and computation requirements for mixing.",
                "Functional division and object-oriented architecture design that aid in implementation is presented in [1].",
                "An overview of many issues involved in supporting a large conference is dealt in [8].",
                "H. P. Dommel [5] and many others highlight floor control as another pivotal aspect to be taken into account in designing a conferencing tool.",
                "Tightly coupled conference control protocols in Internet belong to the ITU-T H.323 family [9]; however, they are mainly for small conferences.",
                "The latest IETF draft by Rosenberg and Schulzrinne [23] discusses conferencing models with SIP [22] in the background.",
                "Aspects of implementation for centralized SIP conferencing are reported in [26].",
                "A new approach called partial mixing by Radenkovic [18] allows for mixed and non-mixed streams to coexist.",
                "In all the above proposals, while there are some very useful suggestions, they share one or more of the following limitations: • In an audio conference, streams from all the clients need not be mixed.",
                "Actually, mixing many arbitrary streams [24] from clients degrades the quality of the conference due to the reduction in the volume (spatial aspect of speech).",
                "The number of streams mixed varies dynamically depending on the number of active participants.",
                "This would lead to fluctuations in the volume of every individual participant causing severe degradation in quality.",
                "Customized mixing of streams is not possible when many clients are active.",
                "There is a threshold on the number of simultaneous speakers above which increasing the number of speakers becomes counterproductive to conference quality.",
                "Fixing the maximum number of simultaneous speakers is dealt in a recent work [15] using Ethnomethodology, and is conjectured to be three.",
                "Thus it is advisable to honour that constraint. • There cannot be many intermediate mixers (similarly, Conference Servers as in [10]) in stages as in [20] because it brings in inordinate delay by increasing the number of hops and is not scalable with interactivity in focus. • Floor Control for an audio conference (even video conference) with explicit turn-taking instructions to participants renders the conference essentially a one-speakerat-a-time affair, not a live and free-to-interrupt one.",
                "This way, the conference becomes markedly artificial and its quality degrades.",
                "Schulzrinne et al. [24], assume only one participant is speaking at a time.",
                "In this case, if applications are implemented with some control [5], the service becomes gagging for the users. • Partial mixing [18] has a similar problem as that of mixing when more streams are mixed.",
                "Moreover, in [18], to allow impromptu speech, mixing is not done when the network can afford high bandwidth requirements for sending/receiving all the streams, but it is unnecessary [15]. • For large conferences [23, 10] a centralized conference cannot scale up.",
                "With multicasting, clients will have to parse many streams and traffic on a clients network increases unnecessarily.",
                "Evidently, different particular issues, all of which are a subset of requirements (defined in [14] and [16]) for a VoIP conferencing support, are tackled.",
                "Thus there is a need to address conferencing as a whole with all its requirements considered concurrently.",
                "Towards this goal, the VoIP conferencing system we propose is intended to be scalable and interactive.",
                "We make use of the Loudness Number for implementing floor control.",
                "This permits a participant to freely get into the speaking mode to interrupt the current speaker as in a natural face-to-face meeting.",
                "An upper limit on the number of floors (i.e., the number of speakers allowed to speak at the same time) is fixed using a conjecture proposed in [15].",
                "The work presented here is in continuation of our studies into conferencing based on the Session Initiation Protocol in [14] and [16].",
                "SIP, defined in [22] is now the most popular standard for VoIP deployment and has been chosen for its strength, ease of use, extensibility and compatibility.",
                "This is the reason it will be in the background of all controlling messages that will implicitly arise between the entities in our architecture.",
                "The actual messages are described in [16] and, as such, we do not present a complete description of them here. 4.",
                "RELATED WORK The SIP standard defined in RFC 3261 [22] and in later extensions such as [21] does not offer conference control services such as floor control or voting and does not prescribe how a conference is to be managed.",
                "However SIP can be used to initiate a session that uses some other conference control protocol.",
                "The core SIP specification supports many models for conferencing [26, 23].",
                "In the server-based models, a server mixes media streams, whereas in a server-less conference, mixing is done at the end systems.",
                "SDP [7] can be used to define media capabilities and provide other information about the conference.",
                "We shall now consider a few conference models in SIP that have been proposed recently [23].",
                "First, let us look into server-less models.",
                "In End-System Mixing, only one client (SIP UA) handles the signaling and media mixing for all the others, which is clearly not scalable and causes problems when that particular client leaves the conference.",
                "In the Users Joining model, a tree grows, as each invited party constitutes a new branch in the distribution path.",
                "This leads to an increasing number of hops for the remote leaves and is not scalable.",
                "Another option would be to use multicast for conferencing but multicast is not enabled over Internet and only possible on a LAN presently.",
                "Among server-based models, in a Dial-In Conference, UAs connect to a central server that handles all the mixing.",
                "This model is not scalable as it is limited by the processing power of the server and bandwidth of the network.",
                "Adhoc Centralized Conferences and Dial-Out Conference Servers have similar mechanisms and problems.",
                "Hybrid models involving centralized signaling and distributed media, with the latter using unicast or multicast, raise scalability problems as before.",
                "However an advantage is that the conference control can be a third party solution.",
                "Distributed Partial Mixing, presented in [18], proposes that in case of bandwidth limitation, some streams are mixed and some are not, leaving interactivity intact.",
                "Loss of spatialism when they mix and the bandwidth increase when they do not are open problems.",
                "A related study [19] by the same author proposes conferencing architecture for Collaborative Virtual Environments (CVEs) but does not provide the scalability angle without the availability of multicasting.",
                "With the limitations of proposed conferencing systems in mind, we will now detail our proposal. 5.",
                "SYSTEM ARCHITECTURE This section is dedicated to the description of the proposed system architecture.",
                "However, as this paper constitutes the continuation of our work started in [14] and furthered in [16], we will not present here all the details about the proposed entities and invite the readers to consult the papers mentioned above for a full and thorough description.",
                "First, we do not restrict our conferencing system to work on small conferences only, but rather on large audio VCEs that have hundreds (or even thousands) of users across a Wide Area Network (WAN) such as the Internet.",
                "This view stems from an appraisal that VCEs will gain in importance in the future, as interactive audio conferences will be more popular because of the spread of the media culture around the world.",
                "Two issues must be taken care of when building a VoIP conferencing system: (i) the front-end, consisting of the application program running on the end-users computers and (ii) the back-end that provides other application programs that facilitate conferencing and conference.",
                "The participating users are grouped into several domains.",
                "These domains are Local Area Networks (LANs), such as corporate or educational networks.",
                "This distributed assumption asks for distributed controlling and media handling solutions, as centralized systems would not scale for such very large conferences (vide Section 4).",
                "More explicitly, in each domain, we can identify several relevant logical components of a conferencing facility (Fig. 1):  An arbitrary number of end users (clients) that can take part in at most one audio conference at a time.",
                "Every user is Fig. 1.",
                "Conference example - 3 domains containing the necessary entities so that the conference can take place. included in one and only one domain at a given instant, but can move from domain to domain (nomadism).",
                "In our conferencing environment, these clients are regular SIP User Agents (SIP UAs), as defined in [22] so to gain in interoperability with other existing SIP-compatible systems.",
                "These clients are thus not aware of the complex setting that supports the conference and this is highlighted below.  One SIP Server (SIPS) per domain, taking care of all the signaling aspects of the conference (clients joining, leaving, etc.) [16].",
                "In particular, it is considered as a physical implementation encompassing different logical roles, namely a SIP Proxy Server, a SIP Registrar Server, a SIP Redirect Server and a SIP B2BUA (Back-to-Back User Agent) [22].",
                "This physical implementation enables the handling of incoming/outgoing SIP messages by one or another logical entity according to the needs.",
                "SIPS is entrusted with maintaining total service and has many advantages such as (a) it works as a centralized entity that can keep track of the activities of the UAs in a conference; (b) it can do all the switching for providing PBX features; (c) it can locate the UAs and invite them for a conference; (d) it can do the billing as well.",
                "SIPSs in different domains communicate with each other using SIP messages as described in [16].",
                "If the load on a particular SIPS is too heavy, it can create another SIPS in the same domain so that the load will be shared.  One Master Conference Server (M-CS) (simply a Conference Server (CS)) for each conference is created by the local SIPS when a conference starts.",
                "This server will be used for handling media packets for the clients of the domain.",
                "Its mechanism will be described in the next section.",
                "The M-CS will be able to create a hierarchy of CSs inside a domain by adding one or more Slave CSs (S-CSs) to accommodate all the active clients and prevent its own flooding at the same time.",
                "We will see this mechanism in some detail in the sequel.",
                "The entities described here are exhaustive and conform to the SIP philosophy.",
                "Thus, the use of SIP makes this architecture more useful and interoperable with any other SIP clients or servers. 6.",
                "ALGORITHMIC ISSUES 6.1 Selecting the Streams Similar to SipConf in [27], a Conference Server (CS) [17] has the function of supporting the conference; it is responsible for handling audio streams using RTP.",
                "It can also double to convert audio stream formats for a given client if necessary and can work as Translators/Mixers of RTP specification behind firewalls.",
                "We have based the design of our CS on H.323 Multipoint Processor (MP) [9].",
                "In short, the MP receives audio streams from the endpoints involved in a centralized or hybrid multipoint conference, processes them and returns them to the endpoints.",
                "An MP that processes audio prepares NMax audio outputs from M input streams after selection, mixing, or both.",
                "Audio mixing requires decoding the input audio to linear signals (PCM or analog), performing a linear combination of the signals and reencoding the result in an appropriate audio format.",
                "The MP may eliminate or attenuate some of the input signals in order to reduce noise and unwanted components.",
                "Fig. 2.",
                "Schematic diagram of a CS The limitation of H.323 is that it does not address the scalability of a conference.",
                "The architecture proposes a cascaded or daisy chain topology [10], which can be shown that it cannot scale up for a large conference.",
                "A CS serves many clients in the same conference.",
                "Thus it handles only one conference at a time.",
                "Multiple CSs may coexist in a domain, as when there are several conferences under way.",
                "Signaling-related messages of CSs are dealt in [11].",
                "The working of a CS is illustrated on Fig. 2: For each mixing interval, CS 1 chooses the best NMax audio packets out of the M1 (using a criterion termed Loudness Number, described in the next subsection).",
                "It may possibly receive and sends these to CSs 2 to P. The set of packets sent is denoted as ToOtherCSs.",
                "In the same mixing interval, it also receives the best NMax audio packets (out of possibly M2) from CS 2, similarly the best NMax (out of possibly MP) from CS P. For simplicity, we ignore propagation delay between CSs which indeed can be taken into account; it is beyond the scope of this presentation.",
                "The set of packets received is denoted as FromOtherCSs.",
                "Finally, it selects the best NMax packets from the set {ToOtherCSs union FromOtherCSs} and passes these packets to its own group.",
                "It can be seen that the set {ToOtherCSs union FromOtherCSs} is the same at all CSs.",
                "This ensures that any client in the conference finally receives the same set of packets for mixing.",
                "Hence all clients obtain a common view of the conference.",
                "Similarly, for each time slot (packet time), a subset, F of all clients is selected (using the same criterion) from the pool of packets from all other CSs plus the NMax clients selected locally.",
                "Their packets are mixed and played out at the clients.",
                "According to [15], the cardinality of F, |F| is NMax and is fixed at three.",
                "In our conferencing setup, selection is by the Master Conference Server (M-CS), which comes into the picture exclusively for media handling.",
                "Note that even if the SIP specification enables direct UA-to-UA media communication in a one-to-one call, it is also possible to use the Conference Server for two-party calls, especially because it is then more functional to create a real conference by adding a third and subsequently more participant(s).",
                "There are cases wherein the processing capacity of an M-CS is exceeded as it may have too many packets - from local domains and from remote domains - to process.",
                "In that case, the M-CS will create one or many S-CS (Fig. 6) and transfer its own clients as well as the new clients to them.",
                "In this configuration, the algorithm outlined above will be slightly modified, as the audio packets will go from clients to their dedicated S-CS that will select NMax packets to send to the local M-CS, which will then select NMax packets from all its S-CSs in the domain before sending them to the remote domains.",
                "The incoming packets from other domains will be received by the M-CS, select NMax of them and send them directly to the domain clients, bypassing the SCSs.",
                "This change implies that at most three intermediate entities exist for each audio packet, instead of two in the conventional setup.",
                "As the extra hop happens inside the LAN supposed to have a high-speed connectivity, we consider that it should not prevent us from using this hierarchy of CSs when theres a need to do so. 6.2 Loudness Number (LN) A basic question to be answered by the CS is the following.",
                "In a mixing interval, how should it choose NMax packets out of the M it might possibly receive?",
                "One way is to rank the M packets received according to their energies, and choose the top NMax.",
                "However, this is usually found to be inadequate because random fluctuations in packet energies can lead to poor audio quality.",
                "This indicates the need for a metric different from mere individual packet energies.",
                "The metric should have the following characteristics [12]: • A speaker (floor occupant) should not be cut off by a spike in the packet energy of another speaker.",
                "This implies that a speakers speech history should be given some weight.",
                "This is often referred to as Persistence or Hangover. • A participant who wants to interrupt a speaker will have to (i) speak loudly and (ii) keep trying for a little while.",
                "In a face-to-face conference, body language often indicates the intent to interrupt.",
                "But in a blind conference under discussion, a participants intention to interrupt can be conveyed effectively through LN.",
                "A floor control mechanism empowered to cut off a speaker forcefully must be ensured.",
                "These requirements are met by Loudness Number [12], which changes smoothly with time so that the selection (addition and deletion) of clients for conference is graceful.",
                "LN (= ) is a function of the amplitude of the current audio stream plus the activity and amplitude over a specific window in the past.",
                "Fig. 3.",
                "The different windows used for LN computation The Loudness Number is updated on a packet-by-packet basis.",
                "The basic parameter used here is packet amplitude, which is calculated as root mean square (rms) of the energies in audio samples of a packet, and denoted by XK.",
                "Three windows are defined as shown in Fig. 3.",
                "The present amplitude level of the speaker is found by calculating the moving average of packet amplitude (XK) within a window called Recent Past Window starting from the present instant to some past time.",
                "The past activity of the speaker is found by calculating the moving average of the packet amplitude (XK) within a window called Distant Past Window, which starts at the point where the Recent Past window ends and stretches back in the past for a pre-defined interval.",
                "The activity of the speaker in the past is found with a window called Activity Horizon, which spans the recent past window as well as the distant past window and beyond if necessary.",
                "Though the contribution of the activity horizon looks similar to the contribution of the recent past and distant past windows, past activity is computed from activity horizon window in a differently.",
                "Define the quantities during these three intervals as L1, L2 and L3.",
                "L1 quantifies the Recent Past speech activity, L2 the Distant Past speech activity and L3 gives a number corresponding to the speech activity in the Activity Horizon window quantifying how active the speaker was in the past few intervals.",
                "L3 yields a quantity that is proportional to the fraction of packets having energies above a pre-defined threshold (Eq. 3).",
                "The threshold is invariant across clients. ∑ +− = = 1 1 1 RPP P Wt tK K RP X W L (1) ∑ +−− −= = 1 2 1 DPRPP RPP WWt WtK K DP X W L (2) ∑ +− = ≥= 1 }{3 * 1 AHP P K Wt tK X AH I W L θθ (3) Where ifI KX 1}{ =≥θ θ≥KX = otherwise,0 The threshold is a constant. is set at 10-20 percent of the amplitude of the voice samples of a packet in our implementation here.",
                "Loudness Number λ for the present time instant (or the present packet) is calculated as, 332211 *L*L*L αααλ ++= (4) Here 1\u000f 2 DQG 3 are chosen such that: 0< 1\u000f 2\u001f\u0014\u000f \u0013\u001f 1\u000e 2\u001f\u0014 DQG 3=1-\u000b 1\u000e 2) Here, 1 is the weight given to the recent past speech, 2 is the weight given to distant past speech and 3 is the weight given to speech activity in the activity horizon window considered. 6.3 Safety, Liveness and Fairness The λ parameter KDV VRPH PHPRU\\ GHSHQGLQJ RQ WKH VSUHDG RI the windows.",
                "After one conferee becomes silent, another can take the floor.",
                "Also, as there is more than one channel, interruption is enabled.",
                "A loud conferee is more likely to be heard because of elevated λ.",
                "This ensures fairness to all conferees.",
                "After all, even in a face-to-face conference, a more vocal speaker grabs special attention.",
                "All these desirable characteristics are embedded into the LN.",
                "A comprehensive discussion on selection of the various parameters and the dynamics of LN are beyond the scope of this paper. 6.4 Selection Algorithm using the LN Following the developments in subsections 6.1 and 6.2, we present the simple algorithm that runs at each Master-Conference Server (Algorithm. 1).",
                "This algorithm is based on the discussions in section 6.1.",
                "The globally unique set F is found using this procedure.",
                "Repeat for each time slot at each M-CS { 1.",
                "Get all the packets from the Clients that belong to it. 2.",
                "Find at most NMax Clients that have PD[LPXP RXW RI 0 &OLHQWV LQ LWV GRPDLQ\u0011 3.",
                "Store a copy of packets from those NMax Clients in database DB1. 4.",
                "Send these NMax packets to other M-CSs (on Unicast or Multicast, depending on the configuration). 5.",
                "Similarly, receive packets from all other M-CSs and store them in database DB2. 6.",
                "Now compare the packets in DB1 and DB2 on WKH EDVLV RI DQG VHOHFW D PD[LPXP RI NMax amongst them (to form set F) that should be played out at each Client. 7.",
                "Send the NMax packets in set F to the Clients in its domain. 8.",
                "Mix these NMax audio packets in set F after linearising and send it to dumb Clients in the domain. }",
                "Algorithm 1.",
                "Selection algorithm The mechanism proposed here is also depicted on Fig. 6, where a single conference takes place between three domains.",
                "The shaded clients are the ones selected in their local domains; their audio streams will be sent to other CSs. 7.",
                "DEPLOYMENT ISSUES We now analyze deployment issues associated with conference management.",
                "How are domains to be organized to maximize the number of participants able to join?",
                "To address this, we define some useful parameters.  Let d be the number of different domains in which there are active clients in a given conference.  Let Mi be the number of active clients present in domain i ( di ≤≤1 ) in a given conference.",
                "The total number of active clients in the conference is thus ∑= = d i iMM 1 .  Let C be the maximum number of audio streams a Conference Server can handle in a packet time, also called capacity.",
                "C is set according to the processing power of the weakest CS in the conference but as it cannot be assumed that we know it a-priori, it can be set according to some minimum system requirement a machine must meet in order to take part in a conference.  Let NMax be the number of output streams a CS has to send to other CSs in remote domains (see section 6.1).",
                "We will set NMax =3 (=|F|), according to [15].",
                "The optimization problem is now to find the value of d that maximizes the total number of clients Mi served by one CS in a domain with capacity C. We first dispose the case where the capacity is not exceeded (the existing CS is not overloaded), and then proceed to the case where there exists a need to create more CSs when a single CS is overloaded.",
                "We assume that clients are equally distributed amongst the domains, as we may not have information to assume an a-priori distribution of the clients.",
                "We can specify no more than an upper bound on the number of clients acceptable, given the number of active domains d. 7.1 Conferencing with only One Level of CSs In this subsection, we consider that we have only one CS, i.e., a unique M-CS in each domain.",
                "Thus it cannot be overloaded.",
                "We consider that the system works as outlined in section 6.1: The Clients send their audio packets to their local CS, which selects NMax streams, before sending them to other CSs.",
                "In parallel, it also receives NMax streams for every other CSs before taking a decision on which NMax streams will be selected, sent and played out at each individual clients.",
                "For system stability, any CS in the conference should be able to handle its local clients in addition to the audio packets from other domains.",
                "Clearly then, the following inequality must hold for every domain: )1( −⋅+≥ dN d M C Max (5) The limiting case of (5) (taking the equality) takes the form 2 )( dNdNCM MaxMax ⋅−⋅+= (6) To optimize d with respect to M, we set 0)(2 =+−⋅⋅= ∂ ∂ MaxMax NCdN d M (7) yielding     ⋅ + = Max Max N NC d 2 (8) ([ ]* = Rounding to nearest integer) and hence, M from (6).",
                "C d M 50 9 234 100 17 884 150 26 1950 200 34 3434 250 42 5334 300 51 7650 350 59 10384 400 67 13534 450 76 17100 500 84 21084 Table 1.",
                "Values of d and M computed for some values of C with NMax = 3.",
                "In Table 1, we give the values of d and M that were computed using (8) and (6) with NMax = 3.",
                "We see that the values of d and M, being dependent of C, are therefore based on the weakest CS.",
                "We see that there is a trade-off between M and d. We could admit more domains in the conference, but at the expense of restricting the total number of clients M in the conference.",
                "While implementing and testing the Conference Servers on a Pentium III 1.4 GHz running Windows NT, we were able to set C=300.",
                "But with the advent of faster computers (> 3 GHz), one can easily set C to higher values and determine d and M accordingly.",
                "Fig. 4 shows a contour plot and Fig. 5, a 3D-mesh showing optimized solutions for CSs of different capacities.",
                "These lead us to maximize the number of domains, and hence, to maximize the total number of clients based on the capacity of various CSs.",
                "In Fig. 4, the individual curves represent the total number of clients targeted, and we select a lower value of d, for capacity C, for targeted M to reduce traffic on WAN.",
                "Fig. 5 represents a different perspective of the same data in 3D.",
                "Fig. 4.",
                "Contour Plot of Capacity versus Optimum number of domains for various conference sizes 7.2 Conferencing with Two Levels of CSs Now considering the case where the number of clients in a particular domain is too large, i.e., d M Mi ≥ (9) one has to avoid the denial of service for new clients due to overloading of Conference Server.",
                "This problem can be solved by introducing a second level of CSs inside the given domain, as in Fig. 6.",
                "The existing M-CS creates a Slave CS (S-CS) that can handle up to C end-users and to which it transfers all its active clients.",
                "Here, the system works differently as outlined in section 6.1: The Clients send their audio packets to their local S-CS, which selects NMax streams, before sending them to a local M-CS, which will proceed in the same way, before sending NMax streams to the other domains.",
                "Each newly created S-CS must run on a separate machine.",
                "The M-CS has to create more S-CSs if the number of active clients exceeds C in the course of the conference after the transfer.",
                "With this mechanism, the M-CS will be able to create utmost     −⋅− = Max Max N dNC U )1( S-CSs, (10) as it must handle 3 (= NMax) packets for each local S-CSs and 3 (= NMax) packets from each other remote domains.",
                "We can then calculate the maximum theoretical number of active clients CUMi ⋅= in each domain as well as M, for the whole conference as CUdM ⋅⋅= .",
                "Fig. 5. 3D Plot of Capacity versus Optimum number of domains for various conference sizes Of course, one could further create a third level in the hierarchy, giving the possibility of accommodating even more clients.",
                "This may be unnecessary as the number of possible clients is large enough with two levels. 8.",
                "PERFORMANCE DISCUSSION We now analyze the performance of the algorithm presented in subsection 6.3, i.e., the one taking care of the exchange of audio packets between the different domains.",
                "Note that the packets that are transiting within the LAN take advantage of the higher capacity (generally coupled with multicast capabilities) and therefore do not require a performance analysis.",
                "Thus we have to look only at the RTP packets over the WAN, i.e., between participating M-CSs.",
                "As each M-CS from a domain will be sending only NMax out of d M packets to the other CSs ( MaxN d M >> ), the bandwidth used by the application over a WAN is upper-bounded by the following expression.",
                "The total number of audio packets transiting over the WAN for each time slot is ∑ ∑= ≠=        d i d ijj MaxN 1 ,1 which is quadratic in the number of domains (i.e., O(d2 )).",
                "However, it is independent of the total number of active clients.",
                "This would not have been the case had all packets been sent over the network in each time slot.",
                "The saving is tremendous.",
                "Yet, one may contend that sending three packets to and from all domains is a waste of resources, as most of these streams will not be selected.",
                "If just one client is active, selecting a subset of clients in that domain is unnecessary.",
                "Pessimistic and optimistic algorithms as presented in the sequel aim at reducing the traffic further by harnessing the slow varying nature of the LN. 8.1 Pessimistic algorithm Consider a scenario wherein the lowest LN (called LNt) of the three globally selected streams (set F of Section 6.1) exceeds the LN of the most dominant stream of a domain.",
                "Evidently, the chances that the next two dominant streams of that domain being selected to F in the next packet period are less.",
                "Here, we send this most dominant stream and withhold the other two.",
                "There may be an error in unique selection across all domains for one packet period only.",
                "As LN varies slowly, the error would get automatically rectified in a subsequent packet period (slot).",
                "In this algorithm, there is at least one stream in each period.",
                "The net network traffic in a packet period in the best case is )1( −⋅ dd , i.e., )( 2 dO using unicast, instead of MaxNdd ⋅−⋅ )1( .",
                "Considerable valuable bandwidth can be saved using this heuristic.",
                "The resulting traffic complexity reduces from O(d2 ) to O(d) in multicast-enabled networks.",
                "Initialize LNt = 0 at an M-CS/S-CS A.",
                "In the first time slot (packet time), each CS sends the top NMax streams (based on their LN) to all other CSs.",
                "At each M-CS/S-CS and for each packet time: B.",
                "Find the value of lowest LN of the NMax globally selected streams (set F) from the previous time slot.",
                "Set LNt with this value.",
                "C. At each CS domain, select the NMax local streams that have maximum value of LN (ToOtherCSs set).",
                "D. Select streams that have LN > LNt.",
                "IF there are >= NMax streams with LN > LNt then send top NMax to other CSs.",
                "ELSE IF there are (NMax-1) streams with LN>LNt then send top (NMax-1) plus the one lower than LNt (i.e., top NMax) to other CSs.",
                "ELSE IF there are (NMax-2) streams with LN>LNt then send top (NMax-2) plus the one lower than LNt (i.e. top (NMax -1)) to other CSs. …… ELSE IF there are NO streams with LN> LNt then send top 1 stream to other CSs.",
                "E. Packets sent in step D form DB1.",
                "Packets received from other CSs form DB2.",
                "F. For this time slot, find global NMax streams based on LN from DB1 U DB2 (set F) G. Send set F to the clients in its domain.",
                "Update LNt for the next period.",
                "Algorithm 2.",
                "Pessimistic algorithm to reduce the number of packets sent over the Internet.",
                "Fig. 6.",
                "Example of a 2-level hierarchy of Conference Servers; the shaded Clients are the one selected by the M-CS and will be sent to other domains CSs.",
                "In this algorithm the saving in traffic is at the cost of relaxing the condition of formation of globally unique set F. However, the discrepancies in selected streams at different domains remain for a short period of time depending on the transportation delay between any two domains.",
                "Even for a total delay of 400ms, for only 10 packet time slots the uniqueness is lost.",
                "This duration in a real-time interactive conversation is non-perceivable by the listener.",
                "In the case that there is a joke and every one laughs, then there would be sudden rise in the number of packets and it would be upper bounded by MaxN)d(O 2 for a short period. 8.2 Optimistic Algorithm The traffic can be reduced further.",
                "The scheme in the following algorithm (Algorithm. 3) is withholding all the streams that have less value of LN compared to the least of the three in the set F. We can find the correct and unique three streams after a few time slots depending on the transportation delay between the domains.",
                "As the packet period is of the order of 40ms, the error in the selection is unnoticeable.",
                "The number of streams on network in this case is always restricted to NMax (=3).",
                "Even without Voice Activity Detection (VAD), there will be no more than three streams in the network in the best case, thus the total traffic is constant.",
                "A sudden burst of traffic, as described in 8.1, is a particular case.",
                "These advantages are due to exploitation of the characteristics of LN.",
                "Initialize LNt = 0 at an M-CS/S-CS A.",
                "In the first time slot (packet time), each CS sends the top NMax streams (based on their LN) to all other CSs.",
                "At each M-CS/S-CS and for each packet time: B.",
                "Find the value of lowest LN of the NMax globally selected streams (set F) from the previous time slot.",
                "Set LNt with this value.",
                "C. At each CS domain, select the NMax local streams that have maximum value of LN (ToOtherCSs set) D. Select streams that have LN > LNt IF there are >= NMax streams with LN > LNt then send top NMax to other CSs.",
                "ELSE IF there are (NMax-1) streams with LN>LNt then send top (NMax-1) and see E. ELSE IF there are (NMax-2) streams with LN>LNt then send top (NMax-2) and see E. …… ELSE IF there are NO streams with LN> LNt then dont send any stream.",
                "E. Exceptions: IF the stream that was in F in the last interval belongs to this CS then select and send that stream even if its LN is now < LNt. (Note this occurs only at that CS which had the stream that was the last of the three in the previous packet period.)",
                "F. Packets sent in step D and E form DB1.",
                "Packets received from other CSs form DB2.",
                "G. For this time slot, find global NMax streams based on LN from DB1 U DB2 (set F).",
                "H. Send set F to the clients in its domain.",
                "Update LNt for the next period.",
                "Algorithm 3.",
                "Optimistic algorithm to reduce the number of packets sent over the Internet Furthermore, when VAD is used [13], it would further reduce the traffic by sending the header part of the RTP packet only and not the whole packet, thus in order to keep updating the LN across.",
                "The traffic here in this case is O(NMax) for multicast and O(d) for unicast.",
                "We see that the above algorithms save bandwidth and computation at each CS, and leads to a scalable architecture with multiple CSs mainly because clients are grouped in domains.",
                "The necessary bandwidth is not dependent on the total number of active clients.",
                "As the CS always chooses the best three clients out of all the clients assigned to it in the domain, addition of new clients to the existing conference will not cause any scalability problem. 8.3 Availability of Multicasting In the architecture that has been proposed, no assumption was made about the availability of multicasting support from the network.",
                "The traffic will be further reduced if multicasting is available over WAN.",
                "It is simple to show that the order of traffic would tend to become O(d) from O(d2 ).",
                "This is an approximation as saving in multicasting depends also on the topology.",
                "The analysis was done for the case wherein multicast is not available (a realistic assumption in todays Internet).",
                "The advantage of this set up is that we can use it even if multicasting is partially available.",
                "We can instruct CSs during the set-up phase to send unicast packets to those CSs that cannot receive multicast packets whereas CSs on multicast enabled routers can exchange packets on a multicast address.",
                "The data structures and conference objects inside a CS is given in [14].",
                "Fig. 7.",
                "User Interface for setting the weight for NMax audio streams (setting Self-bar to zero avoids echo). 8.4 Quality Improvement The observed improvement in the perceived quality of the conference service is due to: (1) limiting the number of concurrent speakers to a low number such as three.",
                "Generally, in a conference if more than two participants speak the intelligibility is lost.",
                "The conversational analysis demonstrates that there would be a repair mechanism [15] in such a case. (2) Delay: The audio stream between any two clients will pass through at most two CSs thus reducing the end-to-end delay.",
                "For a large conference there might be three CSs however, one hop is within the domain incurring negligible delay. (3) As the streams are mixed only at the clients, there can be a customized mix of the streams.",
                "The individual tuning of mixing with weights the spatialism is preserved.",
                "Fig. 7 shows the user interface for the same.",
                "The echo when self-stream is selected can be avoided by reducing the weight.",
                "Nonetheless, feedback helps in reassuring speaker that he/she is heard by all. 9.",
                "CONCLUSION In this paper, we have presented a discussion on a voice-only virtual conferencing environment.",
                "We have argued that the distributed nature of deployment here makes it scalable.",
                "Interactivity is achieved by adapting a recent stream selection scheme based on Loudness Number.",
                "Additionally, we incorporate a result from a more recent work [15] where the sufficiency of three simultaneous speakers has been demonstrated.",
                "Thus, there is significantly effective utilization of bandwidth.",
                "A mixed stream is played out at each client; each client may choose to have a customized mix since mixing is done at the local terminal of each client.",
                "These render impromptu speech in a virtual teleconference over VoIP a reality, as in a real face-to-face conference.",
                "Compatibility is assured thanks to the use of SIP, the most soughtafter signaling protocol.",
                "To ensure a satisfying performance, we do not demand the availability of multicast, but use it if and when available.",
                "The traffic in the WAN (Internet) is upper-bounded by the square of the number of domains, -- further reduced by using heuristic algorithms -- which is far below the total number of clients in the conference.",
                "This is due to the use of a Conference Server local to each domain.",
                "VAD techniques help further traffic reduction.",
                "Using SIP standard for signaling makes this solution highly interoperable.",
                "We have implemented a CS application on a campus-wide network.",
                "We believe this new generation of virtual conferencing environments will gain more popularity in the future as their ease of deployment is assured thanks to readily available technologies and scalable frameworks. 10.",
                "REFERENCES [1] L Aguilar et al., Architecture for a Multimedia Teleconferencing System, in Proceedings of the ACM SIGCOMM, Aug 1986, pp. 126-136. [2] Carsten Bormann, Joerg Ott et al., Simple Conference Control Protocol, Internet Draft, Dec. 1996. [3] M. Decina and V. Trecordi, Voice over Internet Protocol and Human Assisted E-Commerce, IEEE Comm.",
                "Magazine, Sept. 1999, pp. 64-67. [4] Eckehard Doerry, An Empirical Comparison of Copresent and Technologically-mediated Interaction based on Communicative Breakdown, Phd Thesis, Graduate School of the University of Oregon, 1995. [5] H. P. Dommel and J.J. Garcia-Luna-Aceves, Floor Control for Multimedia Conferencing and Collaboration, J. Multimedia Systems, Vol. 5, No. 1, January 1997, pp. 23-38. [6] Amitava Dutta-Roy, Virtual Meetings with desktop conferencing, IEEE Spectrum, July 1998, pp. 47-56. [7] M. Handley and V. Jacobson, SDP: Session Description Protocol, RFC 2327, IETF, April 1998. [8] M. Handley, J. Crowcroft et al., Very large conferences on the Internet: the Internet multimedia conferencing architecture, Journal of Computer Networks, vol. 31, No. 3, Feb 1999, pp. 191-204. [9] ITU-T Rec.",
                "H.323, Packet based Multimedia Communications Systems, vol. 2, 1998. [10] P. Koskelainen, H. Schulzrinne and X. Wu, A SIP-based Conference Control Framework, NOSSDAV02, May 2002, pp. 53-61. [11] R Venkatesha Prasad et al., Control Protocol for VoIP Audio Conferencing Support, International Conference on Advanced Communication Technology, Mu-Ju, South Korea, Feb 2001, pp. 419-424. [12] R Venkatesha Prasad et al., Automatic Addition and Deletion of Clients in VoIP Conferencing, 6th IEEE Symposium on Computers and Communications, July 2001, Hammamet, Tunisia, pp. 386-390. [13] R Venkatesha Prasad, H S Jamadagni, Abjijeet, et al Comparison of Voice Activity Detection Algorithms, 7th IEEE Symposium on Computers and Communications.",
                "July 2002, Sicily, Italy, pp. 530-535. [14] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, A Scalable Distributed VoIP Conferencing using SIP, Proc. of the 8th IEEE Symposium on Computers and Communications, Antalya, Turkey, June 2003. [15] R Venkatesha Prasad, H S Jamadagni and H N Shankar, On Problem of Specifying Number of Floors in a Voice Only Conference, To appear in IEEE ITRE 2003. [16] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, A Proposal for Distributed Conferencing on SIP using Conference Servers, To appear in the Proc. of MMNS 2003, Belfast, UK, September 2003. [17] R. Venkatesha Prasad, H.S.",
                "Jamadagni, J. Kuri, R.S.",
                "Varchas, A Distributed VoIP Conferencing Support Using Loudness Number, Tech.",
                "Rep. TR-CEDT-TE-03-01 [18] M. Radenkovic et al, Scaleable and Adaptable Audio Service for Supporting Collaborative Work and Entertainment over the Internet, SSGRR 2002, LAquila, Italy, Jan. 2002. [19] M. Radenkovic, C. Greenhalgh, S. Benford, Deployment Issues for Multi-User Audio Support in CVEs, ACM VRST 2002, Nov. 2002, pp. 179-185. [20] Srinivas Ramanathan, P. Venkata Rangan, Harrick M. Vin, Designing Communication Architectures for Interorganizational Multimedia Collaboration, Journal of Organizational Computing, 2 (3&4), pp.277-302, 1992. [21] A.",
                "B. Roach, Session Initiation Protocol (SIP)-Specific Event Notification, RFC 3265, IETF, June 2002. [22] J. Rosenberg, H. Schulzrinne et al., SIP: Session Initiation Protocol, RFC 3261, IETF, June 2002. [23] J. Rosenberg, H. Schulzrinne, Models for Multy Party Conferencing in SIP, Internet Draft, IETF, July 2002. [24] H. Schulzrinne et al., RTP: a transport protocol for realtime applications, RFC 1889, IETF, Jan 1996. [25] Lisa R. Silverman, Coming of Age: Conferencing Solutions Cut Corporate Costs, White Paper, www.imcca.org/wpcomingofage.asp [26] Kundan Singh, Gautam Nair and Henning Schulzrinne, Centralized Conferencing using SIP, Proceedings of the 2nd IP-Telephony Workshop (IPTel), April 2001. [27] D. Thaler, M. Handley and D. Estrin, The Internet Multicast Address Allocation Architecture, RFC 2908, IETF, Sept. 2000."
            ],
            "original_annotated_samples": [
                "Recent trends favour services ported on <br>packet-switched network</br>s."
            ],
            "translated_annotated_samples": [
                "Las tendencias recientes favorecen los servicios trasladados a <br>redes de conmutación de paquetes</br>."
            ],
            "translated_text": "Problemas de implementación de un sistema de conferencias VoIP en un entorno de conferencias virtuales. R. Venkatesha Prasad y Richard Hurni. Jamadagni iii H.N. Shankar iv i, iii Centro de Diseño y Tecnología Electrónica Instituto Indio de Ciencias, Bangalore, India Teléfono: +91 80 360 0810 i, iii {vprasad, hsjam}@cedt.iisc.ernet.in ii hurni@ieee.org iv hn_shankar@yahoo.com RESUMEN Los servicios en tiempo real han sido principalmente respaldados en redes conmutadas por circuitos. Las tendencias recientes favorecen los servicios trasladados a <br>redes de conmutación de paquetes</br>. Para las conferencias de audio, necesitamos considerar muchos aspectos, como la escalabilidad, la calidad de la aplicación de conferencia, el control de piso y la carga en los clientes/servidores, por nombrar algunos. En este documento, describimos un marco de servicio de audio diseñado para proporcionar un Entorno de Conferencias Virtuales (ECV). El sistema está diseñado para dar cabida a un gran número de usuarios finales hablando al mismo tiempo y distribuidos por Internet. El marco se basa en Servidores de Conferencia [14], que facilitan el manejo del audio, mientras que explotamos las capacidades de SIP para propósitos de señalización. La selección de clientes se basa en un reciente cuantificador llamado Número de Volumen que ayuda a imitar una conferencia física cara a cara. Nos ocupamos de los problemas de implementación de la solución propuesta tanto en términos de escalabilidad como de interactividad, mientras explicamos las técnicas que utilizamos para reducir el tráfico. Hemos implementado una aplicación de Servidor de Conferencias (CS) en una red de campus en nuestro Instituto. Categorías y Descriptores de Temas C.2.4 [Redes de Computadoras y Comunicación]: Sistemas Distribuidos - Cliente/Servidor, aplicaciones distribuidas. Términos generales Algoritmos, Rendimiento, Diseño, Teoría. 1. INTRODUCCIÓN El Internet de hoy utiliza el conjunto de protocolos IP que fue diseñado principalmente para el transporte de datos y proporciona la entrega de datos con el mejor esfuerzo. Las restricciones de retraso y las características diferencian los datos tradicionales por un lado, de las aplicaciones de voz y video por el otro. Por lo tanto, a medida que se implementan aplicaciones de voz y video cada vez más sensibles al tiempo en Internet, se pone de manifiesto la insuficiencia de la red. Además, buscamos trasladar servicios telefónicos a través de Internet. Entre ellos, la instalación de conferencia virtual (teleconferencia) está a la vanguardia. Las videoconferencias y conferencias de audio en Internet son populares por las varias ventajas que poseen. Claramente, el ancho de banda necesario para una videoconferencia a través de Internet aumenta rápidamente con el número de participantes; reducir el ancho de banda sin comprometer la calidad del audio es un desafío en la telefonía por Internet. Los problemas críticos adicionales son: (a) retraso de paquetes, (b) eco, (c) mezcla de audio de clientes seleccionados, (d) selección automática de clientes para participar en la conferencia, (e) reproducción de audio mezclado para cada cliente, (f) manejo de clientes que no son capaces de mezclar flujos de audio (estos clientes se conocen como clientes tontos), y (g) decidir el número de clientes activos simultáneamente en la conferencia sin comprometer la calidad de voz. Si bien todos los requisitos anteriores son desde el punto de vista tecnológico, la perspectiva de los usuarios y las interacciones también son factores esenciales. Hay mucha discusión entre la comunidad de HCI y CSCW sobre el uso de la Etnometodología para el diseño de aplicaciones de CSCW. El enfoque básico es proporcionar un ancho de banda más amplio, más instalaciones y mecanismos de control más avanzados, con miras a una mejor calidad de interacción. Este enfoque ignora la utilidad funcional del entorno que se utiliza para la colaboración. Eckehard Doerry [4] critica este enfoque diciendo que pone la forma antes que la función. Por lo tanto, la necesidad es adoptar un enfoque que considere ambos aspectos: el técnico y el funcional. En cuanto al aspecto funcional, nos referimos a [15] donde se ha tratado en cierto detalle. En este trabajo, no discutimos la videoconferencia; su inclusión no beneficia significativamente la calidad de la conferencia [4]. Nuestro enfoque está en entornos de audio virtuales. Primero describimos los desafíos encontrados en las conferencias de audio virtuales. Luego investigamos las motivaciones seguidas por la literatura relevante. En la Sección 5, explicamos la arquitectura de nuestro sistema. La sección 6 comprende la descripción de los diversos algoritmos utilizados en nuestra configuración. Abordamos problemas de implementación. Una discusión sobre el Instituto Federal Suizo de Tecnología, Lausana. Antiguo visitante en CEDT. PESIT y NIAS, Bangalore, India. El rendimiento sigue. Concluimos teniendo en cuenta algunos problemas de implementación. 2. DESAFÍOS EN LA VIDEOCONFERENCIA VoIP Surgen muchos desafíos al construir una aplicación VoIP. Lo siguiente es de particular preocupación en el proceso: • Facilidad de uso: la conferencia debe ser sencilla; los usuarios no necesitan experiencia en el dominio. La gestión (adición/eliminación) de clientes y servidores debe ser sencilla. El desarrollo de aplicaciones no debe presuponer características específicas del sistema subyacente o de las capas de red. La facilidad de uso puede incluir el aprovechamiento de tecnologías fácilmente disponibles, técnicamente factibles y económicamente viables. • Escalabilidad: Las conferencias deben parecer ininterrumpidas bajo cargas pesadas, es decir, cuando se agregan muchos usuarios adicionales. El tráfico en la WAN no debería aumentar apreciablemente con el número total de clientes; de lo contrario, esto podría provocar congestión. Por lo tanto, se necesita un medio para regular el tráfico al mínimo para este tipo de aplicaciones en tiempo real. • Interactividad: En Entornos de Conferencias Virtuales (ECVs), pretendemos una aplicación de conferencias cara a cara que imite una conferencia real, donde los participantes más vocales invitan la atención. El intercambio de turnos en la ocupación del espacio por parte de los participantes debe adaptarse con gracia para lograr una transición natural. • Estandarización: La solución debe cumplir con los estándares establecidos para lograr interoperabilidad y aceptación entre pares. Los requisitos anteriores se colocan en la perspectiva de las observaciones realizadas en trabajos anteriores (véase Secciones 3 y 4) y guiarán el diseño del VCE. 3. La motivación Ramanathan y Rangan [20] han estudiado en detalle las configuraciones arquitectónicas comparando muchos esquemas de arquitectura de conferencias teniendo en cuenta la demora de red y los requisitos de computación para la mezcla. La división funcional y el diseño de arquitectura orientada a objetos que ayudan en la implementación se presentan en [1]. Un resumen de muchos temas relacionados con el apoyo a una conferencia grande se aborda en [8]. H. P. Dommel [5] y muchos otros destacan el control de piso como otro aspecto fundamental a tener en cuenta en el diseño de una herramienta de conferencias. Los protocolos de control de conferencias fuertemente acoplados en Internet pertenecen a la familia ITU-T H.323 [9]; sin embargo, están principalmente diseñados para conferencias pequeñas. El último borrador del IETF de Rosenberg y Schulzrinne [23] discute modelos de conferencia con SIP [22] en el fondo. Los aspectos de implementación para la conferencia SIP centralizada se informan en [26]. Un nuevo enfoque llamado mezcla parcial por Radenkovic [18] permite que flujos mezclados y no mezclados coexistan. En todas las propuestas anteriores, si bien hay algunas sugerencias muy útiles, comparten una o más de las siguientes limitaciones: • En una conferencia de audio, no es necesario mezclar los flujos de todos los clientes. De hecho, mezclar muchas corrientes arbitrarias [24] de clientes degrada la calidad de la conferencia debido a la reducción en el volumen (aspecto espacial del habla). El número de flujos mezclados varía dinámicamente dependiendo del número de participantes activos. Esto provocaría fluctuaciones en el volumen de cada participante individual, causando una degradación severa en la calidad. La mezcla personalizada de flujos no es posible cuando hay muchos clientes activos. Existe un umbral en el número de oradores simultáneos por encima del cual aumentar el número de oradores se vuelve contraproducente para la calidad de la conferencia. La fijación del número máximo de hablantes simultáneos se aborda en un trabajo reciente [15] utilizando la Etnometodología, y se postula que es tres. Por lo tanto, es recomendable respetar esa restricción. • No puede haber muchos mezcladores intermedios (similarmente, Servidores de Conferencia como en [10]) en etapas como en [20] porque provoca un retraso desmedido al aumentar el número de saltos y no es escalable con la interactividad como enfoque. • El Control de Piso para una conferencia de audio (incluso de video) con instrucciones explícitas de toma de turnos para los participantes convierte la conferencia en esencia en un asunto de un orador a la vez, no en una en vivo y libre de interrupciones. De esta manera, la conferencia se vuelve notablemente artificial y su calidad se degrada. Schulzrinne et al. [24], asumen que solo un participante está hablando en un momento dado. En este caso, si las aplicaciones se implementan con cierto control [5], el servicio se vuelve asfixiante para los usuarios. • La mezcla parcial [18] tiene un problema similar al de la mezcla cuando se mezclan más flujos. Además, en [18], para permitir el discurso improvisado, la mezcla no se realiza cuando la red puede soportar altos requisitos de ancho de banda para enviar/recibir todas las transmisiones, pero es innecesaria [15]. • Para conferencias grandes [23, 10] una conferencia centralizada no puede escalar. Con la multidifusión, los clientes tendrán que analizar muchos flujos y el tráfico en la red de los clientes aumenta innecesariamente. Evidentemente, se abordan diferentes problemas particulares, todos los cuales son un subconjunto de los requisitos (definidos en [14] y [16]) para el soporte de conferencias de VoIP. Por lo tanto, es necesario abordar la conferencia en su totalidad teniendo en cuenta todos sus requisitos de manera simultánea. Con este objetivo, el sistema de conferencias VoIP que proponemos está diseñado para ser escalable e interactivo. Hacemos uso del Número de Sonoridad para implementar el control de volumen. Esto permite a un participante entrar libremente en el modo de hablar para interrumpir al orador actual como en una reunión natural cara a cara. Un límite superior en el número de pisos (es decir, el número de oradores permitidos para hablar al mismo tiempo) se fija utilizando una conjetura propuesta en [15]. El trabajo presentado aquí es una continuación de nuestros estudios sobre conferencias basadas en el Protocolo de Inicio de Sesión en [14] y [16]. SIP, definido en [22], es ahora el estándar más popular para implementación de VoIP y ha sido elegido por su fortaleza, facilidad de uso, extensibilidad y compatibilidad. Esta es la razón por la cual estará en el trasfondo de todos los mensajes de control que surgirán implícitamente entre las entidades en nuestra arquitectura. Los mensajes actuales están descritos en [16] y, como tal, no presentamos una descripción completa de ellos aquí. 4. TRABAJO RELACIONADO El estándar SIP definido en el RFC 3261 [22] y en extensiones posteriores como [21] no ofrece servicios de control de conferencias como control de piso o votación y no prescribe cómo debe ser gestionada una conferencia. Sin embargo, SIP se puede utilizar para iniciar una sesión que utilice algún otro protocolo de control de conferencias. La especificación central de SIP soporta muchos modelos para conferencias [26, 23]. En los modelos basados en servidor, un servidor mezcla flujos de medios, mientras que en una conferencia sin servidor, la mezcla se realiza en los sistemas finales. SDP [7] se puede utilizar para definir las capacidades de los medios y proporcionar otra información sobre la conferencia. Ahora consideraremos algunos modelos de conferencia en SIP que han sido propuestos recientemente [23]. Primero, veamos los modelos sin servidor. En la mezcla de extremos del sistema, solo un cliente (SIP UA) maneja la señalización y la mezcla de medios para todos los demás, lo cual claramente no es escalable y causa problemas cuando ese cliente en particular abandona la conferencia. En el modelo de Usuarios que se unen, un árbol crece, ya que cada parte invitada constituye una nueva rama en el camino de distribución. Esto conduce a un número creciente de saltos para las hojas remotas y no es escalable. Otra opción sería utilizar la multidifusión para las videoconferencias, pero actualmente la multidifusión no está habilitada en Internet y solo es posible en una LAN. Entre los modelos basados en servidor, en una conferencia de marcado, los UAs se conectan a un servidor central que maneja todas las mezclas. Este modelo no es escalable ya que está limitado por la potencia de procesamiento del servidor y el ancho de banda de la red. Las conferencias centralizadas ad hoc y los servidores de conferencias de marcado tienen mecanismos y problemas similares. Los modelos híbridos que involucran señalización centralizada y medios distribuidos, con estos últimos utilizando unicast o multicast, plantean problemas de escalabilidad como antes. Sin embargo, una ventaja es que el control de la conferencia puede ser una solución de terceros. La Mezcla Parcial Distribuida, presentada en [18], propone que en caso de limitación de ancho de banda, algunos flujos se mezclan y otros no, manteniendo la interactividad intacta. La pérdida de espacialidad cuando se mezclan y el aumento del ancho de banda cuando no lo hacen son problemas abiertos. Un estudio relacionado [19] del mismo autor propone una arquitectura de conferencias para Entornos Virtuales Colaborativos (CVEs) pero no proporciona el enfoque de escalabilidad sin la disponibilidad de la multidifusión. Teniendo en cuenta las limitaciones de los sistemas de conferencias propuestos, detallaremos ahora nuestra propuesta. 5. ARQUITECTURA DEL SISTEMA Esta sección está dedicada a la descripción de la arquitectura del sistema propuesto. Sin embargo, dado que este documento constituye la continuación de nuestro trabajo iniciado en [14] y ampliado en [16], no presentaremos aquí todos los detalles sobre las entidades propuestas e invitamos a los lectores a consultar los documentos mencionados anteriormente para obtener una descripción completa y detallada. Primero, no restringimos nuestro sistema de conferencias para funcionar solo en conferencias pequeñas, sino en grandes VCEs de audio que tienen cientos (o incluso miles) de usuarios a través de una Red de Área Amplia (WAN) como Internet. Esta perspectiva se deriva de una evaluación de que los VCEs ganarán importancia en el futuro, ya que las conferencias de audio interactivas serán más populares debido a la difusión de la cultura mediática en todo el mundo. Dos aspectos deben ser atendidos al construir un sistema de conferencias VoIP: (i) el front-end, que consiste en el programa de aplicación que se ejecuta en las computadoras de los usuarios finales y (ii) el back-end que proporciona otros programas de aplicación que facilitan las conferencias y la conferencia. Los usuarios participantes se agrupan en varios dominios. Estos dominios son Redes de Área Local (LAN), como redes corporativas o educativas. Esta suposición distribuida requiere soluciones de control y manejo de medios distribuidos, ya que los sistemas centralizados no serían escalables para conferencias tan grandes (ver Sección 4). Más explícitamente, en cada dominio, podemos identificar varios componentes lógicos relevantes de una instalación de conferencias (Fig. 1): Un número arbitrario de usuarios finales (clientes) que pueden participar en como máximo una conferencia de audio a la vez. Cada usuario es la Fig. 1. Ejemplo de conferencia: 3 dominios que contienen las entidades necesarias para que la conferencia pueda tener lugar. Incluidas en un único dominio en un instante dado, pero pueden moverse de un dominio a otro (nomadismo). En nuestro entorno de conferencias, estos clientes son Agentes de Usuario SIP (SIP UAs) regulares, según se define en [22], para lograr interoperabilidad con otros sistemas compatibles con SIP existentes. Estos clientes no son conscientes del entorno complejo que respalda la conferencia, lo cual se destaca a continuación. Un servidor SIP (SIPS) por dominio, encargándose de todos los aspectos de señalización de la conferencia (clientes que se unen, salen, etc.) [16]. En particular, se considera como una implementación física que abarca diferentes roles lógicos, a saber, un Servidor Proxy SIP, un Servidor Registrador SIP, un Servidor de Redirección SIP y un SIP B2BUA (Agente de Usuario de Vuelta a Vuelta) [22]. Esta implementación física permite el manejo de mensajes SIP entrantes/salientes por una u otra entidad lógica según sea necesario. SIPS está encargado de mantener un servicio total y tiene muchas ventajas, como (a) funciona como una entidad centralizada que puede hacer un seguimiento de las actividades de los UAs en una conferencia; (b) puede realizar todo el cambio para proporcionar funciones de PBX; (c) puede localizar a los UAs e invitarlos a una conferencia; (d) también puede encargarse de la facturación. Los SIPS en diferentes dominios se comunican entre sí utilizando mensajes SIP como se describe en [16]. Si la carga en un SIPS particular es demasiado pesada, puede crear otro SIPS en el mismo dominio para que la carga se comparta. Se crea un Servidor de Conferencias Maestro (M-CS) (simplemente un Servidor de Conferencias (CS)) para cada conferencia por el SIPS local cuando una conferencia comienza. Este servidor se utilizará para manejar paquetes de medios para los clientes del dominio. Su mecanismo será descrito en la siguiente sección. El M-CS podrá crear una jerarquía de CSs dentro de un dominio agregando uno o más CSs esclavos (S-CSs) para dar cabida a todos los clientes activos y prevenir su propia saturación al mismo tiempo. Veremos este mecanismo con cierto detalle en la secuela. Las entidades descritas aquí son exhaustivas y se ajustan a la filosofía del SIP. Por lo tanto, el uso de SIP hace que esta arquitectura sea más útil e interoperable con cualquier otro cliente o servidor SIP. PROBLEMAS ALGORÍTMICOS 6.1 Seleccionar los flujos similares a SipConf en [27], un Servidor de Conferencias (CS) [17] tiene la función de soportar la conferencia; es responsable de manejar los flujos de audio utilizando RTP. También puede duplicarse para convertir formatos de transmisión de audio para un cliente dado si es necesario y puede funcionar como Traductores/Mezcladores de la especificación RTP detrás de cortafuegos. Hemos basado el diseño de nuestro CS en el Procesador Multipunto (MP) H.323 [9]. En resumen, el MP recibe flujos de audio de los puntos finales involucrados en una conferencia multipunto centralizada o híbrida, los procesa y los devuelve a los puntos finales. Un procesador de señales de audio prepara N salidas de audio NMax a partir de M flujos de entrada después de la selección, mezcla o ambas. La mezcla de audio requiere decodificar el audio de entrada a señales lineales (PCM o analógicas), realizar una combinación lineal de las señales y volver a codificar el resultado en un formato de audio apropiado. El procesador de señales puede eliminar o atenuar algunas de las señales de entrada para reducir el ruido y los componentes no deseados. Fig. 2. \n\nFig. 2. El diagrama esquemático de un CS. La limitación de H.323 es que no aborda la escalabilidad de una conferencia. La arquitectura propone una topología en cascada o en cadena de margaritas [10], la cual se puede demostrar que no puede escalar para una conferencia grande. Un CS atiende a muchos clientes en la misma conferencia. Por lo tanto, solo maneja una conferencia a la vez. Varios CS pueden coexistir en un dominio, como cuando hay varias conferencias en curso. Los mensajes relacionados con la señalización de los CSs se tratan en [11]. El funcionamiento de un CS se ilustra en la Fig. 2: Para cada intervalo de mezcla, CS 1 elige los mejores NMax paquetes de audio de los M1 (utilizando un criterio denominado Número de Volumen, descrito en la siguiente subsección). Puede posiblemente recibir y enviar estos a CSs 2 a P. El conjunto de paquetes enviados se denota como AotrosCSs. En el mismo intervalo de mezcla, también recibe los mejores paquetes de audio NMax (de un posible M2) de CS 2, de manera similar a los mejores NMax (de un posible MP) de CS P. Para simplificar, ignoramos el retardo de propagación entre los CSs, que de hecho se puede tener en cuenta; está más allá del alcance de esta presentación. El conjunto de paquetes recibidos se denota como FromOtherCSs. Finalmente, selecciona los mejores paquetes NMax del conjunto {ToOtherCSs unión FromOtherCSs} y envía estos paquetes a su propio grupo. Se puede observar que el conjunto {ToOtherCSs unión FromOtherCSs} es el mismo en todos los CSs. Esto garantiza que cualquier cliente en la conferencia finalmente reciba el mismo conjunto de paquetes para mezclar. Por lo tanto, todos los clientes obtienen una vista común de la conferencia. De manera similar, para cada intervalo de tiempo (tiempo de paquete), se selecciona un subconjunto, F, de todos los clientes (utilizando el mismo criterio) del conjunto de paquetes de todos los otros CS más los NMax clientes seleccionados localmente. Sus paquetes se mezclan y se reproducen en los clientes. Según [15], la cardinalidad de F, |F| es NMax y está fijada en tres. En nuestra configuración de conferencias, la selección la realiza el Servidor Maestro de Conferencias (M-CS), que interviene exclusivamente en el manejo de medios. Ten en cuenta que aunque la especificación de SIP permite la comunicación directa de medios de usuario a usuario en una llamada uno a uno, también es posible utilizar el Servidor de Conferencias para llamadas de dos partes, especialmente porque es entonces más funcional crear una conferencia real agregando un tercero y posteriormente más participantes. Existen casos en los que la capacidad de procesamiento de un M-CS se ve superada, ya que puede tener demasiados paquetes, tanto de dominios locales como de dominios remotos, para procesar. En ese caso, el M-CS creará uno o varios S-CS (Fig. 6) y transferirá a sus propios clientes, así como a los nuevos clientes, a ellos. En esta configuración, el algoritmo descrito anteriormente se modificará ligeramente, ya que los paquetes de audio irán de los clientes a su S-CS dedicado, que seleccionará NMax paquetes para enviar al M-CS local, que luego seleccionará NMax paquetes de todos sus S-CS en el dominio antes de enviarlos a los dominios remotos. Los paquetes entrantes de otros dominios serán recibidos por el M-CS, se seleccionarán NMax de ellos y se enviarán directamente a los clientes del dominio, evitando los SCSs. Este cambio implica que existen como máximo tres entidades intermedias para cada paquete de audio, en lugar de dos en la configuración convencional. Dado que el salto adicional ocurre dentro de la LAN que se supone tiene una conectividad de alta velocidad, consideramos que no debería impedirnos usar esta jerarquía de CS cuando sea necesario hacerlo. 6.2 Número de Sonoridad (LN) Una pregunta básica que debe responder el CS es la siguiente. En un intervalo de mezcla, ¿cómo debería elegir NMax paquetes de los M que podría recibir? Una forma es clasificar los paquetes M recibidos según sus energías y elegir los NMax mejores. Sin embargo, esto suele considerarse insuficiente porque las fluctuaciones aleatorias en las energías de los paquetes pueden provocar una mala calidad de audio. Esto indica la necesidad de una métrica diferente de meras energías individuales de paquetes. El medidor debe tener las siguientes características [12]: • Un hablante (ocupante del suelo) no debe ser interrumpido por un pico en la energía del paquete de otro hablante. Esto implica que la historia del discurso de un hablante debería tener cierto peso. Esto se suele llamar Persistencia o Resaca. • Un participante que quiera interrumpir a un orador tendrá que (i) hablar en voz alta y (ii) seguir intentándolo por un tiempo breve. En una conferencia presencial, el lenguaje corporal a menudo indica la intención de interrumpir. Pero en una conferencia a ciegas en discusión, la intención de un participante de interrumpir puede ser transmitida de manera efectiva a través de LN. Se debe garantizar un mecanismo de control de piso habilitado para cortar a un orador de manera contundente. Estos requisitos son cumplidos por el Número de Volumen [12], que cambia suavemente con el tiempo para que la selección (adición y eliminación) de clientes para la conferencia sea elegante. LN (= ) es una función de la amplitud de la corriente de audio actual más la actividad y amplitud en una ventana específica en el pasado. Fig. 3. \n\nFig. 3. Las diferentes ventanas utilizadas para el cálculo de LN se actualizan en una base de paquete por paquete. El parámetro básico utilizado aquí es la amplitud del paquete, que se calcula como la raíz cuadrada de la media cuadrática (rms) de las energías en las muestras de audio de un paquete, y se denota como XK. Tres ventanas están definidas como se muestra en la Fig. 3. El nivel de amplitud actual del altavoz se encuentra calculando el promedio móvil de la amplitud del paquete (XK) dentro de una ventana llamada Ventana de Pasado Reciente, que va desde el instante presente hasta algún momento pasado. La actividad pasada del hablante se encuentra calculando el promedio móvil de la amplitud del paquete (XK) dentro de una ventana llamada Ventana de Pasado Lejano, que comienza en el punto donde termina la ventana de Pasado Reciente y se extiende hacia atrás en el pasado por un intervalo predefinido. La actividad del hablante en el pasado se encuentra con una ventana llamada Horizonte de Actividad, que abarca la ventana del pasado reciente, así como la ventana del pasado lejano y más allá si es necesario. Aunque la contribución del horizonte de actividad parece similar a la contribución de las ventanas del pasado reciente y pasado lejano, la actividad pasada se calcula de manera diferente a partir de la ventana del horizonte de actividad. Define las cantidades durante estos tres intervalos como L1, L2 y L3. L1 cuantifica la actividad de habla del Pasado Reciente, L2 la actividad de habla del Pasado Lejano y L3 proporciona un número correspondiente a la actividad de habla en la ventana del Horizonte de Actividad, cuantificando qué tan activo estuvo el hablante en los últimos intervalos. L3 produce una cantidad que es proporcional a la fracción de paquetes que tienen energías por encima de un umbral predefinido (Ec. 3). El umbral es invariable entre clientes. ∑ +− = = 1 1 1 RPP P Wt tK K RP X W L (1) ∑ +−− −= = 1 2 1 DPRPP RPP WWt WtK K DP X W L (2) ∑ +− = ≥= 1 }{3 * 1 AHP P K Wt tK X AH I W L θθ (3) Donde siI KX 1}{ =≥θ θ≥KX = de lo contrario,0 El umbral es una constante. Se establece en el 10-20 por ciento de la amplitud de las muestras de voz de un paquete en nuestra implementación aquí. El número de intensidad λ para el instante de tiempo presente (o el paquete presente) se calcula como, 332211 *L*L*L αααλ ++= (4) Aquí 1, 2 y 3 son elegidos de tal manera que: 0< 1, 2 y 3=1- 1) Aquí, 1 es el peso dado al habla del pasado reciente, 2 es el peso dado al habla del pasado lejano y 3 es el peso dado a la actividad del habla en la ventana de horizonte de actividad considerada. 6.3 Seguridad, Vida y Equidad El parámetro λ tiene un efecto significativo en la evaluación de la ventana. Después de que un conferenciante se queda en silencio, otro puede tomar la palabra. Además, dado que hay más de un canal, la interrupción está habilitada. Un conferenciante ruidoso es más probable que sea escuchado debido a un λ elevado. Esto garantiza equidad para todos los conferenciantes. Después de todo, incluso en una conferencia presencial, un orador más vocal capta una atención especial. Todas estas características deseables están integradas en la LN. Una discusión exhaustiva sobre la selección de los diversos parámetros y la dinámica de LN están fuera del alcance de este documento. 6.4 Algoritmo de selección utilizando LN Siguiendo los desarrollos en las subsecciones 6.1 y 6.2, presentamos el algoritmo simple que se ejecuta en cada Servidor Maestro-Conferencia (Algoritmo 1). Este algoritmo se basa en las discusiones de la sección 6.1. El conjunto F, único a nivel mundial, se encuentra utilizando este procedimiento. Repetir para cada intervalo de tiempo en cada M-CS { 1. Obtener todos los paquetes de los clientes que le pertenecen. 2. Encuentra como máximo NMax clientes que tengan un PD[LPXP RXW RI 0 &OLHQWV LQ LWV GRPDLQ\u0011 3. Almacene una copia de los paquetes de esos clientes NMax en la base de datos DB1. Envía estos paquetes NMax a otros M-CSs (en Unicast o Multicast, dependiendo de la configuración). 5. De igual manera, recibir paquetes de todos los demás M-CSs y almacenarlos en la base de datos DB2. 6. Ahora compara los paquetes en DB1 y DB2 en WKH EDVLV RI DQG VHOHFW D PD[LPXP RI NMax entre ellos (para formar el conjunto F) que deberían ser reproducidos en cada Cliente. 7. Enviar los paquetes NMax en el conjunto F a los Clientes en su dominio. 8. Mezcla estos paquetes de audio NMax en el conjunto F después de linearizarlos y envíalos a Clientes sin capacidad en el dominio. Algoritmo 1. Algoritmo de selección El mecanismo propuesto aquí también se muestra en la Fig. 6, donde tiene lugar una única conferencia entre tres dominios. Los clientes sombreados son los seleccionados en sus dominios locales; sus flujos de audio serán enviados a otros CSs. 7. PROBLEMAS DE DESPLIEGUE Ahora analizamos los problemas de despliegue asociados con la gestión de conferencias. ¿Cómo deben organizarse los dominios para maximizar el número de participantes que pueden unirse? Para abordar esto, definimos algunos parámetros útiles.  Sea d el número de dominios diferentes en los que hay clientes activos en una conferencia dada.  Sea Mi el número de clientes activos presentes en el dominio i (di ≤≤1) en una conferencia dada. El número total de clientes activos en la conferencia es por lo tanto ∑= = d i iMM 1. Sea C el número máximo de flujos de audio que un Servidor de Conferencias puede manejar en un tiempo de paquete, también llamado capacidad. C se establece de acuerdo con la potencia de procesamiento del CS más débil en la conferencia, pero como no se puede asumir que lo conocemos de antemano, se puede establecer de acuerdo con algún requisito mínimo del sistema que una máquina debe cumplir para participar en una conferencia. Deje que NMax sea el número de flujos de salida que un CS debe enviar a otros CS en dominios remotos (ver sección 6.1). Estableceremos NMax = 3 (=|F|), según [15]. El problema de optimización consiste en encontrar el valor de d que maximiza el número total de clientes Mi atendidos por un CS en un dominio con capacidad C. Primero consideramos el caso en el que la capacidad no es excedida (el CS existente no está sobrecargado), y luego procedemos al caso en el que es necesario crear más CS cuando un CS único está sobrecargado. Suponemos que los clientes están distribuidos de manera equitativa entre los dominios, ya que no tenemos información para asumir una distribución a priori de los clientes. Podemos especificar únicamente un límite superior en el número de clientes aceptables, dado el número de dominios activos d. 7.1 Conferencias con solo un nivel de CSs En esta subsección, consideramos que tenemos solo un CS, es decir, un único M-CS en cada dominio. Por lo tanto, no se puede sobrecargar. Consideramos que el sistema funciona tal como se describe en la sección 6.1: Los clientes envían sus paquetes de audio a su CS local, que selecciona NMax flujos antes de enviarlos a otros CS. De manera paralela, también recibe NMax transmisiones para cada otro CS antes de tomar una decisión sobre cuáles de las NMax transmisiones serán seleccionadas, enviadas y reproducidas en cada cliente individual. Para la estabilidad del sistema, cualquier servidor de conferencias debería ser capaz de manejar a sus clientes locales además de los paquetes de audio de otros dominios. Claramente entonces, la siguiente desigualdad debe cumplirse para todo dominio: )1( −⋅+≥ dN d M C Max (5) El caso límite de (5) (tomando la igualdad) toma la forma 2 )( dNdNCM MaxMax ⋅−⋅+= (6) Para optimizar d con respecto a M, establecemos 0)(2 =+−⋅⋅= ∂ ∂ MaxMax NCdN d M (7) obteniendo     ⋅ + = Max Max N NC d 2 (8) ([ ]* = Redondeando al entero más cercano) y por lo tanto, M de (6). Tabla 1. Valores de d y M calculados para algunos valores de C con NMax = 3. En la Tabla 1, se presentan los valores de d y M que fueron calculados utilizando (8) y (6) con NMax = 3. Vemos que los valores de d y M, al depender de C, se basan en el CS más débil. Vemos que hay un equilibrio entre M y d. Podríamos admitir más dominios en la conferencia, pero a costa de restringir el número total de clientes M en la conferencia. Durante la implementación y prueba de los Servidores de Conferencia en un Pentium III 1.4 GHz con Windows NT, pudimos establecer C=300. Pero con la llegada de computadoras más rápidas (> 3 GHz), uno puede fácilmente establecer C a valores más altos y determinar d y M en consecuencia. La Fig. 4 muestra un mapa de contorno y la Fig. 5, una malla 3D que muestra soluciones optimizadas para CSs de diferentes capacidades. Estos nos llevan a maximizar el número de dominios, y por lo tanto, a maximizar el número total de clientes basado en la capacidad de varios CSs. En la Fig. 4, las curvas individuales representan el número total de clientes objetivo, y seleccionamos un valor más bajo de d, para la capacidad C, para el objetivo M con el fin de reducir el tráfico en la WAN. La Fig. 5 representa una perspectiva diferente de los mismos datos en 3D. Fig. 4. \n\nFig. 4. Diagrama de contorno de la capacidad versus el número óptimo de dominios para varios tamaños de conferencias 7.2 Conferencias con Dos Niveles de CSs. Ahora considerando el caso en el que el número de clientes en un dominio particular es demasiado grande, es decir, d M Mi ≥ (9), se debe evitar la denegación de servicio para nuevos clientes debido a la sobrecarga del Servidor de Conferencias. Este problema se puede resolver introduciendo un segundo nivel de CSs dentro del dominio dado, como se muestra en la Figura 6. El M-CS existente crea un CS esclavo (S-CS) que puede manejar hasta C usuarios finales y al que transfiere todos sus clientes activos. Aquí, el sistema funciona de manera diferente como se describe en la sección 6.1: Los clientes envían sus paquetes de audio a su S-CS local, que selecciona NMax flujos, antes de enviarlos a un M-CS local, que procederá de la misma manera, antes de enviar NMax flujos a los otros dominios. Cada S-CS recién creado debe ejecutarse en una máquina separada. El M-CS tiene que crear más S-CSs si el número de clientes activos supera C durante el transcurso de la conferencia después de la transferencia. Con este mecanismo, el M-CS podrá crear un máximo de     −⋅− = Max Max N dNC U )1( S-CSs, (10) ya que debe manejar 3 (= NMax) paquetes para cada S-CS local y 3 (= NMax) paquetes de cada otro dominio remoto. Podemos entonces calcular el número máximo teórico de clientes activos CUMi ⋅= en cada dominio, así como M, para toda la conferencia como CUdM ⋅⋅= . Fig. 5. Gráfico 3D de Capacidad versus Número óptimo de dominios para varios tamaños de conferencia. Por supuesto, se podría crear un tercer nivel en la jerarquía, lo que daría la posibilidad de alojar aún más clientes. Esto puede ser innecesario ya que el número de posibles clientes es lo suficientemente grande con dos niveles. 8. DISCUSIÓN DE RENDIMIENTO Ahora analizamos el rendimiento del algoritmo presentado en la subsección 6.3, es decir, el que se encarga del intercambio de paquetes de audio entre los diferentes dominios. Ten en cuenta que los paquetes que están en tránsito dentro de la LAN aprovechan la mayor capacidad (generalmente junto con capacidades de multidifusión) y por lo tanto no requieren un análisis de rendimiento. Por lo tanto, debemos examinar solo los paquetes RTP a través de la WAN, es decir, entre los M-CS participantes. Dado que cada M-CS de un dominio solo enviará NMax de los d paquetes M a los otros CS (MaxN d M >>), el ancho de banda utilizado por la aplicación en una WAN está limitado por la siguiente expresión. El número total de paquetes de audio que transitan por la WAN para cada intervalo de tiempo es ∑ ∑= ≠=        d i d ijj MaxN 1 ,1, lo cual es cuadrático en el número de dominios (es decir, O(d2)). Sin embargo, es independiente del número total de clientes activos. Esto no habría sido el caso si todos los paquetes se hubieran enviado por la red en cada intervalo de tiempo. El ahorro es tremendo. Sin embargo, se podría argumentar que enviar tres paquetes hacia y desde todos los dominios es un desperdicio de recursos, ya que la mayoría de estos flujos no serán seleccionados. Si solo hay un cliente activo, seleccionar un subconjunto de clientes en ese dominio es innecesario. Los algoritmos pesimistas y optimistas presentados en la secuela tienen como objetivo reducir aún más el tráfico aprovechando la naturaleza lenta y variable de la LN. 8.1 Algoritmo pesimista Consideremos un escenario en el que el LN más bajo (llamado LNt) de los tres flujos seleccionados globalmente (conjunto F de la Sección 6.1) excede el LN del flujo más dominante de un dominio. Evidentemente, las posibilidades de que los dos próximos flujos dominantes de ese dominio sean seleccionados para F en el próximo período de paquetes son menores. Aquí enviamos este flujo más dominante y retenemos los otros dos. Puede haber un error en la selección única en todos los dominios por un solo período de paquete. Como LN varía lentamente, el error se corregiría automáticamente en un período (ranura) de paquete posterior. En este algoritmo, hay al menos un flujo en cada período. El tráfico de red neto en un período de paquetes en el mejor caso es )1( −⋅ dd, es decir, )( 2 dO utilizando unicast, en lugar de MaxNdd ⋅−⋅ )1(. Se puede ahorrar un ancho de banda considerablemente valioso utilizando esta heurística. La complejidad del tráfico resultante se reduce de O(d2) a O(d) en redes habilitadas para multidifusión. Inicializar LNt = 0 en un M-CS/S-CS A. En el primer intervalo de tiempo (tiempo de paquete), cada CS envía las primeras NMax secuencias (basadas en su LN) a todos los demás CSs. En cada M-CS/S-CS y para cada tiempo de paquete: B. Encuentra el valor del LN más bajo de los flujos NMax seleccionados globalmente (conjunto F) del intervalo de tiempo anterior. Establece LNt con este valor. C. En cada dominio de CS, selecciona los NMax flujos locales que tengan el valor máximo de LN (conjunto ToOtherCSs). D. Seleccionar los flujos que tengan LN > LNt. Si hay >= NMax flujos con LN > LNt, entonces enviar los mejores NMax a otros CSs. EN OTRO CASO, si hay (NMax-1) flujos con LN>LNt, enviar los mejores (NMax-1) más el que esté por debajo de LNt (es decir, los mejores NMax) a otros CSs. EN OTRO CASO, si hay (NMax-2) flujos con LN>LNt, entonces enviar los mejores (NMax-2) más el que esté por debajo de LNt (es decir, los mejores (NMax-1)) a otros CSs. ... EN OTRO CASO, si NO hay flujos con LN>LNt, entonces enviar el mejor flujo a otros CSs. Los paquetes enviados en el paso D forman DB1. Los paquetes recibidos de otros CSs forman DB2. F. Para este intervalo de tiempo, encuentra flujos globales NMax basados en LN de DB1 y DB2 (conjunto F) G. Envía el conjunto F a los clientes en su dominio. Actualiza LNt para el próximo período. Algoritmo 2. Algoritmo pesimista para reducir el número de paquetes enviados por Internet. Fig. 6. \n\nFig. 6. Ejemplo de una jerarquía de 2 niveles de Servidores de Conferencias; los Clientes sombreados son los seleccionados por el M-CS y serán enviados a otros CSs de dominios. En este algoritmo, el ahorro en tráfico se logra a expensas de relajar la condición de formación del conjunto F globalmente único. Sin embargo, las discrepancias en los flujos seleccionados en diferentes dominios permanecen por un corto período de tiempo dependiendo del retraso en el transporte entre dos dominios. Incluso para un retraso total de 400 ms, con solo 10 ranuras de tiempo de paquete, se pierde la unicidad. Esta duración en una conversación interactiva en tiempo real no es perceptible por el oyente. En el caso de que haya una broma y todos se rían, entonces habría un aumento repentino en el número de paquetes y estaría limitado por MaxN)d(O 2 durante un corto período. 8.2 Algoritmo Optimista El tráfico puede reducirse aún más. El esquema en el siguiente algoritmo (Algoritmo 3) retiene todos los flujos que tienen un valor de LN menor que el mínimo de los tres en el conjunto F. Podemos encontrar los tres flujos correctos y únicos después de unos cuantos intervalos de tiempo, dependiendo del retraso de transporte entre los dominios. Dado que el período del paquete es del orden de 40 ms, el error en la selección es imperceptible. El número de flujos en la red en este caso siempre está restringido a NMax (=3). Incluso sin Detección de Actividad de Voz (VAD), en el mejor de los casos no habrá más de tres flujos en la red, por lo tanto, el tráfico total es constante. Una repentina oleada de tráfico, como se describe en la sección 8.1, es un caso particular. Estas ventajas se deben a la explotación de las características de LN. Inicializar LNt = 0 en un M-CS/S-CS A. En el primer intervalo de tiempo (tiempo de paquete), cada CS envía las primeras NMax secuencias (basadas en su LN) a todos los demás CS. En cada M-CS/S-CS y para cada tiempo de paquete: B. Encuentra el valor del LN más bajo de los flujos seleccionados globalmente de NMax (conjunto F) del intervalo de tiempo anterior. Establece LNt con este valor. C. En cada dominio de CS, selecciona los NMax flujos locales que tengan el valor máximo de LN (conjunto ToOtherCSs). D. Selecciona los flujos que tengan LN > LNt SI hay >= NMax flujos con LN > LNt, entonces envía los mejores NMax a otros CSs. EN OTRO CASO, si hay (NMax-1) flujos con LN>LNt, entonces enviar los primeros (NMax-1) y ver E. EN OTRO CASO, si hay (NMax-2) flujos con LN>LNt, entonces enviar los primeros (NMax-2) y ver E. ... EN OTRO CASO, si NO hay flujos con LN>LNt, entonces no enviar ningún flujo. E. Excepciones: SI el flujo que estaba en F en el último intervalo pertenece a este CS, entonces selecciona y envía ese flujo incluso si su LN es ahora < LNt. (Nota: esto ocurre solo en ese CS que tenía el flujo que fue el último de los tres en el período de paquetes anterior). Los paquetes enviados en los pasos D y E forman DB1. Los paquetes recibidos de otros CSs forman DB2. Para este intervalo de tiempo, encuentra los flujos globales NMax basados en LN de DB1 y DB2 (conjunto F). H. Envíe el conjunto F a los clientes en su dominio. Actualiza LNt para el próximo período. Algoritmo 3. Algoritmo optimista para reducir el número de paquetes enviados a través de Internet. Además, cuando se utiliza VAD [13], se reduciría aún más el tráfico al enviar solo la parte del encabezado del paquete RTP y no todo el paquete, con el fin de mantener actualizada la LN en todo momento. El tráfico aquí en este caso es O(NMax) para multicast y O(d) para unicast. Vemos que los algoritmos anteriores ahorran ancho de banda y cálculos en cada CS, y conducen a una arquitectura escalable con múltiples CS principalmente porque los clientes están agrupados en dominios. El ancho de banda necesario no depende del número total de clientes activos. Como el CS siempre elige a los tres mejores clientes de entre todos los clientes asignados en el dominio, la adición de nuevos clientes a la conferencia existente no causará ningún problema de escalabilidad. 8.3 Disponibilidad de Multidifusión En la arquitectura propuesta, no se hizo ninguna suposición sobre la disponibilidad de soporte de multidifusión de la red. El tráfico se reducirá aún más si la multidifusión está disponible a través de WAN. Es sencillo demostrar que el orden del tráfico tiende a ser O(d) en lugar de O(d2). Esta es una aproximación ya que el ahorro en la multidifusión también depende de la topología. El análisis se realizó para el caso en el que la multidifusión no está disponible (una suposición realista en el Internet de hoy en día). La ventaja de esta configuración es que podemos usarla incluso si la multidifusión está parcialmente disponible. Podemos instruir a los CSs durante la fase de configuración para enviar paquetes unicast a aquellos CSs que no pueden recibir paquetes multicast, mientras que los CSs en enrutadores habilitados para multicast pueden intercambiar paquetes en una dirección multicast. Las estructuras de datos y objetos de conferencia dentro de una CS se encuentran en [14]. Fig. 7. \n\nFig. 7. Interfaz de usuario para establecer el peso de las corrientes de audio NMax (establecer la barra de auto a cero evita el eco). Mejora de calidad 8.4 La mejora observada en la calidad percibida del servicio de conferencias se debe a: (1) limitar el número de oradores concurrentes a un número bajo, como tres. Generalmente, en una conferencia, si hablan más de dos participantes se pierde la inteligibilidad. El análisis conversacional demuestra que en tal caso habría un mecanismo de reparación [15]. (2) Retraso: La transmisión de audio entre dos clientes pasará como máximo por dos servidores centrales, reduciendo así el retraso de extremo a extremo. Para una conferencia grande puede haber tres CSs, sin embargo, un salto está dentro del dominio incurriendo en un retraso insignificante. (3) Dado que las transmisiones se mezclan solo en los clientes, puede haber una mezcla personalizada de las transmisiones. La sintonización individual de la mezcla con pesos preserva el espacialismo. La Fig. 7 muestra la interfaz de usuario para lo mismo. El eco al seleccionar la auto-transmisión se puede evitar reduciendo el peso. Sin embargo, la retroalimentación ayuda a asegurar al hablante de que está siendo escuchado por todos. CONCLUSIÓN En este artículo, hemos presentado una discusión sobre un entorno de conferencias virtuales solo de voz. Hemos argumentado que la naturaleza distribuida de la implementación aquí la hace escalable. La interactividad se logra adaptando un esquema reciente de selección de flujo basado en el Número de Sonoridad. Además, incorporamos un resultado de un trabajo más reciente [15] donde se ha demostrado la suficiencia de tres hablantes simultáneos. Por lo tanto, hay una utilización significativamente efectiva del ancho de banda. Un flujo mixto se reproduce en cada cliente; cada cliente puede elegir tener una mezcla personalizada ya que la mezcla se realiza en el terminal local de cada cliente. Estos permiten que el discurso improvisado en una videoconferencia virtual a través de VoIP sea una realidad, como en una conferencia presencial real. La compatibilidad está asegurada gracias al uso de SIP, el protocolo de señalización más buscado. Para garantizar un rendimiento satisfactorio, no exigimos la disponibilidad de multidifusión, pero la utilizamos si está disponible. El tráfico en la WAN (Internet) está limitado por arriba por el cuadrado del número de dominios, --además se reduce aún más mediante el uso de algoritmos heurísticos-- lo cual está muy por debajo del número total de clientes en la conferencia. Esto se debe al uso de un Servidor de Conferencias local para cada dominio. Las técnicas de VAD ayudan a reducir aún más el tráfico. El uso del estándar SIP para la señalización hace que esta solución sea altamente interoperable. Hemos implementado una aplicación de CS en una red de campus. Creemos que esta nueva generación de entornos de conferencias virtuales ganará más popularidad en el futuro, ya que su facilidad de implementación está garantizada gracias a las tecnologías fácilmente disponibles y los marcos escalables. REFERENCIAS [1] L. Aguilar et al., Arquitectura para un Sistema de Teleconferencia Multimedia, en Actas de ACM SIGCOMM, Ago 1986, pp. 126-136. [2] Carsten Bormann, Joerg Ott et al., Protocolo de Control de Conferencias Simple, Borrador de Internet, Dic. 1996. [3] M. Decina y V. Trecordi, Voz sobre Protocolo de Internet y Comercio Electrónico Asistido por Humanos, IEEE Comm. Revista, septiembre de 1999, pp. 64-67. [4] Eckehard Doerry, Una comparación empírica de la interacción copresente y mediada tecnológicamente basada en la ruptura comunicativa, Tesis de doctorado, Escuela de Graduados de la Universidad de Oregón, 1995. [5] H. P. Dommel y J.J. Garcia-Luna-Aceves, Control de piso para conferencias y colaboración multimedia, J. Sistemas Multimedia, Vol. 5, No. 1, enero de 1997, pp. 23-38. [6] Amitava Dutta-Roy, Reuniones virtuales con videoconferencias de escritorio, IEEE Spectrum, julio de 1998, pp. 47-56. [7] M. Handley y V. Jacobson, SDP: Protocolo de Descripción de Sesiones, RFC 2327, IETF, abril de 1998. [8] M. Handley, J. Crowcroft et al., Conferencias muy grandes en Internet: la arquitectura de conferencias multimedia en Internet, Revista de Redes de Computadoras, vol. 31, No. 3, febrero de 1999, pp. 191-204. [9] Rec. ITU-T. H.323, Sistemas de Comunicaciones Multimedia basados en Paquetes, vol. 2, 1998. [10] P. Koskelainen, H. Schulzrinne y X. Wu, Un Marco de Control de Conferencias basado en SIP, NOSSDAV02, mayo de 2002, pp. 53-61. [11] R Venkatesha Prasad et al., Protocolo de Control para Soporte de Conferencias de Audio VoIP, Conferencia Internacional sobre Tecnología de Comunicación Avanzada, Mu-Ju, Corea del Sur, febrero de 2001, pp. 419-424. [12] R Venkatesha Prasad et al., Adición y Eliminación Automáticas de Clientes en Conferencias VoIP, 6º Simposio IEEE sobre Computadoras y Comunicaciones, julio de 2001, Hammamet, Túnez, pp. 386-390. [13] R Venkatesha Prasad, H S Jamadagni, Abjijeet, et al Comparación de Algoritmos de Detección de Actividad de Voz, 7º Simposio IEEE sobre Computadoras y Comunicaciones. Julio de 2002, Sicilia, Italia, pp. 530-535. [14] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, Una Conferencia VoIP Distribuida Escalable utilizando SIP, Actas del 8º Simposio de Computadoras y Comunicaciones de IEEE, Antalya, Turquía, junio de 2003. [15] R Venkatesha Prasad, H S Jamadagni y H N Shankar, Sobre el Problema de Especificar el Número de Pisos en una Conferencia Solo de Voz, Por aparecer en IEEE ITRE 2003. [16] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, Una Propuesta para Conferencias Distribuidas en SIP utilizando Servidores de Conferencias, Por aparecer en las Actas de MMNS 2003, Belfast, Reino Unido, septiembre de 2003. [17] R. Venkatesha Prasad, H.S. Jamadagni, J. Kuri, R.S. Varchas, un soporte de conferencias VoIP distribuido que utiliza el número de sonoridad, Tech. Rep. TR-CEDT-TE-03-01 [18] M. Radenkovic et al, Servicio de audio escalable y adaptable para apoyar el trabajo colaborativo y el entretenimiento a través de Internet, SSGRR 2002, LAquila, Italia, enero de 2002. [19] M. Radenkovic, C. Greenhalgh, S. Benford, Problemas de implementación para el soporte de audio multiusuario en CVEs, ACM VRST 2002, noviembre de 2002, pp. 179-185. [20] Srinivas Ramanathan, P. Venkata Rangan, Harrick M. Vin, Diseñando arquitecturas de comunicación para la colaboración multimedia interorganizacional, Journal of Organizational Computing, 2 (3&4), pp.277-302, 1992. [21] A. B. Roach, Notificación de Eventos Específicos del Protocolo de Inicio de Sesión (SIP), RFC 3265, IETF, junio de 2002. [22] J. Rosenberg, H. Schulzrinne et al., SIP: Protocolo de Inicio de Sesión, RFC 3261, IETF, junio de 2002. [23] J. Rosenberg, H. Schulzrinne, Modelos para Conferencias de Múltiples Partes en SIP, Borrador de Internet, IETF, julio de 2002. [24] H. Schulzrinne et al., RTP: un protocolo de transporte para aplicaciones en tiempo real, RFC 1889, IETF, enero de 1996. [25] Lisa R. Silverman, Llegada a la Madurez: Soluciones de Conferencias que Reducen Costos Corporativos, Documento Técnico, www.imcca.org/wpcomingofage.asp [26] Kundan Singh, Gautam Nair y Henning Schulzrinne, Conferencias Centralizadas utilizando SIP, Actas del 2do Taller de IP-Telefonía (IPTel), abril de 2001. [27] D. Thaler, M. Handley y D. Estrin, Arquitectura de Asignación de Direcciones de Multidifusión en Internet, RFC 2908, IETF, septiembre de 2000. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "audio service framework": {
            "translated_key": "marco de servicio de audio",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Deployment Issues of a VoIP Conferencing System in a Virtual Conferencing Environment R. Venkatesha Prasad i Richard Hurni ii H.S.",
                "Jamadagni iii H.N.",
                "Shankar iv i, iii Centre for Electronics Design and Technology Indian Institute of Science, Bangalore, India Telephone: +91 80 360 0810 i, iii {vprasad, hsjam}@cedt.iisc.ernet.in ii hurni@ieee.org iv hn_shankar@yahoo.com ABSTRACT Real-time services have been supported by and large on circuitswitched networks.",
                "Recent trends favour services ported on packet-switched networks.",
                "For audio conferencing, we need to consider many issues - scalability, quality of the conference application, floor control and load on the clients/servers - to name a few.",
                "In this paper, we describe an <br>audio service framework</br> designed to provide a Virtual Conferencing Environment (VCE).",
                "The system is designed to accommodate a large number of end users speaking at the same time and spread across the Internet.",
                "The framework is based on Conference Servers [14], which facilitate the audio handling, while we exploit the SIP capabilities for signaling purposes.",
                "Client selection is based on a recent quantifier called Loudness Number that helps mimic a physical face-to-face conference.",
                "We deal with deployment issues of the proposed solution both in terms of scalability and interactivity, while explaining the techniques we use to reduce the traffic.",
                "We have implemented a Conference Server (CS) application on a campus-wide network at our Institute.",
                "Categories and Subjects Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - Client / Server, distributed applications.",
                "General Terms Algorithms, Performance, Design, Theory. 1.",
                "INTRODUCTION Todays Internet uses the IP protocol suite that was primarily designed for the transport of data and provides best effort data delivery.",
                "Delay-constraints and characteristics separate traditional data on the one hand from voice & video applications on the other.",
                "Hence, as progressively time-sensitive voice and video applications are deployed on the Internet, the inadequacy of the Internet is exposed.",
                "Further, we seek to port telephone services on the Internet.",
                "Among them, virtual conference (teleconference) facility is at the cutting edge.",
                "Audio and video conferencing on Internet are popular [25] for the several advantages they inhere [3,6].",
                "Clearly, the bandwidth required for a teleconference over the Internet increases rapidly with the number of participants; reducing bandwidth without compromising audio quality is a challenge in Internet Telephony.",
                "Additional critical issues are: (a) packet delay, (b) echo, (c) mixing of audio from selected clients, (d) automatic selection of clients to participate in the conference, (e) playout of mixed audio for every client, (f) handling clients not capable of mixing audio streams (such clients are known as dumb clients), and (g) deciding the number of simultaneously active clients in the conference without compromising voice quality.",
                "While all the above requirements are from the technology point of view, the users perspective and interactions are also essential factors.",
                "There is plenty of discussion amongst HCI and CSCW community on the use of Ethnomethodology for design of CSCW applications.",
                "The basic approach is to provide larger bandwidth, more facilities and more advanced control mechanisms, looking forward to better quality of interaction.",
                "This approach ignores the functional utility of the environment that is used for collaboration.",
                "Eckehard Doerry [4] criticizes this approach by saying it is keeping form before function.",
                "Thus, the need is to take an approach that considers both aspects - the technical and the functional.",
                "Regarding the functional aspect, we refer to [15] where it has been dealt with in some detail.",
                "In this work, we do not discuss video conferencing; its inclusion does not significantly benefit conference quality [4].",
                "Our focus is on virtual audio environments.",
                "We first outline the challenges encountered in virtual audio conferences.",
                "Then we look into the motivations followed by relevant literature.",
                "In Section 5, we explain the architecture of our system.",
                "Section 6 comprises description of the various algorithms used in our setup.",
                "We address deployment issues.",
                "A discussion on Swiss Federal Institute of Technology, Lausanne.",
                "Former visitor at CEDT.",
                "PESIT and NIAS, Bangalore, India.iv ii performance follows.",
                "We conclude taking alongside some implementation issues. 2.",
                "CHALLENGES IN VoIP CONFERENCING Many challenges arise in building a VoIP application.",
                "The following are of particular concern in the process: • Ease of use: Conferencing must be simple; users need no domain expertise.",
                "Management (addition/removal) of clients and servers must be uncomplicated.",
                "Application development should not presuppose specific characteristics of the underlying system or of network layers.",
                "Ease of use may include leveraging readily available, technically feasible and economically viable technologies. • Scalability: Conferencing must seem uninterrupted under heavy loads, i.e., when many additional users are added on.",
                "Traffic on WAN should not grow appreciably with the total number of clients; else, this has lead to congestion.",
                "So a means to regulate traffic to a minimum is needed for this kind of real-time applications. • Interactivity: In Virtual Conferencing Environments (VCEs), we intend a face-to-face-like conferencing application that mimics a real conference, where more vocal participants invite attention.",
                "Turn-taking in floor occupation by participants must be adapted gracefully to give a feel of natural transition. • Standardization: The solution must conform to established standards so as to gain interoperability and peer acceptance.",
                "The above requirements are placed in the perspective of observations made in earlier works (vide Sections 3 and 4) and will steer the VCE design. 3.",
                "THE MOTIVATION Ramanathan and Rangan [20] have studied in detail the architectural configurations comparing many conferencing architecture schemes taking into consideration the network delay and computation requirements for mixing.",
                "Functional division and object-oriented architecture design that aid in implementation is presented in [1].",
                "An overview of many issues involved in supporting a large conference is dealt in [8].",
                "H. P. Dommel [5] and many others highlight floor control as another pivotal aspect to be taken into account in designing a conferencing tool.",
                "Tightly coupled conference control protocols in Internet belong to the ITU-T H.323 family [9]; however, they are mainly for small conferences.",
                "The latest IETF draft by Rosenberg and Schulzrinne [23] discusses conferencing models with SIP [22] in the background.",
                "Aspects of implementation for centralized SIP conferencing are reported in [26].",
                "A new approach called partial mixing by Radenkovic [18] allows for mixed and non-mixed streams to coexist.",
                "In all the above proposals, while there are some very useful suggestions, they share one or more of the following limitations: • In an audio conference, streams from all the clients need not be mixed.",
                "Actually, mixing many arbitrary streams [24] from clients degrades the quality of the conference due to the reduction in the volume (spatial aspect of speech).",
                "The number of streams mixed varies dynamically depending on the number of active participants.",
                "This would lead to fluctuations in the volume of every individual participant causing severe degradation in quality.",
                "Customized mixing of streams is not possible when many clients are active.",
                "There is a threshold on the number of simultaneous speakers above which increasing the number of speakers becomes counterproductive to conference quality.",
                "Fixing the maximum number of simultaneous speakers is dealt in a recent work [15] using Ethnomethodology, and is conjectured to be three.",
                "Thus it is advisable to honour that constraint. • There cannot be many intermediate mixers (similarly, Conference Servers as in [10]) in stages as in [20] because it brings in inordinate delay by increasing the number of hops and is not scalable with interactivity in focus. • Floor Control for an audio conference (even video conference) with explicit turn-taking instructions to participants renders the conference essentially a one-speakerat-a-time affair, not a live and free-to-interrupt one.",
                "This way, the conference becomes markedly artificial and its quality degrades.",
                "Schulzrinne et al. [24], assume only one participant is speaking at a time.",
                "In this case, if applications are implemented with some control [5], the service becomes gagging for the users. • Partial mixing [18] has a similar problem as that of mixing when more streams are mixed.",
                "Moreover, in [18], to allow impromptu speech, mixing is not done when the network can afford high bandwidth requirements for sending/receiving all the streams, but it is unnecessary [15]. • For large conferences [23, 10] a centralized conference cannot scale up.",
                "With multicasting, clients will have to parse many streams and traffic on a clients network increases unnecessarily.",
                "Evidently, different particular issues, all of which are a subset of requirements (defined in [14] and [16]) for a VoIP conferencing support, are tackled.",
                "Thus there is a need to address conferencing as a whole with all its requirements considered concurrently.",
                "Towards this goal, the VoIP conferencing system we propose is intended to be scalable and interactive.",
                "We make use of the Loudness Number for implementing floor control.",
                "This permits a participant to freely get into the speaking mode to interrupt the current speaker as in a natural face-to-face meeting.",
                "An upper limit on the number of floors (i.e., the number of speakers allowed to speak at the same time) is fixed using a conjecture proposed in [15].",
                "The work presented here is in continuation of our studies into conferencing based on the Session Initiation Protocol in [14] and [16].",
                "SIP, defined in [22] is now the most popular standard for VoIP deployment and has been chosen for its strength, ease of use, extensibility and compatibility.",
                "This is the reason it will be in the background of all controlling messages that will implicitly arise between the entities in our architecture.",
                "The actual messages are described in [16] and, as such, we do not present a complete description of them here. 4.",
                "RELATED WORK The SIP standard defined in RFC 3261 [22] and in later extensions such as [21] does not offer conference control services such as floor control or voting and does not prescribe how a conference is to be managed.",
                "However SIP can be used to initiate a session that uses some other conference control protocol.",
                "The core SIP specification supports many models for conferencing [26, 23].",
                "In the server-based models, a server mixes media streams, whereas in a server-less conference, mixing is done at the end systems.",
                "SDP [7] can be used to define media capabilities and provide other information about the conference.",
                "We shall now consider a few conference models in SIP that have been proposed recently [23].",
                "First, let us look into server-less models.",
                "In End-System Mixing, only one client (SIP UA) handles the signaling and media mixing for all the others, which is clearly not scalable and causes problems when that particular client leaves the conference.",
                "In the Users Joining model, a tree grows, as each invited party constitutes a new branch in the distribution path.",
                "This leads to an increasing number of hops for the remote leaves and is not scalable.",
                "Another option would be to use multicast for conferencing but multicast is not enabled over Internet and only possible on a LAN presently.",
                "Among server-based models, in a Dial-In Conference, UAs connect to a central server that handles all the mixing.",
                "This model is not scalable as it is limited by the processing power of the server and bandwidth of the network.",
                "Adhoc Centralized Conferences and Dial-Out Conference Servers have similar mechanisms and problems.",
                "Hybrid models involving centralized signaling and distributed media, with the latter using unicast or multicast, raise scalability problems as before.",
                "However an advantage is that the conference control can be a third party solution.",
                "Distributed Partial Mixing, presented in [18], proposes that in case of bandwidth limitation, some streams are mixed and some are not, leaving interactivity intact.",
                "Loss of spatialism when they mix and the bandwidth increase when they do not are open problems.",
                "A related study [19] by the same author proposes conferencing architecture for Collaborative Virtual Environments (CVEs) but does not provide the scalability angle without the availability of multicasting.",
                "With the limitations of proposed conferencing systems in mind, we will now detail our proposal. 5.",
                "SYSTEM ARCHITECTURE This section is dedicated to the description of the proposed system architecture.",
                "However, as this paper constitutes the continuation of our work started in [14] and furthered in [16], we will not present here all the details about the proposed entities and invite the readers to consult the papers mentioned above for a full and thorough description.",
                "First, we do not restrict our conferencing system to work on small conferences only, but rather on large audio VCEs that have hundreds (or even thousands) of users across a Wide Area Network (WAN) such as the Internet.",
                "This view stems from an appraisal that VCEs will gain in importance in the future, as interactive audio conferences will be more popular because of the spread of the media culture around the world.",
                "Two issues must be taken care of when building a VoIP conferencing system: (i) the front-end, consisting of the application program running on the end-users computers and (ii) the back-end that provides other application programs that facilitate conferencing and conference.",
                "The participating users are grouped into several domains.",
                "These domains are Local Area Networks (LANs), such as corporate or educational networks.",
                "This distributed assumption asks for distributed controlling and media handling solutions, as centralized systems would not scale for such very large conferences (vide Section 4).",
                "More explicitly, in each domain, we can identify several relevant logical components of a conferencing facility (Fig. 1):  An arbitrary number of end users (clients) that can take part in at most one audio conference at a time.",
                "Every user is Fig. 1.",
                "Conference example - 3 domains containing the necessary entities so that the conference can take place. included in one and only one domain at a given instant, but can move from domain to domain (nomadism).",
                "In our conferencing environment, these clients are regular SIP User Agents (SIP UAs), as defined in [22] so to gain in interoperability with other existing SIP-compatible systems.",
                "These clients are thus not aware of the complex setting that supports the conference and this is highlighted below.  One SIP Server (SIPS) per domain, taking care of all the signaling aspects of the conference (clients joining, leaving, etc.) [16].",
                "In particular, it is considered as a physical implementation encompassing different logical roles, namely a SIP Proxy Server, a SIP Registrar Server, a SIP Redirect Server and a SIP B2BUA (Back-to-Back User Agent) [22].",
                "This physical implementation enables the handling of incoming/outgoing SIP messages by one or another logical entity according to the needs.",
                "SIPS is entrusted with maintaining total service and has many advantages such as (a) it works as a centralized entity that can keep track of the activities of the UAs in a conference; (b) it can do all the switching for providing PBX features; (c) it can locate the UAs and invite them for a conference; (d) it can do the billing as well.",
                "SIPSs in different domains communicate with each other using SIP messages as described in [16].",
                "If the load on a particular SIPS is too heavy, it can create another SIPS in the same domain so that the load will be shared.  One Master Conference Server (M-CS) (simply a Conference Server (CS)) for each conference is created by the local SIPS when a conference starts.",
                "This server will be used for handling media packets for the clients of the domain.",
                "Its mechanism will be described in the next section.",
                "The M-CS will be able to create a hierarchy of CSs inside a domain by adding one or more Slave CSs (S-CSs) to accommodate all the active clients and prevent its own flooding at the same time.",
                "We will see this mechanism in some detail in the sequel.",
                "The entities described here are exhaustive and conform to the SIP philosophy.",
                "Thus, the use of SIP makes this architecture more useful and interoperable with any other SIP clients or servers. 6.",
                "ALGORITHMIC ISSUES 6.1 Selecting the Streams Similar to SipConf in [27], a Conference Server (CS) [17] has the function of supporting the conference; it is responsible for handling audio streams using RTP.",
                "It can also double to convert audio stream formats for a given client if necessary and can work as Translators/Mixers of RTP specification behind firewalls.",
                "We have based the design of our CS on H.323 Multipoint Processor (MP) [9].",
                "In short, the MP receives audio streams from the endpoints involved in a centralized or hybrid multipoint conference, processes them and returns them to the endpoints.",
                "An MP that processes audio prepares NMax audio outputs from M input streams after selection, mixing, or both.",
                "Audio mixing requires decoding the input audio to linear signals (PCM or analog), performing a linear combination of the signals and reencoding the result in an appropriate audio format.",
                "The MP may eliminate or attenuate some of the input signals in order to reduce noise and unwanted components.",
                "Fig. 2.",
                "Schematic diagram of a CS The limitation of H.323 is that it does not address the scalability of a conference.",
                "The architecture proposes a cascaded or daisy chain topology [10], which can be shown that it cannot scale up for a large conference.",
                "A CS serves many clients in the same conference.",
                "Thus it handles only one conference at a time.",
                "Multiple CSs may coexist in a domain, as when there are several conferences under way.",
                "Signaling-related messages of CSs are dealt in [11].",
                "The working of a CS is illustrated on Fig. 2: For each mixing interval, CS 1 chooses the best NMax audio packets out of the M1 (using a criterion termed Loudness Number, described in the next subsection).",
                "It may possibly receive and sends these to CSs 2 to P. The set of packets sent is denoted as ToOtherCSs.",
                "In the same mixing interval, it also receives the best NMax audio packets (out of possibly M2) from CS 2, similarly the best NMax (out of possibly MP) from CS P. For simplicity, we ignore propagation delay between CSs which indeed can be taken into account; it is beyond the scope of this presentation.",
                "The set of packets received is denoted as FromOtherCSs.",
                "Finally, it selects the best NMax packets from the set {ToOtherCSs union FromOtherCSs} and passes these packets to its own group.",
                "It can be seen that the set {ToOtherCSs union FromOtherCSs} is the same at all CSs.",
                "This ensures that any client in the conference finally receives the same set of packets for mixing.",
                "Hence all clients obtain a common view of the conference.",
                "Similarly, for each time slot (packet time), a subset, F of all clients is selected (using the same criterion) from the pool of packets from all other CSs plus the NMax clients selected locally.",
                "Their packets are mixed and played out at the clients.",
                "According to [15], the cardinality of F, |F| is NMax and is fixed at three.",
                "In our conferencing setup, selection is by the Master Conference Server (M-CS), which comes into the picture exclusively for media handling.",
                "Note that even if the SIP specification enables direct UA-to-UA media communication in a one-to-one call, it is also possible to use the Conference Server for two-party calls, especially because it is then more functional to create a real conference by adding a third and subsequently more participant(s).",
                "There are cases wherein the processing capacity of an M-CS is exceeded as it may have too many packets - from local domains and from remote domains - to process.",
                "In that case, the M-CS will create one or many S-CS (Fig. 6) and transfer its own clients as well as the new clients to them.",
                "In this configuration, the algorithm outlined above will be slightly modified, as the audio packets will go from clients to their dedicated S-CS that will select NMax packets to send to the local M-CS, which will then select NMax packets from all its S-CSs in the domain before sending them to the remote domains.",
                "The incoming packets from other domains will be received by the M-CS, select NMax of them and send them directly to the domain clients, bypassing the SCSs.",
                "This change implies that at most three intermediate entities exist for each audio packet, instead of two in the conventional setup.",
                "As the extra hop happens inside the LAN supposed to have a high-speed connectivity, we consider that it should not prevent us from using this hierarchy of CSs when theres a need to do so. 6.2 Loudness Number (LN) A basic question to be answered by the CS is the following.",
                "In a mixing interval, how should it choose NMax packets out of the M it might possibly receive?",
                "One way is to rank the M packets received according to their energies, and choose the top NMax.",
                "However, this is usually found to be inadequate because random fluctuations in packet energies can lead to poor audio quality.",
                "This indicates the need for a metric different from mere individual packet energies.",
                "The metric should have the following characteristics [12]: • A speaker (floor occupant) should not be cut off by a spike in the packet energy of another speaker.",
                "This implies that a speakers speech history should be given some weight.",
                "This is often referred to as Persistence or Hangover. • A participant who wants to interrupt a speaker will have to (i) speak loudly and (ii) keep trying for a little while.",
                "In a face-to-face conference, body language often indicates the intent to interrupt.",
                "But in a blind conference under discussion, a participants intention to interrupt can be conveyed effectively through LN.",
                "A floor control mechanism empowered to cut off a speaker forcefully must be ensured.",
                "These requirements are met by Loudness Number [12], which changes smoothly with time so that the selection (addition and deletion) of clients for conference is graceful.",
                "LN (= ) is a function of the amplitude of the current audio stream plus the activity and amplitude over a specific window in the past.",
                "Fig. 3.",
                "The different windows used for LN computation The Loudness Number is updated on a packet-by-packet basis.",
                "The basic parameter used here is packet amplitude, which is calculated as root mean square (rms) of the energies in audio samples of a packet, and denoted by XK.",
                "Three windows are defined as shown in Fig. 3.",
                "The present amplitude level of the speaker is found by calculating the moving average of packet amplitude (XK) within a window called Recent Past Window starting from the present instant to some past time.",
                "The past activity of the speaker is found by calculating the moving average of the packet amplitude (XK) within a window called Distant Past Window, which starts at the point where the Recent Past window ends and stretches back in the past for a pre-defined interval.",
                "The activity of the speaker in the past is found with a window called Activity Horizon, which spans the recent past window as well as the distant past window and beyond if necessary.",
                "Though the contribution of the activity horizon looks similar to the contribution of the recent past and distant past windows, past activity is computed from activity horizon window in a differently.",
                "Define the quantities during these three intervals as L1, L2 and L3.",
                "L1 quantifies the Recent Past speech activity, L2 the Distant Past speech activity and L3 gives a number corresponding to the speech activity in the Activity Horizon window quantifying how active the speaker was in the past few intervals.",
                "L3 yields a quantity that is proportional to the fraction of packets having energies above a pre-defined threshold (Eq. 3).",
                "The threshold is invariant across clients. ∑ +− = = 1 1 1 RPP P Wt tK K RP X W L (1) ∑ +−− −= = 1 2 1 DPRPP RPP WWt WtK K DP X W L (2) ∑ +− = ≥= 1 }{3 * 1 AHP P K Wt tK X AH I W L θθ (3) Where ifI KX 1}{ =≥θ θ≥KX = otherwise,0 The threshold is a constant. is set at 10-20 percent of the amplitude of the voice samples of a packet in our implementation here.",
                "Loudness Number λ for the present time instant (or the present packet) is calculated as, 332211 *L*L*L αααλ ++= (4) Here 1\u000f 2 DQG 3 are chosen such that: 0< 1\u000f 2\u001f\u0014\u000f \u0013\u001f 1\u000e 2\u001f\u0014 DQG 3=1-\u000b 1\u000e 2) Here, 1 is the weight given to the recent past speech, 2 is the weight given to distant past speech and 3 is the weight given to speech activity in the activity horizon window considered. 6.3 Safety, Liveness and Fairness The λ parameter KDV VRPH PHPRU\\ GHSHQGLQJ RQ WKH VSUHDG RI the windows.",
                "After one conferee becomes silent, another can take the floor.",
                "Also, as there is more than one channel, interruption is enabled.",
                "A loud conferee is more likely to be heard because of elevated λ.",
                "This ensures fairness to all conferees.",
                "After all, even in a face-to-face conference, a more vocal speaker grabs special attention.",
                "All these desirable characteristics are embedded into the LN.",
                "A comprehensive discussion on selection of the various parameters and the dynamics of LN are beyond the scope of this paper. 6.4 Selection Algorithm using the LN Following the developments in subsections 6.1 and 6.2, we present the simple algorithm that runs at each Master-Conference Server (Algorithm. 1).",
                "This algorithm is based on the discussions in section 6.1.",
                "The globally unique set F is found using this procedure.",
                "Repeat for each time slot at each M-CS { 1.",
                "Get all the packets from the Clients that belong to it. 2.",
                "Find at most NMax Clients that have PD[LPXP RXW RI 0 &OLHQWV LQ LWV GRPDLQ\u0011 3.",
                "Store a copy of packets from those NMax Clients in database DB1. 4.",
                "Send these NMax packets to other M-CSs (on Unicast or Multicast, depending on the configuration). 5.",
                "Similarly, receive packets from all other M-CSs and store them in database DB2. 6.",
                "Now compare the packets in DB1 and DB2 on WKH EDVLV RI DQG VHOHFW D PD[LPXP RI NMax amongst them (to form set F) that should be played out at each Client. 7.",
                "Send the NMax packets in set F to the Clients in its domain. 8.",
                "Mix these NMax audio packets in set F after linearising and send it to dumb Clients in the domain. }",
                "Algorithm 1.",
                "Selection algorithm The mechanism proposed here is also depicted on Fig. 6, where a single conference takes place between three domains.",
                "The shaded clients are the ones selected in their local domains; their audio streams will be sent to other CSs. 7.",
                "DEPLOYMENT ISSUES We now analyze deployment issues associated with conference management.",
                "How are domains to be organized to maximize the number of participants able to join?",
                "To address this, we define some useful parameters.  Let d be the number of different domains in which there are active clients in a given conference.  Let Mi be the number of active clients present in domain i ( di ≤≤1 ) in a given conference.",
                "The total number of active clients in the conference is thus ∑= = d i iMM 1 .  Let C be the maximum number of audio streams a Conference Server can handle in a packet time, also called capacity.",
                "C is set according to the processing power of the weakest CS in the conference but as it cannot be assumed that we know it a-priori, it can be set according to some minimum system requirement a machine must meet in order to take part in a conference.  Let NMax be the number of output streams a CS has to send to other CSs in remote domains (see section 6.1).",
                "We will set NMax =3 (=|F|), according to [15].",
                "The optimization problem is now to find the value of d that maximizes the total number of clients Mi served by one CS in a domain with capacity C. We first dispose the case where the capacity is not exceeded (the existing CS is not overloaded), and then proceed to the case where there exists a need to create more CSs when a single CS is overloaded.",
                "We assume that clients are equally distributed amongst the domains, as we may not have information to assume an a-priori distribution of the clients.",
                "We can specify no more than an upper bound on the number of clients acceptable, given the number of active domains d. 7.1 Conferencing with only One Level of CSs In this subsection, we consider that we have only one CS, i.e., a unique M-CS in each domain.",
                "Thus it cannot be overloaded.",
                "We consider that the system works as outlined in section 6.1: The Clients send their audio packets to their local CS, which selects NMax streams, before sending them to other CSs.",
                "In parallel, it also receives NMax streams for every other CSs before taking a decision on which NMax streams will be selected, sent and played out at each individual clients.",
                "For system stability, any CS in the conference should be able to handle its local clients in addition to the audio packets from other domains.",
                "Clearly then, the following inequality must hold for every domain: )1( −⋅+≥ dN d M C Max (5) The limiting case of (5) (taking the equality) takes the form 2 )( dNdNCM MaxMax ⋅−⋅+= (6) To optimize d with respect to M, we set 0)(2 =+−⋅⋅= ∂ ∂ MaxMax NCdN d M (7) yielding     ⋅ + = Max Max N NC d 2 (8) ([ ]* = Rounding to nearest integer) and hence, M from (6).",
                "C d M 50 9 234 100 17 884 150 26 1950 200 34 3434 250 42 5334 300 51 7650 350 59 10384 400 67 13534 450 76 17100 500 84 21084 Table 1.",
                "Values of d and M computed for some values of C with NMax = 3.",
                "In Table 1, we give the values of d and M that were computed using (8) and (6) with NMax = 3.",
                "We see that the values of d and M, being dependent of C, are therefore based on the weakest CS.",
                "We see that there is a trade-off between M and d. We could admit more domains in the conference, but at the expense of restricting the total number of clients M in the conference.",
                "While implementing and testing the Conference Servers on a Pentium III 1.4 GHz running Windows NT, we were able to set C=300.",
                "But with the advent of faster computers (> 3 GHz), one can easily set C to higher values and determine d and M accordingly.",
                "Fig. 4 shows a contour plot and Fig. 5, a 3D-mesh showing optimized solutions for CSs of different capacities.",
                "These lead us to maximize the number of domains, and hence, to maximize the total number of clients based on the capacity of various CSs.",
                "In Fig. 4, the individual curves represent the total number of clients targeted, and we select a lower value of d, for capacity C, for targeted M to reduce traffic on WAN.",
                "Fig. 5 represents a different perspective of the same data in 3D.",
                "Fig. 4.",
                "Contour Plot of Capacity versus Optimum number of domains for various conference sizes 7.2 Conferencing with Two Levels of CSs Now considering the case where the number of clients in a particular domain is too large, i.e., d M Mi ≥ (9) one has to avoid the denial of service for new clients due to overloading of Conference Server.",
                "This problem can be solved by introducing a second level of CSs inside the given domain, as in Fig. 6.",
                "The existing M-CS creates a Slave CS (S-CS) that can handle up to C end-users and to which it transfers all its active clients.",
                "Here, the system works differently as outlined in section 6.1: The Clients send their audio packets to their local S-CS, which selects NMax streams, before sending them to a local M-CS, which will proceed in the same way, before sending NMax streams to the other domains.",
                "Each newly created S-CS must run on a separate machine.",
                "The M-CS has to create more S-CSs if the number of active clients exceeds C in the course of the conference after the transfer.",
                "With this mechanism, the M-CS will be able to create utmost     −⋅− = Max Max N dNC U )1( S-CSs, (10) as it must handle 3 (= NMax) packets for each local S-CSs and 3 (= NMax) packets from each other remote domains.",
                "We can then calculate the maximum theoretical number of active clients CUMi ⋅= in each domain as well as M, for the whole conference as CUdM ⋅⋅= .",
                "Fig. 5. 3D Plot of Capacity versus Optimum number of domains for various conference sizes Of course, one could further create a third level in the hierarchy, giving the possibility of accommodating even more clients.",
                "This may be unnecessary as the number of possible clients is large enough with two levels. 8.",
                "PERFORMANCE DISCUSSION We now analyze the performance of the algorithm presented in subsection 6.3, i.e., the one taking care of the exchange of audio packets between the different domains.",
                "Note that the packets that are transiting within the LAN take advantage of the higher capacity (generally coupled with multicast capabilities) and therefore do not require a performance analysis.",
                "Thus we have to look only at the RTP packets over the WAN, i.e., between participating M-CSs.",
                "As each M-CS from a domain will be sending only NMax out of d M packets to the other CSs ( MaxN d M >> ), the bandwidth used by the application over a WAN is upper-bounded by the following expression.",
                "The total number of audio packets transiting over the WAN for each time slot is ∑ ∑= ≠=        d i d ijj MaxN 1 ,1 which is quadratic in the number of domains (i.e., O(d2 )).",
                "However, it is independent of the total number of active clients.",
                "This would not have been the case had all packets been sent over the network in each time slot.",
                "The saving is tremendous.",
                "Yet, one may contend that sending three packets to and from all domains is a waste of resources, as most of these streams will not be selected.",
                "If just one client is active, selecting a subset of clients in that domain is unnecessary.",
                "Pessimistic and optimistic algorithms as presented in the sequel aim at reducing the traffic further by harnessing the slow varying nature of the LN. 8.1 Pessimistic algorithm Consider a scenario wherein the lowest LN (called LNt) of the three globally selected streams (set F of Section 6.1) exceeds the LN of the most dominant stream of a domain.",
                "Evidently, the chances that the next two dominant streams of that domain being selected to F in the next packet period are less.",
                "Here, we send this most dominant stream and withhold the other two.",
                "There may be an error in unique selection across all domains for one packet period only.",
                "As LN varies slowly, the error would get automatically rectified in a subsequent packet period (slot).",
                "In this algorithm, there is at least one stream in each period.",
                "The net network traffic in a packet period in the best case is )1( −⋅ dd , i.e., )( 2 dO using unicast, instead of MaxNdd ⋅−⋅ )1( .",
                "Considerable valuable bandwidth can be saved using this heuristic.",
                "The resulting traffic complexity reduces from O(d2 ) to O(d) in multicast-enabled networks.",
                "Initialize LNt = 0 at an M-CS/S-CS A.",
                "In the first time slot (packet time), each CS sends the top NMax streams (based on their LN) to all other CSs.",
                "At each M-CS/S-CS and for each packet time: B.",
                "Find the value of lowest LN of the NMax globally selected streams (set F) from the previous time slot.",
                "Set LNt with this value.",
                "C. At each CS domain, select the NMax local streams that have maximum value of LN (ToOtherCSs set).",
                "D. Select streams that have LN > LNt.",
                "IF there are >= NMax streams with LN > LNt then send top NMax to other CSs.",
                "ELSE IF there are (NMax-1) streams with LN>LNt then send top (NMax-1) plus the one lower than LNt (i.e., top NMax) to other CSs.",
                "ELSE IF there are (NMax-2) streams with LN>LNt then send top (NMax-2) plus the one lower than LNt (i.e. top (NMax -1)) to other CSs. …… ELSE IF there are NO streams with LN> LNt then send top 1 stream to other CSs.",
                "E. Packets sent in step D form DB1.",
                "Packets received from other CSs form DB2.",
                "F. For this time slot, find global NMax streams based on LN from DB1 U DB2 (set F) G. Send set F to the clients in its domain.",
                "Update LNt for the next period.",
                "Algorithm 2.",
                "Pessimistic algorithm to reduce the number of packets sent over the Internet.",
                "Fig. 6.",
                "Example of a 2-level hierarchy of Conference Servers; the shaded Clients are the one selected by the M-CS and will be sent to other domains CSs.",
                "In this algorithm the saving in traffic is at the cost of relaxing the condition of formation of globally unique set F. However, the discrepancies in selected streams at different domains remain for a short period of time depending on the transportation delay between any two domains.",
                "Even for a total delay of 400ms, for only 10 packet time slots the uniqueness is lost.",
                "This duration in a real-time interactive conversation is non-perceivable by the listener.",
                "In the case that there is a joke and every one laughs, then there would be sudden rise in the number of packets and it would be upper bounded by MaxN)d(O 2 for a short period. 8.2 Optimistic Algorithm The traffic can be reduced further.",
                "The scheme in the following algorithm (Algorithm. 3) is withholding all the streams that have less value of LN compared to the least of the three in the set F. We can find the correct and unique three streams after a few time slots depending on the transportation delay between the domains.",
                "As the packet period is of the order of 40ms, the error in the selection is unnoticeable.",
                "The number of streams on network in this case is always restricted to NMax (=3).",
                "Even without Voice Activity Detection (VAD), there will be no more than three streams in the network in the best case, thus the total traffic is constant.",
                "A sudden burst of traffic, as described in 8.1, is a particular case.",
                "These advantages are due to exploitation of the characteristics of LN.",
                "Initialize LNt = 0 at an M-CS/S-CS A.",
                "In the first time slot (packet time), each CS sends the top NMax streams (based on their LN) to all other CSs.",
                "At each M-CS/S-CS and for each packet time: B.",
                "Find the value of lowest LN of the NMax globally selected streams (set F) from the previous time slot.",
                "Set LNt with this value.",
                "C. At each CS domain, select the NMax local streams that have maximum value of LN (ToOtherCSs set) D. Select streams that have LN > LNt IF there are >= NMax streams with LN > LNt then send top NMax to other CSs.",
                "ELSE IF there are (NMax-1) streams with LN>LNt then send top (NMax-1) and see E. ELSE IF there are (NMax-2) streams with LN>LNt then send top (NMax-2) and see E. …… ELSE IF there are NO streams with LN> LNt then dont send any stream.",
                "E. Exceptions: IF the stream that was in F in the last interval belongs to this CS then select and send that stream even if its LN is now < LNt. (Note this occurs only at that CS which had the stream that was the last of the three in the previous packet period.)",
                "F. Packets sent in step D and E form DB1.",
                "Packets received from other CSs form DB2.",
                "G. For this time slot, find global NMax streams based on LN from DB1 U DB2 (set F).",
                "H. Send set F to the clients in its domain.",
                "Update LNt for the next period.",
                "Algorithm 3.",
                "Optimistic algorithm to reduce the number of packets sent over the Internet Furthermore, when VAD is used [13], it would further reduce the traffic by sending the header part of the RTP packet only and not the whole packet, thus in order to keep updating the LN across.",
                "The traffic here in this case is O(NMax) for multicast and O(d) for unicast.",
                "We see that the above algorithms save bandwidth and computation at each CS, and leads to a scalable architecture with multiple CSs mainly because clients are grouped in domains.",
                "The necessary bandwidth is not dependent on the total number of active clients.",
                "As the CS always chooses the best three clients out of all the clients assigned to it in the domain, addition of new clients to the existing conference will not cause any scalability problem. 8.3 Availability of Multicasting In the architecture that has been proposed, no assumption was made about the availability of multicasting support from the network.",
                "The traffic will be further reduced if multicasting is available over WAN.",
                "It is simple to show that the order of traffic would tend to become O(d) from O(d2 ).",
                "This is an approximation as saving in multicasting depends also on the topology.",
                "The analysis was done for the case wherein multicast is not available (a realistic assumption in todays Internet).",
                "The advantage of this set up is that we can use it even if multicasting is partially available.",
                "We can instruct CSs during the set-up phase to send unicast packets to those CSs that cannot receive multicast packets whereas CSs on multicast enabled routers can exchange packets on a multicast address.",
                "The data structures and conference objects inside a CS is given in [14].",
                "Fig. 7.",
                "User Interface for setting the weight for NMax audio streams (setting Self-bar to zero avoids echo). 8.4 Quality Improvement The observed improvement in the perceived quality of the conference service is due to: (1) limiting the number of concurrent speakers to a low number such as three.",
                "Generally, in a conference if more than two participants speak the intelligibility is lost.",
                "The conversational analysis demonstrates that there would be a repair mechanism [15] in such a case. (2) Delay: The audio stream between any two clients will pass through at most two CSs thus reducing the end-to-end delay.",
                "For a large conference there might be three CSs however, one hop is within the domain incurring negligible delay. (3) As the streams are mixed only at the clients, there can be a customized mix of the streams.",
                "The individual tuning of mixing with weights the spatialism is preserved.",
                "Fig. 7 shows the user interface for the same.",
                "The echo when self-stream is selected can be avoided by reducing the weight.",
                "Nonetheless, feedback helps in reassuring speaker that he/she is heard by all. 9.",
                "CONCLUSION In this paper, we have presented a discussion on a voice-only virtual conferencing environment.",
                "We have argued that the distributed nature of deployment here makes it scalable.",
                "Interactivity is achieved by adapting a recent stream selection scheme based on Loudness Number.",
                "Additionally, we incorporate a result from a more recent work [15] where the sufficiency of three simultaneous speakers has been demonstrated.",
                "Thus, there is significantly effective utilization of bandwidth.",
                "A mixed stream is played out at each client; each client may choose to have a customized mix since mixing is done at the local terminal of each client.",
                "These render impromptu speech in a virtual teleconference over VoIP a reality, as in a real face-to-face conference.",
                "Compatibility is assured thanks to the use of SIP, the most soughtafter signaling protocol.",
                "To ensure a satisfying performance, we do not demand the availability of multicast, but use it if and when available.",
                "The traffic in the WAN (Internet) is upper-bounded by the square of the number of domains, -- further reduced by using heuristic algorithms -- which is far below the total number of clients in the conference.",
                "This is due to the use of a Conference Server local to each domain.",
                "VAD techniques help further traffic reduction.",
                "Using SIP standard for signaling makes this solution highly interoperable.",
                "We have implemented a CS application on a campus-wide network.",
                "We believe this new generation of virtual conferencing environments will gain more popularity in the future as their ease of deployment is assured thanks to readily available technologies and scalable frameworks. 10.",
                "REFERENCES [1] L Aguilar et al., Architecture for a Multimedia Teleconferencing System, in Proceedings of the ACM SIGCOMM, Aug 1986, pp. 126-136. [2] Carsten Bormann, Joerg Ott et al., Simple Conference Control Protocol, Internet Draft, Dec. 1996. [3] M. Decina and V. Trecordi, Voice over Internet Protocol and Human Assisted E-Commerce, IEEE Comm.",
                "Magazine, Sept. 1999, pp. 64-67. [4] Eckehard Doerry, An Empirical Comparison of Copresent and Technologically-mediated Interaction based on Communicative Breakdown, Phd Thesis, Graduate School of the University of Oregon, 1995. [5] H. P. Dommel and J.J. Garcia-Luna-Aceves, Floor Control for Multimedia Conferencing and Collaboration, J. Multimedia Systems, Vol. 5, No. 1, January 1997, pp. 23-38. [6] Amitava Dutta-Roy, Virtual Meetings with desktop conferencing, IEEE Spectrum, July 1998, pp. 47-56. [7] M. Handley and V. Jacobson, SDP: Session Description Protocol, RFC 2327, IETF, April 1998. [8] M. Handley, J. Crowcroft et al., Very large conferences on the Internet: the Internet multimedia conferencing architecture, Journal of Computer Networks, vol. 31, No. 3, Feb 1999, pp. 191-204. [9] ITU-T Rec.",
                "H.323, Packet based Multimedia Communications Systems, vol. 2, 1998. [10] P. Koskelainen, H. Schulzrinne and X. Wu, A SIP-based Conference Control Framework, NOSSDAV02, May 2002, pp. 53-61. [11] R Venkatesha Prasad et al., Control Protocol for VoIP Audio Conferencing Support, International Conference on Advanced Communication Technology, Mu-Ju, South Korea, Feb 2001, pp. 419-424. [12] R Venkatesha Prasad et al., Automatic Addition and Deletion of Clients in VoIP Conferencing, 6th IEEE Symposium on Computers and Communications, July 2001, Hammamet, Tunisia, pp. 386-390. [13] R Venkatesha Prasad, H S Jamadagni, Abjijeet, et al Comparison of Voice Activity Detection Algorithms, 7th IEEE Symposium on Computers and Communications.",
                "July 2002, Sicily, Italy, pp. 530-535. [14] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, A Scalable Distributed VoIP Conferencing using SIP, Proc. of the 8th IEEE Symposium on Computers and Communications, Antalya, Turkey, June 2003. [15] R Venkatesha Prasad, H S Jamadagni and H N Shankar, On Problem of Specifying Number of Floors in a Voice Only Conference, To appear in IEEE ITRE 2003. [16] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, A Proposal for Distributed Conferencing on SIP using Conference Servers, To appear in the Proc. of MMNS 2003, Belfast, UK, September 2003. [17] R. Venkatesha Prasad, H.S.",
                "Jamadagni, J. Kuri, R.S.",
                "Varchas, A Distributed VoIP Conferencing Support Using Loudness Number, Tech.",
                "Rep. TR-CEDT-TE-03-01 [18] M. Radenkovic et al, Scaleable and Adaptable Audio Service for Supporting Collaborative Work and Entertainment over the Internet, SSGRR 2002, LAquila, Italy, Jan. 2002. [19] M. Radenkovic, C. Greenhalgh, S. Benford, Deployment Issues for Multi-User Audio Support in CVEs, ACM VRST 2002, Nov. 2002, pp. 179-185. [20] Srinivas Ramanathan, P. Venkata Rangan, Harrick M. Vin, Designing Communication Architectures for Interorganizational Multimedia Collaboration, Journal of Organizational Computing, 2 (3&4), pp.277-302, 1992. [21] A.",
                "B. Roach, Session Initiation Protocol (SIP)-Specific Event Notification, RFC 3265, IETF, June 2002. [22] J. Rosenberg, H. Schulzrinne et al., SIP: Session Initiation Protocol, RFC 3261, IETF, June 2002. [23] J. Rosenberg, H. Schulzrinne, Models for Multy Party Conferencing in SIP, Internet Draft, IETF, July 2002. [24] H. Schulzrinne et al., RTP: a transport protocol for realtime applications, RFC 1889, IETF, Jan 1996. [25] Lisa R. Silverman, Coming of Age: Conferencing Solutions Cut Corporate Costs, White Paper, www.imcca.org/wpcomingofage.asp [26] Kundan Singh, Gautam Nair and Henning Schulzrinne, Centralized Conferencing using SIP, Proceedings of the 2nd IP-Telephony Workshop (IPTel), April 2001. [27] D. Thaler, M. Handley and D. Estrin, The Internet Multicast Address Allocation Architecture, RFC 2908, IETF, Sept. 2000."
            ],
            "original_annotated_samples": [
                "In this paper, we describe an <br>audio service framework</br> designed to provide a Virtual Conferencing Environment (VCE)."
            ],
            "translated_annotated_samples": [
                "En este documento, describimos un <br>marco de servicio de audio</br> diseñado para proporcionar un Entorno de Conferencias Virtuales (ECV)."
            ],
            "translated_text": "Problemas de implementación de un sistema de conferencias VoIP en un entorno de conferencias virtuales. R. Venkatesha Prasad y Richard Hurni. Jamadagni iii H.N. Shankar iv i, iii Centro de Diseño y Tecnología Electrónica Instituto Indio de Ciencias, Bangalore, India Teléfono: +91 80 360 0810 i, iii {vprasad, hsjam}@cedt.iisc.ernet.in ii hurni@ieee.org iv hn_shankar@yahoo.com RESUMEN Los servicios en tiempo real han sido principalmente respaldados en redes conmutadas por circuitos. Las tendencias recientes favorecen los servicios trasladados a redes de conmutación de paquetes. Para las conferencias de audio, necesitamos considerar muchos aspectos, como la escalabilidad, la calidad de la aplicación de conferencia, el control de piso y la carga en los clientes/servidores, por nombrar algunos. En este documento, describimos un <br>marco de servicio de audio</br> diseñado para proporcionar un Entorno de Conferencias Virtuales (ECV). El sistema está diseñado para dar cabida a un gran número de usuarios finales hablando al mismo tiempo y distribuidos por Internet. El marco se basa en Servidores de Conferencia [14], que facilitan el manejo del audio, mientras que explotamos las capacidades de SIP para propósitos de señalización. La selección de clientes se basa en un reciente cuantificador llamado Número de Volumen que ayuda a imitar una conferencia física cara a cara. Nos ocupamos de los problemas de implementación de la solución propuesta tanto en términos de escalabilidad como de interactividad, mientras explicamos las técnicas que utilizamos para reducir el tráfico. Hemos implementado una aplicación de Servidor de Conferencias (CS) en una red de campus en nuestro Instituto. Categorías y Descriptores de Temas C.2.4 [Redes de Computadoras y Comunicación]: Sistemas Distribuidos - Cliente/Servidor, aplicaciones distribuidas. Términos generales Algoritmos, Rendimiento, Diseño, Teoría. 1. INTRODUCCIÓN El Internet de hoy utiliza el conjunto de protocolos IP que fue diseñado principalmente para el transporte de datos y proporciona la entrega de datos con el mejor esfuerzo. Las restricciones de retraso y las características diferencian los datos tradicionales por un lado, de las aplicaciones de voz y video por el otro. Por lo tanto, a medida que se implementan aplicaciones de voz y video cada vez más sensibles al tiempo en Internet, se pone de manifiesto la insuficiencia de la red. Además, buscamos trasladar servicios telefónicos a través de Internet. Entre ellos, la instalación de conferencia virtual (teleconferencia) está a la vanguardia. Las videoconferencias y conferencias de audio en Internet son populares por las varias ventajas que poseen. Claramente, el ancho de banda necesario para una videoconferencia a través de Internet aumenta rápidamente con el número de participantes; reducir el ancho de banda sin comprometer la calidad del audio es un desafío en la telefonía por Internet. Los problemas críticos adicionales son: (a) retraso de paquetes, (b) eco, (c) mezcla de audio de clientes seleccionados, (d) selección automática de clientes para participar en la conferencia, (e) reproducción de audio mezclado para cada cliente, (f) manejo de clientes que no son capaces de mezclar flujos de audio (estos clientes se conocen como clientes tontos), y (g) decidir el número de clientes activos simultáneamente en la conferencia sin comprometer la calidad de voz. Si bien todos los requisitos anteriores son desde el punto de vista tecnológico, la perspectiva de los usuarios y las interacciones también son factores esenciales. Hay mucha discusión entre la comunidad de HCI y CSCW sobre el uso de la Etnometodología para el diseño de aplicaciones de CSCW. El enfoque básico es proporcionar un ancho de banda más amplio, más instalaciones y mecanismos de control más avanzados, con miras a una mejor calidad de interacción. Este enfoque ignora la utilidad funcional del entorno que se utiliza para la colaboración. Eckehard Doerry [4] critica este enfoque diciendo que pone la forma antes que la función. Por lo tanto, la necesidad es adoptar un enfoque que considere ambos aspectos: el técnico y el funcional. En cuanto al aspecto funcional, nos referimos a [15] donde se ha tratado en cierto detalle. En este trabajo, no discutimos la videoconferencia; su inclusión no beneficia significativamente la calidad de la conferencia [4]. Nuestro enfoque está en entornos de audio virtuales. Primero describimos los desafíos encontrados en las conferencias de audio virtuales. Luego investigamos las motivaciones seguidas por la literatura relevante. En la Sección 5, explicamos la arquitectura de nuestro sistema. La sección 6 comprende la descripción de los diversos algoritmos utilizados en nuestra configuración. Abordamos problemas de implementación. Una discusión sobre el Instituto Federal Suizo de Tecnología, Lausana. Antiguo visitante en CEDT. PESIT y NIAS, Bangalore, India. El rendimiento sigue. Concluimos teniendo en cuenta algunos problemas de implementación. 2. DESAFÍOS EN LA VIDEOCONFERENCIA VoIP Surgen muchos desafíos al construir una aplicación VoIP. Lo siguiente es de particular preocupación en el proceso: • Facilidad de uso: la conferencia debe ser sencilla; los usuarios no necesitan experiencia en el dominio. La gestión (adición/eliminación) de clientes y servidores debe ser sencilla. El desarrollo de aplicaciones no debe presuponer características específicas del sistema subyacente o de las capas de red. La facilidad de uso puede incluir el aprovechamiento de tecnologías fácilmente disponibles, técnicamente factibles y económicamente viables. • Escalabilidad: Las conferencias deben parecer ininterrumpidas bajo cargas pesadas, es decir, cuando se agregan muchos usuarios adicionales. El tráfico en la WAN no debería aumentar apreciablemente con el número total de clientes; de lo contrario, esto podría provocar congestión. Por lo tanto, se necesita un medio para regular el tráfico al mínimo para este tipo de aplicaciones en tiempo real. • Interactividad: En Entornos de Conferencias Virtuales (ECVs), pretendemos una aplicación de conferencias cara a cara que imite una conferencia real, donde los participantes más vocales invitan la atención. El intercambio de turnos en la ocupación del espacio por parte de los participantes debe adaptarse con gracia para lograr una transición natural. • Estandarización: La solución debe cumplir con los estándares establecidos para lograr interoperabilidad y aceptación entre pares. Los requisitos anteriores se colocan en la perspectiva de las observaciones realizadas en trabajos anteriores (véase Secciones 3 y 4) y guiarán el diseño del VCE. 3. La motivación Ramanathan y Rangan [20] han estudiado en detalle las configuraciones arquitectónicas comparando muchos esquemas de arquitectura de conferencias teniendo en cuenta la demora de red y los requisitos de computación para la mezcla. La división funcional y el diseño de arquitectura orientada a objetos que ayudan en la implementación se presentan en [1]. Un resumen de muchos temas relacionados con el apoyo a una conferencia grande se aborda en [8]. H. P. Dommel [5] y muchos otros destacan el control de piso como otro aspecto fundamental a tener en cuenta en el diseño de una herramienta de conferencias. Los protocolos de control de conferencias fuertemente acoplados en Internet pertenecen a la familia ITU-T H.323 [9]; sin embargo, están principalmente diseñados para conferencias pequeñas. El último borrador del IETF de Rosenberg y Schulzrinne [23] discute modelos de conferencia con SIP [22] en el fondo. Los aspectos de implementación para la conferencia SIP centralizada se informan en [26]. Un nuevo enfoque llamado mezcla parcial por Radenkovic [18] permite que flujos mezclados y no mezclados coexistan. En todas las propuestas anteriores, si bien hay algunas sugerencias muy útiles, comparten una o más de las siguientes limitaciones: • En una conferencia de audio, no es necesario mezclar los flujos de todos los clientes. De hecho, mezclar muchas corrientes arbitrarias [24] de clientes degrada la calidad de la conferencia debido a la reducción en el volumen (aspecto espacial del habla). El número de flujos mezclados varía dinámicamente dependiendo del número de participantes activos. Esto provocaría fluctuaciones en el volumen de cada participante individual, causando una degradación severa en la calidad. La mezcla personalizada de flujos no es posible cuando hay muchos clientes activos. Existe un umbral en el número de oradores simultáneos por encima del cual aumentar el número de oradores se vuelve contraproducente para la calidad de la conferencia. La fijación del número máximo de hablantes simultáneos se aborda en un trabajo reciente [15] utilizando la Etnometodología, y se postula que es tres. Por lo tanto, es recomendable respetar esa restricción. • No puede haber muchos mezcladores intermedios (similarmente, Servidores de Conferencia como en [10]) en etapas como en [20] porque provoca un retraso desmedido al aumentar el número de saltos y no es escalable con la interactividad como enfoque. • El Control de Piso para una conferencia de audio (incluso de video) con instrucciones explícitas de toma de turnos para los participantes convierte la conferencia en esencia en un asunto de un orador a la vez, no en una en vivo y libre de interrupciones. De esta manera, la conferencia se vuelve notablemente artificial y su calidad se degrada. Schulzrinne et al. [24], asumen que solo un participante está hablando en un momento dado. En este caso, si las aplicaciones se implementan con cierto control [5], el servicio se vuelve asfixiante para los usuarios. • La mezcla parcial [18] tiene un problema similar al de la mezcla cuando se mezclan más flujos. Además, en [18], para permitir el discurso improvisado, la mezcla no se realiza cuando la red puede soportar altos requisitos de ancho de banda para enviar/recibir todas las transmisiones, pero es innecesaria [15]. • Para conferencias grandes [23, 10] una conferencia centralizada no puede escalar. Con la multidifusión, los clientes tendrán que analizar muchos flujos y el tráfico en la red de los clientes aumenta innecesariamente. Evidentemente, se abordan diferentes problemas particulares, todos los cuales son un subconjunto de los requisitos (definidos en [14] y [16]) para el soporte de conferencias de VoIP. Por lo tanto, es necesario abordar la conferencia en su totalidad teniendo en cuenta todos sus requisitos de manera simultánea. Con este objetivo, el sistema de conferencias VoIP que proponemos está diseñado para ser escalable e interactivo. Hacemos uso del Número de Sonoridad para implementar el control de volumen. Esto permite a un participante entrar libremente en el modo de hablar para interrumpir al orador actual como en una reunión natural cara a cara. Un límite superior en el número de pisos (es decir, el número de oradores permitidos para hablar al mismo tiempo) se fija utilizando una conjetura propuesta en [15]. El trabajo presentado aquí es una continuación de nuestros estudios sobre conferencias basadas en el Protocolo de Inicio de Sesión en [14] y [16]. SIP, definido en [22], es ahora el estándar más popular para implementación de VoIP y ha sido elegido por su fortaleza, facilidad de uso, extensibilidad y compatibilidad. Esta es la razón por la cual estará en el trasfondo de todos los mensajes de control que surgirán implícitamente entre las entidades en nuestra arquitectura. Los mensajes actuales están descritos en [16] y, como tal, no presentamos una descripción completa de ellos aquí. 4. TRABAJO RELACIONADO El estándar SIP definido en el RFC 3261 [22] y en extensiones posteriores como [21] no ofrece servicios de control de conferencias como control de piso o votación y no prescribe cómo debe ser gestionada una conferencia. Sin embargo, SIP se puede utilizar para iniciar una sesión que utilice algún otro protocolo de control de conferencias. La especificación central de SIP soporta muchos modelos para conferencias [26, 23]. En los modelos basados en servidor, un servidor mezcla flujos de medios, mientras que en una conferencia sin servidor, la mezcla se realiza en los sistemas finales. SDP [7] se puede utilizar para definir las capacidades de los medios y proporcionar otra información sobre la conferencia. Ahora consideraremos algunos modelos de conferencia en SIP que han sido propuestos recientemente [23]. Primero, veamos los modelos sin servidor. En la mezcla de extremos del sistema, solo un cliente (SIP UA) maneja la señalización y la mezcla de medios para todos los demás, lo cual claramente no es escalable y causa problemas cuando ese cliente en particular abandona la conferencia. En el modelo de Usuarios que se unen, un árbol crece, ya que cada parte invitada constituye una nueva rama en el camino de distribución. Esto conduce a un número creciente de saltos para las hojas remotas y no es escalable. Otra opción sería utilizar la multidifusión para las videoconferencias, pero actualmente la multidifusión no está habilitada en Internet y solo es posible en una LAN. Entre los modelos basados en servidor, en una conferencia de marcado, los UAs se conectan a un servidor central que maneja todas las mezclas. Este modelo no es escalable ya que está limitado por la potencia de procesamiento del servidor y el ancho de banda de la red. Las conferencias centralizadas ad hoc y los servidores de conferencias de marcado tienen mecanismos y problemas similares. Los modelos híbridos que involucran señalización centralizada y medios distribuidos, con estos últimos utilizando unicast o multicast, plantean problemas de escalabilidad como antes. Sin embargo, una ventaja es que el control de la conferencia puede ser una solución de terceros. La Mezcla Parcial Distribuida, presentada en [18], propone que en caso de limitación de ancho de banda, algunos flujos se mezclan y otros no, manteniendo la interactividad intacta. La pérdida de espacialidad cuando se mezclan y el aumento del ancho de banda cuando no lo hacen son problemas abiertos. Un estudio relacionado [19] del mismo autor propone una arquitectura de conferencias para Entornos Virtuales Colaborativos (CVEs) pero no proporciona el enfoque de escalabilidad sin la disponibilidad de la multidifusión. Teniendo en cuenta las limitaciones de los sistemas de conferencias propuestos, detallaremos ahora nuestra propuesta. 5. ARQUITECTURA DEL SISTEMA Esta sección está dedicada a la descripción de la arquitectura del sistema propuesto. Sin embargo, dado que este documento constituye la continuación de nuestro trabajo iniciado en [14] y ampliado en [16], no presentaremos aquí todos los detalles sobre las entidades propuestas e invitamos a los lectores a consultar los documentos mencionados anteriormente para obtener una descripción completa y detallada. Primero, no restringimos nuestro sistema de conferencias para funcionar solo en conferencias pequeñas, sino en grandes VCEs de audio que tienen cientos (o incluso miles) de usuarios a través de una Red de Área Amplia (WAN) como Internet. Esta perspectiva se deriva de una evaluación de que los VCEs ganarán importancia en el futuro, ya que las conferencias de audio interactivas serán más populares debido a la difusión de la cultura mediática en todo el mundo. Dos aspectos deben ser atendidos al construir un sistema de conferencias VoIP: (i) el front-end, que consiste en el programa de aplicación que se ejecuta en las computadoras de los usuarios finales y (ii) el back-end que proporciona otros programas de aplicación que facilitan las conferencias y la conferencia. Los usuarios participantes se agrupan en varios dominios. Estos dominios son Redes de Área Local (LAN), como redes corporativas o educativas. Esta suposición distribuida requiere soluciones de control y manejo de medios distribuidos, ya que los sistemas centralizados no serían escalables para conferencias tan grandes (ver Sección 4). Más explícitamente, en cada dominio, podemos identificar varios componentes lógicos relevantes de una instalación de conferencias (Fig. 1): Un número arbitrario de usuarios finales (clientes) que pueden participar en como máximo una conferencia de audio a la vez. Cada usuario es la Fig. 1. Ejemplo de conferencia: 3 dominios que contienen las entidades necesarias para que la conferencia pueda tener lugar. Incluidas en un único dominio en un instante dado, pero pueden moverse de un dominio a otro (nomadismo). En nuestro entorno de conferencias, estos clientes son Agentes de Usuario SIP (SIP UAs) regulares, según se define en [22], para lograr interoperabilidad con otros sistemas compatibles con SIP existentes. Estos clientes no son conscientes del entorno complejo que respalda la conferencia, lo cual se destaca a continuación. Un servidor SIP (SIPS) por dominio, encargándose de todos los aspectos de señalización de la conferencia (clientes que se unen, salen, etc.) [16]. En particular, se considera como una implementación física que abarca diferentes roles lógicos, a saber, un Servidor Proxy SIP, un Servidor Registrador SIP, un Servidor de Redirección SIP y un SIP B2BUA (Agente de Usuario de Vuelta a Vuelta) [22]. Esta implementación física permite el manejo de mensajes SIP entrantes/salientes por una u otra entidad lógica según sea necesario. SIPS está encargado de mantener un servicio total y tiene muchas ventajas, como (a) funciona como una entidad centralizada que puede hacer un seguimiento de las actividades de los UAs en una conferencia; (b) puede realizar todo el cambio para proporcionar funciones de PBX; (c) puede localizar a los UAs e invitarlos a una conferencia; (d) también puede encargarse de la facturación. Los SIPS en diferentes dominios se comunican entre sí utilizando mensajes SIP como se describe en [16]. Si la carga en un SIPS particular es demasiado pesada, puede crear otro SIPS en el mismo dominio para que la carga se comparta. Se crea un Servidor de Conferencias Maestro (M-CS) (simplemente un Servidor de Conferencias (CS)) para cada conferencia por el SIPS local cuando una conferencia comienza. Este servidor se utilizará para manejar paquetes de medios para los clientes del dominio. Su mecanismo será descrito en la siguiente sección. El M-CS podrá crear una jerarquía de CSs dentro de un dominio agregando uno o más CSs esclavos (S-CSs) para dar cabida a todos los clientes activos y prevenir su propia saturación al mismo tiempo. Veremos este mecanismo con cierto detalle en la secuela. Las entidades descritas aquí son exhaustivas y se ajustan a la filosofía del SIP. Por lo tanto, el uso de SIP hace que esta arquitectura sea más útil e interoperable con cualquier otro cliente o servidor SIP. PROBLEMAS ALGORÍTMICOS 6.1 Seleccionar los flujos similares a SipConf en [27], un Servidor de Conferencias (CS) [17] tiene la función de soportar la conferencia; es responsable de manejar los flujos de audio utilizando RTP. También puede duplicarse para convertir formatos de transmisión de audio para un cliente dado si es necesario y puede funcionar como Traductores/Mezcladores de la especificación RTP detrás de cortafuegos. Hemos basado el diseño de nuestro CS en el Procesador Multipunto (MP) H.323 [9]. En resumen, el MP recibe flujos de audio de los puntos finales involucrados en una conferencia multipunto centralizada o híbrida, los procesa y los devuelve a los puntos finales. Un procesador de señales de audio prepara N salidas de audio NMax a partir de M flujos de entrada después de la selección, mezcla o ambas. La mezcla de audio requiere decodificar el audio de entrada a señales lineales (PCM o analógicas), realizar una combinación lineal de las señales y volver a codificar el resultado en un formato de audio apropiado. El procesador de señales puede eliminar o atenuar algunas de las señales de entrada para reducir el ruido y los componentes no deseados. Fig. 2. \n\nFig. 2. El diagrama esquemático de un CS. La limitación de H.323 es que no aborda la escalabilidad de una conferencia. La arquitectura propone una topología en cascada o en cadena de margaritas [10], la cual se puede demostrar que no puede escalar para una conferencia grande. Un CS atiende a muchos clientes en la misma conferencia. Por lo tanto, solo maneja una conferencia a la vez. Varios CS pueden coexistir en un dominio, como cuando hay varias conferencias en curso. Los mensajes relacionados con la señalización de los CSs se tratan en [11]. El funcionamiento de un CS se ilustra en la Fig. 2: Para cada intervalo de mezcla, CS 1 elige los mejores NMax paquetes de audio de los M1 (utilizando un criterio denominado Número de Volumen, descrito en la siguiente subsección). Puede posiblemente recibir y enviar estos a CSs 2 a P. El conjunto de paquetes enviados se denota como AotrosCSs. En el mismo intervalo de mezcla, también recibe los mejores paquetes de audio NMax (de un posible M2) de CS 2, de manera similar a los mejores NMax (de un posible MP) de CS P. Para simplificar, ignoramos el retardo de propagación entre los CSs, que de hecho se puede tener en cuenta; está más allá del alcance de esta presentación. El conjunto de paquetes recibidos se denota como FromOtherCSs. Finalmente, selecciona los mejores paquetes NMax del conjunto {ToOtherCSs unión FromOtherCSs} y envía estos paquetes a su propio grupo. Se puede observar que el conjunto {ToOtherCSs unión FromOtherCSs} es el mismo en todos los CSs. Esto garantiza que cualquier cliente en la conferencia finalmente reciba el mismo conjunto de paquetes para mezclar. Por lo tanto, todos los clientes obtienen una vista común de la conferencia. De manera similar, para cada intervalo de tiempo (tiempo de paquete), se selecciona un subconjunto, F, de todos los clientes (utilizando el mismo criterio) del conjunto de paquetes de todos los otros CS más los NMax clientes seleccionados localmente. Sus paquetes se mezclan y se reproducen en los clientes. Según [15], la cardinalidad de F, |F| es NMax y está fijada en tres. En nuestra configuración de conferencias, la selección la realiza el Servidor Maestro de Conferencias (M-CS), que interviene exclusivamente en el manejo de medios. Ten en cuenta que aunque la especificación de SIP permite la comunicación directa de medios de usuario a usuario en una llamada uno a uno, también es posible utilizar el Servidor de Conferencias para llamadas de dos partes, especialmente porque es entonces más funcional crear una conferencia real agregando un tercero y posteriormente más participantes. Existen casos en los que la capacidad de procesamiento de un M-CS se ve superada, ya que puede tener demasiados paquetes, tanto de dominios locales como de dominios remotos, para procesar. En ese caso, el M-CS creará uno o varios S-CS (Fig. 6) y transferirá a sus propios clientes, así como a los nuevos clientes, a ellos. En esta configuración, el algoritmo descrito anteriormente se modificará ligeramente, ya que los paquetes de audio irán de los clientes a su S-CS dedicado, que seleccionará NMax paquetes para enviar al M-CS local, que luego seleccionará NMax paquetes de todos sus S-CS en el dominio antes de enviarlos a los dominios remotos. Los paquetes entrantes de otros dominios serán recibidos por el M-CS, se seleccionarán NMax de ellos y se enviarán directamente a los clientes del dominio, evitando los SCSs. Este cambio implica que existen como máximo tres entidades intermedias para cada paquete de audio, en lugar de dos en la configuración convencional. Dado que el salto adicional ocurre dentro de la LAN que se supone tiene una conectividad de alta velocidad, consideramos que no debería impedirnos usar esta jerarquía de CS cuando sea necesario hacerlo. 6.2 Número de Sonoridad (LN) Una pregunta básica que debe responder el CS es la siguiente. En un intervalo de mezcla, ¿cómo debería elegir NMax paquetes de los M que podría recibir? Una forma es clasificar los paquetes M recibidos según sus energías y elegir los NMax mejores. Sin embargo, esto suele considerarse insuficiente porque las fluctuaciones aleatorias en las energías de los paquetes pueden provocar una mala calidad de audio. Esto indica la necesidad de una métrica diferente de meras energías individuales de paquetes. El medidor debe tener las siguientes características [12]: • Un hablante (ocupante del suelo) no debe ser interrumpido por un pico en la energía del paquete de otro hablante. Esto implica que la historia del discurso de un hablante debería tener cierto peso. Esto se suele llamar Persistencia o Resaca. • Un participante que quiera interrumpir a un orador tendrá que (i) hablar en voz alta y (ii) seguir intentándolo por un tiempo breve. En una conferencia presencial, el lenguaje corporal a menudo indica la intención de interrumpir. Pero en una conferencia a ciegas en discusión, la intención de un participante de interrumpir puede ser transmitida de manera efectiva a través de LN. Se debe garantizar un mecanismo de control de piso habilitado para cortar a un orador de manera contundente. Estos requisitos son cumplidos por el Número de Volumen [12], que cambia suavemente con el tiempo para que la selección (adición y eliminación) de clientes para la conferencia sea elegante. LN (= ) es una función de la amplitud de la corriente de audio actual más la actividad y amplitud en una ventana específica en el pasado. Fig. 3. \n\nFig. 3. Las diferentes ventanas utilizadas para el cálculo de LN se actualizan en una base de paquete por paquete. El parámetro básico utilizado aquí es la amplitud del paquete, que se calcula como la raíz cuadrada de la media cuadrática (rms) de las energías en las muestras de audio de un paquete, y se denota como XK. Tres ventanas están definidas como se muestra en la Fig. 3. El nivel de amplitud actual del altavoz se encuentra calculando el promedio móvil de la amplitud del paquete (XK) dentro de una ventana llamada Ventana de Pasado Reciente, que va desde el instante presente hasta algún momento pasado. La actividad pasada del hablante se encuentra calculando el promedio móvil de la amplitud del paquete (XK) dentro de una ventana llamada Ventana de Pasado Lejano, que comienza en el punto donde termina la ventana de Pasado Reciente y se extiende hacia atrás en el pasado por un intervalo predefinido. La actividad del hablante en el pasado se encuentra con una ventana llamada Horizonte de Actividad, que abarca la ventana del pasado reciente, así como la ventana del pasado lejano y más allá si es necesario. Aunque la contribución del horizonte de actividad parece similar a la contribución de las ventanas del pasado reciente y pasado lejano, la actividad pasada se calcula de manera diferente a partir de la ventana del horizonte de actividad. Define las cantidades durante estos tres intervalos como L1, L2 y L3. L1 cuantifica la actividad de habla del Pasado Reciente, L2 la actividad de habla del Pasado Lejano y L3 proporciona un número correspondiente a la actividad de habla en la ventana del Horizonte de Actividad, cuantificando qué tan activo estuvo el hablante en los últimos intervalos. L3 produce una cantidad que es proporcional a la fracción de paquetes que tienen energías por encima de un umbral predefinido (Ec. 3). El umbral es invariable entre clientes. ∑ +− = = 1 1 1 RPP P Wt tK K RP X W L (1) ∑ +−− −= = 1 2 1 DPRPP RPP WWt WtK K DP X W L (2) ∑ +− = ≥= 1 }{3 * 1 AHP P K Wt tK X AH I W L θθ (3) Donde siI KX 1}{ =≥θ θ≥KX = de lo contrario,0 El umbral es una constante. Se establece en el 10-20 por ciento de la amplitud de las muestras de voz de un paquete en nuestra implementación aquí. El número de intensidad λ para el instante de tiempo presente (o el paquete presente) se calcula como, 332211 *L*L*L αααλ ++= (4) Aquí 1, 2 y 3 son elegidos de tal manera que: 0< 1, 2 y 3=1- 1) Aquí, 1 es el peso dado al habla del pasado reciente, 2 es el peso dado al habla del pasado lejano y 3 es el peso dado a la actividad del habla en la ventana de horizonte de actividad considerada. 6.3 Seguridad, Vida y Equidad El parámetro λ tiene un efecto significativo en la evaluación de la ventana. Después de que un conferenciante se queda en silencio, otro puede tomar la palabra. Además, dado que hay más de un canal, la interrupción está habilitada. Un conferenciante ruidoso es más probable que sea escuchado debido a un λ elevado. Esto garantiza equidad para todos los conferenciantes. Después de todo, incluso en una conferencia presencial, un orador más vocal capta una atención especial. Todas estas características deseables están integradas en la LN. Una discusión exhaustiva sobre la selección de los diversos parámetros y la dinámica de LN están fuera del alcance de este documento. 6.4 Algoritmo de selección utilizando LN Siguiendo los desarrollos en las subsecciones 6.1 y 6.2, presentamos el algoritmo simple que se ejecuta en cada Servidor Maestro-Conferencia (Algoritmo 1). Este algoritmo se basa en las discusiones de la sección 6.1. El conjunto F, único a nivel mundial, se encuentra utilizando este procedimiento. Repetir para cada intervalo de tiempo en cada M-CS { 1. Obtener todos los paquetes de los clientes que le pertenecen. 2. Encuentra como máximo NMax clientes que tengan un PD[LPXP RXW RI 0 &OLHQWV LQ LWV GRPDLQ\u0011 3. Almacene una copia de los paquetes de esos clientes NMax en la base de datos DB1. Envía estos paquetes NMax a otros M-CSs (en Unicast o Multicast, dependiendo de la configuración). 5. De igual manera, recibir paquetes de todos los demás M-CSs y almacenarlos en la base de datos DB2. 6. Ahora compara los paquetes en DB1 y DB2 en WKH EDVLV RI DQG VHOHFW D PD[LPXP RI NMax entre ellos (para formar el conjunto F) que deberían ser reproducidos en cada Cliente. 7. Enviar los paquetes NMax en el conjunto F a los Clientes en su dominio. 8. Mezcla estos paquetes de audio NMax en el conjunto F después de linearizarlos y envíalos a Clientes sin capacidad en el dominio. Algoritmo 1. Algoritmo de selección El mecanismo propuesto aquí también se muestra en la Fig. 6, donde tiene lugar una única conferencia entre tres dominios. Los clientes sombreados son los seleccionados en sus dominios locales; sus flujos de audio serán enviados a otros CSs. 7. PROBLEMAS DE DESPLIEGUE Ahora analizamos los problemas de despliegue asociados con la gestión de conferencias. ¿Cómo deben organizarse los dominios para maximizar el número de participantes que pueden unirse? Para abordar esto, definimos algunos parámetros útiles.  Sea d el número de dominios diferentes en los que hay clientes activos en una conferencia dada.  Sea Mi el número de clientes activos presentes en el dominio i (di ≤≤1) en una conferencia dada. El número total de clientes activos en la conferencia es por lo tanto ∑= = d i iMM 1. Sea C el número máximo de flujos de audio que un Servidor de Conferencias puede manejar en un tiempo de paquete, también llamado capacidad. C se establece de acuerdo con la potencia de procesamiento del CS más débil en la conferencia, pero como no se puede asumir que lo conocemos de antemano, se puede establecer de acuerdo con algún requisito mínimo del sistema que una máquina debe cumplir para participar en una conferencia. Deje que NMax sea el número de flujos de salida que un CS debe enviar a otros CS en dominios remotos (ver sección 6.1). Estableceremos NMax = 3 (=|F|), según [15]. El problema de optimización consiste en encontrar el valor de d que maximiza el número total de clientes Mi atendidos por un CS en un dominio con capacidad C. Primero consideramos el caso en el que la capacidad no es excedida (el CS existente no está sobrecargado), y luego procedemos al caso en el que es necesario crear más CS cuando un CS único está sobrecargado. Suponemos que los clientes están distribuidos de manera equitativa entre los dominios, ya que no tenemos información para asumir una distribución a priori de los clientes. Podemos especificar únicamente un límite superior en el número de clientes aceptables, dado el número de dominios activos d. 7.1 Conferencias con solo un nivel de CSs En esta subsección, consideramos que tenemos solo un CS, es decir, un único M-CS en cada dominio. Por lo tanto, no se puede sobrecargar. Consideramos que el sistema funciona tal como se describe en la sección 6.1: Los clientes envían sus paquetes de audio a su CS local, que selecciona NMax flujos antes de enviarlos a otros CS. De manera paralela, también recibe NMax transmisiones para cada otro CS antes de tomar una decisión sobre cuáles de las NMax transmisiones serán seleccionadas, enviadas y reproducidas en cada cliente individual. Para la estabilidad del sistema, cualquier servidor de conferencias debería ser capaz de manejar a sus clientes locales además de los paquetes de audio de otros dominios. Claramente entonces, la siguiente desigualdad debe cumplirse para todo dominio: )1( −⋅+≥ dN d M C Max (5) El caso límite de (5) (tomando la igualdad) toma la forma 2 )( dNdNCM MaxMax ⋅−⋅+= (6) Para optimizar d con respecto a M, establecemos 0)(2 =+−⋅⋅= ∂ ∂ MaxMax NCdN d M (7) obteniendo     ⋅ + = Max Max N NC d 2 (8) ([ ]* = Redondeando al entero más cercano) y por lo tanto, M de (6). Tabla 1. Valores de d y M calculados para algunos valores de C con NMax = 3. En la Tabla 1, se presentan los valores de d y M que fueron calculados utilizando (8) y (6) con NMax = 3. Vemos que los valores de d y M, al depender de C, se basan en el CS más débil. Vemos que hay un equilibrio entre M y d. Podríamos admitir más dominios en la conferencia, pero a costa de restringir el número total de clientes M en la conferencia. Durante la implementación y prueba de los Servidores de Conferencia en un Pentium III 1.4 GHz con Windows NT, pudimos establecer C=300. Pero con la llegada de computadoras más rápidas (> 3 GHz), uno puede fácilmente establecer C a valores más altos y determinar d y M en consecuencia. La Fig. 4 muestra un mapa de contorno y la Fig. 5, una malla 3D que muestra soluciones optimizadas para CSs de diferentes capacidades. Estos nos llevan a maximizar el número de dominios, y por lo tanto, a maximizar el número total de clientes basado en la capacidad de varios CSs. En la Fig. 4, las curvas individuales representan el número total de clientes objetivo, y seleccionamos un valor más bajo de d, para la capacidad C, para el objetivo M con el fin de reducir el tráfico en la WAN. La Fig. 5 representa una perspectiva diferente de los mismos datos en 3D. Fig. 4. \n\nFig. 4. Diagrama de contorno de la capacidad versus el número óptimo de dominios para varios tamaños de conferencias 7.2 Conferencias con Dos Niveles de CSs. Ahora considerando el caso en el que el número de clientes en un dominio particular es demasiado grande, es decir, d M Mi ≥ (9), se debe evitar la denegación de servicio para nuevos clientes debido a la sobrecarga del Servidor de Conferencias. Este problema se puede resolver introduciendo un segundo nivel de CSs dentro del dominio dado, como se muestra en la Figura 6. El M-CS existente crea un CS esclavo (S-CS) que puede manejar hasta C usuarios finales y al que transfiere todos sus clientes activos. Aquí, el sistema funciona de manera diferente como se describe en la sección 6.1: Los clientes envían sus paquetes de audio a su S-CS local, que selecciona NMax flujos, antes de enviarlos a un M-CS local, que procederá de la misma manera, antes de enviar NMax flujos a los otros dominios. Cada S-CS recién creado debe ejecutarse en una máquina separada. El M-CS tiene que crear más S-CSs si el número de clientes activos supera C durante el transcurso de la conferencia después de la transferencia. Con este mecanismo, el M-CS podrá crear un máximo de     −⋅− = Max Max N dNC U )1( S-CSs, (10) ya que debe manejar 3 (= NMax) paquetes para cada S-CS local y 3 (= NMax) paquetes de cada otro dominio remoto. Podemos entonces calcular el número máximo teórico de clientes activos CUMi ⋅= en cada dominio, así como M, para toda la conferencia como CUdM ⋅⋅= . Fig. 5. Gráfico 3D de Capacidad versus Número óptimo de dominios para varios tamaños de conferencia. Por supuesto, se podría crear un tercer nivel en la jerarquía, lo que daría la posibilidad de alojar aún más clientes. Esto puede ser innecesario ya que el número de posibles clientes es lo suficientemente grande con dos niveles. 8. DISCUSIÓN DE RENDIMIENTO Ahora analizamos el rendimiento del algoritmo presentado en la subsección 6.3, es decir, el que se encarga del intercambio de paquetes de audio entre los diferentes dominios. Ten en cuenta que los paquetes que están en tránsito dentro de la LAN aprovechan la mayor capacidad (generalmente junto con capacidades de multidifusión) y por lo tanto no requieren un análisis de rendimiento. Por lo tanto, debemos examinar solo los paquetes RTP a través de la WAN, es decir, entre los M-CS participantes. Dado que cada M-CS de un dominio solo enviará NMax de los d paquetes M a los otros CS (MaxN d M >>), el ancho de banda utilizado por la aplicación en una WAN está limitado por la siguiente expresión. El número total de paquetes de audio que transitan por la WAN para cada intervalo de tiempo es ∑ ∑= ≠=        d i d ijj MaxN 1 ,1, lo cual es cuadrático en el número de dominios (es decir, O(d2)). Sin embargo, es independiente del número total de clientes activos. Esto no habría sido el caso si todos los paquetes se hubieran enviado por la red en cada intervalo de tiempo. El ahorro es tremendo. Sin embargo, se podría argumentar que enviar tres paquetes hacia y desde todos los dominios es un desperdicio de recursos, ya que la mayoría de estos flujos no serán seleccionados. Si solo hay un cliente activo, seleccionar un subconjunto de clientes en ese dominio es innecesario. Los algoritmos pesimistas y optimistas presentados en la secuela tienen como objetivo reducir aún más el tráfico aprovechando la naturaleza lenta y variable de la LN. 8.1 Algoritmo pesimista Consideremos un escenario en el que el LN más bajo (llamado LNt) de los tres flujos seleccionados globalmente (conjunto F de la Sección 6.1) excede el LN del flujo más dominante de un dominio. Evidentemente, las posibilidades de que los dos próximos flujos dominantes de ese dominio sean seleccionados para F en el próximo período de paquetes son menores. Aquí enviamos este flujo más dominante y retenemos los otros dos. Puede haber un error en la selección única en todos los dominios por un solo período de paquete. Como LN varía lentamente, el error se corregiría automáticamente en un período (ranura) de paquete posterior. En este algoritmo, hay al menos un flujo en cada período. El tráfico de red neto en un período de paquetes en el mejor caso es )1( −⋅ dd, es decir, )( 2 dO utilizando unicast, en lugar de MaxNdd ⋅−⋅ )1(. Se puede ahorrar un ancho de banda considerablemente valioso utilizando esta heurística. La complejidad del tráfico resultante se reduce de O(d2) a O(d) en redes habilitadas para multidifusión. Inicializar LNt = 0 en un M-CS/S-CS A. En el primer intervalo de tiempo (tiempo de paquete), cada CS envía las primeras NMax secuencias (basadas en su LN) a todos los demás CSs. En cada M-CS/S-CS y para cada tiempo de paquete: B. Encuentra el valor del LN más bajo de los flujos NMax seleccionados globalmente (conjunto F) del intervalo de tiempo anterior. Establece LNt con este valor. C. En cada dominio de CS, selecciona los NMax flujos locales que tengan el valor máximo de LN (conjunto ToOtherCSs). D. Seleccionar los flujos que tengan LN > LNt. Si hay >= NMax flujos con LN > LNt, entonces enviar los mejores NMax a otros CSs. EN OTRO CASO, si hay (NMax-1) flujos con LN>LNt, enviar los mejores (NMax-1) más el que esté por debajo de LNt (es decir, los mejores NMax) a otros CSs. EN OTRO CASO, si hay (NMax-2) flujos con LN>LNt, entonces enviar los mejores (NMax-2) más el que esté por debajo de LNt (es decir, los mejores (NMax-1)) a otros CSs. ... EN OTRO CASO, si NO hay flujos con LN>LNt, entonces enviar el mejor flujo a otros CSs. Los paquetes enviados en el paso D forman DB1. Los paquetes recibidos de otros CSs forman DB2. F. Para este intervalo de tiempo, encuentra flujos globales NMax basados en LN de DB1 y DB2 (conjunto F) G. Envía el conjunto F a los clientes en su dominio. Actualiza LNt para el próximo período. Algoritmo 2. Algoritmo pesimista para reducir el número de paquetes enviados por Internet. Fig. 6. \n\nFig. 6. Ejemplo de una jerarquía de 2 niveles de Servidores de Conferencias; los Clientes sombreados son los seleccionados por el M-CS y serán enviados a otros CSs de dominios. En este algoritmo, el ahorro en tráfico se logra a expensas de relajar la condición de formación del conjunto F globalmente único. Sin embargo, las discrepancias en los flujos seleccionados en diferentes dominios permanecen por un corto período de tiempo dependiendo del retraso en el transporte entre dos dominios. Incluso para un retraso total de 400 ms, con solo 10 ranuras de tiempo de paquete, se pierde la unicidad. Esta duración en una conversación interactiva en tiempo real no es perceptible por el oyente. En el caso de que haya una broma y todos se rían, entonces habría un aumento repentino en el número de paquetes y estaría limitado por MaxN)d(O 2 durante un corto período. 8.2 Algoritmo Optimista El tráfico puede reducirse aún más. El esquema en el siguiente algoritmo (Algoritmo 3) retiene todos los flujos que tienen un valor de LN menor que el mínimo de los tres en el conjunto F. Podemos encontrar los tres flujos correctos y únicos después de unos cuantos intervalos de tiempo, dependiendo del retraso de transporte entre los dominios. Dado que el período del paquete es del orden de 40 ms, el error en la selección es imperceptible. El número de flujos en la red en este caso siempre está restringido a NMax (=3). Incluso sin Detección de Actividad de Voz (VAD), en el mejor de los casos no habrá más de tres flujos en la red, por lo tanto, el tráfico total es constante. Una repentina oleada de tráfico, como se describe en la sección 8.1, es un caso particular. Estas ventajas se deben a la explotación de las características de LN. Inicializar LNt = 0 en un M-CS/S-CS A. En el primer intervalo de tiempo (tiempo de paquete), cada CS envía las primeras NMax secuencias (basadas en su LN) a todos los demás CS. En cada M-CS/S-CS y para cada tiempo de paquete: B. Encuentra el valor del LN más bajo de los flujos seleccionados globalmente de NMax (conjunto F) del intervalo de tiempo anterior. Establece LNt con este valor. C. En cada dominio de CS, selecciona los NMax flujos locales que tengan el valor máximo de LN (conjunto ToOtherCSs). D. Selecciona los flujos que tengan LN > LNt SI hay >= NMax flujos con LN > LNt, entonces envía los mejores NMax a otros CSs. EN OTRO CASO, si hay (NMax-1) flujos con LN>LNt, entonces enviar los primeros (NMax-1) y ver E. EN OTRO CASO, si hay (NMax-2) flujos con LN>LNt, entonces enviar los primeros (NMax-2) y ver E. ... EN OTRO CASO, si NO hay flujos con LN>LNt, entonces no enviar ningún flujo. E. Excepciones: SI el flujo que estaba en F en el último intervalo pertenece a este CS, entonces selecciona y envía ese flujo incluso si su LN es ahora < LNt. (Nota: esto ocurre solo en ese CS que tenía el flujo que fue el último de los tres en el período de paquetes anterior). Los paquetes enviados en los pasos D y E forman DB1. Los paquetes recibidos de otros CSs forman DB2. Para este intervalo de tiempo, encuentra los flujos globales NMax basados en LN de DB1 y DB2 (conjunto F). H. Envíe el conjunto F a los clientes en su dominio. Actualiza LNt para el próximo período. Algoritmo 3. Algoritmo optimista para reducir el número de paquetes enviados a través de Internet. Además, cuando se utiliza VAD [13], se reduciría aún más el tráfico al enviar solo la parte del encabezado del paquete RTP y no todo el paquete, con el fin de mantener actualizada la LN en todo momento. El tráfico aquí en este caso es O(NMax) para multicast y O(d) para unicast. Vemos que los algoritmos anteriores ahorran ancho de banda y cálculos en cada CS, y conducen a una arquitectura escalable con múltiples CS principalmente porque los clientes están agrupados en dominios. El ancho de banda necesario no depende del número total de clientes activos. Como el CS siempre elige a los tres mejores clientes de entre todos los clientes asignados en el dominio, la adición de nuevos clientes a la conferencia existente no causará ningún problema de escalabilidad. 8.3 Disponibilidad de Multidifusión En la arquitectura propuesta, no se hizo ninguna suposición sobre la disponibilidad de soporte de multidifusión de la red. El tráfico se reducirá aún más si la multidifusión está disponible a través de WAN. Es sencillo demostrar que el orden del tráfico tiende a ser O(d) en lugar de O(d2). Esta es una aproximación ya que el ahorro en la multidifusión también depende de la topología. El análisis se realizó para el caso en el que la multidifusión no está disponible (una suposición realista en el Internet de hoy en día). La ventaja de esta configuración es que podemos usarla incluso si la multidifusión está parcialmente disponible. Podemos instruir a los CSs durante la fase de configuración para enviar paquetes unicast a aquellos CSs que no pueden recibir paquetes multicast, mientras que los CSs en enrutadores habilitados para multicast pueden intercambiar paquetes en una dirección multicast. Las estructuras de datos y objetos de conferencia dentro de una CS se encuentran en [14]. Fig. 7. \n\nFig. 7. Interfaz de usuario para establecer el peso de las corrientes de audio NMax (establecer la barra de auto a cero evita el eco). Mejora de calidad 8.4 La mejora observada en la calidad percibida del servicio de conferencias se debe a: (1) limitar el número de oradores concurrentes a un número bajo, como tres. Generalmente, en una conferencia, si hablan más de dos participantes se pierde la inteligibilidad. El análisis conversacional demuestra que en tal caso habría un mecanismo de reparación [15]. (2) Retraso: La transmisión de audio entre dos clientes pasará como máximo por dos servidores centrales, reduciendo así el retraso de extremo a extremo. Para una conferencia grande puede haber tres CSs, sin embargo, un salto está dentro del dominio incurriendo en un retraso insignificante. (3) Dado que las transmisiones se mezclan solo en los clientes, puede haber una mezcla personalizada de las transmisiones. La sintonización individual de la mezcla con pesos preserva el espacialismo. La Fig. 7 muestra la interfaz de usuario para lo mismo. El eco al seleccionar la auto-transmisión se puede evitar reduciendo el peso. Sin embargo, la retroalimentación ayuda a asegurar al hablante de que está siendo escuchado por todos. CONCLUSIÓN En este artículo, hemos presentado una discusión sobre un entorno de conferencias virtuales solo de voz. Hemos argumentado que la naturaleza distribuida de la implementación aquí la hace escalable. La interactividad se logra adaptando un esquema reciente de selección de flujo basado en el Número de Sonoridad. Además, incorporamos un resultado de un trabajo más reciente [15] donde se ha demostrado la suficiencia de tres hablantes simultáneos. Por lo tanto, hay una utilización significativamente efectiva del ancho de banda. Un flujo mixto se reproduce en cada cliente; cada cliente puede elegir tener una mezcla personalizada ya que la mezcla se realiza en el terminal local de cada cliente. Estos permiten que el discurso improvisado en una videoconferencia virtual a través de VoIP sea una realidad, como en una conferencia presencial real. La compatibilidad está asegurada gracias al uso de SIP, el protocolo de señalización más buscado. Para garantizar un rendimiento satisfactorio, no exigimos la disponibilidad de multidifusión, pero la utilizamos si está disponible. El tráfico en la WAN (Internet) está limitado por arriba por el cuadrado del número de dominios, --además se reduce aún más mediante el uso de algoritmos heurísticos-- lo cual está muy por debajo del número total de clientes en la conferencia. Esto se debe al uso de un Servidor de Conferencias local para cada dominio. Las técnicas de VAD ayudan a reducir aún más el tráfico. El uso del estándar SIP para la señalización hace que esta solución sea altamente interoperable. Hemos implementado una aplicación de CS en una red de campus. Creemos que esta nueva generación de entornos de conferencias virtuales ganará más popularidad en el futuro, ya que su facilidad de implementación está garantizada gracias a las tecnologías fácilmente disponibles y los marcos escalables. REFERENCIAS [1] L. Aguilar et al., Arquitectura para un Sistema de Teleconferencia Multimedia, en Actas de ACM SIGCOMM, Ago 1986, pp. 126-136. [2] Carsten Bormann, Joerg Ott et al., Protocolo de Control de Conferencias Simple, Borrador de Internet, Dic. 1996. [3] M. Decina y V. Trecordi, Voz sobre Protocolo de Internet y Comercio Electrónico Asistido por Humanos, IEEE Comm. Revista, septiembre de 1999, pp. 64-67. [4] Eckehard Doerry, Una comparación empírica de la interacción copresente y mediada tecnológicamente basada en la ruptura comunicativa, Tesis de doctorado, Escuela de Graduados de la Universidad de Oregón, 1995. [5] H. P. Dommel y J.J. Garcia-Luna-Aceves, Control de piso para conferencias y colaboración multimedia, J. Sistemas Multimedia, Vol. 5, No. 1, enero de 1997, pp. 23-38. [6] Amitava Dutta-Roy, Reuniones virtuales con videoconferencias de escritorio, IEEE Spectrum, julio de 1998, pp. 47-56. [7] M. Handley y V. Jacobson, SDP: Protocolo de Descripción de Sesiones, RFC 2327, IETF, abril de 1998. [8] M. Handley, J. Crowcroft et al., Conferencias muy grandes en Internet: la arquitectura de conferencias multimedia en Internet, Revista de Redes de Computadoras, vol. 31, No. 3, febrero de 1999, pp. 191-204. [9] Rec. ITU-T. H.323, Sistemas de Comunicaciones Multimedia basados en Paquetes, vol. 2, 1998. [10] P. Koskelainen, H. Schulzrinne y X. Wu, Un Marco de Control de Conferencias basado en SIP, NOSSDAV02, mayo de 2002, pp. 53-61. [11] R Venkatesha Prasad et al., Protocolo de Control para Soporte de Conferencias de Audio VoIP, Conferencia Internacional sobre Tecnología de Comunicación Avanzada, Mu-Ju, Corea del Sur, febrero de 2001, pp. 419-424. [12] R Venkatesha Prasad et al., Adición y Eliminación Automáticas de Clientes en Conferencias VoIP, 6º Simposio IEEE sobre Computadoras y Comunicaciones, julio de 2001, Hammamet, Túnez, pp. 386-390. [13] R Venkatesha Prasad, H S Jamadagni, Abjijeet, et al Comparación de Algoritmos de Detección de Actividad de Voz, 7º Simposio IEEE sobre Computadoras y Comunicaciones. Julio de 2002, Sicilia, Italia, pp. 530-535. [14] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, Una Conferencia VoIP Distribuida Escalable utilizando SIP, Actas del 8º Simposio de Computadoras y Comunicaciones de IEEE, Antalya, Turquía, junio de 2003. [15] R Venkatesha Prasad, H S Jamadagni y H N Shankar, Sobre el Problema de Especificar el Número de Pisos en una Conferencia Solo de Voz, Por aparecer en IEEE ITRE 2003. [16] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, Una Propuesta para Conferencias Distribuidas en SIP utilizando Servidores de Conferencias, Por aparecer en las Actas de MMNS 2003, Belfast, Reino Unido, septiembre de 2003. [17] R. Venkatesha Prasad, H.S. Jamadagni, J. Kuri, R.S. Varchas, un soporte de conferencias VoIP distribuido que utiliza el número de sonoridad, Tech. Rep. TR-CEDT-TE-03-01 [18] M. Radenkovic et al, Servicio de audio escalable y adaptable para apoyar el trabajo colaborativo y el entretenimiento a través de Internet, SSGRR 2002, LAquila, Italia, enero de 2002. [19] M. Radenkovic, C. Greenhalgh, S. Benford, Problemas de implementación para el soporte de audio multiusuario en CVEs, ACM VRST 2002, noviembre de 2002, pp. 179-185. [20] Srinivas Ramanathan, P. Venkata Rangan, Harrick M. Vin, Diseñando arquitecturas de comunicación para la colaboración multimedia interorganizacional, Journal of Organizational Computing, 2 (3&4), pp.277-302, 1992. [21] A. B. Roach, Notificación de Eventos Específicos del Protocolo de Inicio de Sesión (SIP), RFC 3265, IETF, junio de 2002. [22] J. Rosenberg, H. Schulzrinne et al., SIP: Protocolo de Inicio de Sesión, RFC 3261, IETF, junio de 2002. [23] J. Rosenberg, H. Schulzrinne, Modelos para Conferencias de Múltiples Partes en SIP, Borrador de Internet, IETF, julio de 2002. [24] H. Schulzrinne et al., RTP: un protocolo de transporte para aplicaciones en tiempo real, RFC 1889, IETF, enero de 1996. [25] Lisa R. Silverman, Llegada a la Madurez: Soluciones de Conferencias que Reducen Costos Corporativos, Documento Técnico, www.imcca.org/wpcomingofage.asp [26] Kundan Singh, Gautam Nair y Henning Schulzrinne, Conferencias Centralizadas utilizando SIP, Actas del 2do Taller de IP-Telefonía (IPTel), abril de 2001. [27] D. Thaler, M. Handley y D. Estrin, Arquitectura de Asignación de Direcciones de Multidifusión en Internet, RFC 2908, IETF, septiembre de 2000. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "virtual conferencing environment": {
            "translated_key": "entorno de conferencias virtuales",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Deployment Issues of a VoIP Conferencing System in a <br>virtual conferencing environment</br> R. Venkatesha Prasad i Richard Hurni ii H.S.",
                "Jamadagni iii H.N.",
                "Shankar iv i, iii Centre for Electronics Design and Technology Indian Institute of Science, Bangalore, India Telephone: +91 80 360 0810 i, iii {vprasad, hsjam}@cedt.iisc.ernet.in ii hurni@ieee.org iv hn_shankar@yahoo.com ABSTRACT Real-time services have been supported by and large on circuitswitched networks.",
                "Recent trends favour services ported on packet-switched networks.",
                "For audio conferencing, we need to consider many issues - scalability, quality of the conference application, floor control and load on the clients/servers - to name a few.",
                "In this paper, we describe an audio service framework designed to provide a <br>virtual conferencing environment</br> (VCE).",
                "The system is designed to accommodate a large number of end users speaking at the same time and spread across the Internet.",
                "The framework is based on Conference Servers [14], which facilitate the audio handling, while we exploit the SIP capabilities for signaling purposes.",
                "Client selection is based on a recent quantifier called Loudness Number that helps mimic a physical face-to-face conference.",
                "We deal with deployment issues of the proposed solution both in terms of scalability and interactivity, while explaining the techniques we use to reduce the traffic.",
                "We have implemented a Conference Server (CS) application on a campus-wide network at our Institute.",
                "Categories and Subjects Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - Client / Server, distributed applications.",
                "General Terms Algorithms, Performance, Design, Theory. 1.",
                "INTRODUCTION Todays Internet uses the IP protocol suite that was primarily designed for the transport of data and provides best effort data delivery.",
                "Delay-constraints and characteristics separate traditional data on the one hand from voice & video applications on the other.",
                "Hence, as progressively time-sensitive voice and video applications are deployed on the Internet, the inadequacy of the Internet is exposed.",
                "Further, we seek to port telephone services on the Internet.",
                "Among them, virtual conference (teleconference) facility is at the cutting edge.",
                "Audio and video conferencing on Internet are popular [25] for the several advantages they inhere [3,6].",
                "Clearly, the bandwidth required for a teleconference over the Internet increases rapidly with the number of participants; reducing bandwidth without compromising audio quality is a challenge in Internet Telephony.",
                "Additional critical issues are: (a) packet delay, (b) echo, (c) mixing of audio from selected clients, (d) automatic selection of clients to participate in the conference, (e) playout of mixed audio for every client, (f) handling clients not capable of mixing audio streams (such clients are known as dumb clients), and (g) deciding the number of simultaneously active clients in the conference without compromising voice quality.",
                "While all the above requirements are from the technology point of view, the users perspective and interactions are also essential factors.",
                "There is plenty of discussion amongst HCI and CSCW community on the use of Ethnomethodology for design of CSCW applications.",
                "The basic approach is to provide larger bandwidth, more facilities and more advanced control mechanisms, looking forward to better quality of interaction.",
                "This approach ignores the functional utility of the environment that is used for collaboration.",
                "Eckehard Doerry [4] criticizes this approach by saying it is keeping form before function.",
                "Thus, the need is to take an approach that considers both aspects - the technical and the functional.",
                "Regarding the functional aspect, we refer to [15] where it has been dealt with in some detail.",
                "In this work, we do not discuss video conferencing; its inclusion does not significantly benefit conference quality [4].",
                "Our focus is on virtual audio environments.",
                "We first outline the challenges encountered in virtual audio conferences.",
                "Then we look into the motivations followed by relevant literature.",
                "In Section 5, we explain the architecture of our system.",
                "Section 6 comprises description of the various algorithms used in our setup.",
                "We address deployment issues.",
                "A discussion on Swiss Federal Institute of Technology, Lausanne.",
                "Former visitor at CEDT.",
                "PESIT and NIAS, Bangalore, India.iv ii performance follows.",
                "We conclude taking alongside some implementation issues. 2.",
                "CHALLENGES IN VoIP CONFERENCING Many challenges arise in building a VoIP application.",
                "The following are of particular concern in the process: • Ease of use: Conferencing must be simple; users need no domain expertise.",
                "Management (addition/removal) of clients and servers must be uncomplicated.",
                "Application development should not presuppose specific characteristics of the underlying system or of network layers.",
                "Ease of use may include leveraging readily available, technically feasible and economically viable technologies. • Scalability: Conferencing must seem uninterrupted under heavy loads, i.e., when many additional users are added on.",
                "Traffic on WAN should not grow appreciably with the total number of clients; else, this has lead to congestion.",
                "So a means to regulate traffic to a minimum is needed for this kind of real-time applications. • Interactivity: In Virtual Conferencing Environments (VCEs), we intend a face-to-face-like conferencing application that mimics a real conference, where more vocal participants invite attention.",
                "Turn-taking in floor occupation by participants must be adapted gracefully to give a feel of natural transition. • Standardization: The solution must conform to established standards so as to gain interoperability and peer acceptance.",
                "The above requirements are placed in the perspective of observations made in earlier works (vide Sections 3 and 4) and will steer the VCE design. 3.",
                "THE MOTIVATION Ramanathan and Rangan [20] have studied in detail the architectural configurations comparing many conferencing architecture schemes taking into consideration the network delay and computation requirements for mixing.",
                "Functional division and object-oriented architecture design that aid in implementation is presented in [1].",
                "An overview of many issues involved in supporting a large conference is dealt in [8].",
                "H. P. Dommel [5] and many others highlight floor control as another pivotal aspect to be taken into account in designing a conferencing tool.",
                "Tightly coupled conference control protocols in Internet belong to the ITU-T H.323 family [9]; however, they are mainly for small conferences.",
                "The latest IETF draft by Rosenberg and Schulzrinne [23] discusses conferencing models with SIP [22] in the background.",
                "Aspects of implementation for centralized SIP conferencing are reported in [26].",
                "A new approach called partial mixing by Radenkovic [18] allows for mixed and non-mixed streams to coexist.",
                "In all the above proposals, while there are some very useful suggestions, they share one or more of the following limitations: • In an audio conference, streams from all the clients need not be mixed.",
                "Actually, mixing many arbitrary streams [24] from clients degrades the quality of the conference due to the reduction in the volume (spatial aspect of speech).",
                "The number of streams mixed varies dynamically depending on the number of active participants.",
                "This would lead to fluctuations in the volume of every individual participant causing severe degradation in quality.",
                "Customized mixing of streams is not possible when many clients are active.",
                "There is a threshold on the number of simultaneous speakers above which increasing the number of speakers becomes counterproductive to conference quality.",
                "Fixing the maximum number of simultaneous speakers is dealt in a recent work [15] using Ethnomethodology, and is conjectured to be three.",
                "Thus it is advisable to honour that constraint. • There cannot be many intermediate mixers (similarly, Conference Servers as in [10]) in stages as in [20] because it brings in inordinate delay by increasing the number of hops and is not scalable with interactivity in focus. • Floor Control for an audio conference (even video conference) with explicit turn-taking instructions to participants renders the conference essentially a one-speakerat-a-time affair, not a live and free-to-interrupt one.",
                "This way, the conference becomes markedly artificial and its quality degrades.",
                "Schulzrinne et al. [24], assume only one participant is speaking at a time.",
                "In this case, if applications are implemented with some control [5], the service becomes gagging for the users. • Partial mixing [18] has a similar problem as that of mixing when more streams are mixed.",
                "Moreover, in [18], to allow impromptu speech, mixing is not done when the network can afford high bandwidth requirements for sending/receiving all the streams, but it is unnecessary [15]. • For large conferences [23, 10] a centralized conference cannot scale up.",
                "With multicasting, clients will have to parse many streams and traffic on a clients network increases unnecessarily.",
                "Evidently, different particular issues, all of which are a subset of requirements (defined in [14] and [16]) for a VoIP conferencing support, are tackled.",
                "Thus there is a need to address conferencing as a whole with all its requirements considered concurrently.",
                "Towards this goal, the VoIP conferencing system we propose is intended to be scalable and interactive.",
                "We make use of the Loudness Number for implementing floor control.",
                "This permits a participant to freely get into the speaking mode to interrupt the current speaker as in a natural face-to-face meeting.",
                "An upper limit on the number of floors (i.e., the number of speakers allowed to speak at the same time) is fixed using a conjecture proposed in [15].",
                "The work presented here is in continuation of our studies into conferencing based on the Session Initiation Protocol in [14] and [16].",
                "SIP, defined in [22] is now the most popular standard for VoIP deployment and has been chosen for its strength, ease of use, extensibility and compatibility.",
                "This is the reason it will be in the background of all controlling messages that will implicitly arise between the entities in our architecture.",
                "The actual messages are described in [16] and, as such, we do not present a complete description of them here. 4.",
                "RELATED WORK The SIP standard defined in RFC 3261 [22] and in later extensions such as [21] does not offer conference control services such as floor control or voting and does not prescribe how a conference is to be managed.",
                "However SIP can be used to initiate a session that uses some other conference control protocol.",
                "The core SIP specification supports many models for conferencing [26, 23].",
                "In the server-based models, a server mixes media streams, whereas in a server-less conference, mixing is done at the end systems.",
                "SDP [7] can be used to define media capabilities and provide other information about the conference.",
                "We shall now consider a few conference models in SIP that have been proposed recently [23].",
                "First, let us look into server-less models.",
                "In End-System Mixing, only one client (SIP UA) handles the signaling and media mixing for all the others, which is clearly not scalable and causes problems when that particular client leaves the conference.",
                "In the Users Joining model, a tree grows, as each invited party constitutes a new branch in the distribution path.",
                "This leads to an increasing number of hops for the remote leaves and is not scalable.",
                "Another option would be to use multicast for conferencing but multicast is not enabled over Internet and only possible on a LAN presently.",
                "Among server-based models, in a Dial-In Conference, UAs connect to a central server that handles all the mixing.",
                "This model is not scalable as it is limited by the processing power of the server and bandwidth of the network.",
                "Adhoc Centralized Conferences and Dial-Out Conference Servers have similar mechanisms and problems.",
                "Hybrid models involving centralized signaling and distributed media, with the latter using unicast or multicast, raise scalability problems as before.",
                "However an advantage is that the conference control can be a third party solution.",
                "Distributed Partial Mixing, presented in [18], proposes that in case of bandwidth limitation, some streams are mixed and some are not, leaving interactivity intact.",
                "Loss of spatialism when they mix and the bandwidth increase when they do not are open problems.",
                "A related study [19] by the same author proposes conferencing architecture for Collaborative Virtual Environments (CVEs) but does not provide the scalability angle without the availability of multicasting.",
                "With the limitations of proposed conferencing systems in mind, we will now detail our proposal. 5.",
                "SYSTEM ARCHITECTURE This section is dedicated to the description of the proposed system architecture.",
                "However, as this paper constitutes the continuation of our work started in [14] and furthered in [16], we will not present here all the details about the proposed entities and invite the readers to consult the papers mentioned above for a full and thorough description.",
                "First, we do not restrict our conferencing system to work on small conferences only, but rather on large audio VCEs that have hundreds (or even thousands) of users across a Wide Area Network (WAN) such as the Internet.",
                "This view stems from an appraisal that VCEs will gain in importance in the future, as interactive audio conferences will be more popular because of the spread of the media culture around the world.",
                "Two issues must be taken care of when building a VoIP conferencing system: (i) the front-end, consisting of the application program running on the end-users computers and (ii) the back-end that provides other application programs that facilitate conferencing and conference.",
                "The participating users are grouped into several domains.",
                "These domains are Local Area Networks (LANs), such as corporate or educational networks.",
                "This distributed assumption asks for distributed controlling and media handling solutions, as centralized systems would not scale for such very large conferences (vide Section 4).",
                "More explicitly, in each domain, we can identify several relevant logical components of a conferencing facility (Fig. 1):  An arbitrary number of end users (clients) that can take part in at most one audio conference at a time.",
                "Every user is Fig. 1.",
                "Conference example - 3 domains containing the necessary entities so that the conference can take place. included in one and only one domain at a given instant, but can move from domain to domain (nomadism).",
                "In our conferencing environment, these clients are regular SIP User Agents (SIP UAs), as defined in [22] so to gain in interoperability with other existing SIP-compatible systems.",
                "These clients are thus not aware of the complex setting that supports the conference and this is highlighted below.  One SIP Server (SIPS) per domain, taking care of all the signaling aspects of the conference (clients joining, leaving, etc.) [16].",
                "In particular, it is considered as a physical implementation encompassing different logical roles, namely a SIP Proxy Server, a SIP Registrar Server, a SIP Redirect Server and a SIP B2BUA (Back-to-Back User Agent) [22].",
                "This physical implementation enables the handling of incoming/outgoing SIP messages by one or another logical entity according to the needs.",
                "SIPS is entrusted with maintaining total service and has many advantages such as (a) it works as a centralized entity that can keep track of the activities of the UAs in a conference; (b) it can do all the switching for providing PBX features; (c) it can locate the UAs and invite them for a conference; (d) it can do the billing as well.",
                "SIPSs in different domains communicate with each other using SIP messages as described in [16].",
                "If the load on a particular SIPS is too heavy, it can create another SIPS in the same domain so that the load will be shared.  One Master Conference Server (M-CS) (simply a Conference Server (CS)) for each conference is created by the local SIPS when a conference starts.",
                "This server will be used for handling media packets for the clients of the domain.",
                "Its mechanism will be described in the next section.",
                "The M-CS will be able to create a hierarchy of CSs inside a domain by adding one or more Slave CSs (S-CSs) to accommodate all the active clients and prevent its own flooding at the same time.",
                "We will see this mechanism in some detail in the sequel.",
                "The entities described here are exhaustive and conform to the SIP philosophy.",
                "Thus, the use of SIP makes this architecture more useful and interoperable with any other SIP clients or servers. 6.",
                "ALGORITHMIC ISSUES 6.1 Selecting the Streams Similar to SipConf in [27], a Conference Server (CS) [17] has the function of supporting the conference; it is responsible for handling audio streams using RTP.",
                "It can also double to convert audio stream formats for a given client if necessary and can work as Translators/Mixers of RTP specification behind firewalls.",
                "We have based the design of our CS on H.323 Multipoint Processor (MP) [9].",
                "In short, the MP receives audio streams from the endpoints involved in a centralized or hybrid multipoint conference, processes them and returns them to the endpoints.",
                "An MP that processes audio prepares NMax audio outputs from M input streams after selection, mixing, or both.",
                "Audio mixing requires decoding the input audio to linear signals (PCM or analog), performing a linear combination of the signals and reencoding the result in an appropriate audio format.",
                "The MP may eliminate or attenuate some of the input signals in order to reduce noise and unwanted components.",
                "Fig. 2.",
                "Schematic diagram of a CS The limitation of H.323 is that it does not address the scalability of a conference.",
                "The architecture proposes a cascaded or daisy chain topology [10], which can be shown that it cannot scale up for a large conference.",
                "A CS serves many clients in the same conference.",
                "Thus it handles only one conference at a time.",
                "Multiple CSs may coexist in a domain, as when there are several conferences under way.",
                "Signaling-related messages of CSs are dealt in [11].",
                "The working of a CS is illustrated on Fig. 2: For each mixing interval, CS 1 chooses the best NMax audio packets out of the M1 (using a criterion termed Loudness Number, described in the next subsection).",
                "It may possibly receive and sends these to CSs 2 to P. The set of packets sent is denoted as ToOtherCSs.",
                "In the same mixing interval, it also receives the best NMax audio packets (out of possibly M2) from CS 2, similarly the best NMax (out of possibly MP) from CS P. For simplicity, we ignore propagation delay between CSs which indeed can be taken into account; it is beyond the scope of this presentation.",
                "The set of packets received is denoted as FromOtherCSs.",
                "Finally, it selects the best NMax packets from the set {ToOtherCSs union FromOtherCSs} and passes these packets to its own group.",
                "It can be seen that the set {ToOtherCSs union FromOtherCSs} is the same at all CSs.",
                "This ensures that any client in the conference finally receives the same set of packets for mixing.",
                "Hence all clients obtain a common view of the conference.",
                "Similarly, for each time slot (packet time), a subset, F of all clients is selected (using the same criterion) from the pool of packets from all other CSs plus the NMax clients selected locally.",
                "Their packets are mixed and played out at the clients.",
                "According to [15], the cardinality of F, |F| is NMax and is fixed at three.",
                "In our conferencing setup, selection is by the Master Conference Server (M-CS), which comes into the picture exclusively for media handling.",
                "Note that even if the SIP specification enables direct UA-to-UA media communication in a one-to-one call, it is also possible to use the Conference Server for two-party calls, especially because it is then more functional to create a real conference by adding a third and subsequently more participant(s).",
                "There are cases wherein the processing capacity of an M-CS is exceeded as it may have too many packets - from local domains and from remote domains - to process.",
                "In that case, the M-CS will create one or many S-CS (Fig. 6) and transfer its own clients as well as the new clients to them.",
                "In this configuration, the algorithm outlined above will be slightly modified, as the audio packets will go from clients to their dedicated S-CS that will select NMax packets to send to the local M-CS, which will then select NMax packets from all its S-CSs in the domain before sending them to the remote domains.",
                "The incoming packets from other domains will be received by the M-CS, select NMax of them and send them directly to the domain clients, bypassing the SCSs.",
                "This change implies that at most three intermediate entities exist for each audio packet, instead of two in the conventional setup.",
                "As the extra hop happens inside the LAN supposed to have a high-speed connectivity, we consider that it should not prevent us from using this hierarchy of CSs when theres a need to do so. 6.2 Loudness Number (LN) A basic question to be answered by the CS is the following.",
                "In a mixing interval, how should it choose NMax packets out of the M it might possibly receive?",
                "One way is to rank the M packets received according to their energies, and choose the top NMax.",
                "However, this is usually found to be inadequate because random fluctuations in packet energies can lead to poor audio quality.",
                "This indicates the need for a metric different from mere individual packet energies.",
                "The metric should have the following characteristics [12]: • A speaker (floor occupant) should not be cut off by a spike in the packet energy of another speaker.",
                "This implies that a speakers speech history should be given some weight.",
                "This is often referred to as Persistence or Hangover. • A participant who wants to interrupt a speaker will have to (i) speak loudly and (ii) keep trying for a little while.",
                "In a face-to-face conference, body language often indicates the intent to interrupt.",
                "But in a blind conference under discussion, a participants intention to interrupt can be conveyed effectively through LN.",
                "A floor control mechanism empowered to cut off a speaker forcefully must be ensured.",
                "These requirements are met by Loudness Number [12], which changes smoothly with time so that the selection (addition and deletion) of clients for conference is graceful.",
                "LN (= ) is a function of the amplitude of the current audio stream plus the activity and amplitude over a specific window in the past.",
                "Fig. 3.",
                "The different windows used for LN computation The Loudness Number is updated on a packet-by-packet basis.",
                "The basic parameter used here is packet amplitude, which is calculated as root mean square (rms) of the energies in audio samples of a packet, and denoted by XK.",
                "Three windows are defined as shown in Fig. 3.",
                "The present amplitude level of the speaker is found by calculating the moving average of packet amplitude (XK) within a window called Recent Past Window starting from the present instant to some past time.",
                "The past activity of the speaker is found by calculating the moving average of the packet amplitude (XK) within a window called Distant Past Window, which starts at the point where the Recent Past window ends and stretches back in the past for a pre-defined interval.",
                "The activity of the speaker in the past is found with a window called Activity Horizon, which spans the recent past window as well as the distant past window and beyond if necessary.",
                "Though the contribution of the activity horizon looks similar to the contribution of the recent past and distant past windows, past activity is computed from activity horizon window in a differently.",
                "Define the quantities during these three intervals as L1, L2 and L3.",
                "L1 quantifies the Recent Past speech activity, L2 the Distant Past speech activity and L3 gives a number corresponding to the speech activity in the Activity Horizon window quantifying how active the speaker was in the past few intervals.",
                "L3 yields a quantity that is proportional to the fraction of packets having energies above a pre-defined threshold (Eq. 3).",
                "The threshold is invariant across clients. ∑ +− = = 1 1 1 RPP P Wt tK K RP X W L (1) ∑ +−− −= = 1 2 1 DPRPP RPP WWt WtK K DP X W L (2) ∑ +− = ≥= 1 }{3 * 1 AHP P K Wt tK X AH I W L θθ (3) Where ifI KX 1}{ =≥θ θ≥KX = otherwise,0 The threshold is a constant. is set at 10-20 percent of the amplitude of the voice samples of a packet in our implementation here.",
                "Loudness Number λ for the present time instant (or the present packet) is calculated as, 332211 *L*L*L αααλ ++= (4) Here 1\u000f 2 DQG 3 are chosen such that: 0< 1\u000f 2\u001f\u0014\u000f \u0013\u001f 1\u000e 2\u001f\u0014 DQG 3=1-\u000b 1\u000e 2) Here, 1 is the weight given to the recent past speech, 2 is the weight given to distant past speech and 3 is the weight given to speech activity in the activity horizon window considered. 6.3 Safety, Liveness and Fairness The λ parameter KDV VRPH PHPRU\\ GHSHQGLQJ RQ WKH VSUHDG RI the windows.",
                "After one conferee becomes silent, another can take the floor.",
                "Also, as there is more than one channel, interruption is enabled.",
                "A loud conferee is more likely to be heard because of elevated λ.",
                "This ensures fairness to all conferees.",
                "After all, even in a face-to-face conference, a more vocal speaker grabs special attention.",
                "All these desirable characteristics are embedded into the LN.",
                "A comprehensive discussion on selection of the various parameters and the dynamics of LN are beyond the scope of this paper. 6.4 Selection Algorithm using the LN Following the developments in subsections 6.1 and 6.2, we present the simple algorithm that runs at each Master-Conference Server (Algorithm. 1).",
                "This algorithm is based on the discussions in section 6.1.",
                "The globally unique set F is found using this procedure.",
                "Repeat for each time slot at each M-CS { 1.",
                "Get all the packets from the Clients that belong to it. 2.",
                "Find at most NMax Clients that have PD[LPXP RXW RI 0 &OLHQWV LQ LWV GRPDLQ\u0011 3.",
                "Store a copy of packets from those NMax Clients in database DB1. 4.",
                "Send these NMax packets to other M-CSs (on Unicast or Multicast, depending on the configuration). 5.",
                "Similarly, receive packets from all other M-CSs and store them in database DB2. 6.",
                "Now compare the packets in DB1 and DB2 on WKH EDVLV RI DQG VHOHFW D PD[LPXP RI NMax amongst them (to form set F) that should be played out at each Client. 7.",
                "Send the NMax packets in set F to the Clients in its domain. 8.",
                "Mix these NMax audio packets in set F after linearising and send it to dumb Clients in the domain. }",
                "Algorithm 1.",
                "Selection algorithm The mechanism proposed here is also depicted on Fig. 6, where a single conference takes place between three domains.",
                "The shaded clients are the ones selected in their local domains; their audio streams will be sent to other CSs. 7.",
                "DEPLOYMENT ISSUES We now analyze deployment issues associated with conference management.",
                "How are domains to be organized to maximize the number of participants able to join?",
                "To address this, we define some useful parameters.  Let d be the number of different domains in which there are active clients in a given conference.  Let Mi be the number of active clients present in domain i ( di ≤≤1 ) in a given conference.",
                "The total number of active clients in the conference is thus ∑= = d i iMM 1 .  Let C be the maximum number of audio streams a Conference Server can handle in a packet time, also called capacity.",
                "C is set according to the processing power of the weakest CS in the conference but as it cannot be assumed that we know it a-priori, it can be set according to some minimum system requirement a machine must meet in order to take part in a conference.  Let NMax be the number of output streams a CS has to send to other CSs in remote domains (see section 6.1).",
                "We will set NMax =3 (=|F|), according to [15].",
                "The optimization problem is now to find the value of d that maximizes the total number of clients Mi served by one CS in a domain with capacity C. We first dispose the case where the capacity is not exceeded (the existing CS is not overloaded), and then proceed to the case where there exists a need to create more CSs when a single CS is overloaded.",
                "We assume that clients are equally distributed amongst the domains, as we may not have information to assume an a-priori distribution of the clients.",
                "We can specify no more than an upper bound on the number of clients acceptable, given the number of active domains d. 7.1 Conferencing with only One Level of CSs In this subsection, we consider that we have only one CS, i.e., a unique M-CS in each domain.",
                "Thus it cannot be overloaded.",
                "We consider that the system works as outlined in section 6.1: The Clients send their audio packets to their local CS, which selects NMax streams, before sending them to other CSs.",
                "In parallel, it also receives NMax streams for every other CSs before taking a decision on which NMax streams will be selected, sent and played out at each individual clients.",
                "For system stability, any CS in the conference should be able to handle its local clients in addition to the audio packets from other domains.",
                "Clearly then, the following inequality must hold for every domain: )1( −⋅+≥ dN d M C Max (5) The limiting case of (5) (taking the equality) takes the form 2 )( dNdNCM MaxMax ⋅−⋅+= (6) To optimize d with respect to M, we set 0)(2 =+−⋅⋅= ∂ ∂ MaxMax NCdN d M (7) yielding     ⋅ + = Max Max N NC d 2 (8) ([ ]* = Rounding to nearest integer) and hence, M from (6).",
                "C d M 50 9 234 100 17 884 150 26 1950 200 34 3434 250 42 5334 300 51 7650 350 59 10384 400 67 13534 450 76 17100 500 84 21084 Table 1.",
                "Values of d and M computed for some values of C with NMax = 3.",
                "In Table 1, we give the values of d and M that were computed using (8) and (6) with NMax = 3.",
                "We see that the values of d and M, being dependent of C, are therefore based on the weakest CS.",
                "We see that there is a trade-off between M and d. We could admit more domains in the conference, but at the expense of restricting the total number of clients M in the conference.",
                "While implementing and testing the Conference Servers on a Pentium III 1.4 GHz running Windows NT, we were able to set C=300.",
                "But with the advent of faster computers (> 3 GHz), one can easily set C to higher values and determine d and M accordingly.",
                "Fig. 4 shows a contour plot and Fig. 5, a 3D-mesh showing optimized solutions for CSs of different capacities.",
                "These lead us to maximize the number of domains, and hence, to maximize the total number of clients based on the capacity of various CSs.",
                "In Fig. 4, the individual curves represent the total number of clients targeted, and we select a lower value of d, for capacity C, for targeted M to reduce traffic on WAN.",
                "Fig. 5 represents a different perspective of the same data in 3D.",
                "Fig. 4.",
                "Contour Plot of Capacity versus Optimum number of domains for various conference sizes 7.2 Conferencing with Two Levels of CSs Now considering the case where the number of clients in a particular domain is too large, i.e., d M Mi ≥ (9) one has to avoid the denial of service for new clients due to overloading of Conference Server.",
                "This problem can be solved by introducing a second level of CSs inside the given domain, as in Fig. 6.",
                "The existing M-CS creates a Slave CS (S-CS) that can handle up to C end-users and to which it transfers all its active clients.",
                "Here, the system works differently as outlined in section 6.1: The Clients send their audio packets to their local S-CS, which selects NMax streams, before sending them to a local M-CS, which will proceed in the same way, before sending NMax streams to the other domains.",
                "Each newly created S-CS must run on a separate machine.",
                "The M-CS has to create more S-CSs if the number of active clients exceeds C in the course of the conference after the transfer.",
                "With this mechanism, the M-CS will be able to create utmost     −⋅− = Max Max N dNC U )1( S-CSs, (10) as it must handle 3 (= NMax) packets for each local S-CSs and 3 (= NMax) packets from each other remote domains.",
                "We can then calculate the maximum theoretical number of active clients CUMi ⋅= in each domain as well as M, for the whole conference as CUdM ⋅⋅= .",
                "Fig. 5. 3D Plot of Capacity versus Optimum number of domains for various conference sizes Of course, one could further create a third level in the hierarchy, giving the possibility of accommodating even more clients.",
                "This may be unnecessary as the number of possible clients is large enough with two levels. 8.",
                "PERFORMANCE DISCUSSION We now analyze the performance of the algorithm presented in subsection 6.3, i.e., the one taking care of the exchange of audio packets between the different domains.",
                "Note that the packets that are transiting within the LAN take advantage of the higher capacity (generally coupled with multicast capabilities) and therefore do not require a performance analysis.",
                "Thus we have to look only at the RTP packets over the WAN, i.e., between participating M-CSs.",
                "As each M-CS from a domain will be sending only NMax out of d M packets to the other CSs ( MaxN d M >> ), the bandwidth used by the application over a WAN is upper-bounded by the following expression.",
                "The total number of audio packets transiting over the WAN for each time slot is ∑ ∑= ≠=        d i d ijj MaxN 1 ,1 which is quadratic in the number of domains (i.e., O(d2 )).",
                "However, it is independent of the total number of active clients.",
                "This would not have been the case had all packets been sent over the network in each time slot.",
                "The saving is tremendous.",
                "Yet, one may contend that sending three packets to and from all domains is a waste of resources, as most of these streams will not be selected.",
                "If just one client is active, selecting a subset of clients in that domain is unnecessary.",
                "Pessimistic and optimistic algorithms as presented in the sequel aim at reducing the traffic further by harnessing the slow varying nature of the LN. 8.1 Pessimistic algorithm Consider a scenario wherein the lowest LN (called LNt) of the three globally selected streams (set F of Section 6.1) exceeds the LN of the most dominant stream of a domain.",
                "Evidently, the chances that the next two dominant streams of that domain being selected to F in the next packet period are less.",
                "Here, we send this most dominant stream and withhold the other two.",
                "There may be an error in unique selection across all domains for one packet period only.",
                "As LN varies slowly, the error would get automatically rectified in a subsequent packet period (slot).",
                "In this algorithm, there is at least one stream in each period.",
                "The net network traffic in a packet period in the best case is )1( −⋅ dd , i.e., )( 2 dO using unicast, instead of MaxNdd ⋅−⋅ )1( .",
                "Considerable valuable bandwidth can be saved using this heuristic.",
                "The resulting traffic complexity reduces from O(d2 ) to O(d) in multicast-enabled networks.",
                "Initialize LNt = 0 at an M-CS/S-CS A.",
                "In the first time slot (packet time), each CS sends the top NMax streams (based on their LN) to all other CSs.",
                "At each M-CS/S-CS and for each packet time: B.",
                "Find the value of lowest LN of the NMax globally selected streams (set F) from the previous time slot.",
                "Set LNt with this value.",
                "C. At each CS domain, select the NMax local streams that have maximum value of LN (ToOtherCSs set).",
                "D. Select streams that have LN > LNt.",
                "IF there are >= NMax streams with LN > LNt then send top NMax to other CSs.",
                "ELSE IF there are (NMax-1) streams with LN>LNt then send top (NMax-1) plus the one lower than LNt (i.e., top NMax) to other CSs.",
                "ELSE IF there are (NMax-2) streams with LN>LNt then send top (NMax-2) plus the one lower than LNt (i.e. top (NMax -1)) to other CSs. …… ELSE IF there are NO streams with LN> LNt then send top 1 stream to other CSs.",
                "E. Packets sent in step D form DB1.",
                "Packets received from other CSs form DB2.",
                "F. For this time slot, find global NMax streams based on LN from DB1 U DB2 (set F) G. Send set F to the clients in its domain.",
                "Update LNt for the next period.",
                "Algorithm 2.",
                "Pessimistic algorithm to reduce the number of packets sent over the Internet.",
                "Fig. 6.",
                "Example of a 2-level hierarchy of Conference Servers; the shaded Clients are the one selected by the M-CS and will be sent to other domains CSs.",
                "In this algorithm the saving in traffic is at the cost of relaxing the condition of formation of globally unique set F. However, the discrepancies in selected streams at different domains remain for a short period of time depending on the transportation delay between any two domains.",
                "Even for a total delay of 400ms, for only 10 packet time slots the uniqueness is lost.",
                "This duration in a real-time interactive conversation is non-perceivable by the listener.",
                "In the case that there is a joke and every one laughs, then there would be sudden rise in the number of packets and it would be upper bounded by MaxN)d(O 2 for a short period. 8.2 Optimistic Algorithm The traffic can be reduced further.",
                "The scheme in the following algorithm (Algorithm. 3) is withholding all the streams that have less value of LN compared to the least of the three in the set F. We can find the correct and unique three streams after a few time slots depending on the transportation delay between the domains.",
                "As the packet period is of the order of 40ms, the error in the selection is unnoticeable.",
                "The number of streams on network in this case is always restricted to NMax (=3).",
                "Even without Voice Activity Detection (VAD), there will be no more than three streams in the network in the best case, thus the total traffic is constant.",
                "A sudden burst of traffic, as described in 8.1, is a particular case.",
                "These advantages are due to exploitation of the characteristics of LN.",
                "Initialize LNt = 0 at an M-CS/S-CS A.",
                "In the first time slot (packet time), each CS sends the top NMax streams (based on their LN) to all other CSs.",
                "At each M-CS/S-CS and for each packet time: B.",
                "Find the value of lowest LN of the NMax globally selected streams (set F) from the previous time slot.",
                "Set LNt with this value.",
                "C. At each CS domain, select the NMax local streams that have maximum value of LN (ToOtherCSs set) D. Select streams that have LN > LNt IF there are >= NMax streams with LN > LNt then send top NMax to other CSs.",
                "ELSE IF there are (NMax-1) streams with LN>LNt then send top (NMax-1) and see E. ELSE IF there are (NMax-2) streams with LN>LNt then send top (NMax-2) and see E. …… ELSE IF there are NO streams with LN> LNt then dont send any stream.",
                "E. Exceptions: IF the stream that was in F in the last interval belongs to this CS then select and send that stream even if its LN is now < LNt. (Note this occurs only at that CS which had the stream that was the last of the three in the previous packet period.)",
                "F. Packets sent in step D and E form DB1.",
                "Packets received from other CSs form DB2.",
                "G. For this time slot, find global NMax streams based on LN from DB1 U DB2 (set F).",
                "H. Send set F to the clients in its domain.",
                "Update LNt for the next period.",
                "Algorithm 3.",
                "Optimistic algorithm to reduce the number of packets sent over the Internet Furthermore, when VAD is used [13], it would further reduce the traffic by sending the header part of the RTP packet only and not the whole packet, thus in order to keep updating the LN across.",
                "The traffic here in this case is O(NMax) for multicast and O(d) for unicast.",
                "We see that the above algorithms save bandwidth and computation at each CS, and leads to a scalable architecture with multiple CSs mainly because clients are grouped in domains.",
                "The necessary bandwidth is not dependent on the total number of active clients.",
                "As the CS always chooses the best three clients out of all the clients assigned to it in the domain, addition of new clients to the existing conference will not cause any scalability problem. 8.3 Availability of Multicasting In the architecture that has been proposed, no assumption was made about the availability of multicasting support from the network.",
                "The traffic will be further reduced if multicasting is available over WAN.",
                "It is simple to show that the order of traffic would tend to become O(d) from O(d2 ).",
                "This is an approximation as saving in multicasting depends also on the topology.",
                "The analysis was done for the case wherein multicast is not available (a realistic assumption in todays Internet).",
                "The advantage of this set up is that we can use it even if multicasting is partially available.",
                "We can instruct CSs during the set-up phase to send unicast packets to those CSs that cannot receive multicast packets whereas CSs on multicast enabled routers can exchange packets on a multicast address.",
                "The data structures and conference objects inside a CS is given in [14].",
                "Fig. 7.",
                "User Interface for setting the weight for NMax audio streams (setting Self-bar to zero avoids echo). 8.4 Quality Improvement The observed improvement in the perceived quality of the conference service is due to: (1) limiting the number of concurrent speakers to a low number such as three.",
                "Generally, in a conference if more than two participants speak the intelligibility is lost.",
                "The conversational analysis demonstrates that there would be a repair mechanism [15] in such a case. (2) Delay: The audio stream between any two clients will pass through at most two CSs thus reducing the end-to-end delay.",
                "For a large conference there might be three CSs however, one hop is within the domain incurring negligible delay. (3) As the streams are mixed only at the clients, there can be a customized mix of the streams.",
                "The individual tuning of mixing with weights the spatialism is preserved.",
                "Fig. 7 shows the user interface for the same.",
                "The echo when self-stream is selected can be avoided by reducing the weight.",
                "Nonetheless, feedback helps in reassuring speaker that he/she is heard by all. 9.",
                "CONCLUSION In this paper, we have presented a discussion on a voice-only <br>virtual conferencing environment</br>.",
                "We have argued that the distributed nature of deployment here makes it scalable.",
                "Interactivity is achieved by adapting a recent stream selection scheme based on Loudness Number.",
                "Additionally, we incorporate a result from a more recent work [15] where the sufficiency of three simultaneous speakers has been demonstrated.",
                "Thus, there is significantly effective utilization of bandwidth.",
                "A mixed stream is played out at each client; each client may choose to have a customized mix since mixing is done at the local terminal of each client.",
                "These render impromptu speech in a virtual teleconference over VoIP a reality, as in a real face-to-face conference.",
                "Compatibility is assured thanks to the use of SIP, the most soughtafter signaling protocol.",
                "To ensure a satisfying performance, we do not demand the availability of multicast, but use it if and when available.",
                "The traffic in the WAN (Internet) is upper-bounded by the square of the number of domains, -- further reduced by using heuristic algorithms -- which is far below the total number of clients in the conference.",
                "This is due to the use of a Conference Server local to each domain.",
                "VAD techniques help further traffic reduction.",
                "Using SIP standard for signaling makes this solution highly interoperable.",
                "We have implemented a CS application on a campus-wide network.",
                "We believe this new generation of virtual conferencing environments will gain more popularity in the future as their ease of deployment is assured thanks to readily available technologies and scalable frameworks. 10.",
                "REFERENCES [1] L Aguilar et al., Architecture for a Multimedia Teleconferencing System, in Proceedings of the ACM SIGCOMM, Aug 1986, pp. 126-136. [2] Carsten Bormann, Joerg Ott et al., Simple Conference Control Protocol, Internet Draft, Dec. 1996. [3] M. Decina and V. Trecordi, Voice over Internet Protocol and Human Assisted E-Commerce, IEEE Comm.",
                "Magazine, Sept. 1999, pp. 64-67. [4] Eckehard Doerry, An Empirical Comparison of Copresent and Technologically-mediated Interaction based on Communicative Breakdown, Phd Thesis, Graduate School of the University of Oregon, 1995. [5] H. P. Dommel and J.J. Garcia-Luna-Aceves, Floor Control for Multimedia Conferencing and Collaboration, J. Multimedia Systems, Vol. 5, No. 1, January 1997, pp. 23-38. [6] Amitava Dutta-Roy, Virtual Meetings with desktop conferencing, IEEE Spectrum, July 1998, pp. 47-56. [7] M. Handley and V. Jacobson, SDP: Session Description Protocol, RFC 2327, IETF, April 1998. [8] M. Handley, J. Crowcroft et al., Very large conferences on the Internet: the Internet multimedia conferencing architecture, Journal of Computer Networks, vol. 31, No. 3, Feb 1999, pp. 191-204. [9] ITU-T Rec.",
                "H.323, Packet based Multimedia Communications Systems, vol. 2, 1998. [10] P. Koskelainen, H. Schulzrinne and X. Wu, A SIP-based Conference Control Framework, NOSSDAV02, May 2002, pp. 53-61. [11] R Venkatesha Prasad et al., Control Protocol for VoIP Audio Conferencing Support, International Conference on Advanced Communication Technology, Mu-Ju, South Korea, Feb 2001, pp. 419-424. [12] R Venkatesha Prasad et al., Automatic Addition and Deletion of Clients in VoIP Conferencing, 6th IEEE Symposium on Computers and Communications, July 2001, Hammamet, Tunisia, pp. 386-390. [13] R Venkatesha Prasad, H S Jamadagni, Abjijeet, et al Comparison of Voice Activity Detection Algorithms, 7th IEEE Symposium on Computers and Communications.",
                "July 2002, Sicily, Italy, pp. 530-535. [14] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, A Scalable Distributed VoIP Conferencing using SIP, Proc. of the 8th IEEE Symposium on Computers and Communications, Antalya, Turkey, June 2003. [15] R Venkatesha Prasad, H S Jamadagni and H N Shankar, On Problem of Specifying Number of Floors in a Voice Only Conference, To appear in IEEE ITRE 2003. [16] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, A Proposal for Distributed Conferencing on SIP using Conference Servers, To appear in the Proc. of MMNS 2003, Belfast, UK, September 2003. [17] R. Venkatesha Prasad, H.S.",
                "Jamadagni, J. Kuri, R.S.",
                "Varchas, A Distributed VoIP Conferencing Support Using Loudness Number, Tech.",
                "Rep. TR-CEDT-TE-03-01 [18] M. Radenkovic et al, Scaleable and Adaptable Audio Service for Supporting Collaborative Work and Entertainment over the Internet, SSGRR 2002, LAquila, Italy, Jan. 2002. [19] M. Radenkovic, C. Greenhalgh, S. Benford, Deployment Issues for Multi-User Audio Support in CVEs, ACM VRST 2002, Nov. 2002, pp. 179-185. [20] Srinivas Ramanathan, P. Venkata Rangan, Harrick M. Vin, Designing Communication Architectures for Interorganizational Multimedia Collaboration, Journal of Organizational Computing, 2 (3&4), pp.277-302, 1992. [21] A.",
                "B. Roach, Session Initiation Protocol (SIP)-Specific Event Notification, RFC 3265, IETF, June 2002. [22] J. Rosenberg, H. Schulzrinne et al., SIP: Session Initiation Protocol, RFC 3261, IETF, June 2002. [23] J. Rosenberg, H. Schulzrinne, Models for Multy Party Conferencing in SIP, Internet Draft, IETF, July 2002. [24] H. Schulzrinne et al., RTP: a transport protocol for realtime applications, RFC 1889, IETF, Jan 1996. [25] Lisa R. Silverman, Coming of Age: Conferencing Solutions Cut Corporate Costs, White Paper, www.imcca.org/wpcomingofage.asp [26] Kundan Singh, Gautam Nair and Henning Schulzrinne, Centralized Conferencing using SIP, Proceedings of the 2nd IP-Telephony Workshop (IPTel), April 2001. [27] D. Thaler, M. Handley and D. Estrin, The Internet Multicast Address Allocation Architecture, RFC 2908, IETF, Sept. 2000."
            ],
            "original_annotated_samples": [
                "Deployment Issues of a VoIP Conferencing System in a <br>virtual conferencing environment</br> R. Venkatesha Prasad i Richard Hurni ii H.S.",
                "In this paper, we describe an audio service framework designed to provide a <br>virtual conferencing environment</br> (VCE).",
                "CONCLUSION In this paper, we have presented a discussion on a voice-only <br>virtual conferencing environment</br>."
            ],
            "translated_annotated_samples": [
                "Problemas de implementación de un sistema de conferencias VoIP en un <br>entorno de conferencias virtuales</br>. R. Venkatesha Prasad y Richard Hurni.",
                "En este documento, describimos un marco de servicio de audio diseñado para proporcionar un <br>Entorno de Conferencias Virtuales</br> (ECV).",
                "CONCLUSIÓN En este artículo, hemos presentado una discusión sobre un <br>entorno de conferencias virtuales solo de voz</br>."
            ],
            "translated_text": "Problemas de implementación de un sistema de conferencias VoIP en un <br>entorno de conferencias virtuales</br>. R. Venkatesha Prasad y Richard Hurni. Jamadagni iii H.N. Shankar iv i, iii Centro de Diseño y Tecnología Electrónica Instituto Indio de Ciencias, Bangalore, India Teléfono: +91 80 360 0810 i, iii {vprasad, hsjam}@cedt.iisc.ernet.in ii hurni@ieee.org iv hn_shankar@yahoo.com RESUMEN Los servicios en tiempo real han sido principalmente respaldados en redes conmutadas por circuitos. Las tendencias recientes favorecen los servicios trasladados a redes de conmutación de paquetes. Para las conferencias de audio, necesitamos considerar muchos aspectos, como la escalabilidad, la calidad de la aplicación de conferencia, el control de piso y la carga en los clientes/servidores, por nombrar algunos. En este documento, describimos un marco de servicio de audio diseñado para proporcionar un <br>Entorno de Conferencias Virtuales</br> (ECV). El sistema está diseñado para dar cabida a un gran número de usuarios finales hablando al mismo tiempo y distribuidos por Internet. El marco se basa en Servidores de Conferencia [14], que facilitan el manejo del audio, mientras que explotamos las capacidades de SIP para propósitos de señalización. La selección de clientes se basa en un reciente cuantificador llamado Número de Volumen que ayuda a imitar una conferencia física cara a cara. Nos ocupamos de los problemas de implementación de la solución propuesta tanto en términos de escalabilidad como de interactividad, mientras explicamos las técnicas que utilizamos para reducir el tráfico. Hemos implementado una aplicación de Servidor de Conferencias (CS) en una red de campus en nuestro Instituto. Categorías y Descriptores de Temas C.2.4 [Redes de Computadoras y Comunicación]: Sistemas Distribuidos - Cliente/Servidor, aplicaciones distribuidas. Términos generales Algoritmos, Rendimiento, Diseño, Teoría. 1. INTRODUCCIÓN El Internet de hoy utiliza el conjunto de protocolos IP que fue diseñado principalmente para el transporte de datos y proporciona la entrega de datos con el mejor esfuerzo. Las restricciones de retraso y las características diferencian los datos tradicionales por un lado, de las aplicaciones de voz y video por el otro. Por lo tanto, a medida que se implementan aplicaciones de voz y video cada vez más sensibles al tiempo en Internet, se pone de manifiesto la insuficiencia de la red. Además, buscamos trasladar servicios telefónicos a través de Internet. Entre ellos, la instalación de conferencia virtual (teleconferencia) está a la vanguardia. Las videoconferencias y conferencias de audio en Internet son populares por las varias ventajas que poseen. Claramente, el ancho de banda necesario para una videoconferencia a través de Internet aumenta rápidamente con el número de participantes; reducir el ancho de banda sin comprometer la calidad del audio es un desafío en la telefonía por Internet. Los problemas críticos adicionales son: (a) retraso de paquetes, (b) eco, (c) mezcla de audio de clientes seleccionados, (d) selección automática de clientes para participar en la conferencia, (e) reproducción de audio mezclado para cada cliente, (f) manejo de clientes que no son capaces de mezclar flujos de audio (estos clientes se conocen como clientes tontos), y (g) decidir el número de clientes activos simultáneamente en la conferencia sin comprometer la calidad de voz. Si bien todos los requisitos anteriores son desde el punto de vista tecnológico, la perspectiva de los usuarios y las interacciones también son factores esenciales. Hay mucha discusión entre la comunidad de HCI y CSCW sobre el uso de la Etnometodología para el diseño de aplicaciones de CSCW. El enfoque básico es proporcionar un ancho de banda más amplio, más instalaciones y mecanismos de control más avanzados, con miras a una mejor calidad de interacción. Este enfoque ignora la utilidad funcional del entorno que se utiliza para la colaboración. Eckehard Doerry [4] critica este enfoque diciendo que pone la forma antes que la función. Por lo tanto, la necesidad es adoptar un enfoque que considere ambos aspectos: el técnico y el funcional. En cuanto al aspecto funcional, nos referimos a [15] donde se ha tratado en cierto detalle. En este trabajo, no discutimos la videoconferencia; su inclusión no beneficia significativamente la calidad de la conferencia [4]. Nuestro enfoque está en entornos de audio virtuales. Primero describimos los desafíos encontrados en las conferencias de audio virtuales. Luego investigamos las motivaciones seguidas por la literatura relevante. En la Sección 5, explicamos la arquitectura de nuestro sistema. La sección 6 comprende la descripción de los diversos algoritmos utilizados en nuestra configuración. Abordamos problemas de implementación. Una discusión sobre el Instituto Federal Suizo de Tecnología, Lausana. Antiguo visitante en CEDT. PESIT y NIAS, Bangalore, India. El rendimiento sigue. Concluimos teniendo en cuenta algunos problemas de implementación. 2. DESAFÍOS EN LA VIDEOCONFERENCIA VoIP Surgen muchos desafíos al construir una aplicación VoIP. Lo siguiente es de particular preocupación en el proceso: • Facilidad de uso: la conferencia debe ser sencilla; los usuarios no necesitan experiencia en el dominio. La gestión (adición/eliminación) de clientes y servidores debe ser sencilla. El desarrollo de aplicaciones no debe presuponer características específicas del sistema subyacente o de las capas de red. La facilidad de uso puede incluir el aprovechamiento de tecnologías fácilmente disponibles, técnicamente factibles y económicamente viables. • Escalabilidad: Las conferencias deben parecer ininterrumpidas bajo cargas pesadas, es decir, cuando se agregan muchos usuarios adicionales. El tráfico en la WAN no debería aumentar apreciablemente con el número total de clientes; de lo contrario, esto podría provocar congestión. Por lo tanto, se necesita un medio para regular el tráfico al mínimo para este tipo de aplicaciones en tiempo real. • Interactividad: En Entornos de Conferencias Virtuales (ECVs), pretendemos una aplicación de conferencias cara a cara que imite una conferencia real, donde los participantes más vocales invitan la atención. El intercambio de turnos en la ocupación del espacio por parte de los participantes debe adaptarse con gracia para lograr una transición natural. • Estandarización: La solución debe cumplir con los estándares establecidos para lograr interoperabilidad y aceptación entre pares. Los requisitos anteriores se colocan en la perspectiva de las observaciones realizadas en trabajos anteriores (véase Secciones 3 y 4) y guiarán el diseño del VCE. 3. La motivación Ramanathan y Rangan [20] han estudiado en detalle las configuraciones arquitectónicas comparando muchos esquemas de arquitectura de conferencias teniendo en cuenta la demora de red y los requisitos de computación para la mezcla. La división funcional y el diseño de arquitectura orientada a objetos que ayudan en la implementación se presentan en [1]. Un resumen de muchos temas relacionados con el apoyo a una conferencia grande se aborda en [8]. H. P. Dommel [5] y muchos otros destacan el control de piso como otro aspecto fundamental a tener en cuenta en el diseño de una herramienta de conferencias. Los protocolos de control de conferencias fuertemente acoplados en Internet pertenecen a la familia ITU-T H.323 [9]; sin embargo, están principalmente diseñados para conferencias pequeñas. El último borrador del IETF de Rosenberg y Schulzrinne [23] discute modelos de conferencia con SIP [22] en el fondo. Los aspectos de implementación para la conferencia SIP centralizada se informan en [26]. Un nuevo enfoque llamado mezcla parcial por Radenkovic [18] permite que flujos mezclados y no mezclados coexistan. En todas las propuestas anteriores, si bien hay algunas sugerencias muy útiles, comparten una o más de las siguientes limitaciones: • En una conferencia de audio, no es necesario mezclar los flujos de todos los clientes. De hecho, mezclar muchas corrientes arbitrarias [24] de clientes degrada la calidad de la conferencia debido a la reducción en el volumen (aspecto espacial del habla). El número de flujos mezclados varía dinámicamente dependiendo del número de participantes activos. Esto provocaría fluctuaciones en el volumen de cada participante individual, causando una degradación severa en la calidad. La mezcla personalizada de flujos no es posible cuando hay muchos clientes activos. Existe un umbral en el número de oradores simultáneos por encima del cual aumentar el número de oradores se vuelve contraproducente para la calidad de la conferencia. La fijación del número máximo de hablantes simultáneos se aborda en un trabajo reciente [15] utilizando la Etnometodología, y se postula que es tres. Por lo tanto, es recomendable respetar esa restricción. • No puede haber muchos mezcladores intermedios (similarmente, Servidores de Conferencia como en [10]) en etapas como en [20] porque provoca un retraso desmedido al aumentar el número de saltos y no es escalable con la interactividad como enfoque. • El Control de Piso para una conferencia de audio (incluso de video) con instrucciones explícitas de toma de turnos para los participantes convierte la conferencia en esencia en un asunto de un orador a la vez, no en una en vivo y libre de interrupciones. De esta manera, la conferencia se vuelve notablemente artificial y su calidad se degrada. Schulzrinne et al. [24], asumen que solo un participante está hablando en un momento dado. En este caso, si las aplicaciones se implementan con cierto control [5], el servicio se vuelve asfixiante para los usuarios. • La mezcla parcial [18] tiene un problema similar al de la mezcla cuando se mezclan más flujos. Además, en [18], para permitir el discurso improvisado, la mezcla no se realiza cuando la red puede soportar altos requisitos de ancho de banda para enviar/recibir todas las transmisiones, pero es innecesaria [15]. • Para conferencias grandes [23, 10] una conferencia centralizada no puede escalar. Con la multidifusión, los clientes tendrán que analizar muchos flujos y el tráfico en la red de los clientes aumenta innecesariamente. Evidentemente, se abordan diferentes problemas particulares, todos los cuales son un subconjunto de los requisitos (definidos en [14] y [16]) para el soporte de conferencias de VoIP. Por lo tanto, es necesario abordar la conferencia en su totalidad teniendo en cuenta todos sus requisitos de manera simultánea. Con este objetivo, el sistema de conferencias VoIP que proponemos está diseñado para ser escalable e interactivo. Hacemos uso del Número de Sonoridad para implementar el control de volumen. Esto permite a un participante entrar libremente en el modo de hablar para interrumpir al orador actual como en una reunión natural cara a cara. Un límite superior en el número de pisos (es decir, el número de oradores permitidos para hablar al mismo tiempo) se fija utilizando una conjetura propuesta en [15]. El trabajo presentado aquí es una continuación de nuestros estudios sobre conferencias basadas en el Protocolo de Inicio de Sesión en [14] y [16]. SIP, definido en [22], es ahora el estándar más popular para implementación de VoIP y ha sido elegido por su fortaleza, facilidad de uso, extensibilidad y compatibilidad. Esta es la razón por la cual estará en el trasfondo de todos los mensajes de control que surgirán implícitamente entre las entidades en nuestra arquitectura. Los mensajes actuales están descritos en [16] y, como tal, no presentamos una descripción completa de ellos aquí. 4. TRABAJO RELACIONADO El estándar SIP definido en el RFC 3261 [22] y en extensiones posteriores como [21] no ofrece servicios de control de conferencias como control de piso o votación y no prescribe cómo debe ser gestionada una conferencia. Sin embargo, SIP se puede utilizar para iniciar una sesión que utilice algún otro protocolo de control de conferencias. La especificación central de SIP soporta muchos modelos para conferencias [26, 23]. En los modelos basados en servidor, un servidor mezcla flujos de medios, mientras que en una conferencia sin servidor, la mezcla se realiza en los sistemas finales. SDP [7] se puede utilizar para definir las capacidades de los medios y proporcionar otra información sobre la conferencia. Ahora consideraremos algunos modelos de conferencia en SIP que han sido propuestos recientemente [23]. Primero, veamos los modelos sin servidor. En la mezcla de extremos del sistema, solo un cliente (SIP UA) maneja la señalización y la mezcla de medios para todos los demás, lo cual claramente no es escalable y causa problemas cuando ese cliente en particular abandona la conferencia. En el modelo de Usuarios que se unen, un árbol crece, ya que cada parte invitada constituye una nueva rama en el camino de distribución. Esto conduce a un número creciente de saltos para las hojas remotas y no es escalable. Otra opción sería utilizar la multidifusión para las videoconferencias, pero actualmente la multidifusión no está habilitada en Internet y solo es posible en una LAN. Entre los modelos basados en servidor, en una conferencia de marcado, los UAs se conectan a un servidor central que maneja todas las mezclas. Este modelo no es escalable ya que está limitado por la potencia de procesamiento del servidor y el ancho de banda de la red. Las conferencias centralizadas ad hoc y los servidores de conferencias de marcado tienen mecanismos y problemas similares. Los modelos híbridos que involucran señalización centralizada y medios distribuidos, con estos últimos utilizando unicast o multicast, plantean problemas de escalabilidad como antes. Sin embargo, una ventaja es que el control de la conferencia puede ser una solución de terceros. La Mezcla Parcial Distribuida, presentada en [18], propone que en caso de limitación de ancho de banda, algunos flujos se mezclan y otros no, manteniendo la interactividad intacta. La pérdida de espacialidad cuando se mezclan y el aumento del ancho de banda cuando no lo hacen son problemas abiertos. Un estudio relacionado [19] del mismo autor propone una arquitectura de conferencias para Entornos Virtuales Colaborativos (CVEs) pero no proporciona el enfoque de escalabilidad sin la disponibilidad de la multidifusión. Teniendo en cuenta las limitaciones de los sistemas de conferencias propuestos, detallaremos ahora nuestra propuesta. 5. ARQUITECTURA DEL SISTEMA Esta sección está dedicada a la descripción de la arquitectura del sistema propuesto. Sin embargo, dado que este documento constituye la continuación de nuestro trabajo iniciado en [14] y ampliado en [16], no presentaremos aquí todos los detalles sobre las entidades propuestas e invitamos a los lectores a consultar los documentos mencionados anteriormente para obtener una descripción completa y detallada. Primero, no restringimos nuestro sistema de conferencias para funcionar solo en conferencias pequeñas, sino en grandes VCEs de audio que tienen cientos (o incluso miles) de usuarios a través de una Red de Área Amplia (WAN) como Internet. Esta perspectiva se deriva de una evaluación de que los VCEs ganarán importancia en el futuro, ya que las conferencias de audio interactivas serán más populares debido a la difusión de la cultura mediática en todo el mundo. Dos aspectos deben ser atendidos al construir un sistema de conferencias VoIP: (i) el front-end, que consiste en el programa de aplicación que se ejecuta en las computadoras de los usuarios finales y (ii) el back-end que proporciona otros programas de aplicación que facilitan las conferencias y la conferencia. Los usuarios participantes se agrupan en varios dominios. Estos dominios son Redes de Área Local (LAN), como redes corporativas o educativas. Esta suposición distribuida requiere soluciones de control y manejo de medios distribuidos, ya que los sistemas centralizados no serían escalables para conferencias tan grandes (ver Sección 4). Más explícitamente, en cada dominio, podemos identificar varios componentes lógicos relevantes de una instalación de conferencias (Fig. 1): Un número arbitrario de usuarios finales (clientes) que pueden participar en como máximo una conferencia de audio a la vez. Cada usuario es la Fig. 1. Ejemplo de conferencia: 3 dominios que contienen las entidades necesarias para que la conferencia pueda tener lugar. Incluidas en un único dominio en un instante dado, pero pueden moverse de un dominio a otro (nomadismo). En nuestro entorno de conferencias, estos clientes son Agentes de Usuario SIP (SIP UAs) regulares, según se define en [22], para lograr interoperabilidad con otros sistemas compatibles con SIP existentes. Estos clientes no son conscientes del entorno complejo que respalda la conferencia, lo cual se destaca a continuación. Un servidor SIP (SIPS) por dominio, encargándose de todos los aspectos de señalización de la conferencia (clientes que se unen, salen, etc.) [16]. En particular, se considera como una implementación física que abarca diferentes roles lógicos, a saber, un Servidor Proxy SIP, un Servidor Registrador SIP, un Servidor de Redirección SIP y un SIP B2BUA (Agente de Usuario de Vuelta a Vuelta) [22]. Esta implementación física permite el manejo de mensajes SIP entrantes/salientes por una u otra entidad lógica según sea necesario. SIPS está encargado de mantener un servicio total y tiene muchas ventajas, como (a) funciona como una entidad centralizada que puede hacer un seguimiento de las actividades de los UAs en una conferencia; (b) puede realizar todo el cambio para proporcionar funciones de PBX; (c) puede localizar a los UAs e invitarlos a una conferencia; (d) también puede encargarse de la facturación. Los SIPS en diferentes dominios se comunican entre sí utilizando mensajes SIP como se describe en [16]. Si la carga en un SIPS particular es demasiado pesada, puede crear otro SIPS en el mismo dominio para que la carga se comparta. Se crea un Servidor de Conferencias Maestro (M-CS) (simplemente un Servidor de Conferencias (CS)) para cada conferencia por el SIPS local cuando una conferencia comienza. Este servidor se utilizará para manejar paquetes de medios para los clientes del dominio. Su mecanismo será descrito en la siguiente sección. El M-CS podrá crear una jerarquía de CSs dentro de un dominio agregando uno o más CSs esclavos (S-CSs) para dar cabida a todos los clientes activos y prevenir su propia saturación al mismo tiempo. Veremos este mecanismo con cierto detalle en la secuela. Las entidades descritas aquí son exhaustivas y se ajustan a la filosofía del SIP. Por lo tanto, el uso de SIP hace que esta arquitectura sea más útil e interoperable con cualquier otro cliente o servidor SIP. PROBLEMAS ALGORÍTMICOS 6.1 Seleccionar los flujos similares a SipConf en [27], un Servidor de Conferencias (CS) [17] tiene la función de soportar la conferencia; es responsable de manejar los flujos de audio utilizando RTP. También puede duplicarse para convertir formatos de transmisión de audio para un cliente dado si es necesario y puede funcionar como Traductores/Mezcladores de la especificación RTP detrás de cortafuegos. Hemos basado el diseño de nuestro CS en el Procesador Multipunto (MP) H.323 [9]. En resumen, el MP recibe flujos de audio de los puntos finales involucrados en una conferencia multipunto centralizada o híbrida, los procesa y los devuelve a los puntos finales. Un procesador de señales de audio prepara N salidas de audio NMax a partir de M flujos de entrada después de la selección, mezcla o ambas. La mezcla de audio requiere decodificar el audio de entrada a señales lineales (PCM o analógicas), realizar una combinación lineal de las señales y volver a codificar el resultado en un formato de audio apropiado. El procesador de señales puede eliminar o atenuar algunas de las señales de entrada para reducir el ruido y los componentes no deseados. Fig. 2. \n\nFig. 2. El diagrama esquemático de un CS. La limitación de H.323 es que no aborda la escalabilidad de una conferencia. La arquitectura propone una topología en cascada o en cadena de margaritas [10], la cual se puede demostrar que no puede escalar para una conferencia grande. Un CS atiende a muchos clientes en la misma conferencia. Por lo tanto, solo maneja una conferencia a la vez. Varios CS pueden coexistir en un dominio, como cuando hay varias conferencias en curso. Los mensajes relacionados con la señalización de los CSs se tratan en [11]. El funcionamiento de un CS se ilustra en la Fig. 2: Para cada intervalo de mezcla, CS 1 elige los mejores NMax paquetes de audio de los M1 (utilizando un criterio denominado Número de Volumen, descrito en la siguiente subsección). Puede posiblemente recibir y enviar estos a CSs 2 a P. El conjunto de paquetes enviados se denota como AotrosCSs. En el mismo intervalo de mezcla, también recibe los mejores paquetes de audio NMax (de un posible M2) de CS 2, de manera similar a los mejores NMax (de un posible MP) de CS P. Para simplificar, ignoramos el retardo de propagación entre los CSs, que de hecho se puede tener en cuenta; está más allá del alcance de esta presentación. El conjunto de paquetes recibidos se denota como FromOtherCSs. Finalmente, selecciona los mejores paquetes NMax del conjunto {ToOtherCSs unión FromOtherCSs} y envía estos paquetes a su propio grupo. Se puede observar que el conjunto {ToOtherCSs unión FromOtherCSs} es el mismo en todos los CSs. Esto garantiza que cualquier cliente en la conferencia finalmente reciba el mismo conjunto de paquetes para mezclar. Por lo tanto, todos los clientes obtienen una vista común de la conferencia. De manera similar, para cada intervalo de tiempo (tiempo de paquete), se selecciona un subconjunto, F, de todos los clientes (utilizando el mismo criterio) del conjunto de paquetes de todos los otros CS más los NMax clientes seleccionados localmente. Sus paquetes se mezclan y se reproducen en los clientes. Según [15], la cardinalidad de F, |F| es NMax y está fijada en tres. En nuestra configuración de conferencias, la selección la realiza el Servidor Maestro de Conferencias (M-CS), que interviene exclusivamente en el manejo de medios. Ten en cuenta que aunque la especificación de SIP permite la comunicación directa de medios de usuario a usuario en una llamada uno a uno, también es posible utilizar el Servidor de Conferencias para llamadas de dos partes, especialmente porque es entonces más funcional crear una conferencia real agregando un tercero y posteriormente más participantes. Existen casos en los que la capacidad de procesamiento de un M-CS se ve superada, ya que puede tener demasiados paquetes, tanto de dominios locales como de dominios remotos, para procesar. En ese caso, el M-CS creará uno o varios S-CS (Fig. 6) y transferirá a sus propios clientes, así como a los nuevos clientes, a ellos. En esta configuración, el algoritmo descrito anteriormente se modificará ligeramente, ya que los paquetes de audio irán de los clientes a su S-CS dedicado, que seleccionará NMax paquetes para enviar al M-CS local, que luego seleccionará NMax paquetes de todos sus S-CS en el dominio antes de enviarlos a los dominios remotos. Los paquetes entrantes de otros dominios serán recibidos por el M-CS, se seleccionarán NMax de ellos y se enviarán directamente a los clientes del dominio, evitando los SCSs. Este cambio implica que existen como máximo tres entidades intermedias para cada paquete de audio, en lugar de dos en la configuración convencional. Dado que el salto adicional ocurre dentro de la LAN que se supone tiene una conectividad de alta velocidad, consideramos que no debería impedirnos usar esta jerarquía de CS cuando sea necesario hacerlo. 6.2 Número de Sonoridad (LN) Una pregunta básica que debe responder el CS es la siguiente. En un intervalo de mezcla, ¿cómo debería elegir NMax paquetes de los M que podría recibir? Una forma es clasificar los paquetes M recibidos según sus energías y elegir los NMax mejores. Sin embargo, esto suele considerarse insuficiente porque las fluctuaciones aleatorias en las energías de los paquetes pueden provocar una mala calidad de audio. Esto indica la necesidad de una métrica diferente de meras energías individuales de paquetes. El medidor debe tener las siguientes características [12]: • Un hablante (ocupante del suelo) no debe ser interrumpido por un pico en la energía del paquete de otro hablante. Esto implica que la historia del discurso de un hablante debería tener cierto peso. Esto se suele llamar Persistencia o Resaca. • Un participante que quiera interrumpir a un orador tendrá que (i) hablar en voz alta y (ii) seguir intentándolo por un tiempo breve. En una conferencia presencial, el lenguaje corporal a menudo indica la intención de interrumpir. Pero en una conferencia a ciegas en discusión, la intención de un participante de interrumpir puede ser transmitida de manera efectiva a través de LN. Se debe garantizar un mecanismo de control de piso habilitado para cortar a un orador de manera contundente. Estos requisitos son cumplidos por el Número de Volumen [12], que cambia suavemente con el tiempo para que la selección (adición y eliminación) de clientes para la conferencia sea elegante. LN (= ) es una función de la amplitud de la corriente de audio actual más la actividad y amplitud en una ventana específica en el pasado. Fig. 3. \n\nFig. 3. Las diferentes ventanas utilizadas para el cálculo de LN se actualizan en una base de paquete por paquete. El parámetro básico utilizado aquí es la amplitud del paquete, que se calcula como la raíz cuadrada de la media cuadrática (rms) de las energías en las muestras de audio de un paquete, y se denota como XK. Tres ventanas están definidas como se muestra en la Fig. 3. El nivel de amplitud actual del altavoz se encuentra calculando el promedio móvil de la amplitud del paquete (XK) dentro de una ventana llamada Ventana de Pasado Reciente, que va desde el instante presente hasta algún momento pasado. La actividad pasada del hablante se encuentra calculando el promedio móvil de la amplitud del paquete (XK) dentro de una ventana llamada Ventana de Pasado Lejano, que comienza en el punto donde termina la ventana de Pasado Reciente y se extiende hacia atrás en el pasado por un intervalo predefinido. La actividad del hablante en el pasado se encuentra con una ventana llamada Horizonte de Actividad, que abarca la ventana del pasado reciente, así como la ventana del pasado lejano y más allá si es necesario. Aunque la contribución del horizonte de actividad parece similar a la contribución de las ventanas del pasado reciente y pasado lejano, la actividad pasada se calcula de manera diferente a partir de la ventana del horizonte de actividad. Define las cantidades durante estos tres intervalos como L1, L2 y L3. L1 cuantifica la actividad de habla del Pasado Reciente, L2 la actividad de habla del Pasado Lejano y L3 proporciona un número correspondiente a la actividad de habla en la ventana del Horizonte de Actividad, cuantificando qué tan activo estuvo el hablante en los últimos intervalos. L3 produce una cantidad que es proporcional a la fracción de paquetes que tienen energías por encima de un umbral predefinido (Ec. 3). El umbral es invariable entre clientes. ∑ +− = = 1 1 1 RPP P Wt tK K RP X W L (1) ∑ +−− −= = 1 2 1 DPRPP RPP WWt WtK K DP X W L (2) ∑ +− = ≥= 1 }{3 * 1 AHP P K Wt tK X AH I W L θθ (3) Donde siI KX 1}{ =≥θ θ≥KX = de lo contrario,0 El umbral es una constante. Se establece en el 10-20 por ciento de la amplitud de las muestras de voz de un paquete en nuestra implementación aquí. El número de intensidad λ para el instante de tiempo presente (o el paquete presente) se calcula como, 332211 *L*L*L αααλ ++= (4) Aquí 1, 2 y 3 son elegidos de tal manera que: 0< 1, 2 y 3=1- 1) Aquí, 1 es el peso dado al habla del pasado reciente, 2 es el peso dado al habla del pasado lejano y 3 es el peso dado a la actividad del habla en la ventana de horizonte de actividad considerada. 6.3 Seguridad, Vida y Equidad El parámetro λ tiene un efecto significativo en la evaluación de la ventana. Después de que un conferenciante se queda en silencio, otro puede tomar la palabra. Además, dado que hay más de un canal, la interrupción está habilitada. Un conferenciante ruidoso es más probable que sea escuchado debido a un λ elevado. Esto garantiza equidad para todos los conferenciantes. Después de todo, incluso en una conferencia presencial, un orador más vocal capta una atención especial. Todas estas características deseables están integradas en la LN. Una discusión exhaustiva sobre la selección de los diversos parámetros y la dinámica de LN están fuera del alcance de este documento. 6.4 Algoritmo de selección utilizando LN Siguiendo los desarrollos en las subsecciones 6.1 y 6.2, presentamos el algoritmo simple que se ejecuta en cada Servidor Maestro-Conferencia (Algoritmo 1). Este algoritmo se basa en las discusiones de la sección 6.1. El conjunto F, único a nivel mundial, se encuentra utilizando este procedimiento. Repetir para cada intervalo de tiempo en cada M-CS { 1. Obtener todos los paquetes de los clientes que le pertenecen. 2. Encuentra como máximo NMax clientes que tengan un PD[LPXP RXW RI 0 &OLHQWV LQ LWV GRPDLQ\u0011 3. Almacene una copia de los paquetes de esos clientes NMax en la base de datos DB1. Envía estos paquetes NMax a otros M-CSs (en Unicast o Multicast, dependiendo de la configuración). 5. De igual manera, recibir paquetes de todos los demás M-CSs y almacenarlos en la base de datos DB2. 6. Ahora compara los paquetes en DB1 y DB2 en WKH EDVLV RI DQG VHOHFW D PD[LPXP RI NMax entre ellos (para formar el conjunto F) que deberían ser reproducidos en cada Cliente. 7. Enviar los paquetes NMax en el conjunto F a los Clientes en su dominio. 8. Mezcla estos paquetes de audio NMax en el conjunto F después de linearizarlos y envíalos a Clientes sin capacidad en el dominio. Algoritmo 1. Algoritmo de selección El mecanismo propuesto aquí también se muestra en la Fig. 6, donde tiene lugar una única conferencia entre tres dominios. Los clientes sombreados son los seleccionados en sus dominios locales; sus flujos de audio serán enviados a otros CSs. 7. PROBLEMAS DE DESPLIEGUE Ahora analizamos los problemas de despliegue asociados con la gestión de conferencias. ¿Cómo deben organizarse los dominios para maximizar el número de participantes que pueden unirse? Para abordar esto, definimos algunos parámetros útiles.  Sea d el número de dominios diferentes en los que hay clientes activos en una conferencia dada.  Sea Mi el número de clientes activos presentes en el dominio i (di ≤≤1) en una conferencia dada. El número total de clientes activos en la conferencia es por lo tanto ∑= = d i iMM 1. Sea C el número máximo de flujos de audio que un Servidor de Conferencias puede manejar en un tiempo de paquete, también llamado capacidad. C se establece de acuerdo con la potencia de procesamiento del CS más débil en la conferencia, pero como no se puede asumir que lo conocemos de antemano, se puede establecer de acuerdo con algún requisito mínimo del sistema que una máquina debe cumplir para participar en una conferencia. Deje que NMax sea el número de flujos de salida que un CS debe enviar a otros CS en dominios remotos (ver sección 6.1). Estableceremos NMax = 3 (=|F|), según [15]. El problema de optimización consiste en encontrar el valor de d que maximiza el número total de clientes Mi atendidos por un CS en un dominio con capacidad C. Primero consideramos el caso en el que la capacidad no es excedida (el CS existente no está sobrecargado), y luego procedemos al caso en el que es necesario crear más CS cuando un CS único está sobrecargado. Suponemos que los clientes están distribuidos de manera equitativa entre los dominios, ya que no tenemos información para asumir una distribución a priori de los clientes. Podemos especificar únicamente un límite superior en el número de clientes aceptables, dado el número de dominios activos d. 7.1 Conferencias con solo un nivel de CSs En esta subsección, consideramos que tenemos solo un CS, es decir, un único M-CS en cada dominio. Por lo tanto, no se puede sobrecargar. Consideramos que el sistema funciona tal como se describe en la sección 6.1: Los clientes envían sus paquetes de audio a su CS local, que selecciona NMax flujos antes de enviarlos a otros CS. De manera paralela, también recibe NMax transmisiones para cada otro CS antes de tomar una decisión sobre cuáles de las NMax transmisiones serán seleccionadas, enviadas y reproducidas en cada cliente individual. Para la estabilidad del sistema, cualquier servidor de conferencias debería ser capaz de manejar a sus clientes locales además de los paquetes de audio de otros dominios. Claramente entonces, la siguiente desigualdad debe cumplirse para todo dominio: )1( −⋅+≥ dN d M C Max (5) El caso límite de (5) (tomando la igualdad) toma la forma 2 )( dNdNCM MaxMax ⋅−⋅+= (6) Para optimizar d con respecto a M, establecemos 0)(2 =+−⋅⋅= ∂ ∂ MaxMax NCdN d M (7) obteniendo     ⋅ + = Max Max N NC d 2 (8) ([ ]* = Redondeando al entero más cercano) y por lo tanto, M de (6). Tabla 1. Valores de d y M calculados para algunos valores de C con NMax = 3. En la Tabla 1, se presentan los valores de d y M que fueron calculados utilizando (8) y (6) con NMax = 3. Vemos que los valores de d y M, al depender de C, se basan en el CS más débil. Vemos que hay un equilibrio entre M y d. Podríamos admitir más dominios en la conferencia, pero a costa de restringir el número total de clientes M en la conferencia. Durante la implementación y prueba de los Servidores de Conferencia en un Pentium III 1.4 GHz con Windows NT, pudimos establecer C=300. Pero con la llegada de computadoras más rápidas (> 3 GHz), uno puede fácilmente establecer C a valores más altos y determinar d y M en consecuencia. La Fig. 4 muestra un mapa de contorno y la Fig. 5, una malla 3D que muestra soluciones optimizadas para CSs de diferentes capacidades. Estos nos llevan a maximizar el número de dominios, y por lo tanto, a maximizar el número total de clientes basado en la capacidad de varios CSs. En la Fig. 4, las curvas individuales representan el número total de clientes objetivo, y seleccionamos un valor más bajo de d, para la capacidad C, para el objetivo M con el fin de reducir el tráfico en la WAN. La Fig. 5 representa una perspectiva diferente de los mismos datos en 3D. Fig. 4. \n\nFig. 4. Diagrama de contorno de la capacidad versus el número óptimo de dominios para varios tamaños de conferencias 7.2 Conferencias con Dos Niveles de CSs. Ahora considerando el caso en el que el número de clientes en un dominio particular es demasiado grande, es decir, d M Mi ≥ (9), se debe evitar la denegación de servicio para nuevos clientes debido a la sobrecarga del Servidor de Conferencias. Este problema se puede resolver introduciendo un segundo nivel de CSs dentro del dominio dado, como se muestra en la Figura 6. El M-CS existente crea un CS esclavo (S-CS) que puede manejar hasta C usuarios finales y al que transfiere todos sus clientes activos. Aquí, el sistema funciona de manera diferente como se describe en la sección 6.1: Los clientes envían sus paquetes de audio a su S-CS local, que selecciona NMax flujos, antes de enviarlos a un M-CS local, que procederá de la misma manera, antes de enviar NMax flujos a los otros dominios. Cada S-CS recién creado debe ejecutarse en una máquina separada. El M-CS tiene que crear más S-CSs si el número de clientes activos supera C durante el transcurso de la conferencia después de la transferencia. Con este mecanismo, el M-CS podrá crear un máximo de     −⋅− = Max Max N dNC U )1( S-CSs, (10) ya que debe manejar 3 (= NMax) paquetes para cada S-CS local y 3 (= NMax) paquetes de cada otro dominio remoto. Podemos entonces calcular el número máximo teórico de clientes activos CUMi ⋅= en cada dominio, así como M, para toda la conferencia como CUdM ⋅⋅= . Fig. 5. Gráfico 3D de Capacidad versus Número óptimo de dominios para varios tamaños de conferencia. Por supuesto, se podría crear un tercer nivel en la jerarquía, lo que daría la posibilidad de alojar aún más clientes. Esto puede ser innecesario ya que el número de posibles clientes es lo suficientemente grande con dos niveles. 8. DISCUSIÓN DE RENDIMIENTO Ahora analizamos el rendimiento del algoritmo presentado en la subsección 6.3, es decir, el que se encarga del intercambio de paquetes de audio entre los diferentes dominios. Ten en cuenta que los paquetes que están en tránsito dentro de la LAN aprovechan la mayor capacidad (generalmente junto con capacidades de multidifusión) y por lo tanto no requieren un análisis de rendimiento. Por lo tanto, debemos examinar solo los paquetes RTP a través de la WAN, es decir, entre los M-CS participantes. Dado que cada M-CS de un dominio solo enviará NMax de los d paquetes M a los otros CS (MaxN d M >>), el ancho de banda utilizado por la aplicación en una WAN está limitado por la siguiente expresión. El número total de paquetes de audio que transitan por la WAN para cada intervalo de tiempo es ∑ ∑= ≠=        d i d ijj MaxN 1 ,1, lo cual es cuadrático en el número de dominios (es decir, O(d2)). Sin embargo, es independiente del número total de clientes activos. Esto no habría sido el caso si todos los paquetes se hubieran enviado por la red en cada intervalo de tiempo. El ahorro es tremendo. Sin embargo, se podría argumentar que enviar tres paquetes hacia y desde todos los dominios es un desperdicio de recursos, ya que la mayoría de estos flujos no serán seleccionados. Si solo hay un cliente activo, seleccionar un subconjunto de clientes en ese dominio es innecesario. Los algoritmos pesimistas y optimistas presentados en la secuela tienen como objetivo reducir aún más el tráfico aprovechando la naturaleza lenta y variable de la LN. 8.1 Algoritmo pesimista Consideremos un escenario en el que el LN más bajo (llamado LNt) de los tres flujos seleccionados globalmente (conjunto F de la Sección 6.1) excede el LN del flujo más dominante de un dominio. Evidentemente, las posibilidades de que los dos próximos flujos dominantes de ese dominio sean seleccionados para F en el próximo período de paquetes son menores. Aquí enviamos este flujo más dominante y retenemos los otros dos. Puede haber un error en la selección única en todos los dominios por un solo período de paquete. Como LN varía lentamente, el error se corregiría automáticamente en un período (ranura) de paquete posterior. En este algoritmo, hay al menos un flujo en cada período. El tráfico de red neto en un período de paquetes en el mejor caso es )1( −⋅ dd, es decir, )( 2 dO utilizando unicast, en lugar de MaxNdd ⋅−⋅ )1(. Se puede ahorrar un ancho de banda considerablemente valioso utilizando esta heurística. La complejidad del tráfico resultante se reduce de O(d2) a O(d) en redes habilitadas para multidifusión. Inicializar LNt = 0 en un M-CS/S-CS A. En el primer intervalo de tiempo (tiempo de paquete), cada CS envía las primeras NMax secuencias (basadas en su LN) a todos los demás CSs. En cada M-CS/S-CS y para cada tiempo de paquete: B. Encuentra el valor del LN más bajo de los flujos NMax seleccionados globalmente (conjunto F) del intervalo de tiempo anterior. Establece LNt con este valor. C. En cada dominio de CS, selecciona los NMax flujos locales que tengan el valor máximo de LN (conjunto ToOtherCSs). D. Seleccionar los flujos que tengan LN > LNt. Si hay >= NMax flujos con LN > LNt, entonces enviar los mejores NMax a otros CSs. EN OTRO CASO, si hay (NMax-1) flujos con LN>LNt, enviar los mejores (NMax-1) más el que esté por debajo de LNt (es decir, los mejores NMax) a otros CSs. EN OTRO CASO, si hay (NMax-2) flujos con LN>LNt, entonces enviar los mejores (NMax-2) más el que esté por debajo de LNt (es decir, los mejores (NMax-1)) a otros CSs. ... EN OTRO CASO, si NO hay flujos con LN>LNt, entonces enviar el mejor flujo a otros CSs. Los paquetes enviados en el paso D forman DB1. Los paquetes recibidos de otros CSs forman DB2. F. Para este intervalo de tiempo, encuentra flujos globales NMax basados en LN de DB1 y DB2 (conjunto F) G. Envía el conjunto F a los clientes en su dominio. Actualiza LNt para el próximo período. Algoritmo 2. Algoritmo pesimista para reducir el número de paquetes enviados por Internet. Fig. 6. \n\nFig. 6. Ejemplo de una jerarquía de 2 niveles de Servidores de Conferencias; los Clientes sombreados son los seleccionados por el M-CS y serán enviados a otros CSs de dominios. En este algoritmo, el ahorro en tráfico se logra a expensas de relajar la condición de formación del conjunto F globalmente único. Sin embargo, las discrepancias en los flujos seleccionados en diferentes dominios permanecen por un corto período de tiempo dependiendo del retraso en el transporte entre dos dominios. Incluso para un retraso total de 400 ms, con solo 10 ranuras de tiempo de paquete, se pierde la unicidad. Esta duración en una conversación interactiva en tiempo real no es perceptible por el oyente. En el caso de que haya una broma y todos se rían, entonces habría un aumento repentino en el número de paquetes y estaría limitado por MaxN)d(O 2 durante un corto período. 8.2 Algoritmo Optimista El tráfico puede reducirse aún más. El esquema en el siguiente algoritmo (Algoritmo 3) retiene todos los flujos que tienen un valor de LN menor que el mínimo de los tres en el conjunto F. Podemos encontrar los tres flujos correctos y únicos después de unos cuantos intervalos de tiempo, dependiendo del retraso de transporte entre los dominios. Dado que el período del paquete es del orden de 40 ms, el error en la selección es imperceptible. El número de flujos en la red en este caso siempre está restringido a NMax (=3). Incluso sin Detección de Actividad de Voz (VAD), en el mejor de los casos no habrá más de tres flujos en la red, por lo tanto, el tráfico total es constante. Una repentina oleada de tráfico, como se describe en la sección 8.1, es un caso particular. Estas ventajas se deben a la explotación de las características de LN. Inicializar LNt = 0 en un M-CS/S-CS A. En el primer intervalo de tiempo (tiempo de paquete), cada CS envía las primeras NMax secuencias (basadas en su LN) a todos los demás CS. En cada M-CS/S-CS y para cada tiempo de paquete: B. Encuentra el valor del LN más bajo de los flujos seleccionados globalmente de NMax (conjunto F) del intervalo de tiempo anterior. Establece LNt con este valor. C. En cada dominio de CS, selecciona los NMax flujos locales que tengan el valor máximo de LN (conjunto ToOtherCSs). D. Selecciona los flujos que tengan LN > LNt SI hay >= NMax flujos con LN > LNt, entonces envía los mejores NMax a otros CSs. EN OTRO CASO, si hay (NMax-1) flujos con LN>LNt, entonces enviar los primeros (NMax-1) y ver E. EN OTRO CASO, si hay (NMax-2) flujos con LN>LNt, entonces enviar los primeros (NMax-2) y ver E. ... EN OTRO CASO, si NO hay flujos con LN>LNt, entonces no enviar ningún flujo. E. Excepciones: SI el flujo que estaba en F en el último intervalo pertenece a este CS, entonces selecciona y envía ese flujo incluso si su LN es ahora < LNt. (Nota: esto ocurre solo en ese CS que tenía el flujo que fue el último de los tres en el período de paquetes anterior). Los paquetes enviados en los pasos D y E forman DB1. Los paquetes recibidos de otros CSs forman DB2. Para este intervalo de tiempo, encuentra los flujos globales NMax basados en LN de DB1 y DB2 (conjunto F). H. Envíe el conjunto F a los clientes en su dominio. Actualiza LNt para el próximo período. Algoritmo 3. Algoritmo optimista para reducir el número de paquetes enviados a través de Internet. Además, cuando se utiliza VAD [13], se reduciría aún más el tráfico al enviar solo la parte del encabezado del paquete RTP y no todo el paquete, con el fin de mantener actualizada la LN en todo momento. El tráfico aquí en este caso es O(NMax) para multicast y O(d) para unicast. Vemos que los algoritmos anteriores ahorran ancho de banda y cálculos en cada CS, y conducen a una arquitectura escalable con múltiples CS principalmente porque los clientes están agrupados en dominios. El ancho de banda necesario no depende del número total de clientes activos. Como el CS siempre elige a los tres mejores clientes de entre todos los clientes asignados en el dominio, la adición de nuevos clientes a la conferencia existente no causará ningún problema de escalabilidad. 8.3 Disponibilidad de Multidifusión En la arquitectura propuesta, no se hizo ninguna suposición sobre la disponibilidad de soporte de multidifusión de la red. El tráfico se reducirá aún más si la multidifusión está disponible a través de WAN. Es sencillo demostrar que el orden del tráfico tiende a ser O(d) en lugar de O(d2). Esta es una aproximación ya que el ahorro en la multidifusión también depende de la topología. El análisis se realizó para el caso en el que la multidifusión no está disponible (una suposición realista en el Internet de hoy en día). La ventaja de esta configuración es que podemos usarla incluso si la multidifusión está parcialmente disponible. Podemos instruir a los CSs durante la fase de configuración para enviar paquetes unicast a aquellos CSs que no pueden recibir paquetes multicast, mientras que los CSs en enrutadores habilitados para multicast pueden intercambiar paquetes en una dirección multicast. Las estructuras de datos y objetos de conferencia dentro de una CS se encuentran en [14]. Fig. 7. \n\nFig. 7. Interfaz de usuario para establecer el peso de las corrientes de audio NMax (establecer la barra de auto a cero evita el eco). Mejora de calidad 8.4 La mejora observada en la calidad percibida del servicio de conferencias se debe a: (1) limitar el número de oradores concurrentes a un número bajo, como tres. Generalmente, en una conferencia, si hablan más de dos participantes se pierde la inteligibilidad. El análisis conversacional demuestra que en tal caso habría un mecanismo de reparación [15]. (2) Retraso: La transmisión de audio entre dos clientes pasará como máximo por dos servidores centrales, reduciendo así el retraso de extremo a extremo. Para una conferencia grande puede haber tres CSs, sin embargo, un salto está dentro del dominio incurriendo en un retraso insignificante. (3) Dado que las transmisiones se mezclan solo en los clientes, puede haber una mezcla personalizada de las transmisiones. La sintonización individual de la mezcla con pesos preserva el espacialismo. La Fig. 7 muestra la interfaz de usuario para lo mismo. El eco al seleccionar la auto-transmisión se puede evitar reduciendo el peso. Sin embargo, la retroalimentación ayuda a asegurar al hablante de que está siendo escuchado por todos. CONCLUSIÓN En este artículo, hemos presentado una discusión sobre un <br>entorno de conferencias virtuales solo de voz</br>. Hemos argumentado que la naturaleza distribuida de la implementación aquí la hace escalable. La interactividad se logra adaptando un esquema reciente de selección de flujo basado en el Número de Sonoridad. Además, incorporamos un resultado de un trabajo más reciente [15] donde se ha demostrado la suficiencia de tres hablantes simultáneos. Por lo tanto, hay una utilización significativamente efectiva del ancho de banda. Un flujo mixto se reproduce en cada cliente; cada cliente puede elegir tener una mezcla personalizada ya que la mezcla se realiza en el terminal local de cada cliente. Estos permiten que el discurso improvisado en una videoconferencia virtual a través de VoIP sea una realidad, como en una conferencia presencial real. La compatibilidad está asegurada gracias al uso de SIP, el protocolo de señalización más buscado. Para garantizar un rendimiento satisfactorio, no exigimos la disponibilidad de multidifusión, pero la utilizamos si está disponible. El tráfico en la WAN (Internet) está limitado por arriba por el cuadrado del número de dominios, --además se reduce aún más mediante el uso de algoritmos heurísticos-- lo cual está muy por debajo del número total de clientes en la conferencia. Esto se debe al uso de un Servidor de Conferencias local para cada dominio. Las técnicas de VAD ayudan a reducir aún más el tráfico. El uso del estándar SIP para la señalización hace que esta solución sea altamente interoperable. Hemos implementado una aplicación de CS en una red de campus. Creemos que esta nueva generación de entornos de conferencias virtuales ganará más popularidad en el futuro, ya que su facilidad de implementación está garantizada gracias a las tecnologías fácilmente disponibles y los marcos escalables. REFERENCIAS [1] L. Aguilar et al., Arquitectura para un Sistema de Teleconferencia Multimedia, en Actas de ACM SIGCOMM, Ago 1986, pp. 126-136. [2] Carsten Bormann, Joerg Ott et al., Protocolo de Control de Conferencias Simple, Borrador de Internet, Dic. 1996. [3] M. Decina y V. Trecordi, Voz sobre Protocolo de Internet y Comercio Electrónico Asistido por Humanos, IEEE Comm. Revista, septiembre de 1999, pp. 64-67. [4] Eckehard Doerry, Una comparación empírica de la interacción copresente y mediada tecnológicamente basada en la ruptura comunicativa, Tesis de doctorado, Escuela de Graduados de la Universidad de Oregón, 1995. [5] H. P. Dommel y J.J. Garcia-Luna-Aceves, Control de piso para conferencias y colaboración multimedia, J. Sistemas Multimedia, Vol. 5, No. 1, enero de 1997, pp. 23-38. [6] Amitava Dutta-Roy, Reuniones virtuales con videoconferencias de escritorio, IEEE Spectrum, julio de 1998, pp. 47-56. [7] M. Handley y V. Jacobson, SDP: Protocolo de Descripción de Sesiones, RFC 2327, IETF, abril de 1998. [8] M. Handley, J. Crowcroft et al., Conferencias muy grandes en Internet: la arquitectura de conferencias multimedia en Internet, Revista de Redes de Computadoras, vol. 31, No. 3, febrero de 1999, pp. 191-204. [9] Rec. ITU-T. H.323, Sistemas de Comunicaciones Multimedia basados en Paquetes, vol. 2, 1998. [10] P. Koskelainen, H. Schulzrinne y X. Wu, Un Marco de Control de Conferencias basado en SIP, NOSSDAV02, mayo de 2002, pp. 53-61. [11] R Venkatesha Prasad et al., Protocolo de Control para Soporte de Conferencias de Audio VoIP, Conferencia Internacional sobre Tecnología de Comunicación Avanzada, Mu-Ju, Corea del Sur, febrero de 2001, pp. 419-424. [12] R Venkatesha Prasad et al., Adición y Eliminación Automáticas de Clientes en Conferencias VoIP, 6º Simposio IEEE sobre Computadoras y Comunicaciones, julio de 2001, Hammamet, Túnez, pp. 386-390. [13] R Venkatesha Prasad, H S Jamadagni, Abjijeet, et al Comparación de Algoritmos de Detección de Actividad de Voz, 7º Simposio IEEE sobre Computadoras y Comunicaciones. Julio de 2002, Sicilia, Italia, pp. 530-535. [14] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, Una Conferencia VoIP Distribuida Escalable utilizando SIP, Actas del 8º Simposio de Computadoras y Comunicaciones de IEEE, Antalya, Turquía, junio de 2003. [15] R Venkatesha Prasad, H S Jamadagni y H N Shankar, Sobre el Problema de Especificar el Número de Pisos en una Conferencia Solo de Voz, Por aparecer en IEEE ITRE 2003. [16] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, Una Propuesta para Conferencias Distribuidas en SIP utilizando Servidores de Conferencias, Por aparecer en las Actas de MMNS 2003, Belfast, Reino Unido, septiembre de 2003. [17] R. Venkatesha Prasad, H.S. Jamadagni, J. Kuri, R.S. Varchas, un soporte de conferencias VoIP distribuido que utiliza el número de sonoridad, Tech. Rep. TR-CEDT-TE-03-01 [18] M. Radenkovic et al, Servicio de audio escalable y adaptable para apoyar el trabajo colaborativo y el entretenimiento a través de Internet, SSGRR 2002, LAquila, Italia, enero de 2002. [19] M. Radenkovic, C. Greenhalgh, S. Benford, Problemas de implementación para el soporte de audio multiusuario en CVEs, ACM VRST 2002, noviembre de 2002, pp. 179-185. [20] Srinivas Ramanathan, P. Venkata Rangan, Harrick M. Vin, Diseñando arquitecturas de comunicación para la colaboración multimedia interorganizacional, Journal of Organizational Computing, 2 (3&4), pp.277-302, 1992. [21] A. B. Roach, Notificación de Eventos Específicos del Protocolo de Inicio de Sesión (SIP), RFC 3265, IETF, junio de 2002. [22] J. Rosenberg, H. Schulzrinne et al., SIP: Protocolo de Inicio de Sesión, RFC 3261, IETF, junio de 2002. [23] J. Rosenberg, H. Schulzrinne, Modelos para Conferencias de Múltiples Partes en SIP, Borrador de Internet, IETF, julio de 2002. [24] H. Schulzrinne et al., RTP: un protocolo de transporte para aplicaciones en tiempo real, RFC 1889, IETF, enero de 1996. [25] Lisa R. Silverman, Llegada a la Madurez: Soluciones de Conferencias que Reducen Costos Corporativos, Documento Técnico, www.imcca.org/wpcomingofage.asp [26] Kundan Singh, Gautam Nair y Henning Schulzrinne, Conferencias Centralizadas utilizando SIP, Actas del 2do Taller de IP-Telefonía (IPTel), abril de 2001. [27] D. Thaler, M. Handley y D. Estrin, Arquitectura de Asignación de Direcciones de Multidifusión en Internet, RFC 2908, IETF, septiembre de 2000. ",
            "candidates": [],
            "error": [
                [
                    "entorno de conferencias virtuales",
                    "Entorno de Conferencias Virtuales",
                    "entorno de conferencias virtuales solo de voz"
                ]
            ]
        },
        "conference server": {
            "translated_key": "Servidor de Conferencias",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Deployment Issues of a VoIP Conferencing System in a Virtual Conferencing Environment R. Venkatesha Prasad i Richard Hurni ii H.S.",
                "Jamadagni iii H.N.",
                "Shankar iv i, iii Centre for Electronics Design and Technology Indian Institute of Science, Bangalore, India Telephone: +91 80 360 0810 i, iii {vprasad, hsjam}@cedt.iisc.ernet.in ii hurni@ieee.org iv hn_shankar@yahoo.com ABSTRACT Real-time services have been supported by and large on circuitswitched networks.",
                "Recent trends favour services ported on packet-switched networks.",
                "For audio conferencing, we need to consider many issues - scalability, quality of the conference application, floor control and load on the clients/servers - to name a few.",
                "In this paper, we describe an audio service framework designed to provide a Virtual Conferencing Environment (VCE).",
                "The system is designed to accommodate a large number of end users speaking at the same time and spread across the Internet.",
                "The framework is based on Conference Servers [14], which facilitate the audio handling, while we exploit the SIP capabilities for signaling purposes.",
                "Client selection is based on a recent quantifier called Loudness Number that helps mimic a physical face-to-face conference.",
                "We deal with deployment issues of the proposed solution both in terms of scalability and interactivity, while explaining the techniques we use to reduce the traffic.",
                "We have implemented a <br>conference server</br> (CS) application on a campus-wide network at our Institute.",
                "Categories and Subjects Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - Client / Server, distributed applications.",
                "General Terms Algorithms, Performance, Design, Theory. 1.",
                "INTRODUCTION Todays Internet uses the IP protocol suite that was primarily designed for the transport of data and provides best effort data delivery.",
                "Delay-constraints and characteristics separate traditional data on the one hand from voice & video applications on the other.",
                "Hence, as progressively time-sensitive voice and video applications are deployed on the Internet, the inadequacy of the Internet is exposed.",
                "Further, we seek to port telephone services on the Internet.",
                "Among them, virtual conference (teleconference) facility is at the cutting edge.",
                "Audio and video conferencing on Internet are popular [25] for the several advantages they inhere [3,6].",
                "Clearly, the bandwidth required for a teleconference over the Internet increases rapidly with the number of participants; reducing bandwidth without compromising audio quality is a challenge in Internet Telephony.",
                "Additional critical issues are: (a) packet delay, (b) echo, (c) mixing of audio from selected clients, (d) automatic selection of clients to participate in the conference, (e) playout of mixed audio for every client, (f) handling clients not capable of mixing audio streams (such clients are known as dumb clients), and (g) deciding the number of simultaneously active clients in the conference without compromising voice quality.",
                "While all the above requirements are from the technology point of view, the users perspective and interactions are also essential factors.",
                "There is plenty of discussion amongst HCI and CSCW community on the use of Ethnomethodology for design of CSCW applications.",
                "The basic approach is to provide larger bandwidth, more facilities and more advanced control mechanisms, looking forward to better quality of interaction.",
                "This approach ignores the functional utility of the environment that is used for collaboration.",
                "Eckehard Doerry [4] criticizes this approach by saying it is keeping form before function.",
                "Thus, the need is to take an approach that considers both aspects - the technical and the functional.",
                "Regarding the functional aspect, we refer to [15] where it has been dealt with in some detail.",
                "In this work, we do not discuss video conferencing; its inclusion does not significantly benefit conference quality [4].",
                "Our focus is on virtual audio environments.",
                "We first outline the challenges encountered in virtual audio conferences.",
                "Then we look into the motivations followed by relevant literature.",
                "In Section 5, we explain the architecture of our system.",
                "Section 6 comprises description of the various algorithms used in our setup.",
                "We address deployment issues.",
                "A discussion on Swiss Federal Institute of Technology, Lausanne.",
                "Former visitor at CEDT.",
                "PESIT and NIAS, Bangalore, India.iv ii performance follows.",
                "We conclude taking alongside some implementation issues. 2.",
                "CHALLENGES IN VoIP CONFERENCING Many challenges arise in building a VoIP application.",
                "The following are of particular concern in the process: • Ease of use: Conferencing must be simple; users need no domain expertise.",
                "Management (addition/removal) of clients and servers must be uncomplicated.",
                "Application development should not presuppose specific characteristics of the underlying system or of network layers.",
                "Ease of use may include leveraging readily available, technically feasible and economically viable technologies. • Scalability: Conferencing must seem uninterrupted under heavy loads, i.e., when many additional users are added on.",
                "Traffic on WAN should not grow appreciably with the total number of clients; else, this has lead to congestion.",
                "So a means to regulate traffic to a minimum is needed for this kind of real-time applications. • Interactivity: In Virtual Conferencing Environments (VCEs), we intend a face-to-face-like conferencing application that mimics a real conference, where more vocal participants invite attention.",
                "Turn-taking in floor occupation by participants must be adapted gracefully to give a feel of natural transition. • Standardization: The solution must conform to established standards so as to gain interoperability and peer acceptance.",
                "The above requirements are placed in the perspective of observations made in earlier works (vide Sections 3 and 4) and will steer the VCE design. 3.",
                "THE MOTIVATION Ramanathan and Rangan [20] have studied in detail the architectural configurations comparing many conferencing architecture schemes taking into consideration the network delay and computation requirements for mixing.",
                "Functional division and object-oriented architecture design that aid in implementation is presented in [1].",
                "An overview of many issues involved in supporting a large conference is dealt in [8].",
                "H. P. Dommel [5] and many others highlight floor control as another pivotal aspect to be taken into account in designing a conferencing tool.",
                "Tightly coupled conference control protocols in Internet belong to the ITU-T H.323 family [9]; however, they are mainly for small conferences.",
                "The latest IETF draft by Rosenberg and Schulzrinne [23] discusses conferencing models with SIP [22] in the background.",
                "Aspects of implementation for centralized SIP conferencing are reported in [26].",
                "A new approach called partial mixing by Radenkovic [18] allows for mixed and non-mixed streams to coexist.",
                "In all the above proposals, while there are some very useful suggestions, they share one or more of the following limitations: • In an audio conference, streams from all the clients need not be mixed.",
                "Actually, mixing many arbitrary streams [24] from clients degrades the quality of the conference due to the reduction in the volume (spatial aspect of speech).",
                "The number of streams mixed varies dynamically depending on the number of active participants.",
                "This would lead to fluctuations in the volume of every individual participant causing severe degradation in quality.",
                "Customized mixing of streams is not possible when many clients are active.",
                "There is a threshold on the number of simultaneous speakers above which increasing the number of speakers becomes counterproductive to conference quality.",
                "Fixing the maximum number of simultaneous speakers is dealt in a recent work [15] using Ethnomethodology, and is conjectured to be three.",
                "Thus it is advisable to honour that constraint. • There cannot be many intermediate mixers (similarly, Conference Servers as in [10]) in stages as in [20] because it brings in inordinate delay by increasing the number of hops and is not scalable with interactivity in focus. • Floor Control for an audio conference (even video conference) with explicit turn-taking instructions to participants renders the conference essentially a one-speakerat-a-time affair, not a live and free-to-interrupt one.",
                "This way, the conference becomes markedly artificial and its quality degrades.",
                "Schulzrinne et al. [24], assume only one participant is speaking at a time.",
                "In this case, if applications are implemented with some control [5], the service becomes gagging for the users. • Partial mixing [18] has a similar problem as that of mixing when more streams are mixed.",
                "Moreover, in [18], to allow impromptu speech, mixing is not done when the network can afford high bandwidth requirements for sending/receiving all the streams, but it is unnecessary [15]. • For large conferences [23, 10] a centralized conference cannot scale up.",
                "With multicasting, clients will have to parse many streams and traffic on a clients network increases unnecessarily.",
                "Evidently, different particular issues, all of which are a subset of requirements (defined in [14] and [16]) for a VoIP conferencing support, are tackled.",
                "Thus there is a need to address conferencing as a whole with all its requirements considered concurrently.",
                "Towards this goal, the VoIP conferencing system we propose is intended to be scalable and interactive.",
                "We make use of the Loudness Number for implementing floor control.",
                "This permits a participant to freely get into the speaking mode to interrupt the current speaker as in a natural face-to-face meeting.",
                "An upper limit on the number of floors (i.e., the number of speakers allowed to speak at the same time) is fixed using a conjecture proposed in [15].",
                "The work presented here is in continuation of our studies into conferencing based on the Session Initiation Protocol in [14] and [16].",
                "SIP, defined in [22] is now the most popular standard for VoIP deployment and has been chosen for its strength, ease of use, extensibility and compatibility.",
                "This is the reason it will be in the background of all controlling messages that will implicitly arise between the entities in our architecture.",
                "The actual messages are described in [16] and, as such, we do not present a complete description of them here. 4.",
                "RELATED WORK The SIP standard defined in RFC 3261 [22] and in later extensions such as [21] does not offer conference control services such as floor control or voting and does not prescribe how a conference is to be managed.",
                "However SIP can be used to initiate a session that uses some other conference control protocol.",
                "The core SIP specification supports many models for conferencing [26, 23].",
                "In the server-based models, a server mixes media streams, whereas in a server-less conference, mixing is done at the end systems.",
                "SDP [7] can be used to define media capabilities and provide other information about the conference.",
                "We shall now consider a few conference models in SIP that have been proposed recently [23].",
                "First, let us look into server-less models.",
                "In End-System Mixing, only one client (SIP UA) handles the signaling and media mixing for all the others, which is clearly not scalable and causes problems when that particular client leaves the conference.",
                "In the Users Joining model, a tree grows, as each invited party constitutes a new branch in the distribution path.",
                "This leads to an increasing number of hops for the remote leaves and is not scalable.",
                "Another option would be to use multicast for conferencing but multicast is not enabled over Internet and only possible on a LAN presently.",
                "Among server-based models, in a Dial-In Conference, UAs connect to a central server that handles all the mixing.",
                "This model is not scalable as it is limited by the processing power of the server and bandwidth of the network.",
                "Adhoc Centralized Conferences and Dial-Out Conference Servers have similar mechanisms and problems.",
                "Hybrid models involving centralized signaling and distributed media, with the latter using unicast or multicast, raise scalability problems as before.",
                "However an advantage is that the conference control can be a third party solution.",
                "Distributed Partial Mixing, presented in [18], proposes that in case of bandwidth limitation, some streams are mixed and some are not, leaving interactivity intact.",
                "Loss of spatialism when they mix and the bandwidth increase when they do not are open problems.",
                "A related study [19] by the same author proposes conferencing architecture for Collaborative Virtual Environments (CVEs) but does not provide the scalability angle without the availability of multicasting.",
                "With the limitations of proposed conferencing systems in mind, we will now detail our proposal. 5.",
                "SYSTEM ARCHITECTURE This section is dedicated to the description of the proposed system architecture.",
                "However, as this paper constitutes the continuation of our work started in [14] and furthered in [16], we will not present here all the details about the proposed entities and invite the readers to consult the papers mentioned above for a full and thorough description.",
                "First, we do not restrict our conferencing system to work on small conferences only, but rather on large audio VCEs that have hundreds (or even thousands) of users across a Wide Area Network (WAN) such as the Internet.",
                "This view stems from an appraisal that VCEs will gain in importance in the future, as interactive audio conferences will be more popular because of the spread of the media culture around the world.",
                "Two issues must be taken care of when building a VoIP conferencing system: (i) the front-end, consisting of the application program running on the end-users computers and (ii) the back-end that provides other application programs that facilitate conferencing and conference.",
                "The participating users are grouped into several domains.",
                "These domains are Local Area Networks (LANs), such as corporate or educational networks.",
                "This distributed assumption asks for distributed controlling and media handling solutions, as centralized systems would not scale for such very large conferences (vide Section 4).",
                "More explicitly, in each domain, we can identify several relevant logical components of a conferencing facility (Fig. 1):  An arbitrary number of end users (clients) that can take part in at most one audio conference at a time.",
                "Every user is Fig. 1.",
                "Conference example - 3 domains containing the necessary entities so that the conference can take place. included in one and only one domain at a given instant, but can move from domain to domain (nomadism).",
                "In our conferencing environment, these clients are regular SIP User Agents (SIP UAs), as defined in [22] so to gain in interoperability with other existing SIP-compatible systems.",
                "These clients are thus not aware of the complex setting that supports the conference and this is highlighted below.  One SIP Server (SIPS) per domain, taking care of all the signaling aspects of the conference (clients joining, leaving, etc.) [16].",
                "In particular, it is considered as a physical implementation encompassing different logical roles, namely a SIP Proxy Server, a SIP Registrar Server, a SIP Redirect Server and a SIP B2BUA (Back-to-Back User Agent) [22].",
                "This physical implementation enables the handling of incoming/outgoing SIP messages by one or another logical entity according to the needs.",
                "SIPS is entrusted with maintaining total service and has many advantages such as (a) it works as a centralized entity that can keep track of the activities of the UAs in a conference; (b) it can do all the switching for providing PBX features; (c) it can locate the UAs and invite them for a conference; (d) it can do the billing as well.",
                "SIPSs in different domains communicate with each other using SIP messages as described in [16].",
                "If the load on a particular SIPS is too heavy, it can create another SIPS in the same domain so that the load will be shared.  One Master <br>conference server</br> (M-CS) (simply a <br>conference server</br> (CS)) for each conference is created by the local SIPS when a conference starts.",
                "This server will be used for handling media packets for the clients of the domain.",
                "Its mechanism will be described in the next section.",
                "The M-CS will be able to create a hierarchy of CSs inside a domain by adding one or more Slave CSs (S-CSs) to accommodate all the active clients and prevent its own flooding at the same time.",
                "We will see this mechanism in some detail in the sequel.",
                "The entities described here are exhaustive and conform to the SIP philosophy.",
                "Thus, the use of SIP makes this architecture more useful and interoperable with any other SIP clients or servers. 6.",
                "ALGORITHMIC ISSUES 6.1 Selecting the Streams Similar to SipConf in [27], a <br>conference server</br> (CS) [17] has the function of supporting the conference; it is responsible for handling audio streams using RTP.",
                "It can also double to convert audio stream formats for a given client if necessary and can work as Translators/Mixers of RTP specification behind firewalls.",
                "We have based the design of our CS on H.323 Multipoint Processor (MP) [9].",
                "In short, the MP receives audio streams from the endpoints involved in a centralized or hybrid multipoint conference, processes them and returns them to the endpoints.",
                "An MP that processes audio prepares NMax audio outputs from M input streams after selection, mixing, or both.",
                "Audio mixing requires decoding the input audio to linear signals (PCM or analog), performing a linear combination of the signals and reencoding the result in an appropriate audio format.",
                "The MP may eliminate or attenuate some of the input signals in order to reduce noise and unwanted components.",
                "Fig. 2.",
                "Schematic diagram of a CS The limitation of H.323 is that it does not address the scalability of a conference.",
                "The architecture proposes a cascaded or daisy chain topology [10], which can be shown that it cannot scale up for a large conference.",
                "A CS serves many clients in the same conference.",
                "Thus it handles only one conference at a time.",
                "Multiple CSs may coexist in a domain, as when there are several conferences under way.",
                "Signaling-related messages of CSs are dealt in [11].",
                "The working of a CS is illustrated on Fig. 2: For each mixing interval, CS 1 chooses the best NMax audio packets out of the M1 (using a criterion termed Loudness Number, described in the next subsection).",
                "It may possibly receive and sends these to CSs 2 to P. The set of packets sent is denoted as ToOtherCSs.",
                "In the same mixing interval, it also receives the best NMax audio packets (out of possibly M2) from CS 2, similarly the best NMax (out of possibly MP) from CS P. For simplicity, we ignore propagation delay between CSs which indeed can be taken into account; it is beyond the scope of this presentation.",
                "The set of packets received is denoted as FromOtherCSs.",
                "Finally, it selects the best NMax packets from the set {ToOtherCSs union FromOtherCSs} and passes these packets to its own group.",
                "It can be seen that the set {ToOtherCSs union FromOtherCSs} is the same at all CSs.",
                "This ensures that any client in the conference finally receives the same set of packets for mixing.",
                "Hence all clients obtain a common view of the conference.",
                "Similarly, for each time slot (packet time), a subset, F of all clients is selected (using the same criterion) from the pool of packets from all other CSs plus the NMax clients selected locally.",
                "Their packets are mixed and played out at the clients.",
                "According to [15], the cardinality of F, |F| is NMax and is fixed at three.",
                "In our conferencing setup, selection is by the Master <br>conference server</br> (M-CS), which comes into the picture exclusively for media handling.",
                "Note that even if the SIP specification enables direct UA-to-UA media communication in a one-to-one call, it is also possible to use the <br>conference server</br> for two-party calls, especially because it is then more functional to create a real conference by adding a third and subsequently more participant(s).",
                "There are cases wherein the processing capacity of an M-CS is exceeded as it may have too many packets - from local domains and from remote domains - to process.",
                "In that case, the M-CS will create one or many S-CS (Fig. 6) and transfer its own clients as well as the new clients to them.",
                "In this configuration, the algorithm outlined above will be slightly modified, as the audio packets will go from clients to their dedicated S-CS that will select NMax packets to send to the local M-CS, which will then select NMax packets from all its S-CSs in the domain before sending them to the remote domains.",
                "The incoming packets from other domains will be received by the M-CS, select NMax of them and send them directly to the domain clients, bypassing the SCSs.",
                "This change implies that at most three intermediate entities exist for each audio packet, instead of two in the conventional setup.",
                "As the extra hop happens inside the LAN supposed to have a high-speed connectivity, we consider that it should not prevent us from using this hierarchy of CSs when theres a need to do so. 6.2 Loudness Number (LN) A basic question to be answered by the CS is the following.",
                "In a mixing interval, how should it choose NMax packets out of the M it might possibly receive?",
                "One way is to rank the M packets received according to their energies, and choose the top NMax.",
                "However, this is usually found to be inadequate because random fluctuations in packet energies can lead to poor audio quality.",
                "This indicates the need for a metric different from mere individual packet energies.",
                "The metric should have the following characteristics [12]: • A speaker (floor occupant) should not be cut off by a spike in the packet energy of another speaker.",
                "This implies that a speakers speech history should be given some weight.",
                "This is often referred to as Persistence or Hangover. • A participant who wants to interrupt a speaker will have to (i) speak loudly and (ii) keep trying for a little while.",
                "In a face-to-face conference, body language often indicates the intent to interrupt.",
                "But in a blind conference under discussion, a participants intention to interrupt can be conveyed effectively through LN.",
                "A floor control mechanism empowered to cut off a speaker forcefully must be ensured.",
                "These requirements are met by Loudness Number [12], which changes smoothly with time so that the selection (addition and deletion) of clients for conference is graceful.",
                "LN (= ) is a function of the amplitude of the current audio stream plus the activity and amplitude over a specific window in the past.",
                "Fig. 3.",
                "The different windows used for LN computation The Loudness Number is updated on a packet-by-packet basis.",
                "The basic parameter used here is packet amplitude, which is calculated as root mean square (rms) of the energies in audio samples of a packet, and denoted by XK.",
                "Three windows are defined as shown in Fig. 3.",
                "The present amplitude level of the speaker is found by calculating the moving average of packet amplitude (XK) within a window called Recent Past Window starting from the present instant to some past time.",
                "The past activity of the speaker is found by calculating the moving average of the packet amplitude (XK) within a window called Distant Past Window, which starts at the point where the Recent Past window ends and stretches back in the past for a pre-defined interval.",
                "The activity of the speaker in the past is found with a window called Activity Horizon, which spans the recent past window as well as the distant past window and beyond if necessary.",
                "Though the contribution of the activity horizon looks similar to the contribution of the recent past and distant past windows, past activity is computed from activity horizon window in a differently.",
                "Define the quantities during these three intervals as L1, L2 and L3.",
                "L1 quantifies the Recent Past speech activity, L2 the Distant Past speech activity and L3 gives a number corresponding to the speech activity in the Activity Horizon window quantifying how active the speaker was in the past few intervals.",
                "L3 yields a quantity that is proportional to the fraction of packets having energies above a pre-defined threshold (Eq. 3).",
                "The threshold is invariant across clients. ∑ +− = = 1 1 1 RPP P Wt tK K RP X W L (1) ∑ +−− −= = 1 2 1 DPRPP RPP WWt WtK K DP X W L (2) ∑ +− = ≥= 1 }{3 * 1 AHP P K Wt tK X AH I W L θθ (3) Where ifI KX 1}{ =≥θ θ≥KX = otherwise,0 The threshold is a constant. is set at 10-20 percent of the amplitude of the voice samples of a packet in our implementation here.",
                "Loudness Number λ for the present time instant (or the present packet) is calculated as, 332211 *L*L*L αααλ ++= (4) Here 1\u000f 2 DQG 3 are chosen such that: 0< 1\u000f 2\u001f\u0014\u000f \u0013\u001f 1\u000e 2\u001f\u0014 DQG 3=1-\u000b 1\u000e 2) Here, 1 is the weight given to the recent past speech, 2 is the weight given to distant past speech and 3 is the weight given to speech activity in the activity horizon window considered. 6.3 Safety, Liveness and Fairness The λ parameter KDV VRPH PHPRU\\ GHSHQGLQJ RQ WKH VSUHDG RI the windows.",
                "After one conferee becomes silent, another can take the floor.",
                "Also, as there is more than one channel, interruption is enabled.",
                "A loud conferee is more likely to be heard because of elevated λ.",
                "This ensures fairness to all conferees.",
                "After all, even in a face-to-face conference, a more vocal speaker grabs special attention.",
                "All these desirable characteristics are embedded into the LN.",
                "A comprehensive discussion on selection of the various parameters and the dynamics of LN are beyond the scope of this paper. 6.4 Selection Algorithm using the LN Following the developments in subsections 6.1 and 6.2, we present the simple algorithm that runs at each Master-<br>conference server</br> (Algorithm. 1).",
                "This algorithm is based on the discussions in section 6.1.",
                "The globally unique set F is found using this procedure.",
                "Repeat for each time slot at each M-CS { 1.",
                "Get all the packets from the Clients that belong to it. 2.",
                "Find at most NMax Clients that have PD[LPXP RXW RI 0 &OLHQWV LQ LWV GRPDLQ\u0011 3.",
                "Store a copy of packets from those NMax Clients in database DB1. 4.",
                "Send these NMax packets to other M-CSs (on Unicast or Multicast, depending on the configuration). 5.",
                "Similarly, receive packets from all other M-CSs and store them in database DB2. 6.",
                "Now compare the packets in DB1 and DB2 on WKH EDVLV RI DQG VHOHFW D PD[LPXP RI NMax amongst them (to form set F) that should be played out at each Client. 7.",
                "Send the NMax packets in set F to the Clients in its domain. 8.",
                "Mix these NMax audio packets in set F after linearising and send it to dumb Clients in the domain. }",
                "Algorithm 1.",
                "Selection algorithm The mechanism proposed here is also depicted on Fig. 6, where a single conference takes place between three domains.",
                "The shaded clients are the ones selected in their local domains; their audio streams will be sent to other CSs. 7.",
                "DEPLOYMENT ISSUES We now analyze deployment issues associated with conference management.",
                "How are domains to be organized to maximize the number of participants able to join?",
                "To address this, we define some useful parameters.  Let d be the number of different domains in which there are active clients in a given conference.  Let Mi be the number of active clients present in domain i ( di ≤≤1 ) in a given conference.",
                "The total number of active clients in the conference is thus ∑= = d i iMM 1 .  Let C be the maximum number of audio streams a <br>conference server</br> can handle in a packet time, also called capacity.",
                "C is set according to the processing power of the weakest CS in the conference but as it cannot be assumed that we know it a-priori, it can be set according to some minimum system requirement a machine must meet in order to take part in a conference.  Let NMax be the number of output streams a CS has to send to other CSs in remote domains (see section 6.1).",
                "We will set NMax =3 (=|F|), according to [15].",
                "The optimization problem is now to find the value of d that maximizes the total number of clients Mi served by one CS in a domain with capacity C. We first dispose the case where the capacity is not exceeded (the existing CS is not overloaded), and then proceed to the case where there exists a need to create more CSs when a single CS is overloaded.",
                "We assume that clients are equally distributed amongst the domains, as we may not have information to assume an a-priori distribution of the clients.",
                "We can specify no more than an upper bound on the number of clients acceptable, given the number of active domains d. 7.1 Conferencing with only One Level of CSs In this subsection, we consider that we have only one CS, i.e., a unique M-CS in each domain.",
                "Thus it cannot be overloaded.",
                "We consider that the system works as outlined in section 6.1: The Clients send their audio packets to their local CS, which selects NMax streams, before sending them to other CSs.",
                "In parallel, it also receives NMax streams for every other CSs before taking a decision on which NMax streams will be selected, sent and played out at each individual clients.",
                "For system stability, any CS in the conference should be able to handle its local clients in addition to the audio packets from other domains.",
                "Clearly then, the following inequality must hold for every domain: )1( −⋅+≥ dN d M C Max (5) The limiting case of (5) (taking the equality) takes the form 2 )( dNdNCM MaxMax ⋅−⋅+= (6) To optimize d with respect to M, we set 0)(2 =+−⋅⋅= ∂ ∂ MaxMax NCdN d M (7) yielding     ⋅ + = Max Max N NC d 2 (8) ([ ]* = Rounding to nearest integer) and hence, M from (6).",
                "C d M 50 9 234 100 17 884 150 26 1950 200 34 3434 250 42 5334 300 51 7650 350 59 10384 400 67 13534 450 76 17100 500 84 21084 Table 1.",
                "Values of d and M computed for some values of C with NMax = 3.",
                "In Table 1, we give the values of d and M that were computed using (8) and (6) with NMax = 3.",
                "We see that the values of d and M, being dependent of C, are therefore based on the weakest CS.",
                "We see that there is a trade-off between M and d. We could admit more domains in the conference, but at the expense of restricting the total number of clients M in the conference.",
                "While implementing and testing the Conference Servers on a Pentium III 1.4 GHz running Windows NT, we were able to set C=300.",
                "But with the advent of faster computers (> 3 GHz), one can easily set C to higher values and determine d and M accordingly.",
                "Fig. 4 shows a contour plot and Fig. 5, a 3D-mesh showing optimized solutions for CSs of different capacities.",
                "These lead us to maximize the number of domains, and hence, to maximize the total number of clients based on the capacity of various CSs.",
                "In Fig. 4, the individual curves represent the total number of clients targeted, and we select a lower value of d, for capacity C, for targeted M to reduce traffic on WAN.",
                "Fig. 5 represents a different perspective of the same data in 3D.",
                "Fig. 4.",
                "Contour Plot of Capacity versus Optimum number of domains for various conference sizes 7.2 Conferencing with Two Levels of CSs Now considering the case where the number of clients in a particular domain is too large, i.e., d M Mi ≥ (9) one has to avoid the denial of service for new clients due to overloading of <br>conference server</br>.",
                "This problem can be solved by introducing a second level of CSs inside the given domain, as in Fig. 6.",
                "The existing M-CS creates a Slave CS (S-CS) that can handle up to C end-users and to which it transfers all its active clients.",
                "Here, the system works differently as outlined in section 6.1: The Clients send their audio packets to their local S-CS, which selects NMax streams, before sending them to a local M-CS, which will proceed in the same way, before sending NMax streams to the other domains.",
                "Each newly created S-CS must run on a separate machine.",
                "The M-CS has to create more S-CSs if the number of active clients exceeds C in the course of the conference after the transfer.",
                "With this mechanism, the M-CS will be able to create utmost     −⋅− = Max Max N dNC U )1( S-CSs, (10) as it must handle 3 (= NMax) packets for each local S-CSs and 3 (= NMax) packets from each other remote domains.",
                "We can then calculate the maximum theoretical number of active clients CUMi ⋅= in each domain as well as M, for the whole conference as CUdM ⋅⋅= .",
                "Fig. 5. 3D Plot of Capacity versus Optimum number of domains for various conference sizes Of course, one could further create a third level in the hierarchy, giving the possibility of accommodating even more clients.",
                "This may be unnecessary as the number of possible clients is large enough with two levels. 8.",
                "PERFORMANCE DISCUSSION We now analyze the performance of the algorithm presented in subsection 6.3, i.e., the one taking care of the exchange of audio packets between the different domains.",
                "Note that the packets that are transiting within the LAN take advantage of the higher capacity (generally coupled with multicast capabilities) and therefore do not require a performance analysis.",
                "Thus we have to look only at the RTP packets over the WAN, i.e., between participating M-CSs.",
                "As each M-CS from a domain will be sending only NMax out of d M packets to the other CSs ( MaxN d M >> ), the bandwidth used by the application over a WAN is upper-bounded by the following expression.",
                "The total number of audio packets transiting over the WAN for each time slot is ∑ ∑= ≠=        d i d ijj MaxN 1 ,1 which is quadratic in the number of domains (i.e., O(d2 )).",
                "However, it is independent of the total number of active clients.",
                "This would not have been the case had all packets been sent over the network in each time slot.",
                "The saving is tremendous.",
                "Yet, one may contend that sending three packets to and from all domains is a waste of resources, as most of these streams will not be selected.",
                "If just one client is active, selecting a subset of clients in that domain is unnecessary.",
                "Pessimistic and optimistic algorithms as presented in the sequel aim at reducing the traffic further by harnessing the slow varying nature of the LN. 8.1 Pessimistic algorithm Consider a scenario wherein the lowest LN (called LNt) of the three globally selected streams (set F of Section 6.1) exceeds the LN of the most dominant stream of a domain.",
                "Evidently, the chances that the next two dominant streams of that domain being selected to F in the next packet period are less.",
                "Here, we send this most dominant stream and withhold the other two.",
                "There may be an error in unique selection across all domains for one packet period only.",
                "As LN varies slowly, the error would get automatically rectified in a subsequent packet period (slot).",
                "In this algorithm, there is at least one stream in each period.",
                "The net network traffic in a packet period in the best case is )1( −⋅ dd , i.e., )( 2 dO using unicast, instead of MaxNdd ⋅−⋅ )1( .",
                "Considerable valuable bandwidth can be saved using this heuristic.",
                "The resulting traffic complexity reduces from O(d2 ) to O(d) in multicast-enabled networks.",
                "Initialize LNt = 0 at an M-CS/S-CS A.",
                "In the first time slot (packet time), each CS sends the top NMax streams (based on their LN) to all other CSs.",
                "At each M-CS/S-CS and for each packet time: B.",
                "Find the value of lowest LN of the NMax globally selected streams (set F) from the previous time slot.",
                "Set LNt with this value.",
                "C. At each CS domain, select the NMax local streams that have maximum value of LN (ToOtherCSs set).",
                "D. Select streams that have LN > LNt.",
                "IF there are >= NMax streams with LN > LNt then send top NMax to other CSs.",
                "ELSE IF there are (NMax-1) streams with LN>LNt then send top (NMax-1) plus the one lower than LNt (i.e., top NMax) to other CSs.",
                "ELSE IF there are (NMax-2) streams with LN>LNt then send top (NMax-2) plus the one lower than LNt (i.e. top (NMax -1)) to other CSs. …… ELSE IF there are NO streams with LN> LNt then send top 1 stream to other CSs.",
                "E. Packets sent in step D form DB1.",
                "Packets received from other CSs form DB2.",
                "F. For this time slot, find global NMax streams based on LN from DB1 U DB2 (set F) G. Send set F to the clients in its domain.",
                "Update LNt for the next period.",
                "Algorithm 2.",
                "Pessimistic algorithm to reduce the number of packets sent over the Internet.",
                "Fig. 6.",
                "Example of a 2-level hierarchy of Conference Servers; the shaded Clients are the one selected by the M-CS and will be sent to other domains CSs.",
                "In this algorithm the saving in traffic is at the cost of relaxing the condition of formation of globally unique set F. However, the discrepancies in selected streams at different domains remain for a short period of time depending on the transportation delay between any two domains.",
                "Even for a total delay of 400ms, for only 10 packet time slots the uniqueness is lost.",
                "This duration in a real-time interactive conversation is non-perceivable by the listener.",
                "In the case that there is a joke and every one laughs, then there would be sudden rise in the number of packets and it would be upper bounded by MaxN)d(O 2 for a short period. 8.2 Optimistic Algorithm The traffic can be reduced further.",
                "The scheme in the following algorithm (Algorithm. 3) is withholding all the streams that have less value of LN compared to the least of the three in the set F. We can find the correct and unique three streams after a few time slots depending on the transportation delay between the domains.",
                "As the packet period is of the order of 40ms, the error in the selection is unnoticeable.",
                "The number of streams on network in this case is always restricted to NMax (=3).",
                "Even without Voice Activity Detection (VAD), there will be no more than three streams in the network in the best case, thus the total traffic is constant.",
                "A sudden burst of traffic, as described in 8.1, is a particular case.",
                "These advantages are due to exploitation of the characteristics of LN.",
                "Initialize LNt = 0 at an M-CS/S-CS A.",
                "In the first time slot (packet time), each CS sends the top NMax streams (based on their LN) to all other CSs.",
                "At each M-CS/S-CS and for each packet time: B.",
                "Find the value of lowest LN of the NMax globally selected streams (set F) from the previous time slot.",
                "Set LNt with this value.",
                "C. At each CS domain, select the NMax local streams that have maximum value of LN (ToOtherCSs set) D. Select streams that have LN > LNt IF there are >= NMax streams with LN > LNt then send top NMax to other CSs.",
                "ELSE IF there are (NMax-1) streams with LN>LNt then send top (NMax-1) and see E. ELSE IF there are (NMax-2) streams with LN>LNt then send top (NMax-2) and see E. …… ELSE IF there are NO streams with LN> LNt then dont send any stream.",
                "E. Exceptions: IF the stream that was in F in the last interval belongs to this CS then select and send that stream even if its LN is now < LNt. (Note this occurs only at that CS which had the stream that was the last of the three in the previous packet period.)",
                "F. Packets sent in step D and E form DB1.",
                "Packets received from other CSs form DB2.",
                "G. For this time slot, find global NMax streams based on LN from DB1 U DB2 (set F).",
                "H. Send set F to the clients in its domain.",
                "Update LNt for the next period.",
                "Algorithm 3.",
                "Optimistic algorithm to reduce the number of packets sent over the Internet Furthermore, when VAD is used [13], it would further reduce the traffic by sending the header part of the RTP packet only and not the whole packet, thus in order to keep updating the LN across.",
                "The traffic here in this case is O(NMax) for multicast and O(d) for unicast.",
                "We see that the above algorithms save bandwidth and computation at each CS, and leads to a scalable architecture with multiple CSs mainly because clients are grouped in domains.",
                "The necessary bandwidth is not dependent on the total number of active clients.",
                "As the CS always chooses the best three clients out of all the clients assigned to it in the domain, addition of new clients to the existing conference will not cause any scalability problem. 8.3 Availability of Multicasting In the architecture that has been proposed, no assumption was made about the availability of multicasting support from the network.",
                "The traffic will be further reduced if multicasting is available over WAN.",
                "It is simple to show that the order of traffic would tend to become O(d) from O(d2 ).",
                "This is an approximation as saving in multicasting depends also on the topology.",
                "The analysis was done for the case wherein multicast is not available (a realistic assumption in todays Internet).",
                "The advantage of this set up is that we can use it even if multicasting is partially available.",
                "We can instruct CSs during the set-up phase to send unicast packets to those CSs that cannot receive multicast packets whereas CSs on multicast enabled routers can exchange packets on a multicast address.",
                "The data structures and conference objects inside a CS is given in [14].",
                "Fig. 7.",
                "User Interface for setting the weight for NMax audio streams (setting Self-bar to zero avoids echo). 8.4 Quality Improvement The observed improvement in the perceived quality of the conference service is due to: (1) limiting the number of concurrent speakers to a low number such as three.",
                "Generally, in a conference if more than two participants speak the intelligibility is lost.",
                "The conversational analysis demonstrates that there would be a repair mechanism [15] in such a case. (2) Delay: The audio stream between any two clients will pass through at most two CSs thus reducing the end-to-end delay.",
                "For a large conference there might be three CSs however, one hop is within the domain incurring negligible delay. (3) As the streams are mixed only at the clients, there can be a customized mix of the streams.",
                "The individual tuning of mixing with weights the spatialism is preserved.",
                "Fig. 7 shows the user interface for the same.",
                "The echo when self-stream is selected can be avoided by reducing the weight.",
                "Nonetheless, feedback helps in reassuring speaker that he/she is heard by all. 9.",
                "CONCLUSION In this paper, we have presented a discussion on a voice-only virtual conferencing environment.",
                "We have argued that the distributed nature of deployment here makes it scalable.",
                "Interactivity is achieved by adapting a recent stream selection scheme based on Loudness Number.",
                "Additionally, we incorporate a result from a more recent work [15] where the sufficiency of three simultaneous speakers has been demonstrated.",
                "Thus, there is significantly effective utilization of bandwidth.",
                "A mixed stream is played out at each client; each client may choose to have a customized mix since mixing is done at the local terminal of each client.",
                "These render impromptu speech in a virtual teleconference over VoIP a reality, as in a real face-to-face conference.",
                "Compatibility is assured thanks to the use of SIP, the most soughtafter signaling protocol.",
                "To ensure a satisfying performance, we do not demand the availability of multicast, but use it if and when available.",
                "The traffic in the WAN (Internet) is upper-bounded by the square of the number of domains, -- further reduced by using heuristic algorithms -- which is far below the total number of clients in the conference.",
                "This is due to the use of a <br>conference server</br> local to each domain.",
                "VAD techniques help further traffic reduction.",
                "Using SIP standard for signaling makes this solution highly interoperable.",
                "We have implemented a CS application on a campus-wide network.",
                "We believe this new generation of virtual conferencing environments will gain more popularity in the future as their ease of deployment is assured thanks to readily available technologies and scalable frameworks. 10.",
                "REFERENCES [1] L Aguilar et al., Architecture for a Multimedia Teleconferencing System, in Proceedings of the ACM SIGCOMM, Aug 1986, pp. 126-136. [2] Carsten Bormann, Joerg Ott et al., Simple Conference Control Protocol, Internet Draft, Dec. 1996. [3] M. Decina and V. Trecordi, Voice over Internet Protocol and Human Assisted E-Commerce, IEEE Comm.",
                "Magazine, Sept. 1999, pp. 64-67. [4] Eckehard Doerry, An Empirical Comparison of Copresent and Technologically-mediated Interaction based on Communicative Breakdown, Phd Thesis, Graduate School of the University of Oregon, 1995. [5] H. P. Dommel and J.J. Garcia-Luna-Aceves, Floor Control for Multimedia Conferencing and Collaboration, J. Multimedia Systems, Vol. 5, No. 1, January 1997, pp. 23-38. [6] Amitava Dutta-Roy, Virtual Meetings with desktop conferencing, IEEE Spectrum, July 1998, pp. 47-56. [7] M. Handley and V. Jacobson, SDP: Session Description Protocol, RFC 2327, IETF, April 1998. [8] M. Handley, J. Crowcroft et al., Very large conferences on the Internet: the Internet multimedia conferencing architecture, Journal of Computer Networks, vol. 31, No. 3, Feb 1999, pp. 191-204. [9] ITU-T Rec.",
                "H.323, Packet based Multimedia Communications Systems, vol. 2, 1998. [10] P. Koskelainen, H. Schulzrinne and X. Wu, A SIP-based Conference Control Framework, NOSSDAV02, May 2002, pp. 53-61. [11] R Venkatesha Prasad et al., Control Protocol for VoIP Audio Conferencing Support, International Conference on Advanced Communication Technology, Mu-Ju, South Korea, Feb 2001, pp. 419-424. [12] R Venkatesha Prasad et al., Automatic Addition and Deletion of Clients in VoIP Conferencing, 6th IEEE Symposium on Computers and Communications, July 2001, Hammamet, Tunisia, pp. 386-390. [13] R Venkatesha Prasad, H S Jamadagni, Abjijeet, et al Comparison of Voice Activity Detection Algorithms, 7th IEEE Symposium on Computers and Communications.",
                "July 2002, Sicily, Italy, pp. 530-535. [14] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, A Scalable Distributed VoIP Conferencing using SIP, Proc. of the 8th IEEE Symposium on Computers and Communications, Antalya, Turkey, June 2003. [15] R Venkatesha Prasad, H S Jamadagni and H N Shankar, On Problem of Specifying Number of Floors in a Voice Only Conference, To appear in IEEE ITRE 2003. [16] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, A Proposal for Distributed Conferencing on SIP using Conference Servers, To appear in the Proc. of MMNS 2003, Belfast, UK, September 2003. [17] R. Venkatesha Prasad, H.S.",
                "Jamadagni, J. Kuri, R.S.",
                "Varchas, A Distributed VoIP Conferencing Support Using Loudness Number, Tech.",
                "Rep. TR-CEDT-TE-03-01 [18] M. Radenkovic et al, Scaleable and Adaptable Audio Service for Supporting Collaborative Work and Entertainment over the Internet, SSGRR 2002, LAquila, Italy, Jan. 2002. [19] M. Radenkovic, C. Greenhalgh, S. Benford, Deployment Issues for Multi-User Audio Support in CVEs, ACM VRST 2002, Nov. 2002, pp. 179-185. [20] Srinivas Ramanathan, P. Venkata Rangan, Harrick M. Vin, Designing Communication Architectures for Interorganizational Multimedia Collaboration, Journal of Organizational Computing, 2 (3&4), pp.277-302, 1992. [21] A.",
                "B. Roach, Session Initiation Protocol (SIP)-Specific Event Notification, RFC 3265, IETF, June 2002. [22] J. Rosenberg, H. Schulzrinne et al., SIP: Session Initiation Protocol, RFC 3261, IETF, June 2002. [23] J. Rosenberg, H. Schulzrinne, Models for Multy Party Conferencing in SIP, Internet Draft, IETF, July 2002. [24] H. Schulzrinne et al., RTP: a transport protocol for realtime applications, RFC 1889, IETF, Jan 1996. [25] Lisa R. Silverman, Coming of Age: Conferencing Solutions Cut Corporate Costs, White Paper, www.imcca.org/wpcomingofage.asp [26] Kundan Singh, Gautam Nair and Henning Schulzrinne, Centralized Conferencing using SIP, Proceedings of the 2nd IP-Telephony Workshop (IPTel), April 2001. [27] D. Thaler, M. Handley and D. Estrin, The Internet Multicast Address Allocation Architecture, RFC 2908, IETF, Sept. 2000."
            ],
            "original_annotated_samples": [
                "We have implemented a <br>conference server</br> (CS) application on a campus-wide network at our Institute.",
                "If the load on a particular SIPS is too heavy, it can create another SIPS in the same domain so that the load will be shared.  One Master <br>conference server</br> (M-CS) (simply a <br>conference server</br> (CS)) for each conference is created by the local SIPS when a conference starts.",
                "ALGORITHMIC ISSUES 6.1 Selecting the Streams Similar to SipConf in [27], a <br>conference server</br> (CS) [17] has the function of supporting the conference; it is responsible for handling audio streams using RTP.",
                "In our conferencing setup, selection is by the Master <br>conference server</br> (M-CS), which comes into the picture exclusively for media handling.",
                "Note that even if the SIP specification enables direct UA-to-UA media communication in a one-to-one call, it is also possible to use the <br>conference server</br> for two-party calls, especially because it is then more functional to create a real conference by adding a third and subsequently more participant(s)."
            ],
            "translated_annotated_samples": [
                "Hemos implementado una aplicación de <br>Servidor de Conferencias</br> (CS) en una red de campus en nuestro Instituto.",
                "Si la carga en un SIPS particular es demasiado pesada, puede crear otro SIPS en el mismo dominio para que la carga se comparta. Se crea un Servidor de Conferencias Maestro (M-CS) (simplemente un Servidor de Conferencias (CS)) para cada conferencia por el SIPS local cuando una conferencia comienza.",
                "PROBLEMAS ALGORÍTMICOS 6.1 Seleccionar los flujos similares a SipConf en [27], un Servidor de Conferencias (CS) [17] tiene la función de soportar la conferencia; es responsable de manejar los flujos de audio utilizando RTP.",
                "En nuestra configuración de conferencias, la selección la realiza el <br>Servidor Maestro de Conferencias</br> (M-CS), que interviene exclusivamente en el manejo de medios.",
                "Ten en cuenta que aunque la especificación de SIP permite la comunicación directa de medios de usuario a usuario en una llamada uno a uno, también es posible utilizar el <br>Servidor de Conferencias</br> para llamadas de dos partes, especialmente porque es entonces más funcional crear una conferencia real agregando un tercero y posteriormente más participantes."
            ],
            "translated_text": "Problemas de implementación de un sistema de conferencias VoIP en un entorno de conferencias virtuales. R. Venkatesha Prasad y Richard Hurni. Jamadagni iii H.N. Shankar iv i, iii Centro de Diseño y Tecnología Electrónica Instituto Indio de Ciencias, Bangalore, India Teléfono: +91 80 360 0810 i, iii {vprasad, hsjam}@cedt.iisc.ernet.in ii hurni@ieee.org iv hn_shankar@yahoo.com RESUMEN Los servicios en tiempo real han sido principalmente respaldados en redes conmutadas por circuitos. Las tendencias recientes favorecen los servicios trasladados a redes de conmutación de paquetes. Para las conferencias de audio, necesitamos considerar muchos aspectos, como la escalabilidad, la calidad de la aplicación de conferencia, el control de piso y la carga en los clientes/servidores, por nombrar algunos. En este documento, describimos un marco de servicio de audio diseñado para proporcionar un Entorno de Conferencias Virtuales (ECV). El sistema está diseñado para dar cabida a un gran número de usuarios finales hablando al mismo tiempo y distribuidos por Internet. El marco se basa en Servidores de Conferencia [14], que facilitan el manejo del audio, mientras que explotamos las capacidades de SIP para propósitos de señalización. La selección de clientes se basa en un reciente cuantificador llamado Número de Volumen que ayuda a imitar una conferencia física cara a cara. Nos ocupamos de los problemas de implementación de la solución propuesta tanto en términos de escalabilidad como de interactividad, mientras explicamos las técnicas que utilizamos para reducir el tráfico. Hemos implementado una aplicación de <br>Servidor de Conferencias</br> (CS) en una red de campus en nuestro Instituto. Categorías y Descriptores de Temas C.2.4 [Redes de Computadoras y Comunicación]: Sistemas Distribuidos - Cliente/Servidor, aplicaciones distribuidas. Términos generales Algoritmos, Rendimiento, Diseño, Teoría. 1. INTRODUCCIÓN El Internet de hoy utiliza el conjunto de protocolos IP que fue diseñado principalmente para el transporte de datos y proporciona la entrega de datos con el mejor esfuerzo. Las restricciones de retraso y las características diferencian los datos tradicionales por un lado, de las aplicaciones de voz y video por el otro. Por lo tanto, a medida que se implementan aplicaciones de voz y video cada vez más sensibles al tiempo en Internet, se pone de manifiesto la insuficiencia de la red. Además, buscamos trasladar servicios telefónicos a través de Internet. Entre ellos, la instalación de conferencia virtual (teleconferencia) está a la vanguardia. Las videoconferencias y conferencias de audio en Internet son populares por las varias ventajas que poseen. Claramente, el ancho de banda necesario para una videoconferencia a través de Internet aumenta rápidamente con el número de participantes; reducir el ancho de banda sin comprometer la calidad del audio es un desafío en la telefonía por Internet. Los problemas críticos adicionales son: (a) retraso de paquetes, (b) eco, (c) mezcla de audio de clientes seleccionados, (d) selección automática de clientes para participar en la conferencia, (e) reproducción de audio mezclado para cada cliente, (f) manejo de clientes que no son capaces de mezclar flujos de audio (estos clientes se conocen como clientes tontos), y (g) decidir el número de clientes activos simultáneamente en la conferencia sin comprometer la calidad de voz. Si bien todos los requisitos anteriores son desde el punto de vista tecnológico, la perspectiva de los usuarios y las interacciones también son factores esenciales. Hay mucha discusión entre la comunidad de HCI y CSCW sobre el uso de la Etnometodología para el diseño de aplicaciones de CSCW. El enfoque básico es proporcionar un ancho de banda más amplio, más instalaciones y mecanismos de control más avanzados, con miras a una mejor calidad de interacción. Este enfoque ignora la utilidad funcional del entorno que se utiliza para la colaboración. Eckehard Doerry [4] critica este enfoque diciendo que pone la forma antes que la función. Por lo tanto, la necesidad es adoptar un enfoque que considere ambos aspectos: el técnico y el funcional. En cuanto al aspecto funcional, nos referimos a [15] donde se ha tratado en cierto detalle. En este trabajo, no discutimos la videoconferencia; su inclusión no beneficia significativamente la calidad de la conferencia [4]. Nuestro enfoque está en entornos de audio virtuales. Primero describimos los desafíos encontrados en las conferencias de audio virtuales. Luego investigamos las motivaciones seguidas por la literatura relevante. En la Sección 5, explicamos la arquitectura de nuestro sistema. La sección 6 comprende la descripción de los diversos algoritmos utilizados en nuestra configuración. Abordamos problemas de implementación. Una discusión sobre el Instituto Federal Suizo de Tecnología, Lausana. Antiguo visitante en CEDT. PESIT y NIAS, Bangalore, India. El rendimiento sigue. Concluimos teniendo en cuenta algunos problemas de implementación. 2. DESAFÍOS EN LA VIDEOCONFERENCIA VoIP Surgen muchos desafíos al construir una aplicación VoIP. Lo siguiente es de particular preocupación en el proceso: • Facilidad de uso: la conferencia debe ser sencilla; los usuarios no necesitan experiencia en el dominio. La gestión (adición/eliminación) de clientes y servidores debe ser sencilla. El desarrollo de aplicaciones no debe presuponer características específicas del sistema subyacente o de las capas de red. La facilidad de uso puede incluir el aprovechamiento de tecnologías fácilmente disponibles, técnicamente factibles y económicamente viables. • Escalabilidad: Las conferencias deben parecer ininterrumpidas bajo cargas pesadas, es decir, cuando se agregan muchos usuarios adicionales. El tráfico en la WAN no debería aumentar apreciablemente con el número total de clientes; de lo contrario, esto podría provocar congestión. Por lo tanto, se necesita un medio para regular el tráfico al mínimo para este tipo de aplicaciones en tiempo real. • Interactividad: En Entornos de Conferencias Virtuales (ECVs), pretendemos una aplicación de conferencias cara a cara que imite una conferencia real, donde los participantes más vocales invitan la atención. El intercambio de turnos en la ocupación del espacio por parte de los participantes debe adaptarse con gracia para lograr una transición natural. • Estandarización: La solución debe cumplir con los estándares establecidos para lograr interoperabilidad y aceptación entre pares. Los requisitos anteriores se colocan en la perspectiva de las observaciones realizadas en trabajos anteriores (véase Secciones 3 y 4) y guiarán el diseño del VCE. 3. La motivación Ramanathan y Rangan [20] han estudiado en detalle las configuraciones arquitectónicas comparando muchos esquemas de arquitectura de conferencias teniendo en cuenta la demora de red y los requisitos de computación para la mezcla. La división funcional y el diseño de arquitectura orientada a objetos que ayudan en la implementación se presentan en [1]. Un resumen de muchos temas relacionados con el apoyo a una conferencia grande se aborda en [8]. H. P. Dommel [5] y muchos otros destacan el control de piso como otro aspecto fundamental a tener en cuenta en el diseño de una herramienta de conferencias. Los protocolos de control de conferencias fuertemente acoplados en Internet pertenecen a la familia ITU-T H.323 [9]; sin embargo, están principalmente diseñados para conferencias pequeñas. El último borrador del IETF de Rosenberg y Schulzrinne [23] discute modelos de conferencia con SIP [22] en el fondo. Los aspectos de implementación para la conferencia SIP centralizada se informan en [26]. Un nuevo enfoque llamado mezcla parcial por Radenkovic [18] permite que flujos mezclados y no mezclados coexistan. En todas las propuestas anteriores, si bien hay algunas sugerencias muy útiles, comparten una o más de las siguientes limitaciones: • En una conferencia de audio, no es necesario mezclar los flujos de todos los clientes. De hecho, mezclar muchas corrientes arbitrarias [24] de clientes degrada la calidad de la conferencia debido a la reducción en el volumen (aspecto espacial del habla). El número de flujos mezclados varía dinámicamente dependiendo del número de participantes activos. Esto provocaría fluctuaciones en el volumen de cada participante individual, causando una degradación severa en la calidad. La mezcla personalizada de flujos no es posible cuando hay muchos clientes activos. Existe un umbral en el número de oradores simultáneos por encima del cual aumentar el número de oradores se vuelve contraproducente para la calidad de la conferencia. La fijación del número máximo de hablantes simultáneos se aborda en un trabajo reciente [15] utilizando la Etnometodología, y se postula que es tres. Por lo tanto, es recomendable respetar esa restricción. • No puede haber muchos mezcladores intermedios (similarmente, Servidores de Conferencia como en [10]) en etapas como en [20] porque provoca un retraso desmedido al aumentar el número de saltos y no es escalable con la interactividad como enfoque. • El Control de Piso para una conferencia de audio (incluso de video) con instrucciones explícitas de toma de turnos para los participantes convierte la conferencia en esencia en un asunto de un orador a la vez, no en una en vivo y libre de interrupciones. De esta manera, la conferencia se vuelve notablemente artificial y su calidad se degrada. Schulzrinne et al. [24], asumen que solo un participante está hablando en un momento dado. En este caso, si las aplicaciones se implementan con cierto control [5], el servicio se vuelve asfixiante para los usuarios. • La mezcla parcial [18] tiene un problema similar al de la mezcla cuando se mezclan más flujos. Además, en [18], para permitir el discurso improvisado, la mezcla no se realiza cuando la red puede soportar altos requisitos de ancho de banda para enviar/recibir todas las transmisiones, pero es innecesaria [15]. • Para conferencias grandes [23, 10] una conferencia centralizada no puede escalar. Con la multidifusión, los clientes tendrán que analizar muchos flujos y el tráfico en la red de los clientes aumenta innecesariamente. Evidentemente, se abordan diferentes problemas particulares, todos los cuales son un subconjunto de los requisitos (definidos en [14] y [16]) para el soporte de conferencias de VoIP. Por lo tanto, es necesario abordar la conferencia en su totalidad teniendo en cuenta todos sus requisitos de manera simultánea. Con este objetivo, el sistema de conferencias VoIP que proponemos está diseñado para ser escalable e interactivo. Hacemos uso del Número de Sonoridad para implementar el control de volumen. Esto permite a un participante entrar libremente en el modo de hablar para interrumpir al orador actual como en una reunión natural cara a cara. Un límite superior en el número de pisos (es decir, el número de oradores permitidos para hablar al mismo tiempo) se fija utilizando una conjetura propuesta en [15]. El trabajo presentado aquí es una continuación de nuestros estudios sobre conferencias basadas en el Protocolo de Inicio de Sesión en [14] y [16]. SIP, definido en [22], es ahora el estándar más popular para implementación de VoIP y ha sido elegido por su fortaleza, facilidad de uso, extensibilidad y compatibilidad. Esta es la razón por la cual estará en el trasfondo de todos los mensajes de control que surgirán implícitamente entre las entidades en nuestra arquitectura. Los mensajes actuales están descritos en [16] y, como tal, no presentamos una descripción completa de ellos aquí. 4. TRABAJO RELACIONADO El estándar SIP definido en el RFC 3261 [22] y en extensiones posteriores como [21] no ofrece servicios de control de conferencias como control de piso o votación y no prescribe cómo debe ser gestionada una conferencia. Sin embargo, SIP se puede utilizar para iniciar una sesión que utilice algún otro protocolo de control de conferencias. La especificación central de SIP soporta muchos modelos para conferencias [26, 23]. En los modelos basados en servidor, un servidor mezcla flujos de medios, mientras que en una conferencia sin servidor, la mezcla se realiza en los sistemas finales. SDP [7] se puede utilizar para definir las capacidades de los medios y proporcionar otra información sobre la conferencia. Ahora consideraremos algunos modelos de conferencia en SIP que han sido propuestos recientemente [23]. Primero, veamos los modelos sin servidor. En la mezcla de extremos del sistema, solo un cliente (SIP UA) maneja la señalización y la mezcla de medios para todos los demás, lo cual claramente no es escalable y causa problemas cuando ese cliente en particular abandona la conferencia. En el modelo de Usuarios que se unen, un árbol crece, ya que cada parte invitada constituye una nueva rama en el camino de distribución. Esto conduce a un número creciente de saltos para las hojas remotas y no es escalable. Otra opción sería utilizar la multidifusión para las videoconferencias, pero actualmente la multidifusión no está habilitada en Internet y solo es posible en una LAN. Entre los modelos basados en servidor, en una conferencia de marcado, los UAs se conectan a un servidor central que maneja todas las mezclas. Este modelo no es escalable ya que está limitado por la potencia de procesamiento del servidor y el ancho de banda de la red. Las conferencias centralizadas ad hoc y los servidores de conferencias de marcado tienen mecanismos y problemas similares. Los modelos híbridos que involucran señalización centralizada y medios distribuidos, con estos últimos utilizando unicast o multicast, plantean problemas de escalabilidad como antes. Sin embargo, una ventaja es que el control de la conferencia puede ser una solución de terceros. La Mezcla Parcial Distribuida, presentada en [18], propone que en caso de limitación de ancho de banda, algunos flujos se mezclan y otros no, manteniendo la interactividad intacta. La pérdida de espacialidad cuando se mezclan y el aumento del ancho de banda cuando no lo hacen son problemas abiertos. Un estudio relacionado [19] del mismo autor propone una arquitectura de conferencias para Entornos Virtuales Colaborativos (CVEs) pero no proporciona el enfoque de escalabilidad sin la disponibilidad de la multidifusión. Teniendo en cuenta las limitaciones de los sistemas de conferencias propuestos, detallaremos ahora nuestra propuesta. 5. ARQUITECTURA DEL SISTEMA Esta sección está dedicada a la descripción de la arquitectura del sistema propuesto. Sin embargo, dado que este documento constituye la continuación de nuestro trabajo iniciado en [14] y ampliado en [16], no presentaremos aquí todos los detalles sobre las entidades propuestas e invitamos a los lectores a consultar los documentos mencionados anteriormente para obtener una descripción completa y detallada. Primero, no restringimos nuestro sistema de conferencias para funcionar solo en conferencias pequeñas, sino en grandes VCEs de audio que tienen cientos (o incluso miles) de usuarios a través de una Red de Área Amplia (WAN) como Internet. Esta perspectiva se deriva de una evaluación de que los VCEs ganarán importancia en el futuro, ya que las conferencias de audio interactivas serán más populares debido a la difusión de la cultura mediática en todo el mundo. Dos aspectos deben ser atendidos al construir un sistema de conferencias VoIP: (i) el front-end, que consiste en el programa de aplicación que se ejecuta en las computadoras de los usuarios finales y (ii) el back-end que proporciona otros programas de aplicación que facilitan las conferencias y la conferencia. Los usuarios participantes se agrupan en varios dominios. Estos dominios son Redes de Área Local (LAN), como redes corporativas o educativas. Esta suposición distribuida requiere soluciones de control y manejo de medios distribuidos, ya que los sistemas centralizados no serían escalables para conferencias tan grandes (ver Sección 4). Más explícitamente, en cada dominio, podemos identificar varios componentes lógicos relevantes de una instalación de conferencias (Fig. 1): Un número arbitrario de usuarios finales (clientes) que pueden participar en como máximo una conferencia de audio a la vez. Cada usuario es la Fig. 1. Ejemplo de conferencia: 3 dominios que contienen las entidades necesarias para que la conferencia pueda tener lugar. Incluidas en un único dominio en un instante dado, pero pueden moverse de un dominio a otro (nomadismo). En nuestro entorno de conferencias, estos clientes son Agentes de Usuario SIP (SIP UAs) regulares, según se define en [22], para lograr interoperabilidad con otros sistemas compatibles con SIP existentes. Estos clientes no son conscientes del entorno complejo que respalda la conferencia, lo cual se destaca a continuación. Un servidor SIP (SIPS) por dominio, encargándose de todos los aspectos de señalización de la conferencia (clientes que se unen, salen, etc.) [16]. En particular, se considera como una implementación física que abarca diferentes roles lógicos, a saber, un Servidor Proxy SIP, un Servidor Registrador SIP, un Servidor de Redirección SIP y un SIP B2BUA (Agente de Usuario de Vuelta a Vuelta) [22]. Esta implementación física permite el manejo de mensajes SIP entrantes/salientes por una u otra entidad lógica según sea necesario. SIPS está encargado de mantener un servicio total y tiene muchas ventajas, como (a) funciona como una entidad centralizada que puede hacer un seguimiento de las actividades de los UAs en una conferencia; (b) puede realizar todo el cambio para proporcionar funciones de PBX; (c) puede localizar a los UAs e invitarlos a una conferencia; (d) también puede encargarse de la facturación. Los SIPS en diferentes dominios se comunican entre sí utilizando mensajes SIP como se describe en [16]. Si la carga en un SIPS particular es demasiado pesada, puede crear otro SIPS en el mismo dominio para que la carga se comparta. Se crea un Servidor de Conferencias Maestro (M-CS) (simplemente un Servidor de Conferencias (CS)) para cada conferencia por el SIPS local cuando una conferencia comienza. Este servidor se utilizará para manejar paquetes de medios para los clientes del dominio. Su mecanismo será descrito en la siguiente sección. El M-CS podrá crear una jerarquía de CSs dentro de un dominio agregando uno o más CSs esclavos (S-CSs) para dar cabida a todos los clientes activos y prevenir su propia saturación al mismo tiempo. Veremos este mecanismo con cierto detalle en la secuela. Las entidades descritas aquí son exhaustivas y se ajustan a la filosofía del SIP. Por lo tanto, el uso de SIP hace que esta arquitectura sea más útil e interoperable con cualquier otro cliente o servidor SIP. PROBLEMAS ALGORÍTMICOS 6.1 Seleccionar los flujos similares a SipConf en [27], un Servidor de Conferencias (CS) [17] tiene la función de soportar la conferencia; es responsable de manejar los flujos de audio utilizando RTP. También puede duplicarse para convertir formatos de transmisión de audio para un cliente dado si es necesario y puede funcionar como Traductores/Mezcladores de la especificación RTP detrás de cortafuegos. Hemos basado el diseño de nuestro CS en el Procesador Multipunto (MP) H.323 [9]. En resumen, el MP recibe flujos de audio de los puntos finales involucrados en una conferencia multipunto centralizada o híbrida, los procesa y los devuelve a los puntos finales. Un procesador de señales de audio prepara N salidas de audio NMax a partir de M flujos de entrada después de la selección, mezcla o ambas. La mezcla de audio requiere decodificar el audio de entrada a señales lineales (PCM o analógicas), realizar una combinación lineal de las señales y volver a codificar el resultado en un formato de audio apropiado. El procesador de señales puede eliminar o atenuar algunas de las señales de entrada para reducir el ruido y los componentes no deseados. Fig. 2. \n\nFig. 2. El diagrama esquemático de un CS. La limitación de H.323 es que no aborda la escalabilidad de una conferencia. La arquitectura propone una topología en cascada o en cadena de margaritas [10], la cual se puede demostrar que no puede escalar para una conferencia grande. Un CS atiende a muchos clientes en la misma conferencia. Por lo tanto, solo maneja una conferencia a la vez. Varios CS pueden coexistir en un dominio, como cuando hay varias conferencias en curso. Los mensajes relacionados con la señalización de los CSs se tratan en [11]. El funcionamiento de un CS se ilustra en la Fig. 2: Para cada intervalo de mezcla, CS 1 elige los mejores NMax paquetes de audio de los M1 (utilizando un criterio denominado Número de Volumen, descrito en la siguiente subsección). Puede posiblemente recibir y enviar estos a CSs 2 a P. El conjunto de paquetes enviados se denota como AotrosCSs. En el mismo intervalo de mezcla, también recibe los mejores paquetes de audio NMax (de un posible M2) de CS 2, de manera similar a los mejores NMax (de un posible MP) de CS P. Para simplificar, ignoramos el retardo de propagación entre los CSs, que de hecho se puede tener en cuenta; está más allá del alcance de esta presentación. El conjunto de paquetes recibidos se denota como FromOtherCSs. Finalmente, selecciona los mejores paquetes NMax del conjunto {ToOtherCSs unión FromOtherCSs} y envía estos paquetes a su propio grupo. Se puede observar que el conjunto {ToOtherCSs unión FromOtherCSs} es el mismo en todos los CSs. Esto garantiza que cualquier cliente en la conferencia finalmente reciba el mismo conjunto de paquetes para mezclar. Por lo tanto, todos los clientes obtienen una vista común de la conferencia. De manera similar, para cada intervalo de tiempo (tiempo de paquete), se selecciona un subconjunto, F, de todos los clientes (utilizando el mismo criterio) del conjunto de paquetes de todos los otros CS más los NMax clientes seleccionados localmente. Sus paquetes se mezclan y se reproducen en los clientes. Según [15], la cardinalidad de F, |F| es NMax y está fijada en tres. En nuestra configuración de conferencias, la selección la realiza el <br>Servidor Maestro de Conferencias</br> (M-CS), que interviene exclusivamente en el manejo de medios. Ten en cuenta que aunque la especificación de SIP permite la comunicación directa de medios de usuario a usuario en una llamada uno a uno, también es posible utilizar el <br>Servidor de Conferencias</br> para llamadas de dos partes, especialmente porque es entonces más funcional crear una conferencia real agregando un tercero y posteriormente más participantes. ",
            "candidates": [],
            "error": [
                [
                    "Servidor de Conferencias",
                    "Servidor Maestro de Conferencias",
                    "Servidor de Conferencias"
                ]
            ]
        },
        "loudness number": {
            "translated_key": "Número de Volumen",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Deployment Issues of a VoIP Conferencing System in a Virtual Conferencing Environment R. Venkatesha Prasad i Richard Hurni ii H.S.",
                "Jamadagni iii H.N.",
                "Shankar iv i, iii Centre for Electronics Design and Technology Indian Institute of Science, Bangalore, India Telephone: +91 80 360 0810 i, iii {vprasad, hsjam}@cedt.iisc.ernet.in ii hurni@ieee.org iv hn_shankar@yahoo.com ABSTRACT Real-time services have been supported by and large on circuitswitched networks.",
                "Recent trends favour services ported on packet-switched networks.",
                "For audio conferencing, we need to consider many issues - scalability, quality of the conference application, floor control and load on the clients/servers - to name a few.",
                "In this paper, we describe an audio service framework designed to provide a Virtual Conferencing Environment (VCE).",
                "The system is designed to accommodate a large number of end users speaking at the same time and spread across the Internet.",
                "The framework is based on Conference Servers [14], which facilitate the audio handling, while we exploit the SIP capabilities for signaling purposes.",
                "Client selection is based on a recent quantifier called <br>loudness number</br> that helps mimic a physical face-to-face conference.",
                "We deal with deployment issues of the proposed solution both in terms of scalability and interactivity, while explaining the techniques we use to reduce the traffic.",
                "We have implemented a Conference Server (CS) application on a campus-wide network at our Institute.",
                "Categories and Subjects Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - Client / Server, distributed applications.",
                "General Terms Algorithms, Performance, Design, Theory. 1.",
                "INTRODUCTION Todays Internet uses the IP protocol suite that was primarily designed for the transport of data and provides best effort data delivery.",
                "Delay-constraints and characteristics separate traditional data on the one hand from voice & video applications on the other.",
                "Hence, as progressively time-sensitive voice and video applications are deployed on the Internet, the inadequacy of the Internet is exposed.",
                "Further, we seek to port telephone services on the Internet.",
                "Among them, virtual conference (teleconference) facility is at the cutting edge.",
                "Audio and video conferencing on Internet are popular [25] for the several advantages they inhere [3,6].",
                "Clearly, the bandwidth required for a teleconference over the Internet increases rapidly with the number of participants; reducing bandwidth without compromising audio quality is a challenge in Internet Telephony.",
                "Additional critical issues are: (a) packet delay, (b) echo, (c) mixing of audio from selected clients, (d) automatic selection of clients to participate in the conference, (e) playout of mixed audio for every client, (f) handling clients not capable of mixing audio streams (such clients are known as dumb clients), and (g) deciding the number of simultaneously active clients in the conference without compromising voice quality.",
                "While all the above requirements are from the technology point of view, the users perspective and interactions are also essential factors.",
                "There is plenty of discussion amongst HCI and CSCW community on the use of Ethnomethodology for design of CSCW applications.",
                "The basic approach is to provide larger bandwidth, more facilities and more advanced control mechanisms, looking forward to better quality of interaction.",
                "This approach ignores the functional utility of the environment that is used for collaboration.",
                "Eckehard Doerry [4] criticizes this approach by saying it is keeping form before function.",
                "Thus, the need is to take an approach that considers both aspects - the technical and the functional.",
                "Regarding the functional aspect, we refer to [15] where it has been dealt with in some detail.",
                "In this work, we do not discuss video conferencing; its inclusion does not significantly benefit conference quality [4].",
                "Our focus is on virtual audio environments.",
                "We first outline the challenges encountered in virtual audio conferences.",
                "Then we look into the motivations followed by relevant literature.",
                "In Section 5, we explain the architecture of our system.",
                "Section 6 comprises description of the various algorithms used in our setup.",
                "We address deployment issues.",
                "A discussion on Swiss Federal Institute of Technology, Lausanne.",
                "Former visitor at CEDT.",
                "PESIT and NIAS, Bangalore, India.iv ii performance follows.",
                "We conclude taking alongside some implementation issues. 2.",
                "CHALLENGES IN VoIP CONFERENCING Many challenges arise in building a VoIP application.",
                "The following are of particular concern in the process: • Ease of use: Conferencing must be simple; users need no domain expertise.",
                "Management (addition/removal) of clients and servers must be uncomplicated.",
                "Application development should not presuppose specific characteristics of the underlying system or of network layers.",
                "Ease of use may include leveraging readily available, technically feasible and economically viable technologies. • Scalability: Conferencing must seem uninterrupted under heavy loads, i.e., when many additional users are added on.",
                "Traffic on WAN should not grow appreciably with the total number of clients; else, this has lead to congestion.",
                "So a means to regulate traffic to a minimum is needed for this kind of real-time applications. • Interactivity: In Virtual Conferencing Environments (VCEs), we intend a face-to-face-like conferencing application that mimics a real conference, where more vocal participants invite attention.",
                "Turn-taking in floor occupation by participants must be adapted gracefully to give a feel of natural transition. • Standardization: The solution must conform to established standards so as to gain interoperability and peer acceptance.",
                "The above requirements are placed in the perspective of observations made in earlier works (vide Sections 3 and 4) and will steer the VCE design. 3.",
                "THE MOTIVATION Ramanathan and Rangan [20] have studied in detail the architectural configurations comparing many conferencing architecture schemes taking into consideration the network delay and computation requirements for mixing.",
                "Functional division and object-oriented architecture design that aid in implementation is presented in [1].",
                "An overview of many issues involved in supporting a large conference is dealt in [8].",
                "H. P. Dommel [5] and many others highlight floor control as another pivotal aspect to be taken into account in designing a conferencing tool.",
                "Tightly coupled conference control protocols in Internet belong to the ITU-T H.323 family [9]; however, they are mainly for small conferences.",
                "The latest IETF draft by Rosenberg and Schulzrinne [23] discusses conferencing models with SIP [22] in the background.",
                "Aspects of implementation for centralized SIP conferencing are reported in [26].",
                "A new approach called partial mixing by Radenkovic [18] allows for mixed and non-mixed streams to coexist.",
                "In all the above proposals, while there are some very useful suggestions, they share one or more of the following limitations: • In an audio conference, streams from all the clients need not be mixed.",
                "Actually, mixing many arbitrary streams [24] from clients degrades the quality of the conference due to the reduction in the volume (spatial aspect of speech).",
                "The number of streams mixed varies dynamically depending on the number of active participants.",
                "This would lead to fluctuations in the volume of every individual participant causing severe degradation in quality.",
                "Customized mixing of streams is not possible when many clients are active.",
                "There is a threshold on the number of simultaneous speakers above which increasing the number of speakers becomes counterproductive to conference quality.",
                "Fixing the maximum number of simultaneous speakers is dealt in a recent work [15] using Ethnomethodology, and is conjectured to be three.",
                "Thus it is advisable to honour that constraint. • There cannot be many intermediate mixers (similarly, Conference Servers as in [10]) in stages as in [20] because it brings in inordinate delay by increasing the number of hops and is not scalable with interactivity in focus. • Floor Control for an audio conference (even video conference) with explicit turn-taking instructions to participants renders the conference essentially a one-speakerat-a-time affair, not a live and free-to-interrupt one.",
                "This way, the conference becomes markedly artificial and its quality degrades.",
                "Schulzrinne et al. [24], assume only one participant is speaking at a time.",
                "In this case, if applications are implemented with some control [5], the service becomes gagging for the users. • Partial mixing [18] has a similar problem as that of mixing when more streams are mixed.",
                "Moreover, in [18], to allow impromptu speech, mixing is not done when the network can afford high bandwidth requirements for sending/receiving all the streams, but it is unnecessary [15]. • For large conferences [23, 10] a centralized conference cannot scale up.",
                "With multicasting, clients will have to parse many streams and traffic on a clients network increases unnecessarily.",
                "Evidently, different particular issues, all of which are a subset of requirements (defined in [14] and [16]) for a VoIP conferencing support, are tackled.",
                "Thus there is a need to address conferencing as a whole with all its requirements considered concurrently.",
                "Towards this goal, the VoIP conferencing system we propose is intended to be scalable and interactive.",
                "We make use of the <br>loudness number</br> for implementing floor control.",
                "This permits a participant to freely get into the speaking mode to interrupt the current speaker as in a natural face-to-face meeting.",
                "An upper limit on the number of floors (i.e., the number of speakers allowed to speak at the same time) is fixed using a conjecture proposed in [15].",
                "The work presented here is in continuation of our studies into conferencing based on the Session Initiation Protocol in [14] and [16].",
                "SIP, defined in [22] is now the most popular standard for VoIP deployment and has been chosen for its strength, ease of use, extensibility and compatibility.",
                "This is the reason it will be in the background of all controlling messages that will implicitly arise between the entities in our architecture.",
                "The actual messages are described in [16] and, as such, we do not present a complete description of them here. 4.",
                "RELATED WORK The SIP standard defined in RFC 3261 [22] and in later extensions such as [21] does not offer conference control services such as floor control or voting and does not prescribe how a conference is to be managed.",
                "However SIP can be used to initiate a session that uses some other conference control protocol.",
                "The core SIP specification supports many models for conferencing [26, 23].",
                "In the server-based models, a server mixes media streams, whereas in a server-less conference, mixing is done at the end systems.",
                "SDP [7] can be used to define media capabilities and provide other information about the conference.",
                "We shall now consider a few conference models in SIP that have been proposed recently [23].",
                "First, let us look into server-less models.",
                "In End-System Mixing, only one client (SIP UA) handles the signaling and media mixing for all the others, which is clearly not scalable and causes problems when that particular client leaves the conference.",
                "In the Users Joining model, a tree grows, as each invited party constitutes a new branch in the distribution path.",
                "This leads to an increasing number of hops for the remote leaves and is not scalable.",
                "Another option would be to use multicast for conferencing but multicast is not enabled over Internet and only possible on a LAN presently.",
                "Among server-based models, in a Dial-In Conference, UAs connect to a central server that handles all the mixing.",
                "This model is not scalable as it is limited by the processing power of the server and bandwidth of the network.",
                "Adhoc Centralized Conferences and Dial-Out Conference Servers have similar mechanisms and problems.",
                "Hybrid models involving centralized signaling and distributed media, with the latter using unicast or multicast, raise scalability problems as before.",
                "However an advantage is that the conference control can be a third party solution.",
                "Distributed Partial Mixing, presented in [18], proposes that in case of bandwidth limitation, some streams are mixed and some are not, leaving interactivity intact.",
                "Loss of spatialism when they mix and the bandwidth increase when they do not are open problems.",
                "A related study [19] by the same author proposes conferencing architecture for Collaborative Virtual Environments (CVEs) but does not provide the scalability angle without the availability of multicasting.",
                "With the limitations of proposed conferencing systems in mind, we will now detail our proposal. 5.",
                "SYSTEM ARCHITECTURE This section is dedicated to the description of the proposed system architecture.",
                "However, as this paper constitutes the continuation of our work started in [14] and furthered in [16], we will not present here all the details about the proposed entities and invite the readers to consult the papers mentioned above for a full and thorough description.",
                "First, we do not restrict our conferencing system to work on small conferences only, but rather on large audio VCEs that have hundreds (or even thousands) of users across a Wide Area Network (WAN) such as the Internet.",
                "This view stems from an appraisal that VCEs will gain in importance in the future, as interactive audio conferences will be more popular because of the spread of the media culture around the world.",
                "Two issues must be taken care of when building a VoIP conferencing system: (i) the front-end, consisting of the application program running on the end-users computers and (ii) the back-end that provides other application programs that facilitate conferencing and conference.",
                "The participating users are grouped into several domains.",
                "These domains are Local Area Networks (LANs), such as corporate or educational networks.",
                "This distributed assumption asks for distributed controlling and media handling solutions, as centralized systems would not scale for such very large conferences (vide Section 4).",
                "More explicitly, in each domain, we can identify several relevant logical components of a conferencing facility (Fig. 1):  An arbitrary number of end users (clients) that can take part in at most one audio conference at a time.",
                "Every user is Fig. 1.",
                "Conference example - 3 domains containing the necessary entities so that the conference can take place. included in one and only one domain at a given instant, but can move from domain to domain (nomadism).",
                "In our conferencing environment, these clients are regular SIP User Agents (SIP UAs), as defined in [22] so to gain in interoperability with other existing SIP-compatible systems.",
                "These clients are thus not aware of the complex setting that supports the conference and this is highlighted below.  One SIP Server (SIPS) per domain, taking care of all the signaling aspects of the conference (clients joining, leaving, etc.) [16].",
                "In particular, it is considered as a physical implementation encompassing different logical roles, namely a SIP Proxy Server, a SIP Registrar Server, a SIP Redirect Server and a SIP B2BUA (Back-to-Back User Agent) [22].",
                "This physical implementation enables the handling of incoming/outgoing SIP messages by one or another logical entity according to the needs.",
                "SIPS is entrusted with maintaining total service and has many advantages such as (a) it works as a centralized entity that can keep track of the activities of the UAs in a conference; (b) it can do all the switching for providing PBX features; (c) it can locate the UAs and invite them for a conference; (d) it can do the billing as well.",
                "SIPSs in different domains communicate with each other using SIP messages as described in [16].",
                "If the load on a particular SIPS is too heavy, it can create another SIPS in the same domain so that the load will be shared.  One Master Conference Server (M-CS) (simply a Conference Server (CS)) for each conference is created by the local SIPS when a conference starts.",
                "This server will be used for handling media packets for the clients of the domain.",
                "Its mechanism will be described in the next section.",
                "The M-CS will be able to create a hierarchy of CSs inside a domain by adding one or more Slave CSs (S-CSs) to accommodate all the active clients and prevent its own flooding at the same time.",
                "We will see this mechanism in some detail in the sequel.",
                "The entities described here are exhaustive and conform to the SIP philosophy.",
                "Thus, the use of SIP makes this architecture more useful and interoperable with any other SIP clients or servers. 6.",
                "ALGORITHMIC ISSUES 6.1 Selecting the Streams Similar to SipConf in [27], a Conference Server (CS) [17] has the function of supporting the conference; it is responsible for handling audio streams using RTP.",
                "It can also double to convert audio stream formats for a given client if necessary and can work as Translators/Mixers of RTP specification behind firewalls.",
                "We have based the design of our CS on H.323 Multipoint Processor (MP) [9].",
                "In short, the MP receives audio streams from the endpoints involved in a centralized or hybrid multipoint conference, processes them and returns them to the endpoints.",
                "An MP that processes audio prepares NMax audio outputs from M input streams after selection, mixing, or both.",
                "Audio mixing requires decoding the input audio to linear signals (PCM or analog), performing a linear combination of the signals and reencoding the result in an appropriate audio format.",
                "The MP may eliminate or attenuate some of the input signals in order to reduce noise and unwanted components.",
                "Fig. 2.",
                "Schematic diagram of a CS The limitation of H.323 is that it does not address the scalability of a conference.",
                "The architecture proposes a cascaded or daisy chain topology [10], which can be shown that it cannot scale up for a large conference.",
                "A CS serves many clients in the same conference.",
                "Thus it handles only one conference at a time.",
                "Multiple CSs may coexist in a domain, as when there are several conferences under way.",
                "Signaling-related messages of CSs are dealt in [11].",
                "The working of a CS is illustrated on Fig. 2: For each mixing interval, CS 1 chooses the best NMax audio packets out of the M1 (using a criterion termed <br>loudness number</br>, described in the next subsection).",
                "It may possibly receive and sends these to CSs 2 to P. The set of packets sent is denoted as ToOtherCSs.",
                "In the same mixing interval, it also receives the best NMax audio packets (out of possibly M2) from CS 2, similarly the best NMax (out of possibly MP) from CS P. For simplicity, we ignore propagation delay between CSs which indeed can be taken into account; it is beyond the scope of this presentation.",
                "The set of packets received is denoted as FromOtherCSs.",
                "Finally, it selects the best NMax packets from the set {ToOtherCSs union FromOtherCSs} and passes these packets to its own group.",
                "It can be seen that the set {ToOtherCSs union FromOtherCSs} is the same at all CSs.",
                "This ensures that any client in the conference finally receives the same set of packets for mixing.",
                "Hence all clients obtain a common view of the conference.",
                "Similarly, for each time slot (packet time), a subset, F of all clients is selected (using the same criterion) from the pool of packets from all other CSs plus the NMax clients selected locally.",
                "Their packets are mixed and played out at the clients.",
                "According to [15], the cardinality of F, |F| is NMax and is fixed at three.",
                "In our conferencing setup, selection is by the Master Conference Server (M-CS), which comes into the picture exclusively for media handling.",
                "Note that even if the SIP specification enables direct UA-to-UA media communication in a one-to-one call, it is also possible to use the Conference Server for two-party calls, especially because it is then more functional to create a real conference by adding a third and subsequently more participant(s).",
                "There are cases wherein the processing capacity of an M-CS is exceeded as it may have too many packets - from local domains and from remote domains - to process.",
                "In that case, the M-CS will create one or many S-CS (Fig. 6) and transfer its own clients as well as the new clients to them.",
                "In this configuration, the algorithm outlined above will be slightly modified, as the audio packets will go from clients to their dedicated S-CS that will select NMax packets to send to the local M-CS, which will then select NMax packets from all its S-CSs in the domain before sending them to the remote domains.",
                "The incoming packets from other domains will be received by the M-CS, select NMax of them and send them directly to the domain clients, bypassing the SCSs.",
                "This change implies that at most three intermediate entities exist for each audio packet, instead of two in the conventional setup.",
                "As the extra hop happens inside the LAN supposed to have a high-speed connectivity, we consider that it should not prevent us from using this hierarchy of CSs when theres a need to do so. 6.2 <br>loudness number</br> (LN) A basic question to be answered by the CS is the following.",
                "In a mixing interval, how should it choose NMax packets out of the M it might possibly receive?",
                "One way is to rank the M packets received according to their energies, and choose the top NMax.",
                "However, this is usually found to be inadequate because random fluctuations in packet energies can lead to poor audio quality.",
                "This indicates the need for a metric different from mere individual packet energies.",
                "The metric should have the following characteristics [12]: • A speaker (floor occupant) should not be cut off by a spike in the packet energy of another speaker.",
                "This implies that a speakers speech history should be given some weight.",
                "This is often referred to as Persistence or Hangover. • A participant who wants to interrupt a speaker will have to (i) speak loudly and (ii) keep trying for a little while.",
                "In a face-to-face conference, body language often indicates the intent to interrupt.",
                "But in a blind conference under discussion, a participants intention to interrupt can be conveyed effectively through LN.",
                "A floor control mechanism empowered to cut off a speaker forcefully must be ensured.",
                "These requirements are met by <br>loudness number</br> [12], which changes smoothly with time so that the selection (addition and deletion) of clients for conference is graceful.",
                "LN (= ) is a function of the amplitude of the current audio stream plus the activity and amplitude over a specific window in the past.",
                "Fig. 3.",
                "The different windows used for LN computation The <br>loudness number</br> is updated on a packet-by-packet basis.",
                "The basic parameter used here is packet amplitude, which is calculated as root mean square (rms) of the energies in audio samples of a packet, and denoted by XK.",
                "Three windows are defined as shown in Fig. 3.",
                "The present amplitude level of the speaker is found by calculating the moving average of packet amplitude (XK) within a window called Recent Past Window starting from the present instant to some past time.",
                "The past activity of the speaker is found by calculating the moving average of the packet amplitude (XK) within a window called Distant Past Window, which starts at the point where the Recent Past window ends and stretches back in the past for a pre-defined interval.",
                "The activity of the speaker in the past is found with a window called Activity Horizon, which spans the recent past window as well as the distant past window and beyond if necessary.",
                "Though the contribution of the activity horizon looks similar to the contribution of the recent past and distant past windows, past activity is computed from activity horizon window in a differently.",
                "Define the quantities during these three intervals as L1, L2 and L3.",
                "L1 quantifies the Recent Past speech activity, L2 the Distant Past speech activity and L3 gives a number corresponding to the speech activity in the Activity Horizon window quantifying how active the speaker was in the past few intervals.",
                "L3 yields a quantity that is proportional to the fraction of packets having energies above a pre-defined threshold (Eq. 3).",
                "The threshold is invariant across clients. ∑ +− = = 1 1 1 RPP P Wt tK K RP X W L (1) ∑ +−− −= = 1 2 1 DPRPP RPP WWt WtK K DP X W L (2) ∑ +− = ≥= 1 }{3 * 1 AHP P K Wt tK X AH I W L θθ (3) Where ifI KX 1}{ =≥θ θ≥KX = otherwise,0 The threshold is a constant. is set at 10-20 percent of the amplitude of the voice samples of a packet in our implementation here.",
                "<br>loudness number</br> λ for the present time instant (or the present packet) is calculated as, 332211 *L*L*L αααλ ++= (4) Here 1\u000f 2 DQG 3 are chosen such that: 0< 1\u000f 2\u001f\u0014\u000f \u0013\u001f 1\u000e 2\u001f\u0014 DQG 3=1-\u000b 1\u000e 2) Here, 1 is the weight given to the recent past speech, 2 is the weight given to distant past speech and 3 is the weight given to speech activity in the activity horizon window considered. 6.3 Safety, Liveness and Fairness The λ parameter KDV VRPH PHPRU\\ GHSHQGLQJ RQ WKH VSUHDG RI the windows.",
                "After one conferee becomes silent, another can take the floor.",
                "Also, as there is more than one channel, interruption is enabled.",
                "A loud conferee is more likely to be heard because of elevated λ.",
                "This ensures fairness to all conferees.",
                "After all, even in a face-to-face conference, a more vocal speaker grabs special attention.",
                "All these desirable characteristics are embedded into the LN.",
                "A comprehensive discussion on selection of the various parameters and the dynamics of LN are beyond the scope of this paper. 6.4 Selection Algorithm using the LN Following the developments in subsections 6.1 and 6.2, we present the simple algorithm that runs at each Master-Conference Server (Algorithm. 1).",
                "This algorithm is based on the discussions in section 6.1.",
                "The globally unique set F is found using this procedure.",
                "Repeat for each time slot at each M-CS { 1.",
                "Get all the packets from the Clients that belong to it. 2.",
                "Find at most NMax Clients that have PD[LPXP RXW RI 0 &OLHQWV LQ LWV GRPDLQ\u0011 3.",
                "Store a copy of packets from those NMax Clients in database DB1. 4.",
                "Send these NMax packets to other M-CSs (on Unicast or Multicast, depending on the configuration). 5.",
                "Similarly, receive packets from all other M-CSs and store them in database DB2. 6.",
                "Now compare the packets in DB1 and DB2 on WKH EDVLV RI DQG VHOHFW D PD[LPXP RI NMax amongst them (to form set F) that should be played out at each Client. 7.",
                "Send the NMax packets in set F to the Clients in its domain. 8.",
                "Mix these NMax audio packets in set F after linearising and send it to dumb Clients in the domain. }",
                "Algorithm 1.",
                "Selection algorithm The mechanism proposed here is also depicted on Fig. 6, where a single conference takes place between three domains.",
                "The shaded clients are the ones selected in their local domains; their audio streams will be sent to other CSs. 7.",
                "DEPLOYMENT ISSUES We now analyze deployment issues associated with conference management.",
                "How are domains to be organized to maximize the number of participants able to join?",
                "To address this, we define some useful parameters.  Let d be the number of different domains in which there are active clients in a given conference.  Let Mi be the number of active clients present in domain i ( di ≤≤1 ) in a given conference.",
                "The total number of active clients in the conference is thus ∑= = d i iMM 1 .  Let C be the maximum number of audio streams a Conference Server can handle in a packet time, also called capacity.",
                "C is set according to the processing power of the weakest CS in the conference but as it cannot be assumed that we know it a-priori, it can be set according to some minimum system requirement a machine must meet in order to take part in a conference.  Let NMax be the number of output streams a CS has to send to other CSs in remote domains (see section 6.1).",
                "We will set NMax =3 (=|F|), according to [15].",
                "The optimization problem is now to find the value of d that maximizes the total number of clients Mi served by one CS in a domain with capacity C. We first dispose the case where the capacity is not exceeded (the existing CS is not overloaded), and then proceed to the case where there exists a need to create more CSs when a single CS is overloaded.",
                "We assume that clients are equally distributed amongst the domains, as we may not have information to assume an a-priori distribution of the clients.",
                "We can specify no more than an upper bound on the number of clients acceptable, given the number of active domains d. 7.1 Conferencing with only One Level of CSs In this subsection, we consider that we have only one CS, i.e., a unique M-CS in each domain.",
                "Thus it cannot be overloaded.",
                "We consider that the system works as outlined in section 6.1: The Clients send their audio packets to their local CS, which selects NMax streams, before sending them to other CSs.",
                "In parallel, it also receives NMax streams for every other CSs before taking a decision on which NMax streams will be selected, sent and played out at each individual clients.",
                "For system stability, any CS in the conference should be able to handle its local clients in addition to the audio packets from other domains.",
                "Clearly then, the following inequality must hold for every domain: )1( −⋅+≥ dN d M C Max (5) The limiting case of (5) (taking the equality) takes the form 2 )( dNdNCM MaxMax ⋅−⋅+= (6) To optimize d with respect to M, we set 0)(2 =+−⋅⋅= ∂ ∂ MaxMax NCdN d M (7) yielding     ⋅ + = Max Max N NC d 2 (8) ([ ]* = Rounding to nearest integer) and hence, M from (6).",
                "C d M 50 9 234 100 17 884 150 26 1950 200 34 3434 250 42 5334 300 51 7650 350 59 10384 400 67 13534 450 76 17100 500 84 21084 Table 1.",
                "Values of d and M computed for some values of C with NMax = 3.",
                "In Table 1, we give the values of d and M that were computed using (8) and (6) with NMax = 3.",
                "We see that the values of d and M, being dependent of C, are therefore based on the weakest CS.",
                "We see that there is a trade-off between M and d. We could admit more domains in the conference, but at the expense of restricting the total number of clients M in the conference.",
                "While implementing and testing the Conference Servers on a Pentium III 1.4 GHz running Windows NT, we were able to set C=300.",
                "But with the advent of faster computers (> 3 GHz), one can easily set C to higher values and determine d and M accordingly.",
                "Fig. 4 shows a contour plot and Fig. 5, a 3D-mesh showing optimized solutions for CSs of different capacities.",
                "These lead us to maximize the number of domains, and hence, to maximize the total number of clients based on the capacity of various CSs.",
                "In Fig. 4, the individual curves represent the total number of clients targeted, and we select a lower value of d, for capacity C, for targeted M to reduce traffic on WAN.",
                "Fig. 5 represents a different perspective of the same data in 3D.",
                "Fig. 4.",
                "Contour Plot of Capacity versus Optimum number of domains for various conference sizes 7.2 Conferencing with Two Levels of CSs Now considering the case where the number of clients in a particular domain is too large, i.e., d M Mi ≥ (9) one has to avoid the denial of service for new clients due to overloading of Conference Server.",
                "This problem can be solved by introducing a second level of CSs inside the given domain, as in Fig. 6.",
                "The existing M-CS creates a Slave CS (S-CS) that can handle up to C end-users and to which it transfers all its active clients.",
                "Here, the system works differently as outlined in section 6.1: The Clients send their audio packets to their local S-CS, which selects NMax streams, before sending them to a local M-CS, which will proceed in the same way, before sending NMax streams to the other domains.",
                "Each newly created S-CS must run on a separate machine.",
                "The M-CS has to create more S-CSs if the number of active clients exceeds C in the course of the conference after the transfer.",
                "With this mechanism, the M-CS will be able to create utmost     −⋅− = Max Max N dNC U )1( S-CSs, (10) as it must handle 3 (= NMax) packets for each local S-CSs and 3 (= NMax) packets from each other remote domains.",
                "We can then calculate the maximum theoretical number of active clients CUMi ⋅= in each domain as well as M, for the whole conference as CUdM ⋅⋅= .",
                "Fig. 5. 3D Plot of Capacity versus Optimum number of domains for various conference sizes Of course, one could further create a third level in the hierarchy, giving the possibility of accommodating even more clients.",
                "This may be unnecessary as the number of possible clients is large enough with two levels. 8.",
                "PERFORMANCE DISCUSSION We now analyze the performance of the algorithm presented in subsection 6.3, i.e., the one taking care of the exchange of audio packets between the different domains.",
                "Note that the packets that are transiting within the LAN take advantage of the higher capacity (generally coupled with multicast capabilities) and therefore do not require a performance analysis.",
                "Thus we have to look only at the RTP packets over the WAN, i.e., between participating M-CSs.",
                "As each M-CS from a domain will be sending only NMax out of d M packets to the other CSs ( MaxN d M >> ), the bandwidth used by the application over a WAN is upper-bounded by the following expression.",
                "The total number of audio packets transiting over the WAN for each time slot is ∑ ∑= ≠=        d i d ijj MaxN 1 ,1 which is quadratic in the number of domains (i.e., O(d2 )).",
                "However, it is independent of the total number of active clients.",
                "This would not have been the case had all packets been sent over the network in each time slot.",
                "The saving is tremendous.",
                "Yet, one may contend that sending three packets to and from all domains is a waste of resources, as most of these streams will not be selected.",
                "If just one client is active, selecting a subset of clients in that domain is unnecessary.",
                "Pessimistic and optimistic algorithms as presented in the sequel aim at reducing the traffic further by harnessing the slow varying nature of the LN. 8.1 Pessimistic algorithm Consider a scenario wherein the lowest LN (called LNt) of the three globally selected streams (set F of Section 6.1) exceeds the LN of the most dominant stream of a domain.",
                "Evidently, the chances that the next two dominant streams of that domain being selected to F in the next packet period are less.",
                "Here, we send this most dominant stream and withhold the other two.",
                "There may be an error in unique selection across all domains for one packet period only.",
                "As LN varies slowly, the error would get automatically rectified in a subsequent packet period (slot).",
                "In this algorithm, there is at least one stream in each period.",
                "The net network traffic in a packet period in the best case is )1( −⋅ dd , i.e., )( 2 dO using unicast, instead of MaxNdd ⋅−⋅ )1( .",
                "Considerable valuable bandwidth can be saved using this heuristic.",
                "The resulting traffic complexity reduces from O(d2 ) to O(d) in multicast-enabled networks.",
                "Initialize LNt = 0 at an M-CS/S-CS A.",
                "In the first time slot (packet time), each CS sends the top NMax streams (based on their LN) to all other CSs.",
                "At each M-CS/S-CS and for each packet time: B.",
                "Find the value of lowest LN of the NMax globally selected streams (set F) from the previous time slot.",
                "Set LNt with this value.",
                "C. At each CS domain, select the NMax local streams that have maximum value of LN (ToOtherCSs set).",
                "D. Select streams that have LN > LNt.",
                "IF there are >= NMax streams with LN > LNt then send top NMax to other CSs.",
                "ELSE IF there are (NMax-1) streams with LN>LNt then send top (NMax-1) plus the one lower than LNt (i.e., top NMax) to other CSs.",
                "ELSE IF there are (NMax-2) streams with LN>LNt then send top (NMax-2) plus the one lower than LNt (i.e. top (NMax -1)) to other CSs. …… ELSE IF there are NO streams with LN> LNt then send top 1 stream to other CSs.",
                "E. Packets sent in step D form DB1.",
                "Packets received from other CSs form DB2.",
                "F. For this time slot, find global NMax streams based on LN from DB1 U DB2 (set F) G. Send set F to the clients in its domain.",
                "Update LNt for the next period.",
                "Algorithm 2.",
                "Pessimistic algorithm to reduce the number of packets sent over the Internet.",
                "Fig. 6.",
                "Example of a 2-level hierarchy of Conference Servers; the shaded Clients are the one selected by the M-CS and will be sent to other domains CSs.",
                "In this algorithm the saving in traffic is at the cost of relaxing the condition of formation of globally unique set F. However, the discrepancies in selected streams at different domains remain for a short period of time depending on the transportation delay between any two domains.",
                "Even for a total delay of 400ms, for only 10 packet time slots the uniqueness is lost.",
                "This duration in a real-time interactive conversation is non-perceivable by the listener.",
                "In the case that there is a joke and every one laughs, then there would be sudden rise in the number of packets and it would be upper bounded by MaxN)d(O 2 for a short period. 8.2 Optimistic Algorithm The traffic can be reduced further.",
                "The scheme in the following algorithm (Algorithm. 3) is withholding all the streams that have less value of LN compared to the least of the three in the set F. We can find the correct and unique three streams after a few time slots depending on the transportation delay between the domains.",
                "As the packet period is of the order of 40ms, the error in the selection is unnoticeable.",
                "The number of streams on network in this case is always restricted to NMax (=3).",
                "Even without Voice Activity Detection (VAD), there will be no more than three streams in the network in the best case, thus the total traffic is constant.",
                "A sudden burst of traffic, as described in 8.1, is a particular case.",
                "These advantages are due to exploitation of the characteristics of LN.",
                "Initialize LNt = 0 at an M-CS/S-CS A.",
                "In the first time slot (packet time), each CS sends the top NMax streams (based on their LN) to all other CSs.",
                "At each M-CS/S-CS and for each packet time: B.",
                "Find the value of lowest LN of the NMax globally selected streams (set F) from the previous time slot.",
                "Set LNt with this value.",
                "C. At each CS domain, select the NMax local streams that have maximum value of LN (ToOtherCSs set) D. Select streams that have LN > LNt IF there are >= NMax streams with LN > LNt then send top NMax to other CSs.",
                "ELSE IF there are (NMax-1) streams with LN>LNt then send top (NMax-1) and see E. ELSE IF there are (NMax-2) streams with LN>LNt then send top (NMax-2) and see E. …… ELSE IF there are NO streams with LN> LNt then dont send any stream.",
                "E. Exceptions: IF the stream that was in F in the last interval belongs to this CS then select and send that stream even if its LN is now < LNt. (Note this occurs only at that CS which had the stream that was the last of the three in the previous packet period.)",
                "F. Packets sent in step D and E form DB1.",
                "Packets received from other CSs form DB2.",
                "G. For this time slot, find global NMax streams based on LN from DB1 U DB2 (set F).",
                "H. Send set F to the clients in its domain.",
                "Update LNt for the next period.",
                "Algorithm 3.",
                "Optimistic algorithm to reduce the number of packets sent over the Internet Furthermore, when VAD is used [13], it would further reduce the traffic by sending the header part of the RTP packet only and not the whole packet, thus in order to keep updating the LN across.",
                "The traffic here in this case is O(NMax) for multicast and O(d) for unicast.",
                "We see that the above algorithms save bandwidth and computation at each CS, and leads to a scalable architecture with multiple CSs mainly because clients are grouped in domains.",
                "The necessary bandwidth is not dependent on the total number of active clients.",
                "As the CS always chooses the best three clients out of all the clients assigned to it in the domain, addition of new clients to the existing conference will not cause any scalability problem. 8.3 Availability of Multicasting In the architecture that has been proposed, no assumption was made about the availability of multicasting support from the network.",
                "The traffic will be further reduced if multicasting is available over WAN.",
                "It is simple to show that the order of traffic would tend to become O(d) from O(d2 ).",
                "This is an approximation as saving in multicasting depends also on the topology.",
                "The analysis was done for the case wherein multicast is not available (a realistic assumption in todays Internet).",
                "The advantage of this set up is that we can use it even if multicasting is partially available.",
                "We can instruct CSs during the set-up phase to send unicast packets to those CSs that cannot receive multicast packets whereas CSs on multicast enabled routers can exchange packets on a multicast address.",
                "The data structures and conference objects inside a CS is given in [14].",
                "Fig. 7.",
                "User Interface for setting the weight for NMax audio streams (setting Self-bar to zero avoids echo). 8.4 Quality Improvement The observed improvement in the perceived quality of the conference service is due to: (1) limiting the number of concurrent speakers to a low number such as three.",
                "Generally, in a conference if more than two participants speak the intelligibility is lost.",
                "The conversational analysis demonstrates that there would be a repair mechanism [15] in such a case. (2) Delay: The audio stream between any two clients will pass through at most two CSs thus reducing the end-to-end delay.",
                "For a large conference there might be three CSs however, one hop is within the domain incurring negligible delay. (3) As the streams are mixed only at the clients, there can be a customized mix of the streams.",
                "The individual tuning of mixing with weights the spatialism is preserved.",
                "Fig. 7 shows the user interface for the same.",
                "The echo when self-stream is selected can be avoided by reducing the weight.",
                "Nonetheless, feedback helps in reassuring speaker that he/she is heard by all. 9.",
                "CONCLUSION In this paper, we have presented a discussion on a voice-only virtual conferencing environment.",
                "We have argued that the distributed nature of deployment here makes it scalable.",
                "Interactivity is achieved by adapting a recent stream selection scheme based on <br>loudness number</br>.",
                "Additionally, we incorporate a result from a more recent work [15] where the sufficiency of three simultaneous speakers has been demonstrated.",
                "Thus, there is significantly effective utilization of bandwidth.",
                "A mixed stream is played out at each client; each client may choose to have a customized mix since mixing is done at the local terminal of each client.",
                "These render impromptu speech in a virtual teleconference over VoIP a reality, as in a real face-to-face conference.",
                "Compatibility is assured thanks to the use of SIP, the most soughtafter signaling protocol.",
                "To ensure a satisfying performance, we do not demand the availability of multicast, but use it if and when available.",
                "The traffic in the WAN (Internet) is upper-bounded by the square of the number of domains, -- further reduced by using heuristic algorithms -- which is far below the total number of clients in the conference.",
                "This is due to the use of a Conference Server local to each domain.",
                "VAD techniques help further traffic reduction.",
                "Using SIP standard for signaling makes this solution highly interoperable.",
                "We have implemented a CS application on a campus-wide network.",
                "We believe this new generation of virtual conferencing environments will gain more popularity in the future as their ease of deployment is assured thanks to readily available technologies and scalable frameworks. 10.",
                "REFERENCES [1] L Aguilar et al., Architecture for a Multimedia Teleconferencing System, in Proceedings of the ACM SIGCOMM, Aug 1986, pp. 126-136. [2] Carsten Bormann, Joerg Ott et al., Simple Conference Control Protocol, Internet Draft, Dec. 1996. [3] M. Decina and V. Trecordi, Voice over Internet Protocol and Human Assisted E-Commerce, IEEE Comm.",
                "Magazine, Sept. 1999, pp. 64-67. [4] Eckehard Doerry, An Empirical Comparison of Copresent and Technologically-mediated Interaction based on Communicative Breakdown, Phd Thesis, Graduate School of the University of Oregon, 1995. [5] H. P. Dommel and J.J. Garcia-Luna-Aceves, Floor Control for Multimedia Conferencing and Collaboration, J. Multimedia Systems, Vol. 5, No. 1, January 1997, pp. 23-38. [6] Amitava Dutta-Roy, Virtual Meetings with desktop conferencing, IEEE Spectrum, July 1998, pp. 47-56. [7] M. Handley and V. Jacobson, SDP: Session Description Protocol, RFC 2327, IETF, April 1998. [8] M. Handley, J. Crowcroft et al., Very large conferences on the Internet: the Internet multimedia conferencing architecture, Journal of Computer Networks, vol. 31, No. 3, Feb 1999, pp. 191-204. [9] ITU-T Rec.",
                "H.323, Packet based Multimedia Communications Systems, vol. 2, 1998. [10] P. Koskelainen, H. Schulzrinne and X. Wu, A SIP-based Conference Control Framework, NOSSDAV02, May 2002, pp. 53-61. [11] R Venkatesha Prasad et al., Control Protocol for VoIP Audio Conferencing Support, International Conference on Advanced Communication Technology, Mu-Ju, South Korea, Feb 2001, pp. 419-424. [12] R Venkatesha Prasad et al., Automatic Addition and Deletion of Clients in VoIP Conferencing, 6th IEEE Symposium on Computers and Communications, July 2001, Hammamet, Tunisia, pp. 386-390. [13] R Venkatesha Prasad, H S Jamadagni, Abjijeet, et al Comparison of Voice Activity Detection Algorithms, 7th IEEE Symposium on Computers and Communications.",
                "July 2002, Sicily, Italy, pp. 530-535. [14] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, A Scalable Distributed VoIP Conferencing using SIP, Proc. of the 8th IEEE Symposium on Computers and Communications, Antalya, Turkey, June 2003. [15] R Venkatesha Prasad, H S Jamadagni and H N Shankar, On Problem of Specifying Number of Floors in a Voice Only Conference, To appear in IEEE ITRE 2003. [16] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, A Proposal for Distributed Conferencing on SIP using Conference Servers, To appear in the Proc. of MMNS 2003, Belfast, UK, September 2003. [17] R. Venkatesha Prasad, H.S.",
                "Jamadagni, J. Kuri, R.S.",
                "Varchas, A Distributed VoIP Conferencing Support Using <br>loudness number</br>, Tech.",
                "Rep. TR-CEDT-TE-03-01 [18] M. Radenkovic et al, Scaleable and Adaptable Audio Service for Supporting Collaborative Work and Entertainment over the Internet, SSGRR 2002, LAquila, Italy, Jan. 2002. [19] M. Radenkovic, C. Greenhalgh, S. Benford, Deployment Issues for Multi-User Audio Support in CVEs, ACM VRST 2002, Nov. 2002, pp. 179-185. [20] Srinivas Ramanathan, P. Venkata Rangan, Harrick M. Vin, Designing Communication Architectures for Interorganizational Multimedia Collaboration, Journal of Organizational Computing, 2 (3&4), pp.277-302, 1992. [21] A.",
                "B. Roach, Session Initiation Protocol (SIP)-Specific Event Notification, RFC 3265, IETF, June 2002. [22] J. Rosenberg, H. Schulzrinne et al., SIP: Session Initiation Protocol, RFC 3261, IETF, June 2002. [23] J. Rosenberg, H. Schulzrinne, Models for Multy Party Conferencing in SIP, Internet Draft, IETF, July 2002. [24] H. Schulzrinne et al., RTP: a transport protocol for realtime applications, RFC 1889, IETF, Jan 1996. [25] Lisa R. Silverman, Coming of Age: Conferencing Solutions Cut Corporate Costs, White Paper, www.imcca.org/wpcomingofage.asp [26] Kundan Singh, Gautam Nair and Henning Schulzrinne, Centralized Conferencing using SIP, Proceedings of the 2nd IP-Telephony Workshop (IPTel), April 2001. [27] D. Thaler, M. Handley and D. Estrin, The Internet Multicast Address Allocation Architecture, RFC 2908, IETF, Sept. 2000."
            ],
            "original_annotated_samples": [
                "Client selection is based on a recent quantifier called <br>loudness number</br> that helps mimic a physical face-to-face conference.",
                "We make use of the <br>loudness number</br> for implementing floor control.",
                "The working of a CS is illustrated on Fig. 2: For each mixing interval, CS 1 chooses the best NMax audio packets out of the M1 (using a criterion termed <br>loudness number</br>, described in the next subsection).",
                "As the extra hop happens inside the LAN supposed to have a high-speed connectivity, we consider that it should not prevent us from using this hierarchy of CSs when theres a need to do so. 6.2 <br>loudness number</br> (LN) A basic question to be answered by the CS is the following.",
                "These requirements are met by <br>loudness number</br> [12], which changes smoothly with time so that the selection (addition and deletion) of clients for conference is graceful."
            ],
            "translated_annotated_samples": [
                "La selección de clientes se basa en un reciente cuantificador llamado <br>Número de Volumen</br> que ayuda a imitar una conferencia física cara a cara.",
                "Hacemos uso del <br>Número de Sonoridad</br> para implementar el control de volumen.",
                "El funcionamiento de un CS se ilustra en la Fig. 2: Para cada intervalo de mezcla, CS 1 elige los mejores NMax paquetes de audio de los M1 (utilizando un criterio denominado <br>Número de Volumen</br>, descrito en la siguiente subsección).",
                "Dado que el salto adicional ocurre dentro de la LAN que se supone tiene una conectividad de alta velocidad, consideramos que no debería impedirnos usar esta jerarquía de CS cuando sea necesario hacerlo. 6.2 <br>Número de Sonoridad</br> (LN) Una pregunta básica que debe responder el CS es la siguiente.",
                "Estos requisitos son cumplidos por el <br>Número de Volumen</br> [12], que cambia suavemente con el tiempo para que la selección (adición y eliminación) de clientes para la conferencia sea elegante."
            ],
            "translated_text": "Problemas de implementación de un sistema de conferencias VoIP en un entorno de conferencias virtuales. R. Venkatesha Prasad y Richard Hurni. Jamadagni iii H.N. Shankar iv i, iii Centro de Diseño y Tecnología Electrónica Instituto Indio de Ciencias, Bangalore, India Teléfono: +91 80 360 0810 i, iii {vprasad, hsjam}@cedt.iisc.ernet.in ii hurni@ieee.org iv hn_shankar@yahoo.com RESUMEN Los servicios en tiempo real han sido principalmente respaldados en redes conmutadas por circuitos. Las tendencias recientes favorecen los servicios trasladados a redes de conmutación de paquetes. Para las conferencias de audio, necesitamos considerar muchos aspectos, como la escalabilidad, la calidad de la aplicación de conferencia, el control de piso y la carga en los clientes/servidores, por nombrar algunos. En este documento, describimos un marco de servicio de audio diseñado para proporcionar un Entorno de Conferencias Virtuales (ECV). El sistema está diseñado para dar cabida a un gran número de usuarios finales hablando al mismo tiempo y distribuidos por Internet. El marco se basa en Servidores de Conferencia [14], que facilitan el manejo del audio, mientras que explotamos las capacidades de SIP para propósitos de señalización. La selección de clientes se basa en un reciente cuantificador llamado <br>Número de Volumen</br> que ayuda a imitar una conferencia física cara a cara. Nos ocupamos de los problemas de implementación de la solución propuesta tanto en términos de escalabilidad como de interactividad, mientras explicamos las técnicas que utilizamos para reducir el tráfico. Hemos implementado una aplicación de Servidor de Conferencias (CS) en una red de campus en nuestro Instituto. Categorías y Descriptores de Temas C.2.4 [Redes de Computadoras y Comunicación]: Sistemas Distribuidos - Cliente/Servidor, aplicaciones distribuidas. Términos generales Algoritmos, Rendimiento, Diseño, Teoría. 1. INTRODUCCIÓN El Internet de hoy utiliza el conjunto de protocolos IP que fue diseñado principalmente para el transporte de datos y proporciona la entrega de datos con el mejor esfuerzo. Las restricciones de retraso y las características diferencian los datos tradicionales por un lado, de las aplicaciones de voz y video por el otro. Por lo tanto, a medida que se implementan aplicaciones de voz y video cada vez más sensibles al tiempo en Internet, se pone de manifiesto la insuficiencia de la red. Además, buscamos trasladar servicios telefónicos a través de Internet. Entre ellos, la instalación de conferencia virtual (teleconferencia) está a la vanguardia. Las videoconferencias y conferencias de audio en Internet son populares por las varias ventajas que poseen. Claramente, el ancho de banda necesario para una videoconferencia a través de Internet aumenta rápidamente con el número de participantes; reducir el ancho de banda sin comprometer la calidad del audio es un desafío en la telefonía por Internet. Los problemas críticos adicionales son: (a) retraso de paquetes, (b) eco, (c) mezcla de audio de clientes seleccionados, (d) selección automática de clientes para participar en la conferencia, (e) reproducción de audio mezclado para cada cliente, (f) manejo de clientes que no son capaces de mezclar flujos de audio (estos clientes se conocen como clientes tontos), y (g) decidir el número de clientes activos simultáneamente en la conferencia sin comprometer la calidad de voz. Si bien todos los requisitos anteriores son desde el punto de vista tecnológico, la perspectiva de los usuarios y las interacciones también son factores esenciales. Hay mucha discusión entre la comunidad de HCI y CSCW sobre el uso de la Etnometodología para el diseño de aplicaciones de CSCW. El enfoque básico es proporcionar un ancho de banda más amplio, más instalaciones y mecanismos de control más avanzados, con miras a una mejor calidad de interacción. Este enfoque ignora la utilidad funcional del entorno que se utiliza para la colaboración. Eckehard Doerry [4] critica este enfoque diciendo que pone la forma antes que la función. Por lo tanto, la necesidad es adoptar un enfoque que considere ambos aspectos: el técnico y el funcional. En cuanto al aspecto funcional, nos referimos a [15] donde se ha tratado en cierto detalle. En este trabajo, no discutimos la videoconferencia; su inclusión no beneficia significativamente la calidad de la conferencia [4]. Nuestro enfoque está en entornos de audio virtuales. Primero describimos los desafíos encontrados en las conferencias de audio virtuales. Luego investigamos las motivaciones seguidas por la literatura relevante. En la Sección 5, explicamos la arquitectura de nuestro sistema. La sección 6 comprende la descripción de los diversos algoritmos utilizados en nuestra configuración. Abordamos problemas de implementación. Una discusión sobre el Instituto Federal Suizo de Tecnología, Lausana. Antiguo visitante en CEDT. PESIT y NIAS, Bangalore, India. El rendimiento sigue. Concluimos teniendo en cuenta algunos problemas de implementación. 2. DESAFÍOS EN LA VIDEOCONFERENCIA VoIP Surgen muchos desafíos al construir una aplicación VoIP. Lo siguiente es de particular preocupación en el proceso: • Facilidad de uso: la conferencia debe ser sencilla; los usuarios no necesitan experiencia en el dominio. La gestión (adición/eliminación) de clientes y servidores debe ser sencilla. El desarrollo de aplicaciones no debe presuponer características específicas del sistema subyacente o de las capas de red. La facilidad de uso puede incluir el aprovechamiento de tecnologías fácilmente disponibles, técnicamente factibles y económicamente viables. • Escalabilidad: Las conferencias deben parecer ininterrumpidas bajo cargas pesadas, es decir, cuando se agregan muchos usuarios adicionales. El tráfico en la WAN no debería aumentar apreciablemente con el número total de clientes; de lo contrario, esto podría provocar congestión. Por lo tanto, se necesita un medio para regular el tráfico al mínimo para este tipo de aplicaciones en tiempo real. • Interactividad: En Entornos de Conferencias Virtuales (ECVs), pretendemos una aplicación de conferencias cara a cara que imite una conferencia real, donde los participantes más vocales invitan la atención. El intercambio de turnos en la ocupación del espacio por parte de los participantes debe adaptarse con gracia para lograr una transición natural. • Estandarización: La solución debe cumplir con los estándares establecidos para lograr interoperabilidad y aceptación entre pares. Los requisitos anteriores se colocan en la perspectiva de las observaciones realizadas en trabajos anteriores (véase Secciones 3 y 4) y guiarán el diseño del VCE. 3. La motivación Ramanathan y Rangan [20] han estudiado en detalle las configuraciones arquitectónicas comparando muchos esquemas de arquitectura de conferencias teniendo en cuenta la demora de red y los requisitos de computación para la mezcla. La división funcional y el diseño de arquitectura orientada a objetos que ayudan en la implementación se presentan en [1]. Un resumen de muchos temas relacionados con el apoyo a una conferencia grande se aborda en [8]. H. P. Dommel [5] y muchos otros destacan el control de piso como otro aspecto fundamental a tener en cuenta en el diseño de una herramienta de conferencias. Los protocolos de control de conferencias fuertemente acoplados en Internet pertenecen a la familia ITU-T H.323 [9]; sin embargo, están principalmente diseñados para conferencias pequeñas. El último borrador del IETF de Rosenberg y Schulzrinne [23] discute modelos de conferencia con SIP [22] en el fondo. Los aspectos de implementación para la conferencia SIP centralizada se informan en [26]. Un nuevo enfoque llamado mezcla parcial por Radenkovic [18] permite que flujos mezclados y no mezclados coexistan. En todas las propuestas anteriores, si bien hay algunas sugerencias muy útiles, comparten una o más de las siguientes limitaciones: • En una conferencia de audio, no es necesario mezclar los flujos de todos los clientes. De hecho, mezclar muchas corrientes arbitrarias [24] de clientes degrada la calidad de la conferencia debido a la reducción en el volumen (aspecto espacial del habla). El número de flujos mezclados varía dinámicamente dependiendo del número de participantes activos. Esto provocaría fluctuaciones en el volumen de cada participante individual, causando una degradación severa en la calidad. La mezcla personalizada de flujos no es posible cuando hay muchos clientes activos. Existe un umbral en el número de oradores simultáneos por encima del cual aumentar el número de oradores se vuelve contraproducente para la calidad de la conferencia. La fijación del número máximo de hablantes simultáneos se aborda en un trabajo reciente [15] utilizando la Etnometodología, y se postula que es tres. Por lo tanto, es recomendable respetar esa restricción. • No puede haber muchos mezcladores intermedios (similarmente, Servidores de Conferencia como en [10]) en etapas como en [20] porque provoca un retraso desmedido al aumentar el número de saltos y no es escalable con la interactividad como enfoque. • El Control de Piso para una conferencia de audio (incluso de video) con instrucciones explícitas de toma de turnos para los participantes convierte la conferencia en esencia en un asunto de un orador a la vez, no en una en vivo y libre de interrupciones. De esta manera, la conferencia se vuelve notablemente artificial y su calidad se degrada. Schulzrinne et al. [24], asumen que solo un participante está hablando en un momento dado. En este caso, si las aplicaciones se implementan con cierto control [5], el servicio se vuelve asfixiante para los usuarios. • La mezcla parcial [18] tiene un problema similar al de la mezcla cuando se mezclan más flujos. Además, en [18], para permitir el discurso improvisado, la mezcla no se realiza cuando la red puede soportar altos requisitos de ancho de banda para enviar/recibir todas las transmisiones, pero es innecesaria [15]. • Para conferencias grandes [23, 10] una conferencia centralizada no puede escalar. Con la multidifusión, los clientes tendrán que analizar muchos flujos y el tráfico en la red de los clientes aumenta innecesariamente. Evidentemente, se abordan diferentes problemas particulares, todos los cuales son un subconjunto de los requisitos (definidos en [14] y [16]) para el soporte de conferencias de VoIP. Por lo tanto, es necesario abordar la conferencia en su totalidad teniendo en cuenta todos sus requisitos de manera simultánea. Con este objetivo, el sistema de conferencias VoIP que proponemos está diseñado para ser escalable e interactivo. Hacemos uso del <br>Número de Sonoridad</br> para implementar el control de volumen. Esto permite a un participante entrar libremente en el modo de hablar para interrumpir al orador actual como en una reunión natural cara a cara. Un límite superior en el número de pisos (es decir, el número de oradores permitidos para hablar al mismo tiempo) se fija utilizando una conjetura propuesta en [15]. El trabajo presentado aquí es una continuación de nuestros estudios sobre conferencias basadas en el Protocolo de Inicio de Sesión en [14] y [16]. SIP, definido en [22], es ahora el estándar más popular para implementación de VoIP y ha sido elegido por su fortaleza, facilidad de uso, extensibilidad y compatibilidad. Esta es la razón por la cual estará en el trasfondo de todos los mensajes de control que surgirán implícitamente entre las entidades en nuestra arquitectura. Los mensajes actuales están descritos en [16] y, como tal, no presentamos una descripción completa de ellos aquí. 4. TRABAJO RELACIONADO El estándar SIP definido en el RFC 3261 [22] y en extensiones posteriores como [21] no ofrece servicios de control de conferencias como control de piso o votación y no prescribe cómo debe ser gestionada una conferencia. Sin embargo, SIP se puede utilizar para iniciar una sesión que utilice algún otro protocolo de control de conferencias. La especificación central de SIP soporta muchos modelos para conferencias [26, 23]. En los modelos basados en servidor, un servidor mezcla flujos de medios, mientras que en una conferencia sin servidor, la mezcla se realiza en los sistemas finales. SDP [7] se puede utilizar para definir las capacidades de los medios y proporcionar otra información sobre la conferencia. Ahora consideraremos algunos modelos de conferencia en SIP que han sido propuestos recientemente [23]. Primero, veamos los modelos sin servidor. En la mezcla de extremos del sistema, solo un cliente (SIP UA) maneja la señalización y la mezcla de medios para todos los demás, lo cual claramente no es escalable y causa problemas cuando ese cliente en particular abandona la conferencia. En el modelo de Usuarios que se unen, un árbol crece, ya que cada parte invitada constituye una nueva rama en el camino de distribución. Esto conduce a un número creciente de saltos para las hojas remotas y no es escalable. Otra opción sería utilizar la multidifusión para las videoconferencias, pero actualmente la multidifusión no está habilitada en Internet y solo es posible en una LAN. Entre los modelos basados en servidor, en una conferencia de marcado, los UAs se conectan a un servidor central que maneja todas las mezclas. Este modelo no es escalable ya que está limitado por la potencia de procesamiento del servidor y el ancho de banda de la red. Las conferencias centralizadas ad hoc y los servidores de conferencias de marcado tienen mecanismos y problemas similares. Los modelos híbridos que involucran señalización centralizada y medios distribuidos, con estos últimos utilizando unicast o multicast, plantean problemas de escalabilidad como antes. Sin embargo, una ventaja es que el control de la conferencia puede ser una solución de terceros. La Mezcla Parcial Distribuida, presentada en [18], propone que en caso de limitación de ancho de banda, algunos flujos se mezclan y otros no, manteniendo la interactividad intacta. La pérdida de espacialidad cuando se mezclan y el aumento del ancho de banda cuando no lo hacen son problemas abiertos. Un estudio relacionado [19] del mismo autor propone una arquitectura de conferencias para Entornos Virtuales Colaborativos (CVEs) pero no proporciona el enfoque de escalabilidad sin la disponibilidad de la multidifusión. Teniendo en cuenta las limitaciones de los sistemas de conferencias propuestos, detallaremos ahora nuestra propuesta. 5. ARQUITECTURA DEL SISTEMA Esta sección está dedicada a la descripción de la arquitectura del sistema propuesto. Sin embargo, dado que este documento constituye la continuación de nuestro trabajo iniciado en [14] y ampliado en [16], no presentaremos aquí todos los detalles sobre las entidades propuestas e invitamos a los lectores a consultar los documentos mencionados anteriormente para obtener una descripción completa y detallada. Primero, no restringimos nuestro sistema de conferencias para funcionar solo en conferencias pequeñas, sino en grandes VCEs de audio que tienen cientos (o incluso miles) de usuarios a través de una Red de Área Amplia (WAN) como Internet. Esta perspectiva se deriva de una evaluación de que los VCEs ganarán importancia en el futuro, ya que las conferencias de audio interactivas serán más populares debido a la difusión de la cultura mediática en todo el mundo. Dos aspectos deben ser atendidos al construir un sistema de conferencias VoIP: (i) el front-end, que consiste en el programa de aplicación que se ejecuta en las computadoras de los usuarios finales y (ii) el back-end que proporciona otros programas de aplicación que facilitan las conferencias y la conferencia. Los usuarios participantes se agrupan en varios dominios. Estos dominios son Redes de Área Local (LAN), como redes corporativas o educativas. Esta suposición distribuida requiere soluciones de control y manejo de medios distribuidos, ya que los sistemas centralizados no serían escalables para conferencias tan grandes (ver Sección 4). Más explícitamente, en cada dominio, podemos identificar varios componentes lógicos relevantes de una instalación de conferencias (Fig. 1): Un número arbitrario de usuarios finales (clientes) que pueden participar en como máximo una conferencia de audio a la vez. Cada usuario es la Fig. 1. Ejemplo de conferencia: 3 dominios que contienen las entidades necesarias para que la conferencia pueda tener lugar. Incluidas en un único dominio en un instante dado, pero pueden moverse de un dominio a otro (nomadismo). En nuestro entorno de conferencias, estos clientes son Agentes de Usuario SIP (SIP UAs) regulares, según se define en [22], para lograr interoperabilidad con otros sistemas compatibles con SIP existentes. Estos clientes no son conscientes del entorno complejo que respalda la conferencia, lo cual se destaca a continuación. Un servidor SIP (SIPS) por dominio, encargándose de todos los aspectos de señalización de la conferencia (clientes que se unen, salen, etc.) [16]. En particular, se considera como una implementación física que abarca diferentes roles lógicos, a saber, un Servidor Proxy SIP, un Servidor Registrador SIP, un Servidor de Redirección SIP y un SIP B2BUA (Agente de Usuario de Vuelta a Vuelta) [22]. Esta implementación física permite el manejo de mensajes SIP entrantes/salientes por una u otra entidad lógica según sea necesario. SIPS está encargado de mantener un servicio total y tiene muchas ventajas, como (a) funciona como una entidad centralizada que puede hacer un seguimiento de las actividades de los UAs en una conferencia; (b) puede realizar todo el cambio para proporcionar funciones de PBX; (c) puede localizar a los UAs e invitarlos a una conferencia; (d) también puede encargarse de la facturación. Los SIPS en diferentes dominios se comunican entre sí utilizando mensajes SIP como se describe en [16]. Si la carga en un SIPS particular es demasiado pesada, puede crear otro SIPS en el mismo dominio para que la carga se comparta. Se crea un Servidor de Conferencias Maestro (M-CS) (simplemente un Servidor de Conferencias (CS)) para cada conferencia por el SIPS local cuando una conferencia comienza. Este servidor se utilizará para manejar paquetes de medios para los clientes del dominio. Su mecanismo será descrito en la siguiente sección. El M-CS podrá crear una jerarquía de CSs dentro de un dominio agregando uno o más CSs esclavos (S-CSs) para dar cabida a todos los clientes activos y prevenir su propia saturación al mismo tiempo. Veremos este mecanismo con cierto detalle en la secuela. Las entidades descritas aquí son exhaustivas y se ajustan a la filosofía del SIP. Por lo tanto, el uso de SIP hace que esta arquitectura sea más útil e interoperable con cualquier otro cliente o servidor SIP. PROBLEMAS ALGORÍTMICOS 6.1 Seleccionar los flujos similares a SipConf en [27], un Servidor de Conferencias (CS) [17] tiene la función de soportar la conferencia; es responsable de manejar los flujos de audio utilizando RTP. También puede duplicarse para convertir formatos de transmisión de audio para un cliente dado si es necesario y puede funcionar como Traductores/Mezcladores de la especificación RTP detrás de cortafuegos. Hemos basado el diseño de nuestro CS en el Procesador Multipunto (MP) H.323 [9]. En resumen, el MP recibe flujos de audio de los puntos finales involucrados en una conferencia multipunto centralizada o híbrida, los procesa y los devuelve a los puntos finales. Un procesador de señales de audio prepara N salidas de audio NMax a partir de M flujos de entrada después de la selección, mezcla o ambas. La mezcla de audio requiere decodificar el audio de entrada a señales lineales (PCM o analógicas), realizar una combinación lineal de las señales y volver a codificar el resultado en un formato de audio apropiado. El procesador de señales puede eliminar o atenuar algunas de las señales de entrada para reducir el ruido y los componentes no deseados. Fig. 2. \n\nFig. 2. El diagrama esquemático de un CS. La limitación de H.323 es que no aborda la escalabilidad de una conferencia. La arquitectura propone una topología en cascada o en cadena de margaritas [10], la cual se puede demostrar que no puede escalar para una conferencia grande. Un CS atiende a muchos clientes en la misma conferencia. Por lo tanto, solo maneja una conferencia a la vez. Varios CS pueden coexistir en un dominio, como cuando hay varias conferencias en curso. Los mensajes relacionados con la señalización de los CSs se tratan en [11]. El funcionamiento de un CS se ilustra en la Fig. 2: Para cada intervalo de mezcla, CS 1 elige los mejores NMax paquetes de audio de los M1 (utilizando un criterio denominado <br>Número de Volumen</br>, descrito en la siguiente subsección). Puede posiblemente recibir y enviar estos a CSs 2 a P. El conjunto de paquetes enviados se denota como AotrosCSs. En el mismo intervalo de mezcla, también recibe los mejores paquetes de audio NMax (de un posible M2) de CS 2, de manera similar a los mejores NMax (de un posible MP) de CS P. Para simplificar, ignoramos el retardo de propagación entre los CSs, que de hecho se puede tener en cuenta; está más allá del alcance de esta presentación. El conjunto de paquetes recibidos se denota como FromOtherCSs. Finalmente, selecciona los mejores paquetes NMax del conjunto {ToOtherCSs unión FromOtherCSs} y envía estos paquetes a su propio grupo. Se puede observar que el conjunto {ToOtherCSs unión FromOtherCSs} es el mismo en todos los CSs. Esto garantiza que cualquier cliente en la conferencia finalmente reciba el mismo conjunto de paquetes para mezclar. Por lo tanto, todos los clientes obtienen una vista común de la conferencia. De manera similar, para cada intervalo de tiempo (tiempo de paquete), se selecciona un subconjunto, F, de todos los clientes (utilizando el mismo criterio) del conjunto de paquetes de todos los otros CS más los NMax clientes seleccionados localmente. Sus paquetes se mezclan y se reproducen en los clientes. Según [15], la cardinalidad de F, |F| es NMax y está fijada en tres. En nuestra configuración de conferencias, la selección la realiza el Servidor Maestro de Conferencias (M-CS), que interviene exclusivamente en el manejo de medios. Ten en cuenta que aunque la especificación de SIP permite la comunicación directa de medios de usuario a usuario en una llamada uno a uno, también es posible utilizar el Servidor de Conferencias para llamadas de dos partes, especialmente porque es entonces más funcional crear una conferencia real agregando un tercero y posteriormente más participantes. Existen casos en los que la capacidad de procesamiento de un M-CS se ve superada, ya que puede tener demasiados paquetes, tanto de dominios locales como de dominios remotos, para procesar. En ese caso, el M-CS creará uno o varios S-CS (Fig. 6) y transferirá a sus propios clientes, así como a los nuevos clientes, a ellos. En esta configuración, el algoritmo descrito anteriormente se modificará ligeramente, ya que los paquetes de audio irán de los clientes a su S-CS dedicado, que seleccionará NMax paquetes para enviar al M-CS local, que luego seleccionará NMax paquetes de todos sus S-CS en el dominio antes de enviarlos a los dominios remotos. Los paquetes entrantes de otros dominios serán recibidos por el M-CS, se seleccionarán NMax de ellos y se enviarán directamente a los clientes del dominio, evitando los SCSs. Este cambio implica que existen como máximo tres entidades intermedias para cada paquete de audio, en lugar de dos en la configuración convencional. Dado que el salto adicional ocurre dentro de la LAN que se supone tiene una conectividad de alta velocidad, consideramos que no debería impedirnos usar esta jerarquía de CS cuando sea necesario hacerlo. 6.2 <br>Número de Sonoridad</br> (LN) Una pregunta básica que debe responder el CS es la siguiente. En un intervalo de mezcla, ¿cómo debería elegir NMax paquetes de los M que podría recibir? Una forma es clasificar los paquetes M recibidos según sus energías y elegir los NMax mejores. Sin embargo, esto suele considerarse insuficiente porque las fluctuaciones aleatorias en las energías de los paquetes pueden provocar una mala calidad de audio. Esto indica la necesidad de una métrica diferente de meras energías individuales de paquetes. El medidor debe tener las siguientes características [12]: • Un hablante (ocupante del suelo) no debe ser interrumpido por un pico en la energía del paquete de otro hablante. Esto implica que la historia del discurso de un hablante debería tener cierto peso. Esto se suele llamar Persistencia o Resaca. • Un participante que quiera interrumpir a un orador tendrá que (i) hablar en voz alta y (ii) seguir intentándolo por un tiempo breve. En una conferencia presencial, el lenguaje corporal a menudo indica la intención de interrumpir. Pero en una conferencia a ciegas en discusión, la intención de un participante de interrumpir puede ser transmitida de manera efectiva a través de LN. Se debe garantizar un mecanismo de control de piso habilitado para cortar a un orador de manera contundente. Estos requisitos son cumplidos por el <br>Número de Volumen</br> [12], que cambia suavemente con el tiempo para que la selección (adición y eliminación) de clientes para la conferencia sea elegante. ",
            "candidates": [],
            "error": [
                [
                    "Número de Volumen",
                    "Número de Sonoridad",
                    "Número de Volumen",
                    "Número de Sonoridad",
                    "Número de Volumen"
                ]
            ]
        },
        "partial mixing": {
            "translated_key": "mezcla parcial",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Deployment Issues of a VoIP Conferencing System in a Virtual Conferencing Environment R. Venkatesha Prasad i Richard Hurni ii H.S.",
                "Jamadagni iii H.N.",
                "Shankar iv i, iii Centre for Electronics Design and Technology Indian Institute of Science, Bangalore, India Telephone: +91 80 360 0810 i, iii {vprasad, hsjam}@cedt.iisc.ernet.in ii hurni@ieee.org iv hn_shankar@yahoo.com ABSTRACT Real-time services have been supported by and large on circuitswitched networks.",
                "Recent trends favour services ported on packet-switched networks.",
                "For audio conferencing, we need to consider many issues - scalability, quality of the conference application, floor control and load on the clients/servers - to name a few.",
                "In this paper, we describe an audio service framework designed to provide a Virtual Conferencing Environment (VCE).",
                "The system is designed to accommodate a large number of end users speaking at the same time and spread across the Internet.",
                "The framework is based on Conference Servers [14], which facilitate the audio handling, while we exploit the SIP capabilities for signaling purposes.",
                "Client selection is based on a recent quantifier called Loudness Number that helps mimic a physical face-to-face conference.",
                "We deal with deployment issues of the proposed solution both in terms of scalability and interactivity, while explaining the techniques we use to reduce the traffic.",
                "We have implemented a Conference Server (CS) application on a campus-wide network at our Institute.",
                "Categories and Subjects Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - Client / Server, distributed applications.",
                "General Terms Algorithms, Performance, Design, Theory. 1.",
                "INTRODUCTION Todays Internet uses the IP protocol suite that was primarily designed for the transport of data and provides best effort data delivery.",
                "Delay-constraints and characteristics separate traditional data on the one hand from voice & video applications on the other.",
                "Hence, as progressively time-sensitive voice and video applications are deployed on the Internet, the inadequacy of the Internet is exposed.",
                "Further, we seek to port telephone services on the Internet.",
                "Among them, virtual conference (teleconference) facility is at the cutting edge.",
                "Audio and video conferencing on Internet are popular [25] for the several advantages they inhere [3,6].",
                "Clearly, the bandwidth required for a teleconference over the Internet increases rapidly with the number of participants; reducing bandwidth without compromising audio quality is a challenge in Internet Telephony.",
                "Additional critical issues are: (a) packet delay, (b) echo, (c) mixing of audio from selected clients, (d) automatic selection of clients to participate in the conference, (e) playout of mixed audio for every client, (f) handling clients not capable of mixing audio streams (such clients are known as dumb clients), and (g) deciding the number of simultaneously active clients in the conference without compromising voice quality.",
                "While all the above requirements are from the technology point of view, the users perspective and interactions are also essential factors.",
                "There is plenty of discussion amongst HCI and CSCW community on the use of Ethnomethodology for design of CSCW applications.",
                "The basic approach is to provide larger bandwidth, more facilities and more advanced control mechanisms, looking forward to better quality of interaction.",
                "This approach ignores the functional utility of the environment that is used for collaboration.",
                "Eckehard Doerry [4] criticizes this approach by saying it is keeping form before function.",
                "Thus, the need is to take an approach that considers both aspects - the technical and the functional.",
                "Regarding the functional aspect, we refer to [15] where it has been dealt with in some detail.",
                "In this work, we do not discuss video conferencing; its inclusion does not significantly benefit conference quality [4].",
                "Our focus is on virtual audio environments.",
                "We first outline the challenges encountered in virtual audio conferences.",
                "Then we look into the motivations followed by relevant literature.",
                "In Section 5, we explain the architecture of our system.",
                "Section 6 comprises description of the various algorithms used in our setup.",
                "We address deployment issues.",
                "A discussion on Swiss Federal Institute of Technology, Lausanne.",
                "Former visitor at CEDT.",
                "PESIT and NIAS, Bangalore, India.iv ii performance follows.",
                "We conclude taking alongside some implementation issues. 2.",
                "CHALLENGES IN VoIP CONFERENCING Many challenges arise in building a VoIP application.",
                "The following are of particular concern in the process: • Ease of use: Conferencing must be simple; users need no domain expertise.",
                "Management (addition/removal) of clients and servers must be uncomplicated.",
                "Application development should not presuppose specific characteristics of the underlying system or of network layers.",
                "Ease of use may include leveraging readily available, technically feasible and economically viable technologies. • Scalability: Conferencing must seem uninterrupted under heavy loads, i.e., when many additional users are added on.",
                "Traffic on WAN should not grow appreciably with the total number of clients; else, this has lead to congestion.",
                "So a means to regulate traffic to a minimum is needed for this kind of real-time applications. • Interactivity: In Virtual Conferencing Environments (VCEs), we intend a face-to-face-like conferencing application that mimics a real conference, where more vocal participants invite attention.",
                "Turn-taking in floor occupation by participants must be adapted gracefully to give a feel of natural transition. • Standardization: The solution must conform to established standards so as to gain interoperability and peer acceptance.",
                "The above requirements are placed in the perspective of observations made in earlier works (vide Sections 3 and 4) and will steer the VCE design. 3.",
                "THE MOTIVATION Ramanathan and Rangan [20] have studied in detail the architectural configurations comparing many conferencing architecture schemes taking into consideration the network delay and computation requirements for mixing.",
                "Functional division and object-oriented architecture design that aid in implementation is presented in [1].",
                "An overview of many issues involved in supporting a large conference is dealt in [8].",
                "H. P. Dommel [5] and many others highlight floor control as another pivotal aspect to be taken into account in designing a conferencing tool.",
                "Tightly coupled conference control protocols in Internet belong to the ITU-T H.323 family [9]; however, they are mainly for small conferences.",
                "The latest IETF draft by Rosenberg and Schulzrinne [23] discusses conferencing models with SIP [22] in the background.",
                "Aspects of implementation for centralized SIP conferencing are reported in [26].",
                "A new approach called <br>partial mixing</br> by Radenkovic [18] allows for mixed and non-mixed streams to coexist.",
                "In all the above proposals, while there are some very useful suggestions, they share one or more of the following limitations: • In an audio conference, streams from all the clients need not be mixed.",
                "Actually, mixing many arbitrary streams [24] from clients degrades the quality of the conference due to the reduction in the volume (spatial aspect of speech).",
                "The number of streams mixed varies dynamically depending on the number of active participants.",
                "This would lead to fluctuations in the volume of every individual participant causing severe degradation in quality.",
                "Customized mixing of streams is not possible when many clients are active.",
                "There is a threshold on the number of simultaneous speakers above which increasing the number of speakers becomes counterproductive to conference quality.",
                "Fixing the maximum number of simultaneous speakers is dealt in a recent work [15] using Ethnomethodology, and is conjectured to be three.",
                "Thus it is advisable to honour that constraint. • There cannot be many intermediate mixers (similarly, Conference Servers as in [10]) in stages as in [20] because it brings in inordinate delay by increasing the number of hops and is not scalable with interactivity in focus. • Floor Control for an audio conference (even video conference) with explicit turn-taking instructions to participants renders the conference essentially a one-speakerat-a-time affair, not a live and free-to-interrupt one.",
                "This way, the conference becomes markedly artificial and its quality degrades.",
                "Schulzrinne et al. [24], assume only one participant is speaking at a time.",
                "In this case, if applications are implemented with some control [5], the service becomes gagging for the users. • <br>partial mixing</br> [18] has a similar problem as that of mixing when more streams are mixed.",
                "Moreover, in [18], to allow impromptu speech, mixing is not done when the network can afford high bandwidth requirements for sending/receiving all the streams, but it is unnecessary [15]. • For large conferences [23, 10] a centralized conference cannot scale up.",
                "With multicasting, clients will have to parse many streams and traffic on a clients network increases unnecessarily.",
                "Evidently, different particular issues, all of which are a subset of requirements (defined in [14] and [16]) for a VoIP conferencing support, are tackled.",
                "Thus there is a need to address conferencing as a whole with all its requirements considered concurrently.",
                "Towards this goal, the VoIP conferencing system we propose is intended to be scalable and interactive.",
                "We make use of the Loudness Number for implementing floor control.",
                "This permits a participant to freely get into the speaking mode to interrupt the current speaker as in a natural face-to-face meeting.",
                "An upper limit on the number of floors (i.e., the number of speakers allowed to speak at the same time) is fixed using a conjecture proposed in [15].",
                "The work presented here is in continuation of our studies into conferencing based on the Session Initiation Protocol in [14] and [16].",
                "SIP, defined in [22] is now the most popular standard for VoIP deployment and has been chosen for its strength, ease of use, extensibility and compatibility.",
                "This is the reason it will be in the background of all controlling messages that will implicitly arise between the entities in our architecture.",
                "The actual messages are described in [16] and, as such, we do not present a complete description of them here. 4.",
                "RELATED WORK The SIP standard defined in RFC 3261 [22] and in later extensions such as [21] does not offer conference control services such as floor control or voting and does not prescribe how a conference is to be managed.",
                "However SIP can be used to initiate a session that uses some other conference control protocol.",
                "The core SIP specification supports many models for conferencing [26, 23].",
                "In the server-based models, a server mixes media streams, whereas in a server-less conference, mixing is done at the end systems.",
                "SDP [7] can be used to define media capabilities and provide other information about the conference.",
                "We shall now consider a few conference models in SIP that have been proposed recently [23].",
                "First, let us look into server-less models.",
                "In End-System Mixing, only one client (SIP UA) handles the signaling and media mixing for all the others, which is clearly not scalable and causes problems when that particular client leaves the conference.",
                "In the Users Joining model, a tree grows, as each invited party constitutes a new branch in the distribution path.",
                "This leads to an increasing number of hops for the remote leaves and is not scalable.",
                "Another option would be to use multicast for conferencing but multicast is not enabled over Internet and only possible on a LAN presently.",
                "Among server-based models, in a Dial-In Conference, UAs connect to a central server that handles all the mixing.",
                "This model is not scalable as it is limited by the processing power of the server and bandwidth of the network.",
                "Adhoc Centralized Conferences and Dial-Out Conference Servers have similar mechanisms and problems.",
                "Hybrid models involving centralized signaling and distributed media, with the latter using unicast or multicast, raise scalability problems as before.",
                "However an advantage is that the conference control can be a third party solution.",
                "Distributed <br>partial mixing</br>, presented in [18], proposes that in case of bandwidth limitation, some streams are mixed and some are not, leaving interactivity intact.",
                "Loss of spatialism when they mix and the bandwidth increase when they do not are open problems.",
                "A related study [19] by the same author proposes conferencing architecture for Collaborative Virtual Environments (CVEs) but does not provide the scalability angle without the availability of multicasting.",
                "With the limitations of proposed conferencing systems in mind, we will now detail our proposal. 5.",
                "SYSTEM ARCHITECTURE This section is dedicated to the description of the proposed system architecture.",
                "However, as this paper constitutes the continuation of our work started in [14] and furthered in [16], we will not present here all the details about the proposed entities and invite the readers to consult the papers mentioned above for a full and thorough description.",
                "First, we do not restrict our conferencing system to work on small conferences only, but rather on large audio VCEs that have hundreds (or even thousands) of users across a Wide Area Network (WAN) such as the Internet.",
                "This view stems from an appraisal that VCEs will gain in importance in the future, as interactive audio conferences will be more popular because of the spread of the media culture around the world.",
                "Two issues must be taken care of when building a VoIP conferencing system: (i) the front-end, consisting of the application program running on the end-users computers and (ii) the back-end that provides other application programs that facilitate conferencing and conference.",
                "The participating users are grouped into several domains.",
                "These domains are Local Area Networks (LANs), such as corporate or educational networks.",
                "This distributed assumption asks for distributed controlling and media handling solutions, as centralized systems would not scale for such very large conferences (vide Section 4).",
                "More explicitly, in each domain, we can identify several relevant logical components of a conferencing facility (Fig. 1):  An arbitrary number of end users (clients) that can take part in at most one audio conference at a time.",
                "Every user is Fig. 1.",
                "Conference example - 3 domains containing the necessary entities so that the conference can take place. included in one and only one domain at a given instant, but can move from domain to domain (nomadism).",
                "In our conferencing environment, these clients are regular SIP User Agents (SIP UAs), as defined in [22] so to gain in interoperability with other existing SIP-compatible systems.",
                "These clients are thus not aware of the complex setting that supports the conference and this is highlighted below.  One SIP Server (SIPS) per domain, taking care of all the signaling aspects of the conference (clients joining, leaving, etc.) [16].",
                "In particular, it is considered as a physical implementation encompassing different logical roles, namely a SIP Proxy Server, a SIP Registrar Server, a SIP Redirect Server and a SIP B2BUA (Back-to-Back User Agent) [22].",
                "This physical implementation enables the handling of incoming/outgoing SIP messages by one or another logical entity according to the needs.",
                "SIPS is entrusted with maintaining total service and has many advantages such as (a) it works as a centralized entity that can keep track of the activities of the UAs in a conference; (b) it can do all the switching for providing PBX features; (c) it can locate the UAs and invite them for a conference; (d) it can do the billing as well.",
                "SIPSs in different domains communicate with each other using SIP messages as described in [16].",
                "If the load on a particular SIPS is too heavy, it can create another SIPS in the same domain so that the load will be shared.  One Master Conference Server (M-CS) (simply a Conference Server (CS)) for each conference is created by the local SIPS when a conference starts.",
                "This server will be used for handling media packets for the clients of the domain.",
                "Its mechanism will be described in the next section.",
                "The M-CS will be able to create a hierarchy of CSs inside a domain by adding one or more Slave CSs (S-CSs) to accommodate all the active clients and prevent its own flooding at the same time.",
                "We will see this mechanism in some detail in the sequel.",
                "The entities described here are exhaustive and conform to the SIP philosophy.",
                "Thus, the use of SIP makes this architecture more useful and interoperable with any other SIP clients or servers. 6.",
                "ALGORITHMIC ISSUES 6.1 Selecting the Streams Similar to SipConf in [27], a Conference Server (CS) [17] has the function of supporting the conference; it is responsible for handling audio streams using RTP.",
                "It can also double to convert audio stream formats for a given client if necessary and can work as Translators/Mixers of RTP specification behind firewalls.",
                "We have based the design of our CS on H.323 Multipoint Processor (MP) [9].",
                "In short, the MP receives audio streams from the endpoints involved in a centralized or hybrid multipoint conference, processes them and returns them to the endpoints.",
                "An MP that processes audio prepares NMax audio outputs from M input streams after selection, mixing, or both.",
                "Audio mixing requires decoding the input audio to linear signals (PCM or analog), performing a linear combination of the signals and reencoding the result in an appropriate audio format.",
                "The MP may eliminate or attenuate some of the input signals in order to reduce noise and unwanted components.",
                "Fig. 2.",
                "Schematic diagram of a CS The limitation of H.323 is that it does not address the scalability of a conference.",
                "The architecture proposes a cascaded or daisy chain topology [10], which can be shown that it cannot scale up for a large conference.",
                "A CS serves many clients in the same conference.",
                "Thus it handles only one conference at a time.",
                "Multiple CSs may coexist in a domain, as when there are several conferences under way.",
                "Signaling-related messages of CSs are dealt in [11].",
                "The working of a CS is illustrated on Fig. 2: For each mixing interval, CS 1 chooses the best NMax audio packets out of the M1 (using a criterion termed Loudness Number, described in the next subsection).",
                "It may possibly receive and sends these to CSs 2 to P. The set of packets sent is denoted as ToOtherCSs.",
                "In the same mixing interval, it also receives the best NMax audio packets (out of possibly M2) from CS 2, similarly the best NMax (out of possibly MP) from CS P. For simplicity, we ignore propagation delay between CSs which indeed can be taken into account; it is beyond the scope of this presentation.",
                "The set of packets received is denoted as FromOtherCSs.",
                "Finally, it selects the best NMax packets from the set {ToOtherCSs union FromOtherCSs} and passes these packets to its own group.",
                "It can be seen that the set {ToOtherCSs union FromOtherCSs} is the same at all CSs.",
                "This ensures that any client in the conference finally receives the same set of packets for mixing.",
                "Hence all clients obtain a common view of the conference.",
                "Similarly, for each time slot (packet time), a subset, F of all clients is selected (using the same criterion) from the pool of packets from all other CSs plus the NMax clients selected locally.",
                "Their packets are mixed and played out at the clients.",
                "According to [15], the cardinality of F, |F| is NMax and is fixed at three.",
                "In our conferencing setup, selection is by the Master Conference Server (M-CS), which comes into the picture exclusively for media handling.",
                "Note that even if the SIP specification enables direct UA-to-UA media communication in a one-to-one call, it is also possible to use the Conference Server for two-party calls, especially because it is then more functional to create a real conference by adding a third and subsequently more participant(s).",
                "There are cases wherein the processing capacity of an M-CS is exceeded as it may have too many packets - from local domains and from remote domains - to process.",
                "In that case, the M-CS will create one or many S-CS (Fig. 6) and transfer its own clients as well as the new clients to them.",
                "In this configuration, the algorithm outlined above will be slightly modified, as the audio packets will go from clients to their dedicated S-CS that will select NMax packets to send to the local M-CS, which will then select NMax packets from all its S-CSs in the domain before sending them to the remote domains.",
                "The incoming packets from other domains will be received by the M-CS, select NMax of them and send them directly to the domain clients, bypassing the SCSs.",
                "This change implies that at most three intermediate entities exist for each audio packet, instead of two in the conventional setup.",
                "As the extra hop happens inside the LAN supposed to have a high-speed connectivity, we consider that it should not prevent us from using this hierarchy of CSs when theres a need to do so. 6.2 Loudness Number (LN) A basic question to be answered by the CS is the following.",
                "In a mixing interval, how should it choose NMax packets out of the M it might possibly receive?",
                "One way is to rank the M packets received according to their energies, and choose the top NMax.",
                "However, this is usually found to be inadequate because random fluctuations in packet energies can lead to poor audio quality.",
                "This indicates the need for a metric different from mere individual packet energies.",
                "The metric should have the following characteristics [12]: • A speaker (floor occupant) should not be cut off by a spike in the packet energy of another speaker.",
                "This implies that a speakers speech history should be given some weight.",
                "This is often referred to as Persistence or Hangover. • A participant who wants to interrupt a speaker will have to (i) speak loudly and (ii) keep trying for a little while.",
                "In a face-to-face conference, body language often indicates the intent to interrupt.",
                "But in a blind conference under discussion, a participants intention to interrupt can be conveyed effectively through LN.",
                "A floor control mechanism empowered to cut off a speaker forcefully must be ensured.",
                "These requirements are met by Loudness Number [12], which changes smoothly with time so that the selection (addition and deletion) of clients for conference is graceful.",
                "LN (= ) is a function of the amplitude of the current audio stream plus the activity and amplitude over a specific window in the past.",
                "Fig. 3.",
                "The different windows used for LN computation The Loudness Number is updated on a packet-by-packet basis.",
                "The basic parameter used here is packet amplitude, which is calculated as root mean square (rms) of the energies in audio samples of a packet, and denoted by XK.",
                "Three windows are defined as shown in Fig. 3.",
                "The present amplitude level of the speaker is found by calculating the moving average of packet amplitude (XK) within a window called Recent Past Window starting from the present instant to some past time.",
                "The past activity of the speaker is found by calculating the moving average of the packet amplitude (XK) within a window called Distant Past Window, which starts at the point where the Recent Past window ends and stretches back in the past for a pre-defined interval.",
                "The activity of the speaker in the past is found with a window called Activity Horizon, which spans the recent past window as well as the distant past window and beyond if necessary.",
                "Though the contribution of the activity horizon looks similar to the contribution of the recent past and distant past windows, past activity is computed from activity horizon window in a differently.",
                "Define the quantities during these three intervals as L1, L2 and L3.",
                "L1 quantifies the Recent Past speech activity, L2 the Distant Past speech activity and L3 gives a number corresponding to the speech activity in the Activity Horizon window quantifying how active the speaker was in the past few intervals.",
                "L3 yields a quantity that is proportional to the fraction of packets having energies above a pre-defined threshold (Eq. 3).",
                "The threshold is invariant across clients. ∑ +− = = 1 1 1 RPP P Wt tK K RP X W L (1) ∑ +−− −= = 1 2 1 DPRPP RPP WWt WtK K DP X W L (2) ∑ +− = ≥= 1 }{3 * 1 AHP P K Wt tK X AH I W L θθ (3) Where ifI KX 1}{ =≥θ θ≥KX = otherwise,0 The threshold is a constant. is set at 10-20 percent of the amplitude of the voice samples of a packet in our implementation here.",
                "Loudness Number λ for the present time instant (or the present packet) is calculated as, 332211 *L*L*L αααλ ++= (4) Here 1\u000f 2 DQG 3 are chosen such that: 0< 1\u000f 2\u001f\u0014\u000f \u0013\u001f 1\u000e 2\u001f\u0014 DQG 3=1-\u000b 1\u000e 2) Here, 1 is the weight given to the recent past speech, 2 is the weight given to distant past speech and 3 is the weight given to speech activity in the activity horizon window considered. 6.3 Safety, Liveness and Fairness The λ parameter KDV VRPH PHPRU\\ GHSHQGLQJ RQ WKH VSUHDG RI the windows.",
                "After one conferee becomes silent, another can take the floor.",
                "Also, as there is more than one channel, interruption is enabled.",
                "A loud conferee is more likely to be heard because of elevated λ.",
                "This ensures fairness to all conferees.",
                "After all, even in a face-to-face conference, a more vocal speaker grabs special attention.",
                "All these desirable characteristics are embedded into the LN.",
                "A comprehensive discussion on selection of the various parameters and the dynamics of LN are beyond the scope of this paper. 6.4 Selection Algorithm using the LN Following the developments in subsections 6.1 and 6.2, we present the simple algorithm that runs at each Master-Conference Server (Algorithm. 1).",
                "This algorithm is based on the discussions in section 6.1.",
                "The globally unique set F is found using this procedure.",
                "Repeat for each time slot at each M-CS { 1.",
                "Get all the packets from the Clients that belong to it. 2.",
                "Find at most NMax Clients that have PD[LPXP RXW RI 0 &OLHQWV LQ LWV GRPDLQ\u0011 3.",
                "Store a copy of packets from those NMax Clients in database DB1. 4.",
                "Send these NMax packets to other M-CSs (on Unicast or Multicast, depending on the configuration). 5.",
                "Similarly, receive packets from all other M-CSs and store them in database DB2. 6.",
                "Now compare the packets in DB1 and DB2 on WKH EDVLV RI DQG VHOHFW D PD[LPXP RI NMax amongst them (to form set F) that should be played out at each Client. 7.",
                "Send the NMax packets in set F to the Clients in its domain. 8.",
                "Mix these NMax audio packets in set F after linearising and send it to dumb Clients in the domain. }",
                "Algorithm 1.",
                "Selection algorithm The mechanism proposed here is also depicted on Fig. 6, where a single conference takes place between three domains.",
                "The shaded clients are the ones selected in their local domains; their audio streams will be sent to other CSs. 7.",
                "DEPLOYMENT ISSUES We now analyze deployment issues associated with conference management.",
                "How are domains to be organized to maximize the number of participants able to join?",
                "To address this, we define some useful parameters.  Let d be the number of different domains in which there are active clients in a given conference.  Let Mi be the number of active clients present in domain i ( di ≤≤1 ) in a given conference.",
                "The total number of active clients in the conference is thus ∑= = d i iMM 1 .  Let C be the maximum number of audio streams a Conference Server can handle in a packet time, also called capacity.",
                "C is set according to the processing power of the weakest CS in the conference but as it cannot be assumed that we know it a-priori, it can be set according to some minimum system requirement a machine must meet in order to take part in a conference.  Let NMax be the number of output streams a CS has to send to other CSs in remote domains (see section 6.1).",
                "We will set NMax =3 (=|F|), according to [15].",
                "The optimization problem is now to find the value of d that maximizes the total number of clients Mi served by one CS in a domain with capacity C. We first dispose the case where the capacity is not exceeded (the existing CS is not overloaded), and then proceed to the case where there exists a need to create more CSs when a single CS is overloaded.",
                "We assume that clients are equally distributed amongst the domains, as we may not have information to assume an a-priori distribution of the clients.",
                "We can specify no more than an upper bound on the number of clients acceptable, given the number of active domains d. 7.1 Conferencing with only One Level of CSs In this subsection, we consider that we have only one CS, i.e., a unique M-CS in each domain.",
                "Thus it cannot be overloaded.",
                "We consider that the system works as outlined in section 6.1: The Clients send their audio packets to their local CS, which selects NMax streams, before sending them to other CSs.",
                "In parallel, it also receives NMax streams for every other CSs before taking a decision on which NMax streams will be selected, sent and played out at each individual clients.",
                "For system stability, any CS in the conference should be able to handle its local clients in addition to the audio packets from other domains.",
                "Clearly then, the following inequality must hold for every domain: )1( −⋅+≥ dN d M C Max (5) The limiting case of (5) (taking the equality) takes the form 2 )( dNdNCM MaxMax ⋅−⋅+= (6) To optimize d with respect to M, we set 0)(2 =+−⋅⋅= ∂ ∂ MaxMax NCdN d M (7) yielding     ⋅ + = Max Max N NC d 2 (8) ([ ]* = Rounding to nearest integer) and hence, M from (6).",
                "C d M 50 9 234 100 17 884 150 26 1950 200 34 3434 250 42 5334 300 51 7650 350 59 10384 400 67 13534 450 76 17100 500 84 21084 Table 1.",
                "Values of d and M computed for some values of C with NMax = 3.",
                "In Table 1, we give the values of d and M that were computed using (8) and (6) with NMax = 3.",
                "We see that the values of d and M, being dependent of C, are therefore based on the weakest CS.",
                "We see that there is a trade-off between M and d. We could admit more domains in the conference, but at the expense of restricting the total number of clients M in the conference.",
                "While implementing and testing the Conference Servers on a Pentium III 1.4 GHz running Windows NT, we were able to set C=300.",
                "But with the advent of faster computers (> 3 GHz), one can easily set C to higher values and determine d and M accordingly.",
                "Fig. 4 shows a contour plot and Fig. 5, a 3D-mesh showing optimized solutions for CSs of different capacities.",
                "These lead us to maximize the number of domains, and hence, to maximize the total number of clients based on the capacity of various CSs.",
                "In Fig. 4, the individual curves represent the total number of clients targeted, and we select a lower value of d, for capacity C, for targeted M to reduce traffic on WAN.",
                "Fig. 5 represents a different perspective of the same data in 3D.",
                "Fig. 4.",
                "Contour Plot of Capacity versus Optimum number of domains for various conference sizes 7.2 Conferencing with Two Levels of CSs Now considering the case where the number of clients in a particular domain is too large, i.e., d M Mi ≥ (9) one has to avoid the denial of service for new clients due to overloading of Conference Server.",
                "This problem can be solved by introducing a second level of CSs inside the given domain, as in Fig. 6.",
                "The existing M-CS creates a Slave CS (S-CS) that can handle up to C end-users and to which it transfers all its active clients.",
                "Here, the system works differently as outlined in section 6.1: The Clients send their audio packets to their local S-CS, which selects NMax streams, before sending them to a local M-CS, which will proceed in the same way, before sending NMax streams to the other domains.",
                "Each newly created S-CS must run on a separate machine.",
                "The M-CS has to create more S-CSs if the number of active clients exceeds C in the course of the conference after the transfer.",
                "With this mechanism, the M-CS will be able to create utmost     −⋅− = Max Max N dNC U )1( S-CSs, (10) as it must handle 3 (= NMax) packets for each local S-CSs and 3 (= NMax) packets from each other remote domains.",
                "We can then calculate the maximum theoretical number of active clients CUMi ⋅= in each domain as well as M, for the whole conference as CUdM ⋅⋅= .",
                "Fig. 5. 3D Plot of Capacity versus Optimum number of domains for various conference sizes Of course, one could further create a third level in the hierarchy, giving the possibility of accommodating even more clients.",
                "This may be unnecessary as the number of possible clients is large enough with two levels. 8.",
                "PERFORMANCE DISCUSSION We now analyze the performance of the algorithm presented in subsection 6.3, i.e., the one taking care of the exchange of audio packets between the different domains.",
                "Note that the packets that are transiting within the LAN take advantage of the higher capacity (generally coupled with multicast capabilities) and therefore do not require a performance analysis.",
                "Thus we have to look only at the RTP packets over the WAN, i.e., between participating M-CSs.",
                "As each M-CS from a domain will be sending only NMax out of d M packets to the other CSs ( MaxN d M >> ), the bandwidth used by the application over a WAN is upper-bounded by the following expression.",
                "The total number of audio packets transiting over the WAN for each time slot is ∑ ∑= ≠=        d i d ijj MaxN 1 ,1 which is quadratic in the number of domains (i.e., O(d2 )).",
                "However, it is independent of the total number of active clients.",
                "This would not have been the case had all packets been sent over the network in each time slot.",
                "The saving is tremendous.",
                "Yet, one may contend that sending three packets to and from all domains is a waste of resources, as most of these streams will not be selected.",
                "If just one client is active, selecting a subset of clients in that domain is unnecessary.",
                "Pessimistic and optimistic algorithms as presented in the sequel aim at reducing the traffic further by harnessing the slow varying nature of the LN. 8.1 Pessimistic algorithm Consider a scenario wherein the lowest LN (called LNt) of the three globally selected streams (set F of Section 6.1) exceeds the LN of the most dominant stream of a domain.",
                "Evidently, the chances that the next two dominant streams of that domain being selected to F in the next packet period are less.",
                "Here, we send this most dominant stream and withhold the other two.",
                "There may be an error in unique selection across all domains for one packet period only.",
                "As LN varies slowly, the error would get automatically rectified in a subsequent packet period (slot).",
                "In this algorithm, there is at least one stream in each period.",
                "The net network traffic in a packet period in the best case is )1( −⋅ dd , i.e., )( 2 dO using unicast, instead of MaxNdd ⋅−⋅ )1( .",
                "Considerable valuable bandwidth can be saved using this heuristic.",
                "The resulting traffic complexity reduces from O(d2 ) to O(d) in multicast-enabled networks.",
                "Initialize LNt = 0 at an M-CS/S-CS A.",
                "In the first time slot (packet time), each CS sends the top NMax streams (based on their LN) to all other CSs.",
                "At each M-CS/S-CS and for each packet time: B.",
                "Find the value of lowest LN of the NMax globally selected streams (set F) from the previous time slot.",
                "Set LNt with this value.",
                "C. At each CS domain, select the NMax local streams that have maximum value of LN (ToOtherCSs set).",
                "D. Select streams that have LN > LNt.",
                "IF there are >= NMax streams with LN > LNt then send top NMax to other CSs.",
                "ELSE IF there are (NMax-1) streams with LN>LNt then send top (NMax-1) plus the one lower than LNt (i.e., top NMax) to other CSs.",
                "ELSE IF there are (NMax-2) streams with LN>LNt then send top (NMax-2) plus the one lower than LNt (i.e. top (NMax -1)) to other CSs. …… ELSE IF there are NO streams with LN> LNt then send top 1 stream to other CSs.",
                "E. Packets sent in step D form DB1.",
                "Packets received from other CSs form DB2.",
                "F. For this time slot, find global NMax streams based on LN from DB1 U DB2 (set F) G. Send set F to the clients in its domain.",
                "Update LNt for the next period.",
                "Algorithm 2.",
                "Pessimistic algorithm to reduce the number of packets sent over the Internet.",
                "Fig. 6.",
                "Example of a 2-level hierarchy of Conference Servers; the shaded Clients are the one selected by the M-CS and will be sent to other domains CSs.",
                "In this algorithm the saving in traffic is at the cost of relaxing the condition of formation of globally unique set F. However, the discrepancies in selected streams at different domains remain for a short period of time depending on the transportation delay between any two domains.",
                "Even for a total delay of 400ms, for only 10 packet time slots the uniqueness is lost.",
                "This duration in a real-time interactive conversation is non-perceivable by the listener.",
                "In the case that there is a joke and every one laughs, then there would be sudden rise in the number of packets and it would be upper bounded by MaxN)d(O 2 for a short period. 8.2 Optimistic Algorithm The traffic can be reduced further.",
                "The scheme in the following algorithm (Algorithm. 3) is withholding all the streams that have less value of LN compared to the least of the three in the set F. We can find the correct and unique three streams after a few time slots depending on the transportation delay between the domains.",
                "As the packet period is of the order of 40ms, the error in the selection is unnoticeable.",
                "The number of streams on network in this case is always restricted to NMax (=3).",
                "Even without Voice Activity Detection (VAD), there will be no more than three streams in the network in the best case, thus the total traffic is constant.",
                "A sudden burst of traffic, as described in 8.1, is a particular case.",
                "These advantages are due to exploitation of the characteristics of LN.",
                "Initialize LNt = 0 at an M-CS/S-CS A.",
                "In the first time slot (packet time), each CS sends the top NMax streams (based on their LN) to all other CSs.",
                "At each M-CS/S-CS and for each packet time: B.",
                "Find the value of lowest LN of the NMax globally selected streams (set F) from the previous time slot.",
                "Set LNt with this value.",
                "C. At each CS domain, select the NMax local streams that have maximum value of LN (ToOtherCSs set) D. Select streams that have LN > LNt IF there are >= NMax streams with LN > LNt then send top NMax to other CSs.",
                "ELSE IF there are (NMax-1) streams with LN>LNt then send top (NMax-1) and see E. ELSE IF there are (NMax-2) streams with LN>LNt then send top (NMax-2) and see E. …… ELSE IF there are NO streams with LN> LNt then dont send any stream.",
                "E. Exceptions: IF the stream that was in F in the last interval belongs to this CS then select and send that stream even if its LN is now < LNt. (Note this occurs only at that CS which had the stream that was the last of the three in the previous packet period.)",
                "F. Packets sent in step D and E form DB1.",
                "Packets received from other CSs form DB2.",
                "G. For this time slot, find global NMax streams based on LN from DB1 U DB2 (set F).",
                "H. Send set F to the clients in its domain.",
                "Update LNt for the next period.",
                "Algorithm 3.",
                "Optimistic algorithm to reduce the number of packets sent over the Internet Furthermore, when VAD is used [13], it would further reduce the traffic by sending the header part of the RTP packet only and not the whole packet, thus in order to keep updating the LN across.",
                "The traffic here in this case is O(NMax) for multicast and O(d) for unicast.",
                "We see that the above algorithms save bandwidth and computation at each CS, and leads to a scalable architecture with multiple CSs mainly because clients are grouped in domains.",
                "The necessary bandwidth is not dependent on the total number of active clients.",
                "As the CS always chooses the best three clients out of all the clients assigned to it in the domain, addition of new clients to the existing conference will not cause any scalability problem. 8.3 Availability of Multicasting In the architecture that has been proposed, no assumption was made about the availability of multicasting support from the network.",
                "The traffic will be further reduced if multicasting is available over WAN.",
                "It is simple to show that the order of traffic would tend to become O(d) from O(d2 ).",
                "This is an approximation as saving in multicasting depends also on the topology.",
                "The analysis was done for the case wherein multicast is not available (a realistic assumption in todays Internet).",
                "The advantage of this set up is that we can use it even if multicasting is partially available.",
                "We can instruct CSs during the set-up phase to send unicast packets to those CSs that cannot receive multicast packets whereas CSs on multicast enabled routers can exchange packets on a multicast address.",
                "The data structures and conference objects inside a CS is given in [14].",
                "Fig. 7.",
                "User Interface for setting the weight for NMax audio streams (setting Self-bar to zero avoids echo). 8.4 Quality Improvement The observed improvement in the perceived quality of the conference service is due to: (1) limiting the number of concurrent speakers to a low number such as three.",
                "Generally, in a conference if more than two participants speak the intelligibility is lost.",
                "The conversational analysis demonstrates that there would be a repair mechanism [15] in such a case. (2) Delay: The audio stream between any two clients will pass through at most two CSs thus reducing the end-to-end delay.",
                "For a large conference there might be three CSs however, one hop is within the domain incurring negligible delay. (3) As the streams are mixed only at the clients, there can be a customized mix of the streams.",
                "The individual tuning of mixing with weights the spatialism is preserved.",
                "Fig. 7 shows the user interface for the same.",
                "The echo when self-stream is selected can be avoided by reducing the weight.",
                "Nonetheless, feedback helps in reassuring speaker that he/she is heard by all. 9.",
                "CONCLUSION In this paper, we have presented a discussion on a voice-only virtual conferencing environment.",
                "We have argued that the distributed nature of deployment here makes it scalable.",
                "Interactivity is achieved by adapting a recent stream selection scheme based on Loudness Number.",
                "Additionally, we incorporate a result from a more recent work [15] where the sufficiency of three simultaneous speakers has been demonstrated.",
                "Thus, there is significantly effective utilization of bandwidth.",
                "A mixed stream is played out at each client; each client may choose to have a customized mix since mixing is done at the local terminal of each client.",
                "These render impromptu speech in a virtual teleconference over VoIP a reality, as in a real face-to-face conference.",
                "Compatibility is assured thanks to the use of SIP, the most soughtafter signaling protocol.",
                "To ensure a satisfying performance, we do not demand the availability of multicast, but use it if and when available.",
                "The traffic in the WAN (Internet) is upper-bounded by the square of the number of domains, -- further reduced by using heuristic algorithms -- which is far below the total number of clients in the conference.",
                "This is due to the use of a Conference Server local to each domain.",
                "VAD techniques help further traffic reduction.",
                "Using SIP standard for signaling makes this solution highly interoperable.",
                "We have implemented a CS application on a campus-wide network.",
                "We believe this new generation of virtual conferencing environments will gain more popularity in the future as their ease of deployment is assured thanks to readily available technologies and scalable frameworks. 10.",
                "REFERENCES [1] L Aguilar et al., Architecture for a Multimedia Teleconferencing System, in Proceedings of the ACM SIGCOMM, Aug 1986, pp. 126-136. [2] Carsten Bormann, Joerg Ott et al., Simple Conference Control Protocol, Internet Draft, Dec. 1996. [3] M. Decina and V. Trecordi, Voice over Internet Protocol and Human Assisted E-Commerce, IEEE Comm.",
                "Magazine, Sept. 1999, pp. 64-67. [4] Eckehard Doerry, An Empirical Comparison of Copresent and Technologically-mediated Interaction based on Communicative Breakdown, Phd Thesis, Graduate School of the University of Oregon, 1995. [5] H. P. Dommel and J.J. Garcia-Luna-Aceves, Floor Control for Multimedia Conferencing and Collaboration, J. Multimedia Systems, Vol. 5, No. 1, January 1997, pp. 23-38. [6] Amitava Dutta-Roy, Virtual Meetings with desktop conferencing, IEEE Spectrum, July 1998, pp. 47-56. [7] M. Handley and V. Jacobson, SDP: Session Description Protocol, RFC 2327, IETF, April 1998. [8] M. Handley, J. Crowcroft et al., Very large conferences on the Internet: the Internet multimedia conferencing architecture, Journal of Computer Networks, vol. 31, No. 3, Feb 1999, pp. 191-204. [9] ITU-T Rec.",
                "H.323, Packet based Multimedia Communications Systems, vol. 2, 1998. [10] P. Koskelainen, H. Schulzrinne and X. Wu, A SIP-based Conference Control Framework, NOSSDAV02, May 2002, pp. 53-61. [11] R Venkatesha Prasad et al., Control Protocol for VoIP Audio Conferencing Support, International Conference on Advanced Communication Technology, Mu-Ju, South Korea, Feb 2001, pp. 419-424. [12] R Venkatesha Prasad et al., Automatic Addition and Deletion of Clients in VoIP Conferencing, 6th IEEE Symposium on Computers and Communications, July 2001, Hammamet, Tunisia, pp. 386-390. [13] R Venkatesha Prasad, H S Jamadagni, Abjijeet, et al Comparison of Voice Activity Detection Algorithms, 7th IEEE Symposium on Computers and Communications.",
                "July 2002, Sicily, Italy, pp. 530-535. [14] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, A Scalable Distributed VoIP Conferencing using SIP, Proc. of the 8th IEEE Symposium on Computers and Communications, Antalya, Turkey, June 2003. [15] R Venkatesha Prasad, H S Jamadagni and H N Shankar, On Problem of Specifying Number of Floors in a Voice Only Conference, To appear in IEEE ITRE 2003. [16] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, A Proposal for Distributed Conferencing on SIP using Conference Servers, To appear in the Proc. of MMNS 2003, Belfast, UK, September 2003. [17] R. Venkatesha Prasad, H.S.",
                "Jamadagni, J. Kuri, R.S.",
                "Varchas, A Distributed VoIP Conferencing Support Using Loudness Number, Tech.",
                "Rep. TR-CEDT-TE-03-01 [18] M. Radenkovic et al, Scaleable and Adaptable Audio Service for Supporting Collaborative Work and Entertainment over the Internet, SSGRR 2002, LAquila, Italy, Jan. 2002. [19] M. Radenkovic, C. Greenhalgh, S. Benford, Deployment Issues for Multi-User Audio Support in CVEs, ACM VRST 2002, Nov. 2002, pp. 179-185. [20] Srinivas Ramanathan, P. Venkata Rangan, Harrick M. Vin, Designing Communication Architectures for Interorganizational Multimedia Collaboration, Journal of Organizational Computing, 2 (3&4), pp.277-302, 1992. [21] A.",
                "B. Roach, Session Initiation Protocol (SIP)-Specific Event Notification, RFC 3265, IETF, June 2002. [22] J. Rosenberg, H. Schulzrinne et al., SIP: Session Initiation Protocol, RFC 3261, IETF, June 2002. [23] J. Rosenberg, H. Schulzrinne, Models for Multy Party Conferencing in SIP, Internet Draft, IETF, July 2002. [24] H. Schulzrinne et al., RTP: a transport protocol for realtime applications, RFC 1889, IETF, Jan 1996. [25] Lisa R. Silverman, Coming of Age: Conferencing Solutions Cut Corporate Costs, White Paper, www.imcca.org/wpcomingofage.asp [26] Kundan Singh, Gautam Nair and Henning Schulzrinne, Centralized Conferencing using SIP, Proceedings of the 2nd IP-Telephony Workshop (IPTel), April 2001. [27] D. Thaler, M. Handley and D. Estrin, The Internet Multicast Address Allocation Architecture, RFC 2908, IETF, Sept. 2000."
            ],
            "original_annotated_samples": [
                "A new approach called <br>partial mixing</br> by Radenkovic [18] allows for mixed and non-mixed streams to coexist.",
                "In this case, if applications are implemented with some control [5], the service becomes gagging for the users. • <br>partial mixing</br> [18] has a similar problem as that of mixing when more streams are mixed.",
                "Distributed <br>partial mixing</br>, presented in [18], proposes that in case of bandwidth limitation, some streams are mixed and some are not, leaving interactivity intact."
            ],
            "translated_annotated_samples": [
                "Un nuevo enfoque llamado <br>mezcla parcial</br> por Radenkovic [18] permite que flujos mezclados y no mezclados coexistan.",
                "En este caso, si las aplicaciones se implementan con cierto control [5], el servicio se vuelve asfixiante para los usuarios. • La <br>mezcla parcial</br> [18] tiene un problema similar al de la mezcla cuando se mezclan más flujos.",
                "La <br>Mezcla Parcial</br> Distribuida, presentada en [18], propone que en caso de limitación de ancho de banda, algunos flujos se mezclan y otros no, manteniendo la interactividad intacta."
            ],
            "translated_text": "Problemas de implementación de un sistema de conferencias VoIP en un entorno de conferencias virtuales. R. Venkatesha Prasad y Richard Hurni. Jamadagni iii H.N. Shankar iv i, iii Centro de Diseño y Tecnología Electrónica Instituto Indio de Ciencias, Bangalore, India Teléfono: +91 80 360 0810 i, iii {vprasad, hsjam}@cedt.iisc.ernet.in ii hurni@ieee.org iv hn_shankar@yahoo.com RESUMEN Los servicios en tiempo real han sido principalmente respaldados en redes conmutadas por circuitos. Las tendencias recientes favorecen los servicios trasladados a redes de conmutación de paquetes. Para las conferencias de audio, necesitamos considerar muchos aspectos, como la escalabilidad, la calidad de la aplicación de conferencia, el control de piso y la carga en los clientes/servidores, por nombrar algunos. En este documento, describimos un marco de servicio de audio diseñado para proporcionar un Entorno de Conferencias Virtuales (ECV). El sistema está diseñado para dar cabida a un gran número de usuarios finales hablando al mismo tiempo y distribuidos por Internet. El marco se basa en Servidores de Conferencia [14], que facilitan el manejo del audio, mientras que explotamos las capacidades de SIP para propósitos de señalización. La selección de clientes se basa en un reciente cuantificador llamado Número de Volumen que ayuda a imitar una conferencia física cara a cara. Nos ocupamos de los problemas de implementación de la solución propuesta tanto en términos de escalabilidad como de interactividad, mientras explicamos las técnicas que utilizamos para reducir el tráfico. Hemos implementado una aplicación de Servidor de Conferencias (CS) en una red de campus en nuestro Instituto. Categorías y Descriptores de Temas C.2.4 [Redes de Computadoras y Comunicación]: Sistemas Distribuidos - Cliente/Servidor, aplicaciones distribuidas. Términos generales Algoritmos, Rendimiento, Diseño, Teoría. 1. INTRODUCCIÓN El Internet de hoy utiliza el conjunto de protocolos IP que fue diseñado principalmente para el transporte de datos y proporciona la entrega de datos con el mejor esfuerzo. Las restricciones de retraso y las características diferencian los datos tradicionales por un lado, de las aplicaciones de voz y video por el otro. Por lo tanto, a medida que se implementan aplicaciones de voz y video cada vez más sensibles al tiempo en Internet, se pone de manifiesto la insuficiencia de la red. Además, buscamos trasladar servicios telefónicos a través de Internet. Entre ellos, la instalación de conferencia virtual (teleconferencia) está a la vanguardia. Las videoconferencias y conferencias de audio en Internet son populares por las varias ventajas que poseen. Claramente, el ancho de banda necesario para una videoconferencia a través de Internet aumenta rápidamente con el número de participantes; reducir el ancho de banda sin comprometer la calidad del audio es un desafío en la telefonía por Internet. Los problemas críticos adicionales son: (a) retraso de paquetes, (b) eco, (c) mezcla de audio de clientes seleccionados, (d) selección automática de clientes para participar en la conferencia, (e) reproducción de audio mezclado para cada cliente, (f) manejo de clientes que no son capaces de mezclar flujos de audio (estos clientes se conocen como clientes tontos), y (g) decidir el número de clientes activos simultáneamente en la conferencia sin comprometer la calidad de voz. Si bien todos los requisitos anteriores son desde el punto de vista tecnológico, la perspectiva de los usuarios y las interacciones también son factores esenciales. Hay mucha discusión entre la comunidad de HCI y CSCW sobre el uso de la Etnometodología para el diseño de aplicaciones de CSCW. El enfoque básico es proporcionar un ancho de banda más amplio, más instalaciones y mecanismos de control más avanzados, con miras a una mejor calidad de interacción. Este enfoque ignora la utilidad funcional del entorno que se utiliza para la colaboración. Eckehard Doerry [4] critica este enfoque diciendo que pone la forma antes que la función. Por lo tanto, la necesidad es adoptar un enfoque que considere ambos aspectos: el técnico y el funcional. En cuanto al aspecto funcional, nos referimos a [15] donde se ha tratado en cierto detalle. En este trabajo, no discutimos la videoconferencia; su inclusión no beneficia significativamente la calidad de la conferencia [4]. Nuestro enfoque está en entornos de audio virtuales. Primero describimos los desafíos encontrados en las conferencias de audio virtuales. Luego investigamos las motivaciones seguidas por la literatura relevante. En la Sección 5, explicamos la arquitectura de nuestro sistema. La sección 6 comprende la descripción de los diversos algoritmos utilizados en nuestra configuración. Abordamos problemas de implementación. Una discusión sobre el Instituto Federal Suizo de Tecnología, Lausana. Antiguo visitante en CEDT. PESIT y NIAS, Bangalore, India. El rendimiento sigue. Concluimos teniendo en cuenta algunos problemas de implementación. 2. DESAFÍOS EN LA VIDEOCONFERENCIA VoIP Surgen muchos desafíos al construir una aplicación VoIP. Lo siguiente es de particular preocupación en el proceso: • Facilidad de uso: la conferencia debe ser sencilla; los usuarios no necesitan experiencia en el dominio. La gestión (adición/eliminación) de clientes y servidores debe ser sencilla. El desarrollo de aplicaciones no debe presuponer características específicas del sistema subyacente o de las capas de red. La facilidad de uso puede incluir el aprovechamiento de tecnologías fácilmente disponibles, técnicamente factibles y económicamente viables. • Escalabilidad: Las conferencias deben parecer ininterrumpidas bajo cargas pesadas, es decir, cuando se agregan muchos usuarios adicionales. El tráfico en la WAN no debería aumentar apreciablemente con el número total de clientes; de lo contrario, esto podría provocar congestión. Por lo tanto, se necesita un medio para regular el tráfico al mínimo para este tipo de aplicaciones en tiempo real. • Interactividad: En Entornos de Conferencias Virtuales (ECVs), pretendemos una aplicación de conferencias cara a cara que imite una conferencia real, donde los participantes más vocales invitan la atención. El intercambio de turnos en la ocupación del espacio por parte de los participantes debe adaptarse con gracia para lograr una transición natural. • Estandarización: La solución debe cumplir con los estándares establecidos para lograr interoperabilidad y aceptación entre pares. Los requisitos anteriores se colocan en la perspectiva de las observaciones realizadas en trabajos anteriores (véase Secciones 3 y 4) y guiarán el diseño del VCE. 3. La motivación Ramanathan y Rangan [20] han estudiado en detalle las configuraciones arquitectónicas comparando muchos esquemas de arquitectura de conferencias teniendo en cuenta la demora de red y los requisitos de computación para la mezcla. La división funcional y el diseño de arquitectura orientada a objetos que ayudan en la implementación se presentan en [1]. Un resumen de muchos temas relacionados con el apoyo a una conferencia grande se aborda en [8]. H. P. Dommel [5] y muchos otros destacan el control de piso como otro aspecto fundamental a tener en cuenta en el diseño de una herramienta de conferencias. Los protocolos de control de conferencias fuertemente acoplados en Internet pertenecen a la familia ITU-T H.323 [9]; sin embargo, están principalmente diseñados para conferencias pequeñas. El último borrador del IETF de Rosenberg y Schulzrinne [23] discute modelos de conferencia con SIP [22] en el fondo. Los aspectos de implementación para la conferencia SIP centralizada se informan en [26]. Un nuevo enfoque llamado <br>mezcla parcial</br> por Radenkovic [18] permite que flujos mezclados y no mezclados coexistan. En todas las propuestas anteriores, si bien hay algunas sugerencias muy útiles, comparten una o más de las siguientes limitaciones: • En una conferencia de audio, no es necesario mezclar los flujos de todos los clientes. De hecho, mezclar muchas corrientes arbitrarias [24] de clientes degrada la calidad de la conferencia debido a la reducción en el volumen (aspecto espacial del habla). El número de flujos mezclados varía dinámicamente dependiendo del número de participantes activos. Esto provocaría fluctuaciones en el volumen de cada participante individual, causando una degradación severa en la calidad. La mezcla personalizada de flujos no es posible cuando hay muchos clientes activos. Existe un umbral en el número de oradores simultáneos por encima del cual aumentar el número de oradores se vuelve contraproducente para la calidad de la conferencia. La fijación del número máximo de hablantes simultáneos se aborda en un trabajo reciente [15] utilizando la Etnometodología, y se postula que es tres. Por lo tanto, es recomendable respetar esa restricción. • No puede haber muchos mezcladores intermedios (similarmente, Servidores de Conferencia como en [10]) en etapas como en [20] porque provoca un retraso desmedido al aumentar el número de saltos y no es escalable con la interactividad como enfoque. • El Control de Piso para una conferencia de audio (incluso de video) con instrucciones explícitas de toma de turnos para los participantes convierte la conferencia en esencia en un asunto de un orador a la vez, no en una en vivo y libre de interrupciones. De esta manera, la conferencia se vuelve notablemente artificial y su calidad se degrada. Schulzrinne et al. [24], asumen que solo un participante está hablando en un momento dado. En este caso, si las aplicaciones se implementan con cierto control [5], el servicio se vuelve asfixiante para los usuarios. • La <br>mezcla parcial</br> [18] tiene un problema similar al de la mezcla cuando se mezclan más flujos. Además, en [18], para permitir el discurso improvisado, la mezcla no se realiza cuando la red puede soportar altos requisitos de ancho de banda para enviar/recibir todas las transmisiones, pero es innecesaria [15]. • Para conferencias grandes [23, 10] una conferencia centralizada no puede escalar. Con la multidifusión, los clientes tendrán que analizar muchos flujos y el tráfico en la red de los clientes aumenta innecesariamente. Evidentemente, se abordan diferentes problemas particulares, todos los cuales son un subconjunto de los requisitos (definidos en [14] y [16]) para el soporte de conferencias de VoIP. Por lo tanto, es necesario abordar la conferencia en su totalidad teniendo en cuenta todos sus requisitos de manera simultánea. Con este objetivo, el sistema de conferencias VoIP que proponemos está diseñado para ser escalable e interactivo. Hacemos uso del Número de Sonoridad para implementar el control de volumen. Esto permite a un participante entrar libremente en el modo de hablar para interrumpir al orador actual como en una reunión natural cara a cara. Un límite superior en el número de pisos (es decir, el número de oradores permitidos para hablar al mismo tiempo) se fija utilizando una conjetura propuesta en [15]. El trabajo presentado aquí es una continuación de nuestros estudios sobre conferencias basadas en el Protocolo de Inicio de Sesión en [14] y [16]. SIP, definido en [22], es ahora el estándar más popular para implementación de VoIP y ha sido elegido por su fortaleza, facilidad de uso, extensibilidad y compatibilidad. Esta es la razón por la cual estará en el trasfondo de todos los mensajes de control que surgirán implícitamente entre las entidades en nuestra arquitectura. Los mensajes actuales están descritos en [16] y, como tal, no presentamos una descripción completa de ellos aquí. 4. TRABAJO RELACIONADO El estándar SIP definido en el RFC 3261 [22] y en extensiones posteriores como [21] no ofrece servicios de control de conferencias como control de piso o votación y no prescribe cómo debe ser gestionada una conferencia. Sin embargo, SIP se puede utilizar para iniciar una sesión que utilice algún otro protocolo de control de conferencias. La especificación central de SIP soporta muchos modelos para conferencias [26, 23]. En los modelos basados en servidor, un servidor mezcla flujos de medios, mientras que en una conferencia sin servidor, la mezcla se realiza en los sistemas finales. SDP [7] se puede utilizar para definir las capacidades de los medios y proporcionar otra información sobre la conferencia. Ahora consideraremos algunos modelos de conferencia en SIP que han sido propuestos recientemente [23]. Primero, veamos los modelos sin servidor. En la mezcla de extremos del sistema, solo un cliente (SIP UA) maneja la señalización y la mezcla de medios para todos los demás, lo cual claramente no es escalable y causa problemas cuando ese cliente en particular abandona la conferencia. En el modelo de Usuarios que se unen, un árbol crece, ya que cada parte invitada constituye una nueva rama en el camino de distribución. Esto conduce a un número creciente de saltos para las hojas remotas y no es escalable. Otra opción sería utilizar la multidifusión para las videoconferencias, pero actualmente la multidifusión no está habilitada en Internet y solo es posible en una LAN. Entre los modelos basados en servidor, en una conferencia de marcado, los UAs se conectan a un servidor central que maneja todas las mezclas. Este modelo no es escalable ya que está limitado por la potencia de procesamiento del servidor y el ancho de banda de la red. Las conferencias centralizadas ad hoc y los servidores de conferencias de marcado tienen mecanismos y problemas similares. Los modelos híbridos que involucran señalización centralizada y medios distribuidos, con estos últimos utilizando unicast o multicast, plantean problemas de escalabilidad como antes. Sin embargo, una ventaja es que el control de la conferencia puede ser una solución de terceros. La <br>Mezcla Parcial</br> Distribuida, presentada en [18], propone que en caso de limitación de ancho de banda, algunos flujos se mezclan y otros no, manteniendo la interactividad intacta. La pérdida de espacialidad cuando se mezclan y el aumento del ancho de banda cuando no lo hacen son problemas abiertos. Un estudio relacionado [19] del mismo autor propone una arquitectura de conferencias para Entornos Virtuales Colaborativos (CVEs) pero no proporciona el enfoque de escalabilidad sin la disponibilidad de la multidifusión. Teniendo en cuenta las limitaciones de los sistemas de conferencias propuestos, detallaremos ahora nuestra propuesta. 5. ARQUITECTURA DEL SISTEMA Esta sección está dedicada a la descripción de la arquitectura del sistema propuesto. Sin embargo, dado que este documento constituye la continuación de nuestro trabajo iniciado en [14] y ampliado en [16], no presentaremos aquí todos los detalles sobre las entidades propuestas e invitamos a los lectores a consultar los documentos mencionados anteriormente para obtener una descripción completa y detallada. Primero, no restringimos nuestro sistema de conferencias para funcionar solo en conferencias pequeñas, sino en grandes VCEs de audio que tienen cientos (o incluso miles) de usuarios a través de una Red de Área Amplia (WAN) como Internet. Esta perspectiva se deriva de una evaluación de que los VCEs ganarán importancia en el futuro, ya que las conferencias de audio interactivas serán más populares debido a la difusión de la cultura mediática en todo el mundo. Dos aspectos deben ser atendidos al construir un sistema de conferencias VoIP: (i) el front-end, que consiste en el programa de aplicación que se ejecuta en las computadoras de los usuarios finales y (ii) el back-end que proporciona otros programas de aplicación que facilitan las conferencias y la conferencia. Los usuarios participantes se agrupan en varios dominios. Estos dominios son Redes de Área Local (LAN), como redes corporativas o educativas. Esta suposición distribuida requiere soluciones de control y manejo de medios distribuidos, ya que los sistemas centralizados no serían escalables para conferencias tan grandes (ver Sección 4). Más explícitamente, en cada dominio, podemos identificar varios componentes lógicos relevantes de una instalación de conferencias (Fig. 1): Un número arbitrario de usuarios finales (clientes) que pueden participar en como máximo una conferencia de audio a la vez. Cada usuario es la Fig. 1. Ejemplo de conferencia: 3 dominios que contienen las entidades necesarias para que la conferencia pueda tener lugar. Incluidas en un único dominio en un instante dado, pero pueden moverse de un dominio a otro (nomadismo). En nuestro entorno de conferencias, estos clientes son Agentes de Usuario SIP (SIP UAs) regulares, según se define en [22], para lograr interoperabilidad con otros sistemas compatibles con SIP existentes. Estos clientes no son conscientes del entorno complejo que respalda la conferencia, lo cual se destaca a continuación. Un servidor SIP (SIPS) por dominio, encargándose de todos los aspectos de señalización de la conferencia (clientes que se unen, salen, etc.) [16]. En particular, se considera como una implementación física que abarca diferentes roles lógicos, a saber, un Servidor Proxy SIP, un Servidor Registrador SIP, un Servidor de Redirección SIP y un SIP B2BUA (Agente de Usuario de Vuelta a Vuelta) [22]. Esta implementación física permite el manejo de mensajes SIP entrantes/salientes por una u otra entidad lógica según sea necesario. SIPS está encargado de mantener un servicio total y tiene muchas ventajas, como (a) funciona como una entidad centralizada que puede hacer un seguimiento de las actividades de los UAs en una conferencia; (b) puede realizar todo el cambio para proporcionar funciones de PBX; (c) puede localizar a los UAs e invitarlos a una conferencia; (d) también puede encargarse de la facturación. Los SIPS en diferentes dominios se comunican entre sí utilizando mensajes SIP como se describe en [16]. Si la carga en un SIPS particular es demasiado pesada, puede crear otro SIPS en el mismo dominio para que la carga se comparta. Se crea un Servidor de Conferencias Maestro (M-CS) (simplemente un Servidor de Conferencias (CS)) para cada conferencia por el SIPS local cuando una conferencia comienza. Este servidor se utilizará para manejar paquetes de medios para los clientes del dominio. Su mecanismo será descrito en la siguiente sección. El M-CS podrá crear una jerarquía de CSs dentro de un dominio agregando uno o más CSs esclavos (S-CSs) para dar cabida a todos los clientes activos y prevenir su propia saturación al mismo tiempo. Veremos este mecanismo con cierto detalle en la secuela. Las entidades descritas aquí son exhaustivas y se ajustan a la filosofía del SIP. Por lo tanto, el uso de SIP hace que esta arquitectura sea más útil e interoperable con cualquier otro cliente o servidor SIP. PROBLEMAS ALGORÍTMICOS 6.1 Seleccionar los flujos similares a SipConf en [27], un Servidor de Conferencias (CS) [17] tiene la función de soportar la conferencia; es responsable de manejar los flujos de audio utilizando RTP. También puede duplicarse para convertir formatos de transmisión de audio para un cliente dado si es necesario y puede funcionar como Traductores/Mezcladores de la especificación RTP detrás de cortafuegos. Hemos basado el diseño de nuestro CS en el Procesador Multipunto (MP) H.323 [9]. En resumen, el MP recibe flujos de audio de los puntos finales involucrados en una conferencia multipunto centralizada o híbrida, los procesa y los devuelve a los puntos finales. Un procesador de señales de audio prepara N salidas de audio NMax a partir de M flujos de entrada después de la selección, mezcla o ambas. La mezcla de audio requiere decodificar el audio de entrada a señales lineales (PCM o analógicas), realizar una combinación lineal de las señales y volver a codificar el resultado en un formato de audio apropiado. El procesador de señales puede eliminar o atenuar algunas de las señales de entrada para reducir el ruido y los componentes no deseados. Fig. 2. \n\nFig. 2. El diagrama esquemático de un CS. La limitación de H.323 es que no aborda la escalabilidad de una conferencia. La arquitectura propone una topología en cascada o en cadena de margaritas [10], la cual se puede demostrar que no puede escalar para una conferencia grande. Un CS atiende a muchos clientes en la misma conferencia. Por lo tanto, solo maneja una conferencia a la vez. Varios CS pueden coexistir en un dominio, como cuando hay varias conferencias en curso. Los mensajes relacionados con la señalización de los CSs se tratan en [11]. El funcionamiento de un CS se ilustra en la Fig. 2: Para cada intervalo de mezcla, CS 1 elige los mejores NMax paquetes de audio de los M1 (utilizando un criterio denominado Número de Volumen, descrito en la siguiente subsección). Puede posiblemente recibir y enviar estos a CSs 2 a P. El conjunto de paquetes enviados se denota como AotrosCSs. En el mismo intervalo de mezcla, también recibe los mejores paquetes de audio NMax (de un posible M2) de CS 2, de manera similar a los mejores NMax (de un posible MP) de CS P. Para simplificar, ignoramos el retardo de propagación entre los CSs, que de hecho se puede tener en cuenta; está más allá del alcance de esta presentación. El conjunto de paquetes recibidos se denota como FromOtherCSs. Finalmente, selecciona los mejores paquetes NMax del conjunto {ToOtherCSs unión FromOtherCSs} y envía estos paquetes a su propio grupo. Se puede observar que el conjunto {ToOtherCSs unión FromOtherCSs} es el mismo en todos los CSs. Esto garantiza que cualquier cliente en la conferencia finalmente reciba el mismo conjunto de paquetes para mezclar. Por lo tanto, todos los clientes obtienen una vista común de la conferencia. De manera similar, para cada intervalo de tiempo (tiempo de paquete), se selecciona un subconjunto, F, de todos los clientes (utilizando el mismo criterio) del conjunto de paquetes de todos los otros CS más los NMax clientes seleccionados localmente. Sus paquetes se mezclan y se reproducen en los clientes. Según [15], la cardinalidad de F, |F| es NMax y está fijada en tres. En nuestra configuración de conferencias, la selección la realiza el Servidor Maestro de Conferencias (M-CS), que interviene exclusivamente en el manejo de medios. Ten en cuenta que aunque la especificación de SIP permite la comunicación directa de medios de usuario a usuario en una llamada uno a uno, también es posible utilizar el Servidor de Conferencias para llamadas de dos partes, especialmente porque es entonces más funcional crear una conferencia real agregando un tercero y posteriormente más participantes. Existen casos en los que la capacidad de procesamiento de un M-CS se ve superada, ya que puede tener demasiados paquetes, tanto de dominios locales como de dominios remotos, para procesar. En ese caso, el M-CS creará uno o varios S-CS (Fig. 6) y transferirá a sus propios clientes, así como a los nuevos clientes, a ellos. En esta configuración, el algoritmo descrito anteriormente se modificará ligeramente, ya que los paquetes de audio irán de los clientes a su S-CS dedicado, que seleccionará NMax paquetes para enviar al M-CS local, que luego seleccionará NMax paquetes de todos sus S-CS en el dominio antes de enviarlos a los dominios remotos. Los paquetes entrantes de otros dominios serán recibidos por el M-CS, se seleccionarán NMax de ellos y se enviarán directamente a los clientes del dominio, evitando los SCSs. Este cambio implica que existen como máximo tres entidades intermedias para cada paquete de audio, en lugar de dos en la configuración convencional. Dado que el salto adicional ocurre dentro de la LAN que se supone tiene una conectividad de alta velocidad, consideramos que no debería impedirnos usar esta jerarquía de CS cuando sea necesario hacerlo. 6.2 Número de Sonoridad (LN) Una pregunta básica que debe responder el CS es la siguiente. En un intervalo de mezcla, ¿cómo debería elegir NMax paquetes de los M que podría recibir? Una forma es clasificar los paquetes M recibidos según sus energías y elegir los NMax mejores. Sin embargo, esto suele considerarse insuficiente porque las fluctuaciones aleatorias en las energías de los paquetes pueden provocar una mala calidad de audio. Esto indica la necesidad de una métrica diferente de meras energías individuales de paquetes. El medidor debe tener las siguientes características [12]: • Un hablante (ocupante del suelo) no debe ser interrumpido por un pico en la energía del paquete de otro hablante. Esto implica que la historia del discurso de un hablante debería tener cierto peso. Esto se suele llamar Persistencia o Resaca. • Un participante que quiera interrumpir a un orador tendrá que (i) hablar en voz alta y (ii) seguir intentándolo por un tiempo breve. En una conferencia presencial, el lenguaje corporal a menudo indica la intención de interrumpir. Pero en una conferencia a ciegas en discusión, la intención de un participante de interrumpir puede ser transmitida de manera efectiva a través de LN. Se debe garantizar un mecanismo de control de piso habilitado para cortar a un orador de manera contundente. Estos requisitos son cumplidos por el Número de Volumen [12], que cambia suavemente con el tiempo para que la selección (adición y eliminación) de clientes para la conferencia sea elegante. LN (= ) es una función de la amplitud de la corriente de audio actual más la actividad y amplitud en una ventana específica en el pasado. Fig. 3. \n\nFig. 3. Las diferentes ventanas utilizadas para el cálculo de LN se actualizan en una base de paquete por paquete. El parámetro básico utilizado aquí es la amplitud del paquete, que se calcula como la raíz cuadrada de la media cuadrática (rms) de las energías en las muestras de audio de un paquete, y se denota como XK. Tres ventanas están definidas como se muestra en la Fig. 3. El nivel de amplitud actual del altavoz se encuentra calculando el promedio móvil de la amplitud del paquete (XK) dentro de una ventana llamada Ventana de Pasado Reciente, que va desde el instante presente hasta algún momento pasado. La actividad pasada del hablante se encuentra calculando el promedio móvil de la amplitud del paquete (XK) dentro de una ventana llamada Ventana de Pasado Lejano, que comienza en el punto donde termina la ventana de Pasado Reciente y se extiende hacia atrás en el pasado por un intervalo predefinido. La actividad del hablante en el pasado se encuentra con una ventana llamada Horizonte de Actividad, que abarca la ventana del pasado reciente, así como la ventana del pasado lejano y más allá si es necesario. Aunque la contribución del horizonte de actividad parece similar a la contribución de las ventanas del pasado reciente y pasado lejano, la actividad pasada se calcula de manera diferente a partir de la ventana del horizonte de actividad. Define las cantidades durante estos tres intervalos como L1, L2 y L3. L1 cuantifica la actividad de habla del Pasado Reciente, L2 la actividad de habla del Pasado Lejano y L3 proporciona un número correspondiente a la actividad de habla en la ventana del Horizonte de Actividad, cuantificando qué tan activo estuvo el hablante en los últimos intervalos. L3 produce una cantidad que es proporcional a la fracción de paquetes que tienen energías por encima de un umbral predefinido (Ec. 3). El umbral es invariable entre clientes. ∑ +− = = 1 1 1 RPP P Wt tK K RP X W L (1) ∑ +−− −= = 1 2 1 DPRPP RPP WWt WtK K DP X W L (2) ∑ +− = ≥= 1 }{3 * 1 AHP P K Wt tK X AH I W L θθ (3) Donde siI KX 1}{ =≥θ θ≥KX = de lo contrario,0 El umbral es una constante. Se establece en el 10-20 por ciento de la amplitud de las muestras de voz de un paquete en nuestra implementación aquí. El número de intensidad λ para el instante de tiempo presente (o el paquete presente) se calcula como, 332211 *L*L*L αααλ ++= (4) Aquí 1, 2 y 3 son elegidos de tal manera que: 0< 1, 2 y 3=1- 1) Aquí, 1 es el peso dado al habla del pasado reciente, 2 es el peso dado al habla del pasado lejano y 3 es el peso dado a la actividad del habla en la ventana de horizonte de actividad considerada. 6.3 Seguridad, Vida y Equidad El parámetro λ tiene un efecto significativo en la evaluación de la ventana. Después de que un conferenciante se queda en silencio, otro puede tomar la palabra. Además, dado que hay más de un canal, la interrupción está habilitada. Un conferenciante ruidoso es más probable que sea escuchado debido a un λ elevado. Esto garantiza equidad para todos los conferenciantes. Después de todo, incluso en una conferencia presencial, un orador más vocal capta una atención especial. Todas estas características deseables están integradas en la LN. Una discusión exhaustiva sobre la selección de los diversos parámetros y la dinámica de LN están fuera del alcance de este documento. 6.4 Algoritmo de selección utilizando LN Siguiendo los desarrollos en las subsecciones 6.1 y 6.2, presentamos el algoritmo simple que se ejecuta en cada Servidor Maestro-Conferencia (Algoritmo 1). Este algoritmo se basa en las discusiones de la sección 6.1. El conjunto F, único a nivel mundial, se encuentra utilizando este procedimiento. Repetir para cada intervalo de tiempo en cada M-CS { 1. Obtener todos los paquetes de los clientes que le pertenecen. 2. Encuentra como máximo NMax clientes que tengan un PD[LPXP RXW RI 0 &OLHQWV LQ LWV GRPDLQ\u0011 3. Almacene una copia de los paquetes de esos clientes NMax en la base de datos DB1. Envía estos paquetes NMax a otros M-CSs (en Unicast o Multicast, dependiendo de la configuración). 5. De igual manera, recibir paquetes de todos los demás M-CSs y almacenarlos en la base de datos DB2. 6. Ahora compara los paquetes en DB1 y DB2 en WKH EDVLV RI DQG VHOHFW D PD[LPXP RI NMax entre ellos (para formar el conjunto F) que deberían ser reproducidos en cada Cliente. 7. Enviar los paquetes NMax en el conjunto F a los Clientes en su dominio. 8. Mezcla estos paquetes de audio NMax en el conjunto F después de linearizarlos y envíalos a Clientes sin capacidad en el dominio. Algoritmo 1. Algoritmo de selección El mecanismo propuesto aquí también se muestra en la Fig. 6, donde tiene lugar una única conferencia entre tres dominios. Los clientes sombreados son los seleccionados en sus dominios locales; sus flujos de audio serán enviados a otros CSs. 7. PROBLEMAS DE DESPLIEGUE Ahora analizamos los problemas de despliegue asociados con la gestión de conferencias. ¿Cómo deben organizarse los dominios para maximizar el número de participantes que pueden unirse? Para abordar esto, definimos algunos parámetros útiles.  Sea d el número de dominios diferentes en los que hay clientes activos en una conferencia dada.  Sea Mi el número de clientes activos presentes en el dominio i (di ≤≤1) en una conferencia dada. El número total de clientes activos en la conferencia es por lo tanto ∑= = d i iMM 1. Sea C el número máximo de flujos de audio que un Servidor de Conferencias puede manejar en un tiempo de paquete, también llamado capacidad. C se establece de acuerdo con la potencia de procesamiento del CS más débil en la conferencia, pero como no se puede asumir que lo conocemos de antemano, se puede establecer de acuerdo con algún requisito mínimo del sistema que una máquina debe cumplir para participar en una conferencia. Deje que NMax sea el número de flujos de salida que un CS debe enviar a otros CS en dominios remotos (ver sección 6.1). Estableceremos NMax = 3 (=|F|), según [15]. El problema de optimización consiste en encontrar el valor de d que maximiza el número total de clientes Mi atendidos por un CS en un dominio con capacidad C. Primero consideramos el caso en el que la capacidad no es excedida (el CS existente no está sobrecargado), y luego procedemos al caso en el que es necesario crear más CS cuando un CS único está sobrecargado. Suponemos que los clientes están distribuidos de manera equitativa entre los dominios, ya que no tenemos información para asumir una distribución a priori de los clientes. Podemos especificar únicamente un límite superior en el número de clientes aceptables, dado el número de dominios activos d. 7.1 Conferencias con solo un nivel de CSs En esta subsección, consideramos que tenemos solo un CS, es decir, un único M-CS en cada dominio. Por lo tanto, no se puede sobrecargar. Consideramos que el sistema funciona tal como se describe en la sección 6.1: Los clientes envían sus paquetes de audio a su CS local, que selecciona NMax flujos antes de enviarlos a otros CS. De manera paralela, también recibe NMax transmisiones para cada otro CS antes de tomar una decisión sobre cuáles de las NMax transmisiones serán seleccionadas, enviadas y reproducidas en cada cliente individual. Para la estabilidad del sistema, cualquier servidor de conferencias debería ser capaz de manejar a sus clientes locales además de los paquetes de audio de otros dominios. Claramente entonces, la siguiente desigualdad debe cumplirse para todo dominio: )1( −⋅+≥ dN d M C Max (5) El caso límite de (5) (tomando la igualdad) toma la forma 2 )( dNdNCM MaxMax ⋅−⋅+= (6) Para optimizar d con respecto a M, establecemos 0)(2 =+−⋅⋅= ∂ ∂ MaxMax NCdN d M (7) obteniendo     ⋅ + = Max Max N NC d 2 (8) ([ ]* = Redondeando al entero más cercano) y por lo tanto, M de (6). Tabla 1. Valores de d y M calculados para algunos valores de C con NMax = 3. En la Tabla 1, se presentan los valores de d y M que fueron calculados utilizando (8) y (6) con NMax = 3. Vemos que los valores de d y M, al depender de C, se basan en el CS más débil. Vemos que hay un equilibrio entre M y d. Podríamos admitir más dominios en la conferencia, pero a costa de restringir el número total de clientes M en la conferencia. Durante la implementación y prueba de los Servidores de Conferencia en un Pentium III 1.4 GHz con Windows NT, pudimos establecer C=300. Pero con la llegada de computadoras más rápidas (> 3 GHz), uno puede fácilmente establecer C a valores más altos y determinar d y M en consecuencia. La Fig. 4 muestra un mapa de contorno y la Fig. 5, una malla 3D que muestra soluciones optimizadas para CSs de diferentes capacidades. Estos nos llevan a maximizar el número de dominios, y por lo tanto, a maximizar el número total de clientes basado en la capacidad de varios CSs. En la Fig. 4, las curvas individuales representan el número total de clientes objetivo, y seleccionamos un valor más bajo de d, para la capacidad C, para el objetivo M con el fin de reducir el tráfico en la WAN. La Fig. 5 representa una perspectiva diferente de los mismos datos en 3D. Fig. 4. \n\nFig. 4. Diagrama de contorno de la capacidad versus el número óptimo de dominios para varios tamaños de conferencias 7.2 Conferencias con Dos Niveles de CSs. Ahora considerando el caso en el que el número de clientes en un dominio particular es demasiado grande, es decir, d M Mi ≥ (9), se debe evitar la denegación de servicio para nuevos clientes debido a la sobrecarga del Servidor de Conferencias. Este problema se puede resolver introduciendo un segundo nivel de CSs dentro del dominio dado, como se muestra en la Figura 6. El M-CS existente crea un CS esclavo (S-CS) que puede manejar hasta C usuarios finales y al que transfiere todos sus clientes activos. Aquí, el sistema funciona de manera diferente como se describe en la sección 6.1: Los clientes envían sus paquetes de audio a su S-CS local, que selecciona NMax flujos, antes de enviarlos a un M-CS local, que procederá de la misma manera, antes de enviar NMax flujos a los otros dominios. Cada S-CS recién creado debe ejecutarse en una máquina separada. El M-CS tiene que crear más S-CSs si el número de clientes activos supera C durante el transcurso de la conferencia después de la transferencia. Con este mecanismo, el M-CS podrá crear un máximo de     −⋅− = Max Max N dNC U )1( S-CSs, (10) ya que debe manejar 3 (= NMax) paquetes para cada S-CS local y 3 (= NMax) paquetes de cada otro dominio remoto. Podemos entonces calcular el número máximo teórico de clientes activos CUMi ⋅= en cada dominio, así como M, para toda la conferencia como CUdM ⋅⋅= . Fig. 5. Gráfico 3D de Capacidad versus Número óptimo de dominios para varios tamaños de conferencia. Por supuesto, se podría crear un tercer nivel en la jerarquía, lo que daría la posibilidad de alojar aún más clientes. Esto puede ser innecesario ya que el número de posibles clientes es lo suficientemente grande con dos niveles. 8. DISCUSIÓN DE RENDIMIENTO Ahora analizamos el rendimiento del algoritmo presentado en la subsección 6.3, es decir, el que se encarga del intercambio de paquetes de audio entre los diferentes dominios. Ten en cuenta que los paquetes que están en tránsito dentro de la LAN aprovechan la mayor capacidad (generalmente junto con capacidades de multidifusión) y por lo tanto no requieren un análisis de rendimiento. Por lo tanto, debemos examinar solo los paquetes RTP a través de la WAN, es decir, entre los M-CS participantes. Dado que cada M-CS de un dominio solo enviará NMax de los d paquetes M a los otros CS (MaxN d M >>), el ancho de banda utilizado por la aplicación en una WAN está limitado por la siguiente expresión. El número total de paquetes de audio que transitan por la WAN para cada intervalo de tiempo es ∑ ∑= ≠=        d i d ijj MaxN 1 ,1, lo cual es cuadrático en el número de dominios (es decir, O(d2)). Sin embargo, es independiente del número total de clientes activos. Esto no habría sido el caso si todos los paquetes se hubieran enviado por la red en cada intervalo de tiempo. El ahorro es tremendo. Sin embargo, se podría argumentar que enviar tres paquetes hacia y desde todos los dominios es un desperdicio de recursos, ya que la mayoría de estos flujos no serán seleccionados. Si solo hay un cliente activo, seleccionar un subconjunto de clientes en ese dominio es innecesario. Los algoritmos pesimistas y optimistas presentados en la secuela tienen como objetivo reducir aún más el tráfico aprovechando la naturaleza lenta y variable de la LN. 8.1 Algoritmo pesimista Consideremos un escenario en el que el LN más bajo (llamado LNt) de los tres flujos seleccionados globalmente (conjunto F de la Sección 6.1) excede el LN del flujo más dominante de un dominio. Evidentemente, las posibilidades de que los dos próximos flujos dominantes de ese dominio sean seleccionados para F en el próximo período de paquetes son menores. Aquí enviamos este flujo más dominante y retenemos los otros dos. Puede haber un error en la selección única en todos los dominios por un solo período de paquete. Como LN varía lentamente, el error se corregiría automáticamente en un período (ranura) de paquete posterior. En este algoritmo, hay al menos un flujo en cada período. El tráfico de red neto en un período de paquetes en el mejor caso es )1( −⋅ dd, es decir, )( 2 dO utilizando unicast, en lugar de MaxNdd ⋅−⋅ )1(. Se puede ahorrar un ancho de banda considerablemente valioso utilizando esta heurística. La complejidad del tráfico resultante se reduce de O(d2) a O(d) en redes habilitadas para multidifusión. Inicializar LNt = 0 en un M-CS/S-CS A. En el primer intervalo de tiempo (tiempo de paquete), cada CS envía las primeras NMax secuencias (basadas en su LN) a todos los demás CSs. En cada M-CS/S-CS y para cada tiempo de paquete: B. Encuentra el valor del LN más bajo de los flujos NMax seleccionados globalmente (conjunto F) del intervalo de tiempo anterior. Establece LNt con este valor. C. En cada dominio de CS, selecciona los NMax flujos locales que tengan el valor máximo de LN (conjunto ToOtherCSs). D. Seleccionar los flujos que tengan LN > LNt. Si hay >= NMax flujos con LN > LNt, entonces enviar los mejores NMax a otros CSs. EN OTRO CASO, si hay (NMax-1) flujos con LN>LNt, enviar los mejores (NMax-1) más el que esté por debajo de LNt (es decir, los mejores NMax) a otros CSs. EN OTRO CASO, si hay (NMax-2) flujos con LN>LNt, entonces enviar los mejores (NMax-2) más el que esté por debajo de LNt (es decir, los mejores (NMax-1)) a otros CSs. ... EN OTRO CASO, si NO hay flujos con LN>LNt, entonces enviar el mejor flujo a otros CSs. Los paquetes enviados en el paso D forman DB1. Los paquetes recibidos de otros CSs forman DB2. F. Para este intervalo de tiempo, encuentra flujos globales NMax basados en LN de DB1 y DB2 (conjunto F) G. Envía el conjunto F a los clientes en su dominio. Actualiza LNt para el próximo período. Algoritmo 2. Algoritmo pesimista para reducir el número de paquetes enviados por Internet. Fig. 6. \n\nFig. 6. Ejemplo de una jerarquía de 2 niveles de Servidores de Conferencias; los Clientes sombreados son los seleccionados por el M-CS y serán enviados a otros CSs de dominios. En este algoritmo, el ahorro en tráfico se logra a expensas de relajar la condición de formación del conjunto F globalmente único. Sin embargo, las discrepancias en los flujos seleccionados en diferentes dominios permanecen por un corto período de tiempo dependiendo del retraso en el transporte entre dos dominios. Incluso para un retraso total de 400 ms, con solo 10 ranuras de tiempo de paquete, se pierde la unicidad. Esta duración en una conversación interactiva en tiempo real no es perceptible por el oyente. En el caso de que haya una broma y todos se rían, entonces habría un aumento repentino en el número de paquetes y estaría limitado por MaxN)d(O 2 durante un corto período. 8.2 Algoritmo Optimista El tráfico puede reducirse aún más. El esquema en el siguiente algoritmo (Algoritmo 3) retiene todos los flujos que tienen un valor de LN menor que el mínimo de los tres en el conjunto F. Podemos encontrar los tres flujos correctos y únicos después de unos cuantos intervalos de tiempo, dependiendo del retraso de transporte entre los dominios. Dado que el período del paquete es del orden de 40 ms, el error en la selección es imperceptible. El número de flujos en la red en este caso siempre está restringido a NMax (=3). Incluso sin Detección de Actividad de Voz (VAD), en el mejor de los casos no habrá más de tres flujos en la red, por lo tanto, el tráfico total es constante. Una repentina oleada de tráfico, como se describe en la sección 8.1, es un caso particular. Estas ventajas se deben a la explotación de las características de LN. Inicializar LNt = 0 en un M-CS/S-CS A. En el primer intervalo de tiempo (tiempo de paquete), cada CS envía las primeras NMax secuencias (basadas en su LN) a todos los demás CS. En cada M-CS/S-CS y para cada tiempo de paquete: B. Encuentra el valor del LN más bajo de los flujos seleccionados globalmente de NMax (conjunto F) del intervalo de tiempo anterior. Establece LNt con este valor. C. En cada dominio de CS, selecciona los NMax flujos locales que tengan el valor máximo de LN (conjunto ToOtherCSs). D. Selecciona los flujos que tengan LN > LNt SI hay >= NMax flujos con LN > LNt, entonces envía los mejores NMax a otros CSs. EN OTRO CASO, si hay (NMax-1) flujos con LN>LNt, entonces enviar los primeros (NMax-1) y ver E. EN OTRO CASO, si hay (NMax-2) flujos con LN>LNt, entonces enviar los primeros (NMax-2) y ver E. ... EN OTRO CASO, si NO hay flujos con LN>LNt, entonces no enviar ningún flujo. E. Excepciones: SI el flujo que estaba en F en el último intervalo pertenece a este CS, entonces selecciona y envía ese flujo incluso si su LN es ahora < LNt. (Nota: esto ocurre solo en ese CS que tenía el flujo que fue el último de los tres en el período de paquetes anterior). Los paquetes enviados en los pasos D y E forman DB1. Los paquetes recibidos de otros CSs forman DB2. Para este intervalo de tiempo, encuentra los flujos globales NMax basados en LN de DB1 y DB2 (conjunto F). H. Envíe el conjunto F a los clientes en su dominio. Actualiza LNt para el próximo período. Algoritmo 3. Algoritmo optimista para reducir el número de paquetes enviados a través de Internet. Además, cuando se utiliza VAD [13], se reduciría aún más el tráfico al enviar solo la parte del encabezado del paquete RTP y no todo el paquete, con el fin de mantener actualizada la LN en todo momento. El tráfico aquí en este caso es O(NMax) para multicast y O(d) para unicast. Vemos que los algoritmos anteriores ahorran ancho de banda y cálculos en cada CS, y conducen a una arquitectura escalable con múltiples CS principalmente porque los clientes están agrupados en dominios. El ancho de banda necesario no depende del número total de clientes activos. Como el CS siempre elige a los tres mejores clientes de entre todos los clientes asignados en el dominio, la adición de nuevos clientes a la conferencia existente no causará ningún problema de escalabilidad. 8.3 Disponibilidad de Multidifusión En la arquitectura propuesta, no se hizo ninguna suposición sobre la disponibilidad de soporte de multidifusión de la red. El tráfico se reducirá aún más si la multidifusión está disponible a través de WAN. Es sencillo demostrar que el orden del tráfico tiende a ser O(d) en lugar de O(d2). Esta es una aproximación ya que el ahorro en la multidifusión también depende de la topología. El análisis se realizó para el caso en el que la multidifusión no está disponible (una suposición realista en el Internet de hoy en día). La ventaja de esta configuración es que podemos usarla incluso si la multidifusión está parcialmente disponible. Podemos instruir a los CSs durante la fase de configuración para enviar paquetes unicast a aquellos CSs que no pueden recibir paquetes multicast, mientras que los CSs en enrutadores habilitados para multicast pueden intercambiar paquetes en una dirección multicast. Las estructuras de datos y objetos de conferencia dentro de una CS se encuentran en [14]. Fig. 7. \n\nFig. 7. Interfaz de usuario para establecer el peso de las corrientes de audio NMax (establecer la barra de auto a cero evita el eco). Mejora de calidad 8.4 La mejora observada en la calidad percibida del servicio de conferencias se debe a: (1) limitar el número de oradores concurrentes a un número bajo, como tres. Generalmente, en una conferencia, si hablan más de dos participantes se pierde la inteligibilidad. El análisis conversacional demuestra que en tal caso habría un mecanismo de reparación [15]. (2) Retraso: La transmisión de audio entre dos clientes pasará como máximo por dos servidores centrales, reduciendo así el retraso de extremo a extremo. Para una conferencia grande puede haber tres CSs, sin embargo, un salto está dentro del dominio incurriendo en un retraso insignificante. (3) Dado que las transmisiones se mezclan solo en los clientes, puede haber una mezcla personalizada de las transmisiones. La sintonización individual de la mezcla con pesos preserva el espacialismo. La Fig. 7 muestra la interfaz de usuario para lo mismo. El eco al seleccionar la auto-transmisión se puede evitar reduciendo el peso. Sin embargo, la retroalimentación ayuda a asegurar al hablante de que está siendo escuchado por todos. CONCLUSIÓN En este artículo, hemos presentado una discusión sobre un entorno de conferencias virtuales solo de voz. Hemos argumentado que la naturaleza distribuida de la implementación aquí la hace escalable. La interactividad se logra adaptando un esquema reciente de selección de flujo basado en el Número de Sonoridad. Además, incorporamos un resultado de un trabajo más reciente [15] donde se ha demostrado la suficiencia de tres hablantes simultáneos. Por lo tanto, hay una utilización significativamente efectiva del ancho de banda. Un flujo mixto se reproduce en cada cliente; cada cliente puede elegir tener una mezcla personalizada ya que la mezcla se realiza en el terminal local de cada cliente. Estos permiten que el discurso improvisado en una videoconferencia virtual a través de VoIP sea una realidad, como en una conferencia presencial real. La compatibilidad está asegurada gracias al uso de SIP, el protocolo de señalización más buscado. Para garantizar un rendimiento satisfactorio, no exigimos la disponibilidad de multidifusión, pero la utilizamos si está disponible. El tráfico en la WAN (Internet) está limitado por arriba por el cuadrado del número de dominios, --además se reduce aún más mediante el uso de algoritmos heurísticos-- lo cual está muy por debajo del número total de clientes en la conferencia. Esto se debe al uso de un Servidor de Conferencias local para cada dominio. Las técnicas de VAD ayudan a reducir aún más el tráfico. El uso del estándar SIP para la señalización hace que esta solución sea altamente interoperable. Hemos implementado una aplicación de CS en una red de campus. Creemos que esta nueva generación de entornos de conferencias virtuales ganará más popularidad en el futuro, ya que su facilidad de implementación está garantizada gracias a las tecnologías fácilmente disponibles y los marcos escalables. REFERENCIAS [1] L. Aguilar et al., Arquitectura para un Sistema de Teleconferencia Multimedia, en Actas de ACM SIGCOMM, Ago 1986, pp. 126-136. [2] Carsten Bormann, Joerg Ott et al., Protocolo de Control de Conferencias Simple, Borrador de Internet, Dic. 1996. [3] M. Decina y V. Trecordi, Voz sobre Protocolo de Internet y Comercio Electrónico Asistido por Humanos, IEEE Comm. Revista, septiembre de 1999, pp. 64-67. [4] Eckehard Doerry, Una comparación empírica de la interacción copresente y mediada tecnológicamente basada en la ruptura comunicativa, Tesis de doctorado, Escuela de Graduados de la Universidad de Oregón, 1995. [5] H. P. Dommel y J.J. Garcia-Luna-Aceves, Control de piso para conferencias y colaboración multimedia, J. Sistemas Multimedia, Vol. 5, No. 1, enero de 1997, pp. 23-38. [6] Amitava Dutta-Roy, Reuniones virtuales con videoconferencias de escritorio, IEEE Spectrum, julio de 1998, pp. 47-56. [7] M. Handley y V. Jacobson, SDP: Protocolo de Descripción de Sesiones, RFC 2327, IETF, abril de 1998. [8] M. Handley, J. Crowcroft et al., Conferencias muy grandes en Internet: la arquitectura de conferencias multimedia en Internet, Revista de Redes de Computadoras, vol. 31, No. 3, febrero de 1999, pp. 191-204. [9] Rec. ITU-T. H.323, Sistemas de Comunicaciones Multimedia basados en Paquetes, vol. 2, 1998. [10] P. Koskelainen, H. Schulzrinne y X. Wu, Un Marco de Control de Conferencias basado en SIP, NOSSDAV02, mayo de 2002, pp. 53-61. [11] R Venkatesha Prasad et al., Protocolo de Control para Soporte de Conferencias de Audio VoIP, Conferencia Internacional sobre Tecnología de Comunicación Avanzada, Mu-Ju, Corea del Sur, febrero de 2001, pp. 419-424. [12] R Venkatesha Prasad et al., Adición y Eliminación Automáticas de Clientes en Conferencias VoIP, 6º Simposio IEEE sobre Computadoras y Comunicaciones, julio de 2001, Hammamet, Túnez, pp. 386-390. [13] R Venkatesha Prasad, H S Jamadagni, Abjijeet, et al Comparación de Algoritmos de Detección de Actividad de Voz, 7º Simposio IEEE sobre Computadoras y Comunicaciones. Julio de 2002, Sicilia, Italia, pp. 530-535. [14] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, Una Conferencia VoIP Distribuida Escalable utilizando SIP, Actas del 8º Simposio de Computadoras y Comunicaciones de IEEE, Antalya, Turquía, junio de 2003. [15] R Venkatesha Prasad, H S Jamadagni y H N Shankar, Sobre el Problema de Especificar el Número de Pisos en una Conferencia Solo de Voz, Por aparecer en IEEE ITRE 2003. [16] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, Una Propuesta para Conferencias Distribuidas en SIP utilizando Servidores de Conferencias, Por aparecer en las Actas de MMNS 2003, Belfast, Reino Unido, septiembre de 2003. [17] R. Venkatesha Prasad, H.S. Jamadagni, J. Kuri, R.S. Varchas, un soporte de conferencias VoIP distribuido que utiliza el número de sonoridad, Tech. Rep. TR-CEDT-TE-03-01 [18] M. Radenkovic et al, Servicio de audio escalable y adaptable para apoyar el trabajo colaborativo y el entretenimiento a través de Internet, SSGRR 2002, LAquila, Italia, enero de 2002. [19] M. Radenkovic, C. Greenhalgh, S. Benford, Problemas de implementación para el soporte de audio multiusuario en CVEs, ACM VRST 2002, noviembre de 2002, pp. 179-185. [20] Srinivas Ramanathan, P. Venkata Rangan, Harrick M. Vin, Diseñando arquitecturas de comunicación para la colaboración multimedia interorganizacional, Journal of Organizational Computing, 2 (3&4), pp.277-302, 1992. [21] A. B. Roach, Notificación de Eventos Específicos del Protocolo de Inicio de Sesión (SIP), RFC 3265, IETF, junio de 2002. [22] J. Rosenberg, H. Schulzrinne et al., SIP: Protocolo de Inicio de Sesión, RFC 3261, IETF, junio de 2002. [23] J. Rosenberg, H. Schulzrinne, Modelos para Conferencias de Múltiples Partes en SIP, Borrador de Internet, IETF, julio de 2002. [24] H. Schulzrinne et al., RTP: un protocolo de transporte para aplicaciones en tiempo real, RFC 1889, IETF, enero de 1996. [25] Lisa R. Silverman, Llegada a la Madurez: Soluciones de Conferencias que Reducen Costos Corporativos, Documento Técnico, www.imcca.org/wpcomingofage.asp [26] Kundan Singh, Gautam Nair y Henning Schulzrinne, Conferencias Centralizadas utilizando SIP, Actas del 2do Taller de IP-Telefonía (IPTel), abril de 2001. [27] D. Thaler, M. Handley y D. Estrin, Arquitectura de Asignación de Direcciones de Multidifusión en Internet, RFC 2908, IETF, septiembre de 2000. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "voice activity detection": {
            "translated_key": "Detección de Actividad de Voz",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Deployment Issues of a VoIP Conferencing System in a Virtual Conferencing Environment R. Venkatesha Prasad i Richard Hurni ii H.S.",
                "Jamadagni iii H.N.",
                "Shankar iv i, iii Centre for Electronics Design and Technology Indian Institute of Science, Bangalore, India Telephone: +91 80 360 0810 i, iii {vprasad, hsjam}@cedt.iisc.ernet.in ii hurni@ieee.org iv hn_shankar@yahoo.com ABSTRACT Real-time services have been supported by and large on circuitswitched networks.",
                "Recent trends favour services ported on packet-switched networks.",
                "For audio conferencing, we need to consider many issues - scalability, quality of the conference application, floor control and load on the clients/servers - to name a few.",
                "In this paper, we describe an audio service framework designed to provide a Virtual Conferencing Environment (VCE).",
                "The system is designed to accommodate a large number of end users speaking at the same time and spread across the Internet.",
                "The framework is based on Conference Servers [14], which facilitate the audio handling, while we exploit the SIP capabilities for signaling purposes.",
                "Client selection is based on a recent quantifier called Loudness Number that helps mimic a physical face-to-face conference.",
                "We deal with deployment issues of the proposed solution both in terms of scalability and interactivity, while explaining the techniques we use to reduce the traffic.",
                "We have implemented a Conference Server (CS) application on a campus-wide network at our Institute.",
                "Categories and Subjects Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - Client / Server, distributed applications.",
                "General Terms Algorithms, Performance, Design, Theory. 1.",
                "INTRODUCTION Todays Internet uses the IP protocol suite that was primarily designed for the transport of data and provides best effort data delivery.",
                "Delay-constraints and characteristics separate traditional data on the one hand from voice & video applications on the other.",
                "Hence, as progressively time-sensitive voice and video applications are deployed on the Internet, the inadequacy of the Internet is exposed.",
                "Further, we seek to port telephone services on the Internet.",
                "Among them, virtual conference (teleconference) facility is at the cutting edge.",
                "Audio and video conferencing on Internet are popular [25] for the several advantages they inhere [3,6].",
                "Clearly, the bandwidth required for a teleconference over the Internet increases rapidly with the number of participants; reducing bandwidth without compromising audio quality is a challenge in Internet Telephony.",
                "Additional critical issues are: (a) packet delay, (b) echo, (c) mixing of audio from selected clients, (d) automatic selection of clients to participate in the conference, (e) playout of mixed audio for every client, (f) handling clients not capable of mixing audio streams (such clients are known as dumb clients), and (g) deciding the number of simultaneously active clients in the conference without compromising voice quality.",
                "While all the above requirements are from the technology point of view, the users perspective and interactions are also essential factors.",
                "There is plenty of discussion amongst HCI and CSCW community on the use of Ethnomethodology for design of CSCW applications.",
                "The basic approach is to provide larger bandwidth, more facilities and more advanced control mechanisms, looking forward to better quality of interaction.",
                "This approach ignores the functional utility of the environment that is used for collaboration.",
                "Eckehard Doerry [4] criticizes this approach by saying it is keeping form before function.",
                "Thus, the need is to take an approach that considers both aspects - the technical and the functional.",
                "Regarding the functional aspect, we refer to [15] where it has been dealt with in some detail.",
                "In this work, we do not discuss video conferencing; its inclusion does not significantly benefit conference quality [4].",
                "Our focus is on virtual audio environments.",
                "We first outline the challenges encountered in virtual audio conferences.",
                "Then we look into the motivations followed by relevant literature.",
                "In Section 5, we explain the architecture of our system.",
                "Section 6 comprises description of the various algorithms used in our setup.",
                "We address deployment issues.",
                "A discussion on Swiss Federal Institute of Technology, Lausanne.",
                "Former visitor at CEDT.",
                "PESIT and NIAS, Bangalore, India.iv ii performance follows.",
                "We conclude taking alongside some implementation issues. 2.",
                "CHALLENGES IN VoIP CONFERENCING Many challenges arise in building a VoIP application.",
                "The following are of particular concern in the process: • Ease of use: Conferencing must be simple; users need no domain expertise.",
                "Management (addition/removal) of clients and servers must be uncomplicated.",
                "Application development should not presuppose specific characteristics of the underlying system or of network layers.",
                "Ease of use may include leveraging readily available, technically feasible and economically viable technologies. • Scalability: Conferencing must seem uninterrupted under heavy loads, i.e., when many additional users are added on.",
                "Traffic on WAN should not grow appreciably with the total number of clients; else, this has lead to congestion.",
                "So a means to regulate traffic to a minimum is needed for this kind of real-time applications. • Interactivity: In Virtual Conferencing Environments (VCEs), we intend a face-to-face-like conferencing application that mimics a real conference, where more vocal participants invite attention.",
                "Turn-taking in floor occupation by participants must be adapted gracefully to give a feel of natural transition. • Standardization: The solution must conform to established standards so as to gain interoperability and peer acceptance.",
                "The above requirements are placed in the perspective of observations made in earlier works (vide Sections 3 and 4) and will steer the VCE design. 3.",
                "THE MOTIVATION Ramanathan and Rangan [20] have studied in detail the architectural configurations comparing many conferencing architecture schemes taking into consideration the network delay and computation requirements for mixing.",
                "Functional division and object-oriented architecture design that aid in implementation is presented in [1].",
                "An overview of many issues involved in supporting a large conference is dealt in [8].",
                "H. P. Dommel [5] and many others highlight floor control as another pivotal aspect to be taken into account in designing a conferencing tool.",
                "Tightly coupled conference control protocols in Internet belong to the ITU-T H.323 family [9]; however, they are mainly for small conferences.",
                "The latest IETF draft by Rosenberg and Schulzrinne [23] discusses conferencing models with SIP [22] in the background.",
                "Aspects of implementation for centralized SIP conferencing are reported in [26].",
                "A new approach called partial mixing by Radenkovic [18] allows for mixed and non-mixed streams to coexist.",
                "In all the above proposals, while there are some very useful suggestions, they share one or more of the following limitations: • In an audio conference, streams from all the clients need not be mixed.",
                "Actually, mixing many arbitrary streams [24] from clients degrades the quality of the conference due to the reduction in the volume (spatial aspect of speech).",
                "The number of streams mixed varies dynamically depending on the number of active participants.",
                "This would lead to fluctuations in the volume of every individual participant causing severe degradation in quality.",
                "Customized mixing of streams is not possible when many clients are active.",
                "There is a threshold on the number of simultaneous speakers above which increasing the number of speakers becomes counterproductive to conference quality.",
                "Fixing the maximum number of simultaneous speakers is dealt in a recent work [15] using Ethnomethodology, and is conjectured to be three.",
                "Thus it is advisable to honour that constraint. • There cannot be many intermediate mixers (similarly, Conference Servers as in [10]) in stages as in [20] because it brings in inordinate delay by increasing the number of hops and is not scalable with interactivity in focus. • Floor Control for an audio conference (even video conference) with explicit turn-taking instructions to participants renders the conference essentially a one-speakerat-a-time affair, not a live and free-to-interrupt one.",
                "This way, the conference becomes markedly artificial and its quality degrades.",
                "Schulzrinne et al. [24], assume only one participant is speaking at a time.",
                "In this case, if applications are implemented with some control [5], the service becomes gagging for the users. • Partial mixing [18] has a similar problem as that of mixing when more streams are mixed.",
                "Moreover, in [18], to allow impromptu speech, mixing is not done when the network can afford high bandwidth requirements for sending/receiving all the streams, but it is unnecessary [15]. • For large conferences [23, 10] a centralized conference cannot scale up.",
                "With multicasting, clients will have to parse many streams and traffic on a clients network increases unnecessarily.",
                "Evidently, different particular issues, all of which are a subset of requirements (defined in [14] and [16]) for a VoIP conferencing support, are tackled.",
                "Thus there is a need to address conferencing as a whole with all its requirements considered concurrently.",
                "Towards this goal, the VoIP conferencing system we propose is intended to be scalable and interactive.",
                "We make use of the Loudness Number for implementing floor control.",
                "This permits a participant to freely get into the speaking mode to interrupt the current speaker as in a natural face-to-face meeting.",
                "An upper limit on the number of floors (i.e., the number of speakers allowed to speak at the same time) is fixed using a conjecture proposed in [15].",
                "The work presented here is in continuation of our studies into conferencing based on the Session Initiation Protocol in [14] and [16].",
                "SIP, defined in [22] is now the most popular standard for VoIP deployment and has been chosen for its strength, ease of use, extensibility and compatibility.",
                "This is the reason it will be in the background of all controlling messages that will implicitly arise between the entities in our architecture.",
                "The actual messages are described in [16] and, as such, we do not present a complete description of them here. 4.",
                "RELATED WORK The SIP standard defined in RFC 3261 [22] and in later extensions such as [21] does not offer conference control services such as floor control or voting and does not prescribe how a conference is to be managed.",
                "However SIP can be used to initiate a session that uses some other conference control protocol.",
                "The core SIP specification supports many models for conferencing [26, 23].",
                "In the server-based models, a server mixes media streams, whereas in a server-less conference, mixing is done at the end systems.",
                "SDP [7] can be used to define media capabilities and provide other information about the conference.",
                "We shall now consider a few conference models in SIP that have been proposed recently [23].",
                "First, let us look into server-less models.",
                "In End-System Mixing, only one client (SIP UA) handles the signaling and media mixing for all the others, which is clearly not scalable and causes problems when that particular client leaves the conference.",
                "In the Users Joining model, a tree grows, as each invited party constitutes a new branch in the distribution path.",
                "This leads to an increasing number of hops for the remote leaves and is not scalable.",
                "Another option would be to use multicast for conferencing but multicast is not enabled over Internet and only possible on a LAN presently.",
                "Among server-based models, in a Dial-In Conference, UAs connect to a central server that handles all the mixing.",
                "This model is not scalable as it is limited by the processing power of the server and bandwidth of the network.",
                "Adhoc Centralized Conferences and Dial-Out Conference Servers have similar mechanisms and problems.",
                "Hybrid models involving centralized signaling and distributed media, with the latter using unicast or multicast, raise scalability problems as before.",
                "However an advantage is that the conference control can be a third party solution.",
                "Distributed Partial Mixing, presented in [18], proposes that in case of bandwidth limitation, some streams are mixed and some are not, leaving interactivity intact.",
                "Loss of spatialism when they mix and the bandwidth increase when they do not are open problems.",
                "A related study [19] by the same author proposes conferencing architecture for Collaborative Virtual Environments (CVEs) but does not provide the scalability angle without the availability of multicasting.",
                "With the limitations of proposed conferencing systems in mind, we will now detail our proposal. 5.",
                "SYSTEM ARCHITECTURE This section is dedicated to the description of the proposed system architecture.",
                "However, as this paper constitutes the continuation of our work started in [14] and furthered in [16], we will not present here all the details about the proposed entities and invite the readers to consult the papers mentioned above for a full and thorough description.",
                "First, we do not restrict our conferencing system to work on small conferences only, but rather on large audio VCEs that have hundreds (or even thousands) of users across a Wide Area Network (WAN) such as the Internet.",
                "This view stems from an appraisal that VCEs will gain in importance in the future, as interactive audio conferences will be more popular because of the spread of the media culture around the world.",
                "Two issues must be taken care of when building a VoIP conferencing system: (i) the front-end, consisting of the application program running on the end-users computers and (ii) the back-end that provides other application programs that facilitate conferencing and conference.",
                "The participating users are grouped into several domains.",
                "These domains are Local Area Networks (LANs), such as corporate or educational networks.",
                "This distributed assumption asks for distributed controlling and media handling solutions, as centralized systems would not scale for such very large conferences (vide Section 4).",
                "More explicitly, in each domain, we can identify several relevant logical components of a conferencing facility (Fig. 1):  An arbitrary number of end users (clients) that can take part in at most one audio conference at a time.",
                "Every user is Fig. 1.",
                "Conference example - 3 domains containing the necessary entities so that the conference can take place. included in one and only one domain at a given instant, but can move from domain to domain (nomadism).",
                "In our conferencing environment, these clients are regular SIP User Agents (SIP UAs), as defined in [22] so to gain in interoperability with other existing SIP-compatible systems.",
                "These clients are thus not aware of the complex setting that supports the conference and this is highlighted below.  One SIP Server (SIPS) per domain, taking care of all the signaling aspects of the conference (clients joining, leaving, etc.) [16].",
                "In particular, it is considered as a physical implementation encompassing different logical roles, namely a SIP Proxy Server, a SIP Registrar Server, a SIP Redirect Server and a SIP B2BUA (Back-to-Back User Agent) [22].",
                "This physical implementation enables the handling of incoming/outgoing SIP messages by one or another logical entity according to the needs.",
                "SIPS is entrusted with maintaining total service and has many advantages such as (a) it works as a centralized entity that can keep track of the activities of the UAs in a conference; (b) it can do all the switching for providing PBX features; (c) it can locate the UAs and invite them for a conference; (d) it can do the billing as well.",
                "SIPSs in different domains communicate with each other using SIP messages as described in [16].",
                "If the load on a particular SIPS is too heavy, it can create another SIPS in the same domain so that the load will be shared.  One Master Conference Server (M-CS) (simply a Conference Server (CS)) for each conference is created by the local SIPS when a conference starts.",
                "This server will be used for handling media packets for the clients of the domain.",
                "Its mechanism will be described in the next section.",
                "The M-CS will be able to create a hierarchy of CSs inside a domain by adding one or more Slave CSs (S-CSs) to accommodate all the active clients and prevent its own flooding at the same time.",
                "We will see this mechanism in some detail in the sequel.",
                "The entities described here are exhaustive and conform to the SIP philosophy.",
                "Thus, the use of SIP makes this architecture more useful and interoperable with any other SIP clients or servers. 6.",
                "ALGORITHMIC ISSUES 6.1 Selecting the Streams Similar to SipConf in [27], a Conference Server (CS) [17] has the function of supporting the conference; it is responsible for handling audio streams using RTP.",
                "It can also double to convert audio stream formats for a given client if necessary and can work as Translators/Mixers of RTP specification behind firewalls.",
                "We have based the design of our CS on H.323 Multipoint Processor (MP) [9].",
                "In short, the MP receives audio streams from the endpoints involved in a centralized or hybrid multipoint conference, processes them and returns them to the endpoints.",
                "An MP that processes audio prepares NMax audio outputs from M input streams after selection, mixing, or both.",
                "Audio mixing requires decoding the input audio to linear signals (PCM or analog), performing a linear combination of the signals and reencoding the result in an appropriate audio format.",
                "The MP may eliminate or attenuate some of the input signals in order to reduce noise and unwanted components.",
                "Fig. 2.",
                "Schematic diagram of a CS The limitation of H.323 is that it does not address the scalability of a conference.",
                "The architecture proposes a cascaded or daisy chain topology [10], which can be shown that it cannot scale up for a large conference.",
                "A CS serves many clients in the same conference.",
                "Thus it handles only one conference at a time.",
                "Multiple CSs may coexist in a domain, as when there are several conferences under way.",
                "Signaling-related messages of CSs are dealt in [11].",
                "The working of a CS is illustrated on Fig. 2: For each mixing interval, CS 1 chooses the best NMax audio packets out of the M1 (using a criterion termed Loudness Number, described in the next subsection).",
                "It may possibly receive and sends these to CSs 2 to P. The set of packets sent is denoted as ToOtherCSs.",
                "In the same mixing interval, it also receives the best NMax audio packets (out of possibly M2) from CS 2, similarly the best NMax (out of possibly MP) from CS P. For simplicity, we ignore propagation delay between CSs which indeed can be taken into account; it is beyond the scope of this presentation.",
                "The set of packets received is denoted as FromOtherCSs.",
                "Finally, it selects the best NMax packets from the set {ToOtherCSs union FromOtherCSs} and passes these packets to its own group.",
                "It can be seen that the set {ToOtherCSs union FromOtherCSs} is the same at all CSs.",
                "This ensures that any client in the conference finally receives the same set of packets for mixing.",
                "Hence all clients obtain a common view of the conference.",
                "Similarly, for each time slot (packet time), a subset, F of all clients is selected (using the same criterion) from the pool of packets from all other CSs plus the NMax clients selected locally.",
                "Their packets are mixed and played out at the clients.",
                "According to [15], the cardinality of F, |F| is NMax and is fixed at three.",
                "In our conferencing setup, selection is by the Master Conference Server (M-CS), which comes into the picture exclusively for media handling.",
                "Note that even if the SIP specification enables direct UA-to-UA media communication in a one-to-one call, it is also possible to use the Conference Server for two-party calls, especially because it is then more functional to create a real conference by adding a third and subsequently more participant(s).",
                "There are cases wherein the processing capacity of an M-CS is exceeded as it may have too many packets - from local domains and from remote domains - to process.",
                "In that case, the M-CS will create one or many S-CS (Fig. 6) and transfer its own clients as well as the new clients to them.",
                "In this configuration, the algorithm outlined above will be slightly modified, as the audio packets will go from clients to their dedicated S-CS that will select NMax packets to send to the local M-CS, which will then select NMax packets from all its S-CSs in the domain before sending them to the remote domains.",
                "The incoming packets from other domains will be received by the M-CS, select NMax of them and send them directly to the domain clients, bypassing the SCSs.",
                "This change implies that at most three intermediate entities exist for each audio packet, instead of two in the conventional setup.",
                "As the extra hop happens inside the LAN supposed to have a high-speed connectivity, we consider that it should not prevent us from using this hierarchy of CSs when theres a need to do so. 6.2 Loudness Number (LN) A basic question to be answered by the CS is the following.",
                "In a mixing interval, how should it choose NMax packets out of the M it might possibly receive?",
                "One way is to rank the M packets received according to their energies, and choose the top NMax.",
                "However, this is usually found to be inadequate because random fluctuations in packet energies can lead to poor audio quality.",
                "This indicates the need for a metric different from mere individual packet energies.",
                "The metric should have the following characteristics [12]: • A speaker (floor occupant) should not be cut off by a spike in the packet energy of another speaker.",
                "This implies that a speakers speech history should be given some weight.",
                "This is often referred to as Persistence or Hangover. • A participant who wants to interrupt a speaker will have to (i) speak loudly and (ii) keep trying for a little while.",
                "In a face-to-face conference, body language often indicates the intent to interrupt.",
                "But in a blind conference under discussion, a participants intention to interrupt can be conveyed effectively through LN.",
                "A floor control mechanism empowered to cut off a speaker forcefully must be ensured.",
                "These requirements are met by Loudness Number [12], which changes smoothly with time so that the selection (addition and deletion) of clients for conference is graceful.",
                "LN (= ) is a function of the amplitude of the current audio stream plus the activity and amplitude over a specific window in the past.",
                "Fig. 3.",
                "The different windows used for LN computation The Loudness Number is updated on a packet-by-packet basis.",
                "The basic parameter used here is packet amplitude, which is calculated as root mean square (rms) of the energies in audio samples of a packet, and denoted by XK.",
                "Three windows are defined as shown in Fig. 3.",
                "The present amplitude level of the speaker is found by calculating the moving average of packet amplitude (XK) within a window called Recent Past Window starting from the present instant to some past time.",
                "The past activity of the speaker is found by calculating the moving average of the packet amplitude (XK) within a window called Distant Past Window, which starts at the point where the Recent Past window ends and stretches back in the past for a pre-defined interval.",
                "The activity of the speaker in the past is found with a window called Activity Horizon, which spans the recent past window as well as the distant past window and beyond if necessary.",
                "Though the contribution of the activity horizon looks similar to the contribution of the recent past and distant past windows, past activity is computed from activity horizon window in a differently.",
                "Define the quantities during these three intervals as L1, L2 and L3.",
                "L1 quantifies the Recent Past speech activity, L2 the Distant Past speech activity and L3 gives a number corresponding to the speech activity in the Activity Horizon window quantifying how active the speaker was in the past few intervals.",
                "L3 yields a quantity that is proportional to the fraction of packets having energies above a pre-defined threshold (Eq. 3).",
                "The threshold is invariant across clients. ∑ +− = = 1 1 1 RPP P Wt tK K RP X W L (1) ∑ +−− −= = 1 2 1 DPRPP RPP WWt WtK K DP X W L (2) ∑ +− = ≥= 1 }{3 * 1 AHP P K Wt tK X AH I W L θθ (3) Where ifI KX 1}{ =≥θ θ≥KX = otherwise,0 The threshold is a constant. is set at 10-20 percent of the amplitude of the voice samples of a packet in our implementation here.",
                "Loudness Number λ for the present time instant (or the present packet) is calculated as, 332211 *L*L*L αααλ ++= (4) Here 1\u000f 2 DQG 3 are chosen such that: 0< 1\u000f 2\u001f\u0014\u000f \u0013\u001f 1\u000e 2\u001f\u0014 DQG 3=1-\u000b 1\u000e 2) Here, 1 is the weight given to the recent past speech, 2 is the weight given to distant past speech and 3 is the weight given to speech activity in the activity horizon window considered. 6.3 Safety, Liveness and Fairness The λ parameter KDV VRPH PHPRU\\ GHSHQGLQJ RQ WKH VSUHDG RI the windows.",
                "After one conferee becomes silent, another can take the floor.",
                "Also, as there is more than one channel, interruption is enabled.",
                "A loud conferee is more likely to be heard because of elevated λ.",
                "This ensures fairness to all conferees.",
                "After all, even in a face-to-face conference, a more vocal speaker grabs special attention.",
                "All these desirable characteristics are embedded into the LN.",
                "A comprehensive discussion on selection of the various parameters and the dynamics of LN are beyond the scope of this paper. 6.4 Selection Algorithm using the LN Following the developments in subsections 6.1 and 6.2, we present the simple algorithm that runs at each Master-Conference Server (Algorithm. 1).",
                "This algorithm is based on the discussions in section 6.1.",
                "The globally unique set F is found using this procedure.",
                "Repeat for each time slot at each M-CS { 1.",
                "Get all the packets from the Clients that belong to it. 2.",
                "Find at most NMax Clients that have PD[LPXP RXW RI 0 &OLHQWV LQ LWV GRPDLQ\u0011 3.",
                "Store a copy of packets from those NMax Clients in database DB1. 4.",
                "Send these NMax packets to other M-CSs (on Unicast or Multicast, depending on the configuration). 5.",
                "Similarly, receive packets from all other M-CSs and store them in database DB2. 6.",
                "Now compare the packets in DB1 and DB2 on WKH EDVLV RI DQG VHOHFW D PD[LPXP RI NMax amongst them (to form set F) that should be played out at each Client. 7.",
                "Send the NMax packets in set F to the Clients in its domain. 8.",
                "Mix these NMax audio packets in set F after linearising and send it to dumb Clients in the domain. }",
                "Algorithm 1.",
                "Selection algorithm The mechanism proposed here is also depicted on Fig. 6, where a single conference takes place between three domains.",
                "The shaded clients are the ones selected in their local domains; their audio streams will be sent to other CSs. 7.",
                "DEPLOYMENT ISSUES We now analyze deployment issues associated with conference management.",
                "How are domains to be organized to maximize the number of participants able to join?",
                "To address this, we define some useful parameters.  Let d be the number of different domains in which there are active clients in a given conference.  Let Mi be the number of active clients present in domain i ( di ≤≤1 ) in a given conference.",
                "The total number of active clients in the conference is thus ∑= = d i iMM 1 .  Let C be the maximum number of audio streams a Conference Server can handle in a packet time, also called capacity.",
                "C is set according to the processing power of the weakest CS in the conference but as it cannot be assumed that we know it a-priori, it can be set according to some minimum system requirement a machine must meet in order to take part in a conference.  Let NMax be the number of output streams a CS has to send to other CSs in remote domains (see section 6.1).",
                "We will set NMax =3 (=|F|), according to [15].",
                "The optimization problem is now to find the value of d that maximizes the total number of clients Mi served by one CS in a domain with capacity C. We first dispose the case where the capacity is not exceeded (the existing CS is not overloaded), and then proceed to the case where there exists a need to create more CSs when a single CS is overloaded.",
                "We assume that clients are equally distributed amongst the domains, as we may not have information to assume an a-priori distribution of the clients.",
                "We can specify no more than an upper bound on the number of clients acceptable, given the number of active domains d. 7.1 Conferencing with only One Level of CSs In this subsection, we consider that we have only one CS, i.e., a unique M-CS in each domain.",
                "Thus it cannot be overloaded.",
                "We consider that the system works as outlined in section 6.1: The Clients send their audio packets to their local CS, which selects NMax streams, before sending them to other CSs.",
                "In parallel, it also receives NMax streams for every other CSs before taking a decision on which NMax streams will be selected, sent and played out at each individual clients.",
                "For system stability, any CS in the conference should be able to handle its local clients in addition to the audio packets from other domains.",
                "Clearly then, the following inequality must hold for every domain: )1( −⋅+≥ dN d M C Max (5) The limiting case of (5) (taking the equality) takes the form 2 )( dNdNCM MaxMax ⋅−⋅+= (6) To optimize d with respect to M, we set 0)(2 =+−⋅⋅= ∂ ∂ MaxMax NCdN d M (7) yielding     ⋅ + = Max Max N NC d 2 (8) ([ ]* = Rounding to nearest integer) and hence, M from (6).",
                "C d M 50 9 234 100 17 884 150 26 1950 200 34 3434 250 42 5334 300 51 7650 350 59 10384 400 67 13534 450 76 17100 500 84 21084 Table 1.",
                "Values of d and M computed for some values of C with NMax = 3.",
                "In Table 1, we give the values of d and M that were computed using (8) and (6) with NMax = 3.",
                "We see that the values of d and M, being dependent of C, are therefore based on the weakest CS.",
                "We see that there is a trade-off between M and d. We could admit more domains in the conference, but at the expense of restricting the total number of clients M in the conference.",
                "While implementing and testing the Conference Servers on a Pentium III 1.4 GHz running Windows NT, we were able to set C=300.",
                "But with the advent of faster computers (> 3 GHz), one can easily set C to higher values and determine d and M accordingly.",
                "Fig. 4 shows a contour plot and Fig. 5, a 3D-mesh showing optimized solutions for CSs of different capacities.",
                "These lead us to maximize the number of domains, and hence, to maximize the total number of clients based on the capacity of various CSs.",
                "In Fig. 4, the individual curves represent the total number of clients targeted, and we select a lower value of d, for capacity C, for targeted M to reduce traffic on WAN.",
                "Fig. 5 represents a different perspective of the same data in 3D.",
                "Fig. 4.",
                "Contour Plot of Capacity versus Optimum number of domains for various conference sizes 7.2 Conferencing with Two Levels of CSs Now considering the case where the number of clients in a particular domain is too large, i.e., d M Mi ≥ (9) one has to avoid the denial of service for new clients due to overloading of Conference Server.",
                "This problem can be solved by introducing a second level of CSs inside the given domain, as in Fig. 6.",
                "The existing M-CS creates a Slave CS (S-CS) that can handle up to C end-users and to which it transfers all its active clients.",
                "Here, the system works differently as outlined in section 6.1: The Clients send their audio packets to their local S-CS, which selects NMax streams, before sending them to a local M-CS, which will proceed in the same way, before sending NMax streams to the other domains.",
                "Each newly created S-CS must run on a separate machine.",
                "The M-CS has to create more S-CSs if the number of active clients exceeds C in the course of the conference after the transfer.",
                "With this mechanism, the M-CS will be able to create utmost     −⋅− = Max Max N dNC U )1( S-CSs, (10) as it must handle 3 (= NMax) packets for each local S-CSs and 3 (= NMax) packets from each other remote domains.",
                "We can then calculate the maximum theoretical number of active clients CUMi ⋅= in each domain as well as M, for the whole conference as CUdM ⋅⋅= .",
                "Fig. 5. 3D Plot of Capacity versus Optimum number of domains for various conference sizes Of course, one could further create a third level in the hierarchy, giving the possibility of accommodating even more clients.",
                "This may be unnecessary as the number of possible clients is large enough with two levels. 8.",
                "PERFORMANCE DISCUSSION We now analyze the performance of the algorithm presented in subsection 6.3, i.e., the one taking care of the exchange of audio packets between the different domains.",
                "Note that the packets that are transiting within the LAN take advantage of the higher capacity (generally coupled with multicast capabilities) and therefore do not require a performance analysis.",
                "Thus we have to look only at the RTP packets over the WAN, i.e., between participating M-CSs.",
                "As each M-CS from a domain will be sending only NMax out of d M packets to the other CSs ( MaxN d M >> ), the bandwidth used by the application over a WAN is upper-bounded by the following expression.",
                "The total number of audio packets transiting over the WAN for each time slot is ∑ ∑= ≠=        d i d ijj MaxN 1 ,1 which is quadratic in the number of domains (i.e., O(d2 )).",
                "However, it is independent of the total number of active clients.",
                "This would not have been the case had all packets been sent over the network in each time slot.",
                "The saving is tremendous.",
                "Yet, one may contend that sending three packets to and from all domains is a waste of resources, as most of these streams will not be selected.",
                "If just one client is active, selecting a subset of clients in that domain is unnecessary.",
                "Pessimistic and optimistic algorithms as presented in the sequel aim at reducing the traffic further by harnessing the slow varying nature of the LN. 8.1 Pessimistic algorithm Consider a scenario wherein the lowest LN (called LNt) of the three globally selected streams (set F of Section 6.1) exceeds the LN of the most dominant stream of a domain.",
                "Evidently, the chances that the next two dominant streams of that domain being selected to F in the next packet period are less.",
                "Here, we send this most dominant stream and withhold the other two.",
                "There may be an error in unique selection across all domains for one packet period only.",
                "As LN varies slowly, the error would get automatically rectified in a subsequent packet period (slot).",
                "In this algorithm, there is at least one stream in each period.",
                "The net network traffic in a packet period in the best case is )1( −⋅ dd , i.e., )( 2 dO using unicast, instead of MaxNdd ⋅−⋅ )1( .",
                "Considerable valuable bandwidth can be saved using this heuristic.",
                "The resulting traffic complexity reduces from O(d2 ) to O(d) in multicast-enabled networks.",
                "Initialize LNt = 0 at an M-CS/S-CS A.",
                "In the first time slot (packet time), each CS sends the top NMax streams (based on their LN) to all other CSs.",
                "At each M-CS/S-CS and for each packet time: B.",
                "Find the value of lowest LN of the NMax globally selected streams (set F) from the previous time slot.",
                "Set LNt with this value.",
                "C. At each CS domain, select the NMax local streams that have maximum value of LN (ToOtherCSs set).",
                "D. Select streams that have LN > LNt.",
                "IF there are >= NMax streams with LN > LNt then send top NMax to other CSs.",
                "ELSE IF there are (NMax-1) streams with LN>LNt then send top (NMax-1) plus the one lower than LNt (i.e., top NMax) to other CSs.",
                "ELSE IF there are (NMax-2) streams with LN>LNt then send top (NMax-2) plus the one lower than LNt (i.e. top (NMax -1)) to other CSs. …… ELSE IF there are NO streams with LN> LNt then send top 1 stream to other CSs.",
                "E. Packets sent in step D form DB1.",
                "Packets received from other CSs form DB2.",
                "F. For this time slot, find global NMax streams based on LN from DB1 U DB2 (set F) G. Send set F to the clients in its domain.",
                "Update LNt for the next period.",
                "Algorithm 2.",
                "Pessimistic algorithm to reduce the number of packets sent over the Internet.",
                "Fig. 6.",
                "Example of a 2-level hierarchy of Conference Servers; the shaded Clients are the one selected by the M-CS and will be sent to other domains CSs.",
                "In this algorithm the saving in traffic is at the cost of relaxing the condition of formation of globally unique set F. However, the discrepancies in selected streams at different domains remain for a short period of time depending on the transportation delay between any two domains.",
                "Even for a total delay of 400ms, for only 10 packet time slots the uniqueness is lost.",
                "This duration in a real-time interactive conversation is non-perceivable by the listener.",
                "In the case that there is a joke and every one laughs, then there would be sudden rise in the number of packets and it would be upper bounded by MaxN)d(O 2 for a short period. 8.2 Optimistic Algorithm The traffic can be reduced further.",
                "The scheme in the following algorithm (Algorithm. 3) is withholding all the streams that have less value of LN compared to the least of the three in the set F. We can find the correct and unique three streams after a few time slots depending on the transportation delay between the domains.",
                "As the packet period is of the order of 40ms, the error in the selection is unnoticeable.",
                "The number of streams on network in this case is always restricted to NMax (=3).",
                "Even without <br>voice activity detection</br> (VAD), there will be no more than three streams in the network in the best case, thus the total traffic is constant.",
                "A sudden burst of traffic, as described in 8.1, is a particular case.",
                "These advantages are due to exploitation of the characteristics of LN.",
                "Initialize LNt = 0 at an M-CS/S-CS A.",
                "In the first time slot (packet time), each CS sends the top NMax streams (based on their LN) to all other CSs.",
                "At each M-CS/S-CS and for each packet time: B.",
                "Find the value of lowest LN of the NMax globally selected streams (set F) from the previous time slot.",
                "Set LNt with this value.",
                "C. At each CS domain, select the NMax local streams that have maximum value of LN (ToOtherCSs set) D. Select streams that have LN > LNt IF there are >= NMax streams with LN > LNt then send top NMax to other CSs.",
                "ELSE IF there are (NMax-1) streams with LN>LNt then send top (NMax-1) and see E. ELSE IF there are (NMax-2) streams with LN>LNt then send top (NMax-2) and see E. …… ELSE IF there are NO streams with LN> LNt then dont send any stream.",
                "E. Exceptions: IF the stream that was in F in the last interval belongs to this CS then select and send that stream even if its LN is now < LNt. (Note this occurs only at that CS which had the stream that was the last of the three in the previous packet period.)",
                "F. Packets sent in step D and E form DB1.",
                "Packets received from other CSs form DB2.",
                "G. For this time slot, find global NMax streams based on LN from DB1 U DB2 (set F).",
                "H. Send set F to the clients in its domain.",
                "Update LNt for the next period.",
                "Algorithm 3.",
                "Optimistic algorithm to reduce the number of packets sent over the Internet Furthermore, when VAD is used [13], it would further reduce the traffic by sending the header part of the RTP packet only and not the whole packet, thus in order to keep updating the LN across.",
                "The traffic here in this case is O(NMax) for multicast and O(d) for unicast.",
                "We see that the above algorithms save bandwidth and computation at each CS, and leads to a scalable architecture with multiple CSs mainly because clients are grouped in domains.",
                "The necessary bandwidth is not dependent on the total number of active clients.",
                "As the CS always chooses the best three clients out of all the clients assigned to it in the domain, addition of new clients to the existing conference will not cause any scalability problem. 8.3 Availability of Multicasting In the architecture that has been proposed, no assumption was made about the availability of multicasting support from the network.",
                "The traffic will be further reduced if multicasting is available over WAN.",
                "It is simple to show that the order of traffic would tend to become O(d) from O(d2 ).",
                "This is an approximation as saving in multicasting depends also on the topology.",
                "The analysis was done for the case wherein multicast is not available (a realistic assumption in todays Internet).",
                "The advantage of this set up is that we can use it even if multicasting is partially available.",
                "We can instruct CSs during the set-up phase to send unicast packets to those CSs that cannot receive multicast packets whereas CSs on multicast enabled routers can exchange packets on a multicast address.",
                "The data structures and conference objects inside a CS is given in [14].",
                "Fig. 7.",
                "User Interface for setting the weight for NMax audio streams (setting Self-bar to zero avoids echo). 8.4 Quality Improvement The observed improvement in the perceived quality of the conference service is due to: (1) limiting the number of concurrent speakers to a low number such as three.",
                "Generally, in a conference if more than two participants speak the intelligibility is lost.",
                "The conversational analysis demonstrates that there would be a repair mechanism [15] in such a case. (2) Delay: The audio stream between any two clients will pass through at most two CSs thus reducing the end-to-end delay.",
                "For a large conference there might be three CSs however, one hop is within the domain incurring negligible delay. (3) As the streams are mixed only at the clients, there can be a customized mix of the streams.",
                "The individual tuning of mixing with weights the spatialism is preserved.",
                "Fig. 7 shows the user interface for the same.",
                "The echo when self-stream is selected can be avoided by reducing the weight.",
                "Nonetheless, feedback helps in reassuring speaker that he/she is heard by all. 9.",
                "CONCLUSION In this paper, we have presented a discussion on a voice-only virtual conferencing environment.",
                "We have argued that the distributed nature of deployment here makes it scalable.",
                "Interactivity is achieved by adapting a recent stream selection scheme based on Loudness Number.",
                "Additionally, we incorporate a result from a more recent work [15] where the sufficiency of three simultaneous speakers has been demonstrated.",
                "Thus, there is significantly effective utilization of bandwidth.",
                "A mixed stream is played out at each client; each client may choose to have a customized mix since mixing is done at the local terminal of each client.",
                "These render impromptu speech in a virtual teleconference over VoIP a reality, as in a real face-to-face conference.",
                "Compatibility is assured thanks to the use of SIP, the most soughtafter signaling protocol.",
                "To ensure a satisfying performance, we do not demand the availability of multicast, but use it if and when available.",
                "The traffic in the WAN (Internet) is upper-bounded by the square of the number of domains, -- further reduced by using heuristic algorithms -- which is far below the total number of clients in the conference.",
                "This is due to the use of a Conference Server local to each domain.",
                "VAD techniques help further traffic reduction.",
                "Using SIP standard for signaling makes this solution highly interoperable.",
                "We have implemented a CS application on a campus-wide network.",
                "We believe this new generation of virtual conferencing environments will gain more popularity in the future as their ease of deployment is assured thanks to readily available technologies and scalable frameworks. 10.",
                "REFERENCES [1] L Aguilar et al., Architecture for a Multimedia Teleconferencing System, in Proceedings of the ACM SIGCOMM, Aug 1986, pp. 126-136. [2] Carsten Bormann, Joerg Ott et al., Simple Conference Control Protocol, Internet Draft, Dec. 1996. [3] M. Decina and V. Trecordi, Voice over Internet Protocol and Human Assisted E-Commerce, IEEE Comm.",
                "Magazine, Sept. 1999, pp. 64-67. [4] Eckehard Doerry, An Empirical Comparison of Copresent and Technologically-mediated Interaction based on Communicative Breakdown, Phd Thesis, Graduate School of the University of Oregon, 1995. [5] H. P. Dommel and J.J. Garcia-Luna-Aceves, Floor Control for Multimedia Conferencing and Collaboration, J. Multimedia Systems, Vol. 5, No. 1, January 1997, pp. 23-38. [6] Amitava Dutta-Roy, Virtual Meetings with desktop conferencing, IEEE Spectrum, July 1998, pp. 47-56. [7] M. Handley and V. Jacobson, SDP: Session Description Protocol, RFC 2327, IETF, April 1998. [8] M. Handley, J. Crowcroft et al., Very large conferences on the Internet: the Internet multimedia conferencing architecture, Journal of Computer Networks, vol. 31, No. 3, Feb 1999, pp. 191-204. [9] ITU-T Rec.",
                "H.323, Packet based Multimedia Communications Systems, vol. 2, 1998. [10] P. Koskelainen, H. Schulzrinne and X. Wu, A SIP-based Conference Control Framework, NOSSDAV02, May 2002, pp. 53-61. [11] R Venkatesha Prasad et al., Control Protocol for VoIP Audio Conferencing Support, International Conference on Advanced Communication Technology, Mu-Ju, South Korea, Feb 2001, pp. 419-424. [12] R Venkatesha Prasad et al., Automatic Addition and Deletion of Clients in VoIP Conferencing, 6th IEEE Symposium on Computers and Communications, July 2001, Hammamet, Tunisia, pp. 386-390. [13] R Venkatesha Prasad, H S Jamadagni, Abjijeet, et al Comparison of <br>voice activity detection</br> Algorithms, 7th IEEE Symposium on Computers and Communications.",
                "July 2002, Sicily, Italy, pp. 530-535. [14] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, A Scalable Distributed VoIP Conferencing using SIP, Proc. of the 8th IEEE Symposium on Computers and Communications, Antalya, Turkey, June 2003. [15] R Venkatesha Prasad, H S Jamadagni and H N Shankar, On Problem of Specifying Number of Floors in a Voice Only Conference, To appear in IEEE ITRE 2003. [16] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, A Proposal for Distributed Conferencing on SIP using Conference Servers, To appear in the Proc. of MMNS 2003, Belfast, UK, September 2003. [17] R. Venkatesha Prasad, H.S.",
                "Jamadagni, J. Kuri, R.S.",
                "Varchas, A Distributed VoIP Conferencing Support Using Loudness Number, Tech.",
                "Rep. TR-CEDT-TE-03-01 [18] M. Radenkovic et al, Scaleable and Adaptable Audio Service for Supporting Collaborative Work and Entertainment over the Internet, SSGRR 2002, LAquila, Italy, Jan. 2002. [19] M. Radenkovic, C. Greenhalgh, S. Benford, Deployment Issues for Multi-User Audio Support in CVEs, ACM VRST 2002, Nov. 2002, pp. 179-185. [20] Srinivas Ramanathan, P. Venkata Rangan, Harrick M. Vin, Designing Communication Architectures for Interorganizational Multimedia Collaboration, Journal of Organizational Computing, 2 (3&4), pp.277-302, 1992. [21] A.",
                "B. Roach, Session Initiation Protocol (SIP)-Specific Event Notification, RFC 3265, IETF, June 2002. [22] J. Rosenberg, H. Schulzrinne et al., SIP: Session Initiation Protocol, RFC 3261, IETF, June 2002. [23] J. Rosenberg, H. Schulzrinne, Models for Multy Party Conferencing in SIP, Internet Draft, IETF, July 2002. [24] H. Schulzrinne et al., RTP: a transport protocol for realtime applications, RFC 1889, IETF, Jan 1996. [25] Lisa R. Silverman, Coming of Age: Conferencing Solutions Cut Corporate Costs, White Paper, www.imcca.org/wpcomingofage.asp [26] Kundan Singh, Gautam Nair and Henning Schulzrinne, Centralized Conferencing using SIP, Proceedings of the 2nd IP-Telephony Workshop (IPTel), April 2001. [27] D. Thaler, M. Handley and D. Estrin, The Internet Multicast Address Allocation Architecture, RFC 2908, IETF, Sept. 2000."
            ],
            "original_annotated_samples": [
                "Even without <br>voice activity detection</br> (VAD), there will be no more than three streams in the network in the best case, thus the total traffic is constant.",
                "H.323, Packet based Multimedia Communications Systems, vol. 2, 1998. [10] P. Koskelainen, H. Schulzrinne and X. Wu, A SIP-based Conference Control Framework, NOSSDAV02, May 2002, pp. 53-61. [11] R Venkatesha Prasad et al., Control Protocol for VoIP Audio Conferencing Support, International Conference on Advanced Communication Technology, Mu-Ju, South Korea, Feb 2001, pp. 419-424. [12] R Venkatesha Prasad et al., Automatic Addition and Deletion of Clients in VoIP Conferencing, 6th IEEE Symposium on Computers and Communications, July 2001, Hammamet, Tunisia, pp. 386-390. [13] R Venkatesha Prasad, H S Jamadagni, Abjijeet, et al Comparison of <br>voice activity detection</br> Algorithms, 7th IEEE Symposium on Computers and Communications."
            ],
            "translated_annotated_samples": [
                "Incluso sin <br>Detección de Actividad de Voz</br> (VAD), en el mejor de los casos no habrá más de tres flujos en la red, por lo tanto, el tráfico total es constante.",
                "H.323, Sistemas de Comunicaciones Multimedia basados en Paquetes, vol. 2, 1998. [10] P. Koskelainen, H. Schulzrinne y X. Wu, Un Marco de Control de Conferencias basado en SIP, NOSSDAV02, mayo de 2002, pp. 53-61. [11] R Venkatesha Prasad et al., Protocolo de Control para Soporte de Conferencias de Audio VoIP, Conferencia Internacional sobre Tecnología de Comunicación Avanzada, Mu-Ju, Corea del Sur, febrero de 2001, pp. 419-424. [12] R Venkatesha Prasad et al., Adición y Eliminación Automáticas de Clientes en Conferencias VoIP, 6º Simposio IEEE sobre Computadoras y Comunicaciones, julio de 2001, Hammamet, Túnez, pp. 386-390. [13] R Venkatesha Prasad, H S Jamadagni, Abjijeet, et al Comparación de Algoritmos de Detección de Actividad de Voz, 7º Simposio IEEE sobre Computadoras y Comunicaciones."
            ],
            "translated_text": "Problemas de implementación de un sistema de conferencias VoIP en un entorno de conferencias virtuales. R. Venkatesha Prasad y Richard Hurni. Jamadagni iii H.N. Shankar iv i, iii Centro de Diseño y Tecnología Electrónica Instituto Indio de Ciencias, Bangalore, India Teléfono: +91 80 360 0810 i, iii {vprasad, hsjam}@cedt.iisc.ernet.in ii hurni@ieee.org iv hn_shankar@yahoo.com RESUMEN Los servicios en tiempo real han sido principalmente respaldados en redes conmutadas por circuitos. Las tendencias recientes favorecen los servicios trasladados a redes de conmutación de paquetes. Para las conferencias de audio, necesitamos considerar muchos aspectos, como la escalabilidad, la calidad de la aplicación de conferencia, el control de piso y la carga en los clientes/servidores, por nombrar algunos. En este documento, describimos un marco de servicio de audio diseñado para proporcionar un Entorno de Conferencias Virtuales (ECV). El sistema está diseñado para dar cabida a un gran número de usuarios finales hablando al mismo tiempo y distribuidos por Internet. El marco se basa en Servidores de Conferencia [14], que facilitan el manejo del audio, mientras que explotamos las capacidades de SIP para propósitos de señalización. La selección de clientes se basa en un reciente cuantificador llamado Número de Volumen que ayuda a imitar una conferencia física cara a cara. Nos ocupamos de los problemas de implementación de la solución propuesta tanto en términos de escalabilidad como de interactividad, mientras explicamos las técnicas que utilizamos para reducir el tráfico. Hemos implementado una aplicación de Servidor de Conferencias (CS) en una red de campus en nuestro Instituto. Categorías y Descriptores de Temas C.2.4 [Redes de Computadoras y Comunicación]: Sistemas Distribuidos - Cliente/Servidor, aplicaciones distribuidas. Términos generales Algoritmos, Rendimiento, Diseño, Teoría. 1. INTRODUCCIÓN El Internet de hoy utiliza el conjunto de protocolos IP que fue diseñado principalmente para el transporte de datos y proporciona la entrega de datos con el mejor esfuerzo. Las restricciones de retraso y las características diferencian los datos tradicionales por un lado, de las aplicaciones de voz y video por el otro. Por lo tanto, a medida que se implementan aplicaciones de voz y video cada vez más sensibles al tiempo en Internet, se pone de manifiesto la insuficiencia de la red. Además, buscamos trasladar servicios telefónicos a través de Internet. Entre ellos, la instalación de conferencia virtual (teleconferencia) está a la vanguardia. Las videoconferencias y conferencias de audio en Internet son populares por las varias ventajas que poseen. Claramente, el ancho de banda necesario para una videoconferencia a través de Internet aumenta rápidamente con el número de participantes; reducir el ancho de banda sin comprometer la calidad del audio es un desafío en la telefonía por Internet. Los problemas críticos adicionales son: (a) retraso de paquetes, (b) eco, (c) mezcla de audio de clientes seleccionados, (d) selección automática de clientes para participar en la conferencia, (e) reproducción de audio mezclado para cada cliente, (f) manejo de clientes que no son capaces de mezclar flujos de audio (estos clientes se conocen como clientes tontos), y (g) decidir el número de clientes activos simultáneamente en la conferencia sin comprometer la calidad de voz. Si bien todos los requisitos anteriores son desde el punto de vista tecnológico, la perspectiva de los usuarios y las interacciones también son factores esenciales. Hay mucha discusión entre la comunidad de HCI y CSCW sobre el uso de la Etnometodología para el diseño de aplicaciones de CSCW. El enfoque básico es proporcionar un ancho de banda más amplio, más instalaciones y mecanismos de control más avanzados, con miras a una mejor calidad de interacción. Este enfoque ignora la utilidad funcional del entorno que se utiliza para la colaboración. Eckehard Doerry [4] critica este enfoque diciendo que pone la forma antes que la función. Por lo tanto, la necesidad es adoptar un enfoque que considere ambos aspectos: el técnico y el funcional. En cuanto al aspecto funcional, nos referimos a [15] donde se ha tratado en cierto detalle. En este trabajo, no discutimos la videoconferencia; su inclusión no beneficia significativamente la calidad de la conferencia [4]. Nuestro enfoque está en entornos de audio virtuales. Primero describimos los desafíos encontrados en las conferencias de audio virtuales. Luego investigamos las motivaciones seguidas por la literatura relevante. En la Sección 5, explicamos la arquitectura de nuestro sistema. La sección 6 comprende la descripción de los diversos algoritmos utilizados en nuestra configuración. Abordamos problemas de implementación. Una discusión sobre el Instituto Federal Suizo de Tecnología, Lausana. Antiguo visitante en CEDT. PESIT y NIAS, Bangalore, India. El rendimiento sigue. Concluimos teniendo en cuenta algunos problemas de implementación. 2. DESAFÍOS EN LA VIDEOCONFERENCIA VoIP Surgen muchos desafíos al construir una aplicación VoIP. Lo siguiente es de particular preocupación en el proceso: • Facilidad de uso: la conferencia debe ser sencilla; los usuarios no necesitan experiencia en el dominio. La gestión (adición/eliminación) de clientes y servidores debe ser sencilla. El desarrollo de aplicaciones no debe presuponer características específicas del sistema subyacente o de las capas de red. La facilidad de uso puede incluir el aprovechamiento de tecnologías fácilmente disponibles, técnicamente factibles y económicamente viables. • Escalabilidad: Las conferencias deben parecer ininterrumpidas bajo cargas pesadas, es decir, cuando se agregan muchos usuarios adicionales. El tráfico en la WAN no debería aumentar apreciablemente con el número total de clientes; de lo contrario, esto podría provocar congestión. Por lo tanto, se necesita un medio para regular el tráfico al mínimo para este tipo de aplicaciones en tiempo real. • Interactividad: En Entornos de Conferencias Virtuales (ECVs), pretendemos una aplicación de conferencias cara a cara que imite una conferencia real, donde los participantes más vocales invitan la atención. El intercambio de turnos en la ocupación del espacio por parte de los participantes debe adaptarse con gracia para lograr una transición natural. • Estandarización: La solución debe cumplir con los estándares establecidos para lograr interoperabilidad y aceptación entre pares. Los requisitos anteriores se colocan en la perspectiva de las observaciones realizadas en trabajos anteriores (véase Secciones 3 y 4) y guiarán el diseño del VCE. 3. La motivación Ramanathan y Rangan [20] han estudiado en detalle las configuraciones arquitectónicas comparando muchos esquemas de arquitectura de conferencias teniendo en cuenta la demora de red y los requisitos de computación para la mezcla. La división funcional y el diseño de arquitectura orientada a objetos que ayudan en la implementación se presentan en [1]. Un resumen de muchos temas relacionados con el apoyo a una conferencia grande se aborda en [8]. H. P. Dommel [5] y muchos otros destacan el control de piso como otro aspecto fundamental a tener en cuenta en el diseño de una herramienta de conferencias. Los protocolos de control de conferencias fuertemente acoplados en Internet pertenecen a la familia ITU-T H.323 [9]; sin embargo, están principalmente diseñados para conferencias pequeñas. El último borrador del IETF de Rosenberg y Schulzrinne [23] discute modelos de conferencia con SIP [22] en el fondo. Los aspectos de implementación para la conferencia SIP centralizada se informan en [26]. Un nuevo enfoque llamado mezcla parcial por Radenkovic [18] permite que flujos mezclados y no mezclados coexistan. En todas las propuestas anteriores, si bien hay algunas sugerencias muy útiles, comparten una o más de las siguientes limitaciones: • En una conferencia de audio, no es necesario mezclar los flujos de todos los clientes. De hecho, mezclar muchas corrientes arbitrarias [24] de clientes degrada la calidad de la conferencia debido a la reducción en el volumen (aspecto espacial del habla). El número de flujos mezclados varía dinámicamente dependiendo del número de participantes activos. Esto provocaría fluctuaciones en el volumen de cada participante individual, causando una degradación severa en la calidad. La mezcla personalizada de flujos no es posible cuando hay muchos clientes activos. Existe un umbral en el número de oradores simultáneos por encima del cual aumentar el número de oradores se vuelve contraproducente para la calidad de la conferencia. La fijación del número máximo de hablantes simultáneos se aborda en un trabajo reciente [15] utilizando la Etnometodología, y se postula que es tres. Por lo tanto, es recomendable respetar esa restricción. • No puede haber muchos mezcladores intermedios (similarmente, Servidores de Conferencia como en [10]) en etapas como en [20] porque provoca un retraso desmedido al aumentar el número de saltos y no es escalable con la interactividad como enfoque. • El Control de Piso para una conferencia de audio (incluso de video) con instrucciones explícitas de toma de turnos para los participantes convierte la conferencia en esencia en un asunto de un orador a la vez, no en una en vivo y libre de interrupciones. De esta manera, la conferencia se vuelve notablemente artificial y su calidad se degrada. Schulzrinne et al. [24], asumen que solo un participante está hablando en un momento dado. En este caso, si las aplicaciones se implementan con cierto control [5], el servicio se vuelve asfixiante para los usuarios. • La mezcla parcial [18] tiene un problema similar al de la mezcla cuando se mezclan más flujos. Además, en [18], para permitir el discurso improvisado, la mezcla no se realiza cuando la red puede soportar altos requisitos de ancho de banda para enviar/recibir todas las transmisiones, pero es innecesaria [15]. • Para conferencias grandes [23, 10] una conferencia centralizada no puede escalar. Con la multidifusión, los clientes tendrán que analizar muchos flujos y el tráfico en la red de los clientes aumenta innecesariamente. Evidentemente, se abordan diferentes problemas particulares, todos los cuales son un subconjunto de los requisitos (definidos en [14] y [16]) para el soporte de conferencias de VoIP. Por lo tanto, es necesario abordar la conferencia en su totalidad teniendo en cuenta todos sus requisitos de manera simultánea. Con este objetivo, el sistema de conferencias VoIP que proponemos está diseñado para ser escalable e interactivo. Hacemos uso del Número de Sonoridad para implementar el control de volumen. Esto permite a un participante entrar libremente en el modo de hablar para interrumpir al orador actual como en una reunión natural cara a cara. Un límite superior en el número de pisos (es decir, el número de oradores permitidos para hablar al mismo tiempo) se fija utilizando una conjetura propuesta en [15]. El trabajo presentado aquí es una continuación de nuestros estudios sobre conferencias basadas en el Protocolo de Inicio de Sesión en [14] y [16]. SIP, definido en [22], es ahora el estándar más popular para implementación de VoIP y ha sido elegido por su fortaleza, facilidad de uso, extensibilidad y compatibilidad. Esta es la razón por la cual estará en el trasfondo de todos los mensajes de control que surgirán implícitamente entre las entidades en nuestra arquitectura. Los mensajes actuales están descritos en [16] y, como tal, no presentamos una descripción completa de ellos aquí. 4. TRABAJO RELACIONADO El estándar SIP definido en el RFC 3261 [22] y en extensiones posteriores como [21] no ofrece servicios de control de conferencias como control de piso o votación y no prescribe cómo debe ser gestionada una conferencia. Sin embargo, SIP se puede utilizar para iniciar una sesión que utilice algún otro protocolo de control de conferencias. La especificación central de SIP soporta muchos modelos para conferencias [26, 23]. En los modelos basados en servidor, un servidor mezcla flujos de medios, mientras que en una conferencia sin servidor, la mezcla se realiza en los sistemas finales. SDP [7] se puede utilizar para definir las capacidades de los medios y proporcionar otra información sobre la conferencia. Ahora consideraremos algunos modelos de conferencia en SIP que han sido propuestos recientemente [23]. Primero, veamos los modelos sin servidor. En la mezcla de extremos del sistema, solo un cliente (SIP UA) maneja la señalización y la mezcla de medios para todos los demás, lo cual claramente no es escalable y causa problemas cuando ese cliente en particular abandona la conferencia. En el modelo de Usuarios que se unen, un árbol crece, ya que cada parte invitada constituye una nueva rama en el camino de distribución. Esto conduce a un número creciente de saltos para las hojas remotas y no es escalable. Otra opción sería utilizar la multidifusión para las videoconferencias, pero actualmente la multidifusión no está habilitada en Internet y solo es posible en una LAN. Entre los modelos basados en servidor, en una conferencia de marcado, los UAs se conectan a un servidor central que maneja todas las mezclas. Este modelo no es escalable ya que está limitado por la potencia de procesamiento del servidor y el ancho de banda de la red. Las conferencias centralizadas ad hoc y los servidores de conferencias de marcado tienen mecanismos y problemas similares. Los modelos híbridos que involucran señalización centralizada y medios distribuidos, con estos últimos utilizando unicast o multicast, plantean problemas de escalabilidad como antes. Sin embargo, una ventaja es que el control de la conferencia puede ser una solución de terceros. La Mezcla Parcial Distribuida, presentada en [18], propone que en caso de limitación de ancho de banda, algunos flujos se mezclan y otros no, manteniendo la interactividad intacta. La pérdida de espacialidad cuando se mezclan y el aumento del ancho de banda cuando no lo hacen son problemas abiertos. Un estudio relacionado [19] del mismo autor propone una arquitectura de conferencias para Entornos Virtuales Colaborativos (CVEs) pero no proporciona el enfoque de escalabilidad sin la disponibilidad de la multidifusión. Teniendo en cuenta las limitaciones de los sistemas de conferencias propuestos, detallaremos ahora nuestra propuesta. 5. ARQUITECTURA DEL SISTEMA Esta sección está dedicada a la descripción de la arquitectura del sistema propuesto. Sin embargo, dado que este documento constituye la continuación de nuestro trabajo iniciado en [14] y ampliado en [16], no presentaremos aquí todos los detalles sobre las entidades propuestas e invitamos a los lectores a consultar los documentos mencionados anteriormente para obtener una descripción completa y detallada. Primero, no restringimos nuestro sistema de conferencias para funcionar solo en conferencias pequeñas, sino en grandes VCEs de audio que tienen cientos (o incluso miles) de usuarios a través de una Red de Área Amplia (WAN) como Internet. Esta perspectiva se deriva de una evaluación de que los VCEs ganarán importancia en el futuro, ya que las conferencias de audio interactivas serán más populares debido a la difusión de la cultura mediática en todo el mundo. Dos aspectos deben ser atendidos al construir un sistema de conferencias VoIP: (i) el front-end, que consiste en el programa de aplicación que se ejecuta en las computadoras de los usuarios finales y (ii) el back-end que proporciona otros programas de aplicación que facilitan las conferencias y la conferencia. Los usuarios participantes se agrupan en varios dominios. Estos dominios son Redes de Área Local (LAN), como redes corporativas o educativas. Esta suposición distribuida requiere soluciones de control y manejo de medios distribuidos, ya que los sistemas centralizados no serían escalables para conferencias tan grandes (ver Sección 4). Más explícitamente, en cada dominio, podemos identificar varios componentes lógicos relevantes de una instalación de conferencias (Fig. 1): Un número arbitrario de usuarios finales (clientes) que pueden participar en como máximo una conferencia de audio a la vez. Cada usuario es la Fig. 1. Ejemplo de conferencia: 3 dominios que contienen las entidades necesarias para que la conferencia pueda tener lugar. Incluidas en un único dominio en un instante dado, pero pueden moverse de un dominio a otro (nomadismo). En nuestro entorno de conferencias, estos clientes son Agentes de Usuario SIP (SIP UAs) regulares, según se define en [22], para lograr interoperabilidad con otros sistemas compatibles con SIP existentes. Estos clientes no son conscientes del entorno complejo que respalda la conferencia, lo cual se destaca a continuación. Un servidor SIP (SIPS) por dominio, encargándose de todos los aspectos de señalización de la conferencia (clientes que se unen, salen, etc.) [16]. En particular, se considera como una implementación física que abarca diferentes roles lógicos, a saber, un Servidor Proxy SIP, un Servidor Registrador SIP, un Servidor de Redirección SIP y un SIP B2BUA (Agente de Usuario de Vuelta a Vuelta) [22]. Esta implementación física permite el manejo de mensajes SIP entrantes/salientes por una u otra entidad lógica según sea necesario. SIPS está encargado de mantener un servicio total y tiene muchas ventajas, como (a) funciona como una entidad centralizada que puede hacer un seguimiento de las actividades de los UAs en una conferencia; (b) puede realizar todo el cambio para proporcionar funciones de PBX; (c) puede localizar a los UAs e invitarlos a una conferencia; (d) también puede encargarse de la facturación. Los SIPS en diferentes dominios se comunican entre sí utilizando mensajes SIP como se describe en [16]. Si la carga en un SIPS particular es demasiado pesada, puede crear otro SIPS en el mismo dominio para que la carga se comparta. Se crea un Servidor de Conferencias Maestro (M-CS) (simplemente un Servidor de Conferencias (CS)) para cada conferencia por el SIPS local cuando una conferencia comienza. Este servidor se utilizará para manejar paquetes de medios para los clientes del dominio. Su mecanismo será descrito en la siguiente sección. El M-CS podrá crear una jerarquía de CSs dentro de un dominio agregando uno o más CSs esclavos (S-CSs) para dar cabida a todos los clientes activos y prevenir su propia saturación al mismo tiempo. Veremos este mecanismo con cierto detalle en la secuela. Las entidades descritas aquí son exhaustivas y se ajustan a la filosofía del SIP. Por lo tanto, el uso de SIP hace que esta arquitectura sea más útil e interoperable con cualquier otro cliente o servidor SIP. PROBLEMAS ALGORÍTMICOS 6.1 Seleccionar los flujos similares a SipConf en [27], un Servidor de Conferencias (CS) [17] tiene la función de soportar la conferencia; es responsable de manejar los flujos de audio utilizando RTP. También puede duplicarse para convertir formatos de transmisión de audio para un cliente dado si es necesario y puede funcionar como Traductores/Mezcladores de la especificación RTP detrás de cortafuegos. Hemos basado el diseño de nuestro CS en el Procesador Multipunto (MP) H.323 [9]. En resumen, el MP recibe flujos de audio de los puntos finales involucrados en una conferencia multipunto centralizada o híbrida, los procesa y los devuelve a los puntos finales. Un procesador de señales de audio prepara N salidas de audio NMax a partir de M flujos de entrada después de la selección, mezcla o ambas. La mezcla de audio requiere decodificar el audio de entrada a señales lineales (PCM o analógicas), realizar una combinación lineal de las señales y volver a codificar el resultado en un formato de audio apropiado. El procesador de señales puede eliminar o atenuar algunas de las señales de entrada para reducir el ruido y los componentes no deseados. Fig. 2. \n\nFig. 2. El diagrama esquemático de un CS. La limitación de H.323 es que no aborda la escalabilidad de una conferencia. La arquitectura propone una topología en cascada o en cadena de margaritas [10], la cual se puede demostrar que no puede escalar para una conferencia grande. Un CS atiende a muchos clientes en la misma conferencia. Por lo tanto, solo maneja una conferencia a la vez. Varios CS pueden coexistir en un dominio, como cuando hay varias conferencias en curso. Los mensajes relacionados con la señalización de los CSs se tratan en [11]. El funcionamiento de un CS se ilustra en la Fig. 2: Para cada intervalo de mezcla, CS 1 elige los mejores NMax paquetes de audio de los M1 (utilizando un criterio denominado Número de Volumen, descrito en la siguiente subsección). Puede posiblemente recibir y enviar estos a CSs 2 a P. El conjunto de paquetes enviados se denota como AotrosCSs. En el mismo intervalo de mezcla, también recibe los mejores paquetes de audio NMax (de un posible M2) de CS 2, de manera similar a los mejores NMax (de un posible MP) de CS P. Para simplificar, ignoramos el retardo de propagación entre los CSs, que de hecho se puede tener en cuenta; está más allá del alcance de esta presentación. El conjunto de paquetes recibidos se denota como FromOtherCSs. Finalmente, selecciona los mejores paquetes NMax del conjunto {ToOtherCSs unión FromOtherCSs} y envía estos paquetes a su propio grupo. Se puede observar que el conjunto {ToOtherCSs unión FromOtherCSs} es el mismo en todos los CSs. Esto garantiza que cualquier cliente en la conferencia finalmente reciba el mismo conjunto de paquetes para mezclar. Por lo tanto, todos los clientes obtienen una vista común de la conferencia. De manera similar, para cada intervalo de tiempo (tiempo de paquete), se selecciona un subconjunto, F, de todos los clientes (utilizando el mismo criterio) del conjunto de paquetes de todos los otros CS más los NMax clientes seleccionados localmente. Sus paquetes se mezclan y se reproducen en los clientes. Según [15], la cardinalidad de F, |F| es NMax y está fijada en tres. En nuestra configuración de conferencias, la selección la realiza el Servidor Maestro de Conferencias (M-CS), que interviene exclusivamente en el manejo de medios. Ten en cuenta que aunque la especificación de SIP permite la comunicación directa de medios de usuario a usuario en una llamada uno a uno, también es posible utilizar el Servidor de Conferencias para llamadas de dos partes, especialmente porque es entonces más funcional crear una conferencia real agregando un tercero y posteriormente más participantes. Existen casos en los que la capacidad de procesamiento de un M-CS se ve superada, ya que puede tener demasiados paquetes, tanto de dominios locales como de dominios remotos, para procesar. En ese caso, el M-CS creará uno o varios S-CS (Fig. 6) y transferirá a sus propios clientes, así como a los nuevos clientes, a ellos. En esta configuración, el algoritmo descrito anteriormente se modificará ligeramente, ya que los paquetes de audio irán de los clientes a su S-CS dedicado, que seleccionará NMax paquetes para enviar al M-CS local, que luego seleccionará NMax paquetes de todos sus S-CS en el dominio antes de enviarlos a los dominios remotos. Los paquetes entrantes de otros dominios serán recibidos por el M-CS, se seleccionarán NMax de ellos y se enviarán directamente a los clientes del dominio, evitando los SCSs. Este cambio implica que existen como máximo tres entidades intermedias para cada paquete de audio, en lugar de dos en la configuración convencional. Dado que el salto adicional ocurre dentro de la LAN que se supone tiene una conectividad de alta velocidad, consideramos que no debería impedirnos usar esta jerarquía de CS cuando sea necesario hacerlo. 6.2 Número de Sonoridad (LN) Una pregunta básica que debe responder el CS es la siguiente. En un intervalo de mezcla, ¿cómo debería elegir NMax paquetes de los M que podría recibir? Una forma es clasificar los paquetes M recibidos según sus energías y elegir los NMax mejores. Sin embargo, esto suele considerarse insuficiente porque las fluctuaciones aleatorias en las energías de los paquetes pueden provocar una mala calidad de audio. Esto indica la necesidad de una métrica diferente de meras energías individuales de paquetes. El medidor debe tener las siguientes características [12]: • Un hablante (ocupante del suelo) no debe ser interrumpido por un pico en la energía del paquete de otro hablante. Esto implica que la historia del discurso de un hablante debería tener cierto peso. Esto se suele llamar Persistencia o Resaca. • Un participante que quiera interrumpir a un orador tendrá que (i) hablar en voz alta y (ii) seguir intentándolo por un tiempo breve. En una conferencia presencial, el lenguaje corporal a menudo indica la intención de interrumpir. Pero en una conferencia a ciegas en discusión, la intención de un participante de interrumpir puede ser transmitida de manera efectiva a través de LN. Se debe garantizar un mecanismo de control de piso habilitado para cortar a un orador de manera contundente. Estos requisitos son cumplidos por el Número de Volumen [12], que cambia suavemente con el tiempo para que la selección (adición y eliminación) de clientes para la conferencia sea elegante. LN (= ) es una función de la amplitud de la corriente de audio actual más la actividad y amplitud en una ventana específica en el pasado. Fig. 3. \n\nFig. 3. Las diferentes ventanas utilizadas para el cálculo de LN se actualizan en una base de paquete por paquete. El parámetro básico utilizado aquí es la amplitud del paquete, que se calcula como la raíz cuadrada de la media cuadrática (rms) de las energías en las muestras de audio de un paquete, y se denota como XK. Tres ventanas están definidas como se muestra en la Fig. 3. El nivel de amplitud actual del altavoz se encuentra calculando el promedio móvil de la amplitud del paquete (XK) dentro de una ventana llamada Ventana de Pasado Reciente, que va desde el instante presente hasta algún momento pasado. La actividad pasada del hablante se encuentra calculando el promedio móvil de la amplitud del paquete (XK) dentro de una ventana llamada Ventana de Pasado Lejano, que comienza en el punto donde termina la ventana de Pasado Reciente y se extiende hacia atrás en el pasado por un intervalo predefinido. La actividad del hablante en el pasado se encuentra con una ventana llamada Horizonte de Actividad, que abarca la ventana del pasado reciente, así como la ventana del pasado lejano y más allá si es necesario. Aunque la contribución del horizonte de actividad parece similar a la contribución de las ventanas del pasado reciente y pasado lejano, la actividad pasada se calcula de manera diferente a partir de la ventana del horizonte de actividad. Define las cantidades durante estos tres intervalos como L1, L2 y L3. L1 cuantifica la actividad de habla del Pasado Reciente, L2 la actividad de habla del Pasado Lejano y L3 proporciona un número correspondiente a la actividad de habla en la ventana del Horizonte de Actividad, cuantificando qué tan activo estuvo el hablante en los últimos intervalos. L3 produce una cantidad que es proporcional a la fracción de paquetes que tienen energías por encima de un umbral predefinido (Ec. 3). El umbral es invariable entre clientes. ∑ +− = = 1 1 1 RPP P Wt tK K RP X W L (1) ∑ +−− −= = 1 2 1 DPRPP RPP WWt WtK K DP X W L (2) ∑ +− = ≥= 1 }{3 * 1 AHP P K Wt tK X AH I W L θθ (3) Donde siI KX 1}{ =≥θ θ≥KX = de lo contrario,0 El umbral es una constante. Se establece en el 10-20 por ciento de la amplitud de las muestras de voz de un paquete en nuestra implementación aquí. El número de intensidad λ para el instante de tiempo presente (o el paquete presente) se calcula como, 332211 *L*L*L αααλ ++= (4) Aquí 1, 2 y 3 son elegidos de tal manera que: 0< 1, 2 y 3=1- 1) Aquí, 1 es el peso dado al habla del pasado reciente, 2 es el peso dado al habla del pasado lejano y 3 es el peso dado a la actividad del habla en la ventana de horizonte de actividad considerada. 6.3 Seguridad, Vida y Equidad El parámetro λ tiene un efecto significativo en la evaluación de la ventana. Después de que un conferenciante se queda en silencio, otro puede tomar la palabra. Además, dado que hay más de un canal, la interrupción está habilitada. Un conferenciante ruidoso es más probable que sea escuchado debido a un λ elevado. Esto garantiza equidad para todos los conferenciantes. Después de todo, incluso en una conferencia presencial, un orador más vocal capta una atención especial. Todas estas características deseables están integradas en la LN. Una discusión exhaustiva sobre la selección de los diversos parámetros y la dinámica de LN están fuera del alcance de este documento. 6.4 Algoritmo de selección utilizando LN Siguiendo los desarrollos en las subsecciones 6.1 y 6.2, presentamos el algoritmo simple que se ejecuta en cada Servidor Maestro-Conferencia (Algoritmo 1). Este algoritmo se basa en las discusiones de la sección 6.1. El conjunto F, único a nivel mundial, se encuentra utilizando este procedimiento. Repetir para cada intervalo de tiempo en cada M-CS { 1. Obtener todos los paquetes de los clientes que le pertenecen. 2. Encuentra como máximo NMax clientes que tengan un PD[LPXP RXW RI 0 &OLHQWV LQ LWV GRPDLQ\u0011 3. Almacene una copia de los paquetes de esos clientes NMax en la base de datos DB1. Envía estos paquetes NMax a otros M-CSs (en Unicast o Multicast, dependiendo de la configuración). 5. De igual manera, recibir paquetes de todos los demás M-CSs y almacenarlos en la base de datos DB2. 6. Ahora compara los paquetes en DB1 y DB2 en WKH EDVLV RI DQG VHOHFW D PD[LPXP RI NMax entre ellos (para formar el conjunto F) que deberían ser reproducidos en cada Cliente. 7. Enviar los paquetes NMax en el conjunto F a los Clientes en su dominio. 8. Mezcla estos paquetes de audio NMax en el conjunto F después de linearizarlos y envíalos a Clientes sin capacidad en el dominio. Algoritmo 1. Algoritmo de selección El mecanismo propuesto aquí también se muestra en la Fig. 6, donde tiene lugar una única conferencia entre tres dominios. Los clientes sombreados son los seleccionados en sus dominios locales; sus flujos de audio serán enviados a otros CSs. 7. PROBLEMAS DE DESPLIEGUE Ahora analizamos los problemas de despliegue asociados con la gestión de conferencias. ¿Cómo deben organizarse los dominios para maximizar el número de participantes que pueden unirse? Para abordar esto, definimos algunos parámetros útiles.  Sea d el número de dominios diferentes en los que hay clientes activos en una conferencia dada.  Sea Mi el número de clientes activos presentes en el dominio i (di ≤≤1) en una conferencia dada. El número total de clientes activos en la conferencia es por lo tanto ∑= = d i iMM 1. Sea C el número máximo de flujos de audio que un Servidor de Conferencias puede manejar en un tiempo de paquete, también llamado capacidad. C se establece de acuerdo con la potencia de procesamiento del CS más débil en la conferencia, pero como no se puede asumir que lo conocemos de antemano, se puede establecer de acuerdo con algún requisito mínimo del sistema que una máquina debe cumplir para participar en una conferencia. Deje que NMax sea el número de flujos de salida que un CS debe enviar a otros CS en dominios remotos (ver sección 6.1). Estableceremos NMax = 3 (=|F|), según [15]. El problema de optimización consiste en encontrar el valor de d que maximiza el número total de clientes Mi atendidos por un CS en un dominio con capacidad C. Primero consideramos el caso en el que la capacidad no es excedida (el CS existente no está sobrecargado), y luego procedemos al caso en el que es necesario crear más CS cuando un CS único está sobrecargado. Suponemos que los clientes están distribuidos de manera equitativa entre los dominios, ya que no tenemos información para asumir una distribución a priori de los clientes. Podemos especificar únicamente un límite superior en el número de clientes aceptables, dado el número de dominios activos d. 7.1 Conferencias con solo un nivel de CSs En esta subsección, consideramos que tenemos solo un CS, es decir, un único M-CS en cada dominio. Por lo tanto, no se puede sobrecargar. Consideramos que el sistema funciona tal como se describe en la sección 6.1: Los clientes envían sus paquetes de audio a su CS local, que selecciona NMax flujos antes de enviarlos a otros CS. De manera paralela, también recibe NMax transmisiones para cada otro CS antes de tomar una decisión sobre cuáles de las NMax transmisiones serán seleccionadas, enviadas y reproducidas en cada cliente individual. Para la estabilidad del sistema, cualquier servidor de conferencias debería ser capaz de manejar a sus clientes locales además de los paquetes de audio de otros dominios. Claramente entonces, la siguiente desigualdad debe cumplirse para todo dominio: )1( −⋅+≥ dN d M C Max (5) El caso límite de (5) (tomando la igualdad) toma la forma 2 )( dNdNCM MaxMax ⋅−⋅+= (6) Para optimizar d con respecto a M, establecemos 0)(2 =+−⋅⋅= ∂ ∂ MaxMax NCdN d M (7) obteniendo     ⋅ + = Max Max N NC d 2 (8) ([ ]* = Redondeando al entero más cercano) y por lo tanto, M de (6). Tabla 1. Valores de d y M calculados para algunos valores de C con NMax = 3. En la Tabla 1, se presentan los valores de d y M que fueron calculados utilizando (8) y (6) con NMax = 3. Vemos que los valores de d y M, al depender de C, se basan en el CS más débil. Vemos que hay un equilibrio entre M y d. Podríamos admitir más dominios en la conferencia, pero a costa de restringir el número total de clientes M en la conferencia. Durante la implementación y prueba de los Servidores de Conferencia en un Pentium III 1.4 GHz con Windows NT, pudimos establecer C=300. Pero con la llegada de computadoras más rápidas (> 3 GHz), uno puede fácilmente establecer C a valores más altos y determinar d y M en consecuencia. La Fig. 4 muestra un mapa de contorno y la Fig. 5, una malla 3D que muestra soluciones optimizadas para CSs de diferentes capacidades. Estos nos llevan a maximizar el número de dominios, y por lo tanto, a maximizar el número total de clientes basado en la capacidad de varios CSs. En la Fig. 4, las curvas individuales representan el número total de clientes objetivo, y seleccionamos un valor más bajo de d, para la capacidad C, para el objetivo M con el fin de reducir el tráfico en la WAN. La Fig. 5 representa una perspectiva diferente de los mismos datos en 3D. Fig. 4. \n\nFig. 4. Diagrama de contorno de la capacidad versus el número óptimo de dominios para varios tamaños de conferencias 7.2 Conferencias con Dos Niveles de CSs. Ahora considerando el caso en el que el número de clientes en un dominio particular es demasiado grande, es decir, d M Mi ≥ (9), se debe evitar la denegación de servicio para nuevos clientes debido a la sobrecarga del Servidor de Conferencias. Este problema se puede resolver introduciendo un segundo nivel de CSs dentro del dominio dado, como se muestra en la Figura 6. El M-CS existente crea un CS esclavo (S-CS) que puede manejar hasta C usuarios finales y al que transfiere todos sus clientes activos. Aquí, el sistema funciona de manera diferente como se describe en la sección 6.1: Los clientes envían sus paquetes de audio a su S-CS local, que selecciona NMax flujos, antes de enviarlos a un M-CS local, que procederá de la misma manera, antes de enviar NMax flujos a los otros dominios. Cada S-CS recién creado debe ejecutarse en una máquina separada. El M-CS tiene que crear más S-CSs si el número de clientes activos supera C durante el transcurso de la conferencia después de la transferencia. Con este mecanismo, el M-CS podrá crear un máximo de     −⋅− = Max Max N dNC U )1( S-CSs, (10) ya que debe manejar 3 (= NMax) paquetes para cada S-CS local y 3 (= NMax) paquetes de cada otro dominio remoto. Podemos entonces calcular el número máximo teórico de clientes activos CUMi ⋅= en cada dominio, así como M, para toda la conferencia como CUdM ⋅⋅= . Fig. 5. Gráfico 3D de Capacidad versus Número óptimo de dominios para varios tamaños de conferencia. Por supuesto, se podría crear un tercer nivel en la jerarquía, lo que daría la posibilidad de alojar aún más clientes. Esto puede ser innecesario ya que el número de posibles clientes es lo suficientemente grande con dos niveles. 8. DISCUSIÓN DE RENDIMIENTO Ahora analizamos el rendimiento del algoritmo presentado en la subsección 6.3, es decir, el que se encarga del intercambio de paquetes de audio entre los diferentes dominios. Ten en cuenta que los paquetes que están en tránsito dentro de la LAN aprovechan la mayor capacidad (generalmente junto con capacidades de multidifusión) y por lo tanto no requieren un análisis de rendimiento. Por lo tanto, debemos examinar solo los paquetes RTP a través de la WAN, es decir, entre los M-CS participantes. Dado que cada M-CS de un dominio solo enviará NMax de los d paquetes M a los otros CS (MaxN d M >>), el ancho de banda utilizado por la aplicación en una WAN está limitado por la siguiente expresión. El número total de paquetes de audio que transitan por la WAN para cada intervalo de tiempo es ∑ ∑= ≠=        d i d ijj MaxN 1 ,1, lo cual es cuadrático en el número de dominios (es decir, O(d2)). Sin embargo, es independiente del número total de clientes activos. Esto no habría sido el caso si todos los paquetes se hubieran enviado por la red en cada intervalo de tiempo. El ahorro es tremendo. Sin embargo, se podría argumentar que enviar tres paquetes hacia y desde todos los dominios es un desperdicio de recursos, ya que la mayoría de estos flujos no serán seleccionados. Si solo hay un cliente activo, seleccionar un subconjunto de clientes en ese dominio es innecesario. Los algoritmos pesimistas y optimistas presentados en la secuela tienen como objetivo reducir aún más el tráfico aprovechando la naturaleza lenta y variable de la LN. 8.1 Algoritmo pesimista Consideremos un escenario en el que el LN más bajo (llamado LNt) de los tres flujos seleccionados globalmente (conjunto F de la Sección 6.1) excede el LN del flujo más dominante de un dominio. Evidentemente, las posibilidades de que los dos próximos flujos dominantes de ese dominio sean seleccionados para F en el próximo período de paquetes son menores. Aquí enviamos este flujo más dominante y retenemos los otros dos. Puede haber un error en la selección única en todos los dominios por un solo período de paquete. Como LN varía lentamente, el error se corregiría automáticamente en un período (ranura) de paquete posterior. En este algoritmo, hay al menos un flujo en cada período. El tráfico de red neto en un período de paquetes en el mejor caso es )1( −⋅ dd, es decir, )( 2 dO utilizando unicast, en lugar de MaxNdd ⋅−⋅ )1(. Se puede ahorrar un ancho de banda considerablemente valioso utilizando esta heurística. La complejidad del tráfico resultante se reduce de O(d2) a O(d) en redes habilitadas para multidifusión. Inicializar LNt = 0 en un M-CS/S-CS A. En el primer intervalo de tiempo (tiempo de paquete), cada CS envía las primeras NMax secuencias (basadas en su LN) a todos los demás CSs. En cada M-CS/S-CS y para cada tiempo de paquete: B. Encuentra el valor del LN más bajo de los flujos NMax seleccionados globalmente (conjunto F) del intervalo de tiempo anterior. Establece LNt con este valor. C. En cada dominio de CS, selecciona los NMax flujos locales que tengan el valor máximo de LN (conjunto ToOtherCSs). D. Seleccionar los flujos que tengan LN > LNt. Si hay >= NMax flujos con LN > LNt, entonces enviar los mejores NMax a otros CSs. EN OTRO CASO, si hay (NMax-1) flujos con LN>LNt, enviar los mejores (NMax-1) más el que esté por debajo de LNt (es decir, los mejores NMax) a otros CSs. EN OTRO CASO, si hay (NMax-2) flujos con LN>LNt, entonces enviar los mejores (NMax-2) más el que esté por debajo de LNt (es decir, los mejores (NMax-1)) a otros CSs. ... EN OTRO CASO, si NO hay flujos con LN>LNt, entonces enviar el mejor flujo a otros CSs. Los paquetes enviados en el paso D forman DB1. Los paquetes recibidos de otros CSs forman DB2. F. Para este intervalo de tiempo, encuentra flujos globales NMax basados en LN de DB1 y DB2 (conjunto F) G. Envía el conjunto F a los clientes en su dominio. Actualiza LNt para el próximo período. Algoritmo 2. Algoritmo pesimista para reducir el número de paquetes enviados por Internet. Fig. 6. \n\nFig. 6. Ejemplo de una jerarquía de 2 niveles de Servidores de Conferencias; los Clientes sombreados son los seleccionados por el M-CS y serán enviados a otros CSs de dominios. En este algoritmo, el ahorro en tráfico se logra a expensas de relajar la condición de formación del conjunto F globalmente único. Sin embargo, las discrepancias en los flujos seleccionados en diferentes dominios permanecen por un corto período de tiempo dependiendo del retraso en el transporte entre dos dominios. Incluso para un retraso total de 400 ms, con solo 10 ranuras de tiempo de paquete, se pierde la unicidad. Esta duración en una conversación interactiva en tiempo real no es perceptible por el oyente. En el caso de que haya una broma y todos se rían, entonces habría un aumento repentino en el número de paquetes y estaría limitado por MaxN)d(O 2 durante un corto período. 8.2 Algoritmo Optimista El tráfico puede reducirse aún más. El esquema en el siguiente algoritmo (Algoritmo 3) retiene todos los flujos que tienen un valor de LN menor que el mínimo de los tres en el conjunto F. Podemos encontrar los tres flujos correctos y únicos después de unos cuantos intervalos de tiempo, dependiendo del retraso de transporte entre los dominios. Dado que el período del paquete es del orden de 40 ms, el error en la selección es imperceptible. El número de flujos en la red en este caso siempre está restringido a NMax (=3). Incluso sin <br>Detección de Actividad de Voz</br> (VAD), en el mejor de los casos no habrá más de tres flujos en la red, por lo tanto, el tráfico total es constante. Una repentina oleada de tráfico, como se describe en la sección 8.1, es un caso particular. Estas ventajas se deben a la explotación de las características de LN. Inicializar LNt = 0 en un M-CS/S-CS A. En el primer intervalo de tiempo (tiempo de paquete), cada CS envía las primeras NMax secuencias (basadas en su LN) a todos los demás CS. En cada M-CS/S-CS y para cada tiempo de paquete: B. Encuentra el valor del LN más bajo de los flujos seleccionados globalmente de NMax (conjunto F) del intervalo de tiempo anterior. Establece LNt con este valor. C. En cada dominio de CS, selecciona los NMax flujos locales que tengan el valor máximo de LN (conjunto ToOtherCSs). D. Selecciona los flujos que tengan LN > LNt SI hay >= NMax flujos con LN > LNt, entonces envía los mejores NMax a otros CSs. EN OTRO CASO, si hay (NMax-1) flujos con LN>LNt, entonces enviar los primeros (NMax-1) y ver E. EN OTRO CASO, si hay (NMax-2) flujos con LN>LNt, entonces enviar los primeros (NMax-2) y ver E. ... EN OTRO CASO, si NO hay flujos con LN>LNt, entonces no enviar ningún flujo. E. Excepciones: SI el flujo que estaba en F en el último intervalo pertenece a este CS, entonces selecciona y envía ese flujo incluso si su LN es ahora < LNt. (Nota: esto ocurre solo en ese CS que tenía el flujo que fue el último de los tres en el período de paquetes anterior). Los paquetes enviados en los pasos D y E forman DB1. Los paquetes recibidos de otros CSs forman DB2. Para este intervalo de tiempo, encuentra los flujos globales NMax basados en LN de DB1 y DB2 (conjunto F). H. Envíe el conjunto F a los clientes en su dominio. Actualiza LNt para el próximo período. Algoritmo 3. Algoritmo optimista para reducir el número de paquetes enviados a través de Internet. Además, cuando se utiliza VAD [13], se reduciría aún más el tráfico al enviar solo la parte del encabezado del paquete RTP y no todo el paquete, con el fin de mantener actualizada la LN en todo momento. El tráfico aquí en este caso es O(NMax) para multicast y O(d) para unicast. Vemos que los algoritmos anteriores ahorran ancho de banda y cálculos en cada CS, y conducen a una arquitectura escalable con múltiples CS principalmente porque los clientes están agrupados en dominios. El ancho de banda necesario no depende del número total de clientes activos. Como el CS siempre elige a los tres mejores clientes de entre todos los clientes asignados en el dominio, la adición de nuevos clientes a la conferencia existente no causará ningún problema de escalabilidad. 8.3 Disponibilidad de Multidifusión En la arquitectura propuesta, no se hizo ninguna suposición sobre la disponibilidad de soporte de multidifusión de la red. El tráfico se reducirá aún más si la multidifusión está disponible a través de WAN. Es sencillo demostrar que el orden del tráfico tiende a ser O(d) en lugar de O(d2). Esta es una aproximación ya que el ahorro en la multidifusión también depende de la topología. El análisis se realizó para el caso en el que la multidifusión no está disponible (una suposición realista en el Internet de hoy en día). La ventaja de esta configuración es que podemos usarla incluso si la multidifusión está parcialmente disponible. Podemos instruir a los CSs durante la fase de configuración para enviar paquetes unicast a aquellos CSs que no pueden recibir paquetes multicast, mientras que los CSs en enrutadores habilitados para multicast pueden intercambiar paquetes en una dirección multicast. Las estructuras de datos y objetos de conferencia dentro de una CS se encuentran en [14]. Fig. 7. \n\nFig. 7. Interfaz de usuario para establecer el peso de las corrientes de audio NMax (establecer la barra de auto a cero evita el eco). Mejora de calidad 8.4 La mejora observada en la calidad percibida del servicio de conferencias se debe a: (1) limitar el número de oradores concurrentes a un número bajo, como tres. Generalmente, en una conferencia, si hablan más de dos participantes se pierde la inteligibilidad. El análisis conversacional demuestra que en tal caso habría un mecanismo de reparación [15]. (2) Retraso: La transmisión de audio entre dos clientes pasará como máximo por dos servidores centrales, reduciendo así el retraso de extremo a extremo. Para una conferencia grande puede haber tres CSs, sin embargo, un salto está dentro del dominio incurriendo en un retraso insignificante. (3) Dado que las transmisiones se mezclan solo en los clientes, puede haber una mezcla personalizada de las transmisiones. La sintonización individual de la mezcla con pesos preserva el espacialismo. La Fig. 7 muestra la interfaz de usuario para lo mismo. El eco al seleccionar la auto-transmisión se puede evitar reduciendo el peso. Sin embargo, la retroalimentación ayuda a asegurar al hablante de que está siendo escuchado por todos. CONCLUSIÓN En este artículo, hemos presentado una discusión sobre un entorno de conferencias virtuales solo de voz. Hemos argumentado que la naturaleza distribuida de la implementación aquí la hace escalable. La interactividad se logra adaptando un esquema reciente de selección de flujo basado en el Número de Sonoridad. Además, incorporamos un resultado de un trabajo más reciente [15] donde se ha demostrado la suficiencia de tres hablantes simultáneos. Por lo tanto, hay una utilización significativamente efectiva del ancho de banda. Un flujo mixto se reproduce en cada cliente; cada cliente puede elegir tener una mezcla personalizada ya que la mezcla se realiza en el terminal local de cada cliente. Estos permiten que el discurso improvisado en una videoconferencia virtual a través de VoIP sea una realidad, como en una conferencia presencial real. La compatibilidad está asegurada gracias al uso de SIP, el protocolo de señalización más buscado. Para garantizar un rendimiento satisfactorio, no exigimos la disponibilidad de multidifusión, pero la utilizamos si está disponible. El tráfico en la WAN (Internet) está limitado por arriba por el cuadrado del número de dominios, --además se reduce aún más mediante el uso de algoritmos heurísticos-- lo cual está muy por debajo del número total de clientes en la conferencia. Esto se debe al uso de un Servidor de Conferencias local para cada dominio. Las técnicas de VAD ayudan a reducir aún más el tráfico. El uso del estándar SIP para la señalización hace que esta solución sea altamente interoperable. Hemos implementado una aplicación de CS en una red de campus. Creemos que esta nueva generación de entornos de conferencias virtuales ganará más popularidad en el futuro, ya que su facilidad de implementación está garantizada gracias a las tecnologías fácilmente disponibles y los marcos escalables. REFERENCIAS [1] L. Aguilar et al., Arquitectura para un Sistema de Teleconferencia Multimedia, en Actas de ACM SIGCOMM, Ago 1986, pp. 126-136. [2] Carsten Bormann, Joerg Ott et al., Protocolo de Control de Conferencias Simple, Borrador de Internet, Dic. 1996. [3] M. Decina y V. Trecordi, Voz sobre Protocolo de Internet y Comercio Electrónico Asistido por Humanos, IEEE Comm. Revista, septiembre de 1999, pp. 64-67. [4] Eckehard Doerry, Una comparación empírica de la interacción copresente y mediada tecnológicamente basada en la ruptura comunicativa, Tesis de doctorado, Escuela de Graduados de la Universidad de Oregón, 1995. [5] H. P. Dommel y J.J. Garcia-Luna-Aceves, Control de piso para conferencias y colaboración multimedia, J. Sistemas Multimedia, Vol. 5, No. 1, enero de 1997, pp. 23-38. [6] Amitava Dutta-Roy, Reuniones virtuales con videoconferencias de escritorio, IEEE Spectrum, julio de 1998, pp. 47-56. [7] M. Handley y V. Jacobson, SDP: Protocolo de Descripción de Sesiones, RFC 2327, IETF, abril de 1998. [8] M. Handley, J. Crowcroft et al., Conferencias muy grandes en Internet: la arquitectura de conferencias multimedia en Internet, Revista de Redes de Computadoras, vol. 31, No. 3, febrero de 1999, pp. 191-204. [9] Rec. ITU-T. H.323, Sistemas de Comunicaciones Multimedia basados en Paquetes, vol. 2, 1998. [10] P. Koskelainen, H. Schulzrinne y X. Wu, Un Marco de Control de Conferencias basado en SIP, NOSSDAV02, mayo de 2002, pp. 53-61. [11] R Venkatesha Prasad et al., Protocolo de Control para Soporte de Conferencias de Audio VoIP, Conferencia Internacional sobre Tecnología de Comunicación Avanzada, Mu-Ju, Corea del Sur, febrero de 2001, pp. 419-424. [12] R Venkatesha Prasad et al., Adición y Eliminación Automáticas de Clientes en Conferencias VoIP, 6º Simposio IEEE sobre Computadoras y Comunicaciones, julio de 2001, Hammamet, Túnez, pp. 386-390. [13] R Venkatesha Prasad, H S Jamadagni, Abjijeet, et al Comparación de Algoritmos de Detección de Actividad de Voz, 7º Simposio IEEE sobre Computadoras y Comunicaciones. Julio de 2002, Sicilia, Italia, pp. 530-535. [14] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, Una Conferencia VoIP Distribuida Escalable utilizando SIP, Actas del 8º Simposio de Computadoras y Comunicaciones de IEEE, Antalya, Turquía, junio de 2003. [15] R Venkatesha Prasad, H S Jamadagni y H N Shankar, Sobre el Problema de Especificar el Número de Pisos en una Conferencia Solo de Voz, Por aparecer en IEEE ITRE 2003. [16] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, Una Propuesta para Conferencias Distribuidas en SIP utilizando Servidores de Conferencias, Por aparecer en las Actas de MMNS 2003, Belfast, Reino Unido, septiembre de 2003. [17] R. Venkatesha Prasad, H.S. Jamadagni, J. Kuri, R.S. Varchas, un soporte de conferencias VoIP distribuido que utiliza el número de sonoridad, Tech. Rep. TR-CEDT-TE-03-01 [18] M. Radenkovic et al, Servicio de audio escalable y adaptable para apoyar el trabajo colaborativo y el entretenimiento a través de Internet, SSGRR 2002, LAquila, Italia, enero de 2002. [19] M. Radenkovic, C. Greenhalgh, S. Benford, Problemas de implementación para el soporte de audio multiusuario en CVEs, ACM VRST 2002, noviembre de 2002, pp. 179-185. [20] Srinivas Ramanathan, P. Venkata Rangan, Harrick M. Vin, Diseñando arquitecturas de comunicación para la colaboración multimedia interorganizacional, Journal of Organizational Computing, 2 (3&4), pp.277-302, 1992. [21] A. B. Roach, Notificación de Eventos Específicos del Protocolo de Inicio de Sesión (SIP), RFC 3265, IETF, junio de 2002. [22] J. Rosenberg, H. Schulzrinne et al., SIP: Protocolo de Inicio de Sesión, RFC 3261, IETF, junio de 2002. [23] J. Rosenberg, H. Schulzrinne, Modelos para Conferencias de Múltiples Partes en SIP, Borrador de Internet, IETF, julio de 2002. [24] H. Schulzrinne et al., RTP: un protocolo de transporte para aplicaciones en tiempo real, RFC 1889, IETF, enero de 1996. [25] Lisa R. Silverman, Llegada a la Madurez: Soluciones de Conferencias que Reducen Costos Corporativos, Documento Técnico, www.imcca.org/wpcomingofage.asp [26] Kundan Singh, Gautam Nair y Henning Schulzrinne, Conferencias Centralizadas utilizando SIP, Actas del 2do Taller de IP-Telefonía (IPTel), abril de 2001. [27] D. Thaler, M. Handley y D. Estrin, Arquitectura de Asignación de Direcciones de Multidifusión en Internet, RFC 2908, IETF, septiembre de 2000. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "sufficiency of three simultaneous speaker": {
            "translated_key": "tres hablantes simultáneos",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Deployment Issues of a VoIP Conferencing System in a Virtual Conferencing Environment R. Venkatesha Prasad i Richard Hurni ii H.S.",
                "Jamadagni iii H.N.",
                "Shankar iv i, iii Centre for Electronics Design and Technology Indian Institute of Science, Bangalore, India Telephone: +91 80 360 0810 i, iii {vprasad, hsjam}@cedt.iisc.ernet.in ii hurni@ieee.org iv hn_shankar@yahoo.com ABSTRACT Real-time services have been supported by and large on circuitswitched networks.",
                "Recent trends favour services ported on packet-switched networks.",
                "For audio conferencing, we need to consider many issues - scalability, quality of the conference application, floor control and load on the clients/servers - to name a few.",
                "In this paper, we describe an audio service framework designed to provide a Virtual Conferencing Environment (VCE).",
                "The system is designed to accommodate a large number of end users speaking at the same time and spread across the Internet.",
                "The framework is based on Conference Servers [14], which facilitate the audio handling, while we exploit the SIP capabilities for signaling purposes.",
                "Client selection is based on a recent quantifier called Loudness Number that helps mimic a physical face-to-face conference.",
                "We deal with deployment issues of the proposed solution both in terms of scalability and interactivity, while explaining the techniques we use to reduce the traffic.",
                "We have implemented a Conference Server (CS) application on a campus-wide network at our Institute.",
                "Categories and Subjects Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - Client / Server, distributed applications.",
                "General Terms Algorithms, Performance, Design, Theory. 1.",
                "INTRODUCTION Todays Internet uses the IP protocol suite that was primarily designed for the transport of data and provides best effort data delivery.",
                "Delay-constraints and characteristics separate traditional data on the one hand from voice & video applications on the other.",
                "Hence, as progressively time-sensitive voice and video applications are deployed on the Internet, the inadequacy of the Internet is exposed.",
                "Further, we seek to port telephone services on the Internet.",
                "Among them, virtual conference (teleconference) facility is at the cutting edge.",
                "Audio and video conferencing on Internet are popular [25] for the several advantages they inhere [3,6].",
                "Clearly, the bandwidth required for a teleconference over the Internet increases rapidly with the number of participants; reducing bandwidth without compromising audio quality is a challenge in Internet Telephony.",
                "Additional critical issues are: (a) packet delay, (b) echo, (c) mixing of audio from selected clients, (d) automatic selection of clients to participate in the conference, (e) playout of mixed audio for every client, (f) handling clients not capable of mixing audio streams (such clients are known as dumb clients), and (g) deciding the number of simultaneously active clients in the conference without compromising voice quality.",
                "While all the above requirements are from the technology point of view, the users perspective and interactions are also essential factors.",
                "There is plenty of discussion amongst HCI and CSCW community on the use of Ethnomethodology for design of CSCW applications.",
                "The basic approach is to provide larger bandwidth, more facilities and more advanced control mechanisms, looking forward to better quality of interaction.",
                "This approach ignores the functional utility of the environment that is used for collaboration.",
                "Eckehard Doerry [4] criticizes this approach by saying it is keeping form before function.",
                "Thus, the need is to take an approach that considers both aspects - the technical and the functional.",
                "Regarding the functional aspect, we refer to [15] where it has been dealt with in some detail.",
                "In this work, we do not discuss video conferencing; its inclusion does not significantly benefit conference quality [4].",
                "Our focus is on virtual audio environments.",
                "We first outline the challenges encountered in virtual audio conferences.",
                "Then we look into the motivations followed by relevant literature.",
                "In Section 5, we explain the architecture of our system.",
                "Section 6 comprises description of the various algorithms used in our setup.",
                "We address deployment issues.",
                "A discussion on Swiss Federal Institute of Technology, Lausanne.",
                "Former visitor at CEDT.",
                "PESIT and NIAS, Bangalore, India.iv ii performance follows.",
                "We conclude taking alongside some implementation issues. 2.",
                "CHALLENGES IN VoIP CONFERENCING Many challenges arise in building a VoIP application.",
                "The following are of particular concern in the process: • Ease of use: Conferencing must be simple; users need no domain expertise.",
                "Management (addition/removal) of clients and servers must be uncomplicated.",
                "Application development should not presuppose specific characteristics of the underlying system or of network layers.",
                "Ease of use may include leveraging readily available, technically feasible and economically viable technologies. • Scalability: Conferencing must seem uninterrupted under heavy loads, i.e., when many additional users are added on.",
                "Traffic on WAN should not grow appreciably with the total number of clients; else, this has lead to congestion.",
                "So a means to regulate traffic to a minimum is needed for this kind of real-time applications. • Interactivity: In Virtual Conferencing Environments (VCEs), we intend a face-to-face-like conferencing application that mimics a real conference, where more vocal participants invite attention.",
                "Turn-taking in floor occupation by participants must be adapted gracefully to give a feel of natural transition. • Standardization: The solution must conform to established standards so as to gain interoperability and peer acceptance.",
                "The above requirements are placed in the perspective of observations made in earlier works (vide Sections 3 and 4) and will steer the VCE design. 3.",
                "THE MOTIVATION Ramanathan and Rangan [20] have studied in detail the architectural configurations comparing many conferencing architecture schemes taking into consideration the network delay and computation requirements for mixing.",
                "Functional division and object-oriented architecture design that aid in implementation is presented in [1].",
                "An overview of many issues involved in supporting a large conference is dealt in [8].",
                "H. P. Dommel [5] and many others highlight floor control as another pivotal aspect to be taken into account in designing a conferencing tool.",
                "Tightly coupled conference control protocols in Internet belong to the ITU-T H.323 family [9]; however, they are mainly for small conferences.",
                "The latest IETF draft by Rosenberg and Schulzrinne [23] discusses conferencing models with SIP [22] in the background.",
                "Aspects of implementation for centralized SIP conferencing are reported in [26].",
                "A new approach called partial mixing by Radenkovic [18] allows for mixed and non-mixed streams to coexist.",
                "In all the above proposals, while there are some very useful suggestions, they share one or more of the following limitations: • In an audio conference, streams from all the clients need not be mixed.",
                "Actually, mixing many arbitrary streams [24] from clients degrades the quality of the conference due to the reduction in the volume (spatial aspect of speech).",
                "The number of streams mixed varies dynamically depending on the number of active participants.",
                "This would lead to fluctuations in the volume of every individual participant causing severe degradation in quality.",
                "Customized mixing of streams is not possible when many clients are active.",
                "There is a threshold on the number of simultaneous speakers above which increasing the number of speakers becomes counterproductive to conference quality.",
                "Fixing the maximum number of simultaneous speakers is dealt in a recent work [15] using Ethnomethodology, and is conjectured to be three.",
                "Thus it is advisable to honour that constraint. • There cannot be many intermediate mixers (similarly, Conference Servers as in [10]) in stages as in [20] because it brings in inordinate delay by increasing the number of hops and is not scalable with interactivity in focus. • Floor Control for an audio conference (even video conference) with explicit turn-taking instructions to participants renders the conference essentially a one-speakerat-a-time affair, not a live and free-to-interrupt one.",
                "This way, the conference becomes markedly artificial and its quality degrades.",
                "Schulzrinne et al. [24], assume only one participant is speaking at a time.",
                "In this case, if applications are implemented with some control [5], the service becomes gagging for the users. • Partial mixing [18] has a similar problem as that of mixing when more streams are mixed.",
                "Moreover, in [18], to allow impromptu speech, mixing is not done when the network can afford high bandwidth requirements for sending/receiving all the streams, but it is unnecessary [15]. • For large conferences [23, 10] a centralized conference cannot scale up.",
                "With multicasting, clients will have to parse many streams and traffic on a clients network increases unnecessarily.",
                "Evidently, different particular issues, all of which are a subset of requirements (defined in [14] and [16]) for a VoIP conferencing support, are tackled.",
                "Thus there is a need to address conferencing as a whole with all its requirements considered concurrently.",
                "Towards this goal, the VoIP conferencing system we propose is intended to be scalable and interactive.",
                "We make use of the Loudness Number for implementing floor control.",
                "This permits a participant to freely get into the speaking mode to interrupt the current speaker as in a natural face-to-face meeting.",
                "An upper limit on the number of floors (i.e., the number of speakers allowed to speak at the same time) is fixed using a conjecture proposed in [15].",
                "The work presented here is in continuation of our studies into conferencing based on the Session Initiation Protocol in [14] and [16].",
                "SIP, defined in [22] is now the most popular standard for VoIP deployment and has been chosen for its strength, ease of use, extensibility and compatibility.",
                "This is the reason it will be in the background of all controlling messages that will implicitly arise between the entities in our architecture.",
                "The actual messages are described in [16] and, as such, we do not present a complete description of them here. 4.",
                "RELATED WORK The SIP standard defined in RFC 3261 [22] and in later extensions such as [21] does not offer conference control services such as floor control or voting and does not prescribe how a conference is to be managed.",
                "However SIP can be used to initiate a session that uses some other conference control protocol.",
                "The core SIP specification supports many models for conferencing [26, 23].",
                "In the server-based models, a server mixes media streams, whereas in a server-less conference, mixing is done at the end systems.",
                "SDP [7] can be used to define media capabilities and provide other information about the conference.",
                "We shall now consider a few conference models in SIP that have been proposed recently [23].",
                "First, let us look into server-less models.",
                "In End-System Mixing, only one client (SIP UA) handles the signaling and media mixing for all the others, which is clearly not scalable and causes problems when that particular client leaves the conference.",
                "In the Users Joining model, a tree grows, as each invited party constitutes a new branch in the distribution path.",
                "This leads to an increasing number of hops for the remote leaves and is not scalable.",
                "Another option would be to use multicast for conferencing but multicast is not enabled over Internet and only possible on a LAN presently.",
                "Among server-based models, in a Dial-In Conference, UAs connect to a central server that handles all the mixing.",
                "This model is not scalable as it is limited by the processing power of the server and bandwidth of the network.",
                "Adhoc Centralized Conferences and Dial-Out Conference Servers have similar mechanisms and problems.",
                "Hybrid models involving centralized signaling and distributed media, with the latter using unicast or multicast, raise scalability problems as before.",
                "However an advantage is that the conference control can be a third party solution.",
                "Distributed Partial Mixing, presented in [18], proposes that in case of bandwidth limitation, some streams are mixed and some are not, leaving interactivity intact.",
                "Loss of spatialism when they mix and the bandwidth increase when they do not are open problems.",
                "A related study [19] by the same author proposes conferencing architecture for Collaborative Virtual Environments (CVEs) but does not provide the scalability angle without the availability of multicasting.",
                "With the limitations of proposed conferencing systems in mind, we will now detail our proposal. 5.",
                "SYSTEM ARCHITECTURE This section is dedicated to the description of the proposed system architecture.",
                "However, as this paper constitutes the continuation of our work started in [14] and furthered in [16], we will not present here all the details about the proposed entities and invite the readers to consult the papers mentioned above for a full and thorough description.",
                "First, we do not restrict our conferencing system to work on small conferences only, but rather on large audio VCEs that have hundreds (or even thousands) of users across a Wide Area Network (WAN) such as the Internet.",
                "This view stems from an appraisal that VCEs will gain in importance in the future, as interactive audio conferences will be more popular because of the spread of the media culture around the world.",
                "Two issues must be taken care of when building a VoIP conferencing system: (i) the front-end, consisting of the application program running on the end-users computers and (ii) the back-end that provides other application programs that facilitate conferencing and conference.",
                "The participating users are grouped into several domains.",
                "These domains are Local Area Networks (LANs), such as corporate or educational networks.",
                "This distributed assumption asks for distributed controlling and media handling solutions, as centralized systems would not scale for such very large conferences (vide Section 4).",
                "More explicitly, in each domain, we can identify several relevant logical components of a conferencing facility (Fig. 1):  An arbitrary number of end users (clients) that can take part in at most one audio conference at a time.",
                "Every user is Fig. 1.",
                "Conference example - 3 domains containing the necessary entities so that the conference can take place. included in one and only one domain at a given instant, but can move from domain to domain (nomadism).",
                "In our conferencing environment, these clients are regular SIP User Agents (SIP UAs), as defined in [22] so to gain in interoperability with other existing SIP-compatible systems.",
                "These clients are thus not aware of the complex setting that supports the conference and this is highlighted below.  One SIP Server (SIPS) per domain, taking care of all the signaling aspects of the conference (clients joining, leaving, etc.) [16].",
                "In particular, it is considered as a physical implementation encompassing different logical roles, namely a SIP Proxy Server, a SIP Registrar Server, a SIP Redirect Server and a SIP B2BUA (Back-to-Back User Agent) [22].",
                "This physical implementation enables the handling of incoming/outgoing SIP messages by one or another logical entity according to the needs.",
                "SIPS is entrusted with maintaining total service and has many advantages such as (a) it works as a centralized entity that can keep track of the activities of the UAs in a conference; (b) it can do all the switching for providing PBX features; (c) it can locate the UAs and invite them for a conference; (d) it can do the billing as well.",
                "SIPSs in different domains communicate with each other using SIP messages as described in [16].",
                "If the load on a particular SIPS is too heavy, it can create another SIPS in the same domain so that the load will be shared.  One Master Conference Server (M-CS) (simply a Conference Server (CS)) for each conference is created by the local SIPS when a conference starts.",
                "This server will be used for handling media packets for the clients of the domain.",
                "Its mechanism will be described in the next section.",
                "The M-CS will be able to create a hierarchy of CSs inside a domain by adding one or more Slave CSs (S-CSs) to accommodate all the active clients and prevent its own flooding at the same time.",
                "We will see this mechanism in some detail in the sequel.",
                "The entities described here are exhaustive and conform to the SIP philosophy.",
                "Thus, the use of SIP makes this architecture more useful and interoperable with any other SIP clients or servers. 6.",
                "ALGORITHMIC ISSUES 6.1 Selecting the Streams Similar to SipConf in [27], a Conference Server (CS) [17] has the function of supporting the conference; it is responsible for handling audio streams using RTP.",
                "It can also double to convert audio stream formats for a given client if necessary and can work as Translators/Mixers of RTP specification behind firewalls.",
                "We have based the design of our CS on H.323 Multipoint Processor (MP) [9].",
                "In short, the MP receives audio streams from the endpoints involved in a centralized or hybrid multipoint conference, processes them and returns them to the endpoints.",
                "An MP that processes audio prepares NMax audio outputs from M input streams after selection, mixing, or both.",
                "Audio mixing requires decoding the input audio to linear signals (PCM or analog), performing a linear combination of the signals and reencoding the result in an appropriate audio format.",
                "The MP may eliminate or attenuate some of the input signals in order to reduce noise and unwanted components.",
                "Fig. 2.",
                "Schematic diagram of a CS The limitation of H.323 is that it does not address the scalability of a conference.",
                "The architecture proposes a cascaded or daisy chain topology [10], which can be shown that it cannot scale up for a large conference.",
                "A CS serves many clients in the same conference.",
                "Thus it handles only one conference at a time.",
                "Multiple CSs may coexist in a domain, as when there are several conferences under way.",
                "Signaling-related messages of CSs are dealt in [11].",
                "The working of a CS is illustrated on Fig. 2: For each mixing interval, CS 1 chooses the best NMax audio packets out of the M1 (using a criterion termed Loudness Number, described in the next subsection).",
                "It may possibly receive and sends these to CSs 2 to P. The set of packets sent is denoted as ToOtherCSs.",
                "In the same mixing interval, it also receives the best NMax audio packets (out of possibly M2) from CS 2, similarly the best NMax (out of possibly MP) from CS P. For simplicity, we ignore propagation delay between CSs which indeed can be taken into account; it is beyond the scope of this presentation.",
                "The set of packets received is denoted as FromOtherCSs.",
                "Finally, it selects the best NMax packets from the set {ToOtherCSs union FromOtherCSs} and passes these packets to its own group.",
                "It can be seen that the set {ToOtherCSs union FromOtherCSs} is the same at all CSs.",
                "This ensures that any client in the conference finally receives the same set of packets for mixing.",
                "Hence all clients obtain a common view of the conference.",
                "Similarly, for each time slot (packet time), a subset, F of all clients is selected (using the same criterion) from the pool of packets from all other CSs plus the NMax clients selected locally.",
                "Their packets are mixed and played out at the clients.",
                "According to [15], the cardinality of F, |F| is NMax and is fixed at three.",
                "In our conferencing setup, selection is by the Master Conference Server (M-CS), which comes into the picture exclusively for media handling.",
                "Note that even if the SIP specification enables direct UA-to-UA media communication in a one-to-one call, it is also possible to use the Conference Server for two-party calls, especially because it is then more functional to create a real conference by adding a third and subsequently more participant(s).",
                "There are cases wherein the processing capacity of an M-CS is exceeded as it may have too many packets - from local domains and from remote domains - to process.",
                "In that case, the M-CS will create one or many S-CS (Fig. 6) and transfer its own clients as well as the new clients to them.",
                "In this configuration, the algorithm outlined above will be slightly modified, as the audio packets will go from clients to their dedicated S-CS that will select NMax packets to send to the local M-CS, which will then select NMax packets from all its S-CSs in the domain before sending them to the remote domains.",
                "The incoming packets from other domains will be received by the M-CS, select NMax of them and send them directly to the domain clients, bypassing the SCSs.",
                "This change implies that at most three intermediate entities exist for each audio packet, instead of two in the conventional setup.",
                "As the extra hop happens inside the LAN supposed to have a high-speed connectivity, we consider that it should not prevent us from using this hierarchy of CSs when theres a need to do so. 6.2 Loudness Number (LN) A basic question to be answered by the CS is the following.",
                "In a mixing interval, how should it choose NMax packets out of the M it might possibly receive?",
                "One way is to rank the M packets received according to their energies, and choose the top NMax.",
                "However, this is usually found to be inadequate because random fluctuations in packet energies can lead to poor audio quality.",
                "This indicates the need for a metric different from mere individual packet energies.",
                "The metric should have the following characteristics [12]: • A speaker (floor occupant) should not be cut off by a spike in the packet energy of another speaker.",
                "This implies that a speakers speech history should be given some weight.",
                "This is often referred to as Persistence or Hangover. • A participant who wants to interrupt a speaker will have to (i) speak loudly and (ii) keep trying for a little while.",
                "In a face-to-face conference, body language often indicates the intent to interrupt.",
                "But in a blind conference under discussion, a participants intention to interrupt can be conveyed effectively through LN.",
                "A floor control mechanism empowered to cut off a speaker forcefully must be ensured.",
                "These requirements are met by Loudness Number [12], which changes smoothly with time so that the selection (addition and deletion) of clients for conference is graceful.",
                "LN (= ) is a function of the amplitude of the current audio stream plus the activity and amplitude over a specific window in the past.",
                "Fig. 3.",
                "The different windows used for LN computation The Loudness Number is updated on a packet-by-packet basis.",
                "The basic parameter used here is packet amplitude, which is calculated as root mean square (rms) of the energies in audio samples of a packet, and denoted by XK.",
                "Three windows are defined as shown in Fig. 3.",
                "The present amplitude level of the speaker is found by calculating the moving average of packet amplitude (XK) within a window called Recent Past Window starting from the present instant to some past time.",
                "The past activity of the speaker is found by calculating the moving average of the packet amplitude (XK) within a window called Distant Past Window, which starts at the point where the Recent Past window ends and stretches back in the past for a pre-defined interval.",
                "The activity of the speaker in the past is found with a window called Activity Horizon, which spans the recent past window as well as the distant past window and beyond if necessary.",
                "Though the contribution of the activity horizon looks similar to the contribution of the recent past and distant past windows, past activity is computed from activity horizon window in a differently.",
                "Define the quantities during these three intervals as L1, L2 and L3.",
                "L1 quantifies the Recent Past speech activity, L2 the Distant Past speech activity and L3 gives a number corresponding to the speech activity in the Activity Horizon window quantifying how active the speaker was in the past few intervals.",
                "L3 yields a quantity that is proportional to the fraction of packets having energies above a pre-defined threshold (Eq. 3).",
                "The threshold is invariant across clients. ∑ +− = = 1 1 1 RPP P Wt tK K RP X W L (1) ∑ +−− −= = 1 2 1 DPRPP RPP WWt WtK K DP X W L (2) ∑ +− = ≥= 1 }{3 * 1 AHP P K Wt tK X AH I W L θθ (3) Where ifI KX 1}{ =≥θ θ≥KX = otherwise,0 The threshold is a constant. is set at 10-20 percent of the amplitude of the voice samples of a packet in our implementation here.",
                "Loudness Number λ for the present time instant (or the present packet) is calculated as, 332211 *L*L*L αααλ ++= (4) Here 1\u000f 2 DQG 3 are chosen such that: 0< 1\u000f 2\u001f\u0014\u000f \u0013\u001f 1\u000e 2\u001f\u0014 DQG 3=1-\u000b 1\u000e 2) Here, 1 is the weight given to the recent past speech, 2 is the weight given to distant past speech and 3 is the weight given to speech activity in the activity horizon window considered. 6.3 Safety, Liveness and Fairness The λ parameter KDV VRPH PHPRU\\ GHSHQGLQJ RQ WKH VSUHDG RI the windows.",
                "After one conferee becomes silent, another can take the floor.",
                "Also, as there is more than one channel, interruption is enabled.",
                "A loud conferee is more likely to be heard because of elevated λ.",
                "This ensures fairness to all conferees.",
                "After all, even in a face-to-face conference, a more vocal speaker grabs special attention.",
                "All these desirable characteristics are embedded into the LN.",
                "A comprehensive discussion on selection of the various parameters and the dynamics of LN are beyond the scope of this paper. 6.4 Selection Algorithm using the LN Following the developments in subsections 6.1 and 6.2, we present the simple algorithm that runs at each Master-Conference Server (Algorithm. 1).",
                "This algorithm is based on the discussions in section 6.1.",
                "The globally unique set F is found using this procedure.",
                "Repeat for each time slot at each M-CS { 1.",
                "Get all the packets from the Clients that belong to it. 2.",
                "Find at most NMax Clients that have PD[LPXP RXW RI 0 &OLHQWV LQ LWV GRPDLQ\u0011 3.",
                "Store a copy of packets from those NMax Clients in database DB1. 4.",
                "Send these NMax packets to other M-CSs (on Unicast or Multicast, depending on the configuration). 5.",
                "Similarly, receive packets from all other M-CSs and store them in database DB2. 6.",
                "Now compare the packets in DB1 and DB2 on WKH EDVLV RI DQG VHOHFW D PD[LPXP RI NMax amongst them (to form set F) that should be played out at each Client. 7.",
                "Send the NMax packets in set F to the Clients in its domain. 8.",
                "Mix these NMax audio packets in set F after linearising and send it to dumb Clients in the domain. }",
                "Algorithm 1.",
                "Selection algorithm The mechanism proposed here is also depicted on Fig. 6, where a single conference takes place between three domains.",
                "The shaded clients are the ones selected in their local domains; their audio streams will be sent to other CSs. 7.",
                "DEPLOYMENT ISSUES We now analyze deployment issues associated with conference management.",
                "How are domains to be organized to maximize the number of participants able to join?",
                "To address this, we define some useful parameters.  Let d be the number of different domains in which there are active clients in a given conference.  Let Mi be the number of active clients present in domain i ( di ≤≤1 ) in a given conference.",
                "The total number of active clients in the conference is thus ∑= = d i iMM 1 .  Let C be the maximum number of audio streams a Conference Server can handle in a packet time, also called capacity.",
                "C is set according to the processing power of the weakest CS in the conference but as it cannot be assumed that we know it a-priori, it can be set according to some minimum system requirement a machine must meet in order to take part in a conference.  Let NMax be the number of output streams a CS has to send to other CSs in remote domains (see section 6.1).",
                "We will set NMax =3 (=|F|), according to [15].",
                "The optimization problem is now to find the value of d that maximizes the total number of clients Mi served by one CS in a domain with capacity C. We first dispose the case where the capacity is not exceeded (the existing CS is not overloaded), and then proceed to the case where there exists a need to create more CSs when a single CS is overloaded.",
                "We assume that clients are equally distributed amongst the domains, as we may not have information to assume an a-priori distribution of the clients.",
                "We can specify no more than an upper bound on the number of clients acceptable, given the number of active domains d. 7.1 Conferencing with only One Level of CSs In this subsection, we consider that we have only one CS, i.e., a unique M-CS in each domain.",
                "Thus it cannot be overloaded.",
                "We consider that the system works as outlined in section 6.1: The Clients send their audio packets to their local CS, which selects NMax streams, before sending them to other CSs.",
                "In parallel, it also receives NMax streams for every other CSs before taking a decision on which NMax streams will be selected, sent and played out at each individual clients.",
                "For system stability, any CS in the conference should be able to handle its local clients in addition to the audio packets from other domains.",
                "Clearly then, the following inequality must hold for every domain: )1( −⋅+≥ dN d M C Max (5) The limiting case of (5) (taking the equality) takes the form 2 )( dNdNCM MaxMax ⋅−⋅+= (6) To optimize d with respect to M, we set 0)(2 =+−⋅⋅= ∂ ∂ MaxMax NCdN d M (7) yielding     ⋅ + = Max Max N NC d 2 (8) ([ ]* = Rounding to nearest integer) and hence, M from (6).",
                "C d M 50 9 234 100 17 884 150 26 1950 200 34 3434 250 42 5334 300 51 7650 350 59 10384 400 67 13534 450 76 17100 500 84 21084 Table 1.",
                "Values of d and M computed for some values of C with NMax = 3.",
                "In Table 1, we give the values of d and M that were computed using (8) and (6) with NMax = 3.",
                "We see that the values of d and M, being dependent of C, are therefore based on the weakest CS.",
                "We see that there is a trade-off between M and d. We could admit more domains in the conference, but at the expense of restricting the total number of clients M in the conference.",
                "While implementing and testing the Conference Servers on a Pentium III 1.4 GHz running Windows NT, we were able to set C=300.",
                "But with the advent of faster computers (> 3 GHz), one can easily set C to higher values and determine d and M accordingly.",
                "Fig. 4 shows a contour plot and Fig. 5, a 3D-mesh showing optimized solutions for CSs of different capacities.",
                "These lead us to maximize the number of domains, and hence, to maximize the total number of clients based on the capacity of various CSs.",
                "In Fig. 4, the individual curves represent the total number of clients targeted, and we select a lower value of d, for capacity C, for targeted M to reduce traffic on WAN.",
                "Fig. 5 represents a different perspective of the same data in 3D.",
                "Fig. 4.",
                "Contour Plot of Capacity versus Optimum number of domains for various conference sizes 7.2 Conferencing with Two Levels of CSs Now considering the case where the number of clients in a particular domain is too large, i.e., d M Mi ≥ (9) one has to avoid the denial of service for new clients due to overloading of Conference Server.",
                "This problem can be solved by introducing a second level of CSs inside the given domain, as in Fig. 6.",
                "The existing M-CS creates a Slave CS (S-CS) that can handle up to C end-users and to which it transfers all its active clients.",
                "Here, the system works differently as outlined in section 6.1: The Clients send their audio packets to their local S-CS, which selects NMax streams, before sending them to a local M-CS, which will proceed in the same way, before sending NMax streams to the other domains.",
                "Each newly created S-CS must run on a separate machine.",
                "The M-CS has to create more S-CSs if the number of active clients exceeds C in the course of the conference after the transfer.",
                "With this mechanism, the M-CS will be able to create utmost     −⋅− = Max Max N dNC U )1( S-CSs, (10) as it must handle 3 (= NMax) packets for each local S-CSs and 3 (= NMax) packets from each other remote domains.",
                "We can then calculate the maximum theoretical number of active clients CUMi ⋅= in each domain as well as M, for the whole conference as CUdM ⋅⋅= .",
                "Fig. 5. 3D Plot of Capacity versus Optimum number of domains for various conference sizes Of course, one could further create a third level in the hierarchy, giving the possibility of accommodating even more clients.",
                "This may be unnecessary as the number of possible clients is large enough with two levels. 8.",
                "PERFORMANCE DISCUSSION We now analyze the performance of the algorithm presented in subsection 6.3, i.e., the one taking care of the exchange of audio packets between the different domains.",
                "Note that the packets that are transiting within the LAN take advantage of the higher capacity (generally coupled with multicast capabilities) and therefore do not require a performance analysis.",
                "Thus we have to look only at the RTP packets over the WAN, i.e., between participating M-CSs.",
                "As each M-CS from a domain will be sending only NMax out of d M packets to the other CSs ( MaxN d M >> ), the bandwidth used by the application over a WAN is upper-bounded by the following expression.",
                "The total number of audio packets transiting over the WAN for each time slot is ∑ ∑= ≠=        d i d ijj MaxN 1 ,1 which is quadratic in the number of domains (i.e., O(d2 )).",
                "However, it is independent of the total number of active clients.",
                "This would not have been the case had all packets been sent over the network in each time slot.",
                "The saving is tremendous.",
                "Yet, one may contend that sending three packets to and from all domains is a waste of resources, as most of these streams will not be selected.",
                "If just one client is active, selecting a subset of clients in that domain is unnecessary.",
                "Pessimistic and optimistic algorithms as presented in the sequel aim at reducing the traffic further by harnessing the slow varying nature of the LN. 8.1 Pessimistic algorithm Consider a scenario wherein the lowest LN (called LNt) of the three globally selected streams (set F of Section 6.1) exceeds the LN of the most dominant stream of a domain.",
                "Evidently, the chances that the next two dominant streams of that domain being selected to F in the next packet period are less.",
                "Here, we send this most dominant stream and withhold the other two.",
                "There may be an error in unique selection across all domains for one packet period only.",
                "As LN varies slowly, the error would get automatically rectified in a subsequent packet period (slot).",
                "In this algorithm, there is at least one stream in each period.",
                "The net network traffic in a packet period in the best case is )1( −⋅ dd , i.e., )( 2 dO using unicast, instead of MaxNdd ⋅−⋅ )1( .",
                "Considerable valuable bandwidth can be saved using this heuristic.",
                "The resulting traffic complexity reduces from O(d2 ) to O(d) in multicast-enabled networks.",
                "Initialize LNt = 0 at an M-CS/S-CS A.",
                "In the first time slot (packet time), each CS sends the top NMax streams (based on their LN) to all other CSs.",
                "At each M-CS/S-CS and for each packet time: B.",
                "Find the value of lowest LN of the NMax globally selected streams (set F) from the previous time slot.",
                "Set LNt with this value.",
                "C. At each CS domain, select the NMax local streams that have maximum value of LN (ToOtherCSs set).",
                "D. Select streams that have LN > LNt.",
                "IF there are >= NMax streams with LN > LNt then send top NMax to other CSs.",
                "ELSE IF there are (NMax-1) streams with LN>LNt then send top (NMax-1) plus the one lower than LNt (i.e., top NMax) to other CSs.",
                "ELSE IF there are (NMax-2) streams with LN>LNt then send top (NMax-2) plus the one lower than LNt (i.e. top (NMax -1)) to other CSs. …… ELSE IF there are NO streams with LN> LNt then send top 1 stream to other CSs.",
                "E. Packets sent in step D form DB1.",
                "Packets received from other CSs form DB2.",
                "F. For this time slot, find global NMax streams based on LN from DB1 U DB2 (set F) G. Send set F to the clients in its domain.",
                "Update LNt for the next period.",
                "Algorithm 2.",
                "Pessimistic algorithm to reduce the number of packets sent over the Internet.",
                "Fig. 6.",
                "Example of a 2-level hierarchy of Conference Servers; the shaded Clients are the one selected by the M-CS and will be sent to other domains CSs.",
                "In this algorithm the saving in traffic is at the cost of relaxing the condition of formation of globally unique set F. However, the discrepancies in selected streams at different domains remain for a short period of time depending on the transportation delay between any two domains.",
                "Even for a total delay of 400ms, for only 10 packet time slots the uniqueness is lost.",
                "This duration in a real-time interactive conversation is non-perceivable by the listener.",
                "In the case that there is a joke and every one laughs, then there would be sudden rise in the number of packets and it would be upper bounded by MaxN)d(O 2 for a short period. 8.2 Optimistic Algorithm The traffic can be reduced further.",
                "The scheme in the following algorithm (Algorithm. 3) is withholding all the streams that have less value of LN compared to the least of the three in the set F. We can find the correct and unique three streams after a few time slots depending on the transportation delay between the domains.",
                "As the packet period is of the order of 40ms, the error in the selection is unnoticeable.",
                "The number of streams on network in this case is always restricted to NMax (=3).",
                "Even without Voice Activity Detection (VAD), there will be no more than three streams in the network in the best case, thus the total traffic is constant.",
                "A sudden burst of traffic, as described in 8.1, is a particular case.",
                "These advantages are due to exploitation of the characteristics of LN.",
                "Initialize LNt = 0 at an M-CS/S-CS A.",
                "In the first time slot (packet time), each CS sends the top NMax streams (based on their LN) to all other CSs.",
                "At each M-CS/S-CS and for each packet time: B.",
                "Find the value of lowest LN of the NMax globally selected streams (set F) from the previous time slot.",
                "Set LNt with this value.",
                "C. At each CS domain, select the NMax local streams that have maximum value of LN (ToOtherCSs set) D. Select streams that have LN > LNt IF there are >= NMax streams with LN > LNt then send top NMax to other CSs.",
                "ELSE IF there are (NMax-1) streams with LN>LNt then send top (NMax-1) and see E. ELSE IF there are (NMax-2) streams with LN>LNt then send top (NMax-2) and see E. …… ELSE IF there are NO streams with LN> LNt then dont send any stream.",
                "E. Exceptions: IF the stream that was in F in the last interval belongs to this CS then select and send that stream even if its LN is now < LNt. (Note this occurs only at that CS which had the stream that was the last of the three in the previous packet period.)",
                "F. Packets sent in step D and E form DB1.",
                "Packets received from other CSs form DB2.",
                "G. For this time slot, find global NMax streams based on LN from DB1 U DB2 (set F).",
                "H. Send set F to the clients in its domain.",
                "Update LNt for the next period.",
                "Algorithm 3.",
                "Optimistic algorithm to reduce the number of packets sent over the Internet Furthermore, when VAD is used [13], it would further reduce the traffic by sending the header part of the RTP packet only and not the whole packet, thus in order to keep updating the LN across.",
                "The traffic here in this case is O(NMax) for multicast and O(d) for unicast.",
                "We see that the above algorithms save bandwidth and computation at each CS, and leads to a scalable architecture with multiple CSs mainly because clients are grouped in domains.",
                "The necessary bandwidth is not dependent on the total number of active clients.",
                "As the CS always chooses the best three clients out of all the clients assigned to it in the domain, addition of new clients to the existing conference will not cause any scalability problem. 8.3 Availability of Multicasting In the architecture that has been proposed, no assumption was made about the availability of multicasting support from the network.",
                "The traffic will be further reduced if multicasting is available over WAN.",
                "It is simple to show that the order of traffic would tend to become O(d) from O(d2 ).",
                "This is an approximation as saving in multicasting depends also on the topology.",
                "The analysis was done for the case wherein multicast is not available (a realistic assumption in todays Internet).",
                "The advantage of this set up is that we can use it even if multicasting is partially available.",
                "We can instruct CSs during the set-up phase to send unicast packets to those CSs that cannot receive multicast packets whereas CSs on multicast enabled routers can exchange packets on a multicast address.",
                "The data structures and conference objects inside a CS is given in [14].",
                "Fig. 7.",
                "User Interface for setting the weight for NMax audio streams (setting Self-bar to zero avoids echo). 8.4 Quality Improvement The observed improvement in the perceived quality of the conference service is due to: (1) limiting the number of concurrent speakers to a low number such as three.",
                "Generally, in a conference if more than two participants speak the intelligibility is lost.",
                "The conversational analysis demonstrates that there would be a repair mechanism [15] in such a case. (2) Delay: The audio stream between any two clients will pass through at most two CSs thus reducing the end-to-end delay.",
                "For a large conference there might be three CSs however, one hop is within the domain incurring negligible delay. (3) As the streams are mixed only at the clients, there can be a customized mix of the streams.",
                "The individual tuning of mixing with weights the spatialism is preserved.",
                "Fig. 7 shows the user interface for the same.",
                "The echo when self-stream is selected can be avoided by reducing the weight.",
                "Nonetheless, feedback helps in reassuring speaker that he/she is heard by all. 9.",
                "CONCLUSION In this paper, we have presented a discussion on a voice-only virtual conferencing environment.",
                "We have argued that the distributed nature of deployment here makes it scalable.",
                "Interactivity is achieved by adapting a recent stream selection scheme based on Loudness Number.",
                "Additionally, we incorporate a result from a more recent work [15] where the <br>sufficiency of three simultaneous speaker</br>s has been demonstrated.",
                "Thus, there is significantly effective utilization of bandwidth.",
                "A mixed stream is played out at each client; each client may choose to have a customized mix since mixing is done at the local terminal of each client.",
                "These render impromptu speech in a virtual teleconference over VoIP a reality, as in a real face-to-face conference.",
                "Compatibility is assured thanks to the use of SIP, the most soughtafter signaling protocol.",
                "To ensure a satisfying performance, we do not demand the availability of multicast, but use it if and when available.",
                "The traffic in the WAN (Internet) is upper-bounded by the square of the number of domains, -- further reduced by using heuristic algorithms -- which is far below the total number of clients in the conference.",
                "This is due to the use of a Conference Server local to each domain.",
                "VAD techniques help further traffic reduction.",
                "Using SIP standard for signaling makes this solution highly interoperable.",
                "We have implemented a CS application on a campus-wide network.",
                "We believe this new generation of virtual conferencing environments will gain more popularity in the future as their ease of deployment is assured thanks to readily available technologies and scalable frameworks. 10.",
                "REFERENCES [1] L Aguilar et al., Architecture for a Multimedia Teleconferencing System, in Proceedings of the ACM SIGCOMM, Aug 1986, pp. 126-136. [2] Carsten Bormann, Joerg Ott et al., Simple Conference Control Protocol, Internet Draft, Dec. 1996. [3] M. Decina and V. Trecordi, Voice over Internet Protocol and Human Assisted E-Commerce, IEEE Comm.",
                "Magazine, Sept. 1999, pp. 64-67. [4] Eckehard Doerry, An Empirical Comparison of Copresent and Technologically-mediated Interaction based on Communicative Breakdown, Phd Thesis, Graduate School of the University of Oregon, 1995. [5] H. P. Dommel and J.J. Garcia-Luna-Aceves, Floor Control for Multimedia Conferencing and Collaboration, J. Multimedia Systems, Vol. 5, No. 1, January 1997, pp. 23-38. [6] Amitava Dutta-Roy, Virtual Meetings with desktop conferencing, IEEE Spectrum, July 1998, pp. 47-56. [7] M. Handley and V. Jacobson, SDP: Session Description Protocol, RFC 2327, IETF, April 1998. [8] M. Handley, J. Crowcroft et al., Very large conferences on the Internet: the Internet multimedia conferencing architecture, Journal of Computer Networks, vol. 31, No. 3, Feb 1999, pp. 191-204. [9] ITU-T Rec.",
                "H.323, Packet based Multimedia Communications Systems, vol. 2, 1998. [10] P. Koskelainen, H. Schulzrinne and X. Wu, A SIP-based Conference Control Framework, NOSSDAV02, May 2002, pp. 53-61. [11] R Venkatesha Prasad et al., Control Protocol for VoIP Audio Conferencing Support, International Conference on Advanced Communication Technology, Mu-Ju, South Korea, Feb 2001, pp. 419-424. [12] R Venkatesha Prasad et al., Automatic Addition and Deletion of Clients in VoIP Conferencing, 6th IEEE Symposium on Computers and Communications, July 2001, Hammamet, Tunisia, pp. 386-390. [13] R Venkatesha Prasad, H S Jamadagni, Abjijeet, et al Comparison of Voice Activity Detection Algorithms, 7th IEEE Symposium on Computers and Communications.",
                "July 2002, Sicily, Italy, pp. 530-535. [14] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, A Scalable Distributed VoIP Conferencing using SIP, Proc. of the 8th IEEE Symposium on Computers and Communications, Antalya, Turkey, June 2003. [15] R Venkatesha Prasad, H S Jamadagni and H N Shankar, On Problem of Specifying Number of Floors in a Voice Only Conference, To appear in IEEE ITRE 2003. [16] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, A Proposal for Distributed Conferencing on SIP using Conference Servers, To appear in the Proc. of MMNS 2003, Belfast, UK, September 2003. [17] R. Venkatesha Prasad, H.S.",
                "Jamadagni, J. Kuri, R.S.",
                "Varchas, A Distributed VoIP Conferencing Support Using Loudness Number, Tech.",
                "Rep. TR-CEDT-TE-03-01 [18] M. Radenkovic et al, Scaleable and Adaptable Audio Service for Supporting Collaborative Work and Entertainment over the Internet, SSGRR 2002, LAquila, Italy, Jan. 2002. [19] M. Radenkovic, C. Greenhalgh, S. Benford, Deployment Issues for Multi-User Audio Support in CVEs, ACM VRST 2002, Nov. 2002, pp. 179-185. [20] Srinivas Ramanathan, P. Venkata Rangan, Harrick M. Vin, Designing Communication Architectures for Interorganizational Multimedia Collaboration, Journal of Organizational Computing, 2 (3&4), pp.277-302, 1992. [21] A.",
                "B. Roach, Session Initiation Protocol (SIP)-Specific Event Notification, RFC 3265, IETF, June 2002. [22] J. Rosenberg, H. Schulzrinne et al., SIP: Session Initiation Protocol, RFC 3261, IETF, June 2002. [23] J. Rosenberg, H. Schulzrinne, Models for Multy Party Conferencing in SIP, Internet Draft, IETF, July 2002. [24] H. Schulzrinne et al., RTP: a transport protocol for realtime applications, RFC 1889, IETF, Jan 1996. [25] Lisa R. Silverman, Coming of Age: Conferencing Solutions Cut Corporate Costs, White Paper, www.imcca.org/wpcomingofage.asp [26] Kundan Singh, Gautam Nair and Henning Schulzrinne, Centralized Conferencing using SIP, Proceedings of the 2nd IP-Telephony Workshop (IPTel), April 2001. [27] D. Thaler, M. Handley and D. Estrin, The Internet Multicast Address Allocation Architecture, RFC 2908, IETF, Sept. 2000."
            ],
            "original_annotated_samples": [
                "Additionally, we incorporate a result from a more recent work [15] where the <br>sufficiency of three simultaneous speaker</br>s has been demonstrated."
            ],
            "translated_annotated_samples": [
                "Además, incorporamos un resultado de un trabajo más reciente [15] donde se ha demostrado la suficiencia de <br>tres hablantes simultáneos</br>."
            ],
            "translated_text": "Problemas de implementación de un sistema de conferencias VoIP en un entorno de conferencias virtuales. R. Venkatesha Prasad y Richard Hurni. Jamadagni iii H.N. Shankar iv i, iii Centro de Diseño y Tecnología Electrónica Instituto Indio de Ciencias, Bangalore, India Teléfono: +91 80 360 0810 i, iii {vprasad, hsjam}@cedt.iisc.ernet.in ii hurni@ieee.org iv hn_shankar@yahoo.com RESUMEN Los servicios en tiempo real han sido principalmente respaldados en redes conmutadas por circuitos. Las tendencias recientes favorecen los servicios trasladados a redes de conmutación de paquetes. Para las conferencias de audio, necesitamos considerar muchos aspectos, como la escalabilidad, la calidad de la aplicación de conferencia, el control de piso y la carga en los clientes/servidores, por nombrar algunos. En este documento, describimos un marco de servicio de audio diseñado para proporcionar un Entorno de Conferencias Virtuales (ECV). El sistema está diseñado para dar cabida a un gran número de usuarios finales hablando al mismo tiempo y distribuidos por Internet. El marco se basa en Servidores de Conferencia [14], que facilitan el manejo del audio, mientras que explotamos las capacidades de SIP para propósitos de señalización. La selección de clientes se basa en un reciente cuantificador llamado Número de Volumen que ayuda a imitar una conferencia física cara a cara. Nos ocupamos de los problemas de implementación de la solución propuesta tanto en términos de escalabilidad como de interactividad, mientras explicamos las técnicas que utilizamos para reducir el tráfico. Hemos implementado una aplicación de Servidor de Conferencias (CS) en una red de campus en nuestro Instituto. Categorías y Descriptores de Temas C.2.4 [Redes de Computadoras y Comunicación]: Sistemas Distribuidos - Cliente/Servidor, aplicaciones distribuidas. Términos generales Algoritmos, Rendimiento, Diseño, Teoría. 1. INTRODUCCIÓN El Internet de hoy utiliza el conjunto de protocolos IP que fue diseñado principalmente para el transporte de datos y proporciona la entrega de datos con el mejor esfuerzo. Las restricciones de retraso y las características diferencian los datos tradicionales por un lado, de las aplicaciones de voz y video por el otro. Por lo tanto, a medida que se implementan aplicaciones de voz y video cada vez más sensibles al tiempo en Internet, se pone de manifiesto la insuficiencia de la red. Además, buscamos trasladar servicios telefónicos a través de Internet. Entre ellos, la instalación de conferencia virtual (teleconferencia) está a la vanguardia. Las videoconferencias y conferencias de audio en Internet son populares por las varias ventajas que poseen. Claramente, el ancho de banda necesario para una videoconferencia a través de Internet aumenta rápidamente con el número de participantes; reducir el ancho de banda sin comprometer la calidad del audio es un desafío en la telefonía por Internet. Los problemas críticos adicionales son: (a) retraso de paquetes, (b) eco, (c) mezcla de audio de clientes seleccionados, (d) selección automática de clientes para participar en la conferencia, (e) reproducción de audio mezclado para cada cliente, (f) manejo de clientes que no son capaces de mezclar flujos de audio (estos clientes se conocen como clientes tontos), y (g) decidir el número de clientes activos simultáneamente en la conferencia sin comprometer la calidad de voz. Si bien todos los requisitos anteriores son desde el punto de vista tecnológico, la perspectiva de los usuarios y las interacciones también son factores esenciales. Hay mucha discusión entre la comunidad de HCI y CSCW sobre el uso de la Etnometodología para el diseño de aplicaciones de CSCW. El enfoque básico es proporcionar un ancho de banda más amplio, más instalaciones y mecanismos de control más avanzados, con miras a una mejor calidad de interacción. Este enfoque ignora la utilidad funcional del entorno que se utiliza para la colaboración. Eckehard Doerry [4] critica este enfoque diciendo que pone la forma antes que la función. Por lo tanto, la necesidad es adoptar un enfoque que considere ambos aspectos: el técnico y el funcional. En cuanto al aspecto funcional, nos referimos a [15] donde se ha tratado en cierto detalle. En este trabajo, no discutimos la videoconferencia; su inclusión no beneficia significativamente la calidad de la conferencia [4]. Nuestro enfoque está en entornos de audio virtuales. Primero describimos los desafíos encontrados en las conferencias de audio virtuales. Luego investigamos las motivaciones seguidas por la literatura relevante. En la Sección 5, explicamos la arquitectura de nuestro sistema. La sección 6 comprende la descripción de los diversos algoritmos utilizados en nuestra configuración. Abordamos problemas de implementación. Una discusión sobre el Instituto Federal Suizo de Tecnología, Lausana. Antiguo visitante en CEDT. PESIT y NIAS, Bangalore, India. El rendimiento sigue. Concluimos teniendo en cuenta algunos problemas de implementación. 2. DESAFÍOS EN LA VIDEOCONFERENCIA VoIP Surgen muchos desafíos al construir una aplicación VoIP. Lo siguiente es de particular preocupación en el proceso: • Facilidad de uso: la conferencia debe ser sencilla; los usuarios no necesitan experiencia en el dominio. La gestión (adición/eliminación) de clientes y servidores debe ser sencilla. El desarrollo de aplicaciones no debe presuponer características específicas del sistema subyacente o de las capas de red. La facilidad de uso puede incluir el aprovechamiento de tecnologías fácilmente disponibles, técnicamente factibles y económicamente viables. • Escalabilidad: Las conferencias deben parecer ininterrumpidas bajo cargas pesadas, es decir, cuando se agregan muchos usuarios adicionales. El tráfico en la WAN no debería aumentar apreciablemente con el número total de clientes; de lo contrario, esto podría provocar congestión. Por lo tanto, se necesita un medio para regular el tráfico al mínimo para este tipo de aplicaciones en tiempo real. • Interactividad: En Entornos de Conferencias Virtuales (ECVs), pretendemos una aplicación de conferencias cara a cara que imite una conferencia real, donde los participantes más vocales invitan la atención. El intercambio de turnos en la ocupación del espacio por parte de los participantes debe adaptarse con gracia para lograr una transición natural. • Estandarización: La solución debe cumplir con los estándares establecidos para lograr interoperabilidad y aceptación entre pares. Los requisitos anteriores se colocan en la perspectiva de las observaciones realizadas en trabajos anteriores (véase Secciones 3 y 4) y guiarán el diseño del VCE. 3. La motivación Ramanathan y Rangan [20] han estudiado en detalle las configuraciones arquitectónicas comparando muchos esquemas de arquitectura de conferencias teniendo en cuenta la demora de red y los requisitos de computación para la mezcla. La división funcional y el diseño de arquitectura orientada a objetos que ayudan en la implementación se presentan en [1]. Un resumen de muchos temas relacionados con el apoyo a una conferencia grande se aborda en [8]. H. P. Dommel [5] y muchos otros destacan el control de piso como otro aspecto fundamental a tener en cuenta en el diseño de una herramienta de conferencias. Los protocolos de control de conferencias fuertemente acoplados en Internet pertenecen a la familia ITU-T H.323 [9]; sin embargo, están principalmente diseñados para conferencias pequeñas. El último borrador del IETF de Rosenberg y Schulzrinne [23] discute modelos de conferencia con SIP [22] en el fondo. Los aspectos de implementación para la conferencia SIP centralizada se informan en [26]. Un nuevo enfoque llamado mezcla parcial por Radenkovic [18] permite que flujos mezclados y no mezclados coexistan. En todas las propuestas anteriores, si bien hay algunas sugerencias muy útiles, comparten una o más de las siguientes limitaciones: • En una conferencia de audio, no es necesario mezclar los flujos de todos los clientes. De hecho, mezclar muchas corrientes arbitrarias [24] de clientes degrada la calidad de la conferencia debido a la reducción en el volumen (aspecto espacial del habla). El número de flujos mezclados varía dinámicamente dependiendo del número de participantes activos. Esto provocaría fluctuaciones en el volumen de cada participante individual, causando una degradación severa en la calidad. La mezcla personalizada de flujos no es posible cuando hay muchos clientes activos. Existe un umbral en el número de oradores simultáneos por encima del cual aumentar el número de oradores se vuelve contraproducente para la calidad de la conferencia. La fijación del número máximo de hablantes simultáneos se aborda en un trabajo reciente [15] utilizando la Etnometodología, y se postula que es tres. Por lo tanto, es recomendable respetar esa restricción. • No puede haber muchos mezcladores intermedios (similarmente, Servidores de Conferencia como en [10]) en etapas como en [20] porque provoca un retraso desmedido al aumentar el número de saltos y no es escalable con la interactividad como enfoque. • El Control de Piso para una conferencia de audio (incluso de video) con instrucciones explícitas de toma de turnos para los participantes convierte la conferencia en esencia en un asunto de un orador a la vez, no en una en vivo y libre de interrupciones. De esta manera, la conferencia se vuelve notablemente artificial y su calidad se degrada. Schulzrinne et al. [24], asumen que solo un participante está hablando en un momento dado. En este caso, si las aplicaciones se implementan con cierto control [5], el servicio se vuelve asfixiante para los usuarios. • La mezcla parcial [18] tiene un problema similar al de la mezcla cuando se mezclan más flujos. Además, en [18], para permitir el discurso improvisado, la mezcla no se realiza cuando la red puede soportar altos requisitos de ancho de banda para enviar/recibir todas las transmisiones, pero es innecesaria [15]. • Para conferencias grandes [23, 10] una conferencia centralizada no puede escalar. Con la multidifusión, los clientes tendrán que analizar muchos flujos y el tráfico en la red de los clientes aumenta innecesariamente. Evidentemente, se abordan diferentes problemas particulares, todos los cuales son un subconjunto de los requisitos (definidos en [14] y [16]) para el soporte de conferencias de VoIP. Por lo tanto, es necesario abordar la conferencia en su totalidad teniendo en cuenta todos sus requisitos de manera simultánea. Con este objetivo, el sistema de conferencias VoIP que proponemos está diseñado para ser escalable e interactivo. Hacemos uso del Número de Sonoridad para implementar el control de volumen. Esto permite a un participante entrar libremente en el modo de hablar para interrumpir al orador actual como en una reunión natural cara a cara. Un límite superior en el número de pisos (es decir, el número de oradores permitidos para hablar al mismo tiempo) se fija utilizando una conjetura propuesta en [15]. El trabajo presentado aquí es una continuación de nuestros estudios sobre conferencias basadas en el Protocolo de Inicio de Sesión en [14] y [16]. SIP, definido en [22], es ahora el estándar más popular para implementación de VoIP y ha sido elegido por su fortaleza, facilidad de uso, extensibilidad y compatibilidad. Esta es la razón por la cual estará en el trasfondo de todos los mensajes de control que surgirán implícitamente entre las entidades en nuestra arquitectura. Los mensajes actuales están descritos en [16] y, como tal, no presentamos una descripción completa de ellos aquí. 4. TRABAJO RELACIONADO El estándar SIP definido en el RFC 3261 [22] y en extensiones posteriores como [21] no ofrece servicios de control de conferencias como control de piso o votación y no prescribe cómo debe ser gestionada una conferencia. Sin embargo, SIP se puede utilizar para iniciar una sesión que utilice algún otro protocolo de control de conferencias. La especificación central de SIP soporta muchos modelos para conferencias [26, 23]. En los modelos basados en servidor, un servidor mezcla flujos de medios, mientras que en una conferencia sin servidor, la mezcla se realiza en los sistemas finales. SDP [7] se puede utilizar para definir las capacidades de los medios y proporcionar otra información sobre la conferencia. Ahora consideraremos algunos modelos de conferencia en SIP que han sido propuestos recientemente [23]. Primero, veamos los modelos sin servidor. En la mezcla de extremos del sistema, solo un cliente (SIP UA) maneja la señalización y la mezcla de medios para todos los demás, lo cual claramente no es escalable y causa problemas cuando ese cliente en particular abandona la conferencia. En el modelo de Usuarios que se unen, un árbol crece, ya que cada parte invitada constituye una nueva rama en el camino de distribución. Esto conduce a un número creciente de saltos para las hojas remotas y no es escalable. Otra opción sería utilizar la multidifusión para las videoconferencias, pero actualmente la multidifusión no está habilitada en Internet y solo es posible en una LAN. Entre los modelos basados en servidor, en una conferencia de marcado, los UAs se conectan a un servidor central que maneja todas las mezclas. Este modelo no es escalable ya que está limitado por la potencia de procesamiento del servidor y el ancho de banda de la red. Las conferencias centralizadas ad hoc y los servidores de conferencias de marcado tienen mecanismos y problemas similares. Los modelos híbridos que involucran señalización centralizada y medios distribuidos, con estos últimos utilizando unicast o multicast, plantean problemas de escalabilidad como antes. Sin embargo, una ventaja es que el control de la conferencia puede ser una solución de terceros. La Mezcla Parcial Distribuida, presentada en [18], propone que en caso de limitación de ancho de banda, algunos flujos se mezclan y otros no, manteniendo la interactividad intacta. La pérdida de espacialidad cuando se mezclan y el aumento del ancho de banda cuando no lo hacen son problemas abiertos. Un estudio relacionado [19] del mismo autor propone una arquitectura de conferencias para Entornos Virtuales Colaborativos (CVEs) pero no proporciona el enfoque de escalabilidad sin la disponibilidad de la multidifusión. Teniendo en cuenta las limitaciones de los sistemas de conferencias propuestos, detallaremos ahora nuestra propuesta. 5. ARQUITECTURA DEL SISTEMA Esta sección está dedicada a la descripción de la arquitectura del sistema propuesto. Sin embargo, dado que este documento constituye la continuación de nuestro trabajo iniciado en [14] y ampliado en [16], no presentaremos aquí todos los detalles sobre las entidades propuestas e invitamos a los lectores a consultar los documentos mencionados anteriormente para obtener una descripción completa y detallada. Primero, no restringimos nuestro sistema de conferencias para funcionar solo en conferencias pequeñas, sino en grandes VCEs de audio que tienen cientos (o incluso miles) de usuarios a través de una Red de Área Amplia (WAN) como Internet. Esta perspectiva se deriva de una evaluación de que los VCEs ganarán importancia en el futuro, ya que las conferencias de audio interactivas serán más populares debido a la difusión de la cultura mediática en todo el mundo. Dos aspectos deben ser atendidos al construir un sistema de conferencias VoIP: (i) el front-end, que consiste en el programa de aplicación que se ejecuta en las computadoras de los usuarios finales y (ii) el back-end que proporciona otros programas de aplicación que facilitan las conferencias y la conferencia. Los usuarios participantes se agrupan en varios dominios. Estos dominios son Redes de Área Local (LAN), como redes corporativas o educativas. Esta suposición distribuida requiere soluciones de control y manejo de medios distribuidos, ya que los sistemas centralizados no serían escalables para conferencias tan grandes (ver Sección 4). Más explícitamente, en cada dominio, podemos identificar varios componentes lógicos relevantes de una instalación de conferencias (Fig. 1): Un número arbitrario de usuarios finales (clientes) que pueden participar en como máximo una conferencia de audio a la vez. Cada usuario es la Fig. 1. Ejemplo de conferencia: 3 dominios que contienen las entidades necesarias para que la conferencia pueda tener lugar. Incluidas en un único dominio en un instante dado, pero pueden moverse de un dominio a otro (nomadismo). En nuestro entorno de conferencias, estos clientes son Agentes de Usuario SIP (SIP UAs) regulares, según se define en [22], para lograr interoperabilidad con otros sistemas compatibles con SIP existentes. Estos clientes no son conscientes del entorno complejo que respalda la conferencia, lo cual se destaca a continuación. Un servidor SIP (SIPS) por dominio, encargándose de todos los aspectos de señalización de la conferencia (clientes que se unen, salen, etc.) [16]. En particular, se considera como una implementación física que abarca diferentes roles lógicos, a saber, un Servidor Proxy SIP, un Servidor Registrador SIP, un Servidor de Redirección SIP y un SIP B2BUA (Agente de Usuario de Vuelta a Vuelta) [22]. Esta implementación física permite el manejo de mensajes SIP entrantes/salientes por una u otra entidad lógica según sea necesario. SIPS está encargado de mantener un servicio total y tiene muchas ventajas, como (a) funciona como una entidad centralizada que puede hacer un seguimiento de las actividades de los UAs en una conferencia; (b) puede realizar todo el cambio para proporcionar funciones de PBX; (c) puede localizar a los UAs e invitarlos a una conferencia; (d) también puede encargarse de la facturación. Los SIPS en diferentes dominios se comunican entre sí utilizando mensajes SIP como se describe en [16]. Si la carga en un SIPS particular es demasiado pesada, puede crear otro SIPS en el mismo dominio para que la carga se comparta. Se crea un Servidor de Conferencias Maestro (M-CS) (simplemente un Servidor de Conferencias (CS)) para cada conferencia por el SIPS local cuando una conferencia comienza. Este servidor se utilizará para manejar paquetes de medios para los clientes del dominio. Su mecanismo será descrito en la siguiente sección. El M-CS podrá crear una jerarquía de CSs dentro de un dominio agregando uno o más CSs esclavos (S-CSs) para dar cabida a todos los clientes activos y prevenir su propia saturación al mismo tiempo. Veremos este mecanismo con cierto detalle en la secuela. Las entidades descritas aquí son exhaustivas y se ajustan a la filosofía del SIP. Por lo tanto, el uso de SIP hace que esta arquitectura sea más útil e interoperable con cualquier otro cliente o servidor SIP. PROBLEMAS ALGORÍTMICOS 6.1 Seleccionar los flujos similares a SipConf en [27], un Servidor de Conferencias (CS) [17] tiene la función de soportar la conferencia; es responsable de manejar los flujos de audio utilizando RTP. También puede duplicarse para convertir formatos de transmisión de audio para un cliente dado si es necesario y puede funcionar como Traductores/Mezcladores de la especificación RTP detrás de cortafuegos. Hemos basado el diseño de nuestro CS en el Procesador Multipunto (MP) H.323 [9]. En resumen, el MP recibe flujos de audio de los puntos finales involucrados en una conferencia multipunto centralizada o híbrida, los procesa y los devuelve a los puntos finales. Un procesador de señales de audio prepara N salidas de audio NMax a partir de M flujos de entrada después de la selección, mezcla o ambas. La mezcla de audio requiere decodificar el audio de entrada a señales lineales (PCM o analógicas), realizar una combinación lineal de las señales y volver a codificar el resultado en un formato de audio apropiado. El procesador de señales puede eliminar o atenuar algunas de las señales de entrada para reducir el ruido y los componentes no deseados. Fig. 2. \n\nFig. 2. El diagrama esquemático de un CS. La limitación de H.323 es que no aborda la escalabilidad de una conferencia. La arquitectura propone una topología en cascada o en cadena de margaritas [10], la cual se puede demostrar que no puede escalar para una conferencia grande. Un CS atiende a muchos clientes en la misma conferencia. Por lo tanto, solo maneja una conferencia a la vez. Varios CS pueden coexistir en un dominio, como cuando hay varias conferencias en curso. Los mensajes relacionados con la señalización de los CSs se tratan en [11]. El funcionamiento de un CS se ilustra en la Fig. 2: Para cada intervalo de mezcla, CS 1 elige los mejores NMax paquetes de audio de los M1 (utilizando un criterio denominado Número de Volumen, descrito en la siguiente subsección). Puede posiblemente recibir y enviar estos a CSs 2 a P. El conjunto de paquetes enviados se denota como AotrosCSs. En el mismo intervalo de mezcla, también recibe los mejores paquetes de audio NMax (de un posible M2) de CS 2, de manera similar a los mejores NMax (de un posible MP) de CS P. Para simplificar, ignoramos el retardo de propagación entre los CSs, que de hecho se puede tener en cuenta; está más allá del alcance de esta presentación. El conjunto de paquetes recibidos se denota como FromOtherCSs. Finalmente, selecciona los mejores paquetes NMax del conjunto {ToOtherCSs unión FromOtherCSs} y envía estos paquetes a su propio grupo. Se puede observar que el conjunto {ToOtherCSs unión FromOtherCSs} es el mismo en todos los CSs. Esto garantiza que cualquier cliente en la conferencia finalmente reciba el mismo conjunto de paquetes para mezclar. Por lo tanto, todos los clientes obtienen una vista común de la conferencia. De manera similar, para cada intervalo de tiempo (tiempo de paquete), se selecciona un subconjunto, F, de todos los clientes (utilizando el mismo criterio) del conjunto de paquetes de todos los otros CS más los NMax clientes seleccionados localmente. Sus paquetes se mezclan y se reproducen en los clientes. Según [15], la cardinalidad de F, |F| es NMax y está fijada en tres. En nuestra configuración de conferencias, la selección la realiza el Servidor Maestro de Conferencias (M-CS), que interviene exclusivamente en el manejo de medios. Ten en cuenta que aunque la especificación de SIP permite la comunicación directa de medios de usuario a usuario en una llamada uno a uno, también es posible utilizar el Servidor de Conferencias para llamadas de dos partes, especialmente porque es entonces más funcional crear una conferencia real agregando un tercero y posteriormente más participantes. Existen casos en los que la capacidad de procesamiento de un M-CS se ve superada, ya que puede tener demasiados paquetes, tanto de dominios locales como de dominios remotos, para procesar. En ese caso, el M-CS creará uno o varios S-CS (Fig. 6) y transferirá a sus propios clientes, así como a los nuevos clientes, a ellos. En esta configuración, el algoritmo descrito anteriormente se modificará ligeramente, ya que los paquetes de audio irán de los clientes a su S-CS dedicado, que seleccionará NMax paquetes para enviar al M-CS local, que luego seleccionará NMax paquetes de todos sus S-CS en el dominio antes de enviarlos a los dominios remotos. Los paquetes entrantes de otros dominios serán recibidos por el M-CS, se seleccionarán NMax de ellos y se enviarán directamente a los clientes del dominio, evitando los SCSs. Este cambio implica que existen como máximo tres entidades intermedias para cada paquete de audio, en lugar de dos en la configuración convencional. Dado que el salto adicional ocurre dentro de la LAN que se supone tiene una conectividad de alta velocidad, consideramos que no debería impedirnos usar esta jerarquía de CS cuando sea necesario hacerlo. 6.2 Número de Sonoridad (LN) Una pregunta básica que debe responder el CS es la siguiente. En un intervalo de mezcla, ¿cómo debería elegir NMax paquetes de los M que podría recibir? Una forma es clasificar los paquetes M recibidos según sus energías y elegir los NMax mejores. Sin embargo, esto suele considerarse insuficiente porque las fluctuaciones aleatorias en las energías de los paquetes pueden provocar una mala calidad de audio. Esto indica la necesidad de una métrica diferente de meras energías individuales de paquetes. El medidor debe tener las siguientes características [12]: • Un hablante (ocupante del suelo) no debe ser interrumpido por un pico en la energía del paquete de otro hablante. Esto implica que la historia del discurso de un hablante debería tener cierto peso. Esto se suele llamar Persistencia o Resaca. • Un participante que quiera interrumpir a un orador tendrá que (i) hablar en voz alta y (ii) seguir intentándolo por un tiempo breve. En una conferencia presencial, el lenguaje corporal a menudo indica la intención de interrumpir. Pero en una conferencia a ciegas en discusión, la intención de un participante de interrumpir puede ser transmitida de manera efectiva a través de LN. Se debe garantizar un mecanismo de control de piso habilitado para cortar a un orador de manera contundente. Estos requisitos son cumplidos por el Número de Volumen [12], que cambia suavemente con el tiempo para que la selección (adición y eliminación) de clientes para la conferencia sea elegante. LN (= ) es una función de la amplitud de la corriente de audio actual más la actividad y amplitud en una ventana específica en el pasado. Fig. 3. \n\nFig. 3. Las diferentes ventanas utilizadas para el cálculo de LN se actualizan en una base de paquete por paquete. El parámetro básico utilizado aquí es la amplitud del paquete, que se calcula como la raíz cuadrada de la media cuadrática (rms) de las energías en las muestras de audio de un paquete, y se denota como XK. Tres ventanas están definidas como se muestra en la Fig. 3. El nivel de amplitud actual del altavoz se encuentra calculando el promedio móvil de la amplitud del paquete (XK) dentro de una ventana llamada Ventana de Pasado Reciente, que va desde el instante presente hasta algún momento pasado. La actividad pasada del hablante se encuentra calculando el promedio móvil de la amplitud del paquete (XK) dentro de una ventana llamada Ventana de Pasado Lejano, que comienza en el punto donde termina la ventana de Pasado Reciente y se extiende hacia atrás en el pasado por un intervalo predefinido. La actividad del hablante en el pasado se encuentra con una ventana llamada Horizonte de Actividad, que abarca la ventana del pasado reciente, así como la ventana del pasado lejano y más allá si es necesario. Aunque la contribución del horizonte de actividad parece similar a la contribución de las ventanas del pasado reciente y pasado lejano, la actividad pasada se calcula de manera diferente a partir de la ventana del horizonte de actividad. Define las cantidades durante estos tres intervalos como L1, L2 y L3. L1 cuantifica la actividad de habla del Pasado Reciente, L2 la actividad de habla del Pasado Lejano y L3 proporciona un número correspondiente a la actividad de habla en la ventana del Horizonte de Actividad, cuantificando qué tan activo estuvo el hablante en los últimos intervalos. L3 produce una cantidad que es proporcional a la fracción de paquetes que tienen energías por encima de un umbral predefinido (Ec. 3). El umbral es invariable entre clientes. ∑ +− = = 1 1 1 RPP P Wt tK K RP X W L (1) ∑ +−− −= = 1 2 1 DPRPP RPP WWt WtK K DP X W L (2) ∑ +− = ≥= 1 }{3 * 1 AHP P K Wt tK X AH I W L θθ (3) Donde siI KX 1}{ =≥θ θ≥KX = de lo contrario,0 El umbral es una constante. Se establece en el 10-20 por ciento de la amplitud de las muestras de voz de un paquete en nuestra implementación aquí. El número de intensidad λ para el instante de tiempo presente (o el paquete presente) se calcula como, 332211 *L*L*L αααλ ++= (4) Aquí 1, 2 y 3 son elegidos de tal manera que: 0< 1, 2 y 3=1- 1) Aquí, 1 es el peso dado al habla del pasado reciente, 2 es el peso dado al habla del pasado lejano y 3 es el peso dado a la actividad del habla en la ventana de horizonte de actividad considerada. 6.3 Seguridad, Vida y Equidad El parámetro λ tiene un efecto significativo en la evaluación de la ventana. Después de que un conferenciante se queda en silencio, otro puede tomar la palabra. Además, dado que hay más de un canal, la interrupción está habilitada. Un conferenciante ruidoso es más probable que sea escuchado debido a un λ elevado. Esto garantiza equidad para todos los conferenciantes. Después de todo, incluso en una conferencia presencial, un orador más vocal capta una atención especial. Todas estas características deseables están integradas en la LN. Una discusión exhaustiva sobre la selección de los diversos parámetros y la dinámica de LN están fuera del alcance de este documento. 6.4 Algoritmo de selección utilizando LN Siguiendo los desarrollos en las subsecciones 6.1 y 6.2, presentamos el algoritmo simple que se ejecuta en cada Servidor Maestro-Conferencia (Algoritmo 1). Este algoritmo se basa en las discusiones de la sección 6.1. El conjunto F, único a nivel mundial, se encuentra utilizando este procedimiento. Repetir para cada intervalo de tiempo en cada M-CS { 1. Obtener todos los paquetes de los clientes que le pertenecen. 2. Encuentra como máximo NMax clientes que tengan un PD[LPXP RXW RI 0 &OLHQWV LQ LWV GRPDLQ\u0011 3. Almacene una copia de los paquetes de esos clientes NMax en la base de datos DB1. Envía estos paquetes NMax a otros M-CSs (en Unicast o Multicast, dependiendo de la configuración). 5. De igual manera, recibir paquetes de todos los demás M-CSs y almacenarlos en la base de datos DB2. 6. Ahora compara los paquetes en DB1 y DB2 en WKH EDVLV RI DQG VHOHFW D PD[LPXP RI NMax entre ellos (para formar el conjunto F) que deberían ser reproducidos en cada Cliente. 7. Enviar los paquetes NMax en el conjunto F a los Clientes en su dominio. 8. Mezcla estos paquetes de audio NMax en el conjunto F después de linearizarlos y envíalos a Clientes sin capacidad en el dominio. Algoritmo 1. Algoritmo de selección El mecanismo propuesto aquí también se muestra en la Fig. 6, donde tiene lugar una única conferencia entre tres dominios. Los clientes sombreados son los seleccionados en sus dominios locales; sus flujos de audio serán enviados a otros CSs. 7. PROBLEMAS DE DESPLIEGUE Ahora analizamos los problemas de despliegue asociados con la gestión de conferencias. ¿Cómo deben organizarse los dominios para maximizar el número de participantes que pueden unirse? Para abordar esto, definimos algunos parámetros útiles.  Sea d el número de dominios diferentes en los que hay clientes activos en una conferencia dada.  Sea Mi el número de clientes activos presentes en el dominio i (di ≤≤1) en una conferencia dada. El número total de clientes activos en la conferencia es por lo tanto ∑= = d i iMM 1. Sea C el número máximo de flujos de audio que un Servidor de Conferencias puede manejar en un tiempo de paquete, también llamado capacidad. C se establece de acuerdo con la potencia de procesamiento del CS más débil en la conferencia, pero como no se puede asumir que lo conocemos de antemano, se puede establecer de acuerdo con algún requisito mínimo del sistema que una máquina debe cumplir para participar en una conferencia. Deje que NMax sea el número de flujos de salida que un CS debe enviar a otros CS en dominios remotos (ver sección 6.1). Estableceremos NMax = 3 (=|F|), según [15]. El problema de optimización consiste en encontrar el valor de d que maximiza el número total de clientes Mi atendidos por un CS en un dominio con capacidad C. Primero consideramos el caso en el que la capacidad no es excedida (el CS existente no está sobrecargado), y luego procedemos al caso en el que es necesario crear más CS cuando un CS único está sobrecargado. Suponemos que los clientes están distribuidos de manera equitativa entre los dominios, ya que no tenemos información para asumir una distribución a priori de los clientes. Podemos especificar únicamente un límite superior en el número de clientes aceptables, dado el número de dominios activos d. 7.1 Conferencias con solo un nivel de CSs En esta subsección, consideramos que tenemos solo un CS, es decir, un único M-CS en cada dominio. Por lo tanto, no se puede sobrecargar. Consideramos que el sistema funciona tal como se describe en la sección 6.1: Los clientes envían sus paquetes de audio a su CS local, que selecciona NMax flujos antes de enviarlos a otros CS. De manera paralela, también recibe NMax transmisiones para cada otro CS antes de tomar una decisión sobre cuáles de las NMax transmisiones serán seleccionadas, enviadas y reproducidas en cada cliente individual. Para la estabilidad del sistema, cualquier servidor de conferencias debería ser capaz de manejar a sus clientes locales además de los paquetes de audio de otros dominios. Claramente entonces, la siguiente desigualdad debe cumplirse para todo dominio: )1( −⋅+≥ dN d M C Max (5) El caso límite de (5) (tomando la igualdad) toma la forma 2 )( dNdNCM MaxMax ⋅−⋅+= (6) Para optimizar d con respecto a M, establecemos 0)(2 =+−⋅⋅= ∂ ∂ MaxMax NCdN d M (7) obteniendo     ⋅ + = Max Max N NC d 2 (8) ([ ]* = Redondeando al entero más cercano) y por lo tanto, M de (6). Tabla 1. Valores de d y M calculados para algunos valores de C con NMax = 3. En la Tabla 1, se presentan los valores de d y M que fueron calculados utilizando (8) y (6) con NMax = 3. Vemos que los valores de d y M, al depender de C, se basan en el CS más débil. Vemos que hay un equilibrio entre M y d. Podríamos admitir más dominios en la conferencia, pero a costa de restringir el número total de clientes M en la conferencia. Durante la implementación y prueba de los Servidores de Conferencia en un Pentium III 1.4 GHz con Windows NT, pudimos establecer C=300. Pero con la llegada de computadoras más rápidas (> 3 GHz), uno puede fácilmente establecer C a valores más altos y determinar d y M en consecuencia. La Fig. 4 muestra un mapa de contorno y la Fig. 5, una malla 3D que muestra soluciones optimizadas para CSs de diferentes capacidades. Estos nos llevan a maximizar el número de dominios, y por lo tanto, a maximizar el número total de clientes basado en la capacidad de varios CSs. En la Fig. 4, las curvas individuales representan el número total de clientes objetivo, y seleccionamos un valor más bajo de d, para la capacidad C, para el objetivo M con el fin de reducir el tráfico en la WAN. La Fig. 5 representa una perspectiva diferente de los mismos datos en 3D. Fig. 4. \n\nFig. 4. Diagrama de contorno de la capacidad versus el número óptimo de dominios para varios tamaños de conferencias 7.2 Conferencias con Dos Niveles de CSs. Ahora considerando el caso en el que el número de clientes en un dominio particular es demasiado grande, es decir, d M Mi ≥ (9), se debe evitar la denegación de servicio para nuevos clientes debido a la sobrecarga del Servidor de Conferencias. Este problema se puede resolver introduciendo un segundo nivel de CSs dentro del dominio dado, como se muestra en la Figura 6. El M-CS existente crea un CS esclavo (S-CS) que puede manejar hasta C usuarios finales y al que transfiere todos sus clientes activos. Aquí, el sistema funciona de manera diferente como se describe en la sección 6.1: Los clientes envían sus paquetes de audio a su S-CS local, que selecciona NMax flujos, antes de enviarlos a un M-CS local, que procederá de la misma manera, antes de enviar NMax flujos a los otros dominios. Cada S-CS recién creado debe ejecutarse en una máquina separada. El M-CS tiene que crear más S-CSs si el número de clientes activos supera C durante el transcurso de la conferencia después de la transferencia. Con este mecanismo, el M-CS podrá crear un máximo de     −⋅− = Max Max N dNC U )1( S-CSs, (10) ya que debe manejar 3 (= NMax) paquetes para cada S-CS local y 3 (= NMax) paquetes de cada otro dominio remoto. Podemos entonces calcular el número máximo teórico de clientes activos CUMi ⋅= en cada dominio, así como M, para toda la conferencia como CUdM ⋅⋅= . Fig. 5. Gráfico 3D de Capacidad versus Número óptimo de dominios para varios tamaños de conferencia. Por supuesto, se podría crear un tercer nivel en la jerarquía, lo que daría la posibilidad de alojar aún más clientes. Esto puede ser innecesario ya que el número de posibles clientes es lo suficientemente grande con dos niveles. 8. DISCUSIÓN DE RENDIMIENTO Ahora analizamos el rendimiento del algoritmo presentado en la subsección 6.3, es decir, el que se encarga del intercambio de paquetes de audio entre los diferentes dominios. Ten en cuenta que los paquetes que están en tránsito dentro de la LAN aprovechan la mayor capacidad (generalmente junto con capacidades de multidifusión) y por lo tanto no requieren un análisis de rendimiento. Por lo tanto, debemos examinar solo los paquetes RTP a través de la WAN, es decir, entre los M-CS participantes. Dado que cada M-CS de un dominio solo enviará NMax de los d paquetes M a los otros CS (MaxN d M >>), el ancho de banda utilizado por la aplicación en una WAN está limitado por la siguiente expresión. El número total de paquetes de audio que transitan por la WAN para cada intervalo de tiempo es ∑ ∑= ≠=        d i d ijj MaxN 1 ,1, lo cual es cuadrático en el número de dominios (es decir, O(d2)). Sin embargo, es independiente del número total de clientes activos. Esto no habría sido el caso si todos los paquetes se hubieran enviado por la red en cada intervalo de tiempo. El ahorro es tremendo. Sin embargo, se podría argumentar que enviar tres paquetes hacia y desde todos los dominios es un desperdicio de recursos, ya que la mayoría de estos flujos no serán seleccionados. Si solo hay un cliente activo, seleccionar un subconjunto de clientes en ese dominio es innecesario. Los algoritmos pesimistas y optimistas presentados en la secuela tienen como objetivo reducir aún más el tráfico aprovechando la naturaleza lenta y variable de la LN. 8.1 Algoritmo pesimista Consideremos un escenario en el que el LN más bajo (llamado LNt) de los tres flujos seleccionados globalmente (conjunto F de la Sección 6.1) excede el LN del flujo más dominante de un dominio. Evidentemente, las posibilidades de que los dos próximos flujos dominantes de ese dominio sean seleccionados para F en el próximo período de paquetes son menores. Aquí enviamos este flujo más dominante y retenemos los otros dos. Puede haber un error en la selección única en todos los dominios por un solo período de paquete. Como LN varía lentamente, el error se corregiría automáticamente en un período (ranura) de paquete posterior. En este algoritmo, hay al menos un flujo en cada período. El tráfico de red neto en un período de paquetes en el mejor caso es )1( −⋅ dd, es decir, )( 2 dO utilizando unicast, en lugar de MaxNdd ⋅−⋅ )1(. Se puede ahorrar un ancho de banda considerablemente valioso utilizando esta heurística. La complejidad del tráfico resultante se reduce de O(d2) a O(d) en redes habilitadas para multidifusión. Inicializar LNt = 0 en un M-CS/S-CS A. En el primer intervalo de tiempo (tiempo de paquete), cada CS envía las primeras NMax secuencias (basadas en su LN) a todos los demás CSs. En cada M-CS/S-CS y para cada tiempo de paquete: B. Encuentra el valor del LN más bajo de los flujos NMax seleccionados globalmente (conjunto F) del intervalo de tiempo anterior. Establece LNt con este valor. C. En cada dominio de CS, selecciona los NMax flujos locales que tengan el valor máximo de LN (conjunto ToOtherCSs). D. Seleccionar los flujos que tengan LN > LNt. Si hay >= NMax flujos con LN > LNt, entonces enviar los mejores NMax a otros CSs. EN OTRO CASO, si hay (NMax-1) flujos con LN>LNt, enviar los mejores (NMax-1) más el que esté por debajo de LNt (es decir, los mejores NMax) a otros CSs. EN OTRO CASO, si hay (NMax-2) flujos con LN>LNt, entonces enviar los mejores (NMax-2) más el que esté por debajo de LNt (es decir, los mejores (NMax-1)) a otros CSs. ... EN OTRO CASO, si NO hay flujos con LN>LNt, entonces enviar el mejor flujo a otros CSs. Los paquetes enviados en el paso D forman DB1. Los paquetes recibidos de otros CSs forman DB2. F. Para este intervalo de tiempo, encuentra flujos globales NMax basados en LN de DB1 y DB2 (conjunto F) G. Envía el conjunto F a los clientes en su dominio. Actualiza LNt para el próximo período. Algoritmo 2. Algoritmo pesimista para reducir el número de paquetes enviados por Internet. Fig. 6. \n\nFig. 6. Ejemplo de una jerarquía de 2 niveles de Servidores de Conferencias; los Clientes sombreados son los seleccionados por el M-CS y serán enviados a otros CSs de dominios. En este algoritmo, el ahorro en tráfico se logra a expensas de relajar la condición de formación del conjunto F globalmente único. Sin embargo, las discrepancias en los flujos seleccionados en diferentes dominios permanecen por un corto período de tiempo dependiendo del retraso en el transporte entre dos dominios. Incluso para un retraso total de 400 ms, con solo 10 ranuras de tiempo de paquete, se pierde la unicidad. Esta duración en una conversación interactiva en tiempo real no es perceptible por el oyente. En el caso de que haya una broma y todos se rían, entonces habría un aumento repentino en el número de paquetes y estaría limitado por MaxN)d(O 2 durante un corto período. 8.2 Algoritmo Optimista El tráfico puede reducirse aún más. El esquema en el siguiente algoritmo (Algoritmo 3) retiene todos los flujos que tienen un valor de LN menor que el mínimo de los tres en el conjunto F. Podemos encontrar los tres flujos correctos y únicos después de unos cuantos intervalos de tiempo, dependiendo del retraso de transporte entre los dominios. Dado que el período del paquete es del orden de 40 ms, el error en la selección es imperceptible. El número de flujos en la red en este caso siempre está restringido a NMax (=3). Incluso sin Detección de Actividad de Voz (VAD), en el mejor de los casos no habrá más de tres flujos en la red, por lo tanto, el tráfico total es constante. Una repentina oleada de tráfico, como se describe en la sección 8.1, es un caso particular. Estas ventajas se deben a la explotación de las características de LN. Inicializar LNt = 0 en un M-CS/S-CS A. En el primer intervalo de tiempo (tiempo de paquete), cada CS envía las primeras NMax secuencias (basadas en su LN) a todos los demás CS. En cada M-CS/S-CS y para cada tiempo de paquete: B. Encuentra el valor del LN más bajo de los flujos seleccionados globalmente de NMax (conjunto F) del intervalo de tiempo anterior. Establece LNt con este valor. C. En cada dominio de CS, selecciona los NMax flujos locales que tengan el valor máximo de LN (conjunto ToOtherCSs). D. Selecciona los flujos que tengan LN > LNt SI hay >= NMax flujos con LN > LNt, entonces envía los mejores NMax a otros CSs. EN OTRO CASO, si hay (NMax-1) flujos con LN>LNt, entonces enviar los primeros (NMax-1) y ver E. EN OTRO CASO, si hay (NMax-2) flujos con LN>LNt, entonces enviar los primeros (NMax-2) y ver E. ... EN OTRO CASO, si NO hay flujos con LN>LNt, entonces no enviar ningún flujo. E. Excepciones: SI el flujo que estaba en F en el último intervalo pertenece a este CS, entonces selecciona y envía ese flujo incluso si su LN es ahora < LNt. (Nota: esto ocurre solo en ese CS que tenía el flujo que fue el último de los tres en el período de paquetes anterior). Los paquetes enviados en los pasos D y E forman DB1. Los paquetes recibidos de otros CSs forman DB2. Para este intervalo de tiempo, encuentra los flujos globales NMax basados en LN de DB1 y DB2 (conjunto F). H. Envíe el conjunto F a los clientes en su dominio. Actualiza LNt para el próximo período. Algoritmo 3. Algoritmo optimista para reducir el número de paquetes enviados a través de Internet. Además, cuando se utiliza VAD [13], se reduciría aún más el tráfico al enviar solo la parte del encabezado del paquete RTP y no todo el paquete, con el fin de mantener actualizada la LN en todo momento. El tráfico aquí en este caso es O(NMax) para multicast y O(d) para unicast. Vemos que los algoritmos anteriores ahorran ancho de banda y cálculos en cada CS, y conducen a una arquitectura escalable con múltiples CS principalmente porque los clientes están agrupados en dominios. El ancho de banda necesario no depende del número total de clientes activos. Como el CS siempre elige a los tres mejores clientes de entre todos los clientes asignados en el dominio, la adición de nuevos clientes a la conferencia existente no causará ningún problema de escalabilidad. 8.3 Disponibilidad de Multidifusión En la arquitectura propuesta, no se hizo ninguna suposición sobre la disponibilidad de soporte de multidifusión de la red. El tráfico se reducirá aún más si la multidifusión está disponible a través de WAN. Es sencillo demostrar que el orden del tráfico tiende a ser O(d) en lugar de O(d2). Esta es una aproximación ya que el ahorro en la multidifusión también depende de la topología. El análisis se realizó para el caso en el que la multidifusión no está disponible (una suposición realista en el Internet de hoy en día). La ventaja de esta configuración es que podemos usarla incluso si la multidifusión está parcialmente disponible. Podemos instruir a los CSs durante la fase de configuración para enviar paquetes unicast a aquellos CSs que no pueden recibir paquetes multicast, mientras que los CSs en enrutadores habilitados para multicast pueden intercambiar paquetes en una dirección multicast. Las estructuras de datos y objetos de conferencia dentro de una CS se encuentran en [14]. Fig. 7. \n\nFig. 7. Interfaz de usuario para establecer el peso de las corrientes de audio NMax (establecer la barra de auto a cero evita el eco). Mejora de calidad 8.4 La mejora observada en la calidad percibida del servicio de conferencias se debe a: (1) limitar el número de oradores concurrentes a un número bajo, como tres. Generalmente, en una conferencia, si hablan más de dos participantes se pierde la inteligibilidad. El análisis conversacional demuestra que en tal caso habría un mecanismo de reparación [15]. (2) Retraso: La transmisión de audio entre dos clientes pasará como máximo por dos servidores centrales, reduciendo así el retraso de extremo a extremo. Para una conferencia grande puede haber tres CSs, sin embargo, un salto está dentro del dominio incurriendo en un retraso insignificante. (3) Dado que las transmisiones se mezclan solo en los clientes, puede haber una mezcla personalizada de las transmisiones. La sintonización individual de la mezcla con pesos preserva el espacialismo. La Fig. 7 muestra la interfaz de usuario para lo mismo. El eco al seleccionar la auto-transmisión se puede evitar reduciendo el peso. Sin embargo, la retroalimentación ayuda a asegurar al hablante de que está siendo escuchado por todos. CONCLUSIÓN En este artículo, hemos presentado una discusión sobre un entorno de conferencias virtuales solo de voz. Hemos argumentado que la naturaleza distribuida de la implementación aquí la hace escalable. La interactividad se logra adaptando un esquema reciente de selección de flujo basado en el Número de Sonoridad. Además, incorporamos un resultado de un trabajo más reciente [15] donde se ha demostrado la suficiencia de <br>tres hablantes simultáneos</br>. Por lo tanto, hay una utilización significativamente efectiva del ancho de banda. Un flujo mixto se reproduce en cada cliente; cada cliente puede elegir tener una mezcla personalizada ya que la mezcla se realiza en el terminal local de cada cliente. Estos permiten que el discurso improvisado en una videoconferencia virtual a través de VoIP sea una realidad, como en una conferencia presencial real. La compatibilidad está asegurada gracias al uso de SIP, el protocolo de señalización más buscado. Para garantizar un rendimiento satisfactorio, no exigimos la disponibilidad de multidifusión, pero la utilizamos si está disponible. El tráfico en la WAN (Internet) está limitado por arriba por el cuadrado del número de dominios, --además se reduce aún más mediante el uso de algoritmos heurísticos-- lo cual está muy por debajo del número total de clientes en la conferencia. Esto se debe al uso de un Servidor de Conferencias local para cada dominio. Las técnicas de VAD ayudan a reducir aún más el tráfico. El uso del estándar SIP para la señalización hace que esta solución sea altamente interoperable. Hemos implementado una aplicación de CS en una red de campus. Creemos que esta nueva generación de entornos de conferencias virtuales ganará más popularidad en el futuro, ya que su facilidad de implementación está garantizada gracias a las tecnologías fácilmente disponibles y los marcos escalables. REFERENCIAS [1] L. Aguilar et al., Arquitectura para un Sistema de Teleconferencia Multimedia, en Actas de ACM SIGCOMM, Ago 1986, pp. 126-136. [2] Carsten Bormann, Joerg Ott et al., Protocolo de Control de Conferencias Simple, Borrador de Internet, Dic. 1996. [3] M. Decina y V. Trecordi, Voz sobre Protocolo de Internet y Comercio Electrónico Asistido por Humanos, IEEE Comm. Revista, septiembre de 1999, pp. 64-67. [4] Eckehard Doerry, Una comparación empírica de la interacción copresente y mediada tecnológicamente basada en la ruptura comunicativa, Tesis de doctorado, Escuela de Graduados de la Universidad de Oregón, 1995. [5] H. P. Dommel y J.J. Garcia-Luna-Aceves, Control de piso para conferencias y colaboración multimedia, J. Sistemas Multimedia, Vol. 5, No. 1, enero de 1997, pp. 23-38. [6] Amitava Dutta-Roy, Reuniones virtuales con videoconferencias de escritorio, IEEE Spectrum, julio de 1998, pp. 47-56. [7] M. Handley y V. Jacobson, SDP: Protocolo de Descripción de Sesiones, RFC 2327, IETF, abril de 1998. [8] M. Handley, J. Crowcroft et al., Conferencias muy grandes en Internet: la arquitectura de conferencias multimedia en Internet, Revista de Redes de Computadoras, vol. 31, No. 3, febrero de 1999, pp. 191-204. [9] Rec. ITU-T. H.323, Sistemas de Comunicaciones Multimedia basados en Paquetes, vol. 2, 1998. [10] P. Koskelainen, H. Schulzrinne y X. Wu, Un Marco de Control de Conferencias basado en SIP, NOSSDAV02, mayo de 2002, pp. 53-61. [11] R Venkatesha Prasad et al., Protocolo de Control para Soporte de Conferencias de Audio VoIP, Conferencia Internacional sobre Tecnología de Comunicación Avanzada, Mu-Ju, Corea del Sur, febrero de 2001, pp. 419-424. [12] R Venkatesha Prasad et al., Adición y Eliminación Automáticas de Clientes en Conferencias VoIP, 6º Simposio IEEE sobre Computadoras y Comunicaciones, julio de 2001, Hammamet, Túnez, pp. 386-390. [13] R Venkatesha Prasad, H S Jamadagni, Abjijeet, et al Comparación de Algoritmos de Detección de Actividad de Voz, 7º Simposio IEEE sobre Computadoras y Comunicaciones. Julio de 2002, Sicilia, Italia, pp. 530-535. [14] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, Una Conferencia VoIP Distribuida Escalable utilizando SIP, Actas del 8º Simposio de Computadoras y Comunicaciones de IEEE, Antalya, Turquía, junio de 2003. [15] R Venkatesha Prasad, H S Jamadagni y H N Shankar, Sobre el Problema de Especificar el Número de Pisos en una Conferencia Solo de Voz, Por aparecer en IEEE ITRE 2003. [16] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, Una Propuesta para Conferencias Distribuidas en SIP utilizando Servidores de Conferencias, Por aparecer en las Actas de MMNS 2003, Belfast, Reino Unido, septiembre de 2003. [17] R. Venkatesha Prasad, H.S. Jamadagni, J. Kuri, R.S. Varchas, un soporte de conferencias VoIP distribuido que utiliza el número de sonoridad, Tech. Rep. TR-CEDT-TE-03-01 [18] M. Radenkovic et al, Servicio de audio escalable y adaptable para apoyar el trabajo colaborativo y el entretenimiento a través de Internet, SSGRR 2002, LAquila, Italia, enero de 2002. [19] M. Radenkovic, C. Greenhalgh, S. Benford, Problemas de implementación para el soporte de audio multiusuario en CVEs, ACM VRST 2002, noviembre de 2002, pp. 179-185. [20] Srinivas Ramanathan, P. Venkata Rangan, Harrick M. Vin, Diseñando arquitecturas de comunicación para la colaboración multimedia interorganizacional, Journal of Organizational Computing, 2 (3&4), pp.277-302, 1992. [21] A. B. Roach, Notificación de Eventos Específicos del Protocolo de Inicio de Sesión (SIP), RFC 3265, IETF, junio de 2002. [22] J. Rosenberg, H. Schulzrinne et al., SIP: Protocolo de Inicio de Sesión, RFC 3261, IETF, junio de 2002. [23] J. Rosenberg, H. Schulzrinne, Modelos para Conferencias de Múltiples Partes en SIP, Borrador de Internet, IETF, julio de 2002. [24] H. Schulzrinne et al., RTP: un protocolo de transporte para aplicaciones en tiempo real, RFC 1889, IETF, enero de 1996. [25] Lisa R. Silverman, Llegada a la Madurez: Soluciones de Conferencias que Reducen Costos Corporativos, Documento Técnico, www.imcca.org/wpcomingofage.asp [26] Kundan Singh, Gautam Nair y Henning Schulzrinne, Conferencias Centralizadas utilizando SIP, Actas del 2do Taller de IP-Telefonía (IPTel), abril de 2001. [27] D. Thaler, M. Handley y D. Estrin, Arquitectura de Asignación de Direcciones de Multidifusión en Internet, RFC 2908, IETF, septiembre de 2000. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "three simultaneous speaker sufficiency": {
            "translated_key": "suficiencia de tres altavoces simultáneos",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Deployment Issues of a VoIP Conferencing System in a Virtual Conferencing Environment R. Venkatesha Prasad i Richard Hurni ii H.S.",
                "Jamadagni iii H.N.",
                "Shankar iv i, iii Centre for Electronics Design and Technology Indian Institute of Science, Bangalore, India Telephone: +91 80 360 0810 i, iii {vprasad, hsjam}@cedt.iisc.ernet.in ii hurni@ieee.org iv hn_shankar@yahoo.com ABSTRACT Real-time services have been supported by and large on circuitswitched networks.",
                "Recent trends favour services ported on packet-switched networks.",
                "For audio conferencing, we need to consider many issues - scalability, quality of the conference application, floor control and load on the clients/servers - to name a few.",
                "In this paper, we describe an audio service framework designed to provide a Virtual Conferencing Environment (VCE).",
                "The system is designed to accommodate a large number of end users speaking at the same time and spread across the Internet.",
                "The framework is based on Conference Servers [14], which facilitate the audio handling, while we exploit the SIP capabilities for signaling purposes.",
                "Client selection is based on a recent quantifier called Loudness Number that helps mimic a physical face-to-face conference.",
                "We deal with deployment issues of the proposed solution both in terms of scalability and interactivity, while explaining the techniques we use to reduce the traffic.",
                "We have implemented a Conference Server (CS) application on a campus-wide network at our Institute.",
                "Categories and Subjects Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - Client / Server, distributed applications.",
                "General Terms Algorithms, Performance, Design, Theory. 1.",
                "INTRODUCTION Todays Internet uses the IP protocol suite that was primarily designed for the transport of data and provides best effort data delivery.",
                "Delay-constraints and characteristics separate traditional data on the one hand from voice & video applications on the other.",
                "Hence, as progressively time-sensitive voice and video applications are deployed on the Internet, the inadequacy of the Internet is exposed.",
                "Further, we seek to port telephone services on the Internet.",
                "Among them, virtual conference (teleconference) facility is at the cutting edge.",
                "Audio and video conferencing on Internet are popular [25] for the several advantages they inhere [3,6].",
                "Clearly, the bandwidth required for a teleconference over the Internet increases rapidly with the number of participants; reducing bandwidth without compromising audio quality is a challenge in Internet Telephony.",
                "Additional critical issues are: (a) packet delay, (b) echo, (c) mixing of audio from selected clients, (d) automatic selection of clients to participate in the conference, (e) playout of mixed audio for every client, (f) handling clients not capable of mixing audio streams (such clients are known as dumb clients), and (g) deciding the number of simultaneously active clients in the conference without compromising voice quality.",
                "While all the above requirements are from the technology point of view, the users perspective and interactions are also essential factors.",
                "There is plenty of discussion amongst HCI and CSCW community on the use of Ethnomethodology for design of CSCW applications.",
                "The basic approach is to provide larger bandwidth, more facilities and more advanced control mechanisms, looking forward to better quality of interaction.",
                "This approach ignores the functional utility of the environment that is used for collaboration.",
                "Eckehard Doerry [4] criticizes this approach by saying it is keeping form before function.",
                "Thus, the need is to take an approach that considers both aspects - the technical and the functional.",
                "Regarding the functional aspect, we refer to [15] where it has been dealt with in some detail.",
                "In this work, we do not discuss video conferencing; its inclusion does not significantly benefit conference quality [4].",
                "Our focus is on virtual audio environments.",
                "We first outline the challenges encountered in virtual audio conferences.",
                "Then we look into the motivations followed by relevant literature.",
                "In Section 5, we explain the architecture of our system.",
                "Section 6 comprises description of the various algorithms used in our setup.",
                "We address deployment issues.",
                "A discussion on Swiss Federal Institute of Technology, Lausanne.",
                "Former visitor at CEDT.",
                "PESIT and NIAS, Bangalore, India.iv ii performance follows.",
                "We conclude taking alongside some implementation issues. 2.",
                "CHALLENGES IN VoIP CONFERENCING Many challenges arise in building a VoIP application.",
                "The following are of particular concern in the process: • Ease of use: Conferencing must be simple; users need no domain expertise.",
                "Management (addition/removal) of clients and servers must be uncomplicated.",
                "Application development should not presuppose specific characteristics of the underlying system or of network layers.",
                "Ease of use may include leveraging readily available, technically feasible and economically viable technologies. • Scalability: Conferencing must seem uninterrupted under heavy loads, i.e., when many additional users are added on.",
                "Traffic on WAN should not grow appreciably with the total number of clients; else, this has lead to congestion.",
                "So a means to regulate traffic to a minimum is needed for this kind of real-time applications. • Interactivity: In Virtual Conferencing Environments (VCEs), we intend a face-to-face-like conferencing application that mimics a real conference, where more vocal participants invite attention.",
                "Turn-taking in floor occupation by participants must be adapted gracefully to give a feel of natural transition. • Standardization: The solution must conform to established standards so as to gain interoperability and peer acceptance.",
                "The above requirements are placed in the perspective of observations made in earlier works (vide Sections 3 and 4) and will steer the VCE design. 3.",
                "THE MOTIVATION Ramanathan and Rangan [20] have studied in detail the architectural configurations comparing many conferencing architecture schemes taking into consideration the network delay and computation requirements for mixing.",
                "Functional division and object-oriented architecture design that aid in implementation is presented in [1].",
                "An overview of many issues involved in supporting a large conference is dealt in [8].",
                "H. P. Dommel [5] and many others highlight floor control as another pivotal aspect to be taken into account in designing a conferencing tool.",
                "Tightly coupled conference control protocols in Internet belong to the ITU-T H.323 family [9]; however, they are mainly for small conferences.",
                "The latest IETF draft by Rosenberg and Schulzrinne [23] discusses conferencing models with SIP [22] in the background.",
                "Aspects of implementation for centralized SIP conferencing are reported in [26].",
                "A new approach called partial mixing by Radenkovic [18] allows for mixed and non-mixed streams to coexist.",
                "In all the above proposals, while there are some very useful suggestions, they share one or more of the following limitations: • In an audio conference, streams from all the clients need not be mixed.",
                "Actually, mixing many arbitrary streams [24] from clients degrades the quality of the conference due to the reduction in the volume (spatial aspect of speech).",
                "The number of streams mixed varies dynamically depending on the number of active participants.",
                "This would lead to fluctuations in the volume of every individual participant causing severe degradation in quality.",
                "Customized mixing of streams is not possible when many clients are active.",
                "There is a threshold on the number of simultaneous speakers above which increasing the number of speakers becomes counterproductive to conference quality.",
                "Fixing the maximum number of simultaneous speakers is dealt in a recent work [15] using Ethnomethodology, and is conjectured to be three.",
                "Thus it is advisable to honour that constraint. • There cannot be many intermediate mixers (similarly, Conference Servers as in [10]) in stages as in [20] because it brings in inordinate delay by increasing the number of hops and is not scalable with interactivity in focus. • Floor Control for an audio conference (even video conference) with explicit turn-taking instructions to participants renders the conference essentially a one-speakerat-a-time affair, not a live and free-to-interrupt one.",
                "This way, the conference becomes markedly artificial and its quality degrades.",
                "Schulzrinne et al. [24], assume only one participant is speaking at a time.",
                "In this case, if applications are implemented with some control [5], the service becomes gagging for the users. • Partial mixing [18] has a similar problem as that of mixing when more streams are mixed.",
                "Moreover, in [18], to allow impromptu speech, mixing is not done when the network can afford high bandwidth requirements for sending/receiving all the streams, but it is unnecessary [15]. • For large conferences [23, 10] a centralized conference cannot scale up.",
                "With multicasting, clients will have to parse many streams and traffic on a clients network increases unnecessarily.",
                "Evidently, different particular issues, all of which are a subset of requirements (defined in [14] and [16]) for a VoIP conferencing support, are tackled.",
                "Thus there is a need to address conferencing as a whole with all its requirements considered concurrently.",
                "Towards this goal, the VoIP conferencing system we propose is intended to be scalable and interactive.",
                "We make use of the Loudness Number for implementing floor control.",
                "This permits a participant to freely get into the speaking mode to interrupt the current speaker as in a natural face-to-face meeting.",
                "An upper limit on the number of floors (i.e., the number of speakers allowed to speak at the same time) is fixed using a conjecture proposed in [15].",
                "The work presented here is in continuation of our studies into conferencing based on the Session Initiation Protocol in [14] and [16].",
                "SIP, defined in [22] is now the most popular standard for VoIP deployment and has been chosen for its strength, ease of use, extensibility and compatibility.",
                "This is the reason it will be in the background of all controlling messages that will implicitly arise between the entities in our architecture.",
                "The actual messages are described in [16] and, as such, we do not present a complete description of them here. 4.",
                "RELATED WORK The SIP standard defined in RFC 3261 [22] and in later extensions such as [21] does not offer conference control services such as floor control or voting and does not prescribe how a conference is to be managed.",
                "However SIP can be used to initiate a session that uses some other conference control protocol.",
                "The core SIP specification supports many models for conferencing [26, 23].",
                "In the server-based models, a server mixes media streams, whereas in a server-less conference, mixing is done at the end systems.",
                "SDP [7] can be used to define media capabilities and provide other information about the conference.",
                "We shall now consider a few conference models in SIP that have been proposed recently [23].",
                "First, let us look into server-less models.",
                "In End-System Mixing, only one client (SIP UA) handles the signaling and media mixing for all the others, which is clearly not scalable and causes problems when that particular client leaves the conference.",
                "In the Users Joining model, a tree grows, as each invited party constitutes a new branch in the distribution path.",
                "This leads to an increasing number of hops for the remote leaves and is not scalable.",
                "Another option would be to use multicast for conferencing but multicast is not enabled over Internet and only possible on a LAN presently.",
                "Among server-based models, in a Dial-In Conference, UAs connect to a central server that handles all the mixing.",
                "This model is not scalable as it is limited by the processing power of the server and bandwidth of the network.",
                "Adhoc Centralized Conferences and Dial-Out Conference Servers have similar mechanisms and problems.",
                "Hybrid models involving centralized signaling and distributed media, with the latter using unicast or multicast, raise scalability problems as before.",
                "However an advantage is that the conference control can be a third party solution.",
                "Distributed Partial Mixing, presented in [18], proposes that in case of bandwidth limitation, some streams are mixed and some are not, leaving interactivity intact.",
                "Loss of spatialism when they mix and the bandwidth increase when they do not are open problems.",
                "A related study [19] by the same author proposes conferencing architecture for Collaborative Virtual Environments (CVEs) but does not provide the scalability angle without the availability of multicasting.",
                "With the limitations of proposed conferencing systems in mind, we will now detail our proposal. 5.",
                "SYSTEM ARCHITECTURE This section is dedicated to the description of the proposed system architecture.",
                "However, as this paper constitutes the continuation of our work started in [14] and furthered in [16], we will not present here all the details about the proposed entities and invite the readers to consult the papers mentioned above for a full and thorough description.",
                "First, we do not restrict our conferencing system to work on small conferences only, but rather on large audio VCEs that have hundreds (or even thousands) of users across a Wide Area Network (WAN) such as the Internet.",
                "This view stems from an appraisal that VCEs will gain in importance in the future, as interactive audio conferences will be more popular because of the spread of the media culture around the world.",
                "Two issues must be taken care of when building a VoIP conferencing system: (i) the front-end, consisting of the application program running on the end-users computers and (ii) the back-end that provides other application programs that facilitate conferencing and conference.",
                "The participating users are grouped into several domains.",
                "These domains are Local Area Networks (LANs), such as corporate or educational networks.",
                "This distributed assumption asks for distributed controlling and media handling solutions, as centralized systems would not scale for such very large conferences (vide Section 4).",
                "More explicitly, in each domain, we can identify several relevant logical components of a conferencing facility (Fig. 1):  An arbitrary number of end users (clients) that can take part in at most one audio conference at a time.",
                "Every user is Fig. 1.",
                "Conference example - 3 domains containing the necessary entities so that the conference can take place. included in one and only one domain at a given instant, but can move from domain to domain (nomadism).",
                "In our conferencing environment, these clients are regular SIP User Agents (SIP UAs), as defined in [22] so to gain in interoperability with other existing SIP-compatible systems.",
                "These clients are thus not aware of the complex setting that supports the conference and this is highlighted below.  One SIP Server (SIPS) per domain, taking care of all the signaling aspects of the conference (clients joining, leaving, etc.) [16].",
                "In particular, it is considered as a physical implementation encompassing different logical roles, namely a SIP Proxy Server, a SIP Registrar Server, a SIP Redirect Server and a SIP B2BUA (Back-to-Back User Agent) [22].",
                "This physical implementation enables the handling of incoming/outgoing SIP messages by one or another logical entity according to the needs.",
                "SIPS is entrusted with maintaining total service and has many advantages such as (a) it works as a centralized entity that can keep track of the activities of the UAs in a conference; (b) it can do all the switching for providing PBX features; (c) it can locate the UAs and invite them for a conference; (d) it can do the billing as well.",
                "SIPSs in different domains communicate with each other using SIP messages as described in [16].",
                "If the load on a particular SIPS is too heavy, it can create another SIPS in the same domain so that the load will be shared.  One Master Conference Server (M-CS) (simply a Conference Server (CS)) for each conference is created by the local SIPS when a conference starts.",
                "This server will be used for handling media packets for the clients of the domain.",
                "Its mechanism will be described in the next section.",
                "The M-CS will be able to create a hierarchy of CSs inside a domain by adding one or more Slave CSs (S-CSs) to accommodate all the active clients and prevent its own flooding at the same time.",
                "We will see this mechanism in some detail in the sequel.",
                "The entities described here are exhaustive and conform to the SIP philosophy.",
                "Thus, the use of SIP makes this architecture more useful and interoperable with any other SIP clients or servers. 6.",
                "ALGORITHMIC ISSUES 6.1 Selecting the Streams Similar to SipConf in [27], a Conference Server (CS) [17] has the function of supporting the conference; it is responsible for handling audio streams using RTP.",
                "It can also double to convert audio stream formats for a given client if necessary and can work as Translators/Mixers of RTP specification behind firewalls.",
                "We have based the design of our CS on H.323 Multipoint Processor (MP) [9].",
                "In short, the MP receives audio streams from the endpoints involved in a centralized or hybrid multipoint conference, processes them and returns them to the endpoints.",
                "An MP that processes audio prepares NMax audio outputs from M input streams after selection, mixing, or both.",
                "Audio mixing requires decoding the input audio to linear signals (PCM or analog), performing a linear combination of the signals and reencoding the result in an appropriate audio format.",
                "The MP may eliminate or attenuate some of the input signals in order to reduce noise and unwanted components.",
                "Fig. 2.",
                "Schematic diagram of a CS The limitation of H.323 is that it does not address the scalability of a conference.",
                "The architecture proposes a cascaded or daisy chain topology [10], which can be shown that it cannot scale up for a large conference.",
                "A CS serves many clients in the same conference.",
                "Thus it handles only one conference at a time.",
                "Multiple CSs may coexist in a domain, as when there are several conferences under way.",
                "Signaling-related messages of CSs are dealt in [11].",
                "The working of a CS is illustrated on Fig. 2: For each mixing interval, CS 1 chooses the best NMax audio packets out of the M1 (using a criterion termed Loudness Number, described in the next subsection).",
                "It may possibly receive and sends these to CSs 2 to P. The set of packets sent is denoted as ToOtherCSs.",
                "In the same mixing interval, it also receives the best NMax audio packets (out of possibly M2) from CS 2, similarly the best NMax (out of possibly MP) from CS P. For simplicity, we ignore propagation delay between CSs which indeed can be taken into account; it is beyond the scope of this presentation.",
                "The set of packets received is denoted as FromOtherCSs.",
                "Finally, it selects the best NMax packets from the set {ToOtherCSs union FromOtherCSs} and passes these packets to its own group.",
                "It can be seen that the set {ToOtherCSs union FromOtherCSs} is the same at all CSs.",
                "This ensures that any client in the conference finally receives the same set of packets for mixing.",
                "Hence all clients obtain a common view of the conference.",
                "Similarly, for each time slot (packet time), a subset, F of all clients is selected (using the same criterion) from the pool of packets from all other CSs plus the NMax clients selected locally.",
                "Their packets are mixed and played out at the clients.",
                "According to [15], the cardinality of F, |F| is NMax and is fixed at three.",
                "In our conferencing setup, selection is by the Master Conference Server (M-CS), which comes into the picture exclusively for media handling.",
                "Note that even if the SIP specification enables direct UA-to-UA media communication in a one-to-one call, it is also possible to use the Conference Server for two-party calls, especially because it is then more functional to create a real conference by adding a third and subsequently more participant(s).",
                "There are cases wherein the processing capacity of an M-CS is exceeded as it may have too many packets - from local domains and from remote domains - to process.",
                "In that case, the M-CS will create one or many S-CS (Fig. 6) and transfer its own clients as well as the new clients to them.",
                "In this configuration, the algorithm outlined above will be slightly modified, as the audio packets will go from clients to their dedicated S-CS that will select NMax packets to send to the local M-CS, which will then select NMax packets from all its S-CSs in the domain before sending them to the remote domains.",
                "The incoming packets from other domains will be received by the M-CS, select NMax of them and send them directly to the domain clients, bypassing the SCSs.",
                "This change implies that at most three intermediate entities exist for each audio packet, instead of two in the conventional setup.",
                "As the extra hop happens inside the LAN supposed to have a high-speed connectivity, we consider that it should not prevent us from using this hierarchy of CSs when theres a need to do so. 6.2 Loudness Number (LN) A basic question to be answered by the CS is the following.",
                "In a mixing interval, how should it choose NMax packets out of the M it might possibly receive?",
                "One way is to rank the M packets received according to their energies, and choose the top NMax.",
                "However, this is usually found to be inadequate because random fluctuations in packet energies can lead to poor audio quality.",
                "This indicates the need for a metric different from mere individual packet energies.",
                "The metric should have the following characteristics [12]: • A speaker (floor occupant) should not be cut off by a spike in the packet energy of another speaker.",
                "This implies that a speakers speech history should be given some weight.",
                "This is often referred to as Persistence or Hangover. • A participant who wants to interrupt a speaker will have to (i) speak loudly and (ii) keep trying for a little while.",
                "In a face-to-face conference, body language often indicates the intent to interrupt.",
                "But in a blind conference under discussion, a participants intention to interrupt can be conveyed effectively through LN.",
                "A floor control mechanism empowered to cut off a speaker forcefully must be ensured.",
                "These requirements are met by Loudness Number [12], which changes smoothly with time so that the selection (addition and deletion) of clients for conference is graceful.",
                "LN (= ) is a function of the amplitude of the current audio stream plus the activity and amplitude over a specific window in the past.",
                "Fig. 3.",
                "The different windows used for LN computation The Loudness Number is updated on a packet-by-packet basis.",
                "The basic parameter used here is packet amplitude, which is calculated as root mean square (rms) of the energies in audio samples of a packet, and denoted by XK.",
                "Three windows are defined as shown in Fig. 3.",
                "The present amplitude level of the speaker is found by calculating the moving average of packet amplitude (XK) within a window called Recent Past Window starting from the present instant to some past time.",
                "The past activity of the speaker is found by calculating the moving average of the packet amplitude (XK) within a window called Distant Past Window, which starts at the point where the Recent Past window ends and stretches back in the past for a pre-defined interval.",
                "The activity of the speaker in the past is found with a window called Activity Horizon, which spans the recent past window as well as the distant past window and beyond if necessary.",
                "Though the contribution of the activity horizon looks similar to the contribution of the recent past and distant past windows, past activity is computed from activity horizon window in a differently.",
                "Define the quantities during these three intervals as L1, L2 and L3.",
                "L1 quantifies the Recent Past speech activity, L2 the Distant Past speech activity and L3 gives a number corresponding to the speech activity in the Activity Horizon window quantifying how active the speaker was in the past few intervals.",
                "L3 yields a quantity that is proportional to the fraction of packets having energies above a pre-defined threshold (Eq. 3).",
                "The threshold is invariant across clients. ∑ +− = = 1 1 1 RPP P Wt tK K RP X W L (1) ∑ +−− −= = 1 2 1 DPRPP RPP WWt WtK K DP X W L (2) ∑ +− = ≥= 1 }{3 * 1 AHP P K Wt tK X AH I W L θθ (3) Where ifI KX 1}{ =≥θ θ≥KX = otherwise,0 The threshold is a constant. is set at 10-20 percent of the amplitude of the voice samples of a packet in our implementation here.",
                "Loudness Number λ for the present time instant (or the present packet) is calculated as, 332211 *L*L*L αααλ ++= (4) Here 1\u000f 2 DQG 3 are chosen such that: 0< 1\u000f 2\u001f\u0014\u000f \u0013\u001f 1\u000e 2\u001f\u0014 DQG 3=1-\u000b 1\u000e 2) Here, 1 is the weight given to the recent past speech, 2 is the weight given to distant past speech and 3 is the weight given to speech activity in the activity horizon window considered. 6.3 Safety, Liveness and Fairness The λ parameter KDV VRPH PHPRU\\ GHSHQGLQJ RQ WKH VSUHDG RI the windows.",
                "After one conferee becomes silent, another can take the floor.",
                "Also, as there is more than one channel, interruption is enabled.",
                "A loud conferee is more likely to be heard because of elevated λ.",
                "This ensures fairness to all conferees.",
                "After all, even in a face-to-face conference, a more vocal speaker grabs special attention.",
                "All these desirable characteristics are embedded into the LN.",
                "A comprehensive discussion on selection of the various parameters and the dynamics of LN are beyond the scope of this paper. 6.4 Selection Algorithm using the LN Following the developments in subsections 6.1 and 6.2, we present the simple algorithm that runs at each Master-Conference Server (Algorithm. 1).",
                "This algorithm is based on the discussions in section 6.1.",
                "The globally unique set F is found using this procedure.",
                "Repeat for each time slot at each M-CS { 1.",
                "Get all the packets from the Clients that belong to it. 2.",
                "Find at most NMax Clients that have PD[LPXP RXW RI 0 &OLHQWV LQ LWV GRPDLQ\u0011 3.",
                "Store a copy of packets from those NMax Clients in database DB1. 4.",
                "Send these NMax packets to other M-CSs (on Unicast or Multicast, depending on the configuration). 5.",
                "Similarly, receive packets from all other M-CSs and store them in database DB2. 6.",
                "Now compare the packets in DB1 and DB2 on WKH EDVLV RI DQG VHOHFW D PD[LPXP RI NMax amongst them (to form set F) that should be played out at each Client. 7.",
                "Send the NMax packets in set F to the Clients in its domain. 8.",
                "Mix these NMax audio packets in set F after linearising and send it to dumb Clients in the domain. }",
                "Algorithm 1.",
                "Selection algorithm The mechanism proposed here is also depicted on Fig. 6, where a single conference takes place between three domains.",
                "The shaded clients are the ones selected in their local domains; their audio streams will be sent to other CSs. 7.",
                "DEPLOYMENT ISSUES We now analyze deployment issues associated with conference management.",
                "How are domains to be organized to maximize the number of participants able to join?",
                "To address this, we define some useful parameters.  Let d be the number of different domains in which there are active clients in a given conference.  Let Mi be the number of active clients present in domain i ( di ≤≤1 ) in a given conference.",
                "The total number of active clients in the conference is thus ∑= = d i iMM 1 .  Let C be the maximum number of audio streams a Conference Server can handle in a packet time, also called capacity.",
                "C is set according to the processing power of the weakest CS in the conference but as it cannot be assumed that we know it a-priori, it can be set according to some minimum system requirement a machine must meet in order to take part in a conference.  Let NMax be the number of output streams a CS has to send to other CSs in remote domains (see section 6.1).",
                "We will set NMax =3 (=|F|), according to [15].",
                "The optimization problem is now to find the value of d that maximizes the total number of clients Mi served by one CS in a domain with capacity C. We first dispose the case where the capacity is not exceeded (the existing CS is not overloaded), and then proceed to the case where there exists a need to create more CSs when a single CS is overloaded.",
                "We assume that clients are equally distributed amongst the domains, as we may not have information to assume an a-priori distribution of the clients.",
                "We can specify no more than an upper bound on the number of clients acceptable, given the number of active domains d. 7.1 Conferencing with only One Level of CSs In this subsection, we consider that we have only one CS, i.e., a unique M-CS in each domain.",
                "Thus it cannot be overloaded.",
                "We consider that the system works as outlined in section 6.1: The Clients send their audio packets to their local CS, which selects NMax streams, before sending them to other CSs.",
                "In parallel, it also receives NMax streams for every other CSs before taking a decision on which NMax streams will be selected, sent and played out at each individual clients.",
                "For system stability, any CS in the conference should be able to handle its local clients in addition to the audio packets from other domains.",
                "Clearly then, the following inequality must hold for every domain: )1( −⋅+≥ dN d M C Max (5) The limiting case of (5) (taking the equality) takes the form 2 )( dNdNCM MaxMax ⋅−⋅+= (6) To optimize d with respect to M, we set 0)(2 =+−⋅⋅= ∂ ∂ MaxMax NCdN d M (7) yielding     ⋅ + = Max Max N NC d 2 (8) ([ ]* = Rounding to nearest integer) and hence, M from (6).",
                "C d M 50 9 234 100 17 884 150 26 1950 200 34 3434 250 42 5334 300 51 7650 350 59 10384 400 67 13534 450 76 17100 500 84 21084 Table 1.",
                "Values of d and M computed for some values of C with NMax = 3.",
                "In Table 1, we give the values of d and M that were computed using (8) and (6) with NMax = 3.",
                "We see that the values of d and M, being dependent of C, are therefore based on the weakest CS.",
                "We see that there is a trade-off between M and d. We could admit more domains in the conference, but at the expense of restricting the total number of clients M in the conference.",
                "While implementing and testing the Conference Servers on a Pentium III 1.4 GHz running Windows NT, we were able to set C=300.",
                "But with the advent of faster computers (> 3 GHz), one can easily set C to higher values and determine d and M accordingly.",
                "Fig. 4 shows a contour plot and Fig. 5, a 3D-mesh showing optimized solutions for CSs of different capacities.",
                "These lead us to maximize the number of domains, and hence, to maximize the total number of clients based on the capacity of various CSs.",
                "In Fig. 4, the individual curves represent the total number of clients targeted, and we select a lower value of d, for capacity C, for targeted M to reduce traffic on WAN.",
                "Fig. 5 represents a different perspective of the same data in 3D.",
                "Fig. 4.",
                "Contour Plot of Capacity versus Optimum number of domains for various conference sizes 7.2 Conferencing with Two Levels of CSs Now considering the case where the number of clients in a particular domain is too large, i.e., d M Mi ≥ (9) one has to avoid the denial of service for new clients due to overloading of Conference Server.",
                "This problem can be solved by introducing a second level of CSs inside the given domain, as in Fig. 6.",
                "The existing M-CS creates a Slave CS (S-CS) that can handle up to C end-users and to which it transfers all its active clients.",
                "Here, the system works differently as outlined in section 6.1: The Clients send their audio packets to their local S-CS, which selects NMax streams, before sending them to a local M-CS, which will proceed in the same way, before sending NMax streams to the other domains.",
                "Each newly created S-CS must run on a separate machine.",
                "The M-CS has to create more S-CSs if the number of active clients exceeds C in the course of the conference after the transfer.",
                "With this mechanism, the M-CS will be able to create utmost     −⋅− = Max Max N dNC U )1( S-CSs, (10) as it must handle 3 (= NMax) packets for each local S-CSs and 3 (= NMax) packets from each other remote domains.",
                "We can then calculate the maximum theoretical number of active clients CUMi ⋅= in each domain as well as M, for the whole conference as CUdM ⋅⋅= .",
                "Fig. 5. 3D Plot of Capacity versus Optimum number of domains for various conference sizes Of course, one could further create a third level in the hierarchy, giving the possibility of accommodating even more clients.",
                "This may be unnecessary as the number of possible clients is large enough with two levels. 8.",
                "PERFORMANCE DISCUSSION We now analyze the performance of the algorithm presented in subsection 6.3, i.e., the one taking care of the exchange of audio packets between the different domains.",
                "Note that the packets that are transiting within the LAN take advantage of the higher capacity (generally coupled with multicast capabilities) and therefore do not require a performance analysis.",
                "Thus we have to look only at the RTP packets over the WAN, i.e., between participating M-CSs.",
                "As each M-CS from a domain will be sending only NMax out of d M packets to the other CSs ( MaxN d M >> ), the bandwidth used by the application over a WAN is upper-bounded by the following expression.",
                "The total number of audio packets transiting over the WAN for each time slot is ∑ ∑= ≠=        d i d ijj MaxN 1 ,1 which is quadratic in the number of domains (i.e., O(d2 )).",
                "However, it is independent of the total number of active clients.",
                "This would not have been the case had all packets been sent over the network in each time slot.",
                "The saving is tremendous.",
                "Yet, one may contend that sending three packets to and from all domains is a waste of resources, as most of these streams will not be selected.",
                "If just one client is active, selecting a subset of clients in that domain is unnecessary.",
                "Pessimistic and optimistic algorithms as presented in the sequel aim at reducing the traffic further by harnessing the slow varying nature of the LN. 8.1 Pessimistic algorithm Consider a scenario wherein the lowest LN (called LNt) of the three globally selected streams (set F of Section 6.1) exceeds the LN of the most dominant stream of a domain.",
                "Evidently, the chances that the next two dominant streams of that domain being selected to F in the next packet period are less.",
                "Here, we send this most dominant stream and withhold the other two.",
                "There may be an error in unique selection across all domains for one packet period only.",
                "As LN varies slowly, the error would get automatically rectified in a subsequent packet period (slot).",
                "In this algorithm, there is at least one stream in each period.",
                "The net network traffic in a packet period in the best case is )1( −⋅ dd , i.e., )( 2 dO using unicast, instead of MaxNdd ⋅−⋅ )1( .",
                "Considerable valuable bandwidth can be saved using this heuristic.",
                "The resulting traffic complexity reduces from O(d2 ) to O(d) in multicast-enabled networks.",
                "Initialize LNt = 0 at an M-CS/S-CS A.",
                "In the first time slot (packet time), each CS sends the top NMax streams (based on their LN) to all other CSs.",
                "At each M-CS/S-CS and for each packet time: B.",
                "Find the value of lowest LN of the NMax globally selected streams (set F) from the previous time slot.",
                "Set LNt with this value.",
                "C. At each CS domain, select the NMax local streams that have maximum value of LN (ToOtherCSs set).",
                "D. Select streams that have LN > LNt.",
                "IF there are >= NMax streams with LN > LNt then send top NMax to other CSs.",
                "ELSE IF there are (NMax-1) streams with LN>LNt then send top (NMax-1) plus the one lower than LNt (i.e., top NMax) to other CSs.",
                "ELSE IF there are (NMax-2) streams with LN>LNt then send top (NMax-2) plus the one lower than LNt (i.e. top (NMax -1)) to other CSs. …… ELSE IF there are NO streams with LN> LNt then send top 1 stream to other CSs.",
                "E. Packets sent in step D form DB1.",
                "Packets received from other CSs form DB2.",
                "F. For this time slot, find global NMax streams based on LN from DB1 U DB2 (set F) G. Send set F to the clients in its domain.",
                "Update LNt for the next period.",
                "Algorithm 2.",
                "Pessimistic algorithm to reduce the number of packets sent over the Internet.",
                "Fig. 6.",
                "Example of a 2-level hierarchy of Conference Servers; the shaded Clients are the one selected by the M-CS and will be sent to other domains CSs.",
                "In this algorithm the saving in traffic is at the cost of relaxing the condition of formation of globally unique set F. However, the discrepancies in selected streams at different domains remain for a short period of time depending on the transportation delay between any two domains.",
                "Even for a total delay of 400ms, for only 10 packet time slots the uniqueness is lost.",
                "This duration in a real-time interactive conversation is non-perceivable by the listener.",
                "In the case that there is a joke and every one laughs, then there would be sudden rise in the number of packets and it would be upper bounded by MaxN)d(O 2 for a short period. 8.2 Optimistic Algorithm The traffic can be reduced further.",
                "The scheme in the following algorithm (Algorithm. 3) is withholding all the streams that have less value of LN compared to the least of the three in the set F. We can find the correct and unique three streams after a few time slots depending on the transportation delay between the domains.",
                "As the packet period is of the order of 40ms, the error in the selection is unnoticeable.",
                "The number of streams on network in this case is always restricted to NMax (=3).",
                "Even without Voice Activity Detection (VAD), there will be no more than three streams in the network in the best case, thus the total traffic is constant.",
                "A sudden burst of traffic, as described in 8.1, is a particular case.",
                "These advantages are due to exploitation of the characteristics of LN.",
                "Initialize LNt = 0 at an M-CS/S-CS A.",
                "In the first time slot (packet time), each CS sends the top NMax streams (based on their LN) to all other CSs.",
                "At each M-CS/S-CS and for each packet time: B.",
                "Find the value of lowest LN of the NMax globally selected streams (set F) from the previous time slot.",
                "Set LNt with this value.",
                "C. At each CS domain, select the NMax local streams that have maximum value of LN (ToOtherCSs set) D. Select streams that have LN > LNt IF there are >= NMax streams with LN > LNt then send top NMax to other CSs.",
                "ELSE IF there are (NMax-1) streams with LN>LNt then send top (NMax-1) and see E. ELSE IF there are (NMax-2) streams with LN>LNt then send top (NMax-2) and see E. …… ELSE IF there are NO streams with LN> LNt then dont send any stream.",
                "E. Exceptions: IF the stream that was in F in the last interval belongs to this CS then select and send that stream even if its LN is now < LNt. (Note this occurs only at that CS which had the stream that was the last of the three in the previous packet period.)",
                "F. Packets sent in step D and E form DB1.",
                "Packets received from other CSs form DB2.",
                "G. For this time slot, find global NMax streams based on LN from DB1 U DB2 (set F).",
                "H. Send set F to the clients in its domain.",
                "Update LNt for the next period.",
                "Algorithm 3.",
                "Optimistic algorithm to reduce the number of packets sent over the Internet Furthermore, when VAD is used [13], it would further reduce the traffic by sending the header part of the RTP packet only and not the whole packet, thus in order to keep updating the LN across.",
                "The traffic here in this case is O(NMax) for multicast and O(d) for unicast.",
                "We see that the above algorithms save bandwidth and computation at each CS, and leads to a scalable architecture with multiple CSs mainly because clients are grouped in domains.",
                "The necessary bandwidth is not dependent on the total number of active clients.",
                "As the CS always chooses the best three clients out of all the clients assigned to it in the domain, addition of new clients to the existing conference will not cause any scalability problem. 8.3 Availability of Multicasting In the architecture that has been proposed, no assumption was made about the availability of multicasting support from the network.",
                "The traffic will be further reduced if multicasting is available over WAN.",
                "It is simple to show that the order of traffic would tend to become O(d) from O(d2 ).",
                "This is an approximation as saving in multicasting depends also on the topology.",
                "The analysis was done for the case wherein multicast is not available (a realistic assumption in todays Internet).",
                "The advantage of this set up is that we can use it even if multicasting is partially available.",
                "We can instruct CSs during the set-up phase to send unicast packets to those CSs that cannot receive multicast packets whereas CSs on multicast enabled routers can exchange packets on a multicast address.",
                "The data structures and conference objects inside a CS is given in [14].",
                "Fig. 7.",
                "User Interface for setting the weight for NMax audio streams (setting Self-bar to zero avoids echo). 8.4 Quality Improvement The observed improvement in the perceived quality of the conference service is due to: (1) limiting the number of concurrent speakers to a low number such as three.",
                "Generally, in a conference if more than two participants speak the intelligibility is lost.",
                "The conversational analysis demonstrates that there would be a repair mechanism [15] in such a case. (2) Delay: The audio stream between any two clients will pass through at most two CSs thus reducing the end-to-end delay.",
                "For a large conference there might be three CSs however, one hop is within the domain incurring negligible delay. (3) As the streams are mixed only at the clients, there can be a customized mix of the streams.",
                "The individual tuning of mixing with weights the spatialism is preserved.",
                "Fig. 7 shows the user interface for the same.",
                "The echo when self-stream is selected can be avoided by reducing the weight.",
                "Nonetheless, feedback helps in reassuring speaker that he/she is heard by all. 9.",
                "CONCLUSION In this paper, we have presented a discussion on a voice-only virtual conferencing environment.",
                "We have argued that the distributed nature of deployment here makes it scalable.",
                "Interactivity is achieved by adapting a recent stream selection scheme based on Loudness Number.",
                "Additionally, we incorporate a result from a more recent work [15] where the sufficiency of three simultaneous speakers has been demonstrated.",
                "Thus, there is significantly effective utilization of bandwidth.",
                "A mixed stream is played out at each client; each client may choose to have a customized mix since mixing is done at the local terminal of each client.",
                "These render impromptu speech in a virtual teleconference over VoIP a reality, as in a real face-to-face conference.",
                "Compatibility is assured thanks to the use of SIP, the most soughtafter signaling protocol.",
                "To ensure a satisfying performance, we do not demand the availability of multicast, but use it if and when available.",
                "The traffic in the WAN (Internet) is upper-bounded by the square of the number of domains, -- further reduced by using heuristic algorithms -- which is far below the total number of clients in the conference.",
                "This is due to the use of a Conference Server local to each domain.",
                "VAD techniques help further traffic reduction.",
                "Using SIP standard for signaling makes this solution highly interoperable.",
                "We have implemented a CS application on a campus-wide network.",
                "We believe this new generation of virtual conferencing environments will gain more popularity in the future as their ease of deployment is assured thanks to readily available technologies and scalable frameworks. 10.",
                "REFERENCES [1] L Aguilar et al., Architecture for a Multimedia Teleconferencing System, in Proceedings of the ACM SIGCOMM, Aug 1986, pp. 126-136. [2] Carsten Bormann, Joerg Ott et al., Simple Conference Control Protocol, Internet Draft, Dec. 1996. [3] M. Decina and V. Trecordi, Voice over Internet Protocol and Human Assisted E-Commerce, IEEE Comm.",
                "Magazine, Sept. 1999, pp. 64-67. [4] Eckehard Doerry, An Empirical Comparison of Copresent and Technologically-mediated Interaction based on Communicative Breakdown, Phd Thesis, Graduate School of the University of Oregon, 1995. [5] H. P. Dommel and J.J. Garcia-Luna-Aceves, Floor Control for Multimedia Conferencing and Collaboration, J. Multimedia Systems, Vol. 5, No. 1, January 1997, pp. 23-38. [6] Amitava Dutta-Roy, Virtual Meetings with desktop conferencing, IEEE Spectrum, July 1998, pp. 47-56. [7] M. Handley and V. Jacobson, SDP: Session Description Protocol, RFC 2327, IETF, April 1998. [8] M. Handley, J. Crowcroft et al., Very large conferences on the Internet: the Internet multimedia conferencing architecture, Journal of Computer Networks, vol. 31, No. 3, Feb 1999, pp. 191-204. [9] ITU-T Rec.",
                "H.323, Packet based Multimedia Communications Systems, vol. 2, 1998. [10] P. Koskelainen, H. Schulzrinne and X. Wu, A SIP-based Conference Control Framework, NOSSDAV02, May 2002, pp. 53-61. [11] R Venkatesha Prasad et al., Control Protocol for VoIP Audio Conferencing Support, International Conference on Advanced Communication Technology, Mu-Ju, South Korea, Feb 2001, pp. 419-424. [12] R Venkatesha Prasad et al., Automatic Addition and Deletion of Clients in VoIP Conferencing, 6th IEEE Symposium on Computers and Communications, July 2001, Hammamet, Tunisia, pp. 386-390. [13] R Venkatesha Prasad, H S Jamadagni, Abjijeet, et al Comparison of Voice Activity Detection Algorithms, 7th IEEE Symposium on Computers and Communications.",
                "July 2002, Sicily, Italy, pp. 530-535. [14] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, A Scalable Distributed VoIP Conferencing using SIP, Proc. of the 8th IEEE Symposium on Computers and Communications, Antalya, Turkey, June 2003. [15] R Venkatesha Prasad, H S Jamadagni and H N Shankar, On Problem of Specifying Number of Floors in a Voice Only Conference, To appear in IEEE ITRE 2003. [16] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, A Proposal for Distributed Conferencing on SIP using Conference Servers, To appear in the Proc. of MMNS 2003, Belfast, UK, September 2003. [17] R. Venkatesha Prasad, H.S.",
                "Jamadagni, J. Kuri, R.S.",
                "Varchas, A Distributed VoIP Conferencing Support Using Loudness Number, Tech.",
                "Rep. TR-CEDT-TE-03-01 [18] M. Radenkovic et al, Scaleable and Adaptable Audio Service for Supporting Collaborative Work and Entertainment over the Internet, SSGRR 2002, LAquila, Italy, Jan. 2002. [19] M. Radenkovic, C. Greenhalgh, S. Benford, Deployment Issues for Multi-User Audio Support in CVEs, ACM VRST 2002, Nov. 2002, pp. 179-185. [20] Srinivas Ramanathan, P. Venkata Rangan, Harrick M. Vin, Designing Communication Architectures for Interorganizational Multimedia Collaboration, Journal of Organizational Computing, 2 (3&4), pp.277-302, 1992. [21] A.",
                "B. Roach, Session Initiation Protocol (SIP)-Specific Event Notification, RFC 3265, IETF, June 2002. [22] J. Rosenberg, H. Schulzrinne et al., SIP: Session Initiation Protocol, RFC 3261, IETF, June 2002. [23] J. Rosenberg, H. Schulzrinne, Models for Multy Party Conferencing in SIP, Internet Draft, IETF, July 2002. [24] H. Schulzrinne et al., RTP: a transport protocol for realtime applications, RFC 1889, IETF, Jan 1996. [25] Lisa R. Silverman, Coming of Age: Conferencing Solutions Cut Corporate Costs, White Paper, www.imcca.org/wpcomingofage.asp [26] Kundan Singh, Gautam Nair and Henning Schulzrinne, Centralized Conferencing using SIP, Proceedings of the 2nd IP-Telephony Workshop (IPTel), April 2001. [27] D. Thaler, M. Handley and D. Estrin, The Internet Multicast Address Allocation Architecture, RFC 2908, IETF, Sept. 2000."
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": [
                []
            ]
        },
        "vad technique": {
            "translated_key": "técnica VAD",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Deployment Issues of a VoIP Conferencing System in a Virtual Conferencing Environment R. Venkatesha Prasad i Richard Hurni ii H.S.",
                "Jamadagni iii H.N.",
                "Shankar iv i, iii Centre for Electronics Design and Technology Indian Institute of Science, Bangalore, India Telephone: +91 80 360 0810 i, iii {vprasad, hsjam}@cedt.iisc.ernet.in ii hurni@ieee.org iv hn_shankar@yahoo.com ABSTRACT Real-time services have been supported by and large on circuitswitched networks.",
                "Recent trends favour services ported on packet-switched networks.",
                "For audio conferencing, we need to consider many issues - scalability, quality of the conference application, floor control and load on the clients/servers - to name a few.",
                "In this paper, we describe an audio service framework designed to provide a Virtual Conferencing Environment (VCE).",
                "The system is designed to accommodate a large number of end users speaking at the same time and spread across the Internet.",
                "The framework is based on Conference Servers [14], which facilitate the audio handling, while we exploit the SIP capabilities for signaling purposes.",
                "Client selection is based on a recent quantifier called Loudness Number that helps mimic a physical face-to-face conference.",
                "We deal with deployment issues of the proposed solution both in terms of scalability and interactivity, while explaining the techniques we use to reduce the traffic.",
                "We have implemented a Conference Server (CS) application on a campus-wide network at our Institute.",
                "Categories and Subjects Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - Client / Server, distributed applications.",
                "General Terms Algorithms, Performance, Design, Theory. 1.",
                "INTRODUCTION Todays Internet uses the IP protocol suite that was primarily designed for the transport of data and provides best effort data delivery.",
                "Delay-constraints and characteristics separate traditional data on the one hand from voice & video applications on the other.",
                "Hence, as progressively time-sensitive voice and video applications are deployed on the Internet, the inadequacy of the Internet is exposed.",
                "Further, we seek to port telephone services on the Internet.",
                "Among them, virtual conference (teleconference) facility is at the cutting edge.",
                "Audio and video conferencing on Internet are popular [25] for the several advantages they inhere [3,6].",
                "Clearly, the bandwidth required for a teleconference over the Internet increases rapidly with the number of participants; reducing bandwidth without compromising audio quality is a challenge in Internet Telephony.",
                "Additional critical issues are: (a) packet delay, (b) echo, (c) mixing of audio from selected clients, (d) automatic selection of clients to participate in the conference, (e) playout of mixed audio for every client, (f) handling clients not capable of mixing audio streams (such clients are known as dumb clients), and (g) deciding the number of simultaneously active clients in the conference without compromising voice quality.",
                "While all the above requirements are from the technology point of view, the users perspective and interactions are also essential factors.",
                "There is plenty of discussion amongst HCI and CSCW community on the use of Ethnomethodology for design of CSCW applications.",
                "The basic approach is to provide larger bandwidth, more facilities and more advanced control mechanisms, looking forward to better quality of interaction.",
                "This approach ignores the functional utility of the environment that is used for collaboration.",
                "Eckehard Doerry [4] criticizes this approach by saying it is keeping form before function.",
                "Thus, the need is to take an approach that considers both aspects - the technical and the functional.",
                "Regarding the functional aspect, we refer to [15] where it has been dealt with in some detail.",
                "In this work, we do not discuss video conferencing; its inclusion does not significantly benefit conference quality [4].",
                "Our focus is on virtual audio environments.",
                "We first outline the challenges encountered in virtual audio conferences.",
                "Then we look into the motivations followed by relevant literature.",
                "In Section 5, we explain the architecture of our system.",
                "Section 6 comprises description of the various algorithms used in our setup.",
                "We address deployment issues.",
                "A discussion on Swiss Federal Institute of Technology, Lausanne.",
                "Former visitor at CEDT.",
                "PESIT and NIAS, Bangalore, India.iv ii performance follows.",
                "We conclude taking alongside some implementation issues. 2.",
                "CHALLENGES IN VoIP CONFERENCING Many challenges arise in building a VoIP application.",
                "The following are of particular concern in the process: • Ease of use: Conferencing must be simple; users need no domain expertise.",
                "Management (addition/removal) of clients and servers must be uncomplicated.",
                "Application development should not presuppose specific characteristics of the underlying system or of network layers.",
                "Ease of use may include leveraging readily available, technically feasible and economically viable technologies. • Scalability: Conferencing must seem uninterrupted under heavy loads, i.e., when many additional users are added on.",
                "Traffic on WAN should not grow appreciably with the total number of clients; else, this has lead to congestion.",
                "So a means to regulate traffic to a minimum is needed for this kind of real-time applications. • Interactivity: In Virtual Conferencing Environments (VCEs), we intend a face-to-face-like conferencing application that mimics a real conference, where more vocal participants invite attention.",
                "Turn-taking in floor occupation by participants must be adapted gracefully to give a feel of natural transition. • Standardization: The solution must conform to established standards so as to gain interoperability and peer acceptance.",
                "The above requirements are placed in the perspective of observations made in earlier works (vide Sections 3 and 4) and will steer the VCE design. 3.",
                "THE MOTIVATION Ramanathan and Rangan [20] have studied in detail the architectural configurations comparing many conferencing architecture schemes taking into consideration the network delay and computation requirements for mixing.",
                "Functional division and object-oriented architecture design that aid in implementation is presented in [1].",
                "An overview of many issues involved in supporting a large conference is dealt in [8].",
                "H. P. Dommel [5] and many others highlight floor control as another pivotal aspect to be taken into account in designing a conferencing tool.",
                "Tightly coupled conference control protocols in Internet belong to the ITU-T H.323 family [9]; however, they are mainly for small conferences.",
                "The latest IETF draft by Rosenberg and Schulzrinne [23] discusses conferencing models with SIP [22] in the background.",
                "Aspects of implementation for centralized SIP conferencing are reported in [26].",
                "A new approach called partial mixing by Radenkovic [18] allows for mixed and non-mixed streams to coexist.",
                "In all the above proposals, while there are some very useful suggestions, they share one or more of the following limitations: • In an audio conference, streams from all the clients need not be mixed.",
                "Actually, mixing many arbitrary streams [24] from clients degrades the quality of the conference due to the reduction in the volume (spatial aspect of speech).",
                "The number of streams mixed varies dynamically depending on the number of active participants.",
                "This would lead to fluctuations in the volume of every individual participant causing severe degradation in quality.",
                "Customized mixing of streams is not possible when many clients are active.",
                "There is a threshold on the number of simultaneous speakers above which increasing the number of speakers becomes counterproductive to conference quality.",
                "Fixing the maximum number of simultaneous speakers is dealt in a recent work [15] using Ethnomethodology, and is conjectured to be three.",
                "Thus it is advisable to honour that constraint. • There cannot be many intermediate mixers (similarly, Conference Servers as in [10]) in stages as in [20] because it brings in inordinate delay by increasing the number of hops and is not scalable with interactivity in focus. • Floor Control for an audio conference (even video conference) with explicit turn-taking instructions to participants renders the conference essentially a one-speakerat-a-time affair, not a live and free-to-interrupt one.",
                "This way, the conference becomes markedly artificial and its quality degrades.",
                "Schulzrinne et al. [24], assume only one participant is speaking at a time.",
                "In this case, if applications are implemented with some control [5], the service becomes gagging for the users. • Partial mixing [18] has a similar problem as that of mixing when more streams are mixed.",
                "Moreover, in [18], to allow impromptu speech, mixing is not done when the network can afford high bandwidth requirements for sending/receiving all the streams, but it is unnecessary [15]. • For large conferences [23, 10] a centralized conference cannot scale up.",
                "With multicasting, clients will have to parse many streams and traffic on a clients network increases unnecessarily.",
                "Evidently, different particular issues, all of which are a subset of requirements (defined in [14] and [16]) for a VoIP conferencing support, are tackled.",
                "Thus there is a need to address conferencing as a whole with all its requirements considered concurrently.",
                "Towards this goal, the VoIP conferencing system we propose is intended to be scalable and interactive.",
                "We make use of the Loudness Number for implementing floor control.",
                "This permits a participant to freely get into the speaking mode to interrupt the current speaker as in a natural face-to-face meeting.",
                "An upper limit on the number of floors (i.e., the number of speakers allowed to speak at the same time) is fixed using a conjecture proposed in [15].",
                "The work presented here is in continuation of our studies into conferencing based on the Session Initiation Protocol in [14] and [16].",
                "SIP, defined in [22] is now the most popular standard for VoIP deployment and has been chosen for its strength, ease of use, extensibility and compatibility.",
                "This is the reason it will be in the background of all controlling messages that will implicitly arise between the entities in our architecture.",
                "The actual messages are described in [16] and, as such, we do not present a complete description of them here. 4.",
                "RELATED WORK The SIP standard defined in RFC 3261 [22] and in later extensions such as [21] does not offer conference control services such as floor control or voting and does not prescribe how a conference is to be managed.",
                "However SIP can be used to initiate a session that uses some other conference control protocol.",
                "The core SIP specification supports many models for conferencing [26, 23].",
                "In the server-based models, a server mixes media streams, whereas in a server-less conference, mixing is done at the end systems.",
                "SDP [7] can be used to define media capabilities and provide other information about the conference.",
                "We shall now consider a few conference models in SIP that have been proposed recently [23].",
                "First, let us look into server-less models.",
                "In End-System Mixing, only one client (SIP UA) handles the signaling and media mixing for all the others, which is clearly not scalable and causes problems when that particular client leaves the conference.",
                "In the Users Joining model, a tree grows, as each invited party constitutes a new branch in the distribution path.",
                "This leads to an increasing number of hops for the remote leaves and is not scalable.",
                "Another option would be to use multicast for conferencing but multicast is not enabled over Internet and only possible on a LAN presently.",
                "Among server-based models, in a Dial-In Conference, UAs connect to a central server that handles all the mixing.",
                "This model is not scalable as it is limited by the processing power of the server and bandwidth of the network.",
                "Adhoc Centralized Conferences and Dial-Out Conference Servers have similar mechanisms and problems.",
                "Hybrid models involving centralized signaling and distributed media, with the latter using unicast or multicast, raise scalability problems as before.",
                "However an advantage is that the conference control can be a third party solution.",
                "Distributed Partial Mixing, presented in [18], proposes that in case of bandwidth limitation, some streams are mixed and some are not, leaving interactivity intact.",
                "Loss of spatialism when they mix and the bandwidth increase when they do not are open problems.",
                "A related study [19] by the same author proposes conferencing architecture for Collaborative Virtual Environments (CVEs) but does not provide the scalability angle without the availability of multicasting.",
                "With the limitations of proposed conferencing systems in mind, we will now detail our proposal. 5.",
                "SYSTEM ARCHITECTURE This section is dedicated to the description of the proposed system architecture.",
                "However, as this paper constitutes the continuation of our work started in [14] and furthered in [16], we will not present here all the details about the proposed entities and invite the readers to consult the papers mentioned above for a full and thorough description.",
                "First, we do not restrict our conferencing system to work on small conferences only, but rather on large audio VCEs that have hundreds (or even thousands) of users across a Wide Area Network (WAN) such as the Internet.",
                "This view stems from an appraisal that VCEs will gain in importance in the future, as interactive audio conferences will be more popular because of the spread of the media culture around the world.",
                "Two issues must be taken care of when building a VoIP conferencing system: (i) the front-end, consisting of the application program running on the end-users computers and (ii) the back-end that provides other application programs that facilitate conferencing and conference.",
                "The participating users are grouped into several domains.",
                "These domains are Local Area Networks (LANs), such as corporate or educational networks.",
                "This distributed assumption asks for distributed controlling and media handling solutions, as centralized systems would not scale for such very large conferences (vide Section 4).",
                "More explicitly, in each domain, we can identify several relevant logical components of a conferencing facility (Fig. 1):  An arbitrary number of end users (clients) that can take part in at most one audio conference at a time.",
                "Every user is Fig. 1.",
                "Conference example - 3 domains containing the necessary entities so that the conference can take place. included in one and only one domain at a given instant, but can move from domain to domain (nomadism).",
                "In our conferencing environment, these clients are regular SIP User Agents (SIP UAs), as defined in [22] so to gain in interoperability with other existing SIP-compatible systems.",
                "These clients are thus not aware of the complex setting that supports the conference and this is highlighted below.  One SIP Server (SIPS) per domain, taking care of all the signaling aspects of the conference (clients joining, leaving, etc.) [16].",
                "In particular, it is considered as a physical implementation encompassing different logical roles, namely a SIP Proxy Server, a SIP Registrar Server, a SIP Redirect Server and a SIP B2BUA (Back-to-Back User Agent) [22].",
                "This physical implementation enables the handling of incoming/outgoing SIP messages by one or another logical entity according to the needs.",
                "SIPS is entrusted with maintaining total service and has many advantages such as (a) it works as a centralized entity that can keep track of the activities of the UAs in a conference; (b) it can do all the switching for providing PBX features; (c) it can locate the UAs and invite them for a conference; (d) it can do the billing as well.",
                "SIPSs in different domains communicate with each other using SIP messages as described in [16].",
                "If the load on a particular SIPS is too heavy, it can create another SIPS in the same domain so that the load will be shared.  One Master Conference Server (M-CS) (simply a Conference Server (CS)) for each conference is created by the local SIPS when a conference starts.",
                "This server will be used for handling media packets for the clients of the domain.",
                "Its mechanism will be described in the next section.",
                "The M-CS will be able to create a hierarchy of CSs inside a domain by adding one or more Slave CSs (S-CSs) to accommodate all the active clients and prevent its own flooding at the same time.",
                "We will see this mechanism in some detail in the sequel.",
                "The entities described here are exhaustive and conform to the SIP philosophy.",
                "Thus, the use of SIP makes this architecture more useful and interoperable with any other SIP clients or servers. 6.",
                "ALGORITHMIC ISSUES 6.1 Selecting the Streams Similar to SipConf in [27], a Conference Server (CS) [17] has the function of supporting the conference; it is responsible for handling audio streams using RTP.",
                "It can also double to convert audio stream formats for a given client if necessary and can work as Translators/Mixers of RTP specification behind firewalls.",
                "We have based the design of our CS on H.323 Multipoint Processor (MP) [9].",
                "In short, the MP receives audio streams from the endpoints involved in a centralized or hybrid multipoint conference, processes them and returns them to the endpoints.",
                "An MP that processes audio prepares NMax audio outputs from M input streams after selection, mixing, or both.",
                "Audio mixing requires decoding the input audio to linear signals (PCM or analog), performing a linear combination of the signals and reencoding the result in an appropriate audio format.",
                "The MP may eliminate or attenuate some of the input signals in order to reduce noise and unwanted components.",
                "Fig. 2.",
                "Schematic diagram of a CS The limitation of H.323 is that it does not address the scalability of a conference.",
                "The architecture proposes a cascaded or daisy chain topology [10], which can be shown that it cannot scale up for a large conference.",
                "A CS serves many clients in the same conference.",
                "Thus it handles only one conference at a time.",
                "Multiple CSs may coexist in a domain, as when there are several conferences under way.",
                "Signaling-related messages of CSs are dealt in [11].",
                "The working of a CS is illustrated on Fig. 2: For each mixing interval, CS 1 chooses the best NMax audio packets out of the M1 (using a criterion termed Loudness Number, described in the next subsection).",
                "It may possibly receive and sends these to CSs 2 to P. The set of packets sent is denoted as ToOtherCSs.",
                "In the same mixing interval, it also receives the best NMax audio packets (out of possibly M2) from CS 2, similarly the best NMax (out of possibly MP) from CS P. For simplicity, we ignore propagation delay between CSs which indeed can be taken into account; it is beyond the scope of this presentation.",
                "The set of packets received is denoted as FromOtherCSs.",
                "Finally, it selects the best NMax packets from the set {ToOtherCSs union FromOtherCSs} and passes these packets to its own group.",
                "It can be seen that the set {ToOtherCSs union FromOtherCSs} is the same at all CSs.",
                "This ensures that any client in the conference finally receives the same set of packets for mixing.",
                "Hence all clients obtain a common view of the conference.",
                "Similarly, for each time slot (packet time), a subset, F of all clients is selected (using the same criterion) from the pool of packets from all other CSs plus the NMax clients selected locally.",
                "Their packets are mixed and played out at the clients.",
                "According to [15], the cardinality of F, |F| is NMax and is fixed at three.",
                "In our conferencing setup, selection is by the Master Conference Server (M-CS), which comes into the picture exclusively for media handling.",
                "Note that even if the SIP specification enables direct UA-to-UA media communication in a one-to-one call, it is also possible to use the Conference Server for two-party calls, especially because it is then more functional to create a real conference by adding a third and subsequently more participant(s).",
                "There are cases wherein the processing capacity of an M-CS is exceeded as it may have too many packets - from local domains and from remote domains - to process.",
                "In that case, the M-CS will create one or many S-CS (Fig. 6) and transfer its own clients as well as the new clients to them.",
                "In this configuration, the algorithm outlined above will be slightly modified, as the audio packets will go from clients to their dedicated S-CS that will select NMax packets to send to the local M-CS, which will then select NMax packets from all its S-CSs in the domain before sending them to the remote domains.",
                "The incoming packets from other domains will be received by the M-CS, select NMax of them and send them directly to the domain clients, bypassing the SCSs.",
                "This change implies that at most three intermediate entities exist for each audio packet, instead of two in the conventional setup.",
                "As the extra hop happens inside the LAN supposed to have a high-speed connectivity, we consider that it should not prevent us from using this hierarchy of CSs when theres a need to do so. 6.2 Loudness Number (LN) A basic question to be answered by the CS is the following.",
                "In a mixing interval, how should it choose NMax packets out of the M it might possibly receive?",
                "One way is to rank the M packets received according to their energies, and choose the top NMax.",
                "However, this is usually found to be inadequate because random fluctuations in packet energies can lead to poor audio quality.",
                "This indicates the need for a metric different from mere individual packet energies.",
                "The metric should have the following characteristics [12]: • A speaker (floor occupant) should not be cut off by a spike in the packet energy of another speaker.",
                "This implies that a speakers speech history should be given some weight.",
                "This is often referred to as Persistence or Hangover. • A participant who wants to interrupt a speaker will have to (i) speak loudly and (ii) keep trying for a little while.",
                "In a face-to-face conference, body language often indicates the intent to interrupt.",
                "But in a blind conference under discussion, a participants intention to interrupt can be conveyed effectively through LN.",
                "A floor control mechanism empowered to cut off a speaker forcefully must be ensured.",
                "These requirements are met by Loudness Number [12], which changes smoothly with time so that the selection (addition and deletion) of clients for conference is graceful.",
                "LN (= ) is a function of the amplitude of the current audio stream plus the activity and amplitude over a specific window in the past.",
                "Fig. 3.",
                "The different windows used for LN computation The Loudness Number is updated on a packet-by-packet basis.",
                "The basic parameter used here is packet amplitude, which is calculated as root mean square (rms) of the energies in audio samples of a packet, and denoted by XK.",
                "Three windows are defined as shown in Fig. 3.",
                "The present amplitude level of the speaker is found by calculating the moving average of packet amplitude (XK) within a window called Recent Past Window starting from the present instant to some past time.",
                "The past activity of the speaker is found by calculating the moving average of the packet amplitude (XK) within a window called Distant Past Window, which starts at the point where the Recent Past window ends and stretches back in the past for a pre-defined interval.",
                "The activity of the speaker in the past is found with a window called Activity Horizon, which spans the recent past window as well as the distant past window and beyond if necessary.",
                "Though the contribution of the activity horizon looks similar to the contribution of the recent past and distant past windows, past activity is computed from activity horizon window in a differently.",
                "Define the quantities during these three intervals as L1, L2 and L3.",
                "L1 quantifies the Recent Past speech activity, L2 the Distant Past speech activity and L3 gives a number corresponding to the speech activity in the Activity Horizon window quantifying how active the speaker was in the past few intervals.",
                "L3 yields a quantity that is proportional to the fraction of packets having energies above a pre-defined threshold (Eq. 3).",
                "The threshold is invariant across clients. ∑ +− = = 1 1 1 RPP P Wt tK K RP X W L (1) ∑ +−− −= = 1 2 1 DPRPP RPP WWt WtK K DP X W L (2) ∑ +− = ≥= 1 }{3 * 1 AHP P K Wt tK X AH I W L θθ (3) Where ifI KX 1}{ =≥θ θ≥KX = otherwise,0 The threshold is a constant. is set at 10-20 percent of the amplitude of the voice samples of a packet in our implementation here.",
                "Loudness Number λ for the present time instant (or the present packet) is calculated as, 332211 *L*L*L αααλ ++= (4) Here 1\u000f 2 DQG 3 are chosen such that: 0< 1\u000f 2\u001f\u0014\u000f \u0013\u001f 1\u000e 2\u001f\u0014 DQG 3=1-\u000b 1\u000e 2) Here, 1 is the weight given to the recent past speech, 2 is the weight given to distant past speech and 3 is the weight given to speech activity in the activity horizon window considered. 6.3 Safety, Liveness and Fairness The λ parameter KDV VRPH PHPRU\\ GHSHQGLQJ RQ WKH VSUHDG RI the windows.",
                "After one conferee becomes silent, another can take the floor.",
                "Also, as there is more than one channel, interruption is enabled.",
                "A loud conferee is more likely to be heard because of elevated λ.",
                "This ensures fairness to all conferees.",
                "After all, even in a face-to-face conference, a more vocal speaker grabs special attention.",
                "All these desirable characteristics are embedded into the LN.",
                "A comprehensive discussion on selection of the various parameters and the dynamics of LN are beyond the scope of this paper. 6.4 Selection Algorithm using the LN Following the developments in subsections 6.1 and 6.2, we present the simple algorithm that runs at each Master-Conference Server (Algorithm. 1).",
                "This algorithm is based on the discussions in section 6.1.",
                "The globally unique set F is found using this procedure.",
                "Repeat for each time slot at each M-CS { 1.",
                "Get all the packets from the Clients that belong to it. 2.",
                "Find at most NMax Clients that have PD[LPXP RXW RI 0 &OLHQWV LQ LWV GRPDLQ\u0011 3.",
                "Store a copy of packets from those NMax Clients in database DB1. 4.",
                "Send these NMax packets to other M-CSs (on Unicast or Multicast, depending on the configuration). 5.",
                "Similarly, receive packets from all other M-CSs and store them in database DB2. 6.",
                "Now compare the packets in DB1 and DB2 on WKH EDVLV RI DQG VHOHFW D PD[LPXP RI NMax amongst them (to form set F) that should be played out at each Client. 7.",
                "Send the NMax packets in set F to the Clients in its domain. 8.",
                "Mix these NMax audio packets in set F after linearising and send it to dumb Clients in the domain. }",
                "Algorithm 1.",
                "Selection algorithm The mechanism proposed here is also depicted on Fig. 6, where a single conference takes place between three domains.",
                "The shaded clients are the ones selected in their local domains; their audio streams will be sent to other CSs. 7.",
                "DEPLOYMENT ISSUES We now analyze deployment issues associated with conference management.",
                "How are domains to be organized to maximize the number of participants able to join?",
                "To address this, we define some useful parameters.  Let d be the number of different domains in which there are active clients in a given conference.  Let Mi be the number of active clients present in domain i ( di ≤≤1 ) in a given conference.",
                "The total number of active clients in the conference is thus ∑= = d i iMM 1 .  Let C be the maximum number of audio streams a Conference Server can handle in a packet time, also called capacity.",
                "C is set according to the processing power of the weakest CS in the conference but as it cannot be assumed that we know it a-priori, it can be set according to some minimum system requirement a machine must meet in order to take part in a conference.  Let NMax be the number of output streams a CS has to send to other CSs in remote domains (see section 6.1).",
                "We will set NMax =3 (=|F|), according to [15].",
                "The optimization problem is now to find the value of d that maximizes the total number of clients Mi served by one CS in a domain with capacity C. We first dispose the case where the capacity is not exceeded (the existing CS is not overloaded), and then proceed to the case where there exists a need to create more CSs when a single CS is overloaded.",
                "We assume that clients are equally distributed amongst the domains, as we may not have information to assume an a-priori distribution of the clients.",
                "We can specify no more than an upper bound on the number of clients acceptable, given the number of active domains d. 7.1 Conferencing with only One Level of CSs In this subsection, we consider that we have only one CS, i.e., a unique M-CS in each domain.",
                "Thus it cannot be overloaded.",
                "We consider that the system works as outlined in section 6.1: The Clients send their audio packets to their local CS, which selects NMax streams, before sending them to other CSs.",
                "In parallel, it also receives NMax streams for every other CSs before taking a decision on which NMax streams will be selected, sent and played out at each individual clients.",
                "For system stability, any CS in the conference should be able to handle its local clients in addition to the audio packets from other domains.",
                "Clearly then, the following inequality must hold for every domain: )1( −⋅+≥ dN d M C Max (5) The limiting case of (5) (taking the equality) takes the form 2 )( dNdNCM MaxMax ⋅−⋅+= (6) To optimize d with respect to M, we set 0)(2 =+−⋅⋅= ∂ ∂ MaxMax NCdN d M (7) yielding     ⋅ + = Max Max N NC d 2 (8) ([ ]* = Rounding to nearest integer) and hence, M from (6).",
                "C d M 50 9 234 100 17 884 150 26 1950 200 34 3434 250 42 5334 300 51 7650 350 59 10384 400 67 13534 450 76 17100 500 84 21084 Table 1.",
                "Values of d and M computed for some values of C with NMax = 3.",
                "In Table 1, we give the values of d and M that were computed using (8) and (6) with NMax = 3.",
                "We see that the values of d and M, being dependent of C, are therefore based on the weakest CS.",
                "We see that there is a trade-off between M and d. We could admit more domains in the conference, but at the expense of restricting the total number of clients M in the conference.",
                "While implementing and testing the Conference Servers on a Pentium III 1.4 GHz running Windows NT, we were able to set C=300.",
                "But with the advent of faster computers (> 3 GHz), one can easily set C to higher values and determine d and M accordingly.",
                "Fig. 4 shows a contour plot and Fig. 5, a 3D-mesh showing optimized solutions for CSs of different capacities.",
                "These lead us to maximize the number of domains, and hence, to maximize the total number of clients based on the capacity of various CSs.",
                "In Fig. 4, the individual curves represent the total number of clients targeted, and we select a lower value of d, for capacity C, for targeted M to reduce traffic on WAN.",
                "Fig. 5 represents a different perspective of the same data in 3D.",
                "Fig. 4.",
                "Contour Plot of Capacity versus Optimum number of domains for various conference sizes 7.2 Conferencing with Two Levels of CSs Now considering the case where the number of clients in a particular domain is too large, i.e., d M Mi ≥ (9) one has to avoid the denial of service for new clients due to overloading of Conference Server.",
                "This problem can be solved by introducing a second level of CSs inside the given domain, as in Fig. 6.",
                "The existing M-CS creates a Slave CS (S-CS) that can handle up to C end-users and to which it transfers all its active clients.",
                "Here, the system works differently as outlined in section 6.1: The Clients send their audio packets to their local S-CS, which selects NMax streams, before sending them to a local M-CS, which will proceed in the same way, before sending NMax streams to the other domains.",
                "Each newly created S-CS must run on a separate machine.",
                "The M-CS has to create more S-CSs if the number of active clients exceeds C in the course of the conference after the transfer.",
                "With this mechanism, the M-CS will be able to create utmost     −⋅− = Max Max N dNC U )1( S-CSs, (10) as it must handle 3 (= NMax) packets for each local S-CSs and 3 (= NMax) packets from each other remote domains.",
                "We can then calculate the maximum theoretical number of active clients CUMi ⋅= in each domain as well as M, for the whole conference as CUdM ⋅⋅= .",
                "Fig. 5. 3D Plot of Capacity versus Optimum number of domains for various conference sizes Of course, one could further create a third level in the hierarchy, giving the possibility of accommodating even more clients.",
                "This may be unnecessary as the number of possible clients is large enough with two levels. 8.",
                "PERFORMANCE DISCUSSION We now analyze the performance of the algorithm presented in subsection 6.3, i.e., the one taking care of the exchange of audio packets between the different domains.",
                "Note that the packets that are transiting within the LAN take advantage of the higher capacity (generally coupled with multicast capabilities) and therefore do not require a performance analysis.",
                "Thus we have to look only at the RTP packets over the WAN, i.e., between participating M-CSs.",
                "As each M-CS from a domain will be sending only NMax out of d M packets to the other CSs ( MaxN d M >> ), the bandwidth used by the application over a WAN is upper-bounded by the following expression.",
                "The total number of audio packets transiting over the WAN for each time slot is ∑ ∑= ≠=        d i d ijj MaxN 1 ,1 which is quadratic in the number of domains (i.e., O(d2 )).",
                "However, it is independent of the total number of active clients.",
                "This would not have been the case had all packets been sent over the network in each time slot.",
                "The saving is tremendous.",
                "Yet, one may contend that sending three packets to and from all domains is a waste of resources, as most of these streams will not be selected.",
                "If just one client is active, selecting a subset of clients in that domain is unnecessary.",
                "Pessimistic and optimistic algorithms as presented in the sequel aim at reducing the traffic further by harnessing the slow varying nature of the LN. 8.1 Pessimistic algorithm Consider a scenario wherein the lowest LN (called LNt) of the three globally selected streams (set F of Section 6.1) exceeds the LN of the most dominant stream of a domain.",
                "Evidently, the chances that the next two dominant streams of that domain being selected to F in the next packet period are less.",
                "Here, we send this most dominant stream and withhold the other two.",
                "There may be an error in unique selection across all domains for one packet period only.",
                "As LN varies slowly, the error would get automatically rectified in a subsequent packet period (slot).",
                "In this algorithm, there is at least one stream in each period.",
                "The net network traffic in a packet period in the best case is )1( −⋅ dd , i.e., )( 2 dO using unicast, instead of MaxNdd ⋅−⋅ )1( .",
                "Considerable valuable bandwidth can be saved using this heuristic.",
                "The resulting traffic complexity reduces from O(d2 ) to O(d) in multicast-enabled networks.",
                "Initialize LNt = 0 at an M-CS/S-CS A.",
                "In the first time slot (packet time), each CS sends the top NMax streams (based on their LN) to all other CSs.",
                "At each M-CS/S-CS and for each packet time: B.",
                "Find the value of lowest LN of the NMax globally selected streams (set F) from the previous time slot.",
                "Set LNt with this value.",
                "C. At each CS domain, select the NMax local streams that have maximum value of LN (ToOtherCSs set).",
                "D. Select streams that have LN > LNt.",
                "IF there are >= NMax streams with LN > LNt then send top NMax to other CSs.",
                "ELSE IF there are (NMax-1) streams with LN>LNt then send top (NMax-1) plus the one lower than LNt (i.e., top NMax) to other CSs.",
                "ELSE IF there are (NMax-2) streams with LN>LNt then send top (NMax-2) plus the one lower than LNt (i.e. top (NMax -1)) to other CSs. …… ELSE IF there are NO streams with LN> LNt then send top 1 stream to other CSs.",
                "E. Packets sent in step D form DB1.",
                "Packets received from other CSs form DB2.",
                "F. For this time slot, find global NMax streams based on LN from DB1 U DB2 (set F) G. Send set F to the clients in its domain.",
                "Update LNt for the next period.",
                "Algorithm 2.",
                "Pessimistic algorithm to reduce the number of packets sent over the Internet.",
                "Fig. 6.",
                "Example of a 2-level hierarchy of Conference Servers; the shaded Clients are the one selected by the M-CS and will be sent to other domains CSs.",
                "In this algorithm the saving in traffic is at the cost of relaxing the condition of formation of globally unique set F. However, the discrepancies in selected streams at different domains remain for a short period of time depending on the transportation delay between any two domains.",
                "Even for a total delay of 400ms, for only 10 packet time slots the uniqueness is lost.",
                "This duration in a real-time interactive conversation is non-perceivable by the listener.",
                "In the case that there is a joke and every one laughs, then there would be sudden rise in the number of packets and it would be upper bounded by MaxN)d(O 2 for a short period. 8.2 Optimistic Algorithm The traffic can be reduced further.",
                "The scheme in the following algorithm (Algorithm. 3) is withholding all the streams that have less value of LN compared to the least of the three in the set F. We can find the correct and unique three streams after a few time slots depending on the transportation delay between the domains.",
                "As the packet period is of the order of 40ms, the error in the selection is unnoticeable.",
                "The number of streams on network in this case is always restricted to NMax (=3).",
                "Even without Voice Activity Detection (VAD), there will be no more than three streams in the network in the best case, thus the total traffic is constant.",
                "A sudden burst of traffic, as described in 8.1, is a particular case.",
                "These advantages are due to exploitation of the characteristics of LN.",
                "Initialize LNt = 0 at an M-CS/S-CS A.",
                "In the first time slot (packet time), each CS sends the top NMax streams (based on their LN) to all other CSs.",
                "At each M-CS/S-CS and for each packet time: B.",
                "Find the value of lowest LN of the NMax globally selected streams (set F) from the previous time slot.",
                "Set LNt with this value.",
                "C. At each CS domain, select the NMax local streams that have maximum value of LN (ToOtherCSs set) D. Select streams that have LN > LNt IF there are >= NMax streams with LN > LNt then send top NMax to other CSs.",
                "ELSE IF there are (NMax-1) streams with LN>LNt then send top (NMax-1) and see E. ELSE IF there are (NMax-2) streams with LN>LNt then send top (NMax-2) and see E. …… ELSE IF there are NO streams with LN> LNt then dont send any stream.",
                "E. Exceptions: IF the stream that was in F in the last interval belongs to this CS then select and send that stream even if its LN is now < LNt. (Note this occurs only at that CS which had the stream that was the last of the three in the previous packet period.)",
                "F. Packets sent in step D and E form DB1.",
                "Packets received from other CSs form DB2.",
                "G. For this time slot, find global NMax streams based on LN from DB1 U DB2 (set F).",
                "H. Send set F to the clients in its domain.",
                "Update LNt for the next period.",
                "Algorithm 3.",
                "Optimistic algorithm to reduce the number of packets sent over the Internet Furthermore, when VAD is used [13], it would further reduce the traffic by sending the header part of the RTP packet only and not the whole packet, thus in order to keep updating the LN across.",
                "The traffic here in this case is O(NMax) for multicast and O(d) for unicast.",
                "We see that the above algorithms save bandwidth and computation at each CS, and leads to a scalable architecture with multiple CSs mainly because clients are grouped in domains.",
                "The necessary bandwidth is not dependent on the total number of active clients.",
                "As the CS always chooses the best three clients out of all the clients assigned to it in the domain, addition of new clients to the existing conference will not cause any scalability problem. 8.3 Availability of Multicasting In the architecture that has been proposed, no assumption was made about the availability of multicasting support from the network.",
                "The traffic will be further reduced if multicasting is available over WAN.",
                "It is simple to show that the order of traffic would tend to become O(d) from O(d2 ).",
                "This is an approximation as saving in multicasting depends also on the topology.",
                "The analysis was done for the case wherein multicast is not available (a realistic assumption in todays Internet).",
                "The advantage of this set up is that we can use it even if multicasting is partially available.",
                "We can instruct CSs during the set-up phase to send unicast packets to those CSs that cannot receive multicast packets whereas CSs on multicast enabled routers can exchange packets on a multicast address.",
                "The data structures and conference objects inside a CS is given in [14].",
                "Fig. 7.",
                "User Interface for setting the weight for NMax audio streams (setting Self-bar to zero avoids echo). 8.4 Quality Improvement The observed improvement in the perceived quality of the conference service is due to: (1) limiting the number of concurrent speakers to a low number such as three.",
                "Generally, in a conference if more than two participants speak the intelligibility is lost.",
                "The conversational analysis demonstrates that there would be a repair mechanism [15] in such a case. (2) Delay: The audio stream between any two clients will pass through at most two CSs thus reducing the end-to-end delay.",
                "For a large conference there might be three CSs however, one hop is within the domain incurring negligible delay. (3) As the streams are mixed only at the clients, there can be a customized mix of the streams.",
                "The individual tuning of mixing with weights the spatialism is preserved.",
                "Fig. 7 shows the user interface for the same.",
                "The echo when self-stream is selected can be avoided by reducing the weight.",
                "Nonetheless, feedback helps in reassuring speaker that he/she is heard by all. 9.",
                "CONCLUSION In this paper, we have presented a discussion on a voice-only virtual conferencing environment.",
                "We have argued that the distributed nature of deployment here makes it scalable.",
                "Interactivity is achieved by adapting a recent stream selection scheme based on Loudness Number.",
                "Additionally, we incorporate a result from a more recent work [15] where the sufficiency of three simultaneous speakers has been demonstrated.",
                "Thus, there is significantly effective utilization of bandwidth.",
                "A mixed stream is played out at each client; each client may choose to have a customized mix since mixing is done at the local terminal of each client.",
                "These render impromptu speech in a virtual teleconference over VoIP a reality, as in a real face-to-face conference.",
                "Compatibility is assured thanks to the use of SIP, the most soughtafter signaling protocol.",
                "To ensure a satisfying performance, we do not demand the availability of multicast, but use it if and when available.",
                "The traffic in the WAN (Internet) is upper-bounded by the square of the number of domains, -- further reduced by using heuristic algorithms -- which is far below the total number of clients in the conference.",
                "This is due to the use of a Conference Server local to each domain.",
                "VAD techniques help further traffic reduction.",
                "Using SIP standard for signaling makes this solution highly interoperable.",
                "We have implemented a CS application on a campus-wide network.",
                "We believe this new generation of virtual conferencing environments will gain more popularity in the future as their ease of deployment is assured thanks to readily available technologies and scalable frameworks. 10.",
                "REFERENCES [1] L Aguilar et al., Architecture for a Multimedia Teleconferencing System, in Proceedings of the ACM SIGCOMM, Aug 1986, pp. 126-136. [2] Carsten Bormann, Joerg Ott et al., Simple Conference Control Protocol, Internet Draft, Dec. 1996. [3] M. Decina and V. Trecordi, Voice over Internet Protocol and Human Assisted E-Commerce, IEEE Comm.",
                "Magazine, Sept. 1999, pp. 64-67. [4] Eckehard Doerry, An Empirical Comparison of Copresent and Technologically-mediated Interaction based on Communicative Breakdown, Phd Thesis, Graduate School of the University of Oregon, 1995. [5] H. P. Dommel and J.J. Garcia-Luna-Aceves, Floor Control for Multimedia Conferencing and Collaboration, J. Multimedia Systems, Vol. 5, No. 1, January 1997, pp. 23-38. [6] Amitava Dutta-Roy, Virtual Meetings with desktop conferencing, IEEE Spectrum, July 1998, pp. 47-56. [7] M. Handley and V. Jacobson, SDP: Session Description Protocol, RFC 2327, IETF, April 1998. [8] M. Handley, J. Crowcroft et al., Very large conferences on the Internet: the Internet multimedia conferencing architecture, Journal of Computer Networks, vol. 31, No. 3, Feb 1999, pp. 191-204. [9] ITU-T Rec.",
                "H.323, Packet based Multimedia Communications Systems, vol. 2, 1998. [10] P. Koskelainen, H. Schulzrinne and X. Wu, A SIP-based Conference Control Framework, NOSSDAV02, May 2002, pp. 53-61. [11] R Venkatesha Prasad et al., Control Protocol for VoIP Audio Conferencing Support, International Conference on Advanced Communication Technology, Mu-Ju, South Korea, Feb 2001, pp. 419-424. [12] R Venkatesha Prasad et al., Automatic Addition and Deletion of Clients in VoIP Conferencing, 6th IEEE Symposium on Computers and Communications, July 2001, Hammamet, Tunisia, pp. 386-390. [13] R Venkatesha Prasad, H S Jamadagni, Abjijeet, et al Comparison of Voice Activity Detection Algorithms, 7th IEEE Symposium on Computers and Communications.",
                "July 2002, Sicily, Italy, pp. 530-535. [14] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, A Scalable Distributed VoIP Conferencing using SIP, Proc. of the 8th IEEE Symposium on Computers and Communications, Antalya, Turkey, June 2003. [15] R Venkatesha Prasad, H S Jamadagni and H N Shankar, On Problem of Specifying Number of Floors in a Voice Only Conference, To appear in IEEE ITRE 2003. [16] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, A Proposal for Distributed Conferencing on SIP using Conference Servers, To appear in the Proc. of MMNS 2003, Belfast, UK, September 2003. [17] R. Venkatesha Prasad, H.S.",
                "Jamadagni, J. Kuri, R.S.",
                "Varchas, A Distributed VoIP Conferencing Support Using Loudness Number, Tech.",
                "Rep. TR-CEDT-TE-03-01 [18] M. Radenkovic et al, Scaleable and Adaptable Audio Service for Supporting Collaborative Work and Entertainment over the Internet, SSGRR 2002, LAquila, Italy, Jan. 2002. [19] M. Radenkovic, C. Greenhalgh, S. Benford, Deployment Issues for Multi-User Audio Support in CVEs, ACM VRST 2002, Nov. 2002, pp. 179-185. [20] Srinivas Ramanathan, P. Venkata Rangan, Harrick M. Vin, Designing Communication Architectures for Interorganizational Multimedia Collaboration, Journal of Organizational Computing, 2 (3&4), pp.277-302, 1992. [21] A.",
                "B. Roach, Session Initiation Protocol (SIP)-Specific Event Notification, RFC 3265, IETF, June 2002. [22] J. Rosenberg, H. Schulzrinne et al., SIP: Session Initiation Protocol, RFC 3261, IETF, June 2002. [23] J. Rosenberg, H. Schulzrinne, Models for Multy Party Conferencing in SIP, Internet Draft, IETF, July 2002. [24] H. Schulzrinne et al., RTP: a transport protocol for realtime applications, RFC 1889, IETF, Jan 1996. [25] Lisa R. Silverman, Coming of Age: Conferencing Solutions Cut Corporate Costs, White Paper, www.imcca.org/wpcomingofage.asp [26] Kundan Singh, Gautam Nair and Henning Schulzrinne, Centralized Conferencing using SIP, Proceedings of the 2nd IP-Telephony Workshop (IPTel), April 2001. [27] D. Thaler, M. Handley and D. Estrin, The Internet Multicast Address Allocation Architecture, RFC 2908, IETF, Sept. 2000."
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": [
                []
            ]
        },
        "vce": {
            "translated_key": "vce",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Deployment Issues of a VoIP Conferencing System in a Virtual Conferencing Environment R. Venkatesha Prasad i Richard Hurni ii H.S.",
                "Jamadagni iii H.N.",
                "Shankar iv i, iii Centre for Electronics Design and Technology Indian Institute of Science, Bangalore, India Telephone: +91 80 360 0810 i, iii {vprasad, hsjam}@cedt.iisc.ernet.in ii hurni@ieee.org iv hn_shankar@yahoo.com ABSTRACT Real-time services have been supported by and large on circuitswitched networks.",
                "Recent trends favour services ported on packet-switched networks.",
                "For audio conferencing, we need to consider many issues - scalability, quality of the conference application, floor control and load on the clients/servers - to name a few.",
                "In this paper, we describe an audio service framework designed to provide a Virtual Conferencing Environment (<br>vce</br>).",
                "The system is designed to accommodate a large number of end users speaking at the same time and spread across the Internet.",
                "The framework is based on Conference Servers [14], which facilitate the audio handling, while we exploit the SIP capabilities for signaling purposes.",
                "Client selection is based on a recent quantifier called Loudness Number that helps mimic a physical face-to-face conference.",
                "We deal with deployment issues of the proposed solution both in terms of scalability and interactivity, while explaining the techniques we use to reduce the traffic.",
                "We have implemented a Conference Server (CS) application on a campus-wide network at our Institute.",
                "Categories and Subjects Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - Client / Server, distributed applications.",
                "General Terms Algorithms, Performance, Design, Theory. 1.",
                "INTRODUCTION Todays Internet uses the IP protocol suite that was primarily designed for the transport of data and provides best effort data delivery.",
                "Delay-constraints and characteristics separate traditional data on the one hand from voice & video applications on the other.",
                "Hence, as progressively time-sensitive voice and video applications are deployed on the Internet, the inadequacy of the Internet is exposed.",
                "Further, we seek to port telephone services on the Internet.",
                "Among them, virtual conference (teleconference) facility is at the cutting edge.",
                "Audio and video conferencing on Internet are popular [25] for the several advantages they inhere [3,6].",
                "Clearly, the bandwidth required for a teleconference over the Internet increases rapidly with the number of participants; reducing bandwidth without compromising audio quality is a challenge in Internet Telephony.",
                "Additional critical issues are: (a) packet delay, (b) echo, (c) mixing of audio from selected clients, (d) automatic selection of clients to participate in the conference, (e) playout of mixed audio for every client, (f) handling clients not capable of mixing audio streams (such clients are known as dumb clients), and (g) deciding the number of simultaneously active clients in the conference without compromising voice quality.",
                "While all the above requirements are from the technology point of view, the users perspective and interactions are also essential factors.",
                "There is plenty of discussion amongst HCI and CSCW community on the use of Ethnomethodology for design of CSCW applications.",
                "The basic approach is to provide larger bandwidth, more facilities and more advanced control mechanisms, looking forward to better quality of interaction.",
                "This approach ignores the functional utility of the environment that is used for collaboration.",
                "Eckehard Doerry [4] criticizes this approach by saying it is keeping form before function.",
                "Thus, the need is to take an approach that considers both aspects - the technical and the functional.",
                "Regarding the functional aspect, we refer to [15] where it has been dealt with in some detail.",
                "In this work, we do not discuss video conferencing; its inclusion does not significantly benefit conference quality [4].",
                "Our focus is on virtual audio environments.",
                "We first outline the challenges encountered in virtual audio conferences.",
                "Then we look into the motivations followed by relevant literature.",
                "In Section 5, we explain the architecture of our system.",
                "Section 6 comprises description of the various algorithms used in our setup.",
                "We address deployment issues.",
                "A discussion on Swiss Federal Institute of Technology, Lausanne.",
                "Former visitor at CEDT.",
                "PESIT and NIAS, Bangalore, India.iv ii performance follows.",
                "We conclude taking alongside some implementation issues. 2.",
                "CHALLENGES IN VoIP CONFERENCING Many challenges arise in building a VoIP application.",
                "The following are of particular concern in the process: • Ease of use: Conferencing must be simple; users need no domain expertise.",
                "Management (addition/removal) of clients and servers must be uncomplicated.",
                "Application development should not presuppose specific characteristics of the underlying system or of network layers.",
                "Ease of use may include leveraging readily available, technically feasible and economically viable technologies. • Scalability: Conferencing must seem uninterrupted under heavy loads, i.e., when many additional users are added on.",
                "Traffic on WAN should not grow appreciably with the total number of clients; else, this has lead to congestion.",
                "So a means to regulate traffic to a minimum is needed for this kind of real-time applications. • Interactivity: In Virtual Conferencing Environments (VCEs), we intend a face-to-face-like conferencing application that mimics a real conference, where more vocal participants invite attention.",
                "Turn-taking in floor occupation by participants must be adapted gracefully to give a feel of natural transition. • Standardization: The solution must conform to established standards so as to gain interoperability and peer acceptance.",
                "The above requirements are placed in the perspective of observations made in earlier works (vide Sections 3 and 4) and will steer the <br>vce</br> design. 3.",
                "THE MOTIVATION Ramanathan and Rangan [20] have studied in detail the architectural configurations comparing many conferencing architecture schemes taking into consideration the network delay and computation requirements for mixing.",
                "Functional division and object-oriented architecture design that aid in implementation is presented in [1].",
                "An overview of many issues involved in supporting a large conference is dealt in [8].",
                "H. P. Dommel [5] and many others highlight floor control as another pivotal aspect to be taken into account in designing a conferencing tool.",
                "Tightly coupled conference control protocols in Internet belong to the ITU-T H.323 family [9]; however, they are mainly for small conferences.",
                "The latest IETF draft by Rosenberg and Schulzrinne [23] discusses conferencing models with SIP [22] in the background.",
                "Aspects of implementation for centralized SIP conferencing are reported in [26].",
                "A new approach called partial mixing by Radenkovic [18] allows for mixed and non-mixed streams to coexist.",
                "In all the above proposals, while there are some very useful suggestions, they share one or more of the following limitations: • In an audio conference, streams from all the clients need not be mixed.",
                "Actually, mixing many arbitrary streams [24] from clients degrades the quality of the conference due to the reduction in the volume (spatial aspect of speech).",
                "The number of streams mixed varies dynamically depending on the number of active participants.",
                "This would lead to fluctuations in the volume of every individual participant causing severe degradation in quality.",
                "Customized mixing of streams is not possible when many clients are active.",
                "There is a threshold on the number of simultaneous speakers above which increasing the number of speakers becomes counterproductive to conference quality.",
                "Fixing the maximum number of simultaneous speakers is dealt in a recent work [15] using Ethnomethodology, and is conjectured to be three.",
                "Thus it is advisable to honour that constraint. • There cannot be many intermediate mixers (similarly, Conference Servers as in [10]) in stages as in [20] because it brings in inordinate delay by increasing the number of hops and is not scalable with interactivity in focus. • Floor Control for an audio conference (even video conference) with explicit turn-taking instructions to participants renders the conference essentially a one-speakerat-a-time affair, not a live and free-to-interrupt one.",
                "This way, the conference becomes markedly artificial and its quality degrades.",
                "Schulzrinne et al. [24], assume only one participant is speaking at a time.",
                "In this case, if applications are implemented with some control [5], the service becomes gagging for the users. • Partial mixing [18] has a similar problem as that of mixing when more streams are mixed.",
                "Moreover, in [18], to allow impromptu speech, mixing is not done when the network can afford high bandwidth requirements for sending/receiving all the streams, but it is unnecessary [15]. • For large conferences [23, 10] a centralized conference cannot scale up.",
                "With multicasting, clients will have to parse many streams and traffic on a clients network increases unnecessarily.",
                "Evidently, different particular issues, all of which are a subset of requirements (defined in [14] and [16]) for a VoIP conferencing support, are tackled.",
                "Thus there is a need to address conferencing as a whole with all its requirements considered concurrently.",
                "Towards this goal, the VoIP conferencing system we propose is intended to be scalable and interactive.",
                "We make use of the Loudness Number for implementing floor control.",
                "This permits a participant to freely get into the speaking mode to interrupt the current speaker as in a natural face-to-face meeting.",
                "An upper limit on the number of floors (i.e., the number of speakers allowed to speak at the same time) is fixed using a conjecture proposed in [15].",
                "The work presented here is in continuation of our studies into conferencing based on the Session Initiation Protocol in [14] and [16].",
                "SIP, defined in [22] is now the most popular standard for VoIP deployment and has been chosen for its strength, ease of use, extensibility and compatibility.",
                "This is the reason it will be in the background of all controlling messages that will implicitly arise between the entities in our architecture.",
                "The actual messages are described in [16] and, as such, we do not present a complete description of them here. 4.",
                "RELATED WORK The SIP standard defined in RFC 3261 [22] and in later extensions such as [21] does not offer conference control services such as floor control or voting and does not prescribe how a conference is to be managed.",
                "However SIP can be used to initiate a session that uses some other conference control protocol.",
                "The core SIP specification supports many models for conferencing [26, 23].",
                "In the server-based models, a server mixes media streams, whereas in a server-less conference, mixing is done at the end systems.",
                "SDP [7] can be used to define media capabilities and provide other information about the conference.",
                "We shall now consider a few conference models in SIP that have been proposed recently [23].",
                "First, let us look into server-less models.",
                "In End-System Mixing, only one client (SIP UA) handles the signaling and media mixing for all the others, which is clearly not scalable and causes problems when that particular client leaves the conference.",
                "In the Users Joining model, a tree grows, as each invited party constitutes a new branch in the distribution path.",
                "This leads to an increasing number of hops for the remote leaves and is not scalable.",
                "Another option would be to use multicast for conferencing but multicast is not enabled over Internet and only possible on a LAN presently.",
                "Among server-based models, in a Dial-In Conference, UAs connect to a central server that handles all the mixing.",
                "This model is not scalable as it is limited by the processing power of the server and bandwidth of the network.",
                "Adhoc Centralized Conferences and Dial-Out Conference Servers have similar mechanisms and problems.",
                "Hybrid models involving centralized signaling and distributed media, with the latter using unicast or multicast, raise scalability problems as before.",
                "However an advantage is that the conference control can be a third party solution.",
                "Distributed Partial Mixing, presented in [18], proposes that in case of bandwidth limitation, some streams are mixed and some are not, leaving interactivity intact.",
                "Loss of spatialism when they mix and the bandwidth increase when they do not are open problems.",
                "A related study [19] by the same author proposes conferencing architecture for Collaborative Virtual Environments (CVEs) but does not provide the scalability angle without the availability of multicasting.",
                "With the limitations of proposed conferencing systems in mind, we will now detail our proposal. 5.",
                "SYSTEM ARCHITECTURE This section is dedicated to the description of the proposed system architecture.",
                "However, as this paper constitutes the continuation of our work started in [14] and furthered in [16], we will not present here all the details about the proposed entities and invite the readers to consult the papers mentioned above for a full and thorough description.",
                "First, we do not restrict our conferencing system to work on small conferences only, but rather on large audio VCEs that have hundreds (or even thousands) of users across a Wide Area Network (WAN) such as the Internet.",
                "This view stems from an appraisal that VCEs will gain in importance in the future, as interactive audio conferences will be more popular because of the spread of the media culture around the world.",
                "Two issues must be taken care of when building a VoIP conferencing system: (i) the front-end, consisting of the application program running on the end-users computers and (ii) the back-end that provides other application programs that facilitate conferencing and conference.",
                "The participating users are grouped into several domains.",
                "These domains are Local Area Networks (LANs), such as corporate or educational networks.",
                "This distributed assumption asks for distributed controlling and media handling solutions, as centralized systems would not scale for such very large conferences (vide Section 4).",
                "More explicitly, in each domain, we can identify several relevant logical components of a conferencing facility (Fig. 1):  An arbitrary number of end users (clients) that can take part in at most one audio conference at a time.",
                "Every user is Fig. 1.",
                "Conference example - 3 domains containing the necessary entities so that the conference can take place. included in one and only one domain at a given instant, but can move from domain to domain (nomadism).",
                "In our conferencing environment, these clients are regular SIP User Agents (SIP UAs), as defined in [22] so to gain in interoperability with other existing SIP-compatible systems.",
                "These clients are thus not aware of the complex setting that supports the conference and this is highlighted below.  One SIP Server (SIPS) per domain, taking care of all the signaling aspects of the conference (clients joining, leaving, etc.) [16].",
                "In particular, it is considered as a physical implementation encompassing different logical roles, namely a SIP Proxy Server, a SIP Registrar Server, a SIP Redirect Server and a SIP B2BUA (Back-to-Back User Agent) [22].",
                "This physical implementation enables the handling of incoming/outgoing SIP messages by one or another logical entity according to the needs.",
                "SIPS is entrusted with maintaining total service and has many advantages such as (a) it works as a centralized entity that can keep track of the activities of the UAs in a conference; (b) it can do all the switching for providing PBX features; (c) it can locate the UAs and invite them for a conference; (d) it can do the billing as well.",
                "SIPSs in different domains communicate with each other using SIP messages as described in [16].",
                "If the load on a particular SIPS is too heavy, it can create another SIPS in the same domain so that the load will be shared.  One Master Conference Server (M-CS) (simply a Conference Server (CS)) for each conference is created by the local SIPS when a conference starts.",
                "This server will be used for handling media packets for the clients of the domain.",
                "Its mechanism will be described in the next section.",
                "The M-CS will be able to create a hierarchy of CSs inside a domain by adding one or more Slave CSs (S-CSs) to accommodate all the active clients and prevent its own flooding at the same time.",
                "We will see this mechanism in some detail in the sequel.",
                "The entities described here are exhaustive and conform to the SIP philosophy.",
                "Thus, the use of SIP makes this architecture more useful and interoperable with any other SIP clients or servers. 6.",
                "ALGORITHMIC ISSUES 6.1 Selecting the Streams Similar to SipConf in [27], a Conference Server (CS) [17] has the function of supporting the conference; it is responsible for handling audio streams using RTP.",
                "It can also double to convert audio stream formats for a given client if necessary and can work as Translators/Mixers of RTP specification behind firewalls.",
                "We have based the design of our CS on H.323 Multipoint Processor (MP) [9].",
                "In short, the MP receives audio streams from the endpoints involved in a centralized or hybrid multipoint conference, processes them and returns them to the endpoints.",
                "An MP that processes audio prepares NMax audio outputs from M input streams after selection, mixing, or both.",
                "Audio mixing requires decoding the input audio to linear signals (PCM or analog), performing a linear combination of the signals and reencoding the result in an appropriate audio format.",
                "The MP may eliminate or attenuate some of the input signals in order to reduce noise and unwanted components.",
                "Fig. 2.",
                "Schematic diagram of a CS The limitation of H.323 is that it does not address the scalability of a conference.",
                "The architecture proposes a cascaded or daisy chain topology [10], which can be shown that it cannot scale up for a large conference.",
                "A CS serves many clients in the same conference.",
                "Thus it handles only one conference at a time.",
                "Multiple CSs may coexist in a domain, as when there are several conferences under way.",
                "Signaling-related messages of CSs are dealt in [11].",
                "The working of a CS is illustrated on Fig. 2: For each mixing interval, CS 1 chooses the best NMax audio packets out of the M1 (using a criterion termed Loudness Number, described in the next subsection).",
                "It may possibly receive and sends these to CSs 2 to P. The set of packets sent is denoted as ToOtherCSs.",
                "In the same mixing interval, it also receives the best NMax audio packets (out of possibly M2) from CS 2, similarly the best NMax (out of possibly MP) from CS P. For simplicity, we ignore propagation delay between CSs which indeed can be taken into account; it is beyond the scope of this presentation.",
                "The set of packets received is denoted as FromOtherCSs.",
                "Finally, it selects the best NMax packets from the set {ToOtherCSs union FromOtherCSs} and passes these packets to its own group.",
                "It can be seen that the set {ToOtherCSs union FromOtherCSs} is the same at all CSs.",
                "This ensures that any client in the conference finally receives the same set of packets for mixing.",
                "Hence all clients obtain a common view of the conference.",
                "Similarly, for each time slot (packet time), a subset, F of all clients is selected (using the same criterion) from the pool of packets from all other CSs plus the NMax clients selected locally.",
                "Their packets are mixed and played out at the clients.",
                "According to [15], the cardinality of F, |F| is NMax and is fixed at three.",
                "In our conferencing setup, selection is by the Master Conference Server (M-CS), which comes into the picture exclusively for media handling.",
                "Note that even if the SIP specification enables direct UA-to-UA media communication in a one-to-one call, it is also possible to use the Conference Server for two-party calls, especially because it is then more functional to create a real conference by adding a third and subsequently more participant(s).",
                "There are cases wherein the processing capacity of an M-CS is exceeded as it may have too many packets - from local domains and from remote domains - to process.",
                "In that case, the M-CS will create one or many S-CS (Fig. 6) and transfer its own clients as well as the new clients to them.",
                "In this configuration, the algorithm outlined above will be slightly modified, as the audio packets will go from clients to their dedicated S-CS that will select NMax packets to send to the local M-CS, which will then select NMax packets from all its S-CSs in the domain before sending them to the remote domains.",
                "The incoming packets from other domains will be received by the M-CS, select NMax of them and send them directly to the domain clients, bypassing the SCSs.",
                "This change implies that at most three intermediate entities exist for each audio packet, instead of two in the conventional setup.",
                "As the extra hop happens inside the LAN supposed to have a high-speed connectivity, we consider that it should not prevent us from using this hierarchy of CSs when theres a need to do so. 6.2 Loudness Number (LN) A basic question to be answered by the CS is the following.",
                "In a mixing interval, how should it choose NMax packets out of the M it might possibly receive?",
                "One way is to rank the M packets received according to their energies, and choose the top NMax.",
                "However, this is usually found to be inadequate because random fluctuations in packet energies can lead to poor audio quality.",
                "This indicates the need for a metric different from mere individual packet energies.",
                "The metric should have the following characteristics [12]: • A speaker (floor occupant) should not be cut off by a spike in the packet energy of another speaker.",
                "This implies that a speakers speech history should be given some weight.",
                "This is often referred to as Persistence or Hangover. • A participant who wants to interrupt a speaker will have to (i) speak loudly and (ii) keep trying for a little while.",
                "In a face-to-face conference, body language often indicates the intent to interrupt.",
                "But in a blind conference under discussion, a participants intention to interrupt can be conveyed effectively through LN.",
                "A floor control mechanism empowered to cut off a speaker forcefully must be ensured.",
                "These requirements are met by Loudness Number [12], which changes smoothly with time so that the selection (addition and deletion) of clients for conference is graceful.",
                "LN (= ) is a function of the amplitude of the current audio stream plus the activity and amplitude over a specific window in the past.",
                "Fig. 3.",
                "The different windows used for LN computation The Loudness Number is updated on a packet-by-packet basis.",
                "The basic parameter used here is packet amplitude, which is calculated as root mean square (rms) of the energies in audio samples of a packet, and denoted by XK.",
                "Three windows are defined as shown in Fig. 3.",
                "The present amplitude level of the speaker is found by calculating the moving average of packet amplitude (XK) within a window called Recent Past Window starting from the present instant to some past time.",
                "The past activity of the speaker is found by calculating the moving average of the packet amplitude (XK) within a window called Distant Past Window, which starts at the point where the Recent Past window ends and stretches back in the past for a pre-defined interval.",
                "The activity of the speaker in the past is found with a window called Activity Horizon, which spans the recent past window as well as the distant past window and beyond if necessary.",
                "Though the contribution of the activity horizon looks similar to the contribution of the recent past and distant past windows, past activity is computed from activity horizon window in a differently.",
                "Define the quantities during these three intervals as L1, L2 and L3.",
                "L1 quantifies the Recent Past speech activity, L2 the Distant Past speech activity and L3 gives a number corresponding to the speech activity in the Activity Horizon window quantifying how active the speaker was in the past few intervals.",
                "L3 yields a quantity that is proportional to the fraction of packets having energies above a pre-defined threshold (Eq. 3).",
                "The threshold is invariant across clients. ∑ +− = = 1 1 1 RPP P Wt tK K RP X W L (1) ∑ +−− −= = 1 2 1 DPRPP RPP WWt WtK K DP X W L (2) ∑ +− = ≥= 1 }{3 * 1 AHP P K Wt tK X AH I W L θθ (3) Where ifI KX 1}{ =≥θ θ≥KX = otherwise,0 The threshold is a constant. is set at 10-20 percent of the amplitude of the voice samples of a packet in our implementation here.",
                "Loudness Number λ for the present time instant (or the present packet) is calculated as, 332211 *L*L*L αααλ ++= (4) Here 1\u000f 2 DQG 3 are chosen such that: 0< 1\u000f 2\u001f\u0014\u000f \u0013\u001f 1\u000e 2\u001f\u0014 DQG 3=1-\u000b 1\u000e 2) Here, 1 is the weight given to the recent past speech, 2 is the weight given to distant past speech and 3 is the weight given to speech activity in the activity horizon window considered. 6.3 Safety, Liveness and Fairness The λ parameter KDV VRPH PHPRU\\ GHSHQGLQJ RQ WKH VSUHDG RI the windows.",
                "After one conferee becomes silent, another can take the floor.",
                "Also, as there is more than one channel, interruption is enabled.",
                "A loud conferee is more likely to be heard because of elevated λ.",
                "This ensures fairness to all conferees.",
                "After all, even in a face-to-face conference, a more vocal speaker grabs special attention.",
                "All these desirable characteristics are embedded into the LN.",
                "A comprehensive discussion on selection of the various parameters and the dynamics of LN are beyond the scope of this paper. 6.4 Selection Algorithm using the LN Following the developments in subsections 6.1 and 6.2, we present the simple algorithm that runs at each Master-Conference Server (Algorithm. 1).",
                "This algorithm is based on the discussions in section 6.1.",
                "The globally unique set F is found using this procedure.",
                "Repeat for each time slot at each M-CS { 1.",
                "Get all the packets from the Clients that belong to it. 2.",
                "Find at most NMax Clients that have PD[LPXP RXW RI 0 &OLHQWV LQ LWV GRPDLQ\u0011 3.",
                "Store a copy of packets from those NMax Clients in database DB1. 4.",
                "Send these NMax packets to other M-CSs (on Unicast or Multicast, depending on the configuration). 5.",
                "Similarly, receive packets from all other M-CSs and store them in database DB2. 6.",
                "Now compare the packets in DB1 and DB2 on WKH EDVLV RI DQG VHOHFW D PD[LPXP RI NMax amongst them (to form set F) that should be played out at each Client. 7.",
                "Send the NMax packets in set F to the Clients in its domain. 8.",
                "Mix these NMax audio packets in set F after linearising and send it to dumb Clients in the domain. }",
                "Algorithm 1.",
                "Selection algorithm The mechanism proposed here is also depicted on Fig. 6, where a single conference takes place between three domains.",
                "The shaded clients are the ones selected in their local domains; their audio streams will be sent to other CSs. 7.",
                "DEPLOYMENT ISSUES We now analyze deployment issues associated with conference management.",
                "How are domains to be organized to maximize the number of participants able to join?",
                "To address this, we define some useful parameters.  Let d be the number of different domains in which there are active clients in a given conference.  Let Mi be the number of active clients present in domain i ( di ≤≤1 ) in a given conference.",
                "The total number of active clients in the conference is thus ∑= = d i iMM 1 .  Let C be the maximum number of audio streams a Conference Server can handle in a packet time, also called capacity.",
                "C is set according to the processing power of the weakest CS in the conference but as it cannot be assumed that we know it a-priori, it can be set according to some minimum system requirement a machine must meet in order to take part in a conference.  Let NMax be the number of output streams a CS has to send to other CSs in remote domains (see section 6.1).",
                "We will set NMax =3 (=|F|), according to [15].",
                "The optimization problem is now to find the value of d that maximizes the total number of clients Mi served by one CS in a domain with capacity C. We first dispose the case where the capacity is not exceeded (the existing CS is not overloaded), and then proceed to the case where there exists a need to create more CSs when a single CS is overloaded.",
                "We assume that clients are equally distributed amongst the domains, as we may not have information to assume an a-priori distribution of the clients.",
                "We can specify no more than an upper bound on the number of clients acceptable, given the number of active domains d. 7.1 Conferencing with only One Level of CSs In this subsection, we consider that we have only one CS, i.e., a unique M-CS in each domain.",
                "Thus it cannot be overloaded.",
                "We consider that the system works as outlined in section 6.1: The Clients send their audio packets to their local CS, which selects NMax streams, before sending them to other CSs.",
                "In parallel, it also receives NMax streams for every other CSs before taking a decision on which NMax streams will be selected, sent and played out at each individual clients.",
                "For system stability, any CS in the conference should be able to handle its local clients in addition to the audio packets from other domains.",
                "Clearly then, the following inequality must hold for every domain: )1( −⋅+≥ dN d M C Max (5) The limiting case of (5) (taking the equality) takes the form 2 )( dNdNCM MaxMax ⋅−⋅+= (6) To optimize d with respect to M, we set 0)(2 =+−⋅⋅= ∂ ∂ MaxMax NCdN d M (7) yielding     ⋅ + = Max Max N NC d 2 (8) ([ ]* = Rounding to nearest integer) and hence, M from (6).",
                "C d M 50 9 234 100 17 884 150 26 1950 200 34 3434 250 42 5334 300 51 7650 350 59 10384 400 67 13534 450 76 17100 500 84 21084 Table 1.",
                "Values of d and M computed for some values of C with NMax = 3.",
                "In Table 1, we give the values of d and M that were computed using (8) and (6) with NMax = 3.",
                "We see that the values of d and M, being dependent of C, are therefore based on the weakest CS.",
                "We see that there is a trade-off between M and d. We could admit more domains in the conference, but at the expense of restricting the total number of clients M in the conference.",
                "While implementing and testing the Conference Servers on a Pentium III 1.4 GHz running Windows NT, we were able to set C=300.",
                "But with the advent of faster computers (> 3 GHz), one can easily set C to higher values and determine d and M accordingly.",
                "Fig. 4 shows a contour plot and Fig. 5, a 3D-mesh showing optimized solutions for CSs of different capacities.",
                "These lead us to maximize the number of domains, and hence, to maximize the total number of clients based on the capacity of various CSs.",
                "In Fig. 4, the individual curves represent the total number of clients targeted, and we select a lower value of d, for capacity C, for targeted M to reduce traffic on WAN.",
                "Fig. 5 represents a different perspective of the same data in 3D.",
                "Fig. 4.",
                "Contour Plot of Capacity versus Optimum number of domains for various conference sizes 7.2 Conferencing with Two Levels of CSs Now considering the case where the number of clients in a particular domain is too large, i.e., d M Mi ≥ (9) one has to avoid the denial of service for new clients due to overloading of Conference Server.",
                "This problem can be solved by introducing a second level of CSs inside the given domain, as in Fig. 6.",
                "The existing M-CS creates a Slave CS (S-CS) that can handle up to C end-users and to which it transfers all its active clients.",
                "Here, the system works differently as outlined in section 6.1: The Clients send their audio packets to their local S-CS, which selects NMax streams, before sending them to a local M-CS, which will proceed in the same way, before sending NMax streams to the other domains.",
                "Each newly created S-CS must run on a separate machine.",
                "The M-CS has to create more S-CSs if the number of active clients exceeds C in the course of the conference after the transfer.",
                "With this mechanism, the M-CS will be able to create utmost     −⋅− = Max Max N dNC U )1( S-CSs, (10) as it must handle 3 (= NMax) packets for each local S-CSs and 3 (= NMax) packets from each other remote domains.",
                "We can then calculate the maximum theoretical number of active clients CUMi ⋅= in each domain as well as M, for the whole conference as CUdM ⋅⋅= .",
                "Fig. 5. 3D Plot of Capacity versus Optimum number of domains for various conference sizes Of course, one could further create a third level in the hierarchy, giving the possibility of accommodating even more clients.",
                "This may be unnecessary as the number of possible clients is large enough with two levels. 8.",
                "PERFORMANCE DISCUSSION We now analyze the performance of the algorithm presented in subsection 6.3, i.e., the one taking care of the exchange of audio packets between the different domains.",
                "Note that the packets that are transiting within the LAN take advantage of the higher capacity (generally coupled with multicast capabilities) and therefore do not require a performance analysis.",
                "Thus we have to look only at the RTP packets over the WAN, i.e., between participating M-CSs.",
                "As each M-CS from a domain will be sending only NMax out of d M packets to the other CSs ( MaxN d M >> ), the bandwidth used by the application over a WAN is upper-bounded by the following expression.",
                "The total number of audio packets transiting over the WAN for each time slot is ∑ ∑= ≠=        d i d ijj MaxN 1 ,1 which is quadratic in the number of domains (i.e., O(d2 )).",
                "However, it is independent of the total number of active clients.",
                "This would not have been the case had all packets been sent over the network in each time slot.",
                "The saving is tremendous.",
                "Yet, one may contend that sending three packets to and from all domains is a waste of resources, as most of these streams will not be selected.",
                "If just one client is active, selecting a subset of clients in that domain is unnecessary.",
                "Pessimistic and optimistic algorithms as presented in the sequel aim at reducing the traffic further by harnessing the slow varying nature of the LN. 8.1 Pessimistic algorithm Consider a scenario wherein the lowest LN (called LNt) of the three globally selected streams (set F of Section 6.1) exceeds the LN of the most dominant stream of a domain.",
                "Evidently, the chances that the next two dominant streams of that domain being selected to F in the next packet period are less.",
                "Here, we send this most dominant stream and withhold the other two.",
                "There may be an error in unique selection across all domains for one packet period only.",
                "As LN varies slowly, the error would get automatically rectified in a subsequent packet period (slot).",
                "In this algorithm, there is at least one stream in each period.",
                "The net network traffic in a packet period in the best case is )1( −⋅ dd , i.e., )( 2 dO using unicast, instead of MaxNdd ⋅−⋅ )1( .",
                "Considerable valuable bandwidth can be saved using this heuristic.",
                "The resulting traffic complexity reduces from O(d2 ) to O(d) in multicast-enabled networks.",
                "Initialize LNt = 0 at an M-CS/S-CS A.",
                "In the first time slot (packet time), each CS sends the top NMax streams (based on their LN) to all other CSs.",
                "At each M-CS/S-CS and for each packet time: B.",
                "Find the value of lowest LN of the NMax globally selected streams (set F) from the previous time slot.",
                "Set LNt with this value.",
                "C. At each CS domain, select the NMax local streams that have maximum value of LN (ToOtherCSs set).",
                "D. Select streams that have LN > LNt.",
                "IF there are >= NMax streams with LN > LNt then send top NMax to other CSs.",
                "ELSE IF there are (NMax-1) streams with LN>LNt then send top (NMax-1) plus the one lower than LNt (i.e., top NMax) to other CSs.",
                "ELSE IF there are (NMax-2) streams with LN>LNt then send top (NMax-2) plus the one lower than LNt (i.e. top (NMax -1)) to other CSs. …… ELSE IF there are NO streams with LN> LNt then send top 1 stream to other CSs.",
                "E. Packets sent in step D form DB1.",
                "Packets received from other CSs form DB2.",
                "F. For this time slot, find global NMax streams based on LN from DB1 U DB2 (set F) G. Send set F to the clients in its domain.",
                "Update LNt for the next period.",
                "Algorithm 2.",
                "Pessimistic algorithm to reduce the number of packets sent over the Internet.",
                "Fig. 6.",
                "Example of a 2-level hierarchy of Conference Servers; the shaded Clients are the one selected by the M-CS and will be sent to other domains CSs.",
                "In this algorithm the saving in traffic is at the cost of relaxing the condition of formation of globally unique set F. However, the discrepancies in selected streams at different domains remain for a short period of time depending on the transportation delay between any two domains.",
                "Even for a total delay of 400ms, for only 10 packet time slots the uniqueness is lost.",
                "This duration in a real-time interactive conversation is non-perceivable by the listener.",
                "In the case that there is a joke and every one laughs, then there would be sudden rise in the number of packets and it would be upper bounded by MaxN)d(O 2 for a short period. 8.2 Optimistic Algorithm The traffic can be reduced further.",
                "The scheme in the following algorithm (Algorithm. 3) is withholding all the streams that have less value of LN compared to the least of the three in the set F. We can find the correct and unique three streams after a few time slots depending on the transportation delay between the domains.",
                "As the packet period is of the order of 40ms, the error in the selection is unnoticeable.",
                "The number of streams on network in this case is always restricted to NMax (=3).",
                "Even without Voice Activity Detection (VAD), there will be no more than three streams in the network in the best case, thus the total traffic is constant.",
                "A sudden burst of traffic, as described in 8.1, is a particular case.",
                "These advantages are due to exploitation of the characteristics of LN.",
                "Initialize LNt = 0 at an M-CS/S-CS A.",
                "In the first time slot (packet time), each CS sends the top NMax streams (based on their LN) to all other CSs.",
                "At each M-CS/S-CS and for each packet time: B.",
                "Find the value of lowest LN of the NMax globally selected streams (set F) from the previous time slot.",
                "Set LNt with this value.",
                "C. At each CS domain, select the NMax local streams that have maximum value of LN (ToOtherCSs set) D. Select streams that have LN > LNt IF there are >= NMax streams with LN > LNt then send top NMax to other CSs.",
                "ELSE IF there are (NMax-1) streams with LN>LNt then send top (NMax-1) and see E. ELSE IF there are (NMax-2) streams with LN>LNt then send top (NMax-2) and see E. …… ELSE IF there are NO streams with LN> LNt then dont send any stream.",
                "E. Exceptions: IF the stream that was in F in the last interval belongs to this CS then select and send that stream even if its LN is now < LNt. (Note this occurs only at that CS which had the stream that was the last of the three in the previous packet period.)",
                "F. Packets sent in step D and E form DB1.",
                "Packets received from other CSs form DB2.",
                "G. For this time slot, find global NMax streams based on LN from DB1 U DB2 (set F).",
                "H. Send set F to the clients in its domain.",
                "Update LNt for the next period.",
                "Algorithm 3.",
                "Optimistic algorithm to reduce the number of packets sent over the Internet Furthermore, when VAD is used [13], it would further reduce the traffic by sending the header part of the RTP packet only and not the whole packet, thus in order to keep updating the LN across.",
                "The traffic here in this case is O(NMax) for multicast and O(d) for unicast.",
                "We see that the above algorithms save bandwidth and computation at each CS, and leads to a scalable architecture with multiple CSs mainly because clients are grouped in domains.",
                "The necessary bandwidth is not dependent on the total number of active clients.",
                "As the CS always chooses the best three clients out of all the clients assigned to it in the domain, addition of new clients to the existing conference will not cause any scalability problem. 8.3 Availability of Multicasting In the architecture that has been proposed, no assumption was made about the availability of multicasting support from the network.",
                "The traffic will be further reduced if multicasting is available over WAN.",
                "It is simple to show that the order of traffic would tend to become O(d) from O(d2 ).",
                "This is an approximation as saving in multicasting depends also on the topology.",
                "The analysis was done for the case wherein multicast is not available (a realistic assumption in todays Internet).",
                "The advantage of this set up is that we can use it even if multicasting is partially available.",
                "We can instruct CSs during the set-up phase to send unicast packets to those CSs that cannot receive multicast packets whereas CSs on multicast enabled routers can exchange packets on a multicast address.",
                "The data structures and conference objects inside a CS is given in [14].",
                "Fig. 7.",
                "User Interface for setting the weight for NMax audio streams (setting Self-bar to zero avoids echo). 8.4 Quality Improvement The observed improvement in the perceived quality of the conference service is due to: (1) limiting the number of concurrent speakers to a low number such as three.",
                "Generally, in a conference if more than two participants speak the intelligibility is lost.",
                "The conversational analysis demonstrates that there would be a repair mechanism [15] in such a case. (2) Delay: The audio stream between any two clients will pass through at most two CSs thus reducing the end-to-end delay.",
                "For a large conference there might be three CSs however, one hop is within the domain incurring negligible delay. (3) As the streams are mixed only at the clients, there can be a customized mix of the streams.",
                "The individual tuning of mixing with weights the spatialism is preserved.",
                "Fig. 7 shows the user interface for the same.",
                "The echo when self-stream is selected can be avoided by reducing the weight.",
                "Nonetheless, feedback helps in reassuring speaker that he/she is heard by all. 9.",
                "CONCLUSION In this paper, we have presented a discussion on a voice-only virtual conferencing environment.",
                "We have argued that the distributed nature of deployment here makes it scalable.",
                "Interactivity is achieved by adapting a recent stream selection scheme based on Loudness Number.",
                "Additionally, we incorporate a result from a more recent work [15] where the sufficiency of three simultaneous speakers has been demonstrated.",
                "Thus, there is significantly effective utilization of bandwidth.",
                "A mixed stream is played out at each client; each client may choose to have a customized mix since mixing is done at the local terminal of each client.",
                "These render impromptu speech in a virtual teleconference over VoIP a reality, as in a real face-to-face conference.",
                "Compatibility is assured thanks to the use of SIP, the most soughtafter signaling protocol.",
                "To ensure a satisfying performance, we do not demand the availability of multicast, but use it if and when available.",
                "The traffic in the WAN (Internet) is upper-bounded by the square of the number of domains, -- further reduced by using heuristic algorithms -- which is far below the total number of clients in the conference.",
                "This is due to the use of a Conference Server local to each domain.",
                "VAD techniques help further traffic reduction.",
                "Using SIP standard for signaling makes this solution highly interoperable.",
                "We have implemented a CS application on a campus-wide network.",
                "We believe this new generation of virtual conferencing environments will gain more popularity in the future as their ease of deployment is assured thanks to readily available technologies and scalable frameworks. 10.",
                "REFERENCES [1] L Aguilar et al., Architecture for a Multimedia Teleconferencing System, in Proceedings of the ACM SIGCOMM, Aug 1986, pp. 126-136. [2] Carsten Bormann, Joerg Ott et al., Simple Conference Control Protocol, Internet Draft, Dec. 1996. [3] M. Decina and V. Trecordi, Voice over Internet Protocol and Human Assisted E-Commerce, IEEE Comm.",
                "Magazine, Sept. 1999, pp. 64-67. [4] Eckehard Doerry, An Empirical Comparison of Copresent and Technologically-mediated Interaction based on Communicative Breakdown, Phd Thesis, Graduate School of the University of Oregon, 1995. [5] H. P. Dommel and J.J. Garcia-Luna-Aceves, Floor Control for Multimedia Conferencing and Collaboration, J. Multimedia Systems, Vol. 5, No. 1, January 1997, pp. 23-38. [6] Amitava Dutta-Roy, Virtual Meetings with desktop conferencing, IEEE Spectrum, July 1998, pp. 47-56. [7] M. Handley and V. Jacobson, SDP: Session Description Protocol, RFC 2327, IETF, April 1998. [8] M. Handley, J. Crowcroft et al., Very large conferences on the Internet: the Internet multimedia conferencing architecture, Journal of Computer Networks, vol. 31, No. 3, Feb 1999, pp. 191-204. [9] ITU-T Rec.",
                "H.323, Packet based Multimedia Communications Systems, vol. 2, 1998. [10] P. Koskelainen, H. Schulzrinne and X. Wu, A SIP-based Conference Control Framework, NOSSDAV02, May 2002, pp. 53-61. [11] R Venkatesha Prasad et al., Control Protocol for VoIP Audio Conferencing Support, International Conference on Advanced Communication Technology, Mu-Ju, South Korea, Feb 2001, pp. 419-424. [12] R Venkatesha Prasad et al., Automatic Addition and Deletion of Clients in VoIP Conferencing, 6th IEEE Symposium on Computers and Communications, July 2001, Hammamet, Tunisia, pp. 386-390. [13] R Venkatesha Prasad, H S Jamadagni, Abjijeet, et al Comparison of Voice Activity Detection Algorithms, 7th IEEE Symposium on Computers and Communications.",
                "July 2002, Sicily, Italy, pp. 530-535. [14] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, A Scalable Distributed VoIP Conferencing using SIP, Proc. of the 8th IEEE Symposium on Computers and Communications, Antalya, Turkey, June 2003. [15] R Venkatesha Prasad, H S Jamadagni and H N Shankar, On Problem of Specifying Number of Floors in a Voice Only Conference, To appear in IEEE ITRE 2003. [16] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, A Proposal for Distributed Conferencing on SIP using Conference Servers, To appear in the Proc. of MMNS 2003, Belfast, UK, September 2003. [17] R. Venkatesha Prasad, H.S.",
                "Jamadagni, J. Kuri, R.S.",
                "Varchas, A Distributed VoIP Conferencing Support Using Loudness Number, Tech.",
                "Rep. TR-CEDT-TE-03-01 [18] M. Radenkovic et al, Scaleable and Adaptable Audio Service for Supporting Collaborative Work and Entertainment over the Internet, SSGRR 2002, LAquila, Italy, Jan. 2002. [19] M. Radenkovic, C. Greenhalgh, S. Benford, Deployment Issues for Multi-User Audio Support in CVEs, ACM VRST 2002, Nov. 2002, pp. 179-185. [20] Srinivas Ramanathan, P. Venkata Rangan, Harrick M. Vin, Designing Communication Architectures for Interorganizational Multimedia Collaboration, Journal of Organizational Computing, 2 (3&4), pp.277-302, 1992. [21] A.",
                "B. Roach, Session Initiation Protocol (SIP)-Specific Event Notification, RFC 3265, IETF, June 2002. [22] J. Rosenberg, H. Schulzrinne et al., SIP: Session Initiation Protocol, RFC 3261, IETF, June 2002. [23] J. Rosenberg, H. Schulzrinne, Models for Multy Party Conferencing in SIP, Internet Draft, IETF, July 2002. [24] H. Schulzrinne et al., RTP: a transport protocol for realtime applications, RFC 1889, IETF, Jan 1996. [25] Lisa R. Silverman, Coming of Age: Conferencing Solutions Cut Corporate Costs, White Paper, www.imcca.org/wpcomingofage.asp [26] Kundan Singh, Gautam Nair and Henning Schulzrinne, Centralized Conferencing using SIP, Proceedings of the 2nd IP-Telephony Workshop (IPTel), April 2001. [27] D. Thaler, M. Handley and D. Estrin, The Internet Multicast Address Allocation Architecture, RFC 2908, IETF, Sept. 2000."
            ],
            "original_annotated_samples": [
                "In this paper, we describe an audio service framework designed to provide a Virtual Conferencing Environment (<br>vce</br>).",
                "The above requirements are placed in the perspective of observations made in earlier works (vide Sections 3 and 4) and will steer the <br>vce</br> design. 3."
            ],
            "translated_annotated_samples": [
                "En este documento, describimos un marco de servicio de audio diseñado para proporcionar un <br>Entorno de Conferencias Virtuales</br> (ECV).",
                "Los requisitos anteriores se colocan en la perspectiva de las observaciones realizadas en trabajos anteriores (véase Secciones 3 y 4) y guiarán el <br>diseño del VCE</br>. 3."
            ],
            "translated_text": "Problemas de implementación de un sistema de conferencias VoIP en un entorno de conferencias virtuales. R. Venkatesha Prasad y Richard Hurni. Jamadagni iii H.N. Shankar iv i, iii Centro de Diseño y Tecnología Electrónica Instituto Indio de Ciencias, Bangalore, India Teléfono: +91 80 360 0810 i, iii {vprasad, hsjam}@cedt.iisc.ernet.in ii hurni@ieee.org iv hn_shankar@yahoo.com RESUMEN Los servicios en tiempo real han sido principalmente respaldados en redes conmutadas por circuitos. Las tendencias recientes favorecen los servicios trasladados a redes de conmutación de paquetes. Para las conferencias de audio, necesitamos considerar muchos aspectos, como la escalabilidad, la calidad de la aplicación de conferencia, el control de piso y la carga en los clientes/servidores, por nombrar algunos. En este documento, describimos un marco de servicio de audio diseñado para proporcionar un <br>Entorno de Conferencias Virtuales</br> (ECV). El sistema está diseñado para dar cabida a un gran número de usuarios finales hablando al mismo tiempo y distribuidos por Internet. El marco se basa en Servidores de Conferencia [14], que facilitan el manejo del audio, mientras que explotamos las capacidades de SIP para propósitos de señalización. La selección de clientes se basa en un reciente cuantificador llamado Número de Volumen que ayuda a imitar una conferencia física cara a cara. Nos ocupamos de los problemas de implementación de la solución propuesta tanto en términos de escalabilidad como de interactividad, mientras explicamos las técnicas que utilizamos para reducir el tráfico. Hemos implementado una aplicación de Servidor de Conferencias (CS) en una red de campus en nuestro Instituto. Categorías y Descriptores de Temas C.2.4 [Redes de Computadoras y Comunicación]: Sistemas Distribuidos - Cliente/Servidor, aplicaciones distribuidas. Términos generales Algoritmos, Rendimiento, Diseño, Teoría. 1. INTRODUCCIÓN El Internet de hoy utiliza el conjunto de protocolos IP que fue diseñado principalmente para el transporte de datos y proporciona la entrega de datos con el mejor esfuerzo. Las restricciones de retraso y las características diferencian los datos tradicionales por un lado, de las aplicaciones de voz y video por el otro. Por lo tanto, a medida que se implementan aplicaciones de voz y video cada vez más sensibles al tiempo en Internet, se pone de manifiesto la insuficiencia de la red. Además, buscamos trasladar servicios telefónicos a través de Internet. Entre ellos, la instalación de conferencia virtual (teleconferencia) está a la vanguardia. Las videoconferencias y conferencias de audio en Internet son populares por las varias ventajas que poseen. Claramente, el ancho de banda necesario para una videoconferencia a través de Internet aumenta rápidamente con el número de participantes; reducir el ancho de banda sin comprometer la calidad del audio es un desafío en la telefonía por Internet. Los problemas críticos adicionales son: (a) retraso de paquetes, (b) eco, (c) mezcla de audio de clientes seleccionados, (d) selección automática de clientes para participar en la conferencia, (e) reproducción de audio mezclado para cada cliente, (f) manejo de clientes que no son capaces de mezclar flujos de audio (estos clientes se conocen como clientes tontos), y (g) decidir el número de clientes activos simultáneamente en la conferencia sin comprometer la calidad de voz. Si bien todos los requisitos anteriores son desde el punto de vista tecnológico, la perspectiva de los usuarios y las interacciones también son factores esenciales. Hay mucha discusión entre la comunidad de HCI y CSCW sobre el uso de la Etnometodología para el diseño de aplicaciones de CSCW. El enfoque básico es proporcionar un ancho de banda más amplio, más instalaciones y mecanismos de control más avanzados, con miras a una mejor calidad de interacción. Este enfoque ignora la utilidad funcional del entorno que se utiliza para la colaboración. Eckehard Doerry [4] critica este enfoque diciendo que pone la forma antes que la función. Por lo tanto, la necesidad es adoptar un enfoque que considere ambos aspectos: el técnico y el funcional. En cuanto al aspecto funcional, nos referimos a [15] donde se ha tratado en cierto detalle. En este trabajo, no discutimos la videoconferencia; su inclusión no beneficia significativamente la calidad de la conferencia [4]. Nuestro enfoque está en entornos de audio virtuales. Primero describimos los desafíos encontrados en las conferencias de audio virtuales. Luego investigamos las motivaciones seguidas por la literatura relevante. En la Sección 5, explicamos la arquitectura de nuestro sistema. La sección 6 comprende la descripción de los diversos algoritmos utilizados en nuestra configuración. Abordamos problemas de implementación. Una discusión sobre el Instituto Federal Suizo de Tecnología, Lausana. Antiguo visitante en CEDT. PESIT y NIAS, Bangalore, India. El rendimiento sigue. Concluimos teniendo en cuenta algunos problemas de implementación. 2. DESAFÍOS EN LA VIDEOCONFERENCIA VoIP Surgen muchos desafíos al construir una aplicación VoIP. Lo siguiente es de particular preocupación en el proceso: • Facilidad de uso: la conferencia debe ser sencilla; los usuarios no necesitan experiencia en el dominio. La gestión (adición/eliminación) de clientes y servidores debe ser sencilla. El desarrollo de aplicaciones no debe presuponer características específicas del sistema subyacente o de las capas de red. La facilidad de uso puede incluir el aprovechamiento de tecnologías fácilmente disponibles, técnicamente factibles y económicamente viables. • Escalabilidad: Las conferencias deben parecer ininterrumpidas bajo cargas pesadas, es decir, cuando se agregan muchos usuarios adicionales. El tráfico en la WAN no debería aumentar apreciablemente con el número total de clientes; de lo contrario, esto podría provocar congestión. Por lo tanto, se necesita un medio para regular el tráfico al mínimo para este tipo de aplicaciones en tiempo real. • Interactividad: En Entornos de Conferencias Virtuales (ECVs), pretendemos una aplicación de conferencias cara a cara que imite una conferencia real, donde los participantes más vocales invitan la atención. El intercambio de turnos en la ocupación del espacio por parte de los participantes debe adaptarse con gracia para lograr una transición natural. • Estandarización: La solución debe cumplir con los estándares establecidos para lograr interoperabilidad y aceptación entre pares. Los requisitos anteriores se colocan en la perspectiva de las observaciones realizadas en trabajos anteriores (véase Secciones 3 y 4) y guiarán el <br>diseño del VCE</br>. 3. La motivación Ramanathan y Rangan [20] han estudiado en detalle las configuraciones arquitectónicas comparando muchos esquemas de arquitectura de conferencias teniendo en cuenta la demora de red y los requisitos de computación para la mezcla. La división funcional y el diseño de arquitectura orientada a objetos que ayudan en la implementación se presentan en [1]. Un resumen de muchos temas relacionados con el apoyo a una conferencia grande se aborda en [8]. H. P. Dommel [5] y muchos otros destacan el control de piso como otro aspecto fundamental a tener en cuenta en el diseño de una herramienta de conferencias. Los protocolos de control de conferencias fuertemente acoplados en Internet pertenecen a la familia ITU-T H.323 [9]; sin embargo, están principalmente diseñados para conferencias pequeñas. El último borrador del IETF de Rosenberg y Schulzrinne [23] discute modelos de conferencia con SIP [22] en el fondo. Los aspectos de implementación para la conferencia SIP centralizada se informan en [26]. Un nuevo enfoque llamado mezcla parcial por Radenkovic [18] permite que flujos mezclados y no mezclados coexistan. En todas las propuestas anteriores, si bien hay algunas sugerencias muy útiles, comparten una o más de las siguientes limitaciones: • En una conferencia de audio, no es necesario mezclar los flujos de todos los clientes. De hecho, mezclar muchas corrientes arbitrarias [24] de clientes degrada la calidad de la conferencia debido a la reducción en el volumen (aspecto espacial del habla). El número de flujos mezclados varía dinámicamente dependiendo del número de participantes activos. Esto provocaría fluctuaciones en el volumen de cada participante individual, causando una degradación severa en la calidad. La mezcla personalizada de flujos no es posible cuando hay muchos clientes activos. Existe un umbral en el número de oradores simultáneos por encima del cual aumentar el número de oradores se vuelve contraproducente para la calidad de la conferencia. La fijación del número máximo de hablantes simultáneos se aborda en un trabajo reciente [15] utilizando la Etnometodología, y se postula que es tres. Por lo tanto, es recomendable respetar esa restricción. • No puede haber muchos mezcladores intermedios (similarmente, Servidores de Conferencia como en [10]) en etapas como en [20] porque provoca un retraso desmedido al aumentar el número de saltos y no es escalable con la interactividad como enfoque. • El Control de Piso para una conferencia de audio (incluso de video) con instrucciones explícitas de toma de turnos para los participantes convierte la conferencia en esencia en un asunto de un orador a la vez, no en una en vivo y libre de interrupciones. De esta manera, la conferencia se vuelve notablemente artificial y su calidad se degrada. Schulzrinne et al. [24], asumen que solo un participante está hablando en un momento dado. En este caso, si las aplicaciones se implementan con cierto control [5], el servicio se vuelve asfixiante para los usuarios. • La mezcla parcial [18] tiene un problema similar al de la mezcla cuando se mezclan más flujos. Además, en [18], para permitir el discurso improvisado, la mezcla no se realiza cuando la red puede soportar altos requisitos de ancho de banda para enviar/recibir todas las transmisiones, pero es innecesaria [15]. • Para conferencias grandes [23, 10] una conferencia centralizada no puede escalar. Con la multidifusión, los clientes tendrán que analizar muchos flujos y el tráfico en la red de los clientes aumenta innecesariamente. Evidentemente, se abordan diferentes problemas particulares, todos los cuales son un subconjunto de los requisitos (definidos en [14] y [16]) para el soporte de conferencias de VoIP. Por lo tanto, es necesario abordar la conferencia en su totalidad teniendo en cuenta todos sus requisitos de manera simultánea. Con este objetivo, el sistema de conferencias VoIP que proponemos está diseñado para ser escalable e interactivo. Hacemos uso del Número de Sonoridad para implementar el control de volumen. Esto permite a un participante entrar libremente en el modo de hablar para interrumpir al orador actual como en una reunión natural cara a cara. Un límite superior en el número de pisos (es decir, el número de oradores permitidos para hablar al mismo tiempo) se fija utilizando una conjetura propuesta en [15]. El trabajo presentado aquí es una continuación de nuestros estudios sobre conferencias basadas en el Protocolo de Inicio de Sesión en [14] y [16]. SIP, definido en [22], es ahora el estándar más popular para implementación de VoIP y ha sido elegido por su fortaleza, facilidad de uso, extensibilidad y compatibilidad. Esta es la razón por la cual estará en el trasfondo de todos los mensajes de control que surgirán implícitamente entre las entidades en nuestra arquitectura. Los mensajes actuales están descritos en [16] y, como tal, no presentamos una descripción completa de ellos aquí. 4. TRABAJO RELACIONADO El estándar SIP definido en el RFC 3261 [22] y en extensiones posteriores como [21] no ofrece servicios de control de conferencias como control de piso o votación y no prescribe cómo debe ser gestionada una conferencia. Sin embargo, SIP se puede utilizar para iniciar una sesión que utilice algún otro protocolo de control de conferencias. La especificación central de SIP soporta muchos modelos para conferencias [26, 23]. En los modelos basados en servidor, un servidor mezcla flujos de medios, mientras que en una conferencia sin servidor, la mezcla se realiza en los sistemas finales. SDP [7] se puede utilizar para definir las capacidades de los medios y proporcionar otra información sobre la conferencia. Ahora consideraremos algunos modelos de conferencia en SIP que han sido propuestos recientemente [23]. Primero, veamos los modelos sin servidor. En la mezcla de extremos del sistema, solo un cliente (SIP UA) maneja la señalización y la mezcla de medios para todos los demás, lo cual claramente no es escalable y causa problemas cuando ese cliente en particular abandona la conferencia. En el modelo de Usuarios que se unen, un árbol crece, ya que cada parte invitada constituye una nueva rama en el camino de distribución. Esto conduce a un número creciente de saltos para las hojas remotas y no es escalable. Otra opción sería utilizar la multidifusión para las videoconferencias, pero actualmente la multidifusión no está habilitada en Internet y solo es posible en una LAN. Entre los modelos basados en servidor, en una conferencia de marcado, los UAs se conectan a un servidor central que maneja todas las mezclas. Este modelo no es escalable ya que está limitado por la potencia de procesamiento del servidor y el ancho de banda de la red. Las conferencias centralizadas ad hoc y los servidores de conferencias de marcado tienen mecanismos y problemas similares. Los modelos híbridos que involucran señalización centralizada y medios distribuidos, con estos últimos utilizando unicast o multicast, plantean problemas de escalabilidad como antes. Sin embargo, una ventaja es que el control de la conferencia puede ser una solución de terceros. La Mezcla Parcial Distribuida, presentada en [18], propone que en caso de limitación de ancho de banda, algunos flujos se mezclan y otros no, manteniendo la interactividad intacta. La pérdida de espacialidad cuando se mezclan y el aumento del ancho de banda cuando no lo hacen son problemas abiertos. Un estudio relacionado [19] del mismo autor propone una arquitectura de conferencias para Entornos Virtuales Colaborativos (CVEs) pero no proporciona el enfoque de escalabilidad sin la disponibilidad de la multidifusión. Teniendo en cuenta las limitaciones de los sistemas de conferencias propuestos, detallaremos ahora nuestra propuesta. 5. ARQUITECTURA DEL SISTEMA Esta sección está dedicada a la descripción de la arquitectura del sistema propuesto. Sin embargo, dado que este documento constituye la continuación de nuestro trabajo iniciado en [14] y ampliado en [16], no presentaremos aquí todos los detalles sobre las entidades propuestas e invitamos a los lectores a consultar los documentos mencionados anteriormente para obtener una descripción completa y detallada. Primero, no restringimos nuestro sistema de conferencias para funcionar solo en conferencias pequeñas, sino en grandes VCEs de audio que tienen cientos (o incluso miles) de usuarios a través de una Red de Área Amplia (WAN) como Internet. Esta perspectiva se deriva de una evaluación de que los VCEs ganarán importancia en el futuro, ya que las conferencias de audio interactivas serán más populares debido a la difusión de la cultura mediática en todo el mundo. Dos aspectos deben ser atendidos al construir un sistema de conferencias VoIP: (i) el front-end, que consiste en el programa de aplicación que se ejecuta en las computadoras de los usuarios finales y (ii) el back-end que proporciona otros programas de aplicación que facilitan las conferencias y la conferencia. Los usuarios participantes se agrupan en varios dominios. Estos dominios son Redes de Área Local (LAN), como redes corporativas o educativas. Esta suposición distribuida requiere soluciones de control y manejo de medios distribuidos, ya que los sistemas centralizados no serían escalables para conferencias tan grandes (ver Sección 4). Más explícitamente, en cada dominio, podemos identificar varios componentes lógicos relevantes de una instalación de conferencias (Fig. 1): Un número arbitrario de usuarios finales (clientes) que pueden participar en como máximo una conferencia de audio a la vez. Cada usuario es la Fig. 1. Ejemplo de conferencia: 3 dominios que contienen las entidades necesarias para que la conferencia pueda tener lugar. Incluidas en un único dominio en un instante dado, pero pueden moverse de un dominio a otro (nomadismo). En nuestro entorno de conferencias, estos clientes son Agentes de Usuario SIP (SIP UAs) regulares, según se define en [22], para lograr interoperabilidad con otros sistemas compatibles con SIP existentes. Estos clientes no son conscientes del entorno complejo que respalda la conferencia, lo cual se destaca a continuación. Un servidor SIP (SIPS) por dominio, encargándose de todos los aspectos de señalización de la conferencia (clientes que se unen, salen, etc.) [16]. En particular, se considera como una implementación física que abarca diferentes roles lógicos, a saber, un Servidor Proxy SIP, un Servidor Registrador SIP, un Servidor de Redirección SIP y un SIP B2BUA (Agente de Usuario de Vuelta a Vuelta) [22]. Esta implementación física permite el manejo de mensajes SIP entrantes/salientes por una u otra entidad lógica según sea necesario. SIPS está encargado de mantener un servicio total y tiene muchas ventajas, como (a) funciona como una entidad centralizada que puede hacer un seguimiento de las actividades de los UAs en una conferencia; (b) puede realizar todo el cambio para proporcionar funciones de PBX; (c) puede localizar a los UAs e invitarlos a una conferencia; (d) también puede encargarse de la facturación. Los SIPS en diferentes dominios se comunican entre sí utilizando mensajes SIP como se describe en [16]. Si la carga en un SIPS particular es demasiado pesada, puede crear otro SIPS en el mismo dominio para que la carga se comparta. Se crea un Servidor de Conferencias Maestro (M-CS) (simplemente un Servidor de Conferencias (CS)) para cada conferencia por el SIPS local cuando una conferencia comienza. Este servidor se utilizará para manejar paquetes de medios para los clientes del dominio. Su mecanismo será descrito en la siguiente sección. El M-CS podrá crear una jerarquía de CSs dentro de un dominio agregando uno o más CSs esclavos (S-CSs) para dar cabida a todos los clientes activos y prevenir su propia saturación al mismo tiempo. Veremos este mecanismo con cierto detalle en la secuela. Las entidades descritas aquí son exhaustivas y se ajustan a la filosofía del SIP. Por lo tanto, el uso de SIP hace que esta arquitectura sea más útil e interoperable con cualquier otro cliente o servidor SIP. PROBLEMAS ALGORÍTMICOS 6.1 Seleccionar los flujos similares a SipConf en [27], un Servidor de Conferencias (CS) [17] tiene la función de soportar la conferencia; es responsable de manejar los flujos de audio utilizando RTP. También puede duplicarse para convertir formatos de transmisión de audio para un cliente dado si es necesario y puede funcionar como Traductores/Mezcladores de la especificación RTP detrás de cortafuegos. Hemos basado el diseño de nuestro CS en el Procesador Multipunto (MP) H.323 [9]. En resumen, el MP recibe flujos de audio de los puntos finales involucrados en una conferencia multipunto centralizada o híbrida, los procesa y los devuelve a los puntos finales. Un procesador de señales de audio prepara N salidas de audio NMax a partir de M flujos de entrada después de la selección, mezcla o ambas. La mezcla de audio requiere decodificar el audio de entrada a señales lineales (PCM o analógicas), realizar una combinación lineal de las señales y volver a codificar el resultado en un formato de audio apropiado. El procesador de señales puede eliminar o atenuar algunas de las señales de entrada para reducir el ruido y los componentes no deseados. Fig. 2. \n\nFig. 2. El diagrama esquemático de un CS. La limitación de H.323 es que no aborda la escalabilidad de una conferencia. La arquitectura propone una topología en cascada o en cadena de margaritas [10], la cual se puede demostrar que no puede escalar para una conferencia grande. Un CS atiende a muchos clientes en la misma conferencia. Por lo tanto, solo maneja una conferencia a la vez. Varios CS pueden coexistir en un dominio, como cuando hay varias conferencias en curso. Los mensajes relacionados con la señalización de los CSs se tratan en [11]. El funcionamiento de un CS se ilustra en la Fig. 2: Para cada intervalo de mezcla, CS 1 elige los mejores NMax paquetes de audio de los M1 (utilizando un criterio denominado Número de Volumen, descrito en la siguiente subsección). Puede posiblemente recibir y enviar estos a CSs 2 a P. El conjunto de paquetes enviados se denota como AotrosCSs. En el mismo intervalo de mezcla, también recibe los mejores paquetes de audio NMax (de un posible M2) de CS 2, de manera similar a los mejores NMax (de un posible MP) de CS P. Para simplificar, ignoramos el retardo de propagación entre los CSs, que de hecho se puede tener en cuenta; está más allá del alcance de esta presentación. El conjunto de paquetes recibidos se denota como FromOtherCSs. Finalmente, selecciona los mejores paquetes NMax del conjunto {ToOtherCSs unión FromOtherCSs} y envía estos paquetes a su propio grupo. Se puede observar que el conjunto {ToOtherCSs unión FromOtherCSs} es el mismo en todos los CSs. Esto garantiza que cualquier cliente en la conferencia finalmente reciba el mismo conjunto de paquetes para mezclar. Por lo tanto, todos los clientes obtienen una vista común de la conferencia. De manera similar, para cada intervalo de tiempo (tiempo de paquete), se selecciona un subconjunto, F, de todos los clientes (utilizando el mismo criterio) del conjunto de paquetes de todos los otros CS más los NMax clientes seleccionados localmente. Sus paquetes se mezclan y se reproducen en los clientes. Según [15], la cardinalidad de F, |F| es NMax y está fijada en tres. En nuestra configuración de conferencias, la selección la realiza el Servidor Maestro de Conferencias (M-CS), que interviene exclusivamente en el manejo de medios. Ten en cuenta que aunque la especificación de SIP permite la comunicación directa de medios de usuario a usuario en una llamada uno a uno, también es posible utilizar el Servidor de Conferencias para llamadas de dos partes, especialmente porque es entonces más funcional crear una conferencia real agregando un tercero y posteriormente más participantes. Existen casos en los que la capacidad de procesamiento de un M-CS se ve superada, ya que puede tener demasiados paquetes, tanto de dominios locales como de dominios remotos, para procesar. En ese caso, el M-CS creará uno o varios S-CS (Fig. 6) y transferirá a sus propios clientes, así como a los nuevos clientes, a ellos. En esta configuración, el algoritmo descrito anteriormente se modificará ligeramente, ya que los paquetes de audio irán de los clientes a su S-CS dedicado, que seleccionará NMax paquetes para enviar al M-CS local, que luego seleccionará NMax paquetes de todos sus S-CS en el dominio antes de enviarlos a los dominios remotos. Los paquetes entrantes de otros dominios serán recibidos por el M-CS, se seleccionarán NMax de ellos y se enviarán directamente a los clientes del dominio, evitando los SCSs. Este cambio implica que existen como máximo tres entidades intermedias para cada paquete de audio, en lugar de dos en la configuración convencional. Dado que el salto adicional ocurre dentro de la LAN que se supone tiene una conectividad de alta velocidad, consideramos que no debería impedirnos usar esta jerarquía de CS cuando sea necesario hacerlo. 6.2 Número de Sonoridad (LN) Una pregunta básica que debe responder el CS es la siguiente. En un intervalo de mezcla, ¿cómo debería elegir NMax paquetes de los M que podría recibir? Una forma es clasificar los paquetes M recibidos según sus energías y elegir los NMax mejores. Sin embargo, esto suele considerarse insuficiente porque las fluctuaciones aleatorias en las energías de los paquetes pueden provocar una mala calidad de audio. Esto indica la necesidad de una métrica diferente de meras energías individuales de paquetes. El medidor debe tener las siguientes características [12]: • Un hablante (ocupante del suelo) no debe ser interrumpido por un pico en la energía del paquete de otro hablante. Esto implica que la historia del discurso de un hablante debería tener cierto peso. Esto se suele llamar Persistencia o Resaca. • Un participante que quiera interrumpir a un orador tendrá que (i) hablar en voz alta y (ii) seguir intentándolo por un tiempo breve. En una conferencia presencial, el lenguaje corporal a menudo indica la intención de interrumpir. Pero en una conferencia a ciegas en discusión, la intención de un participante de interrumpir puede ser transmitida de manera efectiva a través de LN. Se debe garantizar un mecanismo de control de piso habilitado para cortar a un orador de manera contundente. Estos requisitos son cumplidos por el Número de Volumen [12], que cambia suavemente con el tiempo para que la selección (adición y eliminación) de clientes para la conferencia sea elegante. LN (= ) es una función de la amplitud de la corriente de audio actual más la actividad y amplitud en una ventana específica en el pasado. Fig. 3. \n\nFig. 3. Las diferentes ventanas utilizadas para el cálculo de LN se actualizan en una base de paquete por paquete. El parámetro básico utilizado aquí es la amplitud del paquete, que se calcula como la raíz cuadrada de la media cuadrática (rms) de las energías en las muestras de audio de un paquete, y se denota como XK. Tres ventanas están definidas como se muestra en la Fig. 3. El nivel de amplitud actual del altavoz se encuentra calculando el promedio móvil de la amplitud del paquete (XK) dentro de una ventana llamada Ventana de Pasado Reciente, que va desde el instante presente hasta algún momento pasado. La actividad pasada del hablante se encuentra calculando el promedio móvil de la amplitud del paquete (XK) dentro de una ventana llamada Ventana de Pasado Lejano, que comienza en el punto donde termina la ventana de Pasado Reciente y se extiende hacia atrás en el pasado por un intervalo predefinido. La actividad del hablante en el pasado se encuentra con una ventana llamada Horizonte de Actividad, que abarca la ventana del pasado reciente, así como la ventana del pasado lejano y más allá si es necesario. Aunque la contribución del horizonte de actividad parece similar a la contribución de las ventanas del pasado reciente y pasado lejano, la actividad pasada se calcula de manera diferente a partir de la ventana del horizonte de actividad. Define las cantidades durante estos tres intervalos como L1, L2 y L3. L1 cuantifica la actividad de habla del Pasado Reciente, L2 la actividad de habla del Pasado Lejano y L3 proporciona un número correspondiente a la actividad de habla en la ventana del Horizonte de Actividad, cuantificando qué tan activo estuvo el hablante en los últimos intervalos. L3 produce una cantidad que es proporcional a la fracción de paquetes que tienen energías por encima de un umbral predefinido (Ec. 3). El umbral es invariable entre clientes. ∑ +− = = 1 1 1 RPP P Wt tK K RP X W L (1) ∑ +−− −= = 1 2 1 DPRPP RPP WWt WtK K DP X W L (2) ∑ +− = ≥= 1 }{3 * 1 AHP P K Wt tK X AH I W L θθ (3) Donde siI KX 1}{ =≥θ θ≥KX = de lo contrario,0 El umbral es una constante. Se establece en el 10-20 por ciento de la amplitud de las muestras de voz de un paquete en nuestra implementación aquí. El número de intensidad λ para el instante de tiempo presente (o el paquete presente) se calcula como, 332211 *L*L*L αααλ ++= (4) Aquí 1, 2 y 3 son elegidos de tal manera que: 0< 1, 2 y 3=1- 1) Aquí, 1 es el peso dado al habla del pasado reciente, 2 es el peso dado al habla del pasado lejano y 3 es el peso dado a la actividad del habla en la ventana de horizonte de actividad considerada. 6.3 Seguridad, Vida y Equidad El parámetro λ tiene un efecto significativo en la evaluación de la ventana. Después de que un conferenciante se queda en silencio, otro puede tomar la palabra. Además, dado que hay más de un canal, la interrupción está habilitada. Un conferenciante ruidoso es más probable que sea escuchado debido a un λ elevado. Esto garantiza equidad para todos los conferenciantes. Después de todo, incluso en una conferencia presencial, un orador más vocal capta una atención especial. Todas estas características deseables están integradas en la LN. Una discusión exhaustiva sobre la selección de los diversos parámetros y la dinámica de LN están fuera del alcance de este documento. 6.4 Algoritmo de selección utilizando LN Siguiendo los desarrollos en las subsecciones 6.1 y 6.2, presentamos el algoritmo simple que se ejecuta en cada Servidor Maestro-Conferencia (Algoritmo 1). Este algoritmo se basa en las discusiones de la sección 6.1. El conjunto F, único a nivel mundial, se encuentra utilizando este procedimiento. Repetir para cada intervalo de tiempo en cada M-CS { 1. Obtener todos los paquetes de los clientes que le pertenecen. 2. Encuentra como máximo NMax clientes que tengan un PD[LPXP RXW RI 0 &OLHQWV LQ LWV GRPDLQ\u0011 3. Almacene una copia de los paquetes de esos clientes NMax en la base de datos DB1. Envía estos paquetes NMax a otros M-CSs (en Unicast o Multicast, dependiendo de la configuración). 5. De igual manera, recibir paquetes de todos los demás M-CSs y almacenarlos en la base de datos DB2. 6. Ahora compara los paquetes en DB1 y DB2 en WKH EDVLV RI DQG VHOHFW D PD[LPXP RI NMax entre ellos (para formar el conjunto F) que deberían ser reproducidos en cada Cliente. 7. Enviar los paquetes NMax en el conjunto F a los Clientes en su dominio. 8. Mezcla estos paquetes de audio NMax en el conjunto F después de linearizarlos y envíalos a Clientes sin capacidad en el dominio. Algoritmo 1. Algoritmo de selección El mecanismo propuesto aquí también se muestra en la Fig. 6, donde tiene lugar una única conferencia entre tres dominios. Los clientes sombreados son los seleccionados en sus dominios locales; sus flujos de audio serán enviados a otros CSs. 7. PROBLEMAS DE DESPLIEGUE Ahora analizamos los problemas de despliegue asociados con la gestión de conferencias. ¿Cómo deben organizarse los dominios para maximizar el número de participantes que pueden unirse? Para abordar esto, definimos algunos parámetros útiles.  Sea d el número de dominios diferentes en los que hay clientes activos en una conferencia dada.  Sea Mi el número de clientes activos presentes en el dominio i (di ≤≤1) en una conferencia dada. El número total de clientes activos en la conferencia es por lo tanto ∑= = d i iMM 1. Sea C el número máximo de flujos de audio que un Servidor de Conferencias puede manejar en un tiempo de paquete, también llamado capacidad. C se establece de acuerdo con la potencia de procesamiento del CS más débil en la conferencia, pero como no se puede asumir que lo conocemos de antemano, se puede establecer de acuerdo con algún requisito mínimo del sistema que una máquina debe cumplir para participar en una conferencia. Deje que NMax sea el número de flujos de salida que un CS debe enviar a otros CS en dominios remotos (ver sección 6.1). Estableceremos NMax = 3 (=|F|), según [15]. El problema de optimización consiste en encontrar el valor de d que maximiza el número total de clientes Mi atendidos por un CS en un dominio con capacidad C. Primero consideramos el caso en el que la capacidad no es excedida (el CS existente no está sobrecargado), y luego procedemos al caso en el que es necesario crear más CS cuando un CS único está sobrecargado. Suponemos que los clientes están distribuidos de manera equitativa entre los dominios, ya que no tenemos información para asumir una distribución a priori de los clientes. Podemos especificar únicamente un límite superior en el número de clientes aceptables, dado el número de dominios activos d. 7.1 Conferencias con solo un nivel de CSs En esta subsección, consideramos que tenemos solo un CS, es decir, un único M-CS en cada dominio. Por lo tanto, no se puede sobrecargar. Consideramos que el sistema funciona tal como se describe en la sección 6.1: Los clientes envían sus paquetes de audio a su CS local, que selecciona NMax flujos antes de enviarlos a otros CS. De manera paralela, también recibe NMax transmisiones para cada otro CS antes de tomar una decisión sobre cuáles de las NMax transmisiones serán seleccionadas, enviadas y reproducidas en cada cliente individual. Para la estabilidad del sistema, cualquier servidor de conferencias debería ser capaz de manejar a sus clientes locales además de los paquetes de audio de otros dominios. Claramente entonces, la siguiente desigualdad debe cumplirse para todo dominio: )1( −⋅+≥ dN d M C Max (5) El caso límite de (5) (tomando la igualdad) toma la forma 2 )( dNdNCM MaxMax ⋅−⋅+= (6) Para optimizar d con respecto a M, establecemos 0)(2 =+−⋅⋅= ∂ ∂ MaxMax NCdN d M (7) obteniendo     ⋅ + = Max Max N NC d 2 (8) ([ ]* = Redondeando al entero más cercano) y por lo tanto, M de (6). Tabla 1. Valores de d y M calculados para algunos valores de C con NMax = 3. En la Tabla 1, se presentan los valores de d y M que fueron calculados utilizando (8) y (6) con NMax = 3. Vemos que los valores de d y M, al depender de C, se basan en el CS más débil. Vemos que hay un equilibrio entre M y d. Podríamos admitir más dominios en la conferencia, pero a costa de restringir el número total de clientes M en la conferencia. Durante la implementación y prueba de los Servidores de Conferencia en un Pentium III 1.4 GHz con Windows NT, pudimos establecer C=300. Pero con la llegada de computadoras más rápidas (> 3 GHz), uno puede fácilmente establecer C a valores más altos y determinar d y M en consecuencia. La Fig. 4 muestra un mapa de contorno y la Fig. 5, una malla 3D que muestra soluciones optimizadas para CSs de diferentes capacidades. Estos nos llevan a maximizar el número de dominios, y por lo tanto, a maximizar el número total de clientes basado en la capacidad de varios CSs. En la Fig. 4, las curvas individuales representan el número total de clientes objetivo, y seleccionamos un valor más bajo de d, para la capacidad C, para el objetivo M con el fin de reducir el tráfico en la WAN. La Fig. 5 representa una perspectiva diferente de los mismos datos en 3D. Fig. 4. \n\nFig. 4. Diagrama de contorno de la capacidad versus el número óptimo de dominios para varios tamaños de conferencias 7.2 Conferencias con Dos Niveles de CSs. Ahora considerando el caso en el que el número de clientes en un dominio particular es demasiado grande, es decir, d M Mi ≥ (9), se debe evitar la denegación de servicio para nuevos clientes debido a la sobrecarga del Servidor de Conferencias. Este problema se puede resolver introduciendo un segundo nivel de CSs dentro del dominio dado, como se muestra en la Figura 6. El M-CS existente crea un CS esclavo (S-CS) que puede manejar hasta C usuarios finales y al que transfiere todos sus clientes activos. Aquí, el sistema funciona de manera diferente como se describe en la sección 6.1: Los clientes envían sus paquetes de audio a su S-CS local, que selecciona NMax flujos, antes de enviarlos a un M-CS local, que procederá de la misma manera, antes de enviar NMax flujos a los otros dominios. Cada S-CS recién creado debe ejecutarse en una máquina separada. El M-CS tiene que crear más S-CSs si el número de clientes activos supera C durante el transcurso de la conferencia después de la transferencia. Con este mecanismo, el M-CS podrá crear un máximo de     −⋅− = Max Max N dNC U )1( S-CSs, (10) ya que debe manejar 3 (= NMax) paquetes para cada S-CS local y 3 (= NMax) paquetes de cada otro dominio remoto. Podemos entonces calcular el número máximo teórico de clientes activos CUMi ⋅= en cada dominio, así como M, para toda la conferencia como CUdM ⋅⋅= . Fig. 5. Gráfico 3D de Capacidad versus Número óptimo de dominios para varios tamaños de conferencia. Por supuesto, se podría crear un tercer nivel en la jerarquía, lo que daría la posibilidad de alojar aún más clientes. Esto puede ser innecesario ya que el número de posibles clientes es lo suficientemente grande con dos niveles. 8. DISCUSIÓN DE RENDIMIENTO Ahora analizamos el rendimiento del algoritmo presentado en la subsección 6.3, es decir, el que se encarga del intercambio de paquetes de audio entre los diferentes dominios. Ten en cuenta que los paquetes que están en tránsito dentro de la LAN aprovechan la mayor capacidad (generalmente junto con capacidades de multidifusión) y por lo tanto no requieren un análisis de rendimiento. Por lo tanto, debemos examinar solo los paquetes RTP a través de la WAN, es decir, entre los M-CS participantes. Dado que cada M-CS de un dominio solo enviará NMax de los d paquetes M a los otros CS (MaxN d M >>), el ancho de banda utilizado por la aplicación en una WAN está limitado por la siguiente expresión. El número total de paquetes de audio que transitan por la WAN para cada intervalo de tiempo es ∑ ∑= ≠=        d i d ijj MaxN 1 ,1, lo cual es cuadrático en el número de dominios (es decir, O(d2)). Sin embargo, es independiente del número total de clientes activos. Esto no habría sido el caso si todos los paquetes se hubieran enviado por la red en cada intervalo de tiempo. El ahorro es tremendo. Sin embargo, se podría argumentar que enviar tres paquetes hacia y desde todos los dominios es un desperdicio de recursos, ya que la mayoría de estos flujos no serán seleccionados. Si solo hay un cliente activo, seleccionar un subconjunto de clientes en ese dominio es innecesario. Los algoritmos pesimistas y optimistas presentados en la secuela tienen como objetivo reducir aún más el tráfico aprovechando la naturaleza lenta y variable de la LN. 8.1 Algoritmo pesimista Consideremos un escenario en el que el LN más bajo (llamado LNt) de los tres flujos seleccionados globalmente (conjunto F de la Sección 6.1) excede el LN del flujo más dominante de un dominio. Evidentemente, las posibilidades de que los dos próximos flujos dominantes de ese dominio sean seleccionados para F en el próximo período de paquetes son menores. Aquí enviamos este flujo más dominante y retenemos los otros dos. Puede haber un error en la selección única en todos los dominios por un solo período de paquete. Como LN varía lentamente, el error se corregiría automáticamente en un período (ranura) de paquete posterior. En este algoritmo, hay al menos un flujo en cada período. El tráfico de red neto en un período de paquetes en el mejor caso es )1( −⋅ dd, es decir, )( 2 dO utilizando unicast, en lugar de MaxNdd ⋅−⋅ )1(. Se puede ahorrar un ancho de banda considerablemente valioso utilizando esta heurística. La complejidad del tráfico resultante se reduce de O(d2) a O(d) en redes habilitadas para multidifusión. Inicializar LNt = 0 en un M-CS/S-CS A. En el primer intervalo de tiempo (tiempo de paquete), cada CS envía las primeras NMax secuencias (basadas en su LN) a todos los demás CSs. En cada M-CS/S-CS y para cada tiempo de paquete: B. Encuentra el valor del LN más bajo de los flujos NMax seleccionados globalmente (conjunto F) del intervalo de tiempo anterior. Establece LNt con este valor. C. En cada dominio de CS, selecciona los NMax flujos locales que tengan el valor máximo de LN (conjunto ToOtherCSs). D. Seleccionar los flujos que tengan LN > LNt. Si hay >= NMax flujos con LN > LNt, entonces enviar los mejores NMax a otros CSs. EN OTRO CASO, si hay (NMax-1) flujos con LN>LNt, enviar los mejores (NMax-1) más el que esté por debajo de LNt (es decir, los mejores NMax) a otros CSs. EN OTRO CASO, si hay (NMax-2) flujos con LN>LNt, entonces enviar los mejores (NMax-2) más el que esté por debajo de LNt (es decir, los mejores (NMax-1)) a otros CSs. ... EN OTRO CASO, si NO hay flujos con LN>LNt, entonces enviar el mejor flujo a otros CSs. Los paquetes enviados en el paso D forman DB1. Los paquetes recibidos de otros CSs forman DB2. F. Para este intervalo de tiempo, encuentra flujos globales NMax basados en LN de DB1 y DB2 (conjunto F) G. Envía el conjunto F a los clientes en su dominio. Actualiza LNt para el próximo período. Algoritmo 2. Algoritmo pesimista para reducir el número de paquetes enviados por Internet. Fig. 6. \n\nFig. 6. Ejemplo de una jerarquía de 2 niveles de Servidores de Conferencias; los Clientes sombreados son los seleccionados por el M-CS y serán enviados a otros CSs de dominios. En este algoritmo, el ahorro en tráfico se logra a expensas de relajar la condición de formación del conjunto F globalmente único. Sin embargo, las discrepancias en los flujos seleccionados en diferentes dominios permanecen por un corto período de tiempo dependiendo del retraso en el transporte entre dos dominios. Incluso para un retraso total de 400 ms, con solo 10 ranuras de tiempo de paquete, se pierde la unicidad. Esta duración en una conversación interactiva en tiempo real no es perceptible por el oyente. En el caso de que haya una broma y todos se rían, entonces habría un aumento repentino en el número de paquetes y estaría limitado por MaxN)d(O 2 durante un corto período. 8.2 Algoritmo Optimista El tráfico puede reducirse aún más. El esquema en el siguiente algoritmo (Algoritmo 3) retiene todos los flujos que tienen un valor de LN menor que el mínimo de los tres en el conjunto F. Podemos encontrar los tres flujos correctos y únicos después de unos cuantos intervalos de tiempo, dependiendo del retraso de transporte entre los dominios. Dado que el período del paquete es del orden de 40 ms, el error en la selección es imperceptible. El número de flujos en la red en este caso siempre está restringido a NMax (=3). Incluso sin Detección de Actividad de Voz (VAD), en el mejor de los casos no habrá más de tres flujos en la red, por lo tanto, el tráfico total es constante. Una repentina oleada de tráfico, como se describe en la sección 8.1, es un caso particular. Estas ventajas se deben a la explotación de las características de LN. Inicializar LNt = 0 en un M-CS/S-CS A. En el primer intervalo de tiempo (tiempo de paquete), cada CS envía las primeras NMax secuencias (basadas en su LN) a todos los demás CS. En cada M-CS/S-CS y para cada tiempo de paquete: B. Encuentra el valor del LN más bajo de los flujos seleccionados globalmente de NMax (conjunto F) del intervalo de tiempo anterior. Establece LNt con este valor. C. En cada dominio de CS, selecciona los NMax flujos locales que tengan el valor máximo de LN (conjunto ToOtherCSs). D. Selecciona los flujos que tengan LN > LNt SI hay >= NMax flujos con LN > LNt, entonces envía los mejores NMax a otros CSs. EN OTRO CASO, si hay (NMax-1) flujos con LN>LNt, entonces enviar los primeros (NMax-1) y ver E. EN OTRO CASO, si hay (NMax-2) flujos con LN>LNt, entonces enviar los primeros (NMax-2) y ver E. ... EN OTRO CASO, si NO hay flujos con LN>LNt, entonces no enviar ningún flujo. E. Excepciones: SI el flujo que estaba en F en el último intervalo pertenece a este CS, entonces selecciona y envía ese flujo incluso si su LN es ahora < LNt. (Nota: esto ocurre solo en ese CS que tenía el flujo que fue el último de los tres en el período de paquetes anterior). Los paquetes enviados en los pasos D y E forman DB1. Los paquetes recibidos de otros CSs forman DB2. Para este intervalo de tiempo, encuentra los flujos globales NMax basados en LN de DB1 y DB2 (conjunto F). H. Envíe el conjunto F a los clientes en su dominio. Actualiza LNt para el próximo período. Algoritmo 3. Algoritmo optimista para reducir el número de paquetes enviados a través de Internet. Además, cuando se utiliza VAD [13], se reduciría aún más el tráfico al enviar solo la parte del encabezado del paquete RTP y no todo el paquete, con el fin de mantener actualizada la LN en todo momento. El tráfico aquí en este caso es O(NMax) para multicast y O(d) para unicast. Vemos que los algoritmos anteriores ahorran ancho de banda y cálculos en cada CS, y conducen a una arquitectura escalable con múltiples CS principalmente porque los clientes están agrupados en dominios. El ancho de banda necesario no depende del número total de clientes activos. Como el CS siempre elige a los tres mejores clientes de entre todos los clientes asignados en el dominio, la adición de nuevos clientes a la conferencia existente no causará ningún problema de escalabilidad. 8.3 Disponibilidad de Multidifusión En la arquitectura propuesta, no se hizo ninguna suposición sobre la disponibilidad de soporte de multidifusión de la red. El tráfico se reducirá aún más si la multidifusión está disponible a través de WAN. Es sencillo demostrar que el orden del tráfico tiende a ser O(d) en lugar de O(d2). Esta es una aproximación ya que el ahorro en la multidifusión también depende de la topología. El análisis se realizó para el caso en el que la multidifusión no está disponible (una suposición realista en el Internet de hoy en día). La ventaja de esta configuración es que podemos usarla incluso si la multidifusión está parcialmente disponible. Podemos instruir a los CSs durante la fase de configuración para enviar paquetes unicast a aquellos CSs que no pueden recibir paquetes multicast, mientras que los CSs en enrutadores habilitados para multicast pueden intercambiar paquetes en una dirección multicast. Las estructuras de datos y objetos de conferencia dentro de una CS se encuentran en [14]. Fig. 7. \n\nFig. 7. Interfaz de usuario para establecer el peso de las corrientes de audio NMax (establecer la barra de auto a cero evita el eco). Mejora de calidad 8.4 La mejora observada en la calidad percibida del servicio de conferencias se debe a: (1) limitar el número de oradores concurrentes a un número bajo, como tres. Generalmente, en una conferencia, si hablan más de dos participantes se pierde la inteligibilidad. El análisis conversacional demuestra que en tal caso habría un mecanismo de reparación [15]. (2) Retraso: La transmisión de audio entre dos clientes pasará como máximo por dos servidores centrales, reduciendo así el retraso de extremo a extremo. Para una conferencia grande puede haber tres CSs, sin embargo, un salto está dentro del dominio incurriendo en un retraso insignificante. (3) Dado que las transmisiones se mezclan solo en los clientes, puede haber una mezcla personalizada de las transmisiones. La sintonización individual de la mezcla con pesos preserva el espacialismo. La Fig. 7 muestra la interfaz de usuario para lo mismo. El eco al seleccionar la auto-transmisión se puede evitar reduciendo el peso. Sin embargo, la retroalimentación ayuda a asegurar al hablante de que está siendo escuchado por todos. CONCLUSIÓN En este artículo, hemos presentado una discusión sobre un entorno de conferencias virtuales solo de voz. Hemos argumentado que la naturaleza distribuida de la implementación aquí la hace escalable. La interactividad se logra adaptando un esquema reciente de selección de flujo basado en el Número de Sonoridad. Además, incorporamos un resultado de un trabajo más reciente [15] donde se ha demostrado la suficiencia de tres hablantes simultáneos. Por lo tanto, hay una utilización significativamente efectiva del ancho de banda. Un flujo mixto se reproduce en cada cliente; cada cliente puede elegir tener una mezcla personalizada ya que la mezcla se realiza en el terminal local de cada cliente. Estos permiten que el discurso improvisado en una videoconferencia virtual a través de VoIP sea una realidad, como en una conferencia presencial real. La compatibilidad está asegurada gracias al uso de SIP, el protocolo de señalización más buscado. Para garantizar un rendimiento satisfactorio, no exigimos la disponibilidad de multidifusión, pero la utilizamos si está disponible. El tráfico en la WAN (Internet) está limitado por arriba por el cuadrado del número de dominios, --además se reduce aún más mediante el uso de algoritmos heurísticos-- lo cual está muy por debajo del número total de clientes en la conferencia. Esto se debe al uso de un Servidor de Conferencias local para cada dominio. Las técnicas de VAD ayudan a reducir aún más el tráfico. El uso del estándar SIP para la señalización hace que esta solución sea altamente interoperable. Hemos implementado una aplicación de CS en una red de campus. Creemos que esta nueva generación de entornos de conferencias virtuales ganará más popularidad en el futuro, ya que su facilidad de implementación está garantizada gracias a las tecnologías fácilmente disponibles y los marcos escalables. REFERENCIAS [1] L. Aguilar et al., Arquitectura para un Sistema de Teleconferencia Multimedia, en Actas de ACM SIGCOMM, Ago 1986, pp. 126-136. [2] Carsten Bormann, Joerg Ott et al., Protocolo de Control de Conferencias Simple, Borrador de Internet, Dic. 1996. [3] M. Decina y V. Trecordi, Voz sobre Protocolo de Internet y Comercio Electrónico Asistido por Humanos, IEEE Comm. Revista, septiembre de 1999, pp. 64-67. [4] Eckehard Doerry, Una comparación empírica de la interacción copresente y mediada tecnológicamente basada en la ruptura comunicativa, Tesis de doctorado, Escuela de Graduados de la Universidad de Oregón, 1995. [5] H. P. Dommel y J.J. Garcia-Luna-Aceves, Control de piso para conferencias y colaboración multimedia, J. Sistemas Multimedia, Vol. 5, No. 1, enero de 1997, pp. 23-38. [6] Amitava Dutta-Roy, Reuniones virtuales con videoconferencias de escritorio, IEEE Spectrum, julio de 1998, pp. 47-56. [7] M. Handley y V. Jacobson, SDP: Protocolo de Descripción de Sesiones, RFC 2327, IETF, abril de 1998. [8] M. Handley, J. Crowcroft et al., Conferencias muy grandes en Internet: la arquitectura de conferencias multimedia en Internet, Revista de Redes de Computadoras, vol. 31, No. 3, febrero de 1999, pp. 191-204. [9] Rec. ITU-T. H.323, Sistemas de Comunicaciones Multimedia basados en Paquetes, vol. 2, 1998. [10] P. Koskelainen, H. Schulzrinne y X. Wu, Un Marco de Control de Conferencias basado en SIP, NOSSDAV02, mayo de 2002, pp. 53-61. [11] R Venkatesha Prasad et al., Protocolo de Control para Soporte de Conferencias de Audio VoIP, Conferencia Internacional sobre Tecnología de Comunicación Avanzada, Mu-Ju, Corea del Sur, febrero de 2001, pp. 419-424. [12] R Venkatesha Prasad et al., Adición y Eliminación Automáticas de Clientes en Conferencias VoIP, 6º Simposio IEEE sobre Computadoras y Comunicaciones, julio de 2001, Hammamet, Túnez, pp. 386-390. [13] R Venkatesha Prasad, H S Jamadagni, Abjijeet, et al Comparación de Algoritmos de Detección de Actividad de Voz, 7º Simposio IEEE sobre Computadoras y Comunicaciones. Julio de 2002, Sicilia, Italia, pp. 530-535. [14] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, Una Conferencia VoIP Distribuida Escalable utilizando SIP, Actas del 8º Simposio de Computadoras y Comunicaciones de IEEE, Antalya, Turquía, junio de 2003. [15] R Venkatesha Prasad, H S Jamadagni y H N Shankar, Sobre el Problema de Especificar el Número de Pisos en una Conferencia Solo de Voz, Por aparecer en IEEE ITRE 2003. [16] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, Una Propuesta para Conferencias Distribuidas en SIP utilizando Servidores de Conferencias, Por aparecer en las Actas de MMNS 2003, Belfast, Reino Unido, septiembre de 2003. [17] R. Venkatesha Prasad, H.S. Jamadagni, J. Kuri, R.S. Varchas, un soporte de conferencias VoIP distribuido que utiliza el número de sonoridad, Tech. Rep. TR-CEDT-TE-03-01 [18] M. Radenkovic et al, Servicio de audio escalable y adaptable para apoyar el trabajo colaborativo y el entretenimiento a través de Internet, SSGRR 2002, LAquila, Italia, enero de 2002. [19] M. Radenkovic, C. Greenhalgh, S. Benford, Problemas de implementación para el soporte de audio multiusuario en CVEs, ACM VRST 2002, noviembre de 2002, pp. 179-185. [20] Srinivas Ramanathan, P. Venkata Rangan, Harrick M. Vin, Diseñando arquitecturas de comunicación para la colaboración multimedia interorganizacional, Journal of Organizational Computing, 2 (3&4), pp.277-302, 1992. [21] A. B. Roach, Notificación de Eventos Específicos del Protocolo de Inicio de Sesión (SIP), RFC 3265, IETF, junio de 2002. [22] J. Rosenberg, H. Schulzrinne et al., SIP: Protocolo de Inicio de Sesión, RFC 3261, IETF, junio de 2002. [23] J. Rosenberg, H. Schulzrinne, Modelos para Conferencias de Múltiples Partes en SIP, Borrador de Internet, IETF, julio de 2002. [24] H. Schulzrinne et al., RTP: un protocolo de transporte para aplicaciones en tiempo real, RFC 1889, IETF, enero de 1996. [25] Lisa R. Silverman, Llegada a la Madurez: Soluciones de Conferencias que Reducen Costos Corporativos, Documento Técnico, www.imcca.org/wpcomingofage.asp [26] Kundan Singh, Gautam Nair y Henning Schulzrinne, Conferencias Centralizadas utilizando SIP, Actas del 2do Taller de IP-Telefonía (IPTel), abril de 2001. [27] D. Thaler, M. Handley y D. Estrin, Arquitectura de Asignación de Direcciones de Multidifusión en Internet, RFC 2908, IETF, septiembre de 2000. ",
            "candidates": [],
            "error": [
                [
                    "Entorno de Conferencias Virtuales",
                    "diseño del VCE"
                ]
            ]
        },
        "voip": {
            "translated_key": "voip",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Deployment Issues of a <br>voip</br> Conferencing System in a Virtual Conferencing Environment R. Venkatesha Prasad i Richard Hurni ii H.S.",
                "Jamadagni iii H.N.",
                "Shankar iv i, iii Centre for Electronics Design and Technology Indian Institute of Science, Bangalore, India Telephone: +91 80 360 0810 i, iii {vprasad, hsjam}@cedt.iisc.ernet.in ii hurni@ieee.org iv hn_shankar@yahoo.com ABSTRACT Real-time services have been supported by and large on circuitswitched networks.",
                "Recent trends favour services ported on packet-switched networks.",
                "For audio conferencing, we need to consider many issues - scalability, quality of the conference application, floor control and load on the clients/servers - to name a few.",
                "In this paper, we describe an audio service framework designed to provide a Virtual Conferencing Environment (VCE).",
                "The system is designed to accommodate a large number of end users speaking at the same time and spread across the Internet.",
                "The framework is based on Conference Servers [14], which facilitate the audio handling, while we exploit the SIP capabilities for signaling purposes.",
                "Client selection is based on a recent quantifier called Loudness Number that helps mimic a physical face-to-face conference.",
                "We deal with deployment issues of the proposed solution both in terms of scalability and interactivity, while explaining the techniques we use to reduce the traffic.",
                "We have implemented a Conference Server (CS) application on a campus-wide network at our Institute.",
                "Categories and Subjects Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - Client / Server, distributed applications.",
                "General Terms Algorithms, Performance, Design, Theory. 1.",
                "INTRODUCTION Todays Internet uses the IP protocol suite that was primarily designed for the transport of data and provides best effort data delivery.",
                "Delay-constraints and characteristics separate traditional data on the one hand from voice & video applications on the other.",
                "Hence, as progressively time-sensitive voice and video applications are deployed on the Internet, the inadequacy of the Internet is exposed.",
                "Further, we seek to port telephone services on the Internet.",
                "Among them, virtual conference (teleconference) facility is at the cutting edge.",
                "Audio and video conferencing on Internet are popular [25] for the several advantages they inhere [3,6].",
                "Clearly, the bandwidth required for a teleconference over the Internet increases rapidly with the number of participants; reducing bandwidth without compromising audio quality is a challenge in Internet Telephony.",
                "Additional critical issues are: (a) packet delay, (b) echo, (c) mixing of audio from selected clients, (d) automatic selection of clients to participate in the conference, (e) playout of mixed audio for every client, (f) handling clients not capable of mixing audio streams (such clients are known as dumb clients), and (g) deciding the number of simultaneously active clients in the conference without compromising voice quality.",
                "While all the above requirements are from the technology point of view, the users perspective and interactions are also essential factors.",
                "There is plenty of discussion amongst HCI and CSCW community on the use of Ethnomethodology for design of CSCW applications.",
                "The basic approach is to provide larger bandwidth, more facilities and more advanced control mechanisms, looking forward to better quality of interaction.",
                "This approach ignores the functional utility of the environment that is used for collaboration.",
                "Eckehard Doerry [4] criticizes this approach by saying it is keeping form before function.",
                "Thus, the need is to take an approach that considers both aspects - the technical and the functional.",
                "Regarding the functional aspect, we refer to [15] where it has been dealt with in some detail.",
                "In this work, we do not discuss video conferencing; its inclusion does not significantly benefit conference quality [4].",
                "Our focus is on virtual audio environments.",
                "We first outline the challenges encountered in virtual audio conferences.",
                "Then we look into the motivations followed by relevant literature.",
                "In Section 5, we explain the architecture of our system.",
                "Section 6 comprises description of the various algorithms used in our setup.",
                "We address deployment issues.",
                "A discussion on Swiss Federal Institute of Technology, Lausanne.",
                "Former visitor at CEDT.",
                "PESIT and NIAS, Bangalore, India.iv ii performance follows.",
                "We conclude taking alongside some implementation issues. 2.",
                "CHALLENGES IN <br>voip</br> CONFERENCING Many challenges arise in building a <br>voip</br> application.",
                "The following are of particular concern in the process: • Ease of use: Conferencing must be simple; users need no domain expertise.",
                "Management (addition/removal) of clients and servers must be uncomplicated.",
                "Application development should not presuppose specific characteristics of the underlying system or of network layers.",
                "Ease of use may include leveraging readily available, technically feasible and economically viable technologies. • Scalability: Conferencing must seem uninterrupted under heavy loads, i.e., when many additional users are added on.",
                "Traffic on WAN should not grow appreciably with the total number of clients; else, this has lead to congestion.",
                "So a means to regulate traffic to a minimum is needed for this kind of real-time applications. • Interactivity: In Virtual Conferencing Environments (VCEs), we intend a face-to-face-like conferencing application that mimics a real conference, where more vocal participants invite attention.",
                "Turn-taking in floor occupation by participants must be adapted gracefully to give a feel of natural transition. • Standardization: The solution must conform to established standards so as to gain interoperability and peer acceptance.",
                "The above requirements are placed in the perspective of observations made in earlier works (vide Sections 3 and 4) and will steer the VCE design. 3.",
                "THE MOTIVATION Ramanathan and Rangan [20] have studied in detail the architectural configurations comparing many conferencing architecture schemes taking into consideration the network delay and computation requirements for mixing.",
                "Functional division and object-oriented architecture design that aid in implementation is presented in [1].",
                "An overview of many issues involved in supporting a large conference is dealt in [8].",
                "H. P. Dommel [5] and many others highlight floor control as another pivotal aspect to be taken into account in designing a conferencing tool.",
                "Tightly coupled conference control protocols in Internet belong to the ITU-T H.323 family [9]; however, they are mainly for small conferences.",
                "The latest IETF draft by Rosenberg and Schulzrinne [23] discusses conferencing models with SIP [22] in the background.",
                "Aspects of implementation for centralized SIP conferencing are reported in [26].",
                "A new approach called partial mixing by Radenkovic [18] allows for mixed and non-mixed streams to coexist.",
                "In all the above proposals, while there are some very useful suggestions, they share one or more of the following limitations: • In an audio conference, streams from all the clients need not be mixed.",
                "Actually, mixing many arbitrary streams [24] from clients degrades the quality of the conference due to the reduction in the volume (spatial aspect of speech).",
                "The number of streams mixed varies dynamically depending on the number of active participants.",
                "This would lead to fluctuations in the volume of every individual participant causing severe degradation in quality.",
                "Customized mixing of streams is not possible when many clients are active.",
                "There is a threshold on the number of simultaneous speakers above which increasing the number of speakers becomes counterproductive to conference quality.",
                "Fixing the maximum number of simultaneous speakers is dealt in a recent work [15] using Ethnomethodology, and is conjectured to be three.",
                "Thus it is advisable to honour that constraint. • There cannot be many intermediate mixers (similarly, Conference Servers as in [10]) in stages as in [20] because it brings in inordinate delay by increasing the number of hops and is not scalable with interactivity in focus. • Floor Control for an audio conference (even video conference) with explicit turn-taking instructions to participants renders the conference essentially a one-speakerat-a-time affair, not a live and free-to-interrupt one.",
                "This way, the conference becomes markedly artificial and its quality degrades.",
                "Schulzrinne et al. [24], assume only one participant is speaking at a time.",
                "In this case, if applications are implemented with some control [5], the service becomes gagging for the users. • Partial mixing [18] has a similar problem as that of mixing when more streams are mixed.",
                "Moreover, in [18], to allow impromptu speech, mixing is not done when the network can afford high bandwidth requirements for sending/receiving all the streams, but it is unnecessary [15]. • For large conferences [23, 10] a centralized conference cannot scale up.",
                "With multicasting, clients will have to parse many streams and traffic on a clients network increases unnecessarily.",
                "Evidently, different particular issues, all of which are a subset of requirements (defined in [14] and [16]) for a <br>voip</br> conferencing support, are tackled.",
                "Thus there is a need to address conferencing as a whole with all its requirements considered concurrently.",
                "Towards this goal, the <br>voip</br> conferencing system we propose is intended to be scalable and interactive.",
                "We make use of the Loudness Number for implementing floor control.",
                "This permits a participant to freely get into the speaking mode to interrupt the current speaker as in a natural face-to-face meeting.",
                "An upper limit on the number of floors (i.e., the number of speakers allowed to speak at the same time) is fixed using a conjecture proposed in [15].",
                "The work presented here is in continuation of our studies into conferencing based on the Session Initiation Protocol in [14] and [16].",
                "SIP, defined in [22] is now the most popular standard for <br>voip</br> deployment and has been chosen for its strength, ease of use, extensibility and compatibility.",
                "This is the reason it will be in the background of all controlling messages that will implicitly arise between the entities in our architecture.",
                "The actual messages are described in [16] and, as such, we do not present a complete description of them here. 4.",
                "RELATED WORK The SIP standard defined in RFC 3261 [22] and in later extensions such as [21] does not offer conference control services such as floor control or voting and does not prescribe how a conference is to be managed.",
                "However SIP can be used to initiate a session that uses some other conference control protocol.",
                "The core SIP specification supports many models for conferencing [26, 23].",
                "In the server-based models, a server mixes media streams, whereas in a server-less conference, mixing is done at the end systems.",
                "SDP [7] can be used to define media capabilities and provide other information about the conference.",
                "We shall now consider a few conference models in SIP that have been proposed recently [23].",
                "First, let us look into server-less models.",
                "In End-System Mixing, only one client (SIP UA) handles the signaling and media mixing for all the others, which is clearly not scalable and causes problems when that particular client leaves the conference.",
                "In the Users Joining model, a tree grows, as each invited party constitutes a new branch in the distribution path.",
                "This leads to an increasing number of hops for the remote leaves and is not scalable.",
                "Another option would be to use multicast for conferencing but multicast is not enabled over Internet and only possible on a LAN presently.",
                "Among server-based models, in a Dial-In Conference, UAs connect to a central server that handles all the mixing.",
                "This model is not scalable as it is limited by the processing power of the server and bandwidth of the network.",
                "Adhoc Centralized Conferences and Dial-Out Conference Servers have similar mechanisms and problems.",
                "Hybrid models involving centralized signaling and distributed media, with the latter using unicast or multicast, raise scalability problems as before.",
                "However an advantage is that the conference control can be a third party solution.",
                "Distributed Partial Mixing, presented in [18], proposes that in case of bandwidth limitation, some streams are mixed and some are not, leaving interactivity intact.",
                "Loss of spatialism when they mix and the bandwidth increase when they do not are open problems.",
                "A related study [19] by the same author proposes conferencing architecture for Collaborative Virtual Environments (CVEs) but does not provide the scalability angle without the availability of multicasting.",
                "With the limitations of proposed conferencing systems in mind, we will now detail our proposal. 5.",
                "SYSTEM ARCHITECTURE This section is dedicated to the description of the proposed system architecture.",
                "However, as this paper constitutes the continuation of our work started in [14] and furthered in [16], we will not present here all the details about the proposed entities and invite the readers to consult the papers mentioned above for a full and thorough description.",
                "First, we do not restrict our conferencing system to work on small conferences only, but rather on large audio VCEs that have hundreds (or even thousands) of users across a Wide Area Network (WAN) such as the Internet.",
                "This view stems from an appraisal that VCEs will gain in importance in the future, as interactive audio conferences will be more popular because of the spread of the media culture around the world.",
                "Two issues must be taken care of when building a <br>voip</br> conferencing system: (i) the front-end, consisting of the application program running on the end-users computers and (ii) the back-end that provides other application programs that facilitate conferencing and conference.",
                "The participating users are grouped into several domains.",
                "These domains are Local Area Networks (LANs), such as corporate or educational networks.",
                "This distributed assumption asks for distributed controlling and media handling solutions, as centralized systems would not scale for such very large conferences (vide Section 4).",
                "More explicitly, in each domain, we can identify several relevant logical components of a conferencing facility (Fig. 1):  An arbitrary number of end users (clients) that can take part in at most one audio conference at a time.",
                "Every user is Fig. 1.",
                "Conference example - 3 domains containing the necessary entities so that the conference can take place. included in one and only one domain at a given instant, but can move from domain to domain (nomadism).",
                "In our conferencing environment, these clients are regular SIP User Agents (SIP UAs), as defined in [22] so to gain in interoperability with other existing SIP-compatible systems.",
                "These clients are thus not aware of the complex setting that supports the conference and this is highlighted below.  One SIP Server (SIPS) per domain, taking care of all the signaling aspects of the conference (clients joining, leaving, etc.) [16].",
                "In particular, it is considered as a physical implementation encompassing different logical roles, namely a SIP Proxy Server, a SIP Registrar Server, a SIP Redirect Server and a SIP B2BUA (Back-to-Back User Agent) [22].",
                "This physical implementation enables the handling of incoming/outgoing SIP messages by one or another logical entity according to the needs.",
                "SIPS is entrusted with maintaining total service and has many advantages such as (a) it works as a centralized entity that can keep track of the activities of the UAs in a conference; (b) it can do all the switching for providing PBX features; (c) it can locate the UAs and invite them for a conference; (d) it can do the billing as well.",
                "SIPSs in different domains communicate with each other using SIP messages as described in [16].",
                "If the load on a particular SIPS is too heavy, it can create another SIPS in the same domain so that the load will be shared.  One Master Conference Server (M-CS) (simply a Conference Server (CS)) for each conference is created by the local SIPS when a conference starts.",
                "This server will be used for handling media packets for the clients of the domain.",
                "Its mechanism will be described in the next section.",
                "The M-CS will be able to create a hierarchy of CSs inside a domain by adding one or more Slave CSs (S-CSs) to accommodate all the active clients and prevent its own flooding at the same time.",
                "We will see this mechanism in some detail in the sequel.",
                "The entities described here are exhaustive and conform to the SIP philosophy.",
                "Thus, the use of SIP makes this architecture more useful and interoperable with any other SIP clients or servers. 6.",
                "ALGORITHMIC ISSUES 6.1 Selecting the Streams Similar to SipConf in [27], a Conference Server (CS) [17] has the function of supporting the conference; it is responsible for handling audio streams using RTP.",
                "It can also double to convert audio stream formats for a given client if necessary and can work as Translators/Mixers of RTP specification behind firewalls.",
                "We have based the design of our CS on H.323 Multipoint Processor (MP) [9].",
                "In short, the MP receives audio streams from the endpoints involved in a centralized or hybrid multipoint conference, processes them and returns them to the endpoints.",
                "An MP that processes audio prepares NMax audio outputs from M input streams after selection, mixing, or both.",
                "Audio mixing requires decoding the input audio to linear signals (PCM or analog), performing a linear combination of the signals and reencoding the result in an appropriate audio format.",
                "The MP may eliminate or attenuate some of the input signals in order to reduce noise and unwanted components.",
                "Fig. 2.",
                "Schematic diagram of a CS The limitation of H.323 is that it does not address the scalability of a conference.",
                "The architecture proposes a cascaded or daisy chain topology [10], which can be shown that it cannot scale up for a large conference.",
                "A CS serves many clients in the same conference.",
                "Thus it handles only one conference at a time.",
                "Multiple CSs may coexist in a domain, as when there are several conferences under way.",
                "Signaling-related messages of CSs are dealt in [11].",
                "The working of a CS is illustrated on Fig. 2: For each mixing interval, CS 1 chooses the best NMax audio packets out of the M1 (using a criterion termed Loudness Number, described in the next subsection).",
                "It may possibly receive and sends these to CSs 2 to P. The set of packets sent is denoted as ToOtherCSs.",
                "In the same mixing interval, it also receives the best NMax audio packets (out of possibly M2) from CS 2, similarly the best NMax (out of possibly MP) from CS P. For simplicity, we ignore propagation delay between CSs which indeed can be taken into account; it is beyond the scope of this presentation.",
                "The set of packets received is denoted as FromOtherCSs.",
                "Finally, it selects the best NMax packets from the set {ToOtherCSs union FromOtherCSs} and passes these packets to its own group.",
                "It can be seen that the set {ToOtherCSs union FromOtherCSs} is the same at all CSs.",
                "This ensures that any client in the conference finally receives the same set of packets for mixing.",
                "Hence all clients obtain a common view of the conference.",
                "Similarly, for each time slot (packet time), a subset, F of all clients is selected (using the same criterion) from the pool of packets from all other CSs plus the NMax clients selected locally.",
                "Their packets are mixed and played out at the clients.",
                "According to [15], the cardinality of F, |F| is NMax and is fixed at three.",
                "In our conferencing setup, selection is by the Master Conference Server (M-CS), which comes into the picture exclusively for media handling.",
                "Note that even if the SIP specification enables direct UA-to-UA media communication in a one-to-one call, it is also possible to use the Conference Server for two-party calls, especially because it is then more functional to create a real conference by adding a third and subsequently more participant(s).",
                "There are cases wherein the processing capacity of an M-CS is exceeded as it may have too many packets - from local domains and from remote domains - to process.",
                "In that case, the M-CS will create one or many S-CS (Fig. 6) and transfer its own clients as well as the new clients to them.",
                "In this configuration, the algorithm outlined above will be slightly modified, as the audio packets will go from clients to their dedicated S-CS that will select NMax packets to send to the local M-CS, which will then select NMax packets from all its S-CSs in the domain before sending them to the remote domains.",
                "The incoming packets from other domains will be received by the M-CS, select NMax of them and send them directly to the domain clients, bypassing the SCSs.",
                "This change implies that at most three intermediate entities exist for each audio packet, instead of two in the conventional setup.",
                "As the extra hop happens inside the LAN supposed to have a high-speed connectivity, we consider that it should not prevent us from using this hierarchy of CSs when theres a need to do so. 6.2 Loudness Number (LN) A basic question to be answered by the CS is the following.",
                "In a mixing interval, how should it choose NMax packets out of the M it might possibly receive?",
                "One way is to rank the M packets received according to their energies, and choose the top NMax.",
                "However, this is usually found to be inadequate because random fluctuations in packet energies can lead to poor audio quality.",
                "This indicates the need for a metric different from mere individual packet energies.",
                "The metric should have the following characteristics [12]: • A speaker (floor occupant) should not be cut off by a spike in the packet energy of another speaker.",
                "This implies that a speakers speech history should be given some weight.",
                "This is often referred to as Persistence or Hangover. • A participant who wants to interrupt a speaker will have to (i) speak loudly and (ii) keep trying for a little while.",
                "In a face-to-face conference, body language often indicates the intent to interrupt.",
                "But in a blind conference under discussion, a participants intention to interrupt can be conveyed effectively through LN.",
                "A floor control mechanism empowered to cut off a speaker forcefully must be ensured.",
                "These requirements are met by Loudness Number [12], which changes smoothly with time so that the selection (addition and deletion) of clients for conference is graceful.",
                "LN (= ) is a function of the amplitude of the current audio stream plus the activity and amplitude over a specific window in the past.",
                "Fig. 3.",
                "The different windows used for LN computation The Loudness Number is updated on a packet-by-packet basis.",
                "The basic parameter used here is packet amplitude, which is calculated as root mean square (rms) of the energies in audio samples of a packet, and denoted by XK.",
                "Three windows are defined as shown in Fig. 3.",
                "The present amplitude level of the speaker is found by calculating the moving average of packet amplitude (XK) within a window called Recent Past Window starting from the present instant to some past time.",
                "The past activity of the speaker is found by calculating the moving average of the packet amplitude (XK) within a window called Distant Past Window, which starts at the point where the Recent Past window ends and stretches back in the past for a pre-defined interval.",
                "The activity of the speaker in the past is found with a window called Activity Horizon, which spans the recent past window as well as the distant past window and beyond if necessary.",
                "Though the contribution of the activity horizon looks similar to the contribution of the recent past and distant past windows, past activity is computed from activity horizon window in a differently.",
                "Define the quantities during these three intervals as L1, L2 and L3.",
                "L1 quantifies the Recent Past speech activity, L2 the Distant Past speech activity and L3 gives a number corresponding to the speech activity in the Activity Horizon window quantifying how active the speaker was in the past few intervals.",
                "L3 yields a quantity that is proportional to the fraction of packets having energies above a pre-defined threshold (Eq. 3).",
                "The threshold is invariant across clients. ∑ +− = = 1 1 1 RPP P Wt tK K RP X W L (1) ∑ +−− −= = 1 2 1 DPRPP RPP WWt WtK K DP X W L (2) ∑ +− = ≥= 1 }{3 * 1 AHP P K Wt tK X AH I W L θθ (3) Where ifI KX 1}{ =≥θ θ≥KX = otherwise,0 The threshold is a constant. is set at 10-20 percent of the amplitude of the voice samples of a packet in our implementation here.",
                "Loudness Number λ for the present time instant (or the present packet) is calculated as, 332211 *L*L*L αααλ ++= (4) Here 1\u000f 2 DQG 3 are chosen such that: 0< 1\u000f 2\u001f\u0014\u000f \u0013\u001f 1\u000e 2\u001f\u0014 DQG 3=1-\u000b 1\u000e 2) Here, 1 is the weight given to the recent past speech, 2 is the weight given to distant past speech and 3 is the weight given to speech activity in the activity horizon window considered. 6.3 Safety, Liveness and Fairness The λ parameter KDV VRPH PHPRU\\ GHSHQGLQJ RQ WKH VSUHDG RI the windows.",
                "After one conferee becomes silent, another can take the floor.",
                "Also, as there is more than one channel, interruption is enabled.",
                "A loud conferee is more likely to be heard because of elevated λ.",
                "This ensures fairness to all conferees.",
                "After all, even in a face-to-face conference, a more vocal speaker grabs special attention.",
                "All these desirable characteristics are embedded into the LN.",
                "A comprehensive discussion on selection of the various parameters and the dynamics of LN are beyond the scope of this paper. 6.4 Selection Algorithm using the LN Following the developments in subsections 6.1 and 6.2, we present the simple algorithm that runs at each Master-Conference Server (Algorithm. 1).",
                "This algorithm is based on the discussions in section 6.1.",
                "The globally unique set F is found using this procedure.",
                "Repeat for each time slot at each M-CS { 1.",
                "Get all the packets from the Clients that belong to it. 2.",
                "Find at most NMax Clients that have PD[LPXP RXW RI 0 &OLHQWV LQ LWV GRPDLQ\u0011 3.",
                "Store a copy of packets from those NMax Clients in database DB1. 4.",
                "Send these NMax packets to other M-CSs (on Unicast or Multicast, depending on the configuration). 5.",
                "Similarly, receive packets from all other M-CSs and store them in database DB2. 6.",
                "Now compare the packets in DB1 and DB2 on WKH EDVLV RI DQG VHOHFW D PD[LPXP RI NMax amongst them (to form set F) that should be played out at each Client. 7.",
                "Send the NMax packets in set F to the Clients in its domain. 8.",
                "Mix these NMax audio packets in set F after linearising and send it to dumb Clients in the domain. }",
                "Algorithm 1.",
                "Selection algorithm The mechanism proposed here is also depicted on Fig. 6, where a single conference takes place between three domains.",
                "The shaded clients are the ones selected in their local domains; their audio streams will be sent to other CSs. 7.",
                "DEPLOYMENT ISSUES We now analyze deployment issues associated with conference management.",
                "How are domains to be organized to maximize the number of participants able to join?",
                "To address this, we define some useful parameters.  Let d be the number of different domains in which there are active clients in a given conference.  Let Mi be the number of active clients present in domain i ( di ≤≤1 ) in a given conference.",
                "The total number of active clients in the conference is thus ∑= = d i iMM 1 .  Let C be the maximum number of audio streams a Conference Server can handle in a packet time, also called capacity.",
                "C is set according to the processing power of the weakest CS in the conference but as it cannot be assumed that we know it a-priori, it can be set according to some minimum system requirement a machine must meet in order to take part in a conference.  Let NMax be the number of output streams a CS has to send to other CSs in remote domains (see section 6.1).",
                "We will set NMax =3 (=|F|), according to [15].",
                "The optimization problem is now to find the value of d that maximizes the total number of clients Mi served by one CS in a domain with capacity C. We first dispose the case where the capacity is not exceeded (the existing CS is not overloaded), and then proceed to the case where there exists a need to create more CSs when a single CS is overloaded.",
                "We assume that clients are equally distributed amongst the domains, as we may not have information to assume an a-priori distribution of the clients.",
                "We can specify no more than an upper bound on the number of clients acceptable, given the number of active domains d. 7.1 Conferencing with only One Level of CSs In this subsection, we consider that we have only one CS, i.e., a unique M-CS in each domain.",
                "Thus it cannot be overloaded.",
                "We consider that the system works as outlined in section 6.1: The Clients send their audio packets to their local CS, which selects NMax streams, before sending them to other CSs.",
                "In parallel, it also receives NMax streams for every other CSs before taking a decision on which NMax streams will be selected, sent and played out at each individual clients.",
                "For system stability, any CS in the conference should be able to handle its local clients in addition to the audio packets from other domains.",
                "Clearly then, the following inequality must hold for every domain: )1( −⋅+≥ dN d M C Max (5) The limiting case of (5) (taking the equality) takes the form 2 )( dNdNCM MaxMax ⋅−⋅+= (6) To optimize d with respect to M, we set 0)(2 =+−⋅⋅= ∂ ∂ MaxMax NCdN d M (7) yielding     ⋅ + = Max Max N NC d 2 (8) ([ ]* = Rounding to nearest integer) and hence, M from (6).",
                "C d M 50 9 234 100 17 884 150 26 1950 200 34 3434 250 42 5334 300 51 7650 350 59 10384 400 67 13534 450 76 17100 500 84 21084 Table 1.",
                "Values of d and M computed for some values of C with NMax = 3.",
                "In Table 1, we give the values of d and M that were computed using (8) and (6) with NMax = 3.",
                "We see that the values of d and M, being dependent of C, are therefore based on the weakest CS.",
                "We see that there is a trade-off between M and d. We could admit more domains in the conference, but at the expense of restricting the total number of clients M in the conference.",
                "While implementing and testing the Conference Servers on a Pentium III 1.4 GHz running Windows NT, we were able to set C=300.",
                "But with the advent of faster computers (> 3 GHz), one can easily set C to higher values and determine d and M accordingly.",
                "Fig. 4 shows a contour plot and Fig. 5, a 3D-mesh showing optimized solutions for CSs of different capacities.",
                "These lead us to maximize the number of domains, and hence, to maximize the total number of clients based on the capacity of various CSs.",
                "In Fig. 4, the individual curves represent the total number of clients targeted, and we select a lower value of d, for capacity C, for targeted M to reduce traffic on WAN.",
                "Fig. 5 represents a different perspective of the same data in 3D.",
                "Fig. 4.",
                "Contour Plot of Capacity versus Optimum number of domains for various conference sizes 7.2 Conferencing with Two Levels of CSs Now considering the case where the number of clients in a particular domain is too large, i.e., d M Mi ≥ (9) one has to avoid the denial of service for new clients due to overloading of Conference Server.",
                "This problem can be solved by introducing a second level of CSs inside the given domain, as in Fig. 6.",
                "The existing M-CS creates a Slave CS (S-CS) that can handle up to C end-users and to which it transfers all its active clients.",
                "Here, the system works differently as outlined in section 6.1: The Clients send their audio packets to their local S-CS, which selects NMax streams, before sending them to a local M-CS, which will proceed in the same way, before sending NMax streams to the other domains.",
                "Each newly created S-CS must run on a separate machine.",
                "The M-CS has to create more S-CSs if the number of active clients exceeds C in the course of the conference after the transfer.",
                "With this mechanism, the M-CS will be able to create utmost     −⋅− = Max Max N dNC U )1( S-CSs, (10) as it must handle 3 (= NMax) packets for each local S-CSs and 3 (= NMax) packets from each other remote domains.",
                "We can then calculate the maximum theoretical number of active clients CUMi ⋅= in each domain as well as M, for the whole conference as CUdM ⋅⋅= .",
                "Fig. 5. 3D Plot of Capacity versus Optimum number of domains for various conference sizes Of course, one could further create a third level in the hierarchy, giving the possibility of accommodating even more clients.",
                "This may be unnecessary as the number of possible clients is large enough with two levels. 8.",
                "PERFORMANCE DISCUSSION We now analyze the performance of the algorithm presented in subsection 6.3, i.e., the one taking care of the exchange of audio packets between the different domains.",
                "Note that the packets that are transiting within the LAN take advantage of the higher capacity (generally coupled with multicast capabilities) and therefore do not require a performance analysis.",
                "Thus we have to look only at the RTP packets over the WAN, i.e., between participating M-CSs.",
                "As each M-CS from a domain will be sending only NMax out of d M packets to the other CSs ( MaxN d M >> ), the bandwidth used by the application over a WAN is upper-bounded by the following expression.",
                "The total number of audio packets transiting over the WAN for each time slot is ∑ ∑= ≠=        d i d ijj MaxN 1 ,1 which is quadratic in the number of domains (i.e., O(d2 )).",
                "However, it is independent of the total number of active clients.",
                "This would not have been the case had all packets been sent over the network in each time slot.",
                "The saving is tremendous.",
                "Yet, one may contend that sending three packets to and from all domains is a waste of resources, as most of these streams will not be selected.",
                "If just one client is active, selecting a subset of clients in that domain is unnecessary.",
                "Pessimistic and optimistic algorithms as presented in the sequel aim at reducing the traffic further by harnessing the slow varying nature of the LN. 8.1 Pessimistic algorithm Consider a scenario wherein the lowest LN (called LNt) of the three globally selected streams (set F of Section 6.1) exceeds the LN of the most dominant stream of a domain.",
                "Evidently, the chances that the next two dominant streams of that domain being selected to F in the next packet period are less.",
                "Here, we send this most dominant stream and withhold the other two.",
                "There may be an error in unique selection across all domains for one packet period only.",
                "As LN varies slowly, the error would get automatically rectified in a subsequent packet period (slot).",
                "In this algorithm, there is at least one stream in each period.",
                "The net network traffic in a packet period in the best case is )1( −⋅ dd , i.e., )( 2 dO using unicast, instead of MaxNdd ⋅−⋅ )1( .",
                "Considerable valuable bandwidth can be saved using this heuristic.",
                "The resulting traffic complexity reduces from O(d2 ) to O(d) in multicast-enabled networks.",
                "Initialize LNt = 0 at an M-CS/S-CS A.",
                "In the first time slot (packet time), each CS sends the top NMax streams (based on their LN) to all other CSs.",
                "At each M-CS/S-CS and for each packet time: B.",
                "Find the value of lowest LN of the NMax globally selected streams (set F) from the previous time slot.",
                "Set LNt with this value.",
                "C. At each CS domain, select the NMax local streams that have maximum value of LN (ToOtherCSs set).",
                "D. Select streams that have LN > LNt.",
                "IF there are >= NMax streams with LN > LNt then send top NMax to other CSs.",
                "ELSE IF there are (NMax-1) streams with LN>LNt then send top (NMax-1) plus the one lower than LNt (i.e., top NMax) to other CSs.",
                "ELSE IF there are (NMax-2) streams with LN>LNt then send top (NMax-2) plus the one lower than LNt (i.e. top (NMax -1)) to other CSs. …… ELSE IF there are NO streams with LN> LNt then send top 1 stream to other CSs.",
                "E. Packets sent in step D form DB1.",
                "Packets received from other CSs form DB2.",
                "F. For this time slot, find global NMax streams based on LN from DB1 U DB2 (set F) G. Send set F to the clients in its domain.",
                "Update LNt for the next period.",
                "Algorithm 2.",
                "Pessimistic algorithm to reduce the number of packets sent over the Internet.",
                "Fig. 6.",
                "Example of a 2-level hierarchy of Conference Servers; the shaded Clients are the one selected by the M-CS and will be sent to other domains CSs.",
                "In this algorithm the saving in traffic is at the cost of relaxing the condition of formation of globally unique set F. However, the discrepancies in selected streams at different domains remain for a short period of time depending on the transportation delay between any two domains.",
                "Even for a total delay of 400ms, for only 10 packet time slots the uniqueness is lost.",
                "This duration in a real-time interactive conversation is non-perceivable by the listener.",
                "In the case that there is a joke and every one laughs, then there would be sudden rise in the number of packets and it would be upper bounded by MaxN)d(O 2 for a short period. 8.2 Optimistic Algorithm The traffic can be reduced further.",
                "The scheme in the following algorithm (Algorithm. 3) is withholding all the streams that have less value of LN compared to the least of the three in the set F. We can find the correct and unique three streams after a few time slots depending on the transportation delay between the domains.",
                "As the packet period is of the order of 40ms, the error in the selection is unnoticeable.",
                "The number of streams on network in this case is always restricted to NMax (=3).",
                "Even without Voice Activity Detection (VAD), there will be no more than three streams in the network in the best case, thus the total traffic is constant.",
                "A sudden burst of traffic, as described in 8.1, is a particular case.",
                "These advantages are due to exploitation of the characteristics of LN.",
                "Initialize LNt = 0 at an M-CS/S-CS A.",
                "In the first time slot (packet time), each CS sends the top NMax streams (based on their LN) to all other CSs.",
                "At each M-CS/S-CS and for each packet time: B.",
                "Find the value of lowest LN of the NMax globally selected streams (set F) from the previous time slot.",
                "Set LNt with this value.",
                "C. At each CS domain, select the NMax local streams that have maximum value of LN (ToOtherCSs set) D. Select streams that have LN > LNt IF there are >= NMax streams with LN > LNt then send top NMax to other CSs.",
                "ELSE IF there are (NMax-1) streams with LN>LNt then send top (NMax-1) and see E. ELSE IF there are (NMax-2) streams with LN>LNt then send top (NMax-2) and see E. …… ELSE IF there are NO streams with LN> LNt then dont send any stream.",
                "E. Exceptions: IF the stream that was in F in the last interval belongs to this CS then select and send that stream even if its LN is now < LNt. (Note this occurs only at that CS which had the stream that was the last of the three in the previous packet period.)",
                "F. Packets sent in step D and E form DB1.",
                "Packets received from other CSs form DB2.",
                "G. For this time slot, find global NMax streams based on LN from DB1 U DB2 (set F).",
                "H. Send set F to the clients in its domain.",
                "Update LNt for the next period.",
                "Algorithm 3.",
                "Optimistic algorithm to reduce the number of packets sent over the Internet Furthermore, when VAD is used [13], it would further reduce the traffic by sending the header part of the RTP packet only and not the whole packet, thus in order to keep updating the LN across.",
                "The traffic here in this case is O(NMax) for multicast and O(d) for unicast.",
                "We see that the above algorithms save bandwidth and computation at each CS, and leads to a scalable architecture with multiple CSs mainly because clients are grouped in domains.",
                "The necessary bandwidth is not dependent on the total number of active clients.",
                "As the CS always chooses the best three clients out of all the clients assigned to it in the domain, addition of new clients to the existing conference will not cause any scalability problem. 8.3 Availability of Multicasting In the architecture that has been proposed, no assumption was made about the availability of multicasting support from the network.",
                "The traffic will be further reduced if multicasting is available over WAN.",
                "It is simple to show that the order of traffic would tend to become O(d) from O(d2 ).",
                "This is an approximation as saving in multicasting depends also on the topology.",
                "The analysis was done for the case wherein multicast is not available (a realistic assumption in todays Internet).",
                "The advantage of this set up is that we can use it even if multicasting is partially available.",
                "We can instruct CSs during the set-up phase to send unicast packets to those CSs that cannot receive multicast packets whereas CSs on multicast enabled routers can exchange packets on a multicast address.",
                "The data structures and conference objects inside a CS is given in [14].",
                "Fig. 7.",
                "User Interface for setting the weight for NMax audio streams (setting Self-bar to zero avoids echo). 8.4 Quality Improvement The observed improvement in the perceived quality of the conference service is due to: (1) limiting the number of concurrent speakers to a low number such as three.",
                "Generally, in a conference if more than two participants speak the intelligibility is lost.",
                "The conversational analysis demonstrates that there would be a repair mechanism [15] in such a case. (2) Delay: The audio stream between any two clients will pass through at most two CSs thus reducing the end-to-end delay.",
                "For a large conference there might be three CSs however, one hop is within the domain incurring negligible delay. (3) As the streams are mixed only at the clients, there can be a customized mix of the streams.",
                "The individual tuning of mixing with weights the spatialism is preserved.",
                "Fig. 7 shows the user interface for the same.",
                "The echo when self-stream is selected can be avoided by reducing the weight.",
                "Nonetheless, feedback helps in reassuring speaker that he/she is heard by all. 9.",
                "CONCLUSION In this paper, we have presented a discussion on a voice-only virtual conferencing environment.",
                "We have argued that the distributed nature of deployment here makes it scalable.",
                "Interactivity is achieved by adapting a recent stream selection scheme based on Loudness Number.",
                "Additionally, we incorporate a result from a more recent work [15] where the sufficiency of three simultaneous speakers has been demonstrated.",
                "Thus, there is significantly effective utilization of bandwidth.",
                "A mixed stream is played out at each client; each client may choose to have a customized mix since mixing is done at the local terminal of each client.",
                "These render impromptu speech in a virtual teleconference over <br>voip</br> a reality, as in a real face-to-face conference.",
                "Compatibility is assured thanks to the use of SIP, the most soughtafter signaling protocol.",
                "To ensure a satisfying performance, we do not demand the availability of multicast, but use it if and when available.",
                "The traffic in the WAN (Internet) is upper-bounded by the square of the number of domains, -- further reduced by using heuristic algorithms -- which is far below the total number of clients in the conference.",
                "This is due to the use of a Conference Server local to each domain.",
                "VAD techniques help further traffic reduction.",
                "Using SIP standard for signaling makes this solution highly interoperable.",
                "We have implemented a CS application on a campus-wide network.",
                "We believe this new generation of virtual conferencing environments will gain more popularity in the future as their ease of deployment is assured thanks to readily available technologies and scalable frameworks. 10.",
                "REFERENCES [1] L Aguilar et al., Architecture for a Multimedia Teleconferencing System, in Proceedings of the ACM SIGCOMM, Aug 1986, pp. 126-136. [2] Carsten Bormann, Joerg Ott et al., Simple Conference Control Protocol, Internet Draft, Dec. 1996. [3] M. Decina and V. Trecordi, Voice over Internet Protocol and Human Assisted E-Commerce, IEEE Comm.",
                "Magazine, Sept. 1999, pp. 64-67. [4] Eckehard Doerry, An Empirical Comparison of Copresent and Technologically-mediated Interaction based on Communicative Breakdown, Phd Thesis, Graduate School of the University of Oregon, 1995. [5] H. P. Dommel and J.J. Garcia-Luna-Aceves, Floor Control for Multimedia Conferencing and Collaboration, J. Multimedia Systems, Vol. 5, No. 1, January 1997, pp. 23-38. [6] Amitava Dutta-Roy, Virtual Meetings with desktop conferencing, IEEE Spectrum, July 1998, pp. 47-56. [7] M. Handley and V. Jacobson, SDP: Session Description Protocol, RFC 2327, IETF, April 1998. [8] M. Handley, J. Crowcroft et al., Very large conferences on the Internet: the Internet multimedia conferencing architecture, Journal of Computer Networks, vol. 31, No. 3, Feb 1999, pp. 191-204. [9] ITU-T Rec.",
                "H.323, Packet based Multimedia Communications Systems, vol. 2, 1998. [10] P. Koskelainen, H. Schulzrinne and X. Wu, A SIP-based Conference Control Framework, NOSSDAV02, May 2002, pp. 53-61. [11] R Venkatesha Prasad et al., Control Protocol for <br>voip</br> Audio Conferencing Support, International Conference on Advanced Communication Technology, Mu-Ju, South Korea, Feb 2001, pp. 419-424. [12] R Venkatesha Prasad et al., Automatic Addition and Deletion of Clients in <br>voip</br> Conferencing, 6th IEEE Symposium on Computers and Communications, July 2001, Hammamet, Tunisia, pp. 386-390. [13] R Venkatesha Prasad, H S Jamadagni, Abjijeet, et al Comparison of Voice Activity Detection Algorithms, 7th IEEE Symposium on Computers and Communications.",
                "July 2002, Sicily, Italy, pp. 530-535. [14] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, A Scalable Distributed <br>voip</br> Conferencing using SIP, Proc. of the 8th IEEE Symposium on Computers and Communications, Antalya, Turkey, June 2003. [15] R Venkatesha Prasad, H S Jamadagni and H N Shankar, On Problem of Specifying Number of Floors in a Voice Only Conference, To appear in IEEE ITRE 2003. [16] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, A Proposal for Distributed Conferencing on SIP using Conference Servers, To appear in the Proc. of MMNS 2003, Belfast, UK, September 2003. [17] R. Venkatesha Prasad, H.S.",
                "Jamadagni, J. Kuri, R.S.",
                "Varchas, A Distributed <br>voip</br> Conferencing Support Using Loudness Number, Tech.",
                "Rep. TR-CEDT-TE-03-01 [18] M. Radenkovic et al, Scaleable and Adaptable Audio Service for Supporting Collaborative Work and Entertainment over the Internet, SSGRR 2002, LAquila, Italy, Jan. 2002. [19] M. Radenkovic, C. Greenhalgh, S. Benford, Deployment Issues for Multi-User Audio Support in CVEs, ACM VRST 2002, Nov. 2002, pp. 179-185. [20] Srinivas Ramanathan, P. Venkata Rangan, Harrick M. Vin, Designing Communication Architectures for Interorganizational Multimedia Collaboration, Journal of Organizational Computing, 2 (3&4), pp.277-302, 1992. [21] A.",
                "B. Roach, Session Initiation Protocol (SIP)-Specific Event Notification, RFC 3265, IETF, June 2002. [22] J. Rosenberg, H. Schulzrinne et al., SIP: Session Initiation Protocol, RFC 3261, IETF, June 2002. [23] J. Rosenberg, H. Schulzrinne, Models for Multy Party Conferencing in SIP, Internet Draft, IETF, July 2002. [24] H. Schulzrinne et al., RTP: a transport protocol for realtime applications, RFC 1889, IETF, Jan 1996. [25] Lisa R. Silverman, Coming of Age: Conferencing Solutions Cut Corporate Costs, White Paper, www.imcca.org/wpcomingofage.asp [26] Kundan Singh, Gautam Nair and Henning Schulzrinne, Centralized Conferencing using SIP, Proceedings of the 2nd IP-Telephony Workshop (IPTel), April 2001. [27] D. Thaler, M. Handley and D. Estrin, The Internet Multicast Address Allocation Architecture, RFC 2908, IETF, Sept. 2000."
            ],
            "original_annotated_samples": [
                "Deployment Issues of a <br>voip</br> Conferencing System in a Virtual Conferencing Environment R. Venkatesha Prasad i Richard Hurni ii H.S.",
                "CHALLENGES IN <br>voip</br> CONFERENCING Many challenges arise in building a <br>voip</br> application.",
                "Evidently, different particular issues, all of which are a subset of requirements (defined in [14] and [16]) for a <br>voip</br> conferencing support, are tackled.",
                "Towards this goal, the <br>voip</br> conferencing system we propose is intended to be scalable and interactive.",
                "SIP, defined in [22] is now the most popular standard for <br>voip</br> deployment and has been chosen for its strength, ease of use, extensibility and compatibility."
            ],
            "translated_annotated_samples": [
                "Problemas de implementación de un <br>sistema de conferencias VoIP</br> en un entorno de conferencias virtuales. R. Venkatesha Prasad y Richard Hurni.",
                "DESAFÍOS EN LA VIDEOCONFERENCIA VoIP Surgen muchos desafíos al construir una aplicación VoIP.",
                "Evidentemente, se abordan diferentes problemas particulares, todos los cuales son un subconjunto de los requisitos (definidos en [14] y [16]) para el <br>soporte de conferencias de VoIP</br>.",
                "Con este objetivo, el sistema de conferencias <br>VoIP</br> que proponemos está diseñado para ser escalable e interactivo.",
                "SIP, definido en [22], es ahora el estándar más popular para implementación de <br>VoIP</br> y ha sido elegido por su fortaleza, facilidad de uso, extensibilidad y compatibilidad."
            ],
            "translated_text": "Problemas de implementación de un <br>sistema de conferencias VoIP</br> en un entorno de conferencias virtuales. R. Venkatesha Prasad y Richard Hurni. Jamadagni iii H.N. Shankar iv i, iii Centro de Diseño y Tecnología Electrónica Instituto Indio de Ciencias, Bangalore, India Teléfono: +91 80 360 0810 i, iii {vprasad, hsjam}@cedt.iisc.ernet.in ii hurni@ieee.org iv hn_shankar@yahoo.com RESUMEN Los servicios en tiempo real han sido principalmente respaldados en redes conmutadas por circuitos. Las tendencias recientes favorecen los servicios trasladados a redes de conmutación de paquetes. Para las conferencias de audio, necesitamos considerar muchos aspectos, como la escalabilidad, la calidad de la aplicación de conferencia, el control de piso y la carga en los clientes/servidores, por nombrar algunos. En este documento, describimos un marco de servicio de audio diseñado para proporcionar un Entorno de Conferencias Virtuales (ECV). El sistema está diseñado para dar cabida a un gran número de usuarios finales hablando al mismo tiempo y distribuidos por Internet. El marco se basa en Servidores de Conferencia [14], que facilitan el manejo del audio, mientras que explotamos las capacidades de SIP para propósitos de señalización. La selección de clientes se basa en un reciente cuantificador llamado Número de Volumen que ayuda a imitar una conferencia física cara a cara. Nos ocupamos de los problemas de implementación de la solución propuesta tanto en términos de escalabilidad como de interactividad, mientras explicamos las técnicas que utilizamos para reducir el tráfico. Hemos implementado una aplicación de Servidor de Conferencias (CS) en una red de campus en nuestro Instituto. Categorías y Descriptores de Temas C.2.4 [Redes de Computadoras y Comunicación]: Sistemas Distribuidos - Cliente/Servidor, aplicaciones distribuidas. Términos generales Algoritmos, Rendimiento, Diseño, Teoría. 1. INTRODUCCIÓN El Internet de hoy utiliza el conjunto de protocolos IP que fue diseñado principalmente para el transporte de datos y proporciona la entrega de datos con el mejor esfuerzo. Las restricciones de retraso y las características diferencian los datos tradicionales por un lado, de las aplicaciones de voz y video por el otro. Por lo tanto, a medida que se implementan aplicaciones de voz y video cada vez más sensibles al tiempo en Internet, se pone de manifiesto la insuficiencia de la red. Además, buscamos trasladar servicios telefónicos a través de Internet. Entre ellos, la instalación de conferencia virtual (teleconferencia) está a la vanguardia. Las videoconferencias y conferencias de audio en Internet son populares por las varias ventajas que poseen. Claramente, el ancho de banda necesario para una videoconferencia a través de Internet aumenta rápidamente con el número de participantes; reducir el ancho de banda sin comprometer la calidad del audio es un desafío en la telefonía por Internet. Los problemas críticos adicionales son: (a) retraso de paquetes, (b) eco, (c) mezcla de audio de clientes seleccionados, (d) selección automática de clientes para participar en la conferencia, (e) reproducción de audio mezclado para cada cliente, (f) manejo de clientes que no son capaces de mezclar flujos de audio (estos clientes se conocen como clientes tontos), y (g) decidir el número de clientes activos simultáneamente en la conferencia sin comprometer la calidad de voz. Si bien todos los requisitos anteriores son desde el punto de vista tecnológico, la perspectiva de los usuarios y las interacciones también son factores esenciales. Hay mucha discusión entre la comunidad de HCI y CSCW sobre el uso de la Etnometodología para el diseño de aplicaciones de CSCW. El enfoque básico es proporcionar un ancho de banda más amplio, más instalaciones y mecanismos de control más avanzados, con miras a una mejor calidad de interacción. Este enfoque ignora la utilidad funcional del entorno que se utiliza para la colaboración. Eckehard Doerry [4] critica este enfoque diciendo que pone la forma antes que la función. Por lo tanto, la necesidad es adoptar un enfoque que considere ambos aspectos: el técnico y el funcional. En cuanto al aspecto funcional, nos referimos a [15] donde se ha tratado en cierto detalle. En este trabajo, no discutimos la videoconferencia; su inclusión no beneficia significativamente la calidad de la conferencia [4]. Nuestro enfoque está en entornos de audio virtuales. Primero describimos los desafíos encontrados en las conferencias de audio virtuales. Luego investigamos las motivaciones seguidas por la literatura relevante. En la Sección 5, explicamos la arquitectura de nuestro sistema. La sección 6 comprende la descripción de los diversos algoritmos utilizados en nuestra configuración. Abordamos problemas de implementación. Una discusión sobre el Instituto Federal Suizo de Tecnología, Lausana. Antiguo visitante en CEDT. PESIT y NIAS, Bangalore, India. El rendimiento sigue. Concluimos teniendo en cuenta algunos problemas de implementación. 2. DESAFÍOS EN LA VIDEOCONFERENCIA VoIP Surgen muchos desafíos al construir una aplicación VoIP. Lo siguiente es de particular preocupación en el proceso: • Facilidad de uso: la conferencia debe ser sencilla; los usuarios no necesitan experiencia en el dominio. La gestión (adición/eliminación) de clientes y servidores debe ser sencilla. El desarrollo de aplicaciones no debe presuponer características específicas del sistema subyacente o de las capas de red. La facilidad de uso puede incluir el aprovechamiento de tecnologías fácilmente disponibles, técnicamente factibles y económicamente viables. • Escalabilidad: Las conferencias deben parecer ininterrumpidas bajo cargas pesadas, es decir, cuando se agregan muchos usuarios adicionales. El tráfico en la WAN no debería aumentar apreciablemente con el número total de clientes; de lo contrario, esto podría provocar congestión. Por lo tanto, se necesita un medio para regular el tráfico al mínimo para este tipo de aplicaciones en tiempo real. • Interactividad: En Entornos de Conferencias Virtuales (ECVs), pretendemos una aplicación de conferencias cara a cara que imite una conferencia real, donde los participantes más vocales invitan la atención. El intercambio de turnos en la ocupación del espacio por parte de los participantes debe adaptarse con gracia para lograr una transición natural. • Estandarización: La solución debe cumplir con los estándares establecidos para lograr interoperabilidad y aceptación entre pares. Los requisitos anteriores se colocan en la perspectiva de las observaciones realizadas en trabajos anteriores (véase Secciones 3 y 4) y guiarán el diseño del VCE. 3. La motivación Ramanathan y Rangan [20] han estudiado en detalle las configuraciones arquitectónicas comparando muchos esquemas de arquitectura de conferencias teniendo en cuenta la demora de red y los requisitos de computación para la mezcla. La división funcional y el diseño de arquitectura orientada a objetos que ayudan en la implementación se presentan en [1]. Un resumen de muchos temas relacionados con el apoyo a una conferencia grande se aborda en [8]. H. P. Dommel [5] y muchos otros destacan el control de piso como otro aspecto fundamental a tener en cuenta en el diseño de una herramienta de conferencias. Los protocolos de control de conferencias fuertemente acoplados en Internet pertenecen a la familia ITU-T H.323 [9]; sin embargo, están principalmente diseñados para conferencias pequeñas. El último borrador del IETF de Rosenberg y Schulzrinne [23] discute modelos de conferencia con SIP [22] en el fondo. Los aspectos de implementación para la conferencia SIP centralizada se informan en [26]. Un nuevo enfoque llamado mezcla parcial por Radenkovic [18] permite que flujos mezclados y no mezclados coexistan. En todas las propuestas anteriores, si bien hay algunas sugerencias muy útiles, comparten una o más de las siguientes limitaciones: • En una conferencia de audio, no es necesario mezclar los flujos de todos los clientes. De hecho, mezclar muchas corrientes arbitrarias [24] de clientes degrada la calidad de la conferencia debido a la reducción en el volumen (aspecto espacial del habla). El número de flujos mezclados varía dinámicamente dependiendo del número de participantes activos. Esto provocaría fluctuaciones en el volumen de cada participante individual, causando una degradación severa en la calidad. La mezcla personalizada de flujos no es posible cuando hay muchos clientes activos. Existe un umbral en el número de oradores simultáneos por encima del cual aumentar el número de oradores se vuelve contraproducente para la calidad de la conferencia. La fijación del número máximo de hablantes simultáneos se aborda en un trabajo reciente [15] utilizando la Etnometodología, y se postula que es tres. Por lo tanto, es recomendable respetar esa restricción. • No puede haber muchos mezcladores intermedios (similarmente, Servidores de Conferencia como en [10]) en etapas como en [20] porque provoca un retraso desmedido al aumentar el número de saltos y no es escalable con la interactividad como enfoque. • El Control de Piso para una conferencia de audio (incluso de video) con instrucciones explícitas de toma de turnos para los participantes convierte la conferencia en esencia en un asunto de un orador a la vez, no en una en vivo y libre de interrupciones. De esta manera, la conferencia se vuelve notablemente artificial y su calidad se degrada. Schulzrinne et al. [24], asumen que solo un participante está hablando en un momento dado. En este caso, si las aplicaciones se implementan con cierto control [5], el servicio se vuelve asfixiante para los usuarios. • La mezcla parcial [18] tiene un problema similar al de la mezcla cuando se mezclan más flujos. Además, en [18], para permitir el discurso improvisado, la mezcla no se realiza cuando la red puede soportar altos requisitos de ancho de banda para enviar/recibir todas las transmisiones, pero es innecesaria [15]. • Para conferencias grandes [23, 10] una conferencia centralizada no puede escalar. Con la multidifusión, los clientes tendrán que analizar muchos flujos y el tráfico en la red de los clientes aumenta innecesariamente. Evidentemente, se abordan diferentes problemas particulares, todos los cuales son un subconjunto de los requisitos (definidos en [14] y [16]) para el <br>soporte de conferencias de VoIP</br>. Por lo tanto, es necesario abordar la conferencia en su totalidad teniendo en cuenta todos sus requisitos de manera simultánea. Con este objetivo, el sistema de conferencias <br>VoIP</br> que proponemos está diseñado para ser escalable e interactivo. Hacemos uso del Número de Sonoridad para implementar el control de volumen. Esto permite a un participante entrar libremente en el modo de hablar para interrumpir al orador actual como en una reunión natural cara a cara. Un límite superior en el número de pisos (es decir, el número de oradores permitidos para hablar al mismo tiempo) se fija utilizando una conjetura propuesta en [15]. El trabajo presentado aquí es una continuación de nuestros estudios sobre conferencias basadas en el Protocolo de Inicio de Sesión en [14] y [16]. SIP, definido en [22], es ahora el estándar más popular para implementación de <br>VoIP</br> y ha sido elegido por su fortaleza, facilidad de uso, extensibilidad y compatibilidad. ",
            "candidates": [],
            "error": [
                [
                    "sistema de conferencias VoIP",
                    "soporte de conferencias de VoIP",
                    "VoIP",
                    "VoIP"
                ]
            ]
        },
        "real-time audio": {
            "translated_key": "audio en tiempo real",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Deployment Issues of a VoIP Conferencing System in a Virtual Conferencing Environment R. Venkatesha Prasad i Richard Hurni ii H.S.",
                "Jamadagni iii H.N.",
                "Shankar iv i, iii Centre for Electronics Design and Technology Indian Institute of Science, Bangalore, India Telephone: +91 80 360 0810 i, iii {vprasad, hsjam}@cedt.iisc.ernet.in ii hurni@ieee.org iv hn_shankar@yahoo.com ABSTRACT Real-time services have been supported by and large on circuitswitched networks.",
                "Recent trends favour services ported on packet-switched networks.",
                "For audio conferencing, we need to consider many issues - scalability, quality of the conference application, floor control and load on the clients/servers - to name a few.",
                "In this paper, we describe an audio service framework designed to provide a Virtual Conferencing Environment (VCE).",
                "The system is designed to accommodate a large number of end users speaking at the same time and spread across the Internet.",
                "The framework is based on Conference Servers [14], which facilitate the audio handling, while we exploit the SIP capabilities for signaling purposes.",
                "Client selection is based on a recent quantifier called Loudness Number that helps mimic a physical face-to-face conference.",
                "We deal with deployment issues of the proposed solution both in terms of scalability and interactivity, while explaining the techniques we use to reduce the traffic.",
                "We have implemented a Conference Server (CS) application on a campus-wide network at our Institute.",
                "Categories and Subjects Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - Client / Server, distributed applications.",
                "General Terms Algorithms, Performance, Design, Theory. 1.",
                "INTRODUCTION Todays Internet uses the IP protocol suite that was primarily designed for the transport of data and provides best effort data delivery.",
                "Delay-constraints and characteristics separate traditional data on the one hand from voice & video applications on the other.",
                "Hence, as progressively time-sensitive voice and video applications are deployed on the Internet, the inadequacy of the Internet is exposed.",
                "Further, we seek to port telephone services on the Internet.",
                "Among them, virtual conference (teleconference) facility is at the cutting edge.",
                "Audio and video conferencing on Internet are popular [25] for the several advantages they inhere [3,6].",
                "Clearly, the bandwidth required for a teleconference over the Internet increases rapidly with the number of participants; reducing bandwidth without compromising audio quality is a challenge in Internet Telephony.",
                "Additional critical issues are: (a) packet delay, (b) echo, (c) mixing of audio from selected clients, (d) automatic selection of clients to participate in the conference, (e) playout of mixed audio for every client, (f) handling clients not capable of mixing audio streams (such clients are known as dumb clients), and (g) deciding the number of simultaneously active clients in the conference without compromising voice quality.",
                "While all the above requirements are from the technology point of view, the users perspective and interactions are also essential factors.",
                "There is plenty of discussion amongst HCI and CSCW community on the use of Ethnomethodology for design of CSCW applications.",
                "The basic approach is to provide larger bandwidth, more facilities and more advanced control mechanisms, looking forward to better quality of interaction.",
                "This approach ignores the functional utility of the environment that is used for collaboration.",
                "Eckehard Doerry [4] criticizes this approach by saying it is keeping form before function.",
                "Thus, the need is to take an approach that considers both aspects - the technical and the functional.",
                "Regarding the functional aspect, we refer to [15] where it has been dealt with in some detail.",
                "In this work, we do not discuss video conferencing; its inclusion does not significantly benefit conference quality [4].",
                "Our focus is on virtual audio environments.",
                "We first outline the challenges encountered in virtual audio conferences.",
                "Then we look into the motivations followed by relevant literature.",
                "In Section 5, we explain the architecture of our system.",
                "Section 6 comprises description of the various algorithms used in our setup.",
                "We address deployment issues.",
                "A discussion on Swiss Federal Institute of Technology, Lausanne.",
                "Former visitor at CEDT.",
                "PESIT and NIAS, Bangalore, India.iv ii performance follows.",
                "We conclude taking alongside some implementation issues. 2.",
                "CHALLENGES IN VoIP CONFERENCING Many challenges arise in building a VoIP application.",
                "The following are of particular concern in the process: • Ease of use: Conferencing must be simple; users need no domain expertise.",
                "Management (addition/removal) of clients and servers must be uncomplicated.",
                "Application development should not presuppose specific characteristics of the underlying system or of network layers.",
                "Ease of use may include leveraging readily available, technically feasible and economically viable technologies. • Scalability: Conferencing must seem uninterrupted under heavy loads, i.e., when many additional users are added on.",
                "Traffic on WAN should not grow appreciably with the total number of clients; else, this has lead to congestion.",
                "So a means to regulate traffic to a minimum is needed for this kind of real-time applications. • Interactivity: In Virtual Conferencing Environments (VCEs), we intend a face-to-face-like conferencing application that mimics a real conference, where more vocal participants invite attention.",
                "Turn-taking in floor occupation by participants must be adapted gracefully to give a feel of natural transition. • Standardization: The solution must conform to established standards so as to gain interoperability and peer acceptance.",
                "The above requirements are placed in the perspective of observations made in earlier works (vide Sections 3 and 4) and will steer the VCE design. 3.",
                "THE MOTIVATION Ramanathan and Rangan [20] have studied in detail the architectural configurations comparing many conferencing architecture schemes taking into consideration the network delay and computation requirements for mixing.",
                "Functional division and object-oriented architecture design that aid in implementation is presented in [1].",
                "An overview of many issues involved in supporting a large conference is dealt in [8].",
                "H. P. Dommel [5] and many others highlight floor control as another pivotal aspect to be taken into account in designing a conferencing tool.",
                "Tightly coupled conference control protocols in Internet belong to the ITU-T H.323 family [9]; however, they are mainly for small conferences.",
                "The latest IETF draft by Rosenberg and Schulzrinne [23] discusses conferencing models with SIP [22] in the background.",
                "Aspects of implementation for centralized SIP conferencing are reported in [26].",
                "A new approach called partial mixing by Radenkovic [18] allows for mixed and non-mixed streams to coexist.",
                "In all the above proposals, while there are some very useful suggestions, they share one or more of the following limitations: • In an audio conference, streams from all the clients need not be mixed.",
                "Actually, mixing many arbitrary streams [24] from clients degrades the quality of the conference due to the reduction in the volume (spatial aspect of speech).",
                "The number of streams mixed varies dynamically depending on the number of active participants.",
                "This would lead to fluctuations in the volume of every individual participant causing severe degradation in quality.",
                "Customized mixing of streams is not possible when many clients are active.",
                "There is a threshold on the number of simultaneous speakers above which increasing the number of speakers becomes counterproductive to conference quality.",
                "Fixing the maximum number of simultaneous speakers is dealt in a recent work [15] using Ethnomethodology, and is conjectured to be three.",
                "Thus it is advisable to honour that constraint. • There cannot be many intermediate mixers (similarly, Conference Servers as in [10]) in stages as in [20] because it brings in inordinate delay by increasing the number of hops and is not scalable with interactivity in focus. • Floor Control for an audio conference (even video conference) with explicit turn-taking instructions to participants renders the conference essentially a one-speakerat-a-time affair, not a live and free-to-interrupt one.",
                "This way, the conference becomes markedly artificial and its quality degrades.",
                "Schulzrinne et al. [24], assume only one participant is speaking at a time.",
                "In this case, if applications are implemented with some control [5], the service becomes gagging for the users. • Partial mixing [18] has a similar problem as that of mixing when more streams are mixed.",
                "Moreover, in [18], to allow impromptu speech, mixing is not done when the network can afford high bandwidth requirements for sending/receiving all the streams, but it is unnecessary [15]. • For large conferences [23, 10] a centralized conference cannot scale up.",
                "With multicasting, clients will have to parse many streams and traffic on a clients network increases unnecessarily.",
                "Evidently, different particular issues, all of which are a subset of requirements (defined in [14] and [16]) for a VoIP conferencing support, are tackled.",
                "Thus there is a need to address conferencing as a whole with all its requirements considered concurrently.",
                "Towards this goal, the VoIP conferencing system we propose is intended to be scalable and interactive.",
                "We make use of the Loudness Number for implementing floor control.",
                "This permits a participant to freely get into the speaking mode to interrupt the current speaker as in a natural face-to-face meeting.",
                "An upper limit on the number of floors (i.e., the number of speakers allowed to speak at the same time) is fixed using a conjecture proposed in [15].",
                "The work presented here is in continuation of our studies into conferencing based on the Session Initiation Protocol in [14] and [16].",
                "SIP, defined in [22] is now the most popular standard for VoIP deployment and has been chosen for its strength, ease of use, extensibility and compatibility.",
                "This is the reason it will be in the background of all controlling messages that will implicitly arise between the entities in our architecture.",
                "The actual messages are described in [16] and, as such, we do not present a complete description of them here. 4.",
                "RELATED WORK The SIP standard defined in RFC 3261 [22] and in later extensions such as [21] does not offer conference control services such as floor control or voting and does not prescribe how a conference is to be managed.",
                "However SIP can be used to initiate a session that uses some other conference control protocol.",
                "The core SIP specification supports many models for conferencing [26, 23].",
                "In the server-based models, a server mixes media streams, whereas in a server-less conference, mixing is done at the end systems.",
                "SDP [7] can be used to define media capabilities and provide other information about the conference.",
                "We shall now consider a few conference models in SIP that have been proposed recently [23].",
                "First, let us look into server-less models.",
                "In End-System Mixing, only one client (SIP UA) handles the signaling and media mixing for all the others, which is clearly not scalable and causes problems when that particular client leaves the conference.",
                "In the Users Joining model, a tree grows, as each invited party constitutes a new branch in the distribution path.",
                "This leads to an increasing number of hops for the remote leaves and is not scalable.",
                "Another option would be to use multicast for conferencing but multicast is not enabled over Internet and only possible on a LAN presently.",
                "Among server-based models, in a Dial-In Conference, UAs connect to a central server that handles all the mixing.",
                "This model is not scalable as it is limited by the processing power of the server and bandwidth of the network.",
                "Adhoc Centralized Conferences and Dial-Out Conference Servers have similar mechanisms and problems.",
                "Hybrid models involving centralized signaling and distributed media, with the latter using unicast or multicast, raise scalability problems as before.",
                "However an advantage is that the conference control can be a third party solution.",
                "Distributed Partial Mixing, presented in [18], proposes that in case of bandwidth limitation, some streams are mixed and some are not, leaving interactivity intact.",
                "Loss of spatialism when they mix and the bandwidth increase when they do not are open problems.",
                "A related study [19] by the same author proposes conferencing architecture for Collaborative Virtual Environments (CVEs) but does not provide the scalability angle without the availability of multicasting.",
                "With the limitations of proposed conferencing systems in mind, we will now detail our proposal. 5.",
                "SYSTEM ARCHITECTURE This section is dedicated to the description of the proposed system architecture.",
                "However, as this paper constitutes the continuation of our work started in [14] and furthered in [16], we will not present here all the details about the proposed entities and invite the readers to consult the papers mentioned above for a full and thorough description.",
                "First, we do not restrict our conferencing system to work on small conferences only, but rather on large audio VCEs that have hundreds (or even thousands) of users across a Wide Area Network (WAN) such as the Internet.",
                "This view stems from an appraisal that VCEs will gain in importance in the future, as interactive audio conferences will be more popular because of the spread of the media culture around the world.",
                "Two issues must be taken care of when building a VoIP conferencing system: (i) the front-end, consisting of the application program running on the end-users computers and (ii) the back-end that provides other application programs that facilitate conferencing and conference.",
                "The participating users are grouped into several domains.",
                "These domains are Local Area Networks (LANs), such as corporate or educational networks.",
                "This distributed assumption asks for distributed controlling and media handling solutions, as centralized systems would not scale for such very large conferences (vide Section 4).",
                "More explicitly, in each domain, we can identify several relevant logical components of a conferencing facility (Fig. 1):  An arbitrary number of end users (clients) that can take part in at most one audio conference at a time.",
                "Every user is Fig. 1.",
                "Conference example - 3 domains containing the necessary entities so that the conference can take place. included in one and only one domain at a given instant, but can move from domain to domain (nomadism).",
                "In our conferencing environment, these clients are regular SIP User Agents (SIP UAs), as defined in [22] so to gain in interoperability with other existing SIP-compatible systems.",
                "These clients are thus not aware of the complex setting that supports the conference and this is highlighted below.  One SIP Server (SIPS) per domain, taking care of all the signaling aspects of the conference (clients joining, leaving, etc.) [16].",
                "In particular, it is considered as a physical implementation encompassing different logical roles, namely a SIP Proxy Server, a SIP Registrar Server, a SIP Redirect Server and a SIP B2BUA (Back-to-Back User Agent) [22].",
                "This physical implementation enables the handling of incoming/outgoing SIP messages by one or another logical entity according to the needs.",
                "SIPS is entrusted with maintaining total service and has many advantages such as (a) it works as a centralized entity that can keep track of the activities of the UAs in a conference; (b) it can do all the switching for providing PBX features; (c) it can locate the UAs and invite them for a conference; (d) it can do the billing as well.",
                "SIPSs in different domains communicate with each other using SIP messages as described in [16].",
                "If the load on a particular SIPS is too heavy, it can create another SIPS in the same domain so that the load will be shared.  One Master Conference Server (M-CS) (simply a Conference Server (CS)) for each conference is created by the local SIPS when a conference starts.",
                "This server will be used for handling media packets for the clients of the domain.",
                "Its mechanism will be described in the next section.",
                "The M-CS will be able to create a hierarchy of CSs inside a domain by adding one or more Slave CSs (S-CSs) to accommodate all the active clients and prevent its own flooding at the same time.",
                "We will see this mechanism in some detail in the sequel.",
                "The entities described here are exhaustive and conform to the SIP philosophy.",
                "Thus, the use of SIP makes this architecture more useful and interoperable with any other SIP clients or servers. 6.",
                "ALGORITHMIC ISSUES 6.1 Selecting the Streams Similar to SipConf in [27], a Conference Server (CS) [17] has the function of supporting the conference; it is responsible for handling audio streams using RTP.",
                "It can also double to convert audio stream formats for a given client if necessary and can work as Translators/Mixers of RTP specification behind firewalls.",
                "We have based the design of our CS on H.323 Multipoint Processor (MP) [9].",
                "In short, the MP receives audio streams from the endpoints involved in a centralized or hybrid multipoint conference, processes them and returns them to the endpoints.",
                "An MP that processes audio prepares NMax audio outputs from M input streams after selection, mixing, or both.",
                "Audio mixing requires decoding the input audio to linear signals (PCM or analog), performing a linear combination of the signals and reencoding the result in an appropriate audio format.",
                "The MP may eliminate or attenuate some of the input signals in order to reduce noise and unwanted components.",
                "Fig. 2.",
                "Schematic diagram of a CS The limitation of H.323 is that it does not address the scalability of a conference.",
                "The architecture proposes a cascaded or daisy chain topology [10], which can be shown that it cannot scale up for a large conference.",
                "A CS serves many clients in the same conference.",
                "Thus it handles only one conference at a time.",
                "Multiple CSs may coexist in a domain, as when there are several conferences under way.",
                "Signaling-related messages of CSs are dealt in [11].",
                "The working of a CS is illustrated on Fig. 2: For each mixing interval, CS 1 chooses the best NMax audio packets out of the M1 (using a criterion termed Loudness Number, described in the next subsection).",
                "It may possibly receive and sends these to CSs 2 to P. The set of packets sent is denoted as ToOtherCSs.",
                "In the same mixing interval, it also receives the best NMax audio packets (out of possibly M2) from CS 2, similarly the best NMax (out of possibly MP) from CS P. For simplicity, we ignore propagation delay between CSs which indeed can be taken into account; it is beyond the scope of this presentation.",
                "The set of packets received is denoted as FromOtherCSs.",
                "Finally, it selects the best NMax packets from the set {ToOtherCSs union FromOtherCSs} and passes these packets to its own group.",
                "It can be seen that the set {ToOtherCSs union FromOtherCSs} is the same at all CSs.",
                "This ensures that any client in the conference finally receives the same set of packets for mixing.",
                "Hence all clients obtain a common view of the conference.",
                "Similarly, for each time slot (packet time), a subset, F of all clients is selected (using the same criterion) from the pool of packets from all other CSs plus the NMax clients selected locally.",
                "Their packets are mixed and played out at the clients.",
                "According to [15], the cardinality of F, |F| is NMax and is fixed at three.",
                "In our conferencing setup, selection is by the Master Conference Server (M-CS), which comes into the picture exclusively for media handling.",
                "Note that even if the SIP specification enables direct UA-to-UA media communication in a one-to-one call, it is also possible to use the Conference Server for two-party calls, especially because it is then more functional to create a real conference by adding a third and subsequently more participant(s).",
                "There are cases wherein the processing capacity of an M-CS is exceeded as it may have too many packets - from local domains and from remote domains - to process.",
                "In that case, the M-CS will create one or many S-CS (Fig. 6) and transfer its own clients as well as the new clients to them.",
                "In this configuration, the algorithm outlined above will be slightly modified, as the audio packets will go from clients to their dedicated S-CS that will select NMax packets to send to the local M-CS, which will then select NMax packets from all its S-CSs in the domain before sending them to the remote domains.",
                "The incoming packets from other domains will be received by the M-CS, select NMax of them and send them directly to the domain clients, bypassing the SCSs.",
                "This change implies that at most three intermediate entities exist for each audio packet, instead of two in the conventional setup.",
                "As the extra hop happens inside the LAN supposed to have a high-speed connectivity, we consider that it should not prevent us from using this hierarchy of CSs when theres a need to do so. 6.2 Loudness Number (LN) A basic question to be answered by the CS is the following.",
                "In a mixing interval, how should it choose NMax packets out of the M it might possibly receive?",
                "One way is to rank the M packets received according to their energies, and choose the top NMax.",
                "However, this is usually found to be inadequate because random fluctuations in packet energies can lead to poor audio quality.",
                "This indicates the need for a metric different from mere individual packet energies.",
                "The metric should have the following characteristics [12]: • A speaker (floor occupant) should not be cut off by a spike in the packet energy of another speaker.",
                "This implies that a speakers speech history should be given some weight.",
                "This is often referred to as Persistence or Hangover. • A participant who wants to interrupt a speaker will have to (i) speak loudly and (ii) keep trying for a little while.",
                "In a face-to-face conference, body language often indicates the intent to interrupt.",
                "But in a blind conference under discussion, a participants intention to interrupt can be conveyed effectively through LN.",
                "A floor control mechanism empowered to cut off a speaker forcefully must be ensured.",
                "These requirements are met by Loudness Number [12], which changes smoothly with time so that the selection (addition and deletion) of clients for conference is graceful.",
                "LN (= ) is a function of the amplitude of the current audio stream plus the activity and amplitude over a specific window in the past.",
                "Fig. 3.",
                "The different windows used for LN computation The Loudness Number is updated on a packet-by-packet basis.",
                "The basic parameter used here is packet amplitude, which is calculated as root mean square (rms) of the energies in audio samples of a packet, and denoted by XK.",
                "Three windows are defined as shown in Fig. 3.",
                "The present amplitude level of the speaker is found by calculating the moving average of packet amplitude (XK) within a window called Recent Past Window starting from the present instant to some past time.",
                "The past activity of the speaker is found by calculating the moving average of the packet amplitude (XK) within a window called Distant Past Window, which starts at the point where the Recent Past window ends and stretches back in the past for a pre-defined interval.",
                "The activity of the speaker in the past is found with a window called Activity Horizon, which spans the recent past window as well as the distant past window and beyond if necessary.",
                "Though the contribution of the activity horizon looks similar to the contribution of the recent past and distant past windows, past activity is computed from activity horizon window in a differently.",
                "Define the quantities during these three intervals as L1, L2 and L3.",
                "L1 quantifies the Recent Past speech activity, L2 the Distant Past speech activity and L3 gives a number corresponding to the speech activity in the Activity Horizon window quantifying how active the speaker was in the past few intervals.",
                "L3 yields a quantity that is proportional to the fraction of packets having energies above a pre-defined threshold (Eq. 3).",
                "The threshold is invariant across clients. ∑ +− = = 1 1 1 RPP P Wt tK K RP X W L (1) ∑ +−− −= = 1 2 1 DPRPP RPP WWt WtK K DP X W L (2) ∑ +− = ≥= 1 }{3 * 1 AHP P K Wt tK X AH I W L θθ (3) Where ifI KX 1}{ =≥θ θ≥KX = otherwise,0 The threshold is a constant. is set at 10-20 percent of the amplitude of the voice samples of a packet in our implementation here.",
                "Loudness Number λ for the present time instant (or the present packet) is calculated as, 332211 *L*L*L αααλ ++= (4) Here 1\u000f 2 DQG 3 are chosen such that: 0< 1\u000f 2\u001f\u0014\u000f \u0013\u001f 1\u000e 2\u001f\u0014 DQG 3=1-\u000b 1\u000e 2) Here, 1 is the weight given to the recent past speech, 2 is the weight given to distant past speech and 3 is the weight given to speech activity in the activity horizon window considered. 6.3 Safety, Liveness and Fairness The λ parameter KDV VRPH PHPRU\\ GHSHQGLQJ RQ WKH VSUHDG RI the windows.",
                "After one conferee becomes silent, another can take the floor.",
                "Also, as there is more than one channel, interruption is enabled.",
                "A loud conferee is more likely to be heard because of elevated λ.",
                "This ensures fairness to all conferees.",
                "After all, even in a face-to-face conference, a more vocal speaker grabs special attention.",
                "All these desirable characteristics are embedded into the LN.",
                "A comprehensive discussion on selection of the various parameters and the dynamics of LN are beyond the scope of this paper. 6.4 Selection Algorithm using the LN Following the developments in subsections 6.1 and 6.2, we present the simple algorithm that runs at each Master-Conference Server (Algorithm. 1).",
                "This algorithm is based on the discussions in section 6.1.",
                "The globally unique set F is found using this procedure.",
                "Repeat for each time slot at each M-CS { 1.",
                "Get all the packets from the Clients that belong to it. 2.",
                "Find at most NMax Clients that have PD[LPXP RXW RI 0 &OLHQWV LQ LWV GRPDLQ\u0011 3.",
                "Store a copy of packets from those NMax Clients in database DB1. 4.",
                "Send these NMax packets to other M-CSs (on Unicast or Multicast, depending on the configuration). 5.",
                "Similarly, receive packets from all other M-CSs and store them in database DB2. 6.",
                "Now compare the packets in DB1 and DB2 on WKH EDVLV RI DQG VHOHFW D PD[LPXP RI NMax amongst them (to form set F) that should be played out at each Client. 7.",
                "Send the NMax packets in set F to the Clients in its domain. 8.",
                "Mix these NMax audio packets in set F after linearising and send it to dumb Clients in the domain. }",
                "Algorithm 1.",
                "Selection algorithm The mechanism proposed here is also depicted on Fig. 6, where a single conference takes place between three domains.",
                "The shaded clients are the ones selected in their local domains; their audio streams will be sent to other CSs. 7.",
                "DEPLOYMENT ISSUES We now analyze deployment issues associated with conference management.",
                "How are domains to be organized to maximize the number of participants able to join?",
                "To address this, we define some useful parameters.  Let d be the number of different domains in which there are active clients in a given conference.  Let Mi be the number of active clients present in domain i ( di ≤≤1 ) in a given conference.",
                "The total number of active clients in the conference is thus ∑= = d i iMM 1 .  Let C be the maximum number of audio streams a Conference Server can handle in a packet time, also called capacity.",
                "C is set according to the processing power of the weakest CS in the conference but as it cannot be assumed that we know it a-priori, it can be set according to some minimum system requirement a machine must meet in order to take part in a conference.  Let NMax be the number of output streams a CS has to send to other CSs in remote domains (see section 6.1).",
                "We will set NMax =3 (=|F|), according to [15].",
                "The optimization problem is now to find the value of d that maximizes the total number of clients Mi served by one CS in a domain with capacity C. We first dispose the case where the capacity is not exceeded (the existing CS is not overloaded), and then proceed to the case where there exists a need to create more CSs when a single CS is overloaded.",
                "We assume that clients are equally distributed amongst the domains, as we may not have information to assume an a-priori distribution of the clients.",
                "We can specify no more than an upper bound on the number of clients acceptable, given the number of active domains d. 7.1 Conferencing with only One Level of CSs In this subsection, we consider that we have only one CS, i.e., a unique M-CS in each domain.",
                "Thus it cannot be overloaded.",
                "We consider that the system works as outlined in section 6.1: The Clients send their audio packets to their local CS, which selects NMax streams, before sending them to other CSs.",
                "In parallel, it also receives NMax streams for every other CSs before taking a decision on which NMax streams will be selected, sent and played out at each individual clients.",
                "For system stability, any CS in the conference should be able to handle its local clients in addition to the audio packets from other domains.",
                "Clearly then, the following inequality must hold for every domain: )1( −⋅+≥ dN d M C Max (5) The limiting case of (5) (taking the equality) takes the form 2 )( dNdNCM MaxMax ⋅−⋅+= (6) To optimize d with respect to M, we set 0)(2 =+−⋅⋅= ∂ ∂ MaxMax NCdN d M (7) yielding     ⋅ + = Max Max N NC d 2 (8) ([ ]* = Rounding to nearest integer) and hence, M from (6).",
                "C d M 50 9 234 100 17 884 150 26 1950 200 34 3434 250 42 5334 300 51 7650 350 59 10384 400 67 13534 450 76 17100 500 84 21084 Table 1.",
                "Values of d and M computed for some values of C with NMax = 3.",
                "In Table 1, we give the values of d and M that were computed using (8) and (6) with NMax = 3.",
                "We see that the values of d and M, being dependent of C, are therefore based on the weakest CS.",
                "We see that there is a trade-off between M and d. We could admit more domains in the conference, but at the expense of restricting the total number of clients M in the conference.",
                "While implementing and testing the Conference Servers on a Pentium III 1.4 GHz running Windows NT, we were able to set C=300.",
                "But with the advent of faster computers (> 3 GHz), one can easily set C to higher values and determine d and M accordingly.",
                "Fig. 4 shows a contour plot and Fig. 5, a 3D-mesh showing optimized solutions for CSs of different capacities.",
                "These lead us to maximize the number of domains, and hence, to maximize the total number of clients based on the capacity of various CSs.",
                "In Fig. 4, the individual curves represent the total number of clients targeted, and we select a lower value of d, for capacity C, for targeted M to reduce traffic on WAN.",
                "Fig. 5 represents a different perspective of the same data in 3D.",
                "Fig. 4.",
                "Contour Plot of Capacity versus Optimum number of domains for various conference sizes 7.2 Conferencing with Two Levels of CSs Now considering the case where the number of clients in a particular domain is too large, i.e., d M Mi ≥ (9) one has to avoid the denial of service for new clients due to overloading of Conference Server.",
                "This problem can be solved by introducing a second level of CSs inside the given domain, as in Fig. 6.",
                "The existing M-CS creates a Slave CS (S-CS) that can handle up to C end-users and to which it transfers all its active clients.",
                "Here, the system works differently as outlined in section 6.1: The Clients send their audio packets to their local S-CS, which selects NMax streams, before sending them to a local M-CS, which will proceed in the same way, before sending NMax streams to the other domains.",
                "Each newly created S-CS must run on a separate machine.",
                "The M-CS has to create more S-CSs if the number of active clients exceeds C in the course of the conference after the transfer.",
                "With this mechanism, the M-CS will be able to create utmost     −⋅− = Max Max N dNC U )1( S-CSs, (10) as it must handle 3 (= NMax) packets for each local S-CSs and 3 (= NMax) packets from each other remote domains.",
                "We can then calculate the maximum theoretical number of active clients CUMi ⋅= in each domain as well as M, for the whole conference as CUdM ⋅⋅= .",
                "Fig. 5. 3D Plot of Capacity versus Optimum number of domains for various conference sizes Of course, one could further create a third level in the hierarchy, giving the possibility of accommodating even more clients.",
                "This may be unnecessary as the number of possible clients is large enough with two levels. 8.",
                "PERFORMANCE DISCUSSION We now analyze the performance of the algorithm presented in subsection 6.3, i.e., the one taking care of the exchange of audio packets between the different domains.",
                "Note that the packets that are transiting within the LAN take advantage of the higher capacity (generally coupled with multicast capabilities) and therefore do not require a performance analysis.",
                "Thus we have to look only at the RTP packets over the WAN, i.e., between participating M-CSs.",
                "As each M-CS from a domain will be sending only NMax out of d M packets to the other CSs ( MaxN d M >> ), the bandwidth used by the application over a WAN is upper-bounded by the following expression.",
                "The total number of audio packets transiting over the WAN for each time slot is ∑ ∑= ≠=        d i d ijj MaxN 1 ,1 which is quadratic in the number of domains (i.e., O(d2 )).",
                "However, it is independent of the total number of active clients.",
                "This would not have been the case had all packets been sent over the network in each time slot.",
                "The saving is tremendous.",
                "Yet, one may contend that sending three packets to and from all domains is a waste of resources, as most of these streams will not be selected.",
                "If just one client is active, selecting a subset of clients in that domain is unnecessary.",
                "Pessimistic and optimistic algorithms as presented in the sequel aim at reducing the traffic further by harnessing the slow varying nature of the LN. 8.1 Pessimistic algorithm Consider a scenario wherein the lowest LN (called LNt) of the three globally selected streams (set F of Section 6.1) exceeds the LN of the most dominant stream of a domain.",
                "Evidently, the chances that the next two dominant streams of that domain being selected to F in the next packet period are less.",
                "Here, we send this most dominant stream and withhold the other two.",
                "There may be an error in unique selection across all domains for one packet period only.",
                "As LN varies slowly, the error would get automatically rectified in a subsequent packet period (slot).",
                "In this algorithm, there is at least one stream in each period.",
                "The net network traffic in a packet period in the best case is )1( −⋅ dd , i.e., )( 2 dO using unicast, instead of MaxNdd ⋅−⋅ )1( .",
                "Considerable valuable bandwidth can be saved using this heuristic.",
                "The resulting traffic complexity reduces from O(d2 ) to O(d) in multicast-enabled networks.",
                "Initialize LNt = 0 at an M-CS/S-CS A.",
                "In the first time slot (packet time), each CS sends the top NMax streams (based on their LN) to all other CSs.",
                "At each M-CS/S-CS and for each packet time: B.",
                "Find the value of lowest LN of the NMax globally selected streams (set F) from the previous time slot.",
                "Set LNt with this value.",
                "C. At each CS domain, select the NMax local streams that have maximum value of LN (ToOtherCSs set).",
                "D. Select streams that have LN > LNt.",
                "IF there are >= NMax streams with LN > LNt then send top NMax to other CSs.",
                "ELSE IF there are (NMax-1) streams with LN>LNt then send top (NMax-1) plus the one lower than LNt (i.e., top NMax) to other CSs.",
                "ELSE IF there are (NMax-2) streams with LN>LNt then send top (NMax-2) plus the one lower than LNt (i.e. top (NMax -1)) to other CSs. …… ELSE IF there are NO streams with LN> LNt then send top 1 stream to other CSs.",
                "E. Packets sent in step D form DB1.",
                "Packets received from other CSs form DB2.",
                "F. For this time slot, find global NMax streams based on LN from DB1 U DB2 (set F) G. Send set F to the clients in its domain.",
                "Update LNt for the next period.",
                "Algorithm 2.",
                "Pessimistic algorithm to reduce the number of packets sent over the Internet.",
                "Fig. 6.",
                "Example of a 2-level hierarchy of Conference Servers; the shaded Clients are the one selected by the M-CS and will be sent to other domains CSs.",
                "In this algorithm the saving in traffic is at the cost of relaxing the condition of formation of globally unique set F. However, the discrepancies in selected streams at different domains remain for a short period of time depending on the transportation delay between any two domains.",
                "Even for a total delay of 400ms, for only 10 packet time slots the uniqueness is lost.",
                "This duration in a real-time interactive conversation is non-perceivable by the listener.",
                "In the case that there is a joke and every one laughs, then there would be sudden rise in the number of packets and it would be upper bounded by MaxN)d(O 2 for a short period. 8.2 Optimistic Algorithm The traffic can be reduced further.",
                "The scheme in the following algorithm (Algorithm. 3) is withholding all the streams that have less value of LN compared to the least of the three in the set F. We can find the correct and unique three streams after a few time slots depending on the transportation delay between the domains.",
                "As the packet period is of the order of 40ms, the error in the selection is unnoticeable.",
                "The number of streams on network in this case is always restricted to NMax (=3).",
                "Even without Voice Activity Detection (VAD), there will be no more than three streams in the network in the best case, thus the total traffic is constant.",
                "A sudden burst of traffic, as described in 8.1, is a particular case.",
                "These advantages are due to exploitation of the characteristics of LN.",
                "Initialize LNt = 0 at an M-CS/S-CS A.",
                "In the first time slot (packet time), each CS sends the top NMax streams (based on their LN) to all other CSs.",
                "At each M-CS/S-CS and for each packet time: B.",
                "Find the value of lowest LN of the NMax globally selected streams (set F) from the previous time slot.",
                "Set LNt with this value.",
                "C. At each CS domain, select the NMax local streams that have maximum value of LN (ToOtherCSs set) D. Select streams that have LN > LNt IF there are >= NMax streams with LN > LNt then send top NMax to other CSs.",
                "ELSE IF there are (NMax-1) streams with LN>LNt then send top (NMax-1) and see E. ELSE IF there are (NMax-2) streams with LN>LNt then send top (NMax-2) and see E. …… ELSE IF there are NO streams with LN> LNt then dont send any stream.",
                "E. Exceptions: IF the stream that was in F in the last interval belongs to this CS then select and send that stream even if its LN is now < LNt. (Note this occurs only at that CS which had the stream that was the last of the three in the previous packet period.)",
                "F. Packets sent in step D and E form DB1.",
                "Packets received from other CSs form DB2.",
                "G. For this time slot, find global NMax streams based on LN from DB1 U DB2 (set F).",
                "H. Send set F to the clients in its domain.",
                "Update LNt for the next period.",
                "Algorithm 3.",
                "Optimistic algorithm to reduce the number of packets sent over the Internet Furthermore, when VAD is used [13], it would further reduce the traffic by sending the header part of the RTP packet only and not the whole packet, thus in order to keep updating the LN across.",
                "The traffic here in this case is O(NMax) for multicast and O(d) for unicast.",
                "We see that the above algorithms save bandwidth and computation at each CS, and leads to a scalable architecture with multiple CSs mainly because clients are grouped in domains.",
                "The necessary bandwidth is not dependent on the total number of active clients.",
                "As the CS always chooses the best three clients out of all the clients assigned to it in the domain, addition of new clients to the existing conference will not cause any scalability problem. 8.3 Availability of Multicasting In the architecture that has been proposed, no assumption was made about the availability of multicasting support from the network.",
                "The traffic will be further reduced if multicasting is available over WAN.",
                "It is simple to show that the order of traffic would tend to become O(d) from O(d2 ).",
                "This is an approximation as saving in multicasting depends also on the topology.",
                "The analysis was done for the case wherein multicast is not available (a realistic assumption in todays Internet).",
                "The advantage of this set up is that we can use it even if multicasting is partially available.",
                "We can instruct CSs during the set-up phase to send unicast packets to those CSs that cannot receive multicast packets whereas CSs on multicast enabled routers can exchange packets on a multicast address.",
                "The data structures and conference objects inside a CS is given in [14].",
                "Fig. 7.",
                "User Interface for setting the weight for NMax audio streams (setting Self-bar to zero avoids echo). 8.4 Quality Improvement The observed improvement in the perceived quality of the conference service is due to: (1) limiting the number of concurrent speakers to a low number such as three.",
                "Generally, in a conference if more than two participants speak the intelligibility is lost.",
                "The conversational analysis demonstrates that there would be a repair mechanism [15] in such a case. (2) Delay: The audio stream between any two clients will pass through at most two CSs thus reducing the end-to-end delay.",
                "For a large conference there might be three CSs however, one hop is within the domain incurring negligible delay. (3) As the streams are mixed only at the clients, there can be a customized mix of the streams.",
                "The individual tuning of mixing with weights the spatialism is preserved.",
                "Fig. 7 shows the user interface for the same.",
                "The echo when self-stream is selected can be avoided by reducing the weight.",
                "Nonetheless, feedback helps in reassuring speaker that he/she is heard by all. 9.",
                "CONCLUSION In this paper, we have presented a discussion on a voice-only virtual conferencing environment.",
                "We have argued that the distributed nature of deployment here makes it scalable.",
                "Interactivity is achieved by adapting a recent stream selection scheme based on Loudness Number.",
                "Additionally, we incorporate a result from a more recent work [15] where the sufficiency of three simultaneous speakers has been demonstrated.",
                "Thus, there is significantly effective utilization of bandwidth.",
                "A mixed stream is played out at each client; each client may choose to have a customized mix since mixing is done at the local terminal of each client.",
                "These render impromptu speech in a virtual teleconference over VoIP a reality, as in a real face-to-face conference.",
                "Compatibility is assured thanks to the use of SIP, the most soughtafter signaling protocol.",
                "To ensure a satisfying performance, we do not demand the availability of multicast, but use it if and when available.",
                "The traffic in the WAN (Internet) is upper-bounded by the square of the number of domains, -- further reduced by using heuristic algorithms -- which is far below the total number of clients in the conference.",
                "This is due to the use of a Conference Server local to each domain.",
                "VAD techniques help further traffic reduction.",
                "Using SIP standard for signaling makes this solution highly interoperable.",
                "We have implemented a CS application on a campus-wide network.",
                "We believe this new generation of virtual conferencing environments will gain more popularity in the future as their ease of deployment is assured thanks to readily available technologies and scalable frameworks. 10.",
                "REFERENCES [1] L Aguilar et al., Architecture for a Multimedia Teleconferencing System, in Proceedings of the ACM SIGCOMM, Aug 1986, pp. 126-136. [2] Carsten Bormann, Joerg Ott et al., Simple Conference Control Protocol, Internet Draft, Dec. 1996. [3] M. Decina and V. Trecordi, Voice over Internet Protocol and Human Assisted E-Commerce, IEEE Comm.",
                "Magazine, Sept. 1999, pp. 64-67. [4] Eckehard Doerry, An Empirical Comparison of Copresent and Technologically-mediated Interaction based on Communicative Breakdown, Phd Thesis, Graduate School of the University of Oregon, 1995. [5] H. P. Dommel and J.J. Garcia-Luna-Aceves, Floor Control for Multimedia Conferencing and Collaboration, J. Multimedia Systems, Vol. 5, No. 1, January 1997, pp. 23-38. [6] Amitava Dutta-Roy, Virtual Meetings with desktop conferencing, IEEE Spectrum, July 1998, pp. 47-56. [7] M. Handley and V. Jacobson, SDP: Session Description Protocol, RFC 2327, IETF, April 1998. [8] M. Handley, J. Crowcroft et al., Very large conferences on the Internet: the Internet multimedia conferencing architecture, Journal of Computer Networks, vol. 31, No. 3, Feb 1999, pp. 191-204. [9] ITU-T Rec.",
                "H.323, Packet based Multimedia Communications Systems, vol. 2, 1998. [10] P. Koskelainen, H. Schulzrinne and X. Wu, A SIP-based Conference Control Framework, NOSSDAV02, May 2002, pp. 53-61. [11] R Venkatesha Prasad et al., Control Protocol for VoIP Audio Conferencing Support, International Conference on Advanced Communication Technology, Mu-Ju, South Korea, Feb 2001, pp. 419-424. [12] R Venkatesha Prasad et al., Automatic Addition and Deletion of Clients in VoIP Conferencing, 6th IEEE Symposium on Computers and Communications, July 2001, Hammamet, Tunisia, pp. 386-390. [13] R Venkatesha Prasad, H S Jamadagni, Abjijeet, et al Comparison of Voice Activity Detection Algorithms, 7th IEEE Symposium on Computers and Communications.",
                "July 2002, Sicily, Italy, pp. 530-535. [14] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, A Scalable Distributed VoIP Conferencing using SIP, Proc. of the 8th IEEE Symposium on Computers and Communications, Antalya, Turkey, June 2003. [15] R Venkatesha Prasad, H S Jamadagni and H N Shankar, On Problem of Specifying Number of Floors in a Voice Only Conference, To appear in IEEE ITRE 2003. [16] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, A Proposal for Distributed Conferencing on SIP using Conference Servers, To appear in the Proc. of MMNS 2003, Belfast, UK, September 2003. [17] R. Venkatesha Prasad, H.S.",
                "Jamadagni, J. Kuri, R.S.",
                "Varchas, A Distributed VoIP Conferencing Support Using Loudness Number, Tech.",
                "Rep. TR-CEDT-TE-03-01 [18] M. Radenkovic et al, Scaleable and Adaptable Audio Service for Supporting Collaborative Work and Entertainment over the Internet, SSGRR 2002, LAquila, Italy, Jan. 2002. [19] M. Radenkovic, C. Greenhalgh, S. Benford, Deployment Issues for Multi-User Audio Support in CVEs, ACM VRST 2002, Nov. 2002, pp. 179-185. [20] Srinivas Ramanathan, P. Venkata Rangan, Harrick M. Vin, Designing Communication Architectures for Interorganizational Multimedia Collaboration, Journal of Organizational Computing, 2 (3&4), pp.277-302, 1992. [21] A.",
                "B. Roach, Session Initiation Protocol (SIP)-Specific Event Notification, RFC 3265, IETF, June 2002. [22] J. Rosenberg, H. Schulzrinne et al., SIP: Session Initiation Protocol, RFC 3261, IETF, June 2002. [23] J. Rosenberg, H. Schulzrinne, Models for Multy Party Conferencing in SIP, Internet Draft, IETF, July 2002. [24] H. Schulzrinne et al., RTP: a transport protocol for realtime applications, RFC 1889, IETF, Jan 1996. [25] Lisa R. Silverman, Coming of Age: Conferencing Solutions Cut Corporate Costs, White Paper, www.imcca.org/wpcomingofage.asp [26] Kundan Singh, Gautam Nair and Henning Schulzrinne, Centralized Conferencing using SIP, Proceedings of the 2nd IP-Telephony Workshop (IPTel), April 2001. [27] D. Thaler, M. Handley and D. Estrin, The Internet Multicast Address Allocation Architecture, RFC 2908, IETF, Sept. 2000."
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": [
                []
            ]
        },
        "simultaneous speaker": {
            "translated_key": "hablantes simultáneos",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Deployment Issues of a VoIP Conferencing System in a Virtual Conferencing Environment R. Venkatesha Prasad i Richard Hurni ii H.S.",
                "Jamadagni iii H.N.",
                "Shankar iv i, iii Centre for Electronics Design and Technology Indian Institute of Science, Bangalore, India Telephone: +91 80 360 0810 i, iii {vprasad, hsjam}@cedt.iisc.ernet.in ii hurni@ieee.org iv hn_shankar@yahoo.com ABSTRACT Real-time services have been supported by and large on circuitswitched networks.",
                "Recent trends favour services ported on packet-switched networks.",
                "For audio conferencing, we need to consider many issues - scalability, quality of the conference application, floor control and load on the clients/servers - to name a few.",
                "In this paper, we describe an audio service framework designed to provide a Virtual Conferencing Environment (VCE).",
                "The system is designed to accommodate a large number of end users speaking at the same time and spread across the Internet.",
                "The framework is based on Conference Servers [14], which facilitate the audio handling, while we exploit the SIP capabilities for signaling purposes.",
                "Client selection is based on a recent quantifier called Loudness Number that helps mimic a physical face-to-face conference.",
                "We deal with deployment issues of the proposed solution both in terms of scalability and interactivity, while explaining the techniques we use to reduce the traffic.",
                "We have implemented a Conference Server (CS) application on a campus-wide network at our Institute.",
                "Categories and Subjects Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - Client / Server, distributed applications.",
                "General Terms Algorithms, Performance, Design, Theory. 1.",
                "INTRODUCTION Todays Internet uses the IP protocol suite that was primarily designed for the transport of data and provides best effort data delivery.",
                "Delay-constraints and characteristics separate traditional data on the one hand from voice & video applications on the other.",
                "Hence, as progressively time-sensitive voice and video applications are deployed on the Internet, the inadequacy of the Internet is exposed.",
                "Further, we seek to port telephone services on the Internet.",
                "Among them, virtual conference (teleconference) facility is at the cutting edge.",
                "Audio and video conferencing on Internet are popular [25] for the several advantages they inhere [3,6].",
                "Clearly, the bandwidth required for a teleconference over the Internet increases rapidly with the number of participants; reducing bandwidth without compromising audio quality is a challenge in Internet Telephony.",
                "Additional critical issues are: (a) packet delay, (b) echo, (c) mixing of audio from selected clients, (d) automatic selection of clients to participate in the conference, (e) playout of mixed audio for every client, (f) handling clients not capable of mixing audio streams (such clients are known as dumb clients), and (g) deciding the number of simultaneously active clients in the conference without compromising voice quality.",
                "While all the above requirements are from the technology point of view, the users perspective and interactions are also essential factors.",
                "There is plenty of discussion amongst HCI and CSCW community on the use of Ethnomethodology for design of CSCW applications.",
                "The basic approach is to provide larger bandwidth, more facilities and more advanced control mechanisms, looking forward to better quality of interaction.",
                "This approach ignores the functional utility of the environment that is used for collaboration.",
                "Eckehard Doerry [4] criticizes this approach by saying it is keeping form before function.",
                "Thus, the need is to take an approach that considers both aspects - the technical and the functional.",
                "Regarding the functional aspect, we refer to [15] where it has been dealt with in some detail.",
                "In this work, we do not discuss video conferencing; its inclusion does not significantly benefit conference quality [4].",
                "Our focus is on virtual audio environments.",
                "We first outline the challenges encountered in virtual audio conferences.",
                "Then we look into the motivations followed by relevant literature.",
                "In Section 5, we explain the architecture of our system.",
                "Section 6 comprises description of the various algorithms used in our setup.",
                "We address deployment issues.",
                "A discussion on Swiss Federal Institute of Technology, Lausanne.",
                "Former visitor at CEDT.",
                "PESIT and NIAS, Bangalore, India.iv ii performance follows.",
                "We conclude taking alongside some implementation issues. 2.",
                "CHALLENGES IN VoIP CONFERENCING Many challenges arise in building a VoIP application.",
                "The following are of particular concern in the process: • Ease of use: Conferencing must be simple; users need no domain expertise.",
                "Management (addition/removal) of clients and servers must be uncomplicated.",
                "Application development should not presuppose specific characteristics of the underlying system or of network layers.",
                "Ease of use may include leveraging readily available, technically feasible and economically viable technologies. • Scalability: Conferencing must seem uninterrupted under heavy loads, i.e., when many additional users are added on.",
                "Traffic on WAN should not grow appreciably with the total number of clients; else, this has lead to congestion.",
                "So a means to regulate traffic to a minimum is needed for this kind of real-time applications. • Interactivity: In Virtual Conferencing Environments (VCEs), we intend a face-to-face-like conferencing application that mimics a real conference, where more vocal participants invite attention.",
                "Turn-taking in floor occupation by participants must be adapted gracefully to give a feel of natural transition. • Standardization: The solution must conform to established standards so as to gain interoperability and peer acceptance.",
                "The above requirements are placed in the perspective of observations made in earlier works (vide Sections 3 and 4) and will steer the VCE design. 3.",
                "THE MOTIVATION Ramanathan and Rangan [20] have studied in detail the architectural configurations comparing many conferencing architecture schemes taking into consideration the network delay and computation requirements for mixing.",
                "Functional division and object-oriented architecture design that aid in implementation is presented in [1].",
                "An overview of many issues involved in supporting a large conference is dealt in [8].",
                "H. P. Dommel [5] and many others highlight floor control as another pivotal aspect to be taken into account in designing a conferencing tool.",
                "Tightly coupled conference control protocols in Internet belong to the ITU-T H.323 family [9]; however, they are mainly for small conferences.",
                "The latest IETF draft by Rosenberg and Schulzrinne [23] discusses conferencing models with SIP [22] in the background.",
                "Aspects of implementation for centralized SIP conferencing are reported in [26].",
                "A new approach called partial mixing by Radenkovic [18] allows for mixed and non-mixed streams to coexist.",
                "In all the above proposals, while there are some very useful suggestions, they share one or more of the following limitations: • In an audio conference, streams from all the clients need not be mixed.",
                "Actually, mixing many arbitrary streams [24] from clients degrades the quality of the conference due to the reduction in the volume (spatial aspect of speech).",
                "The number of streams mixed varies dynamically depending on the number of active participants.",
                "This would lead to fluctuations in the volume of every individual participant causing severe degradation in quality.",
                "Customized mixing of streams is not possible when many clients are active.",
                "There is a threshold on the number of <br>simultaneous speaker</br>s above which increasing the number of speakers becomes counterproductive to conference quality.",
                "Fixing the maximum number of <br>simultaneous speaker</br>s is dealt in a recent work [15] using Ethnomethodology, and is conjectured to be three.",
                "Thus it is advisable to honour that constraint. • There cannot be many intermediate mixers (similarly, Conference Servers as in [10]) in stages as in [20] because it brings in inordinate delay by increasing the number of hops and is not scalable with interactivity in focus. • Floor Control for an audio conference (even video conference) with explicit turn-taking instructions to participants renders the conference essentially a one-speakerat-a-time affair, not a live and free-to-interrupt one.",
                "This way, the conference becomes markedly artificial and its quality degrades.",
                "Schulzrinne et al. [24], assume only one participant is speaking at a time.",
                "In this case, if applications are implemented with some control [5], the service becomes gagging for the users. • Partial mixing [18] has a similar problem as that of mixing when more streams are mixed.",
                "Moreover, in [18], to allow impromptu speech, mixing is not done when the network can afford high bandwidth requirements for sending/receiving all the streams, but it is unnecessary [15]. • For large conferences [23, 10] a centralized conference cannot scale up.",
                "With multicasting, clients will have to parse many streams and traffic on a clients network increases unnecessarily.",
                "Evidently, different particular issues, all of which are a subset of requirements (defined in [14] and [16]) for a VoIP conferencing support, are tackled.",
                "Thus there is a need to address conferencing as a whole with all its requirements considered concurrently.",
                "Towards this goal, the VoIP conferencing system we propose is intended to be scalable and interactive.",
                "We make use of the Loudness Number for implementing floor control.",
                "This permits a participant to freely get into the speaking mode to interrupt the current speaker as in a natural face-to-face meeting.",
                "An upper limit on the number of floors (i.e., the number of speakers allowed to speak at the same time) is fixed using a conjecture proposed in [15].",
                "The work presented here is in continuation of our studies into conferencing based on the Session Initiation Protocol in [14] and [16].",
                "SIP, defined in [22] is now the most popular standard for VoIP deployment and has been chosen for its strength, ease of use, extensibility and compatibility.",
                "This is the reason it will be in the background of all controlling messages that will implicitly arise between the entities in our architecture.",
                "The actual messages are described in [16] and, as such, we do not present a complete description of them here. 4.",
                "RELATED WORK The SIP standard defined in RFC 3261 [22] and in later extensions such as [21] does not offer conference control services such as floor control or voting and does not prescribe how a conference is to be managed.",
                "However SIP can be used to initiate a session that uses some other conference control protocol.",
                "The core SIP specification supports many models for conferencing [26, 23].",
                "In the server-based models, a server mixes media streams, whereas in a server-less conference, mixing is done at the end systems.",
                "SDP [7] can be used to define media capabilities and provide other information about the conference.",
                "We shall now consider a few conference models in SIP that have been proposed recently [23].",
                "First, let us look into server-less models.",
                "In End-System Mixing, only one client (SIP UA) handles the signaling and media mixing for all the others, which is clearly not scalable and causes problems when that particular client leaves the conference.",
                "In the Users Joining model, a tree grows, as each invited party constitutes a new branch in the distribution path.",
                "This leads to an increasing number of hops for the remote leaves and is not scalable.",
                "Another option would be to use multicast for conferencing but multicast is not enabled over Internet and only possible on a LAN presently.",
                "Among server-based models, in a Dial-In Conference, UAs connect to a central server that handles all the mixing.",
                "This model is not scalable as it is limited by the processing power of the server and bandwidth of the network.",
                "Adhoc Centralized Conferences and Dial-Out Conference Servers have similar mechanisms and problems.",
                "Hybrid models involving centralized signaling and distributed media, with the latter using unicast or multicast, raise scalability problems as before.",
                "However an advantage is that the conference control can be a third party solution.",
                "Distributed Partial Mixing, presented in [18], proposes that in case of bandwidth limitation, some streams are mixed and some are not, leaving interactivity intact.",
                "Loss of spatialism when they mix and the bandwidth increase when they do not are open problems.",
                "A related study [19] by the same author proposes conferencing architecture for Collaborative Virtual Environments (CVEs) but does not provide the scalability angle without the availability of multicasting.",
                "With the limitations of proposed conferencing systems in mind, we will now detail our proposal. 5.",
                "SYSTEM ARCHITECTURE This section is dedicated to the description of the proposed system architecture.",
                "However, as this paper constitutes the continuation of our work started in [14] and furthered in [16], we will not present here all the details about the proposed entities and invite the readers to consult the papers mentioned above for a full and thorough description.",
                "First, we do not restrict our conferencing system to work on small conferences only, but rather on large audio VCEs that have hundreds (or even thousands) of users across a Wide Area Network (WAN) such as the Internet.",
                "This view stems from an appraisal that VCEs will gain in importance in the future, as interactive audio conferences will be more popular because of the spread of the media culture around the world.",
                "Two issues must be taken care of when building a VoIP conferencing system: (i) the front-end, consisting of the application program running on the end-users computers and (ii) the back-end that provides other application programs that facilitate conferencing and conference.",
                "The participating users are grouped into several domains.",
                "These domains are Local Area Networks (LANs), such as corporate or educational networks.",
                "This distributed assumption asks for distributed controlling and media handling solutions, as centralized systems would not scale for such very large conferences (vide Section 4).",
                "More explicitly, in each domain, we can identify several relevant logical components of a conferencing facility (Fig. 1):  An arbitrary number of end users (clients) that can take part in at most one audio conference at a time.",
                "Every user is Fig. 1.",
                "Conference example - 3 domains containing the necessary entities so that the conference can take place. included in one and only one domain at a given instant, but can move from domain to domain (nomadism).",
                "In our conferencing environment, these clients are regular SIP User Agents (SIP UAs), as defined in [22] so to gain in interoperability with other existing SIP-compatible systems.",
                "These clients are thus not aware of the complex setting that supports the conference and this is highlighted below.  One SIP Server (SIPS) per domain, taking care of all the signaling aspects of the conference (clients joining, leaving, etc.) [16].",
                "In particular, it is considered as a physical implementation encompassing different logical roles, namely a SIP Proxy Server, a SIP Registrar Server, a SIP Redirect Server and a SIP B2BUA (Back-to-Back User Agent) [22].",
                "This physical implementation enables the handling of incoming/outgoing SIP messages by one or another logical entity according to the needs.",
                "SIPS is entrusted with maintaining total service and has many advantages such as (a) it works as a centralized entity that can keep track of the activities of the UAs in a conference; (b) it can do all the switching for providing PBX features; (c) it can locate the UAs and invite them for a conference; (d) it can do the billing as well.",
                "SIPSs in different domains communicate with each other using SIP messages as described in [16].",
                "If the load on a particular SIPS is too heavy, it can create another SIPS in the same domain so that the load will be shared.  One Master Conference Server (M-CS) (simply a Conference Server (CS)) for each conference is created by the local SIPS when a conference starts.",
                "This server will be used for handling media packets for the clients of the domain.",
                "Its mechanism will be described in the next section.",
                "The M-CS will be able to create a hierarchy of CSs inside a domain by adding one or more Slave CSs (S-CSs) to accommodate all the active clients and prevent its own flooding at the same time.",
                "We will see this mechanism in some detail in the sequel.",
                "The entities described here are exhaustive and conform to the SIP philosophy.",
                "Thus, the use of SIP makes this architecture more useful and interoperable with any other SIP clients or servers. 6.",
                "ALGORITHMIC ISSUES 6.1 Selecting the Streams Similar to SipConf in [27], a Conference Server (CS) [17] has the function of supporting the conference; it is responsible for handling audio streams using RTP.",
                "It can also double to convert audio stream formats for a given client if necessary and can work as Translators/Mixers of RTP specification behind firewalls.",
                "We have based the design of our CS on H.323 Multipoint Processor (MP) [9].",
                "In short, the MP receives audio streams from the endpoints involved in a centralized or hybrid multipoint conference, processes them and returns them to the endpoints.",
                "An MP that processes audio prepares NMax audio outputs from M input streams after selection, mixing, or both.",
                "Audio mixing requires decoding the input audio to linear signals (PCM or analog), performing a linear combination of the signals and reencoding the result in an appropriate audio format.",
                "The MP may eliminate or attenuate some of the input signals in order to reduce noise and unwanted components.",
                "Fig. 2.",
                "Schematic diagram of a CS The limitation of H.323 is that it does not address the scalability of a conference.",
                "The architecture proposes a cascaded or daisy chain topology [10], which can be shown that it cannot scale up for a large conference.",
                "A CS serves many clients in the same conference.",
                "Thus it handles only one conference at a time.",
                "Multiple CSs may coexist in a domain, as when there are several conferences under way.",
                "Signaling-related messages of CSs are dealt in [11].",
                "The working of a CS is illustrated on Fig. 2: For each mixing interval, CS 1 chooses the best NMax audio packets out of the M1 (using a criterion termed Loudness Number, described in the next subsection).",
                "It may possibly receive and sends these to CSs 2 to P. The set of packets sent is denoted as ToOtherCSs.",
                "In the same mixing interval, it also receives the best NMax audio packets (out of possibly M2) from CS 2, similarly the best NMax (out of possibly MP) from CS P. For simplicity, we ignore propagation delay between CSs which indeed can be taken into account; it is beyond the scope of this presentation.",
                "The set of packets received is denoted as FromOtherCSs.",
                "Finally, it selects the best NMax packets from the set {ToOtherCSs union FromOtherCSs} and passes these packets to its own group.",
                "It can be seen that the set {ToOtherCSs union FromOtherCSs} is the same at all CSs.",
                "This ensures that any client in the conference finally receives the same set of packets for mixing.",
                "Hence all clients obtain a common view of the conference.",
                "Similarly, for each time slot (packet time), a subset, F of all clients is selected (using the same criterion) from the pool of packets from all other CSs plus the NMax clients selected locally.",
                "Their packets are mixed and played out at the clients.",
                "According to [15], the cardinality of F, |F| is NMax and is fixed at three.",
                "In our conferencing setup, selection is by the Master Conference Server (M-CS), which comes into the picture exclusively for media handling.",
                "Note that even if the SIP specification enables direct UA-to-UA media communication in a one-to-one call, it is also possible to use the Conference Server for two-party calls, especially because it is then more functional to create a real conference by adding a third and subsequently more participant(s).",
                "There are cases wherein the processing capacity of an M-CS is exceeded as it may have too many packets - from local domains and from remote domains - to process.",
                "In that case, the M-CS will create one or many S-CS (Fig. 6) and transfer its own clients as well as the new clients to them.",
                "In this configuration, the algorithm outlined above will be slightly modified, as the audio packets will go from clients to their dedicated S-CS that will select NMax packets to send to the local M-CS, which will then select NMax packets from all its S-CSs in the domain before sending them to the remote domains.",
                "The incoming packets from other domains will be received by the M-CS, select NMax of them and send them directly to the domain clients, bypassing the SCSs.",
                "This change implies that at most three intermediate entities exist for each audio packet, instead of two in the conventional setup.",
                "As the extra hop happens inside the LAN supposed to have a high-speed connectivity, we consider that it should not prevent us from using this hierarchy of CSs when theres a need to do so. 6.2 Loudness Number (LN) A basic question to be answered by the CS is the following.",
                "In a mixing interval, how should it choose NMax packets out of the M it might possibly receive?",
                "One way is to rank the M packets received according to their energies, and choose the top NMax.",
                "However, this is usually found to be inadequate because random fluctuations in packet energies can lead to poor audio quality.",
                "This indicates the need for a metric different from mere individual packet energies.",
                "The metric should have the following characteristics [12]: • A speaker (floor occupant) should not be cut off by a spike in the packet energy of another speaker.",
                "This implies that a speakers speech history should be given some weight.",
                "This is often referred to as Persistence or Hangover. • A participant who wants to interrupt a speaker will have to (i) speak loudly and (ii) keep trying for a little while.",
                "In a face-to-face conference, body language often indicates the intent to interrupt.",
                "But in a blind conference under discussion, a participants intention to interrupt can be conveyed effectively through LN.",
                "A floor control mechanism empowered to cut off a speaker forcefully must be ensured.",
                "These requirements are met by Loudness Number [12], which changes smoothly with time so that the selection (addition and deletion) of clients for conference is graceful.",
                "LN (= ) is a function of the amplitude of the current audio stream plus the activity and amplitude over a specific window in the past.",
                "Fig. 3.",
                "The different windows used for LN computation The Loudness Number is updated on a packet-by-packet basis.",
                "The basic parameter used here is packet amplitude, which is calculated as root mean square (rms) of the energies in audio samples of a packet, and denoted by XK.",
                "Three windows are defined as shown in Fig. 3.",
                "The present amplitude level of the speaker is found by calculating the moving average of packet amplitude (XK) within a window called Recent Past Window starting from the present instant to some past time.",
                "The past activity of the speaker is found by calculating the moving average of the packet amplitude (XK) within a window called Distant Past Window, which starts at the point where the Recent Past window ends and stretches back in the past for a pre-defined interval.",
                "The activity of the speaker in the past is found with a window called Activity Horizon, which spans the recent past window as well as the distant past window and beyond if necessary.",
                "Though the contribution of the activity horizon looks similar to the contribution of the recent past and distant past windows, past activity is computed from activity horizon window in a differently.",
                "Define the quantities during these three intervals as L1, L2 and L3.",
                "L1 quantifies the Recent Past speech activity, L2 the Distant Past speech activity and L3 gives a number corresponding to the speech activity in the Activity Horizon window quantifying how active the speaker was in the past few intervals.",
                "L3 yields a quantity that is proportional to the fraction of packets having energies above a pre-defined threshold (Eq. 3).",
                "The threshold is invariant across clients. ∑ +− = = 1 1 1 RPP P Wt tK K RP X W L (1) ∑ +−− −= = 1 2 1 DPRPP RPP WWt WtK K DP X W L (2) ∑ +− = ≥= 1 }{3 * 1 AHP P K Wt tK X AH I W L θθ (3) Where ifI KX 1}{ =≥θ θ≥KX = otherwise,0 The threshold is a constant. is set at 10-20 percent of the amplitude of the voice samples of a packet in our implementation here.",
                "Loudness Number λ for the present time instant (or the present packet) is calculated as, 332211 *L*L*L αααλ ++= (4) Here 1\u000f 2 DQG 3 are chosen such that: 0< 1\u000f 2\u001f\u0014\u000f \u0013\u001f 1\u000e 2\u001f\u0014 DQG 3=1-\u000b 1\u000e 2) Here, 1 is the weight given to the recent past speech, 2 is the weight given to distant past speech and 3 is the weight given to speech activity in the activity horizon window considered. 6.3 Safety, Liveness and Fairness The λ parameter KDV VRPH PHPRU\\ GHSHQGLQJ RQ WKH VSUHDG RI the windows.",
                "After one conferee becomes silent, another can take the floor.",
                "Also, as there is more than one channel, interruption is enabled.",
                "A loud conferee is more likely to be heard because of elevated λ.",
                "This ensures fairness to all conferees.",
                "After all, even in a face-to-face conference, a more vocal speaker grabs special attention.",
                "All these desirable characteristics are embedded into the LN.",
                "A comprehensive discussion on selection of the various parameters and the dynamics of LN are beyond the scope of this paper. 6.4 Selection Algorithm using the LN Following the developments in subsections 6.1 and 6.2, we present the simple algorithm that runs at each Master-Conference Server (Algorithm. 1).",
                "This algorithm is based on the discussions in section 6.1.",
                "The globally unique set F is found using this procedure.",
                "Repeat for each time slot at each M-CS { 1.",
                "Get all the packets from the Clients that belong to it. 2.",
                "Find at most NMax Clients that have PD[LPXP RXW RI 0 &OLHQWV LQ LWV GRPDLQ\u0011 3.",
                "Store a copy of packets from those NMax Clients in database DB1. 4.",
                "Send these NMax packets to other M-CSs (on Unicast or Multicast, depending on the configuration). 5.",
                "Similarly, receive packets from all other M-CSs and store them in database DB2. 6.",
                "Now compare the packets in DB1 and DB2 on WKH EDVLV RI DQG VHOHFW D PD[LPXP RI NMax amongst them (to form set F) that should be played out at each Client. 7.",
                "Send the NMax packets in set F to the Clients in its domain. 8.",
                "Mix these NMax audio packets in set F after linearising and send it to dumb Clients in the domain. }",
                "Algorithm 1.",
                "Selection algorithm The mechanism proposed here is also depicted on Fig. 6, where a single conference takes place between three domains.",
                "The shaded clients are the ones selected in their local domains; their audio streams will be sent to other CSs. 7.",
                "DEPLOYMENT ISSUES We now analyze deployment issues associated with conference management.",
                "How are domains to be organized to maximize the number of participants able to join?",
                "To address this, we define some useful parameters.  Let d be the number of different domains in which there are active clients in a given conference.  Let Mi be the number of active clients present in domain i ( di ≤≤1 ) in a given conference.",
                "The total number of active clients in the conference is thus ∑= = d i iMM 1 .  Let C be the maximum number of audio streams a Conference Server can handle in a packet time, also called capacity.",
                "C is set according to the processing power of the weakest CS in the conference but as it cannot be assumed that we know it a-priori, it can be set according to some minimum system requirement a machine must meet in order to take part in a conference.  Let NMax be the number of output streams a CS has to send to other CSs in remote domains (see section 6.1).",
                "We will set NMax =3 (=|F|), according to [15].",
                "The optimization problem is now to find the value of d that maximizes the total number of clients Mi served by one CS in a domain with capacity C. We first dispose the case where the capacity is not exceeded (the existing CS is not overloaded), and then proceed to the case where there exists a need to create more CSs when a single CS is overloaded.",
                "We assume that clients are equally distributed amongst the domains, as we may not have information to assume an a-priori distribution of the clients.",
                "We can specify no more than an upper bound on the number of clients acceptable, given the number of active domains d. 7.1 Conferencing with only One Level of CSs In this subsection, we consider that we have only one CS, i.e., a unique M-CS in each domain.",
                "Thus it cannot be overloaded.",
                "We consider that the system works as outlined in section 6.1: The Clients send their audio packets to their local CS, which selects NMax streams, before sending them to other CSs.",
                "In parallel, it also receives NMax streams for every other CSs before taking a decision on which NMax streams will be selected, sent and played out at each individual clients.",
                "For system stability, any CS in the conference should be able to handle its local clients in addition to the audio packets from other domains.",
                "Clearly then, the following inequality must hold for every domain: )1( −⋅+≥ dN d M C Max (5) The limiting case of (5) (taking the equality) takes the form 2 )( dNdNCM MaxMax ⋅−⋅+= (6) To optimize d with respect to M, we set 0)(2 =+−⋅⋅= ∂ ∂ MaxMax NCdN d M (7) yielding     ⋅ + = Max Max N NC d 2 (8) ([ ]* = Rounding to nearest integer) and hence, M from (6).",
                "C d M 50 9 234 100 17 884 150 26 1950 200 34 3434 250 42 5334 300 51 7650 350 59 10384 400 67 13534 450 76 17100 500 84 21084 Table 1.",
                "Values of d and M computed for some values of C with NMax = 3.",
                "In Table 1, we give the values of d and M that were computed using (8) and (6) with NMax = 3.",
                "We see that the values of d and M, being dependent of C, are therefore based on the weakest CS.",
                "We see that there is a trade-off between M and d. We could admit more domains in the conference, but at the expense of restricting the total number of clients M in the conference.",
                "While implementing and testing the Conference Servers on a Pentium III 1.4 GHz running Windows NT, we were able to set C=300.",
                "But with the advent of faster computers (> 3 GHz), one can easily set C to higher values and determine d and M accordingly.",
                "Fig. 4 shows a contour plot and Fig. 5, a 3D-mesh showing optimized solutions for CSs of different capacities.",
                "These lead us to maximize the number of domains, and hence, to maximize the total number of clients based on the capacity of various CSs.",
                "In Fig. 4, the individual curves represent the total number of clients targeted, and we select a lower value of d, for capacity C, for targeted M to reduce traffic on WAN.",
                "Fig. 5 represents a different perspective of the same data in 3D.",
                "Fig. 4.",
                "Contour Plot of Capacity versus Optimum number of domains for various conference sizes 7.2 Conferencing with Two Levels of CSs Now considering the case where the number of clients in a particular domain is too large, i.e., d M Mi ≥ (9) one has to avoid the denial of service for new clients due to overloading of Conference Server.",
                "This problem can be solved by introducing a second level of CSs inside the given domain, as in Fig. 6.",
                "The existing M-CS creates a Slave CS (S-CS) that can handle up to C end-users and to which it transfers all its active clients.",
                "Here, the system works differently as outlined in section 6.1: The Clients send their audio packets to their local S-CS, which selects NMax streams, before sending them to a local M-CS, which will proceed in the same way, before sending NMax streams to the other domains.",
                "Each newly created S-CS must run on a separate machine.",
                "The M-CS has to create more S-CSs if the number of active clients exceeds C in the course of the conference after the transfer.",
                "With this mechanism, the M-CS will be able to create utmost     −⋅− = Max Max N dNC U )1( S-CSs, (10) as it must handle 3 (= NMax) packets for each local S-CSs and 3 (= NMax) packets from each other remote domains.",
                "We can then calculate the maximum theoretical number of active clients CUMi ⋅= in each domain as well as M, for the whole conference as CUdM ⋅⋅= .",
                "Fig. 5. 3D Plot of Capacity versus Optimum number of domains for various conference sizes Of course, one could further create a third level in the hierarchy, giving the possibility of accommodating even more clients.",
                "This may be unnecessary as the number of possible clients is large enough with two levels. 8.",
                "PERFORMANCE DISCUSSION We now analyze the performance of the algorithm presented in subsection 6.3, i.e., the one taking care of the exchange of audio packets between the different domains.",
                "Note that the packets that are transiting within the LAN take advantage of the higher capacity (generally coupled with multicast capabilities) and therefore do not require a performance analysis.",
                "Thus we have to look only at the RTP packets over the WAN, i.e., between participating M-CSs.",
                "As each M-CS from a domain will be sending only NMax out of d M packets to the other CSs ( MaxN d M >> ), the bandwidth used by the application over a WAN is upper-bounded by the following expression.",
                "The total number of audio packets transiting over the WAN for each time slot is ∑ ∑= ≠=        d i d ijj MaxN 1 ,1 which is quadratic in the number of domains (i.e., O(d2 )).",
                "However, it is independent of the total number of active clients.",
                "This would not have been the case had all packets been sent over the network in each time slot.",
                "The saving is tremendous.",
                "Yet, one may contend that sending three packets to and from all domains is a waste of resources, as most of these streams will not be selected.",
                "If just one client is active, selecting a subset of clients in that domain is unnecessary.",
                "Pessimistic and optimistic algorithms as presented in the sequel aim at reducing the traffic further by harnessing the slow varying nature of the LN. 8.1 Pessimistic algorithm Consider a scenario wherein the lowest LN (called LNt) of the three globally selected streams (set F of Section 6.1) exceeds the LN of the most dominant stream of a domain.",
                "Evidently, the chances that the next two dominant streams of that domain being selected to F in the next packet period are less.",
                "Here, we send this most dominant stream and withhold the other two.",
                "There may be an error in unique selection across all domains for one packet period only.",
                "As LN varies slowly, the error would get automatically rectified in a subsequent packet period (slot).",
                "In this algorithm, there is at least one stream in each period.",
                "The net network traffic in a packet period in the best case is )1( −⋅ dd , i.e., )( 2 dO using unicast, instead of MaxNdd ⋅−⋅ )1( .",
                "Considerable valuable bandwidth can be saved using this heuristic.",
                "The resulting traffic complexity reduces from O(d2 ) to O(d) in multicast-enabled networks.",
                "Initialize LNt = 0 at an M-CS/S-CS A.",
                "In the first time slot (packet time), each CS sends the top NMax streams (based on their LN) to all other CSs.",
                "At each M-CS/S-CS and for each packet time: B.",
                "Find the value of lowest LN of the NMax globally selected streams (set F) from the previous time slot.",
                "Set LNt with this value.",
                "C. At each CS domain, select the NMax local streams that have maximum value of LN (ToOtherCSs set).",
                "D. Select streams that have LN > LNt.",
                "IF there are >= NMax streams with LN > LNt then send top NMax to other CSs.",
                "ELSE IF there are (NMax-1) streams with LN>LNt then send top (NMax-1) plus the one lower than LNt (i.e., top NMax) to other CSs.",
                "ELSE IF there are (NMax-2) streams with LN>LNt then send top (NMax-2) plus the one lower than LNt (i.e. top (NMax -1)) to other CSs. …… ELSE IF there are NO streams with LN> LNt then send top 1 stream to other CSs.",
                "E. Packets sent in step D form DB1.",
                "Packets received from other CSs form DB2.",
                "F. For this time slot, find global NMax streams based on LN from DB1 U DB2 (set F) G. Send set F to the clients in its domain.",
                "Update LNt for the next period.",
                "Algorithm 2.",
                "Pessimistic algorithm to reduce the number of packets sent over the Internet.",
                "Fig. 6.",
                "Example of a 2-level hierarchy of Conference Servers; the shaded Clients are the one selected by the M-CS and will be sent to other domains CSs.",
                "In this algorithm the saving in traffic is at the cost of relaxing the condition of formation of globally unique set F. However, the discrepancies in selected streams at different domains remain for a short period of time depending on the transportation delay between any two domains.",
                "Even for a total delay of 400ms, for only 10 packet time slots the uniqueness is lost.",
                "This duration in a real-time interactive conversation is non-perceivable by the listener.",
                "In the case that there is a joke and every one laughs, then there would be sudden rise in the number of packets and it would be upper bounded by MaxN)d(O 2 for a short period. 8.2 Optimistic Algorithm The traffic can be reduced further.",
                "The scheme in the following algorithm (Algorithm. 3) is withholding all the streams that have less value of LN compared to the least of the three in the set F. We can find the correct and unique three streams after a few time slots depending on the transportation delay between the domains.",
                "As the packet period is of the order of 40ms, the error in the selection is unnoticeable.",
                "The number of streams on network in this case is always restricted to NMax (=3).",
                "Even without Voice Activity Detection (VAD), there will be no more than three streams in the network in the best case, thus the total traffic is constant.",
                "A sudden burst of traffic, as described in 8.1, is a particular case.",
                "These advantages are due to exploitation of the characteristics of LN.",
                "Initialize LNt = 0 at an M-CS/S-CS A.",
                "In the first time slot (packet time), each CS sends the top NMax streams (based on their LN) to all other CSs.",
                "At each M-CS/S-CS and for each packet time: B.",
                "Find the value of lowest LN of the NMax globally selected streams (set F) from the previous time slot.",
                "Set LNt with this value.",
                "C. At each CS domain, select the NMax local streams that have maximum value of LN (ToOtherCSs set) D. Select streams that have LN > LNt IF there are >= NMax streams with LN > LNt then send top NMax to other CSs.",
                "ELSE IF there are (NMax-1) streams with LN>LNt then send top (NMax-1) and see E. ELSE IF there are (NMax-2) streams with LN>LNt then send top (NMax-2) and see E. …… ELSE IF there are NO streams with LN> LNt then dont send any stream.",
                "E. Exceptions: IF the stream that was in F in the last interval belongs to this CS then select and send that stream even if its LN is now < LNt. (Note this occurs only at that CS which had the stream that was the last of the three in the previous packet period.)",
                "F. Packets sent in step D and E form DB1.",
                "Packets received from other CSs form DB2.",
                "G. For this time slot, find global NMax streams based on LN from DB1 U DB2 (set F).",
                "H. Send set F to the clients in its domain.",
                "Update LNt for the next period.",
                "Algorithm 3.",
                "Optimistic algorithm to reduce the number of packets sent over the Internet Furthermore, when VAD is used [13], it would further reduce the traffic by sending the header part of the RTP packet only and not the whole packet, thus in order to keep updating the LN across.",
                "The traffic here in this case is O(NMax) for multicast and O(d) for unicast.",
                "We see that the above algorithms save bandwidth and computation at each CS, and leads to a scalable architecture with multiple CSs mainly because clients are grouped in domains.",
                "The necessary bandwidth is not dependent on the total number of active clients.",
                "As the CS always chooses the best three clients out of all the clients assigned to it in the domain, addition of new clients to the existing conference will not cause any scalability problem. 8.3 Availability of Multicasting In the architecture that has been proposed, no assumption was made about the availability of multicasting support from the network.",
                "The traffic will be further reduced if multicasting is available over WAN.",
                "It is simple to show that the order of traffic would tend to become O(d) from O(d2 ).",
                "This is an approximation as saving in multicasting depends also on the topology.",
                "The analysis was done for the case wherein multicast is not available (a realistic assumption in todays Internet).",
                "The advantage of this set up is that we can use it even if multicasting is partially available.",
                "We can instruct CSs during the set-up phase to send unicast packets to those CSs that cannot receive multicast packets whereas CSs on multicast enabled routers can exchange packets on a multicast address.",
                "The data structures and conference objects inside a CS is given in [14].",
                "Fig. 7.",
                "User Interface for setting the weight for NMax audio streams (setting Self-bar to zero avoids echo). 8.4 Quality Improvement The observed improvement in the perceived quality of the conference service is due to: (1) limiting the number of concurrent speakers to a low number such as three.",
                "Generally, in a conference if more than two participants speak the intelligibility is lost.",
                "The conversational analysis demonstrates that there would be a repair mechanism [15] in such a case. (2) Delay: The audio stream between any two clients will pass through at most two CSs thus reducing the end-to-end delay.",
                "For a large conference there might be three CSs however, one hop is within the domain incurring negligible delay. (3) As the streams are mixed only at the clients, there can be a customized mix of the streams.",
                "The individual tuning of mixing with weights the spatialism is preserved.",
                "Fig. 7 shows the user interface for the same.",
                "The echo when self-stream is selected can be avoided by reducing the weight.",
                "Nonetheless, feedback helps in reassuring speaker that he/she is heard by all. 9.",
                "CONCLUSION In this paper, we have presented a discussion on a voice-only virtual conferencing environment.",
                "We have argued that the distributed nature of deployment here makes it scalable.",
                "Interactivity is achieved by adapting a recent stream selection scheme based on Loudness Number.",
                "Additionally, we incorporate a result from a more recent work [15] where the sufficiency of three <br>simultaneous speaker</br>s has been demonstrated.",
                "Thus, there is significantly effective utilization of bandwidth.",
                "A mixed stream is played out at each client; each client may choose to have a customized mix since mixing is done at the local terminal of each client.",
                "These render impromptu speech in a virtual teleconference over VoIP a reality, as in a real face-to-face conference.",
                "Compatibility is assured thanks to the use of SIP, the most soughtafter signaling protocol.",
                "To ensure a satisfying performance, we do not demand the availability of multicast, but use it if and when available.",
                "The traffic in the WAN (Internet) is upper-bounded by the square of the number of domains, -- further reduced by using heuristic algorithms -- which is far below the total number of clients in the conference.",
                "This is due to the use of a Conference Server local to each domain.",
                "VAD techniques help further traffic reduction.",
                "Using SIP standard for signaling makes this solution highly interoperable.",
                "We have implemented a CS application on a campus-wide network.",
                "We believe this new generation of virtual conferencing environments will gain more popularity in the future as their ease of deployment is assured thanks to readily available technologies and scalable frameworks. 10.",
                "REFERENCES [1] L Aguilar et al., Architecture for a Multimedia Teleconferencing System, in Proceedings of the ACM SIGCOMM, Aug 1986, pp. 126-136. [2] Carsten Bormann, Joerg Ott et al., Simple Conference Control Protocol, Internet Draft, Dec. 1996. [3] M. Decina and V. Trecordi, Voice over Internet Protocol and Human Assisted E-Commerce, IEEE Comm.",
                "Magazine, Sept. 1999, pp. 64-67. [4] Eckehard Doerry, An Empirical Comparison of Copresent and Technologically-mediated Interaction based on Communicative Breakdown, Phd Thesis, Graduate School of the University of Oregon, 1995. [5] H. P. Dommel and J.J. Garcia-Luna-Aceves, Floor Control for Multimedia Conferencing and Collaboration, J. Multimedia Systems, Vol. 5, No. 1, January 1997, pp. 23-38. [6] Amitava Dutta-Roy, Virtual Meetings with desktop conferencing, IEEE Spectrum, July 1998, pp. 47-56. [7] M. Handley and V. Jacobson, SDP: Session Description Protocol, RFC 2327, IETF, April 1998. [8] M. Handley, J. Crowcroft et al., Very large conferences on the Internet: the Internet multimedia conferencing architecture, Journal of Computer Networks, vol. 31, No. 3, Feb 1999, pp. 191-204. [9] ITU-T Rec.",
                "H.323, Packet based Multimedia Communications Systems, vol. 2, 1998. [10] P. Koskelainen, H. Schulzrinne and X. Wu, A SIP-based Conference Control Framework, NOSSDAV02, May 2002, pp. 53-61. [11] R Venkatesha Prasad et al., Control Protocol for VoIP Audio Conferencing Support, International Conference on Advanced Communication Technology, Mu-Ju, South Korea, Feb 2001, pp. 419-424. [12] R Venkatesha Prasad et al., Automatic Addition and Deletion of Clients in VoIP Conferencing, 6th IEEE Symposium on Computers and Communications, July 2001, Hammamet, Tunisia, pp. 386-390. [13] R Venkatesha Prasad, H S Jamadagni, Abjijeet, et al Comparison of Voice Activity Detection Algorithms, 7th IEEE Symposium on Computers and Communications.",
                "July 2002, Sicily, Italy, pp. 530-535. [14] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, A Scalable Distributed VoIP Conferencing using SIP, Proc. of the 8th IEEE Symposium on Computers and Communications, Antalya, Turkey, June 2003. [15] R Venkatesha Prasad, H S Jamadagni and H N Shankar, On Problem of Specifying Number of Floors in a Voice Only Conference, To appear in IEEE ITRE 2003. [16] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, A Proposal for Distributed Conferencing on SIP using Conference Servers, To appear in the Proc. of MMNS 2003, Belfast, UK, September 2003. [17] R. Venkatesha Prasad, H.S.",
                "Jamadagni, J. Kuri, R.S.",
                "Varchas, A Distributed VoIP Conferencing Support Using Loudness Number, Tech.",
                "Rep. TR-CEDT-TE-03-01 [18] M. Radenkovic et al, Scaleable and Adaptable Audio Service for Supporting Collaborative Work and Entertainment over the Internet, SSGRR 2002, LAquila, Italy, Jan. 2002. [19] M. Radenkovic, C. Greenhalgh, S. Benford, Deployment Issues for Multi-User Audio Support in CVEs, ACM VRST 2002, Nov. 2002, pp. 179-185. [20] Srinivas Ramanathan, P. Venkata Rangan, Harrick M. Vin, Designing Communication Architectures for Interorganizational Multimedia Collaboration, Journal of Organizational Computing, 2 (3&4), pp.277-302, 1992. [21] A.",
                "B. Roach, Session Initiation Protocol (SIP)-Specific Event Notification, RFC 3265, IETF, June 2002. [22] J. Rosenberg, H. Schulzrinne et al., SIP: Session Initiation Protocol, RFC 3261, IETF, June 2002. [23] J. Rosenberg, H. Schulzrinne, Models for Multy Party Conferencing in SIP, Internet Draft, IETF, July 2002. [24] H. Schulzrinne et al., RTP: a transport protocol for realtime applications, RFC 1889, IETF, Jan 1996. [25] Lisa R. Silverman, Coming of Age: Conferencing Solutions Cut Corporate Costs, White Paper, www.imcca.org/wpcomingofage.asp [26] Kundan Singh, Gautam Nair and Henning Schulzrinne, Centralized Conferencing using SIP, Proceedings of the 2nd IP-Telephony Workshop (IPTel), April 2001. [27] D. Thaler, M. Handley and D. Estrin, The Internet Multicast Address Allocation Architecture, RFC 2908, IETF, Sept. 2000."
            ],
            "original_annotated_samples": [
                "There is a threshold on the number of <br>simultaneous speaker</br>s above which increasing the number of speakers becomes counterproductive to conference quality.",
                "Fixing the maximum number of <br>simultaneous speaker</br>s is dealt in a recent work [15] using Ethnomethodology, and is conjectured to be three.",
                "Additionally, we incorporate a result from a more recent work [15] where the sufficiency of three <br>simultaneous speaker</br>s has been demonstrated."
            ],
            "translated_annotated_samples": [
                "Existe un umbral en el número de <br>oradores simultáneos</br> por encima del cual aumentar el número de oradores se vuelve contraproducente para la calidad de la conferencia.",
                "La fijación del número máximo de <br>hablantes simultáneos</br> se aborda en un trabajo reciente [15] utilizando la Etnometodología, y se postula que es tres.",
                "Además, incorporamos un resultado de un trabajo más reciente [15] donde se ha demostrado la suficiencia de tres <br>hablantes simultáneos</br>."
            ],
            "translated_text": "Problemas de implementación de un sistema de conferencias VoIP en un entorno de conferencias virtuales. R. Venkatesha Prasad y Richard Hurni. Jamadagni iii H.N. Shankar iv i, iii Centro de Diseño y Tecnología Electrónica Instituto Indio de Ciencias, Bangalore, India Teléfono: +91 80 360 0810 i, iii {vprasad, hsjam}@cedt.iisc.ernet.in ii hurni@ieee.org iv hn_shankar@yahoo.com RESUMEN Los servicios en tiempo real han sido principalmente respaldados en redes conmutadas por circuitos. Las tendencias recientes favorecen los servicios trasladados a redes de conmutación de paquetes. Para las conferencias de audio, necesitamos considerar muchos aspectos, como la escalabilidad, la calidad de la aplicación de conferencia, el control de piso y la carga en los clientes/servidores, por nombrar algunos. En este documento, describimos un marco de servicio de audio diseñado para proporcionar un Entorno de Conferencias Virtuales (ECV). El sistema está diseñado para dar cabida a un gran número de usuarios finales hablando al mismo tiempo y distribuidos por Internet. El marco se basa en Servidores de Conferencia [14], que facilitan el manejo del audio, mientras que explotamos las capacidades de SIP para propósitos de señalización. La selección de clientes se basa en un reciente cuantificador llamado Número de Volumen que ayuda a imitar una conferencia física cara a cara. Nos ocupamos de los problemas de implementación de la solución propuesta tanto en términos de escalabilidad como de interactividad, mientras explicamos las técnicas que utilizamos para reducir el tráfico. Hemos implementado una aplicación de Servidor de Conferencias (CS) en una red de campus en nuestro Instituto. Categorías y Descriptores de Temas C.2.4 [Redes de Computadoras y Comunicación]: Sistemas Distribuidos - Cliente/Servidor, aplicaciones distribuidas. Términos generales Algoritmos, Rendimiento, Diseño, Teoría. 1. INTRODUCCIÓN El Internet de hoy utiliza el conjunto de protocolos IP que fue diseñado principalmente para el transporte de datos y proporciona la entrega de datos con el mejor esfuerzo. Las restricciones de retraso y las características diferencian los datos tradicionales por un lado, de las aplicaciones de voz y video por el otro. Por lo tanto, a medida que se implementan aplicaciones de voz y video cada vez más sensibles al tiempo en Internet, se pone de manifiesto la insuficiencia de la red. Además, buscamos trasladar servicios telefónicos a través de Internet. Entre ellos, la instalación de conferencia virtual (teleconferencia) está a la vanguardia. Las videoconferencias y conferencias de audio en Internet son populares por las varias ventajas que poseen. Claramente, el ancho de banda necesario para una videoconferencia a través de Internet aumenta rápidamente con el número de participantes; reducir el ancho de banda sin comprometer la calidad del audio es un desafío en la telefonía por Internet. Los problemas críticos adicionales son: (a) retraso de paquetes, (b) eco, (c) mezcla de audio de clientes seleccionados, (d) selección automática de clientes para participar en la conferencia, (e) reproducción de audio mezclado para cada cliente, (f) manejo de clientes que no son capaces de mezclar flujos de audio (estos clientes se conocen como clientes tontos), y (g) decidir el número de clientes activos simultáneamente en la conferencia sin comprometer la calidad de voz. Si bien todos los requisitos anteriores son desde el punto de vista tecnológico, la perspectiva de los usuarios y las interacciones también son factores esenciales. Hay mucha discusión entre la comunidad de HCI y CSCW sobre el uso de la Etnometodología para el diseño de aplicaciones de CSCW. El enfoque básico es proporcionar un ancho de banda más amplio, más instalaciones y mecanismos de control más avanzados, con miras a una mejor calidad de interacción. Este enfoque ignora la utilidad funcional del entorno que se utiliza para la colaboración. Eckehard Doerry [4] critica este enfoque diciendo que pone la forma antes que la función. Por lo tanto, la necesidad es adoptar un enfoque que considere ambos aspectos: el técnico y el funcional. En cuanto al aspecto funcional, nos referimos a [15] donde se ha tratado en cierto detalle. En este trabajo, no discutimos la videoconferencia; su inclusión no beneficia significativamente la calidad de la conferencia [4]. Nuestro enfoque está en entornos de audio virtuales. Primero describimos los desafíos encontrados en las conferencias de audio virtuales. Luego investigamos las motivaciones seguidas por la literatura relevante. En la Sección 5, explicamos la arquitectura de nuestro sistema. La sección 6 comprende la descripción de los diversos algoritmos utilizados en nuestra configuración. Abordamos problemas de implementación. Una discusión sobre el Instituto Federal Suizo de Tecnología, Lausana. Antiguo visitante en CEDT. PESIT y NIAS, Bangalore, India. El rendimiento sigue. Concluimos teniendo en cuenta algunos problemas de implementación. 2. DESAFÍOS EN LA VIDEOCONFERENCIA VoIP Surgen muchos desafíos al construir una aplicación VoIP. Lo siguiente es de particular preocupación en el proceso: • Facilidad de uso: la conferencia debe ser sencilla; los usuarios no necesitan experiencia en el dominio. La gestión (adición/eliminación) de clientes y servidores debe ser sencilla. El desarrollo de aplicaciones no debe presuponer características específicas del sistema subyacente o de las capas de red. La facilidad de uso puede incluir el aprovechamiento de tecnologías fácilmente disponibles, técnicamente factibles y económicamente viables. • Escalabilidad: Las conferencias deben parecer ininterrumpidas bajo cargas pesadas, es decir, cuando se agregan muchos usuarios adicionales. El tráfico en la WAN no debería aumentar apreciablemente con el número total de clientes; de lo contrario, esto podría provocar congestión. Por lo tanto, se necesita un medio para regular el tráfico al mínimo para este tipo de aplicaciones en tiempo real. • Interactividad: En Entornos de Conferencias Virtuales (ECVs), pretendemos una aplicación de conferencias cara a cara que imite una conferencia real, donde los participantes más vocales invitan la atención. El intercambio de turnos en la ocupación del espacio por parte de los participantes debe adaptarse con gracia para lograr una transición natural. • Estandarización: La solución debe cumplir con los estándares establecidos para lograr interoperabilidad y aceptación entre pares. Los requisitos anteriores se colocan en la perspectiva de las observaciones realizadas en trabajos anteriores (véase Secciones 3 y 4) y guiarán el diseño del VCE. 3. La motivación Ramanathan y Rangan [20] han estudiado en detalle las configuraciones arquitectónicas comparando muchos esquemas de arquitectura de conferencias teniendo en cuenta la demora de red y los requisitos de computación para la mezcla. La división funcional y el diseño de arquitectura orientada a objetos que ayudan en la implementación se presentan en [1]. Un resumen de muchos temas relacionados con el apoyo a una conferencia grande se aborda en [8]. H. P. Dommel [5] y muchos otros destacan el control de piso como otro aspecto fundamental a tener en cuenta en el diseño de una herramienta de conferencias. Los protocolos de control de conferencias fuertemente acoplados en Internet pertenecen a la familia ITU-T H.323 [9]; sin embargo, están principalmente diseñados para conferencias pequeñas. El último borrador del IETF de Rosenberg y Schulzrinne [23] discute modelos de conferencia con SIP [22] en el fondo. Los aspectos de implementación para la conferencia SIP centralizada se informan en [26]. Un nuevo enfoque llamado mezcla parcial por Radenkovic [18] permite que flujos mezclados y no mezclados coexistan. En todas las propuestas anteriores, si bien hay algunas sugerencias muy útiles, comparten una o más de las siguientes limitaciones: • En una conferencia de audio, no es necesario mezclar los flujos de todos los clientes. De hecho, mezclar muchas corrientes arbitrarias [24] de clientes degrada la calidad de la conferencia debido a la reducción en el volumen (aspecto espacial del habla). El número de flujos mezclados varía dinámicamente dependiendo del número de participantes activos. Esto provocaría fluctuaciones en el volumen de cada participante individual, causando una degradación severa en la calidad. La mezcla personalizada de flujos no es posible cuando hay muchos clientes activos. Existe un umbral en el número de <br>oradores simultáneos</br> por encima del cual aumentar el número de oradores se vuelve contraproducente para la calidad de la conferencia. La fijación del número máximo de <br>hablantes simultáneos</br> se aborda en un trabajo reciente [15] utilizando la Etnometodología, y se postula que es tres. Por lo tanto, es recomendable respetar esa restricción. • No puede haber muchos mezcladores intermedios (similarmente, Servidores de Conferencia como en [10]) en etapas como en [20] porque provoca un retraso desmedido al aumentar el número de saltos y no es escalable con la interactividad como enfoque. • El Control de Piso para una conferencia de audio (incluso de video) con instrucciones explícitas de toma de turnos para los participantes convierte la conferencia en esencia en un asunto de un orador a la vez, no en una en vivo y libre de interrupciones. De esta manera, la conferencia se vuelve notablemente artificial y su calidad se degrada. Schulzrinne et al. [24], asumen que solo un participante está hablando en un momento dado. En este caso, si las aplicaciones se implementan con cierto control [5], el servicio se vuelve asfixiante para los usuarios. • La mezcla parcial [18] tiene un problema similar al de la mezcla cuando se mezclan más flujos. Además, en [18], para permitir el discurso improvisado, la mezcla no se realiza cuando la red puede soportar altos requisitos de ancho de banda para enviar/recibir todas las transmisiones, pero es innecesaria [15]. • Para conferencias grandes [23, 10] una conferencia centralizada no puede escalar. Con la multidifusión, los clientes tendrán que analizar muchos flujos y el tráfico en la red de los clientes aumenta innecesariamente. Evidentemente, se abordan diferentes problemas particulares, todos los cuales son un subconjunto de los requisitos (definidos en [14] y [16]) para el soporte de conferencias de VoIP. Por lo tanto, es necesario abordar la conferencia en su totalidad teniendo en cuenta todos sus requisitos de manera simultánea. Con este objetivo, el sistema de conferencias VoIP que proponemos está diseñado para ser escalable e interactivo. Hacemos uso del Número de Sonoridad para implementar el control de volumen. Esto permite a un participante entrar libremente en el modo de hablar para interrumpir al orador actual como en una reunión natural cara a cara. Un límite superior en el número de pisos (es decir, el número de oradores permitidos para hablar al mismo tiempo) se fija utilizando una conjetura propuesta en [15]. El trabajo presentado aquí es una continuación de nuestros estudios sobre conferencias basadas en el Protocolo de Inicio de Sesión en [14] y [16]. SIP, definido en [22], es ahora el estándar más popular para implementación de VoIP y ha sido elegido por su fortaleza, facilidad de uso, extensibilidad y compatibilidad. Esta es la razón por la cual estará en el trasfondo de todos los mensajes de control que surgirán implícitamente entre las entidades en nuestra arquitectura. Los mensajes actuales están descritos en [16] y, como tal, no presentamos una descripción completa de ellos aquí. 4. TRABAJO RELACIONADO El estándar SIP definido en el RFC 3261 [22] y en extensiones posteriores como [21] no ofrece servicios de control de conferencias como control de piso o votación y no prescribe cómo debe ser gestionada una conferencia. Sin embargo, SIP se puede utilizar para iniciar una sesión que utilice algún otro protocolo de control de conferencias. La especificación central de SIP soporta muchos modelos para conferencias [26, 23]. En los modelos basados en servidor, un servidor mezcla flujos de medios, mientras que en una conferencia sin servidor, la mezcla se realiza en los sistemas finales. SDP [7] se puede utilizar para definir las capacidades de los medios y proporcionar otra información sobre la conferencia. Ahora consideraremos algunos modelos de conferencia en SIP que han sido propuestos recientemente [23]. Primero, veamos los modelos sin servidor. En la mezcla de extremos del sistema, solo un cliente (SIP UA) maneja la señalización y la mezcla de medios para todos los demás, lo cual claramente no es escalable y causa problemas cuando ese cliente en particular abandona la conferencia. En el modelo de Usuarios que se unen, un árbol crece, ya que cada parte invitada constituye una nueva rama en el camino de distribución. Esto conduce a un número creciente de saltos para las hojas remotas y no es escalable. Otra opción sería utilizar la multidifusión para las videoconferencias, pero actualmente la multidifusión no está habilitada en Internet y solo es posible en una LAN. Entre los modelos basados en servidor, en una conferencia de marcado, los UAs se conectan a un servidor central que maneja todas las mezclas. Este modelo no es escalable ya que está limitado por la potencia de procesamiento del servidor y el ancho de banda de la red. Las conferencias centralizadas ad hoc y los servidores de conferencias de marcado tienen mecanismos y problemas similares. Los modelos híbridos que involucran señalización centralizada y medios distribuidos, con estos últimos utilizando unicast o multicast, plantean problemas de escalabilidad como antes. Sin embargo, una ventaja es que el control de la conferencia puede ser una solución de terceros. La Mezcla Parcial Distribuida, presentada en [18], propone que en caso de limitación de ancho de banda, algunos flujos se mezclan y otros no, manteniendo la interactividad intacta. La pérdida de espacialidad cuando se mezclan y el aumento del ancho de banda cuando no lo hacen son problemas abiertos. Un estudio relacionado [19] del mismo autor propone una arquitectura de conferencias para Entornos Virtuales Colaborativos (CVEs) pero no proporciona el enfoque de escalabilidad sin la disponibilidad de la multidifusión. Teniendo en cuenta las limitaciones de los sistemas de conferencias propuestos, detallaremos ahora nuestra propuesta. 5. ARQUITECTURA DEL SISTEMA Esta sección está dedicada a la descripción de la arquitectura del sistema propuesto. Sin embargo, dado que este documento constituye la continuación de nuestro trabajo iniciado en [14] y ampliado en [16], no presentaremos aquí todos los detalles sobre las entidades propuestas e invitamos a los lectores a consultar los documentos mencionados anteriormente para obtener una descripción completa y detallada. Primero, no restringimos nuestro sistema de conferencias para funcionar solo en conferencias pequeñas, sino en grandes VCEs de audio que tienen cientos (o incluso miles) de usuarios a través de una Red de Área Amplia (WAN) como Internet. Esta perspectiva se deriva de una evaluación de que los VCEs ganarán importancia en el futuro, ya que las conferencias de audio interactivas serán más populares debido a la difusión de la cultura mediática en todo el mundo. Dos aspectos deben ser atendidos al construir un sistema de conferencias VoIP: (i) el front-end, que consiste en el programa de aplicación que se ejecuta en las computadoras de los usuarios finales y (ii) el back-end que proporciona otros programas de aplicación que facilitan las conferencias y la conferencia. Los usuarios participantes se agrupan en varios dominios. Estos dominios son Redes de Área Local (LAN), como redes corporativas o educativas. Esta suposición distribuida requiere soluciones de control y manejo de medios distribuidos, ya que los sistemas centralizados no serían escalables para conferencias tan grandes (ver Sección 4). Más explícitamente, en cada dominio, podemos identificar varios componentes lógicos relevantes de una instalación de conferencias (Fig. 1): Un número arbitrario de usuarios finales (clientes) que pueden participar en como máximo una conferencia de audio a la vez. Cada usuario es la Fig. 1. Ejemplo de conferencia: 3 dominios que contienen las entidades necesarias para que la conferencia pueda tener lugar. Incluidas en un único dominio en un instante dado, pero pueden moverse de un dominio a otro (nomadismo). En nuestro entorno de conferencias, estos clientes son Agentes de Usuario SIP (SIP UAs) regulares, según se define en [22], para lograr interoperabilidad con otros sistemas compatibles con SIP existentes. Estos clientes no son conscientes del entorno complejo que respalda la conferencia, lo cual se destaca a continuación. Un servidor SIP (SIPS) por dominio, encargándose de todos los aspectos de señalización de la conferencia (clientes que se unen, salen, etc.) [16]. En particular, se considera como una implementación física que abarca diferentes roles lógicos, a saber, un Servidor Proxy SIP, un Servidor Registrador SIP, un Servidor de Redirección SIP y un SIP B2BUA (Agente de Usuario de Vuelta a Vuelta) [22]. Esta implementación física permite el manejo de mensajes SIP entrantes/salientes por una u otra entidad lógica según sea necesario. SIPS está encargado de mantener un servicio total y tiene muchas ventajas, como (a) funciona como una entidad centralizada que puede hacer un seguimiento de las actividades de los UAs en una conferencia; (b) puede realizar todo el cambio para proporcionar funciones de PBX; (c) puede localizar a los UAs e invitarlos a una conferencia; (d) también puede encargarse de la facturación. Los SIPS en diferentes dominios se comunican entre sí utilizando mensajes SIP como se describe en [16]. Si la carga en un SIPS particular es demasiado pesada, puede crear otro SIPS en el mismo dominio para que la carga se comparta. Se crea un Servidor de Conferencias Maestro (M-CS) (simplemente un Servidor de Conferencias (CS)) para cada conferencia por el SIPS local cuando una conferencia comienza. Este servidor se utilizará para manejar paquetes de medios para los clientes del dominio. Su mecanismo será descrito en la siguiente sección. El M-CS podrá crear una jerarquía de CSs dentro de un dominio agregando uno o más CSs esclavos (S-CSs) para dar cabida a todos los clientes activos y prevenir su propia saturación al mismo tiempo. Veremos este mecanismo con cierto detalle en la secuela. Las entidades descritas aquí son exhaustivas y se ajustan a la filosofía del SIP. Por lo tanto, el uso de SIP hace que esta arquitectura sea más útil e interoperable con cualquier otro cliente o servidor SIP. PROBLEMAS ALGORÍTMICOS 6.1 Seleccionar los flujos similares a SipConf en [27], un Servidor de Conferencias (CS) [17] tiene la función de soportar la conferencia; es responsable de manejar los flujos de audio utilizando RTP. También puede duplicarse para convertir formatos de transmisión de audio para un cliente dado si es necesario y puede funcionar como Traductores/Mezcladores de la especificación RTP detrás de cortafuegos. Hemos basado el diseño de nuestro CS en el Procesador Multipunto (MP) H.323 [9]. En resumen, el MP recibe flujos de audio de los puntos finales involucrados en una conferencia multipunto centralizada o híbrida, los procesa y los devuelve a los puntos finales. Un procesador de señales de audio prepara N salidas de audio NMax a partir de M flujos de entrada después de la selección, mezcla o ambas. La mezcla de audio requiere decodificar el audio de entrada a señales lineales (PCM o analógicas), realizar una combinación lineal de las señales y volver a codificar el resultado en un formato de audio apropiado. El procesador de señales puede eliminar o atenuar algunas de las señales de entrada para reducir el ruido y los componentes no deseados. Fig. 2. \n\nFig. 2. El diagrama esquemático de un CS. La limitación de H.323 es que no aborda la escalabilidad de una conferencia. La arquitectura propone una topología en cascada o en cadena de margaritas [10], la cual se puede demostrar que no puede escalar para una conferencia grande. Un CS atiende a muchos clientes en la misma conferencia. Por lo tanto, solo maneja una conferencia a la vez. Varios CS pueden coexistir en un dominio, como cuando hay varias conferencias en curso. Los mensajes relacionados con la señalización de los CSs se tratan en [11]. El funcionamiento de un CS se ilustra en la Fig. 2: Para cada intervalo de mezcla, CS 1 elige los mejores NMax paquetes de audio de los M1 (utilizando un criterio denominado Número de Volumen, descrito en la siguiente subsección). Puede posiblemente recibir y enviar estos a CSs 2 a P. El conjunto de paquetes enviados se denota como AotrosCSs. En el mismo intervalo de mezcla, también recibe los mejores paquetes de audio NMax (de un posible M2) de CS 2, de manera similar a los mejores NMax (de un posible MP) de CS P. Para simplificar, ignoramos el retardo de propagación entre los CSs, que de hecho se puede tener en cuenta; está más allá del alcance de esta presentación. El conjunto de paquetes recibidos se denota como FromOtherCSs. Finalmente, selecciona los mejores paquetes NMax del conjunto {ToOtherCSs unión FromOtherCSs} y envía estos paquetes a su propio grupo. Se puede observar que el conjunto {ToOtherCSs unión FromOtherCSs} es el mismo en todos los CSs. Esto garantiza que cualquier cliente en la conferencia finalmente reciba el mismo conjunto de paquetes para mezclar. Por lo tanto, todos los clientes obtienen una vista común de la conferencia. De manera similar, para cada intervalo de tiempo (tiempo de paquete), se selecciona un subconjunto, F, de todos los clientes (utilizando el mismo criterio) del conjunto de paquetes de todos los otros CS más los NMax clientes seleccionados localmente. Sus paquetes se mezclan y se reproducen en los clientes. Según [15], la cardinalidad de F, |F| es NMax y está fijada en tres. En nuestra configuración de conferencias, la selección la realiza el Servidor Maestro de Conferencias (M-CS), que interviene exclusivamente en el manejo de medios. Ten en cuenta que aunque la especificación de SIP permite la comunicación directa de medios de usuario a usuario en una llamada uno a uno, también es posible utilizar el Servidor de Conferencias para llamadas de dos partes, especialmente porque es entonces más funcional crear una conferencia real agregando un tercero y posteriormente más participantes. Existen casos en los que la capacidad de procesamiento de un M-CS se ve superada, ya que puede tener demasiados paquetes, tanto de dominios locales como de dominios remotos, para procesar. En ese caso, el M-CS creará uno o varios S-CS (Fig. 6) y transferirá a sus propios clientes, así como a los nuevos clientes, a ellos. En esta configuración, el algoritmo descrito anteriormente se modificará ligeramente, ya que los paquetes de audio irán de los clientes a su S-CS dedicado, que seleccionará NMax paquetes para enviar al M-CS local, que luego seleccionará NMax paquetes de todos sus S-CS en el dominio antes de enviarlos a los dominios remotos. Los paquetes entrantes de otros dominios serán recibidos por el M-CS, se seleccionarán NMax de ellos y se enviarán directamente a los clientes del dominio, evitando los SCSs. Este cambio implica que existen como máximo tres entidades intermedias para cada paquete de audio, en lugar de dos en la configuración convencional. Dado que el salto adicional ocurre dentro de la LAN que se supone tiene una conectividad de alta velocidad, consideramos que no debería impedirnos usar esta jerarquía de CS cuando sea necesario hacerlo. 6.2 Número de Sonoridad (LN) Una pregunta básica que debe responder el CS es la siguiente. En un intervalo de mezcla, ¿cómo debería elegir NMax paquetes de los M que podría recibir? Una forma es clasificar los paquetes M recibidos según sus energías y elegir los NMax mejores. Sin embargo, esto suele considerarse insuficiente porque las fluctuaciones aleatorias en las energías de los paquetes pueden provocar una mala calidad de audio. Esto indica la necesidad de una métrica diferente de meras energías individuales de paquetes. El medidor debe tener las siguientes características [12]: • Un hablante (ocupante del suelo) no debe ser interrumpido por un pico en la energía del paquete de otro hablante. Esto implica que la historia del discurso de un hablante debería tener cierto peso. Esto se suele llamar Persistencia o Resaca. • Un participante que quiera interrumpir a un orador tendrá que (i) hablar en voz alta y (ii) seguir intentándolo por un tiempo breve. En una conferencia presencial, el lenguaje corporal a menudo indica la intención de interrumpir. Pero en una conferencia a ciegas en discusión, la intención de un participante de interrumpir puede ser transmitida de manera efectiva a través de LN. Se debe garantizar un mecanismo de control de piso habilitado para cortar a un orador de manera contundente. Estos requisitos son cumplidos por el Número de Volumen [12], que cambia suavemente con el tiempo para que la selección (adición y eliminación) de clientes para la conferencia sea elegante. LN (= ) es una función de la amplitud de la corriente de audio actual más la actividad y amplitud en una ventana específica en el pasado. Fig. 3. \n\nFig. 3. Las diferentes ventanas utilizadas para el cálculo de LN se actualizan en una base de paquete por paquete. El parámetro básico utilizado aquí es la amplitud del paquete, que se calcula como la raíz cuadrada de la media cuadrática (rms) de las energías en las muestras de audio de un paquete, y se denota como XK. Tres ventanas están definidas como se muestra en la Fig. 3. El nivel de amplitud actual del altavoz se encuentra calculando el promedio móvil de la amplitud del paquete (XK) dentro de una ventana llamada Ventana de Pasado Reciente, que va desde el instante presente hasta algún momento pasado. La actividad pasada del hablante se encuentra calculando el promedio móvil de la amplitud del paquete (XK) dentro de una ventana llamada Ventana de Pasado Lejano, que comienza en el punto donde termina la ventana de Pasado Reciente y se extiende hacia atrás en el pasado por un intervalo predefinido. La actividad del hablante en el pasado se encuentra con una ventana llamada Horizonte de Actividad, que abarca la ventana del pasado reciente, así como la ventana del pasado lejano y más allá si es necesario. Aunque la contribución del horizonte de actividad parece similar a la contribución de las ventanas del pasado reciente y pasado lejano, la actividad pasada se calcula de manera diferente a partir de la ventana del horizonte de actividad. Define las cantidades durante estos tres intervalos como L1, L2 y L3. L1 cuantifica la actividad de habla del Pasado Reciente, L2 la actividad de habla del Pasado Lejano y L3 proporciona un número correspondiente a la actividad de habla en la ventana del Horizonte de Actividad, cuantificando qué tan activo estuvo el hablante en los últimos intervalos. L3 produce una cantidad que es proporcional a la fracción de paquetes que tienen energías por encima de un umbral predefinido (Ec. 3). El umbral es invariable entre clientes. ∑ +− = = 1 1 1 RPP P Wt tK K RP X W L (1) ∑ +−− −= = 1 2 1 DPRPP RPP WWt WtK K DP X W L (2) ∑ +− = ≥= 1 }{3 * 1 AHP P K Wt tK X AH I W L θθ (3) Donde siI KX 1}{ =≥θ θ≥KX = de lo contrario,0 El umbral es una constante. Se establece en el 10-20 por ciento de la amplitud de las muestras de voz de un paquete en nuestra implementación aquí. El número de intensidad λ para el instante de tiempo presente (o el paquete presente) se calcula como, 332211 *L*L*L αααλ ++= (4) Aquí 1, 2 y 3 son elegidos de tal manera que: 0< 1, 2 y 3=1- 1) Aquí, 1 es el peso dado al habla del pasado reciente, 2 es el peso dado al habla del pasado lejano y 3 es el peso dado a la actividad del habla en la ventana de horizonte de actividad considerada. 6.3 Seguridad, Vida y Equidad El parámetro λ tiene un efecto significativo en la evaluación de la ventana. Después de que un conferenciante se queda en silencio, otro puede tomar la palabra. Además, dado que hay más de un canal, la interrupción está habilitada. Un conferenciante ruidoso es más probable que sea escuchado debido a un λ elevado. Esto garantiza equidad para todos los conferenciantes. Después de todo, incluso en una conferencia presencial, un orador más vocal capta una atención especial. Todas estas características deseables están integradas en la LN. Una discusión exhaustiva sobre la selección de los diversos parámetros y la dinámica de LN están fuera del alcance de este documento. 6.4 Algoritmo de selección utilizando LN Siguiendo los desarrollos en las subsecciones 6.1 y 6.2, presentamos el algoritmo simple que se ejecuta en cada Servidor Maestro-Conferencia (Algoritmo 1). Este algoritmo se basa en las discusiones de la sección 6.1. El conjunto F, único a nivel mundial, se encuentra utilizando este procedimiento. Repetir para cada intervalo de tiempo en cada M-CS { 1. Obtener todos los paquetes de los clientes que le pertenecen. 2. Encuentra como máximo NMax clientes que tengan un PD[LPXP RXW RI 0 &OLHQWV LQ LWV GRPDLQ\u0011 3. Almacene una copia de los paquetes de esos clientes NMax en la base de datos DB1. Envía estos paquetes NMax a otros M-CSs (en Unicast o Multicast, dependiendo de la configuración). 5. De igual manera, recibir paquetes de todos los demás M-CSs y almacenarlos en la base de datos DB2. 6. Ahora compara los paquetes en DB1 y DB2 en WKH EDVLV RI DQG VHOHFW D PD[LPXP RI NMax entre ellos (para formar el conjunto F) que deberían ser reproducidos en cada Cliente. 7. Enviar los paquetes NMax en el conjunto F a los Clientes en su dominio. 8. Mezcla estos paquetes de audio NMax en el conjunto F después de linearizarlos y envíalos a Clientes sin capacidad en el dominio. Algoritmo 1. Algoritmo de selección El mecanismo propuesto aquí también se muestra en la Fig. 6, donde tiene lugar una única conferencia entre tres dominios. Los clientes sombreados son los seleccionados en sus dominios locales; sus flujos de audio serán enviados a otros CSs. 7. PROBLEMAS DE DESPLIEGUE Ahora analizamos los problemas de despliegue asociados con la gestión de conferencias. ¿Cómo deben organizarse los dominios para maximizar el número de participantes que pueden unirse? Para abordar esto, definimos algunos parámetros útiles.  Sea d el número de dominios diferentes en los que hay clientes activos en una conferencia dada.  Sea Mi el número de clientes activos presentes en el dominio i (di ≤≤1) en una conferencia dada. El número total de clientes activos en la conferencia es por lo tanto ∑= = d i iMM 1. Sea C el número máximo de flujos de audio que un Servidor de Conferencias puede manejar en un tiempo de paquete, también llamado capacidad. C se establece de acuerdo con la potencia de procesamiento del CS más débil en la conferencia, pero como no se puede asumir que lo conocemos de antemano, se puede establecer de acuerdo con algún requisito mínimo del sistema que una máquina debe cumplir para participar en una conferencia. Deje que NMax sea el número de flujos de salida que un CS debe enviar a otros CS en dominios remotos (ver sección 6.1). Estableceremos NMax = 3 (=|F|), según [15]. El problema de optimización consiste en encontrar el valor de d que maximiza el número total de clientes Mi atendidos por un CS en un dominio con capacidad C. Primero consideramos el caso en el que la capacidad no es excedida (el CS existente no está sobrecargado), y luego procedemos al caso en el que es necesario crear más CS cuando un CS único está sobrecargado. Suponemos que los clientes están distribuidos de manera equitativa entre los dominios, ya que no tenemos información para asumir una distribución a priori de los clientes. Podemos especificar únicamente un límite superior en el número de clientes aceptables, dado el número de dominios activos d. 7.1 Conferencias con solo un nivel de CSs En esta subsección, consideramos que tenemos solo un CS, es decir, un único M-CS en cada dominio. Por lo tanto, no se puede sobrecargar. Consideramos que el sistema funciona tal como se describe en la sección 6.1: Los clientes envían sus paquetes de audio a su CS local, que selecciona NMax flujos antes de enviarlos a otros CS. De manera paralela, también recibe NMax transmisiones para cada otro CS antes de tomar una decisión sobre cuáles de las NMax transmisiones serán seleccionadas, enviadas y reproducidas en cada cliente individual. Para la estabilidad del sistema, cualquier servidor de conferencias debería ser capaz de manejar a sus clientes locales además de los paquetes de audio de otros dominios. Claramente entonces, la siguiente desigualdad debe cumplirse para todo dominio: )1( −⋅+≥ dN d M C Max (5) El caso límite de (5) (tomando la igualdad) toma la forma 2 )( dNdNCM MaxMax ⋅−⋅+= (6) Para optimizar d con respecto a M, establecemos 0)(2 =+−⋅⋅= ∂ ∂ MaxMax NCdN d M (7) obteniendo     ⋅ + = Max Max N NC d 2 (8) ([ ]* = Redondeando al entero más cercano) y por lo tanto, M de (6). Tabla 1. Valores de d y M calculados para algunos valores de C con NMax = 3. En la Tabla 1, se presentan los valores de d y M que fueron calculados utilizando (8) y (6) con NMax = 3. Vemos que los valores de d y M, al depender de C, se basan en el CS más débil. Vemos que hay un equilibrio entre M y d. Podríamos admitir más dominios en la conferencia, pero a costa de restringir el número total de clientes M en la conferencia. Durante la implementación y prueba de los Servidores de Conferencia en un Pentium III 1.4 GHz con Windows NT, pudimos establecer C=300. Pero con la llegada de computadoras más rápidas (> 3 GHz), uno puede fácilmente establecer C a valores más altos y determinar d y M en consecuencia. La Fig. 4 muestra un mapa de contorno y la Fig. 5, una malla 3D que muestra soluciones optimizadas para CSs de diferentes capacidades. Estos nos llevan a maximizar el número de dominios, y por lo tanto, a maximizar el número total de clientes basado en la capacidad de varios CSs. En la Fig. 4, las curvas individuales representan el número total de clientes objetivo, y seleccionamos un valor más bajo de d, para la capacidad C, para el objetivo M con el fin de reducir el tráfico en la WAN. La Fig. 5 representa una perspectiva diferente de los mismos datos en 3D. Fig. 4. \n\nFig. 4. Diagrama de contorno de la capacidad versus el número óptimo de dominios para varios tamaños de conferencias 7.2 Conferencias con Dos Niveles de CSs. Ahora considerando el caso en el que el número de clientes en un dominio particular es demasiado grande, es decir, d M Mi ≥ (9), se debe evitar la denegación de servicio para nuevos clientes debido a la sobrecarga del Servidor de Conferencias. Este problema se puede resolver introduciendo un segundo nivel de CSs dentro del dominio dado, como se muestra en la Figura 6. El M-CS existente crea un CS esclavo (S-CS) que puede manejar hasta C usuarios finales y al que transfiere todos sus clientes activos. Aquí, el sistema funciona de manera diferente como se describe en la sección 6.1: Los clientes envían sus paquetes de audio a su S-CS local, que selecciona NMax flujos, antes de enviarlos a un M-CS local, que procederá de la misma manera, antes de enviar NMax flujos a los otros dominios. Cada S-CS recién creado debe ejecutarse en una máquina separada. El M-CS tiene que crear más S-CSs si el número de clientes activos supera C durante el transcurso de la conferencia después de la transferencia. Con este mecanismo, el M-CS podrá crear un máximo de     −⋅− = Max Max N dNC U )1( S-CSs, (10) ya que debe manejar 3 (= NMax) paquetes para cada S-CS local y 3 (= NMax) paquetes de cada otro dominio remoto. Podemos entonces calcular el número máximo teórico de clientes activos CUMi ⋅= en cada dominio, así como M, para toda la conferencia como CUdM ⋅⋅= . Fig. 5. Gráfico 3D de Capacidad versus Número óptimo de dominios para varios tamaños de conferencia. Por supuesto, se podría crear un tercer nivel en la jerarquía, lo que daría la posibilidad de alojar aún más clientes. Esto puede ser innecesario ya que el número de posibles clientes es lo suficientemente grande con dos niveles. 8. DISCUSIÓN DE RENDIMIENTO Ahora analizamos el rendimiento del algoritmo presentado en la subsección 6.3, es decir, el que se encarga del intercambio de paquetes de audio entre los diferentes dominios. Ten en cuenta que los paquetes que están en tránsito dentro de la LAN aprovechan la mayor capacidad (generalmente junto con capacidades de multidifusión) y por lo tanto no requieren un análisis de rendimiento. Por lo tanto, debemos examinar solo los paquetes RTP a través de la WAN, es decir, entre los M-CS participantes. Dado que cada M-CS de un dominio solo enviará NMax de los d paquetes M a los otros CS (MaxN d M >>), el ancho de banda utilizado por la aplicación en una WAN está limitado por la siguiente expresión. El número total de paquetes de audio que transitan por la WAN para cada intervalo de tiempo es ∑ ∑= ≠=        d i d ijj MaxN 1 ,1, lo cual es cuadrático en el número de dominios (es decir, O(d2)). Sin embargo, es independiente del número total de clientes activos. Esto no habría sido el caso si todos los paquetes se hubieran enviado por la red en cada intervalo de tiempo. El ahorro es tremendo. Sin embargo, se podría argumentar que enviar tres paquetes hacia y desde todos los dominios es un desperdicio de recursos, ya que la mayoría de estos flujos no serán seleccionados. Si solo hay un cliente activo, seleccionar un subconjunto de clientes en ese dominio es innecesario. Los algoritmos pesimistas y optimistas presentados en la secuela tienen como objetivo reducir aún más el tráfico aprovechando la naturaleza lenta y variable de la LN. 8.1 Algoritmo pesimista Consideremos un escenario en el que el LN más bajo (llamado LNt) de los tres flujos seleccionados globalmente (conjunto F de la Sección 6.1) excede el LN del flujo más dominante de un dominio. Evidentemente, las posibilidades de que los dos próximos flujos dominantes de ese dominio sean seleccionados para F en el próximo período de paquetes son menores. Aquí enviamos este flujo más dominante y retenemos los otros dos. Puede haber un error en la selección única en todos los dominios por un solo período de paquete. Como LN varía lentamente, el error se corregiría automáticamente en un período (ranura) de paquete posterior. En este algoritmo, hay al menos un flujo en cada período. El tráfico de red neto en un período de paquetes en el mejor caso es )1( −⋅ dd, es decir, )( 2 dO utilizando unicast, en lugar de MaxNdd ⋅−⋅ )1(. Se puede ahorrar un ancho de banda considerablemente valioso utilizando esta heurística. La complejidad del tráfico resultante se reduce de O(d2) a O(d) en redes habilitadas para multidifusión. Inicializar LNt = 0 en un M-CS/S-CS A. En el primer intervalo de tiempo (tiempo de paquete), cada CS envía las primeras NMax secuencias (basadas en su LN) a todos los demás CSs. En cada M-CS/S-CS y para cada tiempo de paquete: B. Encuentra el valor del LN más bajo de los flujos NMax seleccionados globalmente (conjunto F) del intervalo de tiempo anterior. Establece LNt con este valor. C. En cada dominio de CS, selecciona los NMax flujos locales que tengan el valor máximo de LN (conjunto ToOtherCSs). D. Seleccionar los flujos que tengan LN > LNt. Si hay >= NMax flujos con LN > LNt, entonces enviar los mejores NMax a otros CSs. EN OTRO CASO, si hay (NMax-1) flujos con LN>LNt, enviar los mejores (NMax-1) más el que esté por debajo de LNt (es decir, los mejores NMax) a otros CSs. EN OTRO CASO, si hay (NMax-2) flujos con LN>LNt, entonces enviar los mejores (NMax-2) más el que esté por debajo de LNt (es decir, los mejores (NMax-1)) a otros CSs. ... EN OTRO CASO, si NO hay flujos con LN>LNt, entonces enviar el mejor flujo a otros CSs. Los paquetes enviados en el paso D forman DB1. Los paquetes recibidos de otros CSs forman DB2. F. Para este intervalo de tiempo, encuentra flujos globales NMax basados en LN de DB1 y DB2 (conjunto F) G. Envía el conjunto F a los clientes en su dominio. Actualiza LNt para el próximo período. Algoritmo 2. Algoritmo pesimista para reducir el número de paquetes enviados por Internet. Fig. 6. \n\nFig. 6. Ejemplo de una jerarquía de 2 niveles de Servidores de Conferencias; los Clientes sombreados son los seleccionados por el M-CS y serán enviados a otros CSs de dominios. En este algoritmo, el ahorro en tráfico se logra a expensas de relajar la condición de formación del conjunto F globalmente único. Sin embargo, las discrepancias en los flujos seleccionados en diferentes dominios permanecen por un corto período de tiempo dependiendo del retraso en el transporte entre dos dominios. Incluso para un retraso total de 400 ms, con solo 10 ranuras de tiempo de paquete, se pierde la unicidad. Esta duración en una conversación interactiva en tiempo real no es perceptible por el oyente. En el caso de que haya una broma y todos se rían, entonces habría un aumento repentino en el número de paquetes y estaría limitado por MaxN)d(O 2 durante un corto período. 8.2 Algoritmo Optimista El tráfico puede reducirse aún más. El esquema en el siguiente algoritmo (Algoritmo 3) retiene todos los flujos que tienen un valor de LN menor que el mínimo de los tres en el conjunto F. Podemos encontrar los tres flujos correctos y únicos después de unos cuantos intervalos de tiempo, dependiendo del retraso de transporte entre los dominios. Dado que el período del paquete es del orden de 40 ms, el error en la selección es imperceptible. El número de flujos en la red en este caso siempre está restringido a NMax (=3). Incluso sin Detección de Actividad de Voz (VAD), en el mejor de los casos no habrá más de tres flujos en la red, por lo tanto, el tráfico total es constante. Una repentina oleada de tráfico, como se describe en la sección 8.1, es un caso particular. Estas ventajas se deben a la explotación de las características de LN. Inicializar LNt = 0 en un M-CS/S-CS A. En el primer intervalo de tiempo (tiempo de paquete), cada CS envía las primeras NMax secuencias (basadas en su LN) a todos los demás CS. En cada M-CS/S-CS y para cada tiempo de paquete: B. Encuentra el valor del LN más bajo de los flujos seleccionados globalmente de NMax (conjunto F) del intervalo de tiempo anterior. Establece LNt con este valor. C. En cada dominio de CS, selecciona los NMax flujos locales que tengan el valor máximo de LN (conjunto ToOtherCSs). D. Selecciona los flujos que tengan LN > LNt SI hay >= NMax flujos con LN > LNt, entonces envía los mejores NMax a otros CSs. EN OTRO CASO, si hay (NMax-1) flujos con LN>LNt, entonces enviar los primeros (NMax-1) y ver E. EN OTRO CASO, si hay (NMax-2) flujos con LN>LNt, entonces enviar los primeros (NMax-2) y ver E. ... EN OTRO CASO, si NO hay flujos con LN>LNt, entonces no enviar ningún flujo. E. Excepciones: SI el flujo que estaba en F en el último intervalo pertenece a este CS, entonces selecciona y envía ese flujo incluso si su LN es ahora < LNt. (Nota: esto ocurre solo en ese CS que tenía el flujo que fue el último de los tres en el período de paquetes anterior). Los paquetes enviados en los pasos D y E forman DB1. Los paquetes recibidos de otros CSs forman DB2. Para este intervalo de tiempo, encuentra los flujos globales NMax basados en LN de DB1 y DB2 (conjunto F). H. Envíe el conjunto F a los clientes en su dominio. Actualiza LNt para el próximo período. Algoritmo 3. Algoritmo optimista para reducir el número de paquetes enviados a través de Internet. Además, cuando se utiliza VAD [13], se reduciría aún más el tráfico al enviar solo la parte del encabezado del paquete RTP y no todo el paquete, con el fin de mantener actualizada la LN en todo momento. El tráfico aquí en este caso es O(NMax) para multicast y O(d) para unicast. Vemos que los algoritmos anteriores ahorran ancho de banda y cálculos en cada CS, y conducen a una arquitectura escalable con múltiples CS principalmente porque los clientes están agrupados en dominios. El ancho de banda necesario no depende del número total de clientes activos. Como el CS siempre elige a los tres mejores clientes de entre todos los clientes asignados en el dominio, la adición de nuevos clientes a la conferencia existente no causará ningún problema de escalabilidad. 8.3 Disponibilidad de Multidifusión En la arquitectura propuesta, no se hizo ninguna suposición sobre la disponibilidad de soporte de multidifusión de la red. El tráfico se reducirá aún más si la multidifusión está disponible a través de WAN. Es sencillo demostrar que el orden del tráfico tiende a ser O(d) en lugar de O(d2). Esta es una aproximación ya que el ahorro en la multidifusión también depende de la topología. El análisis se realizó para el caso en el que la multidifusión no está disponible (una suposición realista en el Internet de hoy en día). La ventaja de esta configuración es que podemos usarla incluso si la multidifusión está parcialmente disponible. Podemos instruir a los CSs durante la fase de configuración para enviar paquetes unicast a aquellos CSs que no pueden recibir paquetes multicast, mientras que los CSs en enrutadores habilitados para multicast pueden intercambiar paquetes en una dirección multicast. Las estructuras de datos y objetos de conferencia dentro de una CS se encuentran en [14]. Fig. 7. \n\nFig. 7. Interfaz de usuario para establecer el peso de las corrientes de audio NMax (establecer la barra de auto a cero evita el eco). Mejora de calidad 8.4 La mejora observada en la calidad percibida del servicio de conferencias se debe a: (1) limitar el número de oradores concurrentes a un número bajo, como tres. Generalmente, en una conferencia, si hablan más de dos participantes se pierde la inteligibilidad. El análisis conversacional demuestra que en tal caso habría un mecanismo de reparación [15]. (2) Retraso: La transmisión de audio entre dos clientes pasará como máximo por dos servidores centrales, reduciendo así el retraso de extremo a extremo. Para una conferencia grande puede haber tres CSs, sin embargo, un salto está dentro del dominio incurriendo en un retraso insignificante. (3) Dado que las transmisiones se mezclan solo en los clientes, puede haber una mezcla personalizada de las transmisiones. La sintonización individual de la mezcla con pesos preserva el espacialismo. La Fig. 7 muestra la interfaz de usuario para lo mismo. El eco al seleccionar la auto-transmisión se puede evitar reduciendo el peso. Sin embargo, la retroalimentación ayuda a asegurar al hablante de que está siendo escuchado por todos. CONCLUSIÓN En este artículo, hemos presentado una discusión sobre un entorno de conferencias virtuales solo de voz. Hemos argumentado que la naturaleza distribuida de la implementación aquí la hace escalable. La interactividad se logra adaptando un esquema reciente de selección de flujo basado en el Número de Sonoridad. Además, incorporamos un resultado de un trabajo más reciente [15] donde se ha demostrado la suficiencia de tres <br>hablantes simultáneos</br>. Por lo tanto, hay una utilización significativamente efectiva del ancho de banda. Un flujo mixto se reproduce en cada cliente; cada cliente puede elegir tener una mezcla personalizada ya que la mezcla se realiza en el terminal local de cada cliente. Estos permiten que el discurso improvisado en una videoconferencia virtual a través de VoIP sea una realidad, como en una conferencia presencial real. La compatibilidad está asegurada gracias al uso de SIP, el protocolo de señalización más buscado. Para garantizar un rendimiento satisfactorio, no exigimos la disponibilidad de multidifusión, pero la utilizamos si está disponible. El tráfico en la WAN (Internet) está limitado por arriba por el cuadrado del número de dominios, --además se reduce aún más mediante el uso de algoritmos heurísticos-- lo cual está muy por debajo del número total de clientes en la conferencia. Esto se debe al uso de un Servidor de Conferencias local para cada dominio. Las técnicas de VAD ayudan a reducir aún más el tráfico. El uso del estándar SIP para la señalización hace que esta solución sea altamente interoperable. Hemos implementado una aplicación de CS en una red de campus. Creemos que esta nueva generación de entornos de conferencias virtuales ganará más popularidad en el futuro, ya que su facilidad de implementación está garantizada gracias a las tecnologías fácilmente disponibles y los marcos escalables. REFERENCIAS [1] L. Aguilar et al., Arquitectura para un Sistema de Teleconferencia Multimedia, en Actas de ACM SIGCOMM, Ago 1986, pp. 126-136. [2] Carsten Bormann, Joerg Ott et al., Protocolo de Control de Conferencias Simple, Borrador de Internet, Dic. 1996. [3] M. Decina y V. Trecordi, Voz sobre Protocolo de Internet y Comercio Electrónico Asistido por Humanos, IEEE Comm. Revista, septiembre de 1999, pp. 64-67. [4] Eckehard Doerry, Una comparación empírica de la interacción copresente y mediada tecnológicamente basada en la ruptura comunicativa, Tesis de doctorado, Escuela de Graduados de la Universidad de Oregón, 1995. [5] H. P. Dommel y J.J. Garcia-Luna-Aceves, Control de piso para conferencias y colaboración multimedia, J. Sistemas Multimedia, Vol. 5, No. 1, enero de 1997, pp. 23-38. [6] Amitava Dutta-Roy, Reuniones virtuales con videoconferencias de escritorio, IEEE Spectrum, julio de 1998, pp. 47-56. [7] M. Handley y V. Jacobson, SDP: Protocolo de Descripción de Sesiones, RFC 2327, IETF, abril de 1998. [8] M. Handley, J. Crowcroft et al., Conferencias muy grandes en Internet: la arquitectura de conferencias multimedia en Internet, Revista de Redes de Computadoras, vol. 31, No. 3, febrero de 1999, pp. 191-204. [9] Rec. ITU-T. H.323, Sistemas de Comunicaciones Multimedia basados en Paquetes, vol. 2, 1998. [10] P. Koskelainen, H. Schulzrinne y X. Wu, Un Marco de Control de Conferencias basado en SIP, NOSSDAV02, mayo de 2002, pp. 53-61. [11] R Venkatesha Prasad et al., Protocolo de Control para Soporte de Conferencias de Audio VoIP, Conferencia Internacional sobre Tecnología de Comunicación Avanzada, Mu-Ju, Corea del Sur, febrero de 2001, pp. 419-424. [12] R Venkatesha Prasad et al., Adición y Eliminación Automáticas de Clientes en Conferencias VoIP, 6º Simposio IEEE sobre Computadoras y Comunicaciones, julio de 2001, Hammamet, Túnez, pp. 386-390. [13] R Venkatesha Prasad, H S Jamadagni, Abjijeet, et al Comparación de Algoritmos de Detección de Actividad de Voz, 7º Simposio IEEE sobre Computadoras y Comunicaciones. Julio de 2002, Sicilia, Italia, pp. 530-535. [14] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, Una Conferencia VoIP Distribuida Escalable utilizando SIP, Actas del 8º Simposio de Computadoras y Comunicaciones de IEEE, Antalya, Turquía, junio de 2003. [15] R Venkatesha Prasad, H S Jamadagni y H N Shankar, Sobre el Problema de Especificar el Número de Pisos en una Conferencia Solo de Voz, Por aparecer en IEEE ITRE 2003. [16] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, Una Propuesta para Conferencias Distribuidas en SIP utilizando Servidores de Conferencias, Por aparecer en las Actas de MMNS 2003, Belfast, Reino Unido, septiembre de 2003. [17] R. Venkatesha Prasad, H.S. Jamadagni, J. Kuri, R.S. Varchas, un soporte de conferencias VoIP distribuido que utiliza el número de sonoridad, Tech. Rep. TR-CEDT-TE-03-01 [18] M. Radenkovic et al, Servicio de audio escalable y adaptable para apoyar el trabajo colaborativo y el entretenimiento a través de Internet, SSGRR 2002, LAquila, Italia, enero de 2002. [19] M. Radenkovic, C. Greenhalgh, S. Benford, Problemas de implementación para el soporte de audio multiusuario en CVEs, ACM VRST 2002, noviembre de 2002, pp. 179-185. [20] Srinivas Ramanathan, P. Venkata Rangan, Harrick M. Vin, Diseñando arquitecturas de comunicación para la colaboración multimedia interorganizacional, Journal of Organizational Computing, 2 (3&4), pp.277-302, 1992. [21] A. B. Roach, Notificación de Eventos Específicos del Protocolo de Inicio de Sesión (SIP), RFC 3265, IETF, junio de 2002. [22] J. Rosenberg, H. Schulzrinne et al., SIP: Protocolo de Inicio de Sesión, RFC 3261, IETF, junio de 2002. [23] J. Rosenberg, H. Schulzrinne, Modelos para Conferencias de Múltiples Partes en SIP, Borrador de Internet, IETF, julio de 2002. [24] H. Schulzrinne et al., RTP: un protocolo de transporte para aplicaciones en tiempo real, RFC 1889, IETF, enero de 1996. [25] Lisa R. Silverman, Llegada a la Madurez: Soluciones de Conferencias que Reducen Costos Corporativos, Documento Técnico, www.imcca.org/wpcomingofage.asp [26] Kundan Singh, Gautam Nair y Henning Schulzrinne, Conferencias Centralizadas utilizando SIP, Actas del 2do Taller de IP-Telefonía (IPTel), abril de 2001. [27] D. Thaler, M. Handley y D. Estrin, Arquitectura de Asignación de Direcciones de Multidifusión en Internet, RFC 2908, IETF, septiembre de 2000. ",
            "candidates": [],
            "error": [
                [
                    "oradores simultáneos",
                    "hablantes simultáneos",
                    "hablantes simultáneos"
                ]
            ]
        },
        "sip": {
            "translated_key": "sip",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Deployment Issues of a VoIP Conferencing System in a Virtual Conferencing Environment R. Venkatesha Prasad i Richard Hurni ii H.S.",
                "Jamadagni iii H.N.",
                "Shankar iv i, iii Centre for Electronics Design and Technology Indian Institute of Science, Bangalore, India Telephone: +91 80 360 0810 i, iii {vprasad, hsjam}@cedt.iisc.ernet.in ii hurni@ieee.org iv hn_shankar@yahoo.com ABSTRACT Real-time services have been supported by and large on circuitswitched networks.",
                "Recent trends favour services ported on packet-switched networks.",
                "For audio conferencing, we need to consider many issues - scalability, quality of the conference application, floor control and load on the clients/servers - to name a few.",
                "In this paper, we describe an audio service framework designed to provide a Virtual Conferencing Environment (VCE).",
                "The system is designed to accommodate a large number of end users speaking at the same time and spread across the Internet.",
                "The framework is based on Conference Servers [14], which facilitate the audio handling, while we exploit the <br>sip</br> capabilities for signaling purposes.",
                "Client selection is based on a recent quantifier called Loudness Number that helps mimic a physical face-to-face conference.",
                "We deal with deployment issues of the proposed solution both in terms of scalability and interactivity, while explaining the techniques we use to reduce the traffic.",
                "We have implemented a Conference Server (CS) application on a campus-wide network at our Institute.",
                "Categories and Subjects Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - Client / Server, distributed applications.",
                "General Terms Algorithms, Performance, Design, Theory. 1.",
                "INTRODUCTION Todays Internet uses the IP protocol suite that was primarily designed for the transport of data and provides best effort data delivery.",
                "Delay-constraints and characteristics separate traditional data on the one hand from voice & video applications on the other.",
                "Hence, as progressively time-sensitive voice and video applications are deployed on the Internet, the inadequacy of the Internet is exposed.",
                "Further, we seek to port telephone services on the Internet.",
                "Among them, virtual conference (teleconference) facility is at the cutting edge.",
                "Audio and video conferencing on Internet are popular [25] for the several advantages they inhere [3,6].",
                "Clearly, the bandwidth required for a teleconference over the Internet increases rapidly with the number of participants; reducing bandwidth without compromising audio quality is a challenge in Internet Telephony.",
                "Additional critical issues are: (a) packet delay, (b) echo, (c) mixing of audio from selected clients, (d) automatic selection of clients to participate in the conference, (e) playout of mixed audio for every client, (f) handling clients not capable of mixing audio streams (such clients are known as dumb clients), and (g) deciding the number of simultaneously active clients in the conference without compromising voice quality.",
                "While all the above requirements are from the technology point of view, the users perspective and interactions are also essential factors.",
                "There is plenty of discussion amongst HCI and CSCW community on the use of Ethnomethodology for design of CSCW applications.",
                "The basic approach is to provide larger bandwidth, more facilities and more advanced control mechanisms, looking forward to better quality of interaction.",
                "This approach ignores the functional utility of the environment that is used for collaboration.",
                "Eckehard Doerry [4] criticizes this approach by saying it is keeping form before function.",
                "Thus, the need is to take an approach that considers both aspects - the technical and the functional.",
                "Regarding the functional aspect, we refer to [15] where it has been dealt with in some detail.",
                "In this work, we do not discuss video conferencing; its inclusion does not significantly benefit conference quality [4].",
                "Our focus is on virtual audio environments.",
                "We first outline the challenges encountered in virtual audio conferences.",
                "Then we look into the motivations followed by relevant literature.",
                "In Section 5, we explain the architecture of our system.",
                "Section 6 comprises description of the various algorithms used in our setup.",
                "We address deployment issues.",
                "A discussion on Swiss Federal Institute of Technology, Lausanne.",
                "Former visitor at CEDT.",
                "PESIT and NIAS, Bangalore, India.iv ii performance follows.",
                "We conclude taking alongside some implementation issues. 2.",
                "CHALLENGES IN VoIP CONFERENCING Many challenges arise in building a VoIP application.",
                "The following are of particular concern in the process: • Ease of use: Conferencing must be simple; users need no domain expertise.",
                "Management (addition/removal) of clients and servers must be uncomplicated.",
                "Application development should not presuppose specific characteristics of the underlying system or of network layers.",
                "Ease of use may include leveraging readily available, technically feasible and economically viable technologies. • Scalability: Conferencing must seem uninterrupted under heavy loads, i.e., when many additional users are added on.",
                "Traffic on WAN should not grow appreciably with the total number of clients; else, this has lead to congestion.",
                "So a means to regulate traffic to a minimum is needed for this kind of real-time applications. • Interactivity: In Virtual Conferencing Environments (VCEs), we intend a face-to-face-like conferencing application that mimics a real conference, where more vocal participants invite attention.",
                "Turn-taking in floor occupation by participants must be adapted gracefully to give a feel of natural transition. • Standardization: The solution must conform to established standards so as to gain interoperability and peer acceptance.",
                "The above requirements are placed in the perspective of observations made in earlier works (vide Sections 3 and 4) and will steer the VCE design. 3.",
                "THE MOTIVATION Ramanathan and Rangan [20] have studied in detail the architectural configurations comparing many conferencing architecture schemes taking into consideration the network delay and computation requirements for mixing.",
                "Functional division and object-oriented architecture design that aid in implementation is presented in [1].",
                "An overview of many issues involved in supporting a large conference is dealt in [8].",
                "H. P. Dommel [5] and many others highlight floor control as another pivotal aspect to be taken into account in designing a conferencing tool.",
                "Tightly coupled conference control protocols in Internet belong to the ITU-T H.323 family [9]; however, they are mainly for small conferences.",
                "The latest IETF draft by Rosenberg and Schulzrinne [23] discusses conferencing models with <br>sip</br> [22] in the background.",
                "Aspects of implementation for centralized <br>sip</br> conferencing are reported in [26].",
                "A new approach called partial mixing by Radenkovic [18] allows for mixed and non-mixed streams to coexist.",
                "In all the above proposals, while there are some very useful suggestions, they share one or more of the following limitations: • In an audio conference, streams from all the clients need not be mixed.",
                "Actually, mixing many arbitrary streams [24] from clients degrades the quality of the conference due to the reduction in the volume (spatial aspect of speech).",
                "The number of streams mixed varies dynamically depending on the number of active participants.",
                "This would lead to fluctuations in the volume of every individual participant causing severe degradation in quality.",
                "Customized mixing of streams is not possible when many clients are active.",
                "There is a threshold on the number of simultaneous speakers above which increasing the number of speakers becomes counterproductive to conference quality.",
                "Fixing the maximum number of simultaneous speakers is dealt in a recent work [15] using Ethnomethodology, and is conjectured to be three.",
                "Thus it is advisable to honour that constraint. • There cannot be many intermediate mixers (similarly, Conference Servers as in [10]) in stages as in [20] because it brings in inordinate delay by increasing the number of hops and is not scalable with interactivity in focus. • Floor Control for an audio conference (even video conference) with explicit turn-taking instructions to participants renders the conference essentially a one-speakerat-a-time affair, not a live and free-to-interrupt one.",
                "This way, the conference becomes markedly artificial and its quality degrades.",
                "Schulzrinne et al. [24], assume only one participant is speaking at a time.",
                "In this case, if applications are implemented with some control [5], the service becomes gagging for the users. • Partial mixing [18] has a similar problem as that of mixing when more streams are mixed.",
                "Moreover, in [18], to allow impromptu speech, mixing is not done when the network can afford high bandwidth requirements for sending/receiving all the streams, but it is unnecessary [15]. • For large conferences [23, 10] a centralized conference cannot scale up.",
                "With multicasting, clients will have to parse many streams and traffic on a clients network increases unnecessarily.",
                "Evidently, different particular issues, all of which are a subset of requirements (defined in [14] and [16]) for a VoIP conferencing support, are tackled.",
                "Thus there is a need to address conferencing as a whole with all its requirements considered concurrently.",
                "Towards this goal, the VoIP conferencing system we propose is intended to be scalable and interactive.",
                "We make use of the Loudness Number for implementing floor control.",
                "This permits a participant to freely get into the speaking mode to interrupt the current speaker as in a natural face-to-face meeting.",
                "An upper limit on the number of floors (i.e., the number of speakers allowed to speak at the same time) is fixed using a conjecture proposed in [15].",
                "The work presented here is in continuation of our studies into conferencing based on the Session Initiation Protocol in [14] and [16].",
                "<br>sip</br>, defined in [22] is now the most popular standard for VoIP deployment and has been chosen for its strength, ease of use, extensibility and compatibility.",
                "This is the reason it will be in the background of all controlling messages that will implicitly arise between the entities in our architecture.",
                "The actual messages are described in [16] and, as such, we do not present a complete description of them here. 4.",
                "RELATED WORK The <br>sip</br> standard defined in RFC 3261 [22] and in later extensions such as [21] does not offer conference control services such as floor control or voting and does not prescribe how a conference is to be managed.",
                "However <br>sip</br> can be used to initiate a session that uses some other conference control protocol.",
                "The core <br>sip</br> specification supports many models for conferencing [26, 23].",
                "In the server-based models, a server mixes media streams, whereas in a server-less conference, mixing is done at the end systems.",
                "SDP [7] can be used to define media capabilities and provide other information about the conference.",
                "We shall now consider a few conference models in <br>sip</br> that have been proposed recently [23].",
                "First, let us look into server-less models.",
                "In End-System Mixing, only one client (<br>sip</br> UA) handles the signaling and media mixing for all the others, which is clearly not scalable and causes problems when that particular client leaves the conference.",
                "In the Users Joining model, a tree grows, as each invited party constitutes a new branch in the distribution path.",
                "This leads to an increasing number of hops for the remote leaves and is not scalable.",
                "Another option would be to use multicast for conferencing but multicast is not enabled over Internet and only possible on a LAN presently.",
                "Among server-based models, in a Dial-In Conference, UAs connect to a central server that handles all the mixing.",
                "This model is not scalable as it is limited by the processing power of the server and bandwidth of the network.",
                "Adhoc Centralized Conferences and Dial-Out Conference Servers have similar mechanisms and problems.",
                "Hybrid models involving centralized signaling and distributed media, with the latter using unicast or multicast, raise scalability problems as before.",
                "However an advantage is that the conference control can be a third party solution.",
                "Distributed Partial Mixing, presented in [18], proposes that in case of bandwidth limitation, some streams are mixed and some are not, leaving interactivity intact.",
                "Loss of spatialism when they mix and the bandwidth increase when they do not are open problems.",
                "A related study [19] by the same author proposes conferencing architecture for Collaborative Virtual Environments (CVEs) but does not provide the scalability angle without the availability of multicasting.",
                "With the limitations of proposed conferencing systems in mind, we will now detail our proposal. 5.",
                "SYSTEM ARCHITECTURE This section is dedicated to the description of the proposed system architecture.",
                "However, as this paper constitutes the continuation of our work started in [14] and furthered in [16], we will not present here all the details about the proposed entities and invite the readers to consult the papers mentioned above for a full and thorough description.",
                "First, we do not restrict our conferencing system to work on small conferences only, but rather on large audio VCEs that have hundreds (or even thousands) of users across a Wide Area Network (WAN) such as the Internet.",
                "This view stems from an appraisal that VCEs will gain in importance in the future, as interactive audio conferences will be more popular because of the spread of the media culture around the world.",
                "Two issues must be taken care of when building a VoIP conferencing system: (i) the front-end, consisting of the application program running on the end-users computers and (ii) the back-end that provides other application programs that facilitate conferencing and conference.",
                "The participating users are grouped into several domains.",
                "These domains are Local Area Networks (LANs), such as corporate or educational networks.",
                "This distributed assumption asks for distributed controlling and media handling solutions, as centralized systems would not scale for such very large conferences (vide Section 4).",
                "More explicitly, in each domain, we can identify several relevant logical components of a conferencing facility (Fig. 1):  An arbitrary number of end users (clients) that can take part in at most one audio conference at a time.",
                "Every user is Fig. 1.",
                "Conference example - 3 domains containing the necessary entities so that the conference can take place. included in one and only one domain at a given instant, but can move from domain to domain (nomadism).",
                "In our conferencing environment, these clients are regular <br>sip</br> User Agents (<br>sip</br> UAs), as defined in [22] so to gain in interoperability with other existing SIP-compatible systems.",
                "These clients are thus not aware of the complex setting that supports the conference and this is highlighted below.  One <br>sip</br> Server (SIPS) per domain, taking care of all the signaling aspects of the conference (clients joining, leaving, etc.) [16].",
                "In particular, it is considered as a physical implementation encompassing different logical roles, namely a <br>sip</br> Proxy Server, a <br>sip</br> Registrar Server, a SIP Redirect Server and a SIP B2BUA (Back-to-Back User Agent) [22].",
                "This physical implementation enables the handling of incoming/outgoing <br>sip</br> messages by one or another logical entity according to the needs.",
                "SIPS is entrusted with maintaining total service and has many advantages such as (a) it works as a centralized entity that can keep track of the activities of the UAs in a conference; (b) it can do all the switching for providing PBX features; (c) it can locate the UAs and invite them for a conference; (d) it can do the billing as well.",
                "SIPSs in different domains communicate with each other using <br>sip</br> messages as described in [16].",
                "If the load on a particular SIPS is too heavy, it can create another SIPS in the same domain so that the load will be shared.  One Master Conference Server (M-CS) (simply a Conference Server (CS)) for each conference is created by the local SIPS when a conference starts.",
                "This server will be used for handling media packets for the clients of the domain.",
                "Its mechanism will be described in the next section.",
                "The M-CS will be able to create a hierarchy of CSs inside a domain by adding one or more Slave CSs (S-CSs) to accommodate all the active clients and prevent its own flooding at the same time.",
                "We will see this mechanism in some detail in the sequel.",
                "The entities described here are exhaustive and conform to the <br>sip</br> philosophy.",
                "Thus, the use of <br>sip</br> makes this architecture more useful and interoperable with any other <br>sip</br> clients or servers. 6.",
                "ALGORITHMIC ISSUES 6.1 Selecting the Streams Similar to SipConf in [27], a Conference Server (CS) [17] has the function of supporting the conference; it is responsible for handling audio streams using RTP.",
                "It can also double to convert audio stream formats for a given client if necessary and can work as Translators/Mixers of RTP specification behind firewalls.",
                "We have based the design of our CS on H.323 Multipoint Processor (MP) [9].",
                "In short, the MP receives audio streams from the endpoints involved in a centralized or hybrid multipoint conference, processes them and returns them to the endpoints.",
                "An MP that processes audio prepares NMax audio outputs from M input streams after selection, mixing, or both.",
                "Audio mixing requires decoding the input audio to linear signals (PCM or analog), performing a linear combination of the signals and reencoding the result in an appropriate audio format.",
                "The MP may eliminate or attenuate some of the input signals in order to reduce noise and unwanted components.",
                "Fig. 2.",
                "Schematic diagram of a CS The limitation of H.323 is that it does not address the scalability of a conference.",
                "The architecture proposes a cascaded or daisy chain topology [10], which can be shown that it cannot scale up for a large conference.",
                "A CS serves many clients in the same conference.",
                "Thus it handles only one conference at a time.",
                "Multiple CSs may coexist in a domain, as when there are several conferences under way.",
                "Signaling-related messages of CSs are dealt in [11].",
                "The working of a CS is illustrated on Fig. 2: For each mixing interval, CS 1 chooses the best NMax audio packets out of the M1 (using a criterion termed Loudness Number, described in the next subsection).",
                "It may possibly receive and sends these to CSs 2 to P. The set of packets sent is denoted as ToOtherCSs.",
                "In the same mixing interval, it also receives the best NMax audio packets (out of possibly M2) from CS 2, similarly the best NMax (out of possibly MP) from CS P. For simplicity, we ignore propagation delay between CSs which indeed can be taken into account; it is beyond the scope of this presentation.",
                "The set of packets received is denoted as FromOtherCSs.",
                "Finally, it selects the best NMax packets from the set {ToOtherCSs union FromOtherCSs} and passes these packets to its own group.",
                "It can be seen that the set {ToOtherCSs union FromOtherCSs} is the same at all CSs.",
                "This ensures that any client in the conference finally receives the same set of packets for mixing.",
                "Hence all clients obtain a common view of the conference.",
                "Similarly, for each time slot (packet time), a subset, F of all clients is selected (using the same criterion) from the pool of packets from all other CSs plus the NMax clients selected locally.",
                "Their packets are mixed and played out at the clients.",
                "According to [15], the cardinality of F, |F| is NMax and is fixed at three.",
                "In our conferencing setup, selection is by the Master Conference Server (M-CS), which comes into the picture exclusively for media handling.",
                "Note that even if the <br>sip</br> specification enables direct UA-to-UA media communication in a one-to-one call, it is also possible to use the Conference Server for two-party calls, especially because it is then more functional to create a real conference by adding a third and subsequently more participant(s).",
                "There are cases wherein the processing capacity of an M-CS is exceeded as it may have too many packets - from local domains and from remote domains - to process.",
                "In that case, the M-CS will create one or many S-CS (Fig. 6) and transfer its own clients as well as the new clients to them.",
                "In this configuration, the algorithm outlined above will be slightly modified, as the audio packets will go from clients to their dedicated S-CS that will select NMax packets to send to the local M-CS, which will then select NMax packets from all its S-CSs in the domain before sending them to the remote domains.",
                "The incoming packets from other domains will be received by the M-CS, select NMax of them and send them directly to the domain clients, bypassing the SCSs.",
                "This change implies that at most three intermediate entities exist for each audio packet, instead of two in the conventional setup.",
                "As the extra hop happens inside the LAN supposed to have a high-speed connectivity, we consider that it should not prevent us from using this hierarchy of CSs when theres a need to do so. 6.2 Loudness Number (LN) A basic question to be answered by the CS is the following.",
                "In a mixing interval, how should it choose NMax packets out of the M it might possibly receive?",
                "One way is to rank the M packets received according to their energies, and choose the top NMax.",
                "However, this is usually found to be inadequate because random fluctuations in packet energies can lead to poor audio quality.",
                "This indicates the need for a metric different from mere individual packet energies.",
                "The metric should have the following characteristics [12]: • A speaker (floor occupant) should not be cut off by a spike in the packet energy of another speaker.",
                "This implies that a speakers speech history should be given some weight.",
                "This is often referred to as Persistence or Hangover. • A participant who wants to interrupt a speaker will have to (i) speak loudly and (ii) keep trying for a little while.",
                "In a face-to-face conference, body language often indicates the intent to interrupt.",
                "But in a blind conference under discussion, a participants intention to interrupt can be conveyed effectively through LN.",
                "A floor control mechanism empowered to cut off a speaker forcefully must be ensured.",
                "These requirements are met by Loudness Number [12], which changes smoothly with time so that the selection (addition and deletion) of clients for conference is graceful.",
                "LN (= ) is a function of the amplitude of the current audio stream plus the activity and amplitude over a specific window in the past.",
                "Fig. 3.",
                "The different windows used for LN computation The Loudness Number is updated on a packet-by-packet basis.",
                "The basic parameter used here is packet amplitude, which is calculated as root mean square (rms) of the energies in audio samples of a packet, and denoted by XK.",
                "Three windows are defined as shown in Fig. 3.",
                "The present amplitude level of the speaker is found by calculating the moving average of packet amplitude (XK) within a window called Recent Past Window starting from the present instant to some past time.",
                "The past activity of the speaker is found by calculating the moving average of the packet amplitude (XK) within a window called Distant Past Window, which starts at the point where the Recent Past window ends and stretches back in the past for a pre-defined interval.",
                "The activity of the speaker in the past is found with a window called Activity Horizon, which spans the recent past window as well as the distant past window and beyond if necessary.",
                "Though the contribution of the activity horizon looks similar to the contribution of the recent past and distant past windows, past activity is computed from activity horizon window in a differently.",
                "Define the quantities during these three intervals as L1, L2 and L3.",
                "L1 quantifies the Recent Past speech activity, L2 the Distant Past speech activity and L3 gives a number corresponding to the speech activity in the Activity Horizon window quantifying how active the speaker was in the past few intervals.",
                "L3 yields a quantity that is proportional to the fraction of packets having energies above a pre-defined threshold (Eq. 3).",
                "The threshold is invariant across clients. ∑ +− = = 1 1 1 RPP P Wt tK K RP X W L (1) ∑ +−− −= = 1 2 1 DPRPP RPP WWt WtK K DP X W L (2) ∑ +− = ≥= 1 }{3 * 1 AHP P K Wt tK X AH I W L θθ (3) Where ifI KX 1}{ =≥θ θ≥KX = otherwise,0 The threshold is a constant. is set at 10-20 percent of the amplitude of the voice samples of a packet in our implementation here.",
                "Loudness Number λ for the present time instant (or the present packet) is calculated as, 332211 *L*L*L αααλ ++= (4) Here 1\u000f 2 DQG 3 are chosen such that: 0< 1\u000f 2\u001f\u0014\u000f \u0013\u001f 1\u000e 2\u001f\u0014 DQG 3=1-\u000b 1\u000e 2) Here, 1 is the weight given to the recent past speech, 2 is the weight given to distant past speech and 3 is the weight given to speech activity in the activity horizon window considered. 6.3 Safety, Liveness and Fairness The λ parameter KDV VRPH PHPRU\\ GHSHQGLQJ RQ WKH VSUHDG RI the windows.",
                "After one conferee becomes silent, another can take the floor.",
                "Also, as there is more than one channel, interruption is enabled.",
                "A loud conferee is more likely to be heard because of elevated λ.",
                "This ensures fairness to all conferees.",
                "After all, even in a face-to-face conference, a more vocal speaker grabs special attention.",
                "All these desirable characteristics are embedded into the LN.",
                "A comprehensive discussion on selection of the various parameters and the dynamics of LN are beyond the scope of this paper. 6.4 Selection Algorithm using the LN Following the developments in subsections 6.1 and 6.2, we present the simple algorithm that runs at each Master-Conference Server (Algorithm. 1).",
                "This algorithm is based on the discussions in section 6.1.",
                "The globally unique set F is found using this procedure.",
                "Repeat for each time slot at each M-CS { 1.",
                "Get all the packets from the Clients that belong to it. 2.",
                "Find at most NMax Clients that have PD[LPXP RXW RI 0 &OLHQWV LQ LWV GRPDLQ\u0011 3.",
                "Store a copy of packets from those NMax Clients in database DB1. 4.",
                "Send these NMax packets to other M-CSs (on Unicast or Multicast, depending on the configuration). 5.",
                "Similarly, receive packets from all other M-CSs and store them in database DB2. 6.",
                "Now compare the packets in DB1 and DB2 on WKH EDVLV RI DQG VHOHFW D PD[LPXP RI NMax amongst them (to form set F) that should be played out at each Client. 7.",
                "Send the NMax packets in set F to the Clients in its domain. 8.",
                "Mix these NMax audio packets in set F after linearising and send it to dumb Clients in the domain. }",
                "Algorithm 1.",
                "Selection algorithm The mechanism proposed here is also depicted on Fig. 6, where a single conference takes place between three domains.",
                "The shaded clients are the ones selected in their local domains; their audio streams will be sent to other CSs. 7.",
                "DEPLOYMENT ISSUES We now analyze deployment issues associated with conference management.",
                "How are domains to be organized to maximize the number of participants able to join?",
                "To address this, we define some useful parameters.  Let d be the number of different domains in which there are active clients in a given conference.  Let Mi be the number of active clients present in domain i ( di ≤≤1 ) in a given conference.",
                "The total number of active clients in the conference is thus ∑= = d i iMM 1 .  Let C be the maximum number of audio streams a Conference Server can handle in a packet time, also called capacity.",
                "C is set according to the processing power of the weakest CS in the conference but as it cannot be assumed that we know it a-priori, it can be set according to some minimum system requirement a machine must meet in order to take part in a conference.  Let NMax be the number of output streams a CS has to send to other CSs in remote domains (see section 6.1).",
                "We will set NMax =3 (=|F|), according to [15].",
                "The optimization problem is now to find the value of d that maximizes the total number of clients Mi served by one CS in a domain with capacity C. We first dispose the case where the capacity is not exceeded (the existing CS is not overloaded), and then proceed to the case where there exists a need to create more CSs when a single CS is overloaded.",
                "We assume that clients are equally distributed amongst the domains, as we may not have information to assume an a-priori distribution of the clients.",
                "We can specify no more than an upper bound on the number of clients acceptable, given the number of active domains d. 7.1 Conferencing with only One Level of CSs In this subsection, we consider that we have only one CS, i.e., a unique M-CS in each domain.",
                "Thus it cannot be overloaded.",
                "We consider that the system works as outlined in section 6.1: The Clients send their audio packets to their local CS, which selects NMax streams, before sending them to other CSs.",
                "In parallel, it also receives NMax streams for every other CSs before taking a decision on which NMax streams will be selected, sent and played out at each individual clients.",
                "For system stability, any CS in the conference should be able to handle its local clients in addition to the audio packets from other domains.",
                "Clearly then, the following inequality must hold for every domain: )1( −⋅+≥ dN d M C Max (5) The limiting case of (5) (taking the equality) takes the form 2 )( dNdNCM MaxMax ⋅−⋅+= (6) To optimize d with respect to M, we set 0)(2 =+−⋅⋅= ∂ ∂ MaxMax NCdN d M (7) yielding     ⋅ + = Max Max N NC d 2 (8) ([ ]* = Rounding to nearest integer) and hence, M from (6).",
                "C d M 50 9 234 100 17 884 150 26 1950 200 34 3434 250 42 5334 300 51 7650 350 59 10384 400 67 13534 450 76 17100 500 84 21084 Table 1.",
                "Values of d and M computed for some values of C with NMax = 3.",
                "In Table 1, we give the values of d and M that were computed using (8) and (6) with NMax = 3.",
                "We see that the values of d and M, being dependent of C, are therefore based on the weakest CS.",
                "We see that there is a trade-off between M and d. We could admit more domains in the conference, but at the expense of restricting the total number of clients M in the conference.",
                "While implementing and testing the Conference Servers on a Pentium III 1.4 GHz running Windows NT, we were able to set C=300.",
                "But with the advent of faster computers (> 3 GHz), one can easily set C to higher values and determine d and M accordingly.",
                "Fig. 4 shows a contour plot and Fig. 5, a 3D-mesh showing optimized solutions for CSs of different capacities.",
                "These lead us to maximize the number of domains, and hence, to maximize the total number of clients based on the capacity of various CSs.",
                "In Fig. 4, the individual curves represent the total number of clients targeted, and we select a lower value of d, for capacity C, for targeted M to reduce traffic on WAN.",
                "Fig. 5 represents a different perspective of the same data in 3D.",
                "Fig. 4.",
                "Contour Plot of Capacity versus Optimum number of domains for various conference sizes 7.2 Conferencing with Two Levels of CSs Now considering the case where the number of clients in a particular domain is too large, i.e., d M Mi ≥ (9) one has to avoid the denial of service for new clients due to overloading of Conference Server.",
                "This problem can be solved by introducing a second level of CSs inside the given domain, as in Fig. 6.",
                "The existing M-CS creates a Slave CS (S-CS) that can handle up to C end-users and to which it transfers all its active clients.",
                "Here, the system works differently as outlined in section 6.1: The Clients send their audio packets to their local S-CS, which selects NMax streams, before sending them to a local M-CS, which will proceed in the same way, before sending NMax streams to the other domains.",
                "Each newly created S-CS must run on a separate machine.",
                "The M-CS has to create more S-CSs if the number of active clients exceeds C in the course of the conference after the transfer.",
                "With this mechanism, the M-CS will be able to create utmost     −⋅− = Max Max N dNC U )1( S-CSs, (10) as it must handle 3 (= NMax) packets for each local S-CSs and 3 (= NMax) packets from each other remote domains.",
                "We can then calculate the maximum theoretical number of active clients CUMi ⋅= in each domain as well as M, for the whole conference as CUdM ⋅⋅= .",
                "Fig. 5. 3D Plot of Capacity versus Optimum number of domains for various conference sizes Of course, one could further create a third level in the hierarchy, giving the possibility of accommodating even more clients.",
                "This may be unnecessary as the number of possible clients is large enough with two levels. 8.",
                "PERFORMANCE DISCUSSION We now analyze the performance of the algorithm presented in subsection 6.3, i.e., the one taking care of the exchange of audio packets between the different domains.",
                "Note that the packets that are transiting within the LAN take advantage of the higher capacity (generally coupled with multicast capabilities) and therefore do not require a performance analysis.",
                "Thus we have to look only at the RTP packets over the WAN, i.e., between participating M-CSs.",
                "As each M-CS from a domain will be sending only NMax out of d M packets to the other CSs ( MaxN d M >> ), the bandwidth used by the application over a WAN is upper-bounded by the following expression.",
                "The total number of audio packets transiting over the WAN for each time slot is ∑ ∑= ≠=        d i d ijj MaxN 1 ,1 which is quadratic in the number of domains (i.e., O(d2 )).",
                "However, it is independent of the total number of active clients.",
                "This would not have been the case had all packets been sent over the network in each time slot.",
                "The saving is tremendous.",
                "Yet, one may contend that sending three packets to and from all domains is a waste of resources, as most of these streams will not be selected.",
                "If just one client is active, selecting a subset of clients in that domain is unnecessary.",
                "Pessimistic and optimistic algorithms as presented in the sequel aim at reducing the traffic further by harnessing the slow varying nature of the LN. 8.1 Pessimistic algorithm Consider a scenario wherein the lowest LN (called LNt) of the three globally selected streams (set F of Section 6.1) exceeds the LN of the most dominant stream of a domain.",
                "Evidently, the chances that the next two dominant streams of that domain being selected to F in the next packet period are less.",
                "Here, we send this most dominant stream and withhold the other two.",
                "There may be an error in unique selection across all domains for one packet period only.",
                "As LN varies slowly, the error would get automatically rectified in a subsequent packet period (slot).",
                "In this algorithm, there is at least one stream in each period.",
                "The net network traffic in a packet period in the best case is )1( −⋅ dd , i.e., )( 2 dO using unicast, instead of MaxNdd ⋅−⋅ )1( .",
                "Considerable valuable bandwidth can be saved using this heuristic.",
                "The resulting traffic complexity reduces from O(d2 ) to O(d) in multicast-enabled networks.",
                "Initialize LNt = 0 at an M-CS/S-CS A.",
                "In the first time slot (packet time), each CS sends the top NMax streams (based on their LN) to all other CSs.",
                "At each M-CS/S-CS and for each packet time: B.",
                "Find the value of lowest LN of the NMax globally selected streams (set F) from the previous time slot.",
                "Set LNt with this value.",
                "C. At each CS domain, select the NMax local streams that have maximum value of LN (ToOtherCSs set).",
                "D. Select streams that have LN > LNt.",
                "IF there are >= NMax streams with LN > LNt then send top NMax to other CSs.",
                "ELSE IF there are (NMax-1) streams with LN>LNt then send top (NMax-1) plus the one lower than LNt (i.e., top NMax) to other CSs.",
                "ELSE IF there are (NMax-2) streams with LN>LNt then send top (NMax-2) plus the one lower than LNt (i.e. top (NMax -1)) to other CSs. …… ELSE IF there are NO streams with LN> LNt then send top 1 stream to other CSs.",
                "E. Packets sent in step D form DB1.",
                "Packets received from other CSs form DB2.",
                "F. For this time slot, find global NMax streams based on LN from DB1 U DB2 (set F) G. Send set F to the clients in its domain.",
                "Update LNt for the next period.",
                "Algorithm 2.",
                "Pessimistic algorithm to reduce the number of packets sent over the Internet.",
                "Fig. 6.",
                "Example of a 2-level hierarchy of Conference Servers; the shaded Clients are the one selected by the M-CS and will be sent to other domains CSs.",
                "In this algorithm the saving in traffic is at the cost of relaxing the condition of formation of globally unique set F. However, the discrepancies in selected streams at different domains remain for a short period of time depending on the transportation delay between any two domains.",
                "Even for a total delay of 400ms, for only 10 packet time slots the uniqueness is lost.",
                "This duration in a real-time interactive conversation is non-perceivable by the listener.",
                "In the case that there is a joke and every one laughs, then there would be sudden rise in the number of packets and it would be upper bounded by MaxN)d(O 2 for a short period. 8.2 Optimistic Algorithm The traffic can be reduced further.",
                "The scheme in the following algorithm (Algorithm. 3) is withholding all the streams that have less value of LN compared to the least of the three in the set F. We can find the correct and unique three streams after a few time slots depending on the transportation delay between the domains.",
                "As the packet period is of the order of 40ms, the error in the selection is unnoticeable.",
                "The number of streams on network in this case is always restricted to NMax (=3).",
                "Even without Voice Activity Detection (VAD), there will be no more than three streams in the network in the best case, thus the total traffic is constant.",
                "A sudden burst of traffic, as described in 8.1, is a particular case.",
                "These advantages are due to exploitation of the characteristics of LN.",
                "Initialize LNt = 0 at an M-CS/S-CS A.",
                "In the first time slot (packet time), each CS sends the top NMax streams (based on their LN) to all other CSs.",
                "At each M-CS/S-CS and for each packet time: B.",
                "Find the value of lowest LN of the NMax globally selected streams (set F) from the previous time slot.",
                "Set LNt with this value.",
                "C. At each CS domain, select the NMax local streams that have maximum value of LN (ToOtherCSs set) D. Select streams that have LN > LNt IF there are >= NMax streams with LN > LNt then send top NMax to other CSs.",
                "ELSE IF there are (NMax-1) streams with LN>LNt then send top (NMax-1) and see E. ELSE IF there are (NMax-2) streams with LN>LNt then send top (NMax-2) and see E. …… ELSE IF there are NO streams with LN> LNt then dont send any stream.",
                "E. Exceptions: IF the stream that was in F in the last interval belongs to this CS then select and send that stream even if its LN is now < LNt. (Note this occurs only at that CS which had the stream that was the last of the three in the previous packet period.)",
                "F. Packets sent in step D and E form DB1.",
                "Packets received from other CSs form DB2.",
                "G. For this time slot, find global NMax streams based on LN from DB1 U DB2 (set F).",
                "H. Send set F to the clients in its domain.",
                "Update LNt for the next period.",
                "Algorithm 3.",
                "Optimistic algorithm to reduce the number of packets sent over the Internet Furthermore, when VAD is used [13], it would further reduce the traffic by sending the header part of the RTP packet only and not the whole packet, thus in order to keep updating the LN across.",
                "The traffic here in this case is O(NMax) for multicast and O(d) for unicast.",
                "We see that the above algorithms save bandwidth and computation at each CS, and leads to a scalable architecture with multiple CSs mainly because clients are grouped in domains.",
                "The necessary bandwidth is not dependent on the total number of active clients.",
                "As the CS always chooses the best three clients out of all the clients assigned to it in the domain, addition of new clients to the existing conference will not cause any scalability problem. 8.3 Availability of Multicasting In the architecture that has been proposed, no assumption was made about the availability of multicasting support from the network.",
                "The traffic will be further reduced if multicasting is available over WAN.",
                "It is simple to show that the order of traffic would tend to become O(d) from O(d2 ).",
                "This is an approximation as saving in multicasting depends also on the topology.",
                "The analysis was done for the case wherein multicast is not available (a realistic assumption in todays Internet).",
                "The advantage of this set up is that we can use it even if multicasting is partially available.",
                "We can instruct CSs during the set-up phase to send unicast packets to those CSs that cannot receive multicast packets whereas CSs on multicast enabled routers can exchange packets on a multicast address.",
                "The data structures and conference objects inside a CS is given in [14].",
                "Fig. 7.",
                "User Interface for setting the weight for NMax audio streams (setting Self-bar to zero avoids echo). 8.4 Quality Improvement The observed improvement in the perceived quality of the conference service is due to: (1) limiting the number of concurrent speakers to a low number such as three.",
                "Generally, in a conference if more than two participants speak the intelligibility is lost.",
                "The conversational analysis demonstrates that there would be a repair mechanism [15] in such a case. (2) Delay: The audio stream between any two clients will pass through at most two CSs thus reducing the end-to-end delay.",
                "For a large conference there might be three CSs however, one hop is within the domain incurring negligible delay. (3) As the streams are mixed only at the clients, there can be a customized mix of the streams.",
                "The individual tuning of mixing with weights the spatialism is preserved.",
                "Fig. 7 shows the user interface for the same.",
                "The echo when self-stream is selected can be avoided by reducing the weight.",
                "Nonetheless, feedback helps in reassuring speaker that he/she is heard by all. 9.",
                "CONCLUSION In this paper, we have presented a discussion on a voice-only virtual conferencing environment.",
                "We have argued that the distributed nature of deployment here makes it scalable.",
                "Interactivity is achieved by adapting a recent stream selection scheme based on Loudness Number.",
                "Additionally, we incorporate a result from a more recent work [15] where the sufficiency of three simultaneous speakers has been demonstrated.",
                "Thus, there is significantly effective utilization of bandwidth.",
                "A mixed stream is played out at each client; each client may choose to have a customized mix since mixing is done at the local terminal of each client.",
                "These render impromptu speech in a virtual teleconference over VoIP a reality, as in a real face-to-face conference.",
                "Compatibility is assured thanks to the use of <br>sip</br>, the most soughtafter signaling protocol.",
                "To ensure a satisfying performance, we do not demand the availability of multicast, but use it if and when available.",
                "The traffic in the WAN (Internet) is upper-bounded by the square of the number of domains, -- further reduced by using heuristic algorithms -- which is far below the total number of clients in the conference.",
                "This is due to the use of a Conference Server local to each domain.",
                "VAD techniques help further traffic reduction.",
                "Using <br>sip</br> standard for signaling makes this solution highly interoperable.",
                "We have implemented a CS application on a campus-wide network.",
                "We believe this new generation of virtual conferencing environments will gain more popularity in the future as their ease of deployment is assured thanks to readily available technologies and scalable frameworks. 10.",
                "REFERENCES [1] L Aguilar et al., Architecture for a Multimedia Teleconferencing System, in Proceedings of the ACM SIGCOMM, Aug 1986, pp. 126-136. [2] Carsten Bormann, Joerg Ott et al., Simple Conference Control Protocol, Internet Draft, Dec. 1996. [3] M. Decina and V. Trecordi, Voice over Internet Protocol and Human Assisted E-Commerce, IEEE Comm.",
                "Magazine, Sept. 1999, pp. 64-67. [4] Eckehard Doerry, An Empirical Comparison of Copresent and Technologically-mediated Interaction based on Communicative Breakdown, Phd Thesis, Graduate School of the University of Oregon, 1995. [5] H. P. Dommel and J.J. Garcia-Luna-Aceves, Floor Control for Multimedia Conferencing and Collaboration, J. Multimedia Systems, Vol. 5, No. 1, January 1997, pp. 23-38. [6] Amitava Dutta-Roy, Virtual Meetings with desktop conferencing, IEEE Spectrum, July 1998, pp. 47-56. [7] M. Handley and V. Jacobson, SDP: Session Description Protocol, RFC 2327, IETF, April 1998. [8] M. Handley, J. Crowcroft et al., Very large conferences on the Internet: the Internet multimedia conferencing architecture, Journal of Computer Networks, vol. 31, No. 3, Feb 1999, pp. 191-204. [9] ITU-T Rec.",
                "H.323, Packet based Multimedia Communications Systems, vol. 2, 1998. [10] P. Koskelainen, H. Schulzrinne and X. Wu, A <br>sip</br>-based Conference Control Framework, NOSSDAV02, May 2002, pp. 53-61. [11] R Venkatesha Prasad et al., Control Protocol for VoIP Audio Conferencing Support, International Conference on Advanced Communication Technology, Mu-Ju, South Korea, Feb 2001, pp. 419-424. [12] R Venkatesha Prasad et al., Automatic Addition and Deletion of Clients in VoIP Conferencing, 6th IEEE Symposium on Computers and Communications, July 2001, Hammamet, Tunisia, pp. 386-390. [13] R Venkatesha Prasad, H S Jamadagni, Abjijeet, et al Comparison of Voice Activity Detection Algorithms, 7th IEEE Symposium on Computers and Communications.",
                "July 2002, Sicily, Italy, pp. 530-535. [14] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, A Scalable Distributed VoIP Conferencing using <br>sip</br>, Proc. of the 8th IEEE Symposium on Computers and Communications, Antalya, Turkey, June 2003. [15] R Venkatesha Prasad, H S Jamadagni and H N Shankar, On Problem of Specifying Number of Floors in a Voice Only Conference, To appear in IEEE ITRE 2003. [16] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, A Proposal for Distributed Conferencing on <br>sip</br> using Conference Servers, To appear in the Proc. of MMNS 2003, Belfast, UK, September 2003. [17] R. Venkatesha Prasad, H.S.",
                "Jamadagni, J. Kuri, R.S.",
                "Varchas, A Distributed VoIP Conferencing Support Using Loudness Number, Tech.",
                "Rep. TR-CEDT-TE-03-01 [18] M. Radenkovic et al, Scaleable and Adaptable Audio Service for Supporting Collaborative Work and Entertainment over the Internet, SSGRR 2002, LAquila, Italy, Jan. 2002. [19] M. Radenkovic, C. Greenhalgh, S. Benford, Deployment Issues for Multi-User Audio Support in CVEs, ACM VRST 2002, Nov. 2002, pp. 179-185. [20] Srinivas Ramanathan, P. Venkata Rangan, Harrick M. Vin, Designing Communication Architectures for Interorganizational Multimedia Collaboration, Journal of Organizational Computing, 2 (3&4), pp.277-302, 1992. [21] A.",
                "B. Roach, Session Initiation Protocol (<br>sip</br>)-Specific Event Notification, RFC 3265, IETF, June 2002. [22] J. Rosenberg, H. Schulzrinne et al., <br>sip</br>: Session Initiation Protocol, RFC 3261, IETF, June 2002. [23] J. Rosenberg, H. Schulzrinne, Models for Multy Party Conferencing in SIP, Internet Draft, IETF, July 2002. [24] H. Schulzrinne et al., RTP: a transport protocol for realtime applications, RFC 1889, IETF, Jan 1996. [25] Lisa R. Silverman, Coming of Age: Conferencing Solutions Cut Corporate Costs, White Paper, www.imcca.org/wpcomingofage.asp [26] Kundan Singh, Gautam Nair and Henning Schulzrinne, Centralized Conferencing using SIP, Proceedings of the 2nd IP-Telephony Workshop (IPTel), April 2001. [27] D. Thaler, M. Handley and D. Estrin, The Internet Multicast Address Allocation Architecture, RFC 2908, IETF, Sept. 2000."
            ],
            "original_annotated_samples": [
                "The framework is based on Conference Servers [14], which facilitate the audio handling, while we exploit the <br>sip</br> capabilities for signaling purposes.",
                "The latest IETF draft by Rosenberg and Schulzrinne [23] discusses conferencing models with <br>sip</br> [22] in the background.",
                "Aspects of implementation for centralized <br>sip</br> conferencing are reported in [26].",
                "<br>sip</br>, defined in [22] is now the most popular standard for VoIP deployment and has been chosen for its strength, ease of use, extensibility and compatibility.",
                "RELATED WORK The <br>sip</br> standard defined in RFC 3261 [22] and in later extensions such as [21] does not offer conference control services such as floor control or voting and does not prescribe how a conference is to be managed."
            ],
            "translated_annotated_samples": [
                "El marco se basa en Servidores de Conferencia [14], que facilitan el manejo del audio, mientras que explotamos las <br>capacidades de SIP</br> para propósitos de señalización.",
                "El último borrador del IETF de Rosenberg y Schulzrinne [23] discute modelos de conferencia con <br>SIP</br> [22] en el fondo.",
                "Los aspectos de implementación para la conferencia <br>SIP</br> centralizada se informan en [26].",
                "<br>SIP</br>, definido en [22], es ahora el estándar más popular para implementación de VoIP y ha sido elegido por su fortaleza, facilidad de uso, extensibilidad y compatibilidad.",
                "TRABAJO RELACIONADO El estándar SIP definido en el RFC 3261 [22] y en extensiones posteriores como [21] no ofrece servicios de <br>control de conferencias</br> como control de piso o votación y no prescribe cómo debe ser gestionada una conferencia."
            ],
            "translated_text": "Problemas de implementación de un sistema de conferencias VoIP en un entorno de conferencias virtuales. R. Venkatesha Prasad y Richard Hurni. Jamadagni iii H.N. Shankar iv i, iii Centro de Diseño y Tecnología Electrónica Instituto Indio de Ciencias, Bangalore, India Teléfono: +91 80 360 0810 i, iii {vprasad, hsjam}@cedt.iisc.ernet.in ii hurni@ieee.org iv hn_shankar@yahoo.com RESUMEN Los servicios en tiempo real han sido principalmente respaldados en redes conmutadas por circuitos. Las tendencias recientes favorecen los servicios trasladados a redes de conmutación de paquetes. Para las conferencias de audio, necesitamos considerar muchos aspectos, como la escalabilidad, la calidad de la aplicación de conferencia, el control de piso y la carga en los clientes/servidores, por nombrar algunos. En este documento, describimos un marco de servicio de audio diseñado para proporcionar un Entorno de Conferencias Virtuales (ECV). El sistema está diseñado para dar cabida a un gran número de usuarios finales hablando al mismo tiempo y distribuidos por Internet. El marco se basa en Servidores de Conferencia [14], que facilitan el manejo del audio, mientras que explotamos las <br>capacidades de SIP</br> para propósitos de señalización. La selección de clientes se basa en un reciente cuantificador llamado Número de Volumen que ayuda a imitar una conferencia física cara a cara. Nos ocupamos de los problemas de implementación de la solución propuesta tanto en términos de escalabilidad como de interactividad, mientras explicamos las técnicas que utilizamos para reducir el tráfico. Hemos implementado una aplicación de Servidor de Conferencias (CS) en una red de campus en nuestro Instituto. Categorías y Descriptores de Temas C.2.4 [Redes de Computadoras y Comunicación]: Sistemas Distribuidos - Cliente/Servidor, aplicaciones distribuidas. Términos generales Algoritmos, Rendimiento, Diseño, Teoría. 1. INTRODUCCIÓN El Internet de hoy utiliza el conjunto de protocolos IP que fue diseñado principalmente para el transporte de datos y proporciona la entrega de datos con el mejor esfuerzo. Las restricciones de retraso y las características diferencian los datos tradicionales por un lado, de las aplicaciones de voz y video por el otro. Por lo tanto, a medida que se implementan aplicaciones de voz y video cada vez más sensibles al tiempo en Internet, se pone de manifiesto la insuficiencia de la red. Además, buscamos trasladar servicios telefónicos a través de Internet. Entre ellos, la instalación de conferencia virtual (teleconferencia) está a la vanguardia. Las videoconferencias y conferencias de audio en Internet son populares por las varias ventajas que poseen. Claramente, el ancho de banda necesario para una videoconferencia a través de Internet aumenta rápidamente con el número de participantes; reducir el ancho de banda sin comprometer la calidad del audio es un desafío en la telefonía por Internet. Los problemas críticos adicionales son: (a) retraso de paquetes, (b) eco, (c) mezcla de audio de clientes seleccionados, (d) selección automática de clientes para participar en la conferencia, (e) reproducción de audio mezclado para cada cliente, (f) manejo de clientes que no son capaces de mezclar flujos de audio (estos clientes se conocen como clientes tontos), y (g) decidir el número de clientes activos simultáneamente en la conferencia sin comprometer la calidad de voz. Si bien todos los requisitos anteriores son desde el punto de vista tecnológico, la perspectiva de los usuarios y las interacciones también son factores esenciales. Hay mucha discusión entre la comunidad de HCI y CSCW sobre el uso de la Etnometodología para el diseño de aplicaciones de CSCW. El enfoque básico es proporcionar un ancho de banda más amplio, más instalaciones y mecanismos de control más avanzados, con miras a una mejor calidad de interacción. Este enfoque ignora la utilidad funcional del entorno que se utiliza para la colaboración. Eckehard Doerry [4] critica este enfoque diciendo que pone la forma antes que la función. Por lo tanto, la necesidad es adoptar un enfoque que considere ambos aspectos: el técnico y el funcional. En cuanto al aspecto funcional, nos referimos a [15] donde se ha tratado en cierto detalle. En este trabajo, no discutimos la videoconferencia; su inclusión no beneficia significativamente la calidad de la conferencia [4]. Nuestro enfoque está en entornos de audio virtuales. Primero describimos los desafíos encontrados en las conferencias de audio virtuales. Luego investigamos las motivaciones seguidas por la literatura relevante. En la Sección 5, explicamos la arquitectura de nuestro sistema. La sección 6 comprende la descripción de los diversos algoritmos utilizados en nuestra configuración. Abordamos problemas de implementación. Una discusión sobre el Instituto Federal Suizo de Tecnología, Lausana. Antiguo visitante en CEDT. PESIT y NIAS, Bangalore, India. El rendimiento sigue. Concluimos teniendo en cuenta algunos problemas de implementación. 2. DESAFÍOS EN LA VIDEOCONFERENCIA VoIP Surgen muchos desafíos al construir una aplicación VoIP. Lo siguiente es de particular preocupación en el proceso: • Facilidad de uso: la conferencia debe ser sencilla; los usuarios no necesitan experiencia en el dominio. La gestión (adición/eliminación) de clientes y servidores debe ser sencilla. El desarrollo de aplicaciones no debe presuponer características específicas del sistema subyacente o de las capas de red. La facilidad de uso puede incluir el aprovechamiento de tecnologías fácilmente disponibles, técnicamente factibles y económicamente viables. • Escalabilidad: Las conferencias deben parecer ininterrumpidas bajo cargas pesadas, es decir, cuando se agregan muchos usuarios adicionales. El tráfico en la WAN no debería aumentar apreciablemente con el número total de clientes; de lo contrario, esto podría provocar congestión. Por lo tanto, se necesita un medio para regular el tráfico al mínimo para este tipo de aplicaciones en tiempo real. • Interactividad: En Entornos de Conferencias Virtuales (ECVs), pretendemos una aplicación de conferencias cara a cara que imite una conferencia real, donde los participantes más vocales invitan la atención. El intercambio de turnos en la ocupación del espacio por parte de los participantes debe adaptarse con gracia para lograr una transición natural. • Estandarización: La solución debe cumplir con los estándares establecidos para lograr interoperabilidad y aceptación entre pares. Los requisitos anteriores se colocan en la perspectiva de las observaciones realizadas en trabajos anteriores (véase Secciones 3 y 4) y guiarán el diseño del VCE. 3. La motivación Ramanathan y Rangan [20] han estudiado en detalle las configuraciones arquitectónicas comparando muchos esquemas de arquitectura de conferencias teniendo en cuenta la demora de red y los requisitos de computación para la mezcla. La división funcional y el diseño de arquitectura orientada a objetos que ayudan en la implementación se presentan en [1]. Un resumen de muchos temas relacionados con el apoyo a una conferencia grande se aborda en [8]. H. P. Dommel [5] y muchos otros destacan el control de piso como otro aspecto fundamental a tener en cuenta en el diseño de una herramienta de conferencias. Los protocolos de control de conferencias fuertemente acoplados en Internet pertenecen a la familia ITU-T H.323 [9]; sin embargo, están principalmente diseñados para conferencias pequeñas. El último borrador del IETF de Rosenberg y Schulzrinne [23] discute modelos de conferencia con <br>SIP</br> [22] en el fondo. Los aspectos de implementación para la conferencia <br>SIP</br> centralizada se informan en [26]. Un nuevo enfoque llamado mezcla parcial por Radenkovic [18] permite que flujos mezclados y no mezclados coexistan. En todas las propuestas anteriores, si bien hay algunas sugerencias muy útiles, comparten una o más de las siguientes limitaciones: • En una conferencia de audio, no es necesario mezclar los flujos de todos los clientes. De hecho, mezclar muchas corrientes arbitrarias [24] de clientes degrada la calidad de la conferencia debido a la reducción en el volumen (aspecto espacial del habla). El número de flujos mezclados varía dinámicamente dependiendo del número de participantes activos. Esto provocaría fluctuaciones en el volumen de cada participante individual, causando una degradación severa en la calidad. La mezcla personalizada de flujos no es posible cuando hay muchos clientes activos. Existe un umbral en el número de oradores simultáneos por encima del cual aumentar el número de oradores se vuelve contraproducente para la calidad de la conferencia. La fijación del número máximo de hablantes simultáneos se aborda en un trabajo reciente [15] utilizando la Etnometodología, y se postula que es tres. Por lo tanto, es recomendable respetar esa restricción. • No puede haber muchos mezcladores intermedios (similarmente, Servidores de Conferencia como en [10]) en etapas como en [20] porque provoca un retraso desmedido al aumentar el número de saltos y no es escalable con la interactividad como enfoque. • El Control de Piso para una conferencia de audio (incluso de video) con instrucciones explícitas de toma de turnos para los participantes convierte la conferencia en esencia en un asunto de un orador a la vez, no en una en vivo y libre de interrupciones. De esta manera, la conferencia se vuelve notablemente artificial y su calidad se degrada. Schulzrinne et al. [24], asumen que solo un participante está hablando en un momento dado. En este caso, si las aplicaciones se implementan con cierto control [5], el servicio se vuelve asfixiante para los usuarios. • La mezcla parcial [18] tiene un problema similar al de la mezcla cuando se mezclan más flujos. Además, en [18], para permitir el discurso improvisado, la mezcla no se realiza cuando la red puede soportar altos requisitos de ancho de banda para enviar/recibir todas las transmisiones, pero es innecesaria [15]. • Para conferencias grandes [23, 10] una conferencia centralizada no puede escalar. Con la multidifusión, los clientes tendrán que analizar muchos flujos y el tráfico en la red de los clientes aumenta innecesariamente. Evidentemente, se abordan diferentes problemas particulares, todos los cuales son un subconjunto de los requisitos (definidos en [14] y [16]) para el soporte de conferencias de VoIP. Por lo tanto, es necesario abordar la conferencia en su totalidad teniendo en cuenta todos sus requisitos de manera simultánea. Con este objetivo, el sistema de conferencias VoIP que proponemos está diseñado para ser escalable e interactivo. Hacemos uso del Número de Sonoridad para implementar el control de volumen. Esto permite a un participante entrar libremente en el modo de hablar para interrumpir al orador actual como en una reunión natural cara a cara. Un límite superior en el número de pisos (es decir, el número de oradores permitidos para hablar al mismo tiempo) se fija utilizando una conjetura propuesta en [15]. El trabajo presentado aquí es una continuación de nuestros estudios sobre conferencias basadas en el Protocolo de Inicio de Sesión en [14] y [16]. <br>SIP</br>, definido en [22], es ahora el estándar más popular para implementación de VoIP y ha sido elegido por su fortaleza, facilidad de uso, extensibilidad y compatibilidad. Esta es la razón por la cual estará en el trasfondo de todos los mensajes de control que surgirán implícitamente entre las entidades en nuestra arquitectura. Los mensajes actuales están descritos en [16] y, como tal, no presentamos una descripción completa de ellos aquí. 4. TRABAJO RELACIONADO El estándar SIP definido en el RFC 3261 [22] y en extensiones posteriores como [21] no ofrece servicios de <br>control de conferencias</br> como control de piso o votación y no prescribe cómo debe ser gestionada una conferencia. ",
            "candidates": [],
            "error": [
                [
                    "capacidades de SIP",
                    "SIP",
                    "SIP",
                    "SIP",
                    "control de conferencias"
                ]
            ]
        }
    }
}