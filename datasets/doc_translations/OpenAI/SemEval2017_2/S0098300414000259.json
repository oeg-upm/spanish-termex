{
    "id": "S0098300414000259",
    "original_text": "Apache Pig is a platform for creating MapReduce workflows with Hadoop. These workflows are expressed as directed acyclic graphs (DAGs) of tasks that exist at a conceptually higher level than their implementations as series of MapReduce jobs. Pig Latin is the procedural language used for building these workflows, providing syntax similar to the declarative SQL commonly used for relational database systems. In addition to standard SQL operations, Pig can be extended with user-defined functions (UDFs) commonly written in Java. We adopted Pig for our implementation of the correlator to speed up development time, allow for ad hoc workflow changes, and to embrace the Hadoop community׳s migration away from MapReduce towards more generalized DAG processing (Mayer, 2013). Specifically, in the event that future versions of Hadoop are optimized to support paradigms other than MapReduce, Pig scripts could take advantage of these advances without recoding, whereas explicit Java MapReduce jobs would need to be rewritten.",
    "original_translation": "Apache Pig es una plataforma para crear flujos de trabajo MapReduce con Hadoop. Estos flujos de trabajo se expresan como gráficos acíclicos dirigidos (DAG) de tareas que existen a un nivel conceptualmente más alto que sus implementaciones como series de trabajos MapReduce. Pig Latin es el lenguaje procedural utilizado para construir estos flujos de trabajo, proporcionando una sintaxis similar al SQL declarativo comúnmente utilizado en sistemas de bases de datos relacionales. Además de las operaciones SQL estándar, Pig puede ser ampliado con funciones definidas por el usuario (UDFs) comúnmente escritas en Java. Adoptamos Pig para nuestra implementación del correlacionador para acelerar el tiempo de desarrollo, permitir cambios ad hoc en el flujo de trabajo y para adoptar la migración de la comunidad de Hadoop lejos de MapReduce hacia un procesamiento de DAG más generalizado (Mayer, 2013). Específicamente, en caso de que futuras versiones de Hadoop estén optimizadas para admitir paradigmas distintos a MapReduce, los scripts de Pig podrían aprovechar estos avances sin necesidad de recodificación, mientras que los trabajos explícitos de Java MapReduce necesitarían ser reescritos.",
    "original_sentences": [
        "Apache Pig is a platform for creating MapReduce workflows with Hadoop.",
        "These workflows are expressed as directed acyclic graphs (DAGs) of tasks that exist at a conceptually higher level than their implementations as series of MapReduce jobs.",
        "Pig Latin is the procedural language used for building these workflows, providing syntax similar to the declarative SQL commonly used for relational database systems.",
        "In addition to standard SQL operations, Pig can be extended with user-defined functions (UDFs) commonly written in Java.",
        "We adopted Pig for our implementation of the correlator to speed up development time, allow for ad hoc workflow changes, and to embrace the Hadoop community׳s migration away from MapReduce towards more generalized DAG processing (Mayer, 2013).",
        "Specifically, in the event that future versions of Hadoop are optimized to support paradigms other than MapReduce, Pig scripts could take advantage of these advances without recoding, whereas explicit Java MapReduce jobs would need to be rewritten."
    ],
    "translated_text_sentences": [
        "Apache Pig es una plataforma para crear flujos de trabajo MapReduce con Hadoop.",
        "Estos flujos de trabajo se expresan como gráficos acíclicos dirigidos (DAG) de tareas que existen a un nivel conceptualmente más alto que sus implementaciones como series de trabajos MapReduce.",
        "Pig Latin es el lenguaje procedural utilizado para construir estos flujos de trabajo, proporcionando una sintaxis similar al SQL declarativo comúnmente utilizado en sistemas de bases de datos relacionales.",
        "Además de las operaciones SQL estándar, Pig puede ser ampliado con funciones definidas por el usuario (UDFs) comúnmente escritas en Java.",
        "Adoptamos Pig para nuestra implementación del correlacionador para acelerar el tiempo de desarrollo, permitir cambios ad hoc en el flujo de trabajo y para adoptar la migración de la comunidad de Hadoop lejos de MapReduce hacia un procesamiento de DAG más generalizado (Mayer, 2013).",
        "Específicamente, en caso de que futuras versiones de Hadoop estén optimizadas para admitir paradigmas distintos a MapReduce, los scripts de Pig podrían aprovechar estos avances sin necesidad de recodificación, mientras que los trabajos explícitos de Java MapReduce necesitarían ser reescritos."
    ],
    "error_count": 1,
    "keys": {
        "Apache Pig": {
            "translated_key": "Apache Pig",
            "is_in_text": true,
            "original_annotated_sentences": [
                "<br>Apache Pig</br> is a platform for creating MapReduce workflows with Hadoop.",
                "These workflows are expressed as directed acyclic graphs (DAGs) of tasks that exist at a conceptually higher level than their implementations as series of MapReduce jobs.",
                "Pig Latin is the procedural language used for building these workflows, providing syntax similar to the declarative SQL commonly used for relational database systems.",
                "In addition to standard SQL operations, Pig can be extended with user-defined functions (UDFs) commonly written in Java.",
                "We adopted Pig for our implementation of the correlator to speed up development time, allow for ad hoc workflow changes, and to embrace the Hadoop community׳s migration away from MapReduce towards more generalized DAG processing (Mayer, 2013).",
                "Specifically, in the event that future versions of Hadoop are optimized to support paradigms other than MapReduce, Pig scripts could take advantage of these advances without recoding, whereas explicit Java MapReduce jobs would need to be rewritten."
            ],
            "original_annotated_samples": [
                "<br>Apache Pig</br> is a platform for creating MapReduce workflows with Hadoop."
            ],
            "translated_annotated_samples": [
                "<br>Apache Pig</br> es una plataforma para crear flujos de trabajo MapReduce con Hadoop."
            ],
            "translated_text": "<br>Apache Pig</br> es una plataforma para crear flujos de trabajo MapReduce con Hadoop. Estos flujos de trabajo se expresan como gráficos acíclicos dirigidos (DAG) de tareas que existen a un nivel conceptualmente más alto que sus implementaciones como series de trabajos MapReduce. Pig Latin es el lenguaje procedural utilizado para construir estos flujos de trabajo, proporcionando una sintaxis similar al SQL declarativo comúnmente utilizado en sistemas de bases de datos relacionales. Además de las operaciones SQL estándar, Pig puede ser ampliado con funciones definidas por el usuario (UDFs) comúnmente escritas en Java. Adoptamos Pig para nuestra implementación del correlacionador para acelerar el tiempo de desarrollo, permitir cambios ad hoc en el flujo de trabajo y para adoptar la migración de la comunidad de Hadoop lejos de MapReduce hacia un procesamiento de DAG más generalizado (Mayer, 2013). Específicamente, en caso de que futuras versiones de Hadoop estén optimizadas para admitir paradigmas distintos a MapReduce, los scripts de Pig podrían aprovechar estos avances sin necesidad de recodificación, mientras que los trabajos explícitos de Java MapReduce necesitarían ser reescritos. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "DAG processing": {
            "translated_key": "procesamiento de DAG",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Apache Pig is a platform for creating MapReduce workflows with Hadoop.",
                "These workflows are expressed as directed acyclic graphs (DAGs) of tasks that exist at a conceptually higher level than their implementations as series of MapReduce jobs.",
                "Pig Latin is the procedural language used for building these workflows, providing syntax similar to the declarative SQL commonly used for relational database systems.",
                "In addition to standard SQL operations, Pig can be extended with user-defined functions (UDFs) commonly written in Java.",
                "We adopted Pig for our implementation of the correlator to speed up development time, allow for ad hoc workflow changes, and to embrace the Hadoop community׳s migration away from MapReduce towards more generalized <br>DAG processing</br> (Mayer, 2013).",
                "Specifically, in the event that future versions of Hadoop are optimized to support paradigms other than MapReduce, Pig scripts could take advantage of these advances without recoding, whereas explicit Java MapReduce jobs would need to be rewritten."
            ],
            "original_annotated_samples": [
                "We adopted Pig for our implementation of the correlator to speed up development time, allow for ad hoc workflow changes, and to embrace the Hadoop community׳s migration away from MapReduce towards more generalized <br>DAG processing</br> (Mayer, 2013)."
            ],
            "translated_annotated_samples": [
                "Adoptamos Pig para nuestra implementación del correlacionador para acelerar el tiempo de desarrollo, permitir cambios ad hoc en el flujo de trabajo y para adoptar la migración de la comunidad de Hadoop lejos de MapReduce hacia un <br>procesamiento de DAG</br> más generalizado (Mayer, 2013)."
            ],
            "translated_text": "Apache Pig es una plataforma para crear flujos de trabajo MapReduce con Hadoop. Estos flujos de trabajo se expresan como gráficos acíclicos dirigidos (DAG) de tareas que existen a un nivel conceptualmente más alto que sus implementaciones como series de trabajos MapReduce. Pig Latin es el lenguaje procedural utilizado para construir estos flujos de trabajo, proporcionando una sintaxis similar al SQL declarativo comúnmente utilizado en sistemas de bases de datos relacionales. Además de las operaciones SQL estándar, Pig puede ser ampliado con funciones definidas por el usuario (UDFs) comúnmente escritas en Java. Adoptamos Pig para nuestra implementación del correlacionador para acelerar el tiempo de desarrollo, permitir cambios ad hoc en el flujo de trabajo y para adoptar la migración de la comunidad de Hadoop lejos de MapReduce hacia un <br>procesamiento de DAG</br> más generalizado (Mayer, 2013). Específicamente, en caso de que futuras versiones de Hadoop estén optimizadas para admitir paradigmas distintos a MapReduce, los scripts de Pig podrían aprovechar estos avances sin necesidad de recodificación, mientras que los trabajos explícitos de Java MapReduce necesitarían ser reescritos. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "DAGs": {
            "translated_key": "gráficos acíclicos dirigidos",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Apache Pig is a platform for creating MapReduce workflows with Hadoop.",
                "These workflows are expressed as directed acyclic graphs (<br>DAGs</br>) of tasks that exist at a conceptually higher level than their implementations as series of MapReduce jobs.",
                "Pig Latin is the procedural language used for building these workflows, providing syntax similar to the declarative SQL commonly used for relational database systems.",
                "In addition to standard SQL operations, Pig can be extended with user-defined functions (UDFs) commonly written in Java.",
                "We adopted Pig for our implementation of the correlator to speed up development time, allow for ad hoc workflow changes, and to embrace the Hadoop community׳s migration away from MapReduce towards more generalized DAG processing (Mayer, 2013).",
                "Specifically, in the event that future versions of Hadoop are optimized to support paradigms other than MapReduce, Pig scripts could take advantage of these advances without recoding, whereas explicit Java MapReduce jobs would need to be rewritten."
            ],
            "original_annotated_samples": [
                "These workflows are expressed as directed acyclic graphs (<br>DAGs</br>) of tasks that exist at a conceptually higher level than their implementations as series of MapReduce jobs."
            ],
            "translated_annotated_samples": [
                "Estos flujos de trabajo se expresan como <br>gráficos acíclicos dirigidos</br> (DAG) de tareas que existen a un nivel conceptualmente más alto que sus implementaciones como series de trabajos MapReduce."
            ],
            "translated_text": "Apache Pig es una plataforma para crear flujos de trabajo MapReduce con Hadoop. Estos flujos de trabajo se expresan como <br>gráficos acíclicos dirigidos</br> (DAG) de tareas que existen a un nivel conceptualmente más alto que sus implementaciones como series de trabajos MapReduce. Pig Latin es el lenguaje procedural utilizado para construir estos flujos de trabajo, proporcionando una sintaxis similar al SQL declarativo comúnmente utilizado en sistemas de bases de datos relacionales. Además de las operaciones SQL estándar, Pig puede ser ampliado con funciones definidas por el usuario (UDFs) comúnmente escritas en Java. Adoptamos Pig para nuestra implementación del correlacionador para acelerar el tiempo de desarrollo, permitir cambios ad hoc en el flujo de trabajo y para adoptar la migración de la comunidad de Hadoop lejos de MapReduce hacia un procesamiento de DAG más generalizado (Mayer, 2013). Específicamente, en caso de que futuras versiones de Hadoop estén optimizadas para admitir paradigmas distintos a MapReduce, los scripts de Pig podrían aprovechar estos avances sin necesidad de recodificación, mientras que los trabajos explícitos de Java MapReduce necesitarían ser reescritos. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "directed acyclic graphs": {
            "translated_key": "gráficos acíclicos dirigidos",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Apache Pig is a platform for creating MapReduce workflows with Hadoop.",
                "These workflows are expressed as <br>directed acyclic graphs</br> (DAGs) of tasks that exist at a conceptually higher level than their implementations as series of MapReduce jobs.",
                "Pig Latin is the procedural language used for building these workflows, providing syntax similar to the declarative SQL commonly used for relational database systems.",
                "In addition to standard SQL operations, Pig can be extended with user-defined functions (UDFs) commonly written in Java.",
                "We adopted Pig for our implementation of the correlator to speed up development time, allow for ad hoc workflow changes, and to embrace the Hadoop community׳s migration away from MapReduce towards more generalized DAG processing (Mayer, 2013).",
                "Specifically, in the event that future versions of Hadoop are optimized to support paradigms other than MapReduce, Pig scripts could take advantage of these advances without recoding, whereas explicit Java MapReduce jobs would need to be rewritten."
            ],
            "original_annotated_samples": [
                "These workflows are expressed as <br>directed acyclic graphs</br> (DAGs) of tasks that exist at a conceptually higher level than their implementations as series of MapReduce jobs."
            ],
            "translated_annotated_samples": [
                "Estos flujos de trabajo se expresan como <br>gráficos acíclicos dirigidos</br> (DAG) de tareas que existen a un nivel conceptualmente más alto que sus implementaciones como series de trabajos MapReduce."
            ],
            "translated_text": "Apache Pig es una plataforma para crear flujos de trabajo MapReduce con Hadoop. Estos flujos de trabajo se expresan como <br>gráficos acíclicos dirigidos</br> (DAG) de tareas que existen a un nivel conceptualmente más alto que sus implementaciones como series de trabajos MapReduce. Pig Latin es el lenguaje procedural utilizado para construir estos flujos de trabajo, proporcionando una sintaxis similar al SQL declarativo comúnmente utilizado en sistemas de bases de datos relacionales. Además de las operaciones SQL estándar, Pig puede ser ampliado con funciones definidas por el usuario (UDFs) comúnmente escritas en Java. Adoptamos Pig para nuestra implementación del correlacionador para acelerar el tiempo de desarrollo, permitir cambios ad hoc en el flujo de trabajo y para adoptar la migración de la comunidad de Hadoop lejos de MapReduce hacia un procesamiento de DAG más generalizado (Mayer, 2013). Específicamente, en caso de que futuras versiones de Hadoop estén optimizadas para admitir paradigmas distintos a MapReduce, los scripts de Pig podrían aprovechar estos avances sin necesidad de recodificación, mientras que los trabajos explícitos de Java MapReduce necesitarían ser reescritos. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "Hadoop": {
            "translated_key": "Hadoop",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Apache Pig is a platform for creating MapReduce workflows with <br>Hadoop</br>.",
                "These workflows are expressed as directed acyclic graphs (DAGs) of tasks that exist at a conceptually higher level than their implementations as series of MapReduce jobs.",
                "Pig Latin is the procedural language used for building these workflows, providing syntax similar to the declarative SQL commonly used for relational database systems.",
                "In addition to standard SQL operations, Pig can be extended with user-defined functions (UDFs) commonly written in Java.",
                "We adopted Pig for our implementation of the correlator to speed up development time, allow for ad hoc workflow changes, and to embrace the <br>Hadoop</br> community׳s migration away from MapReduce towards more generalized DAG processing (Mayer, 2013).",
                "Specifically, in the event that future versions of <br>Hadoop</br> are optimized to support paradigms other than MapReduce, Pig scripts could take advantage of these advances without recoding, whereas explicit Java MapReduce jobs would need to be rewritten."
            ],
            "original_annotated_samples": [
                "Apache Pig is a platform for creating MapReduce workflows with <br>Hadoop</br>.",
                "We adopted Pig for our implementation of the correlator to speed up development time, allow for ad hoc workflow changes, and to embrace the <br>Hadoop</br> community׳s migration away from MapReduce towards more generalized DAG processing (Mayer, 2013).",
                "Specifically, in the event that future versions of <br>Hadoop</br> are optimized to support paradigms other than MapReduce, Pig scripts could take advantage of these advances without recoding, whereas explicit Java MapReduce jobs would need to be rewritten."
            ],
            "translated_annotated_samples": [
                "Apache Pig es una plataforma para crear flujos de trabajo MapReduce con <br>Hadoop</br>.",
                "Adoptamos Pig para nuestra implementación del correlacionador para acelerar el tiempo de desarrollo, permitir cambios ad hoc en el flujo de trabajo y para adoptar la migración de la comunidad de <br>Hadoop</br> lejos de MapReduce hacia un procesamiento de DAG más generalizado (Mayer, 2013).",
                "Específicamente, en caso de que futuras versiones de <br>Hadoop</br> estén optimizadas para admitir paradigmas distintos a MapReduce, los scripts de Pig podrían aprovechar estos avances sin necesidad de recodificación, mientras que los trabajos explícitos de Java MapReduce necesitarían ser reescritos."
            ],
            "translated_text": "Apache Pig es una plataforma para crear flujos de trabajo MapReduce con <br>Hadoop</br>. Estos flujos de trabajo se expresan como gráficos acíclicos dirigidos (DAG) de tareas que existen a un nivel conceptualmente más alto que sus implementaciones como series de trabajos MapReduce. Pig Latin es el lenguaje procedural utilizado para construir estos flujos de trabajo, proporcionando una sintaxis similar al SQL declarativo comúnmente utilizado en sistemas de bases de datos relacionales. Además de las operaciones SQL estándar, Pig puede ser ampliado con funciones definidas por el usuario (UDFs) comúnmente escritas en Java. Adoptamos Pig para nuestra implementación del correlacionador para acelerar el tiempo de desarrollo, permitir cambios ad hoc en el flujo de trabajo y para adoptar la migración de la comunidad de <br>Hadoop</br> lejos de MapReduce hacia un procesamiento de DAG más generalizado (Mayer, 2013). Específicamente, en caso de que futuras versiones de <br>Hadoop</br> estén optimizadas para admitir paradigmas distintos a MapReduce, los scripts de Pig podrían aprovechar estos avances sin necesidad de recodificación, mientras que los trabajos explícitos de Java MapReduce necesitarían ser reescritos. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "Java MapReduce": {
            "translated_key": "Java MapReduce",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Apache Pig is a platform for creating MapReduce workflows with Hadoop.",
                "These workflows are expressed as directed acyclic graphs (DAGs) of tasks that exist at a conceptually higher level than their implementations as series of MapReduce jobs.",
                "Pig Latin is the procedural language used for building these workflows, providing syntax similar to the declarative SQL commonly used for relational database systems.",
                "In addition to standard SQL operations, Pig can be extended with user-defined functions (UDFs) commonly written in Java.",
                "We adopted Pig for our implementation of the correlator to speed up development time, allow for ad hoc workflow changes, and to embrace the Hadoop community׳s migration away from MapReduce towards more generalized DAG processing (Mayer, 2013).",
                "Specifically, in the event that future versions of Hadoop are optimized to support paradigms other than MapReduce, Pig scripts could take advantage of these advances without recoding, whereas explicit <br>Java MapReduce</br> jobs would need to be rewritten."
            ],
            "original_annotated_samples": [
                "Specifically, in the event that future versions of Hadoop are optimized to support paradigms other than MapReduce, Pig scripts could take advantage of these advances without recoding, whereas explicit <br>Java MapReduce</br> jobs would need to be rewritten."
            ],
            "translated_annotated_samples": [
                "Específicamente, en caso de que futuras versiones de Hadoop estén optimizadas para admitir paradigmas distintos a MapReduce, los scripts de Pig podrían aprovechar estos avances sin necesidad de recodificación, mientras que los trabajos explícitos de <br>Java MapReduce</br> necesitarían ser reescritos."
            ],
            "translated_text": "Apache Pig es una plataforma para crear flujos de trabajo MapReduce con Hadoop. Estos flujos de trabajo se expresan como gráficos acíclicos dirigidos (DAG) de tareas que existen a un nivel conceptualmente más alto que sus implementaciones como series de trabajos MapReduce. Pig Latin es el lenguaje procedural utilizado para construir estos flujos de trabajo, proporcionando una sintaxis similar al SQL declarativo comúnmente utilizado en sistemas de bases de datos relacionales. Además de las operaciones SQL estándar, Pig puede ser ampliado con funciones definidas por el usuario (UDFs) comúnmente escritas en Java. Adoptamos Pig para nuestra implementación del correlacionador para acelerar el tiempo de desarrollo, permitir cambios ad hoc en el flujo de trabajo y para adoptar la migración de la comunidad de Hadoop lejos de MapReduce hacia un procesamiento de DAG más generalizado (Mayer, 2013). Específicamente, en caso de que futuras versiones de Hadoop estén optimizadas para admitir paradigmas distintos a MapReduce, los scripts de Pig podrían aprovechar estos avances sin necesidad de recodificación, mientras que los trabajos explícitos de <br>Java MapReduce</br> necesitarían ser reescritos. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "MapReduce": {
            "translated_key": "MapReduce",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Apache Pig is a platform for creating <br>MapReduce</br> workflows with Hadoop.",
                "These workflows are expressed as directed acyclic graphs (DAGs) of tasks that exist at a conceptually higher level than their implementations as series of <br>MapReduce</br> jobs.",
                "Pig Latin is the procedural language used for building these workflows, providing syntax similar to the declarative SQL commonly used for relational database systems.",
                "In addition to standard SQL operations, Pig can be extended with user-defined functions (UDFs) commonly written in Java.",
                "We adopted Pig for our implementation of the correlator to speed up development time, allow for ad hoc workflow changes, and to embrace the Hadoop community׳s migration away from <br>MapReduce</br> towards more generalized DAG processing (Mayer, 2013).",
                "Specifically, in the event that future versions of Hadoop are optimized to support paradigms other than <br>MapReduce</br>, Pig scripts could take advantage of these advances without recoding, whereas explicit Java <br>MapReduce</br> jobs would need to be rewritten."
            ],
            "original_annotated_samples": [
                "Apache Pig is a platform for creating <br>MapReduce</br> workflows with Hadoop.",
                "These workflows are expressed as directed acyclic graphs (DAGs) of tasks that exist at a conceptually higher level than their implementations as series of <br>MapReduce</br> jobs.",
                "We adopted Pig for our implementation of the correlator to speed up development time, allow for ad hoc workflow changes, and to embrace the Hadoop community׳s migration away from <br>MapReduce</br> towards more generalized DAG processing (Mayer, 2013).",
                "Specifically, in the event that future versions of Hadoop are optimized to support paradigms other than <br>MapReduce</br>, Pig scripts could take advantage of these advances without recoding, whereas explicit Java <br>MapReduce</br> jobs would need to be rewritten."
            ],
            "translated_annotated_samples": [
                "Apache Pig es una plataforma para crear flujos de trabajo <br>MapReduce</br> con Hadoop.",
                "Estos flujos de trabajo se expresan como gráficos acíclicos dirigidos (DAG) de tareas que existen a un nivel conceptualmente más alto que sus implementaciones como series de trabajos <br>MapReduce</br>.",
                "Adoptamos Pig para nuestra implementación del correlacionador para acelerar el tiempo de desarrollo, permitir cambios ad hoc en el flujo de trabajo y para adoptar la migración de la comunidad de Hadoop lejos de <br>MapReduce</br> hacia un procesamiento de DAG más generalizado (Mayer, 2013).",
                "Específicamente, en caso de que futuras versiones de Hadoop estén optimizadas para admitir paradigmas distintos a <br>MapReduce</br>, los scripts de Pig podrían aprovechar estos avances sin necesidad de recodificación, mientras que los trabajos explícitos de Java <br>MapReduce</br> necesitarían ser reescritos."
            ],
            "translated_text": "Apache Pig es una plataforma para crear flujos de trabajo <br>MapReduce</br> con Hadoop. Estos flujos de trabajo se expresan como gráficos acíclicos dirigidos (DAG) de tareas que existen a un nivel conceptualmente más alto que sus implementaciones como series de trabajos <br>MapReduce</br>. Pig Latin es el lenguaje procedural utilizado para construir estos flujos de trabajo, proporcionando una sintaxis similar al SQL declarativo comúnmente utilizado en sistemas de bases de datos relacionales. Además de las operaciones SQL estándar, Pig puede ser ampliado con funciones definidas por el usuario (UDFs) comúnmente escritas en Java. Adoptamos Pig para nuestra implementación del correlacionador para acelerar el tiempo de desarrollo, permitir cambios ad hoc en el flujo de trabajo y para adoptar la migración de la comunidad de Hadoop lejos de <br>MapReduce</br> hacia un procesamiento de DAG más generalizado (Mayer, 2013). Específicamente, en caso de que futuras versiones de Hadoop estén optimizadas para admitir paradigmas distintos a <br>MapReduce</br>, los scripts de Pig podrían aprovechar estos avances sin necesidad de recodificación, mientras que los trabajos explícitos de Java <br>MapReduce</br> necesitarían ser reescritos. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "MapReduce workflows": {
            "translated_key": "flujos de trabajo MapReduce",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Apache Pig is a platform for creating <br>MapReduce workflows</br> with Hadoop.",
                "These workflows are expressed as directed acyclic graphs (DAGs) of tasks that exist at a conceptually higher level than their implementations as series of MapReduce jobs.",
                "Pig Latin is the procedural language used for building these workflows, providing syntax similar to the declarative SQL commonly used for relational database systems.",
                "In addition to standard SQL operations, Pig can be extended with user-defined functions (UDFs) commonly written in Java.",
                "We adopted Pig for our implementation of the correlator to speed up development time, allow for ad hoc workflow changes, and to embrace the Hadoop community׳s migration away from MapReduce towards more generalized DAG processing (Mayer, 2013).",
                "Specifically, in the event that future versions of Hadoop are optimized to support paradigms other than MapReduce, Pig scripts could take advantage of these advances without recoding, whereas explicit Java MapReduce jobs would need to be rewritten."
            ],
            "original_annotated_samples": [
                "Apache Pig is a platform for creating <br>MapReduce workflows</br> with Hadoop."
            ],
            "translated_annotated_samples": [
                "Apache Pig es una plataforma para crear <br>flujos de trabajo MapReduce</br> con Hadoop."
            ],
            "translated_text": "Apache Pig es una plataforma para crear <br>flujos de trabajo MapReduce</br> con Hadoop. Estos flujos de trabajo se expresan como gráficos acíclicos dirigidos (DAG) de tareas que existen a un nivel conceptualmente más alto que sus implementaciones como series de trabajos MapReduce. Pig Latin es el lenguaje procedural utilizado para construir estos flujos de trabajo, proporcionando una sintaxis similar al SQL declarativo comúnmente utilizado en sistemas de bases de datos relacionales. Además de las operaciones SQL estándar, Pig puede ser ampliado con funciones definidas por el usuario (UDFs) comúnmente escritas en Java. Adoptamos Pig para nuestra implementación del correlacionador para acelerar el tiempo de desarrollo, permitir cambios ad hoc en el flujo de trabajo y para adoptar la migración de la comunidad de Hadoop lejos de MapReduce hacia un procesamiento de DAG más generalizado (Mayer, 2013). Específicamente, en caso de que futuras versiones de Hadoop estén optimizadas para admitir paradigmas distintos a MapReduce, los scripts de Pig podrían aprovechar estos avances sin necesidad de recodificación, mientras que los trabajos explícitos de Java MapReduce necesitarían ser reescritos. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "Pig": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Apache <br>Pig</br> is a platform for creating MapReduce workflows with Hadoop.",
                "These workflows are expressed as directed acyclic graphs (DAGs) of tasks that exist at a conceptually higher level than their implementations as series of MapReduce jobs.",
                "<br>Pig</br> Latin is the procedural language used for building these workflows, providing syntax similar to the declarative SQL commonly used for relational database systems.",
                "In addition to standard SQL operations, <br>Pig</br> can be extended with user-defined functions (UDFs) commonly written in Java.",
                "We adopted <br>Pig</br> for our implementation of the correlator to speed up development time, allow for ad hoc workflow changes, and to embrace the Hadoop community׳s migration away from MapReduce towards more generalized DAG processing (Mayer, 2013).",
                "Specifically, in the event that future versions of Hadoop are optimized to support paradigms other than MapReduce, <br>Pig</br> scripts could take advantage of these advances without recoding, whereas explicit Java MapReduce jobs would need to be rewritten."
            ],
            "original_annotated_samples": [
                "Apache <br>Pig</br> is a platform for creating MapReduce workflows with Hadoop.",
                "<br>Pig</br> Latin is the procedural language used for building these workflows, providing syntax similar to the declarative SQL commonly used for relational database systems.",
                "In addition to standard SQL operations, <br>Pig</br> can be extended with user-defined functions (UDFs) commonly written in Java.",
                "We adopted <br>Pig</br> for our implementation of the correlator to speed up development time, allow for ad hoc workflow changes, and to embrace the Hadoop community׳s migration away from MapReduce towards more generalized DAG processing (Mayer, 2013).",
                "Specifically, in the event that future versions of Hadoop are optimized to support paradigms other than MapReduce, <br>Pig</br> scripts could take advantage of these advances without recoding, whereas explicit Java MapReduce jobs would need to be rewritten."
            ],
            "translated_annotated_samples": [
                "Apache <br>Pig</br> es una plataforma para crear flujos de trabajo MapReduce con Hadoop.",
                "<br>Pig Latin</br> es el lenguaje procedural utilizado para construir estos flujos de trabajo, proporcionando una sintaxis similar al SQL declarativo comúnmente utilizado en sistemas de bases de datos relacionales.",
                "Además de las operaciones SQL estándar, <br>Pig</br> puede ser ampliado con funciones definidas por el usuario (UDFs) comúnmente escritas en Java.",
                "Adoptamos <br>Pig</br> para nuestra implementación del correlacionador para acelerar el tiempo de desarrollo, permitir cambios ad hoc en el flujo de trabajo y para adoptar la migración de la comunidad de Hadoop lejos de MapReduce hacia un procesamiento de DAG más generalizado (Mayer, 2013).",
                "Específicamente, en caso de que futuras versiones de Hadoop estén optimizadas para admitir paradigmas distintos a MapReduce, los scripts de <br>Pig</br> podrían aprovechar estos avances sin necesidad de recodificación, mientras que los trabajos explícitos de Java MapReduce necesitarían ser reescritos."
            ],
            "translated_text": "Apache <br>Pig</br> es una plataforma para crear flujos de trabajo MapReduce con Hadoop. Estos flujos de trabajo se expresan como gráficos acíclicos dirigidos (DAG) de tareas que existen a un nivel conceptualmente más alto que sus implementaciones como series de trabajos MapReduce. <br>Pig Latin</br> es el lenguaje procedural utilizado para construir estos flujos de trabajo, proporcionando una sintaxis similar al SQL declarativo comúnmente utilizado en sistemas de bases de datos relacionales. Además de las operaciones SQL estándar, <br>Pig</br> puede ser ampliado con funciones definidas por el usuario (UDFs) comúnmente escritas en Java. Adoptamos <br>Pig</br> para nuestra implementación del correlacionador para acelerar el tiempo de desarrollo, permitir cambios ad hoc en el flujo de trabajo y para adoptar la migración de la comunidad de Hadoop lejos de MapReduce hacia un procesamiento de DAG más generalizado (Mayer, 2013). Específicamente, en caso de que futuras versiones de Hadoop estén optimizadas para admitir paradigmas distintos a MapReduce, los scripts de <br>Pig</br> podrían aprovechar estos avances sin necesidad de recodificación, mientras que los trabajos explícitos de Java MapReduce necesitarían ser reescritos. ",
            "candidates": [],
            "error": [
                [
                    "Pig",
                    "Pig Latin",
                    "Pig",
                    "Pig",
                    "Pig"
                ]
            ]
        },
        "Pig Latin": {
            "translated_key": "lenguaje procedural",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Apache Pig is a platform for creating MapReduce workflows with Hadoop.",
                "These workflows are expressed as directed acyclic graphs (DAGs) of tasks that exist at a conceptually higher level than their implementations as series of MapReduce jobs.",
                "<br>Pig Latin</br> is the procedural language used for building these workflows, providing syntax similar to the declarative SQL commonly used for relational database systems.",
                "In addition to standard SQL operations, Pig can be extended with user-defined functions (UDFs) commonly written in Java.",
                "We adopted Pig for our implementation of the correlator to speed up development time, allow for ad hoc workflow changes, and to embrace the Hadoop community׳s migration away from MapReduce towards more generalized DAG processing (Mayer, 2013).",
                "Specifically, in the event that future versions of Hadoop are optimized to support paradigms other than MapReduce, Pig scripts could take advantage of these advances without recoding, whereas explicit Java MapReduce jobs would need to be rewritten."
            ],
            "original_annotated_samples": [
                "<br>Pig Latin</br> is the procedural language used for building these workflows, providing syntax similar to the declarative SQL commonly used for relational database systems."
            ],
            "translated_annotated_samples": [
                "Pig Latin es el <br>lenguaje procedural</br> utilizado para construir estos flujos de trabajo, proporcionando una sintaxis similar al SQL declarativo comúnmente utilizado en sistemas de bases de datos relacionales."
            ],
            "translated_text": "Apache Pig es una plataforma para crear flujos de trabajo MapReduce con Hadoop. Estos flujos de trabajo se expresan como gráficos acíclicos dirigidos (DAG) de tareas que existen a un nivel conceptualmente más alto que sus implementaciones como series de trabajos MapReduce. Pig Latin es el <br>lenguaje procedural</br> utilizado para construir estos flujos de trabajo, proporcionando una sintaxis similar al SQL declarativo comúnmente utilizado en sistemas de bases de datos relacionales. Además de las operaciones SQL estándar, Pig puede ser ampliado con funciones definidas por el usuario (UDFs) comúnmente escritas en Java. Adoptamos Pig para nuestra implementación del correlacionador para acelerar el tiempo de desarrollo, permitir cambios ad hoc en el flujo de trabajo y para adoptar la migración de la comunidad de Hadoop lejos de MapReduce hacia un procesamiento de DAG más generalizado (Mayer, 2013). Específicamente, en caso de que futuras versiones de Hadoop estén optimizadas para admitir paradigmas distintos a MapReduce, los scripts de Pig podrían aprovechar estos avances sin necesidad de recodificación, mientras que los trabajos explícitos de Java MapReduce necesitarían ser reescritos. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "Pig scripts": {
            "translated_key": "scripts de Pig",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Apache Pig is a platform for creating MapReduce workflows with Hadoop.",
                "These workflows are expressed as directed acyclic graphs (DAGs) of tasks that exist at a conceptually higher level than their implementations as series of MapReduce jobs.",
                "Pig Latin is the procedural language used for building these workflows, providing syntax similar to the declarative SQL commonly used for relational database systems.",
                "In addition to standard SQL operations, Pig can be extended with user-defined functions (UDFs) commonly written in Java.",
                "We adopted Pig for our implementation of the correlator to speed up development time, allow for ad hoc workflow changes, and to embrace the Hadoop community׳s migration away from MapReduce towards more generalized DAG processing (Mayer, 2013).",
                "Specifically, in the event that future versions of Hadoop are optimized to support paradigms other than MapReduce, <br>Pig scripts</br> could take advantage of these advances without recoding, whereas explicit Java MapReduce jobs would need to be rewritten."
            ],
            "original_annotated_samples": [
                "Specifically, in the event that future versions of Hadoop are optimized to support paradigms other than MapReduce, <br>Pig scripts</br> could take advantage of these advances without recoding, whereas explicit Java MapReduce jobs would need to be rewritten."
            ],
            "translated_annotated_samples": [
                "Específicamente, en caso de que futuras versiones de Hadoop estén optimizadas para admitir paradigmas distintos a MapReduce, los <br>scripts de Pig</br> podrían aprovechar estos avances sin necesidad de recodificación, mientras que los trabajos explícitos de Java MapReduce necesitarían ser reescritos."
            ],
            "translated_text": "Apache Pig es una plataforma para crear flujos de trabajo MapReduce con Hadoop. Estos flujos de trabajo se expresan como gráficos acíclicos dirigidos (DAG) de tareas que existen a un nivel conceptualmente más alto que sus implementaciones como series de trabajos MapReduce. Pig Latin es el lenguaje procedural utilizado para construir estos flujos de trabajo, proporcionando una sintaxis similar al SQL declarativo comúnmente utilizado en sistemas de bases de datos relacionales. Además de las operaciones SQL estándar, Pig puede ser ampliado con funciones definidas por el usuario (UDFs) comúnmente escritas en Java. Adoptamos Pig para nuestra implementación del correlacionador para acelerar el tiempo de desarrollo, permitir cambios ad hoc en el flujo de trabajo y para adoptar la migración de la comunidad de Hadoop lejos de MapReduce hacia un procesamiento de DAG más generalizado (Mayer, 2013). Específicamente, en caso de que futuras versiones de Hadoop estén optimizadas para admitir paradigmas distintos a MapReduce, los <br>scripts de Pig</br> podrían aprovechar estos avances sin necesidad de recodificación, mientras que los trabajos explícitos de Java MapReduce necesitarían ser reescritos. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "SQL": {
            "translated_key": "SQL",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Apache Pig is a platform for creating MapReduce workflows with Hadoop.",
                "These workflows are expressed as directed acyclic graphs (DAGs) of tasks that exist at a conceptually higher level than their implementations as series of MapReduce jobs.",
                "Pig Latin is the procedural language used for building these workflows, providing syntax similar to the declarative <br>SQL</br> commonly used for relational database systems.",
                "In addition to standard <br>SQL</br> operations, Pig can be extended with user-defined functions (UDFs) commonly written in Java.",
                "We adopted Pig for our implementation of the correlator to speed up development time, allow for ad hoc workflow changes, and to embrace the Hadoop community׳s migration away from MapReduce towards more generalized DAG processing (Mayer, 2013).",
                "Specifically, in the event that future versions of Hadoop are optimized to support paradigms other than MapReduce, Pig scripts could take advantage of these advances without recoding, whereas explicit Java MapReduce jobs would need to be rewritten."
            ],
            "original_annotated_samples": [
                "Pig Latin is the procedural language used for building these workflows, providing syntax similar to the declarative <br>SQL</br> commonly used for relational database systems.",
                "In addition to standard <br>SQL</br> operations, Pig can be extended with user-defined functions (UDFs) commonly written in Java."
            ],
            "translated_annotated_samples": [
                "Pig Latin es el lenguaje procedural utilizado para construir estos flujos de trabajo, proporcionando una sintaxis similar al <br>SQL</br> declarativo comúnmente utilizado en sistemas de bases de datos relacionales.",
                "Además de las operaciones <br>SQL</br> estándar, Pig puede ser ampliado con funciones definidas por el usuario (UDFs) comúnmente escritas en Java."
            ],
            "translated_text": "Apache Pig es una plataforma para crear flujos de trabajo MapReduce con Hadoop. Estos flujos de trabajo se expresan como gráficos acíclicos dirigidos (DAG) de tareas que existen a un nivel conceptualmente más alto que sus implementaciones como series de trabajos MapReduce. Pig Latin es el lenguaje procedural utilizado para construir estos flujos de trabajo, proporcionando una sintaxis similar al <br>SQL</br> declarativo comúnmente utilizado en sistemas de bases de datos relacionales. Además de las operaciones <br>SQL</br> estándar, Pig puede ser ampliado con funciones definidas por el usuario (UDFs) comúnmente escritas en Java. Adoptamos Pig para nuestra implementación del correlacionador para acelerar el tiempo de desarrollo, permitir cambios ad hoc en el flujo de trabajo y para adoptar la migración de la comunidad de Hadoop lejos de MapReduce hacia un procesamiento de DAG más generalizado (Mayer, 2013). Específicamente, en caso de que futuras versiones de Hadoop estén optimizadas para admitir paradigmas distintos a MapReduce, los scripts de Pig podrían aprovechar estos avances sin necesidad de recodificación, mientras que los trabajos explícitos de Java MapReduce necesitarían ser reescritos. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "SQL operations": {
            "translated_key": "operaciones SQL",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Apache Pig is a platform for creating MapReduce workflows with Hadoop.",
                "These workflows are expressed as directed acyclic graphs (DAGs) of tasks that exist at a conceptually higher level than their implementations as series of MapReduce jobs.",
                "Pig Latin is the procedural language used for building these workflows, providing syntax similar to the declarative SQL commonly used for relational database systems.",
                "In addition to standard <br>SQL operations</br>, Pig can be extended with user-defined functions (UDFs) commonly written in Java.",
                "We adopted Pig for our implementation of the correlator to speed up development time, allow for ad hoc workflow changes, and to embrace the Hadoop community׳s migration away from MapReduce towards more generalized DAG processing (Mayer, 2013).",
                "Specifically, in the event that future versions of Hadoop are optimized to support paradigms other than MapReduce, Pig scripts could take advantage of these advances without recoding, whereas explicit Java MapReduce jobs would need to be rewritten."
            ],
            "original_annotated_samples": [
                "In addition to standard <br>SQL operations</br>, Pig can be extended with user-defined functions (UDFs) commonly written in Java."
            ],
            "translated_annotated_samples": [
                "Además de las <br>operaciones SQL</br> estándar, Pig puede ser ampliado con funciones definidas por el usuario (UDFs) comúnmente escritas en Java."
            ],
            "translated_text": "Apache Pig es una plataforma para crear flujos de trabajo MapReduce con Hadoop. Estos flujos de trabajo se expresan como gráficos acíclicos dirigidos (DAG) de tareas que existen a un nivel conceptualmente más alto que sus implementaciones como series de trabajos MapReduce. Pig Latin es el lenguaje procedural utilizado para construir estos flujos de trabajo, proporcionando una sintaxis similar al SQL declarativo comúnmente utilizado en sistemas de bases de datos relacionales. Además de las <br>operaciones SQL</br> estándar, Pig puede ser ampliado con funciones definidas por el usuario (UDFs) comúnmente escritas en Java. Adoptamos Pig para nuestra implementación del correlacionador para acelerar el tiempo de desarrollo, permitir cambios ad hoc en el flujo de trabajo y para adoptar la migración de la comunidad de Hadoop lejos de MapReduce hacia un procesamiento de DAG más generalizado (Mayer, 2013). Específicamente, en caso de que futuras versiones de Hadoop estén optimizadas para admitir paradigmas distintos a MapReduce, los scripts de Pig podrían aprovechar estos avances sin necesidad de recodificación, mientras que los trabajos explícitos de Java MapReduce necesitarían ser reescritos. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "UDFs": {
            "translated_key": "funciones definidas por el usuario",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Apache Pig is a platform for creating MapReduce workflows with Hadoop.",
                "These workflows are expressed as directed acyclic graphs (DAGs) of tasks that exist at a conceptually higher level than their implementations as series of MapReduce jobs.",
                "Pig Latin is the procedural language used for building these workflows, providing syntax similar to the declarative SQL commonly used for relational database systems.",
                "In addition to standard SQL operations, Pig can be extended with user-defined functions (<br>UDFs</br>) commonly written in Java.",
                "We adopted Pig for our implementation of the correlator to speed up development time, allow for ad hoc workflow changes, and to embrace the Hadoop community׳s migration away from MapReduce towards more generalized DAG processing (Mayer, 2013).",
                "Specifically, in the event that future versions of Hadoop are optimized to support paradigms other than MapReduce, Pig scripts could take advantage of these advances without recoding, whereas explicit Java MapReduce jobs would need to be rewritten."
            ],
            "original_annotated_samples": [
                "In addition to standard SQL operations, Pig can be extended with user-defined functions (<br>UDFs</br>) commonly written in Java."
            ],
            "translated_annotated_samples": [
                "Además de las operaciones SQL estándar, Pig puede ser ampliado con <br>funciones definidas por el usuario</br> (UDFs) comúnmente escritas en Java."
            ],
            "translated_text": "Apache Pig es una plataforma para crear flujos de trabajo MapReduce con Hadoop. Estos flujos de trabajo se expresan como gráficos acíclicos dirigidos (DAG) de tareas que existen a un nivel conceptualmente más alto que sus implementaciones como series de trabajos MapReduce. Pig Latin es el lenguaje procedural utilizado para construir estos flujos de trabajo, proporcionando una sintaxis similar al SQL declarativo comúnmente utilizado en sistemas de bases de datos relacionales. Además de las operaciones SQL estándar, Pig puede ser ampliado con <br>funciones definidas por el usuario</br> (UDFs) comúnmente escritas en Java. Adoptamos Pig para nuestra implementación del correlacionador para acelerar el tiempo de desarrollo, permitir cambios ad hoc en el flujo de trabajo y para adoptar la migración de la comunidad de Hadoop lejos de MapReduce hacia un procesamiento de DAG más generalizado (Mayer, 2013). Específicamente, en caso de que futuras versiones de Hadoop estén optimizadas para admitir paradigmas distintos a MapReduce, los scripts de Pig podrían aprovechar estos avances sin necesidad de recodificación, mientras que los trabajos explícitos de Java MapReduce necesitarían ser reescritos. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "user-defined functions": {
            "translated_key": "funciones definidas por el usuario",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Apache Pig is a platform for creating MapReduce workflows with Hadoop.",
                "These workflows are expressed as directed acyclic graphs (DAGs) of tasks that exist at a conceptually higher level than their implementations as series of MapReduce jobs.",
                "Pig Latin is the procedural language used for building these workflows, providing syntax similar to the declarative SQL commonly used for relational database systems.",
                "In addition to standard SQL operations, Pig can be extended with <br>user-defined functions</br> (UDFs) commonly written in Java.",
                "We adopted Pig for our implementation of the correlator to speed up development time, allow for ad hoc workflow changes, and to embrace the Hadoop community׳s migration away from MapReduce towards more generalized DAG processing (Mayer, 2013).",
                "Specifically, in the event that future versions of Hadoop are optimized to support paradigms other than MapReduce, Pig scripts could take advantage of these advances without recoding, whereas explicit Java MapReduce jobs would need to be rewritten."
            ],
            "original_annotated_samples": [
                "In addition to standard SQL operations, Pig can be extended with <br>user-defined functions</br> (UDFs) commonly written in Java."
            ],
            "translated_annotated_samples": [
                "Además de las operaciones SQL estándar, Pig puede ser ampliado con <br>funciones definidas por el usuario</br> (UDFs) comúnmente escritas en Java."
            ],
            "translated_text": "Apache Pig es una plataforma para crear flujos de trabajo MapReduce con Hadoop. Estos flujos de trabajo se expresan como gráficos acíclicos dirigidos (DAG) de tareas que existen a un nivel conceptualmente más alto que sus implementaciones como series de trabajos MapReduce. Pig Latin es el lenguaje procedural utilizado para construir estos flujos de trabajo, proporcionando una sintaxis similar al SQL declarativo comúnmente utilizado en sistemas de bases de datos relacionales. Además de las operaciones SQL estándar, Pig puede ser ampliado con <br>funciones definidas por el usuario</br> (UDFs) comúnmente escritas en Java. Adoptamos Pig para nuestra implementación del correlacionador para acelerar el tiempo de desarrollo, permitir cambios ad hoc en el flujo de trabajo y para adoptar la migración de la comunidad de Hadoop lejos de MapReduce hacia un procesamiento de DAG más generalizado (Mayer, 2013). Específicamente, en caso de que futuras versiones de Hadoop estén optimizadas para admitir paradigmas distintos a MapReduce, los scripts de Pig podrían aprovechar estos avances sin necesidad de recodificación, mientras que los trabajos explícitos de Java MapReduce necesitarían ser reescritos. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        }
    }
}