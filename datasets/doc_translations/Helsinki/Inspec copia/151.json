{
    "original_text": "Extending CTL with actions and real time In this paper, we present the logic ATCTL, which is intended to be used for model checking models that have been specified in a lightweight version of the Unified Modelling Language (UML). Elsewhere, we have defined a formal semantics for LUML to describe the models. This papers goal is to give a specification language for properties that fits LUML; LUML includes states, actions and real time. ATCTL extends CTL with concurrent actions and real time. It is based on earlier extensions of CTL by R. De Nicola and F. Vaandrager (ACTL) (1990) and R. Alur et aL (TCTL) (1993). This makes it easier to adapt existing model checkers to ATCTL. To show that we can check properties specified in ATCTL in models specified in LUML, we give a small example using the Kronos model checker",
    "original_translation": "Extendiendo CTL con acciones y tiempo real En este artículo, presentamos la lógica ATCTL, que está destinada a ser utilizada para modelos de verificación de modelos que han sido especificados en una versión ligera del Lenguaje de Modelado Unificado (UML). En otros lugares, hemos definido una semántica formal para LUML para describir los modelos. Este objetivo de los documentos es dar un lenguaje de especificación para las propiedades que se adaptan a LUML; LUML incluye estados, acciones y tiempo real. ATCTL extiende CTL con acciones concurrentes y en tiempo real. Se basa en anteriores extensiones de CTL por R. De Nicola y F. Vaandrager (ACTL) (1990) y R. Alur et al (TCTL) (1993). Esto facilita la adaptación de las fichas de modelos existentes a ATCTL. Para mostrar que podemos comprobar las propiedades especificadas en ATCTL en los modelos especificados en LUML, damos un pequeño ejemplo usando el Comprobador de modelos Kronos",
    "error_count": 7,
    "keys": {
        "actions": {
            "translated_key": [
                "actions",
                "acciones",
                "acciones concurrentes"
            ],
            "translated_annotated_text": "Extendiendo CTL con <br>actions</br> y tiempo real En este artículo, presentamos la lógica ATCTL, que está destinada a ser utilizada para modelos de verificación de modelos que han sido especificados en una versión ligera del Lenguaje de Modelado Unificado (UML). En otros lugares, hemos definido una semántica formal para LUML para describir los modelos. Este objetivo de los artículos es dar un lenguaje de especificación para las propiedades que se adaptan a LUML; LUML incluye estados, <br>acciones</br> y tiempo real. ATCTL extiende CTL con <br>acciones concurrentes</br> y en tiempo real. Se basa en anteriores extensiones de CTL por R. De Nicola y F. Vaandrager (ACTL) (1990) y R. Alur et al (TCTL) (1993). Esto facilita la adaptación de las fichas de modelos existentes a ATCTL. Para mostrar que podemos comprobar las propiedades especificadas en ATCTL en los modelos especificados en LUML, damos un pequeño ejemplo usando el Comprobador de modelos Kronos ",
            "error": [
                "actions",
                "acciones",
                "acciones concurrentes"
            ]
        },
        "real time logic": {
            "translated_key": [],
            "translated_annotated_text": "Extendiendo CTL con acciones y tiempo real En este artículo, presentamos la lógica ATCTL, que está destinada a ser utilizada para modelos de verificación de modelos que han sido especificados en una versión ligera del Lenguaje de Modelado Unificado (UML). En otros lugares, hemos definido una semántica formal para LUML para describir los modelos. Este objetivo de los documentos es dar un lenguaje de especificación para las propiedades que se adaptan a LUML; LUML incluye estados, acciones y tiempo real. ATCTL extiende CTL con acciones concurrentes y en tiempo real. Se basa en anteriores extensiones de CTL por R. De Nicola y F. Vaandrager (ACTL) (1990) y R. Alur et al (TCTL) (1993). Esto facilita la adaptación de las fichas de modelos existentes a ATCTL. Para mostrar que podemos comprobar las propiedades especificadas en ATCTL en los modelos especificados en LUML, damos un pequeño ejemplo usando el Comprobador de modelos Kronos ",
            "error": []
        },
        "logic ATCTL": {
            "translated_key": "logic ATCTL",
            "translated_annotated_text": "Extendiendo CTL con acciones y tiempo real En este artículo, presentamos el <br>logic ATCTL</br>, que está destinado a ser utilizado para modelos de verificación de modelos que han sido especificados en una versión ligera del Lenguaje de Modelado Unificado (UML). En otros lugares, hemos definido una semántica formal para LUML para describir los modelos. Este objetivo de los documentos es dar un lenguaje de especificación para las propiedades que se adaptan a LUML; LUML incluye estados, acciones y tiempo real. ATCTL extiende CTL con acciones concurrentes y en tiempo real. Se basa en anteriores extensiones de CTL por R. De Nicola y F. Vaandrager (ACTL) (1990) y R. Alur et al (TCTL) (1993). Esto facilita la adaptación de las fichas de modelos existentes a ATCTL. Para mostrar que podemos comprobar las propiedades especificadas en ATCTL en los modelos especificados en LUML, damos un pequeño ejemplo usando el Comprobador de modelos Kronos ",
            "error": [
                ""
            ]
        },
        "model checking models": {
            "translated_key": "modelo",
            "translated_annotated_text": "Extendiendo CTL con acciones y tiempo real En este artículo, presentamos la lógica ATCTL, que está destinada a ser utilizada para modelos de verificación <br>modelo</br> que han sido especificados en una versión ligera del Lenguaje de Modelado Unificado (UML). En otros lugares, hemos definido una semántica formal para LUML para describir los modelos. Este objetivo de los documentos es dar un lenguaje de especificación para las propiedades que se adaptan a LUML; LUML incluye estados, acciones y tiempo real. ATCTL extiende CTL con acciones concurrentes y en tiempo real. Se basa en anteriores extensiones de CTL por R. De Nicola y F. Vaandrager (ACTL) (1990) y R. Alur et al (TCTL) (1993). Esto facilita la adaptación de las fichas de modelos existentes a ATCTL. Para mostrar que podemos comprobar las propiedades especificadas en ATCTL en los modelos especificados en LUML, damos un pequeño ejemplo usando el Comprobador de modelos Kronos ",
            "error": [
                ""
            ]
        },
        "Unified Modelling Language": {
            "translated_key": [],
            "translated_annotated_text": "Extendiendo CTL con acciones y tiempo real En este artículo, presentamos la lógica ATCTL, que está destinada a ser utilizada para modelos de verificación de modelos que han sido especificados en una versión ligera del lenguaje de modelado unificado <br> (UML). En otros lugares, hemos definido una semántica formal para LUML para describir los modelos. Este objetivo de los documentos es dar un lenguaje de especificación para las propiedades que se adaptan a LUML; LUML incluye estados, acciones y tiempo real. ATCTL extiende CTL con acciones concurrentes y en tiempo real. Se basa en anteriores extensiones de CTL por R. De Nicola y F. Vaandrager (ACTL) (1990) y R. Alur et al (TCTL) (1993). Esto facilita la adaptación de las fichas de modelos existentes a ATCTL. Para mostrar que podemos comprobar las propiedades especificadas en ATCTL en los modelos especificados en LUML, damos un pequeño ejemplo usando el Comprobador de modelos Kronos ",
            "error": []
        },
        "formal semantics": {
            "translated_key": "formal",
            "translated_annotated_text": "Extendiendo CTL con acciones y tiempo real En este artículo, presentamos la lógica ATCTL, que está destinada a ser utilizada para modelos de verificación de modelos que han sido especificados en una versión ligera del Lenguaje de Modelado Unificado (UML). En otros lugares, hemos definido una semántica <br>formal</br> para LUML para describir los modelos. Este objetivo de los documentos es dar un lenguaje de especificación para las propiedades que se adaptan a LUML; LUML incluye estados, acciones y tiempo real. ATCTL extiende CTL con acciones concurrentes y en tiempo real. Se basa en anteriores extensiones de CTL por R. De Nicola y F. Vaandrager (ACTL) (1990) y R. Alur et al (TCTL) (1993). Esto facilita la adaptación de las fichas de modelos existentes a ATCTL. Para mostrar que podemos comprobar las propiedades especificadas en ATCTL en los modelos especificados en LUML, damos un pequeño ejemplo usando el Comprobador de modelos Kronos ",
            "error": [
                ""
            ]
        },
        "specification language": {
            "translated_key": [],
            "translated_annotated_text": "Extendiendo CTL con acciones y tiempo real En este artículo, presentamos la lógica ATCTL, que está destinada a ser utilizada para modelos de verificación de modelos que han sido especificados en una versión ligera del Lenguaje de Modelado Unificado (UML). En otros lugares, hemos definido una semántica formal para LUML para describir los modelos. Este objetivo de los artículos es dar un lenguaje de especificación <br> para propiedades que se ajusten a LUML; LUML incluye estados, acciones y tiempo real. ATCTL extiende CTL con acciones concurrentes y en tiempo real. Se basa en anteriores extensiones de CTL por R. De Nicola y F. Vaandrager (ACTL) (1990) y R. Alur et al (TCTL) (1993). Esto facilita la adaptación de las fichas de modelos existentes a ATCTL. Para mostrar que podemos comprobar las propiedades especificadas en ATCTL en los modelos especificados en LUML, damos un pequeño ejemplo usando el Comprobador de modelos Kronos ",
            "error": []
        },
        "Kronos model checker": {
            "translated_key": "Kronos",
            "translated_annotated_text": "Extendiendo CTL con acciones y tiempo real En este artículo, presentamos la lógica ATCTL, que está destinada a ser utilizada para modelos de verificación de modelos que han sido especificados en una versión ligera del Lenguaje de Modelado Unificado (UML). En otros lugares, hemos definido una semántica formal para LUML para describir los modelos. Este objetivo de los documentos es dar un lenguaje de especificación para las propiedades que se adaptan a LUML; LUML incluye estados, acciones y tiempo real. ATCTL extiende CTL con acciones concurrentes y en tiempo real. Se basa en anteriores extensiones de CTL por R. De Nicola y F. Vaandrager (ACTL) (1990) y R. Alur et al (TCTL) (1993). Esto facilita la adaptación de las fichas de modelos existentes a ATCTL. Para mostrar que podemos comprobar las propiedades especificadas en ATCTL en los modelos especificados en LUML, damos un pequeño ejemplo usando el Comprobador del modelo <br>Kronos</br> ",
            "error": [
                ""
            ]
        },
        "computation tree logic": {
            "translated_key": [],
            "translated_annotated_text": "Extendiendo CTL con acciones y tiempo real En este artículo, presentamos la lógica ATCTL, que está destinada a ser utilizada para modelos de verificación de modelos que han sido especificados en una versión ligera del Lenguaje de Modelado Unificado (UML). En otros lugares, hemos definido una semántica formal para LUML para describir los modelos. Este objetivo de los documentos es dar un lenguaje de especificación para las propiedades que se adaptan a LUML; LUML incluye estados, acciones y tiempo real. ATCTL extiende CTL con acciones concurrentes y en tiempo real. Se basa en anteriores extensiones de CTL por R. De Nicola y F. Vaandrager (ACTL) (1990) y R. Alur et al (TCTL) (1993). Esto facilita la adaptación de las fichas de modelos existentes a ATCTL. Para mostrar que podemos comprobar las propiedades especificadas en ATCTL en los modelos especificados en LUML, damos un pequeño ejemplo usando el Comprobador de modelos Kronos ",
            "error": []
        },
        "specification languages": {
            "translated_key": [],
            "translated_annotated_text": "Extendiendo CTL con acciones y tiempo real En este artículo, presentamos la lógica ATCTL, que está destinada a ser utilizada para modelos de verificación de modelos que han sido especificados en una versión ligera del Lenguaje de Modelado Unificado (UML). En otros lugares, hemos definido una semántica formal para LUML para describir los modelos. Este objetivo de los documentos es dar un lenguaje de especificación para las propiedades que se adaptan a LUML; LUML incluye estados, acciones y tiempo real. ATCTL extiende CTL con acciones concurrentes y en tiempo real. Se basa en anteriores extensiones de CTL por R. De Nicola y F. Vaandrager (ACTL) (1990) y R. Alur et al (TCTL) (1993). Esto facilita la adaptación de las fichas de modelos existentes a ATCTL. Para mostrar que podemos comprobar las propiedades especificadas en ATCTL en los modelos especificados en LUML, damos un pequeño ejemplo usando el Comprobador de modelos Kronos ",
            "error": []
        },
        "temporal logic": {
            "translated_key": [],
            "translated_annotated_text": "Extendiendo CTL con acciones y tiempo real En este artículo, presentamos la lógica ATCTL, que está destinada a ser utilizada para modelos de verificación de modelos que han sido especificados en una versión ligera del Lenguaje de Modelado Unificado (UML). En otros lugares, hemos definido una semántica formal para LUML para describir los modelos. Este objetivo de los documentos es dar un lenguaje de especificación para las propiedades que se adaptan a LUML; LUML incluye estados, acciones y tiempo real. ATCTL extiende CTL con acciones concurrentes y en tiempo real. Se basa en anteriores extensiones de CTL por R. De Nicola y F. Vaandrager (ACTL) (1990) y R. Alur et al (TCTL) (1993). Esto facilita la adaptación de las fichas de modelos existentes a ATCTL. Para mostrar que podemos comprobar las propiedades especificadas en ATCTL en los modelos especificados en LUML, damos un pequeño ejemplo usando el Comprobador de modelos Kronos ",
            "error": []
        }
    }
}