{
    "original_text": "The BLISS programming language: a history The BLISS programming language was invented by William A. Wulf and others at Carnegie-Mellon University in 1969, originally for the DEC PDP-10. BLISS-10 caught the interest of Ronald F. Brender of DEC (Digital Equipment Corporation). After several years of collaboration, including the creation of BLISS-11 for the PDP-11, BLISS was adopted as DECs implementation language for use on its new line of VAX computers in 1975. DEC developed a completely new generation of BLISSs for the VAX, PDP-10 and PDP-11, which became widely used at DEC during the 1970s and 1980s. With the creation of the Alpha architecture in the early 1990s, BLISS was extended again, in both 32- and 64-bit flavors. BLISS support for the Intel IA-32 architecture was introduced in 1995 and IA-64 support is now in progress. BLISS has a number of unusual characteristics: it is typeless, requires use of an explicit contents of operator (written as a period or dot), takes an algorithmic approach to data structure definition, has no goto, is an expression language, and has an unusually rich compile-time language. This paper reviews the evolution and use of BLISS over its three decade lifetime. Emphasis is on how the language evolved to facilitate portable programming while retaining its initial highly machine-specific character. Finally, the success of its characteristics are assessed",
    "original_translation": "El lenguaje de programación BLISS: una historia El lenguaje de programación BLISS fue inventado por William A. Wulf y otros en la Universidad Carnegie-Mellon en 1969, originalmente para el DEC PDP-10. BLISS-10 captó el interés de Ronald F. Brender de DEC (Digital Equipment Corporation). Después de varios años de colaboración, incluida la creación de BLISS-11 para el PDP-11, BLISS fue adoptado como lenguaje de implementación de DECs para su uso en su nueva línea de computadoras VAX en 1975. DEC desarrolló una generación completamente nueva de BLISS para el VAX, PDP-10 y PDP-11, que se utilizó ampliamente en la DEC durante los años 1970 y 1980. Con la creación de la arquitectura Alfa a principios de los años 90, BLISS se amplió de nuevo, en sabores de 32 y 64 bits. El soporte BLISS para la arquitectura Intel IA-32 se introdujo en 1995 y el soporte IA-64 ya está en marcha. BLISS tiene una serie de características inusuales: no tiene tipo, requiere el uso de un contenido explícito del operador (escrito como punto o punto), toma un enfoque algorítmico a la definición de la estructura de datos, no tiene goto, es un lenguaje de expresión, y tiene un lenguaje de compilación inusualmente rico. En este documento se examina la evolución y el uso del BLISS a lo largo de sus tres décadas de vida. Se hace hincapié en cómo evolucionó el lenguaje para facilitar la programación portátil, manteniendo al mismo tiempo su carácter inicial altamente específico para la máquina. Por último, se evalúa el éxito de sus características",
    "error_count": 6,
    "keys": {
        "BLISS programming language": {
            "translated_key": "BLISS",
            "translated_annotated_text": "El lenguaje de programación <br>BLISS</br>: una historia El lenguaje de programación <br>BLISS</br> fue inventado por William A. Wulf y otros en la Universidad Carnegie-Mellon en 1969, originalmente para el DEC PDP-10. BLISS-10 captó el interés de Ronald F. Brender de DEC (Digital Equipment Corporation). Después de varios años de colaboración, incluida la creación de BLISS-11 para el PDP-11, BLISS fue adoptado como lenguaje de implementación de DECs para su uso en su nueva línea de computadoras VAX en 1975. DEC desarrolló una generación completamente nueva de BLISS para el VAX, PDP-10 y PDP-11, que se utilizó ampliamente en la DEC durante los años 1970 y 1980. Con la creación de la arquitectura Alfa a principios de los años 90, BLISS se amplió de nuevo, en sabores de 32 y 64 bits. El soporte BLISS para la arquitectura Intel IA-32 se introdujo en 1995 y el soporte IA-64 ya está en marcha. BLISS tiene una serie de características inusuales: no tiene tipo, requiere el uso de un contenido explícito del operador (escrito como punto o punto), toma un enfoque algorítmico a la definición de la estructura de datos, no tiene goto, es un lenguaje de expresión, y tiene un lenguaje de compilación inusualmente rico. En este documento se examina la evolución y el uso del BLISS a lo largo de sus tres décadas de vida. Se hace hincapié en cómo evolucionó el lenguaje para facilitar la programación portátil, manteniendo al mismo tiempo su carácter inicial altamente específico para la máquina. Por último, se evalúa el éxito de sus características ",
            "error": [
                ""
            ]
        },
        "machine-oriented language": {
            "translated_key": [],
            "translated_annotated_text": "El lenguaje de programación BLISS: una historia El lenguaje de programación BLISS fue inventado por William A. Wulf y otros en la Universidad Carnegie-Mellon en 1969, originalmente para el DEC PDP-10. BLISS-10 captó el interés de Ronald F. Brender de DEC (Digital Equipment Corporation). Después de varios años de colaboración, incluida la creación de BLISS-11 para el PDP-11, BLISS fue adoptado como lenguaje de implementación de DECs para su uso en su nueva línea de computadoras VAX en 1975. DEC desarrolló una generación completamente nueva de BLISS para el VAX, PDP-10 y PDP-11, que se utilizó ampliamente en la DEC durante los años 1970 y 1980. Con la creación de la arquitectura Alfa a principios de los años 90, BLISS se amplió de nuevo, en sabores de 32 y 64 bits. El soporte BLISS para la arquitectura Intel IA-32 se introdujo en 1995 y el soporte IA-64 ya está en marcha. BLISS tiene una serie de características inusuales: no tiene tipo, requiere el uso de un contenido explícito del operador (escrito como punto o punto), toma un enfoque algorítmico a la definición de la estructura de datos, no tiene goto, es un lenguaje de expresión, y tiene un lenguaje de compilación inusualmente rico. En este documento se examina la evolución y el uso del BLISS a lo largo de sus tres décadas de vida. Se hace hincapié en cómo evolucionó el lenguaje para facilitar la programación portátil, manteniendo al mismo tiempo su carácter inicial altamente específico para la máquina. Por último, se evalúa el éxito de sus características ",
            "error": []
        },
        "portable programming": {
            "translated_key": "programación portátil",
            "translated_annotated_text": "El lenguaje de programación BLISS: una historia El lenguaje de programación BLISS fue inventado por William A. Wulf y otros en la Universidad Carnegie-Mellon en 1969, originalmente para el DEC PDP-10. BLISS-10 captó el interés de Ronald F. Brender de DEC (Digital Equipment Corporation). Después de varios años de colaboración, incluida la creación de BLISS-11 para el PDP-11, BLISS fue adoptado como lenguaje de implementación de DECs para su uso en su nueva línea de computadoras VAX en 1975. DEC desarrolló una generación completamente nueva de BLISS para el VAX, PDP-10 y PDP-11, que se utilizó ampliamente en la DEC durante los años 1970 y 1980. Con la creación de la arquitectura Alfa a principios de los años 90, BLISS se amplió de nuevo, en sabores de 32 y 64 bits. El soporte BLISS para la arquitectura Intel IA-32 se introdujo en 1995 y el soporte IA-64 ya está en marcha. BLISS tiene una serie de características inusuales: no tiene tipo, requiere el uso de un contenido explícito del operador (escrito como punto o punto), toma un enfoque algorítmico a la definición de la estructura de datos, no tiene goto, es un lenguaje de expresión, y tiene un lenguaje de compilación inusualmente rico. En este documento se examina la evolución y el uso del BLISS a lo largo de sus tres décadas de vida. El énfasis está en cómo el lenguaje evolucionó para facilitar la <br>programación portátil</br>, conservando al mismo tiempo su carácter inicial altamente específico para la máquina. Por último, se evalúa el éxito de sus características ",
            "error": [
                ""
            ]
        },
        "system implementation language": {
            "translated_key": [],
            "translated_annotated_text": "El lenguaje de programación BLISS: una historia El lenguaje de programación BLISS fue inventado por William A. Wulf y otros en la Universidad Carnegie-Mellon en 1969, originalmente para el DEC PDP-10. BLISS-10 captó el interés de Ronald F. Brender de DEC (Digital Equipment Corporation). Después de varios años de colaboración, incluida la creación de BLISS-11 para el PDP-11, BLISS fue adoptado como lenguaje de implementación de DECs para su uso en su nueva línea de computadoras VAX en 1975. DEC desarrolló una generación completamente nueva de BLISS para el VAX, PDP-10 y PDP-11, que se utilizó ampliamente en la DEC durante los años 1970 y 1980. Con la creación de la arquitectura Alfa a principios de los años 90, BLISS se amplió de nuevo, en sabores de 32 y 64 bits. El soporte BLISS para la arquitectura Intel IA-32 se introdujo en 1995 y el soporte IA-64 ya está en marcha. BLISS tiene una serie de características inusuales: no tiene tipo, requiere el uso de un contenido explícito del operador (escrito como punto o punto), toma un enfoque algorítmico a la definición de la estructura de datos, no tiene goto, es un lenguaje de expresión, y tiene un lenguaje de compilación inusualmente rico. En este documento se examina la evolución y el uso del BLISS a lo largo de sus tres décadas de vida. Se hace hincapié en cómo evolucionó el lenguaje para facilitar la programación portátil, manteniendo al mismo tiempo su carácter inicial altamente específico para la máquina. Por último, se evalúa el éxito de sus características ",
            "error": []
        },
        "data structure definition": {
            "translated_key": "definición de la estructura de datos",
            "translated_annotated_text": "El lenguaje de programación BLISS: una historia El lenguaje de programación BLISS fue inventado por William A. Wulf y otros en la Universidad Carnegie-Mellon en 1969, originalmente para el DEC PDP-10. BLISS-10 captó el interés de Ronald F. Brender de DEC (Digital Equipment Corporation). Después de varios años de colaboración, incluida la creación de BLISS-11 para el PDP-11, BLISS fue adoptado como lenguaje de implementación de DECs para su uso en su nueva línea de computadoras VAX en 1975. DEC desarrolló una generación completamente nueva de BLISS para el VAX, PDP-10 y PDP-11, que se utilizó ampliamente en la DEC durante los años 1970 y 1980. Con la creación de la arquitectura Alfa a principios de los años 90, BLISS se amplió de nuevo, en sabores de 32 y 64 bits. El soporte BLISS para la arquitectura Intel IA-32 se introdujo en 1995 y el soporte IA-64 ya está en marcha. BLISS tiene una serie de características inusuales: no tiene tipo, requiere el uso de un contenido explícito del operador (escrito como punto o punto), toma un enfoque algorítmico a <br>definición de la estructura de datos</br>, no tiene goto, es un lenguaje de expresión, y tiene un lenguaje de compilación-tiempo inusualmente rico. En este documento se examina la evolución y el uso del BLISS a lo largo de sus tres décadas de vida. Se hace hincapié en cómo evolucionó el lenguaje para facilitar la programación portátil, manteniendo al mismo tiempo su carácter inicial altamente específico para la máquina. Por último, se evalúa el éxito de sus características ",
            "error": [
                ""
            ]
        },
        "compile-time language": {
            "translated_key": [],
            "translated_annotated_text": "El lenguaje de programación BLISS: una historia El lenguaje de programación BLISS fue inventado por William A. Wulf y otros en la Universidad Carnegie-Mellon en 1969, originalmente para el DEC PDP-10. BLISS-10 captó el interés de Ronald F. Brender de DEC (Digital Equipment Corporation). Después de varios años de colaboración, incluida la creación de BLISS-11 para el PDP-11, BLISS fue adoptado como lenguaje de implementación de DECs para su uso en su nueva línea de computadoras VAX en 1975. DEC desarrolló una generación completamente nueva de BLISS para el VAX, PDP-10 y PDP-11, que se utilizó ampliamente en la DEC durante los años 1970 y 1980. Con la creación de la arquitectura Alfa a principios de los años 90, BLISS se amplió de nuevo, en sabores de 32 y 64 bits. El soporte BLISS para la arquitectura Intel IA-32 se introdujo en 1995 y el soporte IA-64 ya está en marcha. BLISS tiene una serie de características inusuales: no tiene tipo, requiere el uso de un contenido explícito del operador (escrito como punto o punto), toma un enfoque algorítmico a la definición de la estructura de datos, no tiene goto, es un lenguaje de expresión, y tiene un lenguaje de compilación-tiempo inusualmente rico. En este documento se examina la evolución y el uso del BLISS a lo largo de sus tres décadas de vida. Se hace hincapié en cómo evolucionó el lenguaje para facilitar la programación portátil, manteniendo al mismo tiempo su carácter inicial altamente específico para la máquina. Por último, se evalúa el éxito de sus características ",
            "error": []
        },
        "high level languages": {
            "translated_key": [],
            "translated_annotated_text": "El lenguaje de programación BLISS: una historia El lenguaje de programación BLISS fue inventado por William A. Wulf y otros en la Universidad Carnegie-Mellon en 1969, originalmente para el DEC PDP-10. BLISS-10 captó el interés de Ronald F. Brender de DEC (Digital Equipment Corporation). Después de varios años de colaboración, incluida la creación de BLISS-11 para el PDP-11, BLISS fue adoptado como lenguaje de implementación de DECs para su uso en su nueva línea de computadoras VAX en 1975. DEC desarrolló una generación completamente nueva de BLISS para el VAX, PDP-10 y PDP-11, que se utilizó ampliamente en la DEC durante los años 1970 y 1980. Con la creación de la arquitectura Alfa a principios de los años 90, BLISS se amplió de nuevo, en sabores de 32 y 64 bits. El soporte BLISS para la arquitectura Intel IA-32 se introdujo en 1995 y el soporte IA-64 ya está en marcha. BLISS tiene una serie de características inusuales: no tiene tipo, requiere el uso de un contenido explícito del operador (escrito como punto o punto), toma un enfoque algorítmico a la definición de la estructura de datos, no tiene goto, es un lenguaje de expresión, y tiene un lenguaje de compilación inusualmente rico. En este documento se examina la evolución y el uso del BLISS a lo largo de sus tres décadas de vida. Se hace hincapié en cómo evolucionó el lenguaje para facilitar la programación portátil, manteniendo al mismo tiempo su carácter inicial altamente específico para la máquina. Por último, se evalúa el éxito de sus características ",
            "error": []
        },
        "machine oriented languages": {
            "translated_key": [],
            "translated_annotated_text": "El lenguaje de programación BLISS: una historia El lenguaje de programación BLISS fue inventado por William A. Wulf y otros en la Universidad Carnegie-Mellon en 1969, originalmente para el DEC PDP-10. BLISS-10 captó el interés de Ronald F. Brender de DEC (Digital Equipment Corporation). Después de varios años de colaboración, incluida la creación de BLISS-11 para el PDP-11, BLISS fue adoptado como lenguaje de implementación de DECs para su uso en su nueva línea de computadoras VAX en 1975. DEC desarrolló una generación completamente nueva de BLISS para el VAX, PDP-10 y PDP-11, que se utilizó ampliamente en la DEC durante los años 1970 y 1980. Con la creación de la arquitectura Alfa a principios de los años 90, BLISS se amplió de nuevo, en sabores de 32 y 64 bits. El soporte BLISS para la arquitectura Intel IA-32 se introdujo en 1995 y el soporte IA-64 ya está en marcha. BLISS tiene una serie de características inusuales: no tiene tipo, requiere el uso de un contenido explícito del operador (escrito como punto o punto), toma un enfoque algorítmico a la definición de la estructura de datos, no tiene goto, es un lenguaje de expresión, y tiene un lenguaje de compilación inusualmente rico. En este documento se examina la evolución y el uso del BLISS a lo largo de sus tres décadas de vida. Se hace hincapié en cómo evolucionó el lenguaje para facilitar la programación portátil, manteniendo al mismo tiempo su carácter inicial altamente específico para la máquina. Por último, se evalúa el éxito de sus características ",
            "error": []
        },
        "software portability": {
            "translated_key": [],
            "translated_annotated_text": "El lenguaje de programación BLISS: una historia El lenguaje de programación BLISS fue inventado por William A. Wulf y otros en la Universidad Carnegie-Mellon en 1969, originalmente para el DEC PDP-10. BLISS-10 captó el interés de Ronald F. Brender de DEC (Digital Equipment Corporation). Después de varios años de colaboración, incluida la creación de BLISS-11 para el PDP-11, BLISS fue adoptado como lenguaje de implementación de DECs para su uso en su nueva línea de computadoras VAX en 1975. DEC desarrolló una generación completamente nueva de BLISS para el VAX, PDP-10 y PDP-11, que se utilizó ampliamente en la DEC durante los años 1970 y 1980. Con la creación de la arquitectura Alfa a principios de los años 90, BLISS se amplió de nuevo, en sabores de 32 y 64 bits. El soporte BLISS para la arquitectura Intel IA-32 se introdujo en 1995 y el soporte IA-64 ya está en marcha. BLISS tiene una serie de características inusuales: no tiene tipo, requiere el uso de un contenido explícito del operador (escrito como punto o punto), toma un enfoque algorítmico a la definición de la estructura de datos, no tiene goto, es un lenguaje de expresión, y tiene un lenguaje de compilación inusualmente rico. En este documento se examina la evolución y el uso del BLISS a lo largo de sus tres décadas de vida. Se hace hincapié en cómo evolucionó el lenguaje para facilitar la programación portátil, manteniendo al mismo tiempo su carácter inicial altamente específico para la máquina. Por último, se evalúa el éxito de sus características ",
            "error": []
        }
    }
}