{
    "original_text": "Cooperative mutation based evolutionary programming for continuous function optimization An evolutionary programming (EP) algorithm adapting a new mutation operator is presented. Unlike most previous EPs, in which each individual is mutated on its own, each individual in the proposed algorithm is mutated in cooperation with the other individuals. This not only enhances convergence speed but also gives more chance to escape from local minima",
    "original_translation": "Programación evolutiva basada en mutaciones cooperativas para optimización continua de funciones Se presenta un algoritmo de programación evolutiva (EP) que adapta a un nuevo operador de mutaciones. A diferencia de la mayoría de los EP anteriores, en los que cada individuo es mutado por sí mismo, cada individuo en el algoritmo propuesto es mutado en cooperación con los otros individuos. Esto no sólo aumenta la velocidad de convergencia, sino que también da más posibilidades de escapar de los mínimos locales",
    "error_count": 7,
    "keys": {
        "cooperative mutation based evolutionary programming": {
            "translated_key": [],
            "translated_annotated_text": "Programación evolutiva basada en mutaciones cooperativas para optimización continua de funciones Se presenta un algoritmo de programación evolutiva (EP) que adapta a un nuevo operador de mutaciones. A diferencia de la mayoría de los EP anteriores, en los que cada individuo es mutado por sí mismo, cada individuo en el algoritmo propuesto es mutado en cooperación con los otros individuos. Esto no sólo aumenta la velocidad de convergencia, sino que también da más posibilidades de escapar de los mínimos locales ",
            "error": []
        },
        "continuous function optimization": {
            "translated_key": [],
            "translated_annotated_text": "Programación evolutiva basada en mutaciones cooperativas para optimización continua de funciones Se presenta un algoritmo de programación evolutiva (EP) que adapta a un nuevo operador de mutaciones. A diferencia de la mayoría de los EP anteriores, en los que cada individuo es mutado por sí mismo, cada individuo en el algoritmo propuesto es mutado en cooperación con los otros individuos. Esto no sólo aumenta la velocidad de convergencia, sino que también da más posibilidades de escapar de los mínimos locales ",
            "error": []
        },
        "convergence speed": {
            "translated_key": [],
            "translated_annotated_text": "Programación evolutiva basada en mutaciones cooperativas para optimización continua de funciones Se presenta un algoritmo de programación evolutiva (EP) que adapta a un nuevo operador de mutaciones. A diferencia de la mayoría de los EP anteriores, en los que cada individuo es mutado por sí mismo, cada individuo en el algoritmo propuesto es mutado en cooperación con los otros individuos. Esto no sólo mejora la velocidad de convergencia <br>, sino que también da más posibilidades de escapar de los mínimos locales ",
            "error": []
        },
        "local minima": {
            "translated_key": [],
            "translated_annotated_text": "Programación evolutiva basada en mutaciones cooperativas para optimización continua de funciones Se presenta un algoritmo de programación evolutiva (EP) que adapta a un nuevo operador de mutaciones. A diferencia de la mayoría de los EP anteriores, en los que cada individuo es mutado por sí mismo, cada individuo en el algoritmo propuesto es mutado en cooperación con los otros individuos. Esto no sólo mejora la velocidad de convergencia, sino que también da más posibilidades de escapar de los mínimos locales<br> ",
            "error": []
        },
        "convergence": {
            "translated_key": "convergencia",
            "translated_annotated_text": "Programación evolutiva basada en mutaciones cooperativas para optimización continua de funciones Se presenta un algoritmo de programación evolutiva (EP) que adapta a un nuevo operador de mutaciones. A diferencia de la mayoría de los EP anteriores, en los que cada individuo es mutado por sí mismo, cada individuo en el algoritmo propuesto es mutado en cooperación con los otros individuos. Esto no sólo aumenta la velocidad de <br>convergencia</br>, sino que también da más posibilidades de escapar de los mínimos locales. ",
            "error": [
                ""
            ]
        },
        "evolutionary computation": {
            "translated_key": [],
            "translated_annotated_text": "Programación evolutiva basada en mutaciones cooperativas para optimización continua de funciones Se presenta un algoritmo de programación evolutiva (EP) que adapta a un nuevo operador de mutaciones. A diferencia de la mayoría de los EP anteriores, en los que cada individuo es mutado por sí mismo, cada individuo en el algoritmo propuesto es mutado en cooperación con los otros individuos. Esto no sólo aumenta la velocidad de convergencia, sino que también da más posibilidades de escapar de los mínimos locales ",
            "error": []
        },
        "functions": {
            "translated_key": [],
            "translated_annotated_text": "Programación evolutiva basada en mutaciones cooperativas para optimización continua de funciones Se presenta un algoritmo de programación evolutiva (EP) que adapta a un nuevo operador de mutaciones. A diferencia de la mayoría de los EP anteriores, en los que cada individuo es mutado por sí mismo, cada individuo en el algoritmo propuesto es mutado en cooperación con los otros individuos. Esto no sólo aumenta la velocidad de convergencia, sino que también da más posibilidades de escapar de los mínimos locales ",
            "error": []
        },
        "optimisation": {
            "translated_key": [],
            "translated_annotated_text": "Programación evolutiva basada en mutaciones cooperativas para optimización continua de funciones Se presenta un algoritmo de programación evolutiva (EP) que adapta a un nuevo operador de mutaciones. A diferencia de la mayoría de los EP anteriores, en los que cada individuo es mutado por sí mismo, cada individuo en el algoritmo propuesto es mutado en cooperación con los otros individuos. Esto no sólo aumenta la velocidad de convergencia, sino que también da más posibilidades de escapar de los mínimos locales ",
            "error": []
        }
    }
}