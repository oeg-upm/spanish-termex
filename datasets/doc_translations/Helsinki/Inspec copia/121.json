{
    "original_text": "Formula-dependent equivalence for compositional CTL model checking We present a polytime computable state equivalence that is defined with respect to a given CTL formula. Since it does not attempt to preserve all CTL formulas, like bisimulation does, we can expect to compute coarser equivalences. This equivalence can be used to reduce the complexity of model checking a system of interacting FSM. Additionally, we show that in some cases our techniques can detect if a formula passes or fails, without forming the entire product machine. The method is exact and fully automatic, and handles full CTL",
    "original_translation": "Equivalencia dependiente de la fórmula para la comprobación del modelo CTL compositivo Presentamos una equivalencia de estado computable politime que se define con respecto a una fórmula CTL dada. Dado que no intenta preservar todas las fórmulas CTL, como lo hace la bisimulación, podemos esperar calcular equivalencias más gruesas. Esta equivalencia se puede utilizar para reducir la complejidad de la comprobación del modelo de un sistema de FSM que interactúa. Además, mostramos que en algunos casos nuestras técnicas pueden detectar si una fórmula pasa o falla, sin formar toda la máquina del producto. El método es exacto y totalmente automático, y maneja CTL completo",
    "error_count": 11,
    "keys": {
        "formula-dependent equivalence": {
            "translated_key": [],
            "translated_annotated_text": "Equivalencia dependiente de la fórmula para la comprobación del modelo CTL compositivo Presentamos una equivalencia de estado computable politime que se define con respecto a una fórmula CTL dada. Dado que no intenta preservar todas las fórmulas CTL, como lo hace la bisimulación, podemos esperar calcular equivalencias más gruesas. Esta equivalencia se puede utilizar para reducir la complejidad de la comprobación del modelo de un sistema de FSM que interactúa. Además, mostramos que en algunos casos nuestras técnicas pueden detectar si una fórmula pasa o falla, sin formar toda la máquina del producto. El método es exacto y totalmente automático, y maneja CTL completo ",
            "error": []
        },
        "compositional minimization": {
            "translated_key": [],
            "translated_annotated_text": "Equivalencia dependiente de la fórmula para la comprobación del modelo CTL compositivo Presentamos una equivalencia de estado computable politime que se define con respecto a una fórmula CTL dada. Dado que no intenta preservar todas las fórmulas CTL, como lo hace la bisimulación, podemos esperar calcular equivalencias más gruesas. Esta equivalencia se puede utilizar para reducir la complejidad de la comprobación del modelo de un sistema de FSM que interactúa. Además, mostramos que en algunos casos nuestras técnicas pueden detectar si una fórmula pasa o falla, sin formar toda la máquina del producto. El método es exacto y totalmente automático, y maneja CTL completo ",
            "error": []
        },
        "CTL model checking": {
            "translated_key": "CTL",
            "translated_annotated_text": "Equivalencia dependiente de la fórmula para la comprobación compositiva del modelo <br>CTL</br> Presentamos una equivalencia de estado computable politime que se define con respecto a una fórmula CTL dada. Dado que no intenta preservar todas las fórmulas CTL, como lo hace la bisimulación, podemos esperar calcular equivalencias más gruesas. Esta equivalencia se puede utilizar para reducir la complejidad de la comprobación del modelo de un sistema de FSM que interactúa. Además, mostramos que en algunos casos nuestras técnicas pueden detectar si una fórmula pasa o falla, sin formar toda la máquina del producto. El método es exacto y totalmente automático, y maneja CTL completo ",
            "error": [
                ""
            ]
        },
        "polytime computable state equivalence": {
            "translated_key": "polytime",
            "translated_annotated_text": "Equivalencia dependiente de la fórmula para la comprobación del modelo CTL compositivo Presentamos una equivalencia de estado computable <br>polytime</br> que se define con respecto a una fórmula CTL dada. Dado que no intenta preservar todas las fórmulas CTL, como lo hace la bisimulación, podemos esperar calcular equivalencias más gruesas. Esta equivalencia se puede utilizar para reducir la complejidad de la comprobación del modelo de un sistema de FSM que interactúa. Además, mostramos que en algunos casos nuestras técnicas pueden detectar si una fórmula pasa o falla, sin formar toda la máquina del producto. El método es exacto y totalmente automático, y maneja CTL completo ",
            "error": [
                ""
            ]
        },
        "CTL formula": {
            "translated_key": "CTL dada",
            "translated_annotated_text": "Equivalencia dependiente de la fórmula para la comprobación del modelo CTL compositivo Presentamos una equivalencia de estado computable politime que se define con respecto a una fórmula <br>CTL dada</br>. Dado que no intenta preservar todas las fórmulas CTL, como lo hace la bisimulación, podemos esperar calcular equivalencias más gruesas. Esta equivalencia se puede utilizar para reducir la complejidad de la comprobación del modelo de un sistema de FSM que interactúa. Además, mostramos que en algunos casos nuestras técnicas pueden detectar si una fórmula pasa o falla, sin formar toda la máquina del producto. El método es exacto y totalmente automático, y maneja CTL completo ",
            "error": [
                ""
            ]
        },
        "coarse equivalence": {
            "translated_key": [],
            "translated_annotated_text": "Equivalencia dependiente de la fórmula para la comprobación del modelo CTL compositivo Presentamos una equivalencia de estado computable politime que se define con respecto a una fórmula CTL dada. Dado que no intenta preservar todas las fórmulas CTL, como lo hace la bisimulación, podemos esperar calcular equivalencias más gruesas. Esta equivalencia se puede utilizar para reducir la complejidad de la comprobación del modelo de un sistema de FSM que interactúa. Además, mostramos que en algunos casos nuestras técnicas pueden detectar si una fórmula pasa o falla, sin formar toda la máquina del producto. El método es exacto y totalmente automático, y maneja CTL completo ",
            "error": []
        },
        "complexity reduction": {
            "translated_key": [],
            "translated_annotated_text": "Equivalencia dependiente de la fórmula para la comprobación del modelo CTL compositivo Presentamos una equivalencia de estado computable politime que se define con respecto a una fórmula CTL dada. Dado que no intenta preservar todas las fórmulas CTL, como lo hace la bisimulación, podemos esperar calcular equivalencias más gruesas. Esta equivalencia se puede utilizar para reducir la complejidad de la comprobación del modelo de un sistema de FSM que interactúa. Además, mostramos que en algunos casos nuestras técnicas pueden detectar si una fórmula pasa o falla, sin formar toda la máquina del producto. El método es exacto y totalmente automático, y maneja CTL completo ",
            "error": []
        },
        "interacting FSM": {
            "translated_key": "interacción FSM",
            "translated_annotated_text": "Equivalencia dependiente de la fórmula para la comprobación del modelo CTL compositivo Presentamos una equivalencia de estado computable politime que se define con respecto a una fórmula CTL dada. Dado que no intenta preservar todas las fórmulas CTL, como lo hace la bisimulación, podemos esperar calcular equivalencias más gruesas. Esta equivalencia se puede utilizar para reducir la complejidad del modelo comprobando un sistema de <br>interacción FSM</br>. Además, mostramos que en algunos casos nuestras técnicas pueden detectar si una fórmula pasa o falla, sin formar toda la máquina del producto. El método es exacto y totalmente automático, y maneja CTL completo ",
            "error": [
                ""
            ]
        },
        "automatic method": {
            "translated_key": [],
            "translated_annotated_text": "Equivalencia dependiente de la fórmula para la comprobación del modelo CTL compositivo Presentamos una equivalencia de estado computable politime que se define con respecto a una fórmula CTL dada. Dado que no intenta preservar todas las fórmulas CTL, como lo hace la bisimulación, podemos esperar calcular equivalencias más gruesas. Esta equivalencia se puede utilizar para reducir la complejidad de la comprobación del modelo de un sistema de FSM que interactúa. Además, mostramos que en algunos casos nuestras técnicas pueden detectar si una fórmula pasa o falla, sin formar toda la máquina del producto. El método es exacto y totalmente automático, y maneja CTL completo ",
            "error": []
        },
        "formal design verification": {
            "translated_key": [],
            "translated_annotated_text": "Equivalencia dependiente de la fórmula para la comprobación del modelo CTL compositivo Presentamos una equivalencia de estado computable politime que se define con respecto a una fórmula CTL dada. Dado que no intenta preservar todas las fórmulas CTL, como lo hace la bisimulación, podemos esperar calcular equivalencias más gruesas. Esta equivalencia se puede utilizar para reducir la complejidad de la comprobación del modelo de un sistema de FSM que interactúa. Además, mostramos que en algunos casos nuestras técnicas pueden detectar si una fórmula pasa o falla, sin formar toda la máquina del producto. El método es exacto y totalmente automático, y maneja CTL completo ",
            "error": []
        },
        "computation tree logic": {
            "translated_key": [],
            "translated_annotated_text": "Equivalencia dependiente de la fórmula para la comprobación del modelo CTL compositivo Presentamos una equivalencia de estado computable politime que se define con respecto a una fórmula CTL dada. Dado que no intenta preservar todas las fórmulas CTL, como lo hace la bisimulación, podemos esperar calcular equivalencias más gruesas. Esta equivalencia se puede utilizar para reducir la complejidad de la comprobación del modelo de un sistema de FSM que interactúa. Además, mostramos que en algunos casos nuestras técnicas pueden detectar si una fórmula pasa o falla, sin formar toda la máquina del producto. El método es exacto y totalmente automático, y maneja CTL completo ",
            "error": []
        },
        "bisimulation equivalence": {
            "translated_key": [],
            "translated_annotated_text": "Equivalencia dependiente de la fórmula para la comprobación del modelo CTL compositivo Presentamos una equivalencia de estado computable politime que se define con respecto a una fórmula CTL dada. Dado que no intenta preservar todas las fórmulas CTL, como lo hace la bisimulación, podemos esperar calcular equivalencias más gruesas. Esta equivalencia se puede utilizar para reducir la complejidad de la comprobación del modelo de un sistema de FSM que interactúa. Además, mostramos que en algunos casos nuestras técnicas pueden detectar si una fórmula pasa o falla, sin formar toda la máquina del producto. El método es exacto y totalmente automático, y maneja CTL completo ",
            "error": []
        },
        "finite state machines": {
            "translated_key": [],
            "translated_annotated_text": "Equivalencia dependiente de la fórmula para la comprobación del modelo CTL compositivo Presentamos una equivalencia de estado computable politime que se define con respecto a una fórmula CTL dada. Dado que no intenta preservar todas las fórmulas CTL, como lo hace la bisimulación, podemos esperar calcular equivalencias más gruesas. Esta equivalencia se puede utilizar para reducir la complejidad de la comprobación del modelo de un sistema de FSM que interactúa. Además, mostramos que en algunos casos nuestras técnicas pueden detectar si una fórmula pasa o falla, sin formar toda la máquina del producto. El método es exacto y totalmente automático, y maneja CTL completo ",
            "error": []
        },
        "formal verification": {
            "translated_key": [],
            "translated_annotated_text": "Equivalencia dependiente de la fórmula para la comprobación del modelo CTL compositivo Presentamos una equivalencia de estado computable politime que se define con respecto a una fórmula CTL dada. Dado que no intenta preservar todas las fórmulas CTL, como lo hace la bisimulación, podemos esperar calcular equivalencias más gruesas. Esta equivalencia se puede utilizar para reducir la complejidad de la comprobación del modelo de un sistema de FSM que interactúa. Además, mostramos que en algunos casos nuestras técnicas pueden detectar si una fórmula pasa o falla, sin formar toda la máquina del producto. El método es exacto y totalmente automático, y maneja CTL completo ",
            "error": []
        },
        "minimisation": {
            "translated_key": [],
            "translated_annotated_text": "Equivalencia dependiente de la fórmula para la comprobación del modelo CTL compositivo Presentamos una equivalencia de estado computable politime que se define con respecto a una fórmula CTL dada. Dado que no intenta preservar todas las fórmulas CTL, como lo hace la bisimulación, podemos esperar calcular equivalencias más gruesas. Esta equivalencia se puede utilizar para reducir la complejidad de la comprobación del modelo de un sistema de FSM que interactúa. Además, mostramos que en algunos casos nuestras técnicas pueden detectar si una fórmula pasa o falla, sin formar toda la máquina del producto. El método es exacto y totalmente automático, y maneja CTL completo ",
            "error": []
        }
    }
}