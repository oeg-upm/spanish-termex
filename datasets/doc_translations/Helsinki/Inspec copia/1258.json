{
    "original_text": "Implementation and performance evaluation of a FIFO queue class library for time warp The authors describe the implementation, use, and performance evaluation of a FIFO queue class library by means of a high-performance, easy-to-use interface employed for queuing simulations in parallel discrete simulations based on the time warp method. Various general-purpose simulation libraries and languages have been proposed, and among these some have the advantage of not requiring users to define anything other than the state vector, and not needing awareness of rollback under a platform which performs state control based on copies. However, because the state vectors must be defined as simple data structures without pointers, dynamic data structures such as a FIFO queue cannot be handled directly. Under the proposed class library, both the platform and the user can handle such structures in the same fashion that embedded data structures are handled. In addition, instead of all stored data, just the operational history can be stored and recovered efficiently at an effectively minimal cost by taking advantage of the first-in-first-out characteristics of the above data structures. When the kernel deletes past state histories during a simulation, garbage collection is also performed transparently using the corresponding method",
    "original_translation": "Implementación y evaluación del rendimiento de una biblioteca de colas FIFO para la deformación del tiempo Los autores describen la implementación, uso y evaluación del rendimiento de una biblioteca de colas FIFO mediante una interfaz de alto rendimiento y fácil de usar empleada para simulaciones de cola en simulaciones discretas paralelas basadas en el método de deformación del tiempo. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores de estado deben definirse como estructuras de datos simples sin punteros, las estructuras de datos dinámicas como una cola de FIFO no pueden ser manejadas directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar estas estructuras de la misma manera que se manejan las estructuras de datos integradas. Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características de primera en primera salida de las estructuras de datos anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente",
    "error_count": 17,
    "keys": {
        "FIFO queue": {
            "translated_key": [
                "FIFO line",
                "FIFO line",
                "FIFO"
            ],
            "translated_annotated_text": "Implementación y evaluación del rendimiento de una biblioteca de clase <br>FIFO line</br> para la deformación del tiempo Los autores describen la implementación, uso y evaluación del rendimiento de una biblioteca de clase <br>FIFO line</br> mediante una interfaz de alto rendimiento y fácil de usar empleada para simulaciones de cola en simulaciones discretas paralelas basadas en el método de deformación del tiempo. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores de estado deben definirse como estructuras de datos simples sin punteros, las estructuras de datos dinámicas como una cola <br>FIFO</br> no se pueden manejar directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar estas estructuras de la misma manera que se manejan las estructuras de datos integradas. Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características de primera en primera salida de las estructuras de datos anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente ",
            "error": [
                "FIFO line",
                "FIFO line",
                "FIFO"
            ]
        },
        "class library": {
            "translated_key": [
                "class library",
                "class library",
                "class propuesta"
            ],
            "translated_annotated_text": "Implementación y evaluación del rendimiento de una cola FIFO <br>class library</br> para la deformación del tiempo Los autores describen la implementación, el uso y la evaluación del rendimiento de una cola FIFO <br>class library</br> mediante una interfaz de alto rendimiento y fácil de usar empleada para simulaciones de cola en simulaciones discretas paralelas basadas en el método de deformación del tiempo. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores de estado deben definirse como estructuras de datos simples sin punteros, las estructuras de datos dinámicas como una cola de FIFO no pueden ser manejadas directamente. Bajo la biblioteca <br>class propuesta</br>, tanto la plataforma como el usuario pueden manejar tales estructuras de la misma manera que se manejan las estructuras de datos incrustadas. Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características de primera en primera salida de las estructuras de datos anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente ",
            "error": [
                "class library",
                "class library",
                "class propuesta"
            ]
        },
        "time warp simulation": {
            "translated_key": [],
            "translated_annotated_text": "Implementación y evaluación del rendimiento de una biblioteca de colas FIFO para la deformación del tiempo Los autores describen la implementación, uso y evaluación del rendimiento de una biblioteca de colas FIFO mediante una interfaz de alto rendimiento y fácil de usar empleada para simulaciones de cola en simulaciones discretas paralelas basadas en el método de deformación del tiempo. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores de estado deben definirse como estructuras de datos simples sin punteros, las estructuras de datos dinámicas como una cola de FIFO no pueden ser manejadas directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar estas estructuras de la misma manera que se manejan las estructuras de datos integradas. Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características de primera en primera salida de las estructuras de datos anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente ",
            "error": []
        },
        "performance evaluation": {
            "translated_key": "evaluación del rendimiento",
            "translated_annotated_text": "Implementación y <br>evaluación del rendimiento</br> de una biblioteca de colas FIFO para la deformación del tiempo Los autores describen la implementación, uso y <br>evaluación del rendimiento</br> de una biblioteca de colas FIFO mediante una interfaz de alto rendimiento y fácil de usar empleada para simulaciones de cola en simulaciones discretas paralelas basadas en el método de deformación del tiempo.  Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores de estado deben definirse como estructuras de datos simples sin punteros, las estructuras de datos dinámicas como una cola de FIFO no pueden ser manejadas directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar estas estructuras de la misma manera que se manejan las estructuras de datos integradas. Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características de primera en primera salida de las estructuras de datos anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente ",
            "error": [
                ""
            ]
        },
        "easy-to-use interface": {
            "translated_key": "fácil de usar",
            "translated_annotated_text": "Implementación y evaluación del rendimiento de una biblioteca de colas FIFO para la deformación del tiempo Los autores describen la implementación, uso y evaluación del rendimiento de una biblioteca de colas FIFO mediante una interfaz de alto rendimiento <br>fácil de usar</br> empleada para simulaciones de cola en simulaciones discretas paralelas basadas en el método de deformación del tiempo. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores de estado deben definirse como estructuras de datos simples sin punteros, las estructuras de datos dinámicas como una cola de FIFO no pueden ser manejadas directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar estas estructuras de la misma manera que se manejan las estructuras de datos integradas. Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características de primera en primera salida de las estructuras de datos anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente ",
            "error": [
                ""
            ]
        },
        "queuing simulations": {
            "translated_key": "queuing",
            "translated_annotated_text": "Implementación y evaluación del rendimiento de una biblioteca de colas FIFO para la deformación del tiempo Los autores describen la implementación, uso y evaluación del rendimiento de una biblioteca de colas FIFO mediante una interfaz de alto rendimiento y fácil de usar empleada para simulaciones de <br>queuing</br> en simulaciones discretas paralelas basadas en el método de deformación del tiempo. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores de estado deben definirse como estructuras de datos simples sin punteros, las estructuras de datos dinámicas como una cola de FIFO no pueden ser manejadas directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar estas estructuras de la misma manera que se manejan las estructuras de datos integradas. Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características de primera en primera salida de las estructuras de datos anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente ",
            "error": [
                ""
            ]
        },
        "parallel discrete simulations": {
            "translated_key": "parallel",
            "translated_annotated_text": "Implementación y evaluación del rendimiento de una biblioteca de colas FIFO para la deformación del tiempo Los autores describen la implementación, uso y evaluación del rendimiento de una biblioteca de colas FIFO mediante una interfaz de alto rendimiento y fácil de usar empleada para simulaciones de cola en simulaciones discretas <br>parallel</br> basadas en el método de deformación del tiempo. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores de estado deben definirse como estructuras de datos simples sin punteros, las estructuras de datos dinámicas como una cola de FIFO no pueden ser manejadas directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar estas estructuras de la misma manera que se manejan las estructuras de datos integradas. Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características de primera en primera salida de las estructuras de datos anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente ",
            "error": [
                ""
            ]
        },
        "general-purpose simulation libraries": {
            "translated_key": [],
            "translated_annotated_text": "Implementación y evaluación del rendimiento de una biblioteca de colas FIFO para la deformación del tiempo Los autores describen la implementación, uso y evaluación del rendimiento de una biblioteca de colas FIFO mediante una interfaz de alto rendimiento y fácil de usar empleada para simulaciones de cola en simulaciones discretas paralelas basadas en el método de deformación del tiempo. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector del estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control del estado basado en copias. Sin embargo, debido a que los vectores de estado deben definirse como estructuras de datos simples sin punteros, las estructuras de datos dinámicas como una cola de FIFO no pueden ser manejadas directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar estas estructuras de la misma manera que se manejan las estructuras de datos integradas. Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características de primera en primera salida de las estructuras de datos anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente ",
            "error": []
        },
        "simulation languages": {
            "translated_key": [],
            "translated_annotated_text": "Implementación y evaluación del rendimiento de una biblioteca de colas FIFO para la deformación del tiempo Los autores describen la implementación, uso y evaluación del rendimiento de una biblioteca de colas FIFO mediante una interfaz de alto rendimiento y fácil de usar empleada para simulaciones de cola en simulaciones discretas paralelas basadas en el método de deformación del tiempo. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores de estado deben definirse como estructuras de datos simples sin punteros, las estructuras de datos dinámicas como una cola de FIFO no pueden ser manejadas directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar estas estructuras de la misma manera que se manejan las estructuras de datos integradas. Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características de primera en primera salida de las estructuras de datos anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente ",
            "error": []
        },
        "state vectors": {
            "translated_key": "state",
            "translated_annotated_text": "Implementación y evaluación del rendimiento de una biblioteca de colas FIFO para la deformación del tiempo Los autores describen la implementación, uso y evaluación del rendimiento de una biblioteca de colas FIFO mediante una interfaz de alto rendimiento y fácil de usar empleada para simulaciones de cola en simulaciones discretas paralelas basadas en el método de deformación del tiempo. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores <br>state</br> deben definirse como estructuras de datos simples sin punteros, las estructuras de datos dinámicas como una cola FIFO no pueden manejarse directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar estas estructuras de la misma manera que se manejan las estructuras de datos integradas. Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características de primera en primera salida de las estructuras de datos anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente ",
            "error": [
                ""
            ]
        },
        "dynamic data structures": {
            "translated_key": "dinámicas",
            "translated_annotated_text": "Implementación y evaluación del rendimiento de una biblioteca de colas FIFO para la deformación del tiempo Los autores describen la implementación, uso y evaluación del rendimiento de una biblioteca de colas FIFO mediante una interfaz de alto rendimiento y fácil de usar empleada para simulaciones de cola en simulaciones discretas paralelas basadas en el método de deformación del tiempo. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores de estado deben definirse como estructuras de datos simples sin punteros, las estructuras de datos <br>dinámicas</br> como una cola FIFO no se pueden manejar directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar estas estructuras de la misma manera que se manejan las estructuras de datos integradas. Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características de primera en primera salida de las estructuras de datos anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente ",
            "error": [
                ""
            ]
        },
        "embedded data structures": {
            "translated_key": [],
            "translated_annotated_text": "Implementación y evaluación del rendimiento de una biblioteca de colas FIFO para la deformación del tiempo Los autores describen la implementación, uso y evaluación del rendimiento de una biblioteca de colas FIFO mediante una interfaz de alto rendimiento y fácil de usar empleada para simulaciones de cola en simulaciones discretas paralelas basadas en el método de deformación del tiempo. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores de estado deben definirse como estructuras de datos simples sin punteros, las estructuras de datos dinámicas como una cola de FIFO no pueden ser manejadas directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar tales estructuras de la misma manera que se manejan las estructuras de datos embebidos. Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características de primera en primera salida de las estructuras de datos anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente ",
            "error": []
        },
        "operational history": {
            "translated_key": [],
            "translated_annotated_text": "Implementación y evaluación del rendimiento de una biblioteca de colas FIFO para la deformación del tiempo Los autores describen la implementación, uso y evaluación del rendimiento de una biblioteca de colas FIFO mediante una interfaz de alto rendimiento y fácil de usar empleada para simulaciones de cola en simulaciones discretas paralelas basadas en el método de deformación del tiempo. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores de estado deben definirse como estructuras de datos simples sin punteros, las estructuras de datos dinámicas como una cola de FIFO no pueden ser manejadas directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar estas estructuras de la misma manera que se manejan las estructuras de datos integradas. Además, en lugar de todos los datos almacenados, sólo el historial operativo <br> puede almacenarse y recuperarse de manera eficiente a un costo efectivamente mínimo aprovechando las características de primera entrada en la salida de las estructuras de datos anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente ",
            "error": []
        },
        "first-in-first-out characteristics": {
            "translated_key": "first-in-first-out",
            "translated_annotated_text": "Implementación y evaluación del rendimiento de una biblioteca de colas FIFO para la deformación del tiempo Los autores describen la implementación, uso y evaluación del rendimiento de una biblioteca de colas FIFO mediante una interfaz de alto rendimiento y fácil de usar empleada para simulaciones de cola en simulaciones discretas paralelas basadas en el método de deformación del tiempo. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores de estado deben definirse como estructuras de datos simples sin punteros, las estructuras de datos dinámicas como una cola de FIFO no pueden ser manejadas directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar estas estructuras de la misma manera que se manejan las estructuras de datos integradas. Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características <br>first-in-first-out</br> de las estructuras de datos anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente ",
            "error": [
                ""
            ]
        },
        "garbage collection": {
            "translated_key": "garbage collection",
            "translated_annotated_text": "Implementación y evaluación del rendimiento de una biblioteca de colas FIFO para la deformación del tiempo Los autores describen la implementación, uso y evaluación del rendimiento de una biblioteca de colas FIFO mediante una interfaz de alto rendimiento y fácil de usar empleada para simulaciones de cola en simulaciones discretas paralelas basadas en el método de deformación del tiempo. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores de estado deben definirse como estructuras de datos simples sin punteros, las estructuras de datos dinámicas como una cola de FIFO no pueden ser manejadas directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar estas estructuras de la misma manera que se manejan las estructuras de datos integradas. Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características de primera en primera salida de las estructuras de datos anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, <br>garbage collection</br> también se realiza de forma transparente utilizando el método correspondiente ",
            "error": [
                ""
            ]
        },
        "object oriented method": {
            "translated_key": [],
            "translated_annotated_text": "Implementación y evaluación del rendimiento de una biblioteca de colas FIFO para la deformación del tiempo Los autores describen la implementación, uso y evaluación del rendimiento de una biblioteca de colas FIFO mediante una interfaz de alto rendimiento y fácil de usar empleada para simulaciones de cola en simulaciones discretas paralelas basadas en el método de deformación del tiempo. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores de estado deben definirse como estructuras de datos simples sin punteros, las estructuras de datos dinámicas como una cola de FIFO no pueden ser manejadas directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar estas estructuras de la misma manera que se manejan las estructuras de datos integradas. Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características de primera en primera salida de las estructuras de datos anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente ",
            "error": []
        },
        "state management": {
            "translated_key": [],
            "translated_annotated_text": "Implementación y evaluación del rendimiento de una biblioteca de colas FIFO para la deformación del tiempo Los autores describen la implementación, uso y evaluación del rendimiento de una biblioteca de colas FIFO mediante una interfaz de alto rendimiento y fácil de usar empleada para simulaciones de cola en simulaciones discretas paralelas basadas en el método de deformación del tiempo. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores de estado deben definirse como estructuras de datos simples sin punteros, las estructuras de datos dinámicas como una cola de FIFO no pueden ser manejadas directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar estas estructuras de la misma manera que se manejan las estructuras de datos integradas. Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características de primera en primera salida de las estructuras de datos anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente ",
            "error": []
        },
        "data structures": {
            "translated_key": [
                "estructuras de datos",
                "estructuras de datos",
                " embebidos",
                " anteriores"
            ],
            "translated_annotated_text": "Implementación y evaluación del rendimiento de una biblioteca de colas FIFO para la deformación del tiempo Los autores describen la implementación, uso y evaluación del rendimiento de una biblioteca de colas FIFO mediante una interfaz de alto rendimiento y fácil de usar empleada para simulaciones de cola en simulaciones discretas paralelas basadas en el método de deformación del tiempo. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores de estado deben definirse como <br>estructuras de datos</br> simples sin punteros, las <br>estructuras de datos</br> dinámicas como una cola de FIFO no pueden ser manejadas directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar tales estructuras de la misma manera que se manejan las estructuras de datos <br> embebidos</br>. Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características de primer ingreso de las estructuras de datos <br> anteriores</br>. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente ",
            "error": [
                "estructuras de datos",
                "estructuras de datos",
                " embebidos",
                " anteriores"
            ]
        },
        "object-oriented programming": {
            "translated_key": [],
            "translated_annotated_text": "Implementación y evaluación del rendimiento de una biblioteca de colas FIFO para la deformación del tiempo Los autores describen la implementación, uso y evaluación del rendimiento de una biblioteca de colas FIFO mediante una interfaz de alto rendimiento y fácil de usar empleada para simulaciones de cola en simulaciones discretas paralelas basadas en el método de deformación del tiempo. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores de estado deben definirse como estructuras de datos simples sin punteros, las estructuras de datos dinámicas como una cola de FIFO no pueden ser manejadas directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar estas estructuras de la misma manera que se manejan las estructuras de datos integradas. Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características de primera en primera salida de las estructuras de datos anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente ",
            "error": []
        },
        "queueing theory": {
            "translated_key": [],
            "translated_annotated_text": "Implementación y evaluación del rendimiento de una biblioteca de colas FIFO para la deformación del tiempo Los autores describen la implementación, uso y evaluación del rendimiento de una biblioteca de colas FIFO mediante una interfaz de alto rendimiento y fácil de usar empleada para simulaciones de cola en simulaciones discretas paralelas basadas en el método de deformación del tiempo. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores de estado deben definirse como estructuras de datos simples sin punteros, las estructuras de datos dinámicas como una cola de FIFO no pueden ser manejadas directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar estas estructuras de la misma manera que se manejan las estructuras de datos integradas. Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características de primera en primera salida de las estructuras de datos anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente ",
            "error": []
        },
        "software libraries": {
            "translated_key": [],
            "translated_annotated_text": "Implementación y evaluación del rendimiento de una biblioteca de colas FIFO para la deformación del tiempo Los autores describen la implementación, uso y evaluación del rendimiento de una biblioteca de colas FIFO mediante una interfaz de alto rendimiento y fácil de usar empleada para simulaciones de cola en simulaciones discretas paralelas basadas en el método de deformación del tiempo. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores de estado deben definirse como estructuras de datos simples sin punteros, las estructuras de datos dinámicas como una cola de FIFO no pueden ser manejadas directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar estas estructuras de la misma manera que se manejan las estructuras de datos integradas. Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características de primera en primera salida de las estructuras de datos anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente ",
            "error": []
        },
        "software performance evaluation": {
            "translated_key": [],
            "translated_annotated_text": "Implementación y evaluación del rendimiento de una biblioteca de colas FIFO para la deformación del tiempo Los autores describen la implementación, uso y evaluación del rendimiento de una biblioteca de colas FIFO mediante una interfaz de alto rendimiento y fácil de usar empleada para simulaciones de cola en simulaciones discretas paralelas basadas en el método de deformación del tiempo. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores de estado deben definirse como estructuras de datos simples sin punteros, las estructuras de datos dinámicas como una cola de FIFO no pueden ser manejadas directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar estas estructuras de la misma manera que se manejan las estructuras de datos integradas. Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características de primera en primera salida de las estructuras de datos anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente ",
            "error": []
        },
        "storage management": {
            "translated_key": [],
            "translated_annotated_text": "Implementación y evaluación del rendimiento de una biblioteca de colas FIFO para la deformación del tiempo Los autores describen la implementación, uso y evaluación del rendimiento de una biblioteca de colas FIFO mediante una interfaz de alto rendimiento y fácil de usar empleada para simulaciones de cola en simulaciones discretas paralelas basadas en el método de deformación del tiempo. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores de estado deben definirse como estructuras de datos simples sin punteros, las estructuras de datos dinámicas como una cola de FIFO no pueden ser manejadas directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar estas estructuras de la misma manera que se manejan las estructuras de datos integradas. Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características de primera en primera salida de las estructuras de datos anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente ",
            "error": []
        }
    }
}