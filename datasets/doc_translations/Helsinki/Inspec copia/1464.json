{
    "original_text": "LR parsing for conjunctive grammars The generalized LR parsing algorithm for context-free grammars, introduced by Tomita in 1986, is a polynomial-time implementation of nondeterministic LR parsing that uses graph-structured stack to represent the contents of the nondeterministic parsers pushdown for all possible branches of computation at a single computation step. It has been specifically developed as a solution for practical parsing tasks arising in computational linguistics, and indeed has proved itself to be very suitable for natural language processing. Conjunctive grammars extend context-free grammars by allowing the use of an explicit intersection operation within grammar rules. This paper develops a new LR-style parsing algorithm for these grammars, which is based on the very same idea of a graph-structured pushdown, where the simultaneous existence of several paths in the graph is used to perform the mentioned intersection operation. The underlying finite automata are treated in the most general way: instead of showing the algorithms correctness for some particular way of constructing automata, the paper defines a wide class of automata usable with a given grammar, which includes not only the traditional LR(k) automata, but also, for instance, a trivial automaton with a single reachable state. A modification of the SLR(k) table construction method that makes use of specific properties of conjunctive grammars is provided as one possible way of making finite automata to use with the algorithm",
    "original_translation": "Análisis LR para gramáticas conjuntivas El algoritmo de análisis LR generalizado para gramáticas sin contexto, introducido por Tomita en 1986, es una implementación polinomio-tiempo de análisis LR no determinista que utiliza la pila grafo-estructurada para representar el contenido de los analizadores no deterministas pushdown para todas las ramas posibles de la computación en un solo paso de computación. Se ha desarrollado específicamente como una solución para las tareas prácticas de análisis que surgen en la lingüística computacional, y de hecho ha demostrado ser muy adecuado para el procesamiento del lenguaje natural. Las gramáticas conjuntivas extienden las gramáticas sin contexto al permitir el uso de una operación de intersección explícita dentro de las reglas gramaticales. Este artículo desarrolla un nuevo algoritmo de análisis al estilo LR para estas gramáticas, que se basa en la misma idea de un grafo-estructurado pushdown, donde la existencia simultánea de varios caminos en el gráfico se utiliza para realizar la operación de intersección mencionada. Los autómatas finitos subyacentes se tratan de la manera más general: en lugar de mostrar la corrección de los algoritmos para alguna forma particular de construir autómatas, el artículo define una amplia clase de autómatas utilizables con una gramática dada, que incluye no sólo el autómata tradicional LR(k), sino también, por ejemplo, un autómata trivial con un único estado alcanzable. Una modificación del método de construcción de tablas SLR(k) que hace uso de propiedades específicas de gramáticas conjuntivas se proporciona como una posible manera de hacer autómatas finitos para usar con el algoritmo",
    "error_count": 13,
    "keys": {
        "conjunctive grammars": {
            "translated_key": [
                "gramatices conjuntas",
                "gramáticas conjuntas"
            ],
            "translated_annotated_text": "LR parsing for <br>gramatices conjuntas</br> El algoritmo de análisis LR generalizado para gramáticas sin contexto, introducido por Tomita en 1986, es una implementación polinomio-temporal del análisis LR no determinista que utiliza la pila estructurada por gráficos para representar el contenido de los analizadores no deterministas pushdown para todas las ramas posibles de la computación en un solo paso de computación. Se ha desarrollado específicamente como una solución para las tareas prácticas de análisis que surgen en la lingüística computacional, y de hecho ha demostrado ser muy adecuado para el procesamiento del lenguaje natural. Las gramáticas conjuntivas extienden las gramáticas sin contexto al permitir el uso de una operación de intersección explícita dentro de las reglas gramaticales. Este artículo desarrolla un nuevo algoritmo de análisis al estilo LR para estas gramáticas, que se basa en la misma idea de un grafo-estructurado pushdown, donde la existencia simultánea de varios caminos en el gráfico se utiliza para realizar la operación de intersección mencionada. Los autómatas finitos subyacentes se tratan de la manera más general: en lugar de mostrar la corrección de los algoritmos para alguna forma particular de construir autómatas, el artículo define una amplia clase de autómatas utilizables con una gramática dada, que incluye no sólo el autómata tradicional LR(k), sino también, por ejemplo, un autómata trivial con un único estado alcanzable. Una modificación del método de construcción de tablas SLR(k) que hace uso de propiedades específicas de <br>gramáticas conjuntas</br> se proporciona como una posible forma de hacer autómatas finitos para usar con el algoritmo ",
            "error": [
                "gramatices conjuntas",
                "gramáticas conjuntas"
            ]
        },
        "generalized LR parsing algorithm": {
            "translated_key": "generalizado",
            "translated_annotated_text": "Análisis LR para gramáticas conjuntivas El algoritmo de análisis LR <br>generalizado</br> para gramáticas sin contexto, introducido por Tomita en 1986, es una implementación polinomio-temporal del análisis LR no determinista que utiliza la pila estructurada por gráficos para representar el contenido de los analizadores no deterministas pushdown para todas las ramas posibles de computación en un solo paso de computación. Se ha desarrollado específicamente como una solución para las tareas prácticas de análisis que surgen en la lingüística computacional, y de hecho ha demostrado ser muy adecuado para el procesamiento del lenguaje natural. Las gramáticas conjuntivas extienden las gramáticas sin contexto al permitir el uso de una operación de intersección explícita dentro de las reglas gramaticales. Este artículo desarrolla un nuevo algoritmo de análisis al estilo LR para estas gramáticas, que se basa en la misma idea de un grafo-estructurado pushdown, donde la existencia simultánea de varios caminos en el gráfico se utiliza para realizar la operación de intersección mencionada. Los autómatas finitos subyacentes se tratan de la manera más general: en lugar de mostrar la corrección de los algoritmos para alguna forma particular de construir autómatas, el artículo define una amplia clase de autómatas utilizables con una gramática dada, que incluye no sólo el autómata tradicional LR(k), sino también, por ejemplo, un autómata trivial con un único estado alcanzable. Una modificación del método de construcción de tablas SLR(k) que hace uso de propiedades específicas de gramáticas conjuntivas se proporciona como una posible manera de hacer autómatas finitos para usar con el algoritmo ",
            "error": [
                ""
            ]
        },
        "graph-structured stack": {
            "translated_key": " graph-structured stack",
            "translated_annotated_text": "Análisis LR para gramáticas conjuntivas El algoritmo de análisis LR generalizado para gramáticas sin contexto, introducido por Tomita en 1986, es una implementación polinomio-temporal del análisis LR no determinista que utiliza <br> graph-structured stack</br> para representar el contenido de los análisis no deterministas pushdown para todas las ramas posibles de computación en un solo paso de computación. Se ha desarrollado específicamente como una solución para las tareas prácticas de análisis que surgen en la lingüística computacional, y de hecho ha demostrado ser muy adecuado para el procesamiento del lenguaje natural. Las gramáticas conjuntivas extienden las gramáticas sin contexto al permitir el uso de una operación de intersección explícita dentro de las reglas gramaticales. Este artículo desarrolla un nuevo algoritmo de análisis al estilo LR para estas gramáticas, que se basa en la misma idea de un grafo-estructurado pushdown, donde la existencia simultánea de varios caminos en el gráfico se utiliza para realizar la operación de intersección mencionada. Los autómatas finitos subyacentes se tratan de la manera más general: en lugar de mostrar la corrección de los algoritmos para alguna forma particular de construir autómatas, el artículo define una amplia clase de autómatas utilizables con una gramática dada, que incluye no sólo el autómata tradicional LR(k), sino también, por ejemplo, un autómata trivial con un único estado alcanzable. Una modificación del método de construcción de tablas SLR(k) que hace uso de propiedades específicas de gramáticas conjuntivas se proporciona como una posible manera de hacer autómatas finitos para usar con el algoritmo ",
            "error": [
                ""
            ]
        },
        "nondeterministic parser pushdown": {
            "translated_key": [],
            "translated_annotated_text": "Análisis LR para gramáticas conjuntivas El algoritmo de análisis LR generalizado para gramáticas sin contexto, introducido por Tomita en 1986, es una implementación polinomio-tiempo de análisis LR no determinista que utiliza la pila grafo-estructurada para representar el contenido de los analizadores no deterministas pushdown para todas las ramas posibles de la computación en un solo paso de computación. Se ha desarrollado específicamente como una solución para las tareas prácticas de análisis que surgen en la lingüística computacional, y de hecho ha demostrado ser muy adecuado para el procesamiento del lenguaje natural. Las gramáticas conjuntivas extienden las gramáticas sin contexto al permitir el uso de una operación de intersección explícita dentro de las reglas gramaticales. Este artículo desarrolla un nuevo algoritmo de análisis al estilo LR para estas gramáticas, que se basa en la misma idea de un grafo-estructurado pushdown, donde la existencia simultánea de varios caminos en el gráfico se utiliza para realizar la operación de intersección mencionada. Los autómatas finitos subyacentes se tratan de la manera más general: en lugar de mostrar la corrección de los algoritmos para alguna forma particular de construir autómatas, el artículo define una amplia clase de autómatas utilizables con una gramática dada, que incluye no sólo el autómata tradicional LR(k), sino también, por ejemplo, un autómata trivial con un único estado alcanzable. Una modificación del método de construcción de tablas SLR(k) que hace uso de propiedades específicas de gramáticas conjuntivas se proporciona como una posible manera de hacer autómatas finitos para usar con el algoritmo ",
            "error": []
        },
        "computation": {
            "translated_key": " en un solo paso <br>computación",
            "translated_annotated_text": "Análisis LR para gramáticas conjuntivas El algoritmo de análisis LR generalizado para gramáticas sin contexto, introducido por Tomita en 1986, es una implementación polinomio-tiempo de análisis LR no determinista que utiliza la pila grafoestructurada para representar el contenido de los analizadores no deterministas pushdown para todas las ramas posibles de la computación <br> en un solo paso <br>computación</br>. Se ha desarrollado específicamente como una solución para las tareas prácticas de análisis que surgen en la lingüística computacional, y de hecho ha demostrado ser muy adecuado para el procesamiento del lenguaje natural. Las gramáticas conjuntivas extienden las gramáticas sin contexto al permitir el uso de una operación de intersección explícita dentro de las reglas gramaticales. Este artículo desarrolla un nuevo algoritmo de análisis al estilo LR para estas gramáticas, que se basa en la misma idea de un grafo-estructurado pushdown, donde la existencia simultánea de varios caminos en el gráfico se utiliza para realizar la operación de intersección mencionada. Los autómatas finitos subyacentes se tratan de la manera más general: en lugar de mostrar la corrección de los algoritmos para alguna forma particular de construir autómatas, el artículo define una amplia clase de autómatas utilizables con una gramática dada, que incluye no sólo el autómata tradicional LR(k), sino también, por ejemplo, un autómata trivial con un único estado alcanzable. Una modificación del método de construcción de tablas SLR(k) que hace uso de propiedades específicas de gramáticas conjuntivas se proporciona como una posible manera de hacer autómatas finitos para usar con el algoritmo ",
            "error": [
                ""
            ]
        },
        "computational linguistics": {
            "translated_key": "lingüística computacional",
            "translated_annotated_text": "Análisis LR para gramáticas conjuntivas El algoritmo de análisis LR generalizado para gramáticas sin contexto, introducido por Tomita en 1986, es una implementación polinomio-tiempo de análisis LR no determinista que utiliza la pila grafo-estructurada para representar el contenido de los analizadores no deterministas pushdown para todas las ramas posibles de la computación en un solo paso de computación. Se ha desarrollado específicamente como una solución para las tareas prácticas de análisis que surgen en la <br>lingüística computacional</br>, y de hecho ha demostrado ser muy adecuado para el procesamiento del lenguaje natural.  Las gramáticas conjuntivas extienden las gramáticas sin contexto al permitir el uso de una operación de intersección explícita dentro de las reglas gramaticales. Este artículo desarrolla un nuevo algoritmo de análisis al estilo LR para estas gramáticas, que se basa en la misma idea de un grafo-estructurado pushdown, donde la existencia simultánea de varios caminos en el gráfico se utiliza para realizar la operación de intersección mencionada. Los autómatas finitos subyacentes se tratan de la manera más general: en lugar de mostrar la corrección de los algoritmos para alguna forma particular de construir autómatas, el artículo define una amplia clase de autómatas utilizables con una gramática dada, que incluye no sólo el autómata tradicional LR(k), sino también, por ejemplo, un autómata trivial con un único estado alcanzable. Una modificación del método de construcción de tablas SLR(k) que hace uso de propiedades específicas de gramáticas conjuntivas se proporciona como una posible manera de hacer autómatas finitos para usar con el algoritmo ",
            "error": [
                ""
            ]
        },
        "natural language processing": {
            "translated_key": [],
            "translated_annotated_text": "Análisis LR para gramáticas conjuntivas El algoritmo de análisis LR generalizado para gramáticas sin contexto, introducido por Tomita en 1986, es una implementación polinomio-tiempo de análisis LR no determinista que utiliza la pila grafo-estructurada para representar el contenido de los analizadores no deterministas pushdown para todas las ramas posibles de la computación en un solo paso de computación. Se ha desarrollado específicamente como una solución para las tareas prácticas de análisis que surgen en la lingüística computacional, y de hecho ha demostrado ser muy adecuado para el procesamiento del lenguaje natural. Las gramáticas conjuntivas extienden las gramáticas sin contexto al permitir el uso de una operación de intersección explícita dentro de las reglas gramaticales. Este artículo desarrolla un nuevo algoritmo de análisis al estilo LR para estas gramáticas, que se basa en la misma idea de un grafo-estructurado pushdown, donde la existencia simultánea de varios caminos en el gráfico se utiliza para realizar la operación de intersección mencionada. Los autómatas finitos subyacentes se tratan de la manera más general: en lugar de mostrar la corrección de los algoritmos para alguna forma particular de construir autómatas, el artículo define una amplia clase de autómatas utilizables con una gramática dada, que incluye no sólo el autómata tradicional LR(k), sino también, por ejemplo, un autómata trivial con un único estado alcanzable. Una modificación del método de construcción de tablas SLR(k) que hace uso de propiedades específicas de gramáticas conjuntivas se proporciona como una posible manera de hacer autómatas finitos para usar con el algoritmo ",
            "error": []
        },
        "context-free grammars": {
            "translated_key": [
                "contexto",
                "gramáticas sin texto"
            ],
            "translated_annotated_text": "Análisis LR para gramáticas conjuntivas El algoritmo de análisis LR generalizado para gramáticas libres de <br>contexto</br>, introducido por Tomita en 1986, es una implementación polinomio-temporal del análisis LR no determinista que utiliza la pila estructurada por gráficos para representar el contenido de los analizadores no deterministas pushdown para todas las ramas posibles de computación en un solo paso de computación. Se ha desarrollado específicamente como una solución para las tareas prácticas de análisis que surgen en la lingüística computacional, y de hecho ha demostrado ser muy adecuado para el procesamiento del lenguaje natural. Las gramáticas conjuntivas se extienden <br>gramáticas sin texto</br> permitiendo el uso de una operación de intersección explícita dentro de las reglas gramaticales. Este artículo desarrolla un nuevo algoritmo de análisis al estilo LR para estas gramáticas, que se basa en la misma idea de un grafo-estructurado pushdown, donde la existencia simultánea de varios caminos en el gráfico se utiliza para realizar la operación de intersección mencionada. Los autómatas finitos subyacentes se tratan de la manera más general: en lugar de mostrar la corrección de los algoritmos para alguna forma particular de construir autómatas, el artículo define una amplia clase de autómatas utilizables con una gramática dada, que incluye no sólo el autómata tradicional LR(k), sino también, por ejemplo, un autómata trivial con un único estado alcanzable. Una modificación del método de construcción de tablas SLR(k) que hace uso de propiedades específicas de gramáticas conjuntivas se proporciona como una posible manera de hacer autómatas finitos para usar con el algoritmo ",
            "error": [
                "contexto",
                "gramáticas sin texto"
            ]
        },
        "explicit intersection operation": {
            "translated_key": [],
            "translated_annotated_text": "Análisis LR para gramáticas conjuntivas El algoritmo de análisis LR generalizado para gramáticas sin contexto, introducido por Tomita en 1986, es una implementación polinomio-tiempo de análisis LR no determinista que utiliza la pila grafo-estructurada para representar el contenido de los analizadores no deterministas pushdown para todas las ramas posibles de la computación en un solo paso de computación. Se ha desarrollado específicamente como una solución para las tareas prácticas de análisis que surgen en la lingüística computacional, y de hecho ha demostrado ser muy adecuado para el procesamiento del lenguaje natural. Las gramáticas conjuntivas extienden las gramáticas sin contexto al permitir el uso de una operación de intersección explícita <br> dentro de las reglas gramaticales. Este artículo desarrolla un nuevo algoritmo de análisis al estilo LR para estas gramáticas, que se basa en la misma idea de un grafo-estructurado pushdown, donde la existencia simultánea de varios caminos en el gráfico se utiliza para realizar la operación de intersección mencionada. Los autómatas finitos subyacentes se tratan de la manera más general: en lugar de mostrar la corrección de los algoritmos para alguna forma particular de construir autómatas, el artículo define una amplia clase de autómatas utilizables con una gramática dada, que incluye no sólo el autómata tradicional LR(k), sino también, por ejemplo, un autómata trivial con un único estado alcanzable. Una modificación del método de construcción de tablas SLR(k) que hace uso de propiedades específicas de gramáticas conjuntivas se proporciona como una posible manera de hacer autómatas finitos para usar con el algoritmo ",
            "error": []
        },
        "grammar rules": {
            "translated_key": "grammar",
            "translated_annotated_text": "Análisis LR para gramáticas conjuntivas El algoritmo de análisis LR generalizado para gramáticas sin contexto, introducido por Tomita en 1986, es una implementación polinomio-tiempo de análisis LR no determinista que utiliza la pila grafo-estructurada para representar el contenido de los analizadores no deterministas pushdown para todas las ramas posibles de la computación en un solo paso de computación. Se ha desarrollado específicamente como una solución para las tareas prácticas de análisis que surgen en la lingüística computacional, y de hecho ha demostrado ser muy adecuado para el procesamiento del lenguaje natural. Las gramáticas conjuntivas extienden las gramáticas sin contexto al permitir el uso de una operación de intersección explícita dentro de las reglas <br>grammar</br>. Este artículo desarrolla un nuevo algoritmo de análisis al estilo LR para estas gramáticas, que se basa en la misma idea de un grafo-estructurado pushdown, donde la existencia simultánea de varios caminos en el gráfico se utiliza para realizar la operación de intersección mencionada. Los autómatas finitos subyacentes se tratan de la manera más general: en lugar de mostrar la corrección de los algoritmos para alguna forma particular de construir autómatas, el artículo define una amplia clase de autómatas utilizables con una gramática dada, que incluye no sólo el autómata tradicional LR(k), sino también, por ejemplo, un autómata trivial con un único estado alcanzable. Una modificación del método de construcción de tablas SLR(k) que hace uso de propiedades específicas de gramáticas conjuntivas se proporciona como una posible manera de hacer autómatas finitos para usar con el algoritmo ",
            "error": [
                ""
            ]
        },
        "finite automata": {
            "translated_key": [
                "finite subyacentes",
                "finite autómata"
            ],
            "translated_annotated_text": "Análisis LR para gramáticas conjuntivas El algoritmo de análisis LR generalizado para gramáticas sin contexto, introducido por Tomita en 1986, es una implementación polinomio-tiempo de análisis LR no determinista que utiliza la pila grafo-estructurada para representar el contenido de los analizadores no deterministas pushdown para todas las ramas posibles de la computación en un solo paso de computación. Se ha desarrollado específicamente como una solución para las tareas prácticas de análisis que surgen en la lingüística computacional, y de hecho ha demostrado ser muy adecuado para el procesamiento del lenguaje natural. Las gramáticas conjuntivas extienden las gramáticas sin contexto al permitir el uso de una operación de intersección explícita dentro de las reglas gramaticales. Este artículo desarrolla un nuevo algoritmo de análisis al estilo LR para estas gramáticas, que se basa en la misma idea de un grafo-estructurado pushdown, donde la existencia simultánea de varios caminos en el gráfico se utiliza para realizar la operación de intersección mencionada. Los autómatas <br>finite subyacentes</br> son tratados de la manera más general: en lugar de mostrar la corrección de los algoritmos para alguna forma particular de construir autómatas, el artículo define una amplia clase de autómatas utilizables con una gramática dada, que incluye no sólo los autómatas LR(k) tradicionales, sino también, por ejemplo, un autómata trivial con un único estado alcanzable. Una modificación del método de construcción de tablas SLR(k) que hace uso de propiedades específicas de gramáticas conjuntivas se proporciona como una posible forma de hacer que <br>finite autómata</br> se utilice con el algoritmo ",
            "error": [
                "finite subyacentes",
                "finite autómata"
            ]
        },
        "trivial automaton": {
            "translated_key": [],
            "translated_annotated_text": "Análisis LR para gramáticas conjuntivas El algoritmo de análisis LR generalizado para gramáticas sin contexto, introducido por Tomita en 1986, es una implementación polinomio-tiempo de análisis LR no determinista que utiliza la pila grafo-estructurada para representar el contenido de los analizadores no deterministas pushdown para todas las ramas posibles de la computación en un solo paso de computación. Se ha desarrollado específicamente como una solución para las tareas prácticas de análisis que surgen en la lingüística computacional, y de hecho ha demostrado ser muy adecuado para el procesamiento del lenguaje natural. Las gramáticas conjuntivas extienden las gramáticas sin contexto al permitir el uso de una operación de intersección explícita dentro de las reglas gramaticales. Este artículo desarrolla un nuevo algoritmo de análisis al estilo LR para estas gramáticas, que se basa en la misma idea de un grafo-estructurado pushdown, donde la existencia simultánea de varios caminos en el gráfico se utiliza para realizar la operación de intersección mencionada. Los autómatas finitos subyacentes se tratan de la manera más general: en lugar de mostrar la corrección de los algoritmos para alguna forma particular de construir autómatas, el artículo define una amplia clase de autómatas utilizables con una gramática dada, que incluye no sólo el autómata tradicional LR(k), sino también, por ejemplo, un autómata trivial <br> con un único estado alcanzable. Una modificación del método de construcción de tablas SLR(k) que hace uso de propiedades específicas de gramáticas conjuntivas se proporciona como una posible manera de hacer autómatas finitos para usar con el algoritmo ",
            "error": []
        },
        "single reachable state": {
            "translated_key": [],
            "translated_annotated_text": "Análisis LR para gramáticas conjuntivas El algoritmo de análisis LR generalizado para gramáticas sin contexto, introducido por Tomita en 1986, es una implementación polinomio-tiempo de análisis LR no determinista que utiliza la pila grafo-estructurada para representar el contenido de los analizadores no deterministas pushdown para todas las ramas posibles de la computación en un solo paso de computación. Se ha desarrollado específicamente como una solución para las tareas prácticas de análisis que surgen en la lingüística computacional, y de hecho ha demostrado ser muy adecuado para el procesamiento del lenguaje natural. Las gramáticas conjuntivas extienden las gramáticas sin contexto al permitir el uso de una operación de intersección explícita dentro de las reglas gramaticales. Este artículo desarrolla un nuevo algoritmo de análisis al estilo LR para estas gramáticas, que se basa en la misma idea de un grafo-estructurado pushdown, donde la existencia simultánea de varios caminos en el gráfico se utiliza para realizar la operación de intersección mencionada. Los autómatas finitos subyacentes se tratan de la manera más general: en lugar de mostrar la corrección de los algoritmos para alguna forma particular de construir autómatas, el artículo define una amplia clase de autómatas utilizables con una gramática dada, que incluye no sólo el autómata tradicional LR(k), sino también, por ejemplo, un autómata trivial con un estado accesible <br>. Una modificación del método de construcción de tablas SLR(k) que hace uso de propiedades específicas de gramáticas conjuntivas se proporciona como una posible manera de hacer autómatas finitos para usar con el algoritmo ",
            "error": []
        },
        "Boolean closure": {
            "translated_key": [],
            "translated_annotated_text": "Análisis LR para gramáticas conjuntivas El algoritmo de análisis LR generalizado para gramáticas sin contexto, introducido por Tomita en 1986, es una implementación polinomio-tiempo de análisis LR no determinista que utiliza la pila grafo-estructurada para representar el contenido de los analizadores no deterministas pushdown para todas las ramas posibles de la computación en un solo paso de computación. Se ha desarrollado específicamente como una solución para las tareas prácticas de análisis que surgen en la lingüística computacional, y de hecho ha demostrado ser muy adecuado para el procesamiento del lenguaje natural. Las gramáticas conjuntivas extienden las gramáticas sin contexto al permitir el uso de una operación de intersección explícita dentro de las reglas gramaticales. Este artículo desarrolla un nuevo algoritmo de análisis al estilo LR para estas gramáticas, que se basa en la misma idea de un grafo-estructurado pushdown, donde la existencia simultánea de varios caminos en el gráfico se utiliza para realizar la operación de intersección mencionada. Los autómatas finitos subyacentes se tratan de la manera más general: en lugar de mostrar la corrección de los algoritmos para alguna forma particular de construir autómatas, el artículo define una amplia clase de autómatas utilizables con una gramática dada, que incluye no sólo el autómata tradicional LR(k), sino también, por ejemplo, un autómata trivial con un único estado alcanzable. Una modificación del método de construcción de tablas SLR(k) que hace uso de propiedades específicas de gramáticas conjuntivas se proporciona como una posible manera de hacer autómatas finitos para usar con el algoritmo ",
            "error": []
        },
        "deterministic context-free languages": {
            "translated_key": [],
            "translated_annotated_text": "Análisis LR para gramáticas conjuntivas El algoritmo de análisis LR generalizado para gramáticas sin contexto, introducido por Tomita en 1986, es una implementación polinomio-tiempo de análisis LR no determinista que utiliza la pila grafo-estructurada para representar el contenido de los analizadores no deterministas pushdown para todas las ramas posibles de la computación en un solo paso de computación. Se ha desarrollado específicamente como una solución para las tareas prácticas de análisis que surgen en la lingüística computacional, y de hecho ha demostrado ser muy adecuado para el procesamiento del lenguaje natural. Las gramáticas conjuntivas extienden las gramáticas sin contexto al permitir el uso de una operación de intersección explícita dentro de las reglas gramaticales. Este artículo desarrolla un nuevo algoritmo de análisis al estilo LR para estas gramáticas, que se basa en la misma idea de un grafo-estructurado pushdown, donde la existencia simultánea de varios caminos en el gráfico se utiliza para realizar la operación de intersección mencionada. Los autómatas finitos subyacentes se tratan de la manera más general: en lugar de mostrar la corrección de los algoritmos para alguna forma particular de construir autómatas, el artículo define una amplia clase de autómatas utilizables con una gramática dada, que incluye no sólo el autómata tradicional LR(k), sino también, por ejemplo, un autómata trivial con un único estado alcanzable. Una modificación del método de construcción de tablas SLR(k) que hace uso de propiedades específicas de gramáticas conjuntivas se proporciona como una posible manera de hacer autómatas finitos para usar con el algoritmo ",
            "error": []
        },
        "context-free languages": {
            "translated_key": [],
            "translated_annotated_text": "Análisis LR para gramáticas conjuntivas El algoritmo de análisis LR generalizado para gramáticas sin contexto, introducido por Tomita en 1986, es una implementación polinomio-tiempo de análisis LR no determinista que utiliza la pila grafo-estructurada para representar el contenido de los analizadores no deterministas pushdown para todas las ramas posibles de la computación en un solo paso de computación. Se ha desarrollado específicamente como una solución para las tareas prácticas de análisis que surgen en la lingüística computacional, y de hecho ha demostrado ser muy adecuado para el procesamiento del lenguaje natural. Las gramáticas conjuntivas extienden las gramáticas sin contexto al permitir el uso de una operación de intersección explícita dentro de las reglas gramaticales. Este artículo desarrolla un nuevo algoritmo de análisis al estilo LR para estas gramáticas, que se basa en la misma idea de un grafo-estructurado pushdown, donde la existencia simultánea de varios caminos en el gráfico se utiliza para realizar la operación de intersección mencionada. Los autómatas finitos subyacentes se tratan de la manera más general: en lugar de mostrar la corrección de los algoritmos para alguna forma particular de construir autómatas, el artículo define una amplia clase de autómatas utilizables con una gramática dada, que incluye no sólo el autómata tradicional LR(k), sino también, por ejemplo, un autómata trivial con un único estado alcanzable. Una modificación del método de construcción de tablas SLR(k) que hace uso de propiedades específicas de gramáticas conjuntivas se proporciona como una posible manera de hacer autómatas finitos para usar con el algoritmo ",
            "error": []
        },
        "pushdown automata": {
            "translated_key": [],
            "translated_annotated_text": "Análisis LR para gramáticas conjuntivas El algoritmo de análisis LR generalizado para gramáticas sin contexto, introducido por Tomita en 1986, es una implementación polinomio-tiempo de análisis LR no determinista que utiliza la pila grafo-estructurada para representar el contenido de los analizadores no deterministas pushdown para todas las ramas posibles de la computación en un solo paso de computación. Se ha desarrollado específicamente como una solución para las tareas prácticas de análisis que surgen en la lingüística computacional, y de hecho ha demostrado ser muy adecuado para el procesamiento del lenguaje natural. Las gramáticas conjuntivas extienden las gramáticas sin contexto al permitir el uso de una operación de intersección explícita dentro de las reglas gramaticales. Este artículo desarrolla un nuevo algoritmo de análisis al estilo LR para estas gramáticas, que se basa en la misma idea de un grafo-estructurado pushdown, donde la existencia simultánea de varios caminos en el gráfico se utiliza para realizar la operación de intersección mencionada. Los autómatas finitos subyacentes se tratan de la manera más general: en lugar de mostrar la corrección de los algoritmos para alguna forma particular de construir autómatas, el artículo define una amplia clase de autómatas utilizables con una gramática dada, que incluye no sólo el autómata tradicional LR(k), sino también, por ejemplo, un autómata trivial con un único estado alcanzable. Una modificación del método de construcción de tablas SLR(k) que hace uso de propiedades específicas de gramáticas conjuntivas se proporciona como una posible manera de hacer autómatas finitos para usar con el algoritmo ",
            "error": []
        }
    }
}