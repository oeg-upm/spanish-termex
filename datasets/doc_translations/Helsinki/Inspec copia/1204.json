{
    "original_text": "Design and prototype of a performance tool interface for OpenMP This paper proposes a performance tools interface for OpenMP, similar in spirit to the MPI profiling interface in its intent to define a clear and portable API that makes OpenMP execution events visible to runtime performance tools. We present our design using a source-level instrumentation approach based on OpenMP directive rewriting. Rules to instrument each directive and their combination are applied to generate calls to the interface consistent with directive semantics and to pass context information (e.g., source code locations) in a portable and efficient way. Our proposed OpenMP performance API further allows user functions and arbitrary code regions to be marked and performance measurement to be controlled using new OpenMP directives. To prototype the proposed OpenMP performance interface, we have developed compatible performance libraries for the EXPERT automatic event trace analyzer [17, 18] and the TAU performance analysis framework [13]. The directive instrumentation transformations we define are implemented in a source-to-source translation tool called OPARI. Application examples are presented for both EXPERT and TAU to show the OpenMP performance interface and OPARI instrumentation tool in operation. When used together with the MPI profiling interface (as the examples also demonstrate), our proposed approach provides a portable and robust solution to performance analysis of OpenMP and mixed-mode (OpenMP + MPI) applications",
    "original_translation": "Diseño y prototipo de una interfaz de herramienta de rendimiento para OpenMP Este artículo propone una interfaz de herramientas de rendimiento para OpenMP, similar en espíritu a la interfaz de perfilado MPI en su intención de definir una API clara y portátil que hace que los eventos de ejecución de OpenMP sean visibles a las herramientas de rendimiento en tiempo de ejecución. Presentamos nuestro diseño utilizando un enfoque de instrumentación a nivel de fuente basado en la reescritura de directiva OpenMP. Las normas para la instrumentación de cada directiva y su combinación se aplican para generar llamadas a la interfaz coherentes con la semántica de la directiva y para transmitir información contextual (por ejemplo, ubicaciones de código fuente) de forma portátil y eficiente. Nuestra API de rendimiento de OpenMP propuesta permite además marcar las funciones del usuario y las regiones de código arbitrario y controlar la medición del rendimiento utilizando nuevas directivas OpenMP. Para prototipo de la interfaz de rendimiento de OpenMP propuesta, hemos desarrollado bibliotecas de rendimiento compatibles para el analizador automático de eventos EXPERT [17, 18] y el marco de análisis de rendimiento TAU [13]. Las transformaciones de instrumentación de directiva que definimos se implementan en una herramienta de traducción fuente a fuente llamada OPARI. Se presentan ejemplos de aplicación tanto para EXPERT como para TAU para mostrar la interfaz de rendimiento OpenMP y la herramienta de instrumentación OPARI en funcionamiento. Cuando se utiliza junto con la interfaz de perfilado MPI (como también lo demuestran los ejemplos), nuestro enfoque propuesto proporciona una solución portátil y robusta para el análisis de rendimiento de OpenMP y aplicaciones de modo mixto (OpenMP + MPI)",
    "error_count": 7,
    "keys": {
        "performance tool interface": {
            "translated_key": "performance",
            "translated_annotated_text": "Diseño y prototipo de una interfaz de herramientas <br>performance</br> para OpenMP Este artículo propone una interfaz de herramientas de rendimiento para OpenMP, similar en espíritu a la interfaz de perfiles MPI en su intención de definir una API clara y portátil que hace que los eventos de ejecución de OpenMP sean visibles para las herramientas de rendimiento en tiempo de ejecución. Presentamos nuestro diseño utilizando un enfoque de instrumentación a nivel de fuente basado en la reescritura de directiva OpenMP. Las normas para la instrumentación de cada directiva y su combinación se aplican para generar llamadas a la interfaz coherentes con la semántica de la directiva y para transmitir información contextual (por ejemplo, ubicaciones de código fuente) de forma portátil y eficiente. Nuestra API de rendimiento de OpenMP propuesta permite además marcar las funciones del usuario y las regiones de código arbitrario y controlar la medición del rendimiento utilizando nuevas directivas OpenMP. Para prototipo de la interfaz de rendimiento de OpenMP propuesta, hemos desarrollado bibliotecas de rendimiento compatibles para el analizador automático de eventos EXPERT [17, 18] y el marco de análisis de rendimiento TAU [13]. Las transformaciones de instrumentación de directiva que definimos se implementan en una herramienta de traducción fuente a fuente llamada OPARI. Se presentan ejemplos de aplicación tanto para EXPERT como para TAU para mostrar la interfaz de rendimiento OpenMP y la herramienta de instrumentación OPARI en funcionamiento. Cuando se utiliza junto con la interfaz de perfilado MPI (como también lo demuestran los ejemplos), nuestro enfoque propuesto proporciona una solución portátil y robusta para el análisis de rendimiento de OpenMP y aplicaciones de modo mixto (OpenMP + MPI) ",
            "error": [
                ""
            ]
        },
        "MPI profiling interface": {
            "translated_key": "MPI",
            "translated_annotated_text": "Diseño y prototipo de una interfaz de herramientas de rendimiento para OpenMP Este artículo propone una interfaz de herramientas de rendimiento para OpenMP, similar en espíritu a la interfaz de perfilado <br>MPI</br> en su intención de definir una API clara y portátil que hace que los eventos de ejecución de OpenMP sean visibles para las herramientas de rendimiento en tiempo de ejecución. Presentamos nuestro diseño utilizando un enfoque de instrumentación a nivel de fuente basado en la reescritura de directiva OpenMP. Las normas para la instrumentación de cada directiva y su combinación se aplican para generar llamadas a la interfaz coherentes con la semántica de la directiva y para transmitir información contextual (por ejemplo, ubicaciones de código fuente) de forma portátil y eficiente. Nuestra API de rendimiento de OpenMP propuesta permite además marcar las funciones del usuario y las regiones de código arbitrario y controlar la medición del rendimiento utilizando nuevas directivas OpenMP. Para prototipo de la interfaz de rendimiento de OpenMP propuesta, hemos desarrollado bibliotecas de rendimiento compatibles para el analizador automático de eventos EXPERT [17, 18] y el marco de análisis de rendimiento TAU [13]. Las transformaciones de instrumentación de directiva que definimos se implementan en una herramienta de traducción fuente a fuente llamada OPARI. Se presentan ejemplos de aplicación tanto para EXPERT como para TAU para mostrar la interfaz de rendimiento OpenMP y la herramienta de instrumentación OPARI en funcionamiento. Cuando se utiliza junto con la interfaz de perfilado <br>MPI</br> (como también lo demuestran los ejemplos), nuestro enfoque propuesto proporciona una solución portátil y robusta para el análisis de rendimiento de las aplicaciones OpenMP y modo mixto (OpenMP + MPI) ",
            "error": [
                ""
            ]
        },
        "API": {
            "translated_key": "API",
            "translated_annotated_text": "Diseño y prototipo de una interfaz de herramientas de rendimiento para OpenMP Este artículo propone una interfaz de herramientas de rendimiento para OpenMP, similar en espíritu a la interfaz de perfilado MPI en su intención de definir una <br>API</br> clara y portátil que hace que los eventos de ejecución de OpenMP sean visibles para las herramientas de rendimiento en tiempo de ejecución. Presentamos nuestro diseño utilizando un enfoque de instrumentación a nivel de fuente basado en la reescritura de directiva OpenMP. Las normas para la instrumentación de cada directiva y su combinación se aplican para generar llamadas a la interfaz coherentes con la semántica de la directiva y para transmitir información contextual (por ejemplo, ubicaciones de código fuente) de forma portátil y eficiente. Nuestro rendimiento de OpenMP propuesto <br>API</br> permite además marcar las funciones del usuario y las regiones de código arbitrario y controlar la medición del rendimiento utilizando nuevas directivas OpenMP. Para prototipo de la interfaz de rendimiento de OpenMP propuesta, hemos desarrollado bibliotecas de rendimiento compatibles para el analizador automático de eventos EXPERT [17, 18] y el marco de análisis de rendimiento TAU [13]. Las transformaciones de instrumentación de directiva que definimos se implementan en una herramienta de traducción fuente a fuente llamada OPARI. Se presentan ejemplos de aplicación tanto para EXPERT como para TAU para mostrar la interfaz de rendimiento OpenMP y la herramienta de instrumentación OPARI en funcionamiento. Cuando se utiliza junto con la interfaz de perfilado MPI (como también lo demuestran los ejemplos), nuestro enfoque propuesto proporciona una solución portátil y robusta para el análisis de rendimiento de OpenMP y aplicaciones de modo mixto (OpenMP + MPI) ",
            "error": [
                ""
            ]
        },
        "source-level instrumentation approach": {
            "translated_key": "source",
            "translated_annotated_text": "Diseño y prototipo de una interfaz de herramienta de rendimiento para OpenMP Este artículo propone una interfaz de herramientas de rendimiento para OpenMP, similar en espíritu a la interfaz de perfilado MPI en su intención de definir una API clara y portátil que hace que los eventos de ejecución de OpenMP sean visibles a las herramientas de rendimiento en tiempo de ejecución. Presentamos nuestro diseño utilizando un enfoque de instrumentación a nivel de <br>source</br> basado en la reescritura de directiva OpenMP. Las normas para la instrumentación de cada directiva y su combinación se aplican para generar llamadas a la interfaz coherentes con la semántica de la directiva y para transmitir información contextual (por ejemplo, ubicaciones de código fuente) de forma portátil y eficiente. Nuestra API de rendimiento de OpenMP propuesta permite además marcar las funciones del usuario y las regiones de código arbitrario y controlar la medición del rendimiento utilizando nuevas directivas OpenMP. Para prototipo de la interfaz de rendimiento de OpenMP propuesta, hemos desarrollado bibliotecas de rendimiento compatibles para el analizador automático de eventos EXPERT [17, 18] y el marco de análisis de rendimiento TAU [13]. Las transformaciones de instrumentación de directiva que definimos se implementan en una herramienta de traducción fuente a fuente llamada OPARI. Se presentan ejemplos de aplicación tanto para EXPERT como para TAU para mostrar la interfaz de rendimiento OpenMP y la herramienta de instrumentación OPARI en funcionamiento. Cuando se utiliza junto con la interfaz de perfilado MPI (como también lo demuestran los ejemplos), nuestro enfoque propuesto proporciona una solución portátil y robusta para el análisis de rendimiento de OpenMP y aplicaciones de modo mixto (OpenMP + MPI) ",
            "error": [
                ""
            ]
        },
        "OpenMP directive rewriting": {
            "translated_key": "OpenMP",
            "translated_annotated_text": "Diseño y prototipo de una interfaz de herramienta de rendimiento para OpenMP Este artículo propone una interfaz de herramientas de rendimiento para OpenMP, similar en espíritu a la interfaz de perfilado MPI en su intención de definir una API clara y portátil que hace que los eventos de ejecución de OpenMP sean visibles a las herramientas de rendimiento en tiempo de ejecución. Presentamos nuestro diseño utilizando un enfoque de instrumentación a nivel de fuente basado en la reescritura de directiva <br>OpenMP</br>. Las normas para la instrumentación de cada directiva y su combinación se aplican para generar llamadas a la interfaz coherentes con la semántica de la directiva y para transmitir información contextual (por ejemplo, ubicaciones de código fuente) de forma portátil y eficiente. Nuestra API de rendimiento de OpenMP propuesta permite además marcar las funciones del usuario y las regiones de código arbitrario y controlar la medición del rendimiento utilizando nuevas directivas OpenMP. Para prototipo de la interfaz de rendimiento de OpenMP propuesta, hemos desarrollado bibliotecas de rendimiento compatibles para el analizador automático de eventos EXPERT [17, 18] y el marco de análisis de rendimiento TAU [13]. Las transformaciones de instrumentación de directiva que definimos se implementan en una herramienta de traducción fuente a fuente llamada OPARI. Se presentan ejemplos de aplicación tanto para EXPERT como para TAU para mostrar la interfaz de rendimiento OpenMP y la herramienta de instrumentación OPARI en funcionamiento. Cuando se utiliza junto con la interfaz de perfilado MPI (como también lo demuestran los ejemplos), nuestro enfoque propuesto proporciona una solución portátil y robusta para el análisis de rendimiento de OpenMP y aplicaciones de modo mixto (OpenMP + MPI) ",
            "error": [
                ""
            ]
        },
        "directive semantics": {
            "translated_key": "directiva",
            "translated_annotated_text": "Diseño y prototipo de una interfaz de herramienta de rendimiento para OpenMP Este artículo propone una interfaz de herramientas de rendimiento para OpenMP, similar en espíritu a la interfaz de perfilado MPI en su intención de definir una API clara y portátil que hace que los eventos de ejecución de OpenMP sean visibles a las herramientas de rendimiento en tiempo de ejecución. Presentamos nuestro diseño utilizando un enfoque de instrumentación a nivel de fuente basado en la reescritura de directiva OpenMP. Las reglas para instrumentar cada directiva y su combinación se aplican para generar llamadas a la interfaz consistentes con la semántica <br>directiva</br> y para transmitir información contextual (por ejemplo, ubicaciones de código fuente) de manera portátil y eficiente. Nuestra API de rendimiento de OpenMP propuesta permite además marcar las funciones del usuario y las regiones de código arbitrario y controlar la medición del rendimiento utilizando nuevas directivas OpenMP. Para prototipo de la interfaz de rendimiento de OpenMP propuesta, hemos desarrollado bibliotecas de rendimiento compatibles para el analizador automático de eventos EXPERT [17, 18] y el marco de análisis de rendimiento TAU [13]. Las transformaciones de instrumentación de directiva que definimos se implementan en una herramienta de traducción fuente a fuente llamada OPARI. Se presentan ejemplos de aplicación tanto para EXPERT como para TAU para mostrar la interfaz de rendimiento OpenMP y la herramienta de instrumentación OPARI en funcionamiento. Cuando se utiliza junto con la interfaz de perfilado MPI (como también lo demuestran los ejemplos), nuestro enfoque propuesto proporciona una solución portátil y robusta para el análisis de rendimiento de OpenMP y aplicaciones de modo mixto (OpenMP + MPI) ",
            "error": [
                ""
            ]
        },
        "arbitrary code regions": {
            "translated_key": "arbitraria",
            "translated_annotated_text": "Diseño y prototipo de una interfaz de herramienta de rendimiento para OpenMP Este artículo propone una interfaz de herramientas de rendimiento para OpenMP, similar en espíritu a la interfaz de perfilado MPI en su intención de definir una API clara y portátil que hace que los eventos de ejecución de OpenMP sean visibles a las herramientas de rendimiento en tiempo de ejecución. Presentamos nuestro diseño utilizando un enfoque de instrumentación a nivel de fuente basado en la reescritura de directiva OpenMP. Las normas para la instrumentación de cada directiva y su combinación se aplican para generar llamadas a la interfaz coherentes con la semántica de la directiva y para transmitir información contextual (por ejemplo, ubicaciones de código fuente) de forma portátil y eficiente. Nuestra API de rendimiento de OpenMP propuesta permite además marcar las funciones del usuario y las regiones de código <br>arbitraria</br> y controlar la medición del rendimiento utilizando nuevas directivas OpenMP. Para prototipo de la interfaz de rendimiento de OpenMP propuesta, hemos desarrollado bibliotecas de rendimiento compatibles para el analizador automático de eventos EXPERT [17, 18] y el marco de análisis de rendimiento TAU [13]. Las transformaciones de instrumentación de directiva que definimos se implementan en una herramienta de traducción fuente a fuente llamada OPARI. Se presentan ejemplos de aplicación tanto para EXPERT como para TAU para mostrar la interfaz de rendimiento OpenMP y la herramienta de instrumentación OPARI en funcionamiento. Cuando se utiliza junto con la interfaz de perfilado MPI (como también lo demuestran los ejemplos), nuestro enfoque propuesto proporciona una solución portátil y robusta para el análisis de rendimiento de OpenMP y aplicaciones de modo mixto (OpenMP + MPI) ",
            "error": [
                ""
            ]
        },
        "performance libraries": {
            "translated_key": [],
            "translated_annotated_text": "Diseño y prototipo de una interfaz de herramienta de rendimiento para OpenMP Este artículo propone una interfaz de herramientas de rendimiento para OpenMP, similar en espíritu a la interfaz de perfilado MPI en su intención de definir una API clara y portátil que hace que los eventos de ejecución de OpenMP sean visibles a las herramientas de rendimiento en tiempo de ejecución. Presentamos nuestro diseño utilizando un enfoque de instrumentación a nivel de fuente basado en la reescritura de directiva OpenMP. Las normas para la instrumentación de cada directiva y su combinación se aplican para generar llamadas a la interfaz coherentes con la semántica de la directiva y para transmitir información contextual (por ejemplo, ubicaciones de código fuente) de forma portátil y eficiente. Nuestra API de rendimiento de OpenMP propuesta permite además marcar las funciones del usuario y las regiones de código arbitrario y controlar la medición del rendimiento utilizando nuevas directivas OpenMP. Para prototipo de la interfaz de rendimiento de OpenMP propuesta, hemos desarrollado bibliotecas compatibles de rendimiento <br> para el analizador automático de eventos EXPERT [17, 18] y el marco de análisis de rendimiento TAU [13]. Las transformaciones de instrumentación de directiva que definimos se implementan en una herramienta de traducción fuente a fuente llamada OPARI. Se presentan ejemplos de aplicación tanto para EXPERT como para TAU para mostrar la interfaz de rendimiento OpenMP y la herramienta de instrumentación OPARI en funcionamiento. Cuando se utiliza junto con la interfaz de perfilado MPI (como también lo demuestran los ejemplos), nuestro enfoque propuesto proporciona una solución portátil y robusta para el análisis de rendimiento de OpenMP y aplicaciones de modo mixto (OpenMP + MPI) ",
            "error": []
        },
        "EXPERT automatic event trace analyzer": {
            "translated_key": "EXPERT",
            "translated_annotated_text": "Diseño y prototipo de una interfaz de herramienta de rendimiento para OpenMP Este artículo propone una interfaz de herramientas de rendimiento para OpenMP, similar en espíritu a la interfaz de perfilado MPI en su intención de definir una API clara y portátil que hace que los eventos de ejecución de OpenMP sean visibles a las herramientas de rendimiento en tiempo de ejecución. Presentamos nuestro diseño utilizando un enfoque de instrumentación a nivel de fuente basado en la reescritura de directiva OpenMP. Las normas para la instrumentación de cada directiva y su combinación se aplican para generar llamadas a la interfaz coherentes con la semántica de la directiva y para transmitir información contextual (por ejemplo, ubicaciones de código fuente) de forma portátil y eficiente. Nuestra API de rendimiento de OpenMP propuesta permite además marcar las funciones del usuario y las regiones de código arbitrario y controlar la medición del rendimiento utilizando nuevas directivas OpenMP. Para el prototipo de la interfaz de rendimiento de OpenMP propuesta, hemos desarrollado bibliotecas de rendimiento compatibles para el analizador automático de trazas de eventos <br>EXPERT</br> [17, 18] y el marco de análisis de rendimiento TAU [13]. Las transformaciones de instrumentación de directiva que definimos se implementan en una herramienta de traducción fuente a fuente llamada OPARI. Se presentan ejemplos de aplicación tanto para EXPERT como para TAU para mostrar la interfaz de rendimiento OpenMP y la herramienta de instrumentación OPARI en funcionamiento. Cuando se utiliza junto con la interfaz de perfilado MPI (como también lo demuestran los ejemplos), nuestro enfoque propuesto proporciona una solución portátil y robusta para el análisis de rendimiento de OpenMP y aplicaciones de modo mixto (OpenMP + MPI) ",
            "error": [
                ""
            ]
        },
        "TAU performance analysis framework": {
            "translated_key": "TAU",
            "translated_annotated_text": "Diseño y prototipo de una interfaz de herramienta de rendimiento para OpenMP Este artículo propone una interfaz de herramientas de rendimiento para OpenMP, similar en espíritu a la interfaz de perfilado MPI en su intención de definir una API clara y portátil que hace que los eventos de ejecución de OpenMP sean visibles a las herramientas de rendimiento en tiempo de ejecución. Presentamos nuestro diseño utilizando un enfoque de instrumentación a nivel de fuente basado en la reescritura de directiva OpenMP. Las normas para la instrumentación de cada directiva y su combinación se aplican para generar llamadas a la interfaz coherentes con la semántica de la directiva y para transmitir información contextual (por ejemplo, ubicaciones de código fuente) de forma portátil y eficiente. Nuestra API de rendimiento de OpenMP propuesta permite además marcar las funciones del usuario y las regiones de código arbitrario y controlar la medición del rendimiento utilizando nuevas directivas OpenMP. Para prototipo de la interfaz de rendimiento de OpenMP propuesta, hemos desarrollado bibliotecas de rendimiento compatibles para el analizador automático de eventos EXPERT [17, 18] y el marco de análisis de rendimiento <br>TAU</br> [13]. Las transformaciones de instrumentación de directiva que definimos se implementan en una herramienta de traducción fuente a fuente llamada OPARI. Se presentan ejemplos de aplicación tanto para EXPERT como para TAU para mostrar la interfaz de rendimiento OpenMP y la herramienta de instrumentación OPARI en funcionamiento. Cuando se utiliza junto con la interfaz de perfilado MPI (como también lo demuestran los ejemplos), nuestro enfoque propuesto proporciona una solución portátil y robusta para el análisis de rendimiento de OpenMP y aplicaciones de modo mixto (OpenMP + MPI) ",
            "error": [
                ""
            ]
        },
        "source-to-source translation tool": {
            "translated_key": "source-to-source",
            "translated_annotated_text": "Diseño y prototipo de una interfaz de herramienta de rendimiento para OpenMP Este artículo propone una interfaz de herramientas de rendimiento para OpenMP, similar en espíritu a la interfaz de perfilado MPI en su intención de definir una API clara y portátil que hace que los eventos de ejecución de OpenMP sean visibles a las herramientas de rendimiento en tiempo de ejecución. Presentamos nuestro diseño utilizando un enfoque de instrumentación a nivel de fuente basado en la reescritura de directiva OpenMP. Las normas para la instrumentación de cada directiva y su combinación se aplican para generar llamadas a la interfaz coherentes con la semántica de la directiva y para transmitir información contextual (por ejemplo, ubicaciones de código fuente) de forma portátil y eficiente. Nuestra API de rendimiento de OpenMP propuesta permite además marcar las funciones del usuario y las regiones de código arbitrario y controlar la medición del rendimiento utilizando nuevas directivas OpenMP. Para prototipo de la interfaz de rendimiento de OpenMP propuesta, hemos desarrollado bibliotecas de rendimiento compatibles para el analizador automático de eventos EXPERT [17, 18] y el marco de análisis de rendimiento TAU [13]. Las transformaciones de instrumentación de directiva que definimos se implementan en una herramienta de traducción <br>source-to-source</br> llamada OPARI. Se presentan ejemplos de aplicación tanto para EXPERT como para TAU para mostrar la interfaz de rendimiento OpenMP y la herramienta de instrumentación OPARI en funcionamiento. Cuando se utiliza junto con la interfaz de perfilado MPI (como también lo demuestran los ejemplos), nuestro enfoque propuesto proporciona una solución portátil y robusta para el análisis de rendimiento de OpenMP y aplicaciones de modo mixto (OpenMP + MPI) ",
            "error": [
                ""
            ]
        },
        "OPARI": {
            "translated_key": "OPARI",
            "translated_annotated_text": "Diseño y prototipo de una interfaz de herramienta de rendimiento para OpenMP Este artículo propone una interfaz de herramientas de rendimiento para OpenMP, similar en espíritu a la interfaz de perfilado MPI en su intención de definir una API clara y portátil que hace que los eventos de ejecución de OpenMP sean visibles a las herramientas de rendimiento en tiempo de ejecución. Presentamos nuestro diseño utilizando un enfoque de instrumentación a nivel de fuente basado en la reescritura de directiva OpenMP. Las normas para la instrumentación de cada directiva y su combinación se aplican para generar llamadas a la interfaz coherentes con la semántica de la directiva y para transmitir información contextual (por ejemplo, ubicaciones de código fuente) de forma portátil y eficiente. Nuestra API de rendimiento de OpenMP propuesta permite además marcar las funciones del usuario y las regiones de código arbitrario y controlar la medición del rendimiento utilizando nuevas directivas OpenMP. Para prototipo de la interfaz de rendimiento de OpenMP propuesta, hemos desarrollado bibliotecas de rendimiento compatibles para el analizador automático de eventos EXPERT [17, 18] y el marco de análisis de rendimiento TAU [13]. Las transformaciones de instrumentación de directiva que definimos se implementan en una herramienta de traducción fuente a fuente llamada <br>OPARI</br>. Se presentan ejemplos de aplicación tanto para EXPERT como para TAU para mostrar la interfaz de rendimiento OpenMP y la herramienta de instrumentación <br>OPARI</br> en funcionamiento. Cuando se utiliza junto con la interfaz de perfilado MPI (como también lo demuestran los ejemplos), nuestro enfoque propuesto proporciona una solución portátil y robusta para el análisis de rendimiento de OpenMP y aplicaciones de modo mixto (OpenMP + MPI) ",
            "error": [
                ""
            ]
        },
        "parallel programming": {
            "translated_key": [],
            "translated_annotated_text": "Diseño y prototipo de una interfaz de herramienta de rendimiento para OpenMP Este artículo propone una interfaz de herramientas de rendimiento para OpenMP, similar en espíritu a la interfaz de perfilado MPI en su intención de definir una API clara y portátil que hace que los eventos de ejecución de OpenMP sean visibles a las herramientas de rendimiento en tiempo de ejecución. Presentamos nuestro diseño utilizando un enfoque de instrumentación a nivel de fuente basado en la reescritura de directiva OpenMP. Las normas para la instrumentación de cada directiva y su combinación se aplican para generar llamadas a la interfaz coherentes con la semántica de la directiva y para transmitir información contextual (por ejemplo, ubicaciones de código fuente) de forma portátil y eficiente. Nuestra API de rendimiento de OpenMP propuesta permite además marcar las funciones del usuario y las regiones de código arbitrario y controlar la medición del rendimiento utilizando nuevas directivas OpenMP. Para prototipo de la interfaz de rendimiento de OpenMP propuesta, hemos desarrollado bibliotecas de rendimiento compatibles para el analizador automático de eventos EXPERT [17, 18] y el marco de análisis de rendimiento TAU [13]. Las transformaciones de instrumentación de directiva que definimos se implementan en una herramienta de traducción fuente a fuente llamada OPARI. Se presentan ejemplos de aplicación tanto para EXPERT como para TAU para mostrar la interfaz de rendimiento OpenMP y la herramienta de instrumentación OPARI en funcionamiento. Cuando se utiliza junto con la interfaz de perfilado MPI (como también lo demuestran los ejemplos), nuestro enfoque propuesto proporciona una solución portátil y robusta para el análisis de rendimiento de OpenMP y aplicaciones de modo mixto (OpenMP + MPI) ",
            "error": []
        },
        "application program interfaces": {
            "translated_key": [],
            "translated_annotated_text": "Diseño y prototipo de una interfaz de herramienta de rendimiento para OpenMP Este artículo propone una interfaz de herramientas de rendimiento para OpenMP, similar en espíritu a la interfaz de perfilado MPI en su intención de definir una API clara y portátil que hace que los eventos de ejecución de OpenMP sean visibles a las herramientas de rendimiento en tiempo de ejecución. Presentamos nuestro diseño utilizando un enfoque de instrumentación a nivel de fuente basado en la reescritura de directiva OpenMP. Las normas para la instrumentación de cada directiva y su combinación se aplican para generar llamadas a la interfaz coherentes con la semántica de la directiva y para transmitir información contextual (por ejemplo, ubicaciones de código fuente) de forma portátil y eficiente. Nuestra API de rendimiento de OpenMP propuesta permite además marcar las funciones del usuario y las regiones de código arbitrario y controlar la medición del rendimiento utilizando nuevas directivas OpenMP. Para prototipo de la interfaz de rendimiento de OpenMP propuesta, hemos desarrollado bibliotecas de rendimiento compatibles para el analizador automático de eventos EXPERT [17, 18] y el marco de análisis de rendimiento TAU [13]. Las transformaciones de instrumentación de directiva que definimos se implementan en una herramienta de traducción fuente a fuente llamada OPARI. Se presentan ejemplos de aplicación tanto para EXPERT como para TAU para mostrar la interfaz de rendimiento OpenMP y la herramienta de instrumentación OPARI en funcionamiento. Cuando se utiliza junto con la interfaz de perfilado MPI (como también lo demuestran los ejemplos), nuestro enfoque propuesto proporciona una solución portátil y robusta para el análisis de rendimiento de OpenMP y aplicaciones de modo mixto (OpenMP + MPI) ",
            "error": []
        },
        "message passing": {
            "translated_key": [],
            "translated_annotated_text": "Diseño y prototipo de una interfaz de herramienta de rendimiento para OpenMP Este artículo propone una interfaz de herramientas de rendimiento para OpenMP, similar en espíritu a la interfaz de perfilado MPI en su intención de definir una API clara y portátil que hace que los eventos de ejecución de OpenMP sean visibles a las herramientas de rendimiento en tiempo de ejecución. Presentamos nuestro diseño utilizando un enfoque de instrumentación a nivel de fuente basado en la reescritura de directiva OpenMP. Las normas para la instrumentación de cada directiva y su combinación se aplican para generar llamadas a la interfaz coherentes con la semántica de la directiva y para transmitir información contextual (por ejemplo, ubicaciones de código fuente) de forma portátil y eficiente. Nuestra API de rendimiento de OpenMP propuesta permite además marcar las funciones del usuario y las regiones de código arbitrario y controlar la medición del rendimiento utilizando nuevas directivas OpenMP. Para prototipo de la interfaz de rendimiento de OpenMP propuesta, hemos desarrollado bibliotecas de rendimiento compatibles para el analizador automático de eventos EXPERT [17, 18] y el marco de análisis de rendimiento TAU [13]. Las transformaciones de instrumentación de directiva que definimos se implementan en una herramienta de traducción fuente a fuente llamada OPARI. Se presentan ejemplos de aplicación tanto para EXPERT como para TAU para mostrar la interfaz de rendimiento OpenMP y la herramienta de instrumentación OPARI en funcionamiento. Cuando se utiliza junto con la interfaz de perfilado MPI (como también lo demuestran los ejemplos), nuestro enfoque propuesto proporciona una solución portátil y robusta para el análisis de rendimiento de OpenMP y aplicaciones de modo mixto (OpenMP + MPI) ",
            "error": []
        },
        "program compilers": {
            "translated_key": [],
            "translated_annotated_text": "Diseño y prototipo de una interfaz de herramienta de rendimiento para OpenMP Este artículo propone una interfaz de herramientas de rendimiento para OpenMP, similar en espíritu a la interfaz de perfilado MPI en su intención de definir una API clara y portátil que hace que los eventos de ejecución de OpenMP sean visibles a las herramientas de rendimiento en tiempo de ejecución. Presentamos nuestro diseño utilizando un enfoque de instrumentación a nivel de fuente basado en la reescritura de directiva OpenMP. Las normas para la instrumentación de cada directiva y su combinación se aplican para generar llamadas a la interfaz coherentes con la semántica de la directiva y para transmitir información contextual (por ejemplo, ubicaciones de código fuente) de forma portátil y eficiente. Nuestra API de rendimiento de OpenMP propuesta permite además marcar las funciones del usuario y las regiones de código arbitrario y controlar la medición del rendimiento utilizando nuevas directivas OpenMP. Para prototipo de la interfaz de rendimiento de OpenMP propuesta, hemos desarrollado bibliotecas de rendimiento compatibles para el analizador automático de eventos EXPERT [17, 18] y el marco de análisis de rendimiento TAU [13]. Las transformaciones de instrumentación de directiva que definimos se implementan en una herramienta de traducción fuente a fuente llamada OPARI. Se presentan ejemplos de aplicación tanto para EXPERT como para TAU para mostrar la interfaz de rendimiento OpenMP y la herramienta de instrumentación OPARI en funcionamiento. Cuando se utiliza junto con la interfaz de perfilado MPI (como también lo demuestran los ejemplos), nuestro enfoque propuesto proporciona una solución portátil y robusta para el análisis de rendimiento de OpenMP y aplicaciones de modo mixto (OpenMP + MPI) ",
            "error": []
        },
        "software performance evaluation": {
            "translated_key": [],
            "translated_annotated_text": "Diseño y prototipo de una interfaz de herramienta de rendimiento para OpenMP Este artículo propone una interfaz de herramientas de rendimiento para OpenMP, similar en espíritu a la interfaz de perfilado MPI en su intención de definir una API clara y portátil que hace que los eventos de ejecución de OpenMP sean visibles a las herramientas de rendimiento en tiempo de ejecución. Presentamos nuestro diseño utilizando un enfoque de instrumentación a nivel de fuente basado en la reescritura de directiva OpenMP. Las normas para la instrumentación de cada directiva y su combinación se aplican para generar llamadas a la interfaz coherentes con la semántica de la directiva y para transmitir información contextual (por ejemplo, ubicaciones de código fuente) de forma portátil y eficiente. Nuestra API de rendimiento de OpenMP propuesta permite además marcar las funciones del usuario y las regiones de código arbitrario y controlar la medición del rendimiento utilizando nuevas directivas OpenMP. Para prototipo de la interfaz de rendimiento de OpenMP propuesta, hemos desarrollado bibliotecas de rendimiento compatibles para el analizador automático de eventos EXPERT [17, 18] y el marco de análisis de rendimiento TAU [13]. Las transformaciones de instrumentación de directiva que definimos se implementan en una herramienta de traducción fuente a fuente llamada OPARI. Se presentan ejemplos de aplicación tanto para EXPERT como para TAU para mostrar la interfaz de rendimiento OpenMP y la herramienta de instrumentación OPARI en funcionamiento. Cuando se utiliza junto con la interfaz de perfilado MPI (como también lo demuestran los ejemplos), nuestro enfoque propuesto proporciona una solución portátil y robusta para el análisis de rendimiento de OpenMP y aplicaciones de modo mixto (OpenMP + MPI) ",
            "error": []
        }
    }
}