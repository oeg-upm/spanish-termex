{
    "original_text": "Generating code at run time with Reflection.Emit The .NET framework SDK includes several tools that convert source code into executable code-the C# and VB.NET compilers get most of the attention, but there are others. The Regex class (in the System.Text.RegularExpressions namespace) has the ability to compile favorite regular expressions into a .NET assembly. In fact, the NET Common Language Runtime (CLR) contains a whole namespace full of classes to help us build assemblies, define types, and emit their implementations, all at run time. These classes, which comprise the System.Reflection.Emit namespace, are known collectively as Reflection. Emit",
    "original_translation": "Generar código en tiempo de ejecución con Reflection.Emit El SDK marco.NET incluye varias herramientas que convierten el código fuente en código ejecutable, los compiladores C# y VB.NET reciben la mayor parte de la atención, pero hay otros. La clase Regex (en el espacio de nombres System.Text.RegularExpresiones) tiene la capacidad de compilar expresiones regulares favoritas en un conjunto.NET. De hecho, el NET Common Language Runtime (CLR) contiene todo un espacio de nombres lleno de clases para ayudarnos a construir conjuntos, definir tipos y emitir sus implementaciones, todo en tiempo de ejecución. Estas clases, que comprenden el Sistema.Reflexión.Emite el espacio de nombres, se conocen colectivamente como Reflexión. Emit",
    "error_count": 6,
    "keys": {
        ".NET framework SDK": {
            "translated_key": [],
            "translated_annotated_text": "Generar código en tiempo de ejecución con Reflection.Emit El SDK marco.NET incluye varias herramientas que convierten el código fuente en código ejecutable, los compiladores C# y VB.NET reciben la mayor parte de la atención, pero hay otros. La clase Regex (en el espacio de nombres System.Text.RegularExpresiones) tiene la capacidad de compilar expresiones regulares favoritas en un conjunto.NET. De hecho, el NET Common Language Runtime (CLR) contiene todo un espacio de nombres lleno de clases para ayudarnos a construir conjuntos, definir tipos y emitir sus implementaciones, todo en tiempo de ejecución. Estas clases, que comprenden el Sistema.Reflexión.Emite el espacio de nombres, se conocen colectivamente como Reflexión. Emit ",
            "error": []
        },
        "runtime code generation": {
            "translated_key": [],
            "translated_annotated_text": "Generar código en tiempo de ejecución con Reflection.Emit El SDK marco.NET incluye varias herramientas que convierten el código fuente en código ejecutable, los compiladores C# y VB.NET reciben la mayor parte de la atención, pero hay otros. La clase Regex (en el espacio de nombres System.Text.RegularExpresiones) tiene la capacidad de compilar expresiones regulares favoritas en un conjunto.NET. De hecho, el NET Common Language Runtime (CLR) contiene todo un espacio de nombres lleno de clases para ayudarnos a construir conjuntos, definir tipos y emitir sus implementaciones, todo en tiempo de ejecución. Estas clases, que comprenden el Sistema.Reflexión.Emite el espacio de nombres, se conocen colectivamente como Reflexión. Emit ",
            "error": []
        },
        "Regex class": {
            "translated_key": "clase Regex",
            "translated_annotated_text": "Generar código en tiempo de ejecución con Reflection.Emit El SDK marco.NET incluye varias herramientas que convierten el código fuente en código ejecutable, los compiladores C# y VB.NET reciben la mayor parte de la atención, pero hay otros. La \"clase Regex\" (en el espacio de nombres System.Text.RegularExpresiones) tiene la capacidad de compilar expresiones regulares favoritas en un conjunto.NET. De hecho, el NET Common Language Runtime (CLR) contiene todo un espacio de nombres lleno de clases para ayudarnos a construir conjuntos, definir tipos y emitir sus implementaciones, todo en tiempo de ejecución. Estas clases, que comprenden el Sistema.Reflexión.Emite el espacio de nombres, se conocen colectivamente como Reflexión. Emit ",
            "error": [
                ""
            ]
        },
        ".NET Common Language Runtime": {
            "translated_key": [],
            "translated_annotated_text": "Generar código en tiempo de ejecución con Reflection.Emit El SDK marco.NET incluye varias herramientas que convierten el código fuente en código ejecutable, los compiladores C# y VB.NET reciben la mayor parte de la atención, pero hay otros. La clase Regex (en el espacio de nombres System.Text.RegularExpresiones) tiene la capacidad de compilar expresiones regulares favoritas en un conjunto.NET. De hecho, el NET Common Language Runtime (CLR) contiene todo un espacio de nombres lleno de clases para ayudarnos a construir conjuntos, definir tipos y emitir sus implementaciones, todo en tiempo de ejecución. Estas clases, que comprenden el Sistema.Reflexión.Emite el espacio de nombres, se conocen colectivamente como Reflexión. Emit ",
            "error": []
        },
        "assemblies": {
            "translated_key": "conjuntos",
            "translated_annotated_text": "Generar código en tiempo de ejecución con Reflection.Emit El SDK marco.NET incluye varias herramientas que convierten el código fuente en código ejecutable, los compiladores C# y VB.NET reciben la mayor parte de la atención, pero hay otros. La clase Regex (en el espacio de nombres System.Text.RegularExpresiones) tiene la capacidad de compilar expresiones regulares favoritas en un conjunto.NET. De hecho, el NET Common Language Runtime (CLR) contiene todo un espacio de nombres lleno de clases para ayudarnos a construir \"conjuntos\", definir tipos y emitir sus implementaciones, todo en tiempo de ejecución. Estas clases, que comprenden el Sistema.Reflexión.Emite el espacio de nombres, se conocen colectivamente como Reflexión. Emit ",
            "error": [
                ""
            ]
        },
        "types": {
            "translated_key": "tipos",
            "translated_annotated_text": "Generar código en tiempo de ejecución con Reflection.Emit El SDK marco.NET incluye varias herramientas que convierten el código fuente en código ejecutable, los compiladores C# y VB.NET reciben la mayor parte de la atención, pero hay otros. La clase Regex (en el espacio de nombres System.Text.RegularExpresiones) tiene la capacidad de compilar expresiones regulares favoritas en un conjunto.NET. De hecho, el NET Common Language Runtime (CLR) contiene todo un espacio de nombres lleno de clases para ayudarnos a construir conjuntos, definir \"tipos\" y emitir sus implementaciones, todo en tiempo de ejecución. Estas clases, que comprenden el Sistema.Reflexión.Emite el espacio de nombres, se conocen colectivamente como Reflexión. Emit ",
            "error": [
                ""
            ]
        },
        "System.Reflection.Emit namespace": {
            "translated_key": "System.Reflection.Emit namespace",
            "translated_annotated_text": "Generar código en tiempo de ejecución con Reflection.Emit El SDK marco.NET incluye varias herramientas que convierten el código fuente en código ejecutable, los compiladores C# y VB.NET reciben la mayor parte de la atención, pero hay otros. La clase Regex (en el espacio de nombres System.Text.RegularExpresiones) tiene la capacidad de compilar expresiones regulares favoritas en un conjunto.NET. De hecho, el NET Common Language Runtime (CLR) contiene todo un espacio de nombres lleno de clases para ayudarnos a construir conjuntos, definir tipos y emitir sus implementaciones, todo en tiempo de ejecución. Estas clases, que comprenden el \"System.Reflection.Emit namespace\", se conocen colectivamente como Reflection. Emit ",
            "error": [
                ""
            ]
        },
        "Reflection.Emit": {
            "translated_key": [
                "Reflection.Emit",
                "Reflexión.Emit"
            ],
            "translated_annotated_text": "Generar código en tiempo de ejecución con \"Reflection.Emit\" El SDK marco.NET incluye varias herramientas que convierten el código fuente en código ejecutable, los compiladores C# y VB.NET reciben la mayor parte de la atención, pero hay otros. La clase Regex (en el espacio de nombres System.Text.RegularExpresiones) tiene la capacidad de compilar expresiones regulares favoritas en un conjunto.NET. De hecho, el NET Common Language Runtime (CLR) contiene todo un espacio de nombres lleno de clases para ayudarnos a construir conjuntos, definir tipos y emitir sus implementaciones, todo en tiempo de ejecución. Estas clases, que componen el Sistema \"Reflexión.Emit\" espacio de nombres, se conocen colectivamente como Reflexión. Emit ",
            "error": [
                "Reflection.Emit",
                "Reflexión.Emit"
            ]
        },
        "network operating systems": {
            "translated_key": [],
            "translated_annotated_text": "Generar código en tiempo de ejecución con Reflection.Emit El SDK marco.NET incluye varias herramientas que convierten el código fuente en código ejecutable, los compiladores C# y VB.NET reciben la mayor parte de la atención, pero hay otros. La clase Regex (en el espacio de nombres System.Text.RegularExpresiones) tiene la capacidad de compilar expresiones regulares favoritas en un conjunto.NET. De hecho, el NET Common Language Runtime (CLR) contiene todo un espacio de nombres lleno de clases para ayudarnos a construir conjuntos, definir tipos y emitir sus implementaciones, todo en tiempo de ejecución. Estas clases, que comprenden el Sistema.Reflexión.Emite el espacio de nombres, se conocen colectivamente como Reflexión. Emit ",
            "error": []
        },
        "program compilers": {
            "translated_key": [],
            "translated_annotated_text": "Generar código en tiempo de ejecución con Reflection.Emit El SDK marco.NET incluye varias herramientas que convierten el código fuente en código ejecutable, los compiladores C# y VB.NET reciben la mayor parte de la atención, pero hay otros. La clase Regex (en el espacio de nombres System.Text.RegularExpresiones) tiene la capacidad de compilar expresiones regulares favoritas en un conjunto.NET. De hecho, el NET Common Language Runtime (CLR) contiene todo un espacio de nombres lleno de clases para ayudarnos a construir conjuntos, definir tipos y emitir sus implementaciones, todo en tiempo de ejecución. Estas clases, que comprenden el Sistema.Reflexión.Emite el espacio de nombres, se conocen colectivamente como Reflexión. Emit ",
            "error": []
        }
    }
}