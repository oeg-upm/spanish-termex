{
    "original_text": "Succession in standardization: grafting XML onto SGML Succession in standardization is often a problem. The advantages of improvements must be weighed against those of compatibility. If compatibility considerations dominate, a grafting process takes place. According to our taxonomy of succession, there are three types of outcomes. A Type I succession, where grafting is successful, entails compatibility between successors, technical paradigm compliance and continuity in the standards trajectory. In this paper, we examine issues of succession and focus on the Extensible Markup Language (XML). It was to be grafted on the Standard Generalized Markup Language (SGML), a stable standard since 1988. However, XML was a profile, a subset and an extension of SGML (1988). Adaptation of SGML was needed (SGML 1999) to forge full (downward) compatibility with XML (1998). We describe the grafting efforts and analyze their outcomes. Our conclusion is that although SGML was a technical exemplar for XML developers, full compatibility was not achieved. The widespread use of HyperText Mark-up Language (HTML) exemplified the desirability of simplicity in XML, standardization. This and HTMLs user market largely explain the discontinuity in SGML-XML succession",
    "original_translation": "Sucesión en la estandarización: injerto de XML en SGML La sucesión en la estandarización es a menudo un problema. Las ventajas de las mejoras deben sopesarse con las de la compatibilidad. Si dominan las consideraciones de compatibilidad, se lleva a cabo un proceso de injerto. Según nuestra taxonomía de la sucesión, hay tres tipos de resultados. Una sucesión de tipo I, donde el injerto es exitoso, implica compatibilidad entre sucesores, cumplimiento del paradigma técnico y continuidad en la trayectoria de estándares. En este artículo, examinamos los temas de sucesión y nos centramos en el Lenguaje de Marcado Extensible (XML). Iba a ser injertado en el lenguaje estándar de marcado generalizado (SGML), un estándar estable desde 1988. Sin embargo, XML era un perfil, un subconjunto y una extensión de SGML (1988). Era necesaria la adaptación del SGML (SGML 1999) para forjar la compatibilidad total (hacia abajo) con XML (1998). Describimos los esfuerzos de injerto y analizamos sus resultados. Nuestra conclusión es que aunque SGML era un ejemplo técnico para desarrolladores XML, no se logró la compatibilidad completa. El uso generalizado de HyperText Mark-up Language (HTML) ejemplifica la conveniencia de la simplicidad en XML, normalización. Este y el mercado de usuarios HTML explican en gran medida la discontinuidad en la sucesión SGML-XML",
    "error_count": 3,
    "keys": {
        "XML": {
            "translated_key": "XML",
            "translated_annotated_text": "Sucesión en estandarización: injerto de \"XML\" en SGML Sucesión en estandarización es a menudo un problema. Las ventajas de las mejoras deben sopesarse con las de la compatibilidad. Si dominan las consideraciones de compatibilidad, se lleva a cabo un proceso de injerto. Según nuestra taxonomía de la sucesión, hay tres tipos de resultados. Una sucesión de tipo I, donde el injerto es exitoso, implica compatibilidad entre sucesores, cumplimiento del paradigma técnico y continuidad en la trayectoria de estándares. En este artículo, examinamos los temas de sucesión y nos centramos en el Lenguaje de Marcado Extensible (\"XML\"). Iba a ser injertado en el lenguaje estándar de marcado generalizado (SGML), un estándar estable desde 1988. Sin embargo, \"XML\" era un perfil, un subconjunto y una extensión de SGML (1988). Era necesaria la adaptación del SGML (SGML 1999) para forjar la compatibilidad total (hacia abajo) con el \"XML\" (1998). Describimos los esfuerzos de injerto y analizamos sus resultados. Nuestra conclusión es que aunque SGML fue un ejemplo técnico para desarrolladores de \"XML\", no se logró la compatibilidad total. El uso generalizado de HyperText Mark-up Language (HTML) ejemplifica la conveniencia de la simplicidad en \"XML\", estandarización. Este y el mercado de usuarios HTML explican en gran medida la discontinuidad en la sucesión SGML-\"XML\" ",
            "error": [
                ""
            ]
        },
        "SGML": {
            "translated_key": "SGML",
            "translated_annotated_text": "Sucesión en la estandarización: injerto de XML en \"SGML\" Sucesión en la estandarización es a menudo un problema. Las ventajas de las mejoras deben sopesarse con las de la compatibilidad. Si dominan las consideraciones de compatibilidad, se lleva a cabo un proceso de injerto. Según nuestra taxonomía de la sucesión, hay tres tipos de resultados. Una sucesión de tipo I, donde el injerto es exitoso, implica compatibilidad entre sucesores, cumplimiento del paradigma técnico y continuidad en la trayectoria de estándares. En este artículo, examinamos los temas de sucesión y nos centramos en el Lenguaje de Marcado Extensible (XML). Iba a ser injertado en el lenguaje estándar de marcado generalizado (\"SGML\"), un estándar estable desde 1988. Sin embargo, XML era un perfil, un subconjunto y una extensión de \"SGML\" (1988). Se necesitaba la adaptación de \"SGML\" (\"SGML\" 1999) para forjar la compatibilidad completa (hacia abajo) con XML (1998). Describimos los esfuerzos de injerto y analizamos sus resultados. Nuestra conclusión es que aunque \"SGML\" era un ejemplo técnico para desarrolladores XML, no se logró la compatibilidad completa. El uso generalizado de HyperText Mark-up Language (HTML) ejemplifica la conveniencia de la simplicidad en XML, normalización. Este y el mercado de usuarios HTML explican en gran medida la discontinuidad en la sucesión \"SGML\"-XML ",
            "error": [
                ""
            ]
        },
        "standardization": {
            "translated_key": "estandarización",
            "translated_annotated_text": "Sucesión en \"estandarización\": injerto XML en SGML La sucesión en \"estandarización\" es a menudo un problema. Las ventajas de las mejoras deben sopesarse con las de la compatibilidad. Si dominan las consideraciones de compatibilidad, se lleva a cabo un proceso de injerto. Según nuestra taxonomía de la sucesión, hay tres tipos de resultados. Una sucesión de tipo I, donde el injerto es exitoso, implica compatibilidad entre sucesores, cumplimiento del paradigma técnico y continuidad en la trayectoria de estándares. En este artículo, examinamos los temas de sucesión y nos centramos en el Lenguaje de Marcado Extensible (XML). Iba a ser injertado en el lenguaje estándar de marcado generalizado (SGML), un estándar estable desde 1988. Sin embargo, XML era un perfil, un subconjunto y una extensión de SGML (1988). Era necesaria la adaptación del SGML (SGML 1999) para forjar la compatibilidad total (hacia abajo) con XML (1998). Describimos los esfuerzos de injerto y analizamos sus resultados. Nuestra conclusión es que aunque SGML era un ejemplo técnico para desarrolladores XML, no se logró la compatibilidad completa. El uso generalizado de HyperText Mark-up Language (HTML) ejemplifica la conveniencia de la simplicidad en XML, \"estandarización\". Este y el mercado de usuarios HTML explican en gran medida la discontinuidad en la sucesión SGML-XML ",
            "error": [
                ""
            ]
        },
        "grafting process": {
            "translated_key": "proceso de injerto",
            "translated_annotated_text": "Sucesión en la estandarización: injerto de XML en SGML La sucesión en la estandarización es a menudo un problema. Las ventajas de las mejoras deben sopesarse con las de la compatibilidad. Si dominan las consideraciones de compatibilidad, tiene lugar un \"proceso de injerto\". Según nuestra taxonomía de la sucesión, hay tres tipos de resultados. Una sucesión de tipo I, donde el injerto es exitoso, implica compatibilidad entre sucesores, cumplimiento del paradigma técnico y continuidad en la trayectoria de estándares. En este artículo, examinamos los temas de sucesión y nos centramos en el Lenguaje de Marcado Extensible (XML). Iba a ser injertado en el lenguaje estándar de marcado generalizado (SGML), un estándar estable desde 1988. Sin embargo, XML era un perfil, un subconjunto y una extensión de SGML (1988). Era necesaria la adaptación del SGML (SGML 1999) para forjar la compatibilidad total (hacia abajo) con XML (1998). Describimos los esfuerzos de injerto y analizamos sus resultados. Nuestra conclusión es que aunque SGML era un ejemplo técnico para desarrolladores XML, no se logró la compatibilidad completa. El uso generalizado de HyperText Mark-up Language (HTML) ejemplifica la conveniencia de la simplicidad en XML, normalización. Este y el mercado de usuarios HTML explican en gran medida la discontinuidad en la sucesión SGML-XML ",
            "error": [
                ""
            ]
        },
        "Type I succession": {
            "translated_key": "sucesión Tipo I",
            "translated_annotated_text": "Sucesión en la estandarización: injerto de XML en SGML La sucesión en la estandarización es a menudo un problema. Las ventajas de las mejoras deben sopesarse con las de la compatibilidad. Si dominan las consideraciones de compatibilidad, se lleva a cabo un proceso de injerto. Según nuestra taxonomía de la sucesión, hay tres tipos de resultados. Una \"sucesión Tipo I\", donde el injerto es exitoso, implica compatibilidad entre sucesores, cumplimiento de paradigmas técnicos y continuidad en la trayectoria de estándares. En este artículo, examinamos los temas de sucesión y nos centramos en el Lenguaje de Marcado Extensible (XML). Iba a ser injertado en el lenguaje estándar de marcado generalizado (SGML), un estándar estable desde 1988. Sin embargo, XML era un perfil, un subconjunto y una extensión de SGML (1988). Era necesaria la adaptación del SGML (SGML 1999) para forjar la compatibilidad total (hacia abajo) con XML (1998). Describimos los esfuerzos de injerto y analizamos sus resultados. Nuestra conclusión es que aunque SGML era un ejemplo técnico para desarrolladores XML, no se logró la compatibilidad completa. El uso generalizado de HyperText Mark-up Language (HTML) ejemplifica la conveniencia de la simplicidad en XML, normalización. Este y el mercado de usuarios HTML explican en gran medida la discontinuidad en la sucesión SGML-XML ",
            "error": [
                ""
            ]
        },
        "Extensible Markup Language": {
            "translated_key": "Lenguaje Extensible de Marcado",
            "translated_annotated_text": "Sucesión en la estandarización: injerto de XML en SGML La sucesión en la estandarización es a menudo un problema. Las ventajas de las mejoras deben sopesarse con las de la compatibilidad. Si dominan las consideraciones de compatibilidad, se lleva a cabo un proceso de injerto. Según nuestra taxonomía de la sucesión, hay tres tipos de resultados. Una sucesión de tipo I, donde el injerto es exitoso, implica compatibilidad entre sucesores, cumplimiento del paradigma técnico y continuidad en la trayectoria de estándares. En este artículo, examinamos los temas de sucesión y nos centramos en el \"Lenguaje Extensible de Marcado\" (XML). Iba a ser injertado en el lenguaje estándar de marcado generalizado (SGML), un estándar estable desde 1988. Sin embargo, XML era un perfil, un subconjunto y una extensión de SGML (1988). Era necesaria la adaptación del SGML (SGML 1999) para forjar la compatibilidad total (hacia abajo) con XML (1998). Describimos los esfuerzos de injerto y analizamos sus resultados. Nuestra conclusión es que aunque SGML era un ejemplo técnico para desarrolladores XML, no se logró la compatibilidad completa. El uso generalizado de HyperText Mark-up Language (HTML) ejemplifica la conveniencia de la simplicidad en XML, normalización. Este y el mercado de usuarios HTML explican en gran medida la discontinuidad en la sucesión SGML-XML ",
            "error": [
                ""
            ]
        },
        "Standard Generalized Markup Language": {
            "translated_key": "Lenguaje de Markup Estándar Generalizado",
            "translated_annotated_text": "Sucesión en la estandarización: injerto de XML en SGML La sucesión en la estandarización es a menudo un problema. Las ventajas de las mejoras deben sopesarse con las de la compatibilidad. Si dominan las consideraciones de compatibilidad, se lleva a cabo un proceso de injerto. Según nuestra taxonomía de la sucesión, hay tres tipos de resultados. Una sucesión de tipo I, donde el injerto es exitoso, implica compatibilidad entre sucesores, cumplimiento del paradigma técnico y continuidad en la trayectoria de estándares. En este artículo, examinamos los temas de sucesión y nos centramos en el Lenguaje de Marcado Extensible (XML). Iba a ser injertado en el \"Lenguaje de Markup Estándar Generalizado\" (SGML), un estándar estable desde 1988. Sin embargo, XML era un perfil, un subconjunto y una extensión de SGML (1988). Era necesaria la adaptación del SGML (SGML 1999) para forjar la compatibilidad total (hacia abajo) con XML (1998). Describimos los esfuerzos de injerto y analizamos sus resultados. Nuestra conclusión es que aunque SGML era un ejemplo técnico para desarrolladores XML, no se logró la compatibilidad completa. El uso generalizado de HyperText Mark-up Language (HTML) ejemplifica la conveniencia de la simplicidad en XML, normalización. Este y el mercado de usuarios HTML explican en gran medida la discontinuidad en la sucesión SGML-XML ",
            "error": [
                ""
            ]
        },
        "hypermedia markup languages": {
            "translated_key": [],
            "translated_annotated_text": "Sucesión en la estandarización: injerto de XML en SGML La sucesión en la estandarización es a menudo un problema. Las ventajas de las mejoras deben sopesarse con las de la compatibilidad. Si dominan las consideraciones de compatibilidad, se lleva a cabo un proceso de injerto. Según nuestra taxonomía de la sucesión, hay tres tipos de resultados. Una sucesión de tipo I, donde el injerto es exitoso, implica compatibilidad entre sucesores, cumplimiento del paradigma técnico y continuidad en la trayectoria de estándares. En este artículo, examinamos los temas de sucesión y nos centramos en el Lenguaje de Marcado Extensible (XML). Iba a ser injertado en el lenguaje estándar de marcado generalizado (SGML), un estándar estable desde 1988. Sin embargo, XML era un perfil, un subconjunto y una extensión de SGML (1988). Era necesaria la adaptación del SGML (SGML 1999) para forjar la compatibilidad total (hacia abajo) con XML (1998). Describimos los esfuerzos de injerto y analizamos sus resultados. Nuestra conclusión es que aunque SGML era un ejemplo técnico para desarrolladores XML, no se logró la compatibilidad completa. El uso generalizado de HyperText Mark-up Language (HTML) ejemplifica la conveniencia de la simplicidad en XML, normalización. Este y el mercado de usuarios HTML explican en gran medida la discontinuidad en la sucesión SGML-XML ",
            "error": []
        },
        "page description languages": {
            "translated_key": [],
            "translated_annotated_text": "Sucesión en la estandarización: injerto de XML en SGML La sucesión en la estandarización es a menudo un problema. Las ventajas de las mejoras deben sopesarse con las de la compatibilidad. Si dominan las consideraciones de compatibilidad, se lleva a cabo un proceso de injerto. Según nuestra taxonomía de la sucesión, hay tres tipos de resultados. Una sucesión de tipo I, donde el injerto es exitoso, implica compatibilidad entre sucesores, cumplimiento del paradigma técnico y continuidad en la trayectoria de estándares. En este artículo, examinamos los temas de sucesión y nos centramos en el Lenguaje de Marcado Extensible (XML). Iba a ser injertado en el lenguaje estándar de marcado generalizado (SGML), un estándar estable desde 1988. Sin embargo, XML era un perfil, un subconjunto y una extensión de SGML (1988). Era necesaria la adaptación del SGML (SGML 1999) para forjar la compatibilidad total (hacia abajo) con XML (1998). Describimos los esfuerzos de injerto y analizamos sus resultados. Nuestra conclusión es que aunque SGML era un ejemplo técnico para desarrolladores XML, no se logró la compatibilidad completa. El uso generalizado de HyperText Mark-up Language (HTML) ejemplifica la conveniencia de la simplicidad en XML, normalización. Este y el mercado de usuarios HTML explican en gran medida la discontinuidad en la sucesión SGML-XML ",
            "error": []
        },
        "standardisation": {
            "translated_key": [],
            "translated_annotated_text": "Sucesión en la estandarización: injerto de XML en SGML La sucesión en la estandarización es a menudo un problema. Las ventajas de las mejoras deben sopesarse con las de la compatibilidad. Si dominan las consideraciones de compatibilidad, se lleva a cabo un proceso de injerto. Según nuestra taxonomía de la sucesión, hay tres tipos de resultados. Una sucesión de tipo I, donde el injerto es exitoso, implica compatibilidad entre sucesores, cumplimiento del paradigma técnico y continuidad en la trayectoria de estándares. En este artículo, examinamos los temas de sucesión y nos centramos en el Lenguaje de Marcado Extensible (XML). Iba a ser injertado en el lenguaje estándar de marcado generalizado (SGML), un estándar estable desde 1988. Sin embargo, XML era un perfil, un subconjunto y una extensión de SGML (1988). Era necesaria la adaptación del SGML (SGML 1999) para forjar la compatibilidad total (hacia abajo) con XML (1998). Describimos los esfuerzos de injerto y analizamos sus resultados. Nuestra conclusión es que aunque SGML era un ejemplo técnico para desarrolladores XML, no se logró la compatibilidad completa. El uso generalizado de HyperText Mark-up Language (HTML) ejemplifica la conveniencia de la simplicidad en XML, normalización. Este y el mercado de usuarios HTML explican en gran medida la discontinuidad en la sucesión SGML-XML ",
            "error": []
        }
    }
}