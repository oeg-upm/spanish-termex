{
    "original_text": "A new approach to the d-MC problem Many real-world systems are multi-state systems composed of multi-state components in which the reliability can be computed in terms of the lower bound points of level d, called d-Mincuts (d-MCs). Such systems (electric power, transportation, etc.) may be regarded as flow networks whose arcs have independent, discrete, limited and multi-valued random capacities. In this paper, all MCs are assumed to be known in advance, and the authors focused on how to verify each d-MC candidate before using d-MCs to calculate the network reliability. The proposed algorithm is more efficient than existing algorithms. The algorithm runs in O(p sigma mn) time, a significant improvement over the previous O(p sigma m/sup 2/) time bounds based on max-flow/min-cut, where p and or are the number of MCs and d-MC candidates, respectively. It is simple, intuitive and uses no complex data structures. An example is given to show how all d-MC candidates are found and verified by the proposed algorithm. Then the reliability of this example is computed",
    "original_translation": "Un nuevo enfoque para el problema d-MC Muchos sistemas del mundo real son sistemas multiestado compuestos de componentes multiestado en los que la fiabilidad se puede calcular en términos de los puntos de límite inferior del nivel d, llamados d-Mincuts (d-MCs). Tales sistemas (electricidad, transporte, etc.) podrán considerarse redes de flujo cuyos arcos tengan capacidades aleatorias independientes, discretas, limitadas y multivaloradas. En este artículo, se supone que todos los MCs son conocidos de antemano, y los autores se centraron en cómo verificar cada candidato d-MC antes de utilizar d-MCs para calcular la fiabilidad de la red. El algoritmo propuesto es más eficiente que los algoritmos existentes. El algoritmo se ejecuta en tiempo O(p sigma mn), una mejora significativa sobre los límites de tiempo O(p sigma m/sup 2/) basados en max-flow/min-cut, donde p y o son el número de candidatos MC y d-MC, respectivamente. Es simple, intuitivo y no utiliza estructuras de datos complejas. Se da un ejemplo para mostrar cómo todos los candidatos d-MC son encontrados y verificados por el algoritmo propuesto. Entonces se calcula la fiabilidad de este ejemplo",
    "error_count": 6,
    "keys": {
        "d-MC problem": {
            "translated_key": "d-MC",
            "translated_annotated_text": "Un nuevo enfoque del problema <br>d-MC</br> Muchos sistemas del mundo real son sistemas multiestado compuestos de componentes multiestado en los que la fiabilidad se puede calcular en términos de los puntos de límite inferior del nivel d, llamados d-Mincuts (d-MCs). Tales sistemas (electricidad, transporte, etc.) podrán considerarse redes de flujo cuyos arcos tengan capacidades aleatorias independientes, discretas, limitadas y multivaloradas. En este artículo, se supone que todos los MCs son conocidos de antemano, y los autores se centraron en cómo verificar cada candidato d-MC antes de utilizar d-MCs para calcular la fiabilidad de la red. El algoritmo propuesto es más eficiente que los algoritmos existentes. El algoritmo se ejecuta en tiempo O(p sigma mn), una mejora significativa sobre los límites de tiempo O(p sigma m/sup 2/) basados en max-flow/min-cut, donde p y o son el número de candidatos MC y d-MC, respectivamente. Es simple, intuitivo y no utiliza estructuras de datos complejas. Se da un ejemplo para mostrar cómo todos los candidatos d-MC son encontrados y verificados por el algoritmo propuesto. Entonces se calcula la fiabilidad de este ejemplo ",
            "error": [
                ""
            ]
        },
        "multi-state systems": {
            "translated_key": "sistemas multiestado",
            "translated_annotated_text": "Un nuevo enfoque para el problema d-MC Muchos sistemas del mundo real son <br>sistemas multiestado</br> compuestos de componentes multiestado en los que la fiabilidad se puede calcular en términos de los puntos de límite inferior del nivel d, llamados d-Mincuts (d-MCs). Tales sistemas (electricidad, transporte, etc.) podrán considerarse redes de flujo cuyos arcos tengan capacidades aleatorias independientes, discretas, limitadas y multivaloradas. En este artículo, se supone que todos los MCs son conocidos de antemano, y los autores se centraron en cómo verificar cada candidato d-MC antes de utilizar d-MCs para calcular la fiabilidad de la red. El algoritmo propuesto es más eficiente que los algoritmos existentes. El algoritmo se ejecuta en tiempo O(p sigma mn), una mejora significativa sobre los límites de tiempo O(p sigma m/sup 2/) basados en max-flow/min-cut, donde p y o son el número de candidatos MC y d-MC, respectivamente. Es simple, intuitivo y no utiliza estructuras de datos complejas. Se da un ejemplo para mostrar cómo todos los candidatos d-MC son encontrados y verificados por el algoritmo propuesto. Entonces se calcula la fiabilidad de este ejemplo ",
            "error": [
                ""
            ]
        },
        "multi-state components": {
            "translated_key": [],
            "translated_annotated_text": "Un nuevo enfoque del problema d-MC Muchos sistemas del mundo real son sistemas multiestado compuestos por componentes multiestado <br> en los que la fiabilidad puede calcularse en términos de los puntos de límite inferior del nivel d, llamados d-Mincuts (d-MCs). Tales sistemas (electricidad, transporte, etc.) podrán considerarse redes de flujo cuyos arcos tengan capacidades aleatorias independientes, discretas, limitadas y multivaloradas. En este artículo, se supone que todos los MCs son conocidos de antemano, y los autores se centraron en cómo verificar cada candidato d-MC antes de utilizar d-MCs para calcular la fiabilidad de la red. El algoritmo propuesto es más eficiente que los algoritmos existentes. El algoritmo se ejecuta en tiempo O(p sigma mn), una mejora significativa sobre los límites de tiempo O(p sigma m/sup 2/) basados en max-flow/min-cut, donde p y o son el número de candidatos MC y d-MC, respectivamente. Es simple, intuitivo y no utiliza estructuras de datos complejas. Se da un ejemplo para mostrar cómo todos los candidatos d-MC son encontrados y verificados por el algoritmo propuesto. Entonces se calcula la fiabilidad de este ejemplo ",
            "error": []
        },
        "reliability computation": {
            "translated_key": [],
            "translated_annotated_text": "Un nuevo enfoque para el problema d-MC Muchos sistemas del mundo real son sistemas multiestado compuestos de componentes multiestado en los que la fiabilidad se puede calcular en términos de los puntos de límite inferior del nivel d, llamados d-Mincuts (d-MCs). Tales sistemas (electricidad, transporte, etc.) podrán considerarse redes de flujo cuyos arcos tengan capacidades aleatorias independientes, discretas, limitadas y multivaloradas. En este artículo, se supone que todos los MCs son conocidos de antemano, y los autores se centraron en cómo verificar cada candidato d-MC antes de utilizar d-MCs para calcular la fiabilidad de la red. El algoritmo propuesto es más eficiente que los algoritmos existentes. El algoritmo se ejecuta en tiempo O(p sigma mn), una mejora significativa sobre los límites de tiempo O(p sigma m/sup 2/) basados en max-flow/min-cut, donde p y o son el número de candidatos MC y d-MC, respectivamente. Es simple, intuitivo y no utiliza estructuras de datos complejas. Se da un ejemplo para mostrar cómo todos los candidatos d-MC son encontrados y verificados por el algoritmo propuesto. Entonces se calcula la fiabilidad de este ejemplo ",
            "error": []
        },
        "d-Mincuts": {
            "translated_key": "d-Mincuts",
            "translated_annotated_text": "Un nuevo enfoque para el problema d-MC Muchos sistemas del mundo real son sistemas multiestado compuestos de componentes multiestado en los que la fiabilidad se puede calcular en términos de los puntos de límite inferior del nivel d, llamados <br>d-Mincuts</br> (d-MCs). Tales sistemas (electricidad, transporte, etc.) podrán considerarse redes de flujo cuyos arcos tengan capacidades aleatorias independientes, discretas, limitadas y multivaloradas. En este artículo, se supone que todos los MCs son conocidos de antemano, y los autores se centraron en cómo verificar cada candidato d-MC antes de utilizar d-MCs para calcular la fiabilidad de la red. El algoritmo propuesto es más eficiente que los algoritmos existentes. El algoritmo se ejecuta en tiempo O(p sigma mn), una mejora significativa sobre los límites de tiempo O(p sigma m/sup 2/) basados en max-flow/min-cut, donde p y o son el número de candidatos MC y d-MC, respectivamente. Es simple, intuitivo y no utiliza estructuras de datos complejas. Se da un ejemplo para mostrar cómo todos los candidatos d-MC son encontrados y verificados por el algoritmo propuesto. Entonces se calcula la fiabilidad de este ejemplo ",
            "error": [
                ""
            ]
        },
        "flow networks": {
            "translated_key": [],
            "translated_annotated_text": "Un nuevo enfoque para el problema d-MC Muchos sistemas del mundo real son sistemas multiestado compuestos de componentes multiestado en los que la fiabilidad se puede calcular en términos de los puntos de límite inferior del nivel d, llamados d-Mincuts (d-MCs). Tales sistemas (electricidad, transporte, etc.) pueden considerarse redes de flujo <br> cuyos arcos tienen capacidades aleatorias independientes, discretas, limitadas y multivaloradas. En este artículo, se supone que todos los MCs son conocidos de antemano, y los autores se centraron en cómo verificar cada candidato d-MC antes de utilizar d-MCs para calcular la fiabilidad de la red. El algoritmo propuesto es más eficiente que los algoritmos existentes. El algoritmo se ejecuta en tiempo O(p sigma mn), una mejora significativa sobre los límites de tiempo O(p sigma m/sup 2/) basados en max-flow/min-cut, donde p y o son el número de candidatos MC y d-MC, respectivamente. Es simple, intuitivo y no utiliza estructuras de datos complejas. Se da un ejemplo para mostrar cómo todos los candidatos d-MC son encontrados y verificados por el algoritmo propuesto. Entonces se calcula la fiabilidad de este ejemplo ",
            "error": []
        },
        "failure analysis algorithm": {
            "translated_key": [],
            "translated_annotated_text": "Un nuevo enfoque para el problema d-MC Muchos sistemas del mundo real son sistemas multiestado compuestos de componentes multiestado en los que la fiabilidad se puede calcular en términos de los puntos de límite inferior del nivel d, llamados d-Mincuts (d-MCs). Tales sistemas (electricidad, transporte, etc.) podrán considerarse redes de flujo cuyos arcos tengan capacidades aleatorias independientes, discretas, limitadas y multivaloradas. En este artículo, se supone que todos los MCs son conocidos de antemano, y los autores se centraron en cómo verificar cada candidato d-MC antes de utilizar d-MCs para calcular la fiabilidad de la red. El algoritmo propuesto es más eficiente que los algoritmos existentes. El algoritmo se ejecuta en tiempo O(p sigma mn), una mejora significativa sobre los límites de tiempo O(p sigma m/sup 2/) basados en max-flow/min-cut, donde p y o son el número de candidatos MC y d-MC, respectivamente. Es simple, intuitivo y no utiliza estructuras de datos complejas. Se da un ejemplo para mostrar cómo todos los candidatos d-MC son encontrados y verificados por el algoritmo propuesto. Entonces se calcula la fiabilidad de este ejemplo ",
            "error": []
        },
        "time bounds": {
            "translated_key": "time limits",
            "translated_annotated_text": "Un nuevo enfoque para el problema d-MC Muchos sistemas del mundo real son sistemas multiestado compuestos de componentes multiestado en los que la fiabilidad se puede calcular en términos de los puntos de límite inferior del nivel d, llamados d-Mincuts (d-MCs). Tales sistemas (electricidad, transporte, etc.) podrán considerarse redes de flujo cuyos arcos tengan capacidades aleatorias independientes, discretas, limitadas y multivaloradas. En este artículo, se supone que todos los MCs son conocidos de antemano, y los autores se centraron en cómo verificar cada candidato d-MC antes de utilizar d-MCs para calcular la fiabilidad de la red. El algoritmo propuesto es más eficiente que los algoritmos existentes. El algoritmo se ejecuta en tiempo de O(p sigma mn), una mejora significativa sobre el anterior O(p sigma m/sup 2/) <br>time limits</br> basado en max-flow/min-cut, donde p y o son el número de MCs y d-MC candidatos, respectivamente. Es simple, intuitivo y no utiliza estructuras de datos complejas. Se da un ejemplo para mostrar cómo todos los candidatos d-MC son encontrados y verificados por el algoritmo propuesto. Entonces se calcula la fiabilidad de este ejemplo ",
            "error": [
                ""
            ]
        },
        "max-flow/min-cut": {
            "translated_key": "max-flow/min-cut",
            "translated_annotated_text": "Un nuevo enfoque para el problema d-MC Muchos sistemas del mundo real son sistemas multiestado compuestos de componentes multiestado en los que la fiabilidad se puede calcular en términos de los puntos de límite inferior del nivel d, llamados d-Mincuts (d-MCs). Tales sistemas (electricidad, transporte, etc.) podrán considerarse redes de flujo cuyos arcos tengan capacidades aleatorias independientes, discretas, limitadas y multivaloradas. En este artículo, se supone que todos los MCs son conocidos de antemano, y los autores se centraron en cómo verificar cada candidato d-MC antes de utilizar d-MCs para calcular la fiabilidad de la red. El algoritmo propuesto es más eficiente que los algoritmos existentes. El algoritmo se ejecuta en tiempo de O(p sigma mn), una mejora significativa sobre los límites de tiempo de O(p sigma m/sup 2/) basados en <br>max-flow/min-cut</br>, donde p y o son el número de MCs y d-MC candidatos, respectivamente. Es simple, intuitivo y no utiliza estructuras de datos complejas. Se da un ejemplo para mostrar cómo todos los candidatos d-MC son encontrados y verificados por el algoritmo propuesto. Entonces se calcula la fiabilidad de este ejemplo ",
            "error": [
                ""
            ]
        },
        "failure analysis": {
            "translated_key": [],
            "translated_annotated_text": "Un nuevo enfoque para el problema d-MC Muchos sistemas del mundo real son sistemas multiestado compuestos de componentes multiestado en los que la fiabilidad se puede calcular en términos de los puntos de límite inferior del nivel d, llamados d-Mincuts (d-MCs). Tales sistemas (electricidad, transporte, etc.) podrán considerarse redes de flujo cuyos arcos tengan capacidades aleatorias independientes, discretas, limitadas y multivaloradas. En este artículo, se supone que todos los MCs son conocidos de antemano, y los autores se centraron en cómo verificar cada candidato d-MC antes de utilizar d-MCs para calcular la fiabilidad de la red. El algoritmo propuesto es más eficiente que los algoritmos existentes. El algoritmo se ejecuta en tiempo O(p sigma mn), una mejora significativa sobre los límites de tiempo O(p sigma m/sup 2/) basados en max-flow/min-cut, donde p y o son el número de candidatos MC y d-MC, respectivamente. Es simple, intuitivo y no utiliza estructuras de datos complejas. Se da un ejemplo para mostrar cómo todos los candidatos d-MC son encontrados y verificados por el algoritmo propuesto. Entonces se calcula la fiabilidad de este ejemplo ",
            "error": []
        },
        "reliability theory": {
            "translated_key": [],
            "translated_annotated_text": "Un nuevo enfoque para el problema d-MC Muchos sistemas del mundo real son sistemas multiestado compuestos de componentes multiestado en los que la fiabilidad se puede calcular en términos de los puntos de límite inferior del nivel d, llamados d-Mincuts (d-MCs). Tales sistemas (electricidad, transporte, etc.) podrán considerarse redes de flujo cuyos arcos tengan capacidades aleatorias independientes, discretas, limitadas y multivaloradas. En este artículo, se supone que todos los MCs son conocidos de antemano, y los autores se centraron en cómo verificar cada candidato d-MC antes de utilizar d-MCs para calcular la fiabilidad de la red. El algoritmo propuesto es más eficiente que los algoritmos existentes. El algoritmo se ejecuta en tiempo O(p sigma mn), una mejora significativa sobre los límites de tiempo O(p sigma m/sup 2/) basados en max-flow/min-cut, donde p y o son el número de candidatos MC y d-MC, respectivamente. Es simple, intuitivo y no utiliza estructuras de datos complejas. Se da un ejemplo para mostrar cómo todos los candidatos d-MC son encontrados y verificados por el algoritmo propuesto. Entonces se calcula la fiabilidad de este ejemplo ",
            "error": []
        }
    }
}