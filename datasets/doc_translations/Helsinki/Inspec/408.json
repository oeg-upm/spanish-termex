{
    "original_text": ".NET obfuscation and intellectual property The author considers obfuscation options for protecting .NET code. Many programs wont need obfuscation because the loss caused by reverse engineering will be nonexistent. Numerous obfuscators are already available for the .NET platform, ranging from a basic renaming obfuscator to a fully functional obfuscator that handles mixed IL/native code assemblies created in any managed language, including Microsofts C++ with Managed Extensions. An obfuscator simply makes your application harder to reverse engineer. It does not prevent reverse engineering. However, the cost of obfuscation is insignificant when compared to the cost of a typical software development project. If you feel like an obfuscator provides you any benefit at all, its probably worth the price",
    "original_translation": "Obfuscación.NET y propiedad intelectual El autor considera opciones de ofuscación para proteger el código.NET. Muchos programas no necesitarán ofuscación porque la pérdida causada por la ingeniería inversa será inexistente. Para la plataforma.NET ya están disponibles numerosos obfuscadores, que van desde un obfuscador de renombrado básico hasta un obfuscador totalmente funcional que maneja conjuntos mixtos de código IL/nativo creados en cualquier idioma administrado, incluyendo Microsofts C++ con extensiones administradas. Un obfuscador simplemente hace su aplicación más difícil de ingeniería inversa. No impide la ingeniería inversa. Sin embargo, el costo de la ofuscación es insignificante en comparación con el costo de un proyecto típico de desarrollo de software. Si usted se siente como un obfuscador le proporciona cualquier beneficio en absoluto, es probablemente vale la pena el precio",
    "error_count": 7,
    "keys": {
        ".NET obfuscation": {
            "translated_key": [],
            "translated_annotated_text": "Obfuscación.NET y propiedad intelectual El autor considera opciones de ofuscación para proteger el código.NET. Muchos programas no necesitarán ofuscación porque la pérdida causada por la ingeniería inversa será inexistente. Para la plataforma.NET ya están disponibles numerosos obfuscadores, que van desde un obfuscador de renombrado básico hasta un obfuscador totalmente funcional que maneja conjuntos mixtos de código IL/nativo creados en cualquier idioma administrado, incluyendo Microsofts C++ con extensiones administradas. Un obfuscador simplemente hace su aplicación más difícil de ingeniería inversa. No impide la ingeniería inversa. Sin embargo, el costo de la ofuscación es insignificante en comparación con el costo de un proyecto típico de desarrollo de software. Si usted se siente como un obfuscador le proporciona cualquier beneficio en absoluto, es probablemente vale la pena el precio ",
            "error": []
        },
        "intellectual property": {
            "translated_key": "propiedad intelectual",
            "translated_annotated_text": ".NET obfusation y <br>propiedad intelectual</br> El autor considera opciones de ofusation para proteger el código.NET. Muchos programas no necesitarán ofuscación porque la pérdida causada por la ingeniería inversa será inexistente. Para la plataforma.NET ya están disponibles numerosos obfuscadores, que van desde un obfuscador de renombrado básico hasta un obfuscador totalmente funcional que maneja conjuntos mixtos de código IL/nativo creados en cualquier idioma administrado, incluyendo Microsofts C++ con extensiones administradas. Un obfuscador simplemente hace su aplicación más difícil de ingeniería inversa. No impide la ingeniería inversa. Sin embargo, el costo de la ofuscación es insignificante en comparación con el costo de un proyecto típico de desarrollo de software. Si usted se siente como un obfuscador le proporciona cualquier beneficio en absoluto, es probablemente vale la pena el precio ",
            "error": [
                ""
            ]
        },
        "reverse engineering": {
            "translated_key": [
                "reverse engineering",
                "ingeniería inversa"
            ],
            "translated_annotated_text": "Obfuscación.NET y propiedad intelectual El autor considera opciones de ofuscación para proteger el código.NET. Muchos programas no necesitarán ofuscación porque la pérdida causada por <br>reverse engineering</br> será inexistente. Para la plataforma.NET ya están disponibles numerosos obfuscadores, que van desde un obfuscador de renombrado básico hasta un obfuscador totalmente funcional que maneja conjuntos mixtos de código IL/nativo creados en cualquier idioma administrado, incluyendo Microsofts C++ con extensiones administradas. Un obfuscador simplemente hace su aplicación más difícil de ingeniería inversa. No impide la <br>ingeniería inversa</br>.  Sin embargo, el costo de la ofuscación es insignificante en comparación con el costo de un proyecto típico de desarrollo de software. Si usted se siente como un obfuscador le proporciona cualquier beneficio en absoluto, es probablemente vale la pena el precio ",
            "error": [
                "reverse engineering",
                "ingeniería inversa"
            ]
        },
        "industrial property": {
            "translated_key": [],
            "translated_annotated_text": "Obfuscación.NET y propiedad intelectual El autor considera opciones de ofuscación para proteger el código.NET. Muchos programas no necesitarán ofuscación porque la pérdida causada por la ingeniería inversa será inexistente. Para la plataforma.NET ya están disponibles numerosos obfuscadores, que van desde un obfuscador de renombrado básico hasta un obfuscador totalmente funcional que maneja conjuntos mixtos de código IL/nativo creados en cualquier idioma administrado, incluyendo Microsofts C++ con extensiones administradas. Un obfuscador simplemente hace su aplicación más difícil de ingeniería inversa. No impide la ingeniería inversa. Sin embargo, el costo de la ofuscación es insignificante en comparación con el costo de un proyecto típico de desarrollo de software. Si usted se siente como un obfuscador le proporciona cualquier beneficio en absoluto, es probablemente vale la pena el precio ",
            "error": []
        },
        "meta data": {
            "translated_key": [],
            "translated_annotated_text": "Obfuscación.NET y propiedad intelectual El autor considera opciones de ofuscación para proteger el código.NET. Muchos programas no necesitarán ofuscación porque la pérdida causada por la ingeniería inversa será inexistente. Para la plataforma.NET ya están disponibles numerosos obfuscadores, que van desde un obfuscador de renombrado básico hasta un obfuscador totalmente funcional que maneja conjuntos mixtos de código IL/nativo creados en cualquier idioma administrado, incluyendo Microsofts C++ con extensiones administradas. Un obfuscador simplemente hace su aplicación más difícil de ingeniería inversa. No impide la ingeniería inversa. Sin embargo, el costo de la ofuscación es insignificante en comparación con el costo de un proyecto típico de desarrollo de software. Si usted se siente como un obfuscador le proporciona cualquier beneficio en absoluto, es probablemente vale la pena el precio ",
            "error": []
        },
        "network operating systems": {
            "translated_key": [],
            "translated_annotated_text": "Obfuscación.NET y propiedad intelectual El autor considera opciones de ofuscación para proteger el código.NET. Muchos programas no necesitarán ofuscación porque la pérdida causada por la ingeniería inversa será inexistente. Para la plataforma.NET ya están disponibles numerosos obfuscadores, que van desde un obfuscador de renombrado básico hasta un obfuscador totalmente funcional que maneja conjuntos mixtos de código IL/nativo creados en cualquier idioma administrado, incluyendo Microsofts C++ con extensiones administradas. Un obfuscador simplemente hace su aplicación más difícil de ingeniería inversa. No impide la ingeniería inversa. Sin embargo, el costo de la ofuscación es insignificante en comparación con el costo de un proyecto típico de desarrollo de software. Si usted se siente como un obfuscador le proporciona cualquier beneficio en absoluto, es probablemente vale la pena el precio ",
            "error": []
        },
        "software engineering": {
            "translated_key": [],
            "translated_annotated_text": "Obfuscación.NET y propiedad intelectual El autor considera opciones de ofuscación para proteger el código.NET. Muchos programas no necesitarán ofuscación porque la pérdida causada por la ingeniería inversa será inexistente. Para la plataforma.NET ya están disponibles numerosos obfuscadores, que van desde un obfuscador de renombrado básico hasta un obfuscador totalmente funcional que maneja conjuntos mixtos de código IL/nativo creados en cualquier idioma administrado, incluyendo Microsofts C++ con extensiones administradas. Un obfuscador simplemente hace su aplicación más difícil de ingeniería inversa. No impide la ingeniería inversa. Sin embargo, el costo de la ofuscación es insignificante en comparación con el costo de un proyecto típico de desarrollo de software. Si usted se siente como un obfuscador le proporciona cualquier beneficio en absoluto, es probablemente vale la pena el precio ",
            "error": []
        }
    }
}