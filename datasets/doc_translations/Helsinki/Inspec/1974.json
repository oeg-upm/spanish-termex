{
    "original_text": "Real-time implementation of a new low-memory SPIHT image coding algorithm using DSP chip Among all algorithms based on wavelet transform and zerotree quantization, Said and Pearlmans (1996) set partitioning in hierarchical trees (SPIHT) algorithm is well-known for its simplicity and efficiency. This paper deals with the real-time implementation of SPIHT algorithm using DSP chip. In order to facilitate the implementation and improve the codecs performance, some relative issues are thoroughly discussed, such as the optimization of program structure to speed up the wavelet decomposition. SPIHTs high memory requirement is a major drawback for hardware implementation. In this paper, we modify the original SPIHT algorithm by presenting two new concepts-number of error bits and absolute zerotree. Consequently, the memory cost is significantly reduced. We also introduce a new method to control the coding process by number of error bits. Our experimental results show that the implementation meets common requirement of real-time video coding and is proven to be a practical and efficient DSP solution",
    "original_translation": "Implementación en tiempo real de un nuevo algoritmo de codificación de imágenes SPIHT de baja memoria utilizando chip DSP Entre todos los algoritmos basados en la transformación de wavelet y la cuantificación de cerotree, Said y Pearlmans (1996) establecen particiones en árboles jerárquicos (SPIHT) algoritmo es bien conocido por su simplicidad y eficiencia. Este artículo trata de la implementación en tiempo real del algoritmo SPIHT usando chip DSP. Con el fin de facilitar la implementación y mejorar el rendimiento de los códecs, algunos temas relativos se discuten a fondo, como la optimización de la estructura del programa para acelerar la descomposición de wavelet. SPIHTs alta necesidad de memoria es un inconveniente importante para la implementación de hardware. En este artículo, modificamos el algoritmo SPIHT original presentando dos nuevos conceptos-número de bits de error y cerotree absoluto. En consecuencia, el costo de la memoria se reduce significativamente. También introducimos un nuevo método para controlar el proceso de codificación por número de bits de error. Nuestros resultados experimentales muestran que la implementación cumple con los requisitos comunes de codificación de vídeo en tiempo real y ha demostrado ser una solución DSP práctica y eficiente",
    "error_count": 9,
    "keys": {
        "SPIHT algorithm": {
            "translated_key": "algoritmo SPIHT",
            "translated_annotated_text": "Implementación en tiempo real de un nuevo algoritmo de codificación de imágenes SPIHT de baja memoria utilizando chip DSP Entre todos los algoritmos basados en la transformación de wavelet y la cuantificación de cerotree, Said y Pearlmans (1996) establecen particiones en árboles jerárquicos (SPIHT) algoritmo es bien conocido por su simplicidad y eficiencia. Este artículo trata de la implementación en tiempo real de \"algoritmo SPIHT\" usando chip DSP. Con el fin de facilitar la implementación y mejorar el rendimiento de los códecs, algunos temas relativos se discuten a fondo, como la optimización de la estructura del programa para acelerar la descomposición de wavelet. SPIHTs alta necesidad de memoria es un inconveniente importante para la implementación de hardware. En este artículo, modificamos el \"algoritmo SPIHT\" original presentando dos nuevos conceptos-número de bits de error y cerotree absoluto. En consecuencia, el costo de la memoria se reduce significativamente. También introducimos un nuevo método para controlar el proceso de codificación por número de bits de error. Nuestros resultados experimentales muestran que la implementación cumple con los requisitos comunes de codificación de vídeo en tiempo real y ha demostrado ser una solución DSP práctica y eficiente ",
            "error": [
                ""
            ]
        },
        "real-time implementation": {
            "translated_key": "implementación en tiempo real",
            "translated_annotated_text": "Implementación en tiempo real de un nuevo algoritmo de codificación de imágenes SPIHT de baja memoria utilizando chip DSP Entre todos los algoritmos basados en la transformación de wavelet y la cuantificación de cerotree, Said y Pearlmans (1996) establecen particiones en árboles jerárquicos (SPIHT) algoritmo es bien conocido por su simplicidad y eficiencia. Este artículo trata de la \"implementación en tiempo real\" del algoritmo SPIHT usando chip DSP. Con el fin de facilitar la implementación y mejorar el rendimiento de los códecs, algunos temas relativos se discuten a fondo, como la optimización de la estructura del programa para acelerar la descomposición de wavelet. SPIHTs alta necesidad de memoria es un inconveniente importante para la implementación de hardware. En este artículo, modificamos el algoritmo SPIHT original presentando dos nuevos conceptos-número de bits de error y cerotree absoluto. En consecuencia, el costo de la memoria se reduce significativamente. También introducimos un nuevo método para controlar el proceso de codificación por número de bits de error. Nuestros resultados experimentales muestran que la implementación cumple con los requisitos comunes de codificación de vídeo en tiempo real y ha demostrado ser una solución DSP práctica y eficiente ",
            "error": [
                ""
            ]
        },
        "wavelet transform": {
            "translated_key": "transformación de wavelet",
            "translated_annotated_text": "Implementación en tiempo real de un nuevo algoritmo de codificación de imágenes SPIHT de baja memoria utilizando chip DSP Entre todos los algoritmos basados en la \"transformación de wavelet\" y cuantificación de cerotree, Said y Pearlmans (1996) establecen particiones en árboles jerárquicos (SPIHT) algoritmo es bien conocido por su simplicidad y eficiencia. Este artículo trata de la implementación en tiempo real del algoritmo SPIHT usando chip DSP. Con el fin de facilitar la implementación y mejorar el rendimiento de los códecs, algunos temas relativos se discuten a fondo, como la optimización de la estructura del programa para acelerar la descomposición de wavelet. SPIHTs alta necesidad de memoria es un inconveniente importante para la implementación de hardware. En este artículo, modificamos el algoritmo SPIHT original presentando dos nuevos conceptos-número de bits de error y cerotree absoluto. En consecuencia, el costo de la memoria se reduce significativamente. También introducimos un nuevo método para controlar el proceso de codificación por número de bits de error. Nuestros resultados experimentales muestran que la implementación cumple con los requisitos comunes de codificación de vídeo en tiempo real y ha demostrado ser una solución DSP práctica y eficiente ",
            "error": [
                ""
            ]
        },
        "zerotree quantization": {
            "translated_key": "cuantización de árboles cero",
            "translated_annotated_text": "Implementación en tiempo real de un nuevo algoritmo de codificación de imágenes SPIHT de baja memoria utilizando chip DSP Entre todos los algoritmos basados en la transformación de wavelet y \"cuantización de árboles cero\", Said y Pearlmans (1996) establecen particiones en árboles jerárquicos (SPIHT) algoritmo es bien conocido por su simplicidad y eficiencia. Este artículo trata de la implementación en tiempo real del algoritmo SPIHT usando chip DSP. Con el fin de facilitar la implementación y mejorar el rendimiento de los códecs, algunos temas relativos se discuten a fondo, como la optimización de la estructura del programa para acelerar la descomposición de wavelet. SPIHTs alta necesidad de memoria es un inconveniente importante para la implementación de hardware. En este artículo, modificamos el algoritmo SPIHT original presentando dos nuevos conceptos-número de bits de error y cerotree absoluto. En consecuencia, el costo de la memoria se reduce significativamente. También introducimos un nuevo método para controlar el proceso de codificación por número de bits de error. Nuestros resultados experimentales muestran que la implementación cumple con los requisitos comunes de codificación de vídeo en tiempo real y ha demostrado ser una solución DSP práctica y eficiente ",
            "error": [
                ""
            ]
        },
        "codec": {
            "translated_key": [],
            "translated_annotated_text": "Implementación en tiempo real de un nuevo algoritmo de codificación de imágenes SPIHT de baja memoria utilizando chip DSP Entre todos los algoritmos basados en la transformación de wavelet y la cuantificación de cerotree, Said y Pearlmans (1996) establecen particiones en árboles jerárquicos (SPIHT) algoritmo es bien conocido por su simplicidad y eficiencia. Este artículo trata de la implementación en tiempo real del algoritmo SPIHT usando chip DSP. Con el fin de facilitar la implementación y mejorar el rendimiento de los códecs, algunos temas relativos se discuten a fondo, como la optimización de la estructura del programa para acelerar la descomposición de wavelet. SPIHTs alta necesidad de memoria es un inconveniente importante para la implementación de hardware. En este artículo, modificamos el algoritmo SPIHT original presentando dos nuevos conceptos-número de bits de error y cerotree absoluto. En consecuencia, el costo de la memoria se reduce significativamente. También introducimos un nuevo método para controlar el proceso de codificación por número de bits de error. Nuestros resultados experimentales muestran que la implementación cumple con los requisitos comunes de codificación de vídeo en tiempo real y ha demostrado ser una solución DSP práctica y eficiente ",
            "error": []
        },
        "wavelet decomposition": {
            "translated_key": "descomposición de wavelet",
            "translated_annotated_text": "Implementación en tiempo real de un nuevo algoritmo de codificación de imágenes SPIHT de baja memoria utilizando chip DSP Entre todos los algoritmos basados en la transformación de wavelet y la cuantificación de cerotree, Said y Pearlmans (1996) establecen particiones en árboles jerárquicos (SPIHT) algoritmo es bien conocido por su simplicidad y eficiencia. Este artículo trata de la implementación en tiempo real del algoritmo SPIHT usando chip DSP. Con el fin de facilitar la implementación y mejorar el rendimiento de los códecs, se discuten a fondo algunas cuestiones relativas, como la optimización de la estructura del programa para acelerar la \"descomposición de wavelet\". SPIHTs alta necesidad de memoria es un inconveniente importante para la implementación de hardware. En este artículo, modificamos el algoritmo SPIHT original presentando dos nuevos conceptos-número de bits de error y cerotree absoluto. En consecuencia, el costo de la memoria se reduce significativamente. También introducimos un nuevo método para controlar el proceso de codificación por número de bits de error. Nuestros resultados experimentales muestran que la implementación cumple con los requisitos comunes de codificación de vídeo en tiempo real y ha demostrado ser una solución DSP práctica y eficiente ",
            "error": [
                ""
            ]
        },
        "number of error bits": {
            "translated_key": "número de bits de error",
            "translated_annotated_text": "Implementación en tiempo real de un nuevo algoritmo de codificación de imágenes SPIHT de baja memoria utilizando chip DSP Entre todos los algoritmos basados en la transformación de wavelet y la cuantificación de cerotree, Said y Pearlmans (1996) establecen particiones en árboles jerárquicos (SPIHT) algoritmo es bien conocido por su simplicidad y eficiencia. Este artículo trata de la implementación en tiempo real del algoritmo SPIHT usando chip DSP. Con el fin de facilitar la implementación y mejorar el rendimiento de los códecs, algunos temas relativos se discuten a fondo, como la optimización de la estructura del programa para acelerar la descomposición de wavelet. SPIHTs alta necesidad de memoria es un inconveniente importante para la implementación de hardware. En este artículo, modificamos el algoritmo SPIHT original presentando dos nuevos conceptos: \"número de bits de error\" y cerotree absoluto. En consecuencia, el costo de la memoria se reduce significativamente. También introducimos un nuevo método para controlar el proceso de codificación por \"número de bits de error\". Nuestros resultados experimentales muestran que la implementación cumple con los requisitos comunes de codificación de vídeo en tiempo real y ha demostrado ser una solución DSP práctica y eficiente ",
            "error": [
                ""
            ]
        },
        "absolute zerotree": {
            "translated_key": "cero árbol absoluto",
            "translated_annotated_text": "Implementación en tiempo real de un nuevo algoritmo de codificación de imágenes SPIHT de baja memoria utilizando chip DSP Entre todos los algoritmos basados en la transformación de wavelet y la cuantificación de cerotree, Said y Pearlmans (1996) establecen particiones en árboles jerárquicos (SPIHT) algoritmo es bien conocido por su simplicidad y eficiencia. Este artículo trata de la implementación en tiempo real del algoritmo SPIHT usando chip DSP. Con el fin de facilitar la implementación y mejorar el rendimiento de los códecs, algunos temas relativos se discuten a fondo, como la optimización de la estructura del programa para acelerar la descomposición de wavelet. SPIHTs alta necesidad de memoria es un inconveniente importante para la implementación de hardware. En este artículo, modificamos el algoritmo SPIHT original presentando dos nuevos conceptos-número de bits de error y \"cero árbol absoluto\". En consecuencia, el costo de la memoria se reduce significativamente. También introducimos un nuevo método para controlar el proceso de codificación por número de bits de error. Nuestros resultados experimentales muestran que la implementación cumple con los requisitos comunes de codificación de vídeo en tiempo real y ha demostrado ser una solución DSP práctica y eficiente ",
            "error": [
                ""
            ]
        },
        "DSP chip": {
            "translated_key": "chip DSP",
            "translated_annotated_text": "Implementación en tiempo real de un nuevo algoritmo de codificación de imágenes SPIHT de baja memoria usando \"chip DSP\" Entre todos los algoritmos basados en la transformación de wavelet y la cuantificación de cerotree, Said y Pearlmans (1996) establecen particiones en árboles jerárquicos (SPIHT) algoritmo es bien conocido por su simplicidad y eficiencia. Este artículo trata de la implementación en tiempo real del algoritmo SPIHT usando \"chip DSP\". Con el fin de facilitar la implementación y mejorar el rendimiento de los códecs, algunos temas relativos se discuten a fondo, como la optimización de la estructura del programa para acelerar la descomposición de wavelet. SPIHTs alta necesidad de memoria es un inconveniente importante para la implementación de hardware. En este artículo, modificamos el algoritmo SPIHT original presentando dos nuevos conceptos-número de bits de error y cerotree absoluto. En consecuencia, el costo de la memoria se reduce significativamente. También introducimos un nuevo método para controlar el proceso de codificación por número de bits de error. Nuestros resultados experimentales muestran que la implementación cumple con los requisitos comunes de codificación de vídeo en tiempo real y ha demostrado ser una solución DSP práctica y eficiente ",
            "error": [
                ""
            ]
        },
        "set partitioning in hierarchical trees": {
            "translated_key": "set partitioning in jerarquizer woodes",
            "translated_annotated_text": "Implementación en tiempo real de un nuevo algoritmo de codificación de imágenes SPIHT de baja memoria utilizando chip DSP Entre todos los algoritmos basados en la transformación de wavelet y la cuantificación de cerotree, Said y Pearlmans (1996), el algoritmo \"set partitioning in jerarquizer woodes\" (SPIHT) es conocido por su simplicidad y eficiencia. Este artículo trata de la implementación en tiempo real del algoritmo SPIHT usando chip DSP. Con el fin de facilitar la implementación y mejorar el rendimiento de los códecs, algunos temas relativos se discuten a fondo, como la optimización de la estructura del programa para acelerar la descomposición de wavelet. SPIHTs alta necesidad de memoria es un inconveniente importante para la implementación de hardware. En este artículo, modificamos el algoritmo SPIHT original presentando dos nuevos conceptos-número de bits de error y cerotree absoluto. En consecuencia, el costo de la memoria se reduce significativamente. También introducimos un nuevo método para controlar el proceso de codificación por número de bits de error. Nuestros resultados experimentales muestran que la implementación cumple con los requisitos comunes de codificación de vídeo en tiempo real y ha demostrado ser una solución DSP práctica y eficiente ",
            "error": [
                ""
            ]
        },
        "memory cost reduction": {
            "translated_key": [],
            "translated_annotated_text": "Implementación en tiempo real de un nuevo algoritmo de codificación de imágenes SPIHT de baja memoria utilizando chip DSP Entre todos los algoritmos basados en la transformación de wavelet y la cuantificación de cerotree, Said y Pearlmans (1996) establecen particiones en árboles jerárquicos (SPIHT) algoritmo es bien conocido por su simplicidad y eficiencia. Este artículo trata de la implementación en tiempo real del algoritmo SPIHT usando chip DSP. Con el fin de facilitar la implementación y mejorar el rendimiento de los códecs, algunos temas relativos se discuten a fondo, como la optimización de la estructura del programa para acelerar la descomposición de wavelet. SPIHTs alta necesidad de memoria es un inconveniente importante para la implementación de hardware. En este artículo, modificamos el algoritmo SPIHT original presentando dos nuevos conceptos-número de bits de error y cerotree absoluto. En consecuencia, el costo de la memoria se reduce significativamente. También introducimos un nuevo método para controlar el proceso de codificación por número de bits de error. Nuestros resultados experimentales muestran que la implementación cumple con los requisitos comunes de codificación de vídeo en tiempo real y ha demostrado ser una solución DSP práctica y eficiente ",
            "error": []
        },
        "video coding": {
            "translated_key": "codificación de vídeo",
            "translated_annotated_text": "Implementación en tiempo real de un nuevo algoritmo de codificación de imágenes SPIHT de baja memoria utilizando chip DSP Entre todos los algoritmos basados en la transformación de wavelet y la cuantificación de cerotree, Said y Pearlmans (1996) establecen particiones en árboles jerárquicos (SPIHT) algoritmo es bien conocido por su simplicidad y eficiencia. Este artículo trata de la implementación en tiempo real del algoritmo SPIHT usando chip DSP. Con el fin de facilitar la implementación y mejorar el rendimiento de los códecs, algunos temas relativos se discuten a fondo, como la optimización de la estructura del programa para acelerar la descomposición de wavelet. SPIHTs alta necesidad de memoria es un inconveniente importante para la implementación de hardware. En este artículo, modificamos el algoritmo SPIHT original presentando dos nuevos conceptos-número de bits de error y cerotree absoluto. En consecuencia, el costo de la memoria se reduce significativamente. También introducimos un nuevo método para controlar el proceso de codificación por número de bits de error. Nuestros resultados experimentales muestran que la implementación cumple con el requisito común de \"codificación de vídeo\" en tiempo real y se ha demostrado que es una solución DSP práctica y eficiente ",
            "error": [
                ""
            ]
        },
        "data compression": {
            "translated_key": [],
            "translated_annotated_text": "Implementación en tiempo real de un nuevo algoritmo de codificación de imágenes SPIHT de baja memoria utilizando chip DSP Entre todos los algoritmos basados en la transformación de wavelet y la cuantificación de cerotree, Said y Pearlmans (1996) establecen particiones en árboles jerárquicos (SPIHT) algoritmo es bien conocido por su simplicidad y eficiencia. Este artículo trata de la implementación en tiempo real del algoritmo SPIHT usando chip DSP. Con el fin de facilitar la implementación y mejorar el rendimiento de los códecs, algunos temas relativos se discuten a fondo, como la optimización de la estructura del programa para acelerar la descomposición de wavelet. SPIHTs alta necesidad de memoria es un inconveniente importante para la implementación de hardware. En este artículo, modificamos el algoritmo SPIHT original presentando dos nuevos conceptos-número de bits de error y cerotree absoluto. En consecuencia, el costo de la memoria se reduce significativamente. También introducimos un nuevo método para controlar el proceso de codificación por número de bits de error. Nuestros resultados experimentales muestran que la implementación cumple con los requisitos comunes de codificación de vídeo en tiempo real y ha demostrado ser una solución DSP práctica y eficiente ",
            "error": []
        },
        "digital signal processing chips": {
            "translated_key": [],
            "translated_annotated_text": "Implementación en tiempo real de un nuevo algoritmo de codificación de imágenes SPIHT de baja memoria utilizando chip DSP Entre todos los algoritmos basados en la transformación de wavelet y la cuantificación de cerotree, Said y Pearlmans (1996) establecen particiones en árboles jerárquicos (SPIHT) algoritmo es bien conocido por su simplicidad y eficiencia. Este artículo trata de la implementación en tiempo real del algoritmo SPIHT usando chip DSP. Con el fin de facilitar la implementación y mejorar el rendimiento de los códecs, algunos temas relativos se discuten a fondo, como la optimización de la estructura del programa para acelerar la descomposición de wavelet. SPIHTs alta necesidad de memoria es un inconveniente importante para la implementación de hardware. En este artículo, modificamos el algoritmo SPIHT original presentando dos nuevos conceptos-número de bits de error y cerotree absoluto. En consecuencia, el costo de la memoria se reduce significativamente. También introducimos un nuevo método para controlar el proceso de codificación por número de bits de error. Nuestros resultados experimentales muestran que la implementación cumple con los requisitos comunes de codificación de vídeo en tiempo real y ha demostrado ser una solución DSP práctica y eficiente ",
            "error": []
        },
        "image coding": {
            "translated_key": "codificación de imágenes",
            "translated_annotated_text": "Implementación en tiempo real de un nuevo algoritmo de \"codificación de imágenes\" SPIHT de baja memoria utilizando chip DSP Entre todos los algoritmos basados en la transformación de wavelet y la cuantificación de cerotree, Said y Pearlmans (1996) establecen particiones en árboles jerárquicos (SPIHT) algoritmo es bien conocido por su simplicidad y eficiencia. Este artículo trata de la implementación en tiempo real del algoritmo SPIHT usando chip DSP. Con el fin de facilitar la implementación y mejorar el rendimiento de los códecs, algunos temas relativos se discuten a fondo, como la optimización de la estructura del programa para acelerar la descomposición de wavelet. SPIHTs alta necesidad de memoria es un inconveniente importante para la implementación de hardware. En este artículo, modificamos el algoritmo SPIHT original presentando dos nuevos conceptos-número de bits de error y cerotree absoluto. En consecuencia, el costo de la memoria se reduce significativamente. También introducimos un nuevo método para controlar el proceso de codificación por número de bits de error. Nuestros resultados experimentales muestran que la implementación cumple con los requisitos comunes de codificación de vídeo en tiempo real y ha demostrado ser una solución DSP práctica y eficiente ",
            "error": [
                ""
            ]
        },
        "real-time systems": {
            "translated_key": [],
            "translated_annotated_text": "Implementación en tiempo real de un nuevo algoritmo de codificación de imágenes SPIHT de baja memoria utilizando chip DSP Entre todos los algoritmos basados en la transformación de wavelet y la cuantificación de cerotree, Said y Pearlmans (1996) establecen particiones en árboles jerárquicos (SPIHT) algoritmo es bien conocido por su simplicidad y eficiencia. Este artículo trata de la implementación en tiempo real del algoritmo SPIHT usando chip DSP. Con el fin de facilitar la implementación y mejorar el rendimiento de los códecs, algunos temas relativos se discuten a fondo, como la optimización de la estructura del programa para acelerar la descomposición de wavelet. SPIHTs alta necesidad de memoria es un inconveniente importante para la implementación de hardware. En este artículo, modificamos el algoritmo SPIHT original presentando dos nuevos conceptos-número de bits de error y cerotree absoluto. En consecuencia, el costo de la memoria se reduce significativamente. También introducimos un nuevo método para controlar el proceso de codificación por número de bits de error. Nuestros resultados experimentales muestran que la implementación cumple con los requisitos comunes de codificación de vídeo en tiempo real y ha demostrado ser una solución DSP práctica y eficiente ",
            "error": []
        },
        "transform coding": {
            "translated_key": [],
            "translated_annotated_text": "Implementación en tiempo real de un nuevo algoritmo de codificación de imágenes SPIHT de baja memoria utilizando chip DSP Entre todos los algoritmos basados en la transformación de wavelet y la cuantificación de cerotree, Said y Pearlmans (1996) establecen particiones en árboles jerárquicos (SPIHT) algoritmo es bien conocido por su simplicidad y eficiencia. Este artículo trata de la implementación en tiempo real del algoritmo SPIHT usando chip DSP. Con el fin de facilitar la implementación y mejorar el rendimiento de los códecs, algunos temas relativos se discuten a fondo, como la optimización de la estructura del programa para acelerar la descomposición de wavelet. SPIHTs alta necesidad de memoria es un inconveniente importante para la implementación de hardware. En este artículo, modificamos el algoritmo SPIHT original presentando dos nuevos conceptos-número de bits de error y cerotree absoluto. En consecuencia, el costo de la memoria se reduce significativamente. También introducimos un nuevo método para controlar el proceso de codificación por número de bits de error. Nuestros resultados experimentales muestran que la implementación cumple con los requisitos comunes de codificación de vídeo en tiempo real y ha demostrado ser una solución DSP práctica y eficiente ",
            "error": []
        },
        "tree data structures": {
            "translated_key": [],
            "translated_annotated_text": "Implementación en tiempo real de un nuevo algoritmo de codificación de imágenes SPIHT de baja memoria utilizando chip DSP Entre todos los algoritmos basados en la transformación de wavelet y la cuantificación de cerotree, Said y Pearlmans (1996) establecen particiones en árboles jerárquicos (SPIHT) algoritmo es bien conocido por su simplicidad y eficiencia. Este artículo trata de la implementación en tiempo real del algoritmo SPIHT usando chip DSP. Con el fin de facilitar la implementación y mejorar el rendimiento de los códecs, algunos temas relativos se discuten a fondo, como la optimización de la estructura del programa para acelerar la descomposición de wavelet. SPIHTs alta necesidad de memoria es un inconveniente importante para la implementación de hardware. En este artículo, modificamos el algoritmo SPIHT original presentando dos nuevos conceptos-número de bits de error y cerotree absoluto. En consecuencia, el costo de la memoria se reduce significativamente. También introducimos un nuevo método para controlar el proceso de codificación por número de bits de error. Nuestros resultados experimentales muestran que la implementación cumple con los requisitos comunes de codificación de vídeo en tiempo real y ha demostrado ser una solución DSP práctica y eficiente ",
            "error": []
        },
        "video codecs": {
            "translated_key": [],
            "translated_annotated_text": "Implementación en tiempo real de un nuevo algoritmo de codificación de imágenes SPIHT de baja memoria utilizando chip DSP Entre todos los algoritmos basados en la transformación de wavelet y la cuantificación de cerotree, Said y Pearlmans (1996) establecen particiones en árboles jerárquicos (SPIHT) algoritmo es bien conocido por su simplicidad y eficiencia. Este artículo trata de la implementación en tiempo real del algoritmo SPIHT usando chip DSP. Con el fin de facilitar la implementación y mejorar el rendimiento de los códecs, algunos temas relativos se discuten a fondo, como la optimización de la estructura del programa para acelerar la descomposición de wavelet. SPIHTs alta necesidad de memoria es un inconveniente importante para la implementación de hardware. En este artículo, modificamos el algoritmo SPIHT original presentando dos nuevos conceptos-número de bits de error y cerotree absoluto. En consecuencia, el costo de la memoria se reduce significativamente. También introducimos un nuevo método para controlar el proceso de codificación por número de bits de error. Nuestros resultados experimentales muestran que la implementación cumple con los requisitos comunes de codificación de vídeo en tiempo real y ha demostrado ser una solución DSP práctica y eficiente ",
            "error": []
        },
        "wavelet transforms": {
            "translated_key": [],
            "translated_annotated_text": "Implementación en tiempo real de un nuevo algoritmo de codificación de imágenes SPIHT de baja memoria utilizando chip DSP Entre todos los algoritmos basados en la transformación de wavelet y la cuantificación de cerotree, Said y Pearlmans (1996) establecen particiones en árboles jerárquicos (SPIHT) algoritmo es bien conocido por su simplicidad y eficiencia. Este artículo trata de la implementación en tiempo real del algoritmo SPIHT usando chip DSP. Con el fin de facilitar la implementación y mejorar el rendimiento de los códecs, algunos temas relativos se discuten a fondo, como la optimización de la estructura del programa para acelerar la descomposición de wavelet. SPIHTs alta necesidad de memoria es un inconveniente importante para la implementación de hardware. En este artículo, modificamos el algoritmo SPIHT original presentando dos nuevos conceptos-número de bits de error y cerotree absoluto. En consecuencia, el costo de la memoria se reduce significativamente. También introducimos un nuevo método para controlar el proceso de codificación por número de bits de error. Nuestros resultados experimentales muestran que la implementación cumple con los requisitos comunes de codificación de vídeo en tiempo real y ha demostrado ser una solución DSP práctica y eficiente ",
            "error": []
        }
    }
}