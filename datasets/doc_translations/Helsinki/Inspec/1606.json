{
    "original_text": "Single machine earliness-tardiness scheduling with resource-dependent release dates This paper deals with the single machine earliness and tardiness scheduling problem with a common due date and resource-dependent release dates. It is assumed that the cost of resource consumption of a job is a non-increasing linear function of the job release date, and this function is common for all jobs. The objective is to find a schedule and job release dates that minimize the total resource consumption, and earliness and tardiness penalties. It is shown that the problem is NP-hard in the ordinary sense even if the due date is unrestricted (the number of jobs that can be scheduled before the due date is unrestricted). An exact dynamic programming (DP) algorithm for small and medium size problems is developed. A heuristic algorithm for large-scale problems is also proposed and the results of a computational comparison between heuristic and optimal solutions are discussed",
    "original_translation": "Programación de una sola máquina para el retraso en el oído con fechas de lanzamiento dependientes de recursos Este artículo trata del problema de programación de una sola máquina para el retraso en el oído con una fecha de vencimiento común y fechas de lanzamiento dependientes de recursos. Se supone que el costo del consumo de recursos de un trabajo es una función lineal no creciente de la fecha de liberación de empleo, y esta función es común para todos los puestos de trabajo. El objetivo es encontrar un cronograma y fechas de liberación laboral que minimicen el consumo total de recursos, y penalidades por aprehensión y retraso. Se muestra que el problema es NP-hard en el sentido ordinario, incluso si la fecha de vencimiento es ilimitada (el número de trabajos que se pueden programar antes de la fecha de vencimiento es ilimitado). Se desarrolla un algoritmo exacto de programación dinámica (DP) para problemas de tamaño pequeño y mediano. También se propone un algoritmo heurístico para problemas a gran escala y se discuten los resultados de una comparación computacional entre soluciones heurísticas y óptimas",
    "error_count": 12,
    "keys": {
        "single machine earliness-tardiness scheduling": {
            "translated_key": [],
            "translated_annotated_text": "Programación de una sola máquina para el retraso en el oído con fechas de lanzamiento dependientes de recursos Este artículo trata del problema de programación de una sola máquina para el retraso en el oído con una fecha de vencimiento común y fechas de lanzamiento dependientes de recursos. Se supone que el costo del consumo de recursos de un trabajo es una función lineal no creciente de la fecha de liberación de empleo, y esta función es común para todos los puestos de trabajo. El objetivo es encontrar un cronograma y fechas de liberación laboral que minimicen el consumo total de recursos, y penalidades por aprehensión y retraso. Se muestra que el problema es NP-hard en el sentido ordinario, incluso si la fecha de vencimiento es ilimitada (el número de trabajos que se pueden programar antes de la fecha de vencimiento es ilimitado). Se desarrolla un algoritmo exacto de programación dinámica (DP) para problemas de tamaño pequeño y mediano. También se propone un algoritmo heurístico para problemas a gran escala y se discuten los resultados de una comparación computacional entre soluciones heurísticas y óptimas ",
            "error": []
        },
        "resource-dependent release dates": {
            "translated_key": "fechas de lanzamiento dependientes de los recursos",
            "translated_annotated_text": "Programación de una sola máquina con \"fechas de lanzamiento dependientes de los recursos\" Este artículo trata del problema de programación de una sola máquina con una fecha de vencimiento común y \"fechas de lanzamiento dependientes de los recursos\". Se supone que el costo del consumo de recursos de un trabajo es una función lineal no creciente de la fecha de liberación de empleo, y esta función es común para todos los puestos de trabajo. El objetivo es encontrar un cronograma y fechas de liberación laboral que minimicen el consumo total de recursos, y penalidades por aprehensión y retraso. Se muestra que el problema es NP-hard en el sentido ordinario, incluso si la fecha de vencimiento es ilimitada (el número de trabajos que se pueden programar antes de la fecha de vencimiento es ilimitado). Se desarrolla un algoritmo exacto de programación dinámica (DP) para problemas de tamaño pequeño y mediano. También se propone un algoritmo heurístico para problemas a gran escala y se discuten los resultados de una comparación computacional entre soluciones heurísticas y óptimas ",
            "error": [
                ""
            ]
        },
        "common due date": {
            "translated_key": "fecha de vencimiento común",
            "translated_annotated_text": "Programación de retraso en la orejera de una sola máquina con fechas de lanzamiento dependientes de recursos Este artículo trata el problema de programación de retraso en la orejera de una sola máquina con una \"fecha de vencimiento común\" y fechas de lanzamiento dependientes de recursos. Se supone que el costo del consumo de recursos de un trabajo es una función lineal no creciente de la fecha de liberación de empleo, y esta función es común para todos los puestos de trabajo. El objetivo es encontrar un cronograma y fechas de liberación laboral que minimicen el consumo total de recursos, y penalidades por aprehensión y retraso. Se muestra que el problema es NP-hard en el sentido ordinario, incluso si la fecha de vencimiento es ilimitada (el número de trabajos que se pueden programar antes de la fecha de vencimiento es ilimitado). Se desarrolla un algoritmo exacto de programación dinámica (DP) para problemas de tamaño pequeño y mediano. También se propone un algoritmo heurístico para problemas a gran escala y se discuten los resultados de una comparación computacional entre soluciones heurísticas y óptimas ",
            "error": [
                ""
            ]
        },
        "job resource consumption cost": {
            "translated_key": [],
            "translated_annotated_text": "Programación de una sola máquina para el retraso en el oído con fechas de lanzamiento dependientes de recursos Este artículo trata del problema de programación de una sola máquina para el retraso en el oído con una fecha de vencimiento común y fechas de lanzamiento dependientes de recursos. Se supone que el costo del consumo de recursos de un trabajo es una función lineal no creciente de la fecha de liberación de empleo, y esta función es común para todos los puestos de trabajo. El objetivo es encontrar un cronograma y fechas de liberación laboral que minimicen el consumo total de recursos, y penalidades por aprehensión y retraso. Se muestra que el problema es NP-hard en el sentido ordinario, incluso si la fecha de vencimiento es ilimitada (el número de trabajos que se pueden programar antes de la fecha de vencimiento es ilimitado). Se desarrolla un algoritmo exacto de programación dinámica (DP) para problemas de tamaño pequeño y mediano. También se propone un algoritmo heurístico para problemas a gran escala y se discuten los resultados de una comparación computacional entre soluciones heurísticas y óptimas ",
            "error": []
        },
        "nonincreasing linear function": {
            "translated_key": [],
            "translated_annotated_text": "Programación de una sola máquina para el retraso en el oído con fechas de lanzamiento dependientes de recursos Este artículo trata del problema de programación de una sola máquina para el retraso en el oído con una fecha de vencimiento común y fechas de lanzamiento dependientes de recursos. Se supone que el costo del consumo de recursos de un trabajo es una función lineal no creciente de la fecha de liberación de empleo, y esta función es común para todos los puestos de trabajo. El objetivo es encontrar un cronograma y fechas de liberación laboral que minimicen el consumo total de recursos, y penalidades por aprehensión y retraso. Se muestra que el problema es NP-hard en el sentido ordinario, incluso si la fecha de vencimiento es ilimitada (el número de trabajos que se pueden programar antes de la fecha de vencimiento es ilimitado). Se desarrolla un algoritmo exacto de programación dinámica (DP) para problemas de tamaño pequeño y mediano. También se propone un algoritmo heurístico para problemas a gran escala y se discuten los resultados de una comparación computacional entre soluciones heurísticas y óptimas ",
            "error": []
        },
        "job release date": {
            "translated_key": "fecha de liberación del empleo",
            "translated_annotated_text": "Programación de una sola máquina para el retraso en el oído con fechas de lanzamiento dependientes de recursos Este artículo trata del problema de programación de una sola máquina para el retraso en el oído con una fecha de vencimiento común y fechas de lanzamiento dependientes de recursos. Se supone que el costo del consumo de recursos de un trabajo es una función lineal no creciente de la \"fecha de liberación del empleo\", y esta función es común para todos los empleos. El objetivo es encontrar un cronograma y fechas de liberación laboral que minimicen el consumo total de recursos, y penalidades por aprehensión y retraso. Se muestra que el problema es NP-hard en el sentido ordinario, incluso si la fecha de vencimiento es ilimitada (el número de trabajos que se pueden programar antes de la fecha de vencimiento es ilimitado). Se desarrolla un algoritmo exacto de programación dinámica (DP) para problemas de tamaño pequeño y mediano. También se propone un algoritmo heurístico para problemas a gran escala y se discuten los resultados de una comparación computacional entre soluciones heurísticas y óptimas ",
            "error": [
                ""
            ]
        },
        "total resource consumption minimization": {
            "translated_key": [],
            "translated_annotated_text": "Programación de una sola máquina para el retraso en el oído con fechas de lanzamiento dependientes de recursos Este artículo trata del problema de programación de una sola máquina para el retraso en el oído con una fecha de vencimiento común y fechas de lanzamiento dependientes de recursos. Se supone que el costo del consumo de recursos de un trabajo es una función lineal no creciente de la fecha de liberación de empleo, y esta función es común para todos los puestos de trabajo. El objetivo es encontrar un cronograma y fechas de liberación laboral que minimicen el consumo total de recursos, y penalidades por aprehensión y retraso. Se muestra que el problema es NP-hard en el sentido ordinario, incluso si la fecha de vencimiento es ilimitada (el número de trabajos que se pueden programar antes de la fecha de vencimiento es ilimitado). Se desarrolla un algoritmo exacto de programación dinámica (DP) para problemas de tamaño pequeño y mediano. También se propone un algoritmo heurístico para problemas a gran escala y se discuten los resultados de una comparación computacional entre soluciones heurísticas y óptimas ",
            "error": []
        },
        "NP-hard problem": {
            "translated_key": [],
            "translated_annotated_text": "Programación de una sola máquina para el retraso en el oído con fechas de lanzamiento dependientes de recursos Este artículo trata del problema de programación de una sola máquina para el retraso en el oído con una fecha de vencimiento común y fechas de lanzamiento dependientes de recursos. Se supone que el costo del consumo de recursos de un trabajo es una función lineal no creciente de la fecha de liberación de empleo, y esta función es común para todos los puestos de trabajo. El objetivo es encontrar un cronograma y fechas de liberación laboral que minimicen el consumo total de recursos, y penalidades por aprehensión y retraso. Se muestra que el problema es NP-hard en el sentido ordinario, incluso si la fecha de vencimiento es ilimitada (el número de trabajos que se pueden programar antes de la fecha de vencimiento es ilimitado). Se desarrolla un algoritmo exacto de programación dinámica (DP) para problemas de tamaño pequeño y mediano. También se propone un algoritmo heurístico para problemas a gran escala y se discuten los resultados de una comparación computacional entre soluciones heurísticas y óptimas ",
            "error": []
        },
        "exact dynamic programming algorithm": {
            "translated_key": [],
            "translated_annotated_text": "Programación de una sola máquina para el retraso en el oído con fechas de lanzamiento dependientes de recursos Este artículo trata del problema de programación de una sola máquina para el retraso en el oído con una fecha de vencimiento común y fechas de lanzamiento dependientes de recursos. Se supone que el costo del consumo de recursos de un trabajo es una función lineal no creciente de la fecha de liberación de empleo, y esta función es común para todos los puestos de trabajo. El objetivo es encontrar un cronograma y fechas de liberación laboral que minimicen el consumo total de recursos, y penalidades por aprehensión y retraso. Se muestra que el problema es NP-hard en el sentido ordinario, incluso si la fecha de vencimiento es ilimitada (el número de trabajos que se pueden programar antes de la fecha de vencimiento es ilimitado). Se desarrolla un algoritmo exacto de programación dinámica (DP) para problemas de tamaño pequeño y mediano. También se propone un algoritmo heurístico para problemas a gran escala y se discuten los resultados de una comparación computacional entre soluciones heurísticas y óptimas ",
            "error": []
        },
        "medium size problems": {
            "translated_key": [],
            "translated_annotated_text": "Programación de una sola máquina para el retraso en el oído con fechas de lanzamiento dependientes de recursos Este artículo trata del problema de programación de una sola máquina para el retraso en el oído con una fecha de vencimiento común y fechas de lanzamiento dependientes de recursos. Se supone que el costo del consumo de recursos de un trabajo es una función lineal no creciente de la fecha de liberación de empleo, y esta función es común para todos los puestos de trabajo. El objetivo es encontrar un cronograma y fechas de liberación laboral que minimicen el consumo total de recursos, y penalidades por aprehensión y retraso. Se muestra que el problema es NP-hard en el sentido ordinario, incluso si la fecha de vencimiento es ilimitada (el número de trabajos que se pueden programar antes de la fecha de vencimiento es ilimitado). Se desarrolla un algoritmo exacto de programación dinámica (DP) para problemas de tamaño pequeño y medio. También se propone un algoritmo heurístico para problemas a gran escala y se discuten los resultados de una comparación computacional entre soluciones heurísticas y óptimas ",
            "error": []
        },
        "small size problems": {
            "translated_key": [],
            "translated_annotated_text": "Programación de una sola máquina para el retraso en el oído con fechas de lanzamiento dependientes de recursos Este artículo trata del problema de programación de una sola máquina para el retraso en el oído con una fecha de vencimiento común y fechas de lanzamiento dependientes de recursos. Se supone que el costo del consumo de recursos de un trabajo es una función lineal no creciente de la fecha de liberación de empleo, y esta función es común para todos los puestos de trabajo. El objetivo es encontrar un cronograma y fechas de liberación laboral que minimicen el consumo total de recursos, y penalidades por aprehensión y retraso. Se muestra que el problema es NP-hard en el sentido ordinario, incluso si la fecha de vencimiento es ilimitada (el número de trabajos que se pueden programar antes de la fecha de vencimiento es ilimitado). Se desarrolla un algoritmo exacto de programación dinámica (DP) para problemas de tamaño pequeño y mediano. También se propone un algoritmo heurístico para problemas a gran escala y se discuten los resultados de una comparación computacional entre soluciones heurísticas y óptimas ",
            "error": []
        },
        "heuristic algorithm": {
            "translated_key": "algoritmo heurístico",
            "translated_annotated_text": "Programación de una sola máquina para el retraso en el oído con fechas de lanzamiento dependientes de recursos Este artículo trata del problema de programación de una sola máquina para el retraso en el oído con una fecha de vencimiento común y fechas de lanzamiento dependientes de recursos. Se supone que el costo del consumo de recursos de un trabajo es una función lineal no creciente de la fecha de liberación de empleo, y esta función es común para todos los puestos de trabajo. El objetivo es encontrar un cronograma y fechas de liberación laboral que minimicen el consumo total de recursos, y penalidades por aprehensión y retraso. Se muestra que el problema es NP-hard en el sentido ordinario, incluso si la fecha de vencimiento es ilimitada (el número de trabajos que se pueden programar antes de la fecha de vencimiento es ilimitado). Se desarrolla un algoritmo exacto de programación dinámica (DP) para problemas de tamaño pequeño y mediano. También se propone un \"algoritmo heurístico\" para problemas a gran escala y se discuten los resultados de una comparación computacional entre soluciones heurísticas y óptimas ",
            "error": [
                ""
            ]
        },
        "large-scale problems": {
            "translated_key": "problemas a gran escala",
            "translated_annotated_text": "Programación de una sola máquina para el retraso en el oído con fechas de lanzamiento dependientes de recursos Este artículo trata del problema de programación de una sola máquina para el retraso en el oído con una fecha de vencimiento común y fechas de lanzamiento dependientes de recursos. Se supone que el costo del consumo de recursos de un trabajo es una función lineal no creciente de la fecha de liberación de empleo, y esta función es común para todos los puestos de trabajo. El objetivo es encontrar un cronograma y fechas de liberación laboral que minimicen el consumo total de recursos, y penalidades por aprehensión y retraso. Se muestra que el problema es NP-hard en el sentido ordinario, incluso si la fecha de vencimiento es ilimitada (el número de trabajos que se pueden programar antes de la fecha de vencimiento es ilimitado). Se desarrolla un algoritmo exacto de programación dinámica (DP) para problemas de tamaño pequeño y mediano. También se propone un algoritmo heurístico para \"problemas a gran escala\" y se discuten los resultados de una comparación computacional entre soluciones heurísticas y óptimas ",
            "error": [
                ""
            ]
        },
        "polynomial time algorithm": {
            "translated_key": [],
            "translated_annotated_text": "Programación de una sola máquina para el retraso en el oído con fechas de lanzamiento dependientes de recursos Este artículo trata del problema de programación de una sola máquina para el retraso en el oído con una fecha de vencimiento común y fechas de lanzamiento dependientes de recursos. Se supone que el costo del consumo de recursos de un trabajo es una función lineal no creciente de la fecha de liberación de empleo, y esta función es común para todos los puestos de trabajo. El objetivo es encontrar un cronograma y fechas de liberación laboral que minimicen el consumo total de recursos, y penalidades por aprehensión y retraso. Se muestra que el problema es NP-hard en el sentido ordinario, incluso si la fecha de vencimiento es ilimitada (el número de trabajos que se pueden programar antes de la fecha de vencimiento es ilimitado). Se desarrolla un algoritmo exacto de programación dinámica (DP) para problemas de tamaño pequeño y mediano. También se propone un algoritmo heurístico para problemas a gran escala y se discuten los resultados de una comparación computacional entre soluciones heurísticas y óptimas ",
            "error": []
        },
        "computational complexity": {
            "translated_key": [],
            "translated_annotated_text": "Programación de una sola máquina para el retraso en el oído con fechas de lanzamiento dependientes de recursos Este artículo trata del problema de programación de una sola máquina para el retraso en el oído con una fecha de vencimiento común y fechas de lanzamiento dependientes de recursos. Se supone que el costo del consumo de recursos de un trabajo es una función lineal no creciente de la fecha de liberación de empleo, y esta función es común para todos los puestos de trabajo. El objetivo es encontrar un cronograma y fechas de liberación laboral que minimicen el consumo total de recursos, y penalidades por aprehensión y retraso. Se muestra que el problema es NP-hard en el sentido ordinario, incluso si la fecha de vencimiento es ilimitada (el número de trabajos que se pueden programar antes de la fecha de vencimiento es ilimitado). Se desarrolla un algoritmo exacto de programación dinámica (DP) para problemas de tamaño pequeño y mediano. También se propone un algoritmo heurístico para problemas a gran escala y se discuten los resultados de una comparación computacional entre soluciones heurísticas y óptimas ",
            "error": []
        },
        "dynamic programming": {
            "translated_key": "programación dinámica",
            "translated_annotated_text": "Programación de una sola máquina para el retraso en el oído con fechas de lanzamiento dependientes de recursos Este artículo trata del problema de programación de una sola máquina para el retraso en el oído con una fecha de vencimiento común y fechas de lanzamiento dependientes de recursos. Se supone que el costo del consumo de recursos de un trabajo es una función lineal no creciente de la fecha de liberación de empleo, y esta función es común para todos los puestos de trabajo. El objetivo es encontrar un cronograma y fechas de liberación laboral que minimicen el consumo total de recursos, y penalidades por aprehensión y retraso. Se muestra que el problema es NP-hard en el sentido ordinario, incluso si la fecha de vencimiento es ilimitada (el número de trabajos que se pueden programar antes de la fecha de vencimiento es ilimitado). Se desarrolla un algoritmo exacto de \"programación dinámica\" (DP) para problemas de tamaño pequeño y mediano. También se propone un algoritmo heurístico para problemas a gran escala y se discuten los resultados de una comparación computacional entre soluciones heurísticas y óptimas ",
            "error": [
                ""
            ]
        },
        "heuristic programming": {
            "translated_key": [],
            "translated_annotated_text": "Programación de una sola máquina para el retraso en el oído con fechas de lanzamiento dependientes de recursos Este artículo trata del problema de programación de una sola máquina para el retraso en el oído con una fecha de vencimiento común y fechas de lanzamiento dependientes de recursos. Se supone que el costo del consumo de recursos de un trabajo es una función lineal no creciente de la fecha de liberación de empleo, y esta función es común para todos los puestos de trabajo. El objetivo es encontrar un cronograma y fechas de liberación laboral que minimicen el consumo total de recursos, y penalidades por aprehensión y retraso. Se muestra que el problema es NP-hard en el sentido ordinario, incluso si la fecha de vencimiento es ilimitada (el número de trabajos que se pueden programar antes de la fecha de vencimiento es ilimitado). Se desarrolla un algoritmo exacto de programación dinámica (DP) para problemas de tamaño pequeño y mediano. También se propone un algoritmo heurístico para problemas a gran escala y se discuten los resultados de una comparación computacional entre soluciones heurísticas y óptimas ",
            "error": []
        },
        "production control": {
            "translated_key": [],
            "translated_annotated_text": "Programación de una sola máquina para el retraso en el oído con fechas de lanzamiento dependientes de recursos Este artículo trata del problema de programación de una sola máquina para el retraso en el oído con una fecha de vencimiento común y fechas de lanzamiento dependientes de recursos. Se supone que el costo del consumo de recursos de un trabajo es una función lineal no creciente de la fecha de liberación de empleo, y esta función es común para todos los puestos de trabajo. El objetivo es encontrar un cronograma y fechas de liberación laboral que minimicen el consumo total de recursos, y penalidades por aprehensión y retraso. Se muestra que el problema es NP-hard en el sentido ordinario, incluso si la fecha de vencimiento es ilimitada (el número de trabajos que se pueden programar antes de la fecha de vencimiento es ilimitado). Se desarrolla un algoritmo exacto de programación dinámica (DP) para problemas de tamaño pequeño y mediano. También se propone un algoritmo heurístico para problemas a gran escala y se discuten los resultados de una comparación computacional entre soluciones heurísticas y óptimas ",
            "error": []
        }
    }
}