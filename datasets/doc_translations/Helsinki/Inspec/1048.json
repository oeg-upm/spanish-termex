{
    "original_text": "Parallel and distributed Haskells Parallel and distributed languages specify computations on multiple processors and have a computation language to describe the algorithm, i.e. what to compute, and a coordination language to describe how to organise the computations across the processors. Haskell has been used as the computation language for a wide variety of parallel and distributed languages, and this paper is a comprehensive survey of implemented languages. It outlines parallel and distributed language concepts and classifies Haskell extensions using them. Similar example programs are used to illustrate and contrast the coordination languages, and the comparison is facilitated by the common computation language. A lazy language is not an obvious choice for parallel or distributed computation, and we address the question of why Haskell is a common functional computation language",
    "original_translation": "Paralelas y distribuidas Haskells Los lenguajes paralelos y distribuidos especifican los cálculos en múltiples procesadores y tienen un lenguaje de cálculo para describir el algoritmo, es decir. qué calcular, y un lenguaje de coordinación para describir cómo organizar los cálculos a través de los procesadores. Haskell se ha utilizado como lenguaje de computación para una amplia variedad de idiomas paralelos y distribuidos, y este documento es un estudio exhaustivo de los idiomas implementados. Delinea conceptos de lenguaje paralelos y distribuidos y clasifica las extensiones de Haskell usándolas. Programas de ejemplo similares se utilizan para ilustrar y contrastar los lenguajes de coordinación, y la comparación es facilitada por el lenguaje computacional común. Un lenguaje perezoso no es una opción obvia para la computación paralela o distribuida, y abordamos la pregunta de por qué Haskell es un lenguaje de computación funcional común",
    "error_count": 10,
    "keys": {
        "distributed Haskell": {
            "translated_key": [],
            "translated_annotated_text": "Paralelas y distribuidas Haskells Los lenguajes paralelos y distribuidos especifican los cálculos en múltiples procesadores y tienen un lenguaje de cálculo para describir el algoritmo, es decir. qué calcular, y un lenguaje de coordinación para describir cómo organizar los cálculos a través de los procesadores. Haskell se ha utilizado como lenguaje de computación para una amplia variedad de idiomas paralelos y distribuidos, y este documento es un estudio exhaustivo de los idiomas implementados. Delinea conceptos de lenguaje paralelos y distribuidos y clasifica las extensiones de Haskell usándolas. Programas de ejemplo similares se utilizan para ilustrar y contrastar los lenguajes de coordinación, y la comparación es facilitada por el lenguaje computacional común. Un lenguaje perezoso no es una opción obvia para la computación paralela o distribuida, y abordamos la pregunta de por qué Haskell es un lenguaje de computación funcional común ",
            "error": []
        },
        "parallel Haskell": {
            "translated_key": [],
            "translated_annotated_text": "Paralelas y distribuidas Haskells Los lenguajes paralelos y distribuidos especifican los cálculos en múltiples procesadores y tienen un lenguaje de cálculo para describir el algoritmo, es decir. qué calcular, y un lenguaje de coordinación para describir cómo organizar los cálculos a través de los procesadores. Haskell se ha utilizado como lenguaje de computación para una amplia variedad de idiomas paralelos y distribuidos, y este documento es un estudio exhaustivo de los idiomas implementados. Delinea conceptos de lenguaje paralelos y distribuidos y clasifica las extensiones de Haskell usándolas. Programas de ejemplo similares se utilizan para ilustrar y contrastar los lenguajes de coordinación, y la comparación es facilitada por el lenguaje computacional común. Un lenguaje perezoso no es una opción obvia para la computación paralela o distribuida, y abordamos la pregunta de por qué Haskell es un lenguaje de computación funcional común ",
            "error": []
        },
        "distributed languages": {
            "translated_key": [
                "lenguajes distribuidos",
                "distribuidos"
            ],
            "translated_annotated_text": "Paralelas y distribuidas Haskells Paralelas y \"lenguajes distribuidos\" especifican cálculos en múltiples procesadores y tienen un lenguaje de cálculo para describir el algoritmo, es decir. qué calcular, y un lenguaje de coordinación para describir cómo organizar los cálculos a través de los procesadores. Haskell se ha utilizado como lenguaje de computación para una amplia variedad de lenguajes paralelos y \"distribuidos\", y este artículo es una encuesta exhaustiva de idiomas implementados. Delinea conceptos de lenguaje paralelos y distribuidos y clasifica las extensiones de Haskell usándolas. Programas de ejemplo similares se utilizan para ilustrar y contrastar los lenguajes de coordinación, y la comparación es facilitada por el lenguaje computacional común. Un lenguaje perezoso no es una opción obvia para la computación paralela o distribuida, y abordamos la pregunta de por qué Haskell es un lenguaje de computación funcional común ",
            "error": [
                "lenguajes distribuidos",
                "distribuidos"
            ]
        },
        "parallel languages": {
            "translated_key": [],
            "translated_annotated_text": "Paralelas y distribuidas Haskells Los lenguajes paralelos y distribuidos especifican los cálculos en múltiples procesadores y tienen un lenguaje de cálculo para describir el algoritmo, es decir. qué calcular, y un lenguaje de coordinación para describir cómo organizar los cálculos a través de los procesadores. Haskell se ha utilizado como lenguaje de computación para una amplia variedad de idiomas paralelos y distribuidos, y este documento es un estudio exhaustivo de los idiomas implementados. Delinea conceptos de lenguaje paralelos y distribuidos y clasifica las extensiones de Haskell usándolas. Programas de ejemplo similares se utilizan para ilustrar y contrastar los lenguajes de coordinación, y la comparación es facilitada por el lenguaje computacional común. Un lenguaje perezoso no es una opción obvia para la computación paralela o distribuida, y abordamos la pregunta de por qué Haskell es un lenguaje de computación funcional común ",
            "error": []
        },
        "multiple processors": {
            "translated_key": "procesadores múltiples",
            "translated_annotated_text": "Paralelas y distribuidas Haskells Los lenguajes paralelos y distribuidos especifican los cálculos en \"procesadores múltiples\" y tienen un lenguaje de cálculo para describir el algoritmo, es decir. qué calcular, y un lenguaje de coordinación para describir cómo organizar los cálculos a través de los procesadores. Haskell se ha utilizado como lenguaje de computación para una amplia variedad de idiomas paralelos y distribuidos, y este documento es un estudio exhaustivo de los idiomas implementados. Delinea conceptos de lenguaje paralelos y distribuidos y clasifica las extensiones de Haskell usándolas. Programas de ejemplo similares se utilizan para ilustrar y contrastar los lenguajes de coordinación, y la comparación es facilitada por el lenguaje computacional común. Un lenguaje perezoso no es una opción obvia para la computación paralela o distribuida, y abordamos la pregunta de por qué Haskell es un lenguaje de computación funcional común ",
            "error": [
                ""
            ]
        },
        "coordination language": {
            "translated_key": "lenguaje de coordinación",
            "translated_annotated_text": "Paralelas y distribuidas Haskells Los lenguajes paralelos y distribuidos especifican los cálculos en múltiples procesadores y tienen un lenguaje de cálculo para describir el algoritmo, es decir. qué calcular, y un \"lenguaje de coordinación\" para describir cómo organizar los cálculos a través de los procesadores. Haskell se ha utilizado como lenguaje de computación para una amplia variedad de idiomas paralelos y distribuidos, y este documento es un estudio exhaustivo de los idiomas implementados. Delinea conceptos de lenguaje paralelos y distribuidos y clasifica las extensiones de Haskell usándolas. Programas de ejemplo similares se utilizan para ilustrar y contrastar los lenguajes de coordinación, y la comparación es facilitada por el lenguaje computacional común. Un lenguaje perezoso no es una opción obvia para la computación paralela o distribuida, y abordamos la pregunta de por qué Haskell es un lenguaje de computación funcional común ",
            "error": [
                ""
            ]
        },
        "functional programming": {
            "translated_key": [],
            "translated_annotated_text": "Paralelas y distribuidas Haskells Los lenguajes paralelos y distribuidos especifican los cálculos en múltiples procesadores y tienen un lenguaje de cálculo para describir el algoritmo, es decir. qué calcular, y un lenguaje de coordinación para describir cómo organizar los cálculos a través de los procesadores. Haskell se ha utilizado como lenguaje de computación para una amplia variedad de idiomas paralelos y distribuidos, y este documento es un estudio exhaustivo de los idiomas implementados. Delinea conceptos de lenguaje paralelos y distribuidos y clasifica las extensiones de Haskell usándolas. Programas de ejemplo similares se utilizan para ilustrar y contrastar los lenguajes de coordinación, y la comparación es facilitada por el lenguaje computacional común. Un lenguaje perezoso no es una opción obvia para la computación paralela o distribuida, y abordamos la pregunta de por qué Haskell es un lenguaje de computación funcional común ",
            "error": []
        },
        "lazy language": {
            "translated_key": "lenguaje perezoso",
            "translated_annotated_text": "Paralelas y distribuidas Haskells Los lenguajes paralelos y distribuidos especifican los cálculos en múltiples procesadores y tienen un lenguaje de cálculo para describir el algoritmo, es decir. qué calcular, y un lenguaje de coordinación para describir cómo organizar los cálculos a través de los procesadores. Haskell se ha utilizado como lenguaje de computación para una amplia variedad de idiomas paralelos y distribuidos, y este documento es un estudio exhaustivo de los idiomas implementados. Delinea conceptos de lenguaje paralelos y distribuidos y clasifica las extensiones de Haskell usándolas. Programas de ejemplo similares se utilizan para ilustrar y contrastar los lenguajes de coordinación, y la comparación es facilitada por el lenguaje computacional común. Un \"lenguaje perezoso\" no es una opción obvia para la computación paralela o distribuida, y abordamos la cuestión de por qué Haskell es un lenguaje de computación funcional común ",
            "error": [
                ""
            ]
        },
        "functional computation language": {
            "translated_key": "lenguaje de computación funcional",
            "translated_annotated_text": "Paralelas y distribuidas Haskells Los lenguajes paralelos y distribuidos especifican los cálculos en múltiples procesadores y tienen un lenguaje de cálculo para describir el algoritmo, es decir. qué calcular, y un lenguaje de coordinación para describir cómo organizar los cálculos a través de los procesadores. Haskell se ha utilizado como lenguaje de computación para una amplia variedad de idiomas paralelos y distribuidos, y este documento es un estudio exhaustivo de los idiomas implementados. Delinea conceptos de lenguaje paralelos y distribuidos y clasifica las extensiones de Haskell usándolas. Programas de ejemplo similares se utilizan para ilustrar y contrastar los lenguajes de coordinación, y la comparación es facilitada por el lenguaje computacional común. Un lenguaje perezoso no es una opción obvia para la computación paralela o distribuida, y abordamos la pregunta de por qué Haskell es un \"lenguaje de computación funcional\" común ",
            "error": [
                ""
            ]
        },
        "distributed programming": {
            "translated_key": [],
            "translated_annotated_text": "Paralelas y distribuidas Haskells Los lenguajes paralelos y distribuidos especifican los cálculos en múltiples procesadores y tienen un lenguaje de cálculo para describir el algoritmo, es decir. qué calcular, y un lenguaje de coordinación para describir cómo organizar los cálculos a través de los procesadores. Haskell se ha utilizado como lenguaje de computación para una amplia variedad de idiomas paralelos y distribuidos, y este documento es un estudio exhaustivo de los idiomas implementados. Delinea conceptos de lenguaje paralelos y distribuidos y clasifica las extensiones de Haskell usándolas. Programas de ejemplo similares se utilizan para ilustrar y contrastar los lenguajes de coordinación, y la comparación es facilitada por el lenguaje computacional común. Un lenguaje perezoso no es una opción obvia para la computación paralela o distribuida, y abordamos la pregunta de por qué Haskell es un lenguaje de computación funcional común ",
            "error": []
        },
        "functional languages": {
            "translated_key": [],
            "translated_annotated_text": "Paralelas y distribuidas Haskells Los lenguajes paralelos y distribuidos especifican los cálculos en múltiples procesadores y tienen un lenguaje de cálculo para describir el algoritmo, es decir. qué calcular, y un lenguaje de coordinación para describir cómo organizar los cálculos a través de los procesadores. Haskell se ha utilizado como lenguaje de computación para una amplia variedad de idiomas paralelos y distribuidos, y este documento es un estudio exhaustivo de los idiomas implementados. Delinea conceptos de lenguaje paralelos y distribuidos y clasifica las extensiones de Haskell usándolas. Programas de ejemplo similares se utilizan para ilustrar y contrastar los lenguajes de coordinación, y la comparación es facilitada por el lenguaje computacional común. Un lenguaje perezoso no es una opción obvia para la computación paralela o distribuida, y abordamos la pregunta de por qué Haskell es un lenguaje de computación funcional común ",
            "error": []
        },
        "parallel programming": {
            "translated_key": [],
            "translated_annotated_text": "Paralelas y distribuidas Haskells Los lenguajes paralelos y distribuidos especifican los cálculos en múltiples procesadores y tienen un lenguaje de cálculo para describir el algoritmo, es decir. qué calcular, y un lenguaje de coordinación para describir cómo organizar los cálculos a través de los procesadores. Haskell se ha utilizado como lenguaje de computación para una amplia variedad de idiomas paralelos y distribuidos, y este documento es un estudio exhaustivo de los idiomas implementados. Delinea conceptos de lenguaje paralelos y distribuidos y clasifica las extensiones de Haskell usándolas. Programas de ejemplo similares se utilizan para ilustrar y contrastar los lenguajes de coordinación, y la comparación es facilitada por el lenguaje computacional común. Un lenguaje perezoso no es una opción obvia para la computación paralela o distribuida, y abordamos la pregunta de por qué Haskell es un lenguaje de computación funcional común ",
            "error": []
        }
    }
}