{
    "original_text": "UPSILON: universal programming system with incomplete lazy object notation This paper presents a new model of computation that differs from prior models in that it emphasizes data over flow control, has no named variables and has an object-oriented flavor. We prove that this model is a complete and confluent acceptable programming system and has a usable type theory. A new data synchronization primitive is introduced in order to achieve the above properties. Subtle variations of the model are shown to fall short of having all these necessary properties",
    "original_translation": "UPILON: sistema de programación universal con notación incompleta de objetos perezosos Este artículo presenta un nuevo modelo de cálculo que difiere de modelos anteriores en que enfatiza los datos sobre el control de flujo, no tiene variables nombradas y tiene un sabor orientado a objetos. Demostramos que este modelo es un sistema de programación completo y confluente aceptable y tiene una teoría de tipo utilizable. Se introduce una nueva sincronización de datos primitiva con el fin de lograr las propiedades anteriores. Se muestra que las variaciones sutiles del modelo no alcanzan a tener todas estas propiedades necesarias",
    "error_count": 3,
    "keys": {
        "UPSILON": {
            "translated_key": "UPSILON",
            "translated_annotated_text": "<br>UPSILON</br>: sistema de programación universal con notación incompleta de objetos perezosos Este artículo presenta un nuevo modelo de cálculo que difiere de modelos anteriores en que enfatiza los datos sobre el control de flujo, no tiene variables nombradas y tiene un sabor orientado a objetos. Demostramos que este modelo es un sistema de programación completo y confluente aceptable y tiene una teoría de tipo utilizable. Se introduce una nueva sincronización de datos primitiva con el fin de lograr las propiedades anteriores. Se muestra que las variaciones sutiles del modelo no alcanzan a tener todas estas propiedades necesarias ",
            "error": [
                ""
            ]
        },
        "universal programming system": {
            "translated_key": "universal programming system",
            "translated_annotated_text": "UPILON: <br>universal programming system</br> con notación incompleta de objetos perezosos Este artículo presenta un nuevo modelo de cálculo que difiere de modelos anteriores en que enfatiza los datos sobre el control de flujo, no tiene variables nombradas y tiene un sabor orientado a objetos. Demostramos que este modelo es un sistema de programación completo y confluente aceptable y tiene una teoría de tipo utilizable. Se introduce una nueva sincronización de datos primitiva con el fin de lograr las propiedades anteriores. Se muestra que las variaciones sutiles del modelo no alcanzan a tener todas estas propiedades necesarias ",
            "error": [
                ""
            ]
        },
        "object-oriented flavor": {
            "translated_key": "objeto",
            "translated_annotated_text": "UPILON: sistema de programación universal con notación incompleta de objetos perezosos Este artículo presenta un nuevo modelo de cálculo que difiere de modelos anteriores en que enfatiza los datos sobre el control de flujo, no tiene variables nombradas y tiene un sabor orientado a <br>objeto</br>. Demostramos que este modelo es un sistema de programación completo y confluente aceptable y tiene una teoría de tipo utilizable. Se introduce una nueva sincronización de datos primitiva con el fin de lograr las propiedades anteriores. Se muestra que las variaciones sutiles del modelo no alcanzan a tener todas estas propiedades necesarias ",
            "error": [
                ""
            ]
        },
        "programming system": {
            "translated_key": [],
            "translated_annotated_text": "UPILON: sistema de programación universal <br> con notación incompleta de objetos perezosos Este artículo presenta un nuevo modelo de cálculo que difiere de modelos anteriores en que enfatiza los datos sobre el control de flujo, no tiene variables nombradas y tiene un sabor orientado a objetos. Demostramos que este modelo es un completo y confluente sistema de programación aceptable <br> y tiene una teoría de tipo utilizable. Se introduce una nueva sincronización de datos primitiva con el fin de lograr las propiedades anteriores. Se muestra que las variaciones sutiles del modelo no alcanzan a tener todas estas propiedades necesarias ",
            "error": []
        },
        "usable type theory": {
            "translated_key": "usable",
            "translated_annotated_text": "UPILON: sistema de programación universal con notación incompleta de objetos perezosos Este artículo presenta un nuevo modelo de cálculo que difiere de modelos anteriores en que enfatiza los datos sobre el control de flujo, no tiene variables nombradas y tiene un sabor orientado a objetos. Demostramos que este modelo es un sistema de programación completo y confluente aceptable y tiene una teoría de tipo <br>usable</br>. Se introduce una nueva sincronización de datos primitiva con el fin de lograr las propiedades anteriores. Se muestra que las variaciones sutiles del modelo no alcanzan a tener todas estas propiedades necesarias ",
            "error": [
                ""
            ]
        },
        "data synchronization primitive": {
            "translated_key": "data primitive",
            "translated_annotated_text": "UPILON: sistema de programación universal con notación incompleta de objetos perezosos Este artículo presenta un nuevo modelo de cálculo que difiere de modelos anteriores en que enfatiza los datos sobre el control de flujo, no tiene variables nombradas y tiene un sabor orientado a objetos. Demostramos que este modelo es un sistema de programación completo y confluente aceptable y tiene una teoría de tipo utilizable. Se introduce una nueva sincronización <br>data primitive</br> para lograr las propiedades anteriores. Se muestra que las variaciones sutiles del modelo no alcanzan a tener todas estas propiedades necesarias ",
            "error": [
                ""
            ]
        },
        "incomplete lazy object notation": {
            "translated_key": "notación incompleta de objetos perezosos",
            "translated_annotated_text": "UPILON: sistema de programación universal con <br>notación incompleta de objetos perezosos</br> Este artículo presenta un nuevo modelo de cálculo que difiere de modelos anteriores en que enfatiza los datos sobre el control de flujo, no tiene variables nombradas y tiene un sabor orientado a objetos.  Demostramos que este modelo es un sistema de programación completo y confluente aceptable y tiene una teoría de tipo utilizable. Se introduce una nueva sincronización de datos primitiva con el fin de lograr las propiedades anteriores. Se muestra que las variaciones sutiles del modelo no alcanzan a tener todas estas propiedades necesarias ",
            "error": [
                ""
            ]
        },
        "computational complexity": {
            "translated_key": [],
            "translated_annotated_text": "UPILON: sistema de programación universal con notación incompleta de objetos perezosos Este artículo presenta un nuevo modelo de cálculo que difiere de modelos anteriores en que enfatiza los datos sobre el control de flujo, no tiene variables nombradas y tiene un sabor orientado a objetos. Demostramos que este modelo es un sistema de programación completo y confluente aceptable y tiene una teoría de tipo utilizable. Se introduce una nueva sincronización de datos primitiva con el fin de lograr las propiedades anteriores. Se muestra que las variaciones sutiles del modelo no alcanzan a tener todas estas propiedades necesarias ",
            "error": []
        },
        "object-oriented programming": {
            "translated_key": [],
            "translated_annotated_text": "UPILON: sistema de programación universal con notación incompleta de objetos perezosos Este artículo presenta un nuevo modelo de cálculo que difiere de modelos anteriores en que enfatiza los datos sobre el control de flujo, no tiene variables nombradas y tiene un sabor orientado a objetos. Demostramos que este modelo es un sistema de programación completo y confluente aceptable y tiene una teoría de tipo utilizable. Se introduce una nueva sincronización de datos primitiva con el fin de lograr las propiedades anteriores. Se muestra que las variaciones sutiles del modelo no alcanzan a tener todas estas propiedades necesarias ",
            "error": []
        },
        "type theory": {
            "translated_key": " utilizable",
            "translated_annotated_text": "UPILON: sistema de programación universal con notación incompleta de objetos perezosos Este artículo presenta un nuevo modelo de cálculo que difiere de modelos anteriores en que enfatiza los datos sobre el control de flujo, no tiene variables nombradas y tiene un sabor orientado a objetos. Demostramos que este modelo es un sistema de programación completo y confluente aceptable y tiene una teoría de tipo <br> utilizable</br>. Se introduce una nueva sincronización de datos primitiva con el fin de lograr las propiedades anteriores. Se muestra que las variaciones sutiles del modelo no alcanzan a tener todas estas propiedades necesarias ",
            "error": [
                ""
            ]
        }
    }
}