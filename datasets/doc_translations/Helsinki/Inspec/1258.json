{
    "original_text": "Implementation and performance evaluation of a FIFO queue class library for time warp The authors describe the implementation, use, and performance evaluation of a FIFO queue class library by means of a high-performance, easy-to-use interface employed for queuing simulations in parallel discrete simulations based on the time warp method. Various general-purpose simulation libraries and languages have been proposed, and among these some have the advantage of not requiring users to define anything other than the state vector, and not needing awareness of rollback under a platform which performs state control based on copies. However, because the state vectors must be defined as simple data structures without pointers, dynamic data structures such as a FIFO queue cannot be handled directly. Under the proposed class library, both the platform and the user can handle such structures in the same fashion that embedded data structures are handled. In addition, instead of all stored data, just the operational history can be stored and recovered efficiently at an effectively minimal cost by taking advantage of the first-in-first-out characteristics of the above data structures. When the kernel deletes past state histories during a simulation, garbage collection is also performed transparently using the corresponding method",
    "original_translation": "Implementación y evaluación del rendimiento de una biblioteca de colas FIFO para la deformación del tiempo Los autores describen la implementación, uso y evaluación del rendimiento de una biblioteca de colas FIFO mediante una interfaz de alto rendimiento y fácil de usar empleada para simulaciones de cola en simulaciones discretas paralelas basadas en el método de deformación del tiempo. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores de estado deben definirse como estructuras de datos simples sin punteros, las estructuras de datos dinámicas como una cola de FIFO no pueden ser manejadas directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar estas estructuras de la misma manera que se manejan las estructuras de datos integradas. Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características de primera en primera salida de las estructuras de datos anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente",
    "error_count": 13,
    "keys": {
        "FIFO queue": {
            "translated_key": [
                "FiFO cola",
                "FIFO cola",
                "cola FIFO"
            ],
            "translated_annotated_text": "Implementación y evaluación del rendimiento de una biblioteca de clase \"FiFO cola\" para la deformación del tiempo Los autores describen la implementación, uso y evaluación del rendimiento de una biblioteca de clase \"FIFO cola\" mediante una interfaz de alto rendimiento y fácil de usar empleada para simulaciones de cola en simulaciones discretas paralelas basadas en el método de deformación del tiempo. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores de estado deben ser definidos como estructuras de datos simples sin punteros, estructuras de datos dinámicas como una \"cola FIFO\" no pueden ser manejadas directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar estas estructuras de la misma manera que se manejan las estructuras de datos integradas. Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características de primera en primera salida de las estructuras de datos anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente ",
            "error": [
                "FiFO cola",
                "FIFO cola",
                "cola FIFO"
            ]
        },
        "class library": {
            "translated_key": "biblioteca de clase",
            "translated_annotated_text": "Implementación y evaluación del rendimiento de una \"biblioteca de clase\" FIFO para la deformación del tiempo Los autores describen la implementación, el uso y la evaluación del rendimiento de una \"biblioteca de clase\" FIFO mediante una interfaz de alto rendimiento y fácil de usar empleada para simulaciones de cola en simulaciones discretas paralelas basadas en el método de deformación del tiempo. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores de estado deben definirse como estructuras de datos simples sin punteros, las estructuras de datos dinámicas como una cola de FIFO no pueden ser manejadas directamente. Bajo la \"biblioteca de clase\" propuesta, tanto la plataforma como el usuario pueden manejar tales estructuras de la misma manera que se manejan las estructuras de datos incrustadas. Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características de primera en primera salida de las estructuras de datos anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente ",
            "error": [
                ""
            ]
        },
        "time warp simulation": {
            "translated_key": [],
            "translated_annotated_text": "Implementación y evaluación del rendimiento de una biblioteca de colas FIFO para la deformación del tiempo Los autores describen la implementación, uso y evaluación del rendimiento de una biblioteca de colas FIFO mediante una interfaz de alto rendimiento y fácil de usar empleada para simulaciones de cola en simulaciones discretas paralelas basadas en el método de deformación del tiempo. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores de estado deben definirse como estructuras de datos simples sin punteros, las estructuras de datos dinámicas como una cola de FIFO no pueden ser manejadas directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar estas estructuras de la misma manera que se manejan las estructuras de datos integradas. Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características de primera en primera salida de las estructuras de datos anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente ",
            "error": []
        },
        "performance evaluation": {
            "translated_key": [
                "evaluación de rendimiento",
                "evaluación del rendimiento"
            ],
            "translated_annotated_text": "Implementación y \"evaluación de rendimiento\" de una biblioteca de colas FIFO para la deformación del tiempo Los autores describen la implementación, el uso y la \"evaluación del rendimiento\" de una biblioteca de colas FIFO mediante una interfaz de alto rendimiento y fácil de usar empleada para simulaciones de cola en simulaciones discretas paralelas basadas en el método de deformación del tiempo. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores de estado deben definirse como estructuras de datos simples sin punteros, las estructuras de datos dinámicas como una cola de FIFO no pueden ser manejadas directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar estas estructuras de la misma manera que se manejan las estructuras de datos integradas. Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características de primera en primera salida de las estructuras de datos anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente ",
            "error": [
                "evaluación de rendimiento",
                "evaluación del rendimiento"
            ]
        },
        "easy-to-use interface": {
            "translated_key": "interfaz fácil de usar",
            "translated_annotated_text": "Implementación y evaluación del rendimiento de una biblioteca de colas FIFO para la deformación del tiempo Los autores describen la implementación, uso y evaluación del rendimiento de una biblioteca de colas FIFO mediante una \"interfaz fácil de usar\" de alto rendimiento empleada para simulaciones de cola en simulaciones discretas paralelas basadas en el método de deformación del tiempo. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores de estado deben definirse como estructuras de datos simples sin punteros, las estructuras de datos dinámicas como una cola de FIFO no pueden ser manejadas directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar estas estructuras de la misma manera que se manejan las estructuras de datos integradas. Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características de primera en primera salida de las estructuras de datos anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente ",
            "error": [
                ""
            ]
        },
        "queuing simulations": {
            "translated_key": " simulaciones de cola",
            "translated_annotated_text": "Implementación y evaluación del rendimiento de una biblioteca de colas FIFO para la deformación del tiempo Los autores describen la implementación, el uso y la evaluación del rendimiento de una biblioteca de colas FIFO mediante una interfaz de alto rendimiento y fácil de usar empleada para \" simulaciones de cola\" en simulaciones discretas paralelas basadas en el método de deformación del tiempo. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores de estado deben definirse como estructuras de datos simples sin punteros, las estructuras de datos dinámicas como una cola de FIFO no pueden ser manejadas directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar estas estructuras de la misma manera que se manejan las estructuras de datos integradas. Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características de primera en primera salida de las estructuras de datos anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente ",
            "error": [
                ""
            ]
        },
        "parallel discrete simulations": {
            "translated_key": " simulaciones discretas paralelas",
            "translated_annotated_text": "Implementación y evaluación del rendimiento de una biblioteca de colas FIFO para la deformación del tiempo Los autores describen la implementación, uso y evaluación del rendimiento de una biblioteca de colas FIFO mediante una interfaz de alto rendimiento y fácil de usar empleada para simulaciones de cola en \" simulaciones discretas paralelas\" basadas en el método de warp temporal. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores de estado deben definirse como estructuras de datos simples sin punteros, las estructuras de datos dinámicas como una cola de FIFO no pueden ser manejadas directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar estas estructuras de la misma manera que se manejan las estructuras de datos integradas. Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características de primera en primera salida de las estructuras de datos anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente ",
            "error": [
                ""
            ]
        },
        "general-purpose simulation libraries": {
            "translated_key": "bibliotecas de simulación de propósito general",
            "translated_annotated_text": "Implementación y evaluación del rendimiento de una biblioteca de colas FIFO para la deformación del tiempo Los autores describen la implementación, uso y evaluación del rendimiento de una biblioteca de colas FIFO mediante una interfaz de alto rendimiento y fácil de usar empleada para simulaciones de cola en simulaciones discretas paralelas basadas en el método de deformación del tiempo. Se han propuesto varias \"bibliotecas de simulación de propósito general\" y lenguajes, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores de estado deben definirse como estructuras de datos simples sin punteros, las estructuras de datos dinámicas como una cola de FIFO no pueden ser manejadas directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar estas estructuras de la misma manera que se manejan las estructuras de datos integradas. Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características de primera en primera salida de las estructuras de datos anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente ",
            "error": [
                ""
            ]
        },
        "simulation languages": {
            "translated_key": [],
            "translated_annotated_text": "Implementación y evaluación del rendimiento de una biblioteca de colas FIFO para la deformación del tiempo Los autores describen la implementación, uso y evaluación del rendimiento de una biblioteca de colas FIFO mediante una interfaz de alto rendimiento y fácil de usar empleada para simulaciones de cola en simulaciones discretas paralelas basadas en el método de deformación del tiempo. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores de estado deben definirse como estructuras de datos simples sin punteros, las estructuras de datos dinámicas como una cola de FIFO no pueden ser manejadas directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar estas estructuras de la misma manera que se manejan las estructuras de datos integradas. Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características de primera en primera salida de las estructuras de datos anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente ",
            "error": []
        },
        "state vectors": {
            "translated_key": "vectores de estado",
            "translated_annotated_text": "Implementación y evaluación del rendimiento de una biblioteca de colas FIFO para la deformación del tiempo Los autores describen la implementación, uso y evaluación del rendimiento de una biblioteca de colas FIFO mediante una interfaz de alto rendimiento y fácil de usar empleada para simulaciones de cola en simulaciones discretas paralelas basadas en el método de deformación del tiempo. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los \"vectores de estado\" deben definirse como estructuras de datos simples sin punteros, las estructuras de datos dinámicas como una cola de FIFO no pueden ser manejadas directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar estas estructuras de la misma manera que se manejan las estructuras de datos integradas. Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características de primera en primera salida de las estructuras de datos anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente ",
            "error": [
                ""
            ]
        },
        "dynamic data structures": {
            "translated_key": "estructuras de datos dinámicas",
            "translated_annotated_text": "Implementación y evaluación del rendimiento de una biblioteca de colas FIFO para la deformación del tiempo Los autores describen la implementación, uso y evaluación del rendimiento de una biblioteca de colas FIFO mediante una interfaz de alto rendimiento y fácil de usar empleada para simulaciones de cola en simulaciones discretas paralelas basadas en el método de deformación del tiempo. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores de estado deben definirse como estructuras de datos simples sin punteros, \"estructuras de datos dinámicas\" como una cola de FIFO no pueden ser manejadas directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar estas estructuras de la misma manera que se manejan las estructuras de datos integradas. Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características de primera en primera salida de las estructuras de datos anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente ",
            "error": [
                ""
            ]
        },
        "embedded data structures": {
            "translated_key": "estructuras de datos incrustadas",
            "translated_annotated_text": "Implementación y evaluación del rendimiento de una biblioteca de colas FIFO para la deformación del tiempo Los autores describen la implementación, uso y evaluación del rendimiento de una biblioteca de colas FIFO mediante una interfaz de alto rendimiento y fácil de usar empleada para simulaciones de cola en simulaciones discretas paralelas basadas en el método de deformación del tiempo. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores de estado deben definirse como estructuras de datos simples sin punteros, las estructuras de datos dinámicas como una cola de FIFO no pueden ser manejadas directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar tales estructuras de la misma manera que se manejan \"estructuras de datos incrustadas\". Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características de primera en primera salida de las estructuras de datos anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente ",
            "error": [
                ""
            ]
        },
        "operational history": {
            "translated_key": "historial operativo",
            "translated_annotated_text": "Implementación y evaluación del rendimiento de una biblioteca de colas FIFO para la deformación del tiempo Los autores describen la implementación, uso y evaluación del rendimiento de una biblioteca de colas FIFO mediante una interfaz de alto rendimiento y fácil de usar empleada para simulaciones de cola en simulaciones discretas paralelas basadas en el método de deformación del tiempo. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores de estado deben definirse como estructuras de datos simples sin punteros, las estructuras de datos dinámicas como una cola de FIFO no pueden ser manejadas directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar estas estructuras de la misma manera que se manejan las estructuras de datos integradas. Además, en lugar de todos los datos almacenados, sólo el \"historial operativo\" se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características de primera en primera salida de las estructuras de datos anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente ",
            "error": [
                ""
            ]
        },
        "first-in-first-out characteristics": {
            "translated_key": "características de primer en primer lugar",
            "translated_annotated_text": "Implementación y evaluación del rendimiento de una biblioteca de colas FIFO para la deformación del tiempo Los autores describen la implementación, uso y evaluación del rendimiento de una biblioteca de colas FIFO mediante una interfaz de alto rendimiento y fácil de usar empleada para simulaciones de cola en simulaciones discretas paralelas basadas en el método de deformación del tiempo. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores de estado deben definirse como estructuras de datos simples sin punteros, las estructuras de datos dinámicas como una cola de FIFO no pueden ser manejadas directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar estas estructuras de la misma manera que se manejan las estructuras de datos integradas. Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las \"características de primer en primer lugar\" de las estructuras de datos anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente ",
            "error": [
                ""
            ]
        },
        "garbage collection": {
            "translated_key": "recogida de basura",
            "translated_annotated_text": "Implementación y evaluación del rendimiento de una biblioteca de colas FIFO para la deformación del tiempo Los autores describen la implementación, uso y evaluación del rendimiento de una biblioteca de colas FIFO mediante una interfaz de alto rendimiento y fácil de usar empleada para simulaciones de cola en simulaciones discretas paralelas basadas en el método de deformación del tiempo. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores de estado deben definirse como estructuras de datos simples sin punteros, las estructuras de datos dinámicas como una cola de FIFO no pueden ser manejadas directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar estas estructuras de la misma manera que se manejan las estructuras de datos integradas. Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características de primera en primera salida de las estructuras de datos anteriores. Cuando el kernel borra historias de estado pasadas durante una simulación, la \"recogida de basura\" también se realiza de forma transparente utilizando el método correspondiente ",
            "error": [
                ""
            ]
        },
        "object oriented method": {
            "translated_key": [],
            "translated_annotated_text": "Implementación y evaluación del rendimiento de una biblioteca de colas FIFO para la deformación del tiempo Los autores describen la implementación, uso y evaluación del rendimiento de una biblioteca de colas FIFO mediante una interfaz de alto rendimiento y fácil de usar empleada para simulaciones de cola en simulaciones discretas paralelas basadas en el método de deformación del tiempo. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores de estado deben definirse como estructuras de datos simples sin punteros, las estructuras de datos dinámicas como una cola de FIFO no pueden ser manejadas directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar estas estructuras de la misma manera que se manejan las estructuras de datos integradas. Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características de primera en primera salida de las estructuras de datos anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente ",
            "error": []
        },
        "state management": {
            "translated_key": [],
            "translated_annotated_text": "Implementación y evaluación del rendimiento de una biblioteca de colas FIFO para la deformación del tiempo Los autores describen la implementación, uso y evaluación del rendimiento de una biblioteca de colas FIFO mediante una interfaz de alto rendimiento y fácil de usar empleada para simulaciones de cola en simulaciones discretas paralelas basadas en el método de deformación del tiempo. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores de estado deben definirse como estructuras de datos simples sin punteros, las estructuras de datos dinámicas como una cola de FIFO no pueden ser manejadas directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar estas estructuras de la misma manera que se manejan las estructuras de datos integradas. Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características de primera en primera salida de las estructuras de datos anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente ",
            "error": []
        },
        "data structures": {
            "translated_key": "estructuras de datos",
            "translated_annotated_text": "Implementación y evaluación del rendimiento de una biblioteca de colas FIFO para la deformación del tiempo Los autores describen la implementación, uso y evaluación del rendimiento de una biblioteca de colas FIFO mediante una interfaz de alto rendimiento y fácil de usar empleada para simulaciones de cola en simulaciones discretas paralelas basadas en el método de deformación del tiempo. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores de estado deben definirse como simples \"estructuras de datos\" sin punteros, las \"estructuras de datos\" dinámicas como una cola de FIFO no pueden ser manejadas directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar tales estructuras de la misma manera que se manejan las \"estructuras de datos\" integradas. Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características de primera en primera salida de las \"estructuras de datos\" anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente ",
            "error": [
                ""
            ]
        },
        "object-oriented programming": {
            "translated_key": [],
            "translated_annotated_text": "Implementación y evaluación del rendimiento de una biblioteca de colas FIFO para la deformación del tiempo Los autores describen la implementación, uso y evaluación del rendimiento de una biblioteca de colas FIFO mediante una interfaz de alto rendimiento y fácil de usar empleada para simulaciones de cola en simulaciones discretas paralelas basadas en el método de deformación del tiempo. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores de estado deben definirse como estructuras de datos simples sin punteros, las estructuras de datos dinámicas como una cola de FIFO no pueden ser manejadas directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar estas estructuras de la misma manera que se manejan las estructuras de datos integradas. Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características de primera en primera salida de las estructuras de datos anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente ",
            "error": []
        },
        "queueing theory": {
            "translated_key": [],
            "translated_annotated_text": "Implementación y evaluación del rendimiento de una biblioteca de colas FIFO para la deformación del tiempo Los autores describen la implementación, uso y evaluación del rendimiento de una biblioteca de colas FIFO mediante una interfaz de alto rendimiento y fácil de usar empleada para simulaciones de cola en simulaciones discretas paralelas basadas en el método de deformación del tiempo. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores de estado deben definirse como estructuras de datos simples sin punteros, las estructuras de datos dinámicas como una cola de FIFO no pueden ser manejadas directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar estas estructuras de la misma manera que se manejan las estructuras de datos integradas. Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características de primera en primera salida de las estructuras de datos anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente ",
            "error": []
        },
        "software libraries": {
            "translated_key": [],
            "translated_annotated_text": "Implementación y evaluación del rendimiento de una biblioteca de colas FIFO para la deformación del tiempo Los autores describen la implementación, uso y evaluación del rendimiento de una biblioteca de colas FIFO mediante una interfaz de alto rendimiento y fácil de usar empleada para simulaciones de cola en simulaciones discretas paralelas basadas en el método de deformación del tiempo. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores de estado deben definirse como estructuras de datos simples sin punteros, las estructuras de datos dinámicas como una cola de FIFO no pueden ser manejadas directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar estas estructuras de la misma manera que se manejan las estructuras de datos integradas. Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características de primera en primera salida de las estructuras de datos anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente ",
            "error": []
        },
        "software performance evaluation": {
            "translated_key": [],
            "translated_annotated_text": "Implementación y evaluación del rendimiento de una biblioteca de colas FIFO para la deformación del tiempo Los autores describen la implementación, uso y evaluación del rendimiento de una biblioteca de colas FIFO mediante una interfaz de alto rendimiento y fácil de usar empleada para simulaciones de cola en simulaciones discretas paralelas basadas en el método de deformación del tiempo. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores de estado deben definirse como estructuras de datos simples sin punteros, las estructuras de datos dinámicas como una cola de FIFO no pueden ser manejadas directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar estas estructuras de la misma manera que se manejan las estructuras de datos integradas. Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características de primera en primera salida de las estructuras de datos anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente ",
            "error": []
        },
        "storage management": {
            "translated_key": [],
            "translated_annotated_text": "Implementación y evaluación del rendimiento de una biblioteca de colas FIFO para la deformación del tiempo Los autores describen la implementación, uso y evaluación del rendimiento de una biblioteca de colas FIFO mediante una interfaz de alto rendimiento y fácil de usar empleada para simulaciones de cola en simulaciones discretas paralelas basadas en el método de deformación del tiempo. Se han propuesto varias bibliotecas y lenguajes de simulación de propósito general, y entre ellos algunos tienen la ventaja de no exigir a los usuarios que definan nada más que el vector de estado, y no necesitan conocimiento de la reversión bajo una plataforma que realiza el control estatal basado en copias. Sin embargo, debido a que los vectores de estado deben definirse como estructuras de datos simples sin punteros, las estructuras de datos dinámicas como una cola de FIFO no pueden ser manejadas directamente. Bajo la biblioteca de clases propuesta, tanto la plataforma como el usuario pueden manejar estas estructuras de la misma manera que se manejan las estructuras de datos integradas. Además, en lugar de todos los datos almacenados, sólo el historial operativo se puede almacenar y recuperar de manera eficiente a un costo efectivamente mínimo aprovechando las características de primera en primera salida de las estructuras de datos anteriores. Cuando el núcleo elimina historias de estado pasadas durante una simulación, la recolección de basura también se realiza de forma transparente utilizando el método correspondiente ",
            "error": []
        }
    }
}