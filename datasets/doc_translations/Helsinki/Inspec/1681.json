{
    "original_text": "One and two facility network design revisited The one facility one commodity network design problem (OFOC) with nonnegative flow costs considers the problem of sending d units of flow from a source to a destination where arc capacity is purchased in batches of C units. The two facility problem (TFOC) is similar, but capacity can be purchased either in batches of C units or one unit. Flow costs are zero. These problems are known to be NP-hard. We describe an exact O(n/sup 3/3/sup n/) algorithm for these problems based on the repeated use of a bipartite matching algorithm. We also present a better lower bound of Omega (n/sup 2k*/) for an earlier Omega (n/sup 2k/) algorithm described in the literature where k = [d/C] and k* = min{k, [(n 2)/2]}. The matching algorithm is faster than this one for k >or= [(n - 2)/2]. Finally, we provide another reformulation of the problem that is quasi integral. This property could be useful in designing a modified version of the simplex method to solve the problem using a sequence of pivots with integer extreme solutions, referred to as the integral simplex method in the literature",
    "original_translation": "Revisó el diseño de la red de una y dos instalaciones La única instalación que presenta un problema de diseño de la red de productos básicos (OFOC) con costos de flujo no negativos considera el problema de enviar d unidades de flujo de una fuente a un destino en el que la capacidad de arco se compra en lotes de unidades C. El problema de las dos instalaciones (TFOC) es similar, pero la capacidad puede adquirirse en lotes de unidades C o en una unidad. Los costos de flujo son cero. Estos problemas son conocidos por ser NP-duros. Describimos un algoritmo exacto de O(n/sup 3/3/sup n/) para estos problemas basado en el uso repetido de un algoritmo de coincidencia bipartito. También presentamos un mejor límite inferior de Omega (n/sup 2k*/) para un algoritmo Omega anterior (n/sup 2k/) descrito en la literatura donde k = [d/C] y k* = min{k, [(n 2)/2]}. El algoritmo de coincidencia es más rápido que éste para k > o= [(n - 2)/2]. Por último, ofrecemos otra reformulación del problema que es casi integral. Esta propiedad podría ser útil en el diseño de una versión modificada del método simplex para resolver el problema utilizando una secuencia de pivotes con soluciones extremas enteras, conocido como el método integral simplex en la literatura",
    "error_count": 7,
    "keys": {
        "one facility one commodity network design problem": {
            "translated_key": "una instalación un problema de diseño de red de productos básicos",
            "translated_annotated_text": "Revisó el diseño de una y dos instalaciones de red La \"una instalación un problema de diseño de red de productos básicos\" (OFOC) con costos de flujo no negativos considera el problema de enviar d unidades de flujo de una fuente a un destino donde la capacidad de arco se compra en lotes de unidades C. El problema de las dos instalaciones (TFOC) es similar, pero la capacidad puede adquirirse en lotes de unidades C o en una unidad. Los costos de flujo son cero. Estos problemas son conocidos por ser NP-duros. Describimos un algoritmo exacto de O(n/sup 3/3/sup n/) para estos problemas basado en el uso repetido de un algoritmo de coincidencia bipartito. También presentamos un mejor límite inferior de Omega (n/sup 2k*/) para un algoritmo Omega anterior (n/sup 2k/) descrito en la literatura donde k = [d/C] y k* = min{k, [(n 2)/2]}. El algoritmo de coincidencia es más rápido que éste para k > o= [(n - 2)/2]. Por último, ofrecemos otra reformulación del problema que es casi integral. Esta propiedad podría ser útil en el diseño de una versión modificada del método simplex para resolver el problema utilizando una secuencia de pivotes con soluciones extremas enteras, conocido como el método integral simplex en la literatura ",
            "error": [
                ""
            ]
        },
        "two facility network design": {
            "translated_key": "dos instalaciones de diseño de red",
            "translated_annotated_text": "Una y \"dos instalaciones de diseño de red\" revisitado La única instalación un problema de diseño de red de productos básicos (OFOC) con costos de flujo no negativos considera el problema de enviar d unidades de flujo de una fuente a un destino donde la capacidad de arco se compra en lotes de unidades C. El problema de las dos instalaciones (TFOC) es similar, pero la capacidad puede adquirirse en lotes de unidades C o en una unidad. Los costos de flujo son cero. Estos problemas son conocidos por ser NP-duros. Describimos un algoritmo exacto de O(n/sup 3/3/sup n/) para estos problemas basado en el uso repetido de un algoritmo de coincidencia bipartito. También presentamos un mejor límite inferior de Omega (n/sup 2k*/) para un algoritmo Omega anterior (n/sup 2k/) descrito en la literatura donde k = [d/C] y k* = min{k, [(n 2)/2]}. El algoritmo de coincidencia es más rápido que éste para k > o= [(n - 2)/2]. Por último, ofrecemos otra reformulación del problema que es casi integral. Esta propiedad podría ser útil en el diseño de una versión modificada del método simplex para resolver el problema utilizando una secuencia de pivotes con soluciones extremas enteras, conocido como el método integral simplex en la literatura ",
            "error": [
                ""
            ]
        },
        "nonnegative flow costs": {
            "translated_key": "costos de flujo no negativos",
            "translated_annotated_text": "Revisó el diseño de la red de una y dos instalaciones El único problema de diseño de la red de productos básicos (OFOC) con \"costos de flujo no negativos\" considera el problema de enviar d unidades de flujo de una fuente a un destino donde la capacidad de arco se compra en lotes de unidades C. El problema de las dos instalaciones (TFOC) es similar, pero la capacidad puede adquirirse en lotes de unidades C o en una unidad. Los costos de flujo son cero. Estos problemas son conocidos por ser NP-duros. Describimos un algoritmo exacto de O(n/sup 3/3/sup n/) para estos problemas basado en el uso repetido de un algoritmo de coincidencia bipartito. También presentamos un mejor límite inferior de Omega (n/sup 2k*/) para un algoritmo Omega anterior (n/sup 2k/) descrito en la literatura donde k = [d/C] y k* = min{k, [(n 2)/2]}. El algoritmo de coincidencia es más rápido que éste para k > o= [(n - 2)/2]. Por último, ofrecemos otra reformulación del problema que es casi integral. Esta propiedad podría ser útil en el diseño de una versión modificada del método simplex para resolver el problema utilizando una secuencia de pivotes con soluciones extremas enteras, conocido como el método integral simplex en la literatura ",
            "error": [
                ""
            ]
        },
        "flow costs": {
            "translated_key": "costes de flujo",
            "translated_annotated_text": "Revisó el diseño de la red de una y dos instalaciones El único problema de diseño de la red de productos básicos (OFOC) con \"costes de flujo\" no negativos considera el problema de enviar d unidades de flujo de una fuente a un destino donde la capacidad de arco se compra en lotes de unidades C. El problema de las dos instalaciones (TFOC) es similar, pero la capacidad puede adquirirse en lotes de unidades C o en una unidad. Los costos de flujo son cero. Estos problemas son conocidos por ser NP-duros. Describimos un algoritmo exacto de O(n/sup 3/3/sup n/) para estos problemas basado en el uso repetido de un algoritmo de coincidencia bipartito. También presentamos un mejor límite inferior de Omega (n/sup 2k*/) para un algoritmo Omega anterior (n/sup 2k/) descrito en la literatura donde k = [d/C] y k* = min{k, [(n 2)/2]}. El algoritmo de coincidencia es más rápido que éste para k > o= [(n - 2)/2]. Por último, ofrecemos otra reformulación del problema que es casi integral. Esta propiedad podría ser útil en el diseño de una versión modificada del método simplex para resolver el problema utilizando una secuencia de pivotes con soluciones extremas enteras, conocido como el método integral simplex en la literatura ",
            "error": [
                ""
            ]
        },
        "NP-hard problems": {
            "translated_key": [],
            "translated_annotated_text": "Revisó el diseño de la red de una y dos instalaciones La única instalación que presenta un problema de diseño de la red de productos básicos (OFOC) con costos de flujo no negativos considera el problema de enviar d unidades de flujo de una fuente a un destino en el que la capacidad de arco se compra en lotes de unidades C. El problema de las dos instalaciones (TFOC) es similar, pero la capacidad puede adquirirse en lotes de unidades C o en una unidad. Los costos de flujo son cero. Estos problemas son conocidos por ser NP-duros. Describimos un algoritmo exacto de O(n/sup 3/3/sup n/) para estos problemas basado en el uso repetido de un algoritmo de coincidencia bipartito. También presentamos un mejor límite inferior de Omega (n/sup 2k*/) para un algoritmo Omega anterior (n/sup 2k/) descrito en la literatura donde k = [d/C] y k* = min{k, [(n 2)/2]}. El algoritmo de coincidencia es más rápido que éste para k > o= [(n - 2)/2]. Por último, ofrecemos otra reformulación del problema que es casi integral. Esta propiedad podría ser útil en el diseño de una versión modificada del método simplex para resolver el problema utilizando una secuencia de pivotes con soluciones extremas enteras, conocido como el método integral simplex en la literatura ",
            "error": []
        },
        "exact algorithm": {
            "translated_key": [],
            "translated_annotated_text": "Revisó el diseño de la red de una y dos instalaciones La única instalación que presenta un problema de diseño de la red de productos básicos (OFOC) con costos de flujo no negativos considera el problema de enviar d unidades de flujo de una fuente a un destino en el que la capacidad de arco se compra en lotes de unidades C. El problema de las dos instalaciones (TFOC) es similar, pero la capacidad puede adquirirse en lotes de unidades C o en una unidad. Los costos de flujo son cero. Estos problemas son conocidos por ser NP-duros. Describimos un algoritmo exacto de O(n/sup 3/3/sup n/) para estos problemas basado en el uso repetido de un algoritmo de coincidencia bipartito. También presentamos un mejor límite inferior de Omega (n/sup 2k*/) para un algoritmo Omega anterior (n/sup 2k/) descrito en la literatura donde k = [d/C] y k* = min{k, [(n 2)/2]}. El algoritmo de coincidencia es más rápido que éste para k > o= [(n - 2)/2]. Por último, ofrecemos otra reformulación del problema que es casi integral. Esta propiedad podría ser útil en el diseño de una versión modificada del método simplex para resolver el problema utilizando una secuencia de pivotes con soluciones extremas enteras, conocido como el método integral simplex en la literatura ",
            "error": []
        },
        "bipartite matching algorithm": {
            "translated_key": "algoritmo de coincidencia bipartita",
            "translated_annotated_text": "Revisó el diseño de la red de una y dos instalaciones La única instalación que presenta un problema de diseño de la red de productos básicos (OFOC) con costos de flujo no negativos considera el problema de enviar d unidades de flujo de una fuente a un destino en el que la capacidad de arco se compra en lotes de unidades C. El problema de las dos instalaciones (TFOC) es similar, pero la capacidad puede adquirirse en lotes de unidades C o en una unidad. Los costos de flujo son cero. Estos problemas son conocidos por ser NP-duros. Describimos un algoritmo exacto de O(n/sup 3/3/sup n/) para estos problemas basado en el uso repetido de un \"algoritmo de coincidencia bipartita\". También presentamos un mejor límite inferior de Omega (n/sup 2k*/) para un algoritmo Omega anterior (n/sup 2k/) descrito en la literatura donde k = [d/C] y k* = min{k, [(n 2)/2]}. El algoritmo de coincidencia es más rápido que éste para k > o= [(n - 2)/2]. Por último, ofrecemos otra reformulación del problema que es casi integral. Esta propiedad podría ser útil en el diseño de una versión modificada del método simplex para resolver el problema utilizando una secuencia de pivotes con soluciones extremas enteras, conocido como el método integral simplex en la literatura ",
            "error": [
                ""
            ]
        },
        "lower bound": {
            "translated_key": "encuadernación inferior",
            "translated_annotated_text": "Revisó el diseño de la red de una y dos instalaciones La única instalación que presenta un problema de diseño de la red de productos básicos (OFOC) con costos de flujo no negativos considera el problema de enviar d unidades de flujo de una fuente a un destino en el que la capacidad de arco se compra en lotes de unidades C. El problema de las dos instalaciones (TFOC) es similar, pero la capacidad puede adquirirse en lotes de unidades C o en una unidad. Los costos de flujo son cero. Estos problemas son conocidos por ser NP-duros. Describimos un algoritmo exacto de O(n/sup 3/3/sup n/) para estos problemas basado en el uso repetido de un algoritmo de coincidencia bipartito. También presentamos un mejor \"encuadernación inferior\" de Omega (n/sup 2k*/) para un algoritmo anterior de Omega (n/sup 2k/) descrito en la literatura donde k = [d/C] y k* = min{k, [(n 2)/2]}. El algoritmo de coincidencia es más rápido que éste para k > o= [(n - 2)/2]. Por último, ofrecemos otra reformulación del problema que es casi integral. Esta propiedad podría ser útil en el diseño de una versión modificada del método simplex para resolver el problema utilizando una secuencia de pivotes con soluciones extremas enteras, conocido como el método integral simplex en la literatura ",
            "error": [
                ""
            ]
        },
        "quasi integral": {
            "translated_key": "cuasi integral",
            "translated_annotated_text": "Revisó el diseño de la red de una y dos instalaciones La única instalación que presenta un problema de diseño de la red de productos básicos (OFOC) con costos de flujo no negativos considera el problema de enviar d unidades de flujo de una fuente a un destino en el que la capacidad de arco se compra en lotes de unidades C. El problema de las dos instalaciones (TFOC) es similar, pero la capacidad puede adquirirse en lotes de unidades C o en una unidad. Los costos de flujo son cero. Estos problemas son conocidos por ser NP-duros. Describimos un algoritmo exacto de O(n/sup 3/3/sup n/) para estos problemas basado en el uso repetido de un algoritmo de coincidencia bipartito. También presentamos un mejor límite inferior de Omega (n/sup 2k*/) para un algoritmo Omega anterior (n/sup 2k/) descrito en la literatura donde k = [d/C] y k* = min{k, [(n 2)/2]}. El algoritmo de coincidencia es más rápido que éste para k > o= [(n - 2)/2]. Finalmente, proporcionamos otra reformulación del problema que es \"cuasi integral\". Esta propiedad podría ser útil en el diseño de una versión modificada del método simplex para resolver el problema utilizando una secuencia de pivotes con soluciones extremas enteras, conocido como el método integral simplex en la literatura ",
            "error": [
                ""
            ]
        },
        "pivots": {
            "translated_key": "pivots",
            "translated_annotated_text": "Revisó el diseño de la red de una y dos instalaciones La única instalación que presenta un problema de diseño de la red de productos básicos (OFOC) con costos de flujo no negativos considera el problema de enviar d unidades de flujo de una fuente a un destino en el que la capacidad de arco se compra en lotes de unidades C. El problema de las dos instalaciones (TFOC) es similar, pero la capacidad puede adquirirse en lotes de unidades C o en una unidad. Los costos de flujo son cero. Estos problemas son conocidos por ser NP-duros. Describimos un algoritmo exacto de O(n/sup 3/3/sup n/) para estos problemas basado en el uso repetido de un algoritmo de coincidencia bipartito. También presentamos un mejor límite inferior de Omega (n/sup 2k*/) para un algoritmo Omega anterior (n/sup 2k/) descrito en la literatura donde k = [d/C] y k* = min{k, [(n 2)/2]}. El algoritmo de coincidencia es más rápido que éste para k > o= [(n - 2)/2]. Por último, ofrecemos otra reformulación del problema que es casi integral. Esta propiedad podría ser útil en el diseño de una versión modificada del método simplex para resolver el problema utilizando una secuencia de \"pivots\" con soluciones extremas enteras, conocido como el método integral simplex en la literatura ",
            "error": [
                ""
            ]
        },
        "integral simplex method": {
            "translated_key": "método integral simplex",
            "translated_annotated_text": "Revisó el diseño de la red de una y dos instalaciones La única instalación que presenta un problema de diseño de la red de productos básicos (OFOC) con costos de flujo no negativos considera el problema de enviar d unidades de flujo de una fuente a un destino en el que la capacidad de arco se compra en lotes de unidades C. El problema de las dos instalaciones (TFOC) es similar, pero la capacidad puede adquirirse en lotes de unidades C o en una unidad. Los costos de flujo son cero. Estos problemas son conocidos por ser NP-duros. Describimos un algoritmo exacto de O(n/sup 3/3/sup n/) para estos problemas basado en el uso repetido de un algoritmo de coincidencia bipartito. También presentamos un mejor límite inferior de Omega (n/sup 2k*/) para un algoritmo Omega anterior (n/sup 2k/) descrito en la literatura donde k = [d/C] y k* = min{k, [(n 2)/2]}. El algoritmo de coincidencia es más rápido que éste para k > o= [(n - 2)/2]. Por último, ofrecemos otra reformulación del problema que es casi integral. Esta propiedad podría ser útil en el diseño de una versión modificada del método simplex para resolver el problema utilizando una secuencia de pivotes con soluciones extremas enteras, conocido como el \"método integral simplex\" en la literatura ",
            "error": [
                ""
            ]
        },
        "computational complexity": {
            "translated_key": [],
            "translated_annotated_text": "Revisó el diseño de la red de una y dos instalaciones La única instalación que presenta un problema de diseño de la red de productos básicos (OFOC) con costos de flujo no negativos considera el problema de enviar d unidades de flujo de una fuente a un destino en el que la capacidad de arco se compra en lotes de unidades C. El problema de las dos instalaciones (TFOC) es similar, pero la capacidad puede adquirirse en lotes de unidades C o en una unidad. Los costos de flujo son cero. Estos problemas son conocidos por ser NP-duros. Describimos un algoritmo exacto de O(n/sup 3/3/sup n/) para estos problemas basado en el uso repetido de un algoritmo de coincidencia bipartito. También presentamos un mejor límite inferior de Omega (n/sup 2k*/) para un algoritmo Omega anterior (n/sup 2k/) descrito en la literatura donde k = [d/C] y k* = min{k, [(n 2)/2]}. El algoritmo de coincidencia es más rápido que éste para k > o= [(n - 2)/2]. Por último, ofrecemos otra reformulación del problema que es casi integral. Esta propiedad podría ser útil en el diseño de una versión modificada del método simplex para resolver el problema utilizando una secuencia de pivotes con soluciones extremas enteras, conocido como el método integral simplex en la literatura ",
            "error": []
        },
        "directed graphs": {
            "translated_key": [],
            "translated_annotated_text": "Revisó el diseño de la red de una y dos instalaciones La única instalación que presenta un problema de diseño de la red de productos básicos (OFOC) con costos de flujo no negativos considera el problema de enviar d unidades de flujo de una fuente a un destino en el que la capacidad de arco se compra en lotes de unidades C. El problema de las dos instalaciones (TFOC) es similar, pero la capacidad puede adquirirse en lotes de unidades C o en una unidad. Los costos de flujo son cero. Estos problemas son conocidos por ser NP-duros. Describimos un algoritmo exacto de O(n/sup 3/3/sup n/) para estos problemas basado en el uso repetido de un algoritmo de coincidencia bipartito. También presentamos un mejor límite inferior de Omega (n/sup 2k*/) para un algoritmo Omega anterior (n/sup 2k/) descrito en la literatura donde k = [d/C] y k* = min{k, [(n 2)/2]}. El algoritmo de coincidencia es más rápido que éste para k > o= [(n - 2)/2]. Por último, ofrecemos otra reformulación del problema que es casi integral. Esta propiedad podría ser útil en el diseño de una versión modificada del método simplex para resolver el problema utilizando una secuencia de pivotes con soluciones extremas enteras, conocido como el método integral simplex en la literatura ",
            "error": []
        },
        "integer programming": {
            "translated_key": [],
            "translated_annotated_text": "Revisó el diseño de la red de una y dos instalaciones La única instalación que presenta un problema de diseño de la red de productos básicos (OFOC) con costos de flujo no negativos considera el problema de enviar d unidades de flujo de una fuente a un destino en el que la capacidad de arco se compra en lotes de unidades C. El problema de las dos instalaciones (TFOC) es similar, pero la capacidad puede adquirirse en lotes de unidades C o en una unidad. Los costos de flujo son cero. Estos problemas son conocidos por ser NP-duros. Describimos un algoritmo exacto de O(n/sup 3/3/sup n/) para estos problemas basado en el uso repetido de un algoritmo de coincidencia bipartito. También presentamos un mejor límite inferior de Omega (n/sup 2k*/) para un algoritmo Omega anterior (n/sup 2k/) descrito en la literatura donde k = [d/C] y k* = min{k, [(n 2)/2]}. El algoritmo de coincidencia es más rápido que éste para k > o= [(n - 2)/2]. Por último, ofrecemos otra reformulación del problema que es casi integral. Esta propiedad podría ser útil en el diseño de una versión modificada del método simplex para resolver el problema utilizando una secuencia de pivotes con soluciones extremas enteras, conocido como el método integral simplex en la literatura ",
            "error": []
        },
        "linear programming": {
            "translated_key": [],
            "translated_annotated_text": "Revisó el diseño de la red de una y dos instalaciones La única instalación que presenta un problema de diseño de la red de productos básicos (OFOC) con costos de flujo no negativos considera el problema de enviar d unidades de flujo de una fuente a un destino en el que la capacidad de arco se compra en lotes de unidades C. El problema de las dos instalaciones (TFOC) es similar, pero la capacidad puede adquirirse en lotes de unidades C o en una unidad. Los costos de flujo son cero. Estos problemas son conocidos por ser NP-duros. Describimos un algoritmo exacto de O(n/sup 3/3/sup n/) para estos problemas basado en el uso repetido de un algoritmo de coincidencia bipartito. También presentamos un mejor límite inferior de Omega (n/sup 2k*/) para un algoritmo Omega anterior (n/sup 2k/) descrito en la literatura donde k = [d/C] y k* = min{k, [(n 2)/2]}. El algoritmo de coincidencia es más rápido que éste para k > o= [(n - 2)/2]. Por último, ofrecemos otra reformulación del problema que es casi integral. Esta propiedad podría ser útil en el diseño de una versión modificada del método simplex para resolver el problema utilizando una secuencia de pivotes con soluciones extremas enteras, conocido como el método integral simplex en la literatura ",
            "error": []
        },
        "operations research": {
            "translated_key": [],
            "translated_annotated_text": "Revisó el diseño de la red de una y dos instalaciones La única instalación que presenta un problema de diseño de la red de productos básicos (OFOC) con costos de flujo no negativos considera el problema de enviar d unidades de flujo de una fuente a un destino en el que la capacidad de arco se compra en lotes de unidades C. El problema de las dos instalaciones (TFOC) es similar, pero la capacidad puede adquirirse en lotes de unidades C o en una unidad. Los costos de flujo son cero. Estos problemas son conocidos por ser NP-duros. Describimos un algoritmo exacto de O(n/sup 3/3/sup n/) para estos problemas basado en el uso repetido de un algoritmo de coincidencia bipartito. También presentamos un mejor límite inferior de Omega (n/sup 2k*/) para un algoritmo Omega anterior (n/sup 2k/) descrito en la literatura donde k = [d/C] y k* = min{k, [(n 2)/2]}. El algoritmo de coincidencia es más rápido que éste para k > o= [(n - 2)/2]. Por último, ofrecemos otra reformulación del problema que es casi integral. Esta propiedad podría ser útil en el diseño de una versión modificada del método simplex para resolver el problema utilizando una secuencia de pivotes con soluciones extremas enteras, conocido como el método integral simplex en la literatura ",
            "error": []
        }
    }
}