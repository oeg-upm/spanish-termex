{
    "original_text": "Scalable hybrid computation with spikes We outline a hybrid analog-digital scheme for computing with three important features that enable it to scale to systems of large complexity: First, like digital computation, which uses several one-bit precise logical units to collectively compute a precise answer to a computation, the hybrid scheme uses several moderate-precision analog units to collectively compute a precise answer to a computation. Second, frequent discrete signal restoration of the analog information prevents analog noise and offset from degrading the computation. Third, a state machine enables complex computations to be created using a sequence of elementary computations. A natural choice for implementing this hybrid scheme is one based on spikes because spike-count codes are digital, while spike-time codes are analog. We illustrate how spikes afford easy ways to implement all three components of scalable hybrid computation. First, as an important example of distributed analog computation, we show how spikes can create a distributed modular representation of an analog number by implementing digital carry interactions between spiking analog neurons. Second, we show how signal restoration may be performed by recursive spike-count quantization of spike-time codes. Third, we use spikes from an analog dynamical system to trigger state transitions in a digital dynamical system, which reconfigures the analog dynamical system using a binary control vector; such feedback interactions between analog and digital dynamical systems create a hybrid state machine (HSM). The HSM extends and expands the concept of a digital finite-state-machine to the hybrid domain. We present experimental data from a two-neuron HSM on a chip that implements error-correcting analog-to-digital conversion with the concurrent use of spike-time and spike-count codes. We also present experimental data from silicon circuits that implement HSM-based pattern recognition using spike-time synchrony. We outline how HSMs may be used to perform learning, vector quantization, spike pattern recognition and generation, and how they may be reconfigured",
    "original_translation": "Cálculo híbrido escalable con picos Delineamos un esquema analógico-digital híbrido para la computación con tres características importantes que le permiten escalar a sistemas de gran complejidad: Primero, como el cálculo digital, que utiliza varias unidades lógicas precisas de un bit para calcular colectivamente una respuesta precisa a un cálculo, el esquema híbrido utiliza varias unidades analógicas de precisión moderada para calcular colectivamente una respuesta precisa a un cálculo. En segundo lugar, la restauración frecuente de la señal discreta de la información analógica impide el ruido analógico y el desplazamiento de la degradación del cálculo. En tercer lugar, una máquina de estado permite que se creen cálculos complejos utilizando una secuencia de cálculos elementales. Una opción natural para implementar este esquema híbrido es una basada en picos porque los códigos de cuenta de pico son digitales, mientras que los códigos de tiempo de pico son analógicos. Ilustramos cómo los picos ofrecen formas fáciles de implementar los tres componentes de la computación híbrida escalable. Primero, como un ejemplo importante de computación analógica distribuida, mostramos cómo los picos pueden crear una representación modular distribuida de un número analógico mediante la implementación de interacciones de transporte digital entre neuronas analógicas spiking. En segundo lugar, mostramos cómo la restauración de la señal se puede realizar mediante la cuantificación recursiva de la cuenta de pico de códigos de tiempo de pico. En tercer lugar, utilizamos picos de un sistema dinámico analógico para desencadenar transiciones de estado en un sistema dinámico digital, que reconfigura el sistema dinámico analógico utilizando un vector de control binario; tales interacciones de retroalimentación entre sistemas dinámicos analógicos y digitales crean una máquina de estado híbrido (HSM). El HSM extiende y expande el concepto de una máquina-estado-finito digital al dominio híbrido. Presentamos datos experimentales de un HSM de dos neuronas en un chip que implementa conversión analógica-digital de corrección de errores con el uso simultáneo de tiempos de pico y códigos de cuenta de pico. También presentamos datos experimentales de circuitos de silicio que implementan el reconocimiento de patrones basado en HSM usando la sincronización de tiempo de pico. Delineamos cómo se pueden utilizar los HSM para realizar aprendizaje, cuantificación de vectores, reconocimiento de patrones de pico y generación, y cómo pueden ser reconfigurados",
    "error_count": 11,
    "keys": {
        "scalable hybrid computation": {
            "translated_key": "computación híbrida escalable",
            "translated_annotated_text": "Cálculo híbrido escalable con picos Delineamos un esquema analógico-digital híbrido para la computación con tres características importantes que le permiten escalar a sistemas de gran complejidad: Primero, como el cálculo digital, que utiliza varias unidades lógicas precisas de un bit para calcular colectivamente una respuesta precisa a un cálculo, el esquema híbrido utiliza varias unidades analógicas de precisión moderada para calcular colectivamente una respuesta precisa a un cálculo. En segundo lugar, la restauración frecuente de la señal discreta de la información analógica impide el ruido analógico y el desplazamiento de la degradación del cálculo. En tercer lugar, una máquina de estado permite que se creen cálculos complejos utilizando una secuencia de cálculos elementales. Una opción natural para implementar este esquema híbrido es una basada en picos porque los códigos de cuenta de pico son digitales, mientras que los códigos de tiempo de pico son analógicos. Ilustramos cómo los picos ofrecen formas fáciles de implementar los tres componentes de \"computación híbrida escalable\". Primero, como un ejemplo importante de computación analógica distribuida, mostramos cómo los picos pueden crear una representación modular distribuida de un número analógico mediante la implementación de interacciones de transporte digital entre neuronas analógicas spiking. En segundo lugar, mostramos cómo la restauración de la señal se puede realizar mediante la cuantificación recursiva de la cuenta de pico de códigos de tiempo de pico. En tercer lugar, utilizamos picos de un sistema dinámico analógico para desencadenar transiciones de estado en un sistema dinámico digital, que reconfigura el sistema dinámico analógico utilizando un vector de control binario; tales interacciones de retroalimentación entre sistemas dinámicos analógicos y digitales crean una máquina de estado híbrido (HSM). El HSM extiende y expande el concepto de una máquina-estado-finito digital al dominio híbrido. Presentamos datos experimentales de un HSM de dos neuronas en un chip que implementa conversión analógica-digital de corrección de errores con el uso simultáneo de tiempos de pico y códigos de cuenta de pico. También presentamos datos experimentales de circuitos de silicio que implementan el reconocimiento de patrones basado en HSM usando la sincronización de tiempo de pico. Delineamos cómo se pueden utilizar los HSM para realizar aprendizaje, cuantificación de vectores, reconocimiento de patrones de pico y generación, y cómo pueden ser reconfigurados ",
            "error": [
                ""
            ]
        },
        "spikes": {
            "translated_key": "spikes",
            "translated_annotated_text": "Cálculo híbrido escalable con \"spikes\" Delineamos un esquema analógico-digital híbrido para la computación con tres características importantes que le permiten escalar a sistemas de gran complejidad: Primero, como computación digital, que utiliza varias unidades lógicas precisas de un bit para calcular colectivamente una respuesta precisa a un cálculo, el esquema híbrido utiliza varias unidades analógicas de precisión moderada para calcular colectivamente una respuesta precisa a un cálculo. En segundo lugar, la restauración frecuente de la señal discreta de la información analógica impide el ruido analógico y el desplazamiento de la degradación del cálculo. En tercer lugar, una máquina de estado permite que se creen cálculos complejos utilizando una secuencia de cálculos elementales. Una opción natural para implementar este esquema híbrido es una basada en \"spikes\" porque los códigos de pico-cuento son digitales, mientras que los códigos de pico-tiempo son analógicos. Ilustramos cómo \"spikes\" ofrecen formas fáciles de implementar los tres componentes de la computación híbrida escalable. En primer lugar, como un ejemplo importante de computación analógica distribuida, mostramos cómo \"spikes\" puede crear una representación modular distribuida de un número analógico mediante la implementación de interacciones de transporte digital entre neuronas analógicas spiking. En segundo lugar, mostramos cómo la restauración de la señal se puede realizar mediante la cuantificación recursiva de la cuenta de pico de códigos de tiempo de pico. En tercer lugar, utilizamos \"spikes\" de un sistema dinámico analógico para desencadenar transiciones de estado en un sistema dinámico digital, que reconfigura el sistema dinámico analógico utilizando un vector de control binario; tales interacciones de retroalimentación entre sistemas dinámicos analógicos y digitales crean una máquina de estado híbrida (HSM). El HSM extiende y expande el concepto de una máquina-estado-finito digital al dominio híbrido. Presentamos datos experimentales de un HSM de dos neuronas en un chip que implementa conversión analógica-digital de corrección de errores con el uso simultáneo de tiempos de pico y códigos de cuenta de pico. También presentamos datos experimentales de circuitos de silicio que implementan el reconocimiento de patrones basado en HSM usando la sincronización de tiempo de pico. Delineamos cómo se pueden utilizar los HSM para realizar aprendizaje, cuantificación de vectores, reconocimiento de patrones de pico y generación, y cómo pueden ser reconfigurados ",
            "error": [
                ""
            ]
        },
        "hybrid analog-digital scheme": {
            "translated_key": "esquema analógico-digital híbrido",
            "translated_annotated_text": "Cálculo híbrido escalable con picos Delineamos un \"esquema analógico-digital híbrido\" para la computación con tres características importantes que le permiten escalar a sistemas de gran complejidad: Primero, como la computación digital, que utiliza varias unidades lógicas precisas de un bit para calcular colectivamente una respuesta precisa a un cálculo, el esquema híbrido utiliza varias unidades analógicas de precisión moderada para calcular colectivamente una respuesta precisa a un cálculo. En segundo lugar, la restauración frecuente de la señal discreta de la información analógica impide el ruido analógico y el desplazamiento de la degradación del cálculo. En tercer lugar, una máquina de estado permite que se creen cálculos complejos utilizando una secuencia de cálculos elementales. Una opción natural para implementar este esquema híbrido es una basada en picos porque los códigos de cuenta de pico son digitales, mientras que los códigos de tiempo de pico son analógicos. Ilustramos cómo los picos ofrecen formas fáciles de implementar los tres componentes de la computación híbrida escalable. Primero, como un ejemplo importante de computación analógica distribuida, mostramos cómo los picos pueden crear una representación modular distribuida de un número analógico mediante la implementación de interacciones de transporte digital entre neuronas analógicas spiking. En segundo lugar, mostramos cómo la restauración de la señal se puede realizar mediante la cuantificación recursiva de la cuenta de pico de códigos de tiempo de pico. En tercer lugar, utilizamos picos de un sistema dinámico analógico para desencadenar transiciones de estado en un sistema dinámico digital, que reconfigura el sistema dinámico analógico utilizando un vector de control binario; tales interacciones de retroalimentación entre sistemas dinámicos analógicos y digitales crean una máquina de estado híbrido (HSM). El HSM extiende y expande el concepto de una máquina-estado-finito digital al dominio híbrido. Presentamos datos experimentales de un HSM de dos neuronas en un chip que implementa conversión analógica-digital de corrección de errores con el uso simultáneo de tiempos de pico y códigos de cuenta de pico. También presentamos datos experimentales de circuitos de silicio que implementan el reconocimiento de patrones basado en HSM usando la sincronización de tiempo de pico. Delineamos cómo se pueden utilizar los HSM para realizar aprendizaje, cuantificación de vectores, reconocimiento de patrones de pico y generación, y cómo pueden ser reconfigurados ",
            "error": [
                ""
            ]
        },
        "moderate-precision analog units": {
            "translated_key": "unidades analógicas de precisión moderada",
            "translated_annotated_text": "Cálculo híbrido escalable con picos Delineamos un esquema analógico-digital híbrido para la computación con tres características importantes que le permiten escalar a sistemas de gran complejidad: Primero, como el cálculo digital, que utiliza varias unidades lógicas precisas de un bit para calcular colectivamente una respuesta precisa a un cálculo, el esquema híbrido utiliza varias \"unidades analógicas de precisión moderada\" para calcular colectivamente una respuesta precisa a un cálculo. En segundo lugar, la restauración frecuente de la señal discreta de la información analógica impide el ruido analógico y el desplazamiento de la degradación del cálculo. En tercer lugar, una máquina de estado permite que se creen cálculos complejos utilizando una secuencia de cálculos elementales. Una opción natural para implementar este esquema híbrido es una basada en picos porque los códigos de cuenta de pico son digitales, mientras que los códigos de tiempo de pico son analógicos. Ilustramos cómo los picos ofrecen formas fáciles de implementar los tres componentes de la computación híbrida escalable. Primero, como un ejemplo importante de computación analógica distribuida, mostramos cómo los picos pueden crear una representación modular distribuida de un número analógico mediante la implementación de interacciones de transporte digital entre neuronas analógicas spiking. En segundo lugar, mostramos cómo la restauración de la señal se puede realizar mediante la cuantificación recursiva de la cuenta de pico de códigos de tiempo de pico. En tercer lugar, utilizamos picos de un sistema dinámico analógico para desencadenar transiciones de estado en un sistema dinámico digital, que reconfigura el sistema dinámico analógico utilizando un vector de control binario; tales interacciones de retroalimentación entre sistemas dinámicos analógicos y digitales crean una máquina de estado híbrido (HSM). El HSM extiende y expande el concepto de una máquina-estado-finito digital al dominio híbrido. Presentamos datos experimentales de un HSM de dos neuronas en un chip que implementa conversión analógica-digital de corrección de errores con el uso simultáneo de tiempos de pico y códigos de cuenta de pico. También presentamos datos experimentales de circuitos de silicio que implementan el reconocimiento de patrones basado en HSM usando la sincronización de tiempo de pico. Delineamos cómo se pueden utilizar los HSM para realizar aprendizaje, cuantificación de vectores, reconocimiento de patrones de pico y generación, y cómo pueden ser reconfigurados ",
            "error": [
                ""
            ]
        },
        "frequent discrete signal restoration": {
            "translated_key": "retorno frecuente de señal discreta",
            "translated_annotated_text": "Cálculo híbrido escalable con picos Delineamos un esquema analógico-digital híbrido para la computación con tres características importantes que le permiten escalar a sistemas de gran complejidad: Primero, como el cálculo digital, que utiliza varias unidades lógicas precisas de un bit para calcular colectivamente una respuesta precisa a un cálculo, el esquema híbrido utiliza varias unidades analógicas de precisión moderada para calcular colectivamente una respuesta precisa a un cálculo. En segundo lugar, \"retorno frecuente de señal discreta\" de la información analógica impide el ruido analógico y la compensación de la degradación de la computación. En tercer lugar, una máquina de estado permite que se creen cálculos complejos utilizando una secuencia de cálculos elementales. Una opción natural para implementar este esquema híbrido es una basada en picos porque los códigos de cuenta de pico son digitales, mientras que los códigos de tiempo de pico son analógicos. Ilustramos cómo los picos ofrecen formas fáciles de implementar los tres componentes de la computación híbrida escalable. Primero, como un ejemplo importante de computación analógica distribuida, mostramos cómo los picos pueden crear una representación modular distribuida de un número analógico mediante la implementación de interacciones de transporte digital entre neuronas analógicas spiking. En segundo lugar, mostramos cómo la restauración de la señal se puede realizar mediante la cuantificación recursiva de la cuenta de pico de códigos de tiempo de pico. En tercer lugar, utilizamos picos de un sistema dinámico analógico para desencadenar transiciones de estado en un sistema dinámico digital, que reconfigura el sistema dinámico analógico utilizando un vector de control binario; tales interacciones de retroalimentación entre sistemas dinámicos analógicos y digitales crean una máquina de estado híbrido (HSM). El HSM extiende y expande el concepto de una máquina-estado-finito digital al dominio híbrido. Presentamos datos experimentales de un HSM de dos neuronas en un chip que implementa conversión analógica-digital de corrección de errores con el uso simultáneo de tiempos de pico y códigos de cuenta de pico. También presentamos datos experimentales de circuitos de silicio que implementan el reconocimiento de patrones basado en HSM usando la sincronización de tiempo de pico. Delineamos cómo se pueden utilizar los HSM para realizar aprendizaje, cuantificación de vectores, reconocimiento de patrones de pico y generación, y cómo pueden ser reconfigurados ",
            "error": [
                ""
            ]
        },
        "analog noise": {
            "translated_key": "ruido analógico",
            "translated_annotated_text": "Cálculo híbrido escalable con picos Delineamos un esquema analógico-digital híbrido para la computación con tres características importantes que le permiten escalar a sistemas de gran complejidad: Primero, como el cálculo digital, que utiliza varias unidades lógicas precisas de un bit para calcular colectivamente una respuesta precisa a un cálculo, el esquema híbrido utiliza varias unidades analógicas de precisión moderada para calcular colectivamente una respuesta precisa a un cálculo. En segundo lugar, la frecuente restauración discreta de la señal de la información analógica impide el \"ruido analógico\" y la compensación de la degradación de la computación. En tercer lugar, una máquina de estado permite que se creen cálculos complejos utilizando una secuencia de cálculos elementales. Una opción natural para implementar este esquema híbrido es una basada en picos porque los códigos de cuenta de pico son digitales, mientras que los códigos de tiempo de pico son analógicos. Ilustramos cómo los picos ofrecen formas fáciles de implementar los tres componentes de la computación híbrida escalable. Primero, como un ejemplo importante de computación analógica distribuida, mostramos cómo los picos pueden crear una representación modular distribuida de un número analógico mediante la implementación de interacciones de transporte digital entre neuronas analógicas spiking. En segundo lugar, mostramos cómo la restauración de la señal se puede realizar mediante la cuantificación recursiva de la cuenta de pico de códigos de tiempo de pico. En tercer lugar, utilizamos picos de un sistema dinámico analógico para desencadenar transiciones de estado en un sistema dinámico digital, que reconfigura el sistema dinámico analógico utilizando un vector de control binario; tales interacciones de retroalimentación entre sistemas dinámicos analógicos y digitales crean una máquina de estado híbrido (HSM). El HSM extiende y expande el concepto de una máquina-estado-finito digital al dominio híbrido. Presentamos datos experimentales de un HSM de dos neuronas en un chip que implementa conversión analógica-digital de corrección de errores con el uso simultáneo de tiempos de pico y códigos de cuenta de pico. También presentamos datos experimentales de circuitos de silicio que implementan el reconocimiento de patrones basado en HSM usando la sincronización de tiempo de pico. Delineamos cómo se pueden utilizar los HSM para realizar aprendizaje, cuantificación de vectores, reconocimiento de patrones de pico y generación, y cómo pueden ser reconfigurados ",
            "error": [
                ""
            ]
        },
        "spike-count codes": {
            "translated_key": [
                "códigos de cuenta de Spike",
                "códigos de cuenta de espike"
            ],
            "translated_annotated_text": "Cálculo híbrido escalable con picos Delineamos un esquema analógico-digital híbrido para la computación con tres características importantes que le permiten escalar a sistemas de gran complejidad: Primero, como el cálculo digital, que utiliza varias unidades lógicas precisas de un bit para calcular colectivamente una respuesta precisa a un cálculo, el esquema híbrido utiliza varias unidades analógicas de precisión moderada para calcular colectivamente una respuesta precisa a un cálculo. En segundo lugar, la restauración frecuente de la señal discreta de la información analógica impide el ruido analógico y el desplazamiento de la degradación del cálculo. En tercer lugar, una máquina de estado permite que se creen cálculos complejos utilizando una secuencia de cálculos elementales. Una opción natural para implementar este esquema híbrido es una basada en picos porque los \"códigos de cuenta de Spike\" son digitales, mientras que los códigos de tiempo de pico son analógicos. Ilustramos cómo los picos ofrecen formas fáciles de implementar los tres componentes de la computación híbrida escalable. Primero, como un ejemplo importante de computación analógica distribuida, mostramos cómo los picos pueden crear una representación modular distribuida de un número analógico mediante la implementación de interacciones de transporte digital entre neuronas analógicas spiking. En segundo lugar, mostramos cómo la restauración de la señal se puede realizar mediante la cuantificación recursiva de la cuenta de pico de códigos de tiempo de pico. En tercer lugar, utilizamos picos de un sistema dinámico analógico para desencadenar transiciones de estado en un sistema dinámico digital, que reconfigura el sistema dinámico analógico utilizando un vector de control binario; tales interacciones de retroalimentación entre sistemas dinámicos analógicos y digitales crean una máquina de estado híbrido (HSM). El HSM extiende y expande el concepto de una máquina-estado-finito digital al dominio híbrido. Presentamos datos experimentales de un HSM de dos neuronas en un chip que implementa conversión analógica-digital de corrección de errores con el uso simultáneo de tiempo de pico y \"códigos de cuenta de espike\". También presentamos datos experimentales de circuitos de silicio que implementan el reconocimiento de patrones basado en HSM usando la sincronización de tiempo de pico. Delineamos cómo se pueden utilizar los HSM para realizar aprendizaje, cuantificación de vectores, reconocimiento de patrones de pico y generación, y cómo pueden ser reconfigurados ",
            "error": [
                "códigos de cuenta de Spike",
                "códigos de cuenta de espike"
            ]
        },
        "finite-state-machine": {
            "translated_key": "máquina-estado-finito",
            "translated_annotated_text": "Cálculo híbrido escalable con picos Delineamos un esquema analógico-digital híbrido para la computación con tres características importantes que le permiten escalar a sistemas de gran complejidad: Primero, como el cálculo digital, que utiliza varias unidades lógicas precisas de un bit para calcular colectivamente una respuesta precisa a un cálculo, el esquema híbrido utiliza varias unidades analógicas de precisión moderada para calcular colectivamente una respuesta precisa a un cálculo. En segundo lugar, la restauración frecuente de la señal discreta de la información analógica impide el ruido analógico y el desplazamiento de la degradación del cálculo. En tercer lugar, una máquina de estado permite que se creen cálculos complejos utilizando una secuencia de cálculos elementales. Una opción natural para implementar este esquema híbrido es una basada en picos porque los códigos de cuenta de pico son digitales, mientras que los códigos de tiempo de pico son analógicos. Ilustramos cómo los picos ofrecen formas fáciles de implementar los tres componentes de la computación híbrida escalable. Primero, como un ejemplo importante de computación analógica distribuida, mostramos cómo los picos pueden crear una representación modular distribuida de un número analógico mediante la implementación de interacciones de transporte digital entre neuronas analógicas spiking. En segundo lugar, mostramos cómo la restauración de la señal se puede realizar mediante la cuantificación recursiva de la cuenta de pico de códigos de tiempo de pico. En tercer lugar, utilizamos picos de un sistema dinámico analógico para desencadenar transiciones de estado en un sistema dinámico digital, que reconfigura el sistema dinámico analógico utilizando un vector de control binario; tales interacciones de retroalimentación entre sistemas dinámicos analógicos y digitales crean una máquina de estado híbrido (HSM). El HSM amplía y amplía el concepto de una \"máquina-estado-finito\" digital al dominio híbrido. Presentamos datos experimentales de un HSM de dos neuronas en un chip que implementa conversión analógica-digital de corrección de errores con el uso simultáneo de tiempos de pico y códigos de cuenta de pico. También presentamos datos experimentales de circuitos de silicio que implementan el reconocimiento de patrones basado en HSM usando la sincronización de tiempo de pico. Delineamos cómo se pueden utilizar los HSM para realizar aprendizaje, cuantificación de vectores, reconocimiento de patrones de pico y generación, y cómo pueden ser reconfigurados ",
            "error": [
                ""
            ]
        },
        "distributed analog computation": {
            "translated_key": "computación analógica distribuida",
            "translated_annotated_text": "Cálculo híbrido escalable con picos Delineamos un esquema analógico-digital híbrido para la computación con tres características importantes que le permiten escalar a sistemas de gran complejidad: Primero, como el cálculo digital, que utiliza varias unidades lógicas precisas de un bit para calcular colectivamente una respuesta precisa a un cálculo, el esquema híbrido utiliza varias unidades analógicas de precisión moderada para calcular colectivamente una respuesta precisa a un cálculo. En segundo lugar, la restauración frecuente de la señal discreta de la información analógica impide el ruido analógico y el desplazamiento de la degradación del cálculo. En tercer lugar, una máquina de estado permite que se creen cálculos complejos utilizando una secuencia de cálculos elementales. Una opción natural para implementar este esquema híbrido es una basada en picos porque los códigos de cuenta de pico son digitales, mientras que los códigos de tiempo de pico son analógicos. Ilustramos cómo los picos ofrecen formas fáciles de implementar los tres componentes de la computación híbrida escalable. Primero, como un ejemplo importante de \"computación analógica distribuida\", mostramos cómo los picos pueden crear una representación modular distribuida de un número analógico mediante la implementación de interacciones de transporte digital entre neuronas analógicas spiking. En segundo lugar, mostramos cómo la restauración de la señal se puede realizar mediante la cuantificación recursiva de la cuenta de pico de códigos de tiempo de pico. En tercer lugar, utilizamos picos de un sistema dinámico analógico para desencadenar transiciones de estado en un sistema dinámico digital, que reconfigura el sistema dinámico analógico utilizando un vector de control binario; tales interacciones de retroalimentación entre sistemas dinámicos analógicos y digitales crean una máquina de estado híbrido (HSM). El HSM extiende y expande el concepto de una máquina-estado-finito digital al dominio híbrido. Presentamos datos experimentales de un HSM de dos neuronas en un chip que implementa conversión analógica-digital de corrección de errores con el uso simultáneo de tiempos de pico y códigos de cuenta de pico. También presentamos datos experimentales de circuitos de silicio que implementan el reconocimiento de patrones basado en HSM usando la sincronización de tiempo de pico. Delineamos cómo se pueden utilizar los HSM para realizar aprendizaje, cuantificación de vectores, reconocimiento de patrones de pico y generación, y cómo pueden ser reconfigurados ",
            "error": [
                ""
            ]
        },
        "spike-time codes": {
            "translated_key": [
                "códigos de tiempo de pico",
                "códigos de tiempo despiece"
            ],
            "translated_annotated_text": "Cálculo híbrido escalable con picos Delineamos un esquema analógico-digital híbrido para la computación con tres características importantes que le permiten escalar a sistemas de gran complejidad: Primero, como el cálculo digital, que utiliza varias unidades lógicas precisas de un bit para calcular colectivamente una respuesta precisa a un cálculo, el esquema híbrido utiliza varias unidades analógicas de precisión moderada para calcular colectivamente una respuesta precisa a un cálculo. En segundo lugar, la restauración frecuente de la señal discreta de la información analógica impide el ruido analógico y el desplazamiento de la degradación del cálculo. En tercer lugar, una máquina de estado permite que se creen cálculos complejos utilizando una secuencia de cálculos elementales. Una opción natural para implementar este esquema híbrido es una basada en picos porque los códigos de cuenta de pico son digitales, mientras que los \"códigos de tiempo de pico\" son analógicos. Ilustramos cómo los picos ofrecen formas fáciles de implementar los tres componentes de la computación híbrida escalable. Primero, como un ejemplo importante de computación analógica distribuida, mostramos cómo los picos pueden crear una representación modular distribuida de un número analógico mediante la implementación de interacciones de transporte digital entre neuronas analógicas spiking. En segundo lugar, mostramos cómo la restauración de la señal se puede realizar mediante la cuantificación recursiva de la cuenta de pico de \"códigos de tiempo despiece\". En tercer lugar, utilizamos picos de un sistema dinámico analógico para desencadenar transiciones de estado en un sistema dinámico digital, que reconfigura el sistema dinámico analógico utilizando un vector de control binario; tales interacciones de retroalimentación entre sistemas dinámicos analógicos y digitales crean una máquina de estado híbrido (HSM). El HSM extiende y expande el concepto de una máquina-estado-finito digital al dominio híbrido. Presentamos datos experimentales de un HSM de dos neuronas en un chip que implementa conversión analógica-digital de corrección de errores con el uso simultáneo de tiempos de pico y códigos de cuenta de pico. También presentamos datos experimentales de circuitos de silicio que implementan el reconocimiento de patrones basado en HSM usando la sincronización de tiempo de pico. Delineamos cómo se pueden utilizar los HSM para realizar aprendizaje, cuantificación de vectores, reconocimiento de patrones de pico y generación, y cómo pueden ser reconfigurados ",
            "error": [
                "códigos de tiempo de pico",
                "códigos de tiempo despiece"
            ]
        },
        "digital carry interactions": {
            "translated_key": "interacciones de transporte digital",
            "translated_annotated_text": "Cálculo híbrido escalable con picos Delineamos un esquema analógico-digital híbrido para la computación con tres características importantes que le permiten escalar a sistemas de gran complejidad: Primero, como el cálculo digital, que utiliza varias unidades lógicas precisas de un bit para calcular colectivamente una respuesta precisa a un cálculo, el esquema híbrido utiliza varias unidades analógicas de precisión moderada para calcular colectivamente una respuesta precisa a un cálculo. En segundo lugar, la restauración frecuente de la señal discreta de la información analógica impide el ruido analógico y el desplazamiento de la degradación del cálculo. En tercer lugar, una máquina de estado permite que se creen cálculos complejos utilizando una secuencia de cálculos elementales. Una opción natural para implementar este esquema híbrido es una basada en picos porque los códigos de cuenta de pico son digitales, mientras que los códigos de tiempo de pico son analógicos. Ilustramos cómo los picos ofrecen formas fáciles de implementar los tres componentes de la computación híbrida escalable. Primero, como un ejemplo importante de computación analógica distribuida, mostramos cómo los picos pueden crear una representación modular distribuida de un número analógico mediante la implementación de \"interacciones de transporte digital\" entre neuronas analógicas spiking. En segundo lugar, mostramos cómo la restauración de la señal se puede realizar mediante la cuantificación recursiva de la cuenta de pico de códigos de tiempo de pico. En tercer lugar, utilizamos picos de un sistema dinámico analógico para desencadenar transiciones de estado en un sistema dinámico digital, que reconfigura el sistema dinámico analógico utilizando un vector de control binario; tales interacciones de retroalimentación entre sistemas dinámicos analógicos y digitales crean una máquina de estado híbrido (HSM). El HSM extiende y expande el concepto de una máquina-estado-finito digital al dominio híbrido. Presentamos datos experimentales de un HSM de dos neuronas en un chip que implementa conversión analógica-digital de corrección de errores con el uso simultáneo de tiempos de pico y códigos de cuenta de pico. También presentamos datos experimentales de circuitos de silicio que implementan el reconocimiento de patrones basado en HSM usando la sincronización de tiempo de pico. Delineamos cómo se pueden utilizar los HSM para realizar aprendizaje, cuantificación de vectores, reconocimiento de patrones de pico y generación, y cómo pueden ser reconfigurados ",
            "error": [
                ""
            ]
        },
        "binary control vector": {
            "translated_key": " vector de control binario",
            "translated_annotated_text": "Cálculo híbrido escalable con picos Delineamos un esquema analógico-digital híbrido para la computación con tres características importantes que le permiten escalar a sistemas de gran complejidad: Primero, como el cálculo digital, que utiliza varias unidades lógicas precisas de un bit para calcular colectivamente una respuesta precisa a un cálculo, el esquema híbrido utiliza varias unidades analógicas de precisión moderada para calcular colectivamente una respuesta precisa a un cálculo. En segundo lugar, la restauración frecuente de la señal discreta de la información analógica impide el ruido analógico y el desplazamiento de la degradación del cálculo. En tercer lugar, una máquina de estado permite que se creen cálculos complejos utilizando una secuencia de cálculos elementales. Una opción natural para implementar este esquema híbrido es una basada en picos porque los códigos de cuenta de pico son digitales, mientras que los códigos de tiempo de pico son analógicos. Ilustramos cómo los picos ofrecen formas fáciles de implementar los tres componentes de la computación híbrida escalable. Primero, como un ejemplo importante de computación analógica distribuida, mostramos cómo los picos pueden crear una representación modular distribuida de un número analógico mediante la implementación de interacciones de transporte digital entre neuronas analógicas spiking. En segundo lugar, mostramos cómo la restauración de la señal se puede realizar mediante la cuantificación recursiva de la cuenta de pico de códigos de tiempo de pico. En tercer lugar, utilizamos picos de un sistema dinámico analógico para desencadenar transiciones de estado en un sistema dinámico digital, que reconfigura el sistema dinámico analógico utilizando un \" vector de control binario\"; tales interacciones de retroalimentación entre sistemas dinámicos analógicos y digitales crean una máquina de estado híbrido (HSM). El HSM extiende y expande el concepto de una máquina-estado-finito digital al dominio híbrido. Presentamos datos experimentales de un HSM de dos neuronas en un chip que implementa conversión analógica-digital de corrección de errores con el uso simultáneo de tiempos de pico y códigos de cuenta de pico. También presentamos datos experimentales de circuitos de silicio que implementan el reconocimiento de patrones basado en HSM usando la sincronización de tiempo de pico. Delineamos cómo se pueden utilizar los HSM para realizar aprendizaje, cuantificación de vectores, reconocimiento de patrones de pico y generación, y cómo pueden ser reconfigurados ",
            "error": [
                ""
            ]
        },
        "feedback interactions": {
            "translated_key": "interacciones de retroalimentación",
            "translated_annotated_text": "Cálculo híbrido escalable con picos Delineamos un esquema analógico-digital híbrido para la computación con tres características importantes que le permiten escalar a sistemas de gran complejidad: Primero, como el cálculo digital, que utiliza varias unidades lógicas precisas de un bit para calcular colectivamente una respuesta precisa a un cálculo, el esquema híbrido utiliza varias unidades analógicas de precisión moderada para calcular colectivamente una respuesta precisa a un cálculo. En segundo lugar, la restauración frecuente de la señal discreta de la información analógica impide el ruido analógico y el desplazamiento de la degradación del cálculo. En tercer lugar, una máquina de estado permite que se creen cálculos complejos utilizando una secuencia de cálculos elementales. Una opción natural para implementar este esquema híbrido es una basada en picos porque los códigos de cuenta de pico son digitales, mientras que los códigos de tiempo de pico son analógicos. Ilustramos cómo los picos ofrecen formas fáciles de implementar los tres componentes de la computación híbrida escalable. Primero, como un ejemplo importante de computación analógica distribuida, mostramos cómo los picos pueden crear una representación modular distribuida de un número analógico mediante la implementación de interacciones de transporte digital entre neuronas analógicas spiking. En segundo lugar, mostramos cómo la restauración de la señal se puede realizar mediante la cuantificación recursiva de la cuenta de pico de códigos de tiempo de pico. En tercer lugar, utilizamos picos de un sistema dinámico analógico para desencadenar transiciones de estado en un sistema dinámico digital, que reconfigura el sistema dinámico analógico utilizando un vector de control binario; tales \"interacciones de retroalimentación\" entre sistemas dinámicos analógicos y digitales crean una máquina de estado híbrida (HSM). El HSM extiende y expande el concepto de una máquina-estado-finito digital al dominio híbrido. Presentamos datos experimentales de un HSM de dos neuronas en un chip que implementa conversión analógica-digital de corrección de errores con el uso simultáneo de tiempos de pico y códigos de cuenta de pico. También presentamos datos experimentales de circuitos de silicio que implementan el reconocimiento de patrones basado en HSM usando la sincronización de tiempo de pico. Delineamos cómo se pueden utilizar los HSM para realizar aprendizaje, cuantificación de vectores, reconocimiento de patrones de pico y generación, y cómo pueden ser reconfigurados ",
            "error": [
                ""
            ]
        },
        "two neuron hybrid state machine": {
            "translated_key": [],
            "translated_annotated_text": "Cálculo híbrido escalable con picos Delineamos un esquema analógico-digital híbrido para la computación con tres características importantes que le permiten escalar a sistemas de gran complejidad: Primero, como el cálculo digital, que utiliza varias unidades lógicas precisas de un bit para calcular colectivamente una respuesta precisa a un cálculo, el esquema híbrido utiliza varias unidades analógicas de precisión moderada para calcular colectivamente una respuesta precisa a un cálculo. En segundo lugar, la restauración frecuente de la señal discreta de la información analógica impide el ruido analógico y el desplazamiento de la degradación del cálculo. En tercer lugar, una máquina de estado permite que se creen cálculos complejos utilizando una secuencia de cálculos elementales. Una opción natural para implementar este esquema híbrido es una basada en picos porque los códigos de cuenta de pico son digitales, mientras que los códigos de tiempo de pico son analógicos. Ilustramos cómo los picos ofrecen formas fáciles de implementar los tres componentes de la computación híbrida escalable. Primero, como un ejemplo importante de computación analógica distribuida, mostramos cómo los picos pueden crear una representación modular distribuida de un número analógico mediante la implementación de interacciones de transporte digital entre neuronas analógicas spiking. En segundo lugar, mostramos cómo la restauración de la señal se puede realizar mediante la cuantificación recursiva de la cuenta de pico de códigos de tiempo de pico. En tercer lugar, utilizamos picos de un sistema dinámico analógico para desencadenar transiciones de estado en un sistema dinámico digital, que reconfigura el sistema dinámico analógico utilizando un vector de control binario; tales interacciones de retroalimentación entre sistemas dinámicos analógicos y digitales crean una máquina de estado híbrido (HSM). El HSM extiende y expande el concepto de una máquina-estado-finito digital al dominio híbrido. Presentamos datos experimentales de un HSM de dos neuronas en un chip que implementa conversión analógica-digital de corrección de errores con el uso simultáneo de tiempos de pico y códigos de cuenta de pico. También presentamos datos experimentales de circuitos de silicio que implementan el reconocimiento de patrones basado en HSM usando la sincronización de tiempo de pico. Delineamos cómo se pueden utilizar los HSM para realizar aprendizaje, cuantificación de vectores, reconocimiento de patrones de pico y generación, y cómo pueden ser reconfigurados ",
            "error": []
        },
        "error-correcting analog-to-digital conversion": {
            "translated_key": "conversión analógica-digital que corrige el error",
            "translated_annotated_text": "Cálculo híbrido escalable con picos Delineamos un esquema analógico-digital híbrido para la computación con tres características importantes que le permiten escalar a sistemas de gran complejidad: Primero, como el cálculo digital, que utiliza varias unidades lógicas precisas de un bit para calcular colectivamente una respuesta precisa a un cálculo, el esquema híbrido utiliza varias unidades analógicas de precisión moderada para calcular colectivamente una respuesta precisa a un cálculo. En segundo lugar, la restauración frecuente de la señal discreta de la información analógica impide el ruido analógico y el desplazamiento de la degradación del cálculo. En tercer lugar, una máquina de estado permite que se creen cálculos complejos utilizando una secuencia de cálculos elementales. Una opción natural para implementar este esquema híbrido es una basada en picos porque los códigos de cuenta de pico son digitales, mientras que los códigos de tiempo de pico son analógicos. Ilustramos cómo los picos ofrecen formas fáciles de implementar los tres componentes de la computación híbrida escalable. Primero, como un ejemplo importante de computación analógica distribuida, mostramos cómo los picos pueden crear una representación modular distribuida de un número analógico mediante la implementación de interacciones de transporte digital entre neuronas analógicas spiking. En segundo lugar, mostramos cómo la restauración de la señal se puede realizar mediante la cuantificación recursiva de la cuenta de pico de códigos de tiempo de pico. En tercer lugar, utilizamos picos de un sistema dinámico analógico para desencadenar transiciones de estado en un sistema dinámico digital, que reconfigura el sistema dinámico analógico utilizando un vector de control binario; tales interacciones de retroalimentación entre sistemas dinámicos analógicos y digitales crean una máquina de estado híbrido (HSM). El HSM extiende y expande el concepto de una máquina-estado-finito digital al dominio híbrido. Presentamos datos experimentales de un HSM de dos neuronas en un chip que implementa \"conversión analógica-digital que corrige el error\" con el uso concurrente de los códigos de pico-tiempo y pico-cuota. También presentamos datos experimentales de circuitos de silicio que implementan el reconocimiento de patrones basado en HSM usando la sincronización de tiempo de pico. Delineamos cómo se pueden utilizar los HSM para realizar aprendizaje, cuantificación de vectores, reconocimiento de patrones de pico y generación, y cómo pueden ser reconfigurados ",
            "error": [
                ""
            ]
        },
        "silicon circuits": {
            "translated_key": "circuitos de silicio",
            "translated_annotated_text": "Cálculo híbrido escalable con picos Delineamos un esquema analógico-digital híbrido para la computación con tres características importantes que le permiten escalar a sistemas de gran complejidad: Primero, como el cálculo digital, que utiliza varias unidades lógicas precisas de un bit para calcular colectivamente una respuesta precisa a un cálculo, el esquema híbrido utiliza varias unidades analógicas de precisión moderada para calcular colectivamente una respuesta precisa a un cálculo. En segundo lugar, la restauración frecuente de la señal discreta de la información analógica impide el ruido analógico y el desplazamiento de la degradación del cálculo. En tercer lugar, una máquina de estado permite que se creen cálculos complejos utilizando una secuencia de cálculos elementales. Una opción natural para implementar este esquema híbrido es una basada en picos porque los códigos de cuenta de pico son digitales, mientras que los códigos de tiempo de pico son analógicos. Ilustramos cómo los picos ofrecen formas fáciles de implementar los tres componentes de la computación híbrida escalable. Primero, como un ejemplo importante de computación analógica distribuida, mostramos cómo los picos pueden crear una representación modular distribuida de un número analógico mediante la implementación de interacciones de transporte digital entre neuronas analógicas spiking. En segundo lugar, mostramos cómo la restauración de la señal se puede realizar mediante la cuantificación recursiva de la cuenta de pico de códigos de tiempo de pico. En tercer lugar, utilizamos picos de un sistema dinámico analógico para desencadenar transiciones de estado en un sistema dinámico digital, que reconfigura el sistema dinámico analógico utilizando un vector de control binario; tales interacciones de retroalimentación entre sistemas dinámicos analógicos y digitales crean una máquina de estado híbrido (HSM). El HSM extiende y expande el concepto de una máquina-estado-finito digital al dominio híbrido. Presentamos datos experimentales de un HSM de dos neuronas en un chip que implementa conversión analógica-digital de corrección de errores con el uso simultáneo de tiempos de pico y códigos de cuenta de pico. También presentamos datos experimentales de \"circuitos de silicio\" que implementan el reconocimiento de patrones basado en HSM usando la sincronización de tiempo de pico. Delineamos cómo se pueden utilizar los HSM para realizar aprendizaje, cuantificación de vectores, reconocimiento de patrones de pico y generación, y cómo pueden ser reconfigurados ",
            "error": [
                ""
            ]
        },
        "pattern recognition": {
            "translated_key": "reconocimiento de patrones",
            "translated_annotated_text": "Cálculo híbrido escalable con picos Delineamos un esquema analógico-digital híbrido para la computación con tres características importantes que le permiten escalar a sistemas de gran complejidad: Primero, como el cálculo digital, que utiliza varias unidades lógicas precisas de un bit para calcular colectivamente una respuesta precisa a un cálculo, el esquema híbrido utiliza varias unidades analógicas de precisión moderada para calcular colectivamente una respuesta precisa a un cálculo. En segundo lugar, la restauración frecuente de la señal discreta de la información analógica impide el ruido analógico y el desplazamiento de la degradación del cálculo. En tercer lugar, una máquina de estado permite que se creen cálculos complejos utilizando una secuencia de cálculos elementales. Una opción natural para implementar este esquema híbrido es una basada en picos porque los códigos de cuenta de pico son digitales, mientras que los códigos de tiempo de pico son analógicos. Ilustramos cómo los picos ofrecen formas fáciles de implementar los tres componentes de la computación híbrida escalable. Primero, como un ejemplo importante de computación analógica distribuida, mostramos cómo los picos pueden crear una representación modular distribuida de un número analógico mediante la implementación de interacciones de transporte digital entre neuronas analógicas spiking. En segundo lugar, mostramos cómo la restauración de la señal se puede realizar mediante la cuantificación recursiva de la cuenta de pico de códigos de tiempo de pico. En tercer lugar, utilizamos picos de un sistema dinámico analógico para desencadenar transiciones de estado en un sistema dinámico digital, que reconfigura el sistema dinámico analógico utilizando un vector de control binario; tales interacciones de retroalimentación entre sistemas dinámicos analógicos y digitales crean una máquina de estado híbrido (HSM). El HSM extiende y expande el concepto de una máquina-estado-finito digital al dominio híbrido. Presentamos datos experimentales de un HSM de dos neuronas en un chip que implementa conversión analógica-digital de corrección de errores con el uso simultáneo de tiempos de pico y códigos de cuenta de pico. También presentamos datos experimentales de circuitos de silicio que implementan \"reconocimiento de patrones\" basado en HSM usando sincronización de tiempo de pico. Esbozamos cómo los HSM pueden ser usados para realizar aprendizaje, cuantificación vectorial, pico \"reconocimiento de patrones\" y generación, y cómo pueden ser reconfigurados ",
            "error": [
                ""
            ]
        },
        "learning": {
            "translated_key": "aprendizaje",
            "translated_annotated_text": "Cálculo híbrido escalable con picos Delineamos un esquema analógico-digital híbrido para la computación con tres características importantes que le permiten escalar a sistemas de gran complejidad: Primero, como el cálculo digital, que utiliza varias unidades lógicas precisas de un bit para calcular colectivamente una respuesta precisa a un cálculo, el esquema híbrido utiliza varias unidades analógicas de precisión moderada para calcular colectivamente una respuesta precisa a un cálculo. En segundo lugar, la restauración frecuente de la señal discreta de la información analógica impide el ruido analógico y el desplazamiento de la degradación del cálculo. En tercer lugar, una máquina de estado permite que se creen cálculos complejos utilizando una secuencia de cálculos elementales. Una opción natural para implementar este esquema híbrido es una basada en picos porque los códigos de cuenta de pico son digitales, mientras que los códigos de tiempo de pico son analógicos. Ilustramos cómo los picos ofrecen formas fáciles de implementar los tres componentes de la computación híbrida escalable. Primero, como un ejemplo importante de computación analógica distribuida, mostramos cómo los picos pueden crear una representación modular distribuida de un número analógico mediante la implementación de interacciones de transporte digital entre neuronas analógicas spiking. En segundo lugar, mostramos cómo la restauración de la señal se puede realizar mediante la cuantificación recursiva de la cuenta de pico de códigos de tiempo de pico. En tercer lugar, utilizamos picos de un sistema dinámico analógico para desencadenar transiciones de estado en un sistema dinámico digital, que reconfigura el sistema dinámico analógico utilizando un vector de control binario; tales interacciones de retroalimentación entre sistemas dinámicos analógicos y digitales crean una máquina de estado híbrido (HSM). El HSM extiende y expande el concepto de una máquina-estado-finito digital al dominio híbrido. Presentamos datos experimentales de un HSM de dos neuronas en un chip que implementa conversión analógica-digital de corrección de errores con el uso simultáneo de tiempos de pico y códigos de cuenta de pico. También presentamos datos experimentales de circuitos de silicio que implementan el reconocimiento de patrones basado en HSM usando la sincronización de tiempo de pico. Esbozamos cómo se pueden utilizar los HSM para realizar \"aprendizaje\", cuantificación de vectores, reconocimiento de patrones de pico y generación, y cómo se pueden reconfigurar ",
            "error": [
                ""
            ]
        },
        "vector quantization": {
            "translated_key": "cuantización de vectores",
            "translated_annotated_text": "Cálculo híbrido escalable con picos Delineamos un esquema analógico-digital híbrido para la computación con tres características importantes que le permiten escalar a sistemas de gran complejidad: Primero, como el cálculo digital, que utiliza varias unidades lógicas precisas de un bit para calcular colectivamente una respuesta precisa a un cálculo, el esquema híbrido utiliza varias unidades analógicas de precisión moderada para calcular colectivamente una respuesta precisa a un cálculo. En segundo lugar, la restauración frecuente de la señal discreta de la información analógica impide el ruido analógico y el desplazamiento de la degradación del cálculo. En tercer lugar, una máquina de estado permite que se creen cálculos complejos utilizando una secuencia de cálculos elementales. Una opción natural para implementar este esquema híbrido es una basada en picos porque los códigos de cuenta de pico son digitales, mientras que los códigos de tiempo de pico son analógicos. Ilustramos cómo los picos ofrecen formas fáciles de implementar los tres componentes de la computación híbrida escalable. Primero, como un ejemplo importante de computación analógica distribuida, mostramos cómo los picos pueden crear una representación modular distribuida de un número analógico mediante la implementación de interacciones de transporte digital entre neuronas analógicas spiking. En segundo lugar, mostramos cómo la restauración de la señal se puede realizar mediante la cuantificación recursiva de la cuenta de pico de códigos de tiempo de pico. En tercer lugar, utilizamos picos de un sistema dinámico analógico para desencadenar transiciones de estado en un sistema dinámico digital, que reconfigura el sistema dinámico analógico utilizando un vector de control binario; tales interacciones de retroalimentación entre sistemas dinámicos analógicos y digitales crean una máquina de estado híbrido (HSM). El HSM extiende y expande el concepto de una máquina-estado-finito digital al dominio híbrido. Presentamos datos experimentales de un HSM de dos neuronas en un chip que implementa conversión analógica-digital de corrección de errores con el uso simultáneo de tiempos de pico y códigos de cuenta de pico. También presentamos datos experimentales de circuitos de silicio que implementan el reconocimiento de patrones basado en HSM usando la sincronización de tiempo de pico. Esbozamos cómo se pueden utilizar los HSM para realizar aprendizaje, \"cuantización de vectores\", reconocimiento de patrones de pico y generación, y cómo pueden ser reconfigurados ",
            "error": [
                ""
            ]
        },
        "analogue-digital conversion": {
            "translated_key": [],
            "translated_annotated_text": "Cálculo híbrido escalable con picos Delineamos un esquema analógico-digital híbrido para la computación con tres características importantes que le permiten escalar a sistemas de gran complejidad: Primero, como el cálculo digital, que utiliza varias unidades lógicas precisas de un bit para calcular colectivamente una respuesta precisa a un cálculo, el esquema híbrido utiliza varias unidades analógicas de precisión moderada para calcular colectivamente una respuesta precisa a un cálculo. En segundo lugar, la restauración frecuente de la señal discreta de la información analógica impide el ruido analógico y el desplazamiento de la degradación del cálculo. En tercer lugar, una máquina de estado permite que se creen cálculos complejos utilizando una secuencia de cálculos elementales. Una opción natural para implementar este esquema híbrido es una basada en picos porque los códigos de cuenta de pico son digitales, mientras que los códigos de tiempo de pico son analógicos. Ilustramos cómo los picos ofrecen formas fáciles de implementar los tres componentes de la computación híbrida escalable. Primero, como un ejemplo importante de computación analógica distribuida, mostramos cómo los picos pueden crear una representación modular distribuida de un número analógico mediante la implementación de interacciones de transporte digital entre neuronas analógicas spiking. En segundo lugar, mostramos cómo la restauración de la señal se puede realizar mediante la cuantificación recursiva de la cuenta de pico de códigos de tiempo de pico. En tercer lugar, utilizamos picos de un sistema dinámico analógico para desencadenar transiciones de estado en un sistema dinámico digital, que reconfigura el sistema dinámico analógico utilizando un vector de control binario; tales interacciones de retroalimentación entre sistemas dinámicos analógicos y digitales crean una máquina de estado híbrido (HSM). El HSM extiende y expande el concepto de una máquina-estado-finito digital al dominio híbrido. Presentamos datos experimentales de un HSM de dos neuronas en un chip que implementa conversión analógica-digital de corrección de errores con el uso simultáneo de tiempos de pico y códigos de cuenta de pico. También presentamos datos experimentales de circuitos de silicio que implementan el reconocimiento de patrones basado en HSM usando la sincronización de tiempo de pico. Delineamos cómo se pueden utilizar los HSM para realizar aprendizaje, cuantificación de vectores, reconocimiento de patrones de pico y generación, y cómo pueden ser reconfigurados ",
            "error": []
        },
        "digital arithmetic": {
            "translated_key": [],
            "translated_annotated_text": "Cálculo híbrido escalable con picos Delineamos un esquema analógico-digital híbrido para la computación con tres características importantes que le permiten escalar a sistemas de gran complejidad: Primero, como el cálculo digital, que utiliza varias unidades lógicas precisas de un bit para calcular colectivamente una respuesta precisa a un cálculo, el esquema híbrido utiliza varias unidades analógicas de precisión moderada para calcular colectivamente una respuesta precisa a un cálculo. En segundo lugar, la restauración frecuente de la señal discreta de la información analógica impide el ruido analógico y el desplazamiento de la degradación del cálculo. En tercer lugar, una máquina de estado permite que se creen cálculos complejos utilizando una secuencia de cálculos elementales. Una opción natural para implementar este esquema híbrido es una basada en picos porque los códigos de cuenta de pico son digitales, mientras que los códigos de tiempo de pico son analógicos. Ilustramos cómo los picos ofrecen formas fáciles de implementar los tres componentes de la computación híbrida escalable. Primero, como un ejemplo importante de computación analógica distribuida, mostramos cómo los picos pueden crear una representación modular distribuida de un número analógico mediante la implementación de interacciones de transporte digital entre neuronas analógicas spiking. En segundo lugar, mostramos cómo la restauración de la señal se puede realizar mediante la cuantificación recursiva de la cuenta de pico de códigos de tiempo de pico. En tercer lugar, utilizamos picos de un sistema dinámico analógico para desencadenar transiciones de estado en un sistema dinámico digital, que reconfigura el sistema dinámico analógico utilizando un vector de control binario; tales interacciones de retroalimentación entre sistemas dinámicos analógicos y digitales crean una máquina de estado híbrido (HSM). El HSM extiende y expande el concepto de una máquina-estado-finito digital al dominio híbrido. Presentamos datos experimentales de un HSM de dos neuronas en un chip que implementa conversión analógica-digital de corrección de errores con el uso simultáneo de tiempos de pico y códigos de cuenta de pico. También presentamos datos experimentales de circuitos de silicio que implementan el reconocimiento de patrones basado en HSM usando la sincronización de tiempo de pico. Delineamos cómo se pueden utilizar los HSM para realizar aprendizaje, cuantificación de vectores, reconocimiento de patrones de pico y generación, y cómo pueden ser reconfigurados ",
            "error": []
        },
        "error correction": {
            "translated_key": [],
            "translated_annotated_text": "Cálculo híbrido escalable con picos Delineamos un esquema analógico-digital híbrido para la computación con tres características importantes que le permiten escalar a sistemas de gran complejidad: Primero, como el cálculo digital, que utiliza varias unidades lógicas precisas de un bit para calcular colectivamente una respuesta precisa a un cálculo, el esquema híbrido utiliza varias unidades analógicas de precisión moderada para calcular colectivamente una respuesta precisa a un cálculo. En segundo lugar, la restauración frecuente de la señal discreta de la información analógica impide el ruido analógico y el desplazamiento de la degradación del cálculo. En tercer lugar, una máquina de estado permite que se creen cálculos complejos utilizando una secuencia de cálculos elementales. Una opción natural para implementar este esquema híbrido es una basada en picos porque los códigos de cuenta de pico son digitales, mientras que los códigos de tiempo de pico son analógicos. Ilustramos cómo los picos ofrecen formas fáciles de implementar los tres componentes de la computación híbrida escalable. Primero, como un ejemplo importante de computación analógica distribuida, mostramos cómo los picos pueden crear una representación modular distribuida de un número analógico mediante la implementación de interacciones de transporte digital entre neuronas analógicas spiking. En segundo lugar, mostramos cómo la restauración de la señal se puede realizar mediante la cuantificación recursiva de la cuenta de pico de códigos de tiempo de pico. En tercer lugar, utilizamos picos de un sistema dinámico analógico para desencadenar transiciones de estado en un sistema dinámico digital, que reconfigura el sistema dinámico analógico utilizando un vector de control binario; tales interacciones de retroalimentación entre sistemas dinámicos analógicos y digitales crean una máquina de estado híbrido (HSM). El HSM extiende y expande el concepto de una máquina-estado-finito digital al dominio híbrido. Presentamos datos experimentales de un HSM de dos neuronas en un chip que implementa conversión analógica-digital de corrección de errores con el uso simultáneo de tiempos de pico y códigos de cuenta de pico. También presentamos datos experimentales de circuitos de silicio que implementan el reconocimiento de patrones basado en HSM usando la sincronización de tiempo de pico. Delineamos cómo se pueden utilizar los HSM para realizar aprendizaje, cuantificación de vectores, reconocimiento de patrones de pico y generación, y cómo pueden ser reconfigurados ",
            "error": []
        },
        "finite state machines": {
            "translated_key": [],
            "translated_annotated_text": "Cálculo híbrido escalable con picos Delineamos un esquema analógico-digital híbrido para la computación con tres características importantes que le permiten escalar a sistemas de gran complejidad: Primero, como el cálculo digital, que utiliza varias unidades lógicas precisas de un bit para calcular colectivamente una respuesta precisa a un cálculo, el esquema híbrido utiliza varias unidades analógicas de precisión moderada para calcular colectivamente una respuesta precisa a un cálculo. En segundo lugar, la restauración frecuente de la señal discreta de la información analógica impide el ruido analógico y el desplazamiento de la degradación del cálculo. En tercer lugar, una máquina de estado permite que se creen cálculos complejos utilizando una secuencia de cálculos elementales. Una opción natural para implementar este esquema híbrido es una basada en picos porque los códigos de cuenta de pico son digitales, mientras que los códigos de tiempo de pico son analógicos. Ilustramos cómo los picos ofrecen formas fáciles de implementar los tres componentes de la computación híbrida escalable. Primero, como un ejemplo importante de computación analógica distribuida, mostramos cómo los picos pueden crear una representación modular distribuida de un número analógico mediante la implementación de interacciones de transporte digital entre neuronas analógicas spiking. En segundo lugar, mostramos cómo la restauración de la señal se puede realizar mediante la cuantificación recursiva de la cuenta de pico de códigos de tiempo de pico. En tercer lugar, utilizamos picos de un sistema dinámico analógico para desencadenar transiciones de estado en un sistema dinámico digital, que reconfigura el sistema dinámico analógico utilizando un vector de control binario; tales interacciones de retroalimentación entre sistemas dinámicos analógicos y digitales crean una máquina de estado híbrido (HSM). El HSM extiende y expande el concepto de una máquina-estado-finito digital al dominio híbrido. Presentamos datos experimentales de un HSM de dos neuronas en un chip que implementa conversión analógica-digital de corrección de errores con el uso simultáneo de tiempos de pico y códigos de cuenta de pico. También presentamos datos experimentales de circuitos de silicio que implementan el reconocimiento de patrones basado en HSM usando la sincronización de tiempo de pico. Delineamos cómo se pueden utilizar los HSM para realizar aprendizaje, cuantificación de vectores, reconocimiento de patrones de pico y generación, y cómo pueden ser reconfigurados ",
            "error": []
        },
        "learning (artificial intelligence)": {
            "translated_key": [],
            "translated_annotated_text": "Cálculo híbrido escalable con picos Delineamos un esquema analógico-digital híbrido para la computación con tres características importantes que le permiten escalar a sistemas de gran complejidad: Primero, como el cálculo digital, que utiliza varias unidades lógicas precisas de un bit para calcular colectivamente una respuesta precisa a un cálculo, el esquema híbrido utiliza varias unidades analógicas de precisión moderada para calcular colectivamente una respuesta precisa a un cálculo. En segundo lugar, la restauración frecuente de la señal discreta de la información analógica impide el ruido analógico y el desplazamiento de la degradación del cálculo. En tercer lugar, una máquina de estado permite que se creen cálculos complejos utilizando una secuencia de cálculos elementales. Una opción natural para implementar este esquema híbrido es una basada en picos porque los códigos de cuenta de pico son digitales, mientras que los códigos de tiempo de pico son analógicos. Ilustramos cómo los picos ofrecen formas fáciles de implementar los tres componentes de la computación híbrida escalable. Primero, como un ejemplo importante de computación analógica distribuida, mostramos cómo los picos pueden crear una representación modular distribuida de un número analógico mediante la implementación de interacciones de transporte digital entre neuronas analógicas spiking. En segundo lugar, mostramos cómo la restauración de la señal se puede realizar mediante la cuantificación recursiva de la cuenta de pico de códigos de tiempo de pico. En tercer lugar, utilizamos picos de un sistema dinámico analógico para desencadenar transiciones de estado en un sistema dinámico digital, que reconfigura el sistema dinámico analógico utilizando un vector de control binario; tales interacciones de retroalimentación entre sistemas dinámicos analógicos y digitales crean una máquina de estado híbrido (HSM). El HSM extiende y expande el concepto de una máquina-estado-finito digital al dominio híbrido. Presentamos datos experimentales de un HSM de dos neuronas en un chip que implementa conversión analógica-digital de corrección de errores con el uso simultáneo de tiempos de pico y códigos de cuenta de pico. También presentamos datos experimentales de circuitos de silicio que implementan el reconocimiento de patrones basado en HSM usando la sincronización de tiempo de pico. Delineamos cómo se pueden utilizar los HSM para realizar aprendizaje, cuantificación de vectores, reconocimiento de patrones de pico y generación, y cómo pueden ser reconfigurados ",
            "error": []
        },
        "neural chips": {
            "translated_key": [],
            "translated_annotated_text": "Cálculo híbrido escalable con picos Delineamos un esquema analógico-digital híbrido para la computación con tres características importantes que le permiten escalar a sistemas de gran complejidad: Primero, como el cálculo digital, que utiliza varias unidades lógicas precisas de un bit para calcular colectivamente una respuesta precisa a un cálculo, el esquema híbrido utiliza varias unidades analógicas de precisión moderada para calcular colectivamente una respuesta precisa a un cálculo. En segundo lugar, la restauración frecuente de la señal discreta de la información analógica impide el ruido analógico y el desplazamiento de la degradación del cálculo. En tercer lugar, una máquina de estado permite que se creen cálculos complejos utilizando una secuencia de cálculos elementales. Una opción natural para implementar este esquema híbrido es una basada en picos porque los códigos de cuenta de pico son digitales, mientras que los códigos de tiempo de pico son analógicos. Ilustramos cómo los picos ofrecen formas fáciles de implementar los tres componentes de la computación híbrida escalable. Primero, como un ejemplo importante de computación analógica distribuida, mostramos cómo los picos pueden crear una representación modular distribuida de un número analógico mediante la implementación de interacciones de transporte digital entre neuronas analógicas spiking. En segundo lugar, mostramos cómo la restauración de la señal se puede realizar mediante la cuantificación recursiva de la cuenta de pico de códigos de tiempo de pico. En tercer lugar, utilizamos picos de un sistema dinámico analógico para desencadenar transiciones de estado en un sistema dinámico digital, que reconfigura el sistema dinámico analógico utilizando un vector de control binario; tales interacciones de retroalimentación entre sistemas dinámicos analógicos y digitales crean una máquina de estado híbrido (HSM). El HSM extiende y expande el concepto de una máquina-estado-finito digital al dominio híbrido. Presentamos datos experimentales de un HSM de dos neuronas en un chip que implementa conversión analógica-digital de corrección de errores con el uso simultáneo de tiempos de pico y códigos de cuenta de pico. También presentamos datos experimentales de circuitos de silicio que implementan el reconocimiento de patrones basado en HSM usando la sincronización de tiempo de pico. Delineamos cómo se pueden utilizar los HSM para realizar aprendizaje, cuantificación de vectores, reconocimiento de patrones de pico y generación, y cómo pueden ser reconfigurados ",
            "error": []
        },
        "signal restoration": {
            "translated_key": [
                "retorno de señal",
                "restauración de señales"
            ],
            "translated_annotated_text": "Cálculo híbrido escalable con picos Delineamos un esquema analógico-digital híbrido para la computación con tres características importantes que le permiten escalar a sistemas de gran complejidad: Primero, como el cálculo digital, que utiliza varias unidades lógicas precisas de un bit para calcular colectivamente una respuesta precisa a un cálculo, el esquema híbrido utiliza varias unidades analógicas de precisión moderada para calcular colectivamente una respuesta precisa a un cálculo. En segundo lugar, la frecuente \"retorno de señal\" discreta de la información analógica impide el ruido analógico y la compensación de la degradación del cálculo. En tercer lugar, una máquina de estado permite que se creen cálculos complejos utilizando una secuencia de cálculos elementales. Una opción natural para implementar este esquema híbrido es una basada en picos porque los códigos de cuenta de pico son digitales, mientras que los códigos de tiempo de pico son analógicos. Ilustramos cómo los picos ofrecen formas fáciles de implementar los tres componentes de la computación híbrida escalable. Primero, como un ejemplo importante de computación analógica distribuida, mostramos cómo los picos pueden crear una representación modular distribuida de un número analógico mediante la implementación de interacciones de transporte digital entre neuronas analógicas spiking. En segundo lugar, mostramos cómo la \"restauración de señales\" puede ser realizada por cuantificación recursiva de pico-cuento de códigos de tiempo de pico. En tercer lugar, utilizamos picos de un sistema dinámico analógico para desencadenar transiciones de estado en un sistema dinámico digital, que reconfigura el sistema dinámico analógico utilizando un vector de control binario; tales interacciones de retroalimentación entre sistemas dinámicos analógicos y digitales crean una máquina de estado híbrido (HSM). El HSM extiende y expande el concepto de una máquina-estado-finito digital al dominio híbrido. Presentamos datos experimentales de un HSM de dos neuronas en un chip que implementa conversión analógica-digital de corrección de errores con el uso simultáneo de tiempos de pico y códigos de cuenta de pico. También presentamos datos experimentales de circuitos de silicio que implementan el reconocimiento de patrones basado en HSM usando la sincronización de tiempo de pico. Delineamos cómo se pueden utilizar los HSM para realizar aprendizaje, cuantificación de vectores, reconocimiento de patrones de pico y generación, y cómo pueden ser reconfigurados ",
            "error": [
                "retorno de señal",
                "restauración de señales"
            ]
        },
        "vector quantisation": {
            "translated_key": [],
            "translated_annotated_text": "Cálculo híbrido escalable con picos Delineamos un esquema analógico-digital híbrido para la computación con tres características importantes que le permiten escalar a sistemas de gran complejidad: Primero, como el cálculo digital, que utiliza varias unidades lógicas precisas de un bit para calcular colectivamente una respuesta precisa a un cálculo, el esquema híbrido utiliza varias unidades analógicas de precisión moderada para calcular colectivamente una respuesta precisa a un cálculo. En segundo lugar, la restauración frecuente de la señal discreta de la información analógica impide el ruido analógico y el desplazamiento de la degradación del cálculo. En tercer lugar, una máquina de estado permite que se creen cálculos complejos utilizando una secuencia de cálculos elementales. Una opción natural para implementar este esquema híbrido es una basada en picos porque los códigos de cuenta de pico son digitales, mientras que los códigos de tiempo de pico son analógicos. Ilustramos cómo los picos ofrecen formas fáciles de implementar los tres componentes de la computación híbrida escalable. Primero, como un ejemplo importante de computación analógica distribuida, mostramos cómo los picos pueden crear una representación modular distribuida de un número analógico mediante la implementación de interacciones de transporte digital entre neuronas analógicas spiking. En segundo lugar, mostramos cómo la restauración de la señal se puede realizar mediante la cuantificación recursiva de la cuenta de pico de códigos de tiempo de pico. En tercer lugar, utilizamos picos de un sistema dinámico analógico para desencadenar transiciones de estado en un sistema dinámico digital, que reconfigura el sistema dinámico analógico utilizando un vector de control binario; tales interacciones de retroalimentación entre sistemas dinámicos analógicos y digitales crean una máquina de estado híbrido (HSM). El HSM extiende y expande el concepto de una máquina-estado-finito digital al dominio híbrido. Presentamos datos experimentales de un HSM de dos neuronas en un chip que implementa conversión analógica-digital de corrección de errores con el uso simultáneo de tiempos de pico y códigos de cuenta de pico. También presentamos datos experimentales de circuitos de silicio que implementan el reconocimiento de patrones basado en HSM usando la sincronización de tiempo de pico. Delineamos cómo se pueden utilizar los HSM para realizar aprendizaje, cuantificación de vectores, reconocimiento de patrones de pico y generación, y cómo pueden ser reconfigurados ",
            "error": []
        }
    }
}