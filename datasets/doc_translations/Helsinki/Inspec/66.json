{
    "original_text": "Regression testing of database applications Database applications features such as Structured Query Language or SQL, exception programming, integrity constraints, and table triggers pose difficulties for maintenance activities; especially for regression testing that follows modifications to database applications. In this work, we address these difficulties and propose a two phase regression testing methodology. In phase 1, we explore control flow and data flow analysis issues of database applications. Then, we propose an impact analysis technique that is based on dependencies that exist among the components of database applications. This analysis leads to selecting test cases from the initial test suite for regression testing the modified application. In phase 2, further reduction in the regression test cases is performed by using reduction algorithms. We present two such algorithms. The Graph Walk algorithm walks through the control flow graph of database modules and selects a safe set of test cases to retest. The Call Graph Firewall algorithm uses a firewall for the inter procedural level. Finally, a maintenance environment for database applications is described. Our experience with this regression testing methodology shows that the impact analysis technique is adequate for selecting regression tests and that phase 2 techniques can be used for further reduction in the number of theses tests",
    "original_translation": "Pruebas de regresión de aplicaciones de bases de datos Las aplicaciones de bases de datos como el lenguaje de preguntas estructuradas o SQL, la programación de excepciones, las restricciones de integridad y los desencadenantes de tablas plantean dificultades para las actividades de mantenimiento; especialmente para las pruebas de regresión que siguen las modificaciones de las aplicaciones de bases de datos. En este trabajo, abordamos estas dificultades y proponemos una metodología de prueba de regresión de dos fases. En la fase 1, exploramos los problemas de análisis de flujo de control y flujo de datos de las aplicaciones de bases de datos. Luego, proponemos una técnica de análisis de impacto que se basa en las dependencias que existen entre los componentes de las aplicaciones de base de datos. Este análisis conduce a seleccionar casos de prueba del conjunto de pruebas inicial para la prueba de regresión de la aplicación modificada. En la fase 2, se realiza una mayor reducción de los casos de prueba de regresión utilizando algoritmos de reducción. Presentamos dos algoritmos de este tipo. El algoritmo Graph Walk pasa por el gráfico de flujo de control de los módulos de base de datos y selecciona un conjunto seguro de casos de prueba para volver a probar. El algoritmo Call Graph Firewall utiliza un cortafuegos para el nivel interprocedimiento. Por último, se describe un entorno de mantenimiento para aplicaciones de bases de datos. Nuestra experiencia con esta metodología de pruebas de regresión muestra que la técnica de análisis de impacto es adecuada para seleccionar las pruebas de regresión y que las técnicas de fase 2 pueden utilizarse para reducir aún más el número de pruebas de tesis.",
    "error_count": 6,
    "keys": {
        "database applications": {
            "translated_key": "aplicaciones de base de datos",
            "translated_annotated_text": "Pruebas de regresión de \"aplicaciones de base de datos\" Las aplicaciones de base de datos como Lenguaje de consulta estructurada o SQL, programación de excepción, restricciones de integridad y desencadenantes de tabla plantean dificultades para las actividades de mantenimiento; especialmente para pruebas de regresión que siguen las modificaciones de \"aplicaciones de base de datos\". En este trabajo, abordamos estas dificultades y proponemos una metodología de prueba de regresión de dos fases. En la fase 1, exploramos los problemas de análisis de flujo de control y flujo de datos de \"aplicaciones de base de datos\". A continuación, proponemos una técnica de análisis de impacto que se basa en las dependencias que existen entre los componentes de las \"aplicaciones de base de datos\". Este análisis conduce a seleccionar casos de prueba del conjunto de pruebas inicial para la prueba de regresión de la aplicación modificada. En la fase 2, se realiza una mayor reducción de los casos de prueba de regresión utilizando algoritmos de reducción. Presentamos dos algoritmos de este tipo. El algoritmo Graph Walk pasa por el gráfico de flujo de control de los módulos de base de datos y selecciona un conjunto seguro de casos de prueba para volver a probar. El algoritmo Call Graph Firewall utiliza un cortafuegos para el nivel interprocedimiento. Por último, se describe un entorno de mantenimiento para \"aplicaciones de base de datos\". Nuestra experiencia con esta metodología de pruebas de regresión muestra que la técnica de análisis de impacto es adecuada para seleccionar las pruebas de regresión y que las técnicas de fase 2 pueden utilizarse para reducir aún más el número de pruebas de tesis. ",
            "error": [
                ""
            ]
        },
        "control flow analysis": {
            "translated_key": [],
            "translated_annotated_text": "Pruebas de regresión de aplicaciones de bases de datos Las aplicaciones de bases de datos como el lenguaje de preguntas estructuradas o SQL, la programación de excepciones, las restricciones de integridad y los desencadenantes de tablas plantean dificultades para las actividades de mantenimiento; especialmente para las pruebas de regresión que siguen las modificaciones de las aplicaciones de bases de datos. En este trabajo, abordamos estas dificultades y proponemos una metodología de prueba de regresión de dos fases. En la fase 1, exploramos los problemas de análisis de flujo de control y flujo de datos de las aplicaciones de bases de datos. Luego, proponemos una técnica de análisis de impacto que se basa en las dependencias que existen entre los componentes de las aplicaciones de base de datos. Este análisis conduce a seleccionar casos de prueba del conjunto de pruebas inicial para la prueba de regresión de la aplicación modificada. En la fase 2, se realiza una mayor reducción de los casos de prueba de regresión utilizando algoritmos de reducción. Presentamos dos algoritmos de este tipo. El algoritmo Graph Walk pasa por el gráfico de flujo de control de los módulos de base de datos y selecciona un conjunto seguro de casos de prueba para volver a probar. El algoritmo Call Graph Firewall utiliza un cortafuegos para el nivel interprocedimiento. Por último, se describe un entorno de mantenimiento para aplicaciones de bases de datos. Nuestra experiencia con esta metodología de pruebas de regresión muestra que la técnica de análisis de impacto es adecuada para seleccionar las pruebas de regresión y que las técnicas de fase 2 pueden utilizarse para reducir aún más el número de pruebas de tesis. ",
            "error": []
        },
        "data flow analysis": {
            "translated_key": "análisis de flujo de datos",
            "translated_annotated_text": "Pruebas de regresión de aplicaciones de bases de datos Las aplicaciones de bases de datos como el lenguaje de preguntas estructuradas o SQL, la programación de excepciones, las restricciones de integridad y los desencadenantes de tablas plantean dificultades para las actividades de mantenimiento; especialmente para las pruebas de regresión que siguen las modificaciones de las aplicaciones de bases de datos. En este trabajo, abordamos estas dificultades y proponemos una metodología de prueba de regresión de dos fases. En la fase 1, exploramos los problemas de flujo de control y \"análisis de flujo de datos\" de las aplicaciones de bases de datos. Luego, proponemos una técnica de análisis de impacto que se basa en las dependencias que existen entre los componentes de las aplicaciones de base de datos. Este análisis conduce a seleccionar casos de prueba del conjunto de pruebas inicial para la prueba de regresión de la aplicación modificada. En la fase 2, se realiza una mayor reducción de los casos de prueba de regresión utilizando algoritmos de reducción. Presentamos dos algoritmos de este tipo. El algoritmo Graph Walk pasa por el gráfico de flujo de control de los módulos de base de datos y selecciona un conjunto seguro de casos de prueba para volver a probar. El algoritmo Call Graph Firewall utiliza un cortafuegos para el nivel interprocedimiento. Por último, se describe un entorno de mantenimiento para aplicaciones de bases de datos. Nuestra experiencia con esta metodología de pruebas de regresión muestra que la técnica de análisis de impacto es adecuada para seleccionar las pruebas de regresión y que las técnicas de fase 2 pueden utilizarse para reducir aún más el número de pruebas de tesis. ",
            "error": [
                ""
            ]
        },
        "reduction algorithms": {
            "translated_key": "algoritmos de reducción",
            "translated_annotated_text": "Pruebas de regresión de aplicaciones de bases de datos Las aplicaciones de bases de datos como el lenguaje de preguntas estructuradas o SQL, la programación de excepciones, las restricciones de integridad y los desencadenantes de tablas plantean dificultades para las actividades de mantenimiento; especialmente para las pruebas de regresión que siguen las modificaciones de las aplicaciones de bases de datos. En este trabajo, abordamos estas dificultades y proponemos una metodología de prueba de regresión de dos fases. En la fase 1, exploramos los problemas de análisis de flujo de control y flujo de datos de las aplicaciones de bases de datos. Luego, proponemos una técnica de análisis de impacto que se basa en las dependencias que existen entre los componentes de las aplicaciones de base de datos. Este análisis conduce a seleccionar casos de prueba del conjunto de pruebas inicial para la prueba de regresión de la aplicación modificada. En la fase 2, se realiza una mayor reducción de los casos de prueba de regresión utilizando \"algoritmos de reducción\". Presentamos dos algoritmos de este tipo. El algoritmo Graph Walk pasa por el gráfico de flujo de control de los módulos de base de datos y selecciona un conjunto seguro de casos de prueba para volver a probar. El algoritmo Call Graph Firewall utiliza un cortafuegos para el nivel interprocedimiento. Por último, se describe un entorno de mantenimiento para aplicaciones de bases de datos. Nuestra experiencia con esta metodología de pruebas de regresión muestra que la técnica de análisis de impacto es adecuada para seleccionar las pruebas de regresión y que las técnicas de fase 2 pueden utilizarse para reducir aún más el número de pruebas de tesis. ",
            "error": [
                ""
            ]
        },
        "Graph Walk algorithm": {
            "translated_key": "Graph Walk",
            "translated_annotated_text": "Pruebas de regresión de aplicaciones de bases de datos Las aplicaciones de bases de datos como el lenguaje de preguntas estructuradas o SQL, la programación de excepciones, las restricciones de integridad y los desencadenantes de tablas plantean dificultades para las actividades de mantenimiento; especialmente para las pruebas de regresión que siguen las modificaciones de las aplicaciones de bases de datos. En este trabajo, abordamos estas dificultades y proponemos una metodología de prueba de regresión de dos fases. En la fase 1, exploramos los problemas de análisis de flujo de control y flujo de datos de las aplicaciones de bases de datos. Luego, proponemos una técnica de análisis de impacto que se basa en las dependencias que existen entre los componentes de las aplicaciones de base de datos. Este análisis conduce a seleccionar casos de prueba del conjunto de pruebas inicial para la prueba de regresión de la aplicación modificada. En la fase 2, se realiza una mayor reducción de los casos de prueba de regresión utilizando algoritmos de reducción. Presentamos dos algoritmos de este tipo. El algoritmo \"Graph Walk\" pasa por el gráfico de flujo de control de los módulos de base de datos y selecciona un conjunto seguro de casos de prueba para volver a probar. El algoritmo Call Graph Firewall utiliza un cortafuegos para el nivel interprocedimiento. Por último, se describe un entorno de mantenimiento para aplicaciones de bases de datos. Nuestra experiencia con esta metodología de pruebas de regresión muestra que la técnica de análisis de impacto es adecuada para seleccionar las pruebas de regresión y que las técnicas de fase 2 pueden utilizarse para reducir aún más el número de pruebas de tesis. ",
            "error": [
                ""
            ]
        },
        "control flow graph": {
            "translated_key": "gráfico de flujo de control",
            "translated_annotated_text": "Pruebas de regresión de aplicaciones de bases de datos Las aplicaciones de bases de datos como el lenguaje de preguntas estructuradas o SQL, la programación de excepciones, las restricciones de integridad y los desencadenantes de tablas plantean dificultades para las actividades de mantenimiento; especialmente para las pruebas de regresión que siguen las modificaciones de las aplicaciones de bases de datos. En este trabajo, abordamos estas dificultades y proponemos una metodología de prueba de regresión de dos fases. En la fase 1, exploramos los problemas de análisis de flujo de control y flujo de datos de las aplicaciones de bases de datos. Luego, proponemos una técnica de análisis de impacto que se basa en las dependencias que existen entre los componentes de las aplicaciones de base de datos. Este análisis conduce a seleccionar casos de prueba del conjunto de pruebas inicial para la prueba de regresión de la aplicación modificada. En la fase 2, se realiza una mayor reducción de los casos de prueba de regresión utilizando algoritmos de reducción. Presentamos dos algoritmos de este tipo. El algoritmo Graph Walk pasa por el \"gráfico de flujo de control\" de los módulos de base de datos y selecciona un conjunto seguro de casos de prueba para volver a probar. El algoritmo Call Graph Firewall utiliza un cortafuegos para el nivel interprocedimiento. Por último, se describe un entorno de mantenimiento para aplicaciones de bases de datos. Nuestra experiencia con esta metodología de pruebas de regresión muestra que la técnica de análisis de impacto es adecuada para seleccionar las pruebas de regresión y que las técnicas de fase 2 pueden utilizarse para reducir aún más el número de pruebas de tesis. ",
            "error": [
                ""
            ]
        },
        "Call Graph Firewall algorithm": {
            "translated_key": "Call Graph Firewall",
            "translated_annotated_text": "Pruebas de regresión de aplicaciones de bases de datos Las aplicaciones de bases de datos como el lenguaje de preguntas estructuradas o SQL, la programación de excepciones, las restricciones de integridad y los desencadenantes de tablas plantean dificultades para las actividades de mantenimiento; especialmente para las pruebas de regresión que siguen las modificaciones de las aplicaciones de bases de datos. En este trabajo, abordamos estas dificultades y proponemos una metodología de prueba de regresión de dos fases. En la fase 1, exploramos los problemas de análisis de flujo de control y flujo de datos de las aplicaciones de bases de datos. Luego, proponemos una técnica de análisis de impacto que se basa en las dependencias que existen entre los componentes de las aplicaciones de base de datos. Este análisis conduce a seleccionar casos de prueba del conjunto de pruebas inicial para la prueba de regresión de la aplicación modificada. En la fase 2, se realiza una mayor reducción de los casos de prueba de regresión utilizando algoritmos de reducción. Presentamos dos algoritmos de este tipo. El algoritmo Graph Walk pasa por el gráfico de flujo de control de los módulos de base de datos y selecciona un conjunto seguro de casos de prueba para volver a probar. El algoritmo \"Call Graph Firewall\" utiliza un cortafuegos para el nivel interprocesal. Por último, se describe un entorno de mantenimiento para aplicaciones de bases de datos. Nuestra experiencia con esta metodología de pruebas de regresión muestra que la técnica de análisis de impacto es adecuada para seleccionar las pruebas de regresión y que las técnicas de fase 2 pueden utilizarse para reducir aún más el número de pruebas de tesis. ",
            "error": [
                ""
            ]
        },
        "impact analysis": {
            "translated_key": "análisis de impacto",
            "translated_annotated_text": "Pruebas de regresión de aplicaciones de bases de datos Las aplicaciones de bases de datos como el lenguaje de preguntas estructuradas o SQL, la programación de excepciones, las restricciones de integridad y los desencadenantes de tablas plantean dificultades para las actividades de mantenimiento; especialmente para las pruebas de regresión que siguen las modificaciones de las aplicaciones de bases de datos. En este trabajo, abordamos estas dificultades y proponemos una metodología de prueba de regresión de dos fases. En la fase 1, exploramos los problemas de análisis de flujo de control y flujo de datos de las aplicaciones de bases de datos. A continuación, proponemos una técnica de \"análisis de impacto\" basada en las dependencias que existen entre los componentes de las aplicaciones de base de datos. Este análisis conduce a seleccionar casos de prueba del conjunto de pruebas inicial para la prueba de regresión de la aplicación modificada. En la fase 2, se realiza una mayor reducción de los casos de prueba de regresión utilizando algoritmos de reducción. Presentamos dos algoritmos de este tipo. El algoritmo Graph Walk pasa por el gráfico de flujo de control de los módulos de base de datos y selecciona un conjunto seguro de casos de prueba para volver a probar. El algoritmo Call Graph Firewall utiliza un cortafuegos para el nivel interprocedimiento. Por último, se describe un entorno de mantenimiento para aplicaciones de bases de datos. Nuestra experiencia con esta metodología de prueba de regresión muestra que la técnica de \"análisis de impacto\" es adecuada para seleccionar pruebas de regresión y que las técnicas de fase 2 pueden utilizarse para reducir aún más el número de pruebas de tesis. ",
            "error": [
                ""
            ]
        },
        "Structured Query Language": {
            "translated_key": "Structured Query Language",
            "translated_annotated_text": "Pruebas de regresión de aplicaciones de bases de datos Las aplicaciones de bases de datos como \"Structured Query Language\" o SQL, programación de excepciones, restricciones de integridad y desencadenantes de tablas plantean dificultades para las actividades de mantenimiento; especialmente para pruebas de regresión que siguen modificaciones a las aplicaciones de bases de datos. En este trabajo, abordamos estas dificultades y proponemos una metodología de prueba de regresión de dos fases. En la fase 1, exploramos los problemas de análisis de flujo de control y flujo de datos de las aplicaciones de bases de datos. Luego, proponemos una técnica de análisis de impacto que se basa en las dependencias que existen entre los componentes de las aplicaciones de base de datos. Este análisis conduce a seleccionar casos de prueba del conjunto de pruebas inicial para la prueba de regresión de la aplicación modificada. En la fase 2, se realiza una mayor reducción de los casos de prueba de regresión utilizando algoritmos de reducción. Presentamos dos algoritmos de este tipo. El algoritmo Graph Walk pasa por el gráfico de flujo de control de los módulos de base de datos y selecciona un conjunto seguro de casos de prueba para volver a probar. El algoritmo Call Graph Firewall utiliza un cortafuegos para el nivel interprocedimiento. Por último, se describe un entorno de mantenimiento para aplicaciones de bases de datos. Nuestra experiencia con esta metodología de pruebas de regresión muestra que la técnica de análisis de impacto es adecuada para seleccionar las pruebas de regresión y que las técnicas de fase 2 pueden utilizarse para reducir aún más el número de pruebas de tesis. ",
            "error": [
                ""
            ]
        },
        "SQL": {
            "translated_key": "SQL",
            "translated_annotated_text": "Pruebas de regresión de aplicaciones de bases de datos Las aplicaciones de bases de datos como el lenguaje de preguntas estructuradas o \"SQL\", la programación de excepciones, las restricciones de integridad y los desencadenantes de tablas plantean dificultades para las actividades de mantenimiento; especialmente para las pruebas de regresión que siguen las modificaciones de las aplicaciones de bases de datos. En este trabajo, abordamos estas dificultades y proponemos una metodología de prueba de regresión de dos fases. En la fase 1, exploramos los problemas de análisis de flujo de control y flujo de datos de las aplicaciones de bases de datos. Luego, proponemos una técnica de análisis de impacto que se basa en las dependencias que existen entre los componentes de las aplicaciones de base de datos. Este análisis conduce a seleccionar casos de prueba del conjunto de pruebas inicial para la prueba de regresión de la aplicación modificada. En la fase 2, se realiza una mayor reducción de los casos de prueba de regresión utilizando algoritmos de reducción. Presentamos dos algoritmos de este tipo. El algoritmo Graph Walk pasa por el gráfico de flujo de control de los módulos de base de datos y selecciona un conjunto seguro de casos de prueba para volver a probar. El algoritmo Call Graph Firewall utiliza un cortafuegos para el nivel interprocedimiento. Por último, se describe un entorno de mantenimiento para aplicaciones de bases de datos. Nuestra experiencia con esta metodología de pruebas de regresión muestra que la técnica de análisis de impacto es adecuada para seleccionar las pruebas de regresión y que las técnicas de fase 2 pueden utilizarse para reducir aún más el número de pruebas de tesis. ",
            "error": [
                ""
            ]
        },
        "exception programming": {
            "translated_key": "exception programming",
            "translated_annotated_text": "Pruebas de regresión de aplicaciones de bases de datos Las aplicaciones de bases de datos como Structured Query Language o SQL, \"exception programming\", restricciones de integridad y desencadenantes de tablas plantean dificultades para las actividades de mantenimiento; especialmente para pruebas de regresión que siguen modificaciones a las aplicaciones de bases de datos. En este trabajo, abordamos estas dificultades y proponemos una metodología de prueba de regresión de dos fases. En la fase 1, exploramos los problemas de análisis de flujo de control y flujo de datos de las aplicaciones de bases de datos. Luego, proponemos una técnica de análisis de impacto que se basa en las dependencias que existen entre los componentes de las aplicaciones de base de datos. Este análisis conduce a seleccionar casos de prueba del conjunto de pruebas inicial para la prueba de regresión de la aplicación modificada. En la fase 2, se realiza una mayor reducción de los casos de prueba de regresión utilizando algoritmos de reducción. Presentamos dos algoritmos de este tipo. El algoritmo Graph Walk pasa por el gráfico de flujo de control de los módulos de base de datos y selecciona un conjunto seguro de casos de prueba para volver a probar. El algoritmo Call Graph Firewall utiliza un cortafuegos para el nivel interprocedimiento. Por último, se describe un entorno de mantenimiento para aplicaciones de bases de datos. Nuestra experiencia con esta metodología de pruebas de regresión muestra que la técnica de análisis de impacto es adecuada para seleccionar las pruebas de regresión y que las técnicas de fase 2 pueden utilizarse para reducir aún más el número de pruebas de tesis. ",
            "error": [
                ""
            ]
        },
        "integrity constraints": {
            "translated_key": "limitaciones de integridad",
            "translated_annotated_text": "Pruebas de regresión de aplicaciones de bases de datos Las aplicaciones de bases de datos como Structured Query Language o SQL, la programación de excepciones, \"limitaciones de integridad\", y los desencadenantes de tablas plantean dificultades para las actividades de mantenimiento; especialmente para pruebas de regresión que siguen modificaciones a las aplicaciones de bases de datos. En este trabajo, abordamos estas dificultades y proponemos una metodología de prueba de regresión de dos fases. En la fase 1, exploramos los problemas de análisis de flujo de control y flujo de datos de las aplicaciones de bases de datos. Luego, proponemos una técnica de análisis de impacto que se basa en las dependencias que existen entre los componentes de las aplicaciones de base de datos. Este análisis conduce a seleccionar casos de prueba del conjunto de pruebas inicial para la prueba de regresión de la aplicación modificada. En la fase 2, se realiza una mayor reducción de los casos de prueba de regresión utilizando algoritmos de reducción. Presentamos dos algoritmos de este tipo. El algoritmo Graph Walk pasa por el gráfico de flujo de control de los módulos de base de datos y selecciona un conjunto seguro de casos de prueba para volver a probar. El algoritmo Call Graph Firewall utiliza un cortafuegos para el nivel interprocedimiento. Por último, se describe un entorno de mantenimiento para aplicaciones de bases de datos. Nuestra experiencia con esta metodología de pruebas de regresión muestra que la técnica de análisis de impacto es adecuada para seleccionar las pruebas de regresión y que las técnicas de fase 2 pueden utilizarse para reducir aún más el número de pruebas de tesis. ",
            "error": [
                ""
            ]
        },
        "table triggers": {
            "translated_key": "detonadores de tablas",
            "translated_annotated_text": "Pruebas de regresión de aplicaciones de bases de datos Las aplicaciones de bases de datos como el lenguaje de preguntas estructuradas o SQL, la programación de excepciones, las restricciones de integridad y los \"detonadores de tablas\" plantean dificultades para las actividades de mantenimiento; especialmente para las pruebas de regresión que siguen modificaciones a las aplicaciones de bases de datos. En este trabajo, abordamos estas dificultades y proponemos una metodología de prueba de regresión de dos fases. En la fase 1, exploramos los problemas de análisis de flujo de control y flujo de datos de las aplicaciones de bases de datos. Luego, proponemos una técnica de análisis de impacto que se basa en las dependencias que existen entre los componentes de las aplicaciones de base de datos. Este análisis conduce a seleccionar casos de prueba del conjunto de pruebas inicial para la prueba de regresión de la aplicación modificada. En la fase 2, se realiza una mayor reducción de los casos de prueba de regresión utilizando algoritmos de reducción. Presentamos dos algoritmos de este tipo. El algoritmo Graph Walk pasa por el gráfico de flujo de control de los módulos de base de datos y selecciona un conjunto seguro de casos de prueba para volver a probar. El algoritmo Call Graph Firewall utiliza un cortafuegos para el nivel interprocedimiento. Por último, se describe un entorno de mantenimiento para aplicaciones de bases de datos. Nuestra experiencia con esta metodología de pruebas de regresión muestra que la técnica de análisis de impacto es adecuada para seleccionar las pruebas de regresión y que las técnicas de fase 2 pueden utilizarse para reducir aún más el número de pruebas de tesis. ",
            "error": [
                ""
            ]
        },
        "two phase regression testing methodology": {
            "translated_key": "metodología de prueba de regresión de dos fases",
            "translated_annotated_text": "Pruebas de regresión de aplicaciones de bases de datos Las aplicaciones de bases de datos como el lenguaje de preguntas estructuradas o SQL, la programación de excepciones, las restricciones de integridad y los desencadenantes de tablas plantean dificultades para las actividades de mantenimiento; especialmente para las pruebas de regresión que siguen las modificaciones de las aplicaciones de bases de datos. En este trabajo, abordamos estas dificultades y proponemos una \"metodología de prueba de regresión de dos fases\". En la fase 1, exploramos los problemas de análisis de flujo de control y flujo de datos de las aplicaciones de bases de datos. Luego, proponemos una técnica de análisis de impacto que se basa en las dependencias que existen entre los componentes de las aplicaciones de base de datos. Este análisis conduce a seleccionar casos de prueba del conjunto de pruebas inicial para la prueba de regresión de la aplicación modificada. En la fase 2, se realiza una mayor reducción de los casos de prueba de regresión utilizando algoritmos de reducción. Presentamos dos algoritmos de este tipo. El algoritmo Graph Walk pasa por el gráfico de flujo de control de los módulos de base de datos y selecciona un conjunto seguro de casos de prueba para volver a probar. El algoritmo Call Graph Firewall utiliza un cortafuegos para el nivel interprocedimiento. Por último, se describe un entorno de mantenimiento para aplicaciones de bases de datos. Nuestra experiencia con esta metodología de pruebas de regresión muestra que la técnica de análisis de impacto es adecuada para seleccionar las pruebas de regresión y que las técnicas de fase 2 pueden utilizarse para reducir aún más el número de pruebas de tesis. ",
            "error": [
                ""
            ]
        },
        "data flow graphs": {
            "translated_key": [],
            "translated_annotated_text": "Pruebas de regresión de aplicaciones de bases de datos Las aplicaciones de bases de datos como el lenguaje de preguntas estructuradas o SQL, la programación de excepciones, las restricciones de integridad y los desencadenantes de tablas plantean dificultades para las actividades de mantenimiento; especialmente para las pruebas de regresión que siguen las modificaciones de las aplicaciones de bases de datos. En este trabajo, abordamos estas dificultades y proponemos una metodología de prueba de regresión de dos fases. En la fase 1, exploramos los problemas de análisis de flujo de control y flujo de datos de las aplicaciones de bases de datos. Luego, proponemos una técnica de análisis de impacto que se basa en las dependencias que existen entre los componentes de las aplicaciones de base de datos. Este análisis conduce a seleccionar casos de prueba del conjunto de pruebas inicial para la prueba de regresión de la aplicación modificada. En la fase 2, se realiza una mayor reducción de los casos de prueba de regresión utilizando algoritmos de reducción. Presentamos dos algoritmos de este tipo. El algoritmo Graph Walk pasa por el gráfico de flujo de control de los módulos de base de datos y selecciona un conjunto seguro de casos de prueba para volver a probar. El algoritmo Call Graph Firewall utiliza un cortafuegos para el nivel interprocedimiento. Por último, se describe un entorno de mantenimiento para aplicaciones de bases de datos. Nuestra experiencia con esta metodología de pruebas de regresión muestra que la técnica de análisis de impacto es adecuada para seleccionar las pruebas de regresión y que las técnicas de fase 2 pueden utilizarse para reducir aún más el número de pruebas de tesis. ",
            "error": []
        },
        "data integrity": {
            "translated_key": [],
            "translated_annotated_text": "Pruebas de regresión de aplicaciones de bases de datos Las aplicaciones de bases de datos como el lenguaje de preguntas estructuradas o SQL, la programación de excepciones, las restricciones de integridad y los desencadenantes de tablas plantean dificultades para las actividades de mantenimiento; especialmente para las pruebas de regresión que siguen las modificaciones de las aplicaciones de bases de datos. En este trabajo, abordamos estas dificultades y proponemos una metodología de prueba de regresión de dos fases. En la fase 1, exploramos los problemas de análisis de flujo de control y flujo de datos de las aplicaciones de bases de datos. Luego, proponemos una técnica de análisis de impacto que se basa en las dependencias que existen entre los componentes de las aplicaciones de base de datos. Este análisis conduce a seleccionar casos de prueba del conjunto de pruebas inicial para la prueba de regresión de la aplicación modificada. En la fase 2, se realiza una mayor reducción de los casos de prueba de regresión utilizando algoritmos de reducción. Presentamos dos algoritmos de este tipo. El algoritmo Graph Walk pasa por el gráfico de flujo de control de los módulos de base de datos y selecciona un conjunto seguro de casos de prueba para volver a probar. El algoritmo Call Graph Firewall utiliza un cortafuegos para el nivel interprocedimiento. Por último, se describe un entorno de mantenimiento para aplicaciones de bases de datos. Nuestra experiencia con esta metodología de pruebas de regresión muestra que la técnica de análisis de impacto es adecuada para seleccionar las pruebas de regresión y que las técnicas de fase 2 pueden utilizarse para reducir aún más el número de pruebas de tesis. ",
            "error": []
        },
        "database management systems": {
            "translated_key": [],
            "translated_annotated_text": "Pruebas de regresión de aplicaciones de bases de datos Las aplicaciones de bases de datos como el lenguaje de preguntas estructuradas o SQL, la programación de excepciones, las restricciones de integridad y los desencadenantes de tablas plantean dificultades para las actividades de mantenimiento; especialmente para las pruebas de regresión que siguen las modificaciones de las aplicaciones de bases de datos. En este trabajo, abordamos estas dificultades y proponemos una metodología de prueba de regresión de dos fases. En la fase 1, exploramos los problemas de análisis de flujo de control y flujo de datos de las aplicaciones de bases de datos. Luego, proponemos una técnica de análisis de impacto que se basa en las dependencias que existen entre los componentes de las aplicaciones de base de datos. Este análisis conduce a seleccionar casos de prueba del conjunto de pruebas inicial para la prueba de regresión de la aplicación modificada. En la fase 2, se realiza una mayor reducción de los casos de prueba de regresión utilizando algoritmos de reducción. Presentamos dos algoritmos de este tipo. El algoritmo Graph Walk pasa por el gráfico de flujo de control de los módulos de base de datos y selecciona un conjunto seguro de casos de prueba para volver a probar. El algoritmo Call Graph Firewall utiliza un cortafuegos para el nivel interprocedimiento. Por último, se describe un entorno de mantenimiento para aplicaciones de bases de datos. Nuestra experiencia con esta metodología de pruebas de regresión muestra que la técnica de análisis de impacto es adecuada para seleccionar las pruebas de regresión y que las técnicas de fase 2 pueden utilizarse para reducir aún más el número de pruebas de tesis. ",
            "error": []
        },
        "program testing": {
            "translated_key": [],
            "translated_annotated_text": "Pruebas de regresión de aplicaciones de bases de datos Las aplicaciones de bases de datos como el lenguaje de preguntas estructuradas o SQL, la programación de excepciones, las restricciones de integridad y los desencadenantes de tablas plantean dificultades para las actividades de mantenimiento; especialmente para las pruebas de regresión que siguen las modificaciones de las aplicaciones de bases de datos. En este trabajo, abordamos estas dificultades y proponemos una metodología de prueba de regresión de dos fases. En la fase 1, exploramos los problemas de análisis de flujo de control y flujo de datos de las aplicaciones de bases de datos. Luego, proponemos una técnica de análisis de impacto que se basa en las dependencias que existen entre los componentes de las aplicaciones de base de datos. Este análisis conduce a seleccionar casos de prueba del conjunto de pruebas inicial para la prueba de regresión de la aplicación modificada. En la fase 2, se realiza una mayor reducción de los casos de prueba de regresión utilizando algoritmos de reducción. Presentamos dos algoritmos de este tipo. El algoritmo Graph Walk pasa por el gráfico de flujo de control de los módulos de base de datos y selecciona un conjunto seguro de casos de prueba para volver a probar. El algoritmo Call Graph Firewall utiliza un cortafuegos para el nivel interprocedimiento. Por último, se describe un entorno de mantenimiento para aplicaciones de bases de datos. Nuestra experiencia con esta metodología de pruebas de regresión muestra que la técnica de análisis de impacto es adecuada para seleccionar las pruebas de regresión y que las técnicas de fase 2 pueden utilizarse para reducir aún más el número de pruebas de tesis. ",
            "error": []
        },
        "software maintenance": {
            "translated_key": [],
            "translated_annotated_text": "Pruebas de regresión de aplicaciones de bases de datos Las aplicaciones de bases de datos como el lenguaje de preguntas estructuradas o SQL, la programación de excepciones, las restricciones de integridad y los desencadenantes de tablas plantean dificultades para las actividades de mantenimiento; especialmente para las pruebas de regresión que siguen las modificaciones de las aplicaciones de bases de datos. En este trabajo, abordamos estas dificultades y proponemos una metodología de prueba de regresión de dos fases. En la fase 1, exploramos los problemas de análisis de flujo de control y flujo de datos de las aplicaciones de bases de datos. Luego, proponemos una técnica de análisis de impacto que se basa en las dependencias que existen entre los componentes de las aplicaciones de base de datos. Este análisis conduce a seleccionar casos de prueba del conjunto de pruebas inicial para la prueba de regresión de la aplicación modificada. En la fase 2, se realiza una mayor reducción de los casos de prueba de regresión utilizando algoritmos de reducción. Presentamos dos algoritmos de este tipo. El algoritmo Graph Walk pasa por el gráfico de flujo de control de los módulos de base de datos y selecciona un conjunto seguro de casos de prueba para volver a probar. El algoritmo Call Graph Firewall utiliza un cortafuegos para el nivel interprocedimiento. Por último, se describe un entorno de mantenimiento para aplicaciones de bases de datos. Nuestra experiencia con esta metodología de pruebas de regresión muestra que la técnica de análisis de impacto es adecuada para seleccionar las pruebas de regresión y que las técnicas de fase 2 pueden utilizarse para reducir aún más el número de pruebas de tesis. ",
            "error": []
        }
    }
}