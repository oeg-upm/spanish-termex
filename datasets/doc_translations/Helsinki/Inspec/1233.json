{
    "original_text": "Advanced optimization strategies in the Rice dHPF compiler High-Performance Fortran (HPF) was envisioned as a vehicle for modernizing legacy Fortran codes to achieve scalable parallel performance. To a large extent, todays commercially available HPF compilers have failed to deliver scalable parallel performance for a broad spectrum of applications because of insufficiently powerful compiler analysis and optimization. Substantial restructuring and hand-optimization can be required to achieve acceptable performance with an HPF port of an existing Fortran application, even for regular data-parallel applications. A key goal of the Rice dHPF compiler project has been to develop optimization techniques that enable a wide range of existing scientific applications to be ported easily to efficient HPF with minimal restructuring. This paper describes the challenges to effective parallelization presented by complex (but regular) data-parallel applications, and then describes how the novel analysis and optimization technologies in the dHPF compiler address these challenges effectively, without major rewriting of the applications. We illustrate the techniques by describing their use for parallelizing the NAS SP and BT benchmarks. The dHPF compiler generates multipartitioned parallelizations of these codes that are approaching the scalability and efficiency of sophisticated hand-coded parallelizations",
    "original_translation": "Estrategias avanzadas de optimización en el compilador Rice dHPF High-Performance Fortran (HPF) fue concebido como un vehículo para modernizar los códigos de Fortran heredados para lograr un rendimiento paralelo escalable. En gran medida, hoy en día los compiladores de HPF disponibles comercialmente no han logrado ofrecer un rendimiento paralelo escalable para un amplio espectro de aplicaciones debido a un análisis y optimización de compiladores insuficientemente potentes. Se puede requerir una reestructuración sustancial y una optimización manual para lograr un rendimiento aceptable con un puerto de HPF de una aplicación existente de Fortran, incluso para aplicaciones regulares de pares de datos. Un objetivo clave del proyecto del compilador Rice dHPF ha sido desarrollar técnicas de optimización que permitan portar fácilmente una amplia gama de aplicaciones científicas existentes a HPF eficiente con una reestructuración mínima. Este artículo describe los desafíos a la paralelización efectiva presentados por aplicaciones complejas (pero regulares) de datos paralelos, y luego describe cómo las nuevas tecnologías de análisis y optimización en el compilador dHPF abordan estos desafíos de manera efectiva, sin una reescritura importante de las aplicaciones. Ilustramos las técnicas describiendo su uso para paralelizar los puntos de referencia de NAS SP y BT. El compilador dHPF genera paralelismos multiparticionados de estos códigos que se acercan a la escalabilidad y eficiencia de sofisticadas paralelizaciónes codificadas a mano",
    "error_count": 8,
    "keys": {
        "Mgh-Performance Fortran": {
            "translated_key": [],
            "translated_annotated_text": "Estrategias avanzadas de optimización en el compilador Rice dHPF High-Performance Fortran (HPF) fue concebido como un vehículo para modernizar los códigos de Fortran heredados para lograr un rendimiento paralelo escalable. En gran medida, hoy en día los compiladores de HPF disponibles comercialmente no han logrado ofrecer un rendimiento paralelo escalable para un amplio espectro de aplicaciones debido a un análisis y optimización de compiladores insuficientemente potentes. Se puede requerir una reestructuración sustancial y una optimización manual para lograr un rendimiento aceptable con un puerto de HPF de una aplicación existente de Fortran, incluso para aplicaciones regulares de pares de datos. Un objetivo clave del proyecto del compilador Rice dHPF ha sido desarrollar técnicas de optimización que permitan portar fácilmente una amplia gama de aplicaciones científicas existentes a HPF eficiente con una reestructuración mínima. Este artículo describe los desafíos a la paralelización efectiva presentados por aplicaciones complejas (pero regulares) de datos paralelos, y luego describe cómo las nuevas tecnologías de análisis y optimización en el compilador dHPF abordan estos desafíos de manera efectiva, sin una reescritura importante de las aplicaciones. Ilustramos las técnicas describiendo su uso para paralelizar los puntos de referencia de NAS SP y BT. El compilador dHPF genera paralelismos multiparticionados de estos códigos que se acercan a la escalabilidad y eficiencia de sofisticadas paralelizaciónes codificadas a mano ",
            "error": []
        },
        "legacy Fortran codes": {
            "translated_key": "códigos de legado Fortran",
            "translated_annotated_text": "Estrategias avanzadas de optimización en el compilador Rice dHPF High-Performance Fortran (HPF) fue concebido como un vehículo para modernizar \"códigos de legado Fortran\" para lograr un rendimiento paralelo escalable. En gran medida, hoy en día los compiladores de HPF disponibles comercialmente no han logrado ofrecer un rendimiento paralelo escalable para un amplio espectro de aplicaciones debido a un análisis y optimización de compiladores insuficientemente potentes. Se puede requerir una reestructuración sustancial y una optimización manual para lograr un rendimiento aceptable con un puerto de HPF de una aplicación existente de Fortran, incluso para aplicaciones regulares de pares de datos. Un objetivo clave del proyecto del compilador Rice dHPF ha sido desarrollar técnicas de optimización que permitan portar fácilmente una amplia gama de aplicaciones científicas existentes a HPF eficiente con una reestructuración mínima. Este artículo describe los desafíos a la paralelización efectiva presentados por aplicaciones complejas (pero regulares) de datos paralelos, y luego describe cómo las nuevas tecnologías de análisis y optimización en el compilador dHPF abordan estos desafíos de manera efectiva, sin una reescritura importante de las aplicaciones. Ilustramos las técnicas describiendo su uso para paralelizar los puntos de referencia de NAS SP y BT. El compilador dHPF genera paralelismos multiparticionados de estos códigos que se acercan a la escalabilidad y eficiencia de sofisticadas paralelizaciónes codificadas a mano ",
            "error": [
                ""
            ]
        },
        "parallel performance": {
            "translated_key": "performance paralelo",
            "translated_annotated_text": "Estrategias avanzadas de optimización en el compilador Rice dHPF High-Performance Fortran (HPF) fue concebido como un vehículo para modernizar los códigos de Fortran heredados para lograr un \"performance paralelo\" escalable. En gran medida, hoy en día los compiladores de HPF disponibles comercialmente no han podido ofrecer \"performance paralelo\" escalable para un amplio espectro de aplicaciones debido a un análisis y optimización de compiladores insuficientemente potentes. Se puede requerir una reestructuración sustancial y una optimización manual para lograr un rendimiento aceptable con un puerto de HPF de una aplicación existente de Fortran, incluso para aplicaciones regulares de pares de datos. Un objetivo clave del proyecto del compilador Rice dHPF ha sido desarrollar técnicas de optimización que permitan portar fácilmente una amplia gama de aplicaciones científicas existentes a HPF eficiente con una reestructuración mínima. Este artículo describe los desafíos a la paralelización efectiva presentados por aplicaciones complejas (pero regulares) de datos paralelos, y luego describe cómo las nuevas tecnologías de análisis y optimización en el compilador dHPF abordan estos desafíos de manera efectiva, sin una reescritura importante de las aplicaciones. Ilustramos las técnicas describiendo su uso para paralelizar los puntos de referencia de NAS SP y BT. El compilador dHPF genera paralelismos multiparticionados de estos códigos que se acercan a la escalabilidad y eficiencia de sofisticadas paralelizaciónes codificadas a mano ",
            "error": [
                ""
            ]
        },
        "HPF compilers": {
            "translated_key": "compiladores HPF",
            "translated_annotated_text": "Estrategias avanzadas de optimización en el compilador Rice dHPF High-Performance Fortran (HPF) fue concebido como un vehículo para modernizar los códigos de Fortran heredados para lograr un rendimiento paralelo escalable. En gran medida, los \"compiladores HPF\" de hoy disponibles comercialmente no han logrado ofrecer un rendimiento paralelo escalable para un amplio espectro de aplicaciones debido a un análisis y optimización de compiladores insuficientemente potentes. Se puede requerir una reestructuración sustancial y una optimización manual para lograr un rendimiento aceptable con un puerto de HPF de una aplicación existente de Fortran, incluso para aplicaciones regulares de pares de datos. Un objetivo clave del proyecto del compilador Rice dHPF ha sido desarrollar técnicas de optimización que permitan portar fácilmente una amplia gama de aplicaciones científicas existentes a HPF eficiente con una reestructuración mínima. Este artículo describe los desafíos a la paralelización efectiva presentados por aplicaciones complejas (pero regulares) de datos paralelos, y luego describe cómo las nuevas tecnologías de análisis y optimización en el compilador dHPF abordan estos desafíos de manera efectiva, sin una reescritura importante de las aplicaciones. Ilustramos las técnicas describiendo su uso para paralelizar los puntos de referencia de NAS SP y BT. El compilador dHPF genera paralelismos multiparticionados de estos códigos que se acercan a la escalabilidad y eficiencia de sofisticadas paralelizaciónes codificadas a mano ",
            "error": [
                ""
            ]
        },
        "compiler analysis": {
            "translated_key": "análisis de compresores",
            "translated_annotated_text": "Estrategias avanzadas de optimización en el compilador Rice dHPF High-Performance Fortran (HPF) fue concebido como un vehículo para modernizar los códigos de Fortran heredados para lograr un rendimiento paralelo escalable. En gran medida, hoy en día los compiladores de HPF disponibles comercialmente no han logrado ofrecer un rendimiento paralelo escalable para un amplio espectro de aplicaciones debido a un \"análisis de compresores\" y optimización insuficientemente potentes. Se puede requerir una reestructuración sustancial y una optimización manual para lograr un rendimiento aceptable con un puerto de HPF de una aplicación existente de Fortran, incluso para aplicaciones regulares de pares de datos. Un objetivo clave del proyecto del compilador Rice dHPF ha sido desarrollar técnicas de optimización que permitan portar fácilmente una amplia gama de aplicaciones científicas existentes a HPF eficiente con una reestructuración mínima. Este artículo describe los desafíos a la paralelización efectiva presentados por aplicaciones complejas (pero regulares) de datos paralelos, y luego describe cómo las nuevas tecnologías de análisis y optimización en el compilador dHPF abordan estos desafíos de manera efectiva, sin una reescritura importante de las aplicaciones. Ilustramos las técnicas describiendo su uso para paralelizar los puntos de referencia de NAS SP y BT. El compilador dHPF genera paralelismos multiparticionados de estos códigos que se acercan a la escalabilidad y eficiencia de sofisticadas paralelizaciónes codificadas a mano ",
            "error": [
                ""
            ]
        },
        "compiler optimization": {
            "translated_key": [],
            "translated_annotated_text": "Estrategias avanzadas de optimización en el compilador Rice dHPF High-Performance Fortran (HPF) fue concebido como un vehículo para modernizar los códigos de Fortran heredados para lograr un rendimiento paralelo escalable. En gran medida, hoy en día los compiladores de HPF disponibles comercialmente no han logrado ofrecer un rendimiento paralelo escalable para un amplio espectro de aplicaciones debido a un análisis y optimización de compiladores insuficientemente potentes. Se puede requerir una reestructuración sustancial y una optimización manual para lograr un rendimiento aceptable con un puerto de HPF de una aplicación existente de Fortran, incluso para aplicaciones regulares de pares de datos. Un objetivo clave del proyecto del compilador Rice dHPF ha sido desarrollar técnicas de optimización que permitan portar fácilmente una amplia gama de aplicaciones científicas existentes a HPF eficiente con una reestructuración mínima. Este artículo describe los desafíos a la paralelización efectiva presentados por aplicaciones complejas (pero regulares) de datos paralelos, y luego describe cómo las nuevas tecnologías de análisis y optimización en el compilador dHPF abordan estos desafíos de manera efectiva, sin una reescritura importante de las aplicaciones. Ilustramos las técnicas describiendo su uso para paralelizar los puntos de referencia de NAS SP y BT. El compilador dHPF genera paralelismos multiparticionados de estos códigos que se acercan a la escalabilidad y eficiencia de sofisticadas paralelizaciónes codificadas a mano ",
            "error": []
        },
        "Rice dHPF compiler": {
            "translated_key": [
                "Rice dHPF",
                "compilador Rice dHPF"
            ],
            "translated_annotated_text": "Estrategias avanzadas de optimización en el compilador \"Rice dHPF\" de alto rendimiento Fortran (HPF) fue concebido como un vehículo para modernizar los códigos de Fortran heredados para lograr un rendimiento paralelo escalable. En gran medida, hoy en día los compiladores de HPF disponibles comercialmente no han logrado ofrecer un rendimiento paralelo escalable para un amplio espectro de aplicaciones debido a un análisis y optimización de compiladores insuficientemente potentes. Se puede requerir una reestructuración sustancial y una optimización manual para lograr un rendimiento aceptable con un puerto de HPF de una aplicación existente de Fortran, incluso para aplicaciones regulares de pares de datos. Un objetivo clave del proyecto de \"compilador Rice dHPF\" ha sido desarrollar técnicas de optimización que permitan portar fácilmente una amplia gama de aplicaciones científicas existentes a HPF eficiente con una reestructuración mínima. Este artículo describe los desafíos a la paralelización efectiva presentados por aplicaciones complejas (pero regulares) de datos paralelos, y luego describe cómo las nuevas tecnologías de análisis y optimización en el compilador dHPF abordan estos desafíos de manera efectiva, sin una reescritura importante de las aplicaciones. Ilustramos las técnicas describiendo su uso para paralelizar los puntos de referencia de NAS SP y BT. El compilador dHPF genera paralelismos multiparticionados de estos códigos que se acercan a la escalabilidad y eficiencia de sofisticadas paralelizaciónes codificadas a mano ",
            "error": [
                "Rice dHPF",
                "compilador Rice dHPF"
            ]
        },
        "multipartitioning": {
            "translated_key": [],
            "translated_annotated_text": "Estrategias avanzadas de optimización en el compilador Rice dHPF High-Performance Fortran (HPF) fue concebido como un vehículo para modernizar los códigos de Fortran heredados para lograr un rendimiento paralelo escalable. En gran medida, hoy en día los compiladores de HPF disponibles comercialmente no han logrado ofrecer un rendimiento paralelo escalable para un amplio espectro de aplicaciones debido a un análisis y optimización de compiladores insuficientemente potentes. Se puede requerir una reestructuración sustancial y una optimización manual para lograr un rendimiento aceptable con un puerto de HPF de una aplicación existente de Fortran, incluso para aplicaciones regulares de pares de datos. Un objetivo clave del proyecto del compilador Rice dHPF ha sido desarrollar técnicas de optimización que permitan portar fácilmente una amplia gama de aplicaciones científicas existentes a HPF eficiente con una reestructuración mínima. Este artículo describe los desafíos a la paralelización efectiva presentados por aplicaciones complejas (pero regulares) de datos paralelos, y luego describe cómo las nuevas tecnologías de análisis y optimización en el compilador dHPF abordan estos desafíos de manera efectiva, sin una reescritura importante de las aplicaciones. Ilustramos las técnicas describiendo su uso para paralelizar los puntos de referencia de NAS SP y BT. El compilador dHPF genera paralelismos multiparticionados de estos códigos que se acercan a la escalabilidad y eficiencia de sofisticadas paralelizaciónes codificadas a mano ",
            "error": []
        },
        "automatic parallelization": {
            "translated_key": [],
            "translated_annotated_text": "Estrategias avanzadas de optimización en el compilador Rice dHPF High-Performance Fortran (HPF) fue concebido como un vehículo para modernizar los códigos de Fortran heredados para lograr un rendimiento paralelo escalable. En gran medida, hoy en día los compiladores de HPF disponibles comercialmente no han logrado ofrecer un rendimiento paralelo escalable para un amplio espectro de aplicaciones debido a un análisis y optimización de compiladores insuficientemente potentes. Se puede requerir una reestructuración sustancial y una optimización manual para lograr un rendimiento aceptable con un puerto de HPF de una aplicación existente de Fortran, incluso para aplicaciones regulares de pares de datos. Un objetivo clave del proyecto del compilador Rice dHPF ha sido desarrollar técnicas de optimización que permitan portar fácilmente una amplia gama de aplicaciones científicas existentes a HPF eficiente con una reestructuración mínima. Este artículo describe los desafíos a la paralelización efectiva presentados por aplicaciones complejas (pero regulares) de datos paralelos, y luego describe cómo las nuevas tecnologías de análisis y optimización en el compilador dHPF abordan estos desafíos de manera efectiva, sin una reescritura importante de las aplicaciones. Ilustramos las técnicas describiendo su uso para paralelizar los puntos de referencia de NAS SP y BT. El compilador dHPF genera paralelismos multiparticionados de estos códigos que se acercan a la escalabilidad y eficiencia de sofisticadas paralelizaciónes codificadas a mano ",
            "error": []
        },
        "FORTRAN": {
            "translated_key": [],
            "translated_annotated_text": "Estrategias avanzadas de optimización en el compilador Rice dHPF High-Performance Fortran (HPF) fue concebido como un vehículo para modernizar los códigos de Fortran heredados para lograr un rendimiento paralelo escalable. En gran medida, hoy en día los compiladores de HPF disponibles comercialmente no han logrado ofrecer un rendimiento paralelo escalable para un amplio espectro de aplicaciones debido a un análisis y optimización de compiladores insuficientemente potentes. Se puede requerir una reestructuración sustancial y una optimización manual para lograr un rendimiento aceptable con un puerto de HPF de una aplicación existente de Fortran, incluso para aplicaciones regulares de pares de datos. Un objetivo clave del proyecto del compilador Rice dHPF ha sido desarrollar técnicas de optimización que permitan portar fácilmente una amplia gama de aplicaciones científicas existentes a HPF eficiente con una reestructuración mínima. Este artículo describe los desafíos a la paralelización efectiva presentados por aplicaciones complejas (pero regulares) de datos paralelos, y luego describe cómo las nuevas tecnologías de análisis y optimización en el compilador dHPF abordan estos desafíos de manera efectiva, sin una reescritura importante de las aplicaciones. Ilustramos las técnicas describiendo su uso para paralelizar los puntos de referencia de NAS SP y BT. El compilador dHPF genera paralelismos multiparticionados de estos códigos que se acercan a la escalabilidad y eficiencia de sofisticadas paralelizaciónes codificadas a mano ",
            "error": []
        },
        "optimising compilers": {
            "translated_key": [],
            "translated_annotated_text": "Estrategias avanzadas de optimización en el compilador Rice dHPF High-Performance Fortran (HPF) fue concebido como un vehículo para modernizar los códigos de Fortran heredados para lograr un rendimiento paralelo escalable. En gran medida, hoy en día los compiladores de HPF disponibles comercialmente no han logrado ofrecer un rendimiento paralelo escalable para un amplio espectro de aplicaciones debido a un análisis y optimización de compiladores insuficientemente potentes. Se puede requerir una reestructuración sustancial y una optimización manual para lograr un rendimiento aceptable con un puerto de HPF de una aplicación existente de Fortran, incluso para aplicaciones regulares de pares de datos. Un objetivo clave del proyecto del compilador Rice dHPF ha sido desarrollar técnicas de optimización que permitan portar fácilmente una amplia gama de aplicaciones científicas existentes a HPF eficiente con una reestructuración mínima. Este artículo describe los desafíos a la paralelización efectiva presentados por aplicaciones complejas (pero regulares) de datos paralelos, y luego describe cómo las nuevas tecnologías de análisis y optimización en el compilador dHPF abordan estos desafíos de manera efectiva, sin una reescritura importante de las aplicaciones. Ilustramos las técnicas describiendo su uso para paralelizar los puntos de referencia de NAS SP y BT. El compilador dHPF genera paralelismos multiparticionados de estos códigos que se acercan a la escalabilidad y eficiencia de sofisticadas paralelizaciónes codificadas a mano ",
            "error": []
        },
        "parallelising compilers": {
            "translated_key": [],
            "translated_annotated_text": "Estrategias avanzadas de optimización en el compilador Rice dHPF High-Performance Fortran (HPF) fue concebido como un vehículo para modernizar los códigos de Fortran heredados para lograr un rendimiento paralelo escalable. En gran medida, hoy en día los compiladores de HPF disponibles comercialmente no han logrado ofrecer un rendimiento paralelo escalable para un amplio espectro de aplicaciones debido a un análisis y optimización de compiladores insuficientemente potentes. Se puede requerir una reestructuración sustancial y una optimización manual para lograr un rendimiento aceptable con un puerto de HPF de una aplicación existente de Fortran, incluso para aplicaciones regulares de pares de datos. Un objetivo clave del proyecto del compilador Rice dHPF ha sido desarrollar técnicas de optimización que permitan portar fácilmente una amplia gama de aplicaciones científicas existentes a HPF eficiente con una reestructuración mínima. Este artículo describe los desafíos a la paralelización efectiva presentados por aplicaciones complejas (pero regulares) de datos paralelos, y luego describe cómo las nuevas tecnologías de análisis y optimización en el compilador dHPF abordan estos desafíos de manera efectiva, sin una reescritura importante de las aplicaciones. Ilustramos las técnicas describiendo su uso para paralelizar los puntos de referencia de NAS SP y BT. El compilador dHPF genera paralelismos multiparticionados de estos códigos que se acercan a la escalabilidad y eficiencia de sofisticadas paralelizaciónes codificadas a mano ",
            "error": []
        }
    }
}