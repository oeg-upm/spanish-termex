{
    "original_text": "Adaptive and efficient mutual exclusion The paper presents adaptive algorithms for mutual exclusion using only read and write operations; the performance of the algorithms depends only on the point contention, i.e., the number of processes that are concurrently active during algorithm execution (and not on n, the total number of processes). Our algorithm has O(k) remote step complexity and O(log k) system response time, where k is the point contention. The remote step complexity is the maximal number of steps performed by a process where a wait is counted as one step. The system response time is the time interval between subsequent entries to the critical section, where one time unit is the minimal interval in which every active process performs at least one step. The space complexity of this algorithm is O(N log n), where N is the range of process names. We show how to make the space complexity of our algorithm depend solely on n, while preserving the other performance measures of the algorithm",
    "original_translation": "Exclusión mutua adaptativa y eficiente El artículo presenta algoritmos adaptativos para la exclusión mutua utilizando sólo operaciones de lectura y escritura; el rendimiento de los algoritmos depende sólo de la contención de puntos, es decir, el número de procesos que son simultáneamente activos durante la ejecución del algoritmo (y no en n, el número total de procesos). Nuestro algoritmo tiene complejidad de paso remoto O(k) y tiempo de respuesta del sistema O(log k), donde k es la contención de puntos. La complejidad de paso remoto es el número máximo de pasos realizados por un proceso donde una espera se cuenta como un paso. El tiempo de respuesta del sistema es el intervalo de tiempo entre las entradas posteriores a la sección crítica, donde una unidad de tiempo es el intervalo mínimo en el que cada proceso activo realiza al menos un paso. La complejidad espacial de este algoritmo es O(N log n), donde N es el rango de nombres de procesos. Mostramos cómo hacer que la complejidad espacial de nuestro algoritmo dependa únicamente de n, mientras preservamos las otras medidas de rendimiento del algoritmo",
    "error_count": 7,
    "keys": {
        "adaptive mutual exclusion": {
            "translated_key": [],
            "translated_annotated_text": "Exclusión mutua adaptativa y eficiente El artículo presenta algoritmos adaptativos para la exclusión mutua utilizando sólo operaciones de lectura y escritura; el rendimiento de los algoritmos depende sólo de la contención de puntos, es decir, el número de procesos que son simultáneamente activos durante la ejecución del algoritmo (y no en n, el número total de procesos). Nuestro algoritmo tiene complejidad de paso remoto O(k) y tiempo de respuesta del sistema O(log k), donde k es la contención de puntos. La complejidad de paso remoto es el número máximo de pasos realizados por un proceso donde una espera se cuenta como un paso. El tiempo de respuesta del sistema es el intervalo de tiempo entre las entradas posteriores a la sección crítica, donde una unidad de tiempo es el intervalo mínimo en el que cada proceso activo realiza al menos un paso. La complejidad espacial de este algoritmo es O(N log n), donde N es el rango de nombres de procesos. Mostramos cómo hacer que la complejidad espacial de nuestro algoritmo dependa únicamente de n, mientras preservamos las otras medidas de rendimiento del algoritmo ",
            "error": []
        },
        "adaptive algorithms": {
            "translated_key": "algoritmos adaptativos",
            "translated_annotated_text": "Exclusión mutua adaptativa y eficiente El artículo presenta \"algoritmos adaptativos\" para la exclusión mutua utilizando sólo operaciones de lectura y escritura; el rendimiento de los algoritmos depende sólo de la contención de puntos, es decir, el número de procesos que son simultáneamente activos durante la ejecución del algoritmo (y no en n, el número total de procesos). Nuestro algoritmo tiene complejidad de paso remoto O(k) y tiempo de respuesta del sistema O(log k), donde k es la contención de puntos. La complejidad de paso remoto es el número máximo de pasos realizados por un proceso donde una espera se cuenta como un paso. El tiempo de respuesta del sistema es el intervalo de tiempo entre las entradas posteriores a la sección crítica, donde una unidad de tiempo es el intervalo mínimo en el que cada proceso activo realiza al menos un paso. La complejidad espacial de este algoritmo es O(N log n), donde N es el rango de nombres de procesos. Mostramos cómo hacer que la complejidad espacial de nuestro algoritmo dependa únicamente de n, mientras preservamos las otras medidas de rendimiento del algoritmo ",
            "error": [
                ""
            ]
        },
        "read operations": {
            "translated_key": [],
            "translated_annotated_text": "Exclusión mutua adaptativa y eficiente El artículo presenta algoritmos adaptativos para la exclusión mutua utilizando sólo operaciones de lectura y escritura; el rendimiento de los algoritmos depende sólo de la contención de puntos, es decir, el número de procesos que son simultáneamente activos durante la ejecución del algoritmo (y no en n, el número total de procesos). Nuestro algoritmo tiene complejidad de paso remoto O(k) y tiempo de respuesta del sistema O(log k), donde k es la contención de puntos. La complejidad de paso remoto es el número máximo de pasos realizados por un proceso donde una espera se cuenta como un paso. El tiempo de respuesta del sistema es el intervalo de tiempo entre las entradas posteriores a la sección crítica, donde una unidad de tiempo es el intervalo mínimo en el que cada proceso activo realiza al menos un paso. La complejidad espacial de este algoritmo es O(N log n), donde N es el rango de nombres de procesos. Mostramos cómo hacer que la complejidad espacial de nuestro algoritmo dependa únicamente de n, mientras preservamos las otras medidas de rendimiento del algoritmo ",
            "error": []
        },
        "write operations": {
            "translated_key": [],
            "translated_annotated_text": "Exclusión mutua adaptativa y eficiente El artículo presenta algoritmos adaptativos para la exclusión mutua utilizando sólo operaciones de lectura y escritura; el rendimiento de los algoritmos depende sólo de la contención de puntos, es decir, el número de procesos que son simultáneamente activos durante la ejecución del algoritmo (y no en n, el número total de procesos). Nuestro algoritmo tiene complejidad de paso remoto O(k) y tiempo de respuesta del sistema O(log k), donde k es la contención de puntos. La complejidad de paso remoto es el número máximo de pasos realizados por un proceso donde una espera se cuenta como un paso. El tiempo de respuesta del sistema es el intervalo de tiempo entre las entradas posteriores a la sección crítica, donde una unidad de tiempo es el intervalo mínimo en el que cada proceso activo realiza al menos un paso. La complejidad espacial de este algoritmo es O(N log n), donde N es el rango de nombres de procesos. Mostramos cómo hacer que la complejidad espacial de nuestro algoritmo dependa únicamente de n, mientras preservamos las otras medidas de rendimiento del algoritmo ",
            "error": []
        },
        "point contention": {
            "translated_key": "contención de puntos",
            "translated_annotated_text": "Exclusión mutua adaptativa y eficiente El artículo presenta algoritmos adaptativos para la exclusión mutua utilizando sólo operaciones de lectura y escritura; el rendimiento de los algoritmos depende sólo de la \"contención de puntos\", es decir, el número de procesos que son simultáneamente activos durante la ejecución del algoritmo (y no en n, el número total de procesos). Nuestro algoritmo tiene complejidad de paso remoto O(k) y tiempo de respuesta del sistema O(log k), donde k es la \"contención de puntos\". La complejidad de paso remoto es el número máximo de pasos realizados por un proceso donde una espera se cuenta como un paso. El tiempo de respuesta del sistema es el intervalo de tiempo entre las entradas posteriores a la sección crítica, donde una unidad de tiempo es el intervalo mínimo en el que cada proceso activo realiza al menos un paso. La complejidad espacial de este algoritmo es O(N log n), donde N es el rango de nombres de procesos. Mostramos cómo hacer que la complejidad espacial de nuestro algoritmo dependa únicamente de n, mientras preservamos las otras medidas de rendimiento del algoritmo ",
            "error": [
                ""
            ]
        },
        "algorithm execution": {
            "translated_key": "ejecución del algoritmo",
            "translated_annotated_text": "Exclusión mutua adaptativa y eficiente El artículo presenta algoritmos adaptativos para la exclusión mutua utilizando sólo operaciones de lectura y escritura; el rendimiento de los algoritmos depende sólo de la contención de puntos, es decir, el número de procesos que son simultáneamente activos durante la \"ejecución del algoritmo\" (y no en n, el número total de procesos). Nuestro algoritmo tiene complejidad de paso remoto O(k) y tiempo de respuesta del sistema O(log k), donde k es la contención de puntos. La complejidad de paso remoto es el número máximo de pasos realizados por un proceso donde una espera se cuenta como un paso. El tiempo de respuesta del sistema es el intervalo de tiempo entre las entradas posteriores a la sección crítica, donde una unidad de tiempo es el intervalo mínimo en el que cada proceso activo realiza al menos un paso. La complejidad espacial de este algoritmo es O(N log n), donde N es el rango de nombres de procesos. Mostramos cómo hacer que la complejidad espacial de nuestro algoritmo dependa únicamente de n, mientras preservamos las otras medidas de rendimiento del algoritmo ",
            "error": [
                ""
            ]
        },
        "remote step complexity": {
            "translated_key": "complejidad de paso remoto",
            "translated_annotated_text": "Exclusión mutua adaptativa y eficiente El artículo presenta algoritmos adaptativos para la exclusión mutua utilizando sólo operaciones de lectura y escritura; el rendimiento de los algoritmos depende sólo de la contención de puntos, es decir, el número de procesos que son simultáneamente activos durante la ejecución del algoritmo (y no en n, el número total de procesos). Nuestro algoritmo tiene O(k) \"complejidad de paso remoto\" y O(log k) tiempo de respuesta del sistema, donde k es la contención de puntos. La \"complejidad de paso remoto\" es el número máximo de pasos realizados por un proceso donde una espera se cuenta como un paso. El tiempo de respuesta del sistema es el intervalo de tiempo entre las entradas posteriores a la sección crítica, donde una unidad de tiempo es el intervalo mínimo en el que cada proceso activo realiza al menos un paso. La complejidad espacial de este algoritmo es O(N log n), donde N es el rango de nombres de procesos. Mostramos cómo hacer que la complejidad espacial de nuestro algoritmo dependa únicamente de n, mientras preservamos las otras medidas de rendimiento del algoritmo ",
            "error": [
                ""
            ]
        },
        "system response time": {
            "translated_key": "tiempo de respuesta del sistema",
            "translated_annotated_text": "Exclusión mutua adaptativa y eficiente El artículo presenta algoritmos adaptativos para la exclusión mutua utilizando sólo operaciones de lectura y escritura; el rendimiento de los algoritmos depende sólo de la contención de puntos, es decir, el número de procesos que son simultáneamente activos durante la ejecución del algoritmo (y no en n, el número total de procesos). Nuestro algoritmo tiene complejidad de paso remoto O(k) y O(log k) \"tiempo de respuesta del sistema\", donde k es la contención de puntos. La complejidad de paso remoto es el número máximo de pasos realizados por un proceso donde una espera se cuenta como un paso. El \"tiempo de respuesta del sistema\" es el intervalo de tiempo entre las entradas posteriores a la sección crítica, donde una unidad de tiempo es el intervalo mínimo en el que cada proceso activo realiza al menos un paso. La complejidad espacial de este algoritmo es O(N log n), donde N es el rango de nombres de procesos. Mostramos cómo hacer que la complejidad espacial de nuestro algoritmo dependa únicamente de n, mientras preservamos las otras medidas de rendimiento del algoritmo ",
            "error": [
                ""
            ]
        },
        "critical section": {
            "translated_key": "sección crítica",
            "translated_annotated_text": "Exclusión mutua adaptativa y eficiente El artículo presenta algoritmos adaptativos para la exclusión mutua utilizando sólo operaciones de lectura y escritura; el rendimiento de los algoritmos depende sólo de la contención de puntos, es decir, el número de procesos que son simultáneamente activos durante la ejecución del algoritmo (y no en n, el número total de procesos). Nuestro algoritmo tiene complejidad de paso remoto O(k) y tiempo de respuesta del sistema O(log k), donde k es la contención de puntos. La complejidad de paso remoto es el número máximo de pasos realizados por un proceso donde una espera se cuenta como un paso. El tiempo de respuesta del sistema es el intervalo de tiempo entre las entradas posteriores a la \"sección crítica\", donde una unidad de tiempo es el intervalo mínimo en el que cada proceso activo realiza al menos un paso. La complejidad espacial de este algoritmo es O(N log n), donde N es el rango de nombres de procesos. Mostramos cómo hacer que la complejidad espacial de nuestro algoritmo dependa únicamente de n, mientras preservamos las otras medidas de rendimiento del algoritmo ",
            "error": [
                ""
            ]
        },
        "minimal interval": {
            "translated_key": "intervalo mínimo",
            "translated_annotated_text": "Exclusión mutua adaptativa y eficiente El artículo presenta algoritmos adaptativos para la exclusión mutua utilizando sólo operaciones de lectura y escritura; el rendimiento de los algoritmos depende sólo de la contención de puntos, es decir, el número de procesos que son simultáneamente activos durante la ejecución del algoritmo (y no en n, el número total de procesos). Nuestro algoritmo tiene complejidad de paso remoto O(k) y tiempo de respuesta del sistema O(log k), donde k es la contención de puntos. La complejidad de paso remoto es el número máximo de pasos realizados por un proceso donde una espera se cuenta como un paso. El tiempo de respuesta del sistema es el intervalo de tiempo entre las entradas posteriores a la sección crítica, donde una unidad de tiempo es el \"intervalo mínimo\" en el que cada proceso activo realiza al menos un paso. La complejidad espacial de este algoritmo es O(N log n), donde N es el rango de nombres de procesos. Mostramos cómo hacer que la complejidad espacial de nuestro algoritmo dependa únicamente de n, mientras preservamos las otras medidas de rendimiento del algoritmo ",
            "error": [
                ""
            ]
        },
        "active process": {
            "translated_key": "proceso activo",
            "translated_annotated_text": "Exclusión mutua adaptativa y eficiente El artículo presenta algoritmos adaptativos para la exclusión mutua utilizando sólo operaciones de lectura y escritura; el rendimiento de los algoritmos depende sólo de la contención de puntos, es decir, el número de procesos que son simultáneamente activos durante la ejecución del algoritmo (y no en n, el número total de procesos). Nuestro algoritmo tiene complejidad de paso remoto O(k) y tiempo de respuesta del sistema O(log k), donde k es la contención de puntos. La complejidad de paso remoto es el número máximo de pasos realizados por un proceso donde una espera se cuenta como un paso. El tiempo de respuesta del sistema es el intervalo de tiempo entre las entradas posteriores a la sección crítica, donde una unidad de tiempo es el intervalo mínimo en el que cada \"proceso activo\" realiza al menos un paso. La complejidad espacial de este algoritmo es O(N log n), donde N es el rango de nombres de procesos. Mostramos cómo hacer que la complejidad espacial de nuestro algoritmo dependa únicamente de n, mientras preservamos las otras medidas de rendimiento del algoritmo ",
            "error": [
                ""
            ]
        },
        "space complexity": {
            "translated_key": "complejidad espacial",
            "translated_annotated_text": "Exclusión mutua adaptativa y eficiente El artículo presenta algoritmos adaptativos para la exclusión mutua utilizando sólo operaciones de lectura y escritura; el rendimiento de los algoritmos depende sólo de la contención de puntos, es decir, el número de procesos que son simultáneamente activos durante la ejecución del algoritmo (y no en n, el número total de procesos). Nuestro algoritmo tiene complejidad de paso remoto O(k) y tiempo de respuesta del sistema O(log k), donde k es la contención de puntos. La complejidad de paso remoto es el número máximo de pasos realizados por un proceso donde una espera se cuenta como un paso. El tiempo de respuesta del sistema es el intervalo de tiempo entre las entradas posteriores a la sección crítica, donde una unidad de tiempo es el intervalo mínimo en el que cada proceso activo realiza al menos un paso. La \"complejidad espacial\" de este algoritmo es O(N log n), donde N es el rango de nombres de proceso. Mostramos cómo hacer que la \"complejidad espacial\" de nuestro algoritmo dependa únicamente de n, mientras preservamos las otras medidas de rendimiento del algoritmo ",
            "error": [
                ""
            ]
        },
        "performance measures": {
            "translated_key": "medidas de rendimiento",
            "translated_annotated_text": "Exclusión mutua adaptativa y eficiente El artículo presenta algoritmos adaptativos para la exclusión mutua utilizando sólo operaciones de lectura y escritura; el rendimiento de los algoritmos depende sólo de la contención de puntos, es decir, el número de procesos que son simultáneamente activos durante la ejecución del algoritmo (y no en n, el número total de procesos). Nuestro algoritmo tiene complejidad de paso remoto O(k) y tiempo de respuesta del sistema O(log k), donde k es la contención de puntos. La complejidad de paso remoto es el número máximo de pasos realizados por un proceso donde una espera se cuenta como un paso. El tiempo de respuesta del sistema es el intervalo de tiempo entre las entradas posteriores a la sección crítica, donde una unidad de tiempo es el intervalo mínimo en el que cada proceso activo realiza al menos un paso. La complejidad espacial de este algoritmo es O(N log n), donde N es el rango de nombres de procesos. Mostramos cómo hacer que la complejidad espacial de nuestro algoritmo dependa únicamente de n, mientras preservamos las otras \"medidas de rendimiento\" del algoritmo ",
            "error": [
                ""
            ]
        },
        "adaptive systems": {
            "translated_key": [],
            "translated_annotated_text": "Exclusión mutua adaptativa y eficiente El artículo presenta algoritmos adaptativos para la exclusión mutua utilizando sólo operaciones de lectura y escritura; el rendimiento de los algoritmos depende sólo de la contención de puntos, es decir, el número de procesos que son simultáneamente activos durante la ejecución del algoritmo (y no en n, el número total de procesos). Nuestro algoritmo tiene complejidad de paso remoto O(k) y tiempo de respuesta del sistema O(log k), donde k es la contención de puntos. La complejidad de paso remoto es el número máximo de pasos realizados por un proceso donde una espera se cuenta como un paso. El tiempo de respuesta del sistema es el intervalo de tiempo entre las entradas posteriores a la sección crítica, donde una unidad de tiempo es el intervalo mínimo en el que cada proceso activo realiza al menos un paso. La complejidad espacial de este algoritmo es O(N log n), donde N es el rango de nombres de procesos. Mostramos cómo hacer que la complejidad espacial de nuestro algoritmo dependa únicamente de n, mientras preservamos las otras medidas de rendimiento del algoritmo ",
            "error": []
        },
        "computational complexity": {
            "translated_key": [],
            "translated_annotated_text": "Exclusión mutua adaptativa y eficiente El artículo presenta algoritmos adaptativos para la exclusión mutua utilizando sólo operaciones de lectura y escritura; el rendimiento de los algoritmos depende sólo de la contención de puntos, es decir, el número de procesos que son simultáneamente activos durante la ejecución del algoritmo (y no en n, el número total de procesos). Nuestro algoritmo tiene complejidad de paso remoto O(k) y tiempo de respuesta del sistema O(log k), donde k es la contención de puntos. La complejidad de paso remoto es el número máximo de pasos realizados por un proceso donde una espera se cuenta como un paso. El tiempo de respuesta del sistema es el intervalo de tiempo entre las entradas posteriores a la sección crítica, donde una unidad de tiempo es el intervalo mínimo en el que cada proceso activo realiza al menos un paso. La complejidad espacial de este algoritmo es O(N log n), donde N es el rango de nombres de procesos. Mostramos cómo hacer que la complejidad espacial de nuestro algoritmo dependa únicamente de n, mientras preservamos las otras medidas de rendimiento del algoritmo ",
            "error": []
        },
        "distributed algorithms": {
            "translated_key": [],
            "translated_annotated_text": "Exclusión mutua adaptativa y eficiente El artículo presenta algoritmos adaptativos para la exclusión mutua utilizando sólo operaciones de lectura y escritura; el rendimiento de los algoritmos depende sólo de la contención de puntos, es decir, el número de procesos que son simultáneamente activos durante la ejecución del algoritmo (y no en n, el número total de procesos). Nuestro algoritmo tiene complejidad de paso remoto O(k) y tiempo de respuesta del sistema O(log k), donde k es la contención de puntos. La complejidad de paso remoto es el número máximo de pasos realizados por un proceso donde una espera se cuenta como un paso. El tiempo de respuesta del sistema es el intervalo de tiempo entre las entradas posteriores a la sección crítica, donde una unidad de tiempo es el intervalo mínimo en el que cada proceso activo realiza al menos un paso. La complejidad espacial de este algoritmo es O(N log n), donde N es el rango de nombres de procesos. Mostramos cómo hacer que la complejidad espacial de nuestro algoritmo dependa únicamente de n, mientras preservamos las otras medidas de rendimiento del algoritmo ",
            "error": []
        },
        "shared memory systems": {
            "translated_key": [],
            "translated_annotated_text": "Exclusión mutua adaptativa y eficiente El artículo presenta algoritmos adaptativos para la exclusión mutua utilizando sólo operaciones de lectura y escritura; el rendimiento de los algoritmos depende sólo de la contención de puntos, es decir, el número de procesos que son simultáneamente activos durante la ejecución del algoritmo (y no en n, el número total de procesos). Nuestro algoritmo tiene complejidad de paso remoto O(k) y tiempo de respuesta del sistema O(log k), donde k es la contención de puntos. La complejidad de paso remoto es el número máximo de pasos realizados por un proceso donde una espera se cuenta como un paso. El tiempo de respuesta del sistema es el intervalo de tiempo entre las entradas posteriores a la sección crítica, donde una unidad de tiempo es el intervalo mínimo en el que cada proceso activo realiza al menos un paso. La complejidad espacial de este algoritmo es O(N log n), donde N es el rango de nombres de procesos. Mostramos cómo hacer que la complejidad espacial de nuestro algoritmo dependa únicamente de n, mientras preservamos las otras medidas de rendimiento del algoritmo ",
            "error": []
        }
    }
}