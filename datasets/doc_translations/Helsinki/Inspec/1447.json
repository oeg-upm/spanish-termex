{
    "original_text": "International swinging: making Swing components locale-sensitive Although Java and its GUI library Swing provide software developers with a highly customizable framework for creating truly international applications, the Swing library is not sensitive to locale switches: it cannot automatically change an applications appearance to conform to the conventions of a specific locale at run time. Several types of applications benefit from the ability to easily switch the language at run time. Training applications and other programs that run on computers in public spaces (such as libraries, airports, or government offices) may need to support multiple languages. Other applications (like travel dictionaries or translation programs) are inherently multilingual and are specifically designed to support users of dissimilar tongues. Such applications would greatly benefit if the user-interface language could be customized at run time. The article shows you how to customize Swing to support locale switching at run time. The author has created a new look-and-feel called the MLMetalLookandFeel (where ML stands for multilingual). This new look-and-feel extends the standard Metal look-and-feel but is locale-sensitive at run time",
    "original_translation": "Swing internacional: hacer que los componentes Swing sean sensibles a la localización Aunque Java y su biblioteca GUI Swing proporcionan a los desarrolladores de software un marco altamente personalizable para crear aplicaciones verdaderamente internacionales, la biblioteca Swing no es sensible a los interruptores de localización: no puede cambiar automáticamente la apariencia de las aplicaciones para ajustarse a las convenciones de un locale específico en tiempo de ejecución. Varios tipos de aplicaciones se benefician de la capacidad de cambiar fácilmente el idioma en el tiempo de ejecución. Las aplicaciones de capacitación y otros programas que se ejecutan en computadoras en espacios públicos (como bibliotecas, aeropuertos u oficinas gubernamentales) pueden necesitar soporte para múltiples idiomas. Otras aplicaciones (como diccionarios de viajes o programas de traducción) son intrínsecamente multilingües y están diseñadas específicamente para apoyar a los usuarios de lenguas diferentes. Tales aplicaciones se beneficiarían mucho si el lenguaje de interfaz de usuario pudiera personalizarse en el tiempo de ejecución. El artículo le muestra cómo personalizar Swing para soportar el cambio de ubicación en tiempo de ejecución. El autor ha creado un nuevo look-and-feel llamado MLmetal LookandFeel (donde ML significa multilingüe). Este nuevo look-and-feel amplía el look-and-feel de Metal estándar, pero es locale-sensible en el tiempo de ejecución",
    "error_count": 4,
    "keys": {
        "Java": {
            "translated_key": "Java",
            "translated_annotated_text": "Swing internacional: hacer que los componentes Swing sean sensibles a la localización Aunque <br>Java</br> y su biblioteca GUI Swing proporcionan a los desarrolladores de software un marco altamente personalizable para crear aplicaciones verdaderamente internacionales, la biblioteca Swing no es sensible a los interruptores de localización: no puede cambiar automáticamente la apariencia de las aplicaciones para ajustarse a las convenciones de una localización específica en el tiempo de ejecución. Varios tipos de aplicaciones se benefician de la capacidad de cambiar fácilmente el idioma en el tiempo de ejecución. Las aplicaciones de capacitación y otros programas que se ejecutan en computadoras en espacios públicos (como bibliotecas, aeropuertos u oficinas gubernamentales) pueden necesitar soporte para múltiples idiomas. Otras aplicaciones (como diccionarios de viajes o programas de traducción) son intrínsecamente multilingües y están diseñadas específicamente para apoyar a los usuarios de lenguas diferentes. Tales aplicaciones se beneficiarían mucho si el lenguaje de interfaz de usuario pudiera personalizarse en el tiempo de ejecución. El artículo le muestra cómo personalizar Swing para soportar el cambio de ubicación en tiempo de ejecución. El autor ha creado un nuevo look-and-feel llamado MLmetal LookandFeel (donde ML significa multilingüe). Este nuevo look-and-feel amplía el look-and-feel de Metal estándar, pero es locale-sensible en el tiempo de ejecución ",
            "error": [
                ""
            ]
        },
        "GUI library": {
            "translated_key": "GUI",
            "translated_annotated_text": "Swing internacional: hacer que los componentes Swing sean sensibles a la localización Aunque Java y su biblioteca <br>GUI</br> Swing proporcionan a los desarrolladores de software un marco altamente personalizable para crear aplicaciones verdaderamente internacionales, la biblioteca Swing no es sensible a los interruptores de localización: no puede cambiar automáticamente la apariencia de las aplicaciones para ajustarse a las convenciones de un local específico en el tiempo de ejecución. Varios tipos de aplicaciones se benefician de la capacidad de cambiar fácilmente el idioma en el tiempo de ejecución. Las aplicaciones de capacitación y otros programas que se ejecutan en computadoras en espacios públicos (como bibliotecas, aeropuertos u oficinas gubernamentales) pueden necesitar soporte para múltiples idiomas. Otras aplicaciones (como diccionarios de viajes o programas de traducción) son intrínsecamente multilingües y están diseñadas específicamente para apoyar a los usuarios de lenguas diferentes. Tales aplicaciones se beneficiarían mucho si el lenguaje de interfaz de usuario pudiera personalizarse en el tiempo de ejecución. El artículo le muestra cómo personalizar Swing para soportar el cambio de ubicación en tiempo de ejecución. El autor ha creado un nuevo look-and-feel llamado MLmetal LookandFeel (donde ML significa multilingüe). Este nuevo look-and-feel amplía el look-and-feel de Metal estándar, pero es locale-sensible en el tiempo de ejecución ",
            "error": [
                ""
            ]
        },
        "Swing library": {
            "translated_key": "Swing",
            "translated_annotated_text": "Swing internacional: hacer que los componentes Swing sean sensibles a la localización Aunque Java y su biblioteca GUI Swing proporcionan a los desarrolladores de software un marco altamente personalizable para crear aplicaciones verdaderamente internacionales, la biblioteca <br>Swing</br> no es sensible a los interruptores de localización: no puede cambiar automáticamente la apariencia de las aplicaciones para ajustarse a las convenciones de una localización específica en el tiempo de ejecución. Varios tipos de aplicaciones se benefician de la capacidad de cambiar fácilmente el idioma en el tiempo de ejecución. Las aplicaciones de capacitación y otros programas que se ejecutan en computadoras en espacios públicos (como bibliotecas, aeropuertos u oficinas gubernamentales) pueden necesitar soporte para múltiples idiomas. Otras aplicaciones (como diccionarios de viajes o programas de traducción) son intrínsecamente multilingües y están diseñadas específicamente para apoyar a los usuarios de lenguas diferentes. Tales aplicaciones se beneficiarían mucho si el lenguaje de interfaz de usuario pudiera personalizarse en el tiempo de ejecución. El artículo le muestra cómo personalizar Swing para soportar el cambio de ubicación en tiempo de ejecución. El autor ha creado un nuevo look-and-feel llamado MLmetal LookandFeel (donde ML significa multilingüe). Este nuevo look-and-feel amplía el look-and-feel de Metal estándar, pero es locale-sensible en el tiempo de ejecución ",
            "error": [
                ""
            ]
        },
        "travel dictionaries": {
            "translated_key": "diccionarios de viajes",
            "translated_annotated_text": "Swing internacional: hacer que los componentes Swing sean sensibles a la localización Aunque Java y su biblioteca GUI Swing proporcionan a los desarrolladores de software un marco altamente personalizable para crear aplicaciones verdaderamente internacionales, la biblioteca Swing no es sensible a los interruptores de localización: no puede cambiar automáticamente la apariencia de las aplicaciones para ajustarse a las convenciones de un locale específico en tiempo de ejecución. Varios tipos de aplicaciones se benefician de la capacidad de cambiar fácilmente el idioma en el tiempo de ejecución. Las aplicaciones de capacitación y otros programas que se ejecutan en computadoras en espacios públicos (como bibliotecas, aeropuertos u oficinas gubernamentales) pueden necesitar soporte para múltiples idiomas. Otras aplicaciones (como <br>diccionarios de viajes</br> o programas de traducción) son intrínsecamente multilingües y están diseñadas específicamente para apoyar a los usuarios de lenguas diferentes. Tales aplicaciones se beneficiarían mucho si el lenguaje de interfaz de usuario pudiera personalizarse en el tiempo de ejecución. El artículo le muestra cómo personalizar Swing para soportar el cambio de ubicación en tiempo de ejecución. El autor ha creado un nuevo look-and-feel llamado MLmetal LookandFeel (donde ML significa multilingüe). Este nuevo look-and-feel amplía el look-and-feel de Metal estándar, pero es locale-sensible en el tiempo de ejecución ",
            "error": [
                ""
            ]
        },
        "translation programs": {
            "translated_key": "programas de traducción",
            "translated_annotated_text": "Swing internacional: hacer que los componentes Swing sean sensibles a la localización Aunque Java y su biblioteca GUI Swing proporcionan a los desarrolladores de software un marco altamente personalizable para crear aplicaciones verdaderamente internacionales, la biblioteca Swing no es sensible a los interruptores de localización: no puede cambiar automáticamente la apariencia de las aplicaciones para ajustarse a las convenciones de un locale específico en tiempo de ejecución. Varios tipos de aplicaciones se benefician de la capacidad de cambiar fácilmente el idioma en el tiempo de ejecución. Las aplicaciones de capacitación y otros programas que se ejecutan en computadoras en espacios públicos (como bibliotecas, aeropuertos u oficinas gubernamentales) pueden necesitar soporte para múltiples idiomas. Otras aplicaciones (como diccionarios de viajes o <br>programas de traducción</br>) son inherentemente multilingües y están diseñados específicamente para apoyar a los usuarios de lenguas diferentes. Tales aplicaciones se beneficiarían mucho si el lenguaje de interfaz de usuario pudiera personalizarse en el tiempo de ejecución. El artículo le muestra cómo personalizar Swing para soportar el cambio de ubicación en tiempo de ejecución. El autor ha creado un nuevo look-and-feel llamado MLmetal LookandFeel (donde ML significa multilingüe). Este nuevo look-and-feel amplía el look-and-feel de Metal estándar, pero es locale-sensible en el tiempo de ejecución ",
            "error": [
                ""
            ]
        },
        "user-interface language": {
            "translated_key": "user-interface",
            "translated_annotated_text": "Swing internacional: hacer que los componentes Swing sean sensibles a la localización Aunque Java y su biblioteca GUI Swing proporcionan a los desarrolladores de software un marco altamente personalizable para crear aplicaciones verdaderamente internacionales, la biblioteca Swing no es sensible a los interruptores de localización: no puede cambiar automáticamente la apariencia de las aplicaciones para ajustarse a las convenciones de un locale específico en tiempo de ejecución. Varios tipos de aplicaciones se benefician de la capacidad de cambiar fácilmente el idioma en el tiempo de ejecución. Las aplicaciones de capacitación y otros programas que se ejecutan en computadoras en espacios públicos (como bibliotecas, aeropuertos u oficinas gubernamentales) pueden necesitar soporte para múltiples idiomas. Otras aplicaciones (como diccionarios de viajes o programas de traducción) son intrínsecamente multilingües y están diseñadas específicamente para apoyar a los usuarios de lenguas diferentes. Tales aplicaciones se beneficiarían mucho si el lenguaje <br>user-interface</br> pudiera personalizarse en tiempo de ejecución. El artículo le muestra cómo personalizar Swing para soportar el cambio de ubicación en tiempo de ejecución. El autor ha creado un nuevo look-and-feel llamado MLmetal LookandFeel (donde ML significa multilingüe). Este nuevo look-and-feel amplía el look-and-feel de Metal estándar, pero es locale-sensible en el tiempo de ejecución ",
            "error": [
                ""
            ]
        },
        "locale switching": {
            "translated_key": "locale",
            "translated_annotated_text": "Swing internacional: hacer que los componentes Swing sean sensibles a la localización Aunque Java y su biblioteca GUI Swing proporcionan a los desarrolladores de software un marco altamente personalizable para crear aplicaciones verdaderamente internacionales, la biblioteca Swing no es sensible a los interruptores de localización: no puede cambiar automáticamente la apariencia de las aplicaciones para ajustarse a las convenciones de un locale específico en tiempo de ejecución. Varios tipos de aplicaciones se benefician de la capacidad de cambiar fácilmente el idioma en el tiempo de ejecución. Las aplicaciones de capacitación y otros programas que se ejecutan en computadoras en espacios públicos (como bibliotecas, aeropuertos u oficinas gubernamentales) pueden necesitar soporte para múltiples idiomas. Otras aplicaciones (como diccionarios de viajes o programas de traducción) son intrínsecamente multilingües y están diseñadas específicamente para apoyar a los usuarios de lenguas diferentes. Tales aplicaciones se beneficiarían mucho si el lenguaje de interfaz de usuario pudiera personalizarse en el tiempo de ejecución. El artículo muestra cómo personalizar Swing para soportar el cambio <br>locale</br> en tiempo de ejecución. El autor ha creado un nuevo look-and-feel llamado MLmetal LookandFeel (donde ML significa multilingüe). Este nuevo look-and-feel amplía el look-and-feel de Metal estándar, pero es locale-sensible en el tiempo de ejecución ",
            "error": [
                ""
            ]
        },
        "MLMetalLookandFeel": {
            "translated_key": "MLMetalLookandFeel",
            "translated_annotated_text": "Swing internacional: hacer que los componentes Swing sean sensibles a la localización Aunque Java y su biblioteca GUI Swing proporcionan a los desarrolladores de software un marco altamente personalizable para crear aplicaciones verdaderamente internacionales, la biblioteca Swing no es sensible a los interruptores de localización: no puede cambiar automáticamente la apariencia de las aplicaciones para ajustarse a las convenciones de un locale específico en tiempo de ejecución. Varios tipos de aplicaciones se benefician de la capacidad de cambiar fácilmente el idioma en el tiempo de ejecución. Las aplicaciones de capacitación y otros programas que se ejecutan en computadoras en espacios públicos (como bibliotecas, aeropuertos u oficinas gubernamentales) pueden necesitar soporte para múltiples idiomas. Otras aplicaciones (como diccionarios de viajes o programas de traducción) son intrínsecamente multilingües y están diseñadas específicamente para apoyar a los usuarios de lenguas diferentes. Tales aplicaciones se beneficiarían mucho si el lenguaje de interfaz de usuario pudiera personalizarse en el tiempo de ejecución. El artículo le muestra cómo personalizar Swing para soportar el cambio de ubicación en tiempo de ejecución. El autor ha creado un nuevo look-and-feel llamado <br>MLMetalLookandFeel</br> (donde ML significa multilingüe). Este nuevo look-and-feel amplía el look-and-feel de Metal estándar, pero es locale-sensible en el tiempo de ejecución ",
            "error": [
                ""
            ]
        },
        "graphical user interfaces": {
            "translated_key": [],
            "translated_annotated_text": "Swing internacional: hacer que los componentes Swing sean sensibles a la localización Aunque Java y su biblioteca GUI Swing proporcionan a los desarrolladores de software un marco altamente personalizable para crear aplicaciones verdaderamente internacionales, la biblioteca Swing no es sensible a los interruptores de localización: no puede cambiar automáticamente la apariencia de las aplicaciones para ajustarse a las convenciones de un locale específico en tiempo de ejecución. Varios tipos de aplicaciones se benefician de la capacidad de cambiar fácilmente el idioma en el tiempo de ejecución. Las aplicaciones de capacitación y otros programas que se ejecutan en computadoras en espacios públicos (como bibliotecas, aeropuertos u oficinas gubernamentales) pueden necesitar soporte para múltiples idiomas. Otras aplicaciones (como diccionarios de viajes o programas de traducción) son intrínsecamente multilingües y están diseñadas específicamente para apoyar a los usuarios de lenguas diferentes. Tales aplicaciones se beneficiarían mucho si el lenguaje de interfaz de usuario pudiera personalizarse en el tiempo de ejecución. El artículo le muestra cómo personalizar Swing para soportar el cambio de ubicación en tiempo de ejecución. El autor ha creado un nuevo look-and-feel llamado MLmetal LookandFeel (donde ML significa multilingüe). Este nuevo look-and-feel amplía el look-and-feel de Metal estándar, pero es locale-sensible en el tiempo de ejecución ",
            "error": []
        },
        "object-oriented programming": {
            "translated_key": [],
            "translated_annotated_text": "Swing internacional: hacer que los componentes Swing sean sensibles a la localización Aunque Java y su biblioteca GUI Swing proporcionan a los desarrolladores de software un marco altamente personalizable para crear aplicaciones verdaderamente internacionales, la biblioteca Swing no es sensible a los interruptores de localización: no puede cambiar automáticamente la apariencia de las aplicaciones para ajustarse a las convenciones de un locale específico en tiempo de ejecución. Varios tipos de aplicaciones se benefician de la capacidad de cambiar fácilmente el idioma en el tiempo de ejecución. Las aplicaciones de capacitación y otros programas que se ejecutan en computadoras en espacios públicos (como bibliotecas, aeropuertos u oficinas gubernamentales) pueden necesitar soporte para múltiples idiomas. Otras aplicaciones (como diccionarios de viajes o programas de traducción) son intrínsecamente multilingües y están diseñadas específicamente para apoyar a los usuarios de lenguas diferentes. Tales aplicaciones se beneficiarían mucho si el lenguaje de interfaz de usuario pudiera personalizarse en el tiempo de ejecución. El artículo le muestra cómo personalizar Swing para soportar el cambio de ubicación en tiempo de ejecución. El autor ha creado un nuevo look-and-feel llamado MLmetal LookandFeel (donde ML significa multilingüe). Este nuevo look-and-feel amplía el look-and-feel de Metal estándar, pero es locale-sensible en el tiempo de ejecución ",
            "error": []
        },
        "software architecture": {
            "translated_key": [],
            "translated_annotated_text": "Swing internacional: hacer que los componentes Swing sean sensibles a la localización Aunque Java y su biblioteca GUI Swing proporcionan a los desarrolladores de software un marco altamente personalizable para crear aplicaciones verdaderamente internacionales, la biblioteca Swing no es sensible a los interruptores de localización: no puede cambiar automáticamente la apariencia de las aplicaciones para ajustarse a las convenciones de un locale específico en tiempo de ejecución. Varios tipos de aplicaciones se benefician de la capacidad de cambiar fácilmente el idioma en el tiempo de ejecución. Las aplicaciones de capacitación y otros programas que se ejecutan en computadoras en espacios públicos (como bibliotecas, aeropuertos u oficinas gubernamentales) pueden necesitar soporte para múltiples idiomas. Otras aplicaciones (como diccionarios de viajes o programas de traducción) son intrínsecamente multilingües y están diseñadas específicamente para apoyar a los usuarios de lenguas diferentes. Tales aplicaciones se beneficiarían mucho si el lenguaje de interfaz de usuario pudiera personalizarse en el tiempo de ejecución. El artículo le muestra cómo personalizar Swing para soportar el cambio de ubicación en tiempo de ejecución. El autor ha creado un nuevo look-and-feel llamado MLmetal LookandFeel (donde ML significa multilingüe). Este nuevo look-and-feel amplía el look-and-feel de Metal estándar, pero es locale-sensible en el tiempo de ejecución ",
            "error": []
        },
        "software libraries": {
            "translated_key": [],
            "translated_annotated_text": "Swing internacional: hacer que los componentes Swing sean sensibles a la localización Aunque Java y su biblioteca GUI Swing proporcionan a los desarrolladores de software un marco altamente personalizable para crear aplicaciones verdaderamente internacionales, la biblioteca Swing no es sensible a los interruptores de localización: no puede cambiar automáticamente la apariencia de las aplicaciones para ajustarse a las convenciones de un locale específico en tiempo de ejecución. Varios tipos de aplicaciones se benefician de la capacidad de cambiar fácilmente el idioma en el tiempo de ejecución. Las aplicaciones de capacitación y otros programas que se ejecutan en computadoras en espacios públicos (como bibliotecas, aeropuertos u oficinas gubernamentales) pueden necesitar soporte para múltiples idiomas. Otras aplicaciones (como diccionarios de viajes o programas de traducción) son intrínsecamente multilingües y están diseñadas específicamente para apoyar a los usuarios de lenguas diferentes. Tales aplicaciones se beneficiarían mucho si el lenguaje de interfaz de usuario pudiera personalizarse en el tiempo de ejecución. El artículo le muestra cómo personalizar Swing para soportar el cambio de ubicación en tiempo de ejecución. El autor ha creado un nuevo look-and-feel llamado MLmetal LookandFeel (donde ML significa multilingüe). Este nuevo look-and-feel amplía el look-and-feel de Metal estándar, pero es locale-sensible en el tiempo de ejecución ",
            "error": []
        }
    }
}