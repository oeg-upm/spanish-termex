{
    "original_text": "Finding performance bugs with the TNO HPF benchmark suite High-Performance Fortran (HPF) has been designed to provide portable performance on distributed memory machines. An important aspect of portable performance is the behavior of the available HPF compilers. Ideally, a programmer may expect comparable performance between different HPF compilers, given the same program and the same machine. To test the performance portability between compilers, we have designed a special benchmark suite, called the TNO HPF benchmark suite. It consists of a set of HPF programs that test various aspects of efficient parallel code generation. The benchmark suite consists of a number of template programs that are used to generate test programs with different array sizes, alignments, distributions, and iteration spaces. It ranges from very simple assignments to more complex assignments such as triangular iteration spaces, convex iteration spaces, coupled subscripts, and indirection arrays. We have run the TNO HPF benchmark suite on three compilers: the PREPARE prototype compiler, the PGI-HPF compiler, and the GMD Adaptor HPF compiler. Results show performance differences that can be quite large (up to two orders of magnitude for the same test program). Closer inspection reveals that the origin of most of the differences in performance is due to differences in local enumeration and storage of distributed array elements",
    "original_translation": "Encontrar fallos de rendimiento con la suite de referencia TNO HPF High-Performance Fortran (HPF) ha sido diseñado para proporcionar rendimiento portátil en máquinas de memoria distribuida. Un aspecto importante del rendimiento portátil es el comportamiento de los compiladores HPF disponibles. Idealmente, un programador puede esperar un rendimiento comparable entre diferentes compiladores de HPF, dado el mismo programa y la misma máquina. Para probar la portabilidad del rendimiento entre compiladores, hemos diseñado una suite especial de referencia, llamada la suite de referencia TNO HPF. Consiste en un conjunto de programas de HPF que prueban varios aspectos de la generación eficiente de código paralelo. La suite de referencia consiste en una serie de programas de plantillas que se utilizan para generar programas de prueba con diferentes tamaños de matrices, alineaciones, distribuciones y espacios de iteración. Va desde asignaciones muy simples hasta tareas más complejas como espacios de iteración triangular, espacios de iteración convexa, subíndices acoplados y arrays indirectos. Hemos ejecutado la suite de referencia TNO HPF en tres compiladores: el compilador prototipo PREPARE, el compilador PGI-HPF y el compilador HPF del adaptador GMD. Los resultados muestran diferencias de rendimiento que pueden ser bastante grandes (hasta dos órdenes de magnitud para el mismo programa de prueba). Una inspección más estrecha revela que el origen de la mayoría de las diferencias en el rendimiento se debe a diferencias en la enumeración local y el almacenamiento de elementos de array distribuidos",
    "error_count": 9,
    "keys": {
        "High-Performance Fortran": {
            "translated_key": "High-Performance Fortran",
            "translated_annotated_text": "Encontrar fallos de rendimiento con la suite de referencia TNO HPF \"High-Performance Fortran\" (HPF) ha sido diseñado para proporcionar rendimiento portátil en máquinas de memoria distribuida. Un aspecto importante del rendimiento portátil es el comportamiento de los compiladores HPF disponibles. Idealmente, un programador puede esperar un rendimiento comparable entre diferentes compiladores de HPF, dado el mismo programa y la misma máquina. Para probar la portabilidad del rendimiento entre compiladores, hemos diseñado una suite especial de referencia, llamada la suite de referencia TNO HPF. Consiste en un conjunto de programas de HPF que prueban varios aspectos de la generación eficiente de código paralelo. La suite de referencia consiste en una serie de programas de plantillas que se utilizan para generar programas de prueba con diferentes tamaños de matrices, alineaciones, distribuciones y espacios de iteración. Va desde asignaciones muy simples hasta tareas más complejas como espacios de iteración triangular, espacios de iteración convexa, subíndices acoplados y arrays indirectos. Hemos ejecutado la suite de referencia TNO HPF en tres compiladores: el compilador prototipo PREPARE, el compilador PGI-HPF y el compilador HPF del adaptador GMD. Los resultados muestran diferencias de rendimiento que pueden ser bastante grandes (hasta dos órdenes de magnitud para el mismo programa de prueba). Una inspección más estrecha revela que el origen de la mayoría de las diferencias en el rendimiento se debe a diferencias en la enumeración local y el almacenamiento de elementos de array distribuidos ",
            "error": [
                ""
            ]
        },
        "portable performance": {
            "translated_key": [
                "performance portátil",
                "rendimiento portátil"
            ],
            "translated_annotated_text": "Encontrar fallos de rendimiento con la suite de referencia TNO HPF High-Performance Fortran (HPF) ha sido diseñado para proporcionar \"performance portátil\" en máquinas de memoria distribuida. Un aspecto importante del \"rendimiento portátil\" es el comportamiento de los compiladores HPF disponibles. Idealmente, un programador puede esperar un rendimiento comparable entre diferentes compiladores de HPF, dado el mismo programa y la misma máquina. Para probar la portabilidad del rendimiento entre compiladores, hemos diseñado una suite especial de referencia, llamada la suite de referencia TNO HPF. Consiste en un conjunto de programas de HPF que prueban varios aspectos de la generación eficiente de código paralelo. La suite de referencia consiste en una serie de programas de plantillas que se utilizan para generar programas de prueba con diferentes tamaños de matrices, alineaciones, distribuciones y espacios de iteración. Va desde asignaciones muy simples hasta tareas más complejas como espacios de iteración triangular, espacios de iteración convexa, subíndices acoplados y arrays indirectos. Hemos ejecutado la suite de referencia TNO HPF en tres compiladores: el compilador prototipo PREPARE, el compilador PGI-HPF y el compilador HPF del adaptador GMD. Los resultados muestran diferencias de rendimiento que pueden ser bastante grandes (hasta dos órdenes de magnitud para el mismo programa de prueba). Una inspección más estrecha revela que el origen de la mayoría de las diferencias en el rendimiento se debe a diferencias en la enumeración local y el almacenamiento de elementos de array distribuidos ",
            "error": [
                "performance portátil",
                "rendimiento portátil"
            ]
        },
        "distributed memory machines": {
            "translated_key": "máquinas de memoria distribuidas",
            "translated_annotated_text": "Encontrar fallos de rendimiento con la suite de referencia TNO HPF High-Performance Fortran (HPF) ha sido diseñado para proporcionar un rendimiento portátil en \"máquinas de memoria distribuidas\". Un aspecto importante del rendimiento portátil es el comportamiento de los compiladores HPF disponibles. Idealmente, un programador puede esperar un rendimiento comparable entre diferentes compiladores de HPF, dado el mismo programa y la misma máquina. Para probar la portabilidad del rendimiento entre compiladores, hemos diseñado una suite especial de referencia, llamada la suite de referencia TNO HPF. Consiste en un conjunto de programas de HPF que prueban varios aspectos de la generación eficiente de código paralelo. La suite de referencia consiste en una serie de programas de plantillas que se utilizan para generar programas de prueba con diferentes tamaños de matrices, alineaciones, distribuciones y espacios de iteración. Va desde asignaciones muy simples hasta tareas más complejas como espacios de iteración triangular, espacios de iteración convexa, subíndices acoplados y arrays indirectos. Hemos ejecutado la suite de referencia TNO HPF en tres compiladores: el compilador prototipo PREPARE, el compilador PGI-HPF y el compilador HPF del adaptador GMD. Los resultados muestran diferencias de rendimiento que pueden ser bastante grandes (hasta dos órdenes de magnitud para el mismo programa de prueba). Una inspección más estrecha revela que el origen de la mayoría de las diferencias en el rendimiento se debe a diferencias en la enumeración local y el almacenamiento de elementos de array distribuidos ",
            "error": [
                ""
            ]
        },
        "HPF compilers": {
            "translated_key": "compiladores HPF",
            "translated_annotated_text": "Encontrar fallos de rendimiento con la suite de referencia TNO HPF High-Performance Fortran (HPF) ha sido diseñado para proporcionar rendimiento portátil en máquinas de memoria distribuida. Un aspecto importante del rendimiento portátil es el comportamiento de los \"compiladores HPF\" disponibles. Idealmente, un programador puede esperar un rendimiento comparable entre diferentes \"compiladores HPF\", dado el mismo programa y la misma máquina. Para probar la portabilidad del rendimiento entre compiladores, hemos diseñado una suite especial de referencia, llamada la suite de referencia TNO HPF. Consiste en un conjunto de programas de HPF que prueban varios aspectos de la generación eficiente de código paralelo. La suite de referencia consiste en una serie de programas de plantillas que se utilizan para generar programas de prueba con diferentes tamaños de matrices, alineaciones, distribuciones y espacios de iteración. Va desde asignaciones muy simples hasta tareas más complejas como espacios de iteración triangular, espacios de iteración convexa, subíndices acoplados y arrays indirectos. Hemos ejecutado la suite de referencia TNO HPF en tres compiladores: el compilador prototipo PREPARE, el compilador PGI-HPF y el compilador HPF del adaptador GMD. Los resultados muestran diferencias de rendimiento que pueden ser bastante grandes (hasta dos órdenes de magnitud para el mismo programa de prueba). Una inspección más estrecha revela que el origen de la mayoría de las diferencias en el rendimiento se debe a diferencias en la enumeración local y el almacenamiento de elementos de array distribuidos ",
            "error": [
                ""
            ]
        },
        "performance portability": {
            "translated_key": "portabilidad de rendimiento",
            "translated_annotated_text": "Encontrar fallos de rendimiento con la suite de referencia TNO HPF High-Performance Fortran (HPF) ha sido diseñado para proporcionar rendimiento portátil en máquinas de memoria distribuida. Un aspecto importante del rendimiento portátil es el comportamiento de los compiladores HPF disponibles. Idealmente, un programador puede esperar un rendimiento comparable entre diferentes compiladores de HPF, dado el mismo programa y la misma máquina. Para probar la \"portabilidad de rendimiento\" entre compiladores, hemos diseñado una suite de referencia especial, llamada la suite de referencia TNO HPF. Consiste en un conjunto de programas de HPF que prueban varios aspectos de la generación eficiente de código paralelo. La suite de referencia consiste en una serie de programas de plantillas que se utilizan para generar programas de prueba con diferentes tamaños de matrices, alineaciones, distribuciones y espacios de iteración. Va desde asignaciones muy simples hasta tareas más complejas como espacios de iteración triangular, espacios de iteración convexa, subíndices acoplados y arrays indirectos. Hemos ejecutado la suite de referencia TNO HPF en tres compiladores: el compilador prototipo PREPARE, el compilador PGI-HPF y el compilador HPF del adaptador GMD. Los resultados muestran diferencias de rendimiento que pueden ser bastante grandes (hasta dos órdenes de magnitud para el mismo programa de prueba). Una inspección más estrecha revela que el origen de la mayoría de las diferencias en el rendimiento se debe a diferencias en la enumeración local y el almacenamiento de elementos de array distribuidos ",
            "error": [
                ""
            ]
        },
        "benchmark suite": {
            "translated_key": [
                "benchmark suite",
                "suite Benchmark",
                "suite Benchmark",
                " suite benchmark",
                "suite benchmark"
            ],
            "translated_annotated_text": "Encontrar fallos de rendimiento con el TNO HPF \"benchmark suite\" High-Performance Fortran (HPF) ha sido diseñado para proporcionar rendimiento portátil en máquinas de memoria distribuida. Un aspecto importante del rendimiento portátil es el comportamiento de los compiladores HPF disponibles. Idealmente, un programador puede esperar un rendimiento comparable entre diferentes compiladores de HPF, dado el mismo programa y la misma máquina. Para probar la portabilidad de rendimiento entre compiladores, hemos diseñado una \"suite Benchmark\" especial, llamada TNO HPF \"suite Benchmark\". Consiste en un conjunto de programas de HPF que prueban varios aspectos de la generación eficiente de código paralelo. La \" suite benchmark\" consiste en una serie de programas de plantillas que se utilizan para generar programas de prueba con diferentes tamaños de matrices, alineaciones, distribuciones y espacios de iteración. Va desde asignaciones muy simples hasta tareas más complejas como espacios de iteración triangular, espacios de iteración convexa, subíndices acoplados y arrays indirectos. Hemos ejecutado la \"suite benchmark\" de TNO HPF en tres compiladores: el compilador prototipo PREPARE, el compilador PGI-HPF y el compilador HPF del adaptador GMD. Los resultados muestran diferencias de rendimiento que pueden ser bastante grandes (hasta dos órdenes de magnitud para el mismo programa de prueba). Una inspección más estrecha revela que el origen de la mayoría de las diferencias en el rendimiento se debe a diferencias en la enumeración local y el almacenamiento de elementos de array distribuidos ",
            "error": [
                "benchmark suite",
                "suite Benchmark",
                "suite Benchmark",
                " suite benchmark",
                "suite benchmark"
            ]
        },
        "parallel compilers": {
            "translated_key": [],
            "translated_annotated_text": "Encontrar fallos de rendimiento con la suite de referencia TNO HPF High-Performance Fortran (HPF) ha sido diseñado para proporcionar rendimiento portátil en máquinas de memoria distribuida. Un aspecto importante del rendimiento portátil es el comportamiento de los compiladores HPF disponibles. Idealmente, un programador puede esperar un rendimiento comparable entre diferentes compiladores de HPF, dado el mismo programa y la misma máquina. Para probar la portabilidad del rendimiento entre compiladores, hemos diseñado una suite especial de referencia, llamada la suite de referencia TNO HPF. Consiste en un conjunto de programas de HPF que prueban varios aspectos de la generación eficiente de código paralelo. La suite de referencia consiste en una serie de programas de plantillas que se utilizan para generar programas de prueba con diferentes tamaños de matrices, alineaciones, distribuciones y espacios de iteración. Va desde asignaciones muy simples hasta tareas más complejas como espacios de iteración triangular, espacios de iteración convexa, subíndices acoplados y arrays indirectos. Hemos ejecutado la suite de referencia TNO HPF en tres compiladores: el compilador prototipo PREPARE, el compilador PGI-HPF y el compilador HPF del adaptador GMD. Los resultados muestran diferencias de rendimiento que pueden ser bastante grandes (hasta dos órdenes de magnitud para el mismo programa de prueba). Una inspección más estrecha revela que el origen de la mayoría de las diferencias en el rendimiento se debe a diferencias en la enumeración local y el almacenamiento de elementos de array distribuidos ",
            "error": []
        },
        "compiler optimizations": {
            "translated_key": [],
            "translated_annotated_text": "Encontrar fallos de rendimiento con la suite de referencia TNO HPF High-Performance Fortran (HPF) ha sido diseñado para proporcionar rendimiento portátil en máquinas de memoria distribuida. Un aspecto importante del rendimiento portátil es el comportamiento de los compiladores HPF disponibles. Idealmente, un programador puede esperar un rendimiento comparable entre diferentes compiladores de HPF, dado el mismo programa y la misma máquina. Para probar la portabilidad del rendimiento entre compiladores, hemos diseñado una suite especial de referencia, llamada la suite de referencia TNO HPF. Consiste en un conjunto de programas de HPF que prueban varios aspectos de la generación eficiente de código paralelo. La suite de referencia consiste en una serie de programas de plantillas que se utilizan para generar programas de prueba con diferentes tamaños de matrices, alineaciones, distribuciones y espacios de iteración. Va desde asignaciones muy simples hasta tareas más complejas como espacios de iteración triangular, espacios de iteración convexa, subíndices acoplados y arrays indirectos. Hemos ejecutado la suite de referencia TNO HPF en tres compiladores: el compilador prototipo PREPARE, el compilador PGI-HPF y el compilador HPF del adaptador GMD. Los resultados muestran diferencias de rendimiento que pueden ser bastante grandes (hasta dos órdenes de magnitud para el mismo programa de prueba). Una inspección más estrecha revela que el origen de la mayoría de las diferencias en el rendimiento se debe a diferencias en la enumeración local y el almacenamiento de elementos de array distribuidos ",
            "error": []
        },
        "FORTRAN": {
            "translated_key": [],
            "translated_annotated_text": "Encontrar fallos de rendimiento con la suite de referencia TNO HPF High-Performance Fortran (HPF) ha sido diseñado para proporcionar rendimiento portátil en máquinas de memoria distribuida. Un aspecto importante del rendimiento portátil es el comportamiento de los compiladores HPF disponibles. Idealmente, un programador puede esperar un rendimiento comparable entre diferentes compiladores de HPF, dado el mismo programa y la misma máquina. Para probar la portabilidad del rendimiento entre compiladores, hemos diseñado una suite especial de referencia, llamada la suite de referencia TNO HPF. Consiste en un conjunto de programas de HPF que prueban varios aspectos de la generación eficiente de código paralelo. La suite de referencia consiste en una serie de programas de plantillas que se utilizan para generar programas de prueba con diferentes tamaños de matrices, alineaciones, distribuciones y espacios de iteración. Va desde asignaciones muy simples hasta tareas más complejas como espacios de iteración triangular, espacios de iteración convexa, subíndices acoplados y arrays indirectos. Hemos ejecutado la suite de referencia TNO HPF en tres compiladores: el compilador prototipo PREPARE, el compilador PGI-HPF y el compilador HPF del adaptador GMD. Los resultados muestran diferencias de rendimiento que pueden ser bastante grandes (hasta dos órdenes de magnitud para el mismo programa de prueba). Una inspección más estrecha revela que el origen de la mayoría de las diferencias en el rendimiento se debe a diferencias en la enumeración local y el almacenamiento de elementos de array distribuidos ",
            "error": []
        },
        "parallel programming": {
            "translated_key": [],
            "translated_annotated_text": "Encontrar fallos de rendimiento con la suite de referencia TNO HPF High-Performance Fortran (HPF) ha sido diseñado para proporcionar rendimiento portátil en máquinas de memoria distribuida. Un aspecto importante del rendimiento portátil es el comportamiento de los compiladores HPF disponibles. Idealmente, un programador puede esperar un rendimiento comparable entre diferentes compiladores de HPF, dado el mismo programa y la misma máquina. Para probar la portabilidad del rendimiento entre compiladores, hemos diseñado una suite especial de referencia, llamada la suite de referencia TNO HPF. Consiste en un conjunto de programas de HPF que prueban varios aspectos de la generación eficiente de código paralelo. La suite de referencia consiste en una serie de programas de plantillas que se utilizan para generar programas de prueba con diferentes tamaños de matrices, alineaciones, distribuciones y espacios de iteración. Va desde asignaciones muy simples hasta tareas más complejas como espacios de iteración triangular, espacios de iteración convexa, subíndices acoplados y arrays indirectos. Hemos ejecutado la suite de referencia TNO HPF en tres compiladores: el compilador prototipo PREPARE, el compilador PGI-HPF y el compilador HPF del adaptador GMD. Los resultados muestran diferencias de rendimiento que pueden ser bastante grandes (hasta dos órdenes de magnitud para el mismo programa de prueba). Una inspección más estrecha revela que el origen de la mayoría de las diferencias en el rendimiento se debe a diferencias en la enumeración local y el almacenamiento de elementos de array distribuidos ",
            "error": []
        },
        "program compilers": {
            "translated_key": [],
            "translated_annotated_text": "Encontrar fallos de rendimiento con la suite de referencia TNO HPF High-Performance Fortran (HPF) ha sido diseñado para proporcionar rendimiento portátil en máquinas de memoria distribuida. Un aspecto importante del rendimiento portátil es el comportamiento de los compiladores HPF disponibles. Idealmente, un programador puede esperar un rendimiento comparable entre diferentes compiladores de HPF, dado el mismo programa y la misma máquina. Para probar la portabilidad del rendimiento entre compiladores, hemos diseñado una suite especial de referencia, llamada la suite de referencia TNO HPF. Consiste en un conjunto de programas de HPF que prueban varios aspectos de la generación eficiente de código paralelo. La suite de referencia consiste en una serie de programas de plantillas que se utilizan para generar programas de prueba con diferentes tamaños de matrices, alineaciones, distribuciones y espacios de iteración. Va desde asignaciones muy simples hasta tareas más complejas como espacios de iteración triangular, espacios de iteración convexa, subíndices acoplados y arrays indirectos. Hemos ejecutado la suite de referencia TNO HPF en tres compiladores: el compilador prototipo PREPARE, el compilador PGI-HPF y el compilador HPF del adaptador GMD. Los resultados muestran diferencias de rendimiento que pueden ser bastante grandes (hasta dos órdenes de magnitud para el mismo programa de prueba). Una inspección más estrecha revela que el origen de la mayoría de las diferencias en el rendimiento se debe a diferencias en la enumeración local y el almacenamiento de elementos de array distribuidos ",
            "error": []
        },
        "software performance evaluation": {
            "translated_key": [],
            "translated_annotated_text": "Encontrar fallos de rendimiento con la suite de referencia TNO HPF High-Performance Fortran (HPF) ha sido diseñado para proporcionar rendimiento portátil en máquinas de memoria distribuida. Un aspecto importante del rendimiento portátil es el comportamiento de los compiladores HPF disponibles. Idealmente, un programador puede esperar un rendimiento comparable entre diferentes compiladores de HPF, dado el mismo programa y la misma máquina. Para probar la portabilidad del rendimiento entre compiladores, hemos diseñado una suite especial de referencia, llamada la suite de referencia TNO HPF. Consiste en un conjunto de programas de HPF que prueban varios aspectos de la generación eficiente de código paralelo. La suite de referencia consiste en una serie de programas de plantillas que se utilizan para generar programas de prueba con diferentes tamaños de matrices, alineaciones, distribuciones y espacios de iteración. Va desde asignaciones muy simples hasta tareas más complejas como espacios de iteración triangular, espacios de iteración convexa, subíndices acoplados y arrays indirectos. Hemos ejecutado la suite de referencia TNO HPF en tres compiladores: el compilador prototipo PREPARE, el compilador PGI-HPF y el compilador HPF del adaptador GMD. Los resultados muestran diferencias de rendimiento que pueden ser bastante grandes (hasta dos órdenes de magnitud para el mismo programa de prueba). Una inspección más estrecha revela que el origen de la mayoría de las diferencias en el rendimiento se debe a diferencias en la enumeración local y el almacenamiento de elementos de array distribuidos ",
            "error": []
        },
        "software portability": {
            "translated_key": [],
            "translated_annotated_text": "Encontrar fallos de rendimiento con la suite de referencia TNO HPF High-Performance Fortran (HPF) ha sido diseñado para proporcionar rendimiento portátil en máquinas de memoria distribuida. Un aspecto importante del rendimiento portátil es el comportamiento de los compiladores HPF disponibles. Idealmente, un programador puede esperar un rendimiento comparable entre diferentes compiladores de HPF, dado el mismo programa y la misma máquina. Para probar la portabilidad del rendimiento entre compiladores, hemos diseñado una suite especial de referencia, llamada la suite de referencia TNO HPF. Consiste en un conjunto de programas de HPF que prueban varios aspectos de la generación eficiente de código paralelo. La suite de referencia consiste en una serie de programas de plantillas que se utilizan para generar programas de prueba con diferentes tamaños de matrices, alineaciones, distribuciones y espacios de iteración. Va desde asignaciones muy simples hasta tareas más complejas como espacios de iteración triangular, espacios de iteración convexa, subíndices acoplados y arrays indirectos. Hemos ejecutado la suite de referencia TNO HPF en tres compiladores: el compilador prototipo PREPARE, el compilador PGI-HPF y el compilador HPF del adaptador GMD. Los resultados muestran diferencias de rendimiento que pueden ser bastante grandes (hasta dos órdenes de magnitud para el mismo programa de prueba). Una inspección más estrecha revela que el origen de la mayoría de las diferencias en el rendimiento se debe a diferencias en la enumeración local y el almacenamiento de elementos de array distribuidos ",
            "error": []
        }
    }
}