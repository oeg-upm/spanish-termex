{
    "original_text": "Towards strong stability of concurrent repetitive processes sharing resources The paper presents a method for design of stability conditions of concurrent, repetitive processes sharing common resources. Steady-state behaviour of the system with m cyclic processes utilising a resource with the mutual exclusion is considered. Based on a recurrent equations framework necessary and sufficient conditions for the existence of maximal performance steady-state are presented. It was shown that if the conditions hold then the m-process system is marginally stable, i.e., a steady-state of the system depends on the perturbations. The problem of finding the relative positions of the processes leading to waiting-free (maximal efficiency) steady-states of the system is formulated as a constraint logic programming problem. An example illustrating the solving of the problem for a 3-process system using object-oriented, constraint logic programming language Oz is presented. A condition sufficient for strong stability of the m-process system is given. When the condition holds then for any initial phases of the processes a waiting-free steady-state will be reached",
    "original_translation": "Hacia una fuerte estabilidad de los procesos simultáneos repetitivos compartiendo recursos El documento presenta un método para el diseño de condiciones de estabilidad de procesos concurrentes y repetitivos compartiendo recursos comunes. Se considera el comportamiento en estado estacionario del sistema con procesos mcíclicos que utilizan un recurso con la exclusión mutua. Sobre la base de un marco de ecuaciones recurrentes se presentan las condiciones necesarias y suficientes para la existencia de rendimiento máximo en estado estacionario. Se demostró que si las condiciones se mantienen entonces el sistema de proceso m es marginalmente estable, es decir, un estado estacionario del sistema depende de las perturbaciones. El problema de encontrar las posiciones relativas de los procesos que conducen a estados estables libres de espera (eficiencia máxima) del sistema se formula como un problema de programación lógica de restricción. Se presenta un ejemplo que ilustra la solución del problema para un sistema de 3 procesos que utiliza el lenguaje de programación de lógica de restricción orientado a objetos Oz. Se da una condición suficiente para una fuerte estabilidad del sistema de proceso m. Cuando la condición se mantiene entonces para cualquier fase inicial de los procesos se alcanzará un estado estacionario libre de espera",
    "error_count": 7,
    "keys": {
        "strong stability": {
            "translated_key": "estabilidad fuerte",
            "translated_annotated_text": "Hacia una \"estabilidad fuerte\" de procesos simultáneos repetitivos que comparten recursos El documento presenta un método para el diseño de condiciones de estabilidad de procesos simultáneos y repetitivos que comparten recursos comunes. Se considera el comportamiento en estado estacionario del sistema con procesos mcíclicos que utilizan un recurso con la exclusión mutua. Sobre la base de un marco de ecuaciones recurrentes se presentan las condiciones necesarias y suficientes para la existencia de rendimiento máximo en estado estacionario. Se demostró que si las condiciones se mantienen entonces el sistema de proceso m es marginalmente estable, es decir, un estado estacionario del sistema depende de las perturbaciones. El problema de encontrar las posiciones relativas de los procesos que conducen a estados estables libres de espera (eficiencia máxima) del sistema se formula como un problema de programación lógica de restricción. Se presenta un ejemplo que ilustra la solución del problema para un sistema de 3 procesos que utiliza el lenguaje de programación de lógica de restricción orientado a objetos Oz. Se da una condición suficiente para la \"estabilidad fuerte\" del sistema de proceso m. Cuando la condición se mantiene entonces para cualquier fase inicial de los procesos se alcanzará un estado estacionario libre de espera ",
            "error": [
                ""
            ]
        },
        "concurrent repetitive processes": {
            "translated_key": "procesos repetitivos concurrentes",
            "translated_annotated_text": "Hacia una fuerte estabilidad de \"procesos repetitivos concurrentes\" compartiendo recursos El documento presenta un método para el diseño de condiciones de estabilidad de procesos concurrentes y repetitivos compartiendo recursos comunes. Se considera el comportamiento en estado estacionario del sistema con procesos mcíclicos que utilizan un recurso con la exclusión mutua. Sobre la base de un marco de ecuaciones recurrentes se presentan las condiciones necesarias y suficientes para la existencia de rendimiento máximo en estado estacionario. Se demostró que si las condiciones se mantienen entonces el sistema de proceso m es marginalmente estable, es decir, un estado estacionario del sistema depende de las perturbaciones. El problema de encontrar las posiciones relativas de los procesos que conducen a estados estables libres de espera (eficiencia máxima) del sistema se formula como un problema de programación lógica de restricción. Se presenta un ejemplo que ilustra la solución del problema para un sistema de 3 procesos que utiliza el lenguaje de programación de lógica de restricción orientado a objetos Oz. Se da una condición suficiente para una fuerte estabilidad del sistema de proceso m. Cuando la condición se mantiene entonces para cualquier fase inicial de los procesos se alcanzará un estado estacionario libre de espera ",
            "error": [
                ""
            ]
        },
        "common resources": {
            "translated_key": "recursos comunes",
            "translated_annotated_text": "Hacia una fuerte estabilidad de procesos simultáneos repetitivos compartiendo recursos El documento presenta un método para el diseño de condiciones de estabilidad de procesos concurrentes y repetitivos compartiendo \"recursos comunes\". Se considera el comportamiento en estado estacionario del sistema con procesos mcíclicos que utilizan un recurso con la exclusión mutua. Sobre la base de un marco de ecuaciones recurrentes se presentan las condiciones necesarias y suficientes para la existencia de rendimiento máximo en estado estacionario. Se demostró que si las condiciones se mantienen entonces el sistema de proceso m es marginalmente estable, es decir, un estado estacionario del sistema depende de las perturbaciones. El problema de encontrar las posiciones relativas de los procesos que conducen a estados estables libres de espera (eficiencia máxima) del sistema se formula como un problema de programación lógica de restricción. Se presenta un ejemplo que ilustra la solución del problema para un sistema de 3 procesos que utiliza el lenguaje de programación de lógica de restricción orientado a objetos Oz. Se da una condición suficiente para una fuerte estabilidad del sistema de proceso m. Cuando la condición se mantiene entonces para cualquier fase inicial de los procesos se alcanzará un estado estacionario libre de espera ",
            "error": [
                ""
            ]
        },
        "steady-state behaviour": {
            "translated_key": [],
            "translated_annotated_text": "Hacia una fuerte estabilidad de los procesos simultáneos repetitivos compartiendo recursos El documento presenta un método para el diseño de condiciones de estabilidad de procesos concurrentes y repetitivos compartiendo recursos comunes. Se considera el comportamiento en estado estacionario del sistema con procesos mcíclicos que utilizan un recurso con la exclusión mutua. Sobre la base de un marco de ecuaciones recurrentes se presentan las condiciones necesarias y suficientes para la existencia de rendimiento máximo en estado estacionario. Se demostró que si las condiciones se mantienen entonces el sistema de proceso m es marginalmente estable, es decir, un estado estacionario del sistema depende de las perturbaciones. El problema de encontrar las posiciones relativas de los procesos que conducen a estados estables libres de espera (eficiencia máxima) del sistema se formula como un problema de programación lógica de restricción. Se presenta un ejemplo que ilustra la solución del problema para un sistema de 3 procesos que utiliza el lenguaje de programación de lógica de restricción orientado a objetos Oz. Se da una condición suficiente para una fuerte estabilidad del sistema de proceso m. Cuando la condición se mantiene entonces para cualquier fase inicial de los procesos se alcanzará un estado estacionario libre de espera ",
            "error": []
        },
        "cyclic processes": {
            "translated_key": "procesos cíclicos",
            "translated_annotated_text": "Hacia una fuerte estabilidad de los procesos simultáneos repetitivos compartiendo recursos El documento presenta un método para el diseño de condiciones de estabilidad de procesos concurrentes y repetitivos compartiendo recursos comunes. Se considera el comportamiento en estado estacionario del sistema con m \"procesos cíclicos\" que utilizan un recurso con la exclusión mutua. Sobre la base de un marco de ecuaciones recurrentes se presentan las condiciones necesarias y suficientes para la existencia de rendimiento máximo en estado estacionario. Se demostró que si las condiciones se mantienen entonces el sistema de proceso m es marginalmente estable, es decir, un estado estacionario del sistema depende de las perturbaciones. El problema de encontrar las posiciones relativas de los procesos que conducen a estados estables libres de espera (eficiencia máxima) del sistema se formula como un problema de programación lógica de restricción. Se presenta un ejemplo que ilustra la solución del problema para un sistema de 3 procesos que utiliza el lenguaje de programación de lógica de restricción orientado a objetos Oz. Se da una condición suficiente para una fuerte estabilidad del sistema de proceso m. Cuando la condición se mantiene entonces para cualquier fase inicial de los procesos se alcanzará un estado estacionario libre de espera ",
            "error": [
                ""
            ]
        },
        "mutual exclusion": {
            "translated_key": "exclusión mutua",
            "translated_annotated_text": "Hacia una fuerte estabilidad de los procesos simultáneos repetitivos compartiendo recursos El documento presenta un método para el diseño de condiciones de estabilidad de procesos concurrentes y repetitivos compartiendo recursos comunes. Se considera el comportamiento en estado estacionario del sistema con procesos mcíclicos que utilizan un recurso con la \"exclusión mutua\". Sobre la base de un marco de ecuaciones recurrentes se presentan las condiciones necesarias y suficientes para la existencia de rendimiento máximo en estado estacionario. Se demostró que si las condiciones se mantienen entonces el sistema de proceso m es marginalmente estable, es decir, un estado estacionario del sistema depende de las perturbaciones. El problema de encontrar las posiciones relativas de los procesos que conducen a estados estables libres de espera (eficiencia máxima) del sistema se formula como un problema de programación lógica de restricción. Se presenta un ejemplo que ilustra la solución del problema para un sistema de 3 procesos que utiliza el lenguaje de programación de lógica de restricción orientado a objetos Oz. Se da una condición suficiente para una fuerte estabilidad del sistema de proceso m. Cuando la condición se mantiene entonces para cualquier fase inicial de los procesos se alcanzará un estado estacionario libre de espera ",
            "error": [
                ""
            ]
        },
        "recurrent equations framework": {
            "translated_key": "marco de ecuaciones periódicas",
            "translated_annotated_text": "Hacia una fuerte estabilidad de los procesos simultáneos repetitivos compartiendo recursos El documento presenta un método para el diseño de condiciones de estabilidad de procesos concurrentes y repetitivos compartiendo recursos comunes. Se considera el comportamiento en estado estacionario del sistema con procesos mcíclicos que utilizan un recurso con la exclusión mutua. Sobre la base de un \"marco de ecuaciones periódicas\" se presentan las condiciones necesarias y suficientes para la existencia de un rendimiento máximo en estado estacionario. Se demostró que si las condiciones se mantienen entonces el sistema de proceso m es marginalmente estable, es decir, un estado estacionario del sistema depende de las perturbaciones. El problema de encontrar las posiciones relativas de los procesos que conducen a estados estables libres de espera (eficiencia máxima) del sistema se formula como un problema de programación lógica de restricción. Se presenta un ejemplo que ilustra la solución del problema para un sistema de 3 procesos que utiliza el lenguaje de programación de lógica de restricción orientado a objetos Oz. Se da una condición suficiente para una fuerte estabilidad del sistema de proceso m. Cuando la condición se mantiene entonces para cualquier fase inicial de los procesos se alcanzará un estado estacionario libre de espera ",
            "error": [
                ""
            ]
        },
        "necessary and sufficient conditions": {
            "translated_key": "condiciones necesarias y suficientes",
            "translated_annotated_text": "Hacia una fuerte estabilidad de los procesos simultáneos repetitivos compartiendo recursos El documento presenta un método para el diseño de condiciones de estabilidad de procesos concurrentes y repetitivos compartiendo recursos comunes. Se considera el comportamiento en estado estacionario del sistema con procesos mcíclicos que utilizan un recurso con la exclusión mutua. Sobre la base de un marco de ecuaciones recurrentes \"condiciones necesarias y suficientes\" para la existencia de rendimiento máximo estado estacionario se presentan. Se demostró que si las condiciones se mantienen entonces el sistema de proceso m es marginalmente estable, es decir, un estado estacionario del sistema depende de las perturbaciones. El problema de encontrar las posiciones relativas de los procesos que conducen a estados estables libres de espera (eficiencia máxima) del sistema se formula como un problema de programación lógica de restricción. Se presenta un ejemplo que ilustra la solución del problema para un sistema de 3 procesos que utiliza el lenguaje de programación de lógica de restricción orientado a objetos Oz. Se da una condición suficiente para una fuerte estabilidad del sistema de proceso m. Cuando la condición se mantiene entonces para cualquier fase inicial de los procesos se alcanzará un estado estacionario libre de espera ",
            "error": [
                ""
            ]
        },
        "maximal performance steady-state": {
            "translated_key": "estado estacionario de rendimiento máximo",
            "translated_annotated_text": "Hacia una fuerte estabilidad de los procesos simultáneos repetitivos compartiendo recursos El documento presenta un método para el diseño de condiciones de estabilidad de procesos concurrentes y repetitivos compartiendo recursos comunes. Se considera el comportamiento en estado estacionario del sistema con procesos mcíclicos que utilizan un recurso con la exclusión mutua. Sobre la base de un marco de ecuaciones recurrentes se presentan las condiciones necesarias y suficientes para la existencia de \"estado estacionario de rendimiento máximo\". Se demostró que si las condiciones se mantienen entonces el sistema de proceso m es marginalmente estable, es decir, un estado estacionario del sistema depende de las perturbaciones. El problema de encontrar las posiciones relativas de los procesos que conducen a estados estables libres de espera (eficiencia máxima) del sistema se formula como un problema de programación lógica de restricción. Se presenta un ejemplo que ilustra la solución del problema para un sistema de 3 procesos que utiliza el lenguaje de programación de lógica de restricción orientado a objetos Oz. Se da una condición suficiente para una fuerte estabilidad del sistema de proceso m. Cuando la condición se mantiene entonces para cualquier fase inicial de los procesos se alcanzará un estado estacionario libre de espera ",
            "error": [
                ""
            ]
        },
        "waiting-free steady-states": {
            "translated_key": [],
            "translated_annotated_text": "Hacia una fuerte estabilidad de los procesos simultáneos repetitivos compartiendo recursos El documento presenta un método para el diseño de condiciones de estabilidad de procesos concurrentes y repetitivos compartiendo recursos comunes. Se considera el comportamiento en estado estacionario del sistema con procesos mcíclicos que utilizan un recurso con la exclusión mutua. Sobre la base de un marco de ecuaciones recurrentes se presentan las condiciones necesarias y suficientes para la existencia de rendimiento máximo en estado estacionario. Se demostró que si las condiciones se mantienen entonces el sistema de proceso m es marginalmente estable, es decir, un estado estacionario del sistema depende de las perturbaciones. El problema de encontrar las posiciones relativas de los procesos que conducen a estados estables libres de espera (eficiencia máxima) del sistema se formula como un problema de programación lógica de restricción. Se presenta un ejemplo que ilustra la solución del problema para un sistema de 3 procesos que utiliza el lenguaje de programación de lógica de restricción orientado a objetos Oz. Se da una condición suficiente para una fuerte estabilidad del sistema de proceso m. Cuando la condición se mantiene entonces para cualquier fase inicial de los procesos se alcanzará un estado estacionario libre de espera ",
            "error": []
        },
        "constraint logic programming": {
            "translated_key": "programación lógica restrictiva",
            "translated_annotated_text": "Hacia una fuerte estabilidad de los procesos simultáneos repetitivos compartiendo recursos El documento presenta un método para el diseño de condiciones de estabilidad de procesos concurrentes y repetitivos compartiendo recursos comunes. Se considera el comportamiento en estado estacionario del sistema con procesos mcíclicos que utilizan un recurso con la exclusión mutua. Sobre la base de un marco de ecuaciones recurrentes se presentan las condiciones necesarias y suficientes para la existencia de rendimiento máximo en estado estacionario. Se demostró que si las condiciones se mantienen entonces el sistema de proceso m es marginalmente estable, es decir, un estado estacionario del sistema depende de las perturbaciones. El problema de encontrar las posiciones relativas de los procesos que conducen a estados estables libres de espera (eficiencia máxima) del sistema se formula como un problema de \"programación lógica restrictiva\". Se presenta un ejemplo que ilustra la solución del problema para un sistema de 3 procesos que utiliza el lenguaje Oz orientado a objetos, \"programación lógica restrictiva\". Se da una condición suficiente para una fuerte estabilidad del sistema de proceso m. Cuando la condición se mantiene entonces para cualquier fase inicial de los procesos se alcanzará un estado estacionario libre de espera ",
            "error": [
                ""
            ]
        },
        "3-process system": {
            "translated_key": "sistema de 3 procesos",
            "translated_annotated_text": "Hacia una fuerte estabilidad de los procesos simultáneos repetitivos compartiendo recursos El documento presenta un método para el diseño de condiciones de estabilidad de procesos concurrentes y repetitivos compartiendo recursos comunes. Se considera el comportamiento en estado estacionario del sistema con procesos mcíclicos que utilizan un recurso con la exclusión mutua. Sobre la base de un marco de ecuaciones recurrentes se presentan las condiciones necesarias y suficientes para la existencia de rendimiento máximo en estado estacionario. Se demostró que si las condiciones se mantienen entonces el sistema de proceso m es marginalmente estable, es decir, un estado estacionario del sistema depende de las perturbaciones. El problema de encontrar las posiciones relativas de los procesos que conducen a estados estables libres de espera (eficiencia máxima) del sistema se formula como un problema de programación lógica de restricción. Se presenta un ejemplo que ilustra la solución del problema para un \"sistema de 3 procesos\" usando el lenguaje de programación de lógica de restricción orientado a objetos Oz. Se da una condición suficiente para una fuerte estabilidad del sistema de proceso m. Cuando la condición se mantiene entonces para cualquier fase inicial de los procesos se alcanzará un estado estacionario libre de espera ",
            "error": [
                ""
            ]
        },
        "Oz language": {
            "translated_key": [],
            "translated_annotated_text": "Hacia una fuerte estabilidad de los procesos simultáneos repetitivos compartiendo recursos El documento presenta un método para el diseño de condiciones de estabilidad de procesos concurrentes y repetitivos compartiendo recursos comunes. Se considera el comportamiento en estado estacionario del sistema con procesos mcíclicos que utilizan un recurso con la exclusión mutua. Sobre la base de un marco de ecuaciones recurrentes se presentan las condiciones necesarias y suficientes para la existencia de rendimiento máximo en estado estacionario. Se demostró que si las condiciones se mantienen entonces el sistema de proceso m es marginalmente estable, es decir, un estado estacionario del sistema depende de las perturbaciones. El problema de encontrar las posiciones relativas de los procesos que conducen a estados estables libres de espera (eficiencia máxima) del sistema se formula como un problema de programación lógica de restricción. Se presenta un ejemplo que ilustra la solución del problema para un sistema de 3 procesos que utiliza el lenguaje de programación de lógica de restricción orientado a objetos Oz. Se da una condición suficiente para una fuerte estabilidad del sistema de proceso m. Cuando la condición se mantiene entonces para cualquier fase inicial de los procesos se alcanzará un estado estacionario libre de espera ",
            "error": []
        },
        "concurrency theory": {
            "translated_key": [],
            "translated_annotated_text": "Hacia una fuerte estabilidad de los procesos simultáneos repetitivos compartiendo recursos El documento presenta un método para el diseño de condiciones de estabilidad de procesos concurrentes y repetitivos compartiendo recursos comunes. Se considera el comportamiento en estado estacionario del sistema con procesos mcíclicos que utilizan un recurso con la exclusión mutua. Sobre la base de un marco de ecuaciones recurrentes se presentan las condiciones necesarias y suficientes para la existencia de rendimiento máximo en estado estacionario. Se demostró que si las condiciones se mantienen entonces el sistema de proceso m es marginalmente estable, es decir, un estado estacionario del sistema depende de las perturbaciones. El problema de encontrar las posiciones relativas de los procesos que conducen a estados estables libres de espera (eficiencia máxima) del sistema se formula como un problema de programación lógica de restricción. Se presenta un ejemplo que ilustra la solución del problema para un sistema de 3 procesos que utiliza el lenguaje de programación de lógica de restricción orientado a objetos Oz. Se da una condición suficiente para una fuerte estabilidad del sistema de proceso m. Cuando la condición se mantiene entonces para cualquier fase inicial de los procesos se alcanzará un estado estacionario libre de espera ",
            "error": []
        },
        "constraint handling": {
            "translated_key": [],
            "translated_annotated_text": "Hacia una fuerte estabilidad de los procesos simultáneos repetitivos compartiendo recursos El documento presenta un método para el diseño de condiciones de estabilidad de procesos concurrentes y repetitivos compartiendo recursos comunes. Se considera el comportamiento en estado estacionario del sistema con procesos mcíclicos que utilizan un recurso con la exclusión mutua. Sobre la base de un marco de ecuaciones recurrentes se presentan las condiciones necesarias y suficientes para la existencia de rendimiento máximo en estado estacionario. Se demostró que si las condiciones se mantienen entonces el sistema de proceso m es marginalmente estable, es decir, un estado estacionario del sistema depende de las perturbaciones. El problema de encontrar las posiciones relativas de los procesos que conducen a estados estables libres de espera (eficiencia máxima) del sistema se formula como un problema de programación lógica de restricción. Se presenta un ejemplo que ilustra la solución del problema para un sistema de 3 procesos que utiliza el lenguaje de programación de lógica de restricción orientado a objetos Oz. Se da una condición suficiente para una fuerte estabilidad del sistema de proceso m. Cuando la condición se mantiene entonces para cualquier fase inicial de los procesos se alcanzará un estado estacionario libre de espera ",
            "error": []
        },
        "logic programming languages": {
            "translated_key": [],
            "translated_annotated_text": "Hacia una fuerte estabilidad de los procesos simultáneos repetitivos compartiendo recursos El documento presenta un método para el diseño de condiciones de estabilidad de procesos concurrentes y repetitivos compartiendo recursos comunes. Se considera el comportamiento en estado estacionario del sistema con procesos mcíclicos que utilizan un recurso con la exclusión mutua. Sobre la base de un marco de ecuaciones recurrentes se presentan las condiciones necesarias y suficientes para la existencia de rendimiento máximo en estado estacionario. Se demostró que si las condiciones se mantienen entonces el sistema de proceso m es marginalmente estable, es decir, un estado estacionario del sistema depende de las perturbaciones. El problema de encontrar las posiciones relativas de los procesos que conducen a estados estables libres de espera (eficiencia máxima) del sistema se formula como un problema de programación lógica de restricción. Se presenta un ejemplo que ilustra la solución del problema para un sistema de 3 procesos que utiliza el lenguaje de programación de lógica de restricción orientado a objetos Oz. Se da una condición suficiente para una fuerte estabilidad del sistema de proceso m. Cuando la condición se mantiene entonces para cualquier fase inicial de los procesos se alcanzará un estado estacionario libre de espera ",
            "error": []
        },
        "object-oriented methods": {
            "translated_key": [],
            "translated_annotated_text": "Hacia una fuerte estabilidad de los procesos simultáneos repetitivos compartiendo recursos El documento presenta un método para el diseño de condiciones de estabilidad de procesos concurrentes y repetitivos compartiendo recursos comunes. Se considera el comportamiento en estado estacionario del sistema con procesos mcíclicos que utilizan un recurso con la exclusión mutua. Sobre la base de un marco de ecuaciones recurrentes se presentan las condiciones necesarias y suficientes para la existencia de rendimiento máximo en estado estacionario. Se demostró que si las condiciones se mantienen entonces el sistema de proceso m es marginalmente estable, es decir, un estado estacionario del sistema depende de las perturbaciones. El problema de encontrar las posiciones relativas de los procesos que conducen a estados estables libres de espera (eficiencia máxima) del sistema se formula como un problema de programación lógica de restricción. Se presenta un ejemplo que ilustra la solución del problema para un sistema de 3 procesos que utiliza el lenguaje de programación de lógica de restricción orientado a objetos Oz. Se da una condición suficiente para una fuerte estabilidad del sistema de proceso m. Cuando la condición se mantiene entonces para cualquier fase inicial de los procesos se alcanzará un estado estacionario libre de espera ",
            "error": []
        },
        "stability": {
            "translated_key": "estabilidad",
            "translated_annotated_text": "Hacia una fuerte \"estabilidad\" de procesos simultáneos repetitivos compartiendo recursos El documento presenta un método para el diseño de condiciones de \"estabilidad\" de procesos concurrentes y repetitivos compartiendo recursos comunes. Se considera el comportamiento en estado estacionario del sistema con procesos mcíclicos que utilizan un recurso con la exclusión mutua. Sobre la base de un marco de ecuaciones recurrentes se presentan las condiciones necesarias y suficientes para la existencia de rendimiento máximo en estado estacionario. Se demostró que si las condiciones se mantienen entonces el sistema de proceso m es marginalmente estable, es decir, un estado estacionario del sistema depende de las perturbaciones. El problema de encontrar las posiciones relativas de los procesos que conducen a estados estables libres de espera (eficiencia máxima) del sistema se formula como un problema de programación lógica de restricción. Se presenta un ejemplo que ilustra la solución del problema para un sistema de 3 procesos que utiliza el lenguaje de programación de lógica de restricción orientado a objetos Oz. Se da una condición suficiente para una \"estabilidad\" fuerte del sistema de proceso m. Cuando la condición se mantiene entonces para cualquier fase inicial de los procesos se alcanzará un estado estacionario libre de espera ",
            "error": [
                ""
            ]
        }
    }
}