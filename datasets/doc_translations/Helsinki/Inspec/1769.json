{
    "original_text": "Transformation rules and strategies for functional-logic programs This paper abstracts the contents of a PhD dissertation entitled Transformation Rules and Strategies for Functional-Logic Programs which has been recently defended. These techniques are based on fold/unfold transformations and they can be used to optimize integrated (functional-logic) programs for a wide class of applications. Experimental results show that typical examples in the field of artificial intelligence are successfully enhanced by our transformation system SYNTH. The thesis presents the first approach of these methods for declarative languages that integrate the best features from functional and logic programming",
    "original_translation": "Reglas y estrategias de transformación para programas funcionales-lógicos Este artículo resume el contenido de una tesis doctoral titulada Reglas y estrategias de transformación para programas funcionales-logic que ha sido defendida recientemente. Estas técnicas se basan en transformaciones de pliegue/desdoblamiento y se pueden utilizar para optimizar programas integrados (funcionales-logicos) para una amplia clase de aplicaciones. Los resultados experimentales muestran que los ejemplos típicos en el campo de la inteligencia artificial son mejorados exitosamente por nuestro sistema de transformación SYNTH. La tesis presenta el primer enfoque de estos métodos para lenguajes declarativos que integran las mejores características de la programación funcional y lógica",
    "error_count": 5,
    "keys": {
        "program transformation rules": {
            "translated_key": [],
            "translated_annotated_text": "Reglas y estrategias de transformación para programas funcionales-lógicos Este artículo resume el contenido de una tesis doctoral titulada Reglas y estrategias de transformación para programas funcionales-logic que ha sido defendida recientemente. Estas técnicas se basan en transformaciones de pliegue/desdoblamiento y se pueden utilizar para optimizar programas integrados (funcionales-logicos) para una amplia clase de aplicaciones. Los resultados experimentales muestran que los ejemplos típicos en el campo de la inteligencia artificial son mejorados exitosamente por nuestro sistema de transformación SYNTH. La tesis presenta el primer enfoque de estos métodos para lenguajes declarativos que integran las mejores características de la programación funcional y lógica ",
            "error": []
        },
        "functional-logic programs": {
            "translated_key": "programas funcionales-logicos",
            "translated_annotated_text": "Reglas y estrategias de transformación para <br>programas funcionales-logicos</br> Este artículo resume el contenido de una tesis doctoral titulada Reglas y estrategias de transformación para programas funcionales-logic que ha sido defendida recientemente.  Estas técnicas se basan en transformaciones de pliegue/desdoblamiento y se pueden utilizar para optimizar programas integrados (funcionales-logicos) para una amplia clase de aplicaciones. Los resultados experimentales muestran que los ejemplos típicos en el campo de la inteligencia artificial son mejorados exitosamente por nuestro sistema de transformación SYNTH. La tesis presenta el primer enfoque de estos métodos para lenguajes declarativos que integran las mejores características de la programación funcional y lógica ",
            "error": [
                ""
            ]
        },
        "logic programming": {
            "translated_key": "lógica",
            "translated_annotated_text": "Reglas y estrategias de transformación para programas funcionales-lógicos Este artículo resume el contenido de una tesis doctoral titulada Reglas y estrategias de transformación para programas funcionales-logic que ha sido defendida recientemente. Estas técnicas se basan en transformaciones de pliegue/desdoblamiento y se pueden utilizar para optimizar programas integrados (funcionales-logicos) para una amplia clase de aplicaciones. Los resultados experimentales muestran que los ejemplos típicos en el campo de la inteligencia artificial son mejorados exitosamente por nuestro sistema de transformación SYNTH. La tesis presenta el primer enfoque de estos métodos para lenguajes declarativos que integran las mejores características de la programación funcional y <br>lógica</br> ",
            "error": [
                ""
            ]
        },
        "functional programming": {
            "translated_key": [],
            "translated_annotated_text": "Reglas y estrategias de transformación para programas funcionales-lógicos Este artículo resume el contenido de una tesis doctoral titulada Reglas y estrategias de transformación para programas funcionales-logic que ha sido defendida recientemente. Estas técnicas se basan en transformaciones de pliegue/desdoblamiento y se pueden utilizar para optimizar programas integrados (funcionales-logicos) para una amplia clase de aplicaciones. Los resultados experimentales muestran que los ejemplos típicos en el campo de la inteligencia artificial son mejorados exitosamente por nuestro sistema de transformación SYNTH. La tesis presenta el primer enfoque de estos métodos para lenguajes declarativos que integran las mejores características de la programación funcional y lógica ",
            "error": []
        },
        "fold-unfold transformations": {
            "translated_key": [],
            "translated_annotated_text": "Reglas y estrategias de transformación para programas funcionales-lógicos Este artículo resume el contenido de una tesis doctoral titulada Reglas y estrategias de transformación para programas funcionales-logic que ha sido defendida recientemente. Estas técnicas se basan en transformaciones de pliegue/desdoblamiento y se pueden utilizar para optimizar programas integrados (funcionales-logicos) para una amplia clase de aplicaciones. Los resultados experimentales muestran que los ejemplos típicos en el campo de la inteligencia artificial son mejorados exitosamente por nuestro sistema de transformación SYNTH. La tesis presenta el primer enfoque de estos métodos para lenguajes declarativos que integran las mejores características de la programación funcional y lógica ",
            "error": []
        },
        "experimental results": {
            "translated_key": [],
            "translated_annotated_text": "Reglas y estrategias de transformación para programas funcionales-lógicos Este artículo resume el contenido de una tesis doctoral titulada Reglas y estrategias de transformación para programas funcionales-logic que ha sido defendida recientemente. Estas técnicas se basan en transformaciones de pliegue/desdoblamiento y se pueden utilizar para optimizar programas integrados (funcionales-logicos) para una amplia clase de aplicaciones. Los resultados experimentales muestran que los ejemplos típicos en el campo de la inteligencia artificial son mejorados exitosamente por nuestro sistema de transformación SYNTH. La tesis presenta el primer enfoque de estos métodos para lenguajes declarativos que integran las mejores características de la programación funcional y lógica ",
            "error": []
        },
        "artificial intelligence": {
            "translated_key": "inteligencia artificial",
            "translated_annotated_text": "Reglas y estrategias de transformación para programas funcionales-lógicos Este artículo resume el contenido de una tesis doctoral titulada Reglas y estrategias de transformación para programas funcionales-logic que ha sido defendida recientemente. Estas técnicas se basan en transformaciones de pliegue/desdoblamiento y se pueden utilizar para optimizar programas integrados (funcionales-logicos) para una amplia clase de aplicaciones. Los resultados experimentales muestran que los ejemplos típicos en el campo de la <br>inteligencia artificial</br> son mejorados exitosamente por nuestro sistema de transformación SYNTH.  La tesis presenta el primer enfoque de estos métodos para lenguajes declarativos que integran las mejores características de la programación funcional y lógica ",
            "error": [
                ""
            ]
        },
        "SYNTH": {
            "translated_key": "SYNTH",
            "translated_annotated_text": "Reglas y estrategias de transformación para programas funcionales-lógicos Este artículo resume el contenido de una tesis doctoral titulada Reglas y estrategias de transformación para programas funcionales-logic que ha sido defendida recientemente. Estas técnicas se basan en transformaciones de pliegue/desdoblamiento y se pueden utilizar para optimizar programas integrados (funcionales-logicos) para una amplia clase de aplicaciones. Los resultados experimentales muestran que los ejemplos típicos en el campo de la inteligencia artificial son mejorados exitosamente por nuestro sistema de transformación <br>SYNTH</br>. La tesis presenta el primer enfoque de estos métodos para lenguajes declarativos que integran las mejores características de la programación funcional y lógica ",
            "error": [
                ""
            ]
        },
        "declarative languages": {
            "translated_key": "lenguajes declarativos",
            "translated_annotated_text": "Reglas y estrategias de transformación para programas funcionales-lógicos Este artículo resume el contenido de una tesis doctoral titulada Reglas y estrategias de transformación para programas funcionales-logic que ha sido defendida recientemente. Estas técnicas se basan en transformaciones de pliegue/desdoblamiento y se pueden utilizar para optimizar programas integrados (funcionales-logicos) para una amplia clase de aplicaciones. Los resultados experimentales muestran que los ejemplos típicos en el campo de la inteligencia artificial son mejorados exitosamente por nuestro sistema de transformación SYNTH. La tesis presenta el primer enfoque de estos métodos para <br>lenguajes declarativos</br> que integran las mejores características de la programación funcional y lógica.  ",
            "error": [
                ""
            ]
        }
    }
}