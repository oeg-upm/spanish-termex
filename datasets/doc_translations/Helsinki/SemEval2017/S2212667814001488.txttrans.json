{"This paper presents general results on the Java source code snippet detection problem. We propose the tool which uses graph and subgraph isomorphism detection. A number of solutions for all of these tasks have been proposed in the literature. However, although that all these solutions are really fast, they compare just the constant static trees. Our solution offers to enter an input sample dynamically with the Scripthon language while preserving an acceptable speed. We used several optimizations to achieve very low number of comparisons during the matching algorithm.": "Este artículo presenta resultados generales sobre el problema de detección de fragmentos de código fuente Java. Proponemos la herramienta que utiliza la detección de isomorfismo gráfico y subgráfico. Se han propuesto varias soluciones para todas estas tareas en la literatura. Sin embargo, aunque todas estas soluciones son realmente rápidas, comparan sólo los árboles estáticos constantes. Nuestra solución ofrece introducir una muestra de entrada dinámicamente con el lenguaje Scripthon, preservando al mismo tiempo una velocidad aceptable. Utilizamos varias optimizaciones para lograr un número muy bajo de comparaciones durante el algoritmo de emparejamiento."}