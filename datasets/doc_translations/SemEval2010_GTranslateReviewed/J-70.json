{
    "id": "J-70",
    "original_text": "Self-interested Automated Mechanism Design and Implications for Optimal Combinatorial Auctions∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT Often, an outcome must be chosen on the basis of the preferences reported by a group of agents. The key difficulty is that the agents may report their preferences insincerely to make the chosen outcome more favorable to themselves. Mechanism design is the art of designing the rules of the game so that the agents are motivated to report their preferences truthfully, and a desirable outcome is chosen. In a recently proposed approach-called automated mechanism design-a mechanism is computed for the preference aggregation setting at hand. This has several advantages, but the downside is that the mechanism design optimization problem needs to be solved anew each time. Unlike the earlier work on automated mechanism design that studied a benevolent designer, in this paper we study automated mechanism design problems where the designer is self-interested. In this case, the center cares only about which outcome is chosen and what payments are made to it. The reason that the agents preferences are relevant is that the center is constrained to making each agent at least as well off as the agent would have been had it not participated in the mechanism. In this setting, we show that designing optimal deterministic mechanisms is NP-complete in two important special cases: when the center is interested only in the payments made to it, and when payments are not possible and the center is interested only in the outcome chosen. We then show how allowing for randomization in the mechanism makes problems in this setting computationally easy. Finally, we show that the payment-maximizing AMD problem is closely related to an interesting variant of the optimal (revenuemaximizing) combinatorial auction design problem, where the bidders have best-only preferences. We show that here, too, designing an optimal deterministic auction is NPcomplete, but designing an optimal randomized auction is easy. Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1. INTRODUCTION In multiagent settings, often an outcome must be chosen on the basis of the preferences reported by a group of agents. Such outcomes could be potential presidents, joint plans, allocations of goods or resources, etc. The preference aggregator generally does not know the agents preferences a priori. Rather, the agents report their preferences to the coordinator. Unfortunately, an agent may have an incentive to misreport its preferences in order to mislead the mechanism into selecting an outcome that is more desirable to the agent than the outcome that would be selected if the agent revealed its preferences truthfully. Such manipulation is undesirable because preference aggregation mechanisms are tailored to aggregate preferences in a socially desirable way, and if the agents reveal their preferences insincerely, a socially undesirable outcome may be chosen. Manipulability is a pervasive problem across preference aggregation mechanisms. A seminal negative result, the Gibbard-Satterthwaite theorem, shows that under any nondictatorial preference aggregation scheme, if there are at least 3 possible outcomes, there are preferences under which an agent is better off reporting untruthfully [10, 23]. (A preference aggregation scheme is called dictatorial if one of the agents dictates the outcome no matter what preferences the other agents report.) What the aggregator would like to do is design a preference aggregation mechanism so that 1) the self-interested agents are motivated to report their preferences truthfully, and 2) the mechanism chooses an outcome that is desirable from the perspective of some objective. This is the classic setting of mechanism design in game theory. In this paper, we study the case where the designer is self-interested, that is, the designer does not directly care about how the out132 come relates to the agents preferences, but is rather concerned with its own agenda for which outcome should be chosen, and with maximizing payments to itself. This is the mechanism design setting most relevant to electronic commerce. In the case where the mechanism designer is interested in maximizing some notion of social welfare, the importance of collecting the agents preferences is clear. It is perhaps less obvious why they should be collected when the designer is self-interested and hence its objective is not directly related to the agents preferences. The reason for this is that often the agents preferences impose limits on how the designer chooses the outcome and payments. The most common such constraint is that of individual rationality (IR), which means that the mechanism cannot make any agent worse off than the agent would have been had it not participated in the mechanism. For instance, in the setting of optimal auction design, the designer (auctioneer) is only concerned with how much revenue is collected, and not per se with how well the allocation of the good (or goods) corresponds to the agents preferences. Nevertheless, the designer cannot force an agent to pay more than its valuation for the bundle of goods allocated to it. Therefore, even a self-interested designer will choose an outcome that makes the agents reasonably well off. On the other hand, the designer will not necessarily choose a social welfare maximizing outcome. For example, if the designer always chooses an outcome that maximizes social welfare with respect to the reported preferences, and forces each agent to pay the difference between the utility it has now and the utility it would have had if it had not participated in the mechanism, it is easy to see that agents may have an incentive to misreport their preferences-and this may actually lead to less revenue being collected. Indeed, one of the counterintuitive results of optimal auction design theory is that sometimes the good is allocated to nobody even when the auctioneer has a reservation price of 0. Classical mechanism design provides some general mechanisms, which, under certain assumptions, satisfy some notion of nonmanipulability and maximize some objective. The upside of these mechanisms is that they do not rely on (even probabilistic) information about the agents preferences (e.g., the Vickrey-Clarke-Groves (VCG) mechanism [24, 4, 11]), or they can be easily applied to any probability distribution over the preferences (e.g., the dAGVA mechanism [8, 2], the Myerson auction [18], and the Maskin-Riley multi-unit auction [17]). However, the general mechanisms also have significant downsides: • The most famous and most broadly applicable general mechanisms, VCG and dAGVA, only maximize social welfare. If the designer is self-interested, as is the case in many electronic commerce settings, these mechanisms do not maximize the designers objective. • The general mechanisms that do focus on a selfinterested designer are only applicable in very restricted settings-such as Myersons expected revenue maximizing auction for selling a single item, and Maskin and Rileys expected revenue maximizing auction for selling multiple identical units of an item. • Even in the restricted settings in which these mechanisms apply, the mechanisms only allow for payment maximization. In practice, the designer may also be interested in the outcome per se. For example, an auctioneer may care which bidder receives the item. • It is often assumed that side payments can be used to tailor the agents incentives, but this is not always practical. For example, in barter-based electronic marketplaces-such as Recipco, firstbarter.com, BarterOne, and Intagio-side payments are not allowed. Furthermore, among software agents, it might be more desirable to construct mechanisms that do not rely on the ability to make payments, because many software agents do not have the infrastructure to make payments. In contrast, we follow a recent approach where the mechanism is designed automatically for the specific problem at hand. This approach addresses all of the downsides listed above. We formulate the mechanism design problem as an optimization problem. The input is characterized by the number of agents, the agents possible types (preferences), and the aggregators prior distributions over the agents types. The output is a nonmanipulable mechanism that is optimal with respect to some objective. This approach is called automated mechanism design. The automated mechanism design approach has four advantages over the classical approach of designing general mechanisms. First, it can be used even in settings that do not satisfy the assumptions of the classical mechanisms (such as availability of side payments or that the objective is social welfare). Second, it may allow one to circumvent impossibility results (such as the Gibbard-Satterthwaite theorem) which state that there is no mechanism that is desirable across all preferences. When the mechanism is designed for the setting at hand, it does not matter that it would not work more generally. Third, it may yield better mechanisms (in terms of stronger nonmanipulability guarantees and/or better outcomes) than classical mechanisms because the mechanism capitalizes on the particulars of the setting (the probabilistic information that the designer has about the agents types). Given the vast amount of information that parties have about each other today, this approach is likely to lead to tremendous savings over classical mechanisms, which largely ignore that information. For example, imagine a company automatically creating its procurement mechanism based on statistical knowledge about its suppliers, rather than using a classical descending procurement auction. Fourth, the burden of design is shifted from humans to a machine. However, automated mechanism design requires the mechanism design optimization problem to be solved anew for each setting. Hence its computational complexity becomes a key issue. Previous research has studied this question for benevolent designers-that wish to maximize, for example, social welfare [5, 6]. In this paper we study the computational complexity of automated mechanism design in the case of a self-interested designer. This is an important setting for automated mechanism design due to the shortage of general mechanisms in this area, and the fact that in most e-commerce settings the designer is self-interested. We also show that this problem is closely related to a particular optimal (revenue-maximizing) combinatorial auction design problem. 133 The rest of this paper is organized as follows. In Section 2, we justify the focus on nonmanipulable mechanisms. In Section 3, we define the problem we study. In Section 4, we show that designing an optimal deterministic mechanism is NP-complete even when the designer only cares about the payments made to it. In Section 5, we show that designing an optimal deterministic mechanism is also NP-complete when payments are not possible and the designer is only interested in the outcome chosen. In Section 6, we show that an optimal randomized mechanism can be designed in polynomial time even in the general case. Finally, in Section 7, we show that for designing optimal combinatorial auctions under best-only preferences, our results on AMD imply that this problem is NP-complete for deterministic auctions, but easy for randomized auctions. 2. JUSTIFYING THE FOCUS ON NONMANIPULABLE MECHANISMS Before we define the computational problem of automated mechanism design, we should justify our focus on nonmanipulable mechanisms. After all, it is not immediately obvious that there are no manipulable mechanisms that, even when agents report their types strategically and hence sometimes untruthfully, still reach better outcomes (according to whatever objective we use) than any nonmanipulable mechanism. This does, however, turn out to be the case: given any mechanism, we can construct a nonmanipulable mechanism whose performance is identical, as follows. We build an interface layer between the agents and the original mechanism. The agents report their preferences (or types) to the interface layer; subsequently, the interface layer inputs into the original mechanism the types that the agents would have strategically reported to the original mechanism, if their types were as declared to the interface layer. The resulting outcome is the outcome of the new mechanism. Since the interface layer acts strategically on each agents behalf, there is never an incentive to report falsely to the interface layer; and hence, the types reported by the interface layer are the strategic types that would have been reported without the interface layer, so the results are exactly as they would have been with the original mechanism. This argument is known in the mechanism design literature as the revelation principle [16]. (There are computational difficulties with applying the revelation principle in large combinatorial outcome and type spaces [7, 22]. However, because here we focus on flatly represented outcome and type spaces, this is not a concern here.) Given this, we can focus on truthful mechanisms in the rest of the paper. 3. DEFINITIONS We now formalize the automated mechanism design setting. Definition 1. In an automated mechanism design setting, we are given: • a finite set of outcomes O; • a finite set of N agents; • for each agent i, 1. a finite set of types Θi, 2. a probability distribution γi over Θi (in the case of correlated types, there is a single joint distribution γ over Θ1 × . . . × ΘN ), and 3. a utility function ui : Θi × O → R; 1 • An objective function whose expectation the designer wishes to maximize. There are many possible objective functions the designer might have, for example, social welfare (where the designer seeks to maximize the sum of the agents utilities), or the minimum utility of any agent (where the designer seeks to maximize the worst utility had by any agent). In both of these cases, the designer is benevolent, because the designer, in some sense, is pursuing the agents collective happiness. However, in this paper, we focus on the case of a self-interested designer. A self-interested designer cares only about the outcome chosen (that is, the designer does not care how the outcome relates to the agents preferences, but rather has a fixed preference over the outcomes), and about the net payments made by the agents, which flow to the designer. Definition 2. A self-interested designer has an objective function given by g(o) + N i=1 πi, where g : O → R indicates the designers own preference over the outcomes, and πi is the payment made by agent i. In the case where g = 0 everywhere, the designer is said to be payment maximizing. In the case where payments are not possible, g constitutes the objective function by itself. We now define the kinds of mechanisms under study. By the revelation principle, we can restrict attention to truthful, direct revelation mechanisms, where agents report their types directly and never have an incentive to misreport them. Definition 3. We consider the following kinds of mechanism: • A deterministic mechanism without payments consists of an outcome selection function o : Θ1 × Θ2 × . . . × ΘN → O. • A randomized mechanism without payments consists of a distribution selection function p : Θ1 × Θ2 × . . . × ΘN → P(O), where P(O) is the set of probability distributions over O. • A deterministic mechanism with payments consists of an outcome selection function o : Θ1 ×Θ2 ×. . .×ΘN → O and for each agent i, a payment selection function πi : Θ1 × Θ2 × . . . × ΘN → R, where πi(θ1, . . . , θN ) gives the payment made by agent i when the reported types are θ1, . . . , θN . 1 Though this follows standard game theory notation [16], the fact that the agent has both a utility function and a type is perhaps confusing. The types encode the various possible preferences that the agent may turn out to have, and the agents type is not known to the aggregator. The utility function is common knowledge, but because the agents type is a parameter in the agents utility function, the aggregator cannot know what the agents utility is without knowing the agents type. 134 • A randomized mechanism with payments consists of a distribution selection function p : Θ1 × Θ2 × . . . × ΘN → P(O), and for each agent i, a payment selection function πi : Θ1 × Θ2 × . . . × ΘN → R.2 There are two types of constraint on the designer in building the mechanism. 3.1 Individual rationality (IR) constraints The first type of constraint is the following. The utility of each agent has to be at least as great as the agents fallback utility, that is, the utility that the agent would receive if it did not participate in the mechanism. Otherwise that agent would not participate in the mechanism-and no agents participation can ever hurt the mechanism designers objective because at worst, the mechanism can ignore an agent by pretending the agent is not there. (Furthermore, if no such constraint applied, the designer could simply make the agents pay an infinite amount.) This type of constraint is called an IR (individual rationality) constraint. There are three different possible IR constraints: ex ante, ex interim, and ex post, depending on what the agent knows about its own type and the others types when deciding whether to participate in the mechanism. Ex ante IR means that the agent would participate if it knew nothing at all (not even its own type). We will not study this concept in this paper. Ex interim IR means that the agent would always participate if it knew only its own type, but not those of the others. Ex post IR means that the agent would always participate even if it knew everybodys type. We will define the latter two notions of IR formally. First, we need to formalize the concept of the fallback outcome. We assume that each agents fallback utility is zero for each one of its types. This is without loss of generality because we can add a constant term to an agents utility function (for a given type), without affecting the decision-making behavior of that expected utility maximizing agent [16]. Definition 4. In any automated mechanism design setting with an IR constraint, there is a fallback outcome o0 ∈ O where, for any agent i and any type θi ∈ Θi, we have ui(θi, o0) = 0. (Additionally, in the case of a self-interested designer, g(o0) = 0.) We can now to define the notions of individual rationality. Definition 5. Individual rationality (IR) is defined by: • A deterministic mechanism is ex interim IR if for any agent i, and any type θi ∈ Θi, we have E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, .., θN ))−πi(θ1, .., θN )] ≥ 0. A randomized mechanism is ex interim IR if for any agent i, and any type θi ∈ Θi, we have E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,..,θn [ui(θi, o)−πi(θ1, .., θN )] ≥ 0. • A deterministic mechanism is ex post IR if for any agent i, and any type vector (θ1, . . . , θN ) ∈ Θ1 × . . . × ΘN , we have ui(θi, o(θ1, . . . , θN )) − πi(θ1, . . . , θN ) ≥ 0. 2 We do not randomize over payments because as long as the agents and the designer are risk neutral with respect to payments, that is, their utility is linear in payments, there is no reason to randomize over payments. A randomized mechanism is ex post IR if for any agent i, and any type vector (θ1, . . . , θN ) ∈ Θ1 × . . . × ΘN , we have Eo|θ1,..,θn [ui(θi, o) − πi(θ1, .., θN )] ≥ 0. The terms involving payments can be left out in the case where payments are not possible. 3.2 Incentive compatibility (IC) constraints The second type of constraint says that the agents should never have an incentive to misreport their type (as justified above by the revelation principle). For this type of constraint, the two most common variants (or solution concepts) are implementation in dominant strategies, and implementation in Bayes-Nash equilibrium. Definition 6. Given an automated mechanism design setting, a mechanism is said to implement its outcome and payment functions in dominant strategies if truthtelling is always optimal even when the types reported by the other agents are already known. Formally, for any agent i, any type vector (θ1, . . . , θi, . . . , θN ) ∈ Θ1 × . . . × Θi × . . . × ΘN , and any alternative type report ˆθi ∈ Θi, in the case of deterministic mechanisms we have ui(θi, o(θ1, . . . , θi, . . . , θN )) − πi(θ1, . . . , θi, . . . , θN ) ≥ ui(θi, o(θ1, . . . , ˆθi, . . . , θN )) − πi(θ1, . . . , ˆθi, . . . , θN ). In the case of randomized mechanisms we have Eo|θ1,..,θi,..,θn [ui(θi, o) − πi(θ1, . . . , θi, . . . , θN )] ≥ Eo|θ1,.., ˆθi,..,θn [ui(θi, o) − πi(θ1, . . . , ˆθi, . . . , θN )]. The terms involving payments can be left out in the case where payments are not possible. Thus, in dominant strategies implementation, truthtelling is optimal regardless of what the other agents report. If it is optimal only given that the other agents are truthful, and given that one does not know the other agents types, we have implementation in Bayes-Nash equilibrium. Definition 7. Given an automated mechanism design setting, a mechanism is said to implement its outcome and payment functions in Bayes-Nash equilibrium if truthtelling is always optimal to an agent when that agent does not yet know anything about the other agents types, and the other agents are telling the truth. Formally, for any agent i, any type θi ∈ Θi, and any alternative type report ˆθi ∈ Θi, in the case of deterministic mechanisms we have E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, . . . , θi, . . . , θN ))− πi(θ1, . . . , θi, . . . , θN )] ≥ E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, . . . , ˆθi, . . . , θN ))− πi(θ1, . . . , ˆθi, . . . , θN )]. In the case of randomized mechanisms we have E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,..,θi,..,θn [ui(θi, o)− πi(θ1, . . . , θi, . . . , θN )] ≥ E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,.., ˆθi,..,θn [ui(θi, o)− πi(θ1, . . . , ˆθi, . . . , θN )]. The terms involving payments can be left out in the case where payments are not possible. 135 3.3 Automated mechanism design We can now define the computational problem we study. Definition 8. (AUTOMATED-MECHANISM-DESIGN (AMD)) We are given: • an automated mechanism design setting, • an IR notion (ex interim, ex post, or none), • a solution concept (dominant strategies or Bayes-Nash), • whether payments are possible, • whether randomization is possible, • (in the decision variant of the problem) a target value G. We are asked whether there exists a mechanism of the specified kind (in terms of payments and randomization) that satisfies both the IR notion and the solution concept, and gives an expected value of at least G for the objective. An interesting special case is the setting where there is only one agent. In this case, the reporting agent always knows everything there is to know about the other agents types-because there are no other agents. Since ex post and ex interim IR only differ on what an agent is assumed to know about other agents types, the two IR concepts coincide here. Also, because implementation in dominant strategies and implementation in Bayes-Nash equilibrium only differ on what an agent is assumed to know about other agents types, the two solution concepts coincide here. This observation will prove to be a useful tool in proving hardness results: if we prove computational hardness in the singleagent setting, this immediately implies hardness for both IR concepts, for both solution concepts, for any number of agents. 4. PAYMENT-MAXIMIZINGDETERMINISTIC AMD IS HARD In this section we demonstrate that it is NP-complete to design a deterministic mechanism that maximizes the expected sum of the payments collected from the agents. We show that this problem is hard even in the single-agent setting, thereby immediately showing it hard for both IR concepts, for both solution concepts. To demonstrate NPhardness, we reduce from the MINSAT problem. Definition 9 (MINSAT). We are given a formula φ in conjunctive normal form, represented by a set of Boolean variables V and a set of clauses C, and an integer K (K < |C|). We are asked whether there exists an assignment to the variables in V such that at most K clauses in φ are satisfied. MINSAT was recently shown to be NP-complete [14]. We can now present our result. Theorem 1. Payment-maximizing deterministic AMD is NP-complete, even for a single agent, even with a uniform distribution over types. Proof. It is easy to show that the problem is in NP. To show NP-hardness, we reduce an arbitrary MINSAT instance to the following single-agent payment-maximizing deterministic AMD instance. Let the agents type set be Θ = {θc : c ∈ C} ∪ {θv : v ∈ V }, where C is the set of clauses in the MINSAT instance, and V is the set of variables. Let the probability distribution over these types be uniform. Let the outcome set be O = {o0} ∪ {oc : c ∈ C} ∪ {ol : l ∈ L}, where L is the set of literals, that is, L = {+v : v ∈ V } ∪ {−v : v ∈ V }. Let the notation v(l) = v denote that v is the variable corresponding to the literal l, that is, l ∈ {+v, −v}. Let l ∈ c denote that the literal l occurs in clause c. Then, let the agents utility function be given by u(θc, ol) = |Θ| + 1 for all l ∈ L with l ∈ c; u(θc, ol) = 0 for all l ∈ L with l /∈ c; u(θc, oc) = |Θ| + 1; u(θc, oc ) = 0 for all c ∈ C with c = c ; u(θv, ol) = |Θ| for all l ∈ L with v(l) = v; u(θv, ol) = 0 for all l ∈ L with v(l) = v; u(θv, oc) = 0 for all c ∈ C. The goal of the AMD instance is G = |Θ| + |C|−K |Θ| , where K is the goal of the MINSAT instance. We show the instances are equivalent. First, suppose there is a solution to the MINSAT instance. Let the assignment of truth values to the variables in this solution be given by the function f : V → L (where v(f(v)) = v for all v ∈ V ). Then, for every v ∈ V , let o(θv) = of(v) and π(θv) = |Θ|. For every c ∈ C, let o(θc) = oc; let π(θc) = |Θ| + 1 if c is not satisfied in the MINSAT solution, and π(θc) = |Θ| if c is satisfied. It is straightforward to check that the IR constraint is satisfied. We now check that the agent has no incentive to misreport. If the agents type is some θv, then any other report will give it an outcome that is no better, for a payment that is no less, so it has no incentive to misreport. If the agents type is some θc where c is a satisfied clause, again, any other report will give it an outcome that is no better, for a payment that is no less, so it has no incentive to misreport. The final case to check is where the agents type is some θc where c is an unsatisfied clause. In this case, we observe that for none of the types, reporting it leads to an outcome ol for a literal l ∈ c, precisely because the clause is not satisfied in the MINSAT instance. Because also, no type besides θc leads to the outcome oc, reporting any other type will give an outcome with utility 0, while still forcing a payment of at least |Θ| from the agent. Clearly the agent is better off reporting truthfully, for a total utility of 0. This establishes that the agent never has an incentive to misreport. Finally, we show that the goal is reached. If s is the number of satisfied clauses in the MINSAT solution (so that s ≤ K), the expected payment from this mechanism is |V ||Θ|+s|Θ|+(|C|−s)(|Θ|+1) |Θ| ≥ |V ||Θ|+K|Θ|+(|C|−K)(|Θ|+1) |Θ| = |Θ| + |C|−K |Θ| = G. So there is a solution to the AMD instance. Now suppose there is a solution to the AMD instance, given by an outcome function o and a payment function π. First, suppose there is some v ∈ V such that o(θv) /∈ {o+v, o−v}. Then the utility that the agent derives from the given outcome for this type is 0, and hence, by IR, no payment can be extracted from the agent for this type. Because, again by IR, the maximum payment that can be extracted for any other type is |Θ| + 1, it follows that the maximum expected payment that could be obtained is at most (|Θ|−1)(|Θ|+1) |Θ| < |Θ| < G, contradicting that this is a solution to the AMD instance. It follows that in the solution to the AMD instance, for every v ∈ V , o(θv) ∈ {o+v, o−v}. 136 We can interpret this as an assignment of truth values to the variables: v is set to true if o(θv) = o+v, and to false if o(θv) = o−v. We claim this assignment is a solution to the MINSAT instance. By the IR constraint, the maximum payment we can extract from any type θv is |Θ|. Because there can be no incentives for the agent to report falsely, for any clause c satisfied by the given assignment, the maximum payment we can extract for the corresponding type θc is |Θ|. (For if we extracted more from this type, the agents utility in this case would be less than 1; and if v is the variable satisfying c in the assignment, so that o(θv) = ol where l occurs in c, then the agent would be better off reporting θv instead of the truthful report θc, to get an outcome worth |Θ|+1 to it while having to pay at most |Θ|.) Finally, for any unsatisfied clause c, by the IR constraint, the maximum payment we can extract for the corresponding type θc is |Θ| + 1. It follows that the expected payment from our mechanism is at most V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ , where s is the number of satisfied clauses. Because our mechanism achieves the goal, it follows that V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ ≥ G, which by simple algebraic manipulations is equivalent to s ≤ K. So there is a solution to the MINSAT instance. Because payment-maximizing AMD is just the special case of AMD for a self-interested designer where the designer has no preferences over the outcome chosen, this immediately implies hardness for the general case of AMD for a selfinterested designer where payments are possible. However, it does not yet imply hardness for the special case where payments are not possible. We will prove hardness in this case in the next section. 5. SELF-INTERESTED DETERMINISTIC AMD WITHOUT PAYMENTS IS HARD In this section we demonstrate that it is NP-complete to design a deterministic mechanism that maximizes the expectation of the designers objective when payments are not possible. We show that this problem is hard even in the single-agent setting, thereby immediately showing it hard for both IR concepts, for both solution concepts. Theorem 2. Without payments, deterministic AMD for a self-interested designer is NP-complete, even for a single agent, even with a uniform distribution over types. Proof. It is easy to show that the problem is in NP. To show NP-hardness, we reduce an arbitrary MINSAT instance to the following single-agent self-interested deterministic AMD without payments instance. Let the agents type set be Θ = {θc : c ∈ C} ∪ {θv : v ∈ V }, where C is the set of clauses in the MINSAT instance, and V is the set of variables. Let the probability distribution over these types be uniform. Let the outcome set be O = {o0} ∪ {oc : c ∈ C}∪{ol : l ∈ L}∪{o∗ }, where L is the set of literals, that is, L = {+v : v ∈ V } ∪ {−v : v ∈ V }. Let the notation v(l) = v denote that v is the variable corresponding to the literal l, that is, l ∈ {+v, −v}. Let l ∈ c denote that the literal l occurs in clause c. Then, let the agents utility function be given by u(θc, ol) = 2 for all l ∈ L with l ∈ c; u(θc, ol) = −1 for all l ∈ L with l /∈ c; u(θc, oc) = 2; u(θc, oc ) = −1 for all c ∈ C with c = c ; u(θc, o∗ ) = 1; u(θv, ol) = 1 for all l ∈ L with v(l) = v; u(θv, ol) = −1 for all l ∈ L with v(l) = v; u(θv, oc) = −1 for all c ∈ C; u(θv, o∗ ) = −1. Let the designers objective function be given by g(o∗ ) = |Θ|+1; g(ol) = |Θ| for all l ∈ L; g(oc) = |Θ| for all c ∈ C. The goal of the AMD instance is G = |Θ| + |C|−K |Θ| , where K is the goal of the MINSAT instance. We show the instances are equivalent. First, suppose there is a solution to the MINSAT instance. Let the assignment of truth values to the variables in this solution be given by the function f : V → L (where v(f(v)) = v for all v ∈ V ). Then, for every v ∈ V , let o(θv) = of(v). For every c ∈ C that is satisfied in the MINSAT solution, let o(θc) = oc; for every unsatisfied c ∈ C, let o(θc) = o∗ . It is straightforward to check that the IR constraint is satisfied. We now check that the agent has no incentive to misreport. If the agents type is some θv, it is getting the maximum utility for that type, so it has no incentive to misreport. If the agents type is some θc where c is a satisfied clause, again, it is getting the maximum utility for that type, so it has no incentive to misreport. The final case to check is where the agents type is some θc where c is an unsatisfied clause. In this case, we observe that for none of the types, reporting it leads to an outcome ol for a literal l ∈ c, precisely because the clause is not satisfied in the MINSAT instance. Because also, no type leads to the outcome oc, there is no outcome that the mechanism ever selects that would give the agent utility greater than 1 for type θc, and hence the agent has no incentive to report falsely. This establishes that the agent never has an incentive to misreport. Finally, we show that the goal is reached. If s is the number of satisfied clauses in the MINSAT solution (so that s ≤ K), then the expected value of the designers objective function is |V ||Θ|+s|Θ|+(|C|−s)(|Θ|+1) |Θ| ≥ |V ||Θ|+K|Θ|+(|C|−K)(|Θ|+1) |Θ| = |Θ| + |C|−K |Θ| = G. So there is a solution to the AMD instance. Now suppose there is a solution to the AMD instance, given by an outcome function o. First, suppose there is some v ∈ V such that o(θv) /∈ {o+v, o−v}. The only other outcome that the mechanism is allowed to choose under the IR constraint is o0. This has an objective value of 0, and because the highest value the objective function ever takes is |Θ| + 1, it follows that the maximum expected value of the objective function that could be obtained is at most (|Θ|−1)(|Θ|+1) |Θ| < |Θ| < G, contradicting that this is a solution to the AMD instance. It follows that in the solution to the AMD instance, for every v ∈ V , o(θv) ∈ {o+v, o−v}. We can interpret this as an assignment of truth values to the variables: v is set to true if o(θv) = o+v, and to false if o(θv) = o−v. We claim this assignment is a solution to the MINSAT instance. By the above, for any type θv, the value of the objective function in this mechanism will be |Θ|. For any clause c satisfied by the given assignment, the value of the objective function in the case where the agent reports type θc will be at most |Θ|. (This is because we cannot choose the outcome o∗ for such a type, as in this case the agent would have an incentive to report θv instead, where v is the variable satisfying c in the assignment (so that o(θv) = ol where l occurs in c).) Finally, for any unsatisfied clause c, the maximum value the objective function can take in the case where the agent reports type θc is |Θ| + 1, simply because this is the largest value the function ever takes. It follows that the expected value of the objective function for our mechanism is at most V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ , where s is the number of satisfied 137 clauses. Because our mechanism achieves the goal, it follows that V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ ≥ G, which by simple algebraic manipulations is equivalent to s ≤ K. So there is a solution to the MINSAT instance. Both of our hardness results relied on the constraint that the mechanism should be deterministic. In the next section, we show that the hardness of design disappears when we allow for randomization in the mechanism. 6. RANDOMIZED AMD FOR A SELFINTERESTED DESIGNER IS EASY We now show how allowing for randomization over the outcomes makes the problem of self-interested AMD tractable through linear programming, for any constant number of agents. Theorem 3. Self-interested randomized AMD with a constant number of agents is solvable in polynomial time by linear programming, both with and without payments, both for ex post and ex interim IR, and both for implementation in dominant strategies and for implementation in Bayes-Nash equilibrium-even if the types are correlated. Proof. Because linear programs can be solved in polynomial time [13], all we need to show is that the number of variables and equations in our program is polynomial for any constant number of agents-that is, exponential only in N. Throughout, for purposes of determining the size of the linear program, let T = maxi{|Θi|}. The variables of our linear program will be the probabilities (p(θ1, θ2, . . . , θN ))(o) (at most TN |O| variables) and the payments πi(θ1, θ2, . . . , θN ) (at most NTN variables). (We show the linear program for the case where payments are possible; the case without payments is easily obtained from this by simply omitting all the payment variables in the program, or by adding additional constraints forcing the payments to be 0.) First, we show the IR constraints. For ex post IR, we add the following (at most NTN ) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, and for every (θ1, θ2, . . . , θN ) ∈ Θ1 × Θ2 × . . . × ΘN , we add ( o∈O (p(θ1, θ2, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , θN ) ≥ 0. For ex interim IR, we add the following (at most NT) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, for every θi ∈ Θi, we add θ1,... ,θN γ(θ1, . . . , θN |θi)(( o∈O (p(θ1, θ2, . . . , θN ))(o)u(θi, o))− πi(θ1, θ2, . . . , θN )) ≥ 0. Now, we show the solution concept constraints. For implementation in dominant strategies, we add the following (at most NTN+1 ) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, for every (θ1, θ2, . . . , θi, . . . , θN ) ∈ Θ1 × Θ2 × . . . × ΘN , and for every alternative type report ˆθi ∈ Θi, we add the constraint ( o∈O (p(θ1, θ2, . . . , θi, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , θi, . . . , θN ) ≥ ( o∈O (p(θ1, θ2, . . . , ˆθi, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , ˆθi, . . . , θN ). Finally, for implementation in Bayes-Nash equilibrium, we add the following (at most NT2 ) constraints to the LP: • For every i ∈ {1, 2, ..., N}, for every θi ∈ Θi, and for every alternative type report ˆθi ∈ Θi, we add the constraint θ1,...,θN γ(θ1, ..., θN |θi)(( o∈O (p(θ1, θ2, ..., θi, ..., θN ))(o)u(θi, o)) − πi(θ1, θ2, ..., θi, ..., θN )) ≥ θ1,...,θN γ(θ1, ..., θN |θi)(( o∈O (p(θ1, θ2, ..., ˆθi, ..., θN ))(o)u(θi, o)) − πi(θ1, θ2, ..., ˆθi, ..., θN )). All that is left to do is to give the expression the designer is seeking to maximize, which is: • θ1,...,θN γ(θ1, ..., θN )(( o∈O (p(θ1, θ2, ..., θi, ..., θN ))(o)g(o)) + N i=1 πi(θ1, θ2, ..., θN )). As we indicated, the number of variables and constraints is exponential only in N, and hence the linear program is of polynomial size for constant numbers of agents. Thus the problem is solvable in polynomial time. 7. IMPLICATIONS FOR AN OPTIMAL COMBINATORIAL AUCTION DESIGN PROBLEM In this section, we will demonstrate some interesting consequences of the problem of automated mechanism design for a self-interested designer on designing optimal combinatorial auctions. Consider a combinatorial auction with a set S of items for sale. For any bundle B ⊆ S, let ui(θi, B) be bidder is utility for receiving bundle B when the bidders type is θi. The optimal auction design problem is to specify the rules of the auction so as to maximize expected revenue to the auctioneer. (By the revelation principle, without loss of generality, we can assume the auction is truthful.) The optimal auction design problem is solved for the case of a single item by the famous Myerson auction [18]. However, designing optimal auctions in combinatorial auctions is a recognized open research problem [3, 25]. The problem is open even if there are only two items for sale. (The twoitem case with a very special form of complementarity and no substitutability has been solved recently [1].) Suppose we have free disposal-items can be thrown away at no cost. Also, suppose that the bidders preferences have the following structure: whenever a bidder receives a bundle of items, the bidders utility for that bundle is determined by the best item in the bundle only. (We emphasize that 138 which item is the best is allowed to depend on the bidders type.) Definition 10. Bidder i is said to have best-only preferences over bundles of items if there exists a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s). We make the following useful observation in this setting: there is no sense in awarding a bidder more than one item. The reason is that if the bidder is reporting truthfully, taking all but the highest valued item away from the bidder will not hurt the bidder; and, by free disposal, doing so can only reduce the incentive for this bidder to falsely report this type, when the bidder actually has another type. We now show that the problem of designing a deterministic optimal auction here is NP-complete, by a reduction from the payment maximizing AMD problem! Theorem 4. Given an optimal combinatorial auction design problem under best-only preferences (given by a set of items S and for each bidder i, a finite type space Θi and a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s)), designing the optimal deterministic auction is NP-complete, even for a single bidder with a uniform distribution over types. Proof. The problem is in NP because we can nondeterministically generate an allocation rule, and then set the payments using linear programming. To show NP-hardness, we reduce an arbitrary paymentmaximizing deterministic AMD instance, with a single agent and a uniform distribution over types, to the following optimal combinatorial auction design problem instance with a single bidder with best-only preferences. For every outcome o ∈ O in the AMD instance (besides the outcome o0), let there be one item so ∈ S. Let the type space be the same, and let v(θi, so) = ui(θi, o) (where u is as specified in the AMD instance). Let the expected revenue target value be the same in both instances. We show the instances are equivalent. First suppose there exists a solution to the AMD instance, given by an outcome function and a payment function. Then, if the AMD solution chooses outcome o for a type, in the optimal auction solution, allocate {so} to the bidder for this type. (Unless o = o0, in which case we allocate {} to the bidder.) Let the payment functions be the same in both instances. Then, the utility that an agent receives for reporting a type (given the true type) in either solution is the same, so we have incentive compatibility in the optimal auction solution. Moreover, because the type distribution and the payment function are the same, the expected revenue to the auctioneer/designer is the same. It follows that there exists a solution to the optimal auction design instance. Now suppose there exists a solution to the optimal auction design instance. By the at-most-one-item observation, we can assume without loss of generality that the solution never allocates more than one item. Then, if the optimal auction solution allocates item so to the bidder for a type, in the AMD solution, let the mechanism choose outcome o for that type. If the optimal auction solution allocates nothing to the bidder for a type, in the AMD solution, let the mechanism choose outcome o0 for that type. Let the payment functions be the same. Then, the utility that an agent receives for reporting a type (given the true type) in either solution is the same, so we have incentive compatibility in the AMD solution. Moreover, because the type distribution and the payment function are the same, the expected revenue to the designer/auctioneer is the same. It follows that there exists a solution to the AMD instance. Fortunately, we can also carry through the easiness result for randomized mechanisms to this combinatorial auction setting-giving us one of the few known polynomial-time algorithms for an optimal combinatorial auction design problem. Theorem 5. Given an optimal combinatorial auction design problem under best-only preferences (given by a set of items S and for each bidder i, a finite type space Θi and a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s)), if the number of bidders is a constant k, then the optimal randomized auction can be designed in polynomial time. (For any IC and IR constraints.) Proof. By the at-most-one-item observation, we can without loss of generality restrict ourselves to allocations where each bidder receives at most one item. There are fewer than (|S| + 1)k such allocations-that is, a polynomial number of allocations. Because we can list the outcomes explicitly, we can simply solve this as a payment-maximizing AMD instance, with linear programming. 8. RELATED RESEARCH ON COMPLEXITY IN MECHANISM DESIGN There has been considerable recent interest in mechanism design in computer science. Some of it has focused on issues of computational complexity, but most of that work has strived toward designing mechanisms that are easy to execute (e.g. [20, 15, 19, 9, 12]), rather than studying the complexity of designing the mechanism. The closest piece of earlier work studied the complexity of automated mechanism design by a benevolent designer [5, 6]. Roughgarden has studied the complexity of designing a good network topology for agents that selfishly choose the links they use [21]. This is related to mechanism design, but differs significantly in that the designer only has restricted control over the rules of the game because there is no party that can impose the outcome (or side payments). Also, there is no explicit reporting of preferences. 9. CONCLUSIONS AND FUTURE RESEARCH Often, an outcome must be chosen on the basis of the preferences reported by a group of agents. The key difficulty is that the agents may report their preferences insincerely to make the chosen outcome more favorable to themselves. Mechanism design is the art of designing the rules of the game so that the agents are motivated to report their preferences truthfully, and a desirable outcome is chosen. In a recently emerging approach-called automated mechanism design-a mechanism is computed for the specific preference aggregation setting at hand. This has several advantages, 139 but the downside is that the mechanism design optimization problem needs to be solved anew each time. Unlike earlier work on automated mechanism design that studied a benevolent designer, in this paper we studied automated mechanism design problems where the designer is self-interesteda setting much more relevant for electronic commerce. In this setting, the center cares only about which outcome is chosen and what payments are made to it. The reason that the agents preferences are relevant is that the center is constrained to making each agent at least as well off as the agent would have been had it not participated in the mechanism. In this setting, we showed that designing an optimal deterministic mechanism is NP-complete in two important special cases: when the center is interested only in the payments made to it, and when payments are not possible and the center is interested only in the outcome chosen. These hardness results imply hardness in all more general automated mechanism design settings with a self-interested designer. The hardness results apply whether the individual rationality (participation) constraints are applied ex interim or ex post, and whether the solution concept is dominant strategies implementation or Bayes-Nash equilibrium implementation. We then showed that allowing randomization in the mechanism makes the design problem in all these settings computationally easy. Finally, we showed that the paymentmaximizing AMD problem is closely related to an interesting variant of the optimal (revenue-maximizing) combinatorial auction design problem, where the bidders have best-only preferences. We showed that here, too, designing an optimal deterministic mechanism is NP-complete even with one agent, but designing an optimal randomized mechanism is easy. Future research includes studying automated mechanism design with a self-interested designer in more restricted settings such as auctions (where the designers objective may include preferences about which bidder should receive the good-as well as payments). We also want to study the complexity of automated mechanism design in settings where the outcome and type spaces have special structure so they can be represented more concisely. Finally, we plan to assemble a data set of real-world mechanism design problems-both historical and current-and apply automated mechanism design to those problems. 10. REFERENCES [1] M. Armstrong. Optimal multi-object auctions. Review of Economic Studies, 67:455-481, 2000. [2] K. Arrow. The property rights doctrine and demand revelation under incomplete information. In M. Boskin, editor, Economics and human welfare. New York Academic Press, 1979. [3] C. Avery and T. Hendershott. Bundling and optimal auctions of multiple products. Review of Economic Studies, 67:483-497, 2000. [4] E. H. Clarke. Multipart pricing of public goods. Public Choice, 11:17-33, 1971. [5] V. Conitzer and T. Sandholm. Complexity of mechanism design. In Proceedings of the 18th Annual Conference on Uncertainty in Artificial Intelligence (UAI-02), pages 103-110, Edmonton, Canada, 2002. [6] V. Conitzer and T. Sandholm. Automated mechanism design: Complexity results stemming from the single-agent setting. In Proceedings of the 5th International Conference on Electronic Commerce (ICEC-03), pages 17-24, Pittsburgh, PA, USA, 2003. [7] V. Conitzer and T. Sandholm. Computational criticisms of the revelation principle. In Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), New York, NY, 2004. Short paper. Full-length version appeared in the AAMAS-03 workshop on Agent-Mediated Electronic Commerce (AMEC). [8] C. dAspremont and L. A. G´erard-Varet. Incentives and incomplete information. Journal of Public Economics, 11:25-45, 1979. [9] J. Feigenbaum, C. Papadimitriou, and S. Shenker. Sharing the cost of muliticast transmissions. Journal of Computer and System Sciences, 63:21-41, 2001. Early version in Proceedings of the Annual ACM Symposium on Theory of Computing (STOC), 2000. [10] A. Gibbard. Manipulation of voting schemes. Econometrica, 41:587-602, 1973. [11] T. Groves. Incentives in teams. Econometrica, 41:617-631, 1973. [12] J. Hershberger and S. Suri. Vickrey prices and shortest paths: What is an edge worth? In Proceedings of the Annual Symposium on Foundations of Computer Science (FOCS), 2001. [13] L. Khachiyan. A polynomial algorithm in linear programming. Soviet Math. Doklady, 20:191-194, 1979. [14] R. Kohli, R. Krishnamurthi, and P. Mirchandani. The minimum satisfiability problem. SIAM Journal of Discrete Mathematics, 7(2):275-283, 1994. [15] D. Lehmann, L. I. OCallaghan, and Y. Shoham. Truth revelation in rapid, approximately efficient combinatorial auctions. Journal of the ACM, 49(5):577-602, 2002. Early version appeared in Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), 1999. [16] A. Mas-Colell, M. Whinston, and J. R. Green. Microeconomic Theory. Oxford University Press, 1995. [17] E. S. Maskin and J. Riley. Optimal multi-unit auctions. In F. Hahn, editor, The Economics of Missing Markets, Information, and Games, chapter 14, pages 312-335. Clarendon Press, Oxford, 1989. [18] R. Myerson. Optimal auction design. Mathematics of Operation Research, 6:58-73, 1981. [19] N. Nisan and A. Ronen. Computationally feasible VCG mechanisms. In Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), pages 242-252, Minneapolis, MN, 2000. [20] N. Nisan and A. Ronen. Algorithmic mechanism design. Games and Economic Behavior, 35:166-196, 2001. Early version in Proceedings of the Annual ACM Symposium on Theory of Computing (STOC), 1999. [21] T. Roughgarden. Designing networks for selfish users is hard. In Proceedings of the Annual Symposium on Foundations of Computer Science (FOCS), 2001. [22] T. Sandholm. Issues in computational Vickrey auctions. International Journal of Electronic Commerce, 4(3):107-129, 2000. Special Issue on 140 Applying Intelligent Agents for Electronic Commerce. A short, early version appeared at the Second International Conference on Multi-Agent Systems (ICMAS), pages 299-306, 1996. [23] M. A. Satterthwaite. Strategy-proofness and Arrows conditions: existence and correspondence theorems for voting procedures and social welfare functions. Journal of Economic Theory, 10:187-217, 1975. [24] W. Vickrey. Counterspeculation, auctions, and competitive sealed tenders. Journal of Finance, 16:8-37, 1961. [25] R. V. Vohra. Research problems in combinatorial auctions. Mimeo, version Oct. 29, 2001. 141",
    "original_translation": "Self-interested Automated Mechanism Design and Implications for Optimal Combinatorial Auctions∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu Resumen A menudo, se debe elegir un resultado sobre la base de las preferencias reportadas por un grupo de agentes. La dificultad clave es que los agentes pueden informar sus preferencias de forma no sincera para hacer que el resultado elegido sea más favorable para ellos mismos. El diseño del mecanismo es el arte de diseñar las reglas del juego para que los agentes estén motivados para informar sus preferencias sinceramente, y se elige un resultado deseable. En un mecanismo automatizado recientemente propuesto, un mecanismo automatizado, un mecanismo se calcula para la configuración de agregación de preferencias en cuestión. Esto tiene varias ventajas, pero la desventaja es que el problema de optimización del diseño del mecanismo debe resolverse de nuevo cada vez. A diferencia del trabajo anterior sobre el diseño de mecanismo automatizado que estudió un diseñador benevolente, en este documento estudiamos problemas de diseño de mecanismo automatizado donde el diseñador se interestó en sí mismo. En este caso, el centro solo se preocupa por qué resultado se elige y qué pagos se hacen. La razón por la que las preferencias de los agentes son relevantes es que el centro está limitado a hacer que cada agente al menos fuera tan bien como el agente habría sido si no hubiera participado en el mecanismo. En este entorno, mostramos que el diseño de mecanismos deterministas óptimos es complete NP en dos casos especiales importantes: cuando el centro solo está interesado en los pagos realizados, y cuando los pagos no son posibles y el centro solo está interesado en el resultado elegido. Luego mostramos cómo permitir la aleatorización en el mecanismo facilita los problemas en esta configuración computacionalmente fácil. Finalmente, mostramos que el problema de la AMD que maximiza el pago está estrechamente relacionado con una variante interesante del problema de diseño de subasta combinatorial óptimo (RevenueMaximizing), donde los licitantes tienen preferencias de las mejores. Mostramos que aquí también, diseñar una subasta determinista óptima es NPComplete, pero diseñar una subasta aleatoria óptima es fácil. Categorías y descriptores de sujetos F.2 [Teoría de la computación]: Análisis de algoritmos y complejidad del problema;J.4 [Aplicaciones informáticas]: Ciencias sociales y conductuales-economía Algoritmos de términos generales, Economía, Teoría 1. Introducción en entornos múltiples, a menudo se debe elegir un resultado sobre la base de las preferencias reportadas por un grupo de agentes. Dichos resultados podrían ser presidentes potenciales, planes conjuntos, asignaciones de bienes o recursos, etc. El agregador de preferencias generalmente no conoce las preferencias de los agentes a priori. Más bien, los agentes informan sus preferencias al coordinador. Desafortunadamente, un agente puede tener un incentivo para informar mal sus preferencias para engañar al mecanismo para seleccionar un resultado que sea más deseable para el agente que el resultado que se seleccionaría si el agente revelara sus preferencias sinceramente. Dicha manipulación es indeseable porque los mecanismos de agregación de preferencias se adaptan a las preferencias agregadas de una manera socialmente deseable, y si los agentes revelan sus preferencias de forma insinceros, se puede elegir un resultado socialmente indeseable. La manipulabilidad es un problema generalizado en los mecanismos de agregación de preferencias. Un resultado negativo seminal, el teorema de Gibbard-Satterthwaite, muestra que bajo cualquier esquema de agregación de preferencias no dictador, si hay al menos 3 resultados posibles, existen preferencias bajo las cuales un agente es mejor informar con falsedad [10, 23].(Un esquema de agregación de preferencias se llama dictatorial si uno de los agentes dicta el resultado sin importar las preferencias que informan los otros agentes). Lo que al agregador le gustaría hacer es diseñar un mecanismo de agregación de preferencias para que 1) los agentes interesados estén motivados para informar sus preferencias con sinceridad, y 2) el mecanismo elige un resultado que sea deseable desde la perspectiva de algún objetivo. Esta es la configuración clásica del diseño del mecanismo en la teoría de juegos. En este documento, estudiamos el caso en el que el diseñador se interesa por sí mismo, es decir, al diseñador no le importa directamente cómo viene el OUT132 se relaciona con las preferencias de los agentes, pero está bastante preocupado por su propia agenda para la cual se debe elegir el resultado, y con maximizar los pagos a sí mismo. Esta es la configuración de diseño del mecanismo más relevante para el comercio electrónico. En el caso de que el diseñador de mecanismo esté interesado en maximizar alguna noción de bienestar social, la importancia de recopilar las preferencias de los agentes es clara. Quizás sea menos obvio por qué deberían recolectarse cuando el diseñador se interesa y, por lo tanto, su objetivo no está directamente relacionado con las preferencias de los agentes. La razón de esto es que a menudo las preferencias de los agentes imponen límites sobre cómo el diseñador elige el resultado y los pagos. La restricción más común es la de la racionalidad individual (IR), lo que significa que el mecanismo no puede empeorar a ningún agente de lo que el agente habría sido si no hubiera participado en el mecanismo. Por ejemplo, en el contexto del diseño de subasta óptimo, el diseñador (subastador) solo se preocupa por la cantidad de ingresos, y no per se con qué tan bien se corresponde la asignación del bien (o los bienes) con las preferencias de los agentes. Sin embargo, el diseñador no puede obligar a un agente a pagar más que su valoración por el paquete de bienes asignados a él. Por lo tanto, incluso un diseñador interesado elegirá un resultado que haga que los agentes sean razonablemente bien. Por otro lado, el diseñador no necesariamente elegirá un resultado de maximización de bienestar social. Por ejemplo, si el diseñador siempre elige un resultado que maximice el bienestar social con respecto a las preferencias reportadas, y obliga a cada agente a pagar la diferencia entre la utilidad que tiene ahora y la utilidad que hubiera tenido si no hubiera participado en el mecanismo, es fácil ver que los agentes pueden tener un incentivo para informar mal sus preferencias, y esto en realidad puede generar menos ingresos. De hecho, uno de los resultados contradictorios de la teoría del diseño de subasta óptima es que a veces el bien se asigna a nadie incluso cuando el subastador tiene un precio de reserva de 0. El diseño del mecanismo clásico proporciona algunos mecanismos generales que, bajo ciertos supuestos, satisfacen alguna noción de no manipulabilidad y maximizan algún objetivo. La ventaja de estos mecanismos es que no dependen de la información (incluso probabilística) sobre las preferencias de los agentes (por ejemplo, el mecanismo de Vickrey-Clarke-Groves (VCG) [24, 4, 11]), o pueden aplicarse fácilmente aCualquier distribución de probabilidad sobre las preferencias (por ejemplo, el mecanismo DAGVA [8, 2], la subasta Myerson [18] y la subasta de múltiples unidades Maskin-Riley [17]). Sin embargo, los mecanismos generales también tienen inconvenientes significativos: • Los mecanismos generales más famosos y ampliamente aplicables, VCG y DAGVA, solo maximizan el bienestar social. Si el diseñador se interesa por sí mismo, como es el caso en muchas configuraciones de comercio electrónico, estos mecanismos no maximizan el objetivo de los diseñadores.• Los mecanismos generales que se centran en un diseñador autointerestado solo son aplicables en configuraciones muy restringidas, ya que Myersson esperaba una subasta de maximización de ingresos para vender un solo artículo, y Maskin y Rileys esperaban la subasta de maximización de ingresos para vender múltiples unidades idénticas de un artículo.• Incluso en la configuración restringida en la que se aplican estos mecanismos, los mecanismos solo permiten la maximización del pago. En la práctica, el diseñador también puede estar interesado en el resultado per se. Por ejemplo, un subastador puede importarle qué postor recibe el artículo.• A menudo se supone que los pagos secundarios se pueden usar para adaptar los incentivos de los agentes, pero esto no siempre es práctico. Por ejemplo, en los mercados electrónicos basados en el trueque, como los pagos de Compro, FirstBarter.com, Barterone y Intagio-Side no están permitidos. Además, entre los agentes de software, podría ser más deseable construir mecanismos que no dependan de la capacidad de realizar pagos, porque muchos agentes de software no tienen la infraestructura para realizar pagos. En contraste, seguimos un enfoque reciente donde el mecanismo está diseñado automáticamente para el problema específico en cuestión. Este enfoque aborda todas las desventajas enumeradas anteriormente. Formulamos el problema de diseño del mecanismo como un problema de optimización. La entrada se caracteriza por el número de agentes, los tipos posibles de los agentes (preferencias) y las distribuciones previas de los agregadores sobre los tipos de agentes. La salida es un mecanismo no manipulable que es óptimo con respecto a algún objetivo. Este enfoque se llama diseño de mecanismo automatizado. El enfoque de diseño de mecanismo automatizado tiene cuatro ventajas sobre el enfoque clásico del diseño de mecanismos generales. Primero, se puede usar incluso en entornos que no satisfacen los supuestos de los mecanismos clásicos (como la disponibilidad de pagos secundarios o que el objetivo es el bienestar social). En segundo lugar, puede permitir que uno elude los resultados de imposibilidad (como el teorema de Gibbard-Satterthwaite) que afirman que no hay un mecanismo deseable en todas las preferencias. Cuando el mecanismo está diseñado para la configuración en cuestión, no importa que no funcione de manera más general. En tercer lugar, puede producir mejores mecanismos (en términos de garantías de no manipulabilidad más fuertes y/o mejores resultados) que los mecanismos clásicos porque el mecanismo capitaliza los detalles del entorno (la información probabilística que el diseñador tiene sobre los tipos de agentes). Dada la gran cantidad de información que las partes tienen entre sí hoy en día, es probable que este enfoque conduzca a un gran ahorro sobre los mecanismos clásicos, que en gran medida ignoran esa información. Por ejemplo, imagine que una empresa crea automáticamente su mecanismo de adquisición basado en el conocimiento estadístico sobre sus proveedores, en lugar de usar una subasta clásica de adquisición descendente. Cuarto, la carga del diseño se transfiere de los humanos a una máquina. Sin embargo, el diseño del mecanismo automatizado requiere que el problema de optimización del diseño del mecanismo se resuelva de nuevo para cada configuración. Por lo tanto, su complejidad computacional se convierte en un tema clave. Investigaciones anteriores han estudiado esta pregunta para los diseñadores benevolentes, que desean maximizar, por ejemplo, bienestar social [5, 6]. En este artículo estudiamos la complejidad computacional del diseño de mecanismo automatizado en el caso de un diseñador interesado. Esta es una configuración importante para el diseño de mecanismo automatizado debido a la escasez de mecanismos generales en esta área, y el hecho de que en la mayoría de los entornos de comercio electrónico el diseñador se interesa. También mostramos que este problema está estrechamente relacionado con un problema de diseño de subasta combinatorial óptimo de subasta combinatoria óptimo (maximización de ingresos).133 El resto de este documento está organizado de la siguiente manera. En la Sección 2, justificamos el enfoque en mecanismos no manipulables. En la Sección 3, definimos el problema que estudiamos. En la Sección 4, mostramos que el diseño de un mecanismo determinista óptimo es NP complete incluso cuando el diseñador solo se preocupa por los pagos realizados. En la Sección 5, mostramos que el diseño de un mecanismo determinista óptimo también es NP complete cuando los pagos no son posibles y el diseñador solo está interesado en el resultado elegido. En la Sección 6, mostramos que un mecanismo aleatorizado óptimo puede diseñarse en el tiempo polinomial incluso en el caso general. Finalmente, en la Sección 7, mostramos que para diseñar subastas combinatorias óptimas bajo las preferencias de las mejores solo, nuestros resultados en AMD implican que este problema es NP completo para las subastas deterministas, pero fáciles para las subastas aleatorias.2. Justificando el enfoque en los mecanismos no manipulables antes de definir el problema computacional del diseño del mecanismo automatizado, debemos justificar nuestro enfoque en los mecanismos no manipulables. Después de todo, no es inmediatamente obvio que no hay mecanismos manipulables que, incluso cuando los agentes informan sus tipos estratégicamente y, por lo tanto, a veces falsamente, aún alcanzan mejores resultados (según cualquier objetivo que usemos) que cualquier mecanismo no manipulable. Sin embargo, este es el caso: dado cualquier mecanismo, podemos construir un mecanismo no manipulable cuyo rendimiento es idéntico, como sigue. Construimos una capa de interfaz entre los agentes y el mecanismo original. Los agentes informan sus preferencias (o tipos) a la capa de interfaz;Posteriormente, la capa de interfaz ingresa al mecanismo original de los tipos que los agentes habrían informado estratégicamente al mecanismo original, si sus tipos se declararon a la capa de interfaz. El resultado resultante es el resultado del nuevo mecanismo. Dado que la capa de interfaz actúa estratégicamente en nombre de cada agente, nunca hay un incentivo para informar falsamente a la capa de interfaz;Y, por lo tanto, los tipos informados por la capa de interfaz son los tipos estratégicos que se habrían informado sin la capa de interfaz, por lo que los resultados son exactamente como habrían sido con el mecanismo original. Este argumento es conocido en la literatura de diseño del mecanismo como el principio de revelación [16].(Existen dificultades computacionales para aplicar el principio de revelación en grandes resultados combinatorios y espacios de tipo [7, 22]. Sin embargo, debido a que aquí nos centramos en los espacios de resultados y tipos representados rotos, esto no es una preocupación aquí). Dado esto, podemos centrarnos en mecanismos veraces en el resto del documento.3. Definiciones Ahora formalizamos la configuración de diseño de mecanismo automatizado. Definición 1. En una configuración de diseño de mecanismo automatizado, se nos da: • Un conjunto finito de resultados o;• un conjunto finito de N agentes;• Para cada agente I, 1. Un conjunto finito de tipos θi, 2. Una distribución de probabilidad γi sobre θi (en el caso de tipos correlacionados, hay una distribución conjunta única γ sobre θ1 × ... × θn) y 3. Una función de utilidad UI: θi × O → R;1 • Una función objetivo cuya expectativa el diseñador desea maximizar. Existen muchas funciones objetivas posibles que el diseñador podría tener, por ejemplo, el bienestar social (donde el diseñador busca maximizar la suma de los servicios públicos de los agentes), o la utilidad mínima de cualquier agente (donde el diseñador busca maximizar la peor utilidad porcualquier agente). En ambos casos, el diseñador es benevolente, porque el diseñador, en cierto sentido, persigue la felicidad colectiva de los agentes. Sin embargo, en este documento, nos centramos en el caso de un diseñador interesado. Un diseñador interesado solo se preocupa por el resultado elegido (es decir, al diseñador no le importa cómo se relaciona el resultado con las preferencias de los agentes, sino que tiene una preferencia fija sobre los resultados), y sobre los pagos netos realizados por los agentes,que fluyen al diseñador. Definición 2. Un diseñador interesado tiene una función objetivo dada por G (O) + N i = 1 πi, donde G: O → R indica la propia preferencia de los diseñadores sobre los resultados, y πi es el pago realizado por el agente i. En el caso de que G = 0 en todas partes, se dice que el diseñador está maximizando el pago. En el caso de que los pagos no son posibles, G constituye la función objetivo por sí misma. Ahora definimos los tipos de mecanismos en estudio. Según el principio de revelación, podemos restringir la atención a los mecanismos de revelación directos y veraz, donde los agentes informan sus tipos directamente y nunca tienen un incentivo para informarlos mal. Definición 3. Consideramos los siguientes tipos de mecanismo: • Un mecanismo determinista sin pagos consiste en una función de selección de resultados O: θ1 × θ2 ×...× θn → O. • Un mecanismo aleatorizado sin pagos consiste en una función de selección de distribución P: θ1 × θ2 ×...× θn → P (O), donde P (O) es el conjunto de distribuciones de probabilidad sobre O. • Un mecanismo determinista con pagos consiste en una función de selección de resultados O: θ1 × θ2 ×... × θn → O y para cada agente I, una función de selección de pago πi: θ1 × θ2 ×...× θn → R, donde πi (θ1, ..., θn) da el pago realizado por el agente I cuando los tipos informados son θ1 ,..., θn.1 Aunque esto sigue a la notación de la teoría del juego estándar [16], el hecho de que el agente tenga una función de utilidad y un tipo quizás sea confuso. Los tipos codifican las diversas preferencias posibles que el agente puede resultar tener, y el tipo de agentes no es conocido por el agregador. La función de utilidad es de conocimiento común, pero debido a que el tipo de agentes es un parámetro en la función de utilidad de los agentes, el agregador no puede saber cuál es la utilidad de los agentes sin conocer el tipo de agentes.134 • Un mecanismo aleatorio con pagos consiste en una función de selección de distribución P: θ1 × θ2 ×...× θn → P (O), y para cada agente I, una función de selección de pago πi: θ1 × θ2 ×...× θn → R.2 Hay dos tipos de restricción en el diseñador en la construcción del mecanismo.3.1 Restricciones de racionalidad individual (IR) El primer tipo de restricción es el siguiente. La utilidad de cada agente debe ser al menos tan grande como la utilidad de los agentes, es decir, la utilidad que el agente recibiría si no participara en el mecanismo. De lo contrario, ese agente no participaría en el mecanismo, y ninguna participación de los agentes puede dañar el objetivo de los diseñadores del mecanismo porque, en el peor de los casos, el mecanismo puede ignorar a un agente fingiendo que el agente no está allí.(Además, si no se aplica dicha restricción, el diseñador podría simplemente hacer que los agentes paguen una cantidad infinita). Este tipo de restricción se llama restricción IR (racionalidad individual). Hay tres restricciones IR posibles diferentes: ex ante, ex interina y ex post, dependiendo de lo que el agente sepa sobre su propio tipo y los otros tipos al decidir si participar en el mecanismo. Ex ante Ir significa que el agente participaría si no supiera nada (ni siquiera su propio tipo). No estudiaremos este concepto en este documento. Ex intermedio IR significa que el agente siempre participaría si solo conociera su propio tipo, pero no los de los demás. EX Post IR significa que el agente siempre participaría incluso si supiera que todos los tipos de Bodys. Definiremos las dos últimas nociones de IR formalmente. Primero, necesitamos formalizar el concepto del resultado alternativo. Suponemos que cada utilidad de alojamiento de cada agente es cero para cada uno de sus tipos. Esto es sin pérdida de generalidad porque podemos agregar un término constante a la función de utilidad de un agente (para un tipo dado), sin afectar el comportamiento de toma de decisiones de ese agente de maximización de utilidad esperada [16]. Definición 4. En cualquier configuración de diseño de mecanismo automatizado con una restricción IR, hay un resultado de retroceso o0 ∈ O donde, para cualquier agente I y cualquier tipo θi ∈ θi, tenemos ui (θi, o0) = 0. (además, en el caso deUn diseñador interesado, G (O0) = 0.) Ahora podemos definir las nociones de racionalidad individual. Definición 5. La racionalidad individual (IR) se define por: • Un mecanismo determinista es ex interino IR para cualquier agente I, y cualquier tipo θi ∈ θi, tenemos E (θ1, .., θi - 1, θi+1, .., ..,, ..,θn) | θi [ui (θi, o (θ1, .., θn)) - πi (θ1, .., θn)] ≥ 0. Un mecanismo aleatorizado es ex interino IR para cualquier agente I, y cualquier tipo θi ∈ θi, tenemos E (θ1, .., θi - 1, θi+1, .., θn) | θi eo | θ1, .. .., θn [ui (θi, o) −πi (θ1, .., θn)] ≥ 0. • Un mecanismo determinista es ex post si para cualquier agente I, y cualquier tipo de vector (θ1, .., θn)∈ θ1 ×...× θn, tenemos ui (θi, o (θ1, ..., θn)) - πi (θ1, ..., θn) ≥ 0. 2 No aleatorizamos los pagos porque mientras los agentes y el diseñadorson un riesgo neutral con respecto a los pagos, es decir, su utilidad es lineal en pagos, no hay razón para aleatorizar los pagos. Un mecanismo aleatorizado es ex post IR para cualquier agente I, y cualquier tipo de vector (θ1, ..., θn) ∈ θ1 ×...× θn, tenemos eo | θ1, .., θn [ui (θi, o) - πi (θ1, .., θn)] ≥ 0. Los términos que involucran pagos pueden dejarse fuera en el caso de que los pagos no sean posibles.3.2 Compatibilidad de incentivos (IC) Restricciones El segundo tipo de restricción dice que los agentes nunca deberían tener un incentivo para informar mal su tipo (como se justifica anteriormente por el principio de revelación). Para este tipo de restricción, las dos variantes más comunes (o conceptos de solución) son la implementación en estrategias dominantes e implementación en el equilibrio de Bayes-Nash. Definición 6. Dada una configuración de diseño de mecanismo automatizado, se dice que un mecanismo implementa su resultado y funciones de pago en estrategias dominantes si Truthtelling siempre es óptimo incluso cuando los tipos informados por los otros agentes ya son conocidos. Formalmente, para cualquier agente I, cualquier tipo de vector (θ1, ..., θi, ..., θn) ∈ θ1 ×...× θi ×...× θn, y cualquier informe de tipo alternativo ˆθi ∈ θi, en el caso de los mecanismos deterministas tenemos ui (θi, o (θ1, ..., θi, ..., θn)) - πi (θ1, ...,.θi, ..., θn) ≥ ui (θi, o (θ1, ..., ˆθi, ..., θn)) - πi (θ1, ..., ˆθi, ..., θn). En el caso de los mecanismos aleatorios tenemos EO | θ1, .., θi, .., θn [ui (θi, o) - πi (θ1, ..., θi, ..., Θn)] ≥ EO | θ1, .., ˆθi, .., θn [ui (θi, o) - πi (θ1, ..., ˆΘi, ..., θn)]. Los términos que involucran pagos pueden dejarse fuera en el caso de que los pagos no sean posibles. Por lo tanto, en la implementación de estrategias dominantes, Truthtelling es óptimo independientemente de lo que informan los otros agentes. Si es óptimo solo dado que los otros agentes son sinceros, y dado que uno no conoce los tipos de otros agentes, tenemos implementación en el equilibrio de Bayes-Nash. Definición 7. Dada una configuración de diseño de mecanismo automatizado, se dice que un mecanismo implementa sus funciones de resultado y pago en el equilibrio de la narración de bayes si la verdadera siempre es óptimo para un agente cuando ese agente aún no sabe nada sobre los otros tipos de agentes, y los otros agentes sondiciendo la verdad. Formalmente, para cualquier agente I, cualquier tipo θi ∈ θi, y cualquier informe de tipo alternativo ˆθi ∈ θi, en el caso de mecanismos deterministas tenemos e (θ1, .., θi - 1, θi+1, .., θn)| θi [ui (θi, o (θ1, ..., θi, ..., θn)) - πi (θ1, ..., θi, ...., θn)] ≥ E (θ1, ..,,,,θi - 1, θi+1, .., θn) | θi [ui (θi, o (θ1, ..., ˆθi, ..., θn)) - πi (θ1, .., ˆθi, .. ..., θn)]. En el caso de los mecanismos aleatorios tenemos E (θ1, .., θi - 1, θi+1, .., θn) | θi eo | θ1, .., θi, .., θn [ui (θi, o)- πi (θ1, ..., θi, ..., θn)] ≥ E (θ1, .., θi - 1, θi+1, .., θn) | θi eo | θ1, .., ˆθi,.., θn [ui (θi, o) - πi (θ1, ..., ˆθi, ..., θn)]. Los términos que involucran pagos pueden dejarse fuera en el caso de que los pagos no sean posibles.135 3.3 Diseño de mecanismo automatizado Ahora podemos definir el problema computacional que estudiamos. Definición 8. (Diseño de mecanismo automatizado (AMD)) Se damos: • Una configuración de diseño de mecanismo automatizado, • una noción IR (ex interina, ex post o ninguno), • un concepto de solución (estrategias dominantes o bayes-loh), • si los pagos son posibles, • Si es posible la aleatorización, • (en la variante de decisión del problema) un valor objetivo G. Se nos pregunta si existe un mecanismo del tipo especificado (en términos de pagos y aleatorización) queSatisface tanto la noción IR como el concepto de solución, y proporciona un valor esperado de al menos G para el objetivo. Un caso especial interesante es el entorno donde solo hay un agente. En este caso, el agente de informes siempre sabe todo lo que hay que saber sobre los tipos de otros agentes porque no hay otros agentes. Dado que ex post y ex interino IR solo difieren en lo que se supone que un agente sabe sobre otros tipos de agentes, los dos conceptos IR coinciden aquí. Además, debido a que la implementación en estrategias dominantes e implementación en el equilibrio de la narración de Bayes solo difiere en lo que se supone que un agente sabe sobre otros tipos de agentes, los dos conceptos de solución coinciden aquí. Esta observación demostrará ser una herramienta útil para probar los resultados de la dureza: si demostramos la dureza computacional en el entorno individual, esto implica inmediatamente la dureza para ambos conceptos IR, para ambos conceptos de solución, para cualquier número de agentes.4. La AMD determinista de pago por el pago es difícil en esta sección, demostramos que es NP completo diseñar un mecanismo determinista que maximice la suma esperada de los pagos recaudados de los agentes. Mostramos que este problema es difícil incluso en el entorno de un solo agente, lo que lo muestra inmediatamente para ambos conceptos IR, para ambos conceptos de solución. Para demostrar Nphardness, reducimos del problema de Minsat. Definición 9 (Minsat). Se nos da una fórmula φ en forma normal conjuntiva, representada por un conjunto de variables booleanas V y un conjunto de cláusulas C, y un entero K (k <| c |). Se nos pregunta si existe una tarea a las variables en V de tal manera que en la mayoría de las cláusulas K en φ se satisfacen. Recientemente se demostró que Minsat era NP-Completo [14]. Ahora podemos presentar nuestro resultado. Teorema 1. La AMD determinista de la maximización del pago es NP Complete, incluso para un solo agente, incluso con una distribución uniforme sobre los tipos. Prueba. Es fácil demostrar que el problema está en NP. Para mostrar NP-Hardness, reducimos una instancia arbitraria de Minsat a la siguiente instancia de AMD determinista de pago de pago de un solo agente. Deje que el tipo de agentes se establece θ = {θc: c ∈ C} ∪ {θv: v ∈ V}, donde C es el conjunto de cláusulas en la instancia de Minsat, y V es el conjunto de variables. Deje que la distribución de probabilidad sobre estos tipos sea uniforme. Deje que el conjunto de resultados sea o = {o0} ∪ {oc: c ∈ C} ∪ {ol: l ∈ L}, donde l es el conjunto de literales, es decir, l = {+v: v ∈ V} ∪ {−v: v ∈ V}. Deje que la notación v (l) = V denote que v es la variable correspondiente a la l literal l, es decir, l ∈ {+V, −v}. Sea l ∈ C denota que la L literal ocurre en la cláusula c.Luego, deje que la función de utilidad de los agentes sea dada por u (θc, ol) = | θ |+ 1 para todos l ∈ L con l ∈ C;u (θc, ol) = 0 para todos l ∈ L con l /∈ C;u (θc, oc) = | θ |+ 1;u (θc, oc) = 0 para todos c ∈ C con c = c;u (θv, ol) = | θ |Para todos l ∈ L con V (L) = V;u (θv, ol) = 0 para todos l ∈ L con v (l) = v;u (θv, oc) = 0 para todos c ∈ C. El objetivo de la instancia AMD es g = | θ |+ | C | −k | θ |, donde K es el objetivo de la instancia de Minsat. Mostramos que las instancias son equivalentes. Primero, supongamos que hay una solución a la instancia de Minsat. Deje que la tarea de los valores de la verdad a las variables en esta solución sea dada por la función F: V → L (donde v (f (v)) = V para todas v ∈ V). Entonces, para cada v ∈ V, Sea O (θv) = de (V) y π (θv) = | θ |. Para cada c ∈ C, deje o (θc) = OC;Sea π (θc) = | θ |+ 1 Si C no se satisface en la solución Minsat, y π (θc) = | θ |Si C está satisfecho. Es sencillo verificar que la restricción IR esté satisfecha. Ahora verificamos que el agente no tenga ningún incentivo para informar mal. Si el tipo de agentes es un θv, entonces cualquier otro informe le dará un resultado que no sea mejor, para un pago que no es menos, por lo que no tiene ningún incentivo para informar mal. Si el tipo de agentes es algún θc donde C es una cláusula satisfecha, nuevamente, cualquier otro informe le dará un resultado que no sea mejor, para un pago que no es menos, por lo que no tiene ningún incentivo para informar mal. El caso final para verificar es dónde el tipo de agentes es algún θc donde C es una cláusula insatisfecha. En este caso, observamos que para ninguno de los tipos, informando que conduce a un resultado OL para una l ∈ C literal, precisamente porque la cláusula no se satisface en el caso de Minsat. Porque también, ningún tipo además de θc conduce al resultado OC, informar cualquier otro tipo dará un resultado con la utilidad 0, al tiempo que forja un pago de al menos | θ |del agente. Claramente, el agente es mejor informar sinceramente, para una utilidad total de 0. Esto establece que el agente nunca tiene un incentivo para informar mal. Finalmente, mostramos que se alcanza el objetivo. Si S es el número de cláusulas satisfechas en la solución Minsat (de modo que S ≤ k), el pago esperado de este mecanismo es | V || θ |+S | θ |+(| C | −s) (| θ |+1) | θ |≥ | V || θ |+k | θ |+(| c | −k) (| θ | +1) | θ |= | Θ |+ | C | −k | θ |= G. Entonces hay una solución a la instancia de AMD. Ahora suponga que hay una solución a la instancia de AMD, dada por una función de resultado O y una función de pago π. Primero, supongamos que hay algunos v ∈ V tal que o (θv) /∈ {O+V, O - V}. Luego, la utilidad que el agente deriva del resultado dado para este tipo es 0 y, por lo tanto, por IR, no se puede extraer ningún pago del agente para este tipo. Porque, nuevamente por IR, el pago máximo que se puede extraer para cualquier otro tipo es | θ |+ 1, se deduce que el pago máximo esperado que podría obtenerse es como máximo (| θ | −1) (| θ | +1) | θ |<| Θ |<G, contradiciendo que esta es una solución a la instancia de AMD. Se deduce que en la solución a la instancia de AMD, para cada v ∈ V, O (θv) ∈ {O+V, O - V}.136 Podemos interpretar esto como una asignación de valores de verdad a las variables: V se establece en verdadero si o (θv) = o+V, y en falso si o (θv) = o - v. Afirmamos que esta tarea es una solución a la instancia de Minsat. Por la restricción IR, el pago máximo que podemos extraer de cualquier tipo θv es | θ |. Debido a que no puede haber incentivos para que el agente informe falsamente, para cualquier cláusula C satisfecha por la asignación dada, el pago máximo que podemos extraer para el tipo correspondiente θc es | θ |.(Porque si extraíamos más de este tipo, la utilidad de los agentes en este caso sería menor que 1; y si V es la variable que satisface C en la asignación, de modo que o (θv) = ol donde ocurre en C, entonces elEl agente sería mejor informar θv en lugar del informe veraz θc, para obtener un resultado que valga la pena | θ | +1 mientras tiene que pagar como máximo | θ |.) Finalmente, para cualquier cláusula insatisfecha C, por la restricción IR, el pago máximo que podemos extraer para el tipo correspondiente θc es | θ |+ 1. Se deduce que el pago esperado de nuestro mecanismo es como máximo v | θ |+s | θ |+(| c | −s) (| θ | +1) θ, donde s es el número de cláusulas satisfechas. Debido a que nuestro mecanismo logra el objetivo, se deduce que v | θ |+s | θ |+(| c | −s) (| θ | +1) θ ≥ g, que por manipulaciones algebraicas simples es equivalente a s ≤ k.Entonces hay una solución a la instancia de Minsat. Debido a que la AMD que maximiza el pago es solo el caso especial de AMD para un diseñador interesado en sí mismo donde el diseñador no tiene preferencias sobre el resultado elegido, esto implica inmediatamente la dureza para el caso general de AMD para un diseñador autoinaltado donde los pagos son posibles. Sin embargo, aún no implica dureza para el caso especial donde los pagos no son posibles. Probaremos la dureza en este caso en la siguiente sección.5. La AMD determinista egoísta sin pagos es difícil en esta sección, demostramos que es completado NP diseñar un mecanismo determinista que maximice la expectativa del objetivo de los diseñadores cuando los pagos no son posibles. Mostramos que este problema es difícil incluso en el entorno de un solo agente, lo que lo muestra inmediatamente para ambos conceptos IR, para ambos conceptos de solución. Teorema 2. Sin pagos, la AMD determinista para un diseñador interestado es NP-completado, incluso para un solo agente, incluso con una distribución uniforme sobre los tipos. Prueba. Es fácil demostrar que el problema está en NP. Para mostrar np-dardness, reducimos una instancia arbitraria de Minsat a la siguiente AMD determinista egoísta de un solo agente sin instancia de pagos. Deje que el tipo de agentes se establece θ = {θc: c ∈ C} ∪ {θv: v ∈ V}, donde C es el conjunto de cláusulas en la instancia de Minsat, y V es el conjunto de variables. Deje que la distribución de probabilidad sobre estos tipos sea uniforme. Deje que el conjunto de resultados sea o = {o0} ∪ {oc: c ∈ C} ∪ {ol: l ∈ L} ∪ {o ∗}, donde l es el conjunto de literales, es decir, l = {+v: v: v: v: v: v: v: v: v: V es∈ V} ∪ {−v: v ∈ V}. Deje que la notación v (l) = V denote que v es la variable correspondiente a la l literal l, es decir, l ∈ {+V, −v}. Sea l ∈ C denota que la L literal ocurre en la cláusula c.Luego, deje que la función de utilidad de los agentes sea dada por u (θc, ol) = 2 para todos l ∈ L con l ∈ C;u (θc, ol) = −1 para todos l ∈ L con l /∈ C;u (θc, oc) = 2;u (θc, oc) = −1 para todos c ∈ C con c = c;u (θc, o ∗) = 1;u (θv, ol) = 1 para todos l ∈ L con v (l) = v;u (θv, ol) = −1 para todos l ∈ L con v (l) = v;u (θv, oc) = −1 para todos c ∈ C;u (θv, o ∗) = −1. Deje que la función objetivo de los diseñadores sea dada por g (o ∗) = | θ | +1;g (ol) = | θ |para todos l ∈ L;g (oc) = | θ |para todos c ∈ C. El objetivo de la instancia AMD es G = | θ |+ | C | −k | θ |, donde K es el objetivo de la instancia de Minsat. Mostramos que las instancias son equivalentes. Primero, supongamos que hay una solución a la instancia de Minsat. Deje que la tarea de los valores de la verdad a las variables en esta solución sea dada por la función F: V → L (donde v (f (v)) = V para todas v ∈ V). Entonces, para cada v ∈ V, deje o (θv) = de (v). Para cada c ∈ C que se satisface en la solución Minsat, deje o (θc) = OC;Para cada c ∈ C insatisfecho, deje o (θc) = O ∗. Es sencillo verificar que la restricción IR esté satisfecha. Ahora verificamos que el agente no tenga ningún incentivo para informar mal. Si el tipo de agentes es un θv, está obteniendo la utilidad máxima para ese tipo, por lo que no tiene ningún incentivo para informar mal. Si el tipo de agentes es algún θc donde C es una cláusula satisfecha, nuevamente, está obteniendo la utilidad máxima para ese tipo, por lo que no tiene ningún incentivo para informar mal. El caso final para verificar es dónde el tipo de agentes es algún θc donde C es una cláusula insatisfecha. En este caso, observamos que para ninguno de los tipos, informando que conduce a un resultado OL para una l ∈ C literal, precisamente porque la cláusula no se satisface en el caso de Minsat. Debido a que ningún tipo de tipo conduce al resultado OC, no hay ningún resultado que el mecanismo seleccione que le dé a la utilidad del agente mayor que 1 para el tipo θc, y por lo tanto, el agente no tiene ningún incentivo para informar falsamente. Esto establece que el agente nunca tiene un incentivo para informar mal. Finalmente, mostramos que se alcanza el objetivo. Si S es el número de cláusulas satisfechas en la solución Minsat (de modo que s ≤ k), entonces el valor esperado de la función objetivo de los diseñadores es | V || θ |+s | θ |+(| c | −s) (| Θ | +1) | θ |≥ | V || θ |+k | θ |+(| c | −k) (| θ | +1) | θ |= | Θ |+ | C | −k | θ |= G. Entonces hay una solución a la instancia de AMD. Ahora suponga que hay una solución a la instancia de AMD, dada por una función de resultado o. Primero, supongamos que hay algunos v ∈ V tal que o (θv) /∈ {O+V, O - V}. El único otro resultado que el mecanismo puede elegir bajo la restricción IR es O0. Esto tiene un valor objetivo de 0, y debido a que el valor más alto que la función objetivo ha tomado es | θ |+ 1, se deduce que el valor máximo esperado de la función objetivo que podría obtenerse es como máximo (| θ | −1) (| θ | +1) | θ |<| Θ |<G, contradiciendo que esta es una solución a la instancia de AMD. Se deduce que en la solución a la instancia de AMD, para cada v ∈ V, O (θv) ∈ {O+V, O - V}. Podemos interpretar esto como una asignación de valores de verdad a las variables: V se establece en verdadero si o (θv) = o+V, y en falso si o (θv) = o - v. Afirmamos que esta tarea es una solución a la instancia de Minsat. Por lo anterior, para cualquier tipo θv, el valor de la función objetivo en este mecanismo será | θ |. Para cualquier cláusula C satisfecha por la asignación dada, el valor de la función objetivo en el caso en que el agente informa el tipo θc será como máximo | θ |.(Esto se debe a que no podemos elegir el resultado o ∗ para dicho tipo, ya que en este caso el agente tendría un incentivo para informar θv en su lugar, donde V es la variable que satisface C en la asignación (de modo que o (θv) = OLDonde L ocurre en c).) Finalmente, para cualquier cláusula insatisfecha C, el valor máximo que la función objetivo puede tomar en el caso en que el agente informa el tipo θc es | θ |+ 1, simplemente porque este es el valor más grande que la función jamás haya tomado. Se deduce que el valor esperado de la función objetivo para nuestro mecanismo es como máximo v | θ |+s | θ |+(| c | −s) (| θ | +1) θ, donde s es el número de 137 satisfecho.cláusulas. Debido a que nuestro mecanismo logra el objetivo, se deduce que v | θ |+s | θ |+(| c | −s) (| θ | +1) θ ≥ g, que por manipulaciones algebraicas simples es equivalente a s ≤ k.Entonces hay una solución a la instancia de Minsat. Ambos resultados de dureza se basaron en la restricción de que el mecanismo debería ser determinista. En la siguiente sección, mostramos que la dureza del diseño desaparece cuando permitimos la aleatorización en el mecanismo.6. La AMD aleatoria para un diseñador autoinalgado es fácil, ahora mostramos cómo permitir la aleatorización sobre los resultados hace que el problema de la AMD autoinaltada a través de la programación lineal, para cualquier número constante de agentes. Teorema 3. La AMD aleatoria interestimada con un número constante de agentes se puede solucionar en el tiempo polinómico mediante programación lineal, con y sin pagos, tanto para ex post y ex-incluso si los tipos están correlacionados. Prueba. Debido a que los programas lineales se pueden resolver en el tiempo polinomial [13], todo lo que necesitamos mostrar es que el número de variables y ecuaciones en nuestro programa es polinomio para cualquier número constante de agentes, es decir, exponencial solo en N., para fines, para fines,de determinar el tamaño del programa lineal, deje t = maxi {| θi |}. Las variables de nuestro programa lineal serán las probabilidades (P (θ1, θ2, ..., θn)) (o) (como la mayoría de las variables tn | o |) (como mayor variables NTN).(Mostramos el programa lineal para el caso donde los pagos son posibles; el caso sin pagos se obtiene fácilmente de esto simplemente omitiendo todas las variables de pago en el programa, o agregando restricciones adicionales que obligan a los pagos a ser 0.) Primero, mostramos las limitaciones IR. Para ex post IR, agregamos las siguientes restricciones (como la mayoría de NTN) al LP: • Por cada i ∈ {1, 2 ,..., N}, y para cada (θ1, θ2, ..., θn) ∈ θ1 × θ2 ×...× θn, agregamos (o∈O (p (θ1, θ2, ..., θn)) (o) u (θi, o)) - πi (θ1, θ2, ..., θn) ≥ 0. Para ex IR interino, agregamos las siguientes restricciones (como la mayoría de NT) al LP: • Por cada i ∈ {1, 2 ,..., N}, por cada θi ∈ θi, agregamos θ1, ..., θn γ (θ1, ..., θn | θi) ((o∈O (p (θ1, θ2, ..., θn))))(o) u (θi, o)) - πi (θ1, θ2, ..., θn)) ≥ 0. Ahora, mostramos las limitaciones del concepto de solución. Para la implementación en estrategias dominantes, agregamos las siguientes restricciones (como máximo ntn+1) al LP: • Para cada i ∈ {1, 2 ,..., N}, para cada (θ1, θ2, ..., θi, ..., θn) ∈ θ1 × θ2 ×...× θn, y para cada informe de tipo alternativo ˆθi ∈ θi, agregamos la restricción (o∈O (p (θ1, θ2, ..., θi, ..., θn)) (o) u (θi, o)) - πi (θ1, θ2, ..., θi, ..., θn) ≥ (o∈O (p (θ1, θ2, ..., ˆθi, ..., Θn)) (o) u (θi, o)) - πi (θ1, θ2, ..., ˆθi, ..., θn). Finalmente, para la implementación en el equilibrio de Bayes-Nash, agregamos las siguientes restricciones (como más nt2) al LP: • Por cada i ∈ {1, 2, ..., n}, por cada θi ∈ θi, y para cada cada unoInforme de tipo alternativo ˆθi ∈ θi, agregamos la restricción θ1, ..., θn γ (θ1, ..., θn | θi) ((o∈O (p (θ1, θ2, ..., θi, ..., θn)) (o) u (θi, o)) - πi (θ1, θ2, ..., θi, ..., θn)) ≥ θ1, ..., θn γ (θ1, ..., θn | θi) ((o∈O (p (θ1, θ2, ..., ˆθi, ..., θn)) (o) u (θi, o)) - πi (θ1, θ2, ..., ˆΘi, ..., θn)). Todo lo que queda por hacer es dar la expresión que el diseñador busca maximizar, que es: • θ1, ..., θn γ (θ1, ..., θn) ((o∈O (p (θ1, θ2, ..., θi, ..., θn)) (o) g (o)) + n i = 1 πi (θ1, θ2, ..., θn)). Como indicamos, el número de variables y restricciones es exponencial solo en n, y por lo tanto, el programa lineal es de tamaño polinomial para un número constante de agentes. Por lo tanto, el problema se puede resolver en el tiempo polinomial.7. Implicaciones para un problema óptimo de diseño de subasta combinatoria en esta sección, demostraremos algunas consecuencias interesantes del problema del diseño de mecanismo automatizado para un diseñador interesado en el diseño de subastas combinatorias óptimas. Considere una subasta combinatoria con un conjunto de artículos a la venta. Para cualquier paquete b ⊆ s, deje que UI (θi, b) sea el postor es la utilidad para recibir el paquete B cuando el tipo de licitadores es θi. El problema óptimo de diseño de la subasta es especificar las reglas de la subasta para maximizar los ingresos esperados para el subastador.(Por el principio de revelación, sin pérdida de generalidad, podemos suponer que la subasta es veraz). El problema de diseño de subasta óptimo se resuelve para el caso de un solo artículo por la famosa subasta Myerson [18]. Sin embargo, diseñar subastas óptimas en subastas combinatorias es un problema de investigación abierto reconocido [3, 25]. El problema está abierto incluso si solo hay dos artículos a la venta.(El caso de TwoItem con una forma muy especial de complementariedad y ninguna sustituibilidad se ha resuelto recientemente [1]. Supongamos que tenemos elementos de eliminación gratuitos se pueden desechar sin costo. Además, supongamos que las preferencias de los licitantes tienen la siguiente estructura: cada vez que un postor recibe un paquete de artículos, la utilidad de los licitantes para ese paquete está determinada solo por el mejor elemento en el paquete.(Hacemos hincapié en que 138 qué elemento es el mejor se permite depender del tipo de licitadores). Definición 10. Se dice que el postor I tiene preferencias mejores sobre paquetes de elementos si existe una función VI: θi × S → R de tal manera que para cualquier θi ∈ θi, para cualquier B ⊆ S, ui (θi, b) = maxs∈BVI (θi, S). Hacemos la siguiente observación útil en este entorno: no tiene sentido otorgar a un postor más de un elemento. La razón es que si el postor informa con sinceridad, quitando todo menos el artículo más valioso del postor no lastimará al postor;Y, mediante la eliminación gratuita, hacerlo solo puede reducir el incentivo para que este postor informe falsamente este tipo, cuando el postor realmente tiene otro tipo. Ahora mostramos que el problema de diseñar una subasta óptima determinista aquí es NP-COMPLETE, ¡por una reducción del pago que maximiza el problema AMD! Teorema 4. Dado un problema de diseño de subasta combinatoria óptima bajo las mejores preferencias (dado por un conjunto de elementos sy para cada postor i, un espacio de tipo finito θi y una función vi: θi × s → r tal que para cualquier θi ∈ θi, paraCualquier b ⊆ s, ui (θi, b) = maxs∈B VI (θi, s)), diseñar la subasta determinista óptima es completa, incluso para un solo postor con una distribución uniforme sobre los tipos. Prueba. El problema está en NP porque podemos generar de manera no determinista una regla de asignación y luego establecer los pagos utilizando la programación lineal. Para mostrar NP-Hardness, reducimos una instancia arbitraria de AMD determinista que Maximizing AMD, con un solo agente y una distribución uniforme sobre los tipos, a la siguiente instancia de problema de diseño de subasta combinatorial óptima con un solo postor con preferencias de solo solo. Para cada resultado o ∈ O en la instancia de AMD (además del resultado o0), que haya un elemento, así que ∈ S. deje que el espacio de tipo sea el mismo, y vaya V (θi, entonces) = ui (θi, o) (donde u se especifica en la instancia de AMD). Deje que el valor objetivo de ingresos esperado sea el mismo en ambos casos. Mostramos que las instancias son equivalentes. Primero suponga que existe una solución a la instancia de AMD, dada por una función de resultado y una función de pago. Luego, si la solución AMD elige el resultado o para un tipo, en la solución de subasta óptima, asigne {SO} al postor para este tipo.(A menos que o = o0, en cuyo caso asignamos {} al postor). Deje que las funciones de pago sean las mismas en ambos casos. Luego, la utilidad que recibe un agente para informar un tipo (dado el tipo verdadero) en cualquier solución es la misma, por lo que tenemos compatibilidad con incentivos en la solución de subasta óptima. Además, debido a que la distribución de tipos y la función de pago son los mismos, los ingresos esperados para el subastador/diseñador son los mismos. Se deduce que existe una solución a la instancia de diseño de subasta óptima. Ahora suponga que existe una solución a la instancia de diseño de subasta óptima. Por la observación de más de un elemento, podemos suponer sin pérdida de generalidad que la solución nunca asigna más de un elemento. Luego, si la solución de subasta óptima asigna el elemento, por lo tanto, al postor para un tipo, en la solución AMD, deje que el mecanismo elija el resultado O para ese tipo. Si la solución de subasta óptima no asigna nada al postor para un tipo, en la solución AMD, deje que el mecanismo elija el resultado O0 para ese tipo. Deje que las funciones de pago sean las mismas. Luego, la utilidad que recibe un agente para informar un tipo (dado el tipo verdadero) en cualquier solución es la misma, por lo que tenemos compatibilidad con incentivos en la solución AMD. Además, debido a que la distribución de tipos y la función de pago son los mismos, los ingresos esperados para el diseñador/subastador son los mismos. Se deduce que existe una solución a la instancia de AMD. Afortunadamente, también podemos llevar a cabo el resultado de facilidad de los mecanismos aleatorios a este entorno de subasta combinatoria que nos da uno de los pocos algoritmos conocidos de tiempo polinómico para un problema de diseño de subasta combinatorial óptimo. Teorema 5. Dado un problema de diseño de subasta combinatoria óptima bajo las mejores preferencias (dado por un conjunto de elementos sy para cada postor i, un espacio de tipo finito θi y una función vi: θi × s → r tal que para cualquier θi ∈ θi, paracualquier b ⊆ s, ui (θi, b) = maxs∈B vi (θi, s)), si el número de postores es una K constante, entonces la subasta aleatoria óptima se puede diseñar en tiempo polinomial.(Para cualquier restricción IC e IR). Prueba. Por la observación en más de uno, podemos sin pérdida de generalidad restringirnos a las asignaciones donde cada postor recibe como máximo un elemento. Hay menos de (| s | + 1) k tales asignaciones, es decir, un número polinomial de asignaciones. Debido a que podemos enumerar los resultados explícitamente, simplemente podemos resolver esto como una instancia de AMD que maximiza el pago, con programación lineal.8. Investigación relacionada sobre la complejidad en el diseño del mecanismo ha habido un interés reciente considerable en el diseño del mecanismo en la informática. Algunos de ellos se han centrado en cuestiones de complejidad computacional, pero la mayor parte de ese trabajo se ha esforzado por el diseño de mecanismos que son fáciles de ejecutar (por ejemplo, [20, 15, 19, 9, 12]), en lugar de estudiar la complejidad de diseñar el mecanismo. La pieza más cercana del trabajo anterior estudió la complejidad del diseño de mecanismo automatizado por un diseñador benevolente [5, 6]. Roughgarden ha estudiado la complejidad de diseñar una buena topología de red para los agentes que eligen egoístamente los enlaces que usan [21]. Esto está relacionado con el diseño del mecanismo, pero difiere significativamente en que el diseñador solo ha restringido el control sobre las reglas del juego porque no hay fiesta que pueda imponer el resultado (o pagos secundarios). Además, no hay informes explícitos de preferencias.9. Conclusiones y la investigación futura a menudo, se debe elegir un resultado sobre la base de las preferencias reportadas por un grupo de agentes. La dificultad clave es que los agentes pueden informar sus preferencias de forma no sincera para hacer que el resultado elegido sea más favorable para ellos mismos. El diseño del mecanismo es el arte de diseñar las reglas del juego para que los agentes estén motivados para informar sus preferencias sinceramente, y se elige un resultado deseable. En un mecanismo automatizado recientemente emergente, un mecanismo automatizado, un mecanismo, se calcula para la configuración de agregación de preferencia específica a mano. Esto tiene varias ventajas, 139, pero la desventaja es que el problema de optimización del diseño del mecanismo debe resolverse de nuevo cada vez. A diferencia del trabajo anterior en el diseño de mecanismo automatizado que estudió un diseñador benevolente, en este documento estudiamos problemas de diseño de mecanismo automatizado donde el diseñador es una configuración interestada mucho más relevante para el comercio electrónico. En este entorno, el centro solo se preocupa por qué resultado se elige y qué pagos se hacen. La razón por la que las preferencias de los agentes son relevantes es que el centro está limitado a hacer que cada agente al menos fuera tan bien como el agente habría sido si no hubiera participado en el mecanismo. En este entorno, demostramos que diseñar un mecanismo determinista óptimo es completar NP en dos casos especiales importantes: cuando el centro solo está interesado en los pagos realizados, y cuando los pagos no son posibles y el centro solo está interesado en el resultadoelegido. Estos resultados de dureza implican dureza en todas las configuraciones de diseño de mecanismo automatizado más general con un diseñador interesado. Los resultados de la dureza se aplican si las restricciones de racionalidad individual (participación) se aplican exámenes intermedios o ex post, y si el concepto de solución es la implementación de estrategias dominantes o la implementación de equilibrio de bayes-nash. Luego demostramos que permitir la aleatorización en el mecanismo hace que el problema de diseño en todas estas configuraciones sea computacionalmente fácil. Finalmente, demostramos que el problema de la AMD que la maximiza el pago está estrechamente relacionado con una variante interesante del problema de diseño de subasta combinatorial óptimo (que maximiza los ingresos), donde los postores tienen preferencias solo. Demostramos que aquí también, diseñar un mecanismo determinista óptimo es NP complete incluso con un agente, pero diseñar un mecanismo aleatorizado óptimo es fácil. La investigación futura incluye estudiar el diseño del mecanismo automatizado con un diseñador interesado en entornos más restringidos, como subastas (donde el objetivo de los diseñadores puede incluir preferencias sobre qué postor debe recibir el bien, así como los pagos). También queremos estudiar la complejidad del diseño de mecanismo automatizado en la configuración donde los espacios de resultado y tipo tienen una estructura especial para que puedan representarse de manera más concisa. Finalmente, planeamos ensamblar un conjunto de datos de problemas de diseño del mecanismo del mundo real, tanto histórico como de corriente, y aplicar el diseño de mecanismo automatizado a esos problemas.10. Referencias [1] M. Armstrong. Subastas óptimas de objetos múltiples. Review of Economic Studies, 67: 455-481, 2000. [2] K. Arrow. La doctrina de los derechos de propiedad y la revelación de la demanda bajo información incompleta. En M. Boskin, editor, economía y bienestar humano. New York Academic Press, 1979. [3] C. Avery y T. Hendershott. Bundling y subastas óptimas de múltiples productos. Review of Economic Studies, 67: 483-497, 2000. [4] E. H. Clarke. Precio multiparte de bienes públicos. Public Choice, 11: 17-33, 1971. [5] V. Conitzer y T. Sandholm. Complejidad del diseño del mecanismo. En Actas de la 18ª Conferencia Anual sobre Incertidumbre en Inteligencia Artificial (UAI-02), páginas 103-110, Edmonton, Canadá, 2002. [6] V. Conitzer y T. Sandholm. Diseño de mecanismo automatizado: resultados de complejidad derivados del entorno de un solo agente. En Actas de la 5ta Conferencia Internacional sobre Comercio Electrónico (ICIC-03), páginas 17-24, Pittsburgh, PA, EE. UU., 2003. [7] V. Conitzer y T. Sandholm. Críticas computacionales del principio de revelación. En Actas de la Conferencia ACM sobre Comercio Electrónico (ACM-EC), Nueva York, NY, 2004. Papel corto. La versión de longitud completa apareció en el taller de AAMAS-03 en Comercio Electrónico mediado por agente (AMEC).[8] C. Daspremont y L. A. G´erard-Varet. Incentivos e información incompleta. Journal of Public Economics, 11: 25-45, 1979. [9] J. Feigenbaum, C. Papadimitriou y S. Shenker. Compartir el costo de las transmisiones de muliticast. Journal of Computer and System Sciences, 63: 21-41, 2001. Versión temprana en las actas del Simposio ACM anual sobre Teoría de la Computación (STOC), 2000. [10] A. Gibbard. Manipulación de esquemas de votación. Econometrica, 41: 587-602, 1973. [11] T. Groves. Incentivos en equipos. Econometrica, 41: 617-631, 1973. [12] J. Hershberger y S. Suri. Precios de Vickrey y caminos más cortos: ¿Qué vale la ventaja? En Actas del Simposio Anual sobre Fundamentos de la Computación (FOCS), 2001. [13] L. Khachiyan. Un algoritmo polinomial en la programación lineal. Matemáticas soviéticas. Doklady, 20: 191-194, 1979. [14] R. Kohli, R. Krishnamurthi y P. Mirchandani. El problema mínimo de satisfilidad. Siam Journal of Discrete Mathematics, 7 (2): 275-283, 1994. [15] D. Lehmann, L. I. Ocallaghan e Y. Shoham. Revelación de la verdad en subastas combinatorias rápidas, aproximadamente eficientes. Journal of the ACM, 49 (5): 577-602, 2002. La versión temprana apareció en Actas de la Conferencia ACM sobre Comercio Electrónico (ACM-EC), 1999. [16] A. Mas-Colell, M. Whinston y J. R. Green. Teoría microeconómica. Oxford University Press, 1995. [17] E. S. Maskin y J. Riley. Subastas óptimas de unidades múltiples. En F. Hahn, editor, Economía de los mercados, información y juegos faltantes, Capítulo 14, páginas 312-335. Clarendon Press, Oxford, 1989. [18] R. Myerson. Diseño de subasta óptimo. Matemáticas de Operation Research, 6: 58-73, 1981. [19] N. Nisan y A. Ronen. Mecanismos VCG computacionalmente factibles. En Actas de la Conferencia ACM sobre Comercio Electrónico (ACM-EC), páginas 242-252, Minneapolis, MN, 2000. [20] N. Nisan y A. Ronen. Diseño de mecanismo algorítmico. Juegos y comportamiento económico, 35: 166-196, 2001. Versión temprana en las actas del Simposio ACM anual sobre Teoría de la Computación (STOC), 1999. [21] T. Roughgarden. Diseñar redes para usuarios egoístas es difícil. En Actas del Simposio Anual sobre Fundamentos de la Computación (FOCS), 2001. [22] T. Sandholm. Problemas en subastas computacionales de Vickrey. International Journal of Electronic Commerce, 4 (3): 107-129, 2000. Número especial en 140 aplicando agentes inteligentes para el comercio electrónico. Una versión breve y temprana apareció en la Segunda Conferencia Internacional sobre Sistemas de Multi-Agentes (ICMA), páginas 299-306, 1996. [23] M. A. Satterthwaite. Condiciones a prueba de estrategias y flechas: teoremas de existencia y correspondencia para procedimientos de votación y funciones de bienestar social. Journal of Economic Theory, 10: 187-217, 1975. [24] W. Vickrey. Contrapeculación, subastas y licitaciones selladas competitivas. Journal of Finance, 16: 8-37, 1961. [25] R. V. Vohra. Problemas de investigación en subastas combinatorias. Mimeo, versión 29 de octubre de 2001. 141",
    "original_sentences": [
        "Self-interested Automated Mechanism Design and Implications for Optimal Combinatorial Auctions∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT Often, an outcome must be chosen on the basis of the preferences reported by a group of agents.",
        "The key difficulty is that the agents may report their preferences insincerely to make the chosen outcome more favorable to themselves.",
        "Mechanism design is the art of designing the rules of the game so that the agents are motivated to report their preferences truthfully, and a desirable outcome is chosen.",
        "In a recently proposed approach-called automated mechanism design-a mechanism is computed for the preference aggregation setting at hand.",
        "This has several advantages, but the downside is that the mechanism design optimization problem needs to be solved anew each time.",
        "Unlike the earlier work on automated mechanism design that studied a benevolent designer, in this paper we study automated mechanism design problems where the designer is self-interested.",
        "In this case, the center cares only about which outcome is chosen and what payments are made to it.",
        "The reason that the agents preferences are relevant is that the center is constrained to making each agent at least as well off as the agent would have been had it not participated in the mechanism.",
        "In this setting, we show that designing optimal deterministic mechanisms is NP-complete in two important special cases: when the center is interested only in the payments made to it, and when payments are not possible and the center is interested only in the outcome chosen.",
        "We then show how allowing for randomization in the mechanism makes problems in this setting computationally easy.",
        "Finally, we show that the payment-maximizing AMD problem is closely related to an interesting variant of the optimal (revenuemaximizing) combinatorial auction design problem, where the bidders have best-only preferences.",
        "We show that here, too, designing an optimal deterministic auction is NPcomplete, but designing an optimal randomized auction is easy.",
        "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
        "INTRODUCTION In multiagent settings, often an outcome must be chosen on the basis of the preferences reported by a group of agents.",
        "Such outcomes could be potential presidents, joint plans, allocations of goods or resources, etc.",
        "The preference aggregator generally does not know the agents preferences a priori.",
        "Rather, the agents report their preferences to the coordinator.",
        "Unfortunately, an agent may have an incentive to misreport its preferences in order to mislead the mechanism into selecting an outcome that is more desirable to the agent than the outcome that would be selected if the agent revealed its preferences truthfully.",
        "Such manipulation is undesirable because preference aggregation mechanisms are tailored to aggregate preferences in a socially desirable way, and if the agents reveal their preferences insincerely, a socially undesirable outcome may be chosen.",
        "Manipulability is a pervasive problem across preference aggregation mechanisms.",
        "A seminal negative result, the Gibbard-Satterthwaite theorem, shows that under any nondictatorial preference aggregation scheme, if there are at least 3 possible outcomes, there are preferences under which an agent is better off reporting untruthfully [10, 23]. (A preference aggregation scheme is called dictatorial if one of the agents dictates the outcome no matter what preferences the other agents report.)",
        "What the aggregator would like to do is design a preference aggregation mechanism so that 1) the self-interested agents are motivated to report their preferences truthfully, and 2) the mechanism chooses an outcome that is desirable from the perspective of some objective.",
        "This is the classic setting of mechanism design in game theory.",
        "In this paper, we study the case where the designer is self-interested, that is, the designer does not directly care about how the out132 come relates to the agents preferences, but is rather concerned with its own agenda for which outcome should be chosen, and with maximizing payments to itself.",
        "This is the mechanism design setting most relevant to electronic commerce.",
        "In the case where the mechanism designer is interested in maximizing some notion of social welfare, the importance of collecting the agents preferences is clear.",
        "It is perhaps less obvious why they should be collected when the designer is self-interested and hence its objective is not directly related to the agents preferences.",
        "The reason for this is that often the agents preferences impose limits on how the designer chooses the outcome and payments.",
        "The most common such constraint is that of individual rationality (IR), which means that the mechanism cannot make any agent worse off than the agent would have been had it not participated in the mechanism.",
        "For instance, in the setting of optimal auction design, the designer (auctioneer) is only concerned with how much revenue is collected, and not per se with how well the allocation of the good (or goods) corresponds to the agents preferences.",
        "Nevertheless, the designer cannot force an agent to pay more than its valuation for the bundle of goods allocated to it.",
        "Therefore, even a self-interested designer will choose an outcome that makes the agents reasonably well off.",
        "On the other hand, the designer will not necessarily choose a social welfare maximizing outcome.",
        "For example, if the designer always chooses an outcome that maximizes social welfare with respect to the reported preferences, and forces each agent to pay the difference between the utility it has now and the utility it would have had if it had not participated in the mechanism, it is easy to see that agents may have an incentive to misreport their preferences-and this may actually lead to less revenue being collected.",
        "Indeed, one of the counterintuitive results of optimal auction design theory is that sometimes the good is allocated to nobody even when the auctioneer has a reservation price of 0.",
        "Classical mechanism design provides some general mechanisms, which, under certain assumptions, satisfy some notion of nonmanipulability and maximize some objective.",
        "The upside of these mechanisms is that they do not rely on (even probabilistic) information about the agents preferences (e.g., the Vickrey-Clarke-Groves (VCG) mechanism [24, 4, 11]), or they can be easily applied to any probability distribution over the preferences (e.g., the dAGVA mechanism [8, 2], the Myerson auction [18], and the Maskin-Riley multi-unit auction [17]).",
        "However, the general mechanisms also have significant downsides: • The most famous and most broadly applicable general mechanisms, VCG and dAGVA, only maximize social welfare.",
        "If the designer is self-interested, as is the case in many electronic commerce settings, these mechanisms do not maximize the designers objective. • The general mechanisms that do focus on a selfinterested designer are only applicable in very restricted settings-such as Myersons expected revenue maximizing auction for selling a single item, and Maskin and Rileys expected revenue maximizing auction for selling multiple identical units of an item. • Even in the restricted settings in which these mechanisms apply, the mechanisms only allow for payment maximization.",
        "In practice, the designer may also be interested in the outcome per se.",
        "For example, an auctioneer may care which bidder receives the item. • It is often assumed that side payments can be used to tailor the agents incentives, but this is not always practical.",
        "For example, in barter-based electronic marketplaces-such as Recipco, firstbarter.com, BarterOne, and Intagio-side payments are not allowed.",
        "Furthermore, among software agents, it might be more desirable to construct mechanisms that do not rely on the ability to make payments, because many software agents do not have the infrastructure to make payments.",
        "In contrast, we follow a recent approach where the mechanism is designed automatically for the specific problem at hand.",
        "This approach addresses all of the downsides listed above.",
        "We formulate the mechanism design problem as an optimization problem.",
        "The input is characterized by the number of agents, the agents possible types (preferences), and the aggregators prior distributions over the agents types.",
        "The output is a nonmanipulable mechanism that is optimal with respect to some objective.",
        "This approach is called automated mechanism design.",
        "The automated mechanism design approach has four advantages over the classical approach of designing general mechanisms.",
        "First, it can be used even in settings that do not satisfy the assumptions of the classical mechanisms (such as availability of side payments or that the objective is social welfare).",
        "Second, it may allow one to circumvent impossibility results (such as the Gibbard-Satterthwaite theorem) which state that there is no mechanism that is desirable across all preferences.",
        "When the mechanism is designed for the setting at hand, it does not matter that it would not work more generally.",
        "Third, it may yield better mechanisms (in terms of stronger nonmanipulability guarantees and/or better outcomes) than classical mechanisms because the mechanism capitalizes on the particulars of the setting (the probabilistic information that the designer has about the agents types).",
        "Given the vast amount of information that parties have about each other today, this approach is likely to lead to tremendous savings over classical mechanisms, which largely ignore that information.",
        "For example, imagine a company automatically creating its procurement mechanism based on statistical knowledge about its suppliers, rather than using a classical descending procurement auction.",
        "Fourth, the burden of design is shifted from humans to a machine.",
        "However, automated mechanism design requires the mechanism design optimization problem to be solved anew for each setting.",
        "Hence its computational complexity becomes a key issue.",
        "Previous research has studied this question for benevolent designers-that wish to maximize, for example, social welfare [5, 6].",
        "In this paper we study the computational complexity of automated mechanism design in the case of a self-interested designer.",
        "This is an important setting for automated mechanism design due to the shortage of general mechanisms in this area, and the fact that in most e-commerce settings the designer is self-interested.",
        "We also show that this problem is closely related to a particular optimal (revenue-maximizing) combinatorial auction design problem. 133 The rest of this paper is organized as follows.",
        "In Section 2, we justify the focus on nonmanipulable mechanisms.",
        "In Section 3, we define the problem we study.",
        "In Section 4, we show that designing an optimal deterministic mechanism is NP-complete even when the designer only cares about the payments made to it.",
        "In Section 5, we show that designing an optimal deterministic mechanism is also NP-complete when payments are not possible and the designer is only interested in the outcome chosen.",
        "In Section 6, we show that an optimal randomized mechanism can be designed in polynomial time even in the general case.",
        "Finally, in Section 7, we show that for designing optimal combinatorial auctions under best-only preferences, our results on AMD imply that this problem is NP-complete for deterministic auctions, but easy for randomized auctions. 2.",
        "JUSTIFYING THE FOCUS ON NONMANIPULABLE MECHANISMS Before we define the computational problem of automated mechanism design, we should justify our focus on nonmanipulable mechanisms.",
        "After all, it is not immediately obvious that there are no manipulable mechanisms that, even when agents report their types strategically and hence sometimes untruthfully, still reach better outcomes (according to whatever objective we use) than any nonmanipulable mechanism.",
        "This does, however, turn out to be the case: given any mechanism, we can construct a nonmanipulable mechanism whose performance is identical, as follows.",
        "We build an interface layer between the agents and the original mechanism.",
        "The agents report their preferences (or types) to the interface layer; subsequently, the interface layer inputs into the original mechanism the types that the agents would have strategically reported to the original mechanism, if their types were as declared to the interface layer.",
        "The resulting outcome is the outcome of the new mechanism.",
        "Since the interface layer acts strategically on each agents behalf, there is never an incentive to report falsely to the interface layer; and hence, the types reported by the interface layer are the strategic types that would have been reported without the interface layer, so the results are exactly as they would have been with the original mechanism.",
        "This argument is known in the mechanism design literature as the revelation principle [16]. (There are computational difficulties with applying the revelation principle in large combinatorial outcome and type spaces [7, 22].",
        "However, because here we focus on flatly represented outcome and type spaces, this is not a concern here.)",
        "Given this, we can focus on truthful mechanisms in the rest of the paper. 3.",
        "DEFINITIONS We now formalize the automated mechanism design setting.",
        "Definition 1.",
        "In an automated mechanism design setting, we are given: • a finite set of outcomes O; • a finite set of N agents; • for each agent i, 1. a finite set of types Θi, 2. a probability distribution γi over Θi (in the case of correlated types, there is a single joint distribution γ over Θ1 × . . . × ΘN ), and 3. a utility function ui : Θi × O → R; 1 • An objective function whose expectation the designer wishes to maximize.",
        "There are many possible objective functions the designer might have, for example, social welfare (where the designer seeks to maximize the sum of the agents utilities), or the minimum utility of any agent (where the designer seeks to maximize the worst utility had by any agent).",
        "In both of these cases, the designer is benevolent, because the designer, in some sense, is pursuing the agents collective happiness.",
        "However, in this paper, we focus on the case of a self-interested designer.",
        "A self-interested designer cares only about the outcome chosen (that is, the designer does not care how the outcome relates to the agents preferences, but rather has a fixed preference over the outcomes), and about the net payments made by the agents, which flow to the designer.",
        "Definition 2.",
        "A self-interested designer has an objective function given by g(o) + N i=1 πi, where g : O → R indicates the designers own preference over the outcomes, and πi is the payment made by agent i.",
        "In the case where g = 0 everywhere, the designer is said to be payment maximizing.",
        "In the case where payments are not possible, g constitutes the objective function by itself.",
        "We now define the kinds of mechanisms under study.",
        "By the revelation principle, we can restrict attention to truthful, direct revelation mechanisms, where agents report their types directly and never have an incentive to misreport them.",
        "Definition 3.",
        "We consider the following kinds of mechanism: • A deterministic mechanism without payments consists of an outcome selection function o : Θ1 × Θ2 × . . . × ΘN → O. • A randomized mechanism without payments consists of a distribution selection function p : Θ1 × Θ2 × . . . × ΘN → P(O), where P(O) is the set of probability distributions over O. • A deterministic mechanism with payments consists of an outcome selection function o : Θ1 ×Θ2 ×. . .×ΘN → O and for each agent i, a payment selection function πi : Θ1 × Θ2 × . . . × ΘN → R, where πi(θ1, . . . , θN ) gives the payment made by agent i when the reported types are θ1, . . . , θN . 1 Though this follows standard game theory notation [16], the fact that the agent has both a utility function and a type is perhaps confusing.",
        "The types encode the various possible preferences that the agent may turn out to have, and the agents type is not known to the aggregator.",
        "The utility function is common knowledge, but because the agents type is a parameter in the agents utility function, the aggregator cannot know what the agents utility is without knowing the agents type. 134 • A randomized mechanism with payments consists of a distribution selection function p : Θ1 × Θ2 × . . . × ΘN → P(O), and for each agent i, a payment selection function πi : Θ1 × Θ2 × . . . × ΘN → R.2 There are two types of constraint on the designer in building the mechanism. 3.1 Individual rationality (IR) constraints The first type of constraint is the following.",
        "The utility of each agent has to be at least as great as the agents fallback utility, that is, the utility that the agent would receive if it did not participate in the mechanism.",
        "Otherwise that agent would not participate in the mechanism-and no agents participation can ever hurt the mechanism designers objective because at worst, the mechanism can ignore an agent by pretending the agent is not there. (Furthermore, if no such constraint applied, the designer could simply make the agents pay an infinite amount.)",
        "This type of constraint is called an IR (individual rationality) constraint.",
        "There are three different possible IR constraints: ex ante, ex interim, and ex post, depending on what the agent knows about its own type and the others types when deciding whether to participate in the mechanism.",
        "Ex ante IR means that the agent would participate if it knew nothing at all (not even its own type).",
        "We will not study this concept in this paper.",
        "Ex interim IR means that the agent would always participate if it knew only its own type, but not those of the others.",
        "Ex post IR means that the agent would always participate even if it knew everybodys type.",
        "We will define the latter two notions of IR formally.",
        "First, we need to formalize the concept of the fallback outcome.",
        "We assume that each agents fallback utility is zero for each one of its types.",
        "This is without loss of generality because we can add a constant term to an agents utility function (for a given type), without affecting the decision-making behavior of that expected utility maximizing agent [16].",
        "Definition 4.",
        "In any automated mechanism design setting with an IR constraint, there is a fallback outcome o0 ∈ O where, for any agent i and any type θi ∈ Θi, we have ui(θi, o0) = 0. (Additionally, in the case of a self-interested designer, g(o0) = 0.)",
        "We can now to define the notions of individual rationality.",
        "Definition 5.",
        "Individual rationality (IR) is defined by: • A deterministic mechanism is ex interim IR if for any agent i, and any type θi ∈ Θi, we have E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, .., θN ))−πi(θ1, .., θN )] ≥ 0.",
        "A randomized mechanism is ex interim IR if for any agent i, and any type θi ∈ Θi, we have E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,..,θn [ui(θi, o)−πi(θ1, .., θN )] ≥ 0. • A deterministic mechanism is ex post IR if for any agent i, and any type vector (θ1, . . . , θN ) ∈ Θ1 × . . . × ΘN , we have ui(θi, o(θ1, . . . , θN )) − πi(θ1, . . . , θN ) ≥ 0. 2 We do not randomize over payments because as long as the agents and the designer are risk neutral with respect to payments, that is, their utility is linear in payments, there is no reason to randomize over payments.",
        "A randomized mechanism is ex post IR if for any agent i, and any type vector (θ1, . . . , θN ) ∈ Θ1 × . . . × ΘN , we have Eo|θ1,..,θn [ui(θi, o) − πi(θ1, .., θN )] ≥ 0.",
        "The terms involving payments can be left out in the case where payments are not possible. 3.2 Incentive compatibility (IC) constraints The second type of constraint says that the agents should never have an incentive to misreport their type (as justified above by the revelation principle).",
        "For this type of constraint, the two most common variants (or solution concepts) are implementation in dominant strategies, and implementation in Bayes-Nash equilibrium.",
        "Definition 6.",
        "Given an automated mechanism design setting, a mechanism is said to implement its outcome and payment functions in dominant strategies if truthtelling is always optimal even when the types reported by the other agents are already known.",
        "Formally, for any agent i, any type vector (θ1, . . . , θi, . . . , θN ) ∈ Θ1 × . . . × Θi × . . . × ΘN , and any alternative type report ˆθi ∈ Θi, in the case of deterministic mechanisms we have ui(θi, o(θ1, . . . , θi, . . . , θN )) − πi(θ1, . . . , θi, . . . , θN ) ≥ ui(θi, o(θ1, . . . , ˆθi, . . . , θN )) − πi(θ1, . . . , ˆθi, . . . , θN ).",
        "In the case of randomized mechanisms we have Eo|θ1,..,θi,..,θn [ui(θi, o) − πi(θ1, . . . , θi, . . . , θN )] ≥ Eo|θ1,.., ˆθi,..,θn [ui(θi, o) − πi(θ1, . . . , ˆθi, . . . , θN )].",
        "The terms involving payments can be left out in the case where payments are not possible.",
        "Thus, in dominant strategies implementation, truthtelling is optimal regardless of what the other agents report.",
        "If it is optimal only given that the other agents are truthful, and given that one does not know the other agents types, we have implementation in Bayes-Nash equilibrium.",
        "Definition 7.",
        "Given an automated mechanism design setting, a mechanism is said to implement its outcome and payment functions in Bayes-Nash equilibrium if truthtelling is always optimal to an agent when that agent does not yet know anything about the other agents types, and the other agents are telling the truth.",
        "Formally, for any agent i, any type θi ∈ Θi, and any alternative type report ˆθi ∈ Θi, in the case of deterministic mechanisms we have E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, . . . , θi, . . . , θN ))− πi(θ1, . . . , θi, . . . , θN )] ≥ E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, . . . , ˆθi, . . . , θN ))− πi(θ1, . . . , ˆθi, . . . , θN )].",
        "In the case of randomized mechanisms we have E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,..,θi,..,θn [ui(θi, o)− πi(θ1, . . . , θi, . . . , θN )] ≥ E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,.., ˆθi,..,θn [ui(θi, o)− πi(θ1, . . . , ˆθi, . . . , θN )].",
        "The terms involving payments can be left out in the case where payments are not possible. 135 3.3 Automated mechanism design We can now define the computational problem we study.",
        "Definition 8. (AUTOMATED-MECHANISM-DESIGN (AMD)) We are given: • an automated mechanism design setting, • an IR notion (ex interim, ex post, or none), • a solution concept (dominant strategies or Bayes-Nash), • whether payments are possible, • whether randomization is possible, • (in the decision variant of the problem) a target value G. We are asked whether there exists a mechanism of the specified kind (in terms of payments and randomization) that satisfies both the IR notion and the solution concept, and gives an expected value of at least G for the objective.",
        "An interesting special case is the setting where there is only one agent.",
        "In this case, the reporting agent always knows everything there is to know about the other agents types-because there are no other agents.",
        "Since ex post and ex interim IR only differ on what an agent is assumed to know about other agents types, the two IR concepts coincide here.",
        "Also, because implementation in dominant strategies and implementation in Bayes-Nash equilibrium only differ on what an agent is assumed to know about other agents types, the two solution concepts coincide here.",
        "This observation will prove to be a useful tool in proving hardness results: if we prove computational hardness in the singleagent setting, this immediately implies hardness for both IR concepts, for both solution concepts, for any number of agents. 4.",
        "PAYMENT-MAXIMIZINGDETERMINISTIC AMD IS HARD In this section we demonstrate that it is NP-complete to design a deterministic mechanism that maximizes the expected sum of the payments collected from the agents.",
        "We show that this problem is hard even in the single-agent setting, thereby immediately showing it hard for both IR concepts, for both solution concepts.",
        "To demonstrate NPhardness, we reduce from the MINSAT problem.",
        "Definition 9 (MINSAT).",
        "We are given a formula φ in conjunctive normal form, represented by a set of Boolean variables V and a set of clauses C, and an integer K (K < |C|).",
        "We are asked whether there exists an assignment to the variables in V such that at most K clauses in φ are satisfied.",
        "MINSAT was recently shown to be NP-complete [14].",
        "We can now present our result.",
        "Theorem 1.",
        "Payment-maximizing deterministic AMD is NP-complete, even for a single agent, even with a uniform distribution over types.",
        "Proof.",
        "It is easy to show that the problem is in NP.",
        "To show NP-hardness, we reduce an arbitrary MINSAT instance to the following single-agent payment-maximizing deterministic AMD instance.",
        "Let the agents type set be Θ = {θc : c ∈ C} ∪ {θv : v ∈ V }, where C is the set of clauses in the MINSAT instance, and V is the set of variables.",
        "Let the probability distribution over these types be uniform.",
        "Let the outcome set be O = {o0} ∪ {oc : c ∈ C} ∪ {ol : l ∈ L}, where L is the set of literals, that is, L = {+v : v ∈ V } ∪ {−v : v ∈ V }.",
        "Let the notation v(l) = v denote that v is the variable corresponding to the literal l, that is, l ∈ {+v, −v}.",
        "Let l ∈ c denote that the literal l occurs in clause c. Then, let the agents utility function be given by u(θc, ol) = |Θ| + 1 for all l ∈ L with l ∈ c; u(θc, ol) = 0 for all l ∈ L with l /∈ c; u(θc, oc) = |Θ| + 1; u(θc, oc ) = 0 for all c ∈ C with c = c ; u(θv, ol) = |Θ| for all l ∈ L with v(l) = v; u(θv, ol) = 0 for all l ∈ L with v(l) = v; u(θv, oc) = 0 for all c ∈ C. The goal of the AMD instance is G = |Θ| + |C|−K |Θ| , where K is the goal of the MINSAT instance.",
        "We show the instances are equivalent.",
        "First, suppose there is a solution to the MINSAT instance.",
        "Let the assignment of truth values to the variables in this solution be given by the function f : V → L (where v(f(v)) = v for all v ∈ V ).",
        "Then, for every v ∈ V , let o(θv) = of(v) and π(θv) = |Θ|.",
        "For every c ∈ C, let o(θc) = oc; let π(θc) = |Θ| + 1 if c is not satisfied in the MINSAT solution, and π(θc) = |Θ| if c is satisfied.",
        "It is straightforward to check that the IR constraint is satisfied.",
        "We now check that the agent has no incentive to misreport.",
        "If the agents type is some θv, then any other report will give it an outcome that is no better, for a payment that is no less, so it has no incentive to misreport.",
        "If the agents type is some θc where c is a satisfied clause, again, any other report will give it an outcome that is no better, for a payment that is no less, so it has no incentive to misreport.",
        "The final case to check is where the agents type is some θc where c is an unsatisfied clause.",
        "In this case, we observe that for none of the types, reporting it leads to an outcome ol for a literal l ∈ c, precisely because the clause is not satisfied in the MINSAT instance.",
        "Because also, no type besides θc leads to the outcome oc, reporting any other type will give an outcome with utility 0, while still forcing a payment of at least |Θ| from the agent.",
        "Clearly the agent is better off reporting truthfully, for a total utility of 0.",
        "This establishes that the agent never has an incentive to misreport.",
        "Finally, we show that the goal is reached.",
        "If s is the number of satisfied clauses in the MINSAT solution (so that s ≤ K), the expected payment from this mechanism is |V ||Θ|+s|Θ|+(|C|−s)(|Θ|+1) |Θ| ≥ |V ||Θ|+K|Θ|+(|C|−K)(|Θ|+1) |Θ| = |Θ| + |C|−K |Θ| = G. So there is a solution to the AMD instance.",
        "Now suppose there is a solution to the AMD instance, given by an outcome function o and a payment function π.",
        "First, suppose there is some v ∈ V such that o(θv) /∈ {o+v, o−v}.",
        "Then the utility that the agent derives from the given outcome for this type is 0, and hence, by IR, no payment can be extracted from the agent for this type.",
        "Because, again by IR, the maximum payment that can be extracted for any other type is |Θ| + 1, it follows that the maximum expected payment that could be obtained is at most (|Θ|−1)(|Θ|+1) |Θ| < |Θ| < G, contradicting that this is a solution to the AMD instance.",
        "It follows that in the solution to the AMD instance, for every v ∈ V , o(θv) ∈ {o+v, o−v}. 136 We can interpret this as an assignment of truth values to the variables: v is set to true if o(θv) = o+v, and to false if o(θv) = o−v.",
        "We claim this assignment is a solution to the MINSAT instance.",
        "By the IR constraint, the maximum payment we can extract from any type θv is |Θ|.",
        "Because there can be no incentives for the agent to report falsely, for any clause c satisfied by the given assignment, the maximum payment we can extract for the corresponding type θc is |Θ|. (For if we extracted more from this type, the agents utility in this case would be less than 1; and if v is the variable satisfying c in the assignment, so that o(θv) = ol where l occurs in c, then the agent would be better off reporting θv instead of the truthful report θc, to get an outcome worth |Θ|+1 to it while having to pay at most |Θ|.)",
        "Finally, for any unsatisfied clause c, by the IR constraint, the maximum payment we can extract for the corresponding type θc is |Θ| + 1.",
        "It follows that the expected payment from our mechanism is at most V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ , where s is the number of satisfied clauses.",
        "Because our mechanism achieves the goal, it follows that V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ ≥ G, which by simple algebraic manipulations is equivalent to s ≤ K. So there is a solution to the MINSAT instance.",
        "Because payment-maximizing AMD is just the special case of AMD for a self-interested designer where the designer has no preferences over the outcome chosen, this immediately implies hardness for the general case of AMD for a selfinterested designer where payments are possible.",
        "However, it does not yet imply hardness for the special case where payments are not possible.",
        "We will prove hardness in this case in the next section. 5.",
        "SELF-INTERESTED DETERMINISTIC AMD WITHOUT PAYMENTS IS HARD In this section we demonstrate that it is NP-complete to design a deterministic mechanism that maximizes the expectation of the designers objective when payments are not possible.",
        "We show that this problem is hard even in the single-agent setting, thereby immediately showing it hard for both IR concepts, for both solution concepts.",
        "Theorem 2.",
        "Without payments, deterministic AMD for a self-interested designer is NP-complete, even for a single agent, even with a uniform distribution over types.",
        "Proof.",
        "It is easy to show that the problem is in NP.",
        "To show NP-hardness, we reduce an arbitrary MINSAT instance to the following single-agent self-interested deterministic AMD without payments instance.",
        "Let the agents type set be Θ = {θc : c ∈ C} ∪ {θv : v ∈ V }, where C is the set of clauses in the MINSAT instance, and V is the set of variables.",
        "Let the probability distribution over these types be uniform.",
        "Let the outcome set be O = {o0} ∪ {oc : c ∈ C}∪{ol : l ∈ L}∪{o∗ }, where L is the set of literals, that is, L = {+v : v ∈ V } ∪ {−v : v ∈ V }.",
        "Let the notation v(l) = v denote that v is the variable corresponding to the literal l, that is, l ∈ {+v, −v}.",
        "Let l ∈ c denote that the literal l occurs in clause c. Then, let the agents utility function be given by u(θc, ol) = 2 for all l ∈ L with l ∈ c; u(θc, ol) = −1 for all l ∈ L with l /∈ c; u(θc, oc) = 2; u(θc, oc ) = −1 for all c ∈ C with c = c ; u(θc, o∗ ) = 1; u(θv, ol) = 1 for all l ∈ L with v(l) = v; u(θv, ol) = −1 for all l ∈ L with v(l) = v; u(θv, oc) = −1 for all c ∈ C; u(θv, o∗ ) = −1.",
        "Let the designers objective function be given by g(o∗ ) = |Θ|+1; g(ol) = |Θ| for all l ∈ L; g(oc) = |Θ| for all c ∈ C. The goal of the AMD instance is G = |Θ| + |C|−K |Θ| , where K is the goal of the MINSAT instance.",
        "We show the instances are equivalent.",
        "First, suppose there is a solution to the MINSAT instance.",
        "Let the assignment of truth values to the variables in this solution be given by the function f : V → L (where v(f(v)) = v for all v ∈ V ).",
        "Then, for every v ∈ V , let o(θv) = of(v).",
        "For every c ∈ C that is satisfied in the MINSAT solution, let o(θc) = oc; for every unsatisfied c ∈ C, let o(θc) = o∗ .",
        "It is straightforward to check that the IR constraint is satisfied.",
        "We now check that the agent has no incentive to misreport.",
        "If the agents type is some θv, it is getting the maximum utility for that type, so it has no incentive to misreport.",
        "If the agents type is some θc where c is a satisfied clause, again, it is getting the maximum utility for that type, so it has no incentive to misreport.",
        "The final case to check is where the agents type is some θc where c is an unsatisfied clause.",
        "In this case, we observe that for none of the types, reporting it leads to an outcome ol for a literal l ∈ c, precisely because the clause is not satisfied in the MINSAT instance.",
        "Because also, no type leads to the outcome oc, there is no outcome that the mechanism ever selects that would give the agent utility greater than 1 for type θc, and hence the agent has no incentive to report falsely.",
        "This establishes that the agent never has an incentive to misreport.",
        "Finally, we show that the goal is reached.",
        "If s is the number of satisfied clauses in the MINSAT solution (so that s ≤ K), then the expected value of the designers objective function is |V ||Θ|+s|Θ|+(|C|−s)(|Θ|+1) |Θ| ≥ |V ||Θ|+K|Θ|+(|C|−K)(|Θ|+1) |Θ| = |Θ| + |C|−K |Θ| = G. So there is a solution to the AMD instance.",
        "Now suppose there is a solution to the AMD instance, given by an outcome function o.",
        "First, suppose there is some v ∈ V such that o(θv) /∈ {o+v, o−v}.",
        "The only other outcome that the mechanism is allowed to choose under the IR constraint is o0.",
        "This has an objective value of 0, and because the highest value the objective function ever takes is |Θ| + 1, it follows that the maximum expected value of the objective function that could be obtained is at most (|Θ|−1)(|Θ|+1) |Θ| < |Θ| < G, contradicting that this is a solution to the AMD instance.",
        "It follows that in the solution to the AMD instance, for every v ∈ V , o(θv) ∈ {o+v, o−v}.",
        "We can interpret this as an assignment of truth values to the variables: v is set to true if o(θv) = o+v, and to false if o(θv) = o−v.",
        "We claim this assignment is a solution to the MINSAT instance.",
        "By the above, for any type θv, the value of the objective function in this mechanism will be |Θ|.",
        "For any clause c satisfied by the given assignment, the value of the objective function in the case where the agent reports type θc will be at most |Θ|. (This is because we cannot choose the outcome o∗ for such a type, as in this case the agent would have an incentive to report θv instead, where v is the variable satisfying c in the assignment (so that o(θv) = ol where l occurs in c).)",
        "Finally, for any unsatisfied clause c, the maximum value the objective function can take in the case where the agent reports type θc is |Θ| + 1, simply because this is the largest value the function ever takes.",
        "It follows that the expected value of the objective function for our mechanism is at most V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ , where s is the number of satisfied 137 clauses.",
        "Because our mechanism achieves the goal, it follows that V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ ≥ G, which by simple algebraic manipulations is equivalent to s ≤ K. So there is a solution to the MINSAT instance.",
        "Both of our hardness results relied on the constraint that the mechanism should be deterministic.",
        "In the next section, we show that the hardness of design disappears when we allow for randomization in the mechanism. 6.",
        "RANDOMIZED AMD FOR A SELFINTERESTED DESIGNER IS EASY We now show how allowing for randomization over the outcomes makes the problem of self-interested AMD tractable through linear programming, for any constant number of agents.",
        "Theorem 3.",
        "Self-interested randomized AMD with a constant number of agents is solvable in polynomial time by linear programming, both with and without payments, both for ex post and ex interim IR, and both for implementation in dominant strategies and for implementation in Bayes-Nash equilibrium-even if the types are correlated.",
        "Proof.",
        "Because linear programs can be solved in polynomial time [13], all we need to show is that the number of variables and equations in our program is polynomial for any constant number of agents-that is, exponential only in N. Throughout, for purposes of determining the size of the linear program, let T = maxi{|Θi|}.",
        "The variables of our linear program will be the probabilities (p(θ1, θ2, . . . , θN ))(o) (at most TN |O| variables) and the payments πi(θ1, θ2, . . . , θN ) (at most NTN variables). (We show the linear program for the case where payments are possible; the case without payments is easily obtained from this by simply omitting all the payment variables in the program, or by adding additional constraints forcing the payments to be 0.)",
        "First, we show the IR constraints.",
        "For ex post IR, we add the following (at most NTN ) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, and for every (θ1, θ2, . . . , θN ) ∈ Θ1 × Θ2 × . . . × ΘN , we add ( o∈O (p(θ1, θ2, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , θN ) ≥ 0.",
        "For ex interim IR, we add the following (at most NT) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, for every θi ∈ Θi, we add θ1,... ,θN γ(θ1, . . . , θN |θi)(( o∈O (p(θ1, θ2, . . . , θN ))(o)u(θi, o))− πi(θ1, θ2, . . . , θN )) ≥ 0.",
        "Now, we show the solution concept constraints.",
        "For implementation in dominant strategies, we add the following (at most NTN+1 ) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, for every (θ1, θ2, . . . , θi, . . . , θN ) ∈ Θ1 × Θ2 × . . . × ΘN , and for every alternative type report ˆθi ∈ Θi, we add the constraint ( o∈O (p(θ1, θ2, . . . , θi, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , θi, . . . , θN ) ≥ ( o∈O (p(θ1, θ2, . . . , ˆθi, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , ˆθi, . . . , θN ).",
        "Finally, for implementation in Bayes-Nash equilibrium, we add the following (at most NT2 ) constraints to the LP: • For every i ∈ {1, 2, ..., N}, for every θi ∈ Θi, and for every alternative type report ˆθi ∈ Θi, we add the constraint θ1,...,θN γ(θ1, ..., θN |θi)(( o∈O (p(θ1, θ2, ..., θi, ..., θN ))(o)u(θi, o)) − πi(θ1, θ2, ..., θi, ..., θN )) ≥ θ1,...,θN γ(θ1, ..., θN |θi)(( o∈O (p(θ1, θ2, ..., ˆθi, ..., θN ))(o)u(θi, o)) − πi(θ1, θ2, ..., ˆθi, ..., θN )).",
        "All that is left to do is to give the expression the designer is seeking to maximize, which is: • θ1,...,θN γ(θ1, ..., θN )(( o∈O (p(θ1, θ2, ..., θi, ..., θN ))(o)g(o)) + N i=1 πi(θ1, θ2, ..., θN )).",
        "As we indicated, the number of variables and constraints is exponential only in N, and hence the linear program is of polynomial size for constant numbers of agents.",
        "Thus the problem is solvable in polynomial time. 7.",
        "IMPLICATIONS FOR AN OPTIMAL COMBINATORIAL AUCTION DESIGN PROBLEM In this section, we will demonstrate some interesting consequences of the problem of automated mechanism design for a self-interested designer on designing optimal combinatorial auctions.",
        "Consider a combinatorial auction with a set S of items for sale.",
        "For any bundle B ⊆ S, let ui(θi, B) be bidder is utility for receiving bundle B when the bidders type is θi.",
        "The optimal auction design problem is to specify the rules of the auction so as to maximize expected revenue to the auctioneer. (By the revelation principle, without loss of generality, we can assume the auction is truthful.)",
        "The optimal auction design problem is solved for the case of a single item by the famous Myerson auction [18].",
        "However, designing optimal auctions in combinatorial auctions is a recognized open research problem [3, 25].",
        "The problem is open even if there are only two items for sale. (The twoitem case with a very special form of complementarity and no substitutability has been solved recently [1].)",
        "Suppose we have free disposal-items can be thrown away at no cost.",
        "Also, suppose that the bidders preferences have the following structure: whenever a bidder receives a bundle of items, the bidders utility for that bundle is determined by the best item in the bundle only. (We emphasize that 138 which item is the best is allowed to depend on the bidders type.)",
        "Definition 10.",
        "Bidder i is said to have best-only preferences over bundles of items if there exists a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s).",
        "We make the following useful observation in this setting: there is no sense in awarding a bidder more than one item.",
        "The reason is that if the bidder is reporting truthfully, taking all but the highest valued item away from the bidder will not hurt the bidder; and, by free disposal, doing so can only reduce the incentive for this bidder to falsely report this type, when the bidder actually has another type.",
        "We now show that the problem of designing a deterministic optimal auction here is NP-complete, by a reduction from the payment maximizing AMD problem!",
        "Theorem 4.",
        "Given an optimal combinatorial auction design problem under best-only preferences (given by a set of items S and for each bidder i, a finite type space Θi and a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s)), designing the optimal deterministic auction is NP-complete, even for a single bidder with a uniform distribution over types.",
        "Proof.",
        "The problem is in NP because we can nondeterministically generate an allocation rule, and then set the payments using linear programming.",
        "To show NP-hardness, we reduce an arbitrary paymentmaximizing deterministic AMD instance, with a single agent and a uniform distribution over types, to the following optimal combinatorial auction design problem instance with a single bidder with best-only preferences.",
        "For every outcome o ∈ O in the AMD instance (besides the outcome o0), let there be one item so ∈ S. Let the type space be the same, and let v(θi, so) = ui(θi, o) (where u is as specified in the AMD instance).",
        "Let the expected revenue target value be the same in both instances.",
        "We show the instances are equivalent.",
        "First suppose there exists a solution to the AMD instance, given by an outcome function and a payment function.",
        "Then, if the AMD solution chooses outcome o for a type, in the optimal auction solution, allocate {so} to the bidder for this type. (Unless o = o0, in which case we allocate {} to the bidder.)",
        "Let the payment functions be the same in both instances.",
        "Then, the utility that an agent receives for reporting a type (given the true type) in either solution is the same, so we have incentive compatibility in the optimal auction solution.",
        "Moreover, because the type distribution and the payment function are the same, the expected revenue to the auctioneer/designer is the same.",
        "It follows that there exists a solution to the optimal auction design instance.",
        "Now suppose there exists a solution to the optimal auction design instance.",
        "By the at-most-one-item observation, we can assume without loss of generality that the solution never allocates more than one item.",
        "Then, if the optimal auction solution allocates item so to the bidder for a type, in the AMD solution, let the mechanism choose outcome o for that type.",
        "If the optimal auction solution allocates nothing to the bidder for a type, in the AMD solution, let the mechanism choose outcome o0 for that type.",
        "Let the payment functions be the same.",
        "Then, the utility that an agent receives for reporting a type (given the true type) in either solution is the same, so we have incentive compatibility in the AMD solution.",
        "Moreover, because the type distribution and the payment function are the same, the expected revenue to the designer/auctioneer is the same.",
        "It follows that there exists a solution to the AMD instance.",
        "Fortunately, we can also carry through the easiness result for randomized mechanisms to this combinatorial auction setting-giving us one of the few known polynomial-time algorithms for an optimal combinatorial auction design problem.",
        "Theorem 5.",
        "Given an optimal combinatorial auction design problem under best-only preferences (given by a set of items S and for each bidder i, a finite type space Θi and a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s)), if the number of bidders is a constant k, then the optimal randomized auction can be designed in polynomial time. (For any IC and IR constraints.)",
        "Proof.",
        "By the at-most-one-item observation, we can without loss of generality restrict ourselves to allocations where each bidder receives at most one item.",
        "There are fewer than (|S| + 1)k such allocations-that is, a polynomial number of allocations.",
        "Because we can list the outcomes explicitly, we can simply solve this as a payment-maximizing AMD instance, with linear programming. 8.",
        "RELATED RESEARCH ON COMPLEXITY IN MECHANISM DESIGN There has been considerable recent interest in mechanism design in computer science.",
        "Some of it has focused on issues of computational complexity, but most of that work has strived toward designing mechanisms that are easy to execute (e.g. [20, 15, 19, 9, 12]), rather than studying the complexity of designing the mechanism.",
        "The closest piece of earlier work studied the complexity of automated mechanism design by a benevolent designer [5, 6].",
        "Roughgarden has studied the complexity of designing a good network topology for agents that selfishly choose the links they use [21].",
        "This is related to mechanism design, but differs significantly in that the designer only has restricted control over the rules of the game because there is no party that can impose the outcome (or side payments).",
        "Also, there is no explicit reporting of preferences. 9.",
        "CONCLUSIONS AND FUTURE RESEARCH Often, an outcome must be chosen on the basis of the preferences reported by a group of agents.",
        "The key difficulty is that the agents may report their preferences insincerely to make the chosen outcome more favorable to themselves.",
        "Mechanism design is the art of designing the rules of the game so that the agents are motivated to report their preferences truthfully, and a desirable outcome is chosen.",
        "In a recently emerging approach-called automated mechanism design-a mechanism is computed for the specific preference aggregation setting at hand.",
        "This has several advantages, 139 but the downside is that the mechanism design optimization problem needs to be solved anew each time.",
        "Unlike earlier work on automated mechanism design that studied a benevolent designer, in this paper we studied automated mechanism design problems where the designer is self-interesteda setting much more relevant for electronic commerce.",
        "In this setting, the center cares only about which outcome is chosen and what payments are made to it.",
        "The reason that the agents preferences are relevant is that the center is constrained to making each agent at least as well off as the agent would have been had it not participated in the mechanism.",
        "In this setting, we showed that designing an optimal deterministic mechanism is NP-complete in two important special cases: when the center is interested only in the payments made to it, and when payments are not possible and the center is interested only in the outcome chosen.",
        "These hardness results imply hardness in all more general automated mechanism design settings with a self-interested designer.",
        "The hardness results apply whether the individual rationality (participation) constraints are applied ex interim or ex post, and whether the solution concept is dominant strategies implementation or Bayes-Nash equilibrium implementation.",
        "We then showed that allowing randomization in the mechanism makes the design problem in all these settings computationally easy.",
        "Finally, we showed that the paymentmaximizing AMD problem is closely related to an interesting variant of the optimal (revenue-maximizing) combinatorial auction design problem, where the bidders have best-only preferences.",
        "We showed that here, too, designing an optimal deterministic mechanism is NP-complete even with one agent, but designing an optimal randomized mechanism is easy.",
        "Future research includes studying automated mechanism design with a self-interested designer in more restricted settings such as auctions (where the designers objective may include preferences about which bidder should receive the good-as well as payments).",
        "We also want to study the complexity of automated mechanism design in settings where the outcome and type spaces have special structure so they can be represented more concisely.",
        "Finally, we plan to assemble a data set of real-world mechanism design problems-both historical and current-and apply automated mechanism design to those problems. 10.",
        "REFERENCES [1] M. Armstrong.",
        "Optimal multi-object auctions.",
        "Review of Economic Studies, 67:455-481, 2000. [2] K. Arrow.",
        "The property rights doctrine and demand revelation under incomplete information.",
        "In M. Boskin, editor, Economics and human welfare.",
        "New York Academic Press, 1979. [3] C. Avery and T. Hendershott.",
        "Bundling and optimal auctions of multiple products.",
        "Review of Economic Studies, 67:483-497, 2000. [4] E. H. Clarke.",
        "Multipart pricing of public goods.",
        "Public Choice, 11:17-33, 1971. [5] V. Conitzer and T. Sandholm.",
        "Complexity of mechanism design.",
        "In Proceedings of the 18th Annual Conference on Uncertainty in Artificial Intelligence (UAI-02), pages 103-110, Edmonton, Canada, 2002. [6] V. Conitzer and T. Sandholm.",
        "Automated mechanism design: Complexity results stemming from the single-agent setting.",
        "In Proceedings of the 5th International Conference on Electronic Commerce (ICEC-03), pages 17-24, Pittsburgh, PA, USA, 2003. [7] V. Conitzer and T. Sandholm.",
        "Computational criticisms of the revelation principle.",
        "In Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), New York, NY, 2004.",
        "Short paper.",
        "Full-length version appeared in the AAMAS-03 workshop on Agent-Mediated Electronic Commerce (AMEC). [8] C. dAspremont and L. A. G´erard-Varet.",
        "Incentives and incomplete information.",
        "Journal of Public Economics, 11:25-45, 1979. [9] J. Feigenbaum, C. Papadimitriou, and S. Shenker.",
        "Sharing the cost of muliticast transmissions.",
        "Journal of Computer and System Sciences, 63:21-41, 2001.",
        "Early version in Proceedings of the Annual ACM Symposium on Theory of Computing (STOC), 2000. [10] A. Gibbard.",
        "Manipulation of voting schemes.",
        "Econometrica, 41:587-602, 1973. [11] T. Groves.",
        "Incentives in teams.",
        "Econometrica, 41:617-631, 1973. [12] J. Hershberger and S. Suri.",
        "Vickrey prices and shortest paths: What is an edge worth?",
        "In Proceedings of the Annual Symposium on Foundations of Computer Science (FOCS), 2001. [13] L. Khachiyan.",
        "A polynomial algorithm in linear programming.",
        "Soviet Math.",
        "Doklady, 20:191-194, 1979. [14] R. Kohli, R. Krishnamurthi, and P. Mirchandani.",
        "The minimum satisfiability problem.",
        "SIAM Journal of Discrete Mathematics, 7(2):275-283, 1994. [15] D. Lehmann, L. I. OCallaghan, and Y. Shoham.",
        "Truth revelation in rapid, approximately efficient combinatorial auctions.",
        "Journal of the ACM, 49(5):577-602, 2002.",
        "Early version appeared in Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), 1999. [16] A. Mas-Colell, M. Whinston, and J. R. Green.",
        "Microeconomic Theory.",
        "Oxford University Press, 1995. [17] E. S. Maskin and J. Riley.",
        "Optimal multi-unit auctions.",
        "In F. Hahn, editor, The Economics of Missing Markets, Information, and Games, chapter 14, pages 312-335.",
        "Clarendon Press, Oxford, 1989. [18] R. Myerson.",
        "Optimal auction design.",
        "Mathematics of Operation Research, 6:58-73, 1981. [19] N. Nisan and A. Ronen.",
        "Computationally feasible VCG mechanisms.",
        "In Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), pages 242-252, Minneapolis, MN, 2000. [20] N. Nisan and A. Ronen.",
        "Algorithmic mechanism design.",
        "Games and Economic Behavior, 35:166-196, 2001.",
        "Early version in Proceedings of the Annual ACM Symposium on Theory of Computing (STOC), 1999. [21] T. Roughgarden.",
        "Designing networks for selfish users is hard.",
        "In Proceedings of the Annual Symposium on Foundations of Computer Science (FOCS), 2001. [22] T. Sandholm.",
        "Issues in computational Vickrey auctions.",
        "International Journal of Electronic Commerce, 4(3):107-129, 2000.",
        "Special Issue on 140 Applying Intelligent Agents for Electronic Commerce.",
        "A short, early version appeared at the Second International Conference on Multi-Agent Systems (ICMAS), pages 299-306, 1996. [23] M. A. Satterthwaite.",
        "Strategy-proofness and Arrows conditions: existence and correspondence theorems for voting procedures and social welfare functions.",
        "Journal of Economic Theory, 10:187-217, 1975. [24] W. Vickrey.",
        "Counterspeculation, auctions, and competitive sealed tenders.",
        "Journal of Finance, 16:8-37, 1961. [25] R. V. Vohra.",
        "Research problems in combinatorial auctions.",
        "Mimeo, version Oct. 29, 2001. 141"
    ],
    "error_count": 0,
    "keys": {
        "mechanism design": {
            "translated_key": "diseño del mecanismo",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Self-interested Automated <br>mechanism design</br> and Implications for Optimal Combinatorial Auctions∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT Often, an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "The key difficulty is that the agents may report their preferences insincerely to make the chosen outcome more favorable to themselves.",
                "<br>mechanism design</br> is the art of designing the rules of the game so that the agents are motivated to report their preferences truthfully, and a desirable outcome is chosen.",
                "In a recently proposed approach-called automated <br>mechanism design</br>-a mechanism is computed for the preference aggregation setting at hand.",
                "This has several advantages, but the downside is that the <br>mechanism design</br> optimization problem needs to be solved anew each time.",
                "Unlike the earlier work on automated <br>mechanism design</br> that studied a benevolent designer, in this paper we study automated <br>mechanism design</br> problems where the designer is self-interested.",
                "In this case, the center cares only about which outcome is chosen and what payments are made to it.",
                "The reason that the agents preferences are relevant is that the center is constrained to making each agent at least as well off as the agent would have been had it not participated in the mechanism.",
                "In this setting, we show that designing optimal deterministic mechanisms is NP-complete in two important special cases: when the center is interested only in the payments made to it, and when payments are not possible and the center is interested only in the outcome chosen.",
                "We then show how allowing for randomization in the mechanism makes problems in this setting computationally easy.",
                "Finally, we show that the payment-maximizing AMD problem is closely related to an interesting variant of the optimal (revenuemaximizing) combinatorial auction design problem, where the bidders have best-only preferences.",
                "We show that here, too, designing an optimal deterministic auction is NPcomplete, but designing an optimal randomized auction is easy.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In multiagent settings, often an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "Such outcomes could be potential presidents, joint plans, allocations of goods or resources, etc.",
                "The preference aggregator generally does not know the agents preferences a priori.",
                "Rather, the agents report their preferences to the coordinator.",
                "Unfortunately, an agent may have an incentive to misreport its preferences in order to mislead the mechanism into selecting an outcome that is more desirable to the agent than the outcome that would be selected if the agent revealed its preferences truthfully.",
                "Such manipulation is undesirable because preference aggregation mechanisms are tailored to aggregate preferences in a socially desirable way, and if the agents reveal their preferences insincerely, a socially undesirable outcome may be chosen.",
                "Manipulability is a pervasive problem across preference aggregation mechanisms.",
                "A seminal negative result, the Gibbard-Satterthwaite theorem, shows that under any nondictatorial preference aggregation scheme, if there are at least 3 possible outcomes, there are preferences under which an agent is better off reporting untruthfully [10, 23]. (A preference aggregation scheme is called dictatorial if one of the agents dictates the outcome no matter what preferences the other agents report.)",
                "What the aggregator would like to do is design a preference aggregation mechanism so that 1) the self-interested agents are motivated to report their preferences truthfully, and 2) the mechanism chooses an outcome that is desirable from the perspective of some objective.",
                "This is the classic setting of <br>mechanism design</br> in game theory.",
                "In this paper, we study the case where the designer is self-interested, that is, the designer does not directly care about how the out132 come relates to the agents preferences, but is rather concerned with its own agenda for which outcome should be chosen, and with maximizing payments to itself.",
                "This is the <br>mechanism design</br> setting most relevant to electronic commerce.",
                "In the case where the mechanism designer is interested in maximizing some notion of social welfare, the importance of collecting the agents preferences is clear.",
                "It is perhaps less obvious why they should be collected when the designer is self-interested and hence its objective is not directly related to the agents preferences.",
                "The reason for this is that often the agents preferences impose limits on how the designer chooses the outcome and payments.",
                "The most common such constraint is that of individual rationality (IR), which means that the mechanism cannot make any agent worse off than the agent would have been had it not participated in the mechanism.",
                "For instance, in the setting of optimal auction design, the designer (auctioneer) is only concerned with how much revenue is collected, and not per se with how well the allocation of the good (or goods) corresponds to the agents preferences.",
                "Nevertheless, the designer cannot force an agent to pay more than its valuation for the bundle of goods allocated to it.",
                "Therefore, even a self-interested designer will choose an outcome that makes the agents reasonably well off.",
                "On the other hand, the designer will not necessarily choose a social welfare maximizing outcome.",
                "For example, if the designer always chooses an outcome that maximizes social welfare with respect to the reported preferences, and forces each agent to pay the difference between the utility it has now and the utility it would have had if it had not participated in the mechanism, it is easy to see that agents may have an incentive to misreport their preferences-and this may actually lead to less revenue being collected.",
                "Indeed, one of the counterintuitive results of optimal auction design theory is that sometimes the good is allocated to nobody even when the auctioneer has a reservation price of 0.",
                "Classical <br>mechanism design</br> provides some general mechanisms, which, under certain assumptions, satisfy some notion of nonmanipulability and maximize some objective.",
                "The upside of these mechanisms is that they do not rely on (even probabilistic) information about the agents preferences (e.g., the Vickrey-Clarke-Groves (VCG) mechanism [24, 4, 11]), or they can be easily applied to any probability distribution over the preferences (e.g., the dAGVA mechanism [8, 2], the Myerson auction [18], and the Maskin-Riley multi-unit auction [17]).",
                "However, the general mechanisms also have significant downsides: • The most famous and most broadly applicable general mechanisms, VCG and dAGVA, only maximize social welfare.",
                "If the designer is self-interested, as is the case in many electronic commerce settings, these mechanisms do not maximize the designers objective. • The general mechanisms that do focus on a selfinterested designer are only applicable in very restricted settings-such as Myersons expected revenue maximizing auction for selling a single item, and Maskin and Rileys expected revenue maximizing auction for selling multiple identical units of an item. • Even in the restricted settings in which these mechanisms apply, the mechanisms only allow for payment maximization.",
                "In practice, the designer may also be interested in the outcome per se.",
                "For example, an auctioneer may care which bidder receives the item. • It is often assumed that side payments can be used to tailor the agents incentives, but this is not always practical.",
                "For example, in barter-based electronic marketplaces-such as Recipco, firstbarter.com, BarterOne, and Intagio-side payments are not allowed.",
                "Furthermore, among software agents, it might be more desirable to construct mechanisms that do not rely on the ability to make payments, because many software agents do not have the infrastructure to make payments.",
                "In contrast, we follow a recent approach where the mechanism is designed automatically for the specific problem at hand.",
                "This approach addresses all of the downsides listed above.",
                "We formulate the <br>mechanism design</br> problem as an optimization problem.",
                "The input is characterized by the number of agents, the agents possible types (preferences), and the aggregators prior distributions over the agents types.",
                "The output is a nonmanipulable mechanism that is optimal with respect to some objective.",
                "This approach is called automated <br>mechanism design</br>.",
                "The automated <br>mechanism design</br> approach has four advantages over the classical approach of designing general mechanisms.",
                "First, it can be used even in settings that do not satisfy the assumptions of the classical mechanisms (such as availability of side payments or that the objective is social welfare).",
                "Second, it may allow one to circumvent impossibility results (such as the Gibbard-Satterthwaite theorem) which state that there is no mechanism that is desirable across all preferences.",
                "When the mechanism is designed for the setting at hand, it does not matter that it would not work more generally.",
                "Third, it may yield better mechanisms (in terms of stronger nonmanipulability guarantees and/or better outcomes) than classical mechanisms because the mechanism capitalizes on the particulars of the setting (the probabilistic information that the designer has about the agents types).",
                "Given the vast amount of information that parties have about each other today, this approach is likely to lead to tremendous savings over classical mechanisms, which largely ignore that information.",
                "For example, imagine a company automatically creating its procurement mechanism based on statistical knowledge about its suppliers, rather than using a classical descending procurement auction.",
                "Fourth, the burden of design is shifted from humans to a machine.",
                "However, automated <br>mechanism design</br> requires the <br>mechanism design</br> optimization problem to be solved anew for each setting.",
                "Hence its computational complexity becomes a key issue.",
                "Previous research has studied this question for benevolent designers-that wish to maximize, for example, social welfare [5, 6].",
                "In this paper we study the computational complexity of automated <br>mechanism design</br> in the case of a self-interested designer.",
                "This is an important setting for automated <br>mechanism design</br> due to the shortage of general mechanisms in this area, and the fact that in most e-commerce settings the designer is self-interested.",
                "We also show that this problem is closely related to a particular optimal (revenue-maximizing) combinatorial auction design problem. 133 The rest of this paper is organized as follows.",
                "In Section 2, we justify the focus on nonmanipulable mechanisms.",
                "In Section 3, we define the problem we study.",
                "In Section 4, we show that designing an optimal deterministic mechanism is NP-complete even when the designer only cares about the payments made to it.",
                "In Section 5, we show that designing an optimal deterministic mechanism is also NP-complete when payments are not possible and the designer is only interested in the outcome chosen.",
                "In Section 6, we show that an optimal randomized mechanism can be designed in polynomial time even in the general case.",
                "Finally, in Section 7, we show that for designing optimal combinatorial auctions under best-only preferences, our results on AMD imply that this problem is NP-complete for deterministic auctions, but easy for randomized auctions. 2.",
                "JUSTIFYING THE FOCUS ON NONMANIPULABLE MECHANISMS Before we define the computational problem of automated <br>mechanism design</br>, we should justify our focus on nonmanipulable mechanisms.",
                "After all, it is not immediately obvious that there are no manipulable mechanisms that, even when agents report their types strategically and hence sometimes untruthfully, still reach better outcomes (according to whatever objective we use) than any nonmanipulable mechanism.",
                "This does, however, turn out to be the case: given any mechanism, we can construct a nonmanipulable mechanism whose performance is identical, as follows.",
                "We build an interface layer between the agents and the original mechanism.",
                "The agents report their preferences (or types) to the interface layer; subsequently, the interface layer inputs into the original mechanism the types that the agents would have strategically reported to the original mechanism, if their types were as declared to the interface layer.",
                "The resulting outcome is the outcome of the new mechanism.",
                "Since the interface layer acts strategically on each agents behalf, there is never an incentive to report falsely to the interface layer; and hence, the types reported by the interface layer are the strategic types that would have been reported without the interface layer, so the results are exactly as they would have been with the original mechanism.",
                "This argument is known in the <br>mechanism design</br> literature as the revelation principle [16]. (There are computational difficulties with applying the revelation principle in large combinatorial outcome and type spaces [7, 22].",
                "However, because here we focus on flatly represented outcome and type spaces, this is not a concern here.)",
                "Given this, we can focus on truthful mechanisms in the rest of the paper. 3.",
                "DEFINITIONS We now formalize the automated <br>mechanism design</br> setting.",
                "Definition 1.",
                "In an automated <br>mechanism design</br> setting, we are given: • a finite set of outcomes O; • a finite set of N agents; • for each agent i, 1. a finite set of types Θi, 2. a probability distribution γi over Θi (in the case of correlated types, there is a single joint distribution γ over Θ1 × . . . × ΘN ), and 3. a utility function ui : Θi × O → R; 1 • An objective function whose expectation the designer wishes to maximize.",
                "There are many possible objective functions the designer might have, for example, social welfare (where the designer seeks to maximize the sum of the agents utilities), or the minimum utility of any agent (where the designer seeks to maximize the worst utility had by any agent).",
                "In both of these cases, the designer is benevolent, because the designer, in some sense, is pursuing the agents collective happiness.",
                "However, in this paper, we focus on the case of a self-interested designer.",
                "A self-interested designer cares only about the outcome chosen (that is, the designer does not care how the outcome relates to the agents preferences, but rather has a fixed preference over the outcomes), and about the net payments made by the agents, which flow to the designer.",
                "Definition 2.",
                "A self-interested designer has an objective function given by g(o) + N i=1 πi, where g : O → R indicates the designers own preference over the outcomes, and πi is the payment made by agent i.",
                "In the case where g = 0 everywhere, the designer is said to be payment maximizing.",
                "In the case where payments are not possible, g constitutes the objective function by itself.",
                "We now define the kinds of mechanisms under study.",
                "By the revelation principle, we can restrict attention to truthful, direct revelation mechanisms, where agents report their types directly and never have an incentive to misreport them.",
                "Definition 3.",
                "We consider the following kinds of mechanism: • A deterministic mechanism without payments consists of an outcome selection function o : Θ1 × Θ2 × . . . × ΘN → O. • A randomized mechanism without payments consists of a distribution selection function p : Θ1 × Θ2 × . . . × ΘN → P(O), where P(O) is the set of probability distributions over O. • A deterministic mechanism with payments consists of an outcome selection function o : Θ1 ×Θ2 ×. . .×ΘN → O and for each agent i, a payment selection function πi : Θ1 × Θ2 × . . . × ΘN → R, where πi(θ1, . . . , θN ) gives the payment made by agent i when the reported types are θ1, . . . , θN . 1 Though this follows standard game theory notation [16], the fact that the agent has both a utility function and a type is perhaps confusing.",
                "The types encode the various possible preferences that the agent may turn out to have, and the agents type is not known to the aggregator.",
                "The utility function is common knowledge, but because the agents type is a parameter in the agents utility function, the aggregator cannot know what the agents utility is without knowing the agents type. 134 • A randomized mechanism with payments consists of a distribution selection function p : Θ1 × Θ2 × . . . × ΘN → P(O), and for each agent i, a payment selection function πi : Θ1 × Θ2 × . . . × ΘN → R.2 There are two types of constraint on the designer in building the mechanism. 3.1 Individual rationality (IR) constraints The first type of constraint is the following.",
                "The utility of each agent has to be at least as great as the agents fallback utility, that is, the utility that the agent would receive if it did not participate in the mechanism.",
                "Otherwise that agent would not participate in the mechanism-and no agents participation can ever hurt the mechanism designers objective because at worst, the mechanism can ignore an agent by pretending the agent is not there. (Furthermore, if no such constraint applied, the designer could simply make the agents pay an infinite amount.)",
                "This type of constraint is called an IR (individual rationality) constraint.",
                "There are three different possible IR constraints: ex ante, ex interim, and ex post, depending on what the agent knows about its own type and the others types when deciding whether to participate in the mechanism.",
                "Ex ante IR means that the agent would participate if it knew nothing at all (not even its own type).",
                "We will not study this concept in this paper.",
                "Ex interim IR means that the agent would always participate if it knew only its own type, but not those of the others.",
                "Ex post IR means that the agent would always participate even if it knew everybodys type.",
                "We will define the latter two notions of IR formally.",
                "First, we need to formalize the concept of the fallback outcome.",
                "We assume that each agents fallback utility is zero for each one of its types.",
                "This is without loss of generality because we can add a constant term to an agents utility function (for a given type), without affecting the decision-making behavior of that expected utility maximizing agent [16].",
                "Definition 4.",
                "In any automated <br>mechanism design</br> setting with an IR constraint, there is a fallback outcome o0 ∈ O where, for any agent i and any type θi ∈ Θi, we have ui(θi, o0) = 0. (Additionally, in the case of a self-interested designer, g(o0) = 0.)",
                "We can now to define the notions of individual rationality.",
                "Definition 5.",
                "Individual rationality (IR) is defined by: • A deterministic mechanism is ex interim IR if for any agent i, and any type θi ∈ Θi, we have E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, .., θN ))−πi(θ1, .., θN )] ≥ 0.",
                "A randomized mechanism is ex interim IR if for any agent i, and any type θi ∈ Θi, we have E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,..,θn [ui(θi, o)−πi(θ1, .., θN )] ≥ 0. • A deterministic mechanism is ex post IR if for any agent i, and any type vector (θ1, . . . , θN ) ∈ Θ1 × . . . × ΘN , we have ui(θi, o(θ1, . . . , θN )) − πi(θ1, . . . , θN ) ≥ 0. 2 We do not randomize over payments because as long as the agents and the designer are risk neutral with respect to payments, that is, their utility is linear in payments, there is no reason to randomize over payments.",
                "A randomized mechanism is ex post IR if for any agent i, and any type vector (θ1, . . . , θN ) ∈ Θ1 × . . . × ΘN , we have Eo|θ1,..,θn [ui(θi, o) − πi(θ1, .., θN )] ≥ 0.",
                "The terms involving payments can be left out in the case where payments are not possible. 3.2 Incentive compatibility (IC) constraints The second type of constraint says that the agents should never have an incentive to misreport their type (as justified above by the revelation principle).",
                "For this type of constraint, the two most common variants (or solution concepts) are implementation in dominant strategies, and implementation in Bayes-Nash equilibrium.",
                "Definition 6.",
                "Given an automated <br>mechanism design</br> setting, a mechanism is said to implement its outcome and payment functions in dominant strategies if truthtelling is always optimal even when the types reported by the other agents are already known.",
                "Formally, for any agent i, any type vector (θ1, . . . , θi, . . . , θN ) ∈ Θ1 × . . . × Θi × . . . × ΘN , and any alternative type report ˆθi ∈ Θi, in the case of deterministic mechanisms we have ui(θi, o(θ1, . . . , θi, . . . , θN )) − πi(θ1, . . . , θi, . . . , θN ) ≥ ui(θi, o(θ1, . . . , ˆθi, . . . , θN )) − πi(θ1, . . . , ˆθi, . . . , θN ).",
                "In the case of randomized mechanisms we have Eo|θ1,..,θi,..,θn [ui(θi, o) − πi(θ1, . . . , θi, . . . , θN )] ≥ Eo|θ1,.., ˆθi,..,θn [ui(θi, o) − πi(θ1, . . . , ˆθi, . . . , θN )].",
                "The terms involving payments can be left out in the case where payments are not possible.",
                "Thus, in dominant strategies implementation, truthtelling is optimal regardless of what the other agents report.",
                "If it is optimal only given that the other agents are truthful, and given that one does not know the other agents types, we have implementation in Bayes-Nash equilibrium.",
                "Definition 7.",
                "Given an automated <br>mechanism design</br> setting, a mechanism is said to implement its outcome and payment functions in Bayes-Nash equilibrium if truthtelling is always optimal to an agent when that agent does not yet know anything about the other agents types, and the other agents are telling the truth.",
                "Formally, for any agent i, any type θi ∈ Θi, and any alternative type report ˆθi ∈ Θi, in the case of deterministic mechanisms we have E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, . . . , θi, . . . , θN ))− πi(θ1, . . . , θi, . . . , θN )] ≥ E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, . . . , ˆθi, . . . , θN ))− πi(θ1, . . . , ˆθi, . . . , θN )].",
                "In the case of randomized mechanisms we have E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,..,θi,..,θn [ui(θi, o)− πi(θ1, . . . , θi, . . . , θN )] ≥ E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,.., ˆθi,..,θn [ui(θi, o)− πi(θ1, . . . , ˆθi, . . . , θN )].",
                "The terms involving payments can be left out in the case where payments are not possible. 135 3.3 Automated <br>mechanism design</br> We can now define the computational problem we study.",
                "Definition 8. (AUTOMATED-MECHANISM-DESIGN (AMD)) We are given: • an automated <br>mechanism design</br> setting, • an IR notion (ex interim, ex post, or none), • a solution concept (dominant strategies or Bayes-Nash), • whether payments are possible, • whether randomization is possible, • (in the decision variant of the problem) a target value G. We are asked whether there exists a mechanism of the specified kind (in terms of payments and randomization) that satisfies both the IR notion and the solution concept, and gives an expected value of at least G for the objective.",
                "An interesting special case is the setting where there is only one agent.",
                "In this case, the reporting agent always knows everything there is to know about the other agents types-because there are no other agents.",
                "Since ex post and ex interim IR only differ on what an agent is assumed to know about other agents types, the two IR concepts coincide here.",
                "Also, because implementation in dominant strategies and implementation in Bayes-Nash equilibrium only differ on what an agent is assumed to know about other agents types, the two solution concepts coincide here.",
                "This observation will prove to be a useful tool in proving hardness results: if we prove computational hardness in the singleagent setting, this immediately implies hardness for both IR concepts, for both solution concepts, for any number of agents. 4.",
                "PAYMENT-MAXIMIZINGDETERMINISTIC AMD IS HARD In this section we demonstrate that it is NP-complete to design a deterministic mechanism that maximizes the expected sum of the payments collected from the agents.",
                "We show that this problem is hard even in the single-agent setting, thereby immediately showing it hard for both IR concepts, for both solution concepts.",
                "To demonstrate NPhardness, we reduce from the MINSAT problem.",
                "Definition 9 (MINSAT).",
                "We are given a formula φ in conjunctive normal form, represented by a set of Boolean variables V and a set of clauses C, and an integer K (K < |C|).",
                "We are asked whether there exists an assignment to the variables in V such that at most K clauses in φ are satisfied.",
                "MINSAT was recently shown to be NP-complete [14].",
                "We can now present our result.",
                "Theorem 1.",
                "Payment-maximizing deterministic AMD is NP-complete, even for a single agent, even with a uniform distribution over types.",
                "Proof.",
                "It is easy to show that the problem is in NP.",
                "To show NP-hardness, we reduce an arbitrary MINSAT instance to the following single-agent payment-maximizing deterministic AMD instance.",
                "Let the agents type set be Θ = {θc : c ∈ C} ∪ {θv : v ∈ V }, where C is the set of clauses in the MINSAT instance, and V is the set of variables.",
                "Let the probability distribution over these types be uniform.",
                "Let the outcome set be O = {o0} ∪ {oc : c ∈ C} ∪ {ol : l ∈ L}, where L is the set of literals, that is, L = {+v : v ∈ V } ∪ {−v : v ∈ V }.",
                "Let the notation v(l) = v denote that v is the variable corresponding to the literal l, that is, l ∈ {+v, −v}.",
                "Let l ∈ c denote that the literal l occurs in clause c. Then, let the agents utility function be given by u(θc, ol) = |Θ| + 1 for all l ∈ L with l ∈ c; u(θc, ol) = 0 for all l ∈ L with l /∈ c; u(θc, oc) = |Θ| + 1; u(θc, oc ) = 0 for all c ∈ C with c = c ; u(θv, ol) = |Θ| for all l ∈ L with v(l) = v; u(θv, ol) = 0 for all l ∈ L with v(l) = v; u(θv, oc) = 0 for all c ∈ C. The goal of the AMD instance is G = |Θ| + |C|−K |Θ| , where K is the goal of the MINSAT instance.",
                "We show the instances are equivalent.",
                "First, suppose there is a solution to the MINSAT instance.",
                "Let the assignment of truth values to the variables in this solution be given by the function f : V → L (where v(f(v)) = v for all v ∈ V ).",
                "Then, for every v ∈ V , let o(θv) = of(v) and π(θv) = |Θ|.",
                "For every c ∈ C, let o(θc) = oc; let π(θc) = |Θ| + 1 if c is not satisfied in the MINSAT solution, and π(θc) = |Θ| if c is satisfied.",
                "It is straightforward to check that the IR constraint is satisfied.",
                "We now check that the agent has no incentive to misreport.",
                "If the agents type is some θv, then any other report will give it an outcome that is no better, for a payment that is no less, so it has no incentive to misreport.",
                "If the agents type is some θc where c is a satisfied clause, again, any other report will give it an outcome that is no better, for a payment that is no less, so it has no incentive to misreport.",
                "The final case to check is where the agents type is some θc where c is an unsatisfied clause.",
                "In this case, we observe that for none of the types, reporting it leads to an outcome ol for a literal l ∈ c, precisely because the clause is not satisfied in the MINSAT instance.",
                "Because also, no type besides θc leads to the outcome oc, reporting any other type will give an outcome with utility 0, while still forcing a payment of at least |Θ| from the agent.",
                "Clearly the agent is better off reporting truthfully, for a total utility of 0.",
                "This establishes that the agent never has an incentive to misreport.",
                "Finally, we show that the goal is reached.",
                "If s is the number of satisfied clauses in the MINSAT solution (so that s ≤ K), the expected payment from this mechanism is |V ||Θ|+s|Θ|+(|C|−s)(|Θ|+1) |Θ| ≥ |V ||Θ|+K|Θ|+(|C|−K)(|Θ|+1) |Θ| = |Θ| + |C|−K |Θ| = G. So there is a solution to the AMD instance.",
                "Now suppose there is a solution to the AMD instance, given by an outcome function o and a payment function π.",
                "First, suppose there is some v ∈ V such that o(θv) /∈ {o+v, o−v}.",
                "Then the utility that the agent derives from the given outcome for this type is 0, and hence, by IR, no payment can be extracted from the agent for this type.",
                "Because, again by IR, the maximum payment that can be extracted for any other type is |Θ| + 1, it follows that the maximum expected payment that could be obtained is at most (|Θ|−1)(|Θ|+1) |Θ| < |Θ| < G, contradicting that this is a solution to the AMD instance.",
                "It follows that in the solution to the AMD instance, for every v ∈ V , o(θv) ∈ {o+v, o−v}. 136 We can interpret this as an assignment of truth values to the variables: v is set to true if o(θv) = o+v, and to false if o(θv) = o−v.",
                "We claim this assignment is a solution to the MINSAT instance.",
                "By the IR constraint, the maximum payment we can extract from any type θv is |Θ|.",
                "Because there can be no incentives for the agent to report falsely, for any clause c satisfied by the given assignment, the maximum payment we can extract for the corresponding type θc is |Θ|. (For if we extracted more from this type, the agents utility in this case would be less than 1; and if v is the variable satisfying c in the assignment, so that o(θv) = ol where l occurs in c, then the agent would be better off reporting θv instead of the truthful report θc, to get an outcome worth |Θ|+1 to it while having to pay at most |Θ|.)",
                "Finally, for any unsatisfied clause c, by the IR constraint, the maximum payment we can extract for the corresponding type θc is |Θ| + 1.",
                "It follows that the expected payment from our mechanism is at most V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ , where s is the number of satisfied clauses.",
                "Because our mechanism achieves the goal, it follows that V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ ≥ G, which by simple algebraic manipulations is equivalent to s ≤ K. So there is a solution to the MINSAT instance.",
                "Because payment-maximizing AMD is just the special case of AMD for a self-interested designer where the designer has no preferences over the outcome chosen, this immediately implies hardness for the general case of AMD for a selfinterested designer where payments are possible.",
                "However, it does not yet imply hardness for the special case where payments are not possible.",
                "We will prove hardness in this case in the next section. 5.",
                "SELF-INTERESTED DETERMINISTIC AMD WITHOUT PAYMENTS IS HARD In this section we demonstrate that it is NP-complete to design a deterministic mechanism that maximizes the expectation of the designers objective when payments are not possible.",
                "We show that this problem is hard even in the single-agent setting, thereby immediately showing it hard for both IR concepts, for both solution concepts.",
                "Theorem 2.",
                "Without payments, deterministic AMD for a self-interested designer is NP-complete, even for a single agent, even with a uniform distribution over types.",
                "Proof.",
                "It is easy to show that the problem is in NP.",
                "To show NP-hardness, we reduce an arbitrary MINSAT instance to the following single-agent self-interested deterministic AMD without payments instance.",
                "Let the agents type set be Θ = {θc : c ∈ C} ∪ {θv : v ∈ V }, where C is the set of clauses in the MINSAT instance, and V is the set of variables.",
                "Let the probability distribution over these types be uniform.",
                "Let the outcome set be O = {o0} ∪ {oc : c ∈ C}∪{ol : l ∈ L}∪{o∗ }, where L is the set of literals, that is, L = {+v : v ∈ V } ∪ {−v : v ∈ V }.",
                "Let the notation v(l) = v denote that v is the variable corresponding to the literal l, that is, l ∈ {+v, −v}.",
                "Let l ∈ c denote that the literal l occurs in clause c. Then, let the agents utility function be given by u(θc, ol) = 2 for all l ∈ L with l ∈ c; u(θc, ol) = −1 for all l ∈ L with l /∈ c; u(θc, oc) = 2; u(θc, oc ) = −1 for all c ∈ C with c = c ; u(θc, o∗ ) = 1; u(θv, ol) = 1 for all l ∈ L with v(l) = v; u(θv, ol) = −1 for all l ∈ L with v(l) = v; u(θv, oc) = −1 for all c ∈ C; u(θv, o∗ ) = −1.",
                "Let the designers objective function be given by g(o∗ ) = |Θ|+1; g(ol) = |Θ| for all l ∈ L; g(oc) = |Θ| for all c ∈ C. The goal of the AMD instance is G = |Θ| + |C|−K |Θ| , where K is the goal of the MINSAT instance.",
                "We show the instances are equivalent.",
                "First, suppose there is a solution to the MINSAT instance.",
                "Let the assignment of truth values to the variables in this solution be given by the function f : V → L (where v(f(v)) = v for all v ∈ V ).",
                "Then, for every v ∈ V , let o(θv) = of(v).",
                "For every c ∈ C that is satisfied in the MINSAT solution, let o(θc) = oc; for every unsatisfied c ∈ C, let o(θc) = o∗ .",
                "It is straightforward to check that the IR constraint is satisfied.",
                "We now check that the agent has no incentive to misreport.",
                "If the agents type is some θv, it is getting the maximum utility for that type, so it has no incentive to misreport.",
                "If the agents type is some θc where c is a satisfied clause, again, it is getting the maximum utility for that type, so it has no incentive to misreport.",
                "The final case to check is where the agents type is some θc where c is an unsatisfied clause.",
                "In this case, we observe that for none of the types, reporting it leads to an outcome ol for a literal l ∈ c, precisely because the clause is not satisfied in the MINSAT instance.",
                "Because also, no type leads to the outcome oc, there is no outcome that the mechanism ever selects that would give the agent utility greater than 1 for type θc, and hence the agent has no incentive to report falsely.",
                "This establishes that the agent never has an incentive to misreport.",
                "Finally, we show that the goal is reached.",
                "If s is the number of satisfied clauses in the MINSAT solution (so that s ≤ K), then the expected value of the designers objective function is |V ||Θ|+s|Θ|+(|C|−s)(|Θ|+1) |Θ| ≥ |V ||Θ|+K|Θ|+(|C|−K)(|Θ|+1) |Θ| = |Θ| + |C|−K |Θ| = G. So there is a solution to the AMD instance.",
                "Now suppose there is a solution to the AMD instance, given by an outcome function o.",
                "First, suppose there is some v ∈ V such that o(θv) /∈ {o+v, o−v}.",
                "The only other outcome that the mechanism is allowed to choose under the IR constraint is o0.",
                "This has an objective value of 0, and because the highest value the objective function ever takes is |Θ| + 1, it follows that the maximum expected value of the objective function that could be obtained is at most (|Θ|−1)(|Θ|+1) |Θ| < |Θ| < G, contradicting that this is a solution to the AMD instance.",
                "It follows that in the solution to the AMD instance, for every v ∈ V , o(θv) ∈ {o+v, o−v}.",
                "We can interpret this as an assignment of truth values to the variables: v is set to true if o(θv) = o+v, and to false if o(θv) = o−v.",
                "We claim this assignment is a solution to the MINSAT instance.",
                "By the above, for any type θv, the value of the objective function in this mechanism will be |Θ|.",
                "For any clause c satisfied by the given assignment, the value of the objective function in the case where the agent reports type θc will be at most |Θ|. (This is because we cannot choose the outcome o∗ for such a type, as in this case the agent would have an incentive to report θv instead, where v is the variable satisfying c in the assignment (so that o(θv) = ol where l occurs in c).)",
                "Finally, for any unsatisfied clause c, the maximum value the objective function can take in the case where the agent reports type θc is |Θ| + 1, simply because this is the largest value the function ever takes.",
                "It follows that the expected value of the objective function for our mechanism is at most V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ , where s is the number of satisfied 137 clauses.",
                "Because our mechanism achieves the goal, it follows that V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ ≥ G, which by simple algebraic manipulations is equivalent to s ≤ K. So there is a solution to the MINSAT instance.",
                "Both of our hardness results relied on the constraint that the mechanism should be deterministic.",
                "In the next section, we show that the hardness of design disappears when we allow for randomization in the mechanism. 6.",
                "RANDOMIZED AMD FOR A SELFINTERESTED DESIGNER IS EASY We now show how allowing for randomization over the outcomes makes the problem of self-interested AMD tractable through linear programming, for any constant number of agents.",
                "Theorem 3.",
                "Self-interested randomized AMD with a constant number of agents is solvable in polynomial time by linear programming, both with and without payments, both for ex post and ex interim IR, and both for implementation in dominant strategies and for implementation in Bayes-Nash equilibrium-even if the types are correlated.",
                "Proof.",
                "Because linear programs can be solved in polynomial time [13], all we need to show is that the number of variables and equations in our program is polynomial for any constant number of agents-that is, exponential only in N. Throughout, for purposes of determining the size of the linear program, let T = maxi{|Θi|}.",
                "The variables of our linear program will be the probabilities (p(θ1, θ2, . . . , θN ))(o) (at most TN |O| variables) and the payments πi(θ1, θ2, . . . , θN ) (at most NTN variables). (We show the linear program for the case where payments are possible; the case without payments is easily obtained from this by simply omitting all the payment variables in the program, or by adding additional constraints forcing the payments to be 0.)",
                "First, we show the IR constraints.",
                "For ex post IR, we add the following (at most NTN ) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, and for every (θ1, θ2, . . . , θN ) ∈ Θ1 × Θ2 × . . . × ΘN , we add ( o∈O (p(θ1, θ2, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , θN ) ≥ 0.",
                "For ex interim IR, we add the following (at most NT) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, for every θi ∈ Θi, we add θ1,... ,θN γ(θ1, . . . , θN |θi)(( o∈O (p(θ1, θ2, . . . , θN ))(o)u(θi, o))− πi(θ1, θ2, . . . , θN )) ≥ 0.",
                "Now, we show the solution concept constraints.",
                "For implementation in dominant strategies, we add the following (at most NTN+1 ) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, for every (θ1, θ2, . . . , θi, . . . , θN ) ∈ Θ1 × Θ2 × . . . × ΘN , and for every alternative type report ˆθi ∈ Θi, we add the constraint ( o∈O (p(θ1, θ2, . . . , θi, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , θi, . . . , θN ) ≥ ( o∈O (p(θ1, θ2, . . . , ˆθi, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , ˆθi, . . . , θN ).",
                "Finally, for implementation in Bayes-Nash equilibrium, we add the following (at most NT2 ) constraints to the LP: • For every i ∈ {1, 2, ..., N}, for every θi ∈ Θi, and for every alternative type report ˆθi ∈ Θi, we add the constraint θ1,...,θN γ(θ1, ..., θN |θi)(( o∈O (p(θ1, θ2, ..., θi, ..., θN ))(o)u(θi, o)) − πi(θ1, θ2, ..., θi, ..., θN )) ≥ θ1,...,θN γ(θ1, ..., θN |θi)(( o∈O (p(θ1, θ2, ..., ˆθi, ..., θN ))(o)u(θi, o)) − πi(θ1, θ2, ..., ˆθi, ..., θN )).",
                "All that is left to do is to give the expression the designer is seeking to maximize, which is: • θ1,...,θN γ(θ1, ..., θN )(( o∈O (p(θ1, θ2, ..., θi, ..., θN ))(o)g(o)) + N i=1 πi(θ1, θ2, ..., θN )).",
                "As we indicated, the number of variables and constraints is exponential only in N, and hence the linear program is of polynomial size for constant numbers of agents.",
                "Thus the problem is solvable in polynomial time. 7.",
                "IMPLICATIONS FOR AN OPTIMAL COMBINATORIAL AUCTION DESIGN PROBLEM In this section, we will demonstrate some interesting consequences of the problem of automated <br>mechanism design</br> for a self-interested designer on designing optimal combinatorial auctions.",
                "Consider a combinatorial auction with a set S of items for sale.",
                "For any bundle B ⊆ S, let ui(θi, B) be bidder is utility for receiving bundle B when the bidders type is θi.",
                "The optimal auction design problem is to specify the rules of the auction so as to maximize expected revenue to the auctioneer. (By the revelation principle, without loss of generality, we can assume the auction is truthful.)",
                "The optimal auction design problem is solved for the case of a single item by the famous Myerson auction [18].",
                "However, designing optimal auctions in combinatorial auctions is a recognized open research problem [3, 25].",
                "The problem is open even if there are only two items for sale. (The twoitem case with a very special form of complementarity and no substitutability has been solved recently [1].)",
                "Suppose we have free disposal-items can be thrown away at no cost.",
                "Also, suppose that the bidders preferences have the following structure: whenever a bidder receives a bundle of items, the bidders utility for that bundle is determined by the best item in the bundle only. (We emphasize that 138 which item is the best is allowed to depend on the bidders type.)",
                "Definition 10.",
                "Bidder i is said to have best-only preferences over bundles of items if there exists a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s).",
                "We make the following useful observation in this setting: there is no sense in awarding a bidder more than one item.",
                "The reason is that if the bidder is reporting truthfully, taking all but the highest valued item away from the bidder will not hurt the bidder; and, by free disposal, doing so can only reduce the incentive for this bidder to falsely report this type, when the bidder actually has another type.",
                "We now show that the problem of designing a deterministic optimal auction here is NP-complete, by a reduction from the payment maximizing AMD problem!",
                "Theorem 4.",
                "Given an optimal combinatorial auction design problem under best-only preferences (given by a set of items S and for each bidder i, a finite type space Θi and a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s)), designing the optimal deterministic auction is NP-complete, even for a single bidder with a uniform distribution over types.",
                "Proof.",
                "The problem is in NP because we can nondeterministically generate an allocation rule, and then set the payments using linear programming.",
                "To show NP-hardness, we reduce an arbitrary paymentmaximizing deterministic AMD instance, with a single agent and a uniform distribution over types, to the following optimal combinatorial auction design problem instance with a single bidder with best-only preferences.",
                "For every outcome o ∈ O in the AMD instance (besides the outcome o0), let there be one item so ∈ S. Let the type space be the same, and let v(θi, so) = ui(θi, o) (where u is as specified in the AMD instance).",
                "Let the expected revenue target value be the same in both instances.",
                "We show the instances are equivalent.",
                "First suppose there exists a solution to the AMD instance, given by an outcome function and a payment function.",
                "Then, if the AMD solution chooses outcome o for a type, in the optimal auction solution, allocate {so} to the bidder for this type. (Unless o = o0, in which case we allocate {} to the bidder.)",
                "Let the payment functions be the same in both instances.",
                "Then, the utility that an agent receives for reporting a type (given the true type) in either solution is the same, so we have incentive compatibility in the optimal auction solution.",
                "Moreover, because the type distribution and the payment function are the same, the expected revenue to the auctioneer/designer is the same.",
                "It follows that there exists a solution to the optimal auction design instance.",
                "Now suppose there exists a solution to the optimal auction design instance.",
                "By the at-most-one-item observation, we can assume without loss of generality that the solution never allocates more than one item.",
                "Then, if the optimal auction solution allocates item so to the bidder for a type, in the AMD solution, let the mechanism choose outcome o for that type.",
                "If the optimal auction solution allocates nothing to the bidder for a type, in the AMD solution, let the mechanism choose outcome o0 for that type.",
                "Let the payment functions be the same.",
                "Then, the utility that an agent receives for reporting a type (given the true type) in either solution is the same, so we have incentive compatibility in the AMD solution.",
                "Moreover, because the type distribution and the payment function are the same, the expected revenue to the designer/auctioneer is the same.",
                "It follows that there exists a solution to the AMD instance.",
                "Fortunately, we can also carry through the easiness result for randomized mechanisms to this combinatorial auction setting-giving us one of the few known polynomial-time algorithms for an optimal combinatorial auction design problem.",
                "Theorem 5.",
                "Given an optimal combinatorial auction design problem under best-only preferences (given by a set of items S and for each bidder i, a finite type space Θi and a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s)), if the number of bidders is a constant k, then the optimal randomized auction can be designed in polynomial time. (For any IC and IR constraints.)",
                "Proof.",
                "By the at-most-one-item observation, we can without loss of generality restrict ourselves to allocations where each bidder receives at most one item.",
                "There are fewer than (|S| + 1)k such allocations-that is, a polynomial number of allocations.",
                "Because we can list the outcomes explicitly, we can simply solve this as a payment-maximizing AMD instance, with linear programming. 8.",
                "RELATED RESEARCH ON COMPLEXITY IN <br>mechanism design</br> There has been considerable recent interest in <br>mechanism design</br> in computer science.",
                "Some of it has focused on issues of computational complexity, but most of that work has strived toward designing mechanisms that are easy to execute (e.g. [20, 15, 19, 9, 12]), rather than studying the complexity of designing the mechanism.",
                "The closest piece of earlier work studied the complexity of automated <br>mechanism design</br> by a benevolent designer [5, 6].",
                "Roughgarden has studied the complexity of designing a good network topology for agents that selfishly choose the links they use [21].",
                "This is related to <br>mechanism design</br>, but differs significantly in that the designer only has restricted control over the rules of the game because there is no party that can impose the outcome (or side payments).",
                "Also, there is no explicit reporting of preferences. 9.",
                "CONCLUSIONS AND FUTURE RESEARCH Often, an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "The key difficulty is that the agents may report their preferences insincerely to make the chosen outcome more favorable to themselves.",
                "<br>mechanism design</br> is the art of designing the rules of the game so that the agents are motivated to report their preferences truthfully, and a desirable outcome is chosen.",
                "In a recently emerging approach-called automated <br>mechanism design</br>-a mechanism is computed for the specific preference aggregation setting at hand.",
                "This has several advantages, 139 but the downside is that the <br>mechanism design</br> optimization problem needs to be solved anew each time.",
                "Unlike earlier work on automated <br>mechanism design</br> that studied a benevolent designer, in this paper we studied automated <br>mechanism design</br> problems where the designer is self-interesteda setting much more relevant for electronic commerce.",
                "In this setting, the center cares only about which outcome is chosen and what payments are made to it.",
                "The reason that the agents preferences are relevant is that the center is constrained to making each agent at least as well off as the agent would have been had it not participated in the mechanism.",
                "In this setting, we showed that designing an optimal deterministic mechanism is NP-complete in two important special cases: when the center is interested only in the payments made to it, and when payments are not possible and the center is interested only in the outcome chosen.",
                "These hardness results imply hardness in all more general automated <br>mechanism design</br> settings with a self-interested designer.",
                "The hardness results apply whether the individual rationality (participation) constraints are applied ex interim or ex post, and whether the solution concept is dominant strategies implementation or Bayes-Nash equilibrium implementation.",
                "We then showed that allowing randomization in the mechanism makes the design problem in all these settings computationally easy.",
                "Finally, we showed that the paymentmaximizing AMD problem is closely related to an interesting variant of the optimal (revenue-maximizing) combinatorial auction design problem, where the bidders have best-only preferences.",
                "We showed that here, too, designing an optimal deterministic mechanism is NP-complete even with one agent, but designing an optimal randomized mechanism is easy.",
                "Future research includes studying automated <br>mechanism design</br> with a self-interested designer in more restricted settings such as auctions (where the designers objective may include preferences about which bidder should receive the good-as well as payments).",
                "We also want to study the complexity of automated <br>mechanism design</br> in settings where the outcome and type spaces have special structure so they can be represented more concisely.",
                "Finally, we plan to assemble a data set of real-world <br>mechanism design</br> problems-both historical and current-and apply automated <br>mechanism design</br> to those problems. 10.",
                "REFERENCES [1] M. Armstrong.",
                "Optimal multi-object auctions.",
                "Review of Economic Studies, 67:455-481, 2000. [2] K. Arrow.",
                "The property rights doctrine and demand revelation under incomplete information.",
                "In M. Boskin, editor, Economics and human welfare.",
                "New York Academic Press, 1979. [3] C. Avery and T. Hendershott.",
                "Bundling and optimal auctions of multiple products.",
                "Review of Economic Studies, 67:483-497, 2000. [4] E. H. Clarke.",
                "Multipart pricing of public goods.",
                "Public Choice, 11:17-33, 1971. [5] V. Conitzer and T. Sandholm.",
                "Complexity of <br>mechanism design</br>.",
                "In Proceedings of the 18th Annual Conference on Uncertainty in Artificial Intelligence (UAI-02), pages 103-110, Edmonton, Canada, 2002. [6] V. Conitzer and T. Sandholm.",
                "Automated <br>mechanism design</br>: Complexity results stemming from the single-agent setting.",
                "In Proceedings of the 5th International Conference on Electronic Commerce (ICEC-03), pages 17-24, Pittsburgh, PA, USA, 2003. [7] V. Conitzer and T. Sandholm.",
                "Computational criticisms of the revelation principle.",
                "In Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), New York, NY, 2004.",
                "Short paper.",
                "Full-length version appeared in the AAMAS-03 workshop on Agent-Mediated Electronic Commerce (AMEC). [8] C. dAspremont and L. A. G´erard-Varet.",
                "Incentives and incomplete information.",
                "Journal of Public Economics, 11:25-45, 1979. [9] J. Feigenbaum, C. Papadimitriou, and S. Shenker.",
                "Sharing the cost of muliticast transmissions.",
                "Journal of Computer and System Sciences, 63:21-41, 2001.",
                "Early version in Proceedings of the Annual ACM Symposium on Theory of Computing (STOC), 2000. [10] A. Gibbard.",
                "Manipulation of voting schemes.",
                "Econometrica, 41:587-602, 1973. [11] T. Groves.",
                "Incentives in teams.",
                "Econometrica, 41:617-631, 1973. [12] J. Hershberger and S. Suri.",
                "Vickrey prices and shortest paths: What is an edge worth?",
                "In Proceedings of the Annual Symposium on Foundations of Computer Science (FOCS), 2001. [13] L. Khachiyan.",
                "A polynomial algorithm in linear programming.",
                "Soviet Math.",
                "Doklady, 20:191-194, 1979. [14] R. Kohli, R. Krishnamurthi, and P. Mirchandani.",
                "The minimum satisfiability problem.",
                "SIAM Journal of Discrete Mathematics, 7(2):275-283, 1994. [15] D. Lehmann, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in rapid, approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002.",
                "Early version appeared in Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), 1999. [16] A. Mas-Colell, M. Whinston, and J. R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [17] E. S. Maskin and J. Riley.",
                "Optimal multi-unit auctions.",
                "In F. Hahn, editor, The Economics of Missing Markets, Information, and Games, chapter 14, pages 312-335.",
                "Clarendon Press, Oxford, 1989. [18] R. Myerson.",
                "Optimal auction design.",
                "Mathematics of Operation Research, 6:58-73, 1981. [19] N. Nisan and A. Ronen.",
                "Computationally feasible VCG mechanisms.",
                "In Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), pages 242-252, Minneapolis, MN, 2000. [20] N. Nisan and A. Ronen.",
                "Algorithmic <br>mechanism design</br>.",
                "Games and Economic Behavior, 35:166-196, 2001.",
                "Early version in Proceedings of the Annual ACM Symposium on Theory of Computing (STOC), 1999. [21] T. Roughgarden.",
                "Designing networks for selfish users is hard.",
                "In Proceedings of the Annual Symposium on Foundations of Computer Science (FOCS), 2001. [22] T. Sandholm.",
                "Issues in computational Vickrey auctions.",
                "International Journal of Electronic Commerce, 4(3):107-129, 2000.",
                "Special Issue on 140 Applying Intelligent Agents for Electronic Commerce.",
                "A short, early version appeared at the Second International Conference on Multi-Agent Systems (ICMAS), pages 299-306, 1996. [23] M. A. Satterthwaite.",
                "Strategy-proofness and Arrows conditions: existence and correspondence theorems for voting procedures and social welfare functions.",
                "Journal of Economic Theory, 10:187-217, 1975. [24] W. Vickrey.",
                "Counterspeculation, auctions, and competitive sealed tenders.",
                "Journal of Finance, 16:8-37, 1961. [25] R. V. Vohra.",
                "Research problems in combinatorial auctions.",
                "Mimeo, version Oct. 29, 2001. 141"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Self-interested Automated \"mechanism design\" and Implications for Optimal Combinatorial Auctions∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USAsandholm@cs.cmu.edu Resumen A menudo, se debe elegir un resultado sobre la base de las preferencias reportadas por un grupo de agentes.",
                "El \"diseño de mecanismo\" es el arte de diseñar las reglas del juego para que los agentes estén motivados para informar sus preferencias con sinceridad, y se elige un resultado deseable.",
                "En un \"diseño de mecanismo\" automatizado de enfoque recientemente propuesto, se calcula un mecanismo para la configuración de agregación de preferencias a mano.",
                "Esto tiene varias ventajas, pero la desventaja es que el problema de optimización del \"diseño del mecanismo\" debe resolverse de nuevo cada vez.",
                "A diferencia del trabajo anterior sobre el \"diseño de mecanismo\" automatizado que estudió un diseñador benevolente, en este documento estudiamos problemas automatizados de \"diseño de mecanismo\" donde el diseñador se interesa por sí mismo.",
                "Esta es la configuración clásica del \"diseño de mecanismo\" en la teoría de juegos.",
                "Este es el entorno de \"diseño de mecanismo\" más relevante para el comercio electrónico.",
                "El \"diseño de mecanismo\" clásico proporciona algunos mecanismos generales que, bajo ciertos supuestos, satisfacen alguna noción de no manipulabilidad y maximizan algún objetivo.",
                "Formulamos el problema del \"diseño del mecanismo\" como un problema de optimización.",
                "Este enfoque se llama \"diseño de mecanismo\" automatizado.",
                "El enfoque automatizado de \"diseño de mecanismo\" tiene cuatro ventajas sobre el enfoque clásico del diseño de mecanismos generales.",
                "Sin embargo, el \"diseño de mecanismo\" automatizado requiere que el problema de optimización del \"diseño del mecanismo\" se resuelva de nuevo para cada configuración.",
                "En este artículo estudiamos la complejidad computacional del \"diseño de mecanismo\" automatizado en el caso de un diseñador interesado.",
                "Este es un entorno importante para el \"diseño de mecanismo\" automatizado debido a la escasez de mecanismos generales en esta área, y el hecho de que en la mayoría de los entornos de comercio electrónico el diseñador se interesa por sí mismo.",
                "Justificando el enfoque en los mecanismos no manipulables antes de definir el problema computacional del \"diseño de mecanismos\" automatizado, debemos justificar nuestro enfoque en los mecanismos no manipulables.",
                "Este argumento es conocido en la literatura del \"diseño del mecanismo\" como el principio de revelación [16].(Existen dificultades computacionales para aplicar el principio de revelación en grandes resultados combinatorios y espacios de tipo [7, 22].",
                "Definiciones Ahora formalizamos la configuración automatizada de \"diseño de mecanismo\".",
                "En una configuración automatizada de \"diseño de mecanismo\", se nos da: • Un conjunto finito de resultados o;• un conjunto finito de N agentes;• Para cada agente I, 1. Un conjunto finito de tipos θi, 2. Una distribución de probabilidad γi sobre θi (en el caso de tipos correlacionados, hay una distribución conjunta única γ sobre θ1 × ... × θn) y 3. Una función de utilidad UI: θi × O → R;1 • Una función objetivo cuya expectativa el diseñador desea maximizar.",
                "En cualquier configuración automatizada de \"diseño de mecanismo\" con una restricción IR, hay un resultado de retroceso o0 ∈ O donde, para cualquier agente i y cualquier tipo θi ∈ θi, tenemos ui (θi, o0) = 0. (además, en elCaso de un diseñador interesado, G (O0) = 0.)",
                "Dada una configuración automatizada de \"diseño de mecanismo\", se dice que un mecanismo implementa sus funciones de resultado y pago en estrategias dominantes si Truthtelling siempre es óptimo incluso cuando los tipos informados por los otros agentes ya son conocidos.",
                "Dada una configuración automatizada de \"diseño de mecanismo\", se dice que un mecanismo implementa sus funciones de resultado y pago en el equilibrio de bayes-nash si la verdad de verdad siempre es óptimo para un agente cuando ese agente aún no sabe nada sobre los tipos de otros agentes, y el otroLos agentes dicen la verdad.",
                "Los términos que involucran pagos pueden dejarse fuera en el caso de que los pagos no sean posibles.135 3.3 \"Diseño de mecanismo\" automatizado ahora podemos definir el problema computacional que estudiamos.",
                "Definición 8. (Diseño de mecanismo automatizado (AMD)) Se damos: • Configuración automatizada de \"diseño de mecanismo\", • una noción IR (ex interina, ex post o ninguno), • un concepto de solución (estrategias dominantes o bayes-Nash), • si los pagos son posibles, • si es posible la aleatorización • (en la variante de decisión del problema) un valor objetivo G. Se nos pregunta si existe un mecanismo del tipo especificado (en términos de pagos y aleatorización) que satisface tanto la noción IR como el concepto de solución, y da un valor esperado de al menos G para el objetivo.",
                "Implicaciones para un problema óptimo de diseño de subasta combinatoria en esta sección, demostraremos algunas consecuencias interesantes del problema del \"diseño de mecanismo\" automatizado para un diseñador interesado en el diseño de subastas combinatorias óptimas.",
                "Investigación relacionada sobre la complejidad en el \"diseño del mecanismo\" ha habido un considerable interés reciente en el \"diseño del mecanismo\" en la informática.",
                "La pieza más cercana del trabajo anterior estudió la complejidad del \"diseño de mecanismo\" automatizado por un diseñador benevolente [5, 6].",
                "Esto está relacionado con el \"diseño del mecanismo\", pero difiere significativamente en que el diseñador solo ha restringido el control sobre las reglas del juego porque no hay fiesta que pueda imponer el resultado (o pagos secundarios).",
                "El \"diseño de mecanismo\" es el arte de diseñar las reglas del juego para que los agentes estén motivados para informar sus preferencias con sinceridad, y se elige un resultado deseable.",
                "En un enfoque emergente recientemente, se calcula el \"diseño de mecanismo\" automatizado: se calcula un mecanismo para la configuración de agregación de preferencias específica a mano.",
                "Esto tiene varias ventajas, 139, pero la desventaja es que el problema de optimización del \"diseño del mecanismo\" debe resolverse de nuevo cada vez.",
                "A diferencia del trabajo anterior en el \"diseño de mecanismo\" automatizado que estudió a un diseñador benevolente, en este documento estudiamos problemas automatizados de \"diseño de mecanismo\" donde el diseñador es una configuración interestada mucho más relevante para el comercio electrónico.",
                "Estos resultados de dureza implican dureza en la configuración de \"diseño de mecanismo\" más general automatizado con un diseñador interesado.",
                "La investigación futura incluye estudiar el \"diseño de mecanismo\" automatizado con un diseñador interesado en entornos más restringidos, como subastas (donde el objetivo de los diseñadores puede incluir preferencias sobre qué postor debe recibir el bien, así como los pagos).",
                "También queremos estudiar la complejidad del \"diseño del mecanismo\" automatizado en los entornos donde los espacios de resultados y tipos tienen una estructura especial para que puedan representarse de manera más concisa.",
                "Finalmente, planeamos ensamblar un conjunto de datos de problemas de \"diseño de mecanismo\" del mundo real, tanto históricos como de corriente, y aplicar el diseño automatizado de \"mecanismo\" a esos problemas.10.",
                "Complejidad del \"diseño del mecanismo\".",
                "\"Diseño de mecanismo\" automatizado: resultados de complejidad derivados de la configuración de un solo agente.",
                "\"Diseño de mecanismo\" algorítmico."
            ],
            "translated_text": "",
            "candidates": [
                "diseño de mecanismo",
                "mechanism design",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "diseño del mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "diseño del mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "diseño del mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismos",
                "Diseño de mecanismo",
                "diseño del mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "Diseño del mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "Diseño de mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "diseño del mecanismo",
                "diseño del mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "diseño del mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "diseño del mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "diseño de mecanismo",
                "diseño del mecanismo",
                "Diseño del mecanismo",
                "diseño de mecanismo",
                "mecanismo",
                "diseño de mecanismo",
                "diseño del mecanismo",
                "diseño de mecanismo",
                "Diseño de mecanismo",
                "diseño de mecanismo",
                "Diseño de mecanismo"
            ],
            "error": []
        },
        "desirable outcome": {
            "translated_key": "Resultado deseable",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Self-interested Automated Mechanism Design and Implications for Optimal Combinatorial Auctions∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT Often, an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "The key difficulty is that the agents may report their preferences insincerely to make the chosen outcome more favorable to themselves.",
                "Mechanism design is the art of designing the rules of the game so that the agents are motivated to report their preferences truthfully, and a <br>desirable outcome</br> is chosen.",
                "In a recently proposed approach-called automated mechanism design-a mechanism is computed for the preference aggregation setting at hand.",
                "This has several advantages, but the downside is that the mechanism design optimization problem needs to be solved anew each time.",
                "Unlike the earlier work on automated mechanism design that studied a benevolent designer, in this paper we study automated mechanism design problems where the designer is self-interested.",
                "In this case, the center cares only about which outcome is chosen and what payments are made to it.",
                "The reason that the agents preferences are relevant is that the center is constrained to making each agent at least as well off as the agent would have been had it not participated in the mechanism.",
                "In this setting, we show that designing optimal deterministic mechanisms is NP-complete in two important special cases: when the center is interested only in the payments made to it, and when payments are not possible and the center is interested only in the outcome chosen.",
                "We then show how allowing for randomization in the mechanism makes problems in this setting computationally easy.",
                "Finally, we show that the payment-maximizing AMD problem is closely related to an interesting variant of the optimal (revenuemaximizing) combinatorial auction design problem, where the bidders have best-only preferences.",
                "We show that here, too, designing an optimal deterministic auction is NPcomplete, but designing an optimal randomized auction is easy.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In multiagent settings, often an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "Such outcomes could be potential presidents, joint plans, allocations of goods or resources, etc.",
                "The preference aggregator generally does not know the agents preferences a priori.",
                "Rather, the agents report their preferences to the coordinator.",
                "Unfortunately, an agent may have an incentive to misreport its preferences in order to mislead the mechanism into selecting an outcome that is more desirable to the agent than the outcome that would be selected if the agent revealed its preferences truthfully.",
                "Such manipulation is undesirable because preference aggregation mechanisms are tailored to aggregate preferences in a socially desirable way, and if the agents reveal their preferences insincerely, a socially undesirable outcome may be chosen.",
                "Manipulability is a pervasive problem across preference aggregation mechanisms.",
                "A seminal negative result, the Gibbard-Satterthwaite theorem, shows that under any nondictatorial preference aggregation scheme, if there are at least 3 possible outcomes, there are preferences under which an agent is better off reporting untruthfully [10, 23]. (A preference aggregation scheme is called dictatorial if one of the agents dictates the outcome no matter what preferences the other agents report.)",
                "What the aggregator would like to do is design a preference aggregation mechanism so that 1) the self-interested agents are motivated to report their preferences truthfully, and 2) the mechanism chooses an outcome that is desirable from the perspective of some objective.",
                "This is the classic setting of mechanism design in game theory.",
                "In this paper, we study the case where the designer is self-interested, that is, the designer does not directly care about how the out132 come relates to the agents preferences, but is rather concerned with its own agenda for which outcome should be chosen, and with maximizing payments to itself.",
                "This is the mechanism design setting most relevant to electronic commerce.",
                "In the case where the mechanism designer is interested in maximizing some notion of social welfare, the importance of collecting the agents preferences is clear.",
                "It is perhaps less obvious why they should be collected when the designer is self-interested and hence its objective is not directly related to the agents preferences.",
                "The reason for this is that often the agents preferences impose limits on how the designer chooses the outcome and payments.",
                "The most common such constraint is that of individual rationality (IR), which means that the mechanism cannot make any agent worse off than the agent would have been had it not participated in the mechanism.",
                "For instance, in the setting of optimal auction design, the designer (auctioneer) is only concerned with how much revenue is collected, and not per se with how well the allocation of the good (or goods) corresponds to the agents preferences.",
                "Nevertheless, the designer cannot force an agent to pay more than its valuation for the bundle of goods allocated to it.",
                "Therefore, even a self-interested designer will choose an outcome that makes the agents reasonably well off.",
                "On the other hand, the designer will not necessarily choose a social welfare maximizing outcome.",
                "For example, if the designer always chooses an outcome that maximizes social welfare with respect to the reported preferences, and forces each agent to pay the difference between the utility it has now and the utility it would have had if it had not participated in the mechanism, it is easy to see that agents may have an incentive to misreport their preferences-and this may actually lead to less revenue being collected.",
                "Indeed, one of the counterintuitive results of optimal auction design theory is that sometimes the good is allocated to nobody even when the auctioneer has a reservation price of 0.",
                "Classical mechanism design provides some general mechanisms, which, under certain assumptions, satisfy some notion of nonmanipulability and maximize some objective.",
                "The upside of these mechanisms is that they do not rely on (even probabilistic) information about the agents preferences (e.g., the Vickrey-Clarke-Groves (VCG) mechanism [24, 4, 11]), or they can be easily applied to any probability distribution over the preferences (e.g., the dAGVA mechanism [8, 2], the Myerson auction [18], and the Maskin-Riley multi-unit auction [17]).",
                "However, the general mechanisms also have significant downsides: • The most famous and most broadly applicable general mechanisms, VCG and dAGVA, only maximize social welfare.",
                "If the designer is self-interested, as is the case in many electronic commerce settings, these mechanisms do not maximize the designers objective. • The general mechanisms that do focus on a selfinterested designer are only applicable in very restricted settings-such as Myersons expected revenue maximizing auction for selling a single item, and Maskin and Rileys expected revenue maximizing auction for selling multiple identical units of an item. • Even in the restricted settings in which these mechanisms apply, the mechanisms only allow for payment maximization.",
                "In practice, the designer may also be interested in the outcome per se.",
                "For example, an auctioneer may care which bidder receives the item. • It is often assumed that side payments can be used to tailor the agents incentives, but this is not always practical.",
                "For example, in barter-based electronic marketplaces-such as Recipco, firstbarter.com, BarterOne, and Intagio-side payments are not allowed.",
                "Furthermore, among software agents, it might be more desirable to construct mechanisms that do not rely on the ability to make payments, because many software agents do not have the infrastructure to make payments.",
                "In contrast, we follow a recent approach where the mechanism is designed automatically for the specific problem at hand.",
                "This approach addresses all of the downsides listed above.",
                "We formulate the mechanism design problem as an optimization problem.",
                "The input is characterized by the number of agents, the agents possible types (preferences), and the aggregators prior distributions over the agents types.",
                "The output is a nonmanipulable mechanism that is optimal with respect to some objective.",
                "This approach is called automated mechanism design.",
                "The automated mechanism design approach has four advantages over the classical approach of designing general mechanisms.",
                "First, it can be used even in settings that do not satisfy the assumptions of the classical mechanisms (such as availability of side payments or that the objective is social welfare).",
                "Second, it may allow one to circumvent impossibility results (such as the Gibbard-Satterthwaite theorem) which state that there is no mechanism that is desirable across all preferences.",
                "When the mechanism is designed for the setting at hand, it does not matter that it would not work more generally.",
                "Third, it may yield better mechanisms (in terms of stronger nonmanipulability guarantees and/or better outcomes) than classical mechanisms because the mechanism capitalizes on the particulars of the setting (the probabilistic information that the designer has about the agents types).",
                "Given the vast amount of information that parties have about each other today, this approach is likely to lead to tremendous savings over classical mechanisms, which largely ignore that information.",
                "For example, imagine a company automatically creating its procurement mechanism based on statistical knowledge about its suppliers, rather than using a classical descending procurement auction.",
                "Fourth, the burden of design is shifted from humans to a machine.",
                "However, automated mechanism design requires the mechanism design optimization problem to be solved anew for each setting.",
                "Hence its computational complexity becomes a key issue.",
                "Previous research has studied this question for benevolent designers-that wish to maximize, for example, social welfare [5, 6].",
                "In this paper we study the computational complexity of automated mechanism design in the case of a self-interested designer.",
                "This is an important setting for automated mechanism design due to the shortage of general mechanisms in this area, and the fact that in most e-commerce settings the designer is self-interested.",
                "We also show that this problem is closely related to a particular optimal (revenue-maximizing) combinatorial auction design problem. 133 The rest of this paper is organized as follows.",
                "In Section 2, we justify the focus on nonmanipulable mechanisms.",
                "In Section 3, we define the problem we study.",
                "In Section 4, we show that designing an optimal deterministic mechanism is NP-complete even when the designer only cares about the payments made to it.",
                "In Section 5, we show that designing an optimal deterministic mechanism is also NP-complete when payments are not possible and the designer is only interested in the outcome chosen.",
                "In Section 6, we show that an optimal randomized mechanism can be designed in polynomial time even in the general case.",
                "Finally, in Section 7, we show that for designing optimal combinatorial auctions under best-only preferences, our results on AMD imply that this problem is NP-complete for deterministic auctions, but easy for randomized auctions. 2.",
                "JUSTIFYING THE FOCUS ON NONMANIPULABLE MECHANISMS Before we define the computational problem of automated mechanism design, we should justify our focus on nonmanipulable mechanisms.",
                "After all, it is not immediately obvious that there are no manipulable mechanisms that, even when agents report their types strategically and hence sometimes untruthfully, still reach better outcomes (according to whatever objective we use) than any nonmanipulable mechanism.",
                "This does, however, turn out to be the case: given any mechanism, we can construct a nonmanipulable mechanism whose performance is identical, as follows.",
                "We build an interface layer between the agents and the original mechanism.",
                "The agents report their preferences (or types) to the interface layer; subsequently, the interface layer inputs into the original mechanism the types that the agents would have strategically reported to the original mechanism, if their types were as declared to the interface layer.",
                "The resulting outcome is the outcome of the new mechanism.",
                "Since the interface layer acts strategically on each agents behalf, there is never an incentive to report falsely to the interface layer; and hence, the types reported by the interface layer are the strategic types that would have been reported without the interface layer, so the results are exactly as they would have been with the original mechanism.",
                "This argument is known in the mechanism design literature as the revelation principle [16]. (There are computational difficulties with applying the revelation principle in large combinatorial outcome and type spaces [7, 22].",
                "However, because here we focus on flatly represented outcome and type spaces, this is not a concern here.)",
                "Given this, we can focus on truthful mechanisms in the rest of the paper. 3.",
                "DEFINITIONS We now formalize the automated mechanism design setting.",
                "Definition 1.",
                "In an automated mechanism design setting, we are given: • a finite set of outcomes O; • a finite set of N agents; • for each agent i, 1. a finite set of types Θi, 2. a probability distribution γi over Θi (in the case of correlated types, there is a single joint distribution γ over Θ1 × . . . × ΘN ), and 3. a utility function ui : Θi × O → R; 1 • An objective function whose expectation the designer wishes to maximize.",
                "There are many possible objective functions the designer might have, for example, social welfare (where the designer seeks to maximize the sum of the agents utilities), or the minimum utility of any agent (where the designer seeks to maximize the worst utility had by any agent).",
                "In both of these cases, the designer is benevolent, because the designer, in some sense, is pursuing the agents collective happiness.",
                "However, in this paper, we focus on the case of a self-interested designer.",
                "A self-interested designer cares only about the outcome chosen (that is, the designer does not care how the outcome relates to the agents preferences, but rather has a fixed preference over the outcomes), and about the net payments made by the agents, which flow to the designer.",
                "Definition 2.",
                "A self-interested designer has an objective function given by g(o) + N i=1 πi, where g : O → R indicates the designers own preference over the outcomes, and πi is the payment made by agent i.",
                "In the case where g = 0 everywhere, the designer is said to be payment maximizing.",
                "In the case where payments are not possible, g constitutes the objective function by itself.",
                "We now define the kinds of mechanisms under study.",
                "By the revelation principle, we can restrict attention to truthful, direct revelation mechanisms, where agents report their types directly and never have an incentive to misreport them.",
                "Definition 3.",
                "We consider the following kinds of mechanism: • A deterministic mechanism without payments consists of an outcome selection function o : Θ1 × Θ2 × . . . × ΘN → O. • A randomized mechanism without payments consists of a distribution selection function p : Θ1 × Θ2 × . . . × ΘN → P(O), where P(O) is the set of probability distributions over O. • A deterministic mechanism with payments consists of an outcome selection function o : Θ1 ×Θ2 ×. . .×ΘN → O and for each agent i, a payment selection function πi : Θ1 × Θ2 × . . . × ΘN → R, where πi(θ1, . . . , θN ) gives the payment made by agent i when the reported types are θ1, . . . , θN . 1 Though this follows standard game theory notation [16], the fact that the agent has both a utility function and a type is perhaps confusing.",
                "The types encode the various possible preferences that the agent may turn out to have, and the agents type is not known to the aggregator.",
                "The utility function is common knowledge, but because the agents type is a parameter in the agents utility function, the aggregator cannot know what the agents utility is without knowing the agents type. 134 • A randomized mechanism with payments consists of a distribution selection function p : Θ1 × Θ2 × . . . × ΘN → P(O), and for each agent i, a payment selection function πi : Θ1 × Θ2 × . . . × ΘN → R.2 There are two types of constraint on the designer in building the mechanism. 3.1 Individual rationality (IR) constraints The first type of constraint is the following.",
                "The utility of each agent has to be at least as great as the agents fallback utility, that is, the utility that the agent would receive if it did not participate in the mechanism.",
                "Otherwise that agent would not participate in the mechanism-and no agents participation can ever hurt the mechanism designers objective because at worst, the mechanism can ignore an agent by pretending the agent is not there. (Furthermore, if no such constraint applied, the designer could simply make the agents pay an infinite amount.)",
                "This type of constraint is called an IR (individual rationality) constraint.",
                "There are three different possible IR constraints: ex ante, ex interim, and ex post, depending on what the agent knows about its own type and the others types when deciding whether to participate in the mechanism.",
                "Ex ante IR means that the agent would participate if it knew nothing at all (not even its own type).",
                "We will not study this concept in this paper.",
                "Ex interim IR means that the agent would always participate if it knew only its own type, but not those of the others.",
                "Ex post IR means that the agent would always participate even if it knew everybodys type.",
                "We will define the latter two notions of IR formally.",
                "First, we need to formalize the concept of the fallback outcome.",
                "We assume that each agents fallback utility is zero for each one of its types.",
                "This is without loss of generality because we can add a constant term to an agents utility function (for a given type), without affecting the decision-making behavior of that expected utility maximizing agent [16].",
                "Definition 4.",
                "In any automated mechanism design setting with an IR constraint, there is a fallback outcome o0 ∈ O where, for any agent i and any type θi ∈ Θi, we have ui(θi, o0) = 0. (Additionally, in the case of a self-interested designer, g(o0) = 0.)",
                "We can now to define the notions of individual rationality.",
                "Definition 5.",
                "Individual rationality (IR) is defined by: • A deterministic mechanism is ex interim IR if for any agent i, and any type θi ∈ Θi, we have E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, .., θN ))−πi(θ1, .., θN )] ≥ 0.",
                "A randomized mechanism is ex interim IR if for any agent i, and any type θi ∈ Θi, we have E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,..,θn [ui(θi, o)−πi(θ1, .., θN )] ≥ 0. • A deterministic mechanism is ex post IR if for any agent i, and any type vector (θ1, . . . , θN ) ∈ Θ1 × . . . × ΘN , we have ui(θi, o(θ1, . . . , θN )) − πi(θ1, . . . , θN ) ≥ 0. 2 We do not randomize over payments because as long as the agents and the designer are risk neutral with respect to payments, that is, their utility is linear in payments, there is no reason to randomize over payments.",
                "A randomized mechanism is ex post IR if for any agent i, and any type vector (θ1, . . . , θN ) ∈ Θ1 × . . . × ΘN , we have Eo|θ1,..,θn [ui(θi, o) − πi(θ1, .., θN )] ≥ 0.",
                "The terms involving payments can be left out in the case where payments are not possible. 3.2 Incentive compatibility (IC) constraints The second type of constraint says that the agents should never have an incentive to misreport their type (as justified above by the revelation principle).",
                "For this type of constraint, the two most common variants (or solution concepts) are implementation in dominant strategies, and implementation in Bayes-Nash equilibrium.",
                "Definition 6.",
                "Given an automated mechanism design setting, a mechanism is said to implement its outcome and payment functions in dominant strategies if truthtelling is always optimal even when the types reported by the other agents are already known.",
                "Formally, for any agent i, any type vector (θ1, . . . , θi, . . . , θN ) ∈ Θ1 × . . . × Θi × . . . × ΘN , and any alternative type report ˆθi ∈ Θi, in the case of deterministic mechanisms we have ui(θi, o(θ1, . . . , θi, . . . , θN )) − πi(θ1, . . . , θi, . . . , θN ) ≥ ui(θi, o(θ1, . . . , ˆθi, . . . , θN )) − πi(θ1, . . . , ˆθi, . . . , θN ).",
                "In the case of randomized mechanisms we have Eo|θ1,..,θi,..,θn [ui(θi, o) − πi(θ1, . . . , θi, . . . , θN )] ≥ Eo|θ1,.., ˆθi,..,θn [ui(θi, o) − πi(θ1, . . . , ˆθi, . . . , θN )].",
                "The terms involving payments can be left out in the case where payments are not possible.",
                "Thus, in dominant strategies implementation, truthtelling is optimal regardless of what the other agents report.",
                "If it is optimal only given that the other agents are truthful, and given that one does not know the other agents types, we have implementation in Bayes-Nash equilibrium.",
                "Definition 7.",
                "Given an automated mechanism design setting, a mechanism is said to implement its outcome and payment functions in Bayes-Nash equilibrium if truthtelling is always optimal to an agent when that agent does not yet know anything about the other agents types, and the other agents are telling the truth.",
                "Formally, for any agent i, any type θi ∈ Θi, and any alternative type report ˆθi ∈ Θi, in the case of deterministic mechanisms we have E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, . . . , θi, . . . , θN ))− πi(θ1, . . . , θi, . . . , θN )] ≥ E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, . . . , ˆθi, . . . , θN ))− πi(θ1, . . . , ˆθi, . . . , θN )].",
                "In the case of randomized mechanisms we have E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,..,θi,..,θn [ui(θi, o)− πi(θ1, . . . , θi, . . . , θN )] ≥ E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,.., ˆθi,..,θn [ui(θi, o)− πi(θ1, . . . , ˆθi, . . . , θN )].",
                "The terms involving payments can be left out in the case where payments are not possible. 135 3.3 Automated mechanism design We can now define the computational problem we study.",
                "Definition 8. (AUTOMATED-MECHANISM-DESIGN (AMD)) We are given: • an automated mechanism design setting, • an IR notion (ex interim, ex post, or none), • a solution concept (dominant strategies or Bayes-Nash), • whether payments are possible, • whether randomization is possible, • (in the decision variant of the problem) a target value G. We are asked whether there exists a mechanism of the specified kind (in terms of payments and randomization) that satisfies both the IR notion and the solution concept, and gives an expected value of at least G for the objective.",
                "An interesting special case is the setting where there is only one agent.",
                "In this case, the reporting agent always knows everything there is to know about the other agents types-because there are no other agents.",
                "Since ex post and ex interim IR only differ on what an agent is assumed to know about other agents types, the two IR concepts coincide here.",
                "Also, because implementation in dominant strategies and implementation in Bayes-Nash equilibrium only differ on what an agent is assumed to know about other agents types, the two solution concepts coincide here.",
                "This observation will prove to be a useful tool in proving hardness results: if we prove computational hardness in the singleagent setting, this immediately implies hardness for both IR concepts, for both solution concepts, for any number of agents. 4.",
                "PAYMENT-MAXIMIZINGDETERMINISTIC AMD IS HARD In this section we demonstrate that it is NP-complete to design a deterministic mechanism that maximizes the expected sum of the payments collected from the agents.",
                "We show that this problem is hard even in the single-agent setting, thereby immediately showing it hard for both IR concepts, for both solution concepts.",
                "To demonstrate NPhardness, we reduce from the MINSAT problem.",
                "Definition 9 (MINSAT).",
                "We are given a formula φ in conjunctive normal form, represented by a set of Boolean variables V and a set of clauses C, and an integer K (K < |C|).",
                "We are asked whether there exists an assignment to the variables in V such that at most K clauses in φ are satisfied.",
                "MINSAT was recently shown to be NP-complete [14].",
                "We can now present our result.",
                "Theorem 1.",
                "Payment-maximizing deterministic AMD is NP-complete, even for a single agent, even with a uniform distribution over types.",
                "Proof.",
                "It is easy to show that the problem is in NP.",
                "To show NP-hardness, we reduce an arbitrary MINSAT instance to the following single-agent payment-maximizing deterministic AMD instance.",
                "Let the agents type set be Θ = {θc : c ∈ C} ∪ {θv : v ∈ V }, where C is the set of clauses in the MINSAT instance, and V is the set of variables.",
                "Let the probability distribution over these types be uniform.",
                "Let the outcome set be O = {o0} ∪ {oc : c ∈ C} ∪ {ol : l ∈ L}, where L is the set of literals, that is, L = {+v : v ∈ V } ∪ {−v : v ∈ V }.",
                "Let the notation v(l) = v denote that v is the variable corresponding to the literal l, that is, l ∈ {+v, −v}.",
                "Let l ∈ c denote that the literal l occurs in clause c. Then, let the agents utility function be given by u(θc, ol) = |Θ| + 1 for all l ∈ L with l ∈ c; u(θc, ol) = 0 for all l ∈ L with l /∈ c; u(θc, oc) = |Θ| + 1; u(θc, oc ) = 0 for all c ∈ C with c = c ; u(θv, ol) = |Θ| for all l ∈ L with v(l) = v; u(θv, ol) = 0 for all l ∈ L with v(l) = v; u(θv, oc) = 0 for all c ∈ C. The goal of the AMD instance is G = |Θ| + |C|−K |Θ| , where K is the goal of the MINSAT instance.",
                "We show the instances are equivalent.",
                "First, suppose there is a solution to the MINSAT instance.",
                "Let the assignment of truth values to the variables in this solution be given by the function f : V → L (where v(f(v)) = v for all v ∈ V ).",
                "Then, for every v ∈ V , let o(θv) = of(v) and π(θv) = |Θ|.",
                "For every c ∈ C, let o(θc) = oc; let π(θc) = |Θ| + 1 if c is not satisfied in the MINSAT solution, and π(θc) = |Θ| if c is satisfied.",
                "It is straightforward to check that the IR constraint is satisfied.",
                "We now check that the agent has no incentive to misreport.",
                "If the agents type is some θv, then any other report will give it an outcome that is no better, for a payment that is no less, so it has no incentive to misreport.",
                "If the agents type is some θc where c is a satisfied clause, again, any other report will give it an outcome that is no better, for a payment that is no less, so it has no incentive to misreport.",
                "The final case to check is where the agents type is some θc where c is an unsatisfied clause.",
                "In this case, we observe that for none of the types, reporting it leads to an outcome ol for a literal l ∈ c, precisely because the clause is not satisfied in the MINSAT instance.",
                "Because also, no type besides θc leads to the outcome oc, reporting any other type will give an outcome with utility 0, while still forcing a payment of at least |Θ| from the agent.",
                "Clearly the agent is better off reporting truthfully, for a total utility of 0.",
                "This establishes that the agent never has an incentive to misreport.",
                "Finally, we show that the goal is reached.",
                "If s is the number of satisfied clauses in the MINSAT solution (so that s ≤ K), the expected payment from this mechanism is |V ||Θ|+s|Θ|+(|C|−s)(|Θ|+1) |Θ| ≥ |V ||Θ|+K|Θ|+(|C|−K)(|Θ|+1) |Θ| = |Θ| + |C|−K |Θ| = G. So there is a solution to the AMD instance.",
                "Now suppose there is a solution to the AMD instance, given by an outcome function o and a payment function π.",
                "First, suppose there is some v ∈ V such that o(θv) /∈ {o+v, o−v}.",
                "Then the utility that the agent derives from the given outcome for this type is 0, and hence, by IR, no payment can be extracted from the agent for this type.",
                "Because, again by IR, the maximum payment that can be extracted for any other type is |Θ| + 1, it follows that the maximum expected payment that could be obtained is at most (|Θ|−1)(|Θ|+1) |Θ| < |Θ| < G, contradicting that this is a solution to the AMD instance.",
                "It follows that in the solution to the AMD instance, for every v ∈ V , o(θv) ∈ {o+v, o−v}. 136 We can interpret this as an assignment of truth values to the variables: v is set to true if o(θv) = o+v, and to false if o(θv) = o−v.",
                "We claim this assignment is a solution to the MINSAT instance.",
                "By the IR constraint, the maximum payment we can extract from any type θv is |Θ|.",
                "Because there can be no incentives for the agent to report falsely, for any clause c satisfied by the given assignment, the maximum payment we can extract for the corresponding type θc is |Θ|. (For if we extracted more from this type, the agents utility in this case would be less than 1; and if v is the variable satisfying c in the assignment, so that o(θv) = ol where l occurs in c, then the agent would be better off reporting θv instead of the truthful report θc, to get an outcome worth |Θ|+1 to it while having to pay at most |Θ|.)",
                "Finally, for any unsatisfied clause c, by the IR constraint, the maximum payment we can extract for the corresponding type θc is |Θ| + 1.",
                "It follows that the expected payment from our mechanism is at most V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ , where s is the number of satisfied clauses.",
                "Because our mechanism achieves the goal, it follows that V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ ≥ G, which by simple algebraic manipulations is equivalent to s ≤ K. So there is a solution to the MINSAT instance.",
                "Because payment-maximizing AMD is just the special case of AMD for a self-interested designer where the designer has no preferences over the outcome chosen, this immediately implies hardness for the general case of AMD for a selfinterested designer where payments are possible.",
                "However, it does not yet imply hardness for the special case where payments are not possible.",
                "We will prove hardness in this case in the next section. 5.",
                "SELF-INTERESTED DETERMINISTIC AMD WITHOUT PAYMENTS IS HARD In this section we demonstrate that it is NP-complete to design a deterministic mechanism that maximizes the expectation of the designers objective when payments are not possible.",
                "We show that this problem is hard even in the single-agent setting, thereby immediately showing it hard for both IR concepts, for both solution concepts.",
                "Theorem 2.",
                "Without payments, deterministic AMD for a self-interested designer is NP-complete, even for a single agent, even with a uniform distribution over types.",
                "Proof.",
                "It is easy to show that the problem is in NP.",
                "To show NP-hardness, we reduce an arbitrary MINSAT instance to the following single-agent self-interested deterministic AMD without payments instance.",
                "Let the agents type set be Θ = {θc : c ∈ C} ∪ {θv : v ∈ V }, where C is the set of clauses in the MINSAT instance, and V is the set of variables.",
                "Let the probability distribution over these types be uniform.",
                "Let the outcome set be O = {o0} ∪ {oc : c ∈ C}∪{ol : l ∈ L}∪{o∗ }, where L is the set of literals, that is, L = {+v : v ∈ V } ∪ {−v : v ∈ V }.",
                "Let the notation v(l) = v denote that v is the variable corresponding to the literal l, that is, l ∈ {+v, −v}.",
                "Let l ∈ c denote that the literal l occurs in clause c. Then, let the agents utility function be given by u(θc, ol) = 2 for all l ∈ L with l ∈ c; u(θc, ol) = −1 for all l ∈ L with l /∈ c; u(θc, oc) = 2; u(θc, oc ) = −1 for all c ∈ C with c = c ; u(θc, o∗ ) = 1; u(θv, ol) = 1 for all l ∈ L with v(l) = v; u(θv, ol) = −1 for all l ∈ L with v(l) = v; u(θv, oc) = −1 for all c ∈ C; u(θv, o∗ ) = −1.",
                "Let the designers objective function be given by g(o∗ ) = |Θ|+1; g(ol) = |Θ| for all l ∈ L; g(oc) = |Θ| for all c ∈ C. The goal of the AMD instance is G = |Θ| + |C|−K |Θ| , where K is the goal of the MINSAT instance.",
                "We show the instances are equivalent.",
                "First, suppose there is a solution to the MINSAT instance.",
                "Let the assignment of truth values to the variables in this solution be given by the function f : V → L (where v(f(v)) = v for all v ∈ V ).",
                "Then, for every v ∈ V , let o(θv) = of(v).",
                "For every c ∈ C that is satisfied in the MINSAT solution, let o(θc) = oc; for every unsatisfied c ∈ C, let o(θc) = o∗ .",
                "It is straightforward to check that the IR constraint is satisfied.",
                "We now check that the agent has no incentive to misreport.",
                "If the agents type is some θv, it is getting the maximum utility for that type, so it has no incentive to misreport.",
                "If the agents type is some θc where c is a satisfied clause, again, it is getting the maximum utility for that type, so it has no incentive to misreport.",
                "The final case to check is where the agents type is some θc where c is an unsatisfied clause.",
                "In this case, we observe that for none of the types, reporting it leads to an outcome ol for a literal l ∈ c, precisely because the clause is not satisfied in the MINSAT instance.",
                "Because also, no type leads to the outcome oc, there is no outcome that the mechanism ever selects that would give the agent utility greater than 1 for type θc, and hence the agent has no incentive to report falsely.",
                "This establishes that the agent never has an incentive to misreport.",
                "Finally, we show that the goal is reached.",
                "If s is the number of satisfied clauses in the MINSAT solution (so that s ≤ K), then the expected value of the designers objective function is |V ||Θ|+s|Θ|+(|C|−s)(|Θ|+1) |Θ| ≥ |V ||Θ|+K|Θ|+(|C|−K)(|Θ|+1) |Θ| = |Θ| + |C|−K |Θ| = G. So there is a solution to the AMD instance.",
                "Now suppose there is a solution to the AMD instance, given by an outcome function o.",
                "First, suppose there is some v ∈ V such that o(θv) /∈ {o+v, o−v}.",
                "The only other outcome that the mechanism is allowed to choose under the IR constraint is o0.",
                "This has an objective value of 0, and because the highest value the objective function ever takes is |Θ| + 1, it follows that the maximum expected value of the objective function that could be obtained is at most (|Θ|−1)(|Θ|+1) |Θ| < |Θ| < G, contradicting that this is a solution to the AMD instance.",
                "It follows that in the solution to the AMD instance, for every v ∈ V , o(θv) ∈ {o+v, o−v}.",
                "We can interpret this as an assignment of truth values to the variables: v is set to true if o(θv) = o+v, and to false if o(θv) = o−v.",
                "We claim this assignment is a solution to the MINSAT instance.",
                "By the above, for any type θv, the value of the objective function in this mechanism will be |Θ|.",
                "For any clause c satisfied by the given assignment, the value of the objective function in the case where the agent reports type θc will be at most |Θ|. (This is because we cannot choose the outcome o∗ for such a type, as in this case the agent would have an incentive to report θv instead, where v is the variable satisfying c in the assignment (so that o(θv) = ol where l occurs in c).)",
                "Finally, for any unsatisfied clause c, the maximum value the objective function can take in the case where the agent reports type θc is |Θ| + 1, simply because this is the largest value the function ever takes.",
                "It follows that the expected value of the objective function for our mechanism is at most V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ , where s is the number of satisfied 137 clauses.",
                "Because our mechanism achieves the goal, it follows that V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ ≥ G, which by simple algebraic manipulations is equivalent to s ≤ K. So there is a solution to the MINSAT instance.",
                "Both of our hardness results relied on the constraint that the mechanism should be deterministic.",
                "In the next section, we show that the hardness of design disappears when we allow for randomization in the mechanism. 6.",
                "RANDOMIZED AMD FOR A SELFINTERESTED DESIGNER IS EASY We now show how allowing for randomization over the outcomes makes the problem of self-interested AMD tractable through linear programming, for any constant number of agents.",
                "Theorem 3.",
                "Self-interested randomized AMD with a constant number of agents is solvable in polynomial time by linear programming, both with and without payments, both for ex post and ex interim IR, and both for implementation in dominant strategies and for implementation in Bayes-Nash equilibrium-even if the types are correlated.",
                "Proof.",
                "Because linear programs can be solved in polynomial time [13], all we need to show is that the number of variables and equations in our program is polynomial for any constant number of agents-that is, exponential only in N. Throughout, for purposes of determining the size of the linear program, let T = maxi{|Θi|}.",
                "The variables of our linear program will be the probabilities (p(θ1, θ2, . . . , θN ))(o) (at most TN |O| variables) and the payments πi(θ1, θ2, . . . , θN ) (at most NTN variables). (We show the linear program for the case where payments are possible; the case without payments is easily obtained from this by simply omitting all the payment variables in the program, or by adding additional constraints forcing the payments to be 0.)",
                "First, we show the IR constraints.",
                "For ex post IR, we add the following (at most NTN ) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, and for every (θ1, θ2, . . . , θN ) ∈ Θ1 × Θ2 × . . . × ΘN , we add ( o∈O (p(θ1, θ2, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , θN ) ≥ 0.",
                "For ex interim IR, we add the following (at most NT) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, for every θi ∈ Θi, we add θ1,... ,θN γ(θ1, . . . , θN |θi)(( o∈O (p(θ1, θ2, . . . , θN ))(o)u(θi, o))− πi(θ1, θ2, . . . , θN )) ≥ 0.",
                "Now, we show the solution concept constraints.",
                "For implementation in dominant strategies, we add the following (at most NTN+1 ) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, for every (θ1, θ2, . . . , θi, . . . , θN ) ∈ Θ1 × Θ2 × . . . × ΘN , and for every alternative type report ˆθi ∈ Θi, we add the constraint ( o∈O (p(θ1, θ2, . . . , θi, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , θi, . . . , θN ) ≥ ( o∈O (p(θ1, θ2, . . . , ˆθi, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , ˆθi, . . . , θN ).",
                "Finally, for implementation in Bayes-Nash equilibrium, we add the following (at most NT2 ) constraints to the LP: • For every i ∈ {1, 2, ..., N}, for every θi ∈ Θi, and for every alternative type report ˆθi ∈ Θi, we add the constraint θ1,...,θN γ(θ1, ..., θN |θi)(( o∈O (p(θ1, θ2, ..., θi, ..., θN ))(o)u(θi, o)) − πi(θ1, θ2, ..., θi, ..., θN )) ≥ θ1,...,θN γ(θ1, ..., θN |θi)(( o∈O (p(θ1, θ2, ..., ˆθi, ..., θN ))(o)u(θi, o)) − πi(θ1, θ2, ..., ˆθi, ..., θN )).",
                "All that is left to do is to give the expression the designer is seeking to maximize, which is: • θ1,...,θN γ(θ1, ..., θN )(( o∈O (p(θ1, θ2, ..., θi, ..., θN ))(o)g(o)) + N i=1 πi(θ1, θ2, ..., θN )).",
                "As we indicated, the number of variables and constraints is exponential only in N, and hence the linear program is of polynomial size for constant numbers of agents.",
                "Thus the problem is solvable in polynomial time. 7.",
                "IMPLICATIONS FOR AN OPTIMAL COMBINATORIAL AUCTION DESIGN PROBLEM In this section, we will demonstrate some interesting consequences of the problem of automated mechanism design for a self-interested designer on designing optimal combinatorial auctions.",
                "Consider a combinatorial auction with a set S of items for sale.",
                "For any bundle B ⊆ S, let ui(θi, B) be bidder is utility for receiving bundle B when the bidders type is θi.",
                "The optimal auction design problem is to specify the rules of the auction so as to maximize expected revenue to the auctioneer. (By the revelation principle, without loss of generality, we can assume the auction is truthful.)",
                "The optimal auction design problem is solved for the case of a single item by the famous Myerson auction [18].",
                "However, designing optimal auctions in combinatorial auctions is a recognized open research problem [3, 25].",
                "The problem is open even if there are only two items for sale. (The twoitem case with a very special form of complementarity and no substitutability has been solved recently [1].)",
                "Suppose we have free disposal-items can be thrown away at no cost.",
                "Also, suppose that the bidders preferences have the following structure: whenever a bidder receives a bundle of items, the bidders utility for that bundle is determined by the best item in the bundle only. (We emphasize that 138 which item is the best is allowed to depend on the bidders type.)",
                "Definition 10.",
                "Bidder i is said to have best-only preferences over bundles of items if there exists a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s).",
                "We make the following useful observation in this setting: there is no sense in awarding a bidder more than one item.",
                "The reason is that if the bidder is reporting truthfully, taking all but the highest valued item away from the bidder will not hurt the bidder; and, by free disposal, doing so can only reduce the incentive for this bidder to falsely report this type, when the bidder actually has another type.",
                "We now show that the problem of designing a deterministic optimal auction here is NP-complete, by a reduction from the payment maximizing AMD problem!",
                "Theorem 4.",
                "Given an optimal combinatorial auction design problem under best-only preferences (given by a set of items S and for each bidder i, a finite type space Θi and a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s)), designing the optimal deterministic auction is NP-complete, even for a single bidder with a uniform distribution over types.",
                "Proof.",
                "The problem is in NP because we can nondeterministically generate an allocation rule, and then set the payments using linear programming.",
                "To show NP-hardness, we reduce an arbitrary paymentmaximizing deterministic AMD instance, with a single agent and a uniform distribution over types, to the following optimal combinatorial auction design problem instance with a single bidder with best-only preferences.",
                "For every outcome o ∈ O in the AMD instance (besides the outcome o0), let there be one item so ∈ S. Let the type space be the same, and let v(θi, so) = ui(θi, o) (where u is as specified in the AMD instance).",
                "Let the expected revenue target value be the same in both instances.",
                "We show the instances are equivalent.",
                "First suppose there exists a solution to the AMD instance, given by an outcome function and a payment function.",
                "Then, if the AMD solution chooses outcome o for a type, in the optimal auction solution, allocate {so} to the bidder for this type. (Unless o = o0, in which case we allocate {} to the bidder.)",
                "Let the payment functions be the same in both instances.",
                "Then, the utility that an agent receives for reporting a type (given the true type) in either solution is the same, so we have incentive compatibility in the optimal auction solution.",
                "Moreover, because the type distribution and the payment function are the same, the expected revenue to the auctioneer/designer is the same.",
                "It follows that there exists a solution to the optimal auction design instance.",
                "Now suppose there exists a solution to the optimal auction design instance.",
                "By the at-most-one-item observation, we can assume without loss of generality that the solution never allocates more than one item.",
                "Then, if the optimal auction solution allocates item so to the bidder for a type, in the AMD solution, let the mechanism choose outcome o for that type.",
                "If the optimal auction solution allocates nothing to the bidder for a type, in the AMD solution, let the mechanism choose outcome o0 for that type.",
                "Let the payment functions be the same.",
                "Then, the utility that an agent receives for reporting a type (given the true type) in either solution is the same, so we have incentive compatibility in the AMD solution.",
                "Moreover, because the type distribution and the payment function are the same, the expected revenue to the designer/auctioneer is the same.",
                "It follows that there exists a solution to the AMD instance.",
                "Fortunately, we can also carry through the easiness result for randomized mechanisms to this combinatorial auction setting-giving us one of the few known polynomial-time algorithms for an optimal combinatorial auction design problem.",
                "Theorem 5.",
                "Given an optimal combinatorial auction design problem under best-only preferences (given by a set of items S and for each bidder i, a finite type space Θi and a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s)), if the number of bidders is a constant k, then the optimal randomized auction can be designed in polynomial time. (For any IC and IR constraints.)",
                "Proof.",
                "By the at-most-one-item observation, we can without loss of generality restrict ourselves to allocations where each bidder receives at most one item.",
                "There are fewer than (|S| + 1)k such allocations-that is, a polynomial number of allocations.",
                "Because we can list the outcomes explicitly, we can simply solve this as a payment-maximizing AMD instance, with linear programming. 8.",
                "RELATED RESEARCH ON COMPLEXITY IN MECHANISM DESIGN There has been considerable recent interest in mechanism design in computer science.",
                "Some of it has focused on issues of computational complexity, but most of that work has strived toward designing mechanisms that are easy to execute (e.g. [20, 15, 19, 9, 12]), rather than studying the complexity of designing the mechanism.",
                "The closest piece of earlier work studied the complexity of automated mechanism design by a benevolent designer [5, 6].",
                "Roughgarden has studied the complexity of designing a good network topology for agents that selfishly choose the links they use [21].",
                "This is related to mechanism design, but differs significantly in that the designer only has restricted control over the rules of the game because there is no party that can impose the outcome (or side payments).",
                "Also, there is no explicit reporting of preferences. 9.",
                "CONCLUSIONS AND FUTURE RESEARCH Often, an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "The key difficulty is that the agents may report their preferences insincerely to make the chosen outcome more favorable to themselves.",
                "Mechanism design is the art of designing the rules of the game so that the agents are motivated to report their preferences truthfully, and a <br>desirable outcome</br> is chosen.",
                "In a recently emerging approach-called automated mechanism design-a mechanism is computed for the specific preference aggregation setting at hand.",
                "This has several advantages, 139 but the downside is that the mechanism design optimization problem needs to be solved anew each time.",
                "Unlike earlier work on automated mechanism design that studied a benevolent designer, in this paper we studied automated mechanism design problems where the designer is self-interesteda setting much more relevant for electronic commerce.",
                "In this setting, the center cares only about which outcome is chosen and what payments are made to it.",
                "The reason that the agents preferences are relevant is that the center is constrained to making each agent at least as well off as the agent would have been had it not participated in the mechanism.",
                "In this setting, we showed that designing an optimal deterministic mechanism is NP-complete in two important special cases: when the center is interested only in the payments made to it, and when payments are not possible and the center is interested only in the outcome chosen.",
                "These hardness results imply hardness in all more general automated mechanism design settings with a self-interested designer.",
                "The hardness results apply whether the individual rationality (participation) constraints are applied ex interim or ex post, and whether the solution concept is dominant strategies implementation or Bayes-Nash equilibrium implementation.",
                "We then showed that allowing randomization in the mechanism makes the design problem in all these settings computationally easy.",
                "Finally, we showed that the paymentmaximizing AMD problem is closely related to an interesting variant of the optimal (revenue-maximizing) combinatorial auction design problem, where the bidders have best-only preferences.",
                "We showed that here, too, designing an optimal deterministic mechanism is NP-complete even with one agent, but designing an optimal randomized mechanism is easy.",
                "Future research includes studying automated mechanism design with a self-interested designer in more restricted settings such as auctions (where the designers objective may include preferences about which bidder should receive the good-as well as payments).",
                "We also want to study the complexity of automated mechanism design in settings where the outcome and type spaces have special structure so they can be represented more concisely.",
                "Finally, we plan to assemble a data set of real-world mechanism design problems-both historical and current-and apply automated mechanism design to those problems. 10.",
                "REFERENCES [1] M. Armstrong.",
                "Optimal multi-object auctions.",
                "Review of Economic Studies, 67:455-481, 2000. [2] K. Arrow.",
                "The property rights doctrine and demand revelation under incomplete information.",
                "In M. Boskin, editor, Economics and human welfare.",
                "New York Academic Press, 1979. [3] C. Avery and T. Hendershott.",
                "Bundling and optimal auctions of multiple products.",
                "Review of Economic Studies, 67:483-497, 2000. [4] E. H. Clarke.",
                "Multipart pricing of public goods.",
                "Public Choice, 11:17-33, 1971. [5] V. Conitzer and T. Sandholm.",
                "Complexity of mechanism design.",
                "In Proceedings of the 18th Annual Conference on Uncertainty in Artificial Intelligence (UAI-02), pages 103-110, Edmonton, Canada, 2002. [6] V. Conitzer and T. Sandholm.",
                "Automated mechanism design: Complexity results stemming from the single-agent setting.",
                "In Proceedings of the 5th International Conference on Electronic Commerce (ICEC-03), pages 17-24, Pittsburgh, PA, USA, 2003. [7] V. Conitzer and T. Sandholm.",
                "Computational criticisms of the revelation principle.",
                "In Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), New York, NY, 2004.",
                "Short paper.",
                "Full-length version appeared in the AAMAS-03 workshop on Agent-Mediated Electronic Commerce (AMEC). [8] C. dAspremont and L. A. G´erard-Varet.",
                "Incentives and incomplete information.",
                "Journal of Public Economics, 11:25-45, 1979. [9] J. Feigenbaum, C. Papadimitriou, and S. Shenker.",
                "Sharing the cost of muliticast transmissions.",
                "Journal of Computer and System Sciences, 63:21-41, 2001.",
                "Early version in Proceedings of the Annual ACM Symposium on Theory of Computing (STOC), 2000. [10] A. Gibbard.",
                "Manipulation of voting schemes.",
                "Econometrica, 41:587-602, 1973. [11] T. Groves.",
                "Incentives in teams.",
                "Econometrica, 41:617-631, 1973. [12] J. Hershberger and S. Suri.",
                "Vickrey prices and shortest paths: What is an edge worth?",
                "In Proceedings of the Annual Symposium on Foundations of Computer Science (FOCS), 2001. [13] L. Khachiyan.",
                "A polynomial algorithm in linear programming.",
                "Soviet Math.",
                "Doklady, 20:191-194, 1979. [14] R. Kohli, R. Krishnamurthi, and P. Mirchandani.",
                "The minimum satisfiability problem.",
                "SIAM Journal of Discrete Mathematics, 7(2):275-283, 1994. [15] D. Lehmann, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in rapid, approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002.",
                "Early version appeared in Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), 1999. [16] A. Mas-Colell, M. Whinston, and J. R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [17] E. S. Maskin and J. Riley.",
                "Optimal multi-unit auctions.",
                "In F. Hahn, editor, The Economics of Missing Markets, Information, and Games, chapter 14, pages 312-335.",
                "Clarendon Press, Oxford, 1989. [18] R. Myerson.",
                "Optimal auction design.",
                "Mathematics of Operation Research, 6:58-73, 1981. [19] N. Nisan and A. Ronen.",
                "Computationally feasible VCG mechanisms.",
                "In Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), pages 242-252, Minneapolis, MN, 2000. [20] N. Nisan and A. Ronen.",
                "Algorithmic mechanism design.",
                "Games and Economic Behavior, 35:166-196, 2001.",
                "Early version in Proceedings of the Annual ACM Symposium on Theory of Computing (STOC), 1999. [21] T. Roughgarden.",
                "Designing networks for selfish users is hard.",
                "In Proceedings of the Annual Symposium on Foundations of Computer Science (FOCS), 2001. [22] T. Sandholm.",
                "Issues in computational Vickrey auctions.",
                "International Journal of Electronic Commerce, 4(3):107-129, 2000.",
                "Special Issue on 140 Applying Intelligent Agents for Electronic Commerce.",
                "A short, early version appeared at the Second International Conference on Multi-Agent Systems (ICMAS), pages 299-306, 1996. [23] M. A. Satterthwaite.",
                "Strategy-proofness and Arrows conditions: existence and correspondence theorems for voting procedures and social welfare functions.",
                "Journal of Economic Theory, 10:187-217, 1975. [24] W. Vickrey.",
                "Counterspeculation, auctions, and competitive sealed tenders.",
                "Journal of Finance, 16:8-37, 1961. [25] R. V. Vohra.",
                "Research problems in combinatorial auctions.",
                "Mimeo, version Oct. 29, 2001. 141"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "El diseño del mecanismo es el arte de diseñar las reglas del juego para que los agentes estén motivados para informar sus preferencias sinceramente, y se elige un \"resultado deseable\".",
                "El diseño del mecanismo es el arte de diseñar las reglas del juego para que los agentes estén motivados para informar sus preferencias sinceramente, y se elige un \"resultado deseable\"."
            ],
            "translated_text": "",
            "candidates": [
                "Resultado deseable",
                "resultado deseable",
                "Resultado deseable",
                "resultado deseable"
            ],
            "error": []
        },
        "manipulability": {
            "translated_key": "manipulabilidad",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Self-interested Automated Mechanism Design and Implications for Optimal Combinatorial Auctions∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT Often, an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "The key difficulty is that the agents may report their preferences insincerely to make the chosen outcome more favorable to themselves.",
                "Mechanism design is the art of designing the rules of the game so that the agents are motivated to report their preferences truthfully, and a desirable outcome is chosen.",
                "In a recently proposed approach-called automated mechanism design-a mechanism is computed for the preference aggregation setting at hand.",
                "This has several advantages, but the downside is that the mechanism design optimization problem needs to be solved anew each time.",
                "Unlike the earlier work on automated mechanism design that studied a benevolent designer, in this paper we study automated mechanism design problems where the designer is self-interested.",
                "In this case, the center cares only about which outcome is chosen and what payments are made to it.",
                "The reason that the agents preferences are relevant is that the center is constrained to making each agent at least as well off as the agent would have been had it not participated in the mechanism.",
                "In this setting, we show that designing optimal deterministic mechanisms is NP-complete in two important special cases: when the center is interested only in the payments made to it, and when payments are not possible and the center is interested only in the outcome chosen.",
                "We then show how allowing for randomization in the mechanism makes problems in this setting computationally easy.",
                "Finally, we show that the payment-maximizing AMD problem is closely related to an interesting variant of the optimal (revenuemaximizing) combinatorial auction design problem, where the bidders have best-only preferences.",
                "We show that here, too, designing an optimal deterministic auction is NPcomplete, but designing an optimal randomized auction is easy.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In multiagent settings, often an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "Such outcomes could be potential presidents, joint plans, allocations of goods or resources, etc.",
                "The preference aggregator generally does not know the agents preferences a priori.",
                "Rather, the agents report their preferences to the coordinator.",
                "Unfortunately, an agent may have an incentive to misreport its preferences in order to mislead the mechanism into selecting an outcome that is more desirable to the agent than the outcome that would be selected if the agent revealed its preferences truthfully.",
                "Such manipulation is undesirable because preference aggregation mechanisms are tailored to aggregate preferences in a socially desirable way, and if the agents reveal their preferences insincerely, a socially undesirable outcome may be chosen.",
                "<br>manipulability</br> is a pervasive problem across preference aggregation mechanisms.",
                "A seminal negative result, the Gibbard-Satterthwaite theorem, shows that under any nondictatorial preference aggregation scheme, if there are at least 3 possible outcomes, there are preferences under which an agent is better off reporting untruthfully [10, 23]. (A preference aggregation scheme is called dictatorial if one of the agents dictates the outcome no matter what preferences the other agents report.)",
                "What the aggregator would like to do is design a preference aggregation mechanism so that 1) the self-interested agents are motivated to report their preferences truthfully, and 2) the mechanism chooses an outcome that is desirable from the perspective of some objective.",
                "This is the classic setting of mechanism design in game theory.",
                "In this paper, we study the case where the designer is self-interested, that is, the designer does not directly care about how the out132 come relates to the agents preferences, but is rather concerned with its own agenda for which outcome should be chosen, and with maximizing payments to itself.",
                "This is the mechanism design setting most relevant to electronic commerce.",
                "In the case where the mechanism designer is interested in maximizing some notion of social welfare, the importance of collecting the agents preferences is clear.",
                "It is perhaps less obvious why they should be collected when the designer is self-interested and hence its objective is not directly related to the agents preferences.",
                "The reason for this is that often the agents preferences impose limits on how the designer chooses the outcome and payments.",
                "The most common such constraint is that of individual rationality (IR), which means that the mechanism cannot make any agent worse off than the agent would have been had it not participated in the mechanism.",
                "For instance, in the setting of optimal auction design, the designer (auctioneer) is only concerned with how much revenue is collected, and not per se with how well the allocation of the good (or goods) corresponds to the agents preferences.",
                "Nevertheless, the designer cannot force an agent to pay more than its valuation for the bundle of goods allocated to it.",
                "Therefore, even a self-interested designer will choose an outcome that makes the agents reasonably well off.",
                "On the other hand, the designer will not necessarily choose a social welfare maximizing outcome.",
                "For example, if the designer always chooses an outcome that maximizes social welfare with respect to the reported preferences, and forces each agent to pay the difference between the utility it has now and the utility it would have had if it had not participated in the mechanism, it is easy to see that agents may have an incentive to misreport their preferences-and this may actually lead to less revenue being collected.",
                "Indeed, one of the counterintuitive results of optimal auction design theory is that sometimes the good is allocated to nobody even when the auctioneer has a reservation price of 0.",
                "Classical mechanism design provides some general mechanisms, which, under certain assumptions, satisfy some notion of nonmanipulability and maximize some objective.",
                "The upside of these mechanisms is that they do not rely on (even probabilistic) information about the agents preferences (e.g., the Vickrey-Clarke-Groves (VCG) mechanism [24, 4, 11]), or they can be easily applied to any probability distribution over the preferences (e.g., the dAGVA mechanism [8, 2], the Myerson auction [18], and the Maskin-Riley multi-unit auction [17]).",
                "However, the general mechanisms also have significant downsides: • The most famous and most broadly applicable general mechanisms, VCG and dAGVA, only maximize social welfare.",
                "If the designer is self-interested, as is the case in many electronic commerce settings, these mechanisms do not maximize the designers objective. • The general mechanisms that do focus on a selfinterested designer are only applicable in very restricted settings-such as Myersons expected revenue maximizing auction for selling a single item, and Maskin and Rileys expected revenue maximizing auction for selling multiple identical units of an item. • Even in the restricted settings in which these mechanisms apply, the mechanisms only allow for payment maximization.",
                "In practice, the designer may also be interested in the outcome per se.",
                "For example, an auctioneer may care which bidder receives the item. • It is often assumed that side payments can be used to tailor the agents incentives, but this is not always practical.",
                "For example, in barter-based electronic marketplaces-such as Recipco, firstbarter.com, BarterOne, and Intagio-side payments are not allowed.",
                "Furthermore, among software agents, it might be more desirable to construct mechanisms that do not rely on the ability to make payments, because many software agents do not have the infrastructure to make payments.",
                "In contrast, we follow a recent approach where the mechanism is designed automatically for the specific problem at hand.",
                "This approach addresses all of the downsides listed above.",
                "We formulate the mechanism design problem as an optimization problem.",
                "The input is characterized by the number of agents, the agents possible types (preferences), and the aggregators prior distributions over the agents types.",
                "The output is a nonmanipulable mechanism that is optimal with respect to some objective.",
                "This approach is called automated mechanism design.",
                "The automated mechanism design approach has four advantages over the classical approach of designing general mechanisms.",
                "First, it can be used even in settings that do not satisfy the assumptions of the classical mechanisms (such as availability of side payments or that the objective is social welfare).",
                "Second, it may allow one to circumvent impossibility results (such as the Gibbard-Satterthwaite theorem) which state that there is no mechanism that is desirable across all preferences.",
                "When the mechanism is designed for the setting at hand, it does not matter that it would not work more generally.",
                "Third, it may yield better mechanisms (in terms of stronger nonmanipulability guarantees and/or better outcomes) than classical mechanisms because the mechanism capitalizes on the particulars of the setting (the probabilistic information that the designer has about the agents types).",
                "Given the vast amount of information that parties have about each other today, this approach is likely to lead to tremendous savings over classical mechanisms, which largely ignore that information.",
                "For example, imagine a company automatically creating its procurement mechanism based on statistical knowledge about its suppliers, rather than using a classical descending procurement auction.",
                "Fourth, the burden of design is shifted from humans to a machine.",
                "However, automated mechanism design requires the mechanism design optimization problem to be solved anew for each setting.",
                "Hence its computational complexity becomes a key issue.",
                "Previous research has studied this question for benevolent designers-that wish to maximize, for example, social welfare [5, 6].",
                "In this paper we study the computational complexity of automated mechanism design in the case of a self-interested designer.",
                "This is an important setting for automated mechanism design due to the shortage of general mechanisms in this area, and the fact that in most e-commerce settings the designer is self-interested.",
                "We also show that this problem is closely related to a particular optimal (revenue-maximizing) combinatorial auction design problem. 133 The rest of this paper is organized as follows.",
                "In Section 2, we justify the focus on nonmanipulable mechanisms.",
                "In Section 3, we define the problem we study.",
                "In Section 4, we show that designing an optimal deterministic mechanism is NP-complete even when the designer only cares about the payments made to it.",
                "In Section 5, we show that designing an optimal deterministic mechanism is also NP-complete when payments are not possible and the designer is only interested in the outcome chosen.",
                "In Section 6, we show that an optimal randomized mechanism can be designed in polynomial time even in the general case.",
                "Finally, in Section 7, we show that for designing optimal combinatorial auctions under best-only preferences, our results on AMD imply that this problem is NP-complete for deterministic auctions, but easy for randomized auctions. 2.",
                "JUSTIFYING THE FOCUS ON NONMANIPULABLE MECHANISMS Before we define the computational problem of automated mechanism design, we should justify our focus on nonmanipulable mechanisms.",
                "After all, it is not immediately obvious that there are no manipulable mechanisms that, even when agents report their types strategically and hence sometimes untruthfully, still reach better outcomes (according to whatever objective we use) than any nonmanipulable mechanism.",
                "This does, however, turn out to be the case: given any mechanism, we can construct a nonmanipulable mechanism whose performance is identical, as follows.",
                "We build an interface layer between the agents and the original mechanism.",
                "The agents report their preferences (or types) to the interface layer; subsequently, the interface layer inputs into the original mechanism the types that the agents would have strategically reported to the original mechanism, if their types were as declared to the interface layer.",
                "The resulting outcome is the outcome of the new mechanism.",
                "Since the interface layer acts strategically on each agents behalf, there is never an incentive to report falsely to the interface layer; and hence, the types reported by the interface layer are the strategic types that would have been reported without the interface layer, so the results are exactly as they would have been with the original mechanism.",
                "This argument is known in the mechanism design literature as the revelation principle [16]. (There are computational difficulties with applying the revelation principle in large combinatorial outcome and type spaces [7, 22].",
                "However, because here we focus on flatly represented outcome and type spaces, this is not a concern here.)",
                "Given this, we can focus on truthful mechanisms in the rest of the paper. 3.",
                "DEFINITIONS We now formalize the automated mechanism design setting.",
                "Definition 1.",
                "In an automated mechanism design setting, we are given: • a finite set of outcomes O; • a finite set of N agents; • for each agent i, 1. a finite set of types Θi, 2. a probability distribution γi over Θi (in the case of correlated types, there is a single joint distribution γ over Θ1 × . . . × ΘN ), and 3. a utility function ui : Θi × O → R; 1 • An objective function whose expectation the designer wishes to maximize.",
                "There are many possible objective functions the designer might have, for example, social welfare (where the designer seeks to maximize the sum of the agents utilities), or the minimum utility of any agent (where the designer seeks to maximize the worst utility had by any agent).",
                "In both of these cases, the designer is benevolent, because the designer, in some sense, is pursuing the agents collective happiness.",
                "However, in this paper, we focus on the case of a self-interested designer.",
                "A self-interested designer cares only about the outcome chosen (that is, the designer does not care how the outcome relates to the agents preferences, but rather has a fixed preference over the outcomes), and about the net payments made by the agents, which flow to the designer.",
                "Definition 2.",
                "A self-interested designer has an objective function given by g(o) + N i=1 πi, where g : O → R indicates the designers own preference over the outcomes, and πi is the payment made by agent i.",
                "In the case where g = 0 everywhere, the designer is said to be payment maximizing.",
                "In the case where payments are not possible, g constitutes the objective function by itself.",
                "We now define the kinds of mechanisms under study.",
                "By the revelation principle, we can restrict attention to truthful, direct revelation mechanisms, where agents report their types directly and never have an incentive to misreport them.",
                "Definition 3.",
                "We consider the following kinds of mechanism: • A deterministic mechanism without payments consists of an outcome selection function o : Θ1 × Θ2 × . . . × ΘN → O. • A randomized mechanism without payments consists of a distribution selection function p : Θ1 × Θ2 × . . . × ΘN → P(O), where P(O) is the set of probability distributions over O. • A deterministic mechanism with payments consists of an outcome selection function o : Θ1 ×Θ2 ×. . .×ΘN → O and for each agent i, a payment selection function πi : Θ1 × Θ2 × . . . × ΘN → R, where πi(θ1, . . . , θN ) gives the payment made by agent i when the reported types are θ1, . . . , θN . 1 Though this follows standard game theory notation [16], the fact that the agent has both a utility function and a type is perhaps confusing.",
                "The types encode the various possible preferences that the agent may turn out to have, and the agents type is not known to the aggregator.",
                "The utility function is common knowledge, but because the agents type is a parameter in the agents utility function, the aggregator cannot know what the agents utility is without knowing the agents type. 134 • A randomized mechanism with payments consists of a distribution selection function p : Θ1 × Θ2 × . . . × ΘN → P(O), and for each agent i, a payment selection function πi : Θ1 × Θ2 × . . . × ΘN → R.2 There are two types of constraint on the designer in building the mechanism. 3.1 Individual rationality (IR) constraints The first type of constraint is the following.",
                "The utility of each agent has to be at least as great as the agents fallback utility, that is, the utility that the agent would receive if it did not participate in the mechanism.",
                "Otherwise that agent would not participate in the mechanism-and no agents participation can ever hurt the mechanism designers objective because at worst, the mechanism can ignore an agent by pretending the agent is not there. (Furthermore, if no such constraint applied, the designer could simply make the agents pay an infinite amount.)",
                "This type of constraint is called an IR (individual rationality) constraint.",
                "There are three different possible IR constraints: ex ante, ex interim, and ex post, depending on what the agent knows about its own type and the others types when deciding whether to participate in the mechanism.",
                "Ex ante IR means that the agent would participate if it knew nothing at all (not even its own type).",
                "We will not study this concept in this paper.",
                "Ex interim IR means that the agent would always participate if it knew only its own type, but not those of the others.",
                "Ex post IR means that the agent would always participate even if it knew everybodys type.",
                "We will define the latter two notions of IR formally.",
                "First, we need to formalize the concept of the fallback outcome.",
                "We assume that each agents fallback utility is zero for each one of its types.",
                "This is without loss of generality because we can add a constant term to an agents utility function (for a given type), without affecting the decision-making behavior of that expected utility maximizing agent [16].",
                "Definition 4.",
                "In any automated mechanism design setting with an IR constraint, there is a fallback outcome o0 ∈ O where, for any agent i and any type θi ∈ Θi, we have ui(θi, o0) = 0. (Additionally, in the case of a self-interested designer, g(o0) = 0.)",
                "We can now to define the notions of individual rationality.",
                "Definition 5.",
                "Individual rationality (IR) is defined by: • A deterministic mechanism is ex interim IR if for any agent i, and any type θi ∈ Θi, we have E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, .., θN ))−πi(θ1, .., θN )] ≥ 0.",
                "A randomized mechanism is ex interim IR if for any agent i, and any type θi ∈ Θi, we have E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,..,θn [ui(θi, o)−πi(θ1, .., θN )] ≥ 0. • A deterministic mechanism is ex post IR if for any agent i, and any type vector (θ1, . . . , θN ) ∈ Θ1 × . . . × ΘN , we have ui(θi, o(θ1, . . . , θN )) − πi(θ1, . . . , θN ) ≥ 0. 2 We do not randomize over payments because as long as the agents and the designer are risk neutral with respect to payments, that is, their utility is linear in payments, there is no reason to randomize over payments.",
                "A randomized mechanism is ex post IR if for any agent i, and any type vector (θ1, . . . , θN ) ∈ Θ1 × . . . × ΘN , we have Eo|θ1,..,θn [ui(θi, o) − πi(θ1, .., θN )] ≥ 0.",
                "The terms involving payments can be left out in the case where payments are not possible. 3.2 Incentive compatibility (IC) constraints The second type of constraint says that the agents should never have an incentive to misreport their type (as justified above by the revelation principle).",
                "For this type of constraint, the two most common variants (or solution concepts) are implementation in dominant strategies, and implementation in Bayes-Nash equilibrium.",
                "Definition 6.",
                "Given an automated mechanism design setting, a mechanism is said to implement its outcome and payment functions in dominant strategies if truthtelling is always optimal even when the types reported by the other agents are already known.",
                "Formally, for any agent i, any type vector (θ1, . . . , θi, . . . , θN ) ∈ Θ1 × . . . × Θi × . . . × ΘN , and any alternative type report ˆθi ∈ Θi, in the case of deterministic mechanisms we have ui(θi, o(θ1, . . . , θi, . . . , θN )) − πi(θ1, . . . , θi, . . . , θN ) ≥ ui(θi, o(θ1, . . . , ˆθi, . . . , θN )) − πi(θ1, . . . , ˆθi, . . . , θN ).",
                "In the case of randomized mechanisms we have Eo|θ1,..,θi,..,θn [ui(θi, o) − πi(θ1, . . . , θi, . . . , θN )] ≥ Eo|θ1,.., ˆθi,..,θn [ui(θi, o) − πi(θ1, . . . , ˆθi, . . . , θN )].",
                "The terms involving payments can be left out in the case where payments are not possible.",
                "Thus, in dominant strategies implementation, truthtelling is optimal regardless of what the other agents report.",
                "If it is optimal only given that the other agents are truthful, and given that one does not know the other agents types, we have implementation in Bayes-Nash equilibrium.",
                "Definition 7.",
                "Given an automated mechanism design setting, a mechanism is said to implement its outcome and payment functions in Bayes-Nash equilibrium if truthtelling is always optimal to an agent when that agent does not yet know anything about the other agents types, and the other agents are telling the truth.",
                "Formally, for any agent i, any type θi ∈ Θi, and any alternative type report ˆθi ∈ Θi, in the case of deterministic mechanisms we have E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, . . . , θi, . . . , θN ))− πi(θ1, . . . , θi, . . . , θN )] ≥ E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, . . . , ˆθi, . . . , θN ))− πi(θ1, . . . , ˆθi, . . . , θN )].",
                "In the case of randomized mechanisms we have E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,..,θi,..,θn [ui(θi, o)− πi(θ1, . . . , θi, . . . , θN )] ≥ E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,.., ˆθi,..,θn [ui(θi, o)− πi(θ1, . . . , ˆθi, . . . , θN )].",
                "The terms involving payments can be left out in the case where payments are not possible. 135 3.3 Automated mechanism design We can now define the computational problem we study.",
                "Definition 8. (AUTOMATED-MECHANISM-DESIGN (AMD)) We are given: • an automated mechanism design setting, • an IR notion (ex interim, ex post, or none), • a solution concept (dominant strategies or Bayes-Nash), • whether payments are possible, • whether randomization is possible, • (in the decision variant of the problem) a target value G. We are asked whether there exists a mechanism of the specified kind (in terms of payments and randomization) that satisfies both the IR notion and the solution concept, and gives an expected value of at least G for the objective.",
                "An interesting special case is the setting where there is only one agent.",
                "In this case, the reporting agent always knows everything there is to know about the other agents types-because there are no other agents.",
                "Since ex post and ex interim IR only differ on what an agent is assumed to know about other agents types, the two IR concepts coincide here.",
                "Also, because implementation in dominant strategies and implementation in Bayes-Nash equilibrium only differ on what an agent is assumed to know about other agents types, the two solution concepts coincide here.",
                "This observation will prove to be a useful tool in proving hardness results: if we prove computational hardness in the singleagent setting, this immediately implies hardness for both IR concepts, for both solution concepts, for any number of agents. 4.",
                "PAYMENT-MAXIMIZINGDETERMINISTIC AMD IS HARD In this section we demonstrate that it is NP-complete to design a deterministic mechanism that maximizes the expected sum of the payments collected from the agents.",
                "We show that this problem is hard even in the single-agent setting, thereby immediately showing it hard for both IR concepts, for both solution concepts.",
                "To demonstrate NPhardness, we reduce from the MINSAT problem.",
                "Definition 9 (MINSAT).",
                "We are given a formula φ in conjunctive normal form, represented by a set of Boolean variables V and a set of clauses C, and an integer K (K < |C|).",
                "We are asked whether there exists an assignment to the variables in V such that at most K clauses in φ are satisfied.",
                "MINSAT was recently shown to be NP-complete [14].",
                "We can now present our result.",
                "Theorem 1.",
                "Payment-maximizing deterministic AMD is NP-complete, even for a single agent, even with a uniform distribution over types.",
                "Proof.",
                "It is easy to show that the problem is in NP.",
                "To show NP-hardness, we reduce an arbitrary MINSAT instance to the following single-agent payment-maximizing deterministic AMD instance.",
                "Let the agents type set be Θ = {θc : c ∈ C} ∪ {θv : v ∈ V }, where C is the set of clauses in the MINSAT instance, and V is the set of variables.",
                "Let the probability distribution over these types be uniform.",
                "Let the outcome set be O = {o0} ∪ {oc : c ∈ C} ∪ {ol : l ∈ L}, where L is the set of literals, that is, L = {+v : v ∈ V } ∪ {−v : v ∈ V }.",
                "Let the notation v(l) = v denote that v is the variable corresponding to the literal l, that is, l ∈ {+v, −v}.",
                "Let l ∈ c denote that the literal l occurs in clause c. Then, let the agents utility function be given by u(θc, ol) = |Θ| + 1 for all l ∈ L with l ∈ c; u(θc, ol) = 0 for all l ∈ L with l /∈ c; u(θc, oc) = |Θ| + 1; u(θc, oc ) = 0 for all c ∈ C with c = c ; u(θv, ol) = |Θ| for all l ∈ L with v(l) = v; u(θv, ol) = 0 for all l ∈ L with v(l) = v; u(θv, oc) = 0 for all c ∈ C. The goal of the AMD instance is G = |Θ| + |C|−K |Θ| , where K is the goal of the MINSAT instance.",
                "We show the instances are equivalent.",
                "First, suppose there is a solution to the MINSAT instance.",
                "Let the assignment of truth values to the variables in this solution be given by the function f : V → L (where v(f(v)) = v for all v ∈ V ).",
                "Then, for every v ∈ V , let o(θv) = of(v) and π(θv) = |Θ|.",
                "For every c ∈ C, let o(θc) = oc; let π(θc) = |Θ| + 1 if c is not satisfied in the MINSAT solution, and π(θc) = |Θ| if c is satisfied.",
                "It is straightforward to check that the IR constraint is satisfied.",
                "We now check that the agent has no incentive to misreport.",
                "If the agents type is some θv, then any other report will give it an outcome that is no better, for a payment that is no less, so it has no incentive to misreport.",
                "If the agents type is some θc where c is a satisfied clause, again, any other report will give it an outcome that is no better, for a payment that is no less, so it has no incentive to misreport.",
                "The final case to check is where the agents type is some θc where c is an unsatisfied clause.",
                "In this case, we observe that for none of the types, reporting it leads to an outcome ol for a literal l ∈ c, precisely because the clause is not satisfied in the MINSAT instance.",
                "Because also, no type besides θc leads to the outcome oc, reporting any other type will give an outcome with utility 0, while still forcing a payment of at least |Θ| from the agent.",
                "Clearly the agent is better off reporting truthfully, for a total utility of 0.",
                "This establishes that the agent never has an incentive to misreport.",
                "Finally, we show that the goal is reached.",
                "If s is the number of satisfied clauses in the MINSAT solution (so that s ≤ K), the expected payment from this mechanism is |V ||Θ|+s|Θ|+(|C|−s)(|Θ|+1) |Θ| ≥ |V ||Θ|+K|Θ|+(|C|−K)(|Θ|+1) |Θ| = |Θ| + |C|−K |Θ| = G. So there is a solution to the AMD instance.",
                "Now suppose there is a solution to the AMD instance, given by an outcome function o and a payment function π.",
                "First, suppose there is some v ∈ V such that o(θv) /∈ {o+v, o−v}.",
                "Then the utility that the agent derives from the given outcome for this type is 0, and hence, by IR, no payment can be extracted from the agent for this type.",
                "Because, again by IR, the maximum payment that can be extracted for any other type is |Θ| + 1, it follows that the maximum expected payment that could be obtained is at most (|Θ|−1)(|Θ|+1) |Θ| < |Θ| < G, contradicting that this is a solution to the AMD instance.",
                "It follows that in the solution to the AMD instance, for every v ∈ V , o(θv) ∈ {o+v, o−v}. 136 We can interpret this as an assignment of truth values to the variables: v is set to true if o(θv) = o+v, and to false if o(θv) = o−v.",
                "We claim this assignment is a solution to the MINSAT instance.",
                "By the IR constraint, the maximum payment we can extract from any type θv is |Θ|.",
                "Because there can be no incentives for the agent to report falsely, for any clause c satisfied by the given assignment, the maximum payment we can extract for the corresponding type θc is |Θ|. (For if we extracted more from this type, the agents utility in this case would be less than 1; and if v is the variable satisfying c in the assignment, so that o(θv) = ol where l occurs in c, then the agent would be better off reporting θv instead of the truthful report θc, to get an outcome worth |Θ|+1 to it while having to pay at most |Θ|.)",
                "Finally, for any unsatisfied clause c, by the IR constraint, the maximum payment we can extract for the corresponding type θc is |Θ| + 1.",
                "It follows that the expected payment from our mechanism is at most V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ , where s is the number of satisfied clauses.",
                "Because our mechanism achieves the goal, it follows that V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ ≥ G, which by simple algebraic manipulations is equivalent to s ≤ K. So there is a solution to the MINSAT instance.",
                "Because payment-maximizing AMD is just the special case of AMD for a self-interested designer where the designer has no preferences over the outcome chosen, this immediately implies hardness for the general case of AMD for a selfinterested designer where payments are possible.",
                "However, it does not yet imply hardness for the special case where payments are not possible.",
                "We will prove hardness in this case in the next section. 5.",
                "SELF-INTERESTED DETERMINISTIC AMD WITHOUT PAYMENTS IS HARD In this section we demonstrate that it is NP-complete to design a deterministic mechanism that maximizes the expectation of the designers objective when payments are not possible.",
                "We show that this problem is hard even in the single-agent setting, thereby immediately showing it hard for both IR concepts, for both solution concepts.",
                "Theorem 2.",
                "Without payments, deterministic AMD for a self-interested designer is NP-complete, even for a single agent, even with a uniform distribution over types.",
                "Proof.",
                "It is easy to show that the problem is in NP.",
                "To show NP-hardness, we reduce an arbitrary MINSAT instance to the following single-agent self-interested deterministic AMD without payments instance.",
                "Let the agents type set be Θ = {θc : c ∈ C} ∪ {θv : v ∈ V }, where C is the set of clauses in the MINSAT instance, and V is the set of variables.",
                "Let the probability distribution over these types be uniform.",
                "Let the outcome set be O = {o0} ∪ {oc : c ∈ C}∪{ol : l ∈ L}∪{o∗ }, where L is the set of literals, that is, L = {+v : v ∈ V } ∪ {−v : v ∈ V }.",
                "Let the notation v(l) = v denote that v is the variable corresponding to the literal l, that is, l ∈ {+v, −v}.",
                "Let l ∈ c denote that the literal l occurs in clause c. Then, let the agents utility function be given by u(θc, ol) = 2 for all l ∈ L with l ∈ c; u(θc, ol) = −1 for all l ∈ L with l /∈ c; u(θc, oc) = 2; u(θc, oc ) = −1 for all c ∈ C with c = c ; u(θc, o∗ ) = 1; u(θv, ol) = 1 for all l ∈ L with v(l) = v; u(θv, ol) = −1 for all l ∈ L with v(l) = v; u(θv, oc) = −1 for all c ∈ C; u(θv, o∗ ) = −1.",
                "Let the designers objective function be given by g(o∗ ) = |Θ|+1; g(ol) = |Θ| for all l ∈ L; g(oc) = |Θ| for all c ∈ C. The goal of the AMD instance is G = |Θ| + |C|−K |Θ| , where K is the goal of the MINSAT instance.",
                "We show the instances are equivalent.",
                "First, suppose there is a solution to the MINSAT instance.",
                "Let the assignment of truth values to the variables in this solution be given by the function f : V → L (where v(f(v)) = v for all v ∈ V ).",
                "Then, for every v ∈ V , let o(θv) = of(v).",
                "For every c ∈ C that is satisfied in the MINSAT solution, let o(θc) = oc; for every unsatisfied c ∈ C, let o(θc) = o∗ .",
                "It is straightforward to check that the IR constraint is satisfied.",
                "We now check that the agent has no incentive to misreport.",
                "If the agents type is some θv, it is getting the maximum utility for that type, so it has no incentive to misreport.",
                "If the agents type is some θc where c is a satisfied clause, again, it is getting the maximum utility for that type, so it has no incentive to misreport.",
                "The final case to check is where the agents type is some θc where c is an unsatisfied clause.",
                "In this case, we observe that for none of the types, reporting it leads to an outcome ol for a literal l ∈ c, precisely because the clause is not satisfied in the MINSAT instance.",
                "Because also, no type leads to the outcome oc, there is no outcome that the mechanism ever selects that would give the agent utility greater than 1 for type θc, and hence the agent has no incentive to report falsely.",
                "This establishes that the agent never has an incentive to misreport.",
                "Finally, we show that the goal is reached.",
                "If s is the number of satisfied clauses in the MINSAT solution (so that s ≤ K), then the expected value of the designers objective function is |V ||Θ|+s|Θ|+(|C|−s)(|Θ|+1) |Θ| ≥ |V ||Θ|+K|Θ|+(|C|−K)(|Θ|+1) |Θ| = |Θ| + |C|−K |Θ| = G. So there is a solution to the AMD instance.",
                "Now suppose there is a solution to the AMD instance, given by an outcome function o.",
                "First, suppose there is some v ∈ V such that o(θv) /∈ {o+v, o−v}.",
                "The only other outcome that the mechanism is allowed to choose under the IR constraint is o0.",
                "This has an objective value of 0, and because the highest value the objective function ever takes is |Θ| + 1, it follows that the maximum expected value of the objective function that could be obtained is at most (|Θ|−1)(|Θ|+1) |Θ| < |Θ| < G, contradicting that this is a solution to the AMD instance.",
                "It follows that in the solution to the AMD instance, for every v ∈ V , o(θv) ∈ {o+v, o−v}.",
                "We can interpret this as an assignment of truth values to the variables: v is set to true if o(θv) = o+v, and to false if o(θv) = o−v.",
                "We claim this assignment is a solution to the MINSAT instance.",
                "By the above, for any type θv, the value of the objective function in this mechanism will be |Θ|.",
                "For any clause c satisfied by the given assignment, the value of the objective function in the case where the agent reports type θc will be at most |Θ|. (This is because we cannot choose the outcome o∗ for such a type, as in this case the agent would have an incentive to report θv instead, where v is the variable satisfying c in the assignment (so that o(θv) = ol where l occurs in c).)",
                "Finally, for any unsatisfied clause c, the maximum value the objective function can take in the case where the agent reports type θc is |Θ| + 1, simply because this is the largest value the function ever takes.",
                "It follows that the expected value of the objective function for our mechanism is at most V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ , where s is the number of satisfied 137 clauses.",
                "Because our mechanism achieves the goal, it follows that V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ ≥ G, which by simple algebraic manipulations is equivalent to s ≤ K. So there is a solution to the MINSAT instance.",
                "Both of our hardness results relied on the constraint that the mechanism should be deterministic.",
                "In the next section, we show that the hardness of design disappears when we allow for randomization in the mechanism. 6.",
                "RANDOMIZED AMD FOR A SELFINTERESTED DESIGNER IS EASY We now show how allowing for randomization over the outcomes makes the problem of self-interested AMD tractable through linear programming, for any constant number of agents.",
                "Theorem 3.",
                "Self-interested randomized AMD with a constant number of agents is solvable in polynomial time by linear programming, both with and without payments, both for ex post and ex interim IR, and both for implementation in dominant strategies and for implementation in Bayes-Nash equilibrium-even if the types are correlated.",
                "Proof.",
                "Because linear programs can be solved in polynomial time [13], all we need to show is that the number of variables and equations in our program is polynomial for any constant number of agents-that is, exponential only in N. Throughout, for purposes of determining the size of the linear program, let T = maxi{|Θi|}.",
                "The variables of our linear program will be the probabilities (p(θ1, θ2, . . . , θN ))(o) (at most TN |O| variables) and the payments πi(θ1, θ2, . . . , θN ) (at most NTN variables). (We show the linear program for the case where payments are possible; the case without payments is easily obtained from this by simply omitting all the payment variables in the program, or by adding additional constraints forcing the payments to be 0.)",
                "First, we show the IR constraints.",
                "For ex post IR, we add the following (at most NTN ) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, and for every (θ1, θ2, . . . , θN ) ∈ Θ1 × Θ2 × . . . × ΘN , we add ( o∈O (p(θ1, θ2, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , θN ) ≥ 0.",
                "For ex interim IR, we add the following (at most NT) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, for every θi ∈ Θi, we add θ1,... ,θN γ(θ1, . . . , θN |θi)(( o∈O (p(θ1, θ2, . . . , θN ))(o)u(θi, o))− πi(θ1, θ2, . . . , θN )) ≥ 0.",
                "Now, we show the solution concept constraints.",
                "For implementation in dominant strategies, we add the following (at most NTN+1 ) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, for every (θ1, θ2, . . . , θi, . . . , θN ) ∈ Θ1 × Θ2 × . . . × ΘN , and for every alternative type report ˆθi ∈ Θi, we add the constraint ( o∈O (p(θ1, θ2, . . . , θi, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , θi, . . . , θN ) ≥ ( o∈O (p(θ1, θ2, . . . , ˆθi, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , ˆθi, . . . , θN ).",
                "Finally, for implementation in Bayes-Nash equilibrium, we add the following (at most NT2 ) constraints to the LP: • For every i ∈ {1, 2, ..., N}, for every θi ∈ Θi, and for every alternative type report ˆθi ∈ Θi, we add the constraint θ1,...,θN γ(θ1, ..., θN |θi)(( o∈O (p(θ1, θ2, ..., θi, ..., θN ))(o)u(θi, o)) − πi(θ1, θ2, ..., θi, ..., θN )) ≥ θ1,...,θN γ(θ1, ..., θN |θi)(( o∈O (p(θ1, θ2, ..., ˆθi, ..., θN ))(o)u(θi, o)) − πi(θ1, θ2, ..., ˆθi, ..., θN )).",
                "All that is left to do is to give the expression the designer is seeking to maximize, which is: • θ1,...,θN γ(θ1, ..., θN )(( o∈O (p(θ1, θ2, ..., θi, ..., θN ))(o)g(o)) + N i=1 πi(θ1, θ2, ..., θN )).",
                "As we indicated, the number of variables and constraints is exponential only in N, and hence the linear program is of polynomial size for constant numbers of agents.",
                "Thus the problem is solvable in polynomial time. 7.",
                "IMPLICATIONS FOR AN OPTIMAL COMBINATORIAL AUCTION DESIGN PROBLEM In this section, we will demonstrate some interesting consequences of the problem of automated mechanism design for a self-interested designer on designing optimal combinatorial auctions.",
                "Consider a combinatorial auction with a set S of items for sale.",
                "For any bundle B ⊆ S, let ui(θi, B) be bidder is utility for receiving bundle B when the bidders type is θi.",
                "The optimal auction design problem is to specify the rules of the auction so as to maximize expected revenue to the auctioneer. (By the revelation principle, without loss of generality, we can assume the auction is truthful.)",
                "The optimal auction design problem is solved for the case of a single item by the famous Myerson auction [18].",
                "However, designing optimal auctions in combinatorial auctions is a recognized open research problem [3, 25].",
                "The problem is open even if there are only two items for sale. (The twoitem case with a very special form of complementarity and no substitutability has been solved recently [1].)",
                "Suppose we have free disposal-items can be thrown away at no cost.",
                "Also, suppose that the bidders preferences have the following structure: whenever a bidder receives a bundle of items, the bidders utility for that bundle is determined by the best item in the bundle only. (We emphasize that 138 which item is the best is allowed to depend on the bidders type.)",
                "Definition 10.",
                "Bidder i is said to have best-only preferences over bundles of items if there exists a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s).",
                "We make the following useful observation in this setting: there is no sense in awarding a bidder more than one item.",
                "The reason is that if the bidder is reporting truthfully, taking all but the highest valued item away from the bidder will not hurt the bidder; and, by free disposal, doing so can only reduce the incentive for this bidder to falsely report this type, when the bidder actually has another type.",
                "We now show that the problem of designing a deterministic optimal auction here is NP-complete, by a reduction from the payment maximizing AMD problem!",
                "Theorem 4.",
                "Given an optimal combinatorial auction design problem under best-only preferences (given by a set of items S and for each bidder i, a finite type space Θi and a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s)), designing the optimal deterministic auction is NP-complete, even for a single bidder with a uniform distribution over types.",
                "Proof.",
                "The problem is in NP because we can nondeterministically generate an allocation rule, and then set the payments using linear programming.",
                "To show NP-hardness, we reduce an arbitrary paymentmaximizing deterministic AMD instance, with a single agent and a uniform distribution over types, to the following optimal combinatorial auction design problem instance with a single bidder with best-only preferences.",
                "For every outcome o ∈ O in the AMD instance (besides the outcome o0), let there be one item so ∈ S. Let the type space be the same, and let v(θi, so) = ui(θi, o) (where u is as specified in the AMD instance).",
                "Let the expected revenue target value be the same in both instances.",
                "We show the instances are equivalent.",
                "First suppose there exists a solution to the AMD instance, given by an outcome function and a payment function.",
                "Then, if the AMD solution chooses outcome o for a type, in the optimal auction solution, allocate {so} to the bidder for this type. (Unless o = o0, in which case we allocate {} to the bidder.)",
                "Let the payment functions be the same in both instances.",
                "Then, the utility that an agent receives for reporting a type (given the true type) in either solution is the same, so we have incentive compatibility in the optimal auction solution.",
                "Moreover, because the type distribution and the payment function are the same, the expected revenue to the auctioneer/designer is the same.",
                "It follows that there exists a solution to the optimal auction design instance.",
                "Now suppose there exists a solution to the optimal auction design instance.",
                "By the at-most-one-item observation, we can assume without loss of generality that the solution never allocates more than one item.",
                "Then, if the optimal auction solution allocates item so to the bidder for a type, in the AMD solution, let the mechanism choose outcome o for that type.",
                "If the optimal auction solution allocates nothing to the bidder for a type, in the AMD solution, let the mechanism choose outcome o0 for that type.",
                "Let the payment functions be the same.",
                "Then, the utility that an agent receives for reporting a type (given the true type) in either solution is the same, so we have incentive compatibility in the AMD solution.",
                "Moreover, because the type distribution and the payment function are the same, the expected revenue to the designer/auctioneer is the same.",
                "It follows that there exists a solution to the AMD instance.",
                "Fortunately, we can also carry through the easiness result for randomized mechanisms to this combinatorial auction setting-giving us one of the few known polynomial-time algorithms for an optimal combinatorial auction design problem.",
                "Theorem 5.",
                "Given an optimal combinatorial auction design problem under best-only preferences (given by a set of items S and for each bidder i, a finite type space Θi and a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s)), if the number of bidders is a constant k, then the optimal randomized auction can be designed in polynomial time. (For any IC and IR constraints.)",
                "Proof.",
                "By the at-most-one-item observation, we can without loss of generality restrict ourselves to allocations where each bidder receives at most one item.",
                "There are fewer than (|S| + 1)k such allocations-that is, a polynomial number of allocations.",
                "Because we can list the outcomes explicitly, we can simply solve this as a payment-maximizing AMD instance, with linear programming. 8.",
                "RELATED RESEARCH ON COMPLEXITY IN MECHANISM DESIGN There has been considerable recent interest in mechanism design in computer science.",
                "Some of it has focused on issues of computational complexity, but most of that work has strived toward designing mechanisms that are easy to execute (e.g. [20, 15, 19, 9, 12]), rather than studying the complexity of designing the mechanism.",
                "The closest piece of earlier work studied the complexity of automated mechanism design by a benevolent designer [5, 6].",
                "Roughgarden has studied the complexity of designing a good network topology for agents that selfishly choose the links they use [21].",
                "This is related to mechanism design, but differs significantly in that the designer only has restricted control over the rules of the game because there is no party that can impose the outcome (or side payments).",
                "Also, there is no explicit reporting of preferences. 9.",
                "CONCLUSIONS AND FUTURE RESEARCH Often, an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "The key difficulty is that the agents may report their preferences insincerely to make the chosen outcome more favorable to themselves.",
                "Mechanism design is the art of designing the rules of the game so that the agents are motivated to report their preferences truthfully, and a desirable outcome is chosen.",
                "In a recently emerging approach-called automated mechanism design-a mechanism is computed for the specific preference aggregation setting at hand.",
                "This has several advantages, 139 but the downside is that the mechanism design optimization problem needs to be solved anew each time.",
                "Unlike earlier work on automated mechanism design that studied a benevolent designer, in this paper we studied automated mechanism design problems where the designer is self-interesteda setting much more relevant for electronic commerce.",
                "In this setting, the center cares only about which outcome is chosen and what payments are made to it.",
                "The reason that the agents preferences are relevant is that the center is constrained to making each agent at least as well off as the agent would have been had it not participated in the mechanism.",
                "In this setting, we showed that designing an optimal deterministic mechanism is NP-complete in two important special cases: when the center is interested only in the payments made to it, and when payments are not possible and the center is interested only in the outcome chosen.",
                "These hardness results imply hardness in all more general automated mechanism design settings with a self-interested designer.",
                "The hardness results apply whether the individual rationality (participation) constraints are applied ex interim or ex post, and whether the solution concept is dominant strategies implementation or Bayes-Nash equilibrium implementation.",
                "We then showed that allowing randomization in the mechanism makes the design problem in all these settings computationally easy.",
                "Finally, we showed that the paymentmaximizing AMD problem is closely related to an interesting variant of the optimal (revenue-maximizing) combinatorial auction design problem, where the bidders have best-only preferences.",
                "We showed that here, too, designing an optimal deterministic mechanism is NP-complete even with one agent, but designing an optimal randomized mechanism is easy.",
                "Future research includes studying automated mechanism design with a self-interested designer in more restricted settings such as auctions (where the designers objective may include preferences about which bidder should receive the good-as well as payments).",
                "We also want to study the complexity of automated mechanism design in settings where the outcome and type spaces have special structure so they can be represented more concisely.",
                "Finally, we plan to assemble a data set of real-world mechanism design problems-both historical and current-and apply automated mechanism design to those problems. 10.",
                "REFERENCES [1] M. Armstrong.",
                "Optimal multi-object auctions.",
                "Review of Economic Studies, 67:455-481, 2000. [2] K. Arrow.",
                "The property rights doctrine and demand revelation under incomplete information.",
                "In M. Boskin, editor, Economics and human welfare.",
                "New York Academic Press, 1979. [3] C. Avery and T. Hendershott.",
                "Bundling and optimal auctions of multiple products.",
                "Review of Economic Studies, 67:483-497, 2000. [4] E. H. Clarke.",
                "Multipart pricing of public goods.",
                "Public Choice, 11:17-33, 1971. [5] V. Conitzer and T. Sandholm.",
                "Complexity of mechanism design.",
                "In Proceedings of the 18th Annual Conference on Uncertainty in Artificial Intelligence (UAI-02), pages 103-110, Edmonton, Canada, 2002. [6] V. Conitzer and T. Sandholm.",
                "Automated mechanism design: Complexity results stemming from the single-agent setting.",
                "In Proceedings of the 5th International Conference on Electronic Commerce (ICEC-03), pages 17-24, Pittsburgh, PA, USA, 2003. [7] V. Conitzer and T. Sandholm.",
                "Computational criticisms of the revelation principle.",
                "In Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), New York, NY, 2004.",
                "Short paper.",
                "Full-length version appeared in the AAMAS-03 workshop on Agent-Mediated Electronic Commerce (AMEC). [8] C. dAspremont and L. A. G´erard-Varet.",
                "Incentives and incomplete information.",
                "Journal of Public Economics, 11:25-45, 1979. [9] J. Feigenbaum, C. Papadimitriou, and S. Shenker.",
                "Sharing the cost of muliticast transmissions.",
                "Journal of Computer and System Sciences, 63:21-41, 2001.",
                "Early version in Proceedings of the Annual ACM Symposium on Theory of Computing (STOC), 2000. [10] A. Gibbard.",
                "Manipulation of voting schemes.",
                "Econometrica, 41:587-602, 1973. [11] T. Groves.",
                "Incentives in teams.",
                "Econometrica, 41:617-631, 1973. [12] J. Hershberger and S. Suri.",
                "Vickrey prices and shortest paths: What is an edge worth?",
                "In Proceedings of the Annual Symposium on Foundations of Computer Science (FOCS), 2001. [13] L. Khachiyan.",
                "A polynomial algorithm in linear programming.",
                "Soviet Math.",
                "Doklady, 20:191-194, 1979. [14] R. Kohli, R. Krishnamurthi, and P. Mirchandani.",
                "The minimum satisfiability problem.",
                "SIAM Journal of Discrete Mathematics, 7(2):275-283, 1994. [15] D. Lehmann, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in rapid, approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002.",
                "Early version appeared in Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), 1999. [16] A. Mas-Colell, M. Whinston, and J. R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [17] E. S. Maskin and J. Riley.",
                "Optimal multi-unit auctions.",
                "In F. Hahn, editor, The Economics of Missing Markets, Information, and Games, chapter 14, pages 312-335.",
                "Clarendon Press, Oxford, 1989. [18] R. Myerson.",
                "Optimal auction design.",
                "Mathematics of Operation Research, 6:58-73, 1981. [19] N. Nisan and A. Ronen.",
                "Computationally feasible VCG mechanisms.",
                "In Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), pages 242-252, Minneapolis, MN, 2000. [20] N. Nisan and A. Ronen.",
                "Algorithmic mechanism design.",
                "Games and Economic Behavior, 35:166-196, 2001.",
                "Early version in Proceedings of the Annual ACM Symposium on Theory of Computing (STOC), 1999. [21] T. Roughgarden.",
                "Designing networks for selfish users is hard.",
                "In Proceedings of the Annual Symposium on Foundations of Computer Science (FOCS), 2001. [22] T. Sandholm.",
                "Issues in computational Vickrey auctions.",
                "International Journal of Electronic Commerce, 4(3):107-129, 2000.",
                "Special Issue on 140 Applying Intelligent Agents for Electronic Commerce.",
                "A short, early version appeared at the Second International Conference on Multi-Agent Systems (ICMAS), pages 299-306, 1996. [23] M. A. Satterthwaite.",
                "Strategy-proofness and Arrows conditions: existence and correspondence theorems for voting procedures and social welfare functions.",
                "Journal of Economic Theory, 10:187-217, 1975. [24] W. Vickrey.",
                "Counterspeculation, auctions, and competitive sealed tenders.",
                "Journal of Finance, 16:8-37, 1961. [25] R. V. Vohra.",
                "Research problems in combinatorial auctions.",
                "Mimeo, version Oct. 29, 2001. 141"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "La \"manipulabilidad\" es un problema generalizado en los mecanismos de agregación de preferencias."
            ],
            "translated_text": "",
            "candidates": [
                "manipulabilidad",
                "manipulabilidad"
            ],
            "error": []
        },
        "preference aggregator": {
            "translated_key": "agregador de preferencias",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Self-interested Automated Mechanism Design and Implications for Optimal Combinatorial Auctions∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT Often, an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "The key difficulty is that the agents may report their preferences insincerely to make the chosen outcome more favorable to themselves.",
                "Mechanism design is the art of designing the rules of the game so that the agents are motivated to report their preferences truthfully, and a desirable outcome is chosen.",
                "In a recently proposed approach-called automated mechanism design-a mechanism is computed for the preference aggregation setting at hand.",
                "This has several advantages, but the downside is that the mechanism design optimization problem needs to be solved anew each time.",
                "Unlike the earlier work on automated mechanism design that studied a benevolent designer, in this paper we study automated mechanism design problems where the designer is self-interested.",
                "In this case, the center cares only about which outcome is chosen and what payments are made to it.",
                "The reason that the agents preferences are relevant is that the center is constrained to making each agent at least as well off as the agent would have been had it not participated in the mechanism.",
                "In this setting, we show that designing optimal deterministic mechanisms is NP-complete in two important special cases: when the center is interested only in the payments made to it, and when payments are not possible and the center is interested only in the outcome chosen.",
                "We then show how allowing for randomization in the mechanism makes problems in this setting computationally easy.",
                "Finally, we show that the payment-maximizing AMD problem is closely related to an interesting variant of the optimal (revenuemaximizing) combinatorial auction design problem, where the bidders have best-only preferences.",
                "We show that here, too, designing an optimal deterministic auction is NPcomplete, but designing an optimal randomized auction is easy.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In multiagent settings, often an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "Such outcomes could be potential presidents, joint plans, allocations of goods or resources, etc.",
                "The <br>preference aggregator</br> generally does not know the agents preferences a priori.",
                "Rather, the agents report their preferences to the coordinator.",
                "Unfortunately, an agent may have an incentive to misreport its preferences in order to mislead the mechanism into selecting an outcome that is more desirable to the agent than the outcome that would be selected if the agent revealed its preferences truthfully.",
                "Such manipulation is undesirable because preference aggregation mechanisms are tailored to aggregate preferences in a socially desirable way, and if the agents reveal their preferences insincerely, a socially undesirable outcome may be chosen.",
                "Manipulability is a pervasive problem across preference aggregation mechanisms.",
                "A seminal negative result, the Gibbard-Satterthwaite theorem, shows that under any nondictatorial preference aggregation scheme, if there are at least 3 possible outcomes, there are preferences under which an agent is better off reporting untruthfully [10, 23]. (A preference aggregation scheme is called dictatorial if one of the agents dictates the outcome no matter what preferences the other agents report.)",
                "What the aggregator would like to do is design a preference aggregation mechanism so that 1) the self-interested agents are motivated to report their preferences truthfully, and 2) the mechanism chooses an outcome that is desirable from the perspective of some objective.",
                "This is the classic setting of mechanism design in game theory.",
                "In this paper, we study the case where the designer is self-interested, that is, the designer does not directly care about how the out132 come relates to the agents preferences, but is rather concerned with its own agenda for which outcome should be chosen, and with maximizing payments to itself.",
                "This is the mechanism design setting most relevant to electronic commerce.",
                "In the case where the mechanism designer is interested in maximizing some notion of social welfare, the importance of collecting the agents preferences is clear.",
                "It is perhaps less obvious why they should be collected when the designer is self-interested and hence its objective is not directly related to the agents preferences.",
                "The reason for this is that often the agents preferences impose limits on how the designer chooses the outcome and payments.",
                "The most common such constraint is that of individual rationality (IR), which means that the mechanism cannot make any agent worse off than the agent would have been had it not participated in the mechanism.",
                "For instance, in the setting of optimal auction design, the designer (auctioneer) is only concerned with how much revenue is collected, and not per se with how well the allocation of the good (or goods) corresponds to the agents preferences.",
                "Nevertheless, the designer cannot force an agent to pay more than its valuation for the bundle of goods allocated to it.",
                "Therefore, even a self-interested designer will choose an outcome that makes the agents reasonably well off.",
                "On the other hand, the designer will not necessarily choose a social welfare maximizing outcome.",
                "For example, if the designer always chooses an outcome that maximizes social welfare with respect to the reported preferences, and forces each agent to pay the difference between the utility it has now and the utility it would have had if it had not participated in the mechanism, it is easy to see that agents may have an incentive to misreport their preferences-and this may actually lead to less revenue being collected.",
                "Indeed, one of the counterintuitive results of optimal auction design theory is that sometimes the good is allocated to nobody even when the auctioneer has a reservation price of 0.",
                "Classical mechanism design provides some general mechanisms, which, under certain assumptions, satisfy some notion of nonmanipulability and maximize some objective.",
                "The upside of these mechanisms is that they do not rely on (even probabilistic) information about the agents preferences (e.g., the Vickrey-Clarke-Groves (VCG) mechanism [24, 4, 11]), or they can be easily applied to any probability distribution over the preferences (e.g., the dAGVA mechanism [8, 2], the Myerson auction [18], and the Maskin-Riley multi-unit auction [17]).",
                "However, the general mechanisms also have significant downsides: • The most famous and most broadly applicable general mechanisms, VCG and dAGVA, only maximize social welfare.",
                "If the designer is self-interested, as is the case in many electronic commerce settings, these mechanisms do not maximize the designers objective. • The general mechanisms that do focus on a selfinterested designer are only applicable in very restricted settings-such as Myersons expected revenue maximizing auction for selling a single item, and Maskin and Rileys expected revenue maximizing auction for selling multiple identical units of an item. • Even in the restricted settings in which these mechanisms apply, the mechanisms only allow for payment maximization.",
                "In practice, the designer may also be interested in the outcome per se.",
                "For example, an auctioneer may care which bidder receives the item. • It is often assumed that side payments can be used to tailor the agents incentives, but this is not always practical.",
                "For example, in barter-based electronic marketplaces-such as Recipco, firstbarter.com, BarterOne, and Intagio-side payments are not allowed.",
                "Furthermore, among software agents, it might be more desirable to construct mechanisms that do not rely on the ability to make payments, because many software agents do not have the infrastructure to make payments.",
                "In contrast, we follow a recent approach where the mechanism is designed automatically for the specific problem at hand.",
                "This approach addresses all of the downsides listed above.",
                "We formulate the mechanism design problem as an optimization problem.",
                "The input is characterized by the number of agents, the agents possible types (preferences), and the aggregators prior distributions over the agents types.",
                "The output is a nonmanipulable mechanism that is optimal with respect to some objective.",
                "This approach is called automated mechanism design.",
                "The automated mechanism design approach has four advantages over the classical approach of designing general mechanisms.",
                "First, it can be used even in settings that do not satisfy the assumptions of the classical mechanisms (such as availability of side payments or that the objective is social welfare).",
                "Second, it may allow one to circumvent impossibility results (such as the Gibbard-Satterthwaite theorem) which state that there is no mechanism that is desirable across all preferences.",
                "When the mechanism is designed for the setting at hand, it does not matter that it would not work more generally.",
                "Third, it may yield better mechanisms (in terms of stronger nonmanipulability guarantees and/or better outcomes) than classical mechanisms because the mechanism capitalizes on the particulars of the setting (the probabilistic information that the designer has about the agents types).",
                "Given the vast amount of information that parties have about each other today, this approach is likely to lead to tremendous savings over classical mechanisms, which largely ignore that information.",
                "For example, imagine a company automatically creating its procurement mechanism based on statistical knowledge about its suppliers, rather than using a classical descending procurement auction.",
                "Fourth, the burden of design is shifted from humans to a machine.",
                "However, automated mechanism design requires the mechanism design optimization problem to be solved anew for each setting.",
                "Hence its computational complexity becomes a key issue.",
                "Previous research has studied this question for benevolent designers-that wish to maximize, for example, social welfare [5, 6].",
                "In this paper we study the computational complexity of automated mechanism design in the case of a self-interested designer.",
                "This is an important setting for automated mechanism design due to the shortage of general mechanisms in this area, and the fact that in most e-commerce settings the designer is self-interested.",
                "We also show that this problem is closely related to a particular optimal (revenue-maximizing) combinatorial auction design problem. 133 The rest of this paper is organized as follows.",
                "In Section 2, we justify the focus on nonmanipulable mechanisms.",
                "In Section 3, we define the problem we study.",
                "In Section 4, we show that designing an optimal deterministic mechanism is NP-complete even when the designer only cares about the payments made to it.",
                "In Section 5, we show that designing an optimal deterministic mechanism is also NP-complete when payments are not possible and the designer is only interested in the outcome chosen.",
                "In Section 6, we show that an optimal randomized mechanism can be designed in polynomial time even in the general case.",
                "Finally, in Section 7, we show that for designing optimal combinatorial auctions under best-only preferences, our results on AMD imply that this problem is NP-complete for deterministic auctions, but easy for randomized auctions. 2.",
                "JUSTIFYING THE FOCUS ON NONMANIPULABLE MECHANISMS Before we define the computational problem of automated mechanism design, we should justify our focus on nonmanipulable mechanisms.",
                "After all, it is not immediately obvious that there are no manipulable mechanisms that, even when agents report their types strategically and hence sometimes untruthfully, still reach better outcomes (according to whatever objective we use) than any nonmanipulable mechanism.",
                "This does, however, turn out to be the case: given any mechanism, we can construct a nonmanipulable mechanism whose performance is identical, as follows.",
                "We build an interface layer between the agents and the original mechanism.",
                "The agents report their preferences (or types) to the interface layer; subsequently, the interface layer inputs into the original mechanism the types that the agents would have strategically reported to the original mechanism, if their types were as declared to the interface layer.",
                "The resulting outcome is the outcome of the new mechanism.",
                "Since the interface layer acts strategically on each agents behalf, there is never an incentive to report falsely to the interface layer; and hence, the types reported by the interface layer are the strategic types that would have been reported without the interface layer, so the results are exactly as they would have been with the original mechanism.",
                "This argument is known in the mechanism design literature as the revelation principle [16]. (There are computational difficulties with applying the revelation principle in large combinatorial outcome and type spaces [7, 22].",
                "However, because here we focus on flatly represented outcome and type spaces, this is not a concern here.)",
                "Given this, we can focus on truthful mechanisms in the rest of the paper. 3.",
                "DEFINITIONS We now formalize the automated mechanism design setting.",
                "Definition 1.",
                "In an automated mechanism design setting, we are given: • a finite set of outcomes O; • a finite set of N agents; • for each agent i, 1. a finite set of types Θi, 2. a probability distribution γi over Θi (in the case of correlated types, there is a single joint distribution γ over Θ1 × . . . × ΘN ), and 3. a utility function ui : Θi × O → R; 1 • An objective function whose expectation the designer wishes to maximize.",
                "There are many possible objective functions the designer might have, for example, social welfare (where the designer seeks to maximize the sum of the agents utilities), or the minimum utility of any agent (where the designer seeks to maximize the worst utility had by any agent).",
                "In both of these cases, the designer is benevolent, because the designer, in some sense, is pursuing the agents collective happiness.",
                "However, in this paper, we focus on the case of a self-interested designer.",
                "A self-interested designer cares only about the outcome chosen (that is, the designer does not care how the outcome relates to the agents preferences, but rather has a fixed preference over the outcomes), and about the net payments made by the agents, which flow to the designer.",
                "Definition 2.",
                "A self-interested designer has an objective function given by g(o) + N i=1 πi, where g : O → R indicates the designers own preference over the outcomes, and πi is the payment made by agent i.",
                "In the case where g = 0 everywhere, the designer is said to be payment maximizing.",
                "In the case where payments are not possible, g constitutes the objective function by itself.",
                "We now define the kinds of mechanisms under study.",
                "By the revelation principle, we can restrict attention to truthful, direct revelation mechanisms, where agents report their types directly and never have an incentive to misreport them.",
                "Definition 3.",
                "We consider the following kinds of mechanism: • A deterministic mechanism without payments consists of an outcome selection function o : Θ1 × Θ2 × . . . × ΘN → O. • A randomized mechanism without payments consists of a distribution selection function p : Θ1 × Θ2 × . . . × ΘN → P(O), where P(O) is the set of probability distributions over O. • A deterministic mechanism with payments consists of an outcome selection function o : Θ1 ×Θ2 ×. . .×ΘN → O and for each agent i, a payment selection function πi : Θ1 × Θ2 × . . . × ΘN → R, where πi(θ1, . . . , θN ) gives the payment made by agent i when the reported types are θ1, . . . , θN . 1 Though this follows standard game theory notation [16], the fact that the agent has both a utility function and a type is perhaps confusing.",
                "The types encode the various possible preferences that the agent may turn out to have, and the agents type is not known to the aggregator.",
                "The utility function is common knowledge, but because the agents type is a parameter in the agents utility function, the aggregator cannot know what the agents utility is without knowing the agents type. 134 • A randomized mechanism with payments consists of a distribution selection function p : Θ1 × Θ2 × . . . × ΘN → P(O), and for each agent i, a payment selection function πi : Θ1 × Θ2 × . . . × ΘN → R.2 There are two types of constraint on the designer in building the mechanism. 3.1 Individual rationality (IR) constraints The first type of constraint is the following.",
                "The utility of each agent has to be at least as great as the agents fallback utility, that is, the utility that the agent would receive if it did not participate in the mechanism.",
                "Otherwise that agent would not participate in the mechanism-and no agents participation can ever hurt the mechanism designers objective because at worst, the mechanism can ignore an agent by pretending the agent is not there. (Furthermore, if no such constraint applied, the designer could simply make the agents pay an infinite amount.)",
                "This type of constraint is called an IR (individual rationality) constraint.",
                "There are three different possible IR constraints: ex ante, ex interim, and ex post, depending on what the agent knows about its own type and the others types when deciding whether to participate in the mechanism.",
                "Ex ante IR means that the agent would participate if it knew nothing at all (not even its own type).",
                "We will not study this concept in this paper.",
                "Ex interim IR means that the agent would always participate if it knew only its own type, but not those of the others.",
                "Ex post IR means that the agent would always participate even if it knew everybodys type.",
                "We will define the latter two notions of IR formally.",
                "First, we need to formalize the concept of the fallback outcome.",
                "We assume that each agents fallback utility is zero for each one of its types.",
                "This is without loss of generality because we can add a constant term to an agents utility function (for a given type), without affecting the decision-making behavior of that expected utility maximizing agent [16].",
                "Definition 4.",
                "In any automated mechanism design setting with an IR constraint, there is a fallback outcome o0 ∈ O where, for any agent i and any type θi ∈ Θi, we have ui(θi, o0) = 0. (Additionally, in the case of a self-interested designer, g(o0) = 0.)",
                "We can now to define the notions of individual rationality.",
                "Definition 5.",
                "Individual rationality (IR) is defined by: • A deterministic mechanism is ex interim IR if for any agent i, and any type θi ∈ Θi, we have E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, .., θN ))−πi(θ1, .., θN )] ≥ 0.",
                "A randomized mechanism is ex interim IR if for any agent i, and any type θi ∈ Θi, we have E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,..,θn [ui(θi, o)−πi(θ1, .., θN )] ≥ 0. • A deterministic mechanism is ex post IR if for any agent i, and any type vector (θ1, . . . , θN ) ∈ Θ1 × . . . × ΘN , we have ui(θi, o(θ1, . . . , θN )) − πi(θ1, . . . , θN ) ≥ 0. 2 We do not randomize over payments because as long as the agents and the designer are risk neutral with respect to payments, that is, their utility is linear in payments, there is no reason to randomize over payments.",
                "A randomized mechanism is ex post IR if for any agent i, and any type vector (θ1, . . . , θN ) ∈ Θ1 × . . . × ΘN , we have Eo|θ1,..,θn [ui(θi, o) − πi(θ1, .., θN )] ≥ 0.",
                "The terms involving payments can be left out in the case where payments are not possible. 3.2 Incentive compatibility (IC) constraints The second type of constraint says that the agents should never have an incentive to misreport their type (as justified above by the revelation principle).",
                "For this type of constraint, the two most common variants (or solution concepts) are implementation in dominant strategies, and implementation in Bayes-Nash equilibrium.",
                "Definition 6.",
                "Given an automated mechanism design setting, a mechanism is said to implement its outcome and payment functions in dominant strategies if truthtelling is always optimal even when the types reported by the other agents are already known.",
                "Formally, for any agent i, any type vector (θ1, . . . , θi, . . . , θN ) ∈ Θ1 × . . . × Θi × . . . × ΘN , and any alternative type report ˆθi ∈ Θi, in the case of deterministic mechanisms we have ui(θi, o(θ1, . . . , θi, . . . , θN )) − πi(θ1, . . . , θi, . . . , θN ) ≥ ui(θi, o(θ1, . . . , ˆθi, . . . , θN )) − πi(θ1, . . . , ˆθi, . . . , θN ).",
                "In the case of randomized mechanisms we have Eo|θ1,..,θi,..,θn [ui(θi, o) − πi(θ1, . . . , θi, . . . , θN )] ≥ Eo|θ1,.., ˆθi,..,θn [ui(θi, o) − πi(θ1, . . . , ˆθi, . . . , θN )].",
                "The terms involving payments can be left out in the case where payments are not possible.",
                "Thus, in dominant strategies implementation, truthtelling is optimal regardless of what the other agents report.",
                "If it is optimal only given that the other agents are truthful, and given that one does not know the other agents types, we have implementation in Bayes-Nash equilibrium.",
                "Definition 7.",
                "Given an automated mechanism design setting, a mechanism is said to implement its outcome and payment functions in Bayes-Nash equilibrium if truthtelling is always optimal to an agent when that agent does not yet know anything about the other agents types, and the other agents are telling the truth.",
                "Formally, for any agent i, any type θi ∈ Θi, and any alternative type report ˆθi ∈ Θi, in the case of deterministic mechanisms we have E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, . . . , θi, . . . , θN ))− πi(θ1, . . . , θi, . . . , θN )] ≥ E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, . . . , ˆθi, . . . , θN ))− πi(θ1, . . . , ˆθi, . . . , θN )].",
                "In the case of randomized mechanisms we have E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,..,θi,..,θn [ui(θi, o)− πi(θ1, . . . , θi, . . . , θN )] ≥ E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,.., ˆθi,..,θn [ui(θi, o)− πi(θ1, . . . , ˆθi, . . . , θN )].",
                "The terms involving payments can be left out in the case where payments are not possible. 135 3.3 Automated mechanism design We can now define the computational problem we study.",
                "Definition 8. (AUTOMATED-MECHANISM-DESIGN (AMD)) We are given: • an automated mechanism design setting, • an IR notion (ex interim, ex post, or none), • a solution concept (dominant strategies or Bayes-Nash), • whether payments are possible, • whether randomization is possible, • (in the decision variant of the problem) a target value G. We are asked whether there exists a mechanism of the specified kind (in terms of payments and randomization) that satisfies both the IR notion and the solution concept, and gives an expected value of at least G for the objective.",
                "An interesting special case is the setting where there is only one agent.",
                "In this case, the reporting agent always knows everything there is to know about the other agents types-because there are no other agents.",
                "Since ex post and ex interim IR only differ on what an agent is assumed to know about other agents types, the two IR concepts coincide here.",
                "Also, because implementation in dominant strategies and implementation in Bayes-Nash equilibrium only differ on what an agent is assumed to know about other agents types, the two solution concepts coincide here.",
                "This observation will prove to be a useful tool in proving hardness results: if we prove computational hardness in the singleagent setting, this immediately implies hardness for both IR concepts, for both solution concepts, for any number of agents. 4.",
                "PAYMENT-MAXIMIZINGDETERMINISTIC AMD IS HARD In this section we demonstrate that it is NP-complete to design a deterministic mechanism that maximizes the expected sum of the payments collected from the agents.",
                "We show that this problem is hard even in the single-agent setting, thereby immediately showing it hard for both IR concepts, for both solution concepts.",
                "To demonstrate NPhardness, we reduce from the MINSAT problem.",
                "Definition 9 (MINSAT).",
                "We are given a formula φ in conjunctive normal form, represented by a set of Boolean variables V and a set of clauses C, and an integer K (K < |C|).",
                "We are asked whether there exists an assignment to the variables in V such that at most K clauses in φ are satisfied.",
                "MINSAT was recently shown to be NP-complete [14].",
                "We can now present our result.",
                "Theorem 1.",
                "Payment-maximizing deterministic AMD is NP-complete, even for a single agent, even with a uniform distribution over types.",
                "Proof.",
                "It is easy to show that the problem is in NP.",
                "To show NP-hardness, we reduce an arbitrary MINSAT instance to the following single-agent payment-maximizing deterministic AMD instance.",
                "Let the agents type set be Θ = {θc : c ∈ C} ∪ {θv : v ∈ V }, where C is the set of clauses in the MINSAT instance, and V is the set of variables.",
                "Let the probability distribution over these types be uniform.",
                "Let the outcome set be O = {o0} ∪ {oc : c ∈ C} ∪ {ol : l ∈ L}, where L is the set of literals, that is, L = {+v : v ∈ V } ∪ {−v : v ∈ V }.",
                "Let the notation v(l) = v denote that v is the variable corresponding to the literal l, that is, l ∈ {+v, −v}.",
                "Let l ∈ c denote that the literal l occurs in clause c. Then, let the agents utility function be given by u(θc, ol) = |Θ| + 1 for all l ∈ L with l ∈ c; u(θc, ol) = 0 for all l ∈ L with l /∈ c; u(θc, oc) = |Θ| + 1; u(θc, oc ) = 0 for all c ∈ C with c = c ; u(θv, ol) = |Θ| for all l ∈ L with v(l) = v; u(θv, ol) = 0 for all l ∈ L with v(l) = v; u(θv, oc) = 0 for all c ∈ C. The goal of the AMD instance is G = |Θ| + |C|−K |Θ| , where K is the goal of the MINSAT instance.",
                "We show the instances are equivalent.",
                "First, suppose there is a solution to the MINSAT instance.",
                "Let the assignment of truth values to the variables in this solution be given by the function f : V → L (where v(f(v)) = v for all v ∈ V ).",
                "Then, for every v ∈ V , let o(θv) = of(v) and π(θv) = |Θ|.",
                "For every c ∈ C, let o(θc) = oc; let π(θc) = |Θ| + 1 if c is not satisfied in the MINSAT solution, and π(θc) = |Θ| if c is satisfied.",
                "It is straightforward to check that the IR constraint is satisfied.",
                "We now check that the agent has no incentive to misreport.",
                "If the agents type is some θv, then any other report will give it an outcome that is no better, for a payment that is no less, so it has no incentive to misreport.",
                "If the agents type is some θc where c is a satisfied clause, again, any other report will give it an outcome that is no better, for a payment that is no less, so it has no incentive to misreport.",
                "The final case to check is where the agents type is some θc where c is an unsatisfied clause.",
                "In this case, we observe that for none of the types, reporting it leads to an outcome ol for a literal l ∈ c, precisely because the clause is not satisfied in the MINSAT instance.",
                "Because also, no type besides θc leads to the outcome oc, reporting any other type will give an outcome with utility 0, while still forcing a payment of at least |Θ| from the agent.",
                "Clearly the agent is better off reporting truthfully, for a total utility of 0.",
                "This establishes that the agent never has an incentive to misreport.",
                "Finally, we show that the goal is reached.",
                "If s is the number of satisfied clauses in the MINSAT solution (so that s ≤ K), the expected payment from this mechanism is |V ||Θ|+s|Θ|+(|C|−s)(|Θ|+1) |Θ| ≥ |V ||Θ|+K|Θ|+(|C|−K)(|Θ|+1) |Θ| = |Θ| + |C|−K |Θ| = G. So there is a solution to the AMD instance.",
                "Now suppose there is a solution to the AMD instance, given by an outcome function o and a payment function π.",
                "First, suppose there is some v ∈ V such that o(θv) /∈ {o+v, o−v}.",
                "Then the utility that the agent derives from the given outcome for this type is 0, and hence, by IR, no payment can be extracted from the agent for this type.",
                "Because, again by IR, the maximum payment that can be extracted for any other type is |Θ| + 1, it follows that the maximum expected payment that could be obtained is at most (|Θ|−1)(|Θ|+1) |Θ| < |Θ| < G, contradicting that this is a solution to the AMD instance.",
                "It follows that in the solution to the AMD instance, for every v ∈ V , o(θv) ∈ {o+v, o−v}. 136 We can interpret this as an assignment of truth values to the variables: v is set to true if o(θv) = o+v, and to false if o(θv) = o−v.",
                "We claim this assignment is a solution to the MINSAT instance.",
                "By the IR constraint, the maximum payment we can extract from any type θv is |Θ|.",
                "Because there can be no incentives for the agent to report falsely, for any clause c satisfied by the given assignment, the maximum payment we can extract for the corresponding type θc is |Θ|. (For if we extracted more from this type, the agents utility in this case would be less than 1; and if v is the variable satisfying c in the assignment, so that o(θv) = ol where l occurs in c, then the agent would be better off reporting θv instead of the truthful report θc, to get an outcome worth |Θ|+1 to it while having to pay at most |Θ|.)",
                "Finally, for any unsatisfied clause c, by the IR constraint, the maximum payment we can extract for the corresponding type θc is |Θ| + 1.",
                "It follows that the expected payment from our mechanism is at most V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ , where s is the number of satisfied clauses.",
                "Because our mechanism achieves the goal, it follows that V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ ≥ G, which by simple algebraic manipulations is equivalent to s ≤ K. So there is a solution to the MINSAT instance.",
                "Because payment-maximizing AMD is just the special case of AMD for a self-interested designer where the designer has no preferences over the outcome chosen, this immediately implies hardness for the general case of AMD for a selfinterested designer where payments are possible.",
                "However, it does not yet imply hardness for the special case where payments are not possible.",
                "We will prove hardness in this case in the next section. 5.",
                "SELF-INTERESTED DETERMINISTIC AMD WITHOUT PAYMENTS IS HARD In this section we demonstrate that it is NP-complete to design a deterministic mechanism that maximizes the expectation of the designers objective when payments are not possible.",
                "We show that this problem is hard even in the single-agent setting, thereby immediately showing it hard for both IR concepts, for both solution concepts.",
                "Theorem 2.",
                "Without payments, deterministic AMD for a self-interested designer is NP-complete, even for a single agent, even with a uniform distribution over types.",
                "Proof.",
                "It is easy to show that the problem is in NP.",
                "To show NP-hardness, we reduce an arbitrary MINSAT instance to the following single-agent self-interested deterministic AMD without payments instance.",
                "Let the agents type set be Θ = {θc : c ∈ C} ∪ {θv : v ∈ V }, where C is the set of clauses in the MINSAT instance, and V is the set of variables.",
                "Let the probability distribution over these types be uniform.",
                "Let the outcome set be O = {o0} ∪ {oc : c ∈ C}∪{ol : l ∈ L}∪{o∗ }, where L is the set of literals, that is, L = {+v : v ∈ V } ∪ {−v : v ∈ V }.",
                "Let the notation v(l) = v denote that v is the variable corresponding to the literal l, that is, l ∈ {+v, −v}.",
                "Let l ∈ c denote that the literal l occurs in clause c. Then, let the agents utility function be given by u(θc, ol) = 2 for all l ∈ L with l ∈ c; u(θc, ol) = −1 for all l ∈ L with l /∈ c; u(θc, oc) = 2; u(θc, oc ) = −1 for all c ∈ C with c = c ; u(θc, o∗ ) = 1; u(θv, ol) = 1 for all l ∈ L with v(l) = v; u(θv, ol) = −1 for all l ∈ L with v(l) = v; u(θv, oc) = −1 for all c ∈ C; u(θv, o∗ ) = −1.",
                "Let the designers objective function be given by g(o∗ ) = |Θ|+1; g(ol) = |Θ| for all l ∈ L; g(oc) = |Θ| for all c ∈ C. The goal of the AMD instance is G = |Θ| + |C|−K |Θ| , where K is the goal of the MINSAT instance.",
                "We show the instances are equivalent.",
                "First, suppose there is a solution to the MINSAT instance.",
                "Let the assignment of truth values to the variables in this solution be given by the function f : V → L (where v(f(v)) = v for all v ∈ V ).",
                "Then, for every v ∈ V , let o(θv) = of(v).",
                "For every c ∈ C that is satisfied in the MINSAT solution, let o(θc) = oc; for every unsatisfied c ∈ C, let o(θc) = o∗ .",
                "It is straightforward to check that the IR constraint is satisfied.",
                "We now check that the agent has no incentive to misreport.",
                "If the agents type is some θv, it is getting the maximum utility for that type, so it has no incentive to misreport.",
                "If the agents type is some θc where c is a satisfied clause, again, it is getting the maximum utility for that type, so it has no incentive to misreport.",
                "The final case to check is where the agents type is some θc where c is an unsatisfied clause.",
                "In this case, we observe that for none of the types, reporting it leads to an outcome ol for a literal l ∈ c, precisely because the clause is not satisfied in the MINSAT instance.",
                "Because also, no type leads to the outcome oc, there is no outcome that the mechanism ever selects that would give the agent utility greater than 1 for type θc, and hence the agent has no incentive to report falsely.",
                "This establishes that the agent never has an incentive to misreport.",
                "Finally, we show that the goal is reached.",
                "If s is the number of satisfied clauses in the MINSAT solution (so that s ≤ K), then the expected value of the designers objective function is |V ||Θ|+s|Θ|+(|C|−s)(|Θ|+1) |Θ| ≥ |V ||Θ|+K|Θ|+(|C|−K)(|Θ|+1) |Θ| = |Θ| + |C|−K |Θ| = G. So there is a solution to the AMD instance.",
                "Now suppose there is a solution to the AMD instance, given by an outcome function o.",
                "First, suppose there is some v ∈ V such that o(θv) /∈ {o+v, o−v}.",
                "The only other outcome that the mechanism is allowed to choose under the IR constraint is o0.",
                "This has an objective value of 0, and because the highest value the objective function ever takes is |Θ| + 1, it follows that the maximum expected value of the objective function that could be obtained is at most (|Θ|−1)(|Θ|+1) |Θ| < |Θ| < G, contradicting that this is a solution to the AMD instance.",
                "It follows that in the solution to the AMD instance, for every v ∈ V , o(θv) ∈ {o+v, o−v}.",
                "We can interpret this as an assignment of truth values to the variables: v is set to true if o(θv) = o+v, and to false if o(θv) = o−v.",
                "We claim this assignment is a solution to the MINSAT instance.",
                "By the above, for any type θv, the value of the objective function in this mechanism will be |Θ|.",
                "For any clause c satisfied by the given assignment, the value of the objective function in the case where the agent reports type θc will be at most |Θ|. (This is because we cannot choose the outcome o∗ for such a type, as in this case the agent would have an incentive to report θv instead, where v is the variable satisfying c in the assignment (so that o(θv) = ol where l occurs in c).)",
                "Finally, for any unsatisfied clause c, the maximum value the objective function can take in the case where the agent reports type θc is |Θ| + 1, simply because this is the largest value the function ever takes.",
                "It follows that the expected value of the objective function for our mechanism is at most V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ , where s is the number of satisfied 137 clauses.",
                "Because our mechanism achieves the goal, it follows that V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ ≥ G, which by simple algebraic manipulations is equivalent to s ≤ K. So there is a solution to the MINSAT instance.",
                "Both of our hardness results relied on the constraint that the mechanism should be deterministic.",
                "In the next section, we show that the hardness of design disappears when we allow for randomization in the mechanism. 6.",
                "RANDOMIZED AMD FOR A SELFINTERESTED DESIGNER IS EASY We now show how allowing for randomization over the outcomes makes the problem of self-interested AMD tractable through linear programming, for any constant number of agents.",
                "Theorem 3.",
                "Self-interested randomized AMD with a constant number of agents is solvable in polynomial time by linear programming, both with and without payments, both for ex post and ex interim IR, and both for implementation in dominant strategies and for implementation in Bayes-Nash equilibrium-even if the types are correlated.",
                "Proof.",
                "Because linear programs can be solved in polynomial time [13], all we need to show is that the number of variables and equations in our program is polynomial for any constant number of agents-that is, exponential only in N. Throughout, for purposes of determining the size of the linear program, let T = maxi{|Θi|}.",
                "The variables of our linear program will be the probabilities (p(θ1, θ2, . . . , θN ))(o) (at most TN |O| variables) and the payments πi(θ1, θ2, . . . , θN ) (at most NTN variables). (We show the linear program for the case where payments are possible; the case without payments is easily obtained from this by simply omitting all the payment variables in the program, or by adding additional constraints forcing the payments to be 0.)",
                "First, we show the IR constraints.",
                "For ex post IR, we add the following (at most NTN ) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, and for every (θ1, θ2, . . . , θN ) ∈ Θ1 × Θ2 × . . . × ΘN , we add ( o∈O (p(θ1, θ2, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , θN ) ≥ 0.",
                "For ex interim IR, we add the following (at most NT) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, for every θi ∈ Θi, we add θ1,... ,θN γ(θ1, . . . , θN |θi)(( o∈O (p(θ1, θ2, . . . , θN ))(o)u(θi, o))− πi(θ1, θ2, . . . , θN )) ≥ 0.",
                "Now, we show the solution concept constraints.",
                "For implementation in dominant strategies, we add the following (at most NTN+1 ) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, for every (θ1, θ2, . . . , θi, . . . , θN ) ∈ Θ1 × Θ2 × . . . × ΘN , and for every alternative type report ˆθi ∈ Θi, we add the constraint ( o∈O (p(θ1, θ2, . . . , θi, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , θi, . . . , θN ) ≥ ( o∈O (p(θ1, θ2, . . . , ˆθi, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , ˆθi, . . . , θN ).",
                "Finally, for implementation in Bayes-Nash equilibrium, we add the following (at most NT2 ) constraints to the LP: • For every i ∈ {1, 2, ..., N}, for every θi ∈ Θi, and for every alternative type report ˆθi ∈ Θi, we add the constraint θ1,...,θN γ(θ1, ..., θN |θi)(( o∈O (p(θ1, θ2, ..., θi, ..., θN ))(o)u(θi, o)) − πi(θ1, θ2, ..., θi, ..., θN )) ≥ θ1,...,θN γ(θ1, ..., θN |θi)(( o∈O (p(θ1, θ2, ..., ˆθi, ..., θN ))(o)u(θi, o)) − πi(θ1, θ2, ..., ˆθi, ..., θN )).",
                "All that is left to do is to give the expression the designer is seeking to maximize, which is: • θ1,...,θN γ(θ1, ..., θN )(( o∈O (p(θ1, θ2, ..., θi, ..., θN ))(o)g(o)) + N i=1 πi(θ1, θ2, ..., θN )).",
                "As we indicated, the number of variables and constraints is exponential only in N, and hence the linear program is of polynomial size for constant numbers of agents.",
                "Thus the problem is solvable in polynomial time. 7.",
                "IMPLICATIONS FOR AN OPTIMAL COMBINATORIAL AUCTION DESIGN PROBLEM In this section, we will demonstrate some interesting consequences of the problem of automated mechanism design for a self-interested designer on designing optimal combinatorial auctions.",
                "Consider a combinatorial auction with a set S of items for sale.",
                "For any bundle B ⊆ S, let ui(θi, B) be bidder is utility for receiving bundle B when the bidders type is θi.",
                "The optimal auction design problem is to specify the rules of the auction so as to maximize expected revenue to the auctioneer. (By the revelation principle, without loss of generality, we can assume the auction is truthful.)",
                "The optimal auction design problem is solved for the case of a single item by the famous Myerson auction [18].",
                "However, designing optimal auctions in combinatorial auctions is a recognized open research problem [3, 25].",
                "The problem is open even if there are only two items for sale. (The twoitem case with a very special form of complementarity and no substitutability has been solved recently [1].)",
                "Suppose we have free disposal-items can be thrown away at no cost.",
                "Also, suppose that the bidders preferences have the following structure: whenever a bidder receives a bundle of items, the bidders utility for that bundle is determined by the best item in the bundle only. (We emphasize that 138 which item is the best is allowed to depend on the bidders type.)",
                "Definition 10.",
                "Bidder i is said to have best-only preferences over bundles of items if there exists a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s).",
                "We make the following useful observation in this setting: there is no sense in awarding a bidder more than one item.",
                "The reason is that if the bidder is reporting truthfully, taking all but the highest valued item away from the bidder will not hurt the bidder; and, by free disposal, doing so can only reduce the incentive for this bidder to falsely report this type, when the bidder actually has another type.",
                "We now show that the problem of designing a deterministic optimal auction here is NP-complete, by a reduction from the payment maximizing AMD problem!",
                "Theorem 4.",
                "Given an optimal combinatorial auction design problem under best-only preferences (given by a set of items S and for each bidder i, a finite type space Θi and a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s)), designing the optimal deterministic auction is NP-complete, even for a single bidder with a uniform distribution over types.",
                "Proof.",
                "The problem is in NP because we can nondeterministically generate an allocation rule, and then set the payments using linear programming.",
                "To show NP-hardness, we reduce an arbitrary paymentmaximizing deterministic AMD instance, with a single agent and a uniform distribution over types, to the following optimal combinatorial auction design problem instance with a single bidder with best-only preferences.",
                "For every outcome o ∈ O in the AMD instance (besides the outcome o0), let there be one item so ∈ S. Let the type space be the same, and let v(θi, so) = ui(θi, o) (where u is as specified in the AMD instance).",
                "Let the expected revenue target value be the same in both instances.",
                "We show the instances are equivalent.",
                "First suppose there exists a solution to the AMD instance, given by an outcome function and a payment function.",
                "Then, if the AMD solution chooses outcome o for a type, in the optimal auction solution, allocate {so} to the bidder for this type. (Unless o = o0, in which case we allocate {} to the bidder.)",
                "Let the payment functions be the same in both instances.",
                "Then, the utility that an agent receives for reporting a type (given the true type) in either solution is the same, so we have incentive compatibility in the optimal auction solution.",
                "Moreover, because the type distribution and the payment function are the same, the expected revenue to the auctioneer/designer is the same.",
                "It follows that there exists a solution to the optimal auction design instance.",
                "Now suppose there exists a solution to the optimal auction design instance.",
                "By the at-most-one-item observation, we can assume without loss of generality that the solution never allocates more than one item.",
                "Then, if the optimal auction solution allocates item so to the bidder for a type, in the AMD solution, let the mechanism choose outcome o for that type.",
                "If the optimal auction solution allocates nothing to the bidder for a type, in the AMD solution, let the mechanism choose outcome o0 for that type.",
                "Let the payment functions be the same.",
                "Then, the utility that an agent receives for reporting a type (given the true type) in either solution is the same, so we have incentive compatibility in the AMD solution.",
                "Moreover, because the type distribution and the payment function are the same, the expected revenue to the designer/auctioneer is the same.",
                "It follows that there exists a solution to the AMD instance.",
                "Fortunately, we can also carry through the easiness result for randomized mechanisms to this combinatorial auction setting-giving us one of the few known polynomial-time algorithms for an optimal combinatorial auction design problem.",
                "Theorem 5.",
                "Given an optimal combinatorial auction design problem under best-only preferences (given by a set of items S and for each bidder i, a finite type space Θi and a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s)), if the number of bidders is a constant k, then the optimal randomized auction can be designed in polynomial time. (For any IC and IR constraints.)",
                "Proof.",
                "By the at-most-one-item observation, we can without loss of generality restrict ourselves to allocations where each bidder receives at most one item.",
                "There are fewer than (|S| + 1)k such allocations-that is, a polynomial number of allocations.",
                "Because we can list the outcomes explicitly, we can simply solve this as a payment-maximizing AMD instance, with linear programming. 8.",
                "RELATED RESEARCH ON COMPLEXITY IN MECHANISM DESIGN There has been considerable recent interest in mechanism design in computer science.",
                "Some of it has focused on issues of computational complexity, but most of that work has strived toward designing mechanisms that are easy to execute (e.g. [20, 15, 19, 9, 12]), rather than studying the complexity of designing the mechanism.",
                "The closest piece of earlier work studied the complexity of automated mechanism design by a benevolent designer [5, 6].",
                "Roughgarden has studied the complexity of designing a good network topology for agents that selfishly choose the links they use [21].",
                "This is related to mechanism design, but differs significantly in that the designer only has restricted control over the rules of the game because there is no party that can impose the outcome (or side payments).",
                "Also, there is no explicit reporting of preferences. 9.",
                "CONCLUSIONS AND FUTURE RESEARCH Often, an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "The key difficulty is that the agents may report their preferences insincerely to make the chosen outcome more favorable to themselves.",
                "Mechanism design is the art of designing the rules of the game so that the agents are motivated to report their preferences truthfully, and a desirable outcome is chosen.",
                "In a recently emerging approach-called automated mechanism design-a mechanism is computed for the specific preference aggregation setting at hand.",
                "This has several advantages, 139 but the downside is that the mechanism design optimization problem needs to be solved anew each time.",
                "Unlike earlier work on automated mechanism design that studied a benevolent designer, in this paper we studied automated mechanism design problems where the designer is self-interesteda setting much more relevant for electronic commerce.",
                "In this setting, the center cares only about which outcome is chosen and what payments are made to it.",
                "The reason that the agents preferences are relevant is that the center is constrained to making each agent at least as well off as the agent would have been had it not participated in the mechanism.",
                "In this setting, we showed that designing an optimal deterministic mechanism is NP-complete in two important special cases: when the center is interested only in the payments made to it, and when payments are not possible and the center is interested only in the outcome chosen.",
                "These hardness results imply hardness in all more general automated mechanism design settings with a self-interested designer.",
                "The hardness results apply whether the individual rationality (participation) constraints are applied ex interim or ex post, and whether the solution concept is dominant strategies implementation or Bayes-Nash equilibrium implementation.",
                "We then showed that allowing randomization in the mechanism makes the design problem in all these settings computationally easy.",
                "Finally, we showed that the paymentmaximizing AMD problem is closely related to an interesting variant of the optimal (revenue-maximizing) combinatorial auction design problem, where the bidders have best-only preferences.",
                "We showed that here, too, designing an optimal deterministic mechanism is NP-complete even with one agent, but designing an optimal randomized mechanism is easy.",
                "Future research includes studying automated mechanism design with a self-interested designer in more restricted settings such as auctions (where the designers objective may include preferences about which bidder should receive the good-as well as payments).",
                "We also want to study the complexity of automated mechanism design in settings where the outcome and type spaces have special structure so they can be represented more concisely.",
                "Finally, we plan to assemble a data set of real-world mechanism design problems-both historical and current-and apply automated mechanism design to those problems. 10.",
                "REFERENCES [1] M. Armstrong.",
                "Optimal multi-object auctions.",
                "Review of Economic Studies, 67:455-481, 2000. [2] K. Arrow.",
                "The property rights doctrine and demand revelation under incomplete information.",
                "In M. Boskin, editor, Economics and human welfare.",
                "New York Academic Press, 1979. [3] C. Avery and T. Hendershott.",
                "Bundling and optimal auctions of multiple products.",
                "Review of Economic Studies, 67:483-497, 2000. [4] E. H. Clarke.",
                "Multipart pricing of public goods.",
                "Public Choice, 11:17-33, 1971. [5] V. Conitzer and T. Sandholm.",
                "Complexity of mechanism design.",
                "In Proceedings of the 18th Annual Conference on Uncertainty in Artificial Intelligence (UAI-02), pages 103-110, Edmonton, Canada, 2002. [6] V. Conitzer and T. Sandholm.",
                "Automated mechanism design: Complexity results stemming from the single-agent setting.",
                "In Proceedings of the 5th International Conference on Electronic Commerce (ICEC-03), pages 17-24, Pittsburgh, PA, USA, 2003. [7] V. Conitzer and T. Sandholm.",
                "Computational criticisms of the revelation principle.",
                "In Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), New York, NY, 2004.",
                "Short paper.",
                "Full-length version appeared in the AAMAS-03 workshop on Agent-Mediated Electronic Commerce (AMEC). [8] C. dAspremont and L. A. G´erard-Varet.",
                "Incentives and incomplete information.",
                "Journal of Public Economics, 11:25-45, 1979. [9] J. Feigenbaum, C. Papadimitriou, and S. Shenker.",
                "Sharing the cost of muliticast transmissions.",
                "Journal of Computer and System Sciences, 63:21-41, 2001.",
                "Early version in Proceedings of the Annual ACM Symposium on Theory of Computing (STOC), 2000. [10] A. Gibbard.",
                "Manipulation of voting schemes.",
                "Econometrica, 41:587-602, 1973. [11] T. Groves.",
                "Incentives in teams.",
                "Econometrica, 41:617-631, 1973. [12] J. Hershberger and S. Suri.",
                "Vickrey prices and shortest paths: What is an edge worth?",
                "In Proceedings of the Annual Symposium on Foundations of Computer Science (FOCS), 2001. [13] L. Khachiyan.",
                "A polynomial algorithm in linear programming.",
                "Soviet Math.",
                "Doklady, 20:191-194, 1979. [14] R. Kohli, R. Krishnamurthi, and P. Mirchandani.",
                "The minimum satisfiability problem.",
                "SIAM Journal of Discrete Mathematics, 7(2):275-283, 1994. [15] D. Lehmann, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in rapid, approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002.",
                "Early version appeared in Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), 1999. [16] A. Mas-Colell, M. Whinston, and J. R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [17] E. S. Maskin and J. Riley.",
                "Optimal multi-unit auctions.",
                "In F. Hahn, editor, The Economics of Missing Markets, Information, and Games, chapter 14, pages 312-335.",
                "Clarendon Press, Oxford, 1989. [18] R. Myerson.",
                "Optimal auction design.",
                "Mathematics of Operation Research, 6:58-73, 1981. [19] N. Nisan and A. Ronen.",
                "Computationally feasible VCG mechanisms.",
                "In Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), pages 242-252, Minneapolis, MN, 2000. [20] N. Nisan and A. Ronen.",
                "Algorithmic mechanism design.",
                "Games and Economic Behavior, 35:166-196, 2001.",
                "Early version in Proceedings of the Annual ACM Symposium on Theory of Computing (STOC), 1999. [21] T. Roughgarden.",
                "Designing networks for selfish users is hard.",
                "In Proceedings of the Annual Symposium on Foundations of Computer Science (FOCS), 2001. [22] T. Sandholm.",
                "Issues in computational Vickrey auctions.",
                "International Journal of Electronic Commerce, 4(3):107-129, 2000.",
                "Special Issue on 140 Applying Intelligent Agents for Electronic Commerce.",
                "A short, early version appeared at the Second International Conference on Multi-Agent Systems (ICMAS), pages 299-306, 1996. [23] M. A. Satterthwaite.",
                "Strategy-proofness and Arrows conditions: existence and correspondence theorems for voting procedures and social welfare functions.",
                "Journal of Economic Theory, 10:187-217, 1975. [24] W. Vickrey.",
                "Counterspeculation, auctions, and competitive sealed tenders.",
                "Journal of Finance, 16:8-37, 1961. [25] R. V. Vohra.",
                "Research problems in combinatorial auctions.",
                "Mimeo, version Oct. 29, 2001. 141"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "El \"agregador de preferencias\" generalmente no conoce a los agentes preferencias a priori."
            ],
            "translated_text": "",
            "candidates": [
                "agregador de preferencias",
                "agregador de preferencias"
            ],
            "error": []
        },
        "individual rationality": {
            "translated_key": "racionalidad individual",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Self-interested Automated Mechanism Design and Implications for Optimal Combinatorial Auctions∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT Often, an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "The key difficulty is that the agents may report their preferences insincerely to make the chosen outcome more favorable to themselves.",
                "Mechanism design is the art of designing the rules of the game so that the agents are motivated to report their preferences truthfully, and a desirable outcome is chosen.",
                "In a recently proposed approach-called automated mechanism design-a mechanism is computed for the preference aggregation setting at hand.",
                "This has several advantages, but the downside is that the mechanism design optimization problem needs to be solved anew each time.",
                "Unlike the earlier work on automated mechanism design that studied a benevolent designer, in this paper we study automated mechanism design problems where the designer is self-interested.",
                "In this case, the center cares only about which outcome is chosen and what payments are made to it.",
                "The reason that the agents preferences are relevant is that the center is constrained to making each agent at least as well off as the agent would have been had it not participated in the mechanism.",
                "In this setting, we show that designing optimal deterministic mechanisms is NP-complete in two important special cases: when the center is interested only in the payments made to it, and when payments are not possible and the center is interested only in the outcome chosen.",
                "We then show how allowing for randomization in the mechanism makes problems in this setting computationally easy.",
                "Finally, we show that the payment-maximizing AMD problem is closely related to an interesting variant of the optimal (revenuemaximizing) combinatorial auction design problem, where the bidders have best-only preferences.",
                "We show that here, too, designing an optimal deterministic auction is NPcomplete, but designing an optimal randomized auction is easy.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In multiagent settings, often an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "Such outcomes could be potential presidents, joint plans, allocations of goods or resources, etc.",
                "The preference aggregator generally does not know the agents preferences a priori.",
                "Rather, the agents report their preferences to the coordinator.",
                "Unfortunately, an agent may have an incentive to misreport its preferences in order to mislead the mechanism into selecting an outcome that is more desirable to the agent than the outcome that would be selected if the agent revealed its preferences truthfully.",
                "Such manipulation is undesirable because preference aggregation mechanisms are tailored to aggregate preferences in a socially desirable way, and if the agents reveal their preferences insincerely, a socially undesirable outcome may be chosen.",
                "Manipulability is a pervasive problem across preference aggregation mechanisms.",
                "A seminal negative result, the Gibbard-Satterthwaite theorem, shows that under any nondictatorial preference aggregation scheme, if there are at least 3 possible outcomes, there are preferences under which an agent is better off reporting untruthfully [10, 23]. (A preference aggregation scheme is called dictatorial if one of the agents dictates the outcome no matter what preferences the other agents report.)",
                "What the aggregator would like to do is design a preference aggregation mechanism so that 1) the self-interested agents are motivated to report their preferences truthfully, and 2) the mechanism chooses an outcome that is desirable from the perspective of some objective.",
                "This is the classic setting of mechanism design in game theory.",
                "In this paper, we study the case where the designer is self-interested, that is, the designer does not directly care about how the out132 come relates to the agents preferences, but is rather concerned with its own agenda for which outcome should be chosen, and with maximizing payments to itself.",
                "This is the mechanism design setting most relevant to electronic commerce.",
                "In the case where the mechanism designer is interested in maximizing some notion of social welfare, the importance of collecting the agents preferences is clear.",
                "It is perhaps less obvious why they should be collected when the designer is self-interested and hence its objective is not directly related to the agents preferences.",
                "The reason for this is that often the agents preferences impose limits on how the designer chooses the outcome and payments.",
                "The most common such constraint is that of <br>individual rationality</br> (IR), which means that the mechanism cannot make any agent worse off than the agent would have been had it not participated in the mechanism.",
                "For instance, in the setting of optimal auction design, the designer (auctioneer) is only concerned with how much revenue is collected, and not per se with how well the allocation of the good (or goods) corresponds to the agents preferences.",
                "Nevertheless, the designer cannot force an agent to pay more than its valuation for the bundle of goods allocated to it.",
                "Therefore, even a self-interested designer will choose an outcome that makes the agents reasonably well off.",
                "On the other hand, the designer will not necessarily choose a social welfare maximizing outcome.",
                "For example, if the designer always chooses an outcome that maximizes social welfare with respect to the reported preferences, and forces each agent to pay the difference between the utility it has now and the utility it would have had if it had not participated in the mechanism, it is easy to see that agents may have an incentive to misreport their preferences-and this may actually lead to less revenue being collected.",
                "Indeed, one of the counterintuitive results of optimal auction design theory is that sometimes the good is allocated to nobody even when the auctioneer has a reservation price of 0.",
                "Classical mechanism design provides some general mechanisms, which, under certain assumptions, satisfy some notion of nonmanipulability and maximize some objective.",
                "The upside of these mechanisms is that they do not rely on (even probabilistic) information about the agents preferences (e.g., the Vickrey-Clarke-Groves (VCG) mechanism [24, 4, 11]), or they can be easily applied to any probability distribution over the preferences (e.g., the dAGVA mechanism [8, 2], the Myerson auction [18], and the Maskin-Riley multi-unit auction [17]).",
                "However, the general mechanisms also have significant downsides: • The most famous and most broadly applicable general mechanisms, VCG and dAGVA, only maximize social welfare.",
                "If the designer is self-interested, as is the case in many electronic commerce settings, these mechanisms do not maximize the designers objective. • The general mechanisms that do focus on a selfinterested designer are only applicable in very restricted settings-such as Myersons expected revenue maximizing auction for selling a single item, and Maskin and Rileys expected revenue maximizing auction for selling multiple identical units of an item. • Even in the restricted settings in which these mechanisms apply, the mechanisms only allow for payment maximization.",
                "In practice, the designer may also be interested in the outcome per se.",
                "For example, an auctioneer may care which bidder receives the item. • It is often assumed that side payments can be used to tailor the agents incentives, but this is not always practical.",
                "For example, in barter-based electronic marketplaces-such as Recipco, firstbarter.com, BarterOne, and Intagio-side payments are not allowed.",
                "Furthermore, among software agents, it might be more desirable to construct mechanisms that do not rely on the ability to make payments, because many software agents do not have the infrastructure to make payments.",
                "In contrast, we follow a recent approach where the mechanism is designed automatically for the specific problem at hand.",
                "This approach addresses all of the downsides listed above.",
                "We formulate the mechanism design problem as an optimization problem.",
                "The input is characterized by the number of agents, the agents possible types (preferences), and the aggregators prior distributions over the agents types.",
                "The output is a nonmanipulable mechanism that is optimal with respect to some objective.",
                "This approach is called automated mechanism design.",
                "The automated mechanism design approach has four advantages over the classical approach of designing general mechanisms.",
                "First, it can be used even in settings that do not satisfy the assumptions of the classical mechanisms (such as availability of side payments or that the objective is social welfare).",
                "Second, it may allow one to circumvent impossibility results (such as the Gibbard-Satterthwaite theorem) which state that there is no mechanism that is desirable across all preferences.",
                "When the mechanism is designed for the setting at hand, it does not matter that it would not work more generally.",
                "Third, it may yield better mechanisms (in terms of stronger nonmanipulability guarantees and/or better outcomes) than classical mechanisms because the mechanism capitalizes on the particulars of the setting (the probabilistic information that the designer has about the agents types).",
                "Given the vast amount of information that parties have about each other today, this approach is likely to lead to tremendous savings over classical mechanisms, which largely ignore that information.",
                "For example, imagine a company automatically creating its procurement mechanism based on statistical knowledge about its suppliers, rather than using a classical descending procurement auction.",
                "Fourth, the burden of design is shifted from humans to a machine.",
                "However, automated mechanism design requires the mechanism design optimization problem to be solved anew for each setting.",
                "Hence its computational complexity becomes a key issue.",
                "Previous research has studied this question for benevolent designers-that wish to maximize, for example, social welfare [5, 6].",
                "In this paper we study the computational complexity of automated mechanism design in the case of a self-interested designer.",
                "This is an important setting for automated mechanism design due to the shortage of general mechanisms in this area, and the fact that in most e-commerce settings the designer is self-interested.",
                "We also show that this problem is closely related to a particular optimal (revenue-maximizing) combinatorial auction design problem. 133 The rest of this paper is organized as follows.",
                "In Section 2, we justify the focus on nonmanipulable mechanisms.",
                "In Section 3, we define the problem we study.",
                "In Section 4, we show that designing an optimal deterministic mechanism is NP-complete even when the designer only cares about the payments made to it.",
                "In Section 5, we show that designing an optimal deterministic mechanism is also NP-complete when payments are not possible and the designer is only interested in the outcome chosen.",
                "In Section 6, we show that an optimal randomized mechanism can be designed in polynomial time even in the general case.",
                "Finally, in Section 7, we show that for designing optimal combinatorial auctions under best-only preferences, our results on AMD imply that this problem is NP-complete for deterministic auctions, but easy for randomized auctions. 2.",
                "JUSTIFYING THE FOCUS ON NONMANIPULABLE MECHANISMS Before we define the computational problem of automated mechanism design, we should justify our focus on nonmanipulable mechanisms.",
                "After all, it is not immediately obvious that there are no manipulable mechanisms that, even when agents report their types strategically and hence sometimes untruthfully, still reach better outcomes (according to whatever objective we use) than any nonmanipulable mechanism.",
                "This does, however, turn out to be the case: given any mechanism, we can construct a nonmanipulable mechanism whose performance is identical, as follows.",
                "We build an interface layer between the agents and the original mechanism.",
                "The agents report their preferences (or types) to the interface layer; subsequently, the interface layer inputs into the original mechanism the types that the agents would have strategically reported to the original mechanism, if their types were as declared to the interface layer.",
                "The resulting outcome is the outcome of the new mechanism.",
                "Since the interface layer acts strategically on each agents behalf, there is never an incentive to report falsely to the interface layer; and hence, the types reported by the interface layer are the strategic types that would have been reported without the interface layer, so the results are exactly as they would have been with the original mechanism.",
                "This argument is known in the mechanism design literature as the revelation principle [16]. (There are computational difficulties with applying the revelation principle in large combinatorial outcome and type spaces [7, 22].",
                "However, because here we focus on flatly represented outcome and type spaces, this is not a concern here.)",
                "Given this, we can focus on truthful mechanisms in the rest of the paper. 3.",
                "DEFINITIONS We now formalize the automated mechanism design setting.",
                "Definition 1.",
                "In an automated mechanism design setting, we are given: • a finite set of outcomes O; • a finite set of N agents; • for each agent i, 1. a finite set of types Θi, 2. a probability distribution γi over Θi (in the case of correlated types, there is a single joint distribution γ over Θ1 × . . . × ΘN ), and 3. a utility function ui : Θi × O → R; 1 • An objective function whose expectation the designer wishes to maximize.",
                "There are many possible objective functions the designer might have, for example, social welfare (where the designer seeks to maximize the sum of the agents utilities), or the minimum utility of any agent (where the designer seeks to maximize the worst utility had by any agent).",
                "In both of these cases, the designer is benevolent, because the designer, in some sense, is pursuing the agents collective happiness.",
                "However, in this paper, we focus on the case of a self-interested designer.",
                "A self-interested designer cares only about the outcome chosen (that is, the designer does not care how the outcome relates to the agents preferences, but rather has a fixed preference over the outcomes), and about the net payments made by the agents, which flow to the designer.",
                "Definition 2.",
                "A self-interested designer has an objective function given by g(o) + N i=1 πi, where g : O → R indicates the designers own preference over the outcomes, and πi is the payment made by agent i.",
                "In the case where g = 0 everywhere, the designer is said to be payment maximizing.",
                "In the case where payments are not possible, g constitutes the objective function by itself.",
                "We now define the kinds of mechanisms under study.",
                "By the revelation principle, we can restrict attention to truthful, direct revelation mechanisms, where agents report their types directly and never have an incentive to misreport them.",
                "Definition 3.",
                "We consider the following kinds of mechanism: • A deterministic mechanism without payments consists of an outcome selection function o : Θ1 × Θ2 × . . . × ΘN → O. • A randomized mechanism without payments consists of a distribution selection function p : Θ1 × Θ2 × . . . × ΘN → P(O), where P(O) is the set of probability distributions over O. • A deterministic mechanism with payments consists of an outcome selection function o : Θ1 ×Θ2 ×. . .×ΘN → O and for each agent i, a payment selection function πi : Θ1 × Θ2 × . . . × ΘN → R, where πi(θ1, . . . , θN ) gives the payment made by agent i when the reported types are θ1, . . . , θN . 1 Though this follows standard game theory notation [16], the fact that the agent has both a utility function and a type is perhaps confusing.",
                "The types encode the various possible preferences that the agent may turn out to have, and the agents type is not known to the aggregator.",
                "The utility function is common knowledge, but because the agents type is a parameter in the agents utility function, the aggregator cannot know what the agents utility is without knowing the agents type. 134 • A randomized mechanism with payments consists of a distribution selection function p : Θ1 × Θ2 × . . . × ΘN → P(O), and for each agent i, a payment selection function πi : Θ1 × Θ2 × . . . × ΘN → R.2 There are two types of constraint on the designer in building the mechanism. 3.1 <br>individual rationality</br> (IR) constraints The first type of constraint is the following.",
                "The utility of each agent has to be at least as great as the agents fallback utility, that is, the utility that the agent would receive if it did not participate in the mechanism.",
                "Otherwise that agent would not participate in the mechanism-and no agents participation can ever hurt the mechanism designers objective because at worst, the mechanism can ignore an agent by pretending the agent is not there. (Furthermore, if no such constraint applied, the designer could simply make the agents pay an infinite amount.)",
                "This type of constraint is called an IR (<br>individual rationality</br>) constraint.",
                "There are three different possible IR constraints: ex ante, ex interim, and ex post, depending on what the agent knows about its own type and the others types when deciding whether to participate in the mechanism.",
                "Ex ante IR means that the agent would participate if it knew nothing at all (not even its own type).",
                "We will not study this concept in this paper.",
                "Ex interim IR means that the agent would always participate if it knew only its own type, but not those of the others.",
                "Ex post IR means that the agent would always participate even if it knew everybodys type.",
                "We will define the latter two notions of IR formally.",
                "First, we need to formalize the concept of the fallback outcome.",
                "We assume that each agents fallback utility is zero for each one of its types.",
                "This is without loss of generality because we can add a constant term to an agents utility function (for a given type), without affecting the decision-making behavior of that expected utility maximizing agent [16].",
                "Definition 4.",
                "In any automated mechanism design setting with an IR constraint, there is a fallback outcome o0 ∈ O where, for any agent i and any type θi ∈ Θi, we have ui(θi, o0) = 0. (Additionally, in the case of a self-interested designer, g(o0) = 0.)",
                "We can now to define the notions of <br>individual rationality</br>.",
                "Definition 5.",
                "<br>individual rationality</br> (IR) is defined by: • A deterministic mechanism is ex interim IR if for any agent i, and any type θi ∈ Θi, we have E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, .., θN ))−πi(θ1, .., θN )] ≥ 0.",
                "A randomized mechanism is ex interim IR if for any agent i, and any type θi ∈ Θi, we have E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,..,θn [ui(θi, o)−πi(θ1, .., θN )] ≥ 0. • A deterministic mechanism is ex post IR if for any agent i, and any type vector (θ1, . . . , θN ) ∈ Θ1 × . . . × ΘN , we have ui(θi, o(θ1, . . . , θN )) − πi(θ1, . . . , θN ) ≥ 0. 2 We do not randomize over payments because as long as the agents and the designer are risk neutral with respect to payments, that is, their utility is linear in payments, there is no reason to randomize over payments.",
                "A randomized mechanism is ex post IR if for any agent i, and any type vector (θ1, . . . , θN ) ∈ Θ1 × . . . × ΘN , we have Eo|θ1,..,θn [ui(θi, o) − πi(θ1, .., θN )] ≥ 0.",
                "The terms involving payments can be left out in the case where payments are not possible. 3.2 Incentive compatibility (IC) constraints The second type of constraint says that the agents should never have an incentive to misreport their type (as justified above by the revelation principle).",
                "For this type of constraint, the two most common variants (or solution concepts) are implementation in dominant strategies, and implementation in Bayes-Nash equilibrium.",
                "Definition 6.",
                "Given an automated mechanism design setting, a mechanism is said to implement its outcome and payment functions in dominant strategies if truthtelling is always optimal even when the types reported by the other agents are already known.",
                "Formally, for any agent i, any type vector (θ1, . . . , θi, . . . , θN ) ∈ Θ1 × . . . × Θi × . . . × ΘN , and any alternative type report ˆθi ∈ Θi, in the case of deterministic mechanisms we have ui(θi, o(θ1, . . . , θi, . . . , θN )) − πi(θ1, . . . , θi, . . . , θN ) ≥ ui(θi, o(θ1, . . . , ˆθi, . . . , θN )) − πi(θ1, . . . , ˆθi, . . . , θN ).",
                "In the case of randomized mechanisms we have Eo|θ1,..,θi,..,θn [ui(θi, o) − πi(θ1, . . . , θi, . . . , θN )] ≥ Eo|θ1,.., ˆθi,..,θn [ui(θi, o) − πi(θ1, . . . , ˆθi, . . . , θN )].",
                "The terms involving payments can be left out in the case where payments are not possible.",
                "Thus, in dominant strategies implementation, truthtelling is optimal regardless of what the other agents report.",
                "If it is optimal only given that the other agents are truthful, and given that one does not know the other agents types, we have implementation in Bayes-Nash equilibrium.",
                "Definition 7.",
                "Given an automated mechanism design setting, a mechanism is said to implement its outcome and payment functions in Bayes-Nash equilibrium if truthtelling is always optimal to an agent when that agent does not yet know anything about the other agents types, and the other agents are telling the truth.",
                "Formally, for any agent i, any type θi ∈ Θi, and any alternative type report ˆθi ∈ Θi, in the case of deterministic mechanisms we have E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, . . . , θi, . . . , θN ))− πi(θ1, . . . , θi, . . . , θN )] ≥ E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, . . . , ˆθi, . . . , θN ))− πi(θ1, . . . , ˆθi, . . . , θN )].",
                "In the case of randomized mechanisms we have E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,..,θi,..,θn [ui(θi, o)− πi(θ1, . . . , θi, . . . , θN )] ≥ E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,.., ˆθi,..,θn [ui(θi, o)− πi(θ1, . . . , ˆθi, . . . , θN )].",
                "The terms involving payments can be left out in the case where payments are not possible. 135 3.3 Automated mechanism design We can now define the computational problem we study.",
                "Definition 8. (AUTOMATED-MECHANISM-DESIGN (AMD)) We are given: • an automated mechanism design setting, • an IR notion (ex interim, ex post, or none), • a solution concept (dominant strategies or Bayes-Nash), • whether payments are possible, • whether randomization is possible, • (in the decision variant of the problem) a target value G. We are asked whether there exists a mechanism of the specified kind (in terms of payments and randomization) that satisfies both the IR notion and the solution concept, and gives an expected value of at least G for the objective.",
                "An interesting special case is the setting where there is only one agent.",
                "In this case, the reporting agent always knows everything there is to know about the other agents types-because there are no other agents.",
                "Since ex post and ex interim IR only differ on what an agent is assumed to know about other agents types, the two IR concepts coincide here.",
                "Also, because implementation in dominant strategies and implementation in Bayes-Nash equilibrium only differ on what an agent is assumed to know about other agents types, the two solution concepts coincide here.",
                "This observation will prove to be a useful tool in proving hardness results: if we prove computational hardness in the singleagent setting, this immediately implies hardness for both IR concepts, for both solution concepts, for any number of agents. 4.",
                "PAYMENT-MAXIMIZINGDETERMINISTIC AMD IS HARD In this section we demonstrate that it is NP-complete to design a deterministic mechanism that maximizes the expected sum of the payments collected from the agents.",
                "We show that this problem is hard even in the single-agent setting, thereby immediately showing it hard for both IR concepts, for both solution concepts.",
                "To demonstrate NPhardness, we reduce from the MINSAT problem.",
                "Definition 9 (MINSAT).",
                "We are given a formula φ in conjunctive normal form, represented by a set of Boolean variables V and a set of clauses C, and an integer K (K < |C|).",
                "We are asked whether there exists an assignment to the variables in V such that at most K clauses in φ are satisfied.",
                "MINSAT was recently shown to be NP-complete [14].",
                "We can now present our result.",
                "Theorem 1.",
                "Payment-maximizing deterministic AMD is NP-complete, even for a single agent, even with a uniform distribution over types.",
                "Proof.",
                "It is easy to show that the problem is in NP.",
                "To show NP-hardness, we reduce an arbitrary MINSAT instance to the following single-agent payment-maximizing deterministic AMD instance.",
                "Let the agents type set be Θ = {θc : c ∈ C} ∪ {θv : v ∈ V }, where C is the set of clauses in the MINSAT instance, and V is the set of variables.",
                "Let the probability distribution over these types be uniform.",
                "Let the outcome set be O = {o0} ∪ {oc : c ∈ C} ∪ {ol : l ∈ L}, where L is the set of literals, that is, L = {+v : v ∈ V } ∪ {−v : v ∈ V }.",
                "Let the notation v(l) = v denote that v is the variable corresponding to the literal l, that is, l ∈ {+v, −v}.",
                "Let l ∈ c denote that the literal l occurs in clause c. Then, let the agents utility function be given by u(θc, ol) = |Θ| + 1 for all l ∈ L with l ∈ c; u(θc, ol) = 0 for all l ∈ L with l /∈ c; u(θc, oc) = |Θ| + 1; u(θc, oc ) = 0 for all c ∈ C with c = c ; u(θv, ol) = |Θ| for all l ∈ L with v(l) = v; u(θv, ol) = 0 for all l ∈ L with v(l) = v; u(θv, oc) = 0 for all c ∈ C. The goal of the AMD instance is G = |Θ| + |C|−K |Θ| , where K is the goal of the MINSAT instance.",
                "We show the instances are equivalent.",
                "First, suppose there is a solution to the MINSAT instance.",
                "Let the assignment of truth values to the variables in this solution be given by the function f : V → L (where v(f(v)) = v for all v ∈ V ).",
                "Then, for every v ∈ V , let o(θv) = of(v) and π(θv) = |Θ|.",
                "For every c ∈ C, let o(θc) = oc; let π(θc) = |Θ| + 1 if c is not satisfied in the MINSAT solution, and π(θc) = |Θ| if c is satisfied.",
                "It is straightforward to check that the IR constraint is satisfied.",
                "We now check that the agent has no incentive to misreport.",
                "If the agents type is some θv, then any other report will give it an outcome that is no better, for a payment that is no less, so it has no incentive to misreport.",
                "If the agents type is some θc where c is a satisfied clause, again, any other report will give it an outcome that is no better, for a payment that is no less, so it has no incentive to misreport.",
                "The final case to check is where the agents type is some θc where c is an unsatisfied clause.",
                "In this case, we observe that for none of the types, reporting it leads to an outcome ol for a literal l ∈ c, precisely because the clause is not satisfied in the MINSAT instance.",
                "Because also, no type besides θc leads to the outcome oc, reporting any other type will give an outcome with utility 0, while still forcing a payment of at least |Θ| from the agent.",
                "Clearly the agent is better off reporting truthfully, for a total utility of 0.",
                "This establishes that the agent never has an incentive to misreport.",
                "Finally, we show that the goal is reached.",
                "If s is the number of satisfied clauses in the MINSAT solution (so that s ≤ K), the expected payment from this mechanism is |V ||Θ|+s|Θ|+(|C|−s)(|Θ|+1) |Θ| ≥ |V ||Θ|+K|Θ|+(|C|−K)(|Θ|+1) |Θ| = |Θ| + |C|−K |Θ| = G. So there is a solution to the AMD instance.",
                "Now suppose there is a solution to the AMD instance, given by an outcome function o and a payment function π.",
                "First, suppose there is some v ∈ V such that o(θv) /∈ {o+v, o−v}.",
                "Then the utility that the agent derives from the given outcome for this type is 0, and hence, by IR, no payment can be extracted from the agent for this type.",
                "Because, again by IR, the maximum payment that can be extracted for any other type is |Θ| + 1, it follows that the maximum expected payment that could be obtained is at most (|Θ|−1)(|Θ|+1) |Θ| < |Θ| < G, contradicting that this is a solution to the AMD instance.",
                "It follows that in the solution to the AMD instance, for every v ∈ V , o(θv) ∈ {o+v, o−v}. 136 We can interpret this as an assignment of truth values to the variables: v is set to true if o(θv) = o+v, and to false if o(θv) = o−v.",
                "We claim this assignment is a solution to the MINSAT instance.",
                "By the IR constraint, the maximum payment we can extract from any type θv is |Θ|.",
                "Because there can be no incentives for the agent to report falsely, for any clause c satisfied by the given assignment, the maximum payment we can extract for the corresponding type θc is |Θ|. (For if we extracted more from this type, the agents utility in this case would be less than 1; and if v is the variable satisfying c in the assignment, so that o(θv) = ol where l occurs in c, then the agent would be better off reporting θv instead of the truthful report θc, to get an outcome worth |Θ|+1 to it while having to pay at most |Θ|.)",
                "Finally, for any unsatisfied clause c, by the IR constraint, the maximum payment we can extract for the corresponding type θc is |Θ| + 1.",
                "It follows that the expected payment from our mechanism is at most V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ , where s is the number of satisfied clauses.",
                "Because our mechanism achieves the goal, it follows that V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ ≥ G, which by simple algebraic manipulations is equivalent to s ≤ K. So there is a solution to the MINSAT instance.",
                "Because payment-maximizing AMD is just the special case of AMD for a self-interested designer where the designer has no preferences over the outcome chosen, this immediately implies hardness for the general case of AMD for a selfinterested designer where payments are possible.",
                "However, it does not yet imply hardness for the special case where payments are not possible.",
                "We will prove hardness in this case in the next section. 5.",
                "SELF-INTERESTED DETERMINISTIC AMD WITHOUT PAYMENTS IS HARD In this section we demonstrate that it is NP-complete to design a deterministic mechanism that maximizes the expectation of the designers objective when payments are not possible.",
                "We show that this problem is hard even in the single-agent setting, thereby immediately showing it hard for both IR concepts, for both solution concepts.",
                "Theorem 2.",
                "Without payments, deterministic AMD for a self-interested designer is NP-complete, even for a single agent, even with a uniform distribution over types.",
                "Proof.",
                "It is easy to show that the problem is in NP.",
                "To show NP-hardness, we reduce an arbitrary MINSAT instance to the following single-agent self-interested deterministic AMD without payments instance.",
                "Let the agents type set be Θ = {θc : c ∈ C} ∪ {θv : v ∈ V }, where C is the set of clauses in the MINSAT instance, and V is the set of variables.",
                "Let the probability distribution over these types be uniform.",
                "Let the outcome set be O = {o0} ∪ {oc : c ∈ C}∪{ol : l ∈ L}∪{o∗ }, where L is the set of literals, that is, L = {+v : v ∈ V } ∪ {−v : v ∈ V }.",
                "Let the notation v(l) = v denote that v is the variable corresponding to the literal l, that is, l ∈ {+v, −v}.",
                "Let l ∈ c denote that the literal l occurs in clause c. Then, let the agents utility function be given by u(θc, ol) = 2 for all l ∈ L with l ∈ c; u(θc, ol) = −1 for all l ∈ L with l /∈ c; u(θc, oc) = 2; u(θc, oc ) = −1 for all c ∈ C with c = c ; u(θc, o∗ ) = 1; u(θv, ol) = 1 for all l ∈ L with v(l) = v; u(θv, ol) = −1 for all l ∈ L with v(l) = v; u(θv, oc) = −1 for all c ∈ C; u(θv, o∗ ) = −1.",
                "Let the designers objective function be given by g(o∗ ) = |Θ|+1; g(ol) = |Θ| for all l ∈ L; g(oc) = |Θ| for all c ∈ C. The goal of the AMD instance is G = |Θ| + |C|−K |Θ| , where K is the goal of the MINSAT instance.",
                "We show the instances are equivalent.",
                "First, suppose there is a solution to the MINSAT instance.",
                "Let the assignment of truth values to the variables in this solution be given by the function f : V → L (where v(f(v)) = v for all v ∈ V ).",
                "Then, for every v ∈ V , let o(θv) = of(v).",
                "For every c ∈ C that is satisfied in the MINSAT solution, let o(θc) = oc; for every unsatisfied c ∈ C, let o(θc) = o∗ .",
                "It is straightforward to check that the IR constraint is satisfied.",
                "We now check that the agent has no incentive to misreport.",
                "If the agents type is some θv, it is getting the maximum utility for that type, so it has no incentive to misreport.",
                "If the agents type is some θc where c is a satisfied clause, again, it is getting the maximum utility for that type, so it has no incentive to misreport.",
                "The final case to check is where the agents type is some θc where c is an unsatisfied clause.",
                "In this case, we observe that for none of the types, reporting it leads to an outcome ol for a literal l ∈ c, precisely because the clause is not satisfied in the MINSAT instance.",
                "Because also, no type leads to the outcome oc, there is no outcome that the mechanism ever selects that would give the agent utility greater than 1 for type θc, and hence the agent has no incentive to report falsely.",
                "This establishes that the agent never has an incentive to misreport.",
                "Finally, we show that the goal is reached.",
                "If s is the number of satisfied clauses in the MINSAT solution (so that s ≤ K), then the expected value of the designers objective function is |V ||Θ|+s|Θ|+(|C|−s)(|Θ|+1) |Θ| ≥ |V ||Θ|+K|Θ|+(|C|−K)(|Θ|+1) |Θ| = |Θ| + |C|−K |Θ| = G. So there is a solution to the AMD instance.",
                "Now suppose there is a solution to the AMD instance, given by an outcome function o.",
                "First, suppose there is some v ∈ V such that o(θv) /∈ {o+v, o−v}.",
                "The only other outcome that the mechanism is allowed to choose under the IR constraint is o0.",
                "This has an objective value of 0, and because the highest value the objective function ever takes is |Θ| + 1, it follows that the maximum expected value of the objective function that could be obtained is at most (|Θ|−1)(|Θ|+1) |Θ| < |Θ| < G, contradicting that this is a solution to the AMD instance.",
                "It follows that in the solution to the AMD instance, for every v ∈ V , o(θv) ∈ {o+v, o−v}.",
                "We can interpret this as an assignment of truth values to the variables: v is set to true if o(θv) = o+v, and to false if o(θv) = o−v.",
                "We claim this assignment is a solution to the MINSAT instance.",
                "By the above, for any type θv, the value of the objective function in this mechanism will be |Θ|.",
                "For any clause c satisfied by the given assignment, the value of the objective function in the case where the agent reports type θc will be at most |Θ|. (This is because we cannot choose the outcome o∗ for such a type, as in this case the agent would have an incentive to report θv instead, where v is the variable satisfying c in the assignment (so that o(θv) = ol where l occurs in c).)",
                "Finally, for any unsatisfied clause c, the maximum value the objective function can take in the case where the agent reports type θc is |Θ| + 1, simply because this is the largest value the function ever takes.",
                "It follows that the expected value of the objective function for our mechanism is at most V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ , where s is the number of satisfied 137 clauses.",
                "Because our mechanism achieves the goal, it follows that V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ ≥ G, which by simple algebraic manipulations is equivalent to s ≤ K. So there is a solution to the MINSAT instance.",
                "Both of our hardness results relied on the constraint that the mechanism should be deterministic.",
                "In the next section, we show that the hardness of design disappears when we allow for randomization in the mechanism. 6.",
                "RANDOMIZED AMD FOR A SELFINTERESTED DESIGNER IS EASY We now show how allowing for randomization over the outcomes makes the problem of self-interested AMD tractable through linear programming, for any constant number of agents.",
                "Theorem 3.",
                "Self-interested randomized AMD with a constant number of agents is solvable in polynomial time by linear programming, both with and without payments, both for ex post and ex interim IR, and both for implementation in dominant strategies and for implementation in Bayes-Nash equilibrium-even if the types are correlated.",
                "Proof.",
                "Because linear programs can be solved in polynomial time [13], all we need to show is that the number of variables and equations in our program is polynomial for any constant number of agents-that is, exponential only in N. Throughout, for purposes of determining the size of the linear program, let T = maxi{|Θi|}.",
                "The variables of our linear program will be the probabilities (p(θ1, θ2, . . . , θN ))(o) (at most TN |O| variables) and the payments πi(θ1, θ2, . . . , θN ) (at most NTN variables). (We show the linear program for the case where payments are possible; the case without payments is easily obtained from this by simply omitting all the payment variables in the program, or by adding additional constraints forcing the payments to be 0.)",
                "First, we show the IR constraints.",
                "For ex post IR, we add the following (at most NTN ) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, and for every (θ1, θ2, . . . , θN ) ∈ Θ1 × Θ2 × . . . × ΘN , we add ( o∈O (p(θ1, θ2, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , θN ) ≥ 0.",
                "For ex interim IR, we add the following (at most NT) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, for every θi ∈ Θi, we add θ1,... ,θN γ(θ1, . . . , θN |θi)(( o∈O (p(θ1, θ2, . . . , θN ))(o)u(θi, o))− πi(θ1, θ2, . . . , θN )) ≥ 0.",
                "Now, we show the solution concept constraints.",
                "For implementation in dominant strategies, we add the following (at most NTN+1 ) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, for every (θ1, θ2, . . . , θi, . . . , θN ) ∈ Θ1 × Θ2 × . . . × ΘN , and for every alternative type report ˆθi ∈ Θi, we add the constraint ( o∈O (p(θ1, θ2, . . . , θi, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , θi, . . . , θN ) ≥ ( o∈O (p(θ1, θ2, . . . , ˆθi, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , ˆθi, . . . , θN ).",
                "Finally, for implementation in Bayes-Nash equilibrium, we add the following (at most NT2 ) constraints to the LP: • For every i ∈ {1, 2, ..., N}, for every θi ∈ Θi, and for every alternative type report ˆθi ∈ Θi, we add the constraint θ1,...,θN γ(θ1, ..., θN |θi)(( o∈O (p(θ1, θ2, ..., θi, ..., θN ))(o)u(θi, o)) − πi(θ1, θ2, ..., θi, ..., θN )) ≥ θ1,...,θN γ(θ1, ..., θN |θi)(( o∈O (p(θ1, θ2, ..., ˆθi, ..., θN ))(o)u(θi, o)) − πi(θ1, θ2, ..., ˆθi, ..., θN )).",
                "All that is left to do is to give the expression the designer is seeking to maximize, which is: • θ1,...,θN γ(θ1, ..., θN )(( o∈O (p(θ1, θ2, ..., θi, ..., θN ))(o)g(o)) + N i=1 πi(θ1, θ2, ..., θN )).",
                "As we indicated, the number of variables and constraints is exponential only in N, and hence the linear program is of polynomial size for constant numbers of agents.",
                "Thus the problem is solvable in polynomial time. 7.",
                "IMPLICATIONS FOR AN OPTIMAL COMBINATORIAL AUCTION DESIGN PROBLEM In this section, we will demonstrate some interesting consequences of the problem of automated mechanism design for a self-interested designer on designing optimal combinatorial auctions.",
                "Consider a combinatorial auction with a set S of items for sale.",
                "For any bundle B ⊆ S, let ui(θi, B) be bidder is utility for receiving bundle B when the bidders type is θi.",
                "The optimal auction design problem is to specify the rules of the auction so as to maximize expected revenue to the auctioneer. (By the revelation principle, without loss of generality, we can assume the auction is truthful.)",
                "The optimal auction design problem is solved for the case of a single item by the famous Myerson auction [18].",
                "However, designing optimal auctions in combinatorial auctions is a recognized open research problem [3, 25].",
                "The problem is open even if there are only two items for sale. (The twoitem case with a very special form of complementarity and no substitutability has been solved recently [1].)",
                "Suppose we have free disposal-items can be thrown away at no cost.",
                "Also, suppose that the bidders preferences have the following structure: whenever a bidder receives a bundle of items, the bidders utility for that bundle is determined by the best item in the bundle only. (We emphasize that 138 which item is the best is allowed to depend on the bidders type.)",
                "Definition 10.",
                "Bidder i is said to have best-only preferences over bundles of items if there exists a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s).",
                "We make the following useful observation in this setting: there is no sense in awarding a bidder more than one item.",
                "The reason is that if the bidder is reporting truthfully, taking all but the highest valued item away from the bidder will not hurt the bidder; and, by free disposal, doing so can only reduce the incentive for this bidder to falsely report this type, when the bidder actually has another type.",
                "We now show that the problem of designing a deterministic optimal auction here is NP-complete, by a reduction from the payment maximizing AMD problem!",
                "Theorem 4.",
                "Given an optimal combinatorial auction design problem under best-only preferences (given by a set of items S and for each bidder i, a finite type space Θi and a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s)), designing the optimal deterministic auction is NP-complete, even for a single bidder with a uniform distribution over types.",
                "Proof.",
                "The problem is in NP because we can nondeterministically generate an allocation rule, and then set the payments using linear programming.",
                "To show NP-hardness, we reduce an arbitrary paymentmaximizing deterministic AMD instance, with a single agent and a uniform distribution over types, to the following optimal combinatorial auction design problem instance with a single bidder with best-only preferences.",
                "For every outcome o ∈ O in the AMD instance (besides the outcome o0), let there be one item so ∈ S. Let the type space be the same, and let v(θi, so) = ui(θi, o) (where u is as specified in the AMD instance).",
                "Let the expected revenue target value be the same in both instances.",
                "We show the instances are equivalent.",
                "First suppose there exists a solution to the AMD instance, given by an outcome function and a payment function.",
                "Then, if the AMD solution chooses outcome o for a type, in the optimal auction solution, allocate {so} to the bidder for this type. (Unless o = o0, in which case we allocate {} to the bidder.)",
                "Let the payment functions be the same in both instances.",
                "Then, the utility that an agent receives for reporting a type (given the true type) in either solution is the same, so we have incentive compatibility in the optimal auction solution.",
                "Moreover, because the type distribution and the payment function are the same, the expected revenue to the auctioneer/designer is the same.",
                "It follows that there exists a solution to the optimal auction design instance.",
                "Now suppose there exists a solution to the optimal auction design instance.",
                "By the at-most-one-item observation, we can assume without loss of generality that the solution never allocates more than one item.",
                "Then, if the optimal auction solution allocates item so to the bidder for a type, in the AMD solution, let the mechanism choose outcome o for that type.",
                "If the optimal auction solution allocates nothing to the bidder for a type, in the AMD solution, let the mechanism choose outcome o0 for that type.",
                "Let the payment functions be the same.",
                "Then, the utility that an agent receives for reporting a type (given the true type) in either solution is the same, so we have incentive compatibility in the AMD solution.",
                "Moreover, because the type distribution and the payment function are the same, the expected revenue to the designer/auctioneer is the same.",
                "It follows that there exists a solution to the AMD instance.",
                "Fortunately, we can also carry through the easiness result for randomized mechanisms to this combinatorial auction setting-giving us one of the few known polynomial-time algorithms for an optimal combinatorial auction design problem.",
                "Theorem 5.",
                "Given an optimal combinatorial auction design problem under best-only preferences (given by a set of items S and for each bidder i, a finite type space Θi and a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s)), if the number of bidders is a constant k, then the optimal randomized auction can be designed in polynomial time. (For any IC and IR constraints.)",
                "Proof.",
                "By the at-most-one-item observation, we can without loss of generality restrict ourselves to allocations where each bidder receives at most one item.",
                "There are fewer than (|S| + 1)k such allocations-that is, a polynomial number of allocations.",
                "Because we can list the outcomes explicitly, we can simply solve this as a payment-maximizing AMD instance, with linear programming. 8.",
                "RELATED RESEARCH ON COMPLEXITY IN MECHANISM DESIGN There has been considerable recent interest in mechanism design in computer science.",
                "Some of it has focused on issues of computational complexity, but most of that work has strived toward designing mechanisms that are easy to execute (e.g. [20, 15, 19, 9, 12]), rather than studying the complexity of designing the mechanism.",
                "The closest piece of earlier work studied the complexity of automated mechanism design by a benevolent designer [5, 6].",
                "Roughgarden has studied the complexity of designing a good network topology for agents that selfishly choose the links they use [21].",
                "This is related to mechanism design, but differs significantly in that the designer only has restricted control over the rules of the game because there is no party that can impose the outcome (or side payments).",
                "Also, there is no explicit reporting of preferences. 9.",
                "CONCLUSIONS AND FUTURE RESEARCH Often, an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "The key difficulty is that the agents may report their preferences insincerely to make the chosen outcome more favorable to themselves.",
                "Mechanism design is the art of designing the rules of the game so that the agents are motivated to report their preferences truthfully, and a desirable outcome is chosen.",
                "In a recently emerging approach-called automated mechanism design-a mechanism is computed for the specific preference aggregation setting at hand.",
                "This has several advantages, 139 but the downside is that the mechanism design optimization problem needs to be solved anew each time.",
                "Unlike earlier work on automated mechanism design that studied a benevolent designer, in this paper we studied automated mechanism design problems where the designer is self-interesteda setting much more relevant for electronic commerce.",
                "In this setting, the center cares only about which outcome is chosen and what payments are made to it.",
                "The reason that the agents preferences are relevant is that the center is constrained to making each agent at least as well off as the agent would have been had it not participated in the mechanism.",
                "In this setting, we showed that designing an optimal deterministic mechanism is NP-complete in two important special cases: when the center is interested only in the payments made to it, and when payments are not possible and the center is interested only in the outcome chosen.",
                "These hardness results imply hardness in all more general automated mechanism design settings with a self-interested designer.",
                "The hardness results apply whether the <br>individual rationality</br> (participation) constraints are applied ex interim or ex post, and whether the solution concept is dominant strategies implementation or Bayes-Nash equilibrium implementation.",
                "We then showed that allowing randomization in the mechanism makes the design problem in all these settings computationally easy.",
                "Finally, we showed that the paymentmaximizing AMD problem is closely related to an interesting variant of the optimal (revenue-maximizing) combinatorial auction design problem, where the bidders have best-only preferences.",
                "We showed that here, too, designing an optimal deterministic mechanism is NP-complete even with one agent, but designing an optimal randomized mechanism is easy.",
                "Future research includes studying automated mechanism design with a self-interested designer in more restricted settings such as auctions (where the designers objective may include preferences about which bidder should receive the good-as well as payments).",
                "We also want to study the complexity of automated mechanism design in settings where the outcome and type spaces have special structure so they can be represented more concisely.",
                "Finally, we plan to assemble a data set of real-world mechanism design problems-both historical and current-and apply automated mechanism design to those problems. 10.",
                "REFERENCES [1] M. Armstrong.",
                "Optimal multi-object auctions.",
                "Review of Economic Studies, 67:455-481, 2000. [2] K. Arrow.",
                "The property rights doctrine and demand revelation under incomplete information.",
                "In M. Boskin, editor, Economics and human welfare.",
                "New York Academic Press, 1979. [3] C. Avery and T. Hendershott.",
                "Bundling and optimal auctions of multiple products.",
                "Review of Economic Studies, 67:483-497, 2000. [4] E. H. Clarke.",
                "Multipart pricing of public goods.",
                "Public Choice, 11:17-33, 1971. [5] V. Conitzer and T. Sandholm.",
                "Complexity of mechanism design.",
                "In Proceedings of the 18th Annual Conference on Uncertainty in Artificial Intelligence (UAI-02), pages 103-110, Edmonton, Canada, 2002. [6] V. Conitzer and T. Sandholm.",
                "Automated mechanism design: Complexity results stemming from the single-agent setting.",
                "In Proceedings of the 5th International Conference on Electronic Commerce (ICEC-03), pages 17-24, Pittsburgh, PA, USA, 2003. [7] V. Conitzer and T. Sandholm.",
                "Computational criticisms of the revelation principle.",
                "In Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), New York, NY, 2004.",
                "Short paper.",
                "Full-length version appeared in the AAMAS-03 workshop on Agent-Mediated Electronic Commerce (AMEC). [8] C. dAspremont and L. A. G´erard-Varet.",
                "Incentives and incomplete information.",
                "Journal of Public Economics, 11:25-45, 1979. [9] J. Feigenbaum, C. Papadimitriou, and S. Shenker.",
                "Sharing the cost of muliticast transmissions.",
                "Journal of Computer and System Sciences, 63:21-41, 2001.",
                "Early version in Proceedings of the Annual ACM Symposium on Theory of Computing (STOC), 2000. [10] A. Gibbard.",
                "Manipulation of voting schemes.",
                "Econometrica, 41:587-602, 1973. [11] T. Groves.",
                "Incentives in teams.",
                "Econometrica, 41:617-631, 1973. [12] J. Hershberger and S. Suri.",
                "Vickrey prices and shortest paths: What is an edge worth?",
                "In Proceedings of the Annual Symposium on Foundations of Computer Science (FOCS), 2001. [13] L. Khachiyan.",
                "A polynomial algorithm in linear programming.",
                "Soviet Math.",
                "Doklady, 20:191-194, 1979. [14] R. Kohli, R. Krishnamurthi, and P. Mirchandani.",
                "The minimum satisfiability problem.",
                "SIAM Journal of Discrete Mathematics, 7(2):275-283, 1994. [15] D. Lehmann, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in rapid, approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002.",
                "Early version appeared in Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), 1999. [16] A. Mas-Colell, M. Whinston, and J. R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [17] E. S. Maskin and J. Riley.",
                "Optimal multi-unit auctions.",
                "In F. Hahn, editor, The Economics of Missing Markets, Information, and Games, chapter 14, pages 312-335.",
                "Clarendon Press, Oxford, 1989. [18] R. Myerson.",
                "Optimal auction design.",
                "Mathematics of Operation Research, 6:58-73, 1981. [19] N. Nisan and A. Ronen.",
                "Computationally feasible VCG mechanisms.",
                "In Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), pages 242-252, Minneapolis, MN, 2000. [20] N. Nisan and A. Ronen.",
                "Algorithmic mechanism design.",
                "Games and Economic Behavior, 35:166-196, 2001.",
                "Early version in Proceedings of the Annual ACM Symposium on Theory of Computing (STOC), 1999. [21] T. Roughgarden.",
                "Designing networks for selfish users is hard.",
                "In Proceedings of the Annual Symposium on Foundations of Computer Science (FOCS), 2001. [22] T. Sandholm.",
                "Issues in computational Vickrey auctions.",
                "International Journal of Electronic Commerce, 4(3):107-129, 2000.",
                "Special Issue on 140 Applying Intelligent Agents for Electronic Commerce.",
                "A short, early version appeared at the Second International Conference on Multi-Agent Systems (ICMAS), pages 299-306, 1996. [23] M. A. Satterthwaite.",
                "Strategy-proofness and Arrows conditions: existence and correspondence theorems for voting procedures and social welfare functions.",
                "Journal of Economic Theory, 10:187-217, 1975. [24] W. Vickrey.",
                "Counterspeculation, auctions, and competitive sealed tenders.",
                "Journal of Finance, 16:8-37, 1961. [25] R. V. Vohra.",
                "Research problems in combinatorial auctions.",
                "Mimeo, version Oct. 29, 2001. 141"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "La restricción más común es la de \"racionalidad individual\" (IR), lo que significa que el mecanismo no puede empeorar a ningún agente de lo que el agente habría sido si no hubiera participado en el mecanismo.",
                "La función de utilidad es de conocimiento común, pero debido a que el tipo de agentes es un parámetro en la función de utilidad de los agentes, el agregador no puede saber cuál es la utilidad de los agentes sin conocer el tipo de agentes.134 • Un mecanismo aleatorio con pagos consiste en una función de selección de distribución P: θ1 × θ2 ×...× θn → P (O), y para cada agente I, una función de selección de pago πi: θ1 × θ2 ×...× θn → R.2 Hay dos tipos de restricción en el diseñador en la construcción del mecanismo.3.1 \"Racionalidad individual\" (IR) restricciones El primer tipo de restricción es el siguiente.",
                "Este tipo de restricción se llama restricción IR (\"racionalidad individual\").",
                "Ahora podemos definir las nociones de \"racionalidad individual\".",
                "La \"racionalidad individual\" (IR) se define por: • Un mecanismo determinista es ex interino IR para cualquier agente I, y cualquier tipo θi ∈ θi, tenemos E (θ1, .., θi - 1, θi+1,.., θn) | θi [ui (θi, o (θ1, .., θn)) - πi (θ1, .., θn)] ≥ 0.",
                "Los resultados de la dureza aplican si las restricciones de \"racionalidad individual\" (participación) se aplican exámenes intermedios o ex post, y si el concepto de solución es la implementación de estrategias dominantes o la implementación de equilibrio de bayes-nash."
            ],
            "translated_text": "",
            "candidates": [
                "racionalidad individual",
                "racionalidad individual",
                "racionalidad individual",
                "Racionalidad individual",
                "racionalidad individual",
                "racionalidad individual",
                "racionalidad individual",
                "racionalidad individual",
                "racionalidad individual",
                "racionalidad individual",
                "racionalidad individual",
                "racionalidad individual"
            ],
            "error": []
        },
        "nonmanipulable mechanism": {
            "translated_key": "mecanismo no manipulable",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Self-interested Automated Mechanism Design and Implications for Optimal Combinatorial Auctions∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT Often, an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "The key difficulty is that the agents may report their preferences insincerely to make the chosen outcome more favorable to themselves.",
                "Mechanism design is the art of designing the rules of the game so that the agents are motivated to report their preferences truthfully, and a desirable outcome is chosen.",
                "In a recently proposed approach-called automated mechanism design-a mechanism is computed for the preference aggregation setting at hand.",
                "This has several advantages, but the downside is that the mechanism design optimization problem needs to be solved anew each time.",
                "Unlike the earlier work on automated mechanism design that studied a benevolent designer, in this paper we study automated mechanism design problems where the designer is self-interested.",
                "In this case, the center cares only about which outcome is chosen and what payments are made to it.",
                "The reason that the agents preferences are relevant is that the center is constrained to making each agent at least as well off as the agent would have been had it not participated in the mechanism.",
                "In this setting, we show that designing optimal deterministic mechanisms is NP-complete in two important special cases: when the center is interested only in the payments made to it, and when payments are not possible and the center is interested only in the outcome chosen.",
                "We then show how allowing for randomization in the mechanism makes problems in this setting computationally easy.",
                "Finally, we show that the payment-maximizing AMD problem is closely related to an interesting variant of the optimal (revenuemaximizing) combinatorial auction design problem, where the bidders have best-only preferences.",
                "We show that here, too, designing an optimal deterministic auction is NPcomplete, but designing an optimal randomized auction is easy.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In multiagent settings, often an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "Such outcomes could be potential presidents, joint plans, allocations of goods or resources, etc.",
                "The preference aggregator generally does not know the agents preferences a priori.",
                "Rather, the agents report their preferences to the coordinator.",
                "Unfortunately, an agent may have an incentive to misreport its preferences in order to mislead the mechanism into selecting an outcome that is more desirable to the agent than the outcome that would be selected if the agent revealed its preferences truthfully.",
                "Such manipulation is undesirable because preference aggregation mechanisms are tailored to aggregate preferences in a socially desirable way, and if the agents reveal their preferences insincerely, a socially undesirable outcome may be chosen.",
                "Manipulability is a pervasive problem across preference aggregation mechanisms.",
                "A seminal negative result, the Gibbard-Satterthwaite theorem, shows that under any nondictatorial preference aggregation scheme, if there are at least 3 possible outcomes, there are preferences under which an agent is better off reporting untruthfully [10, 23]. (A preference aggregation scheme is called dictatorial if one of the agents dictates the outcome no matter what preferences the other agents report.)",
                "What the aggregator would like to do is design a preference aggregation mechanism so that 1) the self-interested agents are motivated to report their preferences truthfully, and 2) the mechanism chooses an outcome that is desirable from the perspective of some objective.",
                "This is the classic setting of mechanism design in game theory.",
                "In this paper, we study the case where the designer is self-interested, that is, the designer does not directly care about how the out132 come relates to the agents preferences, but is rather concerned with its own agenda for which outcome should be chosen, and with maximizing payments to itself.",
                "This is the mechanism design setting most relevant to electronic commerce.",
                "In the case where the mechanism designer is interested in maximizing some notion of social welfare, the importance of collecting the agents preferences is clear.",
                "It is perhaps less obvious why they should be collected when the designer is self-interested and hence its objective is not directly related to the agents preferences.",
                "The reason for this is that often the agents preferences impose limits on how the designer chooses the outcome and payments.",
                "The most common such constraint is that of individual rationality (IR), which means that the mechanism cannot make any agent worse off than the agent would have been had it not participated in the mechanism.",
                "For instance, in the setting of optimal auction design, the designer (auctioneer) is only concerned with how much revenue is collected, and not per se with how well the allocation of the good (or goods) corresponds to the agents preferences.",
                "Nevertheless, the designer cannot force an agent to pay more than its valuation for the bundle of goods allocated to it.",
                "Therefore, even a self-interested designer will choose an outcome that makes the agents reasonably well off.",
                "On the other hand, the designer will not necessarily choose a social welfare maximizing outcome.",
                "For example, if the designer always chooses an outcome that maximizes social welfare with respect to the reported preferences, and forces each agent to pay the difference between the utility it has now and the utility it would have had if it had not participated in the mechanism, it is easy to see that agents may have an incentive to misreport their preferences-and this may actually lead to less revenue being collected.",
                "Indeed, one of the counterintuitive results of optimal auction design theory is that sometimes the good is allocated to nobody even when the auctioneer has a reservation price of 0.",
                "Classical mechanism design provides some general mechanisms, which, under certain assumptions, satisfy some notion of nonmanipulability and maximize some objective.",
                "The upside of these mechanisms is that they do not rely on (even probabilistic) information about the agents preferences (e.g., the Vickrey-Clarke-Groves (VCG) mechanism [24, 4, 11]), or they can be easily applied to any probability distribution over the preferences (e.g., the dAGVA mechanism [8, 2], the Myerson auction [18], and the Maskin-Riley multi-unit auction [17]).",
                "However, the general mechanisms also have significant downsides: • The most famous and most broadly applicable general mechanisms, VCG and dAGVA, only maximize social welfare.",
                "If the designer is self-interested, as is the case in many electronic commerce settings, these mechanisms do not maximize the designers objective. • The general mechanisms that do focus on a selfinterested designer are only applicable in very restricted settings-such as Myersons expected revenue maximizing auction for selling a single item, and Maskin and Rileys expected revenue maximizing auction for selling multiple identical units of an item. • Even in the restricted settings in which these mechanisms apply, the mechanisms only allow for payment maximization.",
                "In practice, the designer may also be interested in the outcome per se.",
                "For example, an auctioneer may care which bidder receives the item. • It is often assumed that side payments can be used to tailor the agents incentives, but this is not always practical.",
                "For example, in barter-based electronic marketplaces-such as Recipco, firstbarter.com, BarterOne, and Intagio-side payments are not allowed.",
                "Furthermore, among software agents, it might be more desirable to construct mechanisms that do not rely on the ability to make payments, because many software agents do not have the infrastructure to make payments.",
                "In contrast, we follow a recent approach where the mechanism is designed automatically for the specific problem at hand.",
                "This approach addresses all of the downsides listed above.",
                "We formulate the mechanism design problem as an optimization problem.",
                "The input is characterized by the number of agents, the agents possible types (preferences), and the aggregators prior distributions over the agents types.",
                "The output is a <br>nonmanipulable mechanism</br> that is optimal with respect to some objective.",
                "This approach is called automated mechanism design.",
                "The automated mechanism design approach has four advantages over the classical approach of designing general mechanisms.",
                "First, it can be used even in settings that do not satisfy the assumptions of the classical mechanisms (such as availability of side payments or that the objective is social welfare).",
                "Second, it may allow one to circumvent impossibility results (such as the Gibbard-Satterthwaite theorem) which state that there is no mechanism that is desirable across all preferences.",
                "When the mechanism is designed for the setting at hand, it does not matter that it would not work more generally.",
                "Third, it may yield better mechanisms (in terms of stronger nonmanipulability guarantees and/or better outcomes) than classical mechanisms because the mechanism capitalizes on the particulars of the setting (the probabilistic information that the designer has about the agents types).",
                "Given the vast amount of information that parties have about each other today, this approach is likely to lead to tremendous savings over classical mechanisms, which largely ignore that information.",
                "For example, imagine a company automatically creating its procurement mechanism based on statistical knowledge about its suppliers, rather than using a classical descending procurement auction.",
                "Fourth, the burden of design is shifted from humans to a machine.",
                "However, automated mechanism design requires the mechanism design optimization problem to be solved anew for each setting.",
                "Hence its computational complexity becomes a key issue.",
                "Previous research has studied this question for benevolent designers-that wish to maximize, for example, social welfare [5, 6].",
                "In this paper we study the computational complexity of automated mechanism design in the case of a self-interested designer.",
                "This is an important setting for automated mechanism design due to the shortage of general mechanisms in this area, and the fact that in most e-commerce settings the designer is self-interested.",
                "We also show that this problem is closely related to a particular optimal (revenue-maximizing) combinatorial auction design problem. 133 The rest of this paper is organized as follows.",
                "In Section 2, we justify the focus on nonmanipulable mechanisms.",
                "In Section 3, we define the problem we study.",
                "In Section 4, we show that designing an optimal deterministic mechanism is NP-complete even when the designer only cares about the payments made to it.",
                "In Section 5, we show that designing an optimal deterministic mechanism is also NP-complete when payments are not possible and the designer is only interested in the outcome chosen.",
                "In Section 6, we show that an optimal randomized mechanism can be designed in polynomial time even in the general case.",
                "Finally, in Section 7, we show that for designing optimal combinatorial auctions under best-only preferences, our results on AMD imply that this problem is NP-complete for deterministic auctions, but easy for randomized auctions. 2.",
                "JUSTIFYING THE FOCUS ON NONMANIPULABLE MECHANISMS Before we define the computational problem of automated mechanism design, we should justify our focus on nonmanipulable mechanisms.",
                "After all, it is not immediately obvious that there are no manipulable mechanisms that, even when agents report their types strategically and hence sometimes untruthfully, still reach better outcomes (according to whatever objective we use) than any <br>nonmanipulable mechanism</br>.",
                "This does, however, turn out to be the case: given any mechanism, we can construct a <br>nonmanipulable mechanism</br> whose performance is identical, as follows.",
                "We build an interface layer between the agents and the original mechanism.",
                "The agents report their preferences (or types) to the interface layer; subsequently, the interface layer inputs into the original mechanism the types that the agents would have strategically reported to the original mechanism, if their types were as declared to the interface layer.",
                "The resulting outcome is the outcome of the new mechanism.",
                "Since the interface layer acts strategically on each agents behalf, there is never an incentive to report falsely to the interface layer; and hence, the types reported by the interface layer are the strategic types that would have been reported without the interface layer, so the results are exactly as they would have been with the original mechanism.",
                "This argument is known in the mechanism design literature as the revelation principle [16]. (There are computational difficulties with applying the revelation principle in large combinatorial outcome and type spaces [7, 22].",
                "However, because here we focus on flatly represented outcome and type spaces, this is not a concern here.)",
                "Given this, we can focus on truthful mechanisms in the rest of the paper. 3.",
                "DEFINITIONS We now formalize the automated mechanism design setting.",
                "Definition 1.",
                "In an automated mechanism design setting, we are given: • a finite set of outcomes O; • a finite set of N agents; • for each agent i, 1. a finite set of types Θi, 2. a probability distribution γi over Θi (in the case of correlated types, there is a single joint distribution γ over Θ1 × . . . × ΘN ), and 3. a utility function ui : Θi × O → R; 1 • An objective function whose expectation the designer wishes to maximize.",
                "There are many possible objective functions the designer might have, for example, social welfare (where the designer seeks to maximize the sum of the agents utilities), or the minimum utility of any agent (where the designer seeks to maximize the worst utility had by any agent).",
                "In both of these cases, the designer is benevolent, because the designer, in some sense, is pursuing the agents collective happiness.",
                "However, in this paper, we focus on the case of a self-interested designer.",
                "A self-interested designer cares only about the outcome chosen (that is, the designer does not care how the outcome relates to the agents preferences, but rather has a fixed preference over the outcomes), and about the net payments made by the agents, which flow to the designer.",
                "Definition 2.",
                "A self-interested designer has an objective function given by g(o) + N i=1 πi, where g : O → R indicates the designers own preference over the outcomes, and πi is the payment made by agent i.",
                "In the case where g = 0 everywhere, the designer is said to be payment maximizing.",
                "In the case where payments are not possible, g constitutes the objective function by itself.",
                "We now define the kinds of mechanisms under study.",
                "By the revelation principle, we can restrict attention to truthful, direct revelation mechanisms, where agents report their types directly and never have an incentive to misreport them.",
                "Definition 3.",
                "We consider the following kinds of mechanism: • A deterministic mechanism without payments consists of an outcome selection function o : Θ1 × Θ2 × . . . × ΘN → O. • A randomized mechanism without payments consists of a distribution selection function p : Θ1 × Θ2 × . . . × ΘN → P(O), where P(O) is the set of probability distributions over O. • A deterministic mechanism with payments consists of an outcome selection function o : Θ1 ×Θ2 ×. . .×ΘN → O and for each agent i, a payment selection function πi : Θ1 × Θ2 × . . . × ΘN → R, where πi(θ1, . . . , θN ) gives the payment made by agent i when the reported types are θ1, . . . , θN . 1 Though this follows standard game theory notation [16], the fact that the agent has both a utility function and a type is perhaps confusing.",
                "The types encode the various possible preferences that the agent may turn out to have, and the agents type is not known to the aggregator.",
                "The utility function is common knowledge, but because the agents type is a parameter in the agents utility function, the aggregator cannot know what the agents utility is without knowing the agents type. 134 • A randomized mechanism with payments consists of a distribution selection function p : Θ1 × Θ2 × . . . × ΘN → P(O), and for each agent i, a payment selection function πi : Θ1 × Θ2 × . . . × ΘN → R.2 There are two types of constraint on the designer in building the mechanism. 3.1 Individual rationality (IR) constraints The first type of constraint is the following.",
                "The utility of each agent has to be at least as great as the agents fallback utility, that is, the utility that the agent would receive if it did not participate in the mechanism.",
                "Otherwise that agent would not participate in the mechanism-and no agents participation can ever hurt the mechanism designers objective because at worst, the mechanism can ignore an agent by pretending the agent is not there. (Furthermore, if no such constraint applied, the designer could simply make the agents pay an infinite amount.)",
                "This type of constraint is called an IR (individual rationality) constraint.",
                "There are three different possible IR constraints: ex ante, ex interim, and ex post, depending on what the agent knows about its own type and the others types when deciding whether to participate in the mechanism.",
                "Ex ante IR means that the agent would participate if it knew nothing at all (not even its own type).",
                "We will not study this concept in this paper.",
                "Ex interim IR means that the agent would always participate if it knew only its own type, but not those of the others.",
                "Ex post IR means that the agent would always participate even if it knew everybodys type.",
                "We will define the latter two notions of IR formally.",
                "First, we need to formalize the concept of the fallback outcome.",
                "We assume that each agents fallback utility is zero for each one of its types.",
                "This is without loss of generality because we can add a constant term to an agents utility function (for a given type), without affecting the decision-making behavior of that expected utility maximizing agent [16].",
                "Definition 4.",
                "In any automated mechanism design setting with an IR constraint, there is a fallback outcome o0 ∈ O where, for any agent i and any type θi ∈ Θi, we have ui(θi, o0) = 0. (Additionally, in the case of a self-interested designer, g(o0) = 0.)",
                "We can now to define the notions of individual rationality.",
                "Definition 5.",
                "Individual rationality (IR) is defined by: • A deterministic mechanism is ex interim IR if for any agent i, and any type θi ∈ Θi, we have E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, .., θN ))−πi(θ1, .., θN )] ≥ 0.",
                "A randomized mechanism is ex interim IR if for any agent i, and any type θi ∈ Θi, we have E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,..,θn [ui(θi, o)−πi(θ1, .., θN )] ≥ 0. • A deterministic mechanism is ex post IR if for any agent i, and any type vector (θ1, . . . , θN ) ∈ Θ1 × . . . × ΘN , we have ui(θi, o(θ1, . . . , θN )) − πi(θ1, . . . , θN ) ≥ 0. 2 We do not randomize over payments because as long as the agents and the designer are risk neutral with respect to payments, that is, their utility is linear in payments, there is no reason to randomize over payments.",
                "A randomized mechanism is ex post IR if for any agent i, and any type vector (θ1, . . . , θN ) ∈ Θ1 × . . . × ΘN , we have Eo|θ1,..,θn [ui(θi, o) − πi(θ1, .., θN )] ≥ 0.",
                "The terms involving payments can be left out in the case where payments are not possible. 3.2 Incentive compatibility (IC) constraints The second type of constraint says that the agents should never have an incentive to misreport their type (as justified above by the revelation principle).",
                "For this type of constraint, the two most common variants (or solution concepts) are implementation in dominant strategies, and implementation in Bayes-Nash equilibrium.",
                "Definition 6.",
                "Given an automated mechanism design setting, a mechanism is said to implement its outcome and payment functions in dominant strategies if truthtelling is always optimal even when the types reported by the other agents are already known.",
                "Formally, for any agent i, any type vector (θ1, . . . , θi, . . . , θN ) ∈ Θ1 × . . . × Θi × . . . × ΘN , and any alternative type report ˆθi ∈ Θi, in the case of deterministic mechanisms we have ui(θi, o(θ1, . . . , θi, . . . , θN )) − πi(θ1, . . . , θi, . . . , θN ) ≥ ui(θi, o(θ1, . . . , ˆθi, . . . , θN )) − πi(θ1, . . . , ˆθi, . . . , θN ).",
                "In the case of randomized mechanisms we have Eo|θ1,..,θi,..,θn [ui(θi, o) − πi(θ1, . . . , θi, . . . , θN )] ≥ Eo|θ1,.., ˆθi,..,θn [ui(θi, o) − πi(θ1, . . . , ˆθi, . . . , θN )].",
                "The terms involving payments can be left out in the case where payments are not possible.",
                "Thus, in dominant strategies implementation, truthtelling is optimal regardless of what the other agents report.",
                "If it is optimal only given that the other agents are truthful, and given that one does not know the other agents types, we have implementation in Bayes-Nash equilibrium.",
                "Definition 7.",
                "Given an automated mechanism design setting, a mechanism is said to implement its outcome and payment functions in Bayes-Nash equilibrium if truthtelling is always optimal to an agent when that agent does not yet know anything about the other agents types, and the other agents are telling the truth.",
                "Formally, for any agent i, any type θi ∈ Θi, and any alternative type report ˆθi ∈ Θi, in the case of deterministic mechanisms we have E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, . . . , θi, . . . , θN ))− πi(θ1, . . . , θi, . . . , θN )] ≥ E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, . . . , ˆθi, . . . , θN ))− πi(θ1, . . . , ˆθi, . . . , θN )].",
                "In the case of randomized mechanisms we have E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,..,θi,..,θn [ui(θi, o)− πi(θ1, . . . , θi, . . . , θN )] ≥ E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,.., ˆθi,..,θn [ui(θi, o)− πi(θ1, . . . , ˆθi, . . . , θN )].",
                "The terms involving payments can be left out in the case where payments are not possible. 135 3.3 Automated mechanism design We can now define the computational problem we study.",
                "Definition 8. (AUTOMATED-MECHANISM-DESIGN (AMD)) We are given: • an automated mechanism design setting, • an IR notion (ex interim, ex post, or none), • a solution concept (dominant strategies or Bayes-Nash), • whether payments are possible, • whether randomization is possible, • (in the decision variant of the problem) a target value G. We are asked whether there exists a mechanism of the specified kind (in terms of payments and randomization) that satisfies both the IR notion and the solution concept, and gives an expected value of at least G for the objective.",
                "An interesting special case is the setting where there is only one agent.",
                "In this case, the reporting agent always knows everything there is to know about the other agents types-because there are no other agents.",
                "Since ex post and ex interim IR only differ on what an agent is assumed to know about other agents types, the two IR concepts coincide here.",
                "Also, because implementation in dominant strategies and implementation in Bayes-Nash equilibrium only differ on what an agent is assumed to know about other agents types, the two solution concepts coincide here.",
                "This observation will prove to be a useful tool in proving hardness results: if we prove computational hardness in the singleagent setting, this immediately implies hardness for both IR concepts, for both solution concepts, for any number of agents. 4.",
                "PAYMENT-MAXIMIZINGDETERMINISTIC AMD IS HARD In this section we demonstrate that it is NP-complete to design a deterministic mechanism that maximizes the expected sum of the payments collected from the agents.",
                "We show that this problem is hard even in the single-agent setting, thereby immediately showing it hard for both IR concepts, for both solution concepts.",
                "To demonstrate NPhardness, we reduce from the MINSAT problem.",
                "Definition 9 (MINSAT).",
                "We are given a formula φ in conjunctive normal form, represented by a set of Boolean variables V and a set of clauses C, and an integer K (K < |C|).",
                "We are asked whether there exists an assignment to the variables in V such that at most K clauses in φ are satisfied.",
                "MINSAT was recently shown to be NP-complete [14].",
                "We can now present our result.",
                "Theorem 1.",
                "Payment-maximizing deterministic AMD is NP-complete, even for a single agent, even with a uniform distribution over types.",
                "Proof.",
                "It is easy to show that the problem is in NP.",
                "To show NP-hardness, we reduce an arbitrary MINSAT instance to the following single-agent payment-maximizing deterministic AMD instance.",
                "Let the agents type set be Θ = {θc : c ∈ C} ∪ {θv : v ∈ V }, where C is the set of clauses in the MINSAT instance, and V is the set of variables.",
                "Let the probability distribution over these types be uniform.",
                "Let the outcome set be O = {o0} ∪ {oc : c ∈ C} ∪ {ol : l ∈ L}, where L is the set of literals, that is, L = {+v : v ∈ V } ∪ {−v : v ∈ V }.",
                "Let the notation v(l) = v denote that v is the variable corresponding to the literal l, that is, l ∈ {+v, −v}.",
                "Let l ∈ c denote that the literal l occurs in clause c. Then, let the agents utility function be given by u(θc, ol) = |Θ| + 1 for all l ∈ L with l ∈ c; u(θc, ol) = 0 for all l ∈ L with l /∈ c; u(θc, oc) = |Θ| + 1; u(θc, oc ) = 0 for all c ∈ C with c = c ; u(θv, ol) = |Θ| for all l ∈ L with v(l) = v; u(θv, ol) = 0 for all l ∈ L with v(l) = v; u(θv, oc) = 0 for all c ∈ C. The goal of the AMD instance is G = |Θ| + |C|−K |Θ| , where K is the goal of the MINSAT instance.",
                "We show the instances are equivalent.",
                "First, suppose there is a solution to the MINSAT instance.",
                "Let the assignment of truth values to the variables in this solution be given by the function f : V → L (where v(f(v)) = v for all v ∈ V ).",
                "Then, for every v ∈ V , let o(θv) = of(v) and π(θv) = |Θ|.",
                "For every c ∈ C, let o(θc) = oc; let π(θc) = |Θ| + 1 if c is not satisfied in the MINSAT solution, and π(θc) = |Θ| if c is satisfied.",
                "It is straightforward to check that the IR constraint is satisfied.",
                "We now check that the agent has no incentive to misreport.",
                "If the agents type is some θv, then any other report will give it an outcome that is no better, for a payment that is no less, so it has no incentive to misreport.",
                "If the agents type is some θc where c is a satisfied clause, again, any other report will give it an outcome that is no better, for a payment that is no less, so it has no incentive to misreport.",
                "The final case to check is where the agents type is some θc where c is an unsatisfied clause.",
                "In this case, we observe that for none of the types, reporting it leads to an outcome ol for a literal l ∈ c, precisely because the clause is not satisfied in the MINSAT instance.",
                "Because also, no type besides θc leads to the outcome oc, reporting any other type will give an outcome with utility 0, while still forcing a payment of at least |Θ| from the agent.",
                "Clearly the agent is better off reporting truthfully, for a total utility of 0.",
                "This establishes that the agent never has an incentive to misreport.",
                "Finally, we show that the goal is reached.",
                "If s is the number of satisfied clauses in the MINSAT solution (so that s ≤ K), the expected payment from this mechanism is |V ||Θ|+s|Θ|+(|C|−s)(|Θ|+1) |Θ| ≥ |V ||Θ|+K|Θ|+(|C|−K)(|Θ|+1) |Θ| = |Θ| + |C|−K |Θ| = G. So there is a solution to the AMD instance.",
                "Now suppose there is a solution to the AMD instance, given by an outcome function o and a payment function π.",
                "First, suppose there is some v ∈ V such that o(θv) /∈ {o+v, o−v}.",
                "Then the utility that the agent derives from the given outcome for this type is 0, and hence, by IR, no payment can be extracted from the agent for this type.",
                "Because, again by IR, the maximum payment that can be extracted for any other type is |Θ| + 1, it follows that the maximum expected payment that could be obtained is at most (|Θ|−1)(|Θ|+1) |Θ| < |Θ| < G, contradicting that this is a solution to the AMD instance.",
                "It follows that in the solution to the AMD instance, for every v ∈ V , o(θv) ∈ {o+v, o−v}. 136 We can interpret this as an assignment of truth values to the variables: v is set to true if o(θv) = o+v, and to false if o(θv) = o−v.",
                "We claim this assignment is a solution to the MINSAT instance.",
                "By the IR constraint, the maximum payment we can extract from any type θv is |Θ|.",
                "Because there can be no incentives for the agent to report falsely, for any clause c satisfied by the given assignment, the maximum payment we can extract for the corresponding type θc is |Θ|. (For if we extracted more from this type, the agents utility in this case would be less than 1; and if v is the variable satisfying c in the assignment, so that o(θv) = ol where l occurs in c, then the agent would be better off reporting θv instead of the truthful report θc, to get an outcome worth |Θ|+1 to it while having to pay at most |Θ|.)",
                "Finally, for any unsatisfied clause c, by the IR constraint, the maximum payment we can extract for the corresponding type θc is |Θ| + 1.",
                "It follows that the expected payment from our mechanism is at most V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ , where s is the number of satisfied clauses.",
                "Because our mechanism achieves the goal, it follows that V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ ≥ G, which by simple algebraic manipulations is equivalent to s ≤ K. So there is a solution to the MINSAT instance.",
                "Because payment-maximizing AMD is just the special case of AMD for a self-interested designer where the designer has no preferences over the outcome chosen, this immediately implies hardness for the general case of AMD for a selfinterested designer where payments are possible.",
                "However, it does not yet imply hardness for the special case where payments are not possible.",
                "We will prove hardness in this case in the next section. 5.",
                "SELF-INTERESTED DETERMINISTIC AMD WITHOUT PAYMENTS IS HARD In this section we demonstrate that it is NP-complete to design a deterministic mechanism that maximizes the expectation of the designers objective when payments are not possible.",
                "We show that this problem is hard even in the single-agent setting, thereby immediately showing it hard for both IR concepts, for both solution concepts.",
                "Theorem 2.",
                "Without payments, deterministic AMD for a self-interested designer is NP-complete, even for a single agent, even with a uniform distribution over types.",
                "Proof.",
                "It is easy to show that the problem is in NP.",
                "To show NP-hardness, we reduce an arbitrary MINSAT instance to the following single-agent self-interested deterministic AMD without payments instance.",
                "Let the agents type set be Θ = {θc : c ∈ C} ∪ {θv : v ∈ V }, where C is the set of clauses in the MINSAT instance, and V is the set of variables.",
                "Let the probability distribution over these types be uniform.",
                "Let the outcome set be O = {o0} ∪ {oc : c ∈ C}∪{ol : l ∈ L}∪{o∗ }, where L is the set of literals, that is, L = {+v : v ∈ V } ∪ {−v : v ∈ V }.",
                "Let the notation v(l) = v denote that v is the variable corresponding to the literal l, that is, l ∈ {+v, −v}.",
                "Let l ∈ c denote that the literal l occurs in clause c. Then, let the agents utility function be given by u(θc, ol) = 2 for all l ∈ L with l ∈ c; u(θc, ol) = −1 for all l ∈ L with l /∈ c; u(θc, oc) = 2; u(θc, oc ) = −1 for all c ∈ C with c = c ; u(θc, o∗ ) = 1; u(θv, ol) = 1 for all l ∈ L with v(l) = v; u(θv, ol) = −1 for all l ∈ L with v(l) = v; u(θv, oc) = −1 for all c ∈ C; u(θv, o∗ ) = −1.",
                "Let the designers objective function be given by g(o∗ ) = |Θ|+1; g(ol) = |Θ| for all l ∈ L; g(oc) = |Θ| for all c ∈ C. The goal of the AMD instance is G = |Θ| + |C|−K |Θ| , where K is the goal of the MINSAT instance.",
                "We show the instances are equivalent.",
                "First, suppose there is a solution to the MINSAT instance.",
                "Let the assignment of truth values to the variables in this solution be given by the function f : V → L (where v(f(v)) = v for all v ∈ V ).",
                "Then, for every v ∈ V , let o(θv) = of(v).",
                "For every c ∈ C that is satisfied in the MINSAT solution, let o(θc) = oc; for every unsatisfied c ∈ C, let o(θc) = o∗ .",
                "It is straightforward to check that the IR constraint is satisfied.",
                "We now check that the agent has no incentive to misreport.",
                "If the agents type is some θv, it is getting the maximum utility for that type, so it has no incentive to misreport.",
                "If the agents type is some θc where c is a satisfied clause, again, it is getting the maximum utility for that type, so it has no incentive to misreport.",
                "The final case to check is where the agents type is some θc where c is an unsatisfied clause.",
                "In this case, we observe that for none of the types, reporting it leads to an outcome ol for a literal l ∈ c, precisely because the clause is not satisfied in the MINSAT instance.",
                "Because also, no type leads to the outcome oc, there is no outcome that the mechanism ever selects that would give the agent utility greater than 1 for type θc, and hence the agent has no incentive to report falsely.",
                "This establishes that the agent never has an incentive to misreport.",
                "Finally, we show that the goal is reached.",
                "If s is the number of satisfied clauses in the MINSAT solution (so that s ≤ K), then the expected value of the designers objective function is |V ||Θ|+s|Θ|+(|C|−s)(|Θ|+1) |Θ| ≥ |V ||Θ|+K|Θ|+(|C|−K)(|Θ|+1) |Θ| = |Θ| + |C|−K |Θ| = G. So there is a solution to the AMD instance.",
                "Now suppose there is a solution to the AMD instance, given by an outcome function o.",
                "First, suppose there is some v ∈ V such that o(θv) /∈ {o+v, o−v}.",
                "The only other outcome that the mechanism is allowed to choose under the IR constraint is o0.",
                "This has an objective value of 0, and because the highest value the objective function ever takes is |Θ| + 1, it follows that the maximum expected value of the objective function that could be obtained is at most (|Θ|−1)(|Θ|+1) |Θ| < |Θ| < G, contradicting that this is a solution to the AMD instance.",
                "It follows that in the solution to the AMD instance, for every v ∈ V , o(θv) ∈ {o+v, o−v}.",
                "We can interpret this as an assignment of truth values to the variables: v is set to true if o(θv) = o+v, and to false if o(θv) = o−v.",
                "We claim this assignment is a solution to the MINSAT instance.",
                "By the above, for any type θv, the value of the objective function in this mechanism will be |Θ|.",
                "For any clause c satisfied by the given assignment, the value of the objective function in the case where the agent reports type θc will be at most |Θ|. (This is because we cannot choose the outcome o∗ for such a type, as in this case the agent would have an incentive to report θv instead, where v is the variable satisfying c in the assignment (so that o(θv) = ol where l occurs in c).)",
                "Finally, for any unsatisfied clause c, the maximum value the objective function can take in the case where the agent reports type θc is |Θ| + 1, simply because this is the largest value the function ever takes.",
                "It follows that the expected value of the objective function for our mechanism is at most V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ , where s is the number of satisfied 137 clauses.",
                "Because our mechanism achieves the goal, it follows that V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ ≥ G, which by simple algebraic manipulations is equivalent to s ≤ K. So there is a solution to the MINSAT instance.",
                "Both of our hardness results relied on the constraint that the mechanism should be deterministic.",
                "In the next section, we show that the hardness of design disappears when we allow for randomization in the mechanism. 6.",
                "RANDOMIZED AMD FOR A SELFINTERESTED DESIGNER IS EASY We now show how allowing for randomization over the outcomes makes the problem of self-interested AMD tractable through linear programming, for any constant number of agents.",
                "Theorem 3.",
                "Self-interested randomized AMD with a constant number of agents is solvable in polynomial time by linear programming, both with and without payments, both for ex post and ex interim IR, and both for implementation in dominant strategies and for implementation in Bayes-Nash equilibrium-even if the types are correlated.",
                "Proof.",
                "Because linear programs can be solved in polynomial time [13], all we need to show is that the number of variables and equations in our program is polynomial for any constant number of agents-that is, exponential only in N. Throughout, for purposes of determining the size of the linear program, let T = maxi{|Θi|}.",
                "The variables of our linear program will be the probabilities (p(θ1, θ2, . . . , θN ))(o) (at most TN |O| variables) and the payments πi(θ1, θ2, . . . , θN ) (at most NTN variables). (We show the linear program for the case where payments are possible; the case without payments is easily obtained from this by simply omitting all the payment variables in the program, or by adding additional constraints forcing the payments to be 0.)",
                "First, we show the IR constraints.",
                "For ex post IR, we add the following (at most NTN ) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, and for every (θ1, θ2, . . . , θN ) ∈ Θ1 × Θ2 × . . . × ΘN , we add ( o∈O (p(θ1, θ2, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , θN ) ≥ 0.",
                "For ex interim IR, we add the following (at most NT) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, for every θi ∈ Θi, we add θ1,... ,θN γ(θ1, . . . , θN |θi)(( o∈O (p(θ1, θ2, . . . , θN ))(o)u(θi, o))− πi(θ1, θ2, . . . , θN )) ≥ 0.",
                "Now, we show the solution concept constraints.",
                "For implementation in dominant strategies, we add the following (at most NTN+1 ) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, for every (θ1, θ2, . . . , θi, . . . , θN ) ∈ Θ1 × Θ2 × . . . × ΘN , and for every alternative type report ˆθi ∈ Θi, we add the constraint ( o∈O (p(θ1, θ2, . . . , θi, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , θi, . . . , θN ) ≥ ( o∈O (p(θ1, θ2, . . . , ˆθi, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , ˆθi, . . . , θN ).",
                "Finally, for implementation in Bayes-Nash equilibrium, we add the following (at most NT2 ) constraints to the LP: • For every i ∈ {1, 2, ..., N}, for every θi ∈ Θi, and for every alternative type report ˆθi ∈ Θi, we add the constraint θ1,...,θN γ(θ1, ..., θN |θi)(( o∈O (p(θ1, θ2, ..., θi, ..., θN ))(o)u(θi, o)) − πi(θ1, θ2, ..., θi, ..., θN )) ≥ θ1,...,θN γ(θ1, ..., θN |θi)(( o∈O (p(θ1, θ2, ..., ˆθi, ..., θN ))(o)u(θi, o)) − πi(θ1, θ2, ..., ˆθi, ..., θN )).",
                "All that is left to do is to give the expression the designer is seeking to maximize, which is: • θ1,...,θN γ(θ1, ..., θN )(( o∈O (p(θ1, θ2, ..., θi, ..., θN ))(o)g(o)) + N i=1 πi(θ1, θ2, ..., θN )).",
                "As we indicated, the number of variables and constraints is exponential only in N, and hence the linear program is of polynomial size for constant numbers of agents.",
                "Thus the problem is solvable in polynomial time. 7.",
                "IMPLICATIONS FOR AN OPTIMAL COMBINATORIAL AUCTION DESIGN PROBLEM In this section, we will demonstrate some interesting consequences of the problem of automated mechanism design for a self-interested designer on designing optimal combinatorial auctions.",
                "Consider a combinatorial auction with a set S of items for sale.",
                "For any bundle B ⊆ S, let ui(θi, B) be bidder is utility for receiving bundle B when the bidders type is θi.",
                "The optimal auction design problem is to specify the rules of the auction so as to maximize expected revenue to the auctioneer. (By the revelation principle, without loss of generality, we can assume the auction is truthful.)",
                "The optimal auction design problem is solved for the case of a single item by the famous Myerson auction [18].",
                "However, designing optimal auctions in combinatorial auctions is a recognized open research problem [3, 25].",
                "The problem is open even if there are only two items for sale. (The twoitem case with a very special form of complementarity and no substitutability has been solved recently [1].)",
                "Suppose we have free disposal-items can be thrown away at no cost.",
                "Also, suppose that the bidders preferences have the following structure: whenever a bidder receives a bundle of items, the bidders utility for that bundle is determined by the best item in the bundle only. (We emphasize that 138 which item is the best is allowed to depend on the bidders type.)",
                "Definition 10.",
                "Bidder i is said to have best-only preferences over bundles of items if there exists a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s).",
                "We make the following useful observation in this setting: there is no sense in awarding a bidder more than one item.",
                "The reason is that if the bidder is reporting truthfully, taking all but the highest valued item away from the bidder will not hurt the bidder; and, by free disposal, doing so can only reduce the incentive for this bidder to falsely report this type, when the bidder actually has another type.",
                "We now show that the problem of designing a deterministic optimal auction here is NP-complete, by a reduction from the payment maximizing AMD problem!",
                "Theorem 4.",
                "Given an optimal combinatorial auction design problem under best-only preferences (given by a set of items S and for each bidder i, a finite type space Θi and a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s)), designing the optimal deterministic auction is NP-complete, even for a single bidder with a uniform distribution over types.",
                "Proof.",
                "The problem is in NP because we can nondeterministically generate an allocation rule, and then set the payments using linear programming.",
                "To show NP-hardness, we reduce an arbitrary paymentmaximizing deterministic AMD instance, with a single agent and a uniform distribution over types, to the following optimal combinatorial auction design problem instance with a single bidder with best-only preferences.",
                "For every outcome o ∈ O in the AMD instance (besides the outcome o0), let there be one item so ∈ S. Let the type space be the same, and let v(θi, so) = ui(θi, o) (where u is as specified in the AMD instance).",
                "Let the expected revenue target value be the same in both instances.",
                "We show the instances are equivalent.",
                "First suppose there exists a solution to the AMD instance, given by an outcome function and a payment function.",
                "Then, if the AMD solution chooses outcome o for a type, in the optimal auction solution, allocate {so} to the bidder for this type. (Unless o = o0, in which case we allocate {} to the bidder.)",
                "Let the payment functions be the same in both instances.",
                "Then, the utility that an agent receives for reporting a type (given the true type) in either solution is the same, so we have incentive compatibility in the optimal auction solution.",
                "Moreover, because the type distribution and the payment function are the same, the expected revenue to the auctioneer/designer is the same.",
                "It follows that there exists a solution to the optimal auction design instance.",
                "Now suppose there exists a solution to the optimal auction design instance.",
                "By the at-most-one-item observation, we can assume without loss of generality that the solution never allocates more than one item.",
                "Then, if the optimal auction solution allocates item so to the bidder for a type, in the AMD solution, let the mechanism choose outcome o for that type.",
                "If the optimal auction solution allocates nothing to the bidder for a type, in the AMD solution, let the mechanism choose outcome o0 for that type.",
                "Let the payment functions be the same.",
                "Then, the utility that an agent receives for reporting a type (given the true type) in either solution is the same, so we have incentive compatibility in the AMD solution.",
                "Moreover, because the type distribution and the payment function are the same, the expected revenue to the designer/auctioneer is the same.",
                "It follows that there exists a solution to the AMD instance.",
                "Fortunately, we can also carry through the easiness result for randomized mechanisms to this combinatorial auction setting-giving us one of the few known polynomial-time algorithms for an optimal combinatorial auction design problem.",
                "Theorem 5.",
                "Given an optimal combinatorial auction design problem under best-only preferences (given by a set of items S and for each bidder i, a finite type space Θi and a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s)), if the number of bidders is a constant k, then the optimal randomized auction can be designed in polynomial time. (For any IC and IR constraints.)",
                "Proof.",
                "By the at-most-one-item observation, we can without loss of generality restrict ourselves to allocations where each bidder receives at most one item.",
                "There are fewer than (|S| + 1)k such allocations-that is, a polynomial number of allocations.",
                "Because we can list the outcomes explicitly, we can simply solve this as a payment-maximizing AMD instance, with linear programming. 8.",
                "RELATED RESEARCH ON COMPLEXITY IN MECHANISM DESIGN There has been considerable recent interest in mechanism design in computer science.",
                "Some of it has focused on issues of computational complexity, but most of that work has strived toward designing mechanisms that are easy to execute (e.g. [20, 15, 19, 9, 12]), rather than studying the complexity of designing the mechanism.",
                "The closest piece of earlier work studied the complexity of automated mechanism design by a benevolent designer [5, 6].",
                "Roughgarden has studied the complexity of designing a good network topology for agents that selfishly choose the links they use [21].",
                "This is related to mechanism design, but differs significantly in that the designer only has restricted control over the rules of the game because there is no party that can impose the outcome (or side payments).",
                "Also, there is no explicit reporting of preferences. 9.",
                "CONCLUSIONS AND FUTURE RESEARCH Often, an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "The key difficulty is that the agents may report their preferences insincerely to make the chosen outcome more favorable to themselves.",
                "Mechanism design is the art of designing the rules of the game so that the agents are motivated to report their preferences truthfully, and a desirable outcome is chosen.",
                "In a recently emerging approach-called automated mechanism design-a mechanism is computed for the specific preference aggregation setting at hand.",
                "This has several advantages, 139 but the downside is that the mechanism design optimization problem needs to be solved anew each time.",
                "Unlike earlier work on automated mechanism design that studied a benevolent designer, in this paper we studied automated mechanism design problems where the designer is self-interesteda setting much more relevant for electronic commerce.",
                "In this setting, the center cares only about which outcome is chosen and what payments are made to it.",
                "The reason that the agents preferences are relevant is that the center is constrained to making each agent at least as well off as the agent would have been had it not participated in the mechanism.",
                "In this setting, we showed that designing an optimal deterministic mechanism is NP-complete in two important special cases: when the center is interested only in the payments made to it, and when payments are not possible and the center is interested only in the outcome chosen.",
                "These hardness results imply hardness in all more general automated mechanism design settings with a self-interested designer.",
                "The hardness results apply whether the individual rationality (participation) constraints are applied ex interim or ex post, and whether the solution concept is dominant strategies implementation or Bayes-Nash equilibrium implementation.",
                "We then showed that allowing randomization in the mechanism makes the design problem in all these settings computationally easy.",
                "Finally, we showed that the paymentmaximizing AMD problem is closely related to an interesting variant of the optimal (revenue-maximizing) combinatorial auction design problem, where the bidders have best-only preferences.",
                "We showed that here, too, designing an optimal deterministic mechanism is NP-complete even with one agent, but designing an optimal randomized mechanism is easy.",
                "Future research includes studying automated mechanism design with a self-interested designer in more restricted settings such as auctions (where the designers objective may include preferences about which bidder should receive the good-as well as payments).",
                "We also want to study the complexity of automated mechanism design in settings where the outcome and type spaces have special structure so they can be represented more concisely.",
                "Finally, we plan to assemble a data set of real-world mechanism design problems-both historical and current-and apply automated mechanism design to those problems. 10.",
                "REFERENCES [1] M. Armstrong.",
                "Optimal multi-object auctions.",
                "Review of Economic Studies, 67:455-481, 2000. [2] K. Arrow.",
                "The property rights doctrine and demand revelation under incomplete information.",
                "In M. Boskin, editor, Economics and human welfare.",
                "New York Academic Press, 1979. [3] C. Avery and T. Hendershott.",
                "Bundling and optimal auctions of multiple products.",
                "Review of Economic Studies, 67:483-497, 2000. [4] E. H. Clarke.",
                "Multipart pricing of public goods.",
                "Public Choice, 11:17-33, 1971. [5] V. Conitzer and T. Sandholm.",
                "Complexity of mechanism design.",
                "In Proceedings of the 18th Annual Conference on Uncertainty in Artificial Intelligence (UAI-02), pages 103-110, Edmonton, Canada, 2002. [6] V. Conitzer and T. Sandholm.",
                "Automated mechanism design: Complexity results stemming from the single-agent setting.",
                "In Proceedings of the 5th International Conference on Electronic Commerce (ICEC-03), pages 17-24, Pittsburgh, PA, USA, 2003. [7] V. Conitzer and T. Sandholm.",
                "Computational criticisms of the revelation principle.",
                "In Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), New York, NY, 2004.",
                "Short paper.",
                "Full-length version appeared in the AAMAS-03 workshop on Agent-Mediated Electronic Commerce (AMEC). [8] C. dAspremont and L. A. G´erard-Varet.",
                "Incentives and incomplete information.",
                "Journal of Public Economics, 11:25-45, 1979. [9] J. Feigenbaum, C. Papadimitriou, and S. Shenker.",
                "Sharing the cost of muliticast transmissions.",
                "Journal of Computer and System Sciences, 63:21-41, 2001.",
                "Early version in Proceedings of the Annual ACM Symposium on Theory of Computing (STOC), 2000. [10] A. Gibbard.",
                "Manipulation of voting schemes.",
                "Econometrica, 41:587-602, 1973. [11] T. Groves.",
                "Incentives in teams.",
                "Econometrica, 41:617-631, 1973. [12] J. Hershberger and S. Suri.",
                "Vickrey prices and shortest paths: What is an edge worth?",
                "In Proceedings of the Annual Symposium on Foundations of Computer Science (FOCS), 2001. [13] L. Khachiyan.",
                "A polynomial algorithm in linear programming.",
                "Soviet Math.",
                "Doklady, 20:191-194, 1979. [14] R. Kohli, R. Krishnamurthi, and P. Mirchandani.",
                "The minimum satisfiability problem.",
                "SIAM Journal of Discrete Mathematics, 7(2):275-283, 1994. [15] D. Lehmann, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in rapid, approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002.",
                "Early version appeared in Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), 1999. [16] A. Mas-Colell, M. Whinston, and J. R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [17] E. S. Maskin and J. Riley.",
                "Optimal multi-unit auctions.",
                "In F. Hahn, editor, The Economics of Missing Markets, Information, and Games, chapter 14, pages 312-335.",
                "Clarendon Press, Oxford, 1989. [18] R. Myerson.",
                "Optimal auction design.",
                "Mathematics of Operation Research, 6:58-73, 1981. [19] N. Nisan and A. Ronen.",
                "Computationally feasible VCG mechanisms.",
                "In Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), pages 242-252, Minneapolis, MN, 2000. [20] N. Nisan and A. Ronen.",
                "Algorithmic mechanism design.",
                "Games and Economic Behavior, 35:166-196, 2001.",
                "Early version in Proceedings of the Annual ACM Symposium on Theory of Computing (STOC), 1999. [21] T. Roughgarden.",
                "Designing networks for selfish users is hard.",
                "In Proceedings of the Annual Symposium on Foundations of Computer Science (FOCS), 2001. [22] T. Sandholm.",
                "Issues in computational Vickrey auctions.",
                "International Journal of Electronic Commerce, 4(3):107-129, 2000.",
                "Special Issue on 140 Applying Intelligent Agents for Electronic Commerce.",
                "A short, early version appeared at the Second International Conference on Multi-Agent Systems (ICMAS), pages 299-306, 1996. [23] M. A. Satterthwaite.",
                "Strategy-proofness and Arrows conditions: existence and correspondence theorems for voting procedures and social welfare functions.",
                "Journal of Economic Theory, 10:187-217, 1975. [24] W. Vickrey.",
                "Counterspeculation, auctions, and competitive sealed tenders.",
                "Journal of Finance, 16:8-37, 1961. [25] R. V. Vohra.",
                "Research problems in combinatorial auctions.",
                "Mimeo, version Oct. 29, 2001. 141"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "La salida es un \"mecanismo no manipulable\" que es óptimo con respecto a algún objetivo.",
                "Después de todo, no es inmediatamente obvio que no hay mecanismos manipulables que, incluso cuando los agentes informan sus tipos estratégicamente y, por lo tanto, a veces falsamente, aún alcanzan mejores resultados (según cualquier objetivo que usemos) que cualquier \"mecanismo no manipulable\".",
                "Sin embargo, este es el caso: dado cualquier mecanismo, podemos construir un \"mecanismo no manipulable\" cuyo rendimiento es idéntico, como sigue."
            ],
            "translated_text": "",
            "candidates": [
                "mecanismo no manipulable",
                "mecanismo no manipulable",
                "mecanismo no manipulable",
                "mecanismo no manipulable",
                "mecanismo no manipulable",
                "mecanismo no manipulable"
            ],
            "error": []
        },
        "statistical knowledge": {
            "translated_key": "conocimiento estadístico",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Self-interested Automated Mechanism Design and Implications for Optimal Combinatorial Auctions∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT Often, an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "The key difficulty is that the agents may report their preferences insincerely to make the chosen outcome more favorable to themselves.",
                "Mechanism design is the art of designing the rules of the game so that the agents are motivated to report their preferences truthfully, and a desirable outcome is chosen.",
                "In a recently proposed approach-called automated mechanism design-a mechanism is computed for the preference aggregation setting at hand.",
                "This has several advantages, but the downside is that the mechanism design optimization problem needs to be solved anew each time.",
                "Unlike the earlier work on automated mechanism design that studied a benevolent designer, in this paper we study automated mechanism design problems where the designer is self-interested.",
                "In this case, the center cares only about which outcome is chosen and what payments are made to it.",
                "The reason that the agents preferences are relevant is that the center is constrained to making each agent at least as well off as the agent would have been had it not participated in the mechanism.",
                "In this setting, we show that designing optimal deterministic mechanisms is NP-complete in two important special cases: when the center is interested only in the payments made to it, and when payments are not possible and the center is interested only in the outcome chosen.",
                "We then show how allowing for randomization in the mechanism makes problems in this setting computationally easy.",
                "Finally, we show that the payment-maximizing AMD problem is closely related to an interesting variant of the optimal (revenuemaximizing) combinatorial auction design problem, where the bidders have best-only preferences.",
                "We show that here, too, designing an optimal deterministic auction is NPcomplete, but designing an optimal randomized auction is easy.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In multiagent settings, often an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "Such outcomes could be potential presidents, joint plans, allocations of goods or resources, etc.",
                "The preference aggregator generally does not know the agents preferences a priori.",
                "Rather, the agents report their preferences to the coordinator.",
                "Unfortunately, an agent may have an incentive to misreport its preferences in order to mislead the mechanism into selecting an outcome that is more desirable to the agent than the outcome that would be selected if the agent revealed its preferences truthfully.",
                "Such manipulation is undesirable because preference aggregation mechanisms are tailored to aggregate preferences in a socially desirable way, and if the agents reveal their preferences insincerely, a socially undesirable outcome may be chosen.",
                "Manipulability is a pervasive problem across preference aggregation mechanisms.",
                "A seminal negative result, the Gibbard-Satterthwaite theorem, shows that under any nondictatorial preference aggregation scheme, if there are at least 3 possible outcomes, there are preferences under which an agent is better off reporting untruthfully [10, 23]. (A preference aggregation scheme is called dictatorial if one of the agents dictates the outcome no matter what preferences the other agents report.)",
                "What the aggregator would like to do is design a preference aggregation mechanism so that 1) the self-interested agents are motivated to report their preferences truthfully, and 2) the mechanism chooses an outcome that is desirable from the perspective of some objective.",
                "This is the classic setting of mechanism design in game theory.",
                "In this paper, we study the case where the designer is self-interested, that is, the designer does not directly care about how the out132 come relates to the agents preferences, but is rather concerned with its own agenda for which outcome should be chosen, and with maximizing payments to itself.",
                "This is the mechanism design setting most relevant to electronic commerce.",
                "In the case where the mechanism designer is interested in maximizing some notion of social welfare, the importance of collecting the agents preferences is clear.",
                "It is perhaps less obvious why they should be collected when the designer is self-interested and hence its objective is not directly related to the agents preferences.",
                "The reason for this is that often the agents preferences impose limits on how the designer chooses the outcome and payments.",
                "The most common such constraint is that of individual rationality (IR), which means that the mechanism cannot make any agent worse off than the agent would have been had it not participated in the mechanism.",
                "For instance, in the setting of optimal auction design, the designer (auctioneer) is only concerned with how much revenue is collected, and not per se with how well the allocation of the good (or goods) corresponds to the agents preferences.",
                "Nevertheless, the designer cannot force an agent to pay more than its valuation for the bundle of goods allocated to it.",
                "Therefore, even a self-interested designer will choose an outcome that makes the agents reasonably well off.",
                "On the other hand, the designer will not necessarily choose a social welfare maximizing outcome.",
                "For example, if the designer always chooses an outcome that maximizes social welfare with respect to the reported preferences, and forces each agent to pay the difference between the utility it has now and the utility it would have had if it had not participated in the mechanism, it is easy to see that agents may have an incentive to misreport their preferences-and this may actually lead to less revenue being collected.",
                "Indeed, one of the counterintuitive results of optimal auction design theory is that sometimes the good is allocated to nobody even when the auctioneer has a reservation price of 0.",
                "Classical mechanism design provides some general mechanisms, which, under certain assumptions, satisfy some notion of nonmanipulability and maximize some objective.",
                "The upside of these mechanisms is that they do not rely on (even probabilistic) information about the agents preferences (e.g., the Vickrey-Clarke-Groves (VCG) mechanism [24, 4, 11]), or they can be easily applied to any probability distribution over the preferences (e.g., the dAGVA mechanism [8, 2], the Myerson auction [18], and the Maskin-Riley multi-unit auction [17]).",
                "However, the general mechanisms also have significant downsides: • The most famous and most broadly applicable general mechanisms, VCG and dAGVA, only maximize social welfare.",
                "If the designer is self-interested, as is the case in many electronic commerce settings, these mechanisms do not maximize the designers objective. • The general mechanisms that do focus on a selfinterested designer are only applicable in very restricted settings-such as Myersons expected revenue maximizing auction for selling a single item, and Maskin and Rileys expected revenue maximizing auction for selling multiple identical units of an item. • Even in the restricted settings in which these mechanisms apply, the mechanisms only allow for payment maximization.",
                "In practice, the designer may also be interested in the outcome per se.",
                "For example, an auctioneer may care which bidder receives the item. • It is often assumed that side payments can be used to tailor the agents incentives, but this is not always practical.",
                "For example, in barter-based electronic marketplaces-such as Recipco, firstbarter.com, BarterOne, and Intagio-side payments are not allowed.",
                "Furthermore, among software agents, it might be more desirable to construct mechanisms that do not rely on the ability to make payments, because many software agents do not have the infrastructure to make payments.",
                "In contrast, we follow a recent approach where the mechanism is designed automatically for the specific problem at hand.",
                "This approach addresses all of the downsides listed above.",
                "We formulate the mechanism design problem as an optimization problem.",
                "The input is characterized by the number of agents, the agents possible types (preferences), and the aggregators prior distributions over the agents types.",
                "The output is a nonmanipulable mechanism that is optimal with respect to some objective.",
                "This approach is called automated mechanism design.",
                "The automated mechanism design approach has four advantages over the classical approach of designing general mechanisms.",
                "First, it can be used even in settings that do not satisfy the assumptions of the classical mechanisms (such as availability of side payments or that the objective is social welfare).",
                "Second, it may allow one to circumvent impossibility results (such as the Gibbard-Satterthwaite theorem) which state that there is no mechanism that is desirable across all preferences.",
                "When the mechanism is designed for the setting at hand, it does not matter that it would not work more generally.",
                "Third, it may yield better mechanisms (in terms of stronger nonmanipulability guarantees and/or better outcomes) than classical mechanisms because the mechanism capitalizes on the particulars of the setting (the probabilistic information that the designer has about the agents types).",
                "Given the vast amount of information that parties have about each other today, this approach is likely to lead to tremendous savings over classical mechanisms, which largely ignore that information.",
                "For example, imagine a company automatically creating its procurement mechanism based on <br>statistical knowledge</br> about its suppliers, rather than using a classical descending procurement auction.",
                "Fourth, the burden of design is shifted from humans to a machine.",
                "However, automated mechanism design requires the mechanism design optimization problem to be solved anew for each setting.",
                "Hence its computational complexity becomes a key issue.",
                "Previous research has studied this question for benevolent designers-that wish to maximize, for example, social welfare [5, 6].",
                "In this paper we study the computational complexity of automated mechanism design in the case of a self-interested designer.",
                "This is an important setting for automated mechanism design due to the shortage of general mechanisms in this area, and the fact that in most e-commerce settings the designer is self-interested.",
                "We also show that this problem is closely related to a particular optimal (revenue-maximizing) combinatorial auction design problem. 133 The rest of this paper is organized as follows.",
                "In Section 2, we justify the focus on nonmanipulable mechanisms.",
                "In Section 3, we define the problem we study.",
                "In Section 4, we show that designing an optimal deterministic mechanism is NP-complete even when the designer only cares about the payments made to it.",
                "In Section 5, we show that designing an optimal deterministic mechanism is also NP-complete when payments are not possible and the designer is only interested in the outcome chosen.",
                "In Section 6, we show that an optimal randomized mechanism can be designed in polynomial time even in the general case.",
                "Finally, in Section 7, we show that for designing optimal combinatorial auctions under best-only preferences, our results on AMD imply that this problem is NP-complete for deterministic auctions, but easy for randomized auctions. 2.",
                "JUSTIFYING THE FOCUS ON NONMANIPULABLE MECHANISMS Before we define the computational problem of automated mechanism design, we should justify our focus on nonmanipulable mechanisms.",
                "After all, it is not immediately obvious that there are no manipulable mechanisms that, even when agents report their types strategically and hence sometimes untruthfully, still reach better outcomes (according to whatever objective we use) than any nonmanipulable mechanism.",
                "This does, however, turn out to be the case: given any mechanism, we can construct a nonmanipulable mechanism whose performance is identical, as follows.",
                "We build an interface layer between the agents and the original mechanism.",
                "The agents report their preferences (or types) to the interface layer; subsequently, the interface layer inputs into the original mechanism the types that the agents would have strategically reported to the original mechanism, if their types were as declared to the interface layer.",
                "The resulting outcome is the outcome of the new mechanism.",
                "Since the interface layer acts strategically on each agents behalf, there is never an incentive to report falsely to the interface layer; and hence, the types reported by the interface layer are the strategic types that would have been reported without the interface layer, so the results are exactly as they would have been with the original mechanism.",
                "This argument is known in the mechanism design literature as the revelation principle [16]. (There are computational difficulties with applying the revelation principle in large combinatorial outcome and type spaces [7, 22].",
                "However, because here we focus on flatly represented outcome and type spaces, this is not a concern here.)",
                "Given this, we can focus on truthful mechanisms in the rest of the paper. 3.",
                "DEFINITIONS We now formalize the automated mechanism design setting.",
                "Definition 1.",
                "In an automated mechanism design setting, we are given: • a finite set of outcomes O; • a finite set of N agents; • for each agent i, 1. a finite set of types Θi, 2. a probability distribution γi over Θi (in the case of correlated types, there is a single joint distribution γ over Θ1 × . . . × ΘN ), and 3. a utility function ui : Θi × O → R; 1 • An objective function whose expectation the designer wishes to maximize.",
                "There are many possible objective functions the designer might have, for example, social welfare (where the designer seeks to maximize the sum of the agents utilities), or the minimum utility of any agent (where the designer seeks to maximize the worst utility had by any agent).",
                "In both of these cases, the designer is benevolent, because the designer, in some sense, is pursuing the agents collective happiness.",
                "However, in this paper, we focus on the case of a self-interested designer.",
                "A self-interested designer cares only about the outcome chosen (that is, the designer does not care how the outcome relates to the agents preferences, but rather has a fixed preference over the outcomes), and about the net payments made by the agents, which flow to the designer.",
                "Definition 2.",
                "A self-interested designer has an objective function given by g(o) + N i=1 πi, where g : O → R indicates the designers own preference over the outcomes, and πi is the payment made by agent i.",
                "In the case where g = 0 everywhere, the designer is said to be payment maximizing.",
                "In the case where payments are not possible, g constitutes the objective function by itself.",
                "We now define the kinds of mechanisms under study.",
                "By the revelation principle, we can restrict attention to truthful, direct revelation mechanisms, where agents report their types directly and never have an incentive to misreport them.",
                "Definition 3.",
                "We consider the following kinds of mechanism: • A deterministic mechanism without payments consists of an outcome selection function o : Θ1 × Θ2 × . . . × ΘN → O. • A randomized mechanism without payments consists of a distribution selection function p : Θ1 × Θ2 × . . . × ΘN → P(O), where P(O) is the set of probability distributions over O. • A deterministic mechanism with payments consists of an outcome selection function o : Θ1 ×Θ2 ×. . .×ΘN → O and for each agent i, a payment selection function πi : Θ1 × Θ2 × . . . × ΘN → R, where πi(θ1, . . . , θN ) gives the payment made by agent i when the reported types are θ1, . . . , θN . 1 Though this follows standard game theory notation [16], the fact that the agent has both a utility function and a type is perhaps confusing.",
                "The types encode the various possible preferences that the agent may turn out to have, and the agents type is not known to the aggregator.",
                "The utility function is common knowledge, but because the agents type is a parameter in the agents utility function, the aggregator cannot know what the agents utility is without knowing the agents type. 134 • A randomized mechanism with payments consists of a distribution selection function p : Θ1 × Θ2 × . . . × ΘN → P(O), and for each agent i, a payment selection function πi : Θ1 × Θ2 × . . . × ΘN → R.2 There are two types of constraint on the designer in building the mechanism. 3.1 Individual rationality (IR) constraints The first type of constraint is the following.",
                "The utility of each agent has to be at least as great as the agents fallback utility, that is, the utility that the agent would receive if it did not participate in the mechanism.",
                "Otherwise that agent would not participate in the mechanism-and no agents participation can ever hurt the mechanism designers objective because at worst, the mechanism can ignore an agent by pretending the agent is not there. (Furthermore, if no such constraint applied, the designer could simply make the agents pay an infinite amount.)",
                "This type of constraint is called an IR (individual rationality) constraint.",
                "There are three different possible IR constraints: ex ante, ex interim, and ex post, depending on what the agent knows about its own type and the others types when deciding whether to participate in the mechanism.",
                "Ex ante IR means that the agent would participate if it knew nothing at all (not even its own type).",
                "We will not study this concept in this paper.",
                "Ex interim IR means that the agent would always participate if it knew only its own type, but not those of the others.",
                "Ex post IR means that the agent would always participate even if it knew everybodys type.",
                "We will define the latter two notions of IR formally.",
                "First, we need to formalize the concept of the fallback outcome.",
                "We assume that each agents fallback utility is zero for each one of its types.",
                "This is without loss of generality because we can add a constant term to an agents utility function (for a given type), without affecting the decision-making behavior of that expected utility maximizing agent [16].",
                "Definition 4.",
                "In any automated mechanism design setting with an IR constraint, there is a fallback outcome o0 ∈ O where, for any agent i and any type θi ∈ Θi, we have ui(θi, o0) = 0. (Additionally, in the case of a self-interested designer, g(o0) = 0.)",
                "We can now to define the notions of individual rationality.",
                "Definition 5.",
                "Individual rationality (IR) is defined by: • A deterministic mechanism is ex interim IR if for any agent i, and any type θi ∈ Θi, we have E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, .., θN ))−πi(θ1, .., θN )] ≥ 0.",
                "A randomized mechanism is ex interim IR if for any agent i, and any type θi ∈ Θi, we have E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,..,θn [ui(θi, o)−πi(θ1, .., θN )] ≥ 0. • A deterministic mechanism is ex post IR if for any agent i, and any type vector (θ1, . . . , θN ) ∈ Θ1 × . . . × ΘN , we have ui(θi, o(θ1, . . . , θN )) − πi(θ1, . . . , θN ) ≥ 0. 2 We do not randomize over payments because as long as the agents and the designer are risk neutral with respect to payments, that is, their utility is linear in payments, there is no reason to randomize over payments.",
                "A randomized mechanism is ex post IR if for any agent i, and any type vector (θ1, . . . , θN ) ∈ Θ1 × . . . × ΘN , we have Eo|θ1,..,θn [ui(θi, o) − πi(θ1, .., θN )] ≥ 0.",
                "The terms involving payments can be left out in the case where payments are not possible. 3.2 Incentive compatibility (IC) constraints The second type of constraint says that the agents should never have an incentive to misreport their type (as justified above by the revelation principle).",
                "For this type of constraint, the two most common variants (or solution concepts) are implementation in dominant strategies, and implementation in Bayes-Nash equilibrium.",
                "Definition 6.",
                "Given an automated mechanism design setting, a mechanism is said to implement its outcome and payment functions in dominant strategies if truthtelling is always optimal even when the types reported by the other agents are already known.",
                "Formally, for any agent i, any type vector (θ1, . . . , θi, . . . , θN ) ∈ Θ1 × . . . × Θi × . . . × ΘN , and any alternative type report ˆθi ∈ Θi, in the case of deterministic mechanisms we have ui(θi, o(θ1, . . . , θi, . . . , θN )) − πi(θ1, . . . , θi, . . . , θN ) ≥ ui(θi, o(θ1, . . . , ˆθi, . . . , θN )) − πi(θ1, . . . , ˆθi, . . . , θN ).",
                "In the case of randomized mechanisms we have Eo|θ1,..,θi,..,θn [ui(θi, o) − πi(θ1, . . . , θi, . . . , θN )] ≥ Eo|θ1,.., ˆθi,..,θn [ui(θi, o) − πi(θ1, . . . , ˆθi, . . . , θN )].",
                "The terms involving payments can be left out in the case where payments are not possible.",
                "Thus, in dominant strategies implementation, truthtelling is optimal regardless of what the other agents report.",
                "If it is optimal only given that the other agents are truthful, and given that one does not know the other agents types, we have implementation in Bayes-Nash equilibrium.",
                "Definition 7.",
                "Given an automated mechanism design setting, a mechanism is said to implement its outcome and payment functions in Bayes-Nash equilibrium if truthtelling is always optimal to an agent when that agent does not yet know anything about the other agents types, and the other agents are telling the truth.",
                "Formally, for any agent i, any type θi ∈ Θi, and any alternative type report ˆθi ∈ Θi, in the case of deterministic mechanisms we have E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, . . . , θi, . . . , θN ))− πi(θ1, . . . , θi, . . . , θN )] ≥ E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, . . . , ˆθi, . . . , θN ))− πi(θ1, . . . , ˆθi, . . . , θN )].",
                "In the case of randomized mechanisms we have E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,..,θi,..,θn [ui(θi, o)− πi(θ1, . . . , θi, . . . , θN )] ≥ E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,.., ˆθi,..,θn [ui(θi, o)− πi(θ1, . . . , ˆθi, . . . , θN )].",
                "The terms involving payments can be left out in the case where payments are not possible. 135 3.3 Automated mechanism design We can now define the computational problem we study.",
                "Definition 8. (AUTOMATED-MECHANISM-DESIGN (AMD)) We are given: • an automated mechanism design setting, • an IR notion (ex interim, ex post, or none), • a solution concept (dominant strategies or Bayes-Nash), • whether payments are possible, • whether randomization is possible, • (in the decision variant of the problem) a target value G. We are asked whether there exists a mechanism of the specified kind (in terms of payments and randomization) that satisfies both the IR notion and the solution concept, and gives an expected value of at least G for the objective.",
                "An interesting special case is the setting where there is only one agent.",
                "In this case, the reporting agent always knows everything there is to know about the other agents types-because there are no other agents.",
                "Since ex post and ex interim IR only differ on what an agent is assumed to know about other agents types, the two IR concepts coincide here.",
                "Also, because implementation in dominant strategies and implementation in Bayes-Nash equilibrium only differ on what an agent is assumed to know about other agents types, the two solution concepts coincide here.",
                "This observation will prove to be a useful tool in proving hardness results: if we prove computational hardness in the singleagent setting, this immediately implies hardness for both IR concepts, for both solution concepts, for any number of agents. 4.",
                "PAYMENT-MAXIMIZINGDETERMINISTIC AMD IS HARD In this section we demonstrate that it is NP-complete to design a deterministic mechanism that maximizes the expected sum of the payments collected from the agents.",
                "We show that this problem is hard even in the single-agent setting, thereby immediately showing it hard for both IR concepts, for both solution concepts.",
                "To demonstrate NPhardness, we reduce from the MINSAT problem.",
                "Definition 9 (MINSAT).",
                "We are given a formula φ in conjunctive normal form, represented by a set of Boolean variables V and a set of clauses C, and an integer K (K < |C|).",
                "We are asked whether there exists an assignment to the variables in V such that at most K clauses in φ are satisfied.",
                "MINSAT was recently shown to be NP-complete [14].",
                "We can now present our result.",
                "Theorem 1.",
                "Payment-maximizing deterministic AMD is NP-complete, even for a single agent, even with a uniform distribution over types.",
                "Proof.",
                "It is easy to show that the problem is in NP.",
                "To show NP-hardness, we reduce an arbitrary MINSAT instance to the following single-agent payment-maximizing deterministic AMD instance.",
                "Let the agents type set be Θ = {θc : c ∈ C} ∪ {θv : v ∈ V }, where C is the set of clauses in the MINSAT instance, and V is the set of variables.",
                "Let the probability distribution over these types be uniform.",
                "Let the outcome set be O = {o0} ∪ {oc : c ∈ C} ∪ {ol : l ∈ L}, where L is the set of literals, that is, L = {+v : v ∈ V } ∪ {−v : v ∈ V }.",
                "Let the notation v(l) = v denote that v is the variable corresponding to the literal l, that is, l ∈ {+v, −v}.",
                "Let l ∈ c denote that the literal l occurs in clause c. Then, let the agents utility function be given by u(θc, ol) = |Θ| + 1 for all l ∈ L with l ∈ c; u(θc, ol) = 0 for all l ∈ L with l /∈ c; u(θc, oc) = |Θ| + 1; u(θc, oc ) = 0 for all c ∈ C with c = c ; u(θv, ol) = |Θ| for all l ∈ L with v(l) = v; u(θv, ol) = 0 for all l ∈ L with v(l) = v; u(θv, oc) = 0 for all c ∈ C. The goal of the AMD instance is G = |Θ| + |C|−K |Θ| , where K is the goal of the MINSAT instance.",
                "We show the instances are equivalent.",
                "First, suppose there is a solution to the MINSAT instance.",
                "Let the assignment of truth values to the variables in this solution be given by the function f : V → L (where v(f(v)) = v for all v ∈ V ).",
                "Then, for every v ∈ V , let o(θv) = of(v) and π(θv) = |Θ|.",
                "For every c ∈ C, let o(θc) = oc; let π(θc) = |Θ| + 1 if c is not satisfied in the MINSAT solution, and π(θc) = |Θ| if c is satisfied.",
                "It is straightforward to check that the IR constraint is satisfied.",
                "We now check that the agent has no incentive to misreport.",
                "If the agents type is some θv, then any other report will give it an outcome that is no better, for a payment that is no less, so it has no incentive to misreport.",
                "If the agents type is some θc where c is a satisfied clause, again, any other report will give it an outcome that is no better, for a payment that is no less, so it has no incentive to misreport.",
                "The final case to check is where the agents type is some θc where c is an unsatisfied clause.",
                "In this case, we observe that for none of the types, reporting it leads to an outcome ol for a literal l ∈ c, precisely because the clause is not satisfied in the MINSAT instance.",
                "Because also, no type besides θc leads to the outcome oc, reporting any other type will give an outcome with utility 0, while still forcing a payment of at least |Θ| from the agent.",
                "Clearly the agent is better off reporting truthfully, for a total utility of 0.",
                "This establishes that the agent never has an incentive to misreport.",
                "Finally, we show that the goal is reached.",
                "If s is the number of satisfied clauses in the MINSAT solution (so that s ≤ K), the expected payment from this mechanism is |V ||Θ|+s|Θ|+(|C|−s)(|Θ|+1) |Θ| ≥ |V ||Θ|+K|Θ|+(|C|−K)(|Θ|+1) |Θ| = |Θ| + |C|−K |Θ| = G. So there is a solution to the AMD instance.",
                "Now suppose there is a solution to the AMD instance, given by an outcome function o and a payment function π.",
                "First, suppose there is some v ∈ V such that o(θv) /∈ {o+v, o−v}.",
                "Then the utility that the agent derives from the given outcome for this type is 0, and hence, by IR, no payment can be extracted from the agent for this type.",
                "Because, again by IR, the maximum payment that can be extracted for any other type is |Θ| + 1, it follows that the maximum expected payment that could be obtained is at most (|Θ|−1)(|Θ|+1) |Θ| < |Θ| < G, contradicting that this is a solution to the AMD instance.",
                "It follows that in the solution to the AMD instance, for every v ∈ V , o(θv) ∈ {o+v, o−v}. 136 We can interpret this as an assignment of truth values to the variables: v is set to true if o(θv) = o+v, and to false if o(θv) = o−v.",
                "We claim this assignment is a solution to the MINSAT instance.",
                "By the IR constraint, the maximum payment we can extract from any type θv is |Θ|.",
                "Because there can be no incentives for the agent to report falsely, for any clause c satisfied by the given assignment, the maximum payment we can extract for the corresponding type θc is |Θ|. (For if we extracted more from this type, the agents utility in this case would be less than 1; and if v is the variable satisfying c in the assignment, so that o(θv) = ol where l occurs in c, then the agent would be better off reporting θv instead of the truthful report θc, to get an outcome worth |Θ|+1 to it while having to pay at most |Θ|.)",
                "Finally, for any unsatisfied clause c, by the IR constraint, the maximum payment we can extract for the corresponding type θc is |Θ| + 1.",
                "It follows that the expected payment from our mechanism is at most V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ , where s is the number of satisfied clauses.",
                "Because our mechanism achieves the goal, it follows that V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ ≥ G, which by simple algebraic manipulations is equivalent to s ≤ K. So there is a solution to the MINSAT instance.",
                "Because payment-maximizing AMD is just the special case of AMD for a self-interested designer where the designer has no preferences over the outcome chosen, this immediately implies hardness for the general case of AMD for a selfinterested designer where payments are possible.",
                "However, it does not yet imply hardness for the special case where payments are not possible.",
                "We will prove hardness in this case in the next section. 5.",
                "SELF-INTERESTED DETERMINISTIC AMD WITHOUT PAYMENTS IS HARD In this section we demonstrate that it is NP-complete to design a deterministic mechanism that maximizes the expectation of the designers objective when payments are not possible.",
                "We show that this problem is hard even in the single-agent setting, thereby immediately showing it hard for both IR concepts, for both solution concepts.",
                "Theorem 2.",
                "Without payments, deterministic AMD for a self-interested designer is NP-complete, even for a single agent, even with a uniform distribution over types.",
                "Proof.",
                "It is easy to show that the problem is in NP.",
                "To show NP-hardness, we reduce an arbitrary MINSAT instance to the following single-agent self-interested deterministic AMD without payments instance.",
                "Let the agents type set be Θ = {θc : c ∈ C} ∪ {θv : v ∈ V }, where C is the set of clauses in the MINSAT instance, and V is the set of variables.",
                "Let the probability distribution over these types be uniform.",
                "Let the outcome set be O = {o0} ∪ {oc : c ∈ C}∪{ol : l ∈ L}∪{o∗ }, where L is the set of literals, that is, L = {+v : v ∈ V } ∪ {−v : v ∈ V }.",
                "Let the notation v(l) = v denote that v is the variable corresponding to the literal l, that is, l ∈ {+v, −v}.",
                "Let l ∈ c denote that the literal l occurs in clause c. Then, let the agents utility function be given by u(θc, ol) = 2 for all l ∈ L with l ∈ c; u(θc, ol) = −1 for all l ∈ L with l /∈ c; u(θc, oc) = 2; u(θc, oc ) = −1 for all c ∈ C with c = c ; u(θc, o∗ ) = 1; u(θv, ol) = 1 for all l ∈ L with v(l) = v; u(θv, ol) = −1 for all l ∈ L with v(l) = v; u(θv, oc) = −1 for all c ∈ C; u(θv, o∗ ) = −1.",
                "Let the designers objective function be given by g(o∗ ) = |Θ|+1; g(ol) = |Θ| for all l ∈ L; g(oc) = |Θ| for all c ∈ C. The goal of the AMD instance is G = |Θ| + |C|−K |Θ| , where K is the goal of the MINSAT instance.",
                "We show the instances are equivalent.",
                "First, suppose there is a solution to the MINSAT instance.",
                "Let the assignment of truth values to the variables in this solution be given by the function f : V → L (where v(f(v)) = v for all v ∈ V ).",
                "Then, for every v ∈ V , let o(θv) = of(v).",
                "For every c ∈ C that is satisfied in the MINSAT solution, let o(θc) = oc; for every unsatisfied c ∈ C, let o(θc) = o∗ .",
                "It is straightforward to check that the IR constraint is satisfied.",
                "We now check that the agent has no incentive to misreport.",
                "If the agents type is some θv, it is getting the maximum utility for that type, so it has no incentive to misreport.",
                "If the agents type is some θc where c is a satisfied clause, again, it is getting the maximum utility for that type, so it has no incentive to misreport.",
                "The final case to check is where the agents type is some θc where c is an unsatisfied clause.",
                "In this case, we observe that for none of the types, reporting it leads to an outcome ol for a literal l ∈ c, precisely because the clause is not satisfied in the MINSAT instance.",
                "Because also, no type leads to the outcome oc, there is no outcome that the mechanism ever selects that would give the agent utility greater than 1 for type θc, and hence the agent has no incentive to report falsely.",
                "This establishes that the agent never has an incentive to misreport.",
                "Finally, we show that the goal is reached.",
                "If s is the number of satisfied clauses in the MINSAT solution (so that s ≤ K), then the expected value of the designers objective function is |V ||Θ|+s|Θ|+(|C|−s)(|Θ|+1) |Θ| ≥ |V ||Θ|+K|Θ|+(|C|−K)(|Θ|+1) |Θ| = |Θ| + |C|−K |Θ| = G. So there is a solution to the AMD instance.",
                "Now suppose there is a solution to the AMD instance, given by an outcome function o.",
                "First, suppose there is some v ∈ V such that o(θv) /∈ {o+v, o−v}.",
                "The only other outcome that the mechanism is allowed to choose under the IR constraint is o0.",
                "This has an objective value of 0, and because the highest value the objective function ever takes is |Θ| + 1, it follows that the maximum expected value of the objective function that could be obtained is at most (|Θ|−1)(|Θ|+1) |Θ| < |Θ| < G, contradicting that this is a solution to the AMD instance.",
                "It follows that in the solution to the AMD instance, for every v ∈ V , o(θv) ∈ {o+v, o−v}.",
                "We can interpret this as an assignment of truth values to the variables: v is set to true if o(θv) = o+v, and to false if o(θv) = o−v.",
                "We claim this assignment is a solution to the MINSAT instance.",
                "By the above, for any type θv, the value of the objective function in this mechanism will be |Θ|.",
                "For any clause c satisfied by the given assignment, the value of the objective function in the case where the agent reports type θc will be at most |Θ|. (This is because we cannot choose the outcome o∗ for such a type, as in this case the agent would have an incentive to report θv instead, where v is the variable satisfying c in the assignment (so that o(θv) = ol where l occurs in c).)",
                "Finally, for any unsatisfied clause c, the maximum value the objective function can take in the case where the agent reports type θc is |Θ| + 1, simply because this is the largest value the function ever takes.",
                "It follows that the expected value of the objective function for our mechanism is at most V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ , where s is the number of satisfied 137 clauses.",
                "Because our mechanism achieves the goal, it follows that V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ ≥ G, which by simple algebraic manipulations is equivalent to s ≤ K. So there is a solution to the MINSAT instance.",
                "Both of our hardness results relied on the constraint that the mechanism should be deterministic.",
                "In the next section, we show that the hardness of design disappears when we allow for randomization in the mechanism. 6.",
                "RANDOMIZED AMD FOR A SELFINTERESTED DESIGNER IS EASY We now show how allowing for randomization over the outcomes makes the problem of self-interested AMD tractable through linear programming, for any constant number of agents.",
                "Theorem 3.",
                "Self-interested randomized AMD with a constant number of agents is solvable in polynomial time by linear programming, both with and without payments, both for ex post and ex interim IR, and both for implementation in dominant strategies and for implementation in Bayes-Nash equilibrium-even if the types are correlated.",
                "Proof.",
                "Because linear programs can be solved in polynomial time [13], all we need to show is that the number of variables and equations in our program is polynomial for any constant number of agents-that is, exponential only in N. Throughout, for purposes of determining the size of the linear program, let T = maxi{|Θi|}.",
                "The variables of our linear program will be the probabilities (p(θ1, θ2, . . . , θN ))(o) (at most TN |O| variables) and the payments πi(θ1, θ2, . . . , θN ) (at most NTN variables). (We show the linear program for the case where payments are possible; the case without payments is easily obtained from this by simply omitting all the payment variables in the program, or by adding additional constraints forcing the payments to be 0.)",
                "First, we show the IR constraints.",
                "For ex post IR, we add the following (at most NTN ) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, and for every (θ1, θ2, . . . , θN ) ∈ Θ1 × Θ2 × . . . × ΘN , we add ( o∈O (p(θ1, θ2, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , θN ) ≥ 0.",
                "For ex interim IR, we add the following (at most NT) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, for every θi ∈ Θi, we add θ1,... ,θN γ(θ1, . . . , θN |θi)(( o∈O (p(θ1, θ2, . . . , θN ))(o)u(θi, o))− πi(θ1, θ2, . . . , θN )) ≥ 0.",
                "Now, we show the solution concept constraints.",
                "For implementation in dominant strategies, we add the following (at most NTN+1 ) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, for every (θ1, θ2, . . . , θi, . . . , θN ) ∈ Θ1 × Θ2 × . . . × ΘN , and for every alternative type report ˆθi ∈ Θi, we add the constraint ( o∈O (p(θ1, θ2, . . . , θi, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , θi, . . . , θN ) ≥ ( o∈O (p(θ1, θ2, . . . , ˆθi, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , ˆθi, . . . , θN ).",
                "Finally, for implementation in Bayes-Nash equilibrium, we add the following (at most NT2 ) constraints to the LP: • For every i ∈ {1, 2, ..., N}, for every θi ∈ Θi, and for every alternative type report ˆθi ∈ Θi, we add the constraint θ1,...,θN γ(θ1, ..., θN |θi)(( o∈O (p(θ1, θ2, ..., θi, ..., θN ))(o)u(θi, o)) − πi(θ1, θ2, ..., θi, ..., θN )) ≥ θ1,...,θN γ(θ1, ..., θN |θi)(( o∈O (p(θ1, θ2, ..., ˆθi, ..., θN ))(o)u(θi, o)) − πi(θ1, θ2, ..., ˆθi, ..., θN )).",
                "All that is left to do is to give the expression the designer is seeking to maximize, which is: • θ1,...,θN γ(θ1, ..., θN )(( o∈O (p(θ1, θ2, ..., θi, ..., θN ))(o)g(o)) + N i=1 πi(θ1, θ2, ..., θN )).",
                "As we indicated, the number of variables and constraints is exponential only in N, and hence the linear program is of polynomial size for constant numbers of agents.",
                "Thus the problem is solvable in polynomial time. 7.",
                "IMPLICATIONS FOR AN OPTIMAL COMBINATORIAL AUCTION DESIGN PROBLEM In this section, we will demonstrate some interesting consequences of the problem of automated mechanism design for a self-interested designer on designing optimal combinatorial auctions.",
                "Consider a combinatorial auction with a set S of items for sale.",
                "For any bundle B ⊆ S, let ui(θi, B) be bidder is utility for receiving bundle B when the bidders type is θi.",
                "The optimal auction design problem is to specify the rules of the auction so as to maximize expected revenue to the auctioneer. (By the revelation principle, without loss of generality, we can assume the auction is truthful.)",
                "The optimal auction design problem is solved for the case of a single item by the famous Myerson auction [18].",
                "However, designing optimal auctions in combinatorial auctions is a recognized open research problem [3, 25].",
                "The problem is open even if there are only two items for sale. (The twoitem case with a very special form of complementarity and no substitutability has been solved recently [1].)",
                "Suppose we have free disposal-items can be thrown away at no cost.",
                "Also, suppose that the bidders preferences have the following structure: whenever a bidder receives a bundle of items, the bidders utility for that bundle is determined by the best item in the bundle only. (We emphasize that 138 which item is the best is allowed to depend on the bidders type.)",
                "Definition 10.",
                "Bidder i is said to have best-only preferences over bundles of items if there exists a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s).",
                "We make the following useful observation in this setting: there is no sense in awarding a bidder more than one item.",
                "The reason is that if the bidder is reporting truthfully, taking all but the highest valued item away from the bidder will not hurt the bidder; and, by free disposal, doing so can only reduce the incentive for this bidder to falsely report this type, when the bidder actually has another type.",
                "We now show that the problem of designing a deterministic optimal auction here is NP-complete, by a reduction from the payment maximizing AMD problem!",
                "Theorem 4.",
                "Given an optimal combinatorial auction design problem under best-only preferences (given by a set of items S and for each bidder i, a finite type space Θi and a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s)), designing the optimal deterministic auction is NP-complete, even for a single bidder with a uniform distribution over types.",
                "Proof.",
                "The problem is in NP because we can nondeterministically generate an allocation rule, and then set the payments using linear programming.",
                "To show NP-hardness, we reduce an arbitrary paymentmaximizing deterministic AMD instance, with a single agent and a uniform distribution over types, to the following optimal combinatorial auction design problem instance with a single bidder with best-only preferences.",
                "For every outcome o ∈ O in the AMD instance (besides the outcome o0), let there be one item so ∈ S. Let the type space be the same, and let v(θi, so) = ui(θi, o) (where u is as specified in the AMD instance).",
                "Let the expected revenue target value be the same in both instances.",
                "We show the instances are equivalent.",
                "First suppose there exists a solution to the AMD instance, given by an outcome function and a payment function.",
                "Then, if the AMD solution chooses outcome o for a type, in the optimal auction solution, allocate {so} to the bidder for this type. (Unless o = o0, in which case we allocate {} to the bidder.)",
                "Let the payment functions be the same in both instances.",
                "Then, the utility that an agent receives for reporting a type (given the true type) in either solution is the same, so we have incentive compatibility in the optimal auction solution.",
                "Moreover, because the type distribution and the payment function are the same, the expected revenue to the auctioneer/designer is the same.",
                "It follows that there exists a solution to the optimal auction design instance.",
                "Now suppose there exists a solution to the optimal auction design instance.",
                "By the at-most-one-item observation, we can assume without loss of generality that the solution never allocates more than one item.",
                "Then, if the optimal auction solution allocates item so to the bidder for a type, in the AMD solution, let the mechanism choose outcome o for that type.",
                "If the optimal auction solution allocates nothing to the bidder for a type, in the AMD solution, let the mechanism choose outcome o0 for that type.",
                "Let the payment functions be the same.",
                "Then, the utility that an agent receives for reporting a type (given the true type) in either solution is the same, so we have incentive compatibility in the AMD solution.",
                "Moreover, because the type distribution and the payment function are the same, the expected revenue to the designer/auctioneer is the same.",
                "It follows that there exists a solution to the AMD instance.",
                "Fortunately, we can also carry through the easiness result for randomized mechanisms to this combinatorial auction setting-giving us one of the few known polynomial-time algorithms for an optimal combinatorial auction design problem.",
                "Theorem 5.",
                "Given an optimal combinatorial auction design problem under best-only preferences (given by a set of items S and for each bidder i, a finite type space Θi and a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s)), if the number of bidders is a constant k, then the optimal randomized auction can be designed in polynomial time. (For any IC and IR constraints.)",
                "Proof.",
                "By the at-most-one-item observation, we can without loss of generality restrict ourselves to allocations where each bidder receives at most one item.",
                "There are fewer than (|S| + 1)k such allocations-that is, a polynomial number of allocations.",
                "Because we can list the outcomes explicitly, we can simply solve this as a payment-maximizing AMD instance, with linear programming. 8.",
                "RELATED RESEARCH ON COMPLEXITY IN MECHANISM DESIGN There has been considerable recent interest in mechanism design in computer science.",
                "Some of it has focused on issues of computational complexity, but most of that work has strived toward designing mechanisms that are easy to execute (e.g. [20, 15, 19, 9, 12]), rather than studying the complexity of designing the mechanism.",
                "The closest piece of earlier work studied the complexity of automated mechanism design by a benevolent designer [5, 6].",
                "Roughgarden has studied the complexity of designing a good network topology for agents that selfishly choose the links they use [21].",
                "This is related to mechanism design, but differs significantly in that the designer only has restricted control over the rules of the game because there is no party that can impose the outcome (or side payments).",
                "Also, there is no explicit reporting of preferences. 9.",
                "CONCLUSIONS AND FUTURE RESEARCH Often, an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "The key difficulty is that the agents may report their preferences insincerely to make the chosen outcome more favorable to themselves.",
                "Mechanism design is the art of designing the rules of the game so that the agents are motivated to report their preferences truthfully, and a desirable outcome is chosen.",
                "In a recently emerging approach-called automated mechanism design-a mechanism is computed for the specific preference aggregation setting at hand.",
                "This has several advantages, 139 but the downside is that the mechanism design optimization problem needs to be solved anew each time.",
                "Unlike earlier work on automated mechanism design that studied a benevolent designer, in this paper we studied automated mechanism design problems where the designer is self-interesteda setting much more relevant for electronic commerce.",
                "In this setting, the center cares only about which outcome is chosen and what payments are made to it.",
                "The reason that the agents preferences are relevant is that the center is constrained to making each agent at least as well off as the agent would have been had it not participated in the mechanism.",
                "In this setting, we showed that designing an optimal deterministic mechanism is NP-complete in two important special cases: when the center is interested only in the payments made to it, and when payments are not possible and the center is interested only in the outcome chosen.",
                "These hardness results imply hardness in all more general automated mechanism design settings with a self-interested designer.",
                "The hardness results apply whether the individual rationality (participation) constraints are applied ex interim or ex post, and whether the solution concept is dominant strategies implementation or Bayes-Nash equilibrium implementation.",
                "We then showed that allowing randomization in the mechanism makes the design problem in all these settings computationally easy.",
                "Finally, we showed that the paymentmaximizing AMD problem is closely related to an interesting variant of the optimal (revenue-maximizing) combinatorial auction design problem, where the bidders have best-only preferences.",
                "We showed that here, too, designing an optimal deterministic mechanism is NP-complete even with one agent, but designing an optimal randomized mechanism is easy.",
                "Future research includes studying automated mechanism design with a self-interested designer in more restricted settings such as auctions (where the designers objective may include preferences about which bidder should receive the good-as well as payments).",
                "We also want to study the complexity of automated mechanism design in settings where the outcome and type spaces have special structure so they can be represented more concisely.",
                "Finally, we plan to assemble a data set of real-world mechanism design problems-both historical and current-and apply automated mechanism design to those problems. 10.",
                "REFERENCES [1] M. Armstrong.",
                "Optimal multi-object auctions.",
                "Review of Economic Studies, 67:455-481, 2000. [2] K. Arrow.",
                "The property rights doctrine and demand revelation under incomplete information.",
                "In M. Boskin, editor, Economics and human welfare.",
                "New York Academic Press, 1979. [3] C. Avery and T. Hendershott.",
                "Bundling and optimal auctions of multiple products.",
                "Review of Economic Studies, 67:483-497, 2000. [4] E. H. Clarke.",
                "Multipart pricing of public goods.",
                "Public Choice, 11:17-33, 1971. [5] V. Conitzer and T. Sandholm.",
                "Complexity of mechanism design.",
                "In Proceedings of the 18th Annual Conference on Uncertainty in Artificial Intelligence (UAI-02), pages 103-110, Edmonton, Canada, 2002. [6] V. Conitzer and T. Sandholm.",
                "Automated mechanism design: Complexity results stemming from the single-agent setting.",
                "In Proceedings of the 5th International Conference on Electronic Commerce (ICEC-03), pages 17-24, Pittsburgh, PA, USA, 2003. [7] V. Conitzer and T. Sandholm.",
                "Computational criticisms of the revelation principle.",
                "In Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), New York, NY, 2004.",
                "Short paper.",
                "Full-length version appeared in the AAMAS-03 workshop on Agent-Mediated Electronic Commerce (AMEC). [8] C. dAspremont and L. A. G´erard-Varet.",
                "Incentives and incomplete information.",
                "Journal of Public Economics, 11:25-45, 1979. [9] J. Feigenbaum, C. Papadimitriou, and S. Shenker.",
                "Sharing the cost of muliticast transmissions.",
                "Journal of Computer and System Sciences, 63:21-41, 2001.",
                "Early version in Proceedings of the Annual ACM Symposium on Theory of Computing (STOC), 2000. [10] A. Gibbard.",
                "Manipulation of voting schemes.",
                "Econometrica, 41:587-602, 1973. [11] T. Groves.",
                "Incentives in teams.",
                "Econometrica, 41:617-631, 1973. [12] J. Hershberger and S. Suri.",
                "Vickrey prices and shortest paths: What is an edge worth?",
                "In Proceedings of the Annual Symposium on Foundations of Computer Science (FOCS), 2001. [13] L. Khachiyan.",
                "A polynomial algorithm in linear programming.",
                "Soviet Math.",
                "Doklady, 20:191-194, 1979. [14] R. Kohli, R. Krishnamurthi, and P. Mirchandani.",
                "The minimum satisfiability problem.",
                "SIAM Journal of Discrete Mathematics, 7(2):275-283, 1994. [15] D. Lehmann, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in rapid, approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002.",
                "Early version appeared in Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), 1999. [16] A. Mas-Colell, M. Whinston, and J. R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [17] E. S. Maskin and J. Riley.",
                "Optimal multi-unit auctions.",
                "In F. Hahn, editor, The Economics of Missing Markets, Information, and Games, chapter 14, pages 312-335.",
                "Clarendon Press, Oxford, 1989. [18] R. Myerson.",
                "Optimal auction design.",
                "Mathematics of Operation Research, 6:58-73, 1981. [19] N. Nisan and A. Ronen.",
                "Computationally feasible VCG mechanisms.",
                "In Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), pages 242-252, Minneapolis, MN, 2000. [20] N. Nisan and A. Ronen.",
                "Algorithmic mechanism design.",
                "Games and Economic Behavior, 35:166-196, 2001.",
                "Early version in Proceedings of the Annual ACM Symposium on Theory of Computing (STOC), 1999. [21] T. Roughgarden.",
                "Designing networks for selfish users is hard.",
                "In Proceedings of the Annual Symposium on Foundations of Computer Science (FOCS), 2001. [22] T. Sandholm.",
                "Issues in computational Vickrey auctions.",
                "International Journal of Electronic Commerce, 4(3):107-129, 2000.",
                "Special Issue on 140 Applying Intelligent Agents for Electronic Commerce.",
                "A short, early version appeared at the Second International Conference on Multi-Agent Systems (ICMAS), pages 299-306, 1996. [23] M. A. Satterthwaite.",
                "Strategy-proofness and Arrows conditions: existence and correspondence theorems for voting procedures and social welfare functions.",
                "Journal of Economic Theory, 10:187-217, 1975. [24] W. Vickrey.",
                "Counterspeculation, auctions, and competitive sealed tenders.",
                "Journal of Finance, 16:8-37, 1961. [25] R. V. Vohra.",
                "Research problems in combinatorial auctions.",
                "Mimeo, version Oct. 29, 2001. 141"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Por ejemplo, imagine que una empresa crea automáticamente su mecanismo de adquisición basado en el \"conocimiento estadístico\" sobre sus proveedores, en lugar de usar una subasta de adquisición descendente clásica."
            ],
            "translated_text": "",
            "candidates": [
                "conocimiento estadístico",
                "conocimiento estadístico"
            ],
            "error": []
        },
        "classical mechanism": {
            "translated_key": "mecanismo clásico",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Self-interested Automated Mechanism Design and Implications for Optimal Combinatorial Auctions∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT Often, an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "The key difficulty is that the agents may report their preferences insincerely to make the chosen outcome more favorable to themselves.",
                "Mechanism design is the art of designing the rules of the game so that the agents are motivated to report their preferences truthfully, and a desirable outcome is chosen.",
                "In a recently proposed approach-called automated mechanism design-a mechanism is computed for the preference aggregation setting at hand.",
                "This has several advantages, but the downside is that the mechanism design optimization problem needs to be solved anew each time.",
                "Unlike the earlier work on automated mechanism design that studied a benevolent designer, in this paper we study automated mechanism design problems where the designer is self-interested.",
                "In this case, the center cares only about which outcome is chosen and what payments are made to it.",
                "The reason that the agents preferences are relevant is that the center is constrained to making each agent at least as well off as the agent would have been had it not participated in the mechanism.",
                "In this setting, we show that designing optimal deterministic mechanisms is NP-complete in two important special cases: when the center is interested only in the payments made to it, and when payments are not possible and the center is interested only in the outcome chosen.",
                "We then show how allowing for randomization in the mechanism makes problems in this setting computationally easy.",
                "Finally, we show that the payment-maximizing AMD problem is closely related to an interesting variant of the optimal (revenuemaximizing) combinatorial auction design problem, where the bidders have best-only preferences.",
                "We show that here, too, designing an optimal deterministic auction is NPcomplete, but designing an optimal randomized auction is easy.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In multiagent settings, often an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "Such outcomes could be potential presidents, joint plans, allocations of goods or resources, etc.",
                "The preference aggregator generally does not know the agents preferences a priori.",
                "Rather, the agents report their preferences to the coordinator.",
                "Unfortunately, an agent may have an incentive to misreport its preferences in order to mislead the mechanism into selecting an outcome that is more desirable to the agent than the outcome that would be selected if the agent revealed its preferences truthfully.",
                "Such manipulation is undesirable because preference aggregation mechanisms are tailored to aggregate preferences in a socially desirable way, and if the agents reveal their preferences insincerely, a socially undesirable outcome may be chosen.",
                "Manipulability is a pervasive problem across preference aggregation mechanisms.",
                "A seminal negative result, the Gibbard-Satterthwaite theorem, shows that under any nondictatorial preference aggregation scheme, if there are at least 3 possible outcomes, there are preferences under which an agent is better off reporting untruthfully [10, 23]. (A preference aggregation scheme is called dictatorial if one of the agents dictates the outcome no matter what preferences the other agents report.)",
                "What the aggregator would like to do is design a preference aggregation mechanism so that 1) the self-interested agents are motivated to report their preferences truthfully, and 2) the mechanism chooses an outcome that is desirable from the perspective of some objective.",
                "This is the classic setting of mechanism design in game theory.",
                "In this paper, we study the case where the designer is self-interested, that is, the designer does not directly care about how the out132 come relates to the agents preferences, but is rather concerned with its own agenda for which outcome should be chosen, and with maximizing payments to itself.",
                "This is the mechanism design setting most relevant to electronic commerce.",
                "In the case where the mechanism designer is interested in maximizing some notion of social welfare, the importance of collecting the agents preferences is clear.",
                "It is perhaps less obvious why they should be collected when the designer is self-interested and hence its objective is not directly related to the agents preferences.",
                "The reason for this is that often the agents preferences impose limits on how the designer chooses the outcome and payments.",
                "The most common such constraint is that of individual rationality (IR), which means that the mechanism cannot make any agent worse off than the agent would have been had it not participated in the mechanism.",
                "For instance, in the setting of optimal auction design, the designer (auctioneer) is only concerned with how much revenue is collected, and not per se with how well the allocation of the good (or goods) corresponds to the agents preferences.",
                "Nevertheless, the designer cannot force an agent to pay more than its valuation for the bundle of goods allocated to it.",
                "Therefore, even a self-interested designer will choose an outcome that makes the agents reasonably well off.",
                "On the other hand, the designer will not necessarily choose a social welfare maximizing outcome.",
                "For example, if the designer always chooses an outcome that maximizes social welfare with respect to the reported preferences, and forces each agent to pay the difference between the utility it has now and the utility it would have had if it had not participated in the mechanism, it is easy to see that agents may have an incentive to misreport their preferences-and this may actually lead to less revenue being collected.",
                "Indeed, one of the counterintuitive results of optimal auction design theory is that sometimes the good is allocated to nobody even when the auctioneer has a reservation price of 0.",
                "<br>classical mechanism</br> design provides some general mechanisms, which, under certain assumptions, satisfy some notion of nonmanipulability and maximize some objective.",
                "The upside of these mechanisms is that they do not rely on (even probabilistic) information about the agents preferences (e.g., the Vickrey-Clarke-Groves (VCG) mechanism [24, 4, 11]), or they can be easily applied to any probability distribution over the preferences (e.g., the dAGVA mechanism [8, 2], the Myerson auction [18], and the Maskin-Riley multi-unit auction [17]).",
                "However, the general mechanisms also have significant downsides: • The most famous and most broadly applicable general mechanisms, VCG and dAGVA, only maximize social welfare.",
                "If the designer is self-interested, as is the case in many electronic commerce settings, these mechanisms do not maximize the designers objective. • The general mechanisms that do focus on a selfinterested designer are only applicable in very restricted settings-such as Myersons expected revenue maximizing auction for selling a single item, and Maskin and Rileys expected revenue maximizing auction for selling multiple identical units of an item. • Even in the restricted settings in which these mechanisms apply, the mechanisms only allow for payment maximization.",
                "In practice, the designer may also be interested in the outcome per se.",
                "For example, an auctioneer may care which bidder receives the item. • It is often assumed that side payments can be used to tailor the agents incentives, but this is not always practical.",
                "For example, in barter-based electronic marketplaces-such as Recipco, firstbarter.com, BarterOne, and Intagio-side payments are not allowed.",
                "Furthermore, among software agents, it might be more desirable to construct mechanisms that do not rely on the ability to make payments, because many software agents do not have the infrastructure to make payments.",
                "In contrast, we follow a recent approach where the mechanism is designed automatically for the specific problem at hand.",
                "This approach addresses all of the downsides listed above.",
                "We formulate the mechanism design problem as an optimization problem.",
                "The input is characterized by the number of agents, the agents possible types (preferences), and the aggregators prior distributions over the agents types.",
                "The output is a nonmanipulable mechanism that is optimal with respect to some objective.",
                "This approach is called automated mechanism design.",
                "The automated mechanism design approach has four advantages over the classical approach of designing general mechanisms.",
                "First, it can be used even in settings that do not satisfy the assumptions of the classical mechanisms (such as availability of side payments or that the objective is social welfare).",
                "Second, it may allow one to circumvent impossibility results (such as the Gibbard-Satterthwaite theorem) which state that there is no mechanism that is desirable across all preferences.",
                "When the mechanism is designed for the setting at hand, it does not matter that it would not work more generally.",
                "Third, it may yield better mechanisms (in terms of stronger nonmanipulability guarantees and/or better outcomes) than classical mechanisms because the mechanism capitalizes on the particulars of the setting (the probabilistic information that the designer has about the agents types).",
                "Given the vast amount of information that parties have about each other today, this approach is likely to lead to tremendous savings over classical mechanisms, which largely ignore that information.",
                "For example, imagine a company automatically creating its procurement mechanism based on statistical knowledge about its suppliers, rather than using a classical descending procurement auction.",
                "Fourth, the burden of design is shifted from humans to a machine.",
                "However, automated mechanism design requires the mechanism design optimization problem to be solved anew for each setting.",
                "Hence its computational complexity becomes a key issue.",
                "Previous research has studied this question for benevolent designers-that wish to maximize, for example, social welfare [5, 6].",
                "In this paper we study the computational complexity of automated mechanism design in the case of a self-interested designer.",
                "This is an important setting for automated mechanism design due to the shortage of general mechanisms in this area, and the fact that in most e-commerce settings the designer is self-interested.",
                "We also show that this problem is closely related to a particular optimal (revenue-maximizing) combinatorial auction design problem. 133 The rest of this paper is organized as follows.",
                "In Section 2, we justify the focus on nonmanipulable mechanisms.",
                "In Section 3, we define the problem we study.",
                "In Section 4, we show that designing an optimal deterministic mechanism is NP-complete even when the designer only cares about the payments made to it.",
                "In Section 5, we show that designing an optimal deterministic mechanism is also NP-complete when payments are not possible and the designer is only interested in the outcome chosen.",
                "In Section 6, we show that an optimal randomized mechanism can be designed in polynomial time even in the general case.",
                "Finally, in Section 7, we show that for designing optimal combinatorial auctions under best-only preferences, our results on AMD imply that this problem is NP-complete for deterministic auctions, but easy for randomized auctions. 2.",
                "JUSTIFYING THE FOCUS ON NONMANIPULABLE MECHANISMS Before we define the computational problem of automated mechanism design, we should justify our focus on nonmanipulable mechanisms.",
                "After all, it is not immediately obvious that there are no manipulable mechanisms that, even when agents report their types strategically and hence sometimes untruthfully, still reach better outcomes (according to whatever objective we use) than any nonmanipulable mechanism.",
                "This does, however, turn out to be the case: given any mechanism, we can construct a nonmanipulable mechanism whose performance is identical, as follows.",
                "We build an interface layer between the agents and the original mechanism.",
                "The agents report their preferences (or types) to the interface layer; subsequently, the interface layer inputs into the original mechanism the types that the agents would have strategically reported to the original mechanism, if their types were as declared to the interface layer.",
                "The resulting outcome is the outcome of the new mechanism.",
                "Since the interface layer acts strategically on each agents behalf, there is never an incentive to report falsely to the interface layer; and hence, the types reported by the interface layer are the strategic types that would have been reported without the interface layer, so the results are exactly as they would have been with the original mechanism.",
                "This argument is known in the mechanism design literature as the revelation principle [16]. (There are computational difficulties with applying the revelation principle in large combinatorial outcome and type spaces [7, 22].",
                "However, because here we focus on flatly represented outcome and type spaces, this is not a concern here.)",
                "Given this, we can focus on truthful mechanisms in the rest of the paper. 3.",
                "DEFINITIONS We now formalize the automated mechanism design setting.",
                "Definition 1.",
                "In an automated mechanism design setting, we are given: • a finite set of outcomes O; • a finite set of N agents; • for each agent i, 1. a finite set of types Θi, 2. a probability distribution γi over Θi (in the case of correlated types, there is a single joint distribution γ over Θ1 × . . . × ΘN ), and 3. a utility function ui : Θi × O → R; 1 • An objective function whose expectation the designer wishes to maximize.",
                "There are many possible objective functions the designer might have, for example, social welfare (where the designer seeks to maximize the sum of the agents utilities), or the minimum utility of any agent (where the designer seeks to maximize the worst utility had by any agent).",
                "In both of these cases, the designer is benevolent, because the designer, in some sense, is pursuing the agents collective happiness.",
                "However, in this paper, we focus on the case of a self-interested designer.",
                "A self-interested designer cares only about the outcome chosen (that is, the designer does not care how the outcome relates to the agents preferences, but rather has a fixed preference over the outcomes), and about the net payments made by the agents, which flow to the designer.",
                "Definition 2.",
                "A self-interested designer has an objective function given by g(o) + N i=1 πi, where g : O → R indicates the designers own preference over the outcomes, and πi is the payment made by agent i.",
                "In the case where g = 0 everywhere, the designer is said to be payment maximizing.",
                "In the case where payments are not possible, g constitutes the objective function by itself.",
                "We now define the kinds of mechanisms under study.",
                "By the revelation principle, we can restrict attention to truthful, direct revelation mechanisms, where agents report their types directly and never have an incentive to misreport them.",
                "Definition 3.",
                "We consider the following kinds of mechanism: • A deterministic mechanism without payments consists of an outcome selection function o : Θ1 × Θ2 × . . . × ΘN → O. • A randomized mechanism without payments consists of a distribution selection function p : Θ1 × Θ2 × . . . × ΘN → P(O), where P(O) is the set of probability distributions over O. • A deterministic mechanism with payments consists of an outcome selection function o : Θ1 ×Θ2 ×. . .×ΘN → O and for each agent i, a payment selection function πi : Θ1 × Θ2 × . . . × ΘN → R, where πi(θ1, . . . , θN ) gives the payment made by agent i when the reported types are θ1, . . . , θN . 1 Though this follows standard game theory notation [16], the fact that the agent has both a utility function and a type is perhaps confusing.",
                "The types encode the various possible preferences that the agent may turn out to have, and the agents type is not known to the aggregator.",
                "The utility function is common knowledge, but because the agents type is a parameter in the agents utility function, the aggregator cannot know what the agents utility is without knowing the agents type. 134 • A randomized mechanism with payments consists of a distribution selection function p : Θ1 × Θ2 × . . . × ΘN → P(O), and for each agent i, a payment selection function πi : Θ1 × Θ2 × . . . × ΘN → R.2 There are two types of constraint on the designer in building the mechanism. 3.1 Individual rationality (IR) constraints The first type of constraint is the following.",
                "The utility of each agent has to be at least as great as the agents fallback utility, that is, the utility that the agent would receive if it did not participate in the mechanism.",
                "Otherwise that agent would not participate in the mechanism-and no agents participation can ever hurt the mechanism designers objective because at worst, the mechanism can ignore an agent by pretending the agent is not there. (Furthermore, if no such constraint applied, the designer could simply make the agents pay an infinite amount.)",
                "This type of constraint is called an IR (individual rationality) constraint.",
                "There are three different possible IR constraints: ex ante, ex interim, and ex post, depending on what the agent knows about its own type and the others types when deciding whether to participate in the mechanism.",
                "Ex ante IR means that the agent would participate if it knew nothing at all (not even its own type).",
                "We will not study this concept in this paper.",
                "Ex interim IR means that the agent would always participate if it knew only its own type, but not those of the others.",
                "Ex post IR means that the agent would always participate even if it knew everybodys type.",
                "We will define the latter two notions of IR formally.",
                "First, we need to formalize the concept of the fallback outcome.",
                "We assume that each agents fallback utility is zero for each one of its types.",
                "This is without loss of generality because we can add a constant term to an agents utility function (for a given type), without affecting the decision-making behavior of that expected utility maximizing agent [16].",
                "Definition 4.",
                "In any automated mechanism design setting with an IR constraint, there is a fallback outcome o0 ∈ O where, for any agent i and any type θi ∈ Θi, we have ui(θi, o0) = 0. (Additionally, in the case of a self-interested designer, g(o0) = 0.)",
                "We can now to define the notions of individual rationality.",
                "Definition 5.",
                "Individual rationality (IR) is defined by: • A deterministic mechanism is ex interim IR if for any agent i, and any type θi ∈ Θi, we have E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, .., θN ))−πi(θ1, .., θN )] ≥ 0.",
                "A randomized mechanism is ex interim IR if for any agent i, and any type θi ∈ Θi, we have E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,..,θn [ui(θi, o)−πi(θ1, .., θN )] ≥ 0. • A deterministic mechanism is ex post IR if for any agent i, and any type vector (θ1, . . . , θN ) ∈ Θ1 × . . . × ΘN , we have ui(θi, o(θ1, . . . , θN )) − πi(θ1, . . . , θN ) ≥ 0. 2 We do not randomize over payments because as long as the agents and the designer are risk neutral with respect to payments, that is, their utility is linear in payments, there is no reason to randomize over payments.",
                "A randomized mechanism is ex post IR if for any agent i, and any type vector (θ1, . . . , θN ) ∈ Θ1 × . . . × ΘN , we have Eo|θ1,..,θn [ui(θi, o) − πi(θ1, .., θN )] ≥ 0.",
                "The terms involving payments can be left out in the case where payments are not possible. 3.2 Incentive compatibility (IC) constraints The second type of constraint says that the agents should never have an incentive to misreport their type (as justified above by the revelation principle).",
                "For this type of constraint, the two most common variants (or solution concepts) are implementation in dominant strategies, and implementation in Bayes-Nash equilibrium.",
                "Definition 6.",
                "Given an automated mechanism design setting, a mechanism is said to implement its outcome and payment functions in dominant strategies if truthtelling is always optimal even when the types reported by the other agents are already known.",
                "Formally, for any agent i, any type vector (θ1, . . . , θi, . . . , θN ) ∈ Θ1 × . . . × Θi × . . . × ΘN , and any alternative type report ˆθi ∈ Θi, in the case of deterministic mechanisms we have ui(θi, o(θ1, . . . , θi, . . . , θN )) − πi(θ1, . . . , θi, . . . , θN ) ≥ ui(θi, o(θ1, . . . , ˆθi, . . . , θN )) − πi(θ1, . . . , ˆθi, . . . , θN ).",
                "In the case of randomized mechanisms we have Eo|θ1,..,θi,..,θn [ui(θi, o) − πi(θ1, . . . , θi, . . . , θN )] ≥ Eo|θ1,.., ˆθi,..,θn [ui(θi, o) − πi(θ1, . . . , ˆθi, . . . , θN )].",
                "The terms involving payments can be left out in the case where payments are not possible.",
                "Thus, in dominant strategies implementation, truthtelling is optimal regardless of what the other agents report.",
                "If it is optimal only given that the other agents are truthful, and given that one does not know the other agents types, we have implementation in Bayes-Nash equilibrium.",
                "Definition 7.",
                "Given an automated mechanism design setting, a mechanism is said to implement its outcome and payment functions in Bayes-Nash equilibrium if truthtelling is always optimal to an agent when that agent does not yet know anything about the other agents types, and the other agents are telling the truth.",
                "Formally, for any agent i, any type θi ∈ Θi, and any alternative type report ˆθi ∈ Θi, in the case of deterministic mechanisms we have E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, . . . , θi, . . . , θN ))− πi(θ1, . . . , θi, . . . , θN )] ≥ E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, . . . , ˆθi, . . . , θN ))− πi(θ1, . . . , ˆθi, . . . , θN )].",
                "In the case of randomized mechanisms we have E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,..,θi,..,θn [ui(θi, o)− πi(θ1, . . . , θi, . . . , θN )] ≥ E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,.., ˆθi,..,θn [ui(θi, o)− πi(θ1, . . . , ˆθi, . . . , θN )].",
                "The terms involving payments can be left out in the case where payments are not possible. 135 3.3 Automated mechanism design We can now define the computational problem we study.",
                "Definition 8. (AUTOMATED-MECHANISM-DESIGN (AMD)) We are given: • an automated mechanism design setting, • an IR notion (ex interim, ex post, or none), • a solution concept (dominant strategies or Bayes-Nash), • whether payments are possible, • whether randomization is possible, • (in the decision variant of the problem) a target value G. We are asked whether there exists a mechanism of the specified kind (in terms of payments and randomization) that satisfies both the IR notion and the solution concept, and gives an expected value of at least G for the objective.",
                "An interesting special case is the setting where there is only one agent.",
                "In this case, the reporting agent always knows everything there is to know about the other agents types-because there are no other agents.",
                "Since ex post and ex interim IR only differ on what an agent is assumed to know about other agents types, the two IR concepts coincide here.",
                "Also, because implementation in dominant strategies and implementation in Bayes-Nash equilibrium only differ on what an agent is assumed to know about other agents types, the two solution concepts coincide here.",
                "This observation will prove to be a useful tool in proving hardness results: if we prove computational hardness in the singleagent setting, this immediately implies hardness for both IR concepts, for both solution concepts, for any number of agents. 4.",
                "PAYMENT-MAXIMIZINGDETERMINISTIC AMD IS HARD In this section we demonstrate that it is NP-complete to design a deterministic mechanism that maximizes the expected sum of the payments collected from the agents.",
                "We show that this problem is hard even in the single-agent setting, thereby immediately showing it hard for both IR concepts, for both solution concepts.",
                "To demonstrate NPhardness, we reduce from the MINSAT problem.",
                "Definition 9 (MINSAT).",
                "We are given a formula φ in conjunctive normal form, represented by a set of Boolean variables V and a set of clauses C, and an integer K (K < |C|).",
                "We are asked whether there exists an assignment to the variables in V such that at most K clauses in φ are satisfied.",
                "MINSAT was recently shown to be NP-complete [14].",
                "We can now present our result.",
                "Theorem 1.",
                "Payment-maximizing deterministic AMD is NP-complete, even for a single agent, even with a uniform distribution over types.",
                "Proof.",
                "It is easy to show that the problem is in NP.",
                "To show NP-hardness, we reduce an arbitrary MINSAT instance to the following single-agent payment-maximizing deterministic AMD instance.",
                "Let the agents type set be Θ = {θc : c ∈ C} ∪ {θv : v ∈ V }, where C is the set of clauses in the MINSAT instance, and V is the set of variables.",
                "Let the probability distribution over these types be uniform.",
                "Let the outcome set be O = {o0} ∪ {oc : c ∈ C} ∪ {ol : l ∈ L}, where L is the set of literals, that is, L = {+v : v ∈ V } ∪ {−v : v ∈ V }.",
                "Let the notation v(l) = v denote that v is the variable corresponding to the literal l, that is, l ∈ {+v, −v}.",
                "Let l ∈ c denote that the literal l occurs in clause c. Then, let the agents utility function be given by u(θc, ol) = |Θ| + 1 for all l ∈ L with l ∈ c; u(θc, ol) = 0 for all l ∈ L with l /∈ c; u(θc, oc) = |Θ| + 1; u(θc, oc ) = 0 for all c ∈ C with c = c ; u(θv, ol) = |Θ| for all l ∈ L with v(l) = v; u(θv, ol) = 0 for all l ∈ L with v(l) = v; u(θv, oc) = 0 for all c ∈ C. The goal of the AMD instance is G = |Θ| + |C|−K |Θ| , where K is the goal of the MINSAT instance.",
                "We show the instances are equivalent.",
                "First, suppose there is a solution to the MINSAT instance.",
                "Let the assignment of truth values to the variables in this solution be given by the function f : V → L (where v(f(v)) = v for all v ∈ V ).",
                "Then, for every v ∈ V , let o(θv) = of(v) and π(θv) = |Θ|.",
                "For every c ∈ C, let o(θc) = oc; let π(θc) = |Θ| + 1 if c is not satisfied in the MINSAT solution, and π(θc) = |Θ| if c is satisfied.",
                "It is straightforward to check that the IR constraint is satisfied.",
                "We now check that the agent has no incentive to misreport.",
                "If the agents type is some θv, then any other report will give it an outcome that is no better, for a payment that is no less, so it has no incentive to misreport.",
                "If the agents type is some θc where c is a satisfied clause, again, any other report will give it an outcome that is no better, for a payment that is no less, so it has no incentive to misreport.",
                "The final case to check is where the agents type is some θc where c is an unsatisfied clause.",
                "In this case, we observe that for none of the types, reporting it leads to an outcome ol for a literal l ∈ c, precisely because the clause is not satisfied in the MINSAT instance.",
                "Because also, no type besides θc leads to the outcome oc, reporting any other type will give an outcome with utility 0, while still forcing a payment of at least |Θ| from the agent.",
                "Clearly the agent is better off reporting truthfully, for a total utility of 0.",
                "This establishes that the agent never has an incentive to misreport.",
                "Finally, we show that the goal is reached.",
                "If s is the number of satisfied clauses in the MINSAT solution (so that s ≤ K), the expected payment from this mechanism is |V ||Θ|+s|Θ|+(|C|−s)(|Θ|+1) |Θ| ≥ |V ||Θ|+K|Θ|+(|C|−K)(|Θ|+1) |Θ| = |Θ| + |C|−K |Θ| = G. So there is a solution to the AMD instance.",
                "Now suppose there is a solution to the AMD instance, given by an outcome function o and a payment function π.",
                "First, suppose there is some v ∈ V such that o(θv) /∈ {o+v, o−v}.",
                "Then the utility that the agent derives from the given outcome for this type is 0, and hence, by IR, no payment can be extracted from the agent for this type.",
                "Because, again by IR, the maximum payment that can be extracted for any other type is |Θ| + 1, it follows that the maximum expected payment that could be obtained is at most (|Θ|−1)(|Θ|+1) |Θ| < |Θ| < G, contradicting that this is a solution to the AMD instance.",
                "It follows that in the solution to the AMD instance, for every v ∈ V , o(θv) ∈ {o+v, o−v}. 136 We can interpret this as an assignment of truth values to the variables: v is set to true if o(θv) = o+v, and to false if o(θv) = o−v.",
                "We claim this assignment is a solution to the MINSAT instance.",
                "By the IR constraint, the maximum payment we can extract from any type θv is |Θ|.",
                "Because there can be no incentives for the agent to report falsely, for any clause c satisfied by the given assignment, the maximum payment we can extract for the corresponding type θc is |Θ|. (For if we extracted more from this type, the agents utility in this case would be less than 1; and if v is the variable satisfying c in the assignment, so that o(θv) = ol where l occurs in c, then the agent would be better off reporting θv instead of the truthful report θc, to get an outcome worth |Θ|+1 to it while having to pay at most |Θ|.)",
                "Finally, for any unsatisfied clause c, by the IR constraint, the maximum payment we can extract for the corresponding type θc is |Θ| + 1.",
                "It follows that the expected payment from our mechanism is at most V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ , where s is the number of satisfied clauses.",
                "Because our mechanism achieves the goal, it follows that V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ ≥ G, which by simple algebraic manipulations is equivalent to s ≤ K. So there is a solution to the MINSAT instance.",
                "Because payment-maximizing AMD is just the special case of AMD for a self-interested designer where the designer has no preferences over the outcome chosen, this immediately implies hardness for the general case of AMD for a selfinterested designer where payments are possible.",
                "However, it does not yet imply hardness for the special case where payments are not possible.",
                "We will prove hardness in this case in the next section. 5.",
                "SELF-INTERESTED DETERMINISTIC AMD WITHOUT PAYMENTS IS HARD In this section we demonstrate that it is NP-complete to design a deterministic mechanism that maximizes the expectation of the designers objective when payments are not possible.",
                "We show that this problem is hard even in the single-agent setting, thereby immediately showing it hard for both IR concepts, for both solution concepts.",
                "Theorem 2.",
                "Without payments, deterministic AMD for a self-interested designer is NP-complete, even for a single agent, even with a uniform distribution over types.",
                "Proof.",
                "It is easy to show that the problem is in NP.",
                "To show NP-hardness, we reduce an arbitrary MINSAT instance to the following single-agent self-interested deterministic AMD without payments instance.",
                "Let the agents type set be Θ = {θc : c ∈ C} ∪ {θv : v ∈ V }, where C is the set of clauses in the MINSAT instance, and V is the set of variables.",
                "Let the probability distribution over these types be uniform.",
                "Let the outcome set be O = {o0} ∪ {oc : c ∈ C}∪{ol : l ∈ L}∪{o∗ }, where L is the set of literals, that is, L = {+v : v ∈ V } ∪ {−v : v ∈ V }.",
                "Let the notation v(l) = v denote that v is the variable corresponding to the literal l, that is, l ∈ {+v, −v}.",
                "Let l ∈ c denote that the literal l occurs in clause c. Then, let the agents utility function be given by u(θc, ol) = 2 for all l ∈ L with l ∈ c; u(θc, ol) = −1 for all l ∈ L with l /∈ c; u(θc, oc) = 2; u(θc, oc ) = −1 for all c ∈ C with c = c ; u(θc, o∗ ) = 1; u(θv, ol) = 1 for all l ∈ L with v(l) = v; u(θv, ol) = −1 for all l ∈ L with v(l) = v; u(θv, oc) = −1 for all c ∈ C; u(θv, o∗ ) = −1.",
                "Let the designers objective function be given by g(o∗ ) = |Θ|+1; g(ol) = |Θ| for all l ∈ L; g(oc) = |Θ| for all c ∈ C. The goal of the AMD instance is G = |Θ| + |C|−K |Θ| , where K is the goal of the MINSAT instance.",
                "We show the instances are equivalent.",
                "First, suppose there is a solution to the MINSAT instance.",
                "Let the assignment of truth values to the variables in this solution be given by the function f : V → L (where v(f(v)) = v for all v ∈ V ).",
                "Then, for every v ∈ V , let o(θv) = of(v).",
                "For every c ∈ C that is satisfied in the MINSAT solution, let o(θc) = oc; for every unsatisfied c ∈ C, let o(θc) = o∗ .",
                "It is straightforward to check that the IR constraint is satisfied.",
                "We now check that the agent has no incentive to misreport.",
                "If the agents type is some θv, it is getting the maximum utility for that type, so it has no incentive to misreport.",
                "If the agents type is some θc where c is a satisfied clause, again, it is getting the maximum utility for that type, so it has no incentive to misreport.",
                "The final case to check is where the agents type is some θc where c is an unsatisfied clause.",
                "In this case, we observe that for none of the types, reporting it leads to an outcome ol for a literal l ∈ c, precisely because the clause is not satisfied in the MINSAT instance.",
                "Because also, no type leads to the outcome oc, there is no outcome that the mechanism ever selects that would give the agent utility greater than 1 for type θc, and hence the agent has no incentive to report falsely.",
                "This establishes that the agent never has an incentive to misreport.",
                "Finally, we show that the goal is reached.",
                "If s is the number of satisfied clauses in the MINSAT solution (so that s ≤ K), then the expected value of the designers objective function is |V ||Θ|+s|Θ|+(|C|−s)(|Θ|+1) |Θ| ≥ |V ||Θ|+K|Θ|+(|C|−K)(|Θ|+1) |Θ| = |Θ| + |C|−K |Θ| = G. So there is a solution to the AMD instance.",
                "Now suppose there is a solution to the AMD instance, given by an outcome function o.",
                "First, suppose there is some v ∈ V such that o(θv) /∈ {o+v, o−v}.",
                "The only other outcome that the mechanism is allowed to choose under the IR constraint is o0.",
                "This has an objective value of 0, and because the highest value the objective function ever takes is |Θ| + 1, it follows that the maximum expected value of the objective function that could be obtained is at most (|Θ|−1)(|Θ|+1) |Θ| < |Θ| < G, contradicting that this is a solution to the AMD instance.",
                "It follows that in the solution to the AMD instance, for every v ∈ V , o(θv) ∈ {o+v, o−v}.",
                "We can interpret this as an assignment of truth values to the variables: v is set to true if o(θv) = o+v, and to false if o(θv) = o−v.",
                "We claim this assignment is a solution to the MINSAT instance.",
                "By the above, for any type θv, the value of the objective function in this mechanism will be |Θ|.",
                "For any clause c satisfied by the given assignment, the value of the objective function in the case where the agent reports type θc will be at most |Θ|. (This is because we cannot choose the outcome o∗ for such a type, as in this case the agent would have an incentive to report θv instead, where v is the variable satisfying c in the assignment (so that o(θv) = ol where l occurs in c).)",
                "Finally, for any unsatisfied clause c, the maximum value the objective function can take in the case where the agent reports type θc is |Θ| + 1, simply because this is the largest value the function ever takes.",
                "It follows that the expected value of the objective function for our mechanism is at most V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ , where s is the number of satisfied 137 clauses.",
                "Because our mechanism achieves the goal, it follows that V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ ≥ G, which by simple algebraic manipulations is equivalent to s ≤ K. So there is a solution to the MINSAT instance.",
                "Both of our hardness results relied on the constraint that the mechanism should be deterministic.",
                "In the next section, we show that the hardness of design disappears when we allow for randomization in the mechanism. 6.",
                "RANDOMIZED AMD FOR A SELFINTERESTED DESIGNER IS EASY We now show how allowing for randomization over the outcomes makes the problem of self-interested AMD tractable through linear programming, for any constant number of agents.",
                "Theorem 3.",
                "Self-interested randomized AMD with a constant number of agents is solvable in polynomial time by linear programming, both with and without payments, both for ex post and ex interim IR, and both for implementation in dominant strategies and for implementation in Bayes-Nash equilibrium-even if the types are correlated.",
                "Proof.",
                "Because linear programs can be solved in polynomial time [13], all we need to show is that the number of variables and equations in our program is polynomial for any constant number of agents-that is, exponential only in N. Throughout, for purposes of determining the size of the linear program, let T = maxi{|Θi|}.",
                "The variables of our linear program will be the probabilities (p(θ1, θ2, . . . , θN ))(o) (at most TN |O| variables) and the payments πi(θ1, θ2, . . . , θN ) (at most NTN variables). (We show the linear program for the case where payments are possible; the case without payments is easily obtained from this by simply omitting all the payment variables in the program, or by adding additional constraints forcing the payments to be 0.)",
                "First, we show the IR constraints.",
                "For ex post IR, we add the following (at most NTN ) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, and for every (θ1, θ2, . . . , θN ) ∈ Θ1 × Θ2 × . . . × ΘN , we add ( o∈O (p(θ1, θ2, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , θN ) ≥ 0.",
                "For ex interim IR, we add the following (at most NT) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, for every θi ∈ Θi, we add θ1,... ,θN γ(θ1, . . . , θN |θi)(( o∈O (p(θ1, θ2, . . . , θN ))(o)u(θi, o))− πi(θ1, θ2, . . . , θN )) ≥ 0.",
                "Now, we show the solution concept constraints.",
                "For implementation in dominant strategies, we add the following (at most NTN+1 ) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, for every (θ1, θ2, . . . , θi, . . . , θN ) ∈ Θ1 × Θ2 × . . . × ΘN , and for every alternative type report ˆθi ∈ Θi, we add the constraint ( o∈O (p(θ1, θ2, . . . , θi, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , θi, . . . , θN ) ≥ ( o∈O (p(θ1, θ2, . . . , ˆθi, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , ˆθi, . . . , θN ).",
                "Finally, for implementation in Bayes-Nash equilibrium, we add the following (at most NT2 ) constraints to the LP: • For every i ∈ {1, 2, ..., N}, for every θi ∈ Θi, and for every alternative type report ˆθi ∈ Θi, we add the constraint θ1,...,θN γ(θ1, ..., θN |θi)(( o∈O (p(θ1, θ2, ..., θi, ..., θN ))(o)u(θi, o)) − πi(θ1, θ2, ..., θi, ..., θN )) ≥ θ1,...,θN γ(θ1, ..., θN |θi)(( o∈O (p(θ1, θ2, ..., ˆθi, ..., θN ))(o)u(θi, o)) − πi(θ1, θ2, ..., ˆθi, ..., θN )).",
                "All that is left to do is to give the expression the designer is seeking to maximize, which is: • θ1,...,θN γ(θ1, ..., θN )(( o∈O (p(θ1, θ2, ..., θi, ..., θN ))(o)g(o)) + N i=1 πi(θ1, θ2, ..., θN )).",
                "As we indicated, the number of variables and constraints is exponential only in N, and hence the linear program is of polynomial size for constant numbers of agents.",
                "Thus the problem is solvable in polynomial time. 7.",
                "IMPLICATIONS FOR AN OPTIMAL COMBINATORIAL AUCTION DESIGN PROBLEM In this section, we will demonstrate some interesting consequences of the problem of automated mechanism design for a self-interested designer on designing optimal combinatorial auctions.",
                "Consider a combinatorial auction with a set S of items for sale.",
                "For any bundle B ⊆ S, let ui(θi, B) be bidder is utility for receiving bundle B when the bidders type is θi.",
                "The optimal auction design problem is to specify the rules of the auction so as to maximize expected revenue to the auctioneer. (By the revelation principle, without loss of generality, we can assume the auction is truthful.)",
                "The optimal auction design problem is solved for the case of a single item by the famous Myerson auction [18].",
                "However, designing optimal auctions in combinatorial auctions is a recognized open research problem [3, 25].",
                "The problem is open even if there are only two items for sale. (The twoitem case with a very special form of complementarity and no substitutability has been solved recently [1].)",
                "Suppose we have free disposal-items can be thrown away at no cost.",
                "Also, suppose that the bidders preferences have the following structure: whenever a bidder receives a bundle of items, the bidders utility for that bundle is determined by the best item in the bundle only. (We emphasize that 138 which item is the best is allowed to depend on the bidders type.)",
                "Definition 10.",
                "Bidder i is said to have best-only preferences over bundles of items if there exists a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s).",
                "We make the following useful observation in this setting: there is no sense in awarding a bidder more than one item.",
                "The reason is that if the bidder is reporting truthfully, taking all but the highest valued item away from the bidder will not hurt the bidder; and, by free disposal, doing so can only reduce the incentive for this bidder to falsely report this type, when the bidder actually has another type.",
                "We now show that the problem of designing a deterministic optimal auction here is NP-complete, by a reduction from the payment maximizing AMD problem!",
                "Theorem 4.",
                "Given an optimal combinatorial auction design problem under best-only preferences (given by a set of items S and for each bidder i, a finite type space Θi and a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s)), designing the optimal deterministic auction is NP-complete, even for a single bidder with a uniform distribution over types.",
                "Proof.",
                "The problem is in NP because we can nondeterministically generate an allocation rule, and then set the payments using linear programming.",
                "To show NP-hardness, we reduce an arbitrary paymentmaximizing deterministic AMD instance, with a single agent and a uniform distribution over types, to the following optimal combinatorial auction design problem instance with a single bidder with best-only preferences.",
                "For every outcome o ∈ O in the AMD instance (besides the outcome o0), let there be one item so ∈ S. Let the type space be the same, and let v(θi, so) = ui(θi, o) (where u is as specified in the AMD instance).",
                "Let the expected revenue target value be the same in both instances.",
                "We show the instances are equivalent.",
                "First suppose there exists a solution to the AMD instance, given by an outcome function and a payment function.",
                "Then, if the AMD solution chooses outcome o for a type, in the optimal auction solution, allocate {so} to the bidder for this type. (Unless o = o0, in which case we allocate {} to the bidder.)",
                "Let the payment functions be the same in both instances.",
                "Then, the utility that an agent receives for reporting a type (given the true type) in either solution is the same, so we have incentive compatibility in the optimal auction solution.",
                "Moreover, because the type distribution and the payment function are the same, the expected revenue to the auctioneer/designer is the same.",
                "It follows that there exists a solution to the optimal auction design instance.",
                "Now suppose there exists a solution to the optimal auction design instance.",
                "By the at-most-one-item observation, we can assume without loss of generality that the solution never allocates more than one item.",
                "Then, if the optimal auction solution allocates item so to the bidder for a type, in the AMD solution, let the mechanism choose outcome o for that type.",
                "If the optimal auction solution allocates nothing to the bidder for a type, in the AMD solution, let the mechanism choose outcome o0 for that type.",
                "Let the payment functions be the same.",
                "Then, the utility that an agent receives for reporting a type (given the true type) in either solution is the same, so we have incentive compatibility in the AMD solution.",
                "Moreover, because the type distribution and the payment function are the same, the expected revenue to the designer/auctioneer is the same.",
                "It follows that there exists a solution to the AMD instance.",
                "Fortunately, we can also carry through the easiness result for randomized mechanisms to this combinatorial auction setting-giving us one of the few known polynomial-time algorithms for an optimal combinatorial auction design problem.",
                "Theorem 5.",
                "Given an optimal combinatorial auction design problem under best-only preferences (given by a set of items S and for each bidder i, a finite type space Θi and a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s)), if the number of bidders is a constant k, then the optimal randomized auction can be designed in polynomial time. (For any IC and IR constraints.)",
                "Proof.",
                "By the at-most-one-item observation, we can without loss of generality restrict ourselves to allocations where each bidder receives at most one item.",
                "There are fewer than (|S| + 1)k such allocations-that is, a polynomial number of allocations.",
                "Because we can list the outcomes explicitly, we can simply solve this as a payment-maximizing AMD instance, with linear programming. 8.",
                "RELATED RESEARCH ON COMPLEXITY IN MECHANISM DESIGN There has been considerable recent interest in mechanism design in computer science.",
                "Some of it has focused on issues of computational complexity, but most of that work has strived toward designing mechanisms that are easy to execute (e.g. [20, 15, 19, 9, 12]), rather than studying the complexity of designing the mechanism.",
                "The closest piece of earlier work studied the complexity of automated mechanism design by a benevolent designer [5, 6].",
                "Roughgarden has studied the complexity of designing a good network topology for agents that selfishly choose the links they use [21].",
                "This is related to mechanism design, but differs significantly in that the designer only has restricted control over the rules of the game because there is no party that can impose the outcome (or side payments).",
                "Also, there is no explicit reporting of preferences. 9.",
                "CONCLUSIONS AND FUTURE RESEARCH Often, an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "The key difficulty is that the agents may report their preferences insincerely to make the chosen outcome more favorable to themselves.",
                "Mechanism design is the art of designing the rules of the game so that the agents are motivated to report their preferences truthfully, and a desirable outcome is chosen.",
                "In a recently emerging approach-called automated mechanism design-a mechanism is computed for the specific preference aggregation setting at hand.",
                "This has several advantages, 139 but the downside is that the mechanism design optimization problem needs to be solved anew each time.",
                "Unlike earlier work on automated mechanism design that studied a benevolent designer, in this paper we studied automated mechanism design problems where the designer is self-interesteda setting much more relevant for electronic commerce.",
                "In this setting, the center cares only about which outcome is chosen and what payments are made to it.",
                "The reason that the agents preferences are relevant is that the center is constrained to making each agent at least as well off as the agent would have been had it not participated in the mechanism.",
                "In this setting, we showed that designing an optimal deterministic mechanism is NP-complete in two important special cases: when the center is interested only in the payments made to it, and when payments are not possible and the center is interested only in the outcome chosen.",
                "These hardness results imply hardness in all more general automated mechanism design settings with a self-interested designer.",
                "The hardness results apply whether the individual rationality (participation) constraints are applied ex interim or ex post, and whether the solution concept is dominant strategies implementation or Bayes-Nash equilibrium implementation.",
                "We then showed that allowing randomization in the mechanism makes the design problem in all these settings computationally easy.",
                "Finally, we showed that the paymentmaximizing AMD problem is closely related to an interesting variant of the optimal (revenue-maximizing) combinatorial auction design problem, where the bidders have best-only preferences.",
                "We showed that here, too, designing an optimal deterministic mechanism is NP-complete even with one agent, but designing an optimal randomized mechanism is easy.",
                "Future research includes studying automated mechanism design with a self-interested designer in more restricted settings such as auctions (where the designers objective may include preferences about which bidder should receive the good-as well as payments).",
                "We also want to study the complexity of automated mechanism design in settings where the outcome and type spaces have special structure so they can be represented more concisely.",
                "Finally, we plan to assemble a data set of real-world mechanism design problems-both historical and current-and apply automated mechanism design to those problems. 10.",
                "REFERENCES [1] M. Armstrong.",
                "Optimal multi-object auctions.",
                "Review of Economic Studies, 67:455-481, 2000. [2] K. Arrow.",
                "The property rights doctrine and demand revelation under incomplete information.",
                "In M. Boskin, editor, Economics and human welfare.",
                "New York Academic Press, 1979. [3] C. Avery and T. Hendershott.",
                "Bundling and optimal auctions of multiple products.",
                "Review of Economic Studies, 67:483-497, 2000. [4] E. H. Clarke.",
                "Multipart pricing of public goods.",
                "Public Choice, 11:17-33, 1971. [5] V. Conitzer and T. Sandholm.",
                "Complexity of mechanism design.",
                "In Proceedings of the 18th Annual Conference on Uncertainty in Artificial Intelligence (UAI-02), pages 103-110, Edmonton, Canada, 2002. [6] V. Conitzer and T. Sandholm.",
                "Automated mechanism design: Complexity results stemming from the single-agent setting.",
                "In Proceedings of the 5th International Conference on Electronic Commerce (ICEC-03), pages 17-24, Pittsburgh, PA, USA, 2003. [7] V. Conitzer and T. Sandholm.",
                "Computational criticisms of the revelation principle.",
                "In Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), New York, NY, 2004.",
                "Short paper.",
                "Full-length version appeared in the AAMAS-03 workshop on Agent-Mediated Electronic Commerce (AMEC). [8] C. dAspremont and L. A. G´erard-Varet.",
                "Incentives and incomplete information.",
                "Journal of Public Economics, 11:25-45, 1979. [9] J. Feigenbaum, C. Papadimitriou, and S. Shenker.",
                "Sharing the cost of muliticast transmissions.",
                "Journal of Computer and System Sciences, 63:21-41, 2001.",
                "Early version in Proceedings of the Annual ACM Symposium on Theory of Computing (STOC), 2000. [10] A. Gibbard.",
                "Manipulation of voting schemes.",
                "Econometrica, 41:587-602, 1973. [11] T. Groves.",
                "Incentives in teams.",
                "Econometrica, 41:617-631, 1973. [12] J. Hershberger and S. Suri.",
                "Vickrey prices and shortest paths: What is an edge worth?",
                "In Proceedings of the Annual Symposium on Foundations of Computer Science (FOCS), 2001. [13] L. Khachiyan.",
                "A polynomial algorithm in linear programming.",
                "Soviet Math.",
                "Doklady, 20:191-194, 1979. [14] R. Kohli, R. Krishnamurthi, and P. Mirchandani.",
                "The minimum satisfiability problem.",
                "SIAM Journal of Discrete Mathematics, 7(2):275-283, 1994. [15] D. Lehmann, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in rapid, approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002.",
                "Early version appeared in Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), 1999. [16] A. Mas-Colell, M. Whinston, and J. R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [17] E. S. Maskin and J. Riley.",
                "Optimal multi-unit auctions.",
                "In F. Hahn, editor, The Economics of Missing Markets, Information, and Games, chapter 14, pages 312-335.",
                "Clarendon Press, Oxford, 1989. [18] R. Myerson.",
                "Optimal auction design.",
                "Mathematics of Operation Research, 6:58-73, 1981. [19] N. Nisan and A. Ronen.",
                "Computationally feasible VCG mechanisms.",
                "In Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), pages 242-252, Minneapolis, MN, 2000. [20] N. Nisan and A. Ronen.",
                "Algorithmic mechanism design.",
                "Games and Economic Behavior, 35:166-196, 2001.",
                "Early version in Proceedings of the Annual ACM Symposium on Theory of Computing (STOC), 1999. [21] T. Roughgarden.",
                "Designing networks for selfish users is hard.",
                "In Proceedings of the Annual Symposium on Foundations of Computer Science (FOCS), 2001. [22] T. Sandholm.",
                "Issues in computational Vickrey auctions.",
                "International Journal of Electronic Commerce, 4(3):107-129, 2000.",
                "Special Issue on 140 Applying Intelligent Agents for Electronic Commerce.",
                "A short, early version appeared at the Second International Conference on Multi-Agent Systems (ICMAS), pages 299-306, 1996. [23] M. A. Satterthwaite.",
                "Strategy-proofness and Arrows conditions: existence and correspondence theorems for voting procedures and social welfare functions.",
                "Journal of Economic Theory, 10:187-217, 1975. [24] W. Vickrey.",
                "Counterspeculation, auctions, and competitive sealed tenders.",
                "Journal of Finance, 16:8-37, 1961. [25] R. V. Vohra.",
                "Research problems in combinatorial auctions.",
                "Mimeo, version Oct. 29, 2001. 141"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "El diseño del \"mecanismo clásico\" proporciona algunos mecanismos generales que, bajo ciertos supuestos, satisfacen alguna noción de no manipulabilidad y maximizan algún objetivo."
            ],
            "translated_text": "",
            "candidates": [
                "mecanismo clásico",
                "mecanismo clásico"
            ],
            "error": []
        },
        "payment maximizing": {
            "translated_key": "maximizando el pago",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Self-interested Automated Mechanism Design and Implications for Optimal Combinatorial Auctions∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT Often, an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "The key difficulty is that the agents may report their preferences insincerely to make the chosen outcome more favorable to themselves.",
                "Mechanism design is the art of designing the rules of the game so that the agents are motivated to report their preferences truthfully, and a desirable outcome is chosen.",
                "In a recently proposed approach-called automated mechanism design-a mechanism is computed for the preference aggregation setting at hand.",
                "This has several advantages, but the downside is that the mechanism design optimization problem needs to be solved anew each time.",
                "Unlike the earlier work on automated mechanism design that studied a benevolent designer, in this paper we study automated mechanism design problems where the designer is self-interested.",
                "In this case, the center cares only about which outcome is chosen and what payments are made to it.",
                "The reason that the agents preferences are relevant is that the center is constrained to making each agent at least as well off as the agent would have been had it not participated in the mechanism.",
                "In this setting, we show that designing optimal deterministic mechanisms is NP-complete in two important special cases: when the center is interested only in the payments made to it, and when payments are not possible and the center is interested only in the outcome chosen.",
                "We then show how allowing for randomization in the mechanism makes problems in this setting computationally easy.",
                "Finally, we show that the payment-maximizing AMD problem is closely related to an interesting variant of the optimal (revenuemaximizing) combinatorial auction design problem, where the bidders have best-only preferences.",
                "We show that here, too, designing an optimal deterministic auction is NPcomplete, but designing an optimal randomized auction is easy.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In multiagent settings, often an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "Such outcomes could be potential presidents, joint plans, allocations of goods or resources, etc.",
                "The preference aggregator generally does not know the agents preferences a priori.",
                "Rather, the agents report their preferences to the coordinator.",
                "Unfortunately, an agent may have an incentive to misreport its preferences in order to mislead the mechanism into selecting an outcome that is more desirable to the agent than the outcome that would be selected if the agent revealed its preferences truthfully.",
                "Such manipulation is undesirable because preference aggregation mechanisms are tailored to aggregate preferences in a socially desirable way, and if the agents reveal their preferences insincerely, a socially undesirable outcome may be chosen.",
                "Manipulability is a pervasive problem across preference aggregation mechanisms.",
                "A seminal negative result, the Gibbard-Satterthwaite theorem, shows that under any nondictatorial preference aggregation scheme, if there are at least 3 possible outcomes, there are preferences under which an agent is better off reporting untruthfully [10, 23]. (A preference aggregation scheme is called dictatorial if one of the agents dictates the outcome no matter what preferences the other agents report.)",
                "What the aggregator would like to do is design a preference aggregation mechanism so that 1) the self-interested agents are motivated to report their preferences truthfully, and 2) the mechanism chooses an outcome that is desirable from the perspective of some objective.",
                "This is the classic setting of mechanism design in game theory.",
                "In this paper, we study the case where the designer is self-interested, that is, the designer does not directly care about how the out132 come relates to the agents preferences, but is rather concerned with its own agenda for which outcome should be chosen, and with maximizing payments to itself.",
                "This is the mechanism design setting most relevant to electronic commerce.",
                "In the case where the mechanism designer is interested in maximizing some notion of social welfare, the importance of collecting the agents preferences is clear.",
                "It is perhaps less obvious why they should be collected when the designer is self-interested and hence its objective is not directly related to the agents preferences.",
                "The reason for this is that often the agents preferences impose limits on how the designer chooses the outcome and payments.",
                "The most common such constraint is that of individual rationality (IR), which means that the mechanism cannot make any agent worse off than the agent would have been had it not participated in the mechanism.",
                "For instance, in the setting of optimal auction design, the designer (auctioneer) is only concerned with how much revenue is collected, and not per se with how well the allocation of the good (or goods) corresponds to the agents preferences.",
                "Nevertheless, the designer cannot force an agent to pay more than its valuation for the bundle of goods allocated to it.",
                "Therefore, even a self-interested designer will choose an outcome that makes the agents reasonably well off.",
                "On the other hand, the designer will not necessarily choose a social welfare maximizing outcome.",
                "For example, if the designer always chooses an outcome that maximizes social welfare with respect to the reported preferences, and forces each agent to pay the difference between the utility it has now and the utility it would have had if it had not participated in the mechanism, it is easy to see that agents may have an incentive to misreport their preferences-and this may actually lead to less revenue being collected.",
                "Indeed, one of the counterintuitive results of optimal auction design theory is that sometimes the good is allocated to nobody even when the auctioneer has a reservation price of 0.",
                "Classical mechanism design provides some general mechanisms, which, under certain assumptions, satisfy some notion of nonmanipulability and maximize some objective.",
                "The upside of these mechanisms is that they do not rely on (even probabilistic) information about the agents preferences (e.g., the Vickrey-Clarke-Groves (VCG) mechanism [24, 4, 11]), or they can be easily applied to any probability distribution over the preferences (e.g., the dAGVA mechanism [8, 2], the Myerson auction [18], and the Maskin-Riley multi-unit auction [17]).",
                "However, the general mechanisms also have significant downsides: • The most famous and most broadly applicable general mechanisms, VCG and dAGVA, only maximize social welfare.",
                "If the designer is self-interested, as is the case in many electronic commerce settings, these mechanisms do not maximize the designers objective. • The general mechanisms that do focus on a selfinterested designer are only applicable in very restricted settings-such as Myersons expected revenue maximizing auction for selling a single item, and Maskin and Rileys expected revenue maximizing auction for selling multiple identical units of an item. • Even in the restricted settings in which these mechanisms apply, the mechanisms only allow for payment maximization.",
                "In practice, the designer may also be interested in the outcome per se.",
                "For example, an auctioneer may care which bidder receives the item. • It is often assumed that side payments can be used to tailor the agents incentives, but this is not always practical.",
                "For example, in barter-based electronic marketplaces-such as Recipco, firstbarter.com, BarterOne, and Intagio-side payments are not allowed.",
                "Furthermore, among software agents, it might be more desirable to construct mechanisms that do not rely on the ability to make payments, because many software agents do not have the infrastructure to make payments.",
                "In contrast, we follow a recent approach where the mechanism is designed automatically for the specific problem at hand.",
                "This approach addresses all of the downsides listed above.",
                "We formulate the mechanism design problem as an optimization problem.",
                "The input is characterized by the number of agents, the agents possible types (preferences), and the aggregators prior distributions over the agents types.",
                "The output is a nonmanipulable mechanism that is optimal with respect to some objective.",
                "This approach is called automated mechanism design.",
                "The automated mechanism design approach has four advantages over the classical approach of designing general mechanisms.",
                "First, it can be used even in settings that do not satisfy the assumptions of the classical mechanisms (such as availability of side payments or that the objective is social welfare).",
                "Second, it may allow one to circumvent impossibility results (such as the Gibbard-Satterthwaite theorem) which state that there is no mechanism that is desirable across all preferences.",
                "When the mechanism is designed for the setting at hand, it does not matter that it would not work more generally.",
                "Third, it may yield better mechanisms (in terms of stronger nonmanipulability guarantees and/or better outcomes) than classical mechanisms because the mechanism capitalizes on the particulars of the setting (the probabilistic information that the designer has about the agents types).",
                "Given the vast amount of information that parties have about each other today, this approach is likely to lead to tremendous savings over classical mechanisms, which largely ignore that information.",
                "For example, imagine a company automatically creating its procurement mechanism based on statistical knowledge about its suppliers, rather than using a classical descending procurement auction.",
                "Fourth, the burden of design is shifted from humans to a machine.",
                "However, automated mechanism design requires the mechanism design optimization problem to be solved anew for each setting.",
                "Hence its computational complexity becomes a key issue.",
                "Previous research has studied this question for benevolent designers-that wish to maximize, for example, social welfare [5, 6].",
                "In this paper we study the computational complexity of automated mechanism design in the case of a self-interested designer.",
                "This is an important setting for automated mechanism design due to the shortage of general mechanisms in this area, and the fact that in most e-commerce settings the designer is self-interested.",
                "We also show that this problem is closely related to a particular optimal (revenue-maximizing) combinatorial auction design problem. 133 The rest of this paper is organized as follows.",
                "In Section 2, we justify the focus on nonmanipulable mechanisms.",
                "In Section 3, we define the problem we study.",
                "In Section 4, we show that designing an optimal deterministic mechanism is NP-complete even when the designer only cares about the payments made to it.",
                "In Section 5, we show that designing an optimal deterministic mechanism is also NP-complete when payments are not possible and the designer is only interested in the outcome chosen.",
                "In Section 6, we show that an optimal randomized mechanism can be designed in polynomial time even in the general case.",
                "Finally, in Section 7, we show that for designing optimal combinatorial auctions under best-only preferences, our results on AMD imply that this problem is NP-complete for deterministic auctions, but easy for randomized auctions. 2.",
                "JUSTIFYING THE FOCUS ON NONMANIPULABLE MECHANISMS Before we define the computational problem of automated mechanism design, we should justify our focus on nonmanipulable mechanisms.",
                "After all, it is not immediately obvious that there are no manipulable mechanisms that, even when agents report their types strategically and hence sometimes untruthfully, still reach better outcomes (according to whatever objective we use) than any nonmanipulable mechanism.",
                "This does, however, turn out to be the case: given any mechanism, we can construct a nonmanipulable mechanism whose performance is identical, as follows.",
                "We build an interface layer between the agents and the original mechanism.",
                "The agents report their preferences (or types) to the interface layer; subsequently, the interface layer inputs into the original mechanism the types that the agents would have strategically reported to the original mechanism, if their types were as declared to the interface layer.",
                "The resulting outcome is the outcome of the new mechanism.",
                "Since the interface layer acts strategically on each agents behalf, there is never an incentive to report falsely to the interface layer; and hence, the types reported by the interface layer are the strategic types that would have been reported without the interface layer, so the results are exactly as they would have been with the original mechanism.",
                "This argument is known in the mechanism design literature as the revelation principle [16]. (There are computational difficulties with applying the revelation principle in large combinatorial outcome and type spaces [7, 22].",
                "However, because here we focus on flatly represented outcome and type spaces, this is not a concern here.)",
                "Given this, we can focus on truthful mechanisms in the rest of the paper. 3.",
                "DEFINITIONS We now formalize the automated mechanism design setting.",
                "Definition 1.",
                "In an automated mechanism design setting, we are given: • a finite set of outcomes O; • a finite set of N agents; • for each agent i, 1. a finite set of types Θi, 2. a probability distribution γi over Θi (in the case of correlated types, there is a single joint distribution γ over Θ1 × . . . × ΘN ), and 3. a utility function ui : Θi × O → R; 1 • An objective function whose expectation the designer wishes to maximize.",
                "There are many possible objective functions the designer might have, for example, social welfare (where the designer seeks to maximize the sum of the agents utilities), or the minimum utility of any agent (where the designer seeks to maximize the worst utility had by any agent).",
                "In both of these cases, the designer is benevolent, because the designer, in some sense, is pursuing the agents collective happiness.",
                "However, in this paper, we focus on the case of a self-interested designer.",
                "A self-interested designer cares only about the outcome chosen (that is, the designer does not care how the outcome relates to the agents preferences, but rather has a fixed preference over the outcomes), and about the net payments made by the agents, which flow to the designer.",
                "Definition 2.",
                "A self-interested designer has an objective function given by g(o) + N i=1 πi, where g : O → R indicates the designers own preference over the outcomes, and πi is the payment made by agent i.",
                "In the case where g = 0 everywhere, the designer is said to be <br>payment maximizing</br>.",
                "In the case where payments are not possible, g constitutes the objective function by itself.",
                "We now define the kinds of mechanisms under study.",
                "By the revelation principle, we can restrict attention to truthful, direct revelation mechanisms, where agents report their types directly and never have an incentive to misreport them.",
                "Definition 3.",
                "We consider the following kinds of mechanism: • A deterministic mechanism without payments consists of an outcome selection function o : Θ1 × Θ2 × . . . × ΘN → O. • A randomized mechanism without payments consists of a distribution selection function p : Θ1 × Θ2 × . . . × ΘN → P(O), where P(O) is the set of probability distributions over O. • A deterministic mechanism with payments consists of an outcome selection function o : Θ1 ×Θ2 ×. . .×ΘN → O and for each agent i, a payment selection function πi : Θ1 × Θ2 × . . . × ΘN → R, where πi(θ1, . . . , θN ) gives the payment made by agent i when the reported types are θ1, . . . , θN . 1 Though this follows standard game theory notation [16], the fact that the agent has both a utility function and a type is perhaps confusing.",
                "The types encode the various possible preferences that the agent may turn out to have, and the agents type is not known to the aggregator.",
                "The utility function is common knowledge, but because the agents type is a parameter in the agents utility function, the aggregator cannot know what the agents utility is without knowing the agents type. 134 • A randomized mechanism with payments consists of a distribution selection function p : Θ1 × Θ2 × . . . × ΘN → P(O), and for each agent i, a payment selection function πi : Θ1 × Θ2 × . . . × ΘN → R.2 There are two types of constraint on the designer in building the mechanism. 3.1 Individual rationality (IR) constraints The first type of constraint is the following.",
                "The utility of each agent has to be at least as great as the agents fallback utility, that is, the utility that the agent would receive if it did not participate in the mechanism.",
                "Otherwise that agent would not participate in the mechanism-and no agents participation can ever hurt the mechanism designers objective because at worst, the mechanism can ignore an agent by pretending the agent is not there. (Furthermore, if no such constraint applied, the designer could simply make the agents pay an infinite amount.)",
                "This type of constraint is called an IR (individual rationality) constraint.",
                "There are three different possible IR constraints: ex ante, ex interim, and ex post, depending on what the agent knows about its own type and the others types when deciding whether to participate in the mechanism.",
                "Ex ante IR means that the agent would participate if it knew nothing at all (not even its own type).",
                "We will not study this concept in this paper.",
                "Ex interim IR means that the agent would always participate if it knew only its own type, but not those of the others.",
                "Ex post IR means that the agent would always participate even if it knew everybodys type.",
                "We will define the latter two notions of IR formally.",
                "First, we need to formalize the concept of the fallback outcome.",
                "We assume that each agents fallback utility is zero for each one of its types.",
                "This is without loss of generality because we can add a constant term to an agents utility function (for a given type), without affecting the decision-making behavior of that expected utility maximizing agent [16].",
                "Definition 4.",
                "In any automated mechanism design setting with an IR constraint, there is a fallback outcome o0 ∈ O where, for any agent i and any type θi ∈ Θi, we have ui(θi, o0) = 0. (Additionally, in the case of a self-interested designer, g(o0) = 0.)",
                "We can now to define the notions of individual rationality.",
                "Definition 5.",
                "Individual rationality (IR) is defined by: • A deterministic mechanism is ex interim IR if for any agent i, and any type θi ∈ Θi, we have E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, .., θN ))−πi(θ1, .., θN )] ≥ 0.",
                "A randomized mechanism is ex interim IR if for any agent i, and any type θi ∈ Θi, we have E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,..,θn [ui(θi, o)−πi(θ1, .., θN )] ≥ 0. • A deterministic mechanism is ex post IR if for any agent i, and any type vector (θ1, . . . , θN ) ∈ Θ1 × . . . × ΘN , we have ui(θi, o(θ1, . . . , θN )) − πi(θ1, . . . , θN ) ≥ 0. 2 We do not randomize over payments because as long as the agents and the designer are risk neutral with respect to payments, that is, their utility is linear in payments, there is no reason to randomize over payments.",
                "A randomized mechanism is ex post IR if for any agent i, and any type vector (θ1, . . . , θN ) ∈ Θ1 × . . . × ΘN , we have Eo|θ1,..,θn [ui(θi, o) − πi(θ1, .., θN )] ≥ 0.",
                "The terms involving payments can be left out in the case where payments are not possible. 3.2 Incentive compatibility (IC) constraints The second type of constraint says that the agents should never have an incentive to misreport their type (as justified above by the revelation principle).",
                "For this type of constraint, the two most common variants (or solution concepts) are implementation in dominant strategies, and implementation in Bayes-Nash equilibrium.",
                "Definition 6.",
                "Given an automated mechanism design setting, a mechanism is said to implement its outcome and payment functions in dominant strategies if truthtelling is always optimal even when the types reported by the other agents are already known.",
                "Formally, for any agent i, any type vector (θ1, . . . , θi, . . . , θN ) ∈ Θ1 × . . . × Θi × . . . × ΘN , and any alternative type report ˆθi ∈ Θi, in the case of deterministic mechanisms we have ui(θi, o(θ1, . . . , θi, . . . , θN )) − πi(θ1, . . . , θi, . . . , θN ) ≥ ui(θi, o(θ1, . . . , ˆθi, . . . , θN )) − πi(θ1, . . . , ˆθi, . . . , θN ).",
                "In the case of randomized mechanisms we have Eo|θ1,..,θi,..,θn [ui(θi, o) − πi(θ1, . . . , θi, . . . , θN )] ≥ Eo|θ1,.., ˆθi,..,θn [ui(θi, o) − πi(θ1, . . . , ˆθi, . . . , θN )].",
                "The terms involving payments can be left out in the case where payments are not possible.",
                "Thus, in dominant strategies implementation, truthtelling is optimal regardless of what the other agents report.",
                "If it is optimal only given that the other agents are truthful, and given that one does not know the other agents types, we have implementation in Bayes-Nash equilibrium.",
                "Definition 7.",
                "Given an automated mechanism design setting, a mechanism is said to implement its outcome and payment functions in Bayes-Nash equilibrium if truthtelling is always optimal to an agent when that agent does not yet know anything about the other agents types, and the other agents are telling the truth.",
                "Formally, for any agent i, any type θi ∈ Θi, and any alternative type report ˆθi ∈ Θi, in the case of deterministic mechanisms we have E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, . . . , θi, . . . , θN ))− πi(θ1, . . . , θi, . . . , θN )] ≥ E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, . . . , ˆθi, . . . , θN ))− πi(θ1, . . . , ˆθi, . . . , θN )].",
                "In the case of randomized mechanisms we have E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,..,θi,..,θn [ui(θi, o)− πi(θ1, . . . , θi, . . . , θN )] ≥ E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,.., ˆθi,..,θn [ui(θi, o)− πi(θ1, . . . , ˆθi, . . . , θN )].",
                "The terms involving payments can be left out in the case where payments are not possible. 135 3.3 Automated mechanism design We can now define the computational problem we study.",
                "Definition 8. (AUTOMATED-MECHANISM-DESIGN (AMD)) We are given: • an automated mechanism design setting, • an IR notion (ex interim, ex post, or none), • a solution concept (dominant strategies or Bayes-Nash), • whether payments are possible, • whether randomization is possible, • (in the decision variant of the problem) a target value G. We are asked whether there exists a mechanism of the specified kind (in terms of payments and randomization) that satisfies both the IR notion and the solution concept, and gives an expected value of at least G for the objective.",
                "An interesting special case is the setting where there is only one agent.",
                "In this case, the reporting agent always knows everything there is to know about the other agents types-because there are no other agents.",
                "Since ex post and ex interim IR only differ on what an agent is assumed to know about other agents types, the two IR concepts coincide here.",
                "Also, because implementation in dominant strategies and implementation in Bayes-Nash equilibrium only differ on what an agent is assumed to know about other agents types, the two solution concepts coincide here.",
                "This observation will prove to be a useful tool in proving hardness results: if we prove computational hardness in the singleagent setting, this immediately implies hardness for both IR concepts, for both solution concepts, for any number of agents. 4.",
                "PAYMENT-MAXIMIZINGDETERMINISTIC AMD IS HARD In this section we demonstrate that it is NP-complete to design a deterministic mechanism that maximizes the expected sum of the payments collected from the agents.",
                "We show that this problem is hard even in the single-agent setting, thereby immediately showing it hard for both IR concepts, for both solution concepts.",
                "To demonstrate NPhardness, we reduce from the MINSAT problem.",
                "Definition 9 (MINSAT).",
                "We are given a formula φ in conjunctive normal form, represented by a set of Boolean variables V and a set of clauses C, and an integer K (K < |C|).",
                "We are asked whether there exists an assignment to the variables in V such that at most K clauses in φ are satisfied.",
                "MINSAT was recently shown to be NP-complete [14].",
                "We can now present our result.",
                "Theorem 1.",
                "Payment-maximizing deterministic AMD is NP-complete, even for a single agent, even with a uniform distribution over types.",
                "Proof.",
                "It is easy to show that the problem is in NP.",
                "To show NP-hardness, we reduce an arbitrary MINSAT instance to the following single-agent payment-maximizing deterministic AMD instance.",
                "Let the agents type set be Θ = {θc : c ∈ C} ∪ {θv : v ∈ V }, where C is the set of clauses in the MINSAT instance, and V is the set of variables.",
                "Let the probability distribution over these types be uniform.",
                "Let the outcome set be O = {o0} ∪ {oc : c ∈ C} ∪ {ol : l ∈ L}, where L is the set of literals, that is, L = {+v : v ∈ V } ∪ {−v : v ∈ V }.",
                "Let the notation v(l) = v denote that v is the variable corresponding to the literal l, that is, l ∈ {+v, −v}.",
                "Let l ∈ c denote that the literal l occurs in clause c. Then, let the agents utility function be given by u(θc, ol) = |Θ| + 1 for all l ∈ L with l ∈ c; u(θc, ol) = 0 for all l ∈ L with l /∈ c; u(θc, oc) = |Θ| + 1; u(θc, oc ) = 0 for all c ∈ C with c = c ; u(θv, ol) = |Θ| for all l ∈ L with v(l) = v; u(θv, ol) = 0 for all l ∈ L with v(l) = v; u(θv, oc) = 0 for all c ∈ C. The goal of the AMD instance is G = |Θ| + |C|−K |Θ| , where K is the goal of the MINSAT instance.",
                "We show the instances are equivalent.",
                "First, suppose there is a solution to the MINSAT instance.",
                "Let the assignment of truth values to the variables in this solution be given by the function f : V → L (where v(f(v)) = v for all v ∈ V ).",
                "Then, for every v ∈ V , let o(θv) = of(v) and π(θv) = |Θ|.",
                "For every c ∈ C, let o(θc) = oc; let π(θc) = |Θ| + 1 if c is not satisfied in the MINSAT solution, and π(θc) = |Θ| if c is satisfied.",
                "It is straightforward to check that the IR constraint is satisfied.",
                "We now check that the agent has no incentive to misreport.",
                "If the agents type is some θv, then any other report will give it an outcome that is no better, for a payment that is no less, so it has no incentive to misreport.",
                "If the agents type is some θc where c is a satisfied clause, again, any other report will give it an outcome that is no better, for a payment that is no less, so it has no incentive to misreport.",
                "The final case to check is where the agents type is some θc where c is an unsatisfied clause.",
                "In this case, we observe that for none of the types, reporting it leads to an outcome ol for a literal l ∈ c, precisely because the clause is not satisfied in the MINSAT instance.",
                "Because also, no type besides θc leads to the outcome oc, reporting any other type will give an outcome with utility 0, while still forcing a payment of at least |Θ| from the agent.",
                "Clearly the agent is better off reporting truthfully, for a total utility of 0.",
                "This establishes that the agent never has an incentive to misreport.",
                "Finally, we show that the goal is reached.",
                "If s is the number of satisfied clauses in the MINSAT solution (so that s ≤ K), the expected payment from this mechanism is |V ||Θ|+s|Θ|+(|C|−s)(|Θ|+1) |Θ| ≥ |V ||Θ|+K|Θ|+(|C|−K)(|Θ|+1) |Θ| = |Θ| + |C|−K |Θ| = G. So there is a solution to the AMD instance.",
                "Now suppose there is a solution to the AMD instance, given by an outcome function o and a payment function π.",
                "First, suppose there is some v ∈ V such that o(θv) /∈ {o+v, o−v}.",
                "Then the utility that the agent derives from the given outcome for this type is 0, and hence, by IR, no payment can be extracted from the agent for this type.",
                "Because, again by IR, the maximum payment that can be extracted for any other type is |Θ| + 1, it follows that the maximum expected payment that could be obtained is at most (|Θ|−1)(|Θ|+1) |Θ| < |Θ| < G, contradicting that this is a solution to the AMD instance.",
                "It follows that in the solution to the AMD instance, for every v ∈ V , o(θv) ∈ {o+v, o−v}. 136 We can interpret this as an assignment of truth values to the variables: v is set to true if o(θv) = o+v, and to false if o(θv) = o−v.",
                "We claim this assignment is a solution to the MINSAT instance.",
                "By the IR constraint, the maximum payment we can extract from any type θv is |Θ|.",
                "Because there can be no incentives for the agent to report falsely, for any clause c satisfied by the given assignment, the maximum payment we can extract for the corresponding type θc is |Θ|. (For if we extracted more from this type, the agents utility in this case would be less than 1; and if v is the variable satisfying c in the assignment, so that o(θv) = ol where l occurs in c, then the agent would be better off reporting θv instead of the truthful report θc, to get an outcome worth |Θ|+1 to it while having to pay at most |Θ|.)",
                "Finally, for any unsatisfied clause c, by the IR constraint, the maximum payment we can extract for the corresponding type θc is |Θ| + 1.",
                "It follows that the expected payment from our mechanism is at most V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ , where s is the number of satisfied clauses.",
                "Because our mechanism achieves the goal, it follows that V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ ≥ G, which by simple algebraic manipulations is equivalent to s ≤ K. So there is a solution to the MINSAT instance.",
                "Because payment-maximizing AMD is just the special case of AMD for a self-interested designer where the designer has no preferences over the outcome chosen, this immediately implies hardness for the general case of AMD for a selfinterested designer where payments are possible.",
                "However, it does not yet imply hardness for the special case where payments are not possible.",
                "We will prove hardness in this case in the next section. 5.",
                "SELF-INTERESTED DETERMINISTIC AMD WITHOUT PAYMENTS IS HARD In this section we demonstrate that it is NP-complete to design a deterministic mechanism that maximizes the expectation of the designers objective when payments are not possible.",
                "We show that this problem is hard even in the single-agent setting, thereby immediately showing it hard for both IR concepts, for both solution concepts.",
                "Theorem 2.",
                "Without payments, deterministic AMD for a self-interested designer is NP-complete, even for a single agent, even with a uniform distribution over types.",
                "Proof.",
                "It is easy to show that the problem is in NP.",
                "To show NP-hardness, we reduce an arbitrary MINSAT instance to the following single-agent self-interested deterministic AMD without payments instance.",
                "Let the agents type set be Θ = {θc : c ∈ C} ∪ {θv : v ∈ V }, where C is the set of clauses in the MINSAT instance, and V is the set of variables.",
                "Let the probability distribution over these types be uniform.",
                "Let the outcome set be O = {o0} ∪ {oc : c ∈ C}∪{ol : l ∈ L}∪{o∗ }, where L is the set of literals, that is, L = {+v : v ∈ V } ∪ {−v : v ∈ V }.",
                "Let the notation v(l) = v denote that v is the variable corresponding to the literal l, that is, l ∈ {+v, −v}.",
                "Let l ∈ c denote that the literal l occurs in clause c. Then, let the agents utility function be given by u(θc, ol) = 2 for all l ∈ L with l ∈ c; u(θc, ol) = −1 for all l ∈ L with l /∈ c; u(θc, oc) = 2; u(θc, oc ) = −1 for all c ∈ C with c = c ; u(θc, o∗ ) = 1; u(θv, ol) = 1 for all l ∈ L with v(l) = v; u(θv, ol) = −1 for all l ∈ L with v(l) = v; u(θv, oc) = −1 for all c ∈ C; u(θv, o∗ ) = −1.",
                "Let the designers objective function be given by g(o∗ ) = |Θ|+1; g(ol) = |Θ| for all l ∈ L; g(oc) = |Θ| for all c ∈ C. The goal of the AMD instance is G = |Θ| + |C|−K |Θ| , where K is the goal of the MINSAT instance.",
                "We show the instances are equivalent.",
                "First, suppose there is a solution to the MINSAT instance.",
                "Let the assignment of truth values to the variables in this solution be given by the function f : V → L (where v(f(v)) = v for all v ∈ V ).",
                "Then, for every v ∈ V , let o(θv) = of(v).",
                "For every c ∈ C that is satisfied in the MINSAT solution, let o(θc) = oc; for every unsatisfied c ∈ C, let o(θc) = o∗ .",
                "It is straightforward to check that the IR constraint is satisfied.",
                "We now check that the agent has no incentive to misreport.",
                "If the agents type is some θv, it is getting the maximum utility for that type, so it has no incentive to misreport.",
                "If the agents type is some θc where c is a satisfied clause, again, it is getting the maximum utility for that type, so it has no incentive to misreport.",
                "The final case to check is where the agents type is some θc where c is an unsatisfied clause.",
                "In this case, we observe that for none of the types, reporting it leads to an outcome ol for a literal l ∈ c, precisely because the clause is not satisfied in the MINSAT instance.",
                "Because also, no type leads to the outcome oc, there is no outcome that the mechanism ever selects that would give the agent utility greater than 1 for type θc, and hence the agent has no incentive to report falsely.",
                "This establishes that the agent never has an incentive to misreport.",
                "Finally, we show that the goal is reached.",
                "If s is the number of satisfied clauses in the MINSAT solution (so that s ≤ K), then the expected value of the designers objective function is |V ||Θ|+s|Θ|+(|C|−s)(|Θ|+1) |Θ| ≥ |V ||Θ|+K|Θ|+(|C|−K)(|Θ|+1) |Θ| = |Θ| + |C|−K |Θ| = G. So there is a solution to the AMD instance.",
                "Now suppose there is a solution to the AMD instance, given by an outcome function o.",
                "First, suppose there is some v ∈ V such that o(θv) /∈ {o+v, o−v}.",
                "The only other outcome that the mechanism is allowed to choose under the IR constraint is o0.",
                "This has an objective value of 0, and because the highest value the objective function ever takes is |Θ| + 1, it follows that the maximum expected value of the objective function that could be obtained is at most (|Θ|−1)(|Θ|+1) |Θ| < |Θ| < G, contradicting that this is a solution to the AMD instance.",
                "It follows that in the solution to the AMD instance, for every v ∈ V , o(θv) ∈ {o+v, o−v}.",
                "We can interpret this as an assignment of truth values to the variables: v is set to true if o(θv) = o+v, and to false if o(θv) = o−v.",
                "We claim this assignment is a solution to the MINSAT instance.",
                "By the above, for any type θv, the value of the objective function in this mechanism will be |Θ|.",
                "For any clause c satisfied by the given assignment, the value of the objective function in the case where the agent reports type θc will be at most |Θ|. (This is because we cannot choose the outcome o∗ for such a type, as in this case the agent would have an incentive to report θv instead, where v is the variable satisfying c in the assignment (so that o(θv) = ol where l occurs in c).)",
                "Finally, for any unsatisfied clause c, the maximum value the objective function can take in the case where the agent reports type θc is |Θ| + 1, simply because this is the largest value the function ever takes.",
                "It follows that the expected value of the objective function for our mechanism is at most V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ , where s is the number of satisfied 137 clauses.",
                "Because our mechanism achieves the goal, it follows that V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ ≥ G, which by simple algebraic manipulations is equivalent to s ≤ K. So there is a solution to the MINSAT instance.",
                "Both of our hardness results relied on the constraint that the mechanism should be deterministic.",
                "In the next section, we show that the hardness of design disappears when we allow for randomization in the mechanism. 6.",
                "RANDOMIZED AMD FOR A SELFINTERESTED DESIGNER IS EASY We now show how allowing for randomization over the outcomes makes the problem of self-interested AMD tractable through linear programming, for any constant number of agents.",
                "Theorem 3.",
                "Self-interested randomized AMD with a constant number of agents is solvable in polynomial time by linear programming, both with and without payments, both for ex post and ex interim IR, and both for implementation in dominant strategies and for implementation in Bayes-Nash equilibrium-even if the types are correlated.",
                "Proof.",
                "Because linear programs can be solved in polynomial time [13], all we need to show is that the number of variables and equations in our program is polynomial for any constant number of agents-that is, exponential only in N. Throughout, for purposes of determining the size of the linear program, let T = maxi{|Θi|}.",
                "The variables of our linear program will be the probabilities (p(θ1, θ2, . . . , θN ))(o) (at most TN |O| variables) and the payments πi(θ1, θ2, . . . , θN ) (at most NTN variables). (We show the linear program for the case where payments are possible; the case without payments is easily obtained from this by simply omitting all the payment variables in the program, or by adding additional constraints forcing the payments to be 0.)",
                "First, we show the IR constraints.",
                "For ex post IR, we add the following (at most NTN ) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, and for every (θ1, θ2, . . . , θN ) ∈ Θ1 × Θ2 × . . . × ΘN , we add ( o∈O (p(θ1, θ2, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , θN ) ≥ 0.",
                "For ex interim IR, we add the following (at most NT) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, for every θi ∈ Θi, we add θ1,... ,θN γ(θ1, . . . , θN |θi)(( o∈O (p(θ1, θ2, . . . , θN ))(o)u(θi, o))− πi(θ1, θ2, . . . , θN )) ≥ 0.",
                "Now, we show the solution concept constraints.",
                "For implementation in dominant strategies, we add the following (at most NTN+1 ) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, for every (θ1, θ2, . . . , θi, . . . , θN ) ∈ Θ1 × Θ2 × . . . × ΘN , and for every alternative type report ˆθi ∈ Θi, we add the constraint ( o∈O (p(θ1, θ2, . . . , θi, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , θi, . . . , θN ) ≥ ( o∈O (p(θ1, θ2, . . . , ˆθi, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , ˆθi, . . . , θN ).",
                "Finally, for implementation in Bayes-Nash equilibrium, we add the following (at most NT2 ) constraints to the LP: • For every i ∈ {1, 2, ..., N}, for every θi ∈ Θi, and for every alternative type report ˆθi ∈ Θi, we add the constraint θ1,...,θN γ(θ1, ..., θN |θi)(( o∈O (p(θ1, θ2, ..., θi, ..., θN ))(o)u(θi, o)) − πi(θ1, θ2, ..., θi, ..., θN )) ≥ θ1,...,θN γ(θ1, ..., θN |θi)(( o∈O (p(θ1, θ2, ..., ˆθi, ..., θN ))(o)u(θi, o)) − πi(θ1, θ2, ..., ˆθi, ..., θN )).",
                "All that is left to do is to give the expression the designer is seeking to maximize, which is: • θ1,...,θN γ(θ1, ..., θN )(( o∈O (p(θ1, θ2, ..., θi, ..., θN ))(o)g(o)) + N i=1 πi(θ1, θ2, ..., θN )).",
                "As we indicated, the number of variables and constraints is exponential only in N, and hence the linear program is of polynomial size for constant numbers of agents.",
                "Thus the problem is solvable in polynomial time. 7.",
                "IMPLICATIONS FOR AN OPTIMAL COMBINATORIAL AUCTION DESIGN PROBLEM In this section, we will demonstrate some interesting consequences of the problem of automated mechanism design for a self-interested designer on designing optimal combinatorial auctions.",
                "Consider a combinatorial auction with a set S of items for sale.",
                "For any bundle B ⊆ S, let ui(θi, B) be bidder is utility for receiving bundle B when the bidders type is θi.",
                "The optimal auction design problem is to specify the rules of the auction so as to maximize expected revenue to the auctioneer. (By the revelation principle, without loss of generality, we can assume the auction is truthful.)",
                "The optimal auction design problem is solved for the case of a single item by the famous Myerson auction [18].",
                "However, designing optimal auctions in combinatorial auctions is a recognized open research problem [3, 25].",
                "The problem is open even if there are only two items for sale. (The twoitem case with a very special form of complementarity and no substitutability has been solved recently [1].)",
                "Suppose we have free disposal-items can be thrown away at no cost.",
                "Also, suppose that the bidders preferences have the following structure: whenever a bidder receives a bundle of items, the bidders utility for that bundle is determined by the best item in the bundle only. (We emphasize that 138 which item is the best is allowed to depend on the bidders type.)",
                "Definition 10.",
                "Bidder i is said to have best-only preferences over bundles of items if there exists a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s).",
                "We make the following useful observation in this setting: there is no sense in awarding a bidder more than one item.",
                "The reason is that if the bidder is reporting truthfully, taking all but the highest valued item away from the bidder will not hurt the bidder; and, by free disposal, doing so can only reduce the incentive for this bidder to falsely report this type, when the bidder actually has another type.",
                "We now show that the problem of designing a deterministic optimal auction here is NP-complete, by a reduction from the <br>payment maximizing</br> AMD problem!",
                "Theorem 4.",
                "Given an optimal combinatorial auction design problem under best-only preferences (given by a set of items S and for each bidder i, a finite type space Θi and a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s)), designing the optimal deterministic auction is NP-complete, even for a single bidder with a uniform distribution over types.",
                "Proof.",
                "The problem is in NP because we can nondeterministically generate an allocation rule, and then set the payments using linear programming.",
                "To show NP-hardness, we reduce an arbitrary paymentmaximizing deterministic AMD instance, with a single agent and a uniform distribution over types, to the following optimal combinatorial auction design problem instance with a single bidder with best-only preferences.",
                "For every outcome o ∈ O in the AMD instance (besides the outcome o0), let there be one item so ∈ S. Let the type space be the same, and let v(θi, so) = ui(θi, o) (where u is as specified in the AMD instance).",
                "Let the expected revenue target value be the same in both instances.",
                "We show the instances are equivalent.",
                "First suppose there exists a solution to the AMD instance, given by an outcome function and a payment function.",
                "Then, if the AMD solution chooses outcome o for a type, in the optimal auction solution, allocate {so} to the bidder for this type. (Unless o = o0, in which case we allocate {} to the bidder.)",
                "Let the payment functions be the same in both instances.",
                "Then, the utility that an agent receives for reporting a type (given the true type) in either solution is the same, so we have incentive compatibility in the optimal auction solution.",
                "Moreover, because the type distribution and the payment function are the same, the expected revenue to the auctioneer/designer is the same.",
                "It follows that there exists a solution to the optimal auction design instance.",
                "Now suppose there exists a solution to the optimal auction design instance.",
                "By the at-most-one-item observation, we can assume without loss of generality that the solution never allocates more than one item.",
                "Then, if the optimal auction solution allocates item so to the bidder for a type, in the AMD solution, let the mechanism choose outcome o for that type.",
                "If the optimal auction solution allocates nothing to the bidder for a type, in the AMD solution, let the mechanism choose outcome o0 for that type.",
                "Let the payment functions be the same.",
                "Then, the utility that an agent receives for reporting a type (given the true type) in either solution is the same, so we have incentive compatibility in the AMD solution.",
                "Moreover, because the type distribution and the payment function are the same, the expected revenue to the designer/auctioneer is the same.",
                "It follows that there exists a solution to the AMD instance.",
                "Fortunately, we can also carry through the easiness result for randomized mechanisms to this combinatorial auction setting-giving us one of the few known polynomial-time algorithms for an optimal combinatorial auction design problem.",
                "Theorem 5.",
                "Given an optimal combinatorial auction design problem under best-only preferences (given by a set of items S and for each bidder i, a finite type space Θi and a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s)), if the number of bidders is a constant k, then the optimal randomized auction can be designed in polynomial time. (For any IC and IR constraints.)",
                "Proof.",
                "By the at-most-one-item observation, we can without loss of generality restrict ourselves to allocations where each bidder receives at most one item.",
                "There are fewer than (|S| + 1)k such allocations-that is, a polynomial number of allocations.",
                "Because we can list the outcomes explicitly, we can simply solve this as a payment-maximizing AMD instance, with linear programming. 8.",
                "RELATED RESEARCH ON COMPLEXITY IN MECHANISM DESIGN There has been considerable recent interest in mechanism design in computer science.",
                "Some of it has focused on issues of computational complexity, but most of that work has strived toward designing mechanisms that are easy to execute (e.g. [20, 15, 19, 9, 12]), rather than studying the complexity of designing the mechanism.",
                "The closest piece of earlier work studied the complexity of automated mechanism design by a benevolent designer [5, 6].",
                "Roughgarden has studied the complexity of designing a good network topology for agents that selfishly choose the links they use [21].",
                "This is related to mechanism design, but differs significantly in that the designer only has restricted control over the rules of the game because there is no party that can impose the outcome (or side payments).",
                "Also, there is no explicit reporting of preferences. 9.",
                "CONCLUSIONS AND FUTURE RESEARCH Often, an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "The key difficulty is that the agents may report their preferences insincerely to make the chosen outcome more favorable to themselves.",
                "Mechanism design is the art of designing the rules of the game so that the agents are motivated to report their preferences truthfully, and a desirable outcome is chosen.",
                "In a recently emerging approach-called automated mechanism design-a mechanism is computed for the specific preference aggregation setting at hand.",
                "This has several advantages, 139 but the downside is that the mechanism design optimization problem needs to be solved anew each time.",
                "Unlike earlier work on automated mechanism design that studied a benevolent designer, in this paper we studied automated mechanism design problems where the designer is self-interesteda setting much more relevant for electronic commerce.",
                "In this setting, the center cares only about which outcome is chosen and what payments are made to it.",
                "The reason that the agents preferences are relevant is that the center is constrained to making each agent at least as well off as the agent would have been had it not participated in the mechanism.",
                "In this setting, we showed that designing an optimal deterministic mechanism is NP-complete in two important special cases: when the center is interested only in the payments made to it, and when payments are not possible and the center is interested only in the outcome chosen.",
                "These hardness results imply hardness in all more general automated mechanism design settings with a self-interested designer.",
                "The hardness results apply whether the individual rationality (participation) constraints are applied ex interim or ex post, and whether the solution concept is dominant strategies implementation or Bayes-Nash equilibrium implementation.",
                "We then showed that allowing randomization in the mechanism makes the design problem in all these settings computationally easy.",
                "Finally, we showed that the paymentmaximizing AMD problem is closely related to an interesting variant of the optimal (revenue-maximizing) combinatorial auction design problem, where the bidders have best-only preferences.",
                "We showed that here, too, designing an optimal deterministic mechanism is NP-complete even with one agent, but designing an optimal randomized mechanism is easy.",
                "Future research includes studying automated mechanism design with a self-interested designer in more restricted settings such as auctions (where the designers objective may include preferences about which bidder should receive the good-as well as payments).",
                "We also want to study the complexity of automated mechanism design in settings where the outcome and type spaces have special structure so they can be represented more concisely.",
                "Finally, we plan to assemble a data set of real-world mechanism design problems-both historical and current-and apply automated mechanism design to those problems. 10.",
                "REFERENCES [1] M. Armstrong.",
                "Optimal multi-object auctions.",
                "Review of Economic Studies, 67:455-481, 2000. [2] K. Arrow.",
                "The property rights doctrine and demand revelation under incomplete information.",
                "In M. Boskin, editor, Economics and human welfare.",
                "New York Academic Press, 1979. [3] C. Avery and T. Hendershott.",
                "Bundling and optimal auctions of multiple products.",
                "Review of Economic Studies, 67:483-497, 2000. [4] E. H. Clarke.",
                "Multipart pricing of public goods.",
                "Public Choice, 11:17-33, 1971. [5] V. Conitzer and T. Sandholm.",
                "Complexity of mechanism design.",
                "In Proceedings of the 18th Annual Conference on Uncertainty in Artificial Intelligence (UAI-02), pages 103-110, Edmonton, Canada, 2002. [6] V. Conitzer and T. Sandholm.",
                "Automated mechanism design: Complexity results stemming from the single-agent setting.",
                "In Proceedings of the 5th International Conference on Electronic Commerce (ICEC-03), pages 17-24, Pittsburgh, PA, USA, 2003. [7] V. Conitzer and T. Sandholm.",
                "Computational criticisms of the revelation principle.",
                "In Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), New York, NY, 2004.",
                "Short paper.",
                "Full-length version appeared in the AAMAS-03 workshop on Agent-Mediated Electronic Commerce (AMEC). [8] C. dAspremont and L. A. G´erard-Varet.",
                "Incentives and incomplete information.",
                "Journal of Public Economics, 11:25-45, 1979. [9] J. Feigenbaum, C. Papadimitriou, and S. Shenker.",
                "Sharing the cost of muliticast transmissions.",
                "Journal of Computer and System Sciences, 63:21-41, 2001.",
                "Early version in Proceedings of the Annual ACM Symposium on Theory of Computing (STOC), 2000. [10] A. Gibbard.",
                "Manipulation of voting schemes.",
                "Econometrica, 41:587-602, 1973. [11] T. Groves.",
                "Incentives in teams.",
                "Econometrica, 41:617-631, 1973. [12] J. Hershberger and S. Suri.",
                "Vickrey prices and shortest paths: What is an edge worth?",
                "In Proceedings of the Annual Symposium on Foundations of Computer Science (FOCS), 2001. [13] L. Khachiyan.",
                "A polynomial algorithm in linear programming.",
                "Soviet Math.",
                "Doklady, 20:191-194, 1979. [14] R. Kohli, R. Krishnamurthi, and P. Mirchandani.",
                "The minimum satisfiability problem.",
                "SIAM Journal of Discrete Mathematics, 7(2):275-283, 1994. [15] D. Lehmann, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in rapid, approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002.",
                "Early version appeared in Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), 1999. [16] A. Mas-Colell, M. Whinston, and J. R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [17] E. S. Maskin and J. Riley.",
                "Optimal multi-unit auctions.",
                "In F. Hahn, editor, The Economics of Missing Markets, Information, and Games, chapter 14, pages 312-335.",
                "Clarendon Press, Oxford, 1989. [18] R. Myerson.",
                "Optimal auction design.",
                "Mathematics of Operation Research, 6:58-73, 1981. [19] N. Nisan and A. Ronen.",
                "Computationally feasible VCG mechanisms.",
                "In Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), pages 242-252, Minneapolis, MN, 2000. [20] N. Nisan and A. Ronen.",
                "Algorithmic mechanism design.",
                "Games and Economic Behavior, 35:166-196, 2001.",
                "Early version in Proceedings of the Annual ACM Symposium on Theory of Computing (STOC), 1999. [21] T. Roughgarden.",
                "Designing networks for selfish users is hard.",
                "In Proceedings of the Annual Symposium on Foundations of Computer Science (FOCS), 2001. [22] T. Sandholm.",
                "Issues in computational Vickrey auctions.",
                "International Journal of Electronic Commerce, 4(3):107-129, 2000.",
                "Special Issue on 140 Applying Intelligent Agents for Electronic Commerce.",
                "A short, early version appeared at the Second International Conference on Multi-Agent Systems (ICMAS), pages 299-306, 1996. [23] M. A. Satterthwaite.",
                "Strategy-proofness and Arrows conditions: existence and correspondence theorems for voting procedures and social welfare functions.",
                "Journal of Economic Theory, 10:187-217, 1975. [24] W. Vickrey.",
                "Counterspeculation, auctions, and competitive sealed tenders.",
                "Journal of Finance, 16:8-37, 1961. [25] R. V. Vohra.",
                "Research problems in combinatorial auctions.",
                "Mimeo, version Oct. 29, 2001. 141"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "En el caso de que G = 0 en todas partes, se dice que el diseñador está \"maximizando el pago\".",
                "Ahora mostramos que el problema de diseñar una subasta óptima determinista aquí es NP-COMPLETE, por una reducción del problema de AMD de \"Maximización de pago\"."
            ],
            "translated_text": "",
            "candidates": [
                "pago maximizando",
                "maximizando el pago",
                "pago maximizando",
                "Maximización de pago"
            ],
            "error": []
        },
        "fallback outcome": {
            "translated_key": "resultado alternativo",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Self-interested Automated Mechanism Design and Implications for Optimal Combinatorial Auctions∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT Often, an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "The key difficulty is that the agents may report their preferences insincerely to make the chosen outcome more favorable to themselves.",
                "Mechanism design is the art of designing the rules of the game so that the agents are motivated to report their preferences truthfully, and a desirable outcome is chosen.",
                "In a recently proposed approach-called automated mechanism design-a mechanism is computed for the preference aggregation setting at hand.",
                "This has several advantages, but the downside is that the mechanism design optimization problem needs to be solved anew each time.",
                "Unlike the earlier work on automated mechanism design that studied a benevolent designer, in this paper we study automated mechanism design problems where the designer is self-interested.",
                "In this case, the center cares only about which outcome is chosen and what payments are made to it.",
                "The reason that the agents preferences are relevant is that the center is constrained to making each agent at least as well off as the agent would have been had it not participated in the mechanism.",
                "In this setting, we show that designing optimal deterministic mechanisms is NP-complete in two important special cases: when the center is interested only in the payments made to it, and when payments are not possible and the center is interested only in the outcome chosen.",
                "We then show how allowing for randomization in the mechanism makes problems in this setting computationally easy.",
                "Finally, we show that the payment-maximizing AMD problem is closely related to an interesting variant of the optimal (revenuemaximizing) combinatorial auction design problem, where the bidders have best-only preferences.",
                "We show that here, too, designing an optimal deterministic auction is NPcomplete, but designing an optimal randomized auction is easy.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In multiagent settings, often an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "Such outcomes could be potential presidents, joint plans, allocations of goods or resources, etc.",
                "The preference aggregator generally does not know the agents preferences a priori.",
                "Rather, the agents report their preferences to the coordinator.",
                "Unfortunately, an agent may have an incentive to misreport its preferences in order to mislead the mechanism into selecting an outcome that is more desirable to the agent than the outcome that would be selected if the agent revealed its preferences truthfully.",
                "Such manipulation is undesirable because preference aggregation mechanisms are tailored to aggregate preferences in a socially desirable way, and if the agents reveal their preferences insincerely, a socially undesirable outcome may be chosen.",
                "Manipulability is a pervasive problem across preference aggregation mechanisms.",
                "A seminal negative result, the Gibbard-Satterthwaite theorem, shows that under any nondictatorial preference aggregation scheme, if there are at least 3 possible outcomes, there are preferences under which an agent is better off reporting untruthfully [10, 23]. (A preference aggregation scheme is called dictatorial if one of the agents dictates the outcome no matter what preferences the other agents report.)",
                "What the aggregator would like to do is design a preference aggregation mechanism so that 1) the self-interested agents are motivated to report their preferences truthfully, and 2) the mechanism chooses an outcome that is desirable from the perspective of some objective.",
                "This is the classic setting of mechanism design in game theory.",
                "In this paper, we study the case where the designer is self-interested, that is, the designer does not directly care about how the out132 come relates to the agents preferences, but is rather concerned with its own agenda for which outcome should be chosen, and with maximizing payments to itself.",
                "This is the mechanism design setting most relevant to electronic commerce.",
                "In the case where the mechanism designer is interested in maximizing some notion of social welfare, the importance of collecting the agents preferences is clear.",
                "It is perhaps less obvious why they should be collected when the designer is self-interested and hence its objective is not directly related to the agents preferences.",
                "The reason for this is that often the agents preferences impose limits on how the designer chooses the outcome and payments.",
                "The most common such constraint is that of individual rationality (IR), which means that the mechanism cannot make any agent worse off than the agent would have been had it not participated in the mechanism.",
                "For instance, in the setting of optimal auction design, the designer (auctioneer) is only concerned with how much revenue is collected, and not per se with how well the allocation of the good (or goods) corresponds to the agents preferences.",
                "Nevertheless, the designer cannot force an agent to pay more than its valuation for the bundle of goods allocated to it.",
                "Therefore, even a self-interested designer will choose an outcome that makes the agents reasonably well off.",
                "On the other hand, the designer will not necessarily choose a social welfare maximizing outcome.",
                "For example, if the designer always chooses an outcome that maximizes social welfare with respect to the reported preferences, and forces each agent to pay the difference between the utility it has now and the utility it would have had if it had not participated in the mechanism, it is easy to see that agents may have an incentive to misreport their preferences-and this may actually lead to less revenue being collected.",
                "Indeed, one of the counterintuitive results of optimal auction design theory is that sometimes the good is allocated to nobody even when the auctioneer has a reservation price of 0.",
                "Classical mechanism design provides some general mechanisms, which, under certain assumptions, satisfy some notion of nonmanipulability and maximize some objective.",
                "The upside of these mechanisms is that they do not rely on (even probabilistic) information about the agents preferences (e.g., the Vickrey-Clarke-Groves (VCG) mechanism [24, 4, 11]), or they can be easily applied to any probability distribution over the preferences (e.g., the dAGVA mechanism [8, 2], the Myerson auction [18], and the Maskin-Riley multi-unit auction [17]).",
                "However, the general mechanisms also have significant downsides: • The most famous and most broadly applicable general mechanisms, VCG and dAGVA, only maximize social welfare.",
                "If the designer is self-interested, as is the case in many electronic commerce settings, these mechanisms do not maximize the designers objective. • The general mechanisms that do focus on a selfinterested designer are only applicable in very restricted settings-such as Myersons expected revenue maximizing auction for selling a single item, and Maskin and Rileys expected revenue maximizing auction for selling multiple identical units of an item. • Even in the restricted settings in which these mechanisms apply, the mechanisms only allow for payment maximization.",
                "In practice, the designer may also be interested in the outcome per se.",
                "For example, an auctioneer may care which bidder receives the item. • It is often assumed that side payments can be used to tailor the agents incentives, but this is not always practical.",
                "For example, in barter-based electronic marketplaces-such as Recipco, firstbarter.com, BarterOne, and Intagio-side payments are not allowed.",
                "Furthermore, among software agents, it might be more desirable to construct mechanisms that do not rely on the ability to make payments, because many software agents do not have the infrastructure to make payments.",
                "In contrast, we follow a recent approach where the mechanism is designed automatically for the specific problem at hand.",
                "This approach addresses all of the downsides listed above.",
                "We formulate the mechanism design problem as an optimization problem.",
                "The input is characterized by the number of agents, the agents possible types (preferences), and the aggregators prior distributions over the agents types.",
                "The output is a nonmanipulable mechanism that is optimal with respect to some objective.",
                "This approach is called automated mechanism design.",
                "The automated mechanism design approach has four advantages over the classical approach of designing general mechanisms.",
                "First, it can be used even in settings that do not satisfy the assumptions of the classical mechanisms (such as availability of side payments or that the objective is social welfare).",
                "Second, it may allow one to circumvent impossibility results (such as the Gibbard-Satterthwaite theorem) which state that there is no mechanism that is desirable across all preferences.",
                "When the mechanism is designed for the setting at hand, it does not matter that it would not work more generally.",
                "Third, it may yield better mechanisms (in terms of stronger nonmanipulability guarantees and/or better outcomes) than classical mechanisms because the mechanism capitalizes on the particulars of the setting (the probabilistic information that the designer has about the agents types).",
                "Given the vast amount of information that parties have about each other today, this approach is likely to lead to tremendous savings over classical mechanisms, which largely ignore that information.",
                "For example, imagine a company automatically creating its procurement mechanism based on statistical knowledge about its suppliers, rather than using a classical descending procurement auction.",
                "Fourth, the burden of design is shifted from humans to a machine.",
                "However, automated mechanism design requires the mechanism design optimization problem to be solved anew for each setting.",
                "Hence its computational complexity becomes a key issue.",
                "Previous research has studied this question for benevolent designers-that wish to maximize, for example, social welfare [5, 6].",
                "In this paper we study the computational complexity of automated mechanism design in the case of a self-interested designer.",
                "This is an important setting for automated mechanism design due to the shortage of general mechanisms in this area, and the fact that in most e-commerce settings the designer is self-interested.",
                "We also show that this problem is closely related to a particular optimal (revenue-maximizing) combinatorial auction design problem. 133 The rest of this paper is organized as follows.",
                "In Section 2, we justify the focus on nonmanipulable mechanisms.",
                "In Section 3, we define the problem we study.",
                "In Section 4, we show that designing an optimal deterministic mechanism is NP-complete even when the designer only cares about the payments made to it.",
                "In Section 5, we show that designing an optimal deterministic mechanism is also NP-complete when payments are not possible and the designer is only interested in the outcome chosen.",
                "In Section 6, we show that an optimal randomized mechanism can be designed in polynomial time even in the general case.",
                "Finally, in Section 7, we show that for designing optimal combinatorial auctions under best-only preferences, our results on AMD imply that this problem is NP-complete for deterministic auctions, but easy for randomized auctions. 2.",
                "JUSTIFYING THE FOCUS ON NONMANIPULABLE MECHANISMS Before we define the computational problem of automated mechanism design, we should justify our focus on nonmanipulable mechanisms.",
                "After all, it is not immediately obvious that there are no manipulable mechanisms that, even when agents report their types strategically and hence sometimes untruthfully, still reach better outcomes (according to whatever objective we use) than any nonmanipulable mechanism.",
                "This does, however, turn out to be the case: given any mechanism, we can construct a nonmanipulable mechanism whose performance is identical, as follows.",
                "We build an interface layer between the agents and the original mechanism.",
                "The agents report their preferences (or types) to the interface layer; subsequently, the interface layer inputs into the original mechanism the types that the agents would have strategically reported to the original mechanism, if their types were as declared to the interface layer.",
                "The resulting outcome is the outcome of the new mechanism.",
                "Since the interface layer acts strategically on each agents behalf, there is never an incentive to report falsely to the interface layer; and hence, the types reported by the interface layer are the strategic types that would have been reported without the interface layer, so the results are exactly as they would have been with the original mechanism.",
                "This argument is known in the mechanism design literature as the revelation principle [16]. (There are computational difficulties with applying the revelation principle in large combinatorial outcome and type spaces [7, 22].",
                "However, because here we focus on flatly represented outcome and type spaces, this is not a concern here.)",
                "Given this, we can focus on truthful mechanisms in the rest of the paper. 3.",
                "DEFINITIONS We now formalize the automated mechanism design setting.",
                "Definition 1.",
                "In an automated mechanism design setting, we are given: • a finite set of outcomes O; • a finite set of N agents; • for each agent i, 1. a finite set of types Θi, 2. a probability distribution γi over Θi (in the case of correlated types, there is a single joint distribution γ over Θ1 × . . . × ΘN ), and 3. a utility function ui : Θi × O → R; 1 • An objective function whose expectation the designer wishes to maximize.",
                "There are many possible objective functions the designer might have, for example, social welfare (where the designer seeks to maximize the sum of the agents utilities), or the minimum utility of any agent (where the designer seeks to maximize the worst utility had by any agent).",
                "In both of these cases, the designer is benevolent, because the designer, in some sense, is pursuing the agents collective happiness.",
                "However, in this paper, we focus on the case of a self-interested designer.",
                "A self-interested designer cares only about the outcome chosen (that is, the designer does not care how the outcome relates to the agents preferences, but rather has a fixed preference over the outcomes), and about the net payments made by the agents, which flow to the designer.",
                "Definition 2.",
                "A self-interested designer has an objective function given by g(o) + N i=1 πi, where g : O → R indicates the designers own preference over the outcomes, and πi is the payment made by agent i.",
                "In the case where g = 0 everywhere, the designer is said to be payment maximizing.",
                "In the case where payments are not possible, g constitutes the objective function by itself.",
                "We now define the kinds of mechanisms under study.",
                "By the revelation principle, we can restrict attention to truthful, direct revelation mechanisms, where agents report their types directly and never have an incentive to misreport them.",
                "Definition 3.",
                "We consider the following kinds of mechanism: • A deterministic mechanism without payments consists of an outcome selection function o : Θ1 × Θ2 × . . . × ΘN → O. • A randomized mechanism without payments consists of a distribution selection function p : Θ1 × Θ2 × . . . × ΘN → P(O), where P(O) is the set of probability distributions over O. • A deterministic mechanism with payments consists of an outcome selection function o : Θ1 ×Θ2 ×. . .×ΘN → O and for each agent i, a payment selection function πi : Θ1 × Θ2 × . . . × ΘN → R, where πi(θ1, . . . , θN ) gives the payment made by agent i when the reported types are θ1, . . . , θN . 1 Though this follows standard game theory notation [16], the fact that the agent has both a utility function and a type is perhaps confusing.",
                "The types encode the various possible preferences that the agent may turn out to have, and the agents type is not known to the aggregator.",
                "The utility function is common knowledge, but because the agents type is a parameter in the agents utility function, the aggregator cannot know what the agents utility is without knowing the agents type. 134 • A randomized mechanism with payments consists of a distribution selection function p : Θ1 × Θ2 × . . . × ΘN → P(O), and for each agent i, a payment selection function πi : Θ1 × Θ2 × . . . × ΘN → R.2 There are two types of constraint on the designer in building the mechanism. 3.1 Individual rationality (IR) constraints The first type of constraint is the following.",
                "The utility of each agent has to be at least as great as the agents fallback utility, that is, the utility that the agent would receive if it did not participate in the mechanism.",
                "Otherwise that agent would not participate in the mechanism-and no agents participation can ever hurt the mechanism designers objective because at worst, the mechanism can ignore an agent by pretending the agent is not there. (Furthermore, if no such constraint applied, the designer could simply make the agents pay an infinite amount.)",
                "This type of constraint is called an IR (individual rationality) constraint.",
                "There are three different possible IR constraints: ex ante, ex interim, and ex post, depending on what the agent knows about its own type and the others types when deciding whether to participate in the mechanism.",
                "Ex ante IR means that the agent would participate if it knew nothing at all (not even its own type).",
                "We will not study this concept in this paper.",
                "Ex interim IR means that the agent would always participate if it knew only its own type, but not those of the others.",
                "Ex post IR means that the agent would always participate even if it knew everybodys type.",
                "We will define the latter two notions of IR formally.",
                "First, we need to formalize the concept of the <br>fallback outcome</br>.",
                "We assume that each agents fallback utility is zero for each one of its types.",
                "This is without loss of generality because we can add a constant term to an agents utility function (for a given type), without affecting the decision-making behavior of that expected utility maximizing agent [16].",
                "Definition 4.",
                "In any automated mechanism design setting with an IR constraint, there is a <br>fallback outcome</br> o0 ∈ O where, for any agent i and any type θi ∈ Θi, we have ui(θi, o0) = 0. (Additionally, in the case of a self-interested designer, g(o0) = 0.)",
                "We can now to define the notions of individual rationality.",
                "Definition 5.",
                "Individual rationality (IR) is defined by: • A deterministic mechanism is ex interim IR if for any agent i, and any type θi ∈ Θi, we have E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, .., θN ))−πi(θ1, .., θN )] ≥ 0.",
                "A randomized mechanism is ex interim IR if for any agent i, and any type θi ∈ Θi, we have E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,..,θn [ui(θi, o)−πi(θ1, .., θN )] ≥ 0. • A deterministic mechanism is ex post IR if for any agent i, and any type vector (θ1, . . . , θN ) ∈ Θ1 × . . . × ΘN , we have ui(θi, o(θ1, . . . , θN )) − πi(θ1, . . . , θN ) ≥ 0. 2 We do not randomize over payments because as long as the agents and the designer are risk neutral with respect to payments, that is, their utility is linear in payments, there is no reason to randomize over payments.",
                "A randomized mechanism is ex post IR if for any agent i, and any type vector (θ1, . . . , θN ) ∈ Θ1 × . . . × ΘN , we have Eo|θ1,..,θn [ui(θi, o) − πi(θ1, .., θN )] ≥ 0.",
                "The terms involving payments can be left out in the case where payments are not possible. 3.2 Incentive compatibility (IC) constraints The second type of constraint says that the agents should never have an incentive to misreport their type (as justified above by the revelation principle).",
                "For this type of constraint, the two most common variants (or solution concepts) are implementation in dominant strategies, and implementation in Bayes-Nash equilibrium.",
                "Definition 6.",
                "Given an automated mechanism design setting, a mechanism is said to implement its outcome and payment functions in dominant strategies if truthtelling is always optimal even when the types reported by the other agents are already known.",
                "Formally, for any agent i, any type vector (θ1, . . . , θi, . . . , θN ) ∈ Θ1 × . . . × Θi × . . . × ΘN , and any alternative type report ˆθi ∈ Θi, in the case of deterministic mechanisms we have ui(θi, o(θ1, . . . , θi, . . . , θN )) − πi(θ1, . . . , θi, . . . , θN ) ≥ ui(θi, o(θ1, . . . , ˆθi, . . . , θN )) − πi(θ1, . . . , ˆθi, . . . , θN ).",
                "In the case of randomized mechanisms we have Eo|θ1,..,θi,..,θn [ui(θi, o) − πi(θ1, . . . , θi, . . . , θN )] ≥ Eo|θ1,.., ˆθi,..,θn [ui(θi, o) − πi(θ1, . . . , ˆθi, . . . , θN )].",
                "The terms involving payments can be left out in the case where payments are not possible.",
                "Thus, in dominant strategies implementation, truthtelling is optimal regardless of what the other agents report.",
                "If it is optimal only given that the other agents are truthful, and given that one does not know the other agents types, we have implementation in Bayes-Nash equilibrium.",
                "Definition 7.",
                "Given an automated mechanism design setting, a mechanism is said to implement its outcome and payment functions in Bayes-Nash equilibrium if truthtelling is always optimal to an agent when that agent does not yet know anything about the other agents types, and the other agents are telling the truth.",
                "Formally, for any agent i, any type θi ∈ Θi, and any alternative type report ˆθi ∈ Θi, in the case of deterministic mechanisms we have E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, . . . , θi, . . . , θN ))− πi(θ1, . . . , θi, . . . , θN )] ≥ E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, . . . , ˆθi, . . . , θN ))− πi(θ1, . . . , ˆθi, . . . , θN )].",
                "In the case of randomized mechanisms we have E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,..,θi,..,θn [ui(θi, o)− πi(θ1, . . . , θi, . . . , θN )] ≥ E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,.., ˆθi,..,θn [ui(θi, o)− πi(θ1, . . . , ˆθi, . . . , θN )].",
                "The terms involving payments can be left out in the case where payments are not possible. 135 3.3 Automated mechanism design We can now define the computational problem we study.",
                "Definition 8. (AUTOMATED-MECHANISM-DESIGN (AMD)) We are given: • an automated mechanism design setting, • an IR notion (ex interim, ex post, or none), • a solution concept (dominant strategies or Bayes-Nash), • whether payments are possible, • whether randomization is possible, • (in the decision variant of the problem) a target value G. We are asked whether there exists a mechanism of the specified kind (in terms of payments and randomization) that satisfies both the IR notion and the solution concept, and gives an expected value of at least G for the objective.",
                "An interesting special case is the setting where there is only one agent.",
                "In this case, the reporting agent always knows everything there is to know about the other agents types-because there are no other agents.",
                "Since ex post and ex interim IR only differ on what an agent is assumed to know about other agents types, the two IR concepts coincide here.",
                "Also, because implementation in dominant strategies and implementation in Bayes-Nash equilibrium only differ on what an agent is assumed to know about other agents types, the two solution concepts coincide here.",
                "This observation will prove to be a useful tool in proving hardness results: if we prove computational hardness in the singleagent setting, this immediately implies hardness for both IR concepts, for both solution concepts, for any number of agents. 4.",
                "PAYMENT-MAXIMIZINGDETERMINISTIC AMD IS HARD In this section we demonstrate that it is NP-complete to design a deterministic mechanism that maximizes the expected sum of the payments collected from the agents.",
                "We show that this problem is hard even in the single-agent setting, thereby immediately showing it hard for both IR concepts, for both solution concepts.",
                "To demonstrate NPhardness, we reduce from the MINSAT problem.",
                "Definition 9 (MINSAT).",
                "We are given a formula φ in conjunctive normal form, represented by a set of Boolean variables V and a set of clauses C, and an integer K (K < |C|).",
                "We are asked whether there exists an assignment to the variables in V such that at most K clauses in φ are satisfied.",
                "MINSAT was recently shown to be NP-complete [14].",
                "We can now present our result.",
                "Theorem 1.",
                "Payment-maximizing deterministic AMD is NP-complete, even for a single agent, even with a uniform distribution over types.",
                "Proof.",
                "It is easy to show that the problem is in NP.",
                "To show NP-hardness, we reduce an arbitrary MINSAT instance to the following single-agent payment-maximizing deterministic AMD instance.",
                "Let the agents type set be Θ = {θc : c ∈ C} ∪ {θv : v ∈ V }, where C is the set of clauses in the MINSAT instance, and V is the set of variables.",
                "Let the probability distribution over these types be uniform.",
                "Let the outcome set be O = {o0} ∪ {oc : c ∈ C} ∪ {ol : l ∈ L}, where L is the set of literals, that is, L = {+v : v ∈ V } ∪ {−v : v ∈ V }.",
                "Let the notation v(l) = v denote that v is the variable corresponding to the literal l, that is, l ∈ {+v, −v}.",
                "Let l ∈ c denote that the literal l occurs in clause c. Then, let the agents utility function be given by u(θc, ol) = |Θ| + 1 for all l ∈ L with l ∈ c; u(θc, ol) = 0 for all l ∈ L with l /∈ c; u(θc, oc) = |Θ| + 1; u(θc, oc ) = 0 for all c ∈ C with c = c ; u(θv, ol) = |Θ| for all l ∈ L with v(l) = v; u(θv, ol) = 0 for all l ∈ L with v(l) = v; u(θv, oc) = 0 for all c ∈ C. The goal of the AMD instance is G = |Θ| + |C|−K |Θ| , where K is the goal of the MINSAT instance.",
                "We show the instances are equivalent.",
                "First, suppose there is a solution to the MINSAT instance.",
                "Let the assignment of truth values to the variables in this solution be given by the function f : V → L (where v(f(v)) = v for all v ∈ V ).",
                "Then, for every v ∈ V , let o(θv) = of(v) and π(θv) = |Θ|.",
                "For every c ∈ C, let o(θc) = oc; let π(θc) = |Θ| + 1 if c is not satisfied in the MINSAT solution, and π(θc) = |Θ| if c is satisfied.",
                "It is straightforward to check that the IR constraint is satisfied.",
                "We now check that the agent has no incentive to misreport.",
                "If the agents type is some θv, then any other report will give it an outcome that is no better, for a payment that is no less, so it has no incentive to misreport.",
                "If the agents type is some θc where c is a satisfied clause, again, any other report will give it an outcome that is no better, for a payment that is no less, so it has no incentive to misreport.",
                "The final case to check is where the agents type is some θc where c is an unsatisfied clause.",
                "In this case, we observe that for none of the types, reporting it leads to an outcome ol for a literal l ∈ c, precisely because the clause is not satisfied in the MINSAT instance.",
                "Because also, no type besides θc leads to the outcome oc, reporting any other type will give an outcome with utility 0, while still forcing a payment of at least |Θ| from the agent.",
                "Clearly the agent is better off reporting truthfully, for a total utility of 0.",
                "This establishes that the agent never has an incentive to misreport.",
                "Finally, we show that the goal is reached.",
                "If s is the number of satisfied clauses in the MINSAT solution (so that s ≤ K), the expected payment from this mechanism is |V ||Θ|+s|Θ|+(|C|−s)(|Θ|+1) |Θ| ≥ |V ||Θ|+K|Θ|+(|C|−K)(|Θ|+1) |Θ| = |Θ| + |C|−K |Θ| = G. So there is a solution to the AMD instance.",
                "Now suppose there is a solution to the AMD instance, given by an outcome function o and a payment function π.",
                "First, suppose there is some v ∈ V such that o(θv) /∈ {o+v, o−v}.",
                "Then the utility that the agent derives from the given outcome for this type is 0, and hence, by IR, no payment can be extracted from the agent for this type.",
                "Because, again by IR, the maximum payment that can be extracted for any other type is |Θ| + 1, it follows that the maximum expected payment that could be obtained is at most (|Θ|−1)(|Θ|+1) |Θ| < |Θ| < G, contradicting that this is a solution to the AMD instance.",
                "It follows that in the solution to the AMD instance, for every v ∈ V , o(θv) ∈ {o+v, o−v}. 136 We can interpret this as an assignment of truth values to the variables: v is set to true if o(θv) = o+v, and to false if o(θv) = o−v.",
                "We claim this assignment is a solution to the MINSAT instance.",
                "By the IR constraint, the maximum payment we can extract from any type θv is |Θ|.",
                "Because there can be no incentives for the agent to report falsely, for any clause c satisfied by the given assignment, the maximum payment we can extract for the corresponding type θc is |Θ|. (For if we extracted more from this type, the agents utility in this case would be less than 1; and if v is the variable satisfying c in the assignment, so that o(θv) = ol where l occurs in c, then the agent would be better off reporting θv instead of the truthful report θc, to get an outcome worth |Θ|+1 to it while having to pay at most |Θ|.)",
                "Finally, for any unsatisfied clause c, by the IR constraint, the maximum payment we can extract for the corresponding type θc is |Θ| + 1.",
                "It follows that the expected payment from our mechanism is at most V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ , where s is the number of satisfied clauses.",
                "Because our mechanism achieves the goal, it follows that V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ ≥ G, which by simple algebraic manipulations is equivalent to s ≤ K. So there is a solution to the MINSAT instance.",
                "Because payment-maximizing AMD is just the special case of AMD for a self-interested designer where the designer has no preferences over the outcome chosen, this immediately implies hardness for the general case of AMD for a selfinterested designer where payments are possible.",
                "However, it does not yet imply hardness for the special case where payments are not possible.",
                "We will prove hardness in this case in the next section. 5.",
                "SELF-INTERESTED DETERMINISTIC AMD WITHOUT PAYMENTS IS HARD In this section we demonstrate that it is NP-complete to design a deterministic mechanism that maximizes the expectation of the designers objective when payments are not possible.",
                "We show that this problem is hard even in the single-agent setting, thereby immediately showing it hard for both IR concepts, for both solution concepts.",
                "Theorem 2.",
                "Without payments, deterministic AMD for a self-interested designer is NP-complete, even for a single agent, even with a uniform distribution over types.",
                "Proof.",
                "It is easy to show that the problem is in NP.",
                "To show NP-hardness, we reduce an arbitrary MINSAT instance to the following single-agent self-interested deterministic AMD without payments instance.",
                "Let the agents type set be Θ = {θc : c ∈ C} ∪ {θv : v ∈ V }, where C is the set of clauses in the MINSAT instance, and V is the set of variables.",
                "Let the probability distribution over these types be uniform.",
                "Let the outcome set be O = {o0} ∪ {oc : c ∈ C}∪{ol : l ∈ L}∪{o∗ }, where L is the set of literals, that is, L = {+v : v ∈ V } ∪ {−v : v ∈ V }.",
                "Let the notation v(l) = v denote that v is the variable corresponding to the literal l, that is, l ∈ {+v, −v}.",
                "Let l ∈ c denote that the literal l occurs in clause c. Then, let the agents utility function be given by u(θc, ol) = 2 for all l ∈ L with l ∈ c; u(θc, ol) = −1 for all l ∈ L with l /∈ c; u(θc, oc) = 2; u(θc, oc ) = −1 for all c ∈ C with c = c ; u(θc, o∗ ) = 1; u(θv, ol) = 1 for all l ∈ L with v(l) = v; u(θv, ol) = −1 for all l ∈ L with v(l) = v; u(θv, oc) = −1 for all c ∈ C; u(θv, o∗ ) = −1.",
                "Let the designers objective function be given by g(o∗ ) = |Θ|+1; g(ol) = |Θ| for all l ∈ L; g(oc) = |Θ| for all c ∈ C. The goal of the AMD instance is G = |Θ| + |C|−K |Θ| , where K is the goal of the MINSAT instance.",
                "We show the instances are equivalent.",
                "First, suppose there is a solution to the MINSAT instance.",
                "Let the assignment of truth values to the variables in this solution be given by the function f : V → L (where v(f(v)) = v for all v ∈ V ).",
                "Then, for every v ∈ V , let o(θv) = of(v).",
                "For every c ∈ C that is satisfied in the MINSAT solution, let o(θc) = oc; for every unsatisfied c ∈ C, let o(θc) = o∗ .",
                "It is straightforward to check that the IR constraint is satisfied.",
                "We now check that the agent has no incentive to misreport.",
                "If the agents type is some θv, it is getting the maximum utility for that type, so it has no incentive to misreport.",
                "If the agents type is some θc where c is a satisfied clause, again, it is getting the maximum utility for that type, so it has no incentive to misreport.",
                "The final case to check is where the agents type is some θc where c is an unsatisfied clause.",
                "In this case, we observe that for none of the types, reporting it leads to an outcome ol for a literal l ∈ c, precisely because the clause is not satisfied in the MINSAT instance.",
                "Because also, no type leads to the outcome oc, there is no outcome that the mechanism ever selects that would give the agent utility greater than 1 for type θc, and hence the agent has no incentive to report falsely.",
                "This establishes that the agent never has an incentive to misreport.",
                "Finally, we show that the goal is reached.",
                "If s is the number of satisfied clauses in the MINSAT solution (so that s ≤ K), then the expected value of the designers objective function is |V ||Θ|+s|Θ|+(|C|−s)(|Θ|+1) |Θ| ≥ |V ||Θ|+K|Θ|+(|C|−K)(|Θ|+1) |Θ| = |Θ| + |C|−K |Θ| = G. So there is a solution to the AMD instance.",
                "Now suppose there is a solution to the AMD instance, given by an outcome function o.",
                "First, suppose there is some v ∈ V such that o(θv) /∈ {o+v, o−v}.",
                "The only other outcome that the mechanism is allowed to choose under the IR constraint is o0.",
                "This has an objective value of 0, and because the highest value the objective function ever takes is |Θ| + 1, it follows that the maximum expected value of the objective function that could be obtained is at most (|Θ|−1)(|Θ|+1) |Θ| < |Θ| < G, contradicting that this is a solution to the AMD instance.",
                "It follows that in the solution to the AMD instance, for every v ∈ V , o(θv) ∈ {o+v, o−v}.",
                "We can interpret this as an assignment of truth values to the variables: v is set to true if o(θv) = o+v, and to false if o(θv) = o−v.",
                "We claim this assignment is a solution to the MINSAT instance.",
                "By the above, for any type θv, the value of the objective function in this mechanism will be |Θ|.",
                "For any clause c satisfied by the given assignment, the value of the objective function in the case where the agent reports type θc will be at most |Θ|. (This is because we cannot choose the outcome o∗ for such a type, as in this case the agent would have an incentive to report θv instead, where v is the variable satisfying c in the assignment (so that o(θv) = ol where l occurs in c).)",
                "Finally, for any unsatisfied clause c, the maximum value the objective function can take in the case where the agent reports type θc is |Θ| + 1, simply because this is the largest value the function ever takes.",
                "It follows that the expected value of the objective function for our mechanism is at most V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ , where s is the number of satisfied 137 clauses.",
                "Because our mechanism achieves the goal, it follows that V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ ≥ G, which by simple algebraic manipulations is equivalent to s ≤ K. So there is a solution to the MINSAT instance.",
                "Both of our hardness results relied on the constraint that the mechanism should be deterministic.",
                "In the next section, we show that the hardness of design disappears when we allow for randomization in the mechanism. 6.",
                "RANDOMIZED AMD FOR A SELFINTERESTED DESIGNER IS EASY We now show how allowing for randomization over the outcomes makes the problem of self-interested AMD tractable through linear programming, for any constant number of agents.",
                "Theorem 3.",
                "Self-interested randomized AMD with a constant number of agents is solvable in polynomial time by linear programming, both with and without payments, both for ex post and ex interim IR, and both for implementation in dominant strategies and for implementation in Bayes-Nash equilibrium-even if the types are correlated.",
                "Proof.",
                "Because linear programs can be solved in polynomial time [13], all we need to show is that the number of variables and equations in our program is polynomial for any constant number of agents-that is, exponential only in N. Throughout, for purposes of determining the size of the linear program, let T = maxi{|Θi|}.",
                "The variables of our linear program will be the probabilities (p(θ1, θ2, . . . , θN ))(o) (at most TN |O| variables) and the payments πi(θ1, θ2, . . . , θN ) (at most NTN variables). (We show the linear program for the case where payments are possible; the case without payments is easily obtained from this by simply omitting all the payment variables in the program, or by adding additional constraints forcing the payments to be 0.)",
                "First, we show the IR constraints.",
                "For ex post IR, we add the following (at most NTN ) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, and for every (θ1, θ2, . . . , θN ) ∈ Θ1 × Θ2 × . . . × ΘN , we add ( o∈O (p(θ1, θ2, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , θN ) ≥ 0.",
                "For ex interim IR, we add the following (at most NT) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, for every θi ∈ Θi, we add θ1,... ,θN γ(θ1, . . . , θN |θi)(( o∈O (p(θ1, θ2, . . . , θN ))(o)u(θi, o))− πi(θ1, θ2, . . . , θN )) ≥ 0.",
                "Now, we show the solution concept constraints.",
                "For implementation in dominant strategies, we add the following (at most NTN+1 ) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, for every (θ1, θ2, . . . , θi, . . . , θN ) ∈ Θ1 × Θ2 × . . . × ΘN , and for every alternative type report ˆθi ∈ Θi, we add the constraint ( o∈O (p(θ1, θ2, . . . , θi, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , θi, . . . , θN ) ≥ ( o∈O (p(θ1, θ2, . . . , ˆθi, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , ˆθi, . . . , θN ).",
                "Finally, for implementation in Bayes-Nash equilibrium, we add the following (at most NT2 ) constraints to the LP: • For every i ∈ {1, 2, ..., N}, for every θi ∈ Θi, and for every alternative type report ˆθi ∈ Θi, we add the constraint θ1,...,θN γ(θ1, ..., θN |θi)(( o∈O (p(θ1, θ2, ..., θi, ..., θN ))(o)u(θi, o)) − πi(θ1, θ2, ..., θi, ..., θN )) ≥ θ1,...,θN γ(θ1, ..., θN |θi)(( o∈O (p(θ1, θ2, ..., ˆθi, ..., θN ))(o)u(θi, o)) − πi(θ1, θ2, ..., ˆθi, ..., θN )).",
                "All that is left to do is to give the expression the designer is seeking to maximize, which is: • θ1,...,θN γ(θ1, ..., θN )(( o∈O (p(θ1, θ2, ..., θi, ..., θN ))(o)g(o)) + N i=1 πi(θ1, θ2, ..., θN )).",
                "As we indicated, the number of variables and constraints is exponential only in N, and hence the linear program is of polynomial size for constant numbers of agents.",
                "Thus the problem is solvable in polynomial time. 7.",
                "IMPLICATIONS FOR AN OPTIMAL COMBINATORIAL AUCTION DESIGN PROBLEM In this section, we will demonstrate some interesting consequences of the problem of automated mechanism design for a self-interested designer on designing optimal combinatorial auctions.",
                "Consider a combinatorial auction with a set S of items for sale.",
                "For any bundle B ⊆ S, let ui(θi, B) be bidder is utility for receiving bundle B when the bidders type is θi.",
                "The optimal auction design problem is to specify the rules of the auction so as to maximize expected revenue to the auctioneer. (By the revelation principle, without loss of generality, we can assume the auction is truthful.)",
                "The optimal auction design problem is solved for the case of a single item by the famous Myerson auction [18].",
                "However, designing optimal auctions in combinatorial auctions is a recognized open research problem [3, 25].",
                "The problem is open even if there are only two items for sale. (The twoitem case with a very special form of complementarity and no substitutability has been solved recently [1].)",
                "Suppose we have free disposal-items can be thrown away at no cost.",
                "Also, suppose that the bidders preferences have the following structure: whenever a bidder receives a bundle of items, the bidders utility for that bundle is determined by the best item in the bundle only. (We emphasize that 138 which item is the best is allowed to depend on the bidders type.)",
                "Definition 10.",
                "Bidder i is said to have best-only preferences over bundles of items if there exists a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s).",
                "We make the following useful observation in this setting: there is no sense in awarding a bidder more than one item.",
                "The reason is that if the bidder is reporting truthfully, taking all but the highest valued item away from the bidder will not hurt the bidder; and, by free disposal, doing so can only reduce the incentive for this bidder to falsely report this type, when the bidder actually has another type.",
                "We now show that the problem of designing a deterministic optimal auction here is NP-complete, by a reduction from the payment maximizing AMD problem!",
                "Theorem 4.",
                "Given an optimal combinatorial auction design problem under best-only preferences (given by a set of items S and for each bidder i, a finite type space Θi and a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s)), designing the optimal deterministic auction is NP-complete, even for a single bidder with a uniform distribution over types.",
                "Proof.",
                "The problem is in NP because we can nondeterministically generate an allocation rule, and then set the payments using linear programming.",
                "To show NP-hardness, we reduce an arbitrary paymentmaximizing deterministic AMD instance, with a single agent and a uniform distribution over types, to the following optimal combinatorial auction design problem instance with a single bidder with best-only preferences.",
                "For every outcome o ∈ O in the AMD instance (besides the outcome o0), let there be one item so ∈ S. Let the type space be the same, and let v(θi, so) = ui(θi, o) (where u is as specified in the AMD instance).",
                "Let the expected revenue target value be the same in both instances.",
                "We show the instances are equivalent.",
                "First suppose there exists a solution to the AMD instance, given by an outcome function and a payment function.",
                "Then, if the AMD solution chooses outcome o for a type, in the optimal auction solution, allocate {so} to the bidder for this type. (Unless o = o0, in which case we allocate {} to the bidder.)",
                "Let the payment functions be the same in both instances.",
                "Then, the utility that an agent receives for reporting a type (given the true type) in either solution is the same, so we have incentive compatibility in the optimal auction solution.",
                "Moreover, because the type distribution and the payment function are the same, the expected revenue to the auctioneer/designer is the same.",
                "It follows that there exists a solution to the optimal auction design instance.",
                "Now suppose there exists a solution to the optimal auction design instance.",
                "By the at-most-one-item observation, we can assume without loss of generality that the solution never allocates more than one item.",
                "Then, if the optimal auction solution allocates item so to the bidder for a type, in the AMD solution, let the mechanism choose outcome o for that type.",
                "If the optimal auction solution allocates nothing to the bidder for a type, in the AMD solution, let the mechanism choose outcome o0 for that type.",
                "Let the payment functions be the same.",
                "Then, the utility that an agent receives for reporting a type (given the true type) in either solution is the same, so we have incentive compatibility in the AMD solution.",
                "Moreover, because the type distribution and the payment function are the same, the expected revenue to the designer/auctioneer is the same.",
                "It follows that there exists a solution to the AMD instance.",
                "Fortunately, we can also carry through the easiness result for randomized mechanisms to this combinatorial auction setting-giving us one of the few known polynomial-time algorithms for an optimal combinatorial auction design problem.",
                "Theorem 5.",
                "Given an optimal combinatorial auction design problem under best-only preferences (given by a set of items S and for each bidder i, a finite type space Θi and a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s)), if the number of bidders is a constant k, then the optimal randomized auction can be designed in polynomial time. (For any IC and IR constraints.)",
                "Proof.",
                "By the at-most-one-item observation, we can without loss of generality restrict ourselves to allocations where each bidder receives at most one item.",
                "There are fewer than (|S| + 1)k such allocations-that is, a polynomial number of allocations.",
                "Because we can list the outcomes explicitly, we can simply solve this as a payment-maximizing AMD instance, with linear programming. 8.",
                "RELATED RESEARCH ON COMPLEXITY IN MECHANISM DESIGN There has been considerable recent interest in mechanism design in computer science.",
                "Some of it has focused on issues of computational complexity, but most of that work has strived toward designing mechanisms that are easy to execute (e.g. [20, 15, 19, 9, 12]), rather than studying the complexity of designing the mechanism.",
                "The closest piece of earlier work studied the complexity of automated mechanism design by a benevolent designer [5, 6].",
                "Roughgarden has studied the complexity of designing a good network topology for agents that selfishly choose the links they use [21].",
                "This is related to mechanism design, but differs significantly in that the designer only has restricted control over the rules of the game because there is no party that can impose the outcome (or side payments).",
                "Also, there is no explicit reporting of preferences. 9.",
                "CONCLUSIONS AND FUTURE RESEARCH Often, an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "The key difficulty is that the agents may report their preferences insincerely to make the chosen outcome more favorable to themselves.",
                "Mechanism design is the art of designing the rules of the game so that the agents are motivated to report their preferences truthfully, and a desirable outcome is chosen.",
                "In a recently emerging approach-called automated mechanism design-a mechanism is computed for the specific preference aggregation setting at hand.",
                "This has several advantages, 139 but the downside is that the mechanism design optimization problem needs to be solved anew each time.",
                "Unlike earlier work on automated mechanism design that studied a benevolent designer, in this paper we studied automated mechanism design problems where the designer is self-interesteda setting much more relevant for electronic commerce.",
                "In this setting, the center cares only about which outcome is chosen and what payments are made to it.",
                "The reason that the agents preferences are relevant is that the center is constrained to making each agent at least as well off as the agent would have been had it not participated in the mechanism.",
                "In this setting, we showed that designing an optimal deterministic mechanism is NP-complete in two important special cases: when the center is interested only in the payments made to it, and when payments are not possible and the center is interested only in the outcome chosen.",
                "These hardness results imply hardness in all more general automated mechanism design settings with a self-interested designer.",
                "The hardness results apply whether the individual rationality (participation) constraints are applied ex interim or ex post, and whether the solution concept is dominant strategies implementation or Bayes-Nash equilibrium implementation.",
                "We then showed that allowing randomization in the mechanism makes the design problem in all these settings computationally easy.",
                "Finally, we showed that the paymentmaximizing AMD problem is closely related to an interesting variant of the optimal (revenue-maximizing) combinatorial auction design problem, where the bidders have best-only preferences.",
                "We showed that here, too, designing an optimal deterministic mechanism is NP-complete even with one agent, but designing an optimal randomized mechanism is easy.",
                "Future research includes studying automated mechanism design with a self-interested designer in more restricted settings such as auctions (where the designers objective may include preferences about which bidder should receive the good-as well as payments).",
                "We also want to study the complexity of automated mechanism design in settings where the outcome and type spaces have special structure so they can be represented more concisely.",
                "Finally, we plan to assemble a data set of real-world mechanism design problems-both historical and current-and apply automated mechanism design to those problems. 10.",
                "REFERENCES [1] M. Armstrong.",
                "Optimal multi-object auctions.",
                "Review of Economic Studies, 67:455-481, 2000. [2] K. Arrow.",
                "The property rights doctrine and demand revelation under incomplete information.",
                "In M. Boskin, editor, Economics and human welfare.",
                "New York Academic Press, 1979. [3] C. Avery and T. Hendershott.",
                "Bundling and optimal auctions of multiple products.",
                "Review of Economic Studies, 67:483-497, 2000. [4] E. H. Clarke.",
                "Multipart pricing of public goods.",
                "Public Choice, 11:17-33, 1971. [5] V. Conitzer and T. Sandholm.",
                "Complexity of mechanism design.",
                "In Proceedings of the 18th Annual Conference on Uncertainty in Artificial Intelligence (UAI-02), pages 103-110, Edmonton, Canada, 2002. [6] V. Conitzer and T. Sandholm.",
                "Automated mechanism design: Complexity results stemming from the single-agent setting.",
                "In Proceedings of the 5th International Conference on Electronic Commerce (ICEC-03), pages 17-24, Pittsburgh, PA, USA, 2003. [7] V. Conitzer and T. Sandholm.",
                "Computational criticisms of the revelation principle.",
                "In Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), New York, NY, 2004.",
                "Short paper.",
                "Full-length version appeared in the AAMAS-03 workshop on Agent-Mediated Electronic Commerce (AMEC). [8] C. dAspremont and L. A. G´erard-Varet.",
                "Incentives and incomplete information.",
                "Journal of Public Economics, 11:25-45, 1979. [9] J. Feigenbaum, C. Papadimitriou, and S. Shenker.",
                "Sharing the cost of muliticast transmissions.",
                "Journal of Computer and System Sciences, 63:21-41, 2001.",
                "Early version in Proceedings of the Annual ACM Symposium on Theory of Computing (STOC), 2000. [10] A. Gibbard.",
                "Manipulation of voting schemes.",
                "Econometrica, 41:587-602, 1973. [11] T. Groves.",
                "Incentives in teams.",
                "Econometrica, 41:617-631, 1973. [12] J. Hershberger and S. Suri.",
                "Vickrey prices and shortest paths: What is an edge worth?",
                "In Proceedings of the Annual Symposium on Foundations of Computer Science (FOCS), 2001. [13] L. Khachiyan.",
                "A polynomial algorithm in linear programming.",
                "Soviet Math.",
                "Doklady, 20:191-194, 1979. [14] R. Kohli, R. Krishnamurthi, and P. Mirchandani.",
                "The minimum satisfiability problem.",
                "SIAM Journal of Discrete Mathematics, 7(2):275-283, 1994. [15] D. Lehmann, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in rapid, approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002.",
                "Early version appeared in Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), 1999. [16] A. Mas-Colell, M. Whinston, and J. R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [17] E. S. Maskin and J. Riley.",
                "Optimal multi-unit auctions.",
                "In F. Hahn, editor, The Economics of Missing Markets, Information, and Games, chapter 14, pages 312-335.",
                "Clarendon Press, Oxford, 1989. [18] R. Myerson.",
                "Optimal auction design.",
                "Mathematics of Operation Research, 6:58-73, 1981. [19] N. Nisan and A. Ronen.",
                "Computationally feasible VCG mechanisms.",
                "In Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), pages 242-252, Minneapolis, MN, 2000. [20] N. Nisan and A. Ronen.",
                "Algorithmic mechanism design.",
                "Games and Economic Behavior, 35:166-196, 2001.",
                "Early version in Proceedings of the Annual ACM Symposium on Theory of Computing (STOC), 1999. [21] T. Roughgarden.",
                "Designing networks for selfish users is hard.",
                "In Proceedings of the Annual Symposium on Foundations of Computer Science (FOCS), 2001. [22] T. Sandholm.",
                "Issues in computational Vickrey auctions.",
                "International Journal of Electronic Commerce, 4(3):107-129, 2000.",
                "Special Issue on 140 Applying Intelligent Agents for Electronic Commerce.",
                "A short, early version appeared at the Second International Conference on Multi-Agent Systems (ICMAS), pages 299-306, 1996. [23] M. A. Satterthwaite.",
                "Strategy-proofness and Arrows conditions: existence and correspondence theorems for voting procedures and social welfare functions.",
                "Journal of Economic Theory, 10:187-217, 1975. [24] W. Vickrey.",
                "Counterspeculation, auctions, and competitive sealed tenders.",
                "Journal of Finance, 16:8-37, 1961. [25] R. V. Vohra.",
                "Research problems in combinatorial auctions.",
                "Mimeo, version Oct. 29, 2001. 141"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Primero, necesitamos formalizar el concepto del \"resultado de la altura\".",
                "En cualquier configuración de diseño de mecanismo automatizado con una restricción IR, hay un \"resultado de retroceso\" o0 ∈ O donde, para cualquier agente I y cualquier tipo θi ∈ θi, tenemos ui (θi, o0) = 0. (además, en elCaso de un diseñador interesado, G (O0) = 0.)"
            ],
            "translated_text": "",
            "candidates": [
                "Resultado de retroceso",
                "resultado de la altura",
                "Resultado de la altura",
                "resultado de retroceso"
            ],
            "error": []
        },
        "automated mechanism design": {
            "translated_key": "diseño de mecanismos automatizados",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Self-interested <br>automated mechanism design</br> and Implications for Optimal Combinatorial Auctions∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT Often, an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "The key difficulty is that the agents may report their preferences insincerely to make the chosen outcome more favorable to themselves.",
                "Mechanism design is the art of designing the rules of the game so that the agents are motivated to report their preferences truthfully, and a desirable outcome is chosen.",
                "In a recently proposed approach-called <br>automated mechanism design</br>-a mechanism is computed for the preference aggregation setting at hand.",
                "This has several advantages, but the downside is that the mechanism design optimization problem needs to be solved anew each time.",
                "Unlike the earlier work on <br>automated mechanism design</br> that studied a benevolent designer, in this paper we study <br>automated mechanism design</br> problems where the designer is self-interested.",
                "In this case, the center cares only about which outcome is chosen and what payments are made to it.",
                "The reason that the agents preferences are relevant is that the center is constrained to making each agent at least as well off as the agent would have been had it not participated in the mechanism.",
                "In this setting, we show that designing optimal deterministic mechanisms is NP-complete in two important special cases: when the center is interested only in the payments made to it, and when payments are not possible and the center is interested only in the outcome chosen.",
                "We then show how allowing for randomization in the mechanism makes problems in this setting computationally easy.",
                "Finally, we show that the payment-maximizing AMD problem is closely related to an interesting variant of the optimal (revenuemaximizing) combinatorial auction design problem, where the bidders have best-only preferences.",
                "We show that here, too, designing an optimal deterministic auction is NPcomplete, but designing an optimal randomized auction is easy.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In multiagent settings, often an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "Such outcomes could be potential presidents, joint plans, allocations of goods or resources, etc.",
                "The preference aggregator generally does not know the agents preferences a priori.",
                "Rather, the agents report their preferences to the coordinator.",
                "Unfortunately, an agent may have an incentive to misreport its preferences in order to mislead the mechanism into selecting an outcome that is more desirable to the agent than the outcome that would be selected if the agent revealed its preferences truthfully.",
                "Such manipulation is undesirable because preference aggregation mechanisms are tailored to aggregate preferences in a socially desirable way, and if the agents reveal their preferences insincerely, a socially undesirable outcome may be chosen.",
                "Manipulability is a pervasive problem across preference aggregation mechanisms.",
                "A seminal negative result, the Gibbard-Satterthwaite theorem, shows that under any nondictatorial preference aggregation scheme, if there are at least 3 possible outcomes, there are preferences under which an agent is better off reporting untruthfully [10, 23]. (A preference aggregation scheme is called dictatorial if one of the agents dictates the outcome no matter what preferences the other agents report.)",
                "What the aggregator would like to do is design a preference aggregation mechanism so that 1) the self-interested agents are motivated to report their preferences truthfully, and 2) the mechanism chooses an outcome that is desirable from the perspective of some objective.",
                "This is the classic setting of mechanism design in game theory.",
                "In this paper, we study the case where the designer is self-interested, that is, the designer does not directly care about how the out132 come relates to the agents preferences, but is rather concerned with its own agenda for which outcome should be chosen, and with maximizing payments to itself.",
                "This is the mechanism design setting most relevant to electronic commerce.",
                "In the case where the mechanism designer is interested in maximizing some notion of social welfare, the importance of collecting the agents preferences is clear.",
                "It is perhaps less obvious why they should be collected when the designer is self-interested and hence its objective is not directly related to the agents preferences.",
                "The reason for this is that often the agents preferences impose limits on how the designer chooses the outcome and payments.",
                "The most common such constraint is that of individual rationality (IR), which means that the mechanism cannot make any agent worse off than the agent would have been had it not participated in the mechanism.",
                "For instance, in the setting of optimal auction design, the designer (auctioneer) is only concerned with how much revenue is collected, and not per se with how well the allocation of the good (or goods) corresponds to the agents preferences.",
                "Nevertheless, the designer cannot force an agent to pay more than its valuation for the bundle of goods allocated to it.",
                "Therefore, even a self-interested designer will choose an outcome that makes the agents reasonably well off.",
                "On the other hand, the designer will not necessarily choose a social welfare maximizing outcome.",
                "For example, if the designer always chooses an outcome that maximizes social welfare with respect to the reported preferences, and forces each agent to pay the difference between the utility it has now and the utility it would have had if it had not participated in the mechanism, it is easy to see that agents may have an incentive to misreport their preferences-and this may actually lead to less revenue being collected.",
                "Indeed, one of the counterintuitive results of optimal auction design theory is that sometimes the good is allocated to nobody even when the auctioneer has a reservation price of 0.",
                "Classical mechanism design provides some general mechanisms, which, under certain assumptions, satisfy some notion of nonmanipulability and maximize some objective.",
                "The upside of these mechanisms is that they do not rely on (even probabilistic) information about the agents preferences (e.g., the Vickrey-Clarke-Groves (VCG) mechanism [24, 4, 11]), or they can be easily applied to any probability distribution over the preferences (e.g., the dAGVA mechanism [8, 2], the Myerson auction [18], and the Maskin-Riley multi-unit auction [17]).",
                "However, the general mechanisms also have significant downsides: • The most famous and most broadly applicable general mechanisms, VCG and dAGVA, only maximize social welfare.",
                "If the designer is self-interested, as is the case in many electronic commerce settings, these mechanisms do not maximize the designers objective. • The general mechanisms that do focus on a selfinterested designer are only applicable in very restricted settings-such as Myersons expected revenue maximizing auction for selling a single item, and Maskin and Rileys expected revenue maximizing auction for selling multiple identical units of an item. • Even in the restricted settings in which these mechanisms apply, the mechanisms only allow for payment maximization.",
                "In practice, the designer may also be interested in the outcome per se.",
                "For example, an auctioneer may care which bidder receives the item. • It is often assumed that side payments can be used to tailor the agents incentives, but this is not always practical.",
                "For example, in barter-based electronic marketplaces-such as Recipco, firstbarter.com, BarterOne, and Intagio-side payments are not allowed.",
                "Furthermore, among software agents, it might be more desirable to construct mechanisms that do not rely on the ability to make payments, because many software agents do not have the infrastructure to make payments.",
                "In contrast, we follow a recent approach where the mechanism is designed automatically for the specific problem at hand.",
                "This approach addresses all of the downsides listed above.",
                "We formulate the mechanism design problem as an optimization problem.",
                "The input is characterized by the number of agents, the agents possible types (preferences), and the aggregators prior distributions over the agents types.",
                "The output is a nonmanipulable mechanism that is optimal with respect to some objective.",
                "This approach is called <br>automated mechanism design</br>.",
                "The <br>automated mechanism design</br> approach has four advantages over the classical approach of designing general mechanisms.",
                "First, it can be used even in settings that do not satisfy the assumptions of the classical mechanisms (such as availability of side payments or that the objective is social welfare).",
                "Second, it may allow one to circumvent impossibility results (such as the Gibbard-Satterthwaite theorem) which state that there is no mechanism that is desirable across all preferences.",
                "When the mechanism is designed for the setting at hand, it does not matter that it would not work more generally.",
                "Third, it may yield better mechanisms (in terms of stronger nonmanipulability guarantees and/or better outcomes) than classical mechanisms because the mechanism capitalizes on the particulars of the setting (the probabilistic information that the designer has about the agents types).",
                "Given the vast amount of information that parties have about each other today, this approach is likely to lead to tremendous savings over classical mechanisms, which largely ignore that information.",
                "For example, imagine a company automatically creating its procurement mechanism based on statistical knowledge about its suppliers, rather than using a classical descending procurement auction.",
                "Fourth, the burden of design is shifted from humans to a machine.",
                "However, <br>automated mechanism design</br> requires the mechanism design optimization problem to be solved anew for each setting.",
                "Hence its computational complexity becomes a key issue.",
                "Previous research has studied this question for benevolent designers-that wish to maximize, for example, social welfare [5, 6].",
                "In this paper we study the computational complexity of <br>automated mechanism design</br> in the case of a self-interested designer.",
                "This is an important setting for <br>automated mechanism design</br> due to the shortage of general mechanisms in this area, and the fact that in most e-commerce settings the designer is self-interested.",
                "We also show that this problem is closely related to a particular optimal (revenue-maximizing) combinatorial auction design problem. 133 The rest of this paper is organized as follows.",
                "In Section 2, we justify the focus on nonmanipulable mechanisms.",
                "In Section 3, we define the problem we study.",
                "In Section 4, we show that designing an optimal deterministic mechanism is NP-complete even when the designer only cares about the payments made to it.",
                "In Section 5, we show that designing an optimal deterministic mechanism is also NP-complete when payments are not possible and the designer is only interested in the outcome chosen.",
                "In Section 6, we show that an optimal randomized mechanism can be designed in polynomial time even in the general case.",
                "Finally, in Section 7, we show that for designing optimal combinatorial auctions under best-only preferences, our results on AMD imply that this problem is NP-complete for deterministic auctions, but easy for randomized auctions. 2.",
                "JUSTIFYING THE FOCUS ON NONMANIPULABLE MECHANISMS Before we define the computational problem of <br>automated mechanism design</br>, we should justify our focus on nonmanipulable mechanisms.",
                "After all, it is not immediately obvious that there are no manipulable mechanisms that, even when agents report their types strategically and hence sometimes untruthfully, still reach better outcomes (according to whatever objective we use) than any nonmanipulable mechanism.",
                "This does, however, turn out to be the case: given any mechanism, we can construct a nonmanipulable mechanism whose performance is identical, as follows.",
                "We build an interface layer between the agents and the original mechanism.",
                "The agents report their preferences (or types) to the interface layer; subsequently, the interface layer inputs into the original mechanism the types that the agents would have strategically reported to the original mechanism, if their types were as declared to the interface layer.",
                "The resulting outcome is the outcome of the new mechanism.",
                "Since the interface layer acts strategically on each agents behalf, there is never an incentive to report falsely to the interface layer; and hence, the types reported by the interface layer are the strategic types that would have been reported without the interface layer, so the results are exactly as they would have been with the original mechanism.",
                "This argument is known in the mechanism design literature as the revelation principle [16]. (There are computational difficulties with applying the revelation principle in large combinatorial outcome and type spaces [7, 22].",
                "However, because here we focus on flatly represented outcome and type spaces, this is not a concern here.)",
                "Given this, we can focus on truthful mechanisms in the rest of the paper. 3.",
                "DEFINITIONS We now formalize the <br>automated mechanism design</br> setting.",
                "Definition 1.",
                "In an <br>automated mechanism design</br> setting, we are given: • a finite set of outcomes O; • a finite set of N agents; • for each agent i, 1. a finite set of types Θi, 2. a probability distribution γi over Θi (in the case of correlated types, there is a single joint distribution γ over Θ1 × . . . × ΘN ), and 3. a utility function ui : Θi × O → R; 1 • An objective function whose expectation the designer wishes to maximize.",
                "There are many possible objective functions the designer might have, for example, social welfare (where the designer seeks to maximize the sum of the agents utilities), or the minimum utility of any agent (where the designer seeks to maximize the worst utility had by any agent).",
                "In both of these cases, the designer is benevolent, because the designer, in some sense, is pursuing the agents collective happiness.",
                "However, in this paper, we focus on the case of a self-interested designer.",
                "A self-interested designer cares only about the outcome chosen (that is, the designer does not care how the outcome relates to the agents preferences, but rather has a fixed preference over the outcomes), and about the net payments made by the agents, which flow to the designer.",
                "Definition 2.",
                "A self-interested designer has an objective function given by g(o) + N i=1 πi, where g : O → R indicates the designers own preference over the outcomes, and πi is the payment made by agent i.",
                "In the case where g = 0 everywhere, the designer is said to be payment maximizing.",
                "In the case where payments are not possible, g constitutes the objective function by itself.",
                "We now define the kinds of mechanisms under study.",
                "By the revelation principle, we can restrict attention to truthful, direct revelation mechanisms, where agents report their types directly and never have an incentive to misreport them.",
                "Definition 3.",
                "We consider the following kinds of mechanism: • A deterministic mechanism without payments consists of an outcome selection function o : Θ1 × Θ2 × . . . × ΘN → O. • A randomized mechanism without payments consists of a distribution selection function p : Θ1 × Θ2 × . . . × ΘN → P(O), where P(O) is the set of probability distributions over O. • A deterministic mechanism with payments consists of an outcome selection function o : Θ1 ×Θ2 ×. . .×ΘN → O and for each agent i, a payment selection function πi : Θ1 × Θ2 × . . . × ΘN → R, where πi(θ1, . . . , θN ) gives the payment made by agent i when the reported types are θ1, . . . , θN . 1 Though this follows standard game theory notation [16], the fact that the agent has both a utility function and a type is perhaps confusing.",
                "The types encode the various possible preferences that the agent may turn out to have, and the agents type is not known to the aggregator.",
                "The utility function is common knowledge, but because the agents type is a parameter in the agents utility function, the aggregator cannot know what the agents utility is without knowing the agents type. 134 • A randomized mechanism with payments consists of a distribution selection function p : Θ1 × Θ2 × . . . × ΘN → P(O), and for each agent i, a payment selection function πi : Θ1 × Θ2 × . . . × ΘN → R.2 There are two types of constraint on the designer in building the mechanism. 3.1 Individual rationality (IR) constraints The first type of constraint is the following.",
                "The utility of each agent has to be at least as great as the agents fallback utility, that is, the utility that the agent would receive if it did not participate in the mechanism.",
                "Otherwise that agent would not participate in the mechanism-and no agents participation can ever hurt the mechanism designers objective because at worst, the mechanism can ignore an agent by pretending the agent is not there. (Furthermore, if no such constraint applied, the designer could simply make the agents pay an infinite amount.)",
                "This type of constraint is called an IR (individual rationality) constraint.",
                "There are three different possible IR constraints: ex ante, ex interim, and ex post, depending on what the agent knows about its own type and the others types when deciding whether to participate in the mechanism.",
                "Ex ante IR means that the agent would participate if it knew nothing at all (not even its own type).",
                "We will not study this concept in this paper.",
                "Ex interim IR means that the agent would always participate if it knew only its own type, but not those of the others.",
                "Ex post IR means that the agent would always participate even if it knew everybodys type.",
                "We will define the latter two notions of IR formally.",
                "First, we need to formalize the concept of the fallback outcome.",
                "We assume that each agents fallback utility is zero for each one of its types.",
                "This is without loss of generality because we can add a constant term to an agents utility function (for a given type), without affecting the decision-making behavior of that expected utility maximizing agent [16].",
                "Definition 4.",
                "In any <br>automated mechanism design</br> setting with an IR constraint, there is a fallback outcome o0 ∈ O where, for any agent i and any type θi ∈ Θi, we have ui(θi, o0) = 0. (Additionally, in the case of a self-interested designer, g(o0) = 0.)",
                "We can now to define the notions of individual rationality.",
                "Definition 5.",
                "Individual rationality (IR) is defined by: • A deterministic mechanism is ex interim IR if for any agent i, and any type θi ∈ Θi, we have E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, .., θN ))−πi(θ1, .., θN )] ≥ 0.",
                "A randomized mechanism is ex interim IR if for any agent i, and any type θi ∈ Θi, we have E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,..,θn [ui(θi, o)−πi(θ1, .., θN )] ≥ 0. • A deterministic mechanism is ex post IR if for any agent i, and any type vector (θ1, . . . , θN ) ∈ Θ1 × . . . × ΘN , we have ui(θi, o(θ1, . . . , θN )) − πi(θ1, . . . , θN ) ≥ 0. 2 We do not randomize over payments because as long as the agents and the designer are risk neutral with respect to payments, that is, their utility is linear in payments, there is no reason to randomize over payments.",
                "A randomized mechanism is ex post IR if for any agent i, and any type vector (θ1, . . . , θN ) ∈ Θ1 × . . . × ΘN , we have Eo|θ1,..,θn [ui(θi, o) − πi(θ1, .., θN )] ≥ 0.",
                "The terms involving payments can be left out in the case where payments are not possible. 3.2 Incentive compatibility (IC) constraints The second type of constraint says that the agents should never have an incentive to misreport their type (as justified above by the revelation principle).",
                "For this type of constraint, the two most common variants (or solution concepts) are implementation in dominant strategies, and implementation in Bayes-Nash equilibrium.",
                "Definition 6.",
                "Given an <br>automated mechanism design</br> setting, a mechanism is said to implement its outcome and payment functions in dominant strategies if truthtelling is always optimal even when the types reported by the other agents are already known.",
                "Formally, for any agent i, any type vector (θ1, . . . , θi, . . . , θN ) ∈ Θ1 × . . . × Θi × . . . × ΘN , and any alternative type report ˆθi ∈ Θi, in the case of deterministic mechanisms we have ui(θi, o(θ1, . . . , θi, . . . , θN )) − πi(θ1, . . . , θi, . . . , θN ) ≥ ui(θi, o(θ1, . . . , ˆθi, . . . , θN )) − πi(θ1, . . . , ˆθi, . . . , θN ).",
                "In the case of randomized mechanisms we have Eo|θ1,..,θi,..,θn [ui(θi, o) − πi(θ1, . . . , θi, . . . , θN )] ≥ Eo|θ1,.., ˆθi,..,θn [ui(θi, o) − πi(θ1, . . . , ˆθi, . . . , θN )].",
                "The terms involving payments can be left out in the case where payments are not possible.",
                "Thus, in dominant strategies implementation, truthtelling is optimal regardless of what the other agents report.",
                "If it is optimal only given that the other agents are truthful, and given that one does not know the other agents types, we have implementation in Bayes-Nash equilibrium.",
                "Definition 7.",
                "Given an <br>automated mechanism design</br> setting, a mechanism is said to implement its outcome and payment functions in Bayes-Nash equilibrium if truthtelling is always optimal to an agent when that agent does not yet know anything about the other agents types, and the other agents are telling the truth.",
                "Formally, for any agent i, any type θi ∈ Θi, and any alternative type report ˆθi ∈ Θi, in the case of deterministic mechanisms we have E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, . . . , θi, . . . , θN ))− πi(θ1, . . . , θi, . . . , θN )] ≥ E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, . . . , ˆθi, . . . , θN ))− πi(θ1, . . . , ˆθi, . . . , θN )].",
                "In the case of randomized mechanisms we have E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,..,θi,..,θn [ui(θi, o)− πi(θ1, . . . , θi, . . . , θN )] ≥ E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,.., ˆθi,..,θn [ui(θi, o)− πi(θ1, . . . , ˆθi, . . . , θN )].",
                "The terms involving payments can be left out in the case where payments are not possible. 135 3.3 <br>automated mechanism design</br> We can now define the computational problem we study.",
                "Definition 8. (AUTOMATED-MECHANISM-DESIGN (AMD)) We are given: • an <br>automated mechanism design</br> setting, • an IR notion (ex interim, ex post, or none), • a solution concept (dominant strategies or Bayes-Nash), • whether payments are possible, • whether randomization is possible, • (in the decision variant of the problem) a target value G. We are asked whether there exists a mechanism of the specified kind (in terms of payments and randomization) that satisfies both the IR notion and the solution concept, and gives an expected value of at least G for the objective.",
                "An interesting special case is the setting where there is only one agent.",
                "In this case, the reporting agent always knows everything there is to know about the other agents types-because there are no other agents.",
                "Since ex post and ex interim IR only differ on what an agent is assumed to know about other agents types, the two IR concepts coincide here.",
                "Also, because implementation in dominant strategies and implementation in Bayes-Nash equilibrium only differ on what an agent is assumed to know about other agents types, the two solution concepts coincide here.",
                "This observation will prove to be a useful tool in proving hardness results: if we prove computational hardness in the singleagent setting, this immediately implies hardness for both IR concepts, for both solution concepts, for any number of agents. 4.",
                "PAYMENT-MAXIMIZINGDETERMINISTIC AMD IS HARD In this section we demonstrate that it is NP-complete to design a deterministic mechanism that maximizes the expected sum of the payments collected from the agents.",
                "We show that this problem is hard even in the single-agent setting, thereby immediately showing it hard for both IR concepts, for both solution concepts.",
                "To demonstrate NPhardness, we reduce from the MINSAT problem.",
                "Definition 9 (MINSAT).",
                "We are given a formula φ in conjunctive normal form, represented by a set of Boolean variables V and a set of clauses C, and an integer K (K < |C|).",
                "We are asked whether there exists an assignment to the variables in V such that at most K clauses in φ are satisfied.",
                "MINSAT was recently shown to be NP-complete [14].",
                "We can now present our result.",
                "Theorem 1.",
                "Payment-maximizing deterministic AMD is NP-complete, even for a single agent, even with a uniform distribution over types.",
                "Proof.",
                "It is easy to show that the problem is in NP.",
                "To show NP-hardness, we reduce an arbitrary MINSAT instance to the following single-agent payment-maximizing deterministic AMD instance.",
                "Let the agents type set be Θ = {θc : c ∈ C} ∪ {θv : v ∈ V }, where C is the set of clauses in the MINSAT instance, and V is the set of variables.",
                "Let the probability distribution over these types be uniform.",
                "Let the outcome set be O = {o0} ∪ {oc : c ∈ C} ∪ {ol : l ∈ L}, where L is the set of literals, that is, L = {+v : v ∈ V } ∪ {−v : v ∈ V }.",
                "Let the notation v(l) = v denote that v is the variable corresponding to the literal l, that is, l ∈ {+v, −v}.",
                "Let l ∈ c denote that the literal l occurs in clause c. Then, let the agents utility function be given by u(θc, ol) = |Θ| + 1 for all l ∈ L with l ∈ c; u(θc, ol) = 0 for all l ∈ L with l /∈ c; u(θc, oc) = |Θ| + 1; u(θc, oc ) = 0 for all c ∈ C with c = c ; u(θv, ol) = |Θ| for all l ∈ L with v(l) = v; u(θv, ol) = 0 for all l ∈ L with v(l) = v; u(θv, oc) = 0 for all c ∈ C. The goal of the AMD instance is G = |Θ| + |C|−K |Θ| , where K is the goal of the MINSAT instance.",
                "We show the instances are equivalent.",
                "First, suppose there is a solution to the MINSAT instance.",
                "Let the assignment of truth values to the variables in this solution be given by the function f : V → L (where v(f(v)) = v for all v ∈ V ).",
                "Then, for every v ∈ V , let o(θv) = of(v) and π(θv) = |Θ|.",
                "For every c ∈ C, let o(θc) = oc; let π(θc) = |Θ| + 1 if c is not satisfied in the MINSAT solution, and π(θc) = |Θ| if c is satisfied.",
                "It is straightforward to check that the IR constraint is satisfied.",
                "We now check that the agent has no incentive to misreport.",
                "If the agents type is some θv, then any other report will give it an outcome that is no better, for a payment that is no less, so it has no incentive to misreport.",
                "If the agents type is some θc where c is a satisfied clause, again, any other report will give it an outcome that is no better, for a payment that is no less, so it has no incentive to misreport.",
                "The final case to check is where the agents type is some θc where c is an unsatisfied clause.",
                "In this case, we observe that for none of the types, reporting it leads to an outcome ol for a literal l ∈ c, precisely because the clause is not satisfied in the MINSAT instance.",
                "Because also, no type besides θc leads to the outcome oc, reporting any other type will give an outcome with utility 0, while still forcing a payment of at least |Θ| from the agent.",
                "Clearly the agent is better off reporting truthfully, for a total utility of 0.",
                "This establishes that the agent never has an incentive to misreport.",
                "Finally, we show that the goal is reached.",
                "If s is the number of satisfied clauses in the MINSAT solution (so that s ≤ K), the expected payment from this mechanism is |V ||Θ|+s|Θ|+(|C|−s)(|Θ|+1) |Θ| ≥ |V ||Θ|+K|Θ|+(|C|−K)(|Θ|+1) |Θ| = |Θ| + |C|−K |Θ| = G. So there is a solution to the AMD instance.",
                "Now suppose there is a solution to the AMD instance, given by an outcome function o and a payment function π.",
                "First, suppose there is some v ∈ V such that o(θv) /∈ {o+v, o−v}.",
                "Then the utility that the agent derives from the given outcome for this type is 0, and hence, by IR, no payment can be extracted from the agent for this type.",
                "Because, again by IR, the maximum payment that can be extracted for any other type is |Θ| + 1, it follows that the maximum expected payment that could be obtained is at most (|Θ|−1)(|Θ|+1) |Θ| < |Θ| < G, contradicting that this is a solution to the AMD instance.",
                "It follows that in the solution to the AMD instance, for every v ∈ V , o(θv) ∈ {o+v, o−v}. 136 We can interpret this as an assignment of truth values to the variables: v is set to true if o(θv) = o+v, and to false if o(θv) = o−v.",
                "We claim this assignment is a solution to the MINSAT instance.",
                "By the IR constraint, the maximum payment we can extract from any type θv is |Θ|.",
                "Because there can be no incentives for the agent to report falsely, for any clause c satisfied by the given assignment, the maximum payment we can extract for the corresponding type θc is |Θ|. (For if we extracted more from this type, the agents utility in this case would be less than 1; and if v is the variable satisfying c in the assignment, so that o(θv) = ol where l occurs in c, then the agent would be better off reporting θv instead of the truthful report θc, to get an outcome worth |Θ|+1 to it while having to pay at most |Θ|.)",
                "Finally, for any unsatisfied clause c, by the IR constraint, the maximum payment we can extract for the corresponding type θc is |Θ| + 1.",
                "It follows that the expected payment from our mechanism is at most V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ , where s is the number of satisfied clauses.",
                "Because our mechanism achieves the goal, it follows that V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ ≥ G, which by simple algebraic manipulations is equivalent to s ≤ K. So there is a solution to the MINSAT instance.",
                "Because payment-maximizing AMD is just the special case of AMD for a self-interested designer where the designer has no preferences over the outcome chosen, this immediately implies hardness for the general case of AMD for a selfinterested designer where payments are possible.",
                "However, it does not yet imply hardness for the special case where payments are not possible.",
                "We will prove hardness in this case in the next section. 5.",
                "SELF-INTERESTED DETERMINISTIC AMD WITHOUT PAYMENTS IS HARD In this section we demonstrate that it is NP-complete to design a deterministic mechanism that maximizes the expectation of the designers objective when payments are not possible.",
                "We show that this problem is hard even in the single-agent setting, thereby immediately showing it hard for both IR concepts, for both solution concepts.",
                "Theorem 2.",
                "Without payments, deterministic AMD for a self-interested designer is NP-complete, even for a single agent, even with a uniform distribution over types.",
                "Proof.",
                "It is easy to show that the problem is in NP.",
                "To show NP-hardness, we reduce an arbitrary MINSAT instance to the following single-agent self-interested deterministic AMD without payments instance.",
                "Let the agents type set be Θ = {θc : c ∈ C} ∪ {θv : v ∈ V }, where C is the set of clauses in the MINSAT instance, and V is the set of variables.",
                "Let the probability distribution over these types be uniform.",
                "Let the outcome set be O = {o0} ∪ {oc : c ∈ C}∪{ol : l ∈ L}∪{o∗ }, where L is the set of literals, that is, L = {+v : v ∈ V } ∪ {−v : v ∈ V }.",
                "Let the notation v(l) = v denote that v is the variable corresponding to the literal l, that is, l ∈ {+v, −v}.",
                "Let l ∈ c denote that the literal l occurs in clause c. Then, let the agents utility function be given by u(θc, ol) = 2 for all l ∈ L with l ∈ c; u(θc, ol) = −1 for all l ∈ L with l /∈ c; u(θc, oc) = 2; u(θc, oc ) = −1 for all c ∈ C with c = c ; u(θc, o∗ ) = 1; u(θv, ol) = 1 for all l ∈ L with v(l) = v; u(θv, ol) = −1 for all l ∈ L with v(l) = v; u(θv, oc) = −1 for all c ∈ C; u(θv, o∗ ) = −1.",
                "Let the designers objective function be given by g(o∗ ) = |Θ|+1; g(ol) = |Θ| for all l ∈ L; g(oc) = |Θ| for all c ∈ C. The goal of the AMD instance is G = |Θ| + |C|−K |Θ| , where K is the goal of the MINSAT instance.",
                "We show the instances are equivalent.",
                "First, suppose there is a solution to the MINSAT instance.",
                "Let the assignment of truth values to the variables in this solution be given by the function f : V → L (where v(f(v)) = v for all v ∈ V ).",
                "Then, for every v ∈ V , let o(θv) = of(v).",
                "For every c ∈ C that is satisfied in the MINSAT solution, let o(θc) = oc; for every unsatisfied c ∈ C, let o(θc) = o∗ .",
                "It is straightforward to check that the IR constraint is satisfied.",
                "We now check that the agent has no incentive to misreport.",
                "If the agents type is some θv, it is getting the maximum utility for that type, so it has no incentive to misreport.",
                "If the agents type is some θc where c is a satisfied clause, again, it is getting the maximum utility for that type, so it has no incentive to misreport.",
                "The final case to check is where the agents type is some θc where c is an unsatisfied clause.",
                "In this case, we observe that for none of the types, reporting it leads to an outcome ol for a literal l ∈ c, precisely because the clause is not satisfied in the MINSAT instance.",
                "Because also, no type leads to the outcome oc, there is no outcome that the mechanism ever selects that would give the agent utility greater than 1 for type θc, and hence the agent has no incentive to report falsely.",
                "This establishes that the agent never has an incentive to misreport.",
                "Finally, we show that the goal is reached.",
                "If s is the number of satisfied clauses in the MINSAT solution (so that s ≤ K), then the expected value of the designers objective function is |V ||Θ|+s|Θ|+(|C|−s)(|Θ|+1) |Θ| ≥ |V ||Θ|+K|Θ|+(|C|−K)(|Θ|+1) |Θ| = |Θ| + |C|−K |Θ| = G. So there is a solution to the AMD instance.",
                "Now suppose there is a solution to the AMD instance, given by an outcome function o.",
                "First, suppose there is some v ∈ V such that o(θv) /∈ {o+v, o−v}.",
                "The only other outcome that the mechanism is allowed to choose under the IR constraint is o0.",
                "This has an objective value of 0, and because the highest value the objective function ever takes is |Θ| + 1, it follows that the maximum expected value of the objective function that could be obtained is at most (|Θ|−1)(|Θ|+1) |Θ| < |Θ| < G, contradicting that this is a solution to the AMD instance.",
                "It follows that in the solution to the AMD instance, for every v ∈ V , o(θv) ∈ {o+v, o−v}.",
                "We can interpret this as an assignment of truth values to the variables: v is set to true if o(θv) = o+v, and to false if o(θv) = o−v.",
                "We claim this assignment is a solution to the MINSAT instance.",
                "By the above, for any type θv, the value of the objective function in this mechanism will be |Θ|.",
                "For any clause c satisfied by the given assignment, the value of the objective function in the case where the agent reports type θc will be at most |Θ|. (This is because we cannot choose the outcome o∗ for such a type, as in this case the agent would have an incentive to report θv instead, where v is the variable satisfying c in the assignment (so that o(θv) = ol where l occurs in c).)",
                "Finally, for any unsatisfied clause c, the maximum value the objective function can take in the case where the agent reports type θc is |Θ| + 1, simply because this is the largest value the function ever takes.",
                "It follows that the expected value of the objective function for our mechanism is at most V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ , where s is the number of satisfied 137 clauses.",
                "Because our mechanism achieves the goal, it follows that V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ ≥ G, which by simple algebraic manipulations is equivalent to s ≤ K. So there is a solution to the MINSAT instance.",
                "Both of our hardness results relied on the constraint that the mechanism should be deterministic.",
                "In the next section, we show that the hardness of design disappears when we allow for randomization in the mechanism. 6.",
                "RANDOMIZED AMD FOR A SELFINTERESTED DESIGNER IS EASY We now show how allowing for randomization over the outcomes makes the problem of self-interested AMD tractable through linear programming, for any constant number of agents.",
                "Theorem 3.",
                "Self-interested randomized AMD with a constant number of agents is solvable in polynomial time by linear programming, both with and without payments, both for ex post and ex interim IR, and both for implementation in dominant strategies and for implementation in Bayes-Nash equilibrium-even if the types are correlated.",
                "Proof.",
                "Because linear programs can be solved in polynomial time [13], all we need to show is that the number of variables and equations in our program is polynomial for any constant number of agents-that is, exponential only in N. Throughout, for purposes of determining the size of the linear program, let T = maxi{|Θi|}.",
                "The variables of our linear program will be the probabilities (p(θ1, θ2, . . . , θN ))(o) (at most TN |O| variables) and the payments πi(θ1, θ2, . . . , θN ) (at most NTN variables). (We show the linear program for the case where payments are possible; the case without payments is easily obtained from this by simply omitting all the payment variables in the program, or by adding additional constraints forcing the payments to be 0.)",
                "First, we show the IR constraints.",
                "For ex post IR, we add the following (at most NTN ) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, and for every (θ1, θ2, . . . , θN ) ∈ Θ1 × Θ2 × . . . × ΘN , we add ( o∈O (p(θ1, θ2, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , θN ) ≥ 0.",
                "For ex interim IR, we add the following (at most NT) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, for every θi ∈ Θi, we add θ1,... ,θN γ(θ1, . . . , θN |θi)(( o∈O (p(θ1, θ2, . . . , θN ))(o)u(θi, o))− πi(θ1, θ2, . . . , θN )) ≥ 0.",
                "Now, we show the solution concept constraints.",
                "For implementation in dominant strategies, we add the following (at most NTN+1 ) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, for every (θ1, θ2, . . . , θi, . . . , θN ) ∈ Θ1 × Θ2 × . . . × ΘN , and for every alternative type report ˆθi ∈ Θi, we add the constraint ( o∈O (p(θ1, θ2, . . . , θi, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , θi, . . . , θN ) ≥ ( o∈O (p(θ1, θ2, . . . , ˆθi, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , ˆθi, . . . , θN ).",
                "Finally, for implementation in Bayes-Nash equilibrium, we add the following (at most NT2 ) constraints to the LP: • For every i ∈ {1, 2, ..., N}, for every θi ∈ Θi, and for every alternative type report ˆθi ∈ Θi, we add the constraint θ1,...,θN γ(θ1, ..., θN |θi)(( o∈O (p(θ1, θ2, ..., θi, ..., θN ))(o)u(θi, o)) − πi(θ1, θ2, ..., θi, ..., θN )) ≥ θ1,...,θN γ(θ1, ..., θN |θi)(( o∈O (p(θ1, θ2, ..., ˆθi, ..., θN ))(o)u(θi, o)) − πi(θ1, θ2, ..., ˆθi, ..., θN )).",
                "All that is left to do is to give the expression the designer is seeking to maximize, which is: • θ1,...,θN γ(θ1, ..., θN )(( o∈O (p(θ1, θ2, ..., θi, ..., θN ))(o)g(o)) + N i=1 πi(θ1, θ2, ..., θN )).",
                "As we indicated, the number of variables and constraints is exponential only in N, and hence the linear program is of polynomial size for constant numbers of agents.",
                "Thus the problem is solvable in polynomial time. 7.",
                "IMPLICATIONS FOR AN OPTIMAL COMBINATORIAL AUCTION DESIGN PROBLEM In this section, we will demonstrate some interesting consequences of the problem of <br>automated mechanism design</br> for a self-interested designer on designing optimal combinatorial auctions.",
                "Consider a combinatorial auction with a set S of items for sale.",
                "For any bundle B ⊆ S, let ui(θi, B) be bidder is utility for receiving bundle B when the bidders type is θi.",
                "The optimal auction design problem is to specify the rules of the auction so as to maximize expected revenue to the auctioneer. (By the revelation principle, without loss of generality, we can assume the auction is truthful.)",
                "The optimal auction design problem is solved for the case of a single item by the famous Myerson auction [18].",
                "However, designing optimal auctions in combinatorial auctions is a recognized open research problem [3, 25].",
                "The problem is open even if there are only two items for sale. (The twoitem case with a very special form of complementarity and no substitutability has been solved recently [1].)",
                "Suppose we have free disposal-items can be thrown away at no cost.",
                "Also, suppose that the bidders preferences have the following structure: whenever a bidder receives a bundle of items, the bidders utility for that bundle is determined by the best item in the bundle only. (We emphasize that 138 which item is the best is allowed to depend on the bidders type.)",
                "Definition 10.",
                "Bidder i is said to have best-only preferences over bundles of items if there exists a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s).",
                "We make the following useful observation in this setting: there is no sense in awarding a bidder more than one item.",
                "The reason is that if the bidder is reporting truthfully, taking all but the highest valued item away from the bidder will not hurt the bidder; and, by free disposal, doing so can only reduce the incentive for this bidder to falsely report this type, when the bidder actually has another type.",
                "We now show that the problem of designing a deterministic optimal auction here is NP-complete, by a reduction from the payment maximizing AMD problem!",
                "Theorem 4.",
                "Given an optimal combinatorial auction design problem under best-only preferences (given by a set of items S and for each bidder i, a finite type space Θi and a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s)), designing the optimal deterministic auction is NP-complete, even for a single bidder with a uniform distribution over types.",
                "Proof.",
                "The problem is in NP because we can nondeterministically generate an allocation rule, and then set the payments using linear programming.",
                "To show NP-hardness, we reduce an arbitrary paymentmaximizing deterministic AMD instance, with a single agent and a uniform distribution over types, to the following optimal combinatorial auction design problem instance with a single bidder with best-only preferences.",
                "For every outcome o ∈ O in the AMD instance (besides the outcome o0), let there be one item so ∈ S. Let the type space be the same, and let v(θi, so) = ui(θi, o) (where u is as specified in the AMD instance).",
                "Let the expected revenue target value be the same in both instances.",
                "We show the instances are equivalent.",
                "First suppose there exists a solution to the AMD instance, given by an outcome function and a payment function.",
                "Then, if the AMD solution chooses outcome o for a type, in the optimal auction solution, allocate {so} to the bidder for this type. (Unless o = o0, in which case we allocate {} to the bidder.)",
                "Let the payment functions be the same in both instances.",
                "Then, the utility that an agent receives for reporting a type (given the true type) in either solution is the same, so we have incentive compatibility in the optimal auction solution.",
                "Moreover, because the type distribution and the payment function are the same, the expected revenue to the auctioneer/designer is the same.",
                "It follows that there exists a solution to the optimal auction design instance.",
                "Now suppose there exists a solution to the optimal auction design instance.",
                "By the at-most-one-item observation, we can assume without loss of generality that the solution never allocates more than one item.",
                "Then, if the optimal auction solution allocates item so to the bidder for a type, in the AMD solution, let the mechanism choose outcome o for that type.",
                "If the optimal auction solution allocates nothing to the bidder for a type, in the AMD solution, let the mechanism choose outcome o0 for that type.",
                "Let the payment functions be the same.",
                "Then, the utility that an agent receives for reporting a type (given the true type) in either solution is the same, so we have incentive compatibility in the AMD solution.",
                "Moreover, because the type distribution and the payment function are the same, the expected revenue to the designer/auctioneer is the same.",
                "It follows that there exists a solution to the AMD instance.",
                "Fortunately, we can also carry through the easiness result for randomized mechanisms to this combinatorial auction setting-giving us one of the few known polynomial-time algorithms for an optimal combinatorial auction design problem.",
                "Theorem 5.",
                "Given an optimal combinatorial auction design problem under best-only preferences (given by a set of items S and for each bidder i, a finite type space Θi and a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s)), if the number of bidders is a constant k, then the optimal randomized auction can be designed in polynomial time. (For any IC and IR constraints.)",
                "Proof.",
                "By the at-most-one-item observation, we can without loss of generality restrict ourselves to allocations where each bidder receives at most one item.",
                "There are fewer than (|S| + 1)k such allocations-that is, a polynomial number of allocations.",
                "Because we can list the outcomes explicitly, we can simply solve this as a payment-maximizing AMD instance, with linear programming. 8.",
                "RELATED RESEARCH ON COMPLEXITY IN MECHANISM DESIGN There has been considerable recent interest in mechanism design in computer science.",
                "Some of it has focused on issues of computational complexity, but most of that work has strived toward designing mechanisms that are easy to execute (e.g. [20, 15, 19, 9, 12]), rather than studying the complexity of designing the mechanism.",
                "The closest piece of earlier work studied the complexity of <br>automated mechanism design</br> by a benevolent designer [5, 6].",
                "Roughgarden has studied the complexity of designing a good network topology for agents that selfishly choose the links they use [21].",
                "This is related to mechanism design, but differs significantly in that the designer only has restricted control over the rules of the game because there is no party that can impose the outcome (or side payments).",
                "Also, there is no explicit reporting of preferences. 9.",
                "CONCLUSIONS AND FUTURE RESEARCH Often, an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "The key difficulty is that the agents may report their preferences insincerely to make the chosen outcome more favorable to themselves.",
                "Mechanism design is the art of designing the rules of the game so that the agents are motivated to report their preferences truthfully, and a desirable outcome is chosen.",
                "In a recently emerging approach-called <br>automated mechanism design</br>-a mechanism is computed for the specific preference aggregation setting at hand.",
                "This has several advantages, 139 but the downside is that the mechanism design optimization problem needs to be solved anew each time.",
                "Unlike earlier work on <br>automated mechanism design</br> that studied a benevolent designer, in this paper we studied <br>automated mechanism design</br> problems where the designer is self-interesteda setting much more relevant for electronic commerce.",
                "In this setting, the center cares only about which outcome is chosen and what payments are made to it.",
                "The reason that the agents preferences are relevant is that the center is constrained to making each agent at least as well off as the agent would have been had it not participated in the mechanism.",
                "In this setting, we showed that designing an optimal deterministic mechanism is NP-complete in two important special cases: when the center is interested only in the payments made to it, and when payments are not possible and the center is interested only in the outcome chosen.",
                "These hardness results imply hardness in all more general <br>automated mechanism design</br> settings with a self-interested designer.",
                "The hardness results apply whether the individual rationality (participation) constraints are applied ex interim or ex post, and whether the solution concept is dominant strategies implementation or Bayes-Nash equilibrium implementation.",
                "We then showed that allowing randomization in the mechanism makes the design problem in all these settings computationally easy.",
                "Finally, we showed that the paymentmaximizing AMD problem is closely related to an interesting variant of the optimal (revenue-maximizing) combinatorial auction design problem, where the bidders have best-only preferences.",
                "We showed that here, too, designing an optimal deterministic mechanism is NP-complete even with one agent, but designing an optimal randomized mechanism is easy.",
                "Future research includes studying <br>automated mechanism design</br> with a self-interested designer in more restricted settings such as auctions (where the designers objective may include preferences about which bidder should receive the good-as well as payments).",
                "We also want to study the complexity of <br>automated mechanism design</br> in settings where the outcome and type spaces have special structure so they can be represented more concisely.",
                "Finally, we plan to assemble a data set of real-world mechanism design problems-both historical and current-and apply <br>automated mechanism design</br> to those problems. 10.",
                "REFERENCES [1] M. Armstrong.",
                "Optimal multi-object auctions.",
                "Review of Economic Studies, 67:455-481, 2000. [2] K. Arrow.",
                "The property rights doctrine and demand revelation under incomplete information.",
                "In M. Boskin, editor, Economics and human welfare.",
                "New York Academic Press, 1979. [3] C. Avery and T. Hendershott.",
                "Bundling and optimal auctions of multiple products.",
                "Review of Economic Studies, 67:483-497, 2000. [4] E. H. Clarke.",
                "Multipart pricing of public goods.",
                "Public Choice, 11:17-33, 1971. [5] V. Conitzer and T. Sandholm.",
                "Complexity of mechanism design.",
                "In Proceedings of the 18th Annual Conference on Uncertainty in Artificial Intelligence (UAI-02), pages 103-110, Edmonton, Canada, 2002. [6] V. Conitzer and T. Sandholm.",
                "<br>automated mechanism design</br>: Complexity results stemming from the single-agent setting.",
                "In Proceedings of the 5th International Conference on Electronic Commerce (ICEC-03), pages 17-24, Pittsburgh, PA, USA, 2003. [7] V. Conitzer and T. Sandholm.",
                "Computational criticisms of the revelation principle.",
                "In Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), New York, NY, 2004.",
                "Short paper.",
                "Full-length version appeared in the AAMAS-03 workshop on Agent-Mediated Electronic Commerce (AMEC). [8] C. dAspremont and L. A. G´erard-Varet.",
                "Incentives and incomplete information.",
                "Journal of Public Economics, 11:25-45, 1979. [9] J. Feigenbaum, C. Papadimitriou, and S. Shenker.",
                "Sharing the cost of muliticast transmissions.",
                "Journal of Computer and System Sciences, 63:21-41, 2001.",
                "Early version in Proceedings of the Annual ACM Symposium on Theory of Computing (STOC), 2000. [10] A. Gibbard.",
                "Manipulation of voting schemes.",
                "Econometrica, 41:587-602, 1973. [11] T. Groves.",
                "Incentives in teams.",
                "Econometrica, 41:617-631, 1973. [12] J. Hershberger and S. Suri.",
                "Vickrey prices and shortest paths: What is an edge worth?",
                "In Proceedings of the Annual Symposium on Foundations of Computer Science (FOCS), 2001. [13] L. Khachiyan.",
                "A polynomial algorithm in linear programming.",
                "Soviet Math.",
                "Doklady, 20:191-194, 1979. [14] R. Kohli, R. Krishnamurthi, and P. Mirchandani.",
                "The minimum satisfiability problem.",
                "SIAM Journal of Discrete Mathematics, 7(2):275-283, 1994. [15] D. Lehmann, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in rapid, approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002.",
                "Early version appeared in Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), 1999. [16] A. Mas-Colell, M. Whinston, and J. R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [17] E. S. Maskin and J. Riley.",
                "Optimal multi-unit auctions.",
                "In F. Hahn, editor, The Economics of Missing Markets, Information, and Games, chapter 14, pages 312-335.",
                "Clarendon Press, Oxford, 1989. [18] R. Myerson.",
                "Optimal auction design.",
                "Mathematics of Operation Research, 6:58-73, 1981. [19] N. Nisan and A. Ronen.",
                "Computationally feasible VCG mechanisms.",
                "In Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), pages 242-252, Minneapolis, MN, 2000. [20] N. Nisan and A. Ronen.",
                "Algorithmic mechanism design.",
                "Games and Economic Behavior, 35:166-196, 2001.",
                "Early version in Proceedings of the Annual ACM Symposium on Theory of Computing (STOC), 1999. [21] T. Roughgarden.",
                "Designing networks for selfish users is hard.",
                "In Proceedings of the Annual Symposium on Foundations of Computer Science (FOCS), 2001. [22] T. Sandholm.",
                "Issues in computational Vickrey auctions.",
                "International Journal of Electronic Commerce, 4(3):107-129, 2000.",
                "Special Issue on 140 Applying Intelligent Agents for Electronic Commerce.",
                "A short, early version appeared at the Second International Conference on Multi-Agent Systems (ICMAS), pages 299-306, 1996. [23] M. A. Satterthwaite.",
                "Strategy-proofness and Arrows conditions: existence and correspondence theorems for voting procedures and social welfare functions.",
                "Journal of Economic Theory, 10:187-217, 1975. [24] W. Vickrey.",
                "Counterspeculation, auctions, and competitive sealed tenders.",
                "Journal of Finance, 16:8-37, 1961. [25] R. V. Vohra.",
                "Research problems in combinatorial auctions.",
                "Mimeo, version Oct. 29, 2001. 141"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Self-interested \"automated mechanism design\" and Implications for Optimal Combinatorial Auctions∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USAsandholm@cs.cmu.edu Resumen A menudo, se debe elegir un resultado sobre la base de las preferencias reportadas por un grupo de agentes.",
                "En un \"diseño de mecanismo automatizado\" recientemente propuesto, se calcula un mecanismo para la configuración de agregación de preferencias en cuestión.",
                "A diferencia del trabajo anterior en el \"diseño de mecanismo automatizado\" que estudió un diseñador benevolente, en este documento estudiamos problemas de \"diseño de mecanismo automatizado\" en los que el diseñador se interesa.",
                "Este enfoque se llama \"diseño de mecanismo automatizado\".",
                "El enfoque del \"diseño de mecanismo automatizado\" tiene cuatro ventajas sobre el enfoque clásico del diseño de mecanismos generales.",
                "Sin embargo, el \"diseño de mecanismo automatizado\" requiere que el problema de optimización del diseño del mecanismo se resuelva de nuevo para cada configuración.",
                "En este artículo estudiamos la complejidad computacional del \"diseño de mecanismo automatizado\" en el caso de un diseñador interesado.",
                "Este es un escenario importante para el \"diseño de mecanismo automatizado\" debido a la escasez de mecanismos generales en esta área, y el hecho de que en la mayoría de los entornos de comercio electrónico el diseñador se interesa por sí mismo.",
                "Justificando el enfoque en los mecanismos no manipulables antes de definir el problema computacional del \"diseño de mecanismo automatizado\", debemos justificar nuestro enfoque en los mecanismos no manipulables.",
                "Definiciones Ahora formalizamos la configuración del \"diseño del mecanismo automatizado\".",
                "En una configuración de \"diseño de mecanismo automatizado\", se nos da: • Un conjunto finito de resultados o;• un conjunto finito de N agentes;• Para cada agente I, 1. Un conjunto finito de tipos θi, 2. Una distribución de probabilidad γi sobre θi (en el caso de tipos correlacionados, hay una distribución conjunta única γ sobre θ1 × ... × θn) y 3. Una función de utilidad UI: θi × O → R;1 • Una función objetivo cuya expectativa el diseñador desea maximizar.",
                "En cualquier configuración de \"diseño de mecanismo automatizado\" con una restricción IR, hay un resultado de retroceso o0 ∈ O donde, para cualquier agente I y cualquier tipo θi ∈ θi, tenemos ui (θi, o0) = 0. (además, en elCaso de un diseñador interesado, G (O0) = 0.)",
                "Dada una configuración de \"diseño de mecanismo automatizado\", se dice que un mecanismo implementa sus funciones de resultado y pago en estrategias dominantes si Truthtelling siempre es óptimo incluso cuando los tipos informados por los otros agentes ya son conocidos.",
                "Dada una configuración de \"diseño de mecanismo automatizado\", se dice que un mecanismo implementa sus funciones de resultado y pago en el equilibrio de bayes-nash si la verdad de verdad siempre es óptima para un agente cuando ese agente aún no sabe nada sobre los tipos de otros agentes, y el otroLos agentes dicen la verdad.",
                "Los términos que involucran pagos pueden dejarse fuera en el caso de que los pagos no sean posibles.135 3.3 \"Diseño de mecanismo automatizado\" ahora podemos definir el problema computacional que estudiamos.",
                "Definición 8. (Diseño de mecanismo automatizado (AMD)) Se damos: • una configuración de \"diseño de mecanismo automatizado\", • una noción IR (ex interina, ex post o ninguno), • un concepto de solución (estrategias dominantes o bayes-Nash), • si los pagos son posibles, • si es posible la aleatorización • (en la variante de decisión del problema) un valor objetivo G. Se nos pregunta si existe un mecanismo del tipo especificado (en términos de pagos y aleatorización) que satisface tanto la noción IR como el concepto de solución, y da un valor esperado de al menos G para el objetivo.",
                "Implicaciones para un problema óptimo de diseño de subasta combinatoria en esta sección, demostraremos algunas consecuencias interesantes del problema del \"diseño de mecanismo automatizado\" para un diseñador interesado en el diseño de subastas combinatorias óptimas.",
                "La pieza más cercana del trabajo anterior estudió la complejidad del \"diseño de mecanismo automatizado\" por un diseñador benevolente [5, 6].",
                "En un enfoque recientemente emergente, el diseño de \"mecanismo automatizado\", un mecanismo se calcula para la configuración de agregación de preferencias específica a mano.",
                "A diferencia del trabajo anterior en el \"diseño de mecanismo automatizado\" que estudió un diseñador benevolente, en este documento estudiamos problemas de \"diseño de mecanismo automatizado\" en los que el diseñador es una configuración interestada mucho más relevante para el comercio electrónico.",
                "Estos resultados de dureza implican dureza en la configuración más general de \"diseño de mecanismo automatizado\" con un diseñador interesado.",
                "La investigación futura incluye estudiar el \"diseño de mecanismo automatizado\" con un diseñador interesado en entornos más restringidos, como subastas (donde el objetivo de los diseñadores puede incluir preferencias sobre qué postor debe recibir el bien, así como los pagos).",
                "También queremos estudiar la complejidad del \"diseño de mecanismo automatizado\" en la configuración donde los espacios de resultados y tipos tienen una estructura especial para que puedan representarse de manera más concisa.",
                "Finalmente, planeamos ensamblar un conjunto de datos de problemas de diseño del mecanismo del mundo real, tanto históricos como de corriente, y aplicar el \"diseño de mecanismo automatizado\" a esos problemas.10.",
                "\"Diseño de mecanismo automatizado\": resultados de complejidad derivados de la configuración de un solo agente."
            ],
            "translated_text": "",
            "candidates": [
                "Diseño de mecanismo automatizado",
                "automated mechanism design",
                "Diseño de mecanismo automatizado",
                "diseño de mecanismo automatizado",
                "Diseño de mecanismo automatizado",
                "diseño de mecanismo automatizado",
                "diseño de mecanismo automatizado",
                "Diseño de mecanismo automatizado",
                "diseño de mecanismo automatizado",
                "Diseño de mecanismo automatizado",
                "diseño de mecanismo automatizado",
                "Diseño de mecanismo automatizado",
                "diseño de mecanismo automatizado",
                "Diseño de mecanismo automatizado",
                "diseño de mecanismo automatizado",
                "Diseño de mecanismo automatizado",
                "diseño de mecanismo automatizado",
                "Diseño de mecanismo automatizado",
                "diseño de mecanismo automatizado",
                "Diseño de mecanismo automatizado",
                "diseño del mecanismo automatizado",
                "Diseño de mecanismo automatizado",
                "diseño de mecanismo automatizado",
                "Diseño de mecanismo automatizado",
                "diseño de mecanismo automatizado",
                "Diseño de mecanismo automatizado",
                "diseño de mecanismo automatizado",
                "Diseño de mecanismo automatizado",
                "diseño de mecanismo automatizado",
                "Diseño de mecanismo automatizado",
                "Diseño de mecanismo automatizado",
                "Diseño de mecanismo automatizado",
                "diseño de mecanismo automatizado",
                "Diseño de mecanismo automatizado",
                "diseño de mecanismo automatizado",
                "Diseño de mecanismo automatizado",
                "diseño de mecanismo automatizado",
                "Diseño de mecanismo automatizado",
                "mecanismo automatizado",
                "Diseño de mecanismo automatizado",
                "diseño de mecanismo automatizado",
                "diseño de mecanismo automatizado",
                "Diseño de mecanismo automatizado",
                "diseño de mecanismo automatizado",
                "Diseño de mecanismo automatizado",
                "diseño de mecanismo automatizado",
                "Diseño de mecanismo automatizado",
                "diseño de mecanismo automatizado",
                "Diseño de mecanismo automatizado",
                "diseño de mecanismo automatizado",
                "Diseño de mecanismo automatizado",
                "Diseño de mecanismo automatizado"
            ],
            "error": []
        },
        "minsat": {
            "translated_key": "Minsat",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Self-interested Automated Mechanism Design and Implications for Optimal Combinatorial Auctions∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT Often, an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "The key difficulty is that the agents may report their preferences insincerely to make the chosen outcome more favorable to themselves.",
                "Mechanism design is the art of designing the rules of the game so that the agents are motivated to report their preferences truthfully, and a desirable outcome is chosen.",
                "In a recently proposed approach-called automated mechanism design-a mechanism is computed for the preference aggregation setting at hand.",
                "This has several advantages, but the downside is that the mechanism design optimization problem needs to be solved anew each time.",
                "Unlike the earlier work on automated mechanism design that studied a benevolent designer, in this paper we study automated mechanism design problems where the designer is self-interested.",
                "In this case, the center cares only about which outcome is chosen and what payments are made to it.",
                "The reason that the agents preferences are relevant is that the center is constrained to making each agent at least as well off as the agent would have been had it not participated in the mechanism.",
                "In this setting, we show that designing optimal deterministic mechanisms is NP-complete in two important special cases: when the center is interested only in the payments made to it, and when payments are not possible and the center is interested only in the outcome chosen.",
                "We then show how allowing for randomization in the mechanism makes problems in this setting computationally easy.",
                "Finally, we show that the payment-maximizing AMD problem is closely related to an interesting variant of the optimal (revenuemaximizing) combinatorial auction design problem, where the bidders have best-only preferences.",
                "We show that here, too, designing an optimal deterministic auction is NPcomplete, but designing an optimal randomized auction is easy.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In multiagent settings, often an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "Such outcomes could be potential presidents, joint plans, allocations of goods or resources, etc.",
                "The preference aggregator generally does not know the agents preferences a priori.",
                "Rather, the agents report their preferences to the coordinator.",
                "Unfortunately, an agent may have an incentive to misreport its preferences in order to mislead the mechanism into selecting an outcome that is more desirable to the agent than the outcome that would be selected if the agent revealed its preferences truthfully.",
                "Such manipulation is undesirable because preference aggregation mechanisms are tailored to aggregate preferences in a socially desirable way, and if the agents reveal their preferences insincerely, a socially undesirable outcome may be chosen.",
                "Manipulability is a pervasive problem across preference aggregation mechanisms.",
                "A seminal negative result, the Gibbard-Satterthwaite theorem, shows that under any nondictatorial preference aggregation scheme, if there are at least 3 possible outcomes, there are preferences under which an agent is better off reporting untruthfully [10, 23]. (A preference aggregation scheme is called dictatorial if one of the agents dictates the outcome no matter what preferences the other agents report.)",
                "What the aggregator would like to do is design a preference aggregation mechanism so that 1) the self-interested agents are motivated to report their preferences truthfully, and 2) the mechanism chooses an outcome that is desirable from the perspective of some objective.",
                "This is the classic setting of mechanism design in game theory.",
                "In this paper, we study the case where the designer is self-interested, that is, the designer does not directly care about how the out132 come relates to the agents preferences, but is rather concerned with its own agenda for which outcome should be chosen, and with maximizing payments to itself.",
                "This is the mechanism design setting most relevant to electronic commerce.",
                "In the case where the mechanism designer is interested in maximizing some notion of social welfare, the importance of collecting the agents preferences is clear.",
                "It is perhaps less obvious why they should be collected when the designer is self-interested and hence its objective is not directly related to the agents preferences.",
                "The reason for this is that often the agents preferences impose limits on how the designer chooses the outcome and payments.",
                "The most common such constraint is that of individual rationality (IR), which means that the mechanism cannot make any agent worse off than the agent would have been had it not participated in the mechanism.",
                "For instance, in the setting of optimal auction design, the designer (auctioneer) is only concerned with how much revenue is collected, and not per se with how well the allocation of the good (or goods) corresponds to the agents preferences.",
                "Nevertheless, the designer cannot force an agent to pay more than its valuation for the bundle of goods allocated to it.",
                "Therefore, even a self-interested designer will choose an outcome that makes the agents reasonably well off.",
                "On the other hand, the designer will not necessarily choose a social welfare maximizing outcome.",
                "For example, if the designer always chooses an outcome that maximizes social welfare with respect to the reported preferences, and forces each agent to pay the difference between the utility it has now and the utility it would have had if it had not participated in the mechanism, it is easy to see that agents may have an incentive to misreport their preferences-and this may actually lead to less revenue being collected.",
                "Indeed, one of the counterintuitive results of optimal auction design theory is that sometimes the good is allocated to nobody even when the auctioneer has a reservation price of 0.",
                "Classical mechanism design provides some general mechanisms, which, under certain assumptions, satisfy some notion of nonmanipulability and maximize some objective.",
                "The upside of these mechanisms is that they do not rely on (even probabilistic) information about the agents preferences (e.g., the Vickrey-Clarke-Groves (VCG) mechanism [24, 4, 11]), or they can be easily applied to any probability distribution over the preferences (e.g., the dAGVA mechanism [8, 2], the Myerson auction [18], and the Maskin-Riley multi-unit auction [17]).",
                "However, the general mechanisms also have significant downsides: • The most famous and most broadly applicable general mechanisms, VCG and dAGVA, only maximize social welfare.",
                "If the designer is self-interested, as is the case in many electronic commerce settings, these mechanisms do not maximize the designers objective. • The general mechanisms that do focus on a selfinterested designer are only applicable in very restricted settings-such as Myersons expected revenue maximizing auction for selling a single item, and Maskin and Rileys expected revenue maximizing auction for selling multiple identical units of an item. • Even in the restricted settings in which these mechanisms apply, the mechanisms only allow for payment maximization.",
                "In practice, the designer may also be interested in the outcome per se.",
                "For example, an auctioneer may care which bidder receives the item. • It is often assumed that side payments can be used to tailor the agents incentives, but this is not always practical.",
                "For example, in barter-based electronic marketplaces-such as Recipco, firstbarter.com, BarterOne, and Intagio-side payments are not allowed.",
                "Furthermore, among software agents, it might be more desirable to construct mechanisms that do not rely on the ability to make payments, because many software agents do not have the infrastructure to make payments.",
                "In contrast, we follow a recent approach where the mechanism is designed automatically for the specific problem at hand.",
                "This approach addresses all of the downsides listed above.",
                "We formulate the mechanism design problem as an optimization problem.",
                "The input is characterized by the number of agents, the agents possible types (preferences), and the aggregators prior distributions over the agents types.",
                "The output is a nonmanipulable mechanism that is optimal with respect to some objective.",
                "This approach is called automated mechanism design.",
                "The automated mechanism design approach has four advantages over the classical approach of designing general mechanisms.",
                "First, it can be used even in settings that do not satisfy the assumptions of the classical mechanisms (such as availability of side payments or that the objective is social welfare).",
                "Second, it may allow one to circumvent impossibility results (such as the Gibbard-Satterthwaite theorem) which state that there is no mechanism that is desirable across all preferences.",
                "When the mechanism is designed for the setting at hand, it does not matter that it would not work more generally.",
                "Third, it may yield better mechanisms (in terms of stronger nonmanipulability guarantees and/or better outcomes) than classical mechanisms because the mechanism capitalizes on the particulars of the setting (the probabilistic information that the designer has about the agents types).",
                "Given the vast amount of information that parties have about each other today, this approach is likely to lead to tremendous savings over classical mechanisms, which largely ignore that information.",
                "For example, imagine a company automatically creating its procurement mechanism based on statistical knowledge about its suppliers, rather than using a classical descending procurement auction.",
                "Fourth, the burden of design is shifted from humans to a machine.",
                "However, automated mechanism design requires the mechanism design optimization problem to be solved anew for each setting.",
                "Hence its computational complexity becomes a key issue.",
                "Previous research has studied this question for benevolent designers-that wish to maximize, for example, social welfare [5, 6].",
                "In this paper we study the computational complexity of automated mechanism design in the case of a self-interested designer.",
                "This is an important setting for automated mechanism design due to the shortage of general mechanisms in this area, and the fact that in most e-commerce settings the designer is self-interested.",
                "We also show that this problem is closely related to a particular optimal (revenue-maximizing) combinatorial auction design problem. 133 The rest of this paper is organized as follows.",
                "In Section 2, we justify the focus on nonmanipulable mechanisms.",
                "In Section 3, we define the problem we study.",
                "In Section 4, we show that designing an optimal deterministic mechanism is NP-complete even when the designer only cares about the payments made to it.",
                "In Section 5, we show that designing an optimal deterministic mechanism is also NP-complete when payments are not possible and the designer is only interested in the outcome chosen.",
                "In Section 6, we show that an optimal randomized mechanism can be designed in polynomial time even in the general case.",
                "Finally, in Section 7, we show that for designing optimal combinatorial auctions under best-only preferences, our results on AMD imply that this problem is NP-complete for deterministic auctions, but easy for randomized auctions. 2.",
                "JUSTIFYING THE FOCUS ON NONMANIPULABLE MECHANISMS Before we define the computational problem of automated mechanism design, we should justify our focus on nonmanipulable mechanisms.",
                "After all, it is not immediately obvious that there are no manipulable mechanisms that, even when agents report their types strategically and hence sometimes untruthfully, still reach better outcomes (according to whatever objective we use) than any nonmanipulable mechanism.",
                "This does, however, turn out to be the case: given any mechanism, we can construct a nonmanipulable mechanism whose performance is identical, as follows.",
                "We build an interface layer between the agents and the original mechanism.",
                "The agents report their preferences (or types) to the interface layer; subsequently, the interface layer inputs into the original mechanism the types that the agents would have strategically reported to the original mechanism, if their types were as declared to the interface layer.",
                "The resulting outcome is the outcome of the new mechanism.",
                "Since the interface layer acts strategically on each agents behalf, there is never an incentive to report falsely to the interface layer; and hence, the types reported by the interface layer are the strategic types that would have been reported without the interface layer, so the results are exactly as they would have been with the original mechanism.",
                "This argument is known in the mechanism design literature as the revelation principle [16]. (There are computational difficulties with applying the revelation principle in large combinatorial outcome and type spaces [7, 22].",
                "However, because here we focus on flatly represented outcome and type spaces, this is not a concern here.)",
                "Given this, we can focus on truthful mechanisms in the rest of the paper. 3.",
                "DEFINITIONS We now formalize the automated mechanism design setting.",
                "Definition 1.",
                "In an automated mechanism design setting, we are given: • a finite set of outcomes O; • a finite set of N agents; • for each agent i, 1. a finite set of types Θi, 2. a probability distribution γi over Θi (in the case of correlated types, there is a single joint distribution γ over Θ1 × . . . × ΘN ), and 3. a utility function ui : Θi × O → R; 1 • An objective function whose expectation the designer wishes to maximize.",
                "There are many possible objective functions the designer might have, for example, social welfare (where the designer seeks to maximize the sum of the agents utilities), or the minimum utility of any agent (where the designer seeks to maximize the worst utility had by any agent).",
                "In both of these cases, the designer is benevolent, because the designer, in some sense, is pursuing the agents collective happiness.",
                "However, in this paper, we focus on the case of a self-interested designer.",
                "A self-interested designer cares only about the outcome chosen (that is, the designer does not care how the outcome relates to the agents preferences, but rather has a fixed preference over the outcomes), and about the net payments made by the agents, which flow to the designer.",
                "Definition 2.",
                "A self-interested designer has an objective function given by g(o) + N i=1 πi, where g : O → R indicates the designers own preference over the outcomes, and πi is the payment made by agent i.",
                "In the case where g = 0 everywhere, the designer is said to be payment maximizing.",
                "In the case where payments are not possible, g constitutes the objective function by itself.",
                "We now define the kinds of mechanisms under study.",
                "By the revelation principle, we can restrict attention to truthful, direct revelation mechanisms, where agents report their types directly and never have an incentive to misreport them.",
                "Definition 3.",
                "We consider the following kinds of mechanism: • A deterministic mechanism without payments consists of an outcome selection function o : Θ1 × Θ2 × . . . × ΘN → O. • A randomized mechanism without payments consists of a distribution selection function p : Θ1 × Θ2 × . . . × ΘN → P(O), where P(O) is the set of probability distributions over O. • A deterministic mechanism with payments consists of an outcome selection function o : Θ1 ×Θ2 ×. . .×ΘN → O and for each agent i, a payment selection function πi : Θ1 × Θ2 × . . . × ΘN → R, where πi(θ1, . . . , θN ) gives the payment made by agent i when the reported types are θ1, . . . , θN . 1 Though this follows standard game theory notation [16], the fact that the agent has both a utility function and a type is perhaps confusing.",
                "The types encode the various possible preferences that the agent may turn out to have, and the agents type is not known to the aggregator.",
                "The utility function is common knowledge, but because the agents type is a parameter in the agents utility function, the aggregator cannot know what the agents utility is without knowing the agents type. 134 • A randomized mechanism with payments consists of a distribution selection function p : Θ1 × Θ2 × . . . × ΘN → P(O), and for each agent i, a payment selection function πi : Θ1 × Θ2 × . . . × ΘN → R.2 There are two types of constraint on the designer in building the mechanism. 3.1 Individual rationality (IR) constraints The first type of constraint is the following.",
                "The utility of each agent has to be at least as great as the agents fallback utility, that is, the utility that the agent would receive if it did not participate in the mechanism.",
                "Otherwise that agent would not participate in the mechanism-and no agents participation can ever hurt the mechanism designers objective because at worst, the mechanism can ignore an agent by pretending the agent is not there. (Furthermore, if no such constraint applied, the designer could simply make the agents pay an infinite amount.)",
                "This type of constraint is called an IR (individual rationality) constraint.",
                "There are three different possible IR constraints: ex ante, ex interim, and ex post, depending on what the agent knows about its own type and the others types when deciding whether to participate in the mechanism.",
                "Ex ante IR means that the agent would participate if it knew nothing at all (not even its own type).",
                "We will not study this concept in this paper.",
                "Ex interim IR means that the agent would always participate if it knew only its own type, but not those of the others.",
                "Ex post IR means that the agent would always participate even if it knew everybodys type.",
                "We will define the latter two notions of IR formally.",
                "First, we need to formalize the concept of the fallback outcome.",
                "We assume that each agents fallback utility is zero for each one of its types.",
                "This is without loss of generality because we can add a constant term to an agents utility function (for a given type), without affecting the decision-making behavior of that expected utility maximizing agent [16].",
                "Definition 4.",
                "In any automated mechanism design setting with an IR constraint, there is a fallback outcome o0 ∈ O where, for any agent i and any type θi ∈ Θi, we have ui(θi, o0) = 0. (Additionally, in the case of a self-interested designer, g(o0) = 0.)",
                "We can now to define the notions of individual rationality.",
                "Definition 5.",
                "Individual rationality (IR) is defined by: • A deterministic mechanism is ex interim IR if for any agent i, and any type θi ∈ Θi, we have E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, .., θN ))−πi(θ1, .., θN )] ≥ 0.",
                "A randomized mechanism is ex interim IR if for any agent i, and any type θi ∈ Θi, we have E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,..,θn [ui(θi, o)−πi(θ1, .., θN )] ≥ 0. • A deterministic mechanism is ex post IR if for any agent i, and any type vector (θ1, . . . , θN ) ∈ Θ1 × . . . × ΘN , we have ui(θi, o(θ1, . . . , θN )) − πi(θ1, . . . , θN ) ≥ 0. 2 We do not randomize over payments because as long as the agents and the designer are risk neutral with respect to payments, that is, their utility is linear in payments, there is no reason to randomize over payments.",
                "A randomized mechanism is ex post IR if for any agent i, and any type vector (θ1, . . . , θN ) ∈ Θ1 × . . . × ΘN , we have Eo|θ1,..,θn [ui(θi, o) − πi(θ1, .., θN )] ≥ 0.",
                "The terms involving payments can be left out in the case where payments are not possible. 3.2 Incentive compatibility (IC) constraints The second type of constraint says that the agents should never have an incentive to misreport their type (as justified above by the revelation principle).",
                "For this type of constraint, the two most common variants (or solution concepts) are implementation in dominant strategies, and implementation in Bayes-Nash equilibrium.",
                "Definition 6.",
                "Given an automated mechanism design setting, a mechanism is said to implement its outcome and payment functions in dominant strategies if truthtelling is always optimal even when the types reported by the other agents are already known.",
                "Formally, for any agent i, any type vector (θ1, . . . , θi, . . . , θN ) ∈ Θ1 × . . . × Θi × . . . × ΘN , and any alternative type report ˆθi ∈ Θi, in the case of deterministic mechanisms we have ui(θi, o(θ1, . . . , θi, . . . , θN )) − πi(θ1, . . . , θi, . . . , θN ) ≥ ui(θi, o(θ1, . . . , ˆθi, . . . , θN )) − πi(θ1, . . . , ˆθi, . . . , θN ).",
                "In the case of randomized mechanisms we have Eo|θ1,..,θi,..,θn [ui(θi, o) − πi(θ1, . . . , θi, . . . , θN )] ≥ Eo|θ1,.., ˆθi,..,θn [ui(θi, o) − πi(θ1, . . . , ˆθi, . . . , θN )].",
                "The terms involving payments can be left out in the case where payments are not possible.",
                "Thus, in dominant strategies implementation, truthtelling is optimal regardless of what the other agents report.",
                "If it is optimal only given that the other agents are truthful, and given that one does not know the other agents types, we have implementation in Bayes-Nash equilibrium.",
                "Definition 7.",
                "Given an automated mechanism design setting, a mechanism is said to implement its outcome and payment functions in Bayes-Nash equilibrium if truthtelling is always optimal to an agent when that agent does not yet know anything about the other agents types, and the other agents are telling the truth.",
                "Formally, for any agent i, any type θi ∈ Θi, and any alternative type report ˆθi ∈ Θi, in the case of deterministic mechanisms we have E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, . . . , θi, . . . , θN ))− πi(θ1, . . . , θi, . . . , θN )] ≥ E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, . . . , ˆθi, . . . , θN ))− πi(θ1, . . . , ˆθi, . . . , θN )].",
                "In the case of randomized mechanisms we have E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,..,θi,..,θn [ui(θi, o)− πi(θ1, . . . , θi, . . . , θN )] ≥ E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,.., ˆθi,..,θn [ui(θi, o)− πi(θ1, . . . , ˆθi, . . . , θN )].",
                "The terms involving payments can be left out in the case where payments are not possible. 135 3.3 Automated mechanism design We can now define the computational problem we study.",
                "Definition 8. (AUTOMATED-MECHANISM-DESIGN (AMD)) We are given: • an automated mechanism design setting, • an IR notion (ex interim, ex post, or none), • a solution concept (dominant strategies or Bayes-Nash), • whether payments are possible, • whether randomization is possible, • (in the decision variant of the problem) a target value G. We are asked whether there exists a mechanism of the specified kind (in terms of payments and randomization) that satisfies both the IR notion and the solution concept, and gives an expected value of at least G for the objective.",
                "An interesting special case is the setting where there is only one agent.",
                "In this case, the reporting agent always knows everything there is to know about the other agents types-because there are no other agents.",
                "Since ex post and ex interim IR only differ on what an agent is assumed to know about other agents types, the two IR concepts coincide here.",
                "Also, because implementation in dominant strategies and implementation in Bayes-Nash equilibrium only differ on what an agent is assumed to know about other agents types, the two solution concepts coincide here.",
                "This observation will prove to be a useful tool in proving hardness results: if we prove computational hardness in the singleagent setting, this immediately implies hardness for both IR concepts, for both solution concepts, for any number of agents. 4.",
                "PAYMENT-MAXIMIZINGDETERMINISTIC AMD IS HARD In this section we demonstrate that it is NP-complete to design a deterministic mechanism that maximizes the expected sum of the payments collected from the agents.",
                "We show that this problem is hard even in the single-agent setting, thereby immediately showing it hard for both IR concepts, for both solution concepts.",
                "To demonstrate NPhardness, we reduce from the <br>minsat</br> problem.",
                "Definition 9 (<br>minsat</br>).",
                "We are given a formula φ in conjunctive normal form, represented by a set of Boolean variables V and a set of clauses C, and an integer K (K < |C|).",
                "We are asked whether there exists an assignment to the variables in V such that at most K clauses in φ are satisfied.",
                "<br>minsat</br> was recently shown to be NP-complete [14].",
                "We can now present our result.",
                "Theorem 1.",
                "Payment-maximizing deterministic AMD is NP-complete, even for a single agent, even with a uniform distribution over types.",
                "Proof.",
                "It is easy to show that the problem is in NP.",
                "To show NP-hardness, we reduce an arbitrary <br>minsat</br> instance to the following single-agent payment-maximizing deterministic AMD instance.",
                "Let the agents type set be Θ = {θc : c ∈ C} ∪ {θv : v ∈ V }, where C is the set of clauses in the <br>minsat</br> instance, and V is the set of variables.",
                "Let the probability distribution over these types be uniform.",
                "Let the outcome set be O = {o0} ∪ {oc : c ∈ C} ∪ {ol : l ∈ L}, where L is the set of literals, that is, L = {+v : v ∈ V } ∪ {−v : v ∈ V }.",
                "Let the notation v(l) = v denote that v is the variable corresponding to the literal l, that is, l ∈ {+v, −v}.",
                "Let l ∈ c denote that the literal l occurs in clause c. Then, let the agents utility function be given by u(θc, ol) = |Θ| + 1 for all l ∈ L with l ∈ c; u(θc, ol) = 0 for all l ∈ L with l /∈ c; u(θc, oc) = |Θ| + 1; u(θc, oc ) = 0 for all c ∈ C with c = c ; u(θv, ol) = |Θ| for all l ∈ L with v(l) = v; u(θv, ol) = 0 for all l ∈ L with v(l) = v; u(θv, oc) = 0 for all c ∈ C. The goal of the AMD instance is G = |Θ| + |C|−K |Θ| , where K is the goal of the <br>minsat</br> instance.",
                "We show the instances are equivalent.",
                "First, suppose there is a solution to the <br>minsat</br> instance.",
                "Let the assignment of truth values to the variables in this solution be given by the function f : V → L (where v(f(v)) = v for all v ∈ V ).",
                "Then, for every v ∈ V , let o(θv) = of(v) and π(θv) = |Θ|.",
                "For every c ∈ C, let o(θc) = oc; let π(θc) = |Θ| + 1 if c is not satisfied in the <br>minsat</br> solution, and π(θc) = |Θ| if c is satisfied.",
                "It is straightforward to check that the IR constraint is satisfied.",
                "We now check that the agent has no incentive to misreport.",
                "If the agents type is some θv, then any other report will give it an outcome that is no better, for a payment that is no less, so it has no incentive to misreport.",
                "If the agents type is some θc where c is a satisfied clause, again, any other report will give it an outcome that is no better, for a payment that is no less, so it has no incentive to misreport.",
                "The final case to check is where the agents type is some θc where c is an unsatisfied clause.",
                "In this case, we observe that for none of the types, reporting it leads to an outcome ol for a literal l ∈ c, precisely because the clause is not satisfied in the <br>minsat</br> instance.",
                "Because also, no type besides θc leads to the outcome oc, reporting any other type will give an outcome with utility 0, while still forcing a payment of at least |Θ| from the agent.",
                "Clearly the agent is better off reporting truthfully, for a total utility of 0.",
                "This establishes that the agent never has an incentive to misreport.",
                "Finally, we show that the goal is reached.",
                "If s is the number of satisfied clauses in the <br>minsat</br> solution (so that s ≤ K), the expected payment from this mechanism is |V ||Θ|+s|Θ|+(|C|−s)(|Θ|+1) |Θ| ≥ |V ||Θ|+K|Θ|+(|C|−K)(|Θ|+1) |Θ| = |Θ| + |C|−K |Θ| = G. So there is a solution to the AMD instance.",
                "Now suppose there is a solution to the AMD instance, given by an outcome function o and a payment function π.",
                "First, suppose there is some v ∈ V such that o(θv) /∈ {o+v, o−v}.",
                "Then the utility that the agent derives from the given outcome for this type is 0, and hence, by IR, no payment can be extracted from the agent for this type.",
                "Because, again by IR, the maximum payment that can be extracted for any other type is |Θ| + 1, it follows that the maximum expected payment that could be obtained is at most (|Θ|−1)(|Θ|+1) |Θ| < |Θ| < G, contradicting that this is a solution to the AMD instance.",
                "It follows that in the solution to the AMD instance, for every v ∈ V , o(θv) ∈ {o+v, o−v}. 136 We can interpret this as an assignment of truth values to the variables: v is set to true if o(θv) = o+v, and to false if o(θv) = o−v.",
                "We claim this assignment is a solution to the <br>minsat</br> instance.",
                "By the IR constraint, the maximum payment we can extract from any type θv is |Θ|.",
                "Because there can be no incentives for the agent to report falsely, for any clause c satisfied by the given assignment, the maximum payment we can extract for the corresponding type θc is |Θ|. (For if we extracted more from this type, the agents utility in this case would be less than 1; and if v is the variable satisfying c in the assignment, so that o(θv) = ol where l occurs in c, then the agent would be better off reporting θv instead of the truthful report θc, to get an outcome worth |Θ|+1 to it while having to pay at most |Θ|.)",
                "Finally, for any unsatisfied clause c, by the IR constraint, the maximum payment we can extract for the corresponding type θc is |Θ| + 1.",
                "It follows that the expected payment from our mechanism is at most V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ , where s is the number of satisfied clauses.",
                "Because our mechanism achieves the goal, it follows that V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ ≥ G, which by simple algebraic manipulations is equivalent to s ≤ K. So there is a solution to the <br>minsat</br> instance.",
                "Because payment-maximizing AMD is just the special case of AMD for a self-interested designer where the designer has no preferences over the outcome chosen, this immediately implies hardness for the general case of AMD for a selfinterested designer where payments are possible.",
                "However, it does not yet imply hardness for the special case where payments are not possible.",
                "We will prove hardness in this case in the next section. 5.",
                "SELF-INTERESTED DETERMINISTIC AMD WITHOUT PAYMENTS IS HARD In this section we demonstrate that it is NP-complete to design a deterministic mechanism that maximizes the expectation of the designers objective when payments are not possible.",
                "We show that this problem is hard even in the single-agent setting, thereby immediately showing it hard for both IR concepts, for both solution concepts.",
                "Theorem 2.",
                "Without payments, deterministic AMD for a self-interested designer is NP-complete, even for a single agent, even with a uniform distribution over types.",
                "Proof.",
                "It is easy to show that the problem is in NP.",
                "To show NP-hardness, we reduce an arbitrary <br>minsat</br> instance to the following single-agent self-interested deterministic AMD without payments instance.",
                "Let the agents type set be Θ = {θc : c ∈ C} ∪ {θv : v ∈ V }, where C is the set of clauses in the <br>minsat</br> instance, and V is the set of variables.",
                "Let the probability distribution over these types be uniform.",
                "Let the outcome set be O = {o0} ∪ {oc : c ∈ C}∪{ol : l ∈ L}∪{o∗ }, where L is the set of literals, that is, L = {+v : v ∈ V } ∪ {−v : v ∈ V }.",
                "Let the notation v(l) = v denote that v is the variable corresponding to the literal l, that is, l ∈ {+v, −v}.",
                "Let l ∈ c denote that the literal l occurs in clause c. Then, let the agents utility function be given by u(θc, ol) = 2 for all l ∈ L with l ∈ c; u(θc, ol) = −1 for all l ∈ L with l /∈ c; u(θc, oc) = 2; u(θc, oc ) = −1 for all c ∈ C with c = c ; u(θc, o∗ ) = 1; u(θv, ol) = 1 for all l ∈ L with v(l) = v; u(θv, ol) = −1 for all l ∈ L with v(l) = v; u(θv, oc) = −1 for all c ∈ C; u(θv, o∗ ) = −1.",
                "Let the designers objective function be given by g(o∗ ) = |Θ|+1; g(ol) = |Θ| for all l ∈ L; g(oc) = |Θ| for all c ∈ C. The goal of the AMD instance is G = |Θ| + |C|−K |Θ| , where K is the goal of the <br>minsat</br> instance.",
                "We show the instances are equivalent.",
                "First, suppose there is a solution to the <br>minsat</br> instance.",
                "Let the assignment of truth values to the variables in this solution be given by the function f : V → L (where v(f(v)) = v for all v ∈ V ).",
                "Then, for every v ∈ V , let o(θv) = of(v).",
                "For every c ∈ C that is satisfied in the <br>minsat</br> solution, let o(θc) = oc; for every unsatisfied c ∈ C, let o(θc) = o∗ .",
                "It is straightforward to check that the IR constraint is satisfied.",
                "We now check that the agent has no incentive to misreport.",
                "If the agents type is some θv, it is getting the maximum utility for that type, so it has no incentive to misreport.",
                "If the agents type is some θc where c is a satisfied clause, again, it is getting the maximum utility for that type, so it has no incentive to misreport.",
                "The final case to check is where the agents type is some θc where c is an unsatisfied clause.",
                "In this case, we observe that for none of the types, reporting it leads to an outcome ol for a literal l ∈ c, precisely because the clause is not satisfied in the <br>minsat</br> instance.",
                "Because also, no type leads to the outcome oc, there is no outcome that the mechanism ever selects that would give the agent utility greater than 1 for type θc, and hence the agent has no incentive to report falsely.",
                "This establishes that the agent never has an incentive to misreport.",
                "Finally, we show that the goal is reached.",
                "If s is the number of satisfied clauses in the <br>minsat</br> solution (so that s ≤ K), then the expected value of the designers objective function is |V ||Θ|+s|Θ|+(|C|−s)(|Θ|+1) |Θ| ≥ |V ||Θ|+K|Θ|+(|C|−K)(|Θ|+1) |Θ| = |Θ| + |C|−K |Θ| = G. So there is a solution to the AMD instance.",
                "Now suppose there is a solution to the AMD instance, given by an outcome function o.",
                "First, suppose there is some v ∈ V such that o(θv) /∈ {o+v, o−v}.",
                "The only other outcome that the mechanism is allowed to choose under the IR constraint is o0.",
                "This has an objective value of 0, and because the highest value the objective function ever takes is |Θ| + 1, it follows that the maximum expected value of the objective function that could be obtained is at most (|Θ|−1)(|Θ|+1) |Θ| < |Θ| < G, contradicting that this is a solution to the AMD instance.",
                "It follows that in the solution to the AMD instance, for every v ∈ V , o(θv) ∈ {o+v, o−v}.",
                "We can interpret this as an assignment of truth values to the variables: v is set to true if o(θv) = o+v, and to false if o(θv) = o−v.",
                "We claim this assignment is a solution to the <br>minsat</br> instance.",
                "By the above, for any type θv, the value of the objective function in this mechanism will be |Θ|.",
                "For any clause c satisfied by the given assignment, the value of the objective function in the case where the agent reports type θc will be at most |Θ|. (This is because we cannot choose the outcome o∗ for such a type, as in this case the agent would have an incentive to report θv instead, where v is the variable satisfying c in the assignment (so that o(θv) = ol where l occurs in c).)",
                "Finally, for any unsatisfied clause c, the maximum value the objective function can take in the case where the agent reports type θc is |Θ| + 1, simply because this is the largest value the function ever takes.",
                "It follows that the expected value of the objective function for our mechanism is at most V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ , where s is the number of satisfied 137 clauses.",
                "Because our mechanism achieves the goal, it follows that V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ ≥ G, which by simple algebraic manipulations is equivalent to s ≤ K. So there is a solution to the <br>minsat</br> instance.",
                "Both of our hardness results relied on the constraint that the mechanism should be deterministic.",
                "In the next section, we show that the hardness of design disappears when we allow for randomization in the mechanism. 6.",
                "RANDOMIZED AMD FOR A SELFINTERESTED DESIGNER IS EASY We now show how allowing for randomization over the outcomes makes the problem of self-interested AMD tractable through linear programming, for any constant number of agents.",
                "Theorem 3.",
                "Self-interested randomized AMD with a constant number of agents is solvable in polynomial time by linear programming, both with and without payments, both for ex post and ex interim IR, and both for implementation in dominant strategies and for implementation in Bayes-Nash equilibrium-even if the types are correlated.",
                "Proof.",
                "Because linear programs can be solved in polynomial time [13], all we need to show is that the number of variables and equations in our program is polynomial for any constant number of agents-that is, exponential only in N. Throughout, for purposes of determining the size of the linear program, let T = maxi{|Θi|}.",
                "The variables of our linear program will be the probabilities (p(θ1, θ2, . . . , θN ))(o) (at most TN |O| variables) and the payments πi(θ1, θ2, . . . , θN ) (at most NTN variables). (We show the linear program for the case where payments are possible; the case without payments is easily obtained from this by simply omitting all the payment variables in the program, or by adding additional constraints forcing the payments to be 0.)",
                "First, we show the IR constraints.",
                "For ex post IR, we add the following (at most NTN ) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, and for every (θ1, θ2, . . . , θN ) ∈ Θ1 × Θ2 × . . . × ΘN , we add ( o∈O (p(θ1, θ2, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , θN ) ≥ 0.",
                "For ex interim IR, we add the following (at most NT) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, for every θi ∈ Θi, we add θ1,... ,θN γ(θ1, . . . , θN |θi)(( o∈O (p(θ1, θ2, . . . , θN ))(o)u(θi, o))− πi(θ1, θ2, . . . , θN )) ≥ 0.",
                "Now, we show the solution concept constraints.",
                "For implementation in dominant strategies, we add the following (at most NTN+1 ) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, for every (θ1, θ2, . . . , θi, . . . , θN ) ∈ Θ1 × Θ2 × . . . × ΘN , and for every alternative type report ˆθi ∈ Θi, we add the constraint ( o∈O (p(θ1, θ2, . . . , θi, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , θi, . . . , θN ) ≥ ( o∈O (p(θ1, θ2, . . . , ˆθi, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , ˆθi, . . . , θN ).",
                "Finally, for implementation in Bayes-Nash equilibrium, we add the following (at most NT2 ) constraints to the LP: • For every i ∈ {1, 2, ..., N}, for every θi ∈ Θi, and for every alternative type report ˆθi ∈ Θi, we add the constraint θ1,...,θN γ(θ1, ..., θN |θi)(( o∈O (p(θ1, θ2, ..., θi, ..., θN ))(o)u(θi, o)) − πi(θ1, θ2, ..., θi, ..., θN )) ≥ θ1,...,θN γ(θ1, ..., θN |θi)(( o∈O (p(θ1, θ2, ..., ˆθi, ..., θN ))(o)u(θi, o)) − πi(θ1, θ2, ..., ˆθi, ..., θN )).",
                "All that is left to do is to give the expression the designer is seeking to maximize, which is: • θ1,...,θN γ(θ1, ..., θN )(( o∈O (p(θ1, θ2, ..., θi, ..., θN ))(o)g(o)) + N i=1 πi(θ1, θ2, ..., θN )).",
                "As we indicated, the number of variables and constraints is exponential only in N, and hence the linear program is of polynomial size for constant numbers of agents.",
                "Thus the problem is solvable in polynomial time. 7.",
                "IMPLICATIONS FOR AN OPTIMAL COMBINATORIAL AUCTION DESIGN PROBLEM In this section, we will demonstrate some interesting consequences of the problem of automated mechanism design for a self-interested designer on designing optimal combinatorial auctions.",
                "Consider a combinatorial auction with a set S of items for sale.",
                "For any bundle B ⊆ S, let ui(θi, B) be bidder is utility for receiving bundle B when the bidders type is θi.",
                "The optimal auction design problem is to specify the rules of the auction so as to maximize expected revenue to the auctioneer. (By the revelation principle, without loss of generality, we can assume the auction is truthful.)",
                "The optimal auction design problem is solved for the case of a single item by the famous Myerson auction [18].",
                "However, designing optimal auctions in combinatorial auctions is a recognized open research problem [3, 25].",
                "The problem is open even if there are only two items for sale. (The twoitem case with a very special form of complementarity and no substitutability has been solved recently [1].)",
                "Suppose we have free disposal-items can be thrown away at no cost.",
                "Also, suppose that the bidders preferences have the following structure: whenever a bidder receives a bundle of items, the bidders utility for that bundle is determined by the best item in the bundle only. (We emphasize that 138 which item is the best is allowed to depend on the bidders type.)",
                "Definition 10.",
                "Bidder i is said to have best-only preferences over bundles of items if there exists a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s).",
                "We make the following useful observation in this setting: there is no sense in awarding a bidder more than one item.",
                "The reason is that if the bidder is reporting truthfully, taking all but the highest valued item away from the bidder will not hurt the bidder; and, by free disposal, doing so can only reduce the incentive for this bidder to falsely report this type, when the bidder actually has another type.",
                "We now show that the problem of designing a deterministic optimal auction here is NP-complete, by a reduction from the payment maximizing AMD problem!",
                "Theorem 4.",
                "Given an optimal combinatorial auction design problem under best-only preferences (given by a set of items S and for each bidder i, a finite type space Θi and a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s)), designing the optimal deterministic auction is NP-complete, even for a single bidder with a uniform distribution over types.",
                "Proof.",
                "The problem is in NP because we can nondeterministically generate an allocation rule, and then set the payments using linear programming.",
                "To show NP-hardness, we reduce an arbitrary paymentmaximizing deterministic AMD instance, with a single agent and a uniform distribution over types, to the following optimal combinatorial auction design problem instance with a single bidder with best-only preferences.",
                "For every outcome o ∈ O in the AMD instance (besides the outcome o0), let there be one item so ∈ S. Let the type space be the same, and let v(θi, so) = ui(θi, o) (where u is as specified in the AMD instance).",
                "Let the expected revenue target value be the same in both instances.",
                "We show the instances are equivalent.",
                "First suppose there exists a solution to the AMD instance, given by an outcome function and a payment function.",
                "Then, if the AMD solution chooses outcome o for a type, in the optimal auction solution, allocate {so} to the bidder for this type. (Unless o = o0, in which case we allocate {} to the bidder.)",
                "Let the payment functions be the same in both instances.",
                "Then, the utility that an agent receives for reporting a type (given the true type) in either solution is the same, so we have incentive compatibility in the optimal auction solution.",
                "Moreover, because the type distribution and the payment function are the same, the expected revenue to the auctioneer/designer is the same.",
                "It follows that there exists a solution to the optimal auction design instance.",
                "Now suppose there exists a solution to the optimal auction design instance.",
                "By the at-most-one-item observation, we can assume without loss of generality that the solution never allocates more than one item.",
                "Then, if the optimal auction solution allocates item so to the bidder for a type, in the AMD solution, let the mechanism choose outcome o for that type.",
                "If the optimal auction solution allocates nothing to the bidder for a type, in the AMD solution, let the mechanism choose outcome o0 for that type.",
                "Let the payment functions be the same.",
                "Then, the utility that an agent receives for reporting a type (given the true type) in either solution is the same, so we have incentive compatibility in the AMD solution.",
                "Moreover, because the type distribution and the payment function are the same, the expected revenue to the designer/auctioneer is the same.",
                "It follows that there exists a solution to the AMD instance.",
                "Fortunately, we can also carry through the easiness result for randomized mechanisms to this combinatorial auction setting-giving us one of the few known polynomial-time algorithms for an optimal combinatorial auction design problem.",
                "Theorem 5.",
                "Given an optimal combinatorial auction design problem under best-only preferences (given by a set of items S and for each bidder i, a finite type space Θi and a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s)), if the number of bidders is a constant k, then the optimal randomized auction can be designed in polynomial time. (For any IC and IR constraints.)",
                "Proof.",
                "By the at-most-one-item observation, we can without loss of generality restrict ourselves to allocations where each bidder receives at most one item.",
                "There are fewer than (|S| + 1)k such allocations-that is, a polynomial number of allocations.",
                "Because we can list the outcomes explicitly, we can simply solve this as a payment-maximizing AMD instance, with linear programming. 8.",
                "RELATED RESEARCH ON COMPLEXITY IN MECHANISM DESIGN There has been considerable recent interest in mechanism design in computer science.",
                "Some of it has focused on issues of computational complexity, but most of that work has strived toward designing mechanisms that are easy to execute (e.g. [20, 15, 19, 9, 12]), rather than studying the complexity of designing the mechanism.",
                "The closest piece of earlier work studied the complexity of automated mechanism design by a benevolent designer [5, 6].",
                "Roughgarden has studied the complexity of designing a good network topology for agents that selfishly choose the links they use [21].",
                "This is related to mechanism design, but differs significantly in that the designer only has restricted control over the rules of the game because there is no party that can impose the outcome (or side payments).",
                "Also, there is no explicit reporting of preferences. 9.",
                "CONCLUSIONS AND FUTURE RESEARCH Often, an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "The key difficulty is that the agents may report their preferences insincerely to make the chosen outcome more favorable to themselves.",
                "Mechanism design is the art of designing the rules of the game so that the agents are motivated to report their preferences truthfully, and a desirable outcome is chosen.",
                "In a recently emerging approach-called automated mechanism design-a mechanism is computed for the specific preference aggregation setting at hand.",
                "This has several advantages, 139 but the downside is that the mechanism design optimization problem needs to be solved anew each time.",
                "Unlike earlier work on automated mechanism design that studied a benevolent designer, in this paper we studied automated mechanism design problems where the designer is self-interesteda setting much more relevant for electronic commerce.",
                "In this setting, the center cares only about which outcome is chosen and what payments are made to it.",
                "The reason that the agents preferences are relevant is that the center is constrained to making each agent at least as well off as the agent would have been had it not participated in the mechanism.",
                "In this setting, we showed that designing an optimal deterministic mechanism is NP-complete in two important special cases: when the center is interested only in the payments made to it, and when payments are not possible and the center is interested only in the outcome chosen.",
                "These hardness results imply hardness in all more general automated mechanism design settings with a self-interested designer.",
                "The hardness results apply whether the individual rationality (participation) constraints are applied ex interim or ex post, and whether the solution concept is dominant strategies implementation or Bayes-Nash equilibrium implementation.",
                "We then showed that allowing randomization in the mechanism makes the design problem in all these settings computationally easy.",
                "Finally, we showed that the paymentmaximizing AMD problem is closely related to an interesting variant of the optimal (revenue-maximizing) combinatorial auction design problem, where the bidders have best-only preferences.",
                "We showed that here, too, designing an optimal deterministic mechanism is NP-complete even with one agent, but designing an optimal randomized mechanism is easy.",
                "Future research includes studying automated mechanism design with a self-interested designer in more restricted settings such as auctions (where the designers objective may include preferences about which bidder should receive the good-as well as payments).",
                "We also want to study the complexity of automated mechanism design in settings where the outcome and type spaces have special structure so they can be represented more concisely.",
                "Finally, we plan to assemble a data set of real-world mechanism design problems-both historical and current-and apply automated mechanism design to those problems. 10.",
                "REFERENCES [1] M. Armstrong.",
                "Optimal multi-object auctions.",
                "Review of Economic Studies, 67:455-481, 2000. [2] K. Arrow.",
                "The property rights doctrine and demand revelation under incomplete information.",
                "In M. Boskin, editor, Economics and human welfare.",
                "New York Academic Press, 1979. [3] C. Avery and T. Hendershott.",
                "Bundling and optimal auctions of multiple products.",
                "Review of Economic Studies, 67:483-497, 2000. [4] E. H. Clarke.",
                "Multipart pricing of public goods.",
                "Public Choice, 11:17-33, 1971. [5] V. Conitzer and T. Sandholm.",
                "Complexity of mechanism design.",
                "In Proceedings of the 18th Annual Conference on Uncertainty in Artificial Intelligence (UAI-02), pages 103-110, Edmonton, Canada, 2002. [6] V. Conitzer and T. Sandholm.",
                "Automated mechanism design: Complexity results stemming from the single-agent setting.",
                "In Proceedings of the 5th International Conference on Electronic Commerce (ICEC-03), pages 17-24, Pittsburgh, PA, USA, 2003. [7] V. Conitzer and T. Sandholm.",
                "Computational criticisms of the revelation principle.",
                "In Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), New York, NY, 2004.",
                "Short paper.",
                "Full-length version appeared in the AAMAS-03 workshop on Agent-Mediated Electronic Commerce (AMEC). [8] C. dAspremont and L. A. G´erard-Varet.",
                "Incentives and incomplete information.",
                "Journal of Public Economics, 11:25-45, 1979. [9] J. Feigenbaum, C. Papadimitriou, and S. Shenker.",
                "Sharing the cost of muliticast transmissions.",
                "Journal of Computer and System Sciences, 63:21-41, 2001.",
                "Early version in Proceedings of the Annual ACM Symposium on Theory of Computing (STOC), 2000. [10] A. Gibbard.",
                "Manipulation of voting schemes.",
                "Econometrica, 41:587-602, 1973. [11] T. Groves.",
                "Incentives in teams.",
                "Econometrica, 41:617-631, 1973. [12] J. Hershberger and S. Suri.",
                "Vickrey prices and shortest paths: What is an edge worth?",
                "In Proceedings of the Annual Symposium on Foundations of Computer Science (FOCS), 2001. [13] L. Khachiyan.",
                "A polynomial algorithm in linear programming.",
                "Soviet Math.",
                "Doklady, 20:191-194, 1979. [14] R. Kohli, R. Krishnamurthi, and P. Mirchandani.",
                "The minimum satisfiability problem.",
                "SIAM Journal of Discrete Mathematics, 7(2):275-283, 1994. [15] D. Lehmann, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in rapid, approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002.",
                "Early version appeared in Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), 1999. [16] A. Mas-Colell, M. Whinston, and J. R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [17] E. S. Maskin and J. Riley.",
                "Optimal multi-unit auctions.",
                "In F. Hahn, editor, The Economics of Missing Markets, Information, and Games, chapter 14, pages 312-335.",
                "Clarendon Press, Oxford, 1989. [18] R. Myerson.",
                "Optimal auction design.",
                "Mathematics of Operation Research, 6:58-73, 1981. [19] N. Nisan and A. Ronen.",
                "Computationally feasible VCG mechanisms.",
                "In Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), pages 242-252, Minneapolis, MN, 2000. [20] N. Nisan and A. Ronen.",
                "Algorithmic mechanism design.",
                "Games and Economic Behavior, 35:166-196, 2001.",
                "Early version in Proceedings of the Annual ACM Symposium on Theory of Computing (STOC), 1999. [21] T. Roughgarden.",
                "Designing networks for selfish users is hard.",
                "In Proceedings of the Annual Symposium on Foundations of Computer Science (FOCS), 2001. [22] T. Sandholm.",
                "Issues in computational Vickrey auctions.",
                "International Journal of Electronic Commerce, 4(3):107-129, 2000.",
                "Special Issue on 140 Applying Intelligent Agents for Electronic Commerce.",
                "A short, early version appeared at the Second International Conference on Multi-Agent Systems (ICMAS), pages 299-306, 1996. [23] M. A. Satterthwaite.",
                "Strategy-proofness and Arrows conditions: existence and correspondence theorems for voting procedures and social welfare functions.",
                "Journal of Economic Theory, 10:187-217, 1975. [24] W. Vickrey.",
                "Counterspeculation, auctions, and competitive sealed tenders.",
                "Journal of Finance, 16:8-37, 1961. [25] R. V. Vohra.",
                "Research problems in combinatorial auctions.",
                "Mimeo, version Oct. 29, 2001. 141"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Para demostrar Nphardness, reducimos del problema \"Minsat\".",
                "Definición 9 (\"Minsat\").",
                "\"Minsat\" recientemente se demostró que es NP-completado [14].",
                "Para mostrar NP-Hardness, reducimos una instancia arbitraria de \"Minsat\" a la siguiente instancia de AMD determinista de pago de pago de un solo agente.",
                "Deje que el tipo de agentes se establece θ = {θc: c ∈ C} ∪ {θv: v ∈ V}, donde C es el conjunto de cláusulas en la instancia \"Minsat\", y V es el conjunto de variables.",
                "Sea l ∈ C denota que la L literal ocurre en la cláusula c.Luego, deje que la función de utilidad de los agentes sea dada por u (θc, ol) = | θ |+ 1 para todos l ∈ L con l ∈ C;u (θc, ol) = 0 para todos l ∈ L con l /∈ C;u (θc, oc) = | θ |+ 1;u (θc, oc) = 0 para todos c ∈ C con c = c;u (θv, ol) = | θ |Para todos l ∈ L con V (L) = V;u (θv, ol) = 0 para todos l ∈ L con v (l) = v;u (θv, oc) = 0 para todos c ∈ C. El objetivo de la instancia AMD es g = | θ |+ | C | −k | θ |, donde K es el objetivo de la instancia \"Minsat\".",
                "Primero, suponga que hay una solución a la instancia \"Minsat\".",
                "Para cada c ∈ C, deje o (θc) = OC;Sea π (θc) = | θ |+ 1 si c no se satisface en la solución \"minsat\", y π (θc) = | θ |Si C está satisfecho.",
                "En este caso, observamos que para ninguno de los tipos, informando que conduce a un resultado OL para una l ∈ C literal, precisamente porque la cláusula no se satisface en la instancia \"Minsat\".",
                "Si S es el número de cláusulas satisfechas en la solución \"minsat\" (de modo que s ≤ k), el pago esperado de este mecanismo es | V || θ |+s | θ |+(| c | −s) (|Θ | +1) | θ |≥ | V || θ |+k | θ |+(| c | −k) (| θ | +1) | θ |= | Θ |+ | C | −k | θ |= G. Entonces hay una solución a la instancia de AMD.",
                "Afirmamos que esta tarea es una solución a la instancia \"Minsat\".",
                "Debido a que nuestro mecanismo logra el objetivo, se deduce que v | θ |+s | θ |+(| c | −s) (| θ | +1) θ ≥ g, que por manipulaciones algebraicas simples es equivalente a s ≤ k.Por lo tanto, hay una solución a la instancia \"Minsat\".",
                "Para mostrar np-dardness, reducimos una instancia arbitraria de \"Minsat\" a la siguiente AMD determinista egoísta de un solo agente sin caso de pagos.",
                "Deje que el tipo de agentes se establece θ = {θc: c ∈ C} ∪ {θv: v ∈ V}, donde C es el conjunto de cláusulas en la instancia \"Minsat\", y V es el conjunto de variables.",
                "Deje que la función objetivo de los diseñadores sea dada por g (o ∗) = | θ | +1;g (ol) = | θ |para todos l ∈ L;g (oc) = | θ |para todos c ∈ C. El objetivo de la instancia AMD es G = | θ |+ | C | −k | θ |, donde K es el objetivo de la instancia \"Minsat\".",
                "Primero, suponga que hay una solución a la instancia \"Minsat\".",
                "Para cada c ∈ C que se satisface en la solución \"Minsat\", deje o (θc) = OC;Para cada c ∈ C insatisfecho, deje o (θc) = O ∗.",
                "En este caso, observamos que para ninguno de los tipos, informando que conduce a un resultado OL para una l ∈ C literal, precisamente porque la cláusula no se satisface en la instancia \"Minsat\".",
                "Si S es el número de cláusulas satisfechas en la solución \"minsat\" (de modo que s ≤ k), entonces el valor esperado de la función objetivo de los diseñadores es | V || θ |+s | θ |+(| c | −s) (| Θ | +1) | θ |≥ | V || θ |+k | θ |+(| c | −k) (| θ | +1) | θ |= | Θ |+ | C | −k | θ |= G. Entonces hay una solución a la instancia de AMD.",
                "Afirmamos que esta tarea es una solución a la instancia \"Minsat\".",
                "Debido a que nuestro mecanismo logra el objetivo, se deduce que v | θ |+s | θ |+(| c | −s) (| θ | +1) θ ≥ g, que por manipulaciones algebraicas simples es equivalente a s ≤ k.Por lo tanto, hay una solución a la instancia \"Minsat\"."
            ],
            "translated_text": "",
            "candidates": [
                "Minsat",
                "Minsat",
                "Minsat",
                "Minsat",
                "Minsat",
                "Minsat",
                "Minsat",
                "Minsat",
                "Minsat",
                "Minsat",
                "Minsat",
                "Minsat",
                "Minsat",
                "Minsat",
                "Minsat",
                "minsat",
                "Minsat",
                "Minsat",
                "Minsat",
                "minsat",
                "Minsat",
                "Minsat",
                "Minsat",
                "Minsat",
                "Minsat",
                "Minsat",
                "Minsat",
                "Minsat",
                "Minsat",
                "Minsat",
                "Minsat",
                "Minsat",
                "Minsat",
                "Minsat",
                "Minsat",
                "Minsat",
                "Minsat",
                "minsat",
                "Minsat",
                "Minsat",
                "Minsat",
                "Minsat"
            ],
            "error": []
        },
        "self-interested amd": {
            "translated_key": "amd egoísta",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Self-interested Automated Mechanism Design and Implications for Optimal Combinatorial Auctions∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT Often, an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "The key difficulty is that the agents may report their preferences insincerely to make the chosen outcome more favorable to themselves.",
                "Mechanism design is the art of designing the rules of the game so that the agents are motivated to report their preferences truthfully, and a desirable outcome is chosen.",
                "In a recently proposed approach-called automated mechanism design-a mechanism is computed for the preference aggregation setting at hand.",
                "This has several advantages, but the downside is that the mechanism design optimization problem needs to be solved anew each time.",
                "Unlike the earlier work on automated mechanism design that studied a benevolent designer, in this paper we study automated mechanism design problems where the designer is self-interested.",
                "In this case, the center cares only about which outcome is chosen and what payments are made to it.",
                "The reason that the agents preferences are relevant is that the center is constrained to making each agent at least as well off as the agent would have been had it not participated in the mechanism.",
                "In this setting, we show that designing optimal deterministic mechanisms is NP-complete in two important special cases: when the center is interested only in the payments made to it, and when payments are not possible and the center is interested only in the outcome chosen.",
                "We then show how allowing for randomization in the mechanism makes problems in this setting computationally easy.",
                "Finally, we show that the payment-maximizing AMD problem is closely related to an interesting variant of the optimal (revenuemaximizing) combinatorial auction design problem, where the bidders have best-only preferences.",
                "We show that here, too, designing an optimal deterministic auction is NPcomplete, but designing an optimal randomized auction is easy.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In multiagent settings, often an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "Such outcomes could be potential presidents, joint plans, allocations of goods or resources, etc.",
                "The preference aggregator generally does not know the agents preferences a priori.",
                "Rather, the agents report their preferences to the coordinator.",
                "Unfortunately, an agent may have an incentive to misreport its preferences in order to mislead the mechanism into selecting an outcome that is more desirable to the agent than the outcome that would be selected if the agent revealed its preferences truthfully.",
                "Such manipulation is undesirable because preference aggregation mechanisms are tailored to aggregate preferences in a socially desirable way, and if the agents reveal their preferences insincerely, a socially undesirable outcome may be chosen.",
                "Manipulability is a pervasive problem across preference aggregation mechanisms.",
                "A seminal negative result, the Gibbard-Satterthwaite theorem, shows that under any nondictatorial preference aggregation scheme, if there are at least 3 possible outcomes, there are preferences under which an agent is better off reporting untruthfully [10, 23]. (A preference aggregation scheme is called dictatorial if one of the agents dictates the outcome no matter what preferences the other agents report.)",
                "What the aggregator would like to do is design a preference aggregation mechanism so that 1) the self-interested agents are motivated to report their preferences truthfully, and 2) the mechanism chooses an outcome that is desirable from the perspective of some objective.",
                "This is the classic setting of mechanism design in game theory.",
                "In this paper, we study the case where the designer is self-interested, that is, the designer does not directly care about how the out132 come relates to the agents preferences, but is rather concerned with its own agenda for which outcome should be chosen, and with maximizing payments to itself.",
                "This is the mechanism design setting most relevant to electronic commerce.",
                "In the case where the mechanism designer is interested in maximizing some notion of social welfare, the importance of collecting the agents preferences is clear.",
                "It is perhaps less obvious why they should be collected when the designer is self-interested and hence its objective is not directly related to the agents preferences.",
                "The reason for this is that often the agents preferences impose limits on how the designer chooses the outcome and payments.",
                "The most common such constraint is that of individual rationality (IR), which means that the mechanism cannot make any agent worse off than the agent would have been had it not participated in the mechanism.",
                "For instance, in the setting of optimal auction design, the designer (auctioneer) is only concerned with how much revenue is collected, and not per se with how well the allocation of the good (or goods) corresponds to the agents preferences.",
                "Nevertheless, the designer cannot force an agent to pay more than its valuation for the bundle of goods allocated to it.",
                "Therefore, even a self-interested designer will choose an outcome that makes the agents reasonably well off.",
                "On the other hand, the designer will not necessarily choose a social welfare maximizing outcome.",
                "For example, if the designer always chooses an outcome that maximizes social welfare with respect to the reported preferences, and forces each agent to pay the difference between the utility it has now and the utility it would have had if it had not participated in the mechanism, it is easy to see that agents may have an incentive to misreport their preferences-and this may actually lead to less revenue being collected.",
                "Indeed, one of the counterintuitive results of optimal auction design theory is that sometimes the good is allocated to nobody even when the auctioneer has a reservation price of 0.",
                "Classical mechanism design provides some general mechanisms, which, under certain assumptions, satisfy some notion of nonmanipulability and maximize some objective.",
                "The upside of these mechanisms is that they do not rely on (even probabilistic) information about the agents preferences (e.g., the Vickrey-Clarke-Groves (VCG) mechanism [24, 4, 11]), or they can be easily applied to any probability distribution over the preferences (e.g., the dAGVA mechanism [8, 2], the Myerson auction [18], and the Maskin-Riley multi-unit auction [17]).",
                "However, the general mechanisms also have significant downsides: • The most famous and most broadly applicable general mechanisms, VCG and dAGVA, only maximize social welfare.",
                "If the designer is self-interested, as is the case in many electronic commerce settings, these mechanisms do not maximize the designers objective. • The general mechanisms that do focus on a selfinterested designer are only applicable in very restricted settings-such as Myersons expected revenue maximizing auction for selling a single item, and Maskin and Rileys expected revenue maximizing auction for selling multiple identical units of an item. • Even in the restricted settings in which these mechanisms apply, the mechanisms only allow for payment maximization.",
                "In practice, the designer may also be interested in the outcome per se.",
                "For example, an auctioneer may care which bidder receives the item. • It is often assumed that side payments can be used to tailor the agents incentives, but this is not always practical.",
                "For example, in barter-based electronic marketplaces-such as Recipco, firstbarter.com, BarterOne, and Intagio-side payments are not allowed.",
                "Furthermore, among software agents, it might be more desirable to construct mechanisms that do not rely on the ability to make payments, because many software agents do not have the infrastructure to make payments.",
                "In contrast, we follow a recent approach where the mechanism is designed automatically for the specific problem at hand.",
                "This approach addresses all of the downsides listed above.",
                "We formulate the mechanism design problem as an optimization problem.",
                "The input is characterized by the number of agents, the agents possible types (preferences), and the aggregators prior distributions over the agents types.",
                "The output is a nonmanipulable mechanism that is optimal with respect to some objective.",
                "This approach is called automated mechanism design.",
                "The automated mechanism design approach has four advantages over the classical approach of designing general mechanisms.",
                "First, it can be used even in settings that do not satisfy the assumptions of the classical mechanisms (such as availability of side payments or that the objective is social welfare).",
                "Second, it may allow one to circumvent impossibility results (such as the Gibbard-Satterthwaite theorem) which state that there is no mechanism that is desirable across all preferences.",
                "When the mechanism is designed for the setting at hand, it does not matter that it would not work more generally.",
                "Third, it may yield better mechanisms (in terms of stronger nonmanipulability guarantees and/or better outcomes) than classical mechanisms because the mechanism capitalizes on the particulars of the setting (the probabilistic information that the designer has about the agents types).",
                "Given the vast amount of information that parties have about each other today, this approach is likely to lead to tremendous savings over classical mechanisms, which largely ignore that information.",
                "For example, imagine a company automatically creating its procurement mechanism based on statistical knowledge about its suppliers, rather than using a classical descending procurement auction.",
                "Fourth, the burden of design is shifted from humans to a machine.",
                "However, automated mechanism design requires the mechanism design optimization problem to be solved anew for each setting.",
                "Hence its computational complexity becomes a key issue.",
                "Previous research has studied this question for benevolent designers-that wish to maximize, for example, social welfare [5, 6].",
                "In this paper we study the computational complexity of automated mechanism design in the case of a self-interested designer.",
                "This is an important setting for automated mechanism design due to the shortage of general mechanisms in this area, and the fact that in most e-commerce settings the designer is self-interested.",
                "We also show that this problem is closely related to a particular optimal (revenue-maximizing) combinatorial auction design problem. 133 The rest of this paper is organized as follows.",
                "In Section 2, we justify the focus on nonmanipulable mechanisms.",
                "In Section 3, we define the problem we study.",
                "In Section 4, we show that designing an optimal deterministic mechanism is NP-complete even when the designer only cares about the payments made to it.",
                "In Section 5, we show that designing an optimal deterministic mechanism is also NP-complete when payments are not possible and the designer is only interested in the outcome chosen.",
                "In Section 6, we show that an optimal randomized mechanism can be designed in polynomial time even in the general case.",
                "Finally, in Section 7, we show that for designing optimal combinatorial auctions under best-only preferences, our results on AMD imply that this problem is NP-complete for deterministic auctions, but easy for randomized auctions. 2.",
                "JUSTIFYING THE FOCUS ON NONMANIPULABLE MECHANISMS Before we define the computational problem of automated mechanism design, we should justify our focus on nonmanipulable mechanisms.",
                "After all, it is not immediately obvious that there are no manipulable mechanisms that, even when agents report their types strategically and hence sometimes untruthfully, still reach better outcomes (according to whatever objective we use) than any nonmanipulable mechanism.",
                "This does, however, turn out to be the case: given any mechanism, we can construct a nonmanipulable mechanism whose performance is identical, as follows.",
                "We build an interface layer between the agents and the original mechanism.",
                "The agents report their preferences (or types) to the interface layer; subsequently, the interface layer inputs into the original mechanism the types that the agents would have strategically reported to the original mechanism, if their types were as declared to the interface layer.",
                "The resulting outcome is the outcome of the new mechanism.",
                "Since the interface layer acts strategically on each agents behalf, there is never an incentive to report falsely to the interface layer; and hence, the types reported by the interface layer are the strategic types that would have been reported without the interface layer, so the results are exactly as they would have been with the original mechanism.",
                "This argument is known in the mechanism design literature as the revelation principle [16]. (There are computational difficulties with applying the revelation principle in large combinatorial outcome and type spaces [7, 22].",
                "However, because here we focus on flatly represented outcome and type spaces, this is not a concern here.)",
                "Given this, we can focus on truthful mechanisms in the rest of the paper. 3.",
                "DEFINITIONS We now formalize the automated mechanism design setting.",
                "Definition 1.",
                "In an automated mechanism design setting, we are given: • a finite set of outcomes O; • a finite set of N agents; • for each agent i, 1. a finite set of types Θi, 2. a probability distribution γi over Θi (in the case of correlated types, there is a single joint distribution γ over Θ1 × . . . × ΘN ), and 3. a utility function ui : Θi × O → R; 1 • An objective function whose expectation the designer wishes to maximize.",
                "There are many possible objective functions the designer might have, for example, social welfare (where the designer seeks to maximize the sum of the agents utilities), or the minimum utility of any agent (where the designer seeks to maximize the worst utility had by any agent).",
                "In both of these cases, the designer is benevolent, because the designer, in some sense, is pursuing the agents collective happiness.",
                "However, in this paper, we focus on the case of a self-interested designer.",
                "A self-interested designer cares only about the outcome chosen (that is, the designer does not care how the outcome relates to the agents preferences, but rather has a fixed preference over the outcomes), and about the net payments made by the agents, which flow to the designer.",
                "Definition 2.",
                "A self-interested designer has an objective function given by g(o) + N i=1 πi, where g : O → R indicates the designers own preference over the outcomes, and πi is the payment made by agent i.",
                "In the case where g = 0 everywhere, the designer is said to be payment maximizing.",
                "In the case where payments are not possible, g constitutes the objective function by itself.",
                "We now define the kinds of mechanisms under study.",
                "By the revelation principle, we can restrict attention to truthful, direct revelation mechanisms, where agents report their types directly and never have an incentive to misreport them.",
                "Definition 3.",
                "We consider the following kinds of mechanism: • A deterministic mechanism without payments consists of an outcome selection function o : Θ1 × Θ2 × . . . × ΘN → O. • A randomized mechanism without payments consists of a distribution selection function p : Θ1 × Θ2 × . . . × ΘN → P(O), where P(O) is the set of probability distributions over O. • A deterministic mechanism with payments consists of an outcome selection function o : Θ1 ×Θ2 ×. . .×ΘN → O and for each agent i, a payment selection function πi : Θ1 × Θ2 × . . . × ΘN → R, where πi(θ1, . . . , θN ) gives the payment made by agent i when the reported types are θ1, . . . , θN . 1 Though this follows standard game theory notation [16], the fact that the agent has both a utility function and a type is perhaps confusing.",
                "The types encode the various possible preferences that the agent may turn out to have, and the agents type is not known to the aggregator.",
                "The utility function is common knowledge, but because the agents type is a parameter in the agents utility function, the aggregator cannot know what the agents utility is without knowing the agents type. 134 • A randomized mechanism with payments consists of a distribution selection function p : Θ1 × Θ2 × . . . × ΘN → P(O), and for each agent i, a payment selection function πi : Θ1 × Θ2 × . . . × ΘN → R.2 There are two types of constraint on the designer in building the mechanism. 3.1 Individual rationality (IR) constraints The first type of constraint is the following.",
                "The utility of each agent has to be at least as great as the agents fallback utility, that is, the utility that the agent would receive if it did not participate in the mechanism.",
                "Otherwise that agent would not participate in the mechanism-and no agents participation can ever hurt the mechanism designers objective because at worst, the mechanism can ignore an agent by pretending the agent is not there. (Furthermore, if no such constraint applied, the designer could simply make the agents pay an infinite amount.)",
                "This type of constraint is called an IR (individual rationality) constraint.",
                "There are three different possible IR constraints: ex ante, ex interim, and ex post, depending on what the agent knows about its own type and the others types when deciding whether to participate in the mechanism.",
                "Ex ante IR means that the agent would participate if it knew nothing at all (not even its own type).",
                "We will not study this concept in this paper.",
                "Ex interim IR means that the agent would always participate if it knew only its own type, but not those of the others.",
                "Ex post IR means that the agent would always participate even if it knew everybodys type.",
                "We will define the latter two notions of IR formally.",
                "First, we need to formalize the concept of the fallback outcome.",
                "We assume that each agents fallback utility is zero for each one of its types.",
                "This is without loss of generality because we can add a constant term to an agents utility function (for a given type), without affecting the decision-making behavior of that expected utility maximizing agent [16].",
                "Definition 4.",
                "In any automated mechanism design setting with an IR constraint, there is a fallback outcome o0 ∈ O where, for any agent i and any type θi ∈ Θi, we have ui(θi, o0) = 0. (Additionally, in the case of a self-interested designer, g(o0) = 0.)",
                "We can now to define the notions of individual rationality.",
                "Definition 5.",
                "Individual rationality (IR) is defined by: • A deterministic mechanism is ex interim IR if for any agent i, and any type θi ∈ Θi, we have E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, .., θN ))−πi(θ1, .., θN )] ≥ 0.",
                "A randomized mechanism is ex interim IR if for any agent i, and any type θi ∈ Θi, we have E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,..,θn [ui(θi, o)−πi(θ1, .., θN )] ≥ 0. • A deterministic mechanism is ex post IR if for any agent i, and any type vector (θ1, . . . , θN ) ∈ Θ1 × . . . × ΘN , we have ui(θi, o(θ1, . . . , θN )) − πi(θ1, . . . , θN ) ≥ 0. 2 We do not randomize over payments because as long as the agents and the designer are risk neutral with respect to payments, that is, their utility is linear in payments, there is no reason to randomize over payments.",
                "A randomized mechanism is ex post IR if for any agent i, and any type vector (θ1, . . . , θN ) ∈ Θ1 × . . . × ΘN , we have Eo|θ1,..,θn [ui(θi, o) − πi(θ1, .., θN )] ≥ 0.",
                "The terms involving payments can be left out in the case where payments are not possible. 3.2 Incentive compatibility (IC) constraints The second type of constraint says that the agents should never have an incentive to misreport their type (as justified above by the revelation principle).",
                "For this type of constraint, the two most common variants (or solution concepts) are implementation in dominant strategies, and implementation in Bayes-Nash equilibrium.",
                "Definition 6.",
                "Given an automated mechanism design setting, a mechanism is said to implement its outcome and payment functions in dominant strategies if truthtelling is always optimal even when the types reported by the other agents are already known.",
                "Formally, for any agent i, any type vector (θ1, . . . , θi, . . . , θN ) ∈ Θ1 × . . . × Θi × . . . × ΘN , and any alternative type report ˆθi ∈ Θi, in the case of deterministic mechanisms we have ui(θi, o(θ1, . . . , θi, . . . , θN )) − πi(θ1, . . . , θi, . . . , θN ) ≥ ui(θi, o(θ1, . . . , ˆθi, . . . , θN )) − πi(θ1, . . . , ˆθi, . . . , θN ).",
                "In the case of randomized mechanisms we have Eo|θ1,..,θi,..,θn [ui(θi, o) − πi(θ1, . . . , θi, . . . , θN )] ≥ Eo|θ1,.., ˆθi,..,θn [ui(θi, o) − πi(θ1, . . . , ˆθi, . . . , θN )].",
                "The terms involving payments can be left out in the case where payments are not possible.",
                "Thus, in dominant strategies implementation, truthtelling is optimal regardless of what the other agents report.",
                "If it is optimal only given that the other agents are truthful, and given that one does not know the other agents types, we have implementation in Bayes-Nash equilibrium.",
                "Definition 7.",
                "Given an automated mechanism design setting, a mechanism is said to implement its outcome and payment functions in Bayes-Nash equilibrium if truthtelling is always optimal to an agent when that agent does not yet know anything about the other agents types, and the other agents are telling the truth.",
                "Formally, for any agent i, any type θi ∈ Θi, and any alternative type report ˆθi ∈ Θi, in the case of deterministic mechanisms we have E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, . . . , θi, . . . , θN ))− πi(θ1, . . . , θi, . . . , θN )] ≥ E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, . . . , ˆθi, . . . , θN ))− πi(θ1, . . . , ˆθi, . . . , θN )].",
                "In the case of randomized mechanisms we have E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,..,θi,..,θn [ui(θi, o)− πi(θ1, . . . , θi, . . . , θN )] ≥ E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,.., ˆθi,..,θn [ui(θi, o)− πi(θ1, . . . , ˆθi, . . . , θN )].",
                "The terms involving payments can be left out in the case where payments are not possible. 135 3.3 Automated mechanism design We can now define the computational problem we study.",
                "Definition 8. (AUTOMATED-MECHANISM-DESIGN (AMD)) We are given: • an automated mechanism design setting, • an IR notion (ex interim, ex post, or none), • a solution concept (dominant strategies or Bayes-Nash), • whether payments are possible, • whether randomization is possible, • (in the decision variant of the problem) a target value G. We are asked whether there exists a mechanism of the specified kind (in terms of payments and randomization) that satisfies both the IR notion and the solution concept, and gives an expected value of at least G for the objective.",
                "An interesting special case is the setting where there is only one agent.",
                "In this case, the reporting agent always knows everything there is to know about the other agents types-because there are no other agents.",
                "Since ex post and ex interim IR only differ on what an agent is assumed to know about other agents types, the two IR concepts coincide here.",
                "Also, because implementation in dominant strategies and implementation in Bayes-Nash equilibrium only differ on what an agent is assumed to know about other agents types, the two solution concepts coincide here.",
                "This observation will prove to be a useful tool in proving hardness results: if we prove computational hardness in the singleagent setting, this immediately implies hardness for both IR concepts, for both solution concepts, for any number of agents. 4.",
                "PAYMENT-MAXIMIZINGDETERMINISTIC AMD IS HARD In this section we demonstrate that it is NP-complete to design a deterministic mechanism that maximizes the expected sum of the payments collected from the agents.",
                "We show that this problem is hard even in the single-agent setting, thereby immediately showing it hard for both IR concepts, for both solution concepts.",
                "To demonstrate NPhardness, we reduce from the MINSAT problem.",
                "Definition 9 (MINSAT).",
                "We are given a formula φ in conjunctive normal form, represented by a set of Boolean variables V and a set of clauses C, and an integer K (K < |C|).",
                "We are asked whether there exists an assignment to the variables in V such that at most K clauses in φ are satisfied.",
                "MINSAT was recently shown to be NP-complete [14].",
                "We can now present our result.",
                "Theorem 1.",
                "Payment-maximizing deterministic AMD is NP-complete, even for a single agent, even with a uniform distribution over types.",
                "Proof.",
                "It is easy to show that the problem is in NP.",
                "To show NP-hardness, we reduce an arbitrary MINSAT instance to the following single-agent payment-maximizing deterministic AMD instance.",
                "Let the agents type set be Θ = {θc : c ∈ C} ∪ {θv : v ∈ V }, where C is the set of clauses in the MINSAT instance, and V is the set of variables.",
                "Let the probability distribution over these types be uniform.",
                "Let the outcome set be O = {o0} ∪ {oc : c ∈ C} ∪ {ol : l ∈ L}, where L is the set of literals, that is, L = {+v : v ∈ V } ∪ {−v : v ∈ V }.",
                "Let the notation v(l) = v denote that v is the variable corresponding to the literal l, that is, l ∈ {+v, −v}.",
                "Let l ∈ c denote that the literal l occurs in clause c. Then, let the agents utility function be given by u(θc, ol) = |Θ| + 1 for all l ∈ L with l ∈ c; u(θc, ol) = 0 for all l ∈ L with l /∈ c; u(θc, oc) = |Θ| + 1; u(θc, oc ) = 0 for all c ∈ C with c = c ; u(θv, ol) = |Θ| for all l ∈ L with v(l) = v; u(θv, ol) = 0 for all l ∈ L with v(l) = v; u(θv, oc) = 0 for all c ∈ C. The goal of the AMD instance is G = |Θ| + |C|−K |Θ| , where K is the goal of the MINSAT instance.",
                "We show the instances are equivalent.",
                "First, suppose there is a solution to the MINSAT instance.",
                "Let the assignment of truth values to the variables in this solution be given by the function f : V → L (where v(f(v)) = v for all v ∈ V ).",
                "Then, for every v ∈ V , let o(θv) = of(v) and π(θv) = |Θ|.",
                "For every c ∈ C, let o(θc) = oc; let π(θc) = |Θ| + 1 if c is not satisfied in the MINSAT solution, and π(θc) = |Θ| if c is satisfied.",
                "It is straightforward to check that the IR constraint is satisfied.",
                "We now check that the agent has no incentive to misreport.",
                "If the agents type is some θv, then any other report will give it an outcome that is no better, for a payment that is no less, so it has no incentive to misreport.",
                "If the agents type is some θc where c is a satisfied clause, again, any other report will give it an outcome that is no better, for a payment that is no less, so it has no incentive to misreport.",
                "The final case to check is where the agents type is some θc where c is an unsatisfied clause.",
                "In this case, we observe that for none of the types, reporting it leads to an outcome ol for a literal l ∈ c, precisely because the clause is not satisfied in the MINSAT instance.",
                "Because also, no type besides θc leads to the outcome oc, reporting any other type will give an outcome with utility 0, while still forcing a payment of at least |Θ| from the agent.",
                "Clearly the agent is better off reporting truthfully, for a total utility of 0.",
                "This establishes that the agent never has an incentive to misreport.",
                "Finally, we show that the goal is reached.",
                "If s is the number of satisfied clauses in the MINSAT solution (so that s ≤ K), the expected payment from this mechanism is |V ||Θ|+s|Θ|+(|C|−s)(|Θ|+1) |Θ| ≥ |V ||Θ|+K|Θ|+(|C|−K)(|Θ|+1) |Θ| = |Θ| + |C|−K |Θ| = G. So there is a solution to the AMD instance.",
                "Now suppose there is a solution to the AMD instance, given by an outcome function o and a payment function π.",
                "First, suppose there is some v ∈ V such that o(θv) /∈ {o+v, o−v}.",
                "Then the utility that the agent derives from the given outcome for this type is 0, and hence, by IR, no payment can be extracted from the agent for this type.",
                "Because, again by IR, the maximum payment that can be extracted for any other type is |Θ| + 1, it follows that the maximum expected payment that could be obtained is at most (|Θ|−1)(|Θ|+1) |Θ| < |Θ| < G, contradicting that this is a solution to the AMD instance.",
                "It follows that in the solution to the AMD instance, for every v ∈ V , o(θv) ∈ {o+v, o−v}. 136 We can interpret this as an assignment of truth values to the variables: v is set to true if o(θv) = o+v, and to false if o(θv) = o−v.",
                "We claim this assignment is a solution to the MINSAT instance.",
                "By the IR constraint, the maximum payment we can extract from any type θv is |Θ|.",
                "Because there can be no incentives for the agent to report falsely, for any clause c satisfied by the given assignment, the maximum payment we can extract for the corresponding type θc is |Θ|. (For if we extracted more from this type, the agents utility in this case would be less than 1; and if v is the variable satisfying c in the assignment, so that o(θv) = ol where l occurs in c, then the agent would be better off reporting θv instead of the truthful report θc, to get an outcome worth |Θ|+1 to it while having to pay at most |Θ|.)",
                "Finally, for any unsatisfied clause c, by the IR constraint, the maximum payment we can extract for the corresponding type θc is |Θ| + 1.",
                "It follows that the expected payment from our mechanism is at most V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ , where s is the number of satisfied clauses.",
                "Because our mechanism achieves the goal, it follows that V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ ≥ G, which by simple algebraic manipulations is equivalent to s ≤ K. So there is a solution to the MINSAT instance.",
                "Because payment-maximizing AMD is just the special case of AMD for a self-interested designer where the designer has no preferences over the outcome chosen, this immediately implies hardness for the general case of AMD for a selfinterested designer where payments are possible.",
                "However, it does not yet imply hardness for the special case where payments are not possible.",
                "We will prove hardness in this case in the next section. 5.",
                "SELF-INTERESTED DETERMINISTIC AMD WITHOUT PAYMENTS IS HARD In this section we demonstrate that it is NP-complete to design a deterministic mechanism that maximizes the expectation of the designers objective when payments are not possible.",
                "We show that this problem is hard even in the single-agent setting, thereby immediately showing it hard for both IR concepts, for both solution concepts.",
                "Theorem 2.",
                "Without payments, deterministic AMD for a self-interested designer is NP-complete, even for a single agent, even with a uniform distribution over types.",
                "Proof.",
                "It is easy to show that the problem is in NP.",
                "To show NP-hardness, we reduce an arbitrary MINSAT instance to the following single-agent self-interested deterministic AMD without payments instance.",
                "Let the agents type set be Θ = {θc : c ∈ C} ∪ {θv : v ∈ V }, where C is the set of clauses in the MINSAT instance, and V is the set of variables.",
                "Let the probability distribution over these types be uniform.",
                "Let the outcome set be O = {o0} ∪ {oc : c ∈ C}∪{ol : l ∈ L}∪{o∗ }, where L is the set of literals, that is, L = {+v : v ∈ V } ∪ {−v : v ∈ V }.",
                "Let the notation v(l) = v denote that v is the variable corresponding to the literal l, that is, l ∈ {+v, −v}.",
                "Let l ∈ c denote that the literal l occurs in clause c. Then, let the agents utility function be given by u(θc, ol) = 2 for all l ∈ L with l ∈ c; u(θc, ol) = −1 for all l ∈ L with l /∈ c; u(θc, oc) = 2; u(θc, oc ) = −1 for all c ∈ C with c = c ; u(θc, o∗ ) = 1; u(θv, ol) = 1 for all l ∈ L with v(l) = v; u(θv, ol) = −1 for all l ∈ L with v(l) = v; u(θv, oc) = −1 for all c ∈ C; u(θv, o∗ ) = −1.",
                "Let the designers objective function be given by g(o∗ ) = |Θ|+1; g(ol) = |Θ| for all l ∈ L; g(oc) = |Θ| for all c ∈ C. The goal of the AMD instance is G = |Θ| + |C|−K |Θ| , where K is the goal of the MINSAT instance.",
                "We show the instances are equivalent.",
                "First, suppose there is a solution to the MINSAT instance.",
                "Let the assignment of truth values to the variables in this solution be given by the function f : V → L (where v(f(v)) = v for all v ∈ V ).",
                "Then, for every v ∈ V , let o(θv) = of(v).",
                "For every c ∈ C that is satisfied in the MINSAT solution, let o(θc) = oc; for every unsatisfied c ∈ C, let o(θc) = o∗ .",
                "It is straightforward to check that the IR constraint is satisfied.",
                "We now check that the agent has no incentive to misreport.",
                "If the agents type is some θv, it is getting the maximum utility for that type, so it has no incentive to misreport.",
                "If the agents type is some θc where c is a satisfied clause, again, it is getting the maximum utility for that type, so it has no incentive to misreport.",
                "The final case to check is where the agents type is some θc where c is an unsatisfied clause.",
                "In this case, we observe that for none of the types, reporting it leads to an outcome ol for a literal l ∈ c, precisely because the clause is not satisfied in the MINSAT instance.",
                "Because also, no type leads to the outcome oc, there is no outcome that the mechanism ever selects that would give the agent utility greater than 1 for type θc, and hence the agent has no incentive to report falsely.",
                "This establishes that the agent never has an incentive to misreport.",
                "Finally, we show that the goal is reached.",
                "If s is the number of satisfied clauses in the MINSAT solution (so that s ≤ K), then the expected value of the designers objective function is |V ||Θ|+s|Θ|+(|C|−s)(|Θ|+1) |Θ| ≥ |V ||Θ|+K|Θ|+(|C|−K)(|Θ|+1) |Θ| = |Θ| + |C|−K |Θ| = G. So there is a solution to the AMD instance.",
                "Now suppose there is a solution to the AMD instance, given by an outcome function o.",
                "First, suppose there is some v ∈ V such that o(θv) /∈ {o+v, o−v}.",
                "The only other outcome that the mechanism is allowed to choose under the IR constraint is o0.",
                "This has an objective value of 0, and because the highest value the objective function ever takes is |Θ| + 1, it follows that the maximum expected value of the objective function that could be obtained is at most (|Θ|−1)(|Θ|+1) |Θ| < |Θ| < G, contradicting that this is a solution to the AMD instance.",
                "It follows that in the solution to the AMD instance, for every v ∈ V , o(θv) ∈ {o+v, o−v}.",
                "We can interpret this as an assignment of truth values to the variables: v is set to true if o(θv) = o+v, and to false if o(θv) = o−v.",
                "We claim this assignment is a solution to the MINSAT instance.",
                "By the above, for any type θv, the value of the objective function in this mechanism will be |Θ|.",
                "For any clause c satisfied by the given assignment, the value of the objective function in the case where the agent reports type θc will be at most |Θ|. (This is because we cannot choose the outcome o∗ for such a type, as in this case the agent would have an incentive to report θv instead, where v is the variable satisfying c in the assignment (so that o(θv) = ol where l occurs in c).)",
                "Finally, for any unsatisfied clause c, the maximum value the objective function can take in the case where the agent reports type θc is |Θ| + 1, simply because this is the largest value the function ever takes.",
                "It follows that the expected value of the objective function for our mechanism is at most V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ , where s is the number of satisfied 137 clauses.",
                "Because our mechanism achieves the goal, it follows that V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ ≥ G, which by simple algebraic manipulations is equivalent to s ≤ K. So there is a solution to the MINSAT instance.",
                "Both of our hardness results relied on the constraint that the mechanism should be deterministic.",
                "In the next section, we show that the hardness of design disappears when we allow for randomization in the mechanism. 6.",
                "RANDOMIZED AMD FOR A SELFINTERESTED DESIGNER IS EASY We now show how allowing for randomization over the outcomes makes the problem of <br>self-interested amd</br> tractable through linear programming, for any constant number of agents.",
                "Theorem 3.",
                "Self-interested randomized AMD with a constant number of agents is solvable in polynomial time by linear programming, both with and without payments, both for ex post and ex interim IR, and both for implementation in dominant strategies and for implementation in Bayes-Nash equilibrium-even if the types are correlated.",
                "Proof.",
                "Because linear programs can be solved in polynomial time [13], all we need to show is that the number of variables and equations in our program is polynomial for any constant number of agents-that is, exponential only in N. Throughout, for purposes of determining the size of the linear program, let T = maxi{|Θi|}.",
                "The variables of our linear program will be the probabilities (p(θ1, θ2, . . . , θN ))(o) (at most TN |O| variables) and the payments πi(θ1, θ2, . . . , θN ) (at most NTN variables). (We show the linear program for the case where payments are possible; the case without payments is easily obtained from this by simply omitting all the payment variables in the program, or by adding additional constraints forcing the payments to be 0.)",
                "First, we show the IR constraints.",
                "For ex post IR, we add the following (at most NTN ) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, and for every (θ1, θ2, . . . , θN ) ∈ Θ1 × Θ2 × . . . × ΘN , we add ( o∈O (p(θ1, θ2, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , θN ) ≥ 0.",
                "For ex interim IR, we add the following (at most NT) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, for every θi ∈ Θi, we add θ1,... ,θN γ(θ1, . . . , θN |θi)(( o∈O (p(θ1, θ2, . . . , θN ))(o)u(θi, o))− πi(θ1, θ2, . . . , θN )) ≥ 0.",
                "Now, we show the solution concept constraints.",
                "For implementation in dominant strategies, we add the following (at most NTN+1 ) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, for every (θ1, θ2, . . . , θi, . . . , θN ) ∈ Θ1 × Θ2 × . . . × ΘN , and for every alternative type report ˆθi ∈ Θi, we add the constraint ( o∈O (p(θ1, θ2, . . . , θi, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , θi, . . . , θN ) ≥ ( o∈O (p(θ1, θ2, . . . , ˆθi, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , ˆθi, . . . , θN ).",
                "Finally, for implementation in Bayes-Nash equilibrium, we add the following (at most NT2 ) constraints to the LP: • For every i ∈ {1, 2, ..., N}, for every θi ∈ Θi, and for every alternative type report ˆθi ∈ Θi, we add the constraint θ1,...,θN γ(θ1, ..., θN |θi)(( o∈O (p(θ1, θ2, ..., θi, ..., θN ))(o)u(θi, o)) − πi(θ1, θ2, ..., θi, ..., θN )) ≥ θ1,...,θN γ(θ1, ..., θN |θi)(( o∈O (p(θ1, θ2, ..., ˆθi, ..., θN ))(o)u(θi, o)) − πi(θ1, θ2, ..., ˆθi, ..., θN )).",
                "All that is left to do is to give the expression the designer is seeking to maximize, which is: • θ1,...,θN γ(θ1, ..., θN )(( o∈O (p(θ1, θ2, ..., θi, ..., θN ))(o)g(o)) + N i=1 πi(θ1, θ2, ..., θN )).",
                "As we indicated, the number of variables and constraints is exponential only in N, and hence the linear program is of polynomial size for constant numbers of agents.",
                "Thus the problem is solvable in polynomial time. 7.",
                "IMPLICATIONS FOR AN OPTIMAL COMBINATORIAL AUCTION DESIGN PROBLEM In this section, we will demonstrate some interesting consequences of the problem of automated mechanism design for a self-interested designer on designing optimal combinatorial auctions.",
                "Consider a combinatorial auction with a set S of items for sale.",
                "For any bundle B ⊆ S, let ui(θi, B) be bidder is utility for receiving bundle B when the bidders type is θi.",
                "The optimal auction design problem is to specify the rules of the auction so as to maximize expected revenue to the auctioneer. (By the revelation principle, without loss of generality, we can assume the auction is truthful.)",
                "The optimal auction design problem is solved for the case of a single item by the famous Myerson auction [18].",
                "However, designing optimal auctions in combinatorial auctions is a recognized open research problem [3, 25].",
                "The problem is open even if there are only two items for sale. (The twoitem case with a very special form of complementarity and no substitutability has been solved recently [1].)",
                "Suppose we have free disposal-items can be thrown away at no cost.",
                "Also, suppose that the bidders preferences have the following structure: whenever a bidder receives a bundle of items, the bidders utility for that bundle is determined by the best item in the bundle only. (We emphasize that 138 which item is the best is allowed to depend on the bidders type.)",
                "Definition 10.",
                "Bidder i is said to have best-only preferences over bundles of items if there exists a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s).",
                "We make the following useful observation in this setting: there is no sense in awarding a bidder more than one item.",
                "The reason is that if the bidder is reporting truthfully, taking all but the highest valued item away from the bidder will not hurt the bidder; and, by free disposal, doing so can only reduce the incentive for this bidder to falsely report this type, when the bidder actually has another type.",
                "We now show that the problem of designing a deterministic optimal auction here is NP-complete, by a reduction from the payment maximizing AMD problem!",
                "Theorem 4.",
                "Given an optimal combinatorial auction design problem under best-only preferences (given by a set of items S and for each bidder i, a finite type space Θi and a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s)), designing the optimal deterministic auction is NP-complete, even for a single bidder with a uniform distribution over types.",
                "Proof.",
                "The problem is in NP because we can nondeterministically generate an allocation rule, and then set the payments using linear programming.",
                "To show NP-hardness, we reduce an arbitrary paymentmaximizing deterministic AMD instance, with a single agent and a uniform distribution over types, to the following optimal combinatorial auction design problem instance with a single bidder with best-only preferences.",
                "For every outcome o ∈ O in the AMD instance (besides the outcome o0), let there be one item so ∈ S. Let the type space be the same, and let v(θi, so) = ui(θi, o) (where u is as specified in the AMD instance).",
                "Let the expected revenue target value be the same in both instances.",
                "We show the instances are equivalent.",
                "First suppose there exists a solution to the AMD instance, given by an outcome function and a payment function.",
                "Then, if the AMD solution chooses outcome o for a type, in the optimal auction solution, allocate {so} to the bidder for this type. (Unless o = o0, in which case we allocate {} to the bidder.)",
                "Let the payment functions be the same in both instances.",
                "Then, the utility that an agent receives for reporting a type (given the true type) in either solution is the same, so we have incentive compatibility in the optimal auction solution.",
                "Moreover, because the type distribution and the payment function are the same, the expected revenue to the auctioneer/designer is the same.",
                "It follows that there exists a solution to the optimal auction design instance.",
                "Now suppose there exists a solution to the optimal auction design instance.",
                "By the at-most-one-item observation, we can assume without loss of generality that the solution never allocates more than one item.",
                "Then, if the optimal auction solution allocates item so to the bidder for a type, in the AMD solution, let the mechanism choose outcome o for that type.",
                "If the optimal auction solution allocates nothing to the bidder for a type, in the AMD solution, let the mechanism choose outcome o0 for that type.",
                "Let the payment functions be the same.",
                "Then, the utility that an agent receives for reporting a type (given the true type) in either solution is the same, so we have incentive compatibility in the AMD solution.",
                "Moreover, because the type distribution and the payment function are the same, the expected revenue to the designer/auctioneer is the same.",
                "It follows that there exists a solution to the AMD instance.",
                "Fortunately, we can also carry through the easiness result for randomized mechanisms to this combinatorial auction setting-giving us one of the few known polynomial-time algorithms for an optimal combinatorial auction design problem.",
                "Theorem 5.",
                "Given an optimal combinatorial auction design problem under best-only preferences (given by a set of items S and for each bidder i, a finite type space Θi and a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s)), if the number of bidders is a constant k, then the optimal randomized auction can be designed in polynomial time. (For any IC and IR constraints.)",
                "Proof.",
                "By the at-most-one-item observation, we can without loss of generality restrict ourselves to allocations where each bidder receives at most one item.",
                "There are fewer than (|S| + 1)k such allocations-that is, a polynomial number of allocations.",
                "Because we can list the outcomes explicitly, we can simply solve this as a payment-maximizing AMD instance, with linear programming. 8.",
                "RELATED RESEARCH ON COMPLEXITY IN MECHANISM DESIGN There has been considerable recent interest in mechanism design in computer science.",
                "Some of it has focused on issues of computational complexity, but most of that work has strived toward designing mechanisms that are easy to execute (e.g. [20, 15, 19, 9, 12]), rather than studying the complexity of designing the mechanism.",
                "The closest piece of earlier work studied the complexity of automated mechanism design by a benevolent designer [5, 6].",
                "Roughgarden has studied the complexity of designing a good network topology for agents that selfishly choose the links they use [21].",
                "This is related to mechanism design, but differs significantly in that the designer only has restricted control over the rules of the game because there is no party that can impose the outcome (or side payments).",
                "Also, there is no explicit reporting of preferences. 9.",
                "CONCLUSIONS AND FUTURE RESEARCH Often, an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "The key difficulty is that the agents may report their preferences insincerely to make the chosen outcome more favorable to themselves.",
                "Mechanism design is the art of designing the rules of the game so that the agents are motivated to report their preferences truthfully, and a desirable outcome is chosen.",
                "In a recently emerging approach-called automated mechanism design-a mechanism is computed for the specific preference aggregation setting at hand.",
                "This has several advantages, 139 but the downside is that the mechanism design optimization problem needs to be solved anew each time.",
                "Unlike earlier work on automated mechanism design that studied a benevolent designer, in this paper we studied automated mechanism design problems where the designer is self-interesteda setting much more relevant for electronic commerce.",
                "In this setting, the center cares only about which outcome is chosen and what payments are made to it.",
                "The reason that the agents preferences are relevant is that the center is constrained to making each agent at least as well off as the agent would have been had it not participated in the mechanism.",
                "In this setting, we showed that designing an optimal deterministic mechanism is NP-complete in two important special cases: when the center is interested only in the payments made to it, and when payments are not possible and the center is interested only in the outcome chosen.",
                "These hardness results imply hardness in all more general automated mechanism design settings with a self-interested designer.",
                "The hardness results apply whether the individual rationality (participation) constraints are applied ex interim or ex post, and whether the solution concept is dominant strategies implementation or Bayes-Nash equilibrium implementation.",
                "We then showed that allowing randomization in the mechanism makes the design problem in all these settings computationally easy.",
                "Finally, we showed that the paymentmaximizing AMD problem is closely related to an interesting variant of the optimal (revenue-maximizing) combinatorial auction design problem, where the bidders have best-only preferences.",
                "We showed that here, too, designing an optimal deterministic mechanism is NP-complete even with one agent, but designing an optimal randomized mechanism is easy.",
                "Future research includes studying automated mechanism design with a self-interested designer in more restricted settings such as auctions (where the designers objective may include preferences about which bidder should receive the good-as well as payments).",
                "We also want to study the complexity of automated mechanism design in settings where the outcome and type spaces have special structure so they can be represented more concisely.",
                "Finally, we plan to assemble a data set of real-world mechanism design problems-both historical and current-and apply automated mechanism design to those problems. 10.",
                "REFERENCES [1] M. Armstrong.",
                "Optimal multi-object auctions.",
                "Review of Economic Studies, 67:455-481, 2000. [2] K. Arrow.",
                "The property rights doctrine and demand revelation under incomplete information.",
                "In M. Boskin, editor, Economics and human welfare.",
                "New York Academic Press, 1979. [3] C. Avery and T. Hendershott.",
                "Bundling and optimal auctions of multiple products.",
                "Review of Economic Studies, 67:483-497, 2000. [4] E. H. Clarke.",
                "Multipart pricing of public goods.",
                "Public Choice, 11:17-33, 1971. [5] V. Conitzer and T. Sandholm.",
                "Complexity of mechanism design.",
                "In Proceedings of the 18th Annual Conference on Uncertainty in Artificial Intelligence (UAI-02), pages 103-110, Edmonton, Canada, 2002. [6] V. Conitzer and T. Sandholm.",
                "Automated mechanism design: Complexity results stemming from the single-agent setting.",
                "In Proceedings of the 5th International Conference on Electronic Commerce (ICEC-03), pages 17-24, Pittsburgh, PA, USA, 2003. [7] V. Conitzer and T. Sandholm.",
                "Computational criticisms of the revelation principle.",
                "In Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), New York, NY, 2004.",
                "Short paper.",
                "Full-length version appeared in the AAMAS-03 workshop on Agent-Mediated Electronic Commerce (AMEC). [8] C. dAspremont and L. A. G´erard-Varet.",
                "Incentives and incomplete information.",
                "Journal of Public Economics, 11:25-45, 1979. [9] J. Feigenbaum, C. Papadimitriou, and S. Shenker.",
                "Sharing the cost of muliticast transmissions.",
                "Journal of Computer and System Sciences, 63:21-41, 2001.",
                "Early version in Proceedings of the Annual ACM Symposium on Theory of Computing (STOC), 2000. [10] A. Gibbard.",
                "Manipulation of voting schemes.",
                "Econometrica, 41:587-602, 1973. [11] T. Groves.",
                "Incentives in teams.",
                "Econometrica, 41:617-631, 1973. [12] J. Hershberger and S. Suri.",
                "Vickrey prices and shortest paths: What is an edge worth?",
                "In Proceedings of the Annual Symposium on Foundations of Computer Science (FOCS), 2001. [13] L. Khachiyan.",
                "A polynomial algorithm in linear programming.",
                "Soviet Math.",
                "Doklady, 20:191-194, 1979. [14] R. Kohli, R. Krishnamurthi, and P. Mirchandani.",
                "The minimum satisfiability problem.",
                "SIAM Journal of Discrete Mathematics, 7(2):275-283, 1994. [15] D. Lehmann, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in rapid, approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002.",
                "Early version appeared in Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), 1999. [16] A. Mas-Colell, M. Whinston, and J. R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [17] E. S. Maskin and J. Riley.",
                "Optimal multi-unit auctions.",
                "In F. Hahn, editor, The Economics of Missing Markets, Information, and Games, chapter 14, pages 312-335.",
                "Clarendon Press, Oxford, 1989. [18] R. Myerson.",
                "Optimal auction design.",
                "Mathematics of Operation Research, 6:58-73, 1981. [19] N. Nisan and A. Ronen.",
                "Computationally feasible VCG mechanisms.",
                "In Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), pages 242-252, Minneapolis, MN, 2000. [20] N. Nisan and A. Ronen.",
                "Algorithmic mechanism design.",
                "Games and Economic Behavior, 35:166-196, 2001.",
                "Early version in Proceedings of the Annual ACM Symposium on Theory of Computing (STOC), 1999. [21] T. Roughgarden.",
                "Designing networks for selfish users is hard.",
                "In Proceedings of the Annual Symposium on Foundations of Computer Science (FOCS), 2001. [22] T. Sandholm.",
                "Issues in computational Vickrey auctions.",
                "International Journal of Electronic Commerce, 4(3):107-129, 2000.",
                "Special Issue on 140 Applying Intelligent Agents for Electronic Commerce.",
                "A short, early version appeared at the Second International Conference on Multi-Agent Systems (ICMAS), pages 299-306, 1996. [23] M. A. Satterthwaite.",
                "Strategy-proofness and Arrows conditions: existence and correspondence theorems for voting procedures and social welfare functions.",
                "Journal of Economic Theory, 10:187-217, 1975. [24] W. Vickrey.",
                "Counterspeculation, auctions, and competitive sealed tenders.",
                "Journal of Finance, 16:8-37, 1961. [25] R. V. Vohra.",
                "Research problems in combinatorial auctions.",
                "Mimeo, version Oct. 29, 2001. 141"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "La AMD aleatoria para un diseñador interesado es fácil, ahora mostramos cómo permitir la aleatorización sobre los resultados hace que el problema de la AMD \"egoísta\" a través de la programación lineal, para cualquier número constante de agentes."
            ],
            "translated_text": "",
            "candidates": [
                "AMD interesada en sí misma",
                "egoísta"
            ],
            "error": []
        },
        "complementarity": {
            "translated_key": "Complementariedad",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Self-interested Automated Mechanism Design and Implications for Optimal Combinatorial Auctions∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT Often, an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "The key difficulty is that the agents may report their preferences insincerely to make the chosen outcome more favorable to themselves.",
                "Mechanism design is the art of designing the rules of the game so that the agents are motivated to report their preferences truthfully, and a desirable outcome is chosen.",
                "In a recently proposed approach-called automated mechanism design-a mechanism is computed for the preference aggregation setting at hand.",
                "This has several advantages, but the downside is that the mechanism design optimization problem needs to be solved anew each time.",
                "Unlike the earlier work on automated mechanism design that studied a benevolent designer, in this paper we study automated mechanism design problems where the designer is self-interested.",
                "In this case, the center cares only about which outcome is chosen and what payments are made to it.",
                "The reason that the agents preferences are relevant is that the center is constrained to making each agent at least as well off as the agent would have been had it not participated in the mechanism.",
                "In this setting, we show that designing optimal deterministic mechanisms is NP-complete in two important special cases: when the center is interested only in the payments made to it, and when payments are not possible and the center is interested only in the outcome chosen.",
                "We then show how allowing for randomization in the mechanism makes problems in this setting computationally easy.",
                "Finally, we show that the payment-maximizing AMD problem is closely related to an interesting variant of the optimal (revenuemaximizing) combinatorial auction design problem, where the bidders have best-only preferences.",
                "We show that here, too, designing an optimal deterministic auction is NPcomplete, but designing an optimal randomized auction is easy.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In multiagent settings, often an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "Such outcomes could be potential presidents, joint plans, allocations of goods or resources, etc.",
                "The preference aggregator generally does not know the agents preferences a priori.",
                "Rather, the agents report their preferences to the coordinator.",
                "Unfortunately, an agent may have an incentive to misreport its preferences in order to mislead the mechanism into selecting an outcome that is more desirable to the agent than the outcome that would be selected if the agent revealed its preferences truthfully.",
                "Such manipulation is undesirable because preference aggregation mechanisms are tailored to aggregate preferences in a socially desirable way, and if the agents reveal their preferences insincerely, a socially undesirable outcome may be chosen.",
                "Manipulability is a pervasive problem across preference aggregation mechanisms.",
                "A seminal negative result, the Gibbard-Satterthwaite theorem, shows that under any nondictatorial preference aggregation scheme, if there are at least 3 possible outcomes, there are preferences under which an agent is better off reporting untruthfully [10, 23]. (A preference aggregation scheme is called dictatorial if one of the agents dictates the outcome no matter what preferences the other agents report.)",
                "What the aggregator would like to do is design a preference aggregation mechanism so that 1) the self-interested agents are motivated to report their preferences truthfully, and 2) the mechanism chooses an outcome that is desirable from the perspective of some objective.",
                "This is the classic setting of mechanism design in game theory.",
                "In this paper, we study the case where the designer is self-interested, that is, the designer does not directly care about how the out132 come relates to the agents preferences, but is rather concerned with its own agenda for which outcome should be chosen, and with maximizing payments to itself.",
                "This is the mechanism design setting most relevant to electronic commerce.",
                "In the case where the mechanism designer is interested in maximizing some notion of social welfare, the importance of collecting the agents preferences is clear.",
                "It is perhaps less obvious why they should be collected when the designer is self-interested and hence its objective is not directly related to the agents preferences.",
                "The reason for this is that often the agents preferences impose limits on how the designer chooses the outcome and payments.",
                "The most common such constraint is that of individual rationality (IR), which means that the mechanism cannot make any agent worse off than the agent would have been had it not participated in the mechanism.",
                "For instance, in the setting of optimal auction design, the designer (auctioneer) is only concerned with how much revenue is collected, and not per se with how well the allocation of the good (or goods) corresponds to the agents preferences.",
                "Nevertheless, the designer cannot force an agent to pay more than its valuation for the bundle of goods allocated to it.",
                "Therefore, even a self-interested designer will choose an outcome that makes the agents reasonably well off.",
                "On the other hand, the designer will not necessarily choose a social welfare maximizing outcome.",
                "For example, if the designer always chooses an outcome that maximizes social welfare with respect to the reported preferences, and forces each agent to pay the difference between the utility it has now and the utility it would have had if it had not participated in the mechanism, it is easy to see that agents may have an incentive to misreport their preferences-and this may actually lead to less revenue being collected.",
                "Indeed, one of the counterintuitive results of optimal auction design theory is that sometimes the good is allocated to nobody even when the auctioneer has a reservation price of 0.",
                "Classical mechanism design provides some general mechanisms, which, under certain assumptions, satisfy some notion of nonmanipulability and maximize some objective.",
                "The upside of these mechanisms is that they do not rely on (even probabilistic) information about the agents preferences (e.g., the Vickrey-Clarke-Groves (VCG) mechanism [24, 4, 11]), or they can be easily applied to any probability distribution over the preferences (e.g., the dAGVA mechanism [8, 2], the Myerson auction [18], and the Maskin-Riley multi-unit auction [17]).",
                "However, the general mechanisms also have significant downsides: • The most famous and most broadly applicable general mechanisms, VCG and dAGVA, only maximize social welfare.",
                "If the designer is self-interested, as is the case in many electronic commerce settings, these mechanisms do not maximize the designers objective. • The general mechanisms that do focus on a selfinterested designer are only applicable in very restricted settings-such as Myersons expected revenue maximizing auction for selling a single item, and Maskin and Rileys expected revenue maximizing auction for selling multiple identical units of an item. • Even in the restricted settings in which these mechanisms apply, the mechanisms only allow for payment maximization.",
                "In practice, the designer may also be interested in the outcome per se.",
                "For example, an auctioneer may care which bidder receives the item. • It is often assumed that side payments can be used to tailor the agents incentives, but this is not always practical.",
                "For example, in barter-based electronic marketplaces-such as Recipco, firstbarter.com, BarterOne, and Intagio-side payments are not allowed.",
                "Furthermore, among software agents, it might be more desirable to construct mechanisms that do not rely on the ability to make payments, because many software agents do not have the infrastructure to make payments.",
                "In contrast, we follow a recent approach where the mechanism is designed automatically for the specific problem at hand.",
                "This approach addresses all of the downsides listed above.",
                "We formulate the mechanism design problem as an optimization problem.",
                "The input is characterized by the number of agents, the agents possible types (preferences), and the aggregators prior distributions over the agents types.",
                "The output is a nonmanipulable mechanism that is optimal with respect to some objective.",
                "This approach is called automated mechanism design.",
                "The automated mechanism design approach has four advantages over the classical approach of designing general mechanisms.",
                "First, it can be used even in settings that do not satisfy the assumptions of the classical mechanisms (such as availability of side payments or that the objective is social welfare).",
                "Second, it may allow one to circumvent impossibility results (such as the Gibbard-Satterthwaite theorem) which state that there is no mechanism that is desirable across all preferences.",
                "When the mechanism is designed for the setting at hand, it does not matter that it would not work more generally.",
                "Third, it may yield better mechanisms (in terms of stronger nonmanipulability guarantees and/or better outcomes) than classical mechanisms because the mechanism capitalizes on the particulars of the setting (the probabilistic information that the designer has about the agents types).",
                "Given the vast amount of information that parties have about each other today, this approach is likely to lead to tremendous savings over classical mechanisms, which largely ignore that information.",
                "For example, imagine a company automatically creating its procurement mechanism based on statistical knowledge about its suppliers, rather than using a classical descending procurement auction.",
                "Fourth, the burden of design is shifted from humans to a machine.",
                "However, automated mechanism design requires the mechanism design optimization problem to be solved anew for each setting.",
                "Hence its computational complexity becomes a key issue.",
                "Previous research has studied this question for benevolent designers-that wish to maximize, for example, social welfare [5, 6].",
                "In this paper we study the computational complexity of automated mechanism design in the case of a self-interested designer.",
                "This is an important setting for automated mechanism design due to the shortage of general mechanisms in this area, and the fact that in most e-commerce settings the designer is self-interested.",
                "We also show that this problem is closely related to a particular optimal (revenue-maximizing) combinatorial auction design problem. 133 The rest of this paper is organized as follows.",
                "In Section 2, we justify the focus on nonmanipulable mechanisms.",
                "In Section 3, we define the problem we study.",
                "In Section 4, we show that designing an optimal deterministic mechanism is NP-complete even when the designer only cares about the payments made to it.",
                "In Section 5, we show that designing an optimal deterministic mechanism is also NP-complete when payments are not possible and the designer is only interested in the outcome chosen.",
                "In Section 6, we show that an optimal randomized mechanism can be designed in polynomial time even in the general case.",
                "Finally, in Section 7, we show that for designing optimal combinatorial auctions under best-only preferences, our results on AMD imply that this problem is NP-complete for deterministic auctions, but easy for randomized auctions. 2.",
                "JUSTIFYING THE FOCUS ON NONMANIPULABLE MECHANISMS Before we define the computational problem of automated mechanism design, we should justify our focus on nonmanipulable mechanisms.",
                "After all, it is not immediately obvious that there are no manipulable mechanisms that, even when agents report their types strategically and hence sometimes untruthfully, still reach better outcomes (according to whatever objective we use) than any nonmanipulable mechanism.",
                "This does, however, turn out to be the case: given any mechanism, we can construct a nonmanipulable mechanism whose performance is identical, as follows.",
                "We build an interface layer between the agents and the original mechanism.",
                "The agents report their preferences (or types) to the interface layer; subsequently, the interface layer inputs into the original mechanism the types that the agents would have strategically reported to the original mechanism, if their types were as declared to the interface layer.",
                "The resulting outcome is the outcome of the new mechanism.",
                "Since the interface layer acts strategically on each agents behalf, there is never an incentive to report falsely to the interface layer; and hence, the types reported by the interface layer are the strategic types that would have been reported without the interface layer, so the results are exactly as they would have been with the original mechanism.",
                "This argument is known in the mechanism design literature as the revelation principle [16]. (There are computational difficulties with applying the revelation principle in large combinatorial outcome and type spaces [7, 22].",
                "However, because here we focus on flatly represented outcome and type spaces, this is not a concern here.)",
                "Given this, we can focus on truthful mechanisms in the rest of the paper. 3.",
                "DEFINITIONS We now formalize the automated mechanism design setting.",
                "Definition 1.",
                "In an automated mechanism design setting, we are given: • a finite set of outcomes O; • a finite set of N agents; • for each agent i, 1. a finite set of types Θi, 2. a probability distribution γi over Θi (in the case of correlated types, there is a single joint distribution γ over Θ1 × . . . × ΘN ), and 3. a utility function ui : Θi × O → R; 1 • An objective function whose expectation the designer wishes to maximize.",
                "There are many possible objective functions the designer might have, for example, social welfare (where the designer seeks to maximize the sum of the agents utilities), or the minimum utility of any agent (where the designer seeks to maximize the worst utility had by any agent).",
                "In both of these cases, the designer is benevolent, because the designer, in some sense, is pursuing the agents collective happiness.",
                "However, in this paper, we focus on the case of a self-interested designer.",
                "A self-interested designer cares only about the outcome chosen (that is, the designer does not care how the outcome relates to the agents preferences, but rather has a fixed preference over the outcomes), and about the net payments made by the agents, which flow to the designer.",
                "Definition 2.",
                "A self-interested designer has an objective function given by g(o) + N i=1 πi, where g : O → R indicates the designers own preference over the outcomes, and πi is the payment made by agent i.",
                "In the case where g = 0 everywhere, the designer is said to be payment maximizing.",
                "In the case where payments are not possible, g constitutes the objective function by itself.",
                "We now define the kinds of mechanisms under study.",
                "By the revelation principle, we can restrict attention to truthful, direct revelation mechanisms, where agents report their types directly and never have an incentive to misreport them.",
                "Definition 3.",
                "We consider the following kinds of mechanism: • A deterministic mechanism without payments consists of an outcome selection function o : Θ1 × Θ2 × . . . × ΘN → O. • A randomized mechanism without payments consists of a distribution selection function p : Θ1 × Θ2 × . . . × ΘN → P(O), where P(O) is the set of probability distributions over O. • A deterministic mechanism with payments consists of an outcome selection function o : Θ1 ×Θ2 ×. . .×ΘN → O and for each agent i, a payment selection function πi : Θ1 × Θ2 × . . . × ΘN → R, where πi(θ1, . . . , θN ) gives the payment made by agent i when the reported types are θ1, . . . , θN . 1 Though this follows standard game theory notation [16], the fact that the agent has both a utility function and a type is perhaps confusing.",
                "The types encode the various possible preferences that the agent may turn out to have, and the agents type is not known to the aggregator.",
                "The utility function is common knowledge, but because the agents type is a parameter in the agents utility function, the aggregator cannot know what the agents utility is without knowing the agents type. 134 • A randomized mechanism with payments consists of a distribution selection function p : Θ1 × Θ2 × . . . × ΘN → P(O), and for each agent i, a payment selection function πi : Θ1 × Θ2 × . . . × ΘN → R.2 There are two types of constraint on the designer in building the mechanism. 3.1 Individual rationality (IR) constraints The first type of constraint is the following.",
                "The utility of each agent has to be at least as great as the agents fallback utility, that is, the utility that the agent would receive if it did not participate in the mechanism.",
                "Otherwise that agent would not participate in the mechanism-and no agents participation can ever hurt the mechanism designers objective because at worst, the mechanism can ignore an agent by pretending the agent is not there. (Furthermore, if no such constraint applied, the designer could simply make the agents pay an infinite amount.)",
                "This type of constraint is called an IR (individual rationality) constraint.",
                "There are three different possible IR constraints: ex ante, ex interim, and ex post, depending on what the agent knows about its own type and the others types when deciding whether to participate in the mechanism.",
                "Ex ante IR means that the agent would participate if it knew nothing at all (not even its own type).",
                "We will not study this concept in this paper.",
                "Ex interim IR means that the agent would always participate if it knew only its own type, but not those of the others.",
                "Ex post IR means that the agent would always participate even if it knew everybodys type.",
                "We will define the latter two notions of IR formally.",
                "First, we need to formalize the concept of the fallback outcome.",
                "We assume that each agents fallback utility is zero for each one of its types.",
                "This is without loss of generality because we can add a constant term to an agents utility function (for a given type), without affecting the decision-making behavior of that expected utility maximizing agent [16].",
                "Definition 4.",
                "In any automated mechanism design setting with an IR constraint, there is a fallback outcome o0 ∈ O where, for any agent i and any type θi ∈ Θi, we have ui(θi, o0) = 0. (Additionally, in the case of a self-interested designer, g(o0) = 0.)",
                "We can now to define the notions of individual rationality.",
                "Definition 5.",
                "Individual rationality (IR) is defined by: • A deterministic mechanism is ex interim IR if for any agent i, and any type θi ∈ Θi, we have E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, .., θN ))−πi(θ1, .., θN )] ≥ 0.",
                "A randomized mechanism is ex interim IR if for any agent i, and any type θi ∈ Θi, we have E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,..,θn [ui(θi, o)−πi(θ1, .., θN )] ≥ 0. • A deterministic mechanism is ex post IR if for any agent i, and any type vector (θ1, . . . , θN ) ∈ Θ1 × . . . × ΘN , we have ui(θi, o(θ1, . . . , θN )) − πi(θ1, . . . , θN ) ≥ 0. 2 We do not randomize over payments because as long as the agents and the designer are risk neutral with respect to payments, that is, their utility is linear in payments, there is no reason to randomize over payments.",
                "A randomized mechanism is ex post IR if for any agent i, and any type vector (θ1, . . . , θN ) ∈ Θ1 × . . . × ΘN , we have Eo|θ1,..,θn [ui(θi, o) − πi(θ1, .., θN )] ≥ 0.",
                "The terms involving payments can be left out in the case where payments are not possible. 3.2 Incentive compatibility (IC) constraints The second type of constraint says that the agents should never have an incentive to misreport their type (as justified above by the revelation principle).",
                "For this type of constraint, the two most common variants (or solution concepts) are implementation in dominant strategies, and implementation in Bayes-Nash equilibrium.",
                "Definition 6.",
                "Given an automated mechanism design setting, a mechanism is said to implement its outcome and payment functions in dominant strategies if truthtelling is always optimal even when the types reported by the other agents are already known.",
                "Formally, for any agent i, any type vector (θ1, . . . , θi, . . . , θN ) ∈ Θ1 × . . . × Θi × . . . × ΘN , and any alternative type report ˆθi ∈ Θi, in the case of deterministic mechanisms we have ui(θi, o(θ1, . . . , θi, . . . , θN )) − πi(θ1, . . . , θi, . . . , θN ) ≥ ui(θi, o(θ1, . . . , ˆθi, . . . , θN )) − πi(θ1, . . . , ˆθi, . . . , θN ).",
                "In the case of randomized mechanisms we have Eo|θ1,..,θi,..,θn [ui(θi, o) − πi(θ1, . . . , θi, . . . , θN )] ≥ Eo|θ1,.., ˆθi,..,θn [ui(θi, o) − πi(θ1, . . . , ˆθi, . . . , θN )].",
                "The terms involving payments can be left out in the case where payments are not possible.",
                "Thus, in dominant strategies implementation, truthtelling is optimal regardless of what the other agents report.",
                "If it is optimal only given that the other agents are truthful, and given that one does not know the other agents types, we have implementation in Bayes-Nash equilibrium.",
                "Definition 7.",
                "Given an automated mechanism design setting, a mechanism is said to implement its outcome and payment functions in Bayes-Nash equilibrium if truthtelling is always optimal to an agent when that agent does not yet know anything about the other agents types, and the other agents are telling the truth.",
                "Formally, for any agent i, any type θi ∈ Θi, and any alternative type report ˆθi ∈ Θi, in the case of deterministic mechanisms we have E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, . . . , θi, . . . , θN ))− πi(θ1, . . . , θi, . . . , θN )] ≥ E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, . . . , ˆθi, . . . , θN ))− πi(θ1, . . . , ˆθi, . . . , θN )].",
                "In the case of randomized mechanisms we have E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,..,θi,..,θn [ui(θi, o)− πi(θ1, . . . , θi, . . . , θN )] ≥ E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,.., ˆθi,..,θn [ui(θi, o)− πi(θ1, . . . , ˆθi, . . . , θN )].",
                "The terms involving payments can be left out in the case where payments are not possible. 135 3.3 Automated mechanism design We can now define the computational problem we study.",
                "Definition 8. (AUTOMATED-MECHANISM-DESIGN (AMD)) We are given: • an automated mechanism design setting, • an IR notion (ex interim, ex post, or none), • a solution concept (dominant strategies or Bayes-Nash), • whether payments are possible, • whether randomization is possible, • (in the decision variant of the problem) a target value G. We are asked whether there exists a mechanism of the specified kind (in terms of payments and randomization) that satisfies both the IR notion and the solution concept, and gives an expected value of at least G for the objective.",
                "An interesting special case is the setting where there is only one agent.",
                "In this case, the reporting agent always knows everything there is to know about the other agents types-because there are no other agents.",
                "Since ex post and ex interim IR only differ on what an agent is assumed to know about other agents types, the two IR concepts coincide here.",
                "Also, because implementation in dominant strategies and implementation in Bayes-Nash equilibrium only differ on what an agent is assumed to know about other agents types, the two solution concepts coincide here.",
                "This observation will prove to be a useful tool in proving hardness results: if we prove computational hardness in the singleagent setting, this immediately implies hardness for both IR concepts, for both solution concepts, for any number of agents. 4.",
                "PAYMENT-MAXIMIZINGDETERMINISTIC AMD IS HARD In this section we demonstrate that it is NP-complete to design a deterministic mechanism that maximizes the expected sum of the payments collected from the agents.",
                "We show that this problem is hard even in the single-agent setting, thereby immediately showing it hard for both IR concepts, for both solution concepts.",
                "To demonstrate NPhardness, we reduce from the MINSAT problem.",
                "Definition 9 (MINSAT).",
                "We are given a formula φ in conjunctive normal form, represented by a set of Boolean variables V and a set of clauses C, and an integer K (K < |C|).",
                "We are asked whether there exists an assignment to the variables in V such that at most K clauses in φ are satisfied.",
                "MINSAT was recently shown to be NP-complete [14].",
                "We can now present our result.",
                "Theorem 1.",
                "Payment-maximizing deterministic AMD is NP-complete, even for a single agent, even with a uniform distribution over types.",
                "Proof.",
                "It is easy to show that the problem is in NP.",
                "To show NP-hardness, we reduce an arbitrary MINSAT instance to the following single-agent payment-maximizing deterministic AMD instance.",
                "Let the agents type set be Θ = {θc : c ∈ C} ∪ {θv : v ∈ V }, where C is the set of clauses in the MINSAT instance, and V is the set of variables.",
                "Let the probability distribution over these types be uniform.",
                "Let the outcome set be O = {o0} ∪ {oc : c ∈ C} ∪ {ol : l ∈ L}, where L is the set of literals, that is, L = {+v : v ∈ V } ∪ {−v : v ∈ V }.",
                "Let the notation v(l) = v denote that v is the variable corresponding to the literal l, that is, l ∈ {+v, −v}.",
                "Let l ∈ c denote that the literal l occurs in clause c. Then, let the agents utility function be given by u(θc, ol) = |Θ| + 1 for all l ∈ L with l ∈ c; u(θc, ol) = 0 for all l ∈ L with l /∈ c; u(θc, oc) = |Θ| + 1; u(θc, oc ) = 0 for all c ∈ C with c = c ; u(θv, ol) = |Θ| for all l ∈ L with v(l) = v; u(θv, ol) = 0 for all l ∈ L with v(l) = v; u(θv, oc) = 0 for all c ∈ C. The goal of the AMD instance is G = |Θ| + |C|−K |Θ| , where K is the goal of the MINSAT instance.",
                "We show the instances are equivalent.",
                "First, suppose there is a solution to the MINSAT instance.",
                "Let the assignment of truth values to the variables in this solution be given by the function f : V → L (where v(f(v)) = v for all v ∈ V ).",
                "Then, for every v ∈ V , let o(θv) = of(v) and π(θv) = |Θ|.",
                "For every c ∈ C, let o(θc) = oc; let π(θc) = |Θ| + 1 if c is not satisfied in the MINSAT solution, and π(θc) = |Θ| if c is satisfied.",
                "It is straightforward to check that the IR constraint is satisfied.",
                "We now check that the agent has no incentive to misreport.",
                "If the agents type is some θv, then any other report will give it an outcome that is no better, for a payment that is no less, so it has no incentive to misreport.",
                "If the agents type is some θc where c is a satisfied clause, again, any other report will give it an outcome that is no better, for a payment that is no less, so it has no incentive to misreport.",
                "The final case to check is where the agents type is some θc where c is an unsatisfied clause.",
                "In this case, we observe that for none of the types, reporting it leads to an outcome ol for a literal l ∈ c, precisely because the clause is not satisfied in the MINSAT instance.",
                "Because also, no type besides θc leads to the outcome oc, reporting any other type will give an outcome with utility 0, while still forcing a payment of at least |Θ| from the agent.",
                "Clearly the agent is better off reporting truthfully, for a total utility of 0.",
                "This establishes that the agent never has an incentive to misreport.",
                "Finally, we show that the goal is reached.",
                "If s is the number of satisfied clauses in the MINSAT solution (so that s ≤ K), the expected payment from this mechanism is |V ||Θ|+s|Θ|+(|C|−s)(|Θ|+1) |Θ| ≥ |V ||Θ|+K|Θ|+(|C|−K)(|Θ|+1) |Θ| = |Θ| + |C|−K |Θ| = G. So there is a solution to the AMD instance.",
                "Now suppose there is a solution to the AMD instance, given by an outcome function o and a payment function π.",
                "First, suppose there is some v ∈ V such that o(θv) /∈ {o+v, o−v}.",
                "Then the utility that the agent derives from the given outcome for this type is 0, and hence, by IR, no payment can be extracted from the agent for this type.",
                "Because, again by IR, the maximum payment that can be extracted for any other type is |Θ| + 1, it follows that the maximum expected payment that could be obtained is at most (|Θ|−1)(|Θ|+1) |Θ| < |Θ| < G, contradicting that this is a solution to the AMD instance.",
                "It follows that in the solution to the AMD instance, for every v ∈ V , o(θv) ∈ {o+v, o−v}. 136 We can interpret this as an assignment of truth values to the variables: v is set to true if o(θv) = o+v, and to false if o(θv) = o−v.",
                "We claim this assignment is a solution to the MINSAT instance.",
                "By the IR constraint, the maximum payment we can extract from any type θv is |Θ|.",
                "Because there can be no incentives for the agent to report falsely, for any clause c satisfied by the given assignment, the maximum payment we can extract for the corresponding type θc is |Θ|. (For if we extracted more from this type, the agents utility in this case would be less than 1; and if v is the variable satisfying c in the assignment, so that o(θv) = ol where l occurs in c, then the agent would be better off reporting θv instead of the truthful report θc, to get an outcome worth |Θ|+1 to it while having to pay at most |Θ|.)",
                "Finally, for any unsatisfied clause c, by the IR constraint, the maximum payment we can extract for the corresponding type θc is |Θ| + 1.",
                "It follows that the expected payment from our mechanism is at most V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ , where s is the number of satisfied clauses.",
                "Because our mechanism achieves the goal, it follows that V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ ≥ G, which by simple algebraic manipulations is equivalent to s ≤ K. So there is a solution to the MINSAT instance.",
                "Because payment-maximizing AMD is just the special case of AMD for a self-interested designer where the designer has no preferences over the outcome chosen, this immediately implies hardness for the general case of AMD for a selfinterested designer where payments are possible.",
                "However, it does not yet imply hardness for the special case where payments are not possible.",
                "We will prove hardness in this case in the next section. 5.",
                "SELF-INTERESTED DETERMINISTIC AMD WITHOUT PAYMENTS IS HARD In this section we demonstrate that it is NP-complete to design a deterministic mechanism that maximizes the expectation of the designers objective when payments are not possible.",
                "We show that this problem is hard even in the single-agent setting, thereby immediately showing it hard for both IR concepts, for both solution concepts.",
                "Theorem 2.",
                "Without payments, deterministic AMD for a self-interested designer is NP-complete, even for a single agent, even with a uniform distribution over types.",
                "Proof.",
                "It is easy to show that the problem is in NP.",
                "To show NP-hardness, we reduce an arbitrary MINSAT instance to the following single-agent self-interested deterministic AMD without payments instance.",
                "Let the agents type set be Θ = {θc : c ∈ C} ∪ {θv : v ∈ V }, where C is the set of clauses in the MINSAT instance, and V is the set of variables.",
                "Let the probability distribution over these types be uniform.",
                "Let the outcome set be O = {o0} ∪ {oc : c ∈ C}∪{ol : l ∈ L}∪{o∗ }, where L is the set of literals, that is, L = {+v : v ∈ V } ∪ {−v : v ∈ V }.",
                "Let the notation v(l) = v denote that v is the variable corresponding to the literal l, that is, l ∈ {+v, −v}.",
                "Let l ∈ c denote that the literal l occurs in clause c. Then, let the agents utility function be given by u(θc, ol) = 2 for all l ∈ L with l ∈ c; u(θc, ol) = −1 for all l ∈ L with l /∈ c; u(θc, oc) = 2; u(θc, oc ) = −1 for all c ∈ C with c = c ; u(θc, o∗ ) = 1; u(θv, ol) = 1 for all l ∈ L with v(l) = v; u(θv, ol) = −1 for all l ∈ L with v(l) = v; u(θv, oc) = −1 for all c ∈ C; u(θv, o∗ ) = −1.",
                "Let the designers objective function be given by g(o∗ ) = |Θ|+1; g(ol) = |Θ| for all l ∈ L; g(oc) = |Θ| for all c ∈ C. The goal of the AMD instance is G = |Θ| + |C|−K |Θ| , where K is the goal of the MINSAT instance.",
                "We show the instances are equivalent.",
                "First, suppose there is a solution to the MINSAT instance.",
                "Let the assignment of truth values to the variables in this solution be given by the function f : V → L (where v(f(v)) = v for all v ∈ V ).",
                "Then, for every v ∈ V , let o(θv) = of(v).",
                "For every c ∈ C that is satisfied in the MINSAT solution, let o(θc) = oc; for every unsatisfied c ∈ C, let o(θc) = o∗ .",
                "It is straightforward to check that the IR constraint is satisfied.",
                "We now check that the agent has no incentive to misreport.",
                "If the agents type is some θv, it is getting the maximum utility for that type, so it has no incentive to misreport.",
                "If the agents type is some θc where c is a satisfied clause, again, it is getting the maximum utility for that type, so it has no incentive to misreport.",
                "The final case to check is where the agents type is some θc where c is an unsatisfied clause.",
                "In this case, we observe that for none of the types, reporting it leads to an outcome ol for a literal l ∈ c, precisely because the clause is not satisfied in the MINSAT instance.",
                "Because also, no type leads to the outcome oc, there is no outcome that the mechanism ever selects that would give the agent utility greater than 1 for type θc, and hence the agent has no incentive to report falsely.",
                "This establishes that the agent never has an incentive to misreport.",
                "Finally, we show that the goal is reached.",
                "If s is the number of satisfied clauses in the MINSAT solution (so that s ≤ K), then the expected value of the designers objective function is |V ||Θ|+s|Θ|+(|C|−s)(|Θ|+1) |Θ| ≥ |V ||Θ|+K|Θ|+(|C|−K)(|Θ|+1) |Θ| = |Θ| + |C|−K |Θ| = G. So there is a solution to the AMD instance.",
                "Now suppose there is a solution to the AMD instance, given by an outcome function o.",
                "First, suppose there is some v ∈ V such that o(θv) /∈ {o+v, o−v}.",
                "The only other outcome that the mechanism is allowed to choose under the IR constraint is o0.",
                "This has an objective value of 0, and because the highest value the objective function ever takes is |Θ| + 1, it follows that the maximum expected value of the objective function that could be obtained is at most (|Θ|−1)(|Θ|+1) |Θ| < |Θ| < G, contradicting that this is a solution to the AMD instance.",
                "It follows that in the solution to the AMD instance, for every v ∈ V , o(θv) ∈ {o+v, o−v}.",
                "We can interpret this as an assignment of truth values to the variables: v is set to true if o(θv) = o+v, and to false if o(θv) = o−v.",
                "We claim this assignment is a solution to the MINSAT instance.",
                "By the above, for any type θv, the value of the objective function in this mechanism will be |Θ|.",
                "For any clause c satisfied by the given assignment, the value of the objective function in the case where the agent reports type θc will be at most |Θ|. (This is because we cannot choose the outcome o∗ for such a type, as in this case the agent would have an incentive to report θv instead, where v is the variable satisfying c in the assignment (so that o(θv) = ol where l occurs in c).)",
                "Finally, for any unsatisfied clause c, the maximum value the objective function can take in the case where the agent reports type θc is |Θ| + 1, simply because this is the largest value the function ever takes.",
                "It follows that the expected value of the objective function for our mechanism is at most V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ , where s is the number of satisfied 137 clauses.",
                "Because our mechanism achieves the goal, it follows that V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ ≥ G, which by simple algebraic manipulations is equivalent to s ≤ K. So there is a solution to the MINSAT instance.",
                "Both of our hardness results relied on the constraint that the mechanism should be deterministic.",
                "In the next section, we show that the hardness of design disappears when we allow for randomization in the mechanism. 6.",
                "RANDOMIZED AMD FOR A SELFINTERESTED DESIGNER IS EASY We now show how allowing for randomization over the outcomes makes the problem of self-interested AMD tractable through linear programming, for any constant number of agents.",
                "Theorem 3.",
                "Self-interested randomized AMD with a constant number of agents is solvable in polynomial time by linear programming, both with and without payments, both for ex post and ex interim IR, and both for implementation in dominant strategies and for implementation in Bayes-Nash equilibrium-even if the types are correlated.",
                "Proof.",
                "Because linear programs can be solved in polynomial time [13], all we need to show is that the number of variables and equations in our program is polynomial for any constant number of agents-that is, exponential only in N. Throughout, for purposes of determining the size of the linear program, let T = maxi{|Θi|}.",
                "The variables of our linear program will be the probabilities (p(θ1, θ2, . . . , θN ))(o) (at most TN |O| variables) and the payments πi(θ1, θ2, . . . , θN ) (at most NTN variables). (We show the linear program for the case where payments are possible; the case without payments is easily obtained from this by simply omitting all the payment variables in the program, or by adding additional constraints forcing the payments to be 0.)",
                "First, we show the IR constraints.",
                "For ex post IR, we add the following (at most NTN ) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, and for every (θ1, θ2, . . . , θN ) ∈ Θ1 × Θ2 × . . . × ΘN , we add ( o∈O (p(θ1, θ2, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , θN ) ≥ 0.",
                "For ex interim IR, we add the following (at most NT) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, for every θi ∈ Θi, we add θ1,... ,θN γ(θ1, . . . , θN |θi)(( o∈O (p(θ1, θ2, . . . , θN ))(o)u(θi, o))− πi(θ1, θ2, . . . , θN )) ≥ 0.",
                "Now, we show the solution concept constraints.",
                "For implementation in dominant strategies, we add the following (at most NTN+1 ) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, for every (θ1, θ2, . . . , θi, . . . , θN ) ∈ Θ1 × Θ2 × . . . × ΘN , and for every alternative type report ˆθi ∈ Θi, we add the constraint ( o∈O (p(θ1, θ2, . . . , θi, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , θi, . . . , θN ) ≥ ( o∈O (p(θ1, θ2, . . . , ˆθi, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , ˆθi, . . . , θN ).",
                "Finally, for implementation in Bayes-Nash equilibrium, we add the following (at most NT2 ) constraints to the LP: • For every i ∈ {1, 2, ..., N}, for every θi ∈ Θi, and for every alternative type report ˆθi ∈ Θi, we add the constraint θ1,...,θN γ(θ1, ..., θN |θi)(( o∈O (p(θ1, θ2, ..., θi, ..., θN ))(o)u(θi, o)) − πi(θ1, θ2, ..., θi, ..., θN )) ≥ θ1,...,θN γ(θ1, ..., θN |θi)(( o∈O (p(θ1, θ2, ..., ˆθi, ..., θN ))(o)u(θi, o)) − πi(θ1, θ2, ..., ˆθi, ..., θN )).",
                "All that is left to do is to give the expression the designer is seeking to maximize, which is: • θ1,...,θN γ(θ1, ..., θN )(( o∈O (p(θ1, θ2, ..., θi, ..., θN ))(o)g(o)) + N i=1 πi(θ1, θ2, ..., θN )).",
                "As we indicated, the number of variables and constraints is exponential only in N, and hence the linear program is of polynomial size for constant numbers of agents.",
                "Thus the problem is solvable in polynomial time. 7.",
                "IMPLICATIONS FOR AN OPTIMAL COMBINATORIAL AUCTION DESIGN PROBLEM In this section, we will demonstrate some interesting consequences of the problem of automated mechanism design for a self-interested designer on designing optimal combinatorial auctions.",
                "Consider a combinatorial auction with a set S of items for sale.",
                "For any bundle B ⊆ S, let ui(θi, B) be bidder is utility for receiving bundle B when the bidders type is θi.",
                "The optimal auction design problem is to specify the rules of the auction so as to maximize expected revenue to the auctioneer. (By the revelation principle, without loss of generality, we can assume the auction is truthful.)",
                "The optimal auction design problem is solved for the case of a single item by the famous Myerson auction [18].",
                "However, designing optimal auctions in combinatorial auctions is a recognized open research problem [3, 25].",
                "The problem is open even if there are only two items for sale. (The twoitem case with a very special form of <br>complementarity</br> and no substitutability has been solved recently [1].)",
                "Suppose we have free disposal-items can be thrown away at no cost.",
                "Also, suppose that the bidders preferences have the following structure: whenever a bidder receives a bundle of items, the bidders utility for that bundle is determined by the best item in the bundle only. (We emphasize that 138 which item is the best is allowed to depend on the bidders type.)",
                "Definition 10.",
                "Bidder i is said to have best-only preferences over bundles of items if there exists a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s).",
                "We make the following useful observation in this setting: there is no sense in awarding a bidder more than one item.",
                "The reason is that if the bidder is reporting truthfully, taking all but the highest valued item away from the bidder will not hurt the bidder; and, by free disposal, doing so can only reduce the incentive for this bidder to falsely report this type, when the bidder actually has another type.",
                "We now show that the problem of designing a deterministic optimal auction here is NP-complete, by a reduction from the payment maximizing AMD problem!",
                "Theorem 4.",
                "Given an optimal combinatorial auction design problem under best-only preferences (given by a set of items S and for each bidder i, a finite type space Θi and a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s)), designing the optimal deterministic auction is NP-complete, even for a single bidder with a uniform distribution over types.",
                "Proof.",
                "The problem is in NP because we can nondeterministically generate an allocation rule, and then set the payments using linear programming.",
                "To show NP-hardness, we reduce an arbitrary paymentmaximizing deterministic AMD instance, with a single agent and a uniform distribution over types, to the following optimal combinatorial auction design problem instance with a single bidder with best-only preferences.",
                "For every outcome o ∈ O in the AMD instance (besides the outcome o0), let there be one item so ∈ S. Let the type space be the same, and let v(θi, so) = ui(θi, o) (where u is as specified in the AMD instance).",
                "Let the expected revenue target value be the same in both instances.",
                "We show the instances are equivalent.",
                "First suppose there exists a solution to the AMD instance, given by an outcome function and a payment function.",
                "Then, if the AMD solution chooses outcome o for a type, in the optimal auction solution, allocate {so} to the bidder for this type. (Unless o = o0, in which case we allocate {} to the bidder.)",
                "Let the payment functions be the same in both instances.",
                "Then, the utility that an agent receives for reporting a type (given the true type) in either solution is the same, so we have incentive compatibility in the optimal auction solution.",
                "Moreover, because the type distribution and the payment function are the same, the expected revenue to the auctioneer/designer is the same.",
                "It follows that there exists a solution to the optimal auction design instance.",
                "Now suppose there exists a solution to the optimal auction design instance.",
                "By the at-most-one-item observation, we can assume without loss of generality that the solution never allocates more than one item.",
                "Then, if the optimal auction solution allocates item so to the bidder for a type, in the AMD solution, let the mechanism choose outcome o for that type.",
                "If the optimal auction solution allocates nothing to the bidder for a type, in the AMD solution, let the mechanism choose outcome o0 for that type.",
                "Let the payment functions be the same.",
                "Then, the utility that an agent receives for reporting a type (given the true type) in either solution is the same, so we have incentive compatibility in the AMD solution.",
                "Moreover, because the type distribution and the payment function are the same, the expected revenue to the designer/auctioneer is the same.",
                "It follows that there exists a solution to the AMD instance.",
                "Fortunately, we can also carry through the easiness result for randomized mechanisms to this combinatorial auction setting-giving us one of the few known polynomial-time algorithms for an optimal combinatorial auction design problem.",
                "Theorem 5.",
                "Given an optimal combinatorial auction design problem under best-only preferences (given by a set of items S and for each bidder i, a finite type space Θi and a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s)), if the number of bidders is a constant k, then the optimal randomized auction can be designed in polynomial time. (For any IC and IR constraints.)",
                "Proof.",
                "By the at-most-one-item observation, we can without loss of generality restrict ourselves to allocations where each bidder receives at most one item.",
                "There are fewer than (|S| + 1)k such allocations-that is, a polynomial number of allocations.",
                "Because we can list the outcomes explicitly, we can simply solve this as a payment-maximizing AMD instance, with linear programming. 8.",
                "RELATED RESEARCH ON COMPLEXITY IN MECHANISM DESIGN There has been considerable recent interest in mechanism design in computer science.",
                "Some of it has focused on issues of computational complexity, but most of that work has strived toward designing mechanisms that are easy to execute (e.g. [20, 15, 19, 9, 12]), rather than studying the complexity of designing the mechanism.",
                "The closest piece of earlier work studied the complexity of automated mechanism design by a benevolent designer [5, 6].",
                "Roughgarden has studied the complexity of designing a good network topology for agents that selfishly choose the links they use [21].",
                "This is related to mechanism design, but differs significantly in that the designer only has restricted control over the rules of the game because there is no party that can impose the outcome (or side payments).",
                "Also, there is no explicit reporting of preferences. 9.",
                "CONCLUSIONS AND FUTURE RESEARCH Often, an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "The key difficulty is that the agents may report their preferences insincerely to make the chosen outcome more favorable to themselves.",
                "Mechanism design is the art of designing the rules of the game so that the agents are motivated to report their preferences truthfully, and a desirable outcome is chosen.",
                "In a recently emerging approach-called automated mechanism design-a mechanism is computed for the specific preference aggregation setting at hand.",
                "This has several advantages, 139 but the downside is that the mechanism design optimization problem needs to be solved anew each time.",
                "Unlike earlier work on automated mechanism design that studied a benevolent designer, in this paper we studied automated mechanism design problems where the designer is self-interesteda setting much more relevant for electronic commerce.",
                "In this setting, the center cares only about which outcome is chosen and what payments are made to it.",
                "The reason that the agents preferences are relevant is that the center is constrained to making each agent at least as well off as the agent would have been had it not participated in the mechanism.",
                "In this setting, we showed that designing an optimal deterministic mechanism is NP-complete in two important special cases: when the center is interested only in the payments made to it, and when payments are not possible and the center is interested only in the outcome chosen.",
                "These hardness results imply hardness in all more general automated mechanism design settings with a self-interested designer.",
                "The hardness results apply whether the individual rationality (participation) constraints are applied ex interim or ex post, and whether the solution concept is dominant strategies implementation or Bayes-Nash equilibrium implementation.",
                "We then showed that allowing randomization in the mechanism makes the design problem in all these settings computationally easy.",
                "Finally, we showed that the paymentmaximizing AMD problem is closely related to an interesting variant of the optimal (revenue-maximizing) combinatorial auction design problem, where the bidders have best-only preferences.",
                "We showed that here, too, designing an optimal deterministic mechanism is NP-complete even with one agent, but designing an optimal randomized mechanism is easy.",
                "Future research includes studying automated mechanism design with a self-interested designer in more restricted settings such as auctions (where the designers objective may include preferences about which bidder should receive the good-as well as payments).",
                "We also want to study the complexity of automated mechanism design in settings where the outcome and type spaces have special structure so they can be represented more concisely.",
                "Finally, we plan to assemble a data set of real-world mechanism design problems-both historical and current-and apply automated mechanism design to those problems. 10.",
                "REFERENCES [1] M. Armstrong.",
                "Optimal multi-object auctions.",
                "Review of Economic Studies, 67:455-481, 2000. [2] K. Arrow.",
                "The property rights doctrine and demand revelation under incomplete information.",
                "In M. Boskin, editor, Economics and human welfare.",
                "New York Academic Press, 1979. [3] C. Avery and T. Hendershott.",
                "Bundling and optimal auctions of multiple products.",
                "Review of Economic Studies, 67:483-497, 2000. [4] E. H. Clarke.",
                "Multipart pricing of public goods.",
                "Public Choice, 11:17-33, 1971. [5] V. Conitzer and T. Sandholm.",
                "Complexity of mechanism design.",
                "In Proceedings of the 18th Annual Conference on Uncertainty in Artificial Intelligence (UAI-02), pages 103-110, Edmonton, Canada, 2002. [6] V. Conitzer and T. Sandholm.",
                "Automated mechanism design: Complexity results stemming from the single-agent setting.",
                "In Proceedings of the 5th International Conference on Electronic Commerce (ICEC-03), pages 17-24, Pittsburgh, PA, USA, 2003. [7] V. Conitzer and T. Sandholm.",
                "Computational criticisms of the revelation principle.",
                "In Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), New York, NY, 2004.",
                "Short paper.",
                "Full-length version appeared in the AAMAS-03 workshop on Agent-Mediated Electronic Commerce (AMEC). [8] C. dAspremont and L. A. G´erard-Varet.",
                "Incentives and incomplete information.",
                "Journal of Public Economics, 11:25-45, 1979. [9] J. Feigenbaum, C. Papadimitriou, and S. Shenker.",
                "Sharing the cost of muliticast transmissions.",
                "Journal of Computer and System Sciences, 63:21-41, 2001.",
                "Early version in Proceedings of the Annual ACM Symposium on Theory of Computing (STOC), 2000. [10] A. Gibbard.",
                "Manipulation of voting schemes.",
                "Econometrica, 41:587-602, 1973. [11] T. Groves.",
                "Incentives in teams.",
                "Econometrica, 41:617-631, 1973. [12] J. Hershberger and S. Suri.",
                "Vickrey prices and shortest paths: What is an edge worth?",
                "In Proceedings of the Annual Symposium on Foundations of Computer Science (FOCS), 2001. [13] L. Khachiyan.",
                "A polynomial algorithm in linear programming.",
                "Soviet Math.",
                "Doklady, 20:191-194, 1979. [14] R. Kohli, R. Krishnamurthi, and P. Mirchandani.",
                "The minimum satisfiability problem.",
                "SIAM Journal of Discrete Mathematics, 7(2):275-283, 1994. [15] D. Lehmann, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in rapid, approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002.",
                "Early version appeared in Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), 1999. [16] A. Mas-Colell, M. Whinston, and J. R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [17] E. S. Maskin and J. Riley.",
                "Optimal multi-unit auctions.",
                "In F. Hahn, editor, The Economics of Missing Markets, Information, and Games, chapter 14, pages 312-335.",
                "Clarendon Press, Oxford, 1989. [18] R. Myerson.",
                "Optimal auction design.",
                "Mathematics of Operation Research, 6:58-73, 1981. [19] N. Nisan and A. Ronen.",
                "Computationally feasible VCG mechanisms.",
                "In Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), pages 242-252, Minneapolis, MN, 2000. [20] N. Nisan and A. Ronen.",
                "Algorithmic mechanism design.",
                "Games and Economic Behavior, 35:166-196, 2001.",
                "Early version in Proceedings of the Annual ACM Symposium on Theory of Computing (STOC), 1999. [21] T. Roughgarden.",
                "Designing networks for selfish users is hard.",
                "In Proceedings of the Annual Symposium on Foundations of Computer Science (FOCS), 2001. [22] T. Sandholm.",
                "Issues in computational Vickrey auctions.",
                "International Journal of Electronic Commerce, 4(3):107-129, 2000.",
                "Special Issue on 140 Applying Intelligent Agents for Electronic Commerce.",
                "A short, early version appeared at the Second International Conference on Multi-Agent Systems (ICMAS), pages 299-306, 1996. [23] M. A. Satterthwaite.",
                "Strategy-proofness and Arrows conditions: existence and correspondence theorems for voting procedures and social welfare functions.",
                "Journal of Economic Theory, 10:187-217, 1975. [24] W. Vickrey.",
                "Counterspeculation, auctions, and competitive sealed tenders.",
                "Journal of Finance, 16:8-37, 1961. [25] R. V. Vohra.",
                "Research problems in combinatorial auctions.",
                "Mimeo, version Oct. 29, 2001. 141"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "El problema está abierto incluso si solo hay dos artículos a la venta.(El caso de TwoItem con una forma muy especial de \"complementariedad\" y ninguna sustituibilidad se ha resuelto recientemente [1].)"
            ],
            "translated_text": "",
            "candidates": [
                "Complementariedad",
                "complementariedad"
            ],
            "error": []
        },
        "automate mechanism design": {
            "translated_key": "Automatizar el diseño del mecanismo",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Self-interested Automated Mechanism Design and Implications for Optimal Combinatorial Auctions∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT Often, an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "The key difficulty is that the agents may report their preferences insincerely to make the chosen outcome more favorable to themselves.",
                "Mechanism design is the art of designing the rules of the game so that the agents are motivated to report their preferences truthfully, and a desirable outcome is chosen.",
                "In a recently proposed approach-called automated mechanism design-a mechanism is computed for the preference aggregation setting at hand.",
                "This has several advantages, but the downside is that the mechanism design optimization problem needs to be solved anew each time.",
                "Unlike the earlier work on automated mechanism design that studied a benevolent designer, in this paper we study automated mechanism design problems where the designer is self-interested.",
                "In this case, the center cares only about which outcome is chosen and what payments are made to it.",
                "The reason that the agents preferences are relevant is that the center is constrained to making each agent at least as well off as the agent would have been had it not participated in the mechanism.",
                "In this setting, we show that designing optimal deterministic mechanisms is NP-complete in two important special cases: when the center is interested only in the payments made to it, and when payments are not possible and the center is interested only in the outcome chosen.",
                "We then show how allowing for randomization in the mechanism makes problems in this setting computationally easy.",
                "Finally, we show that the payment-maximizing AMD problem is closely related to an interesting variant of the optimal (revenuemaximizing) combinatorial auction design problem, where the bidders have best-only preferences.",
                "We show that here, too, designing an optimal deterministic auction is NPcomplete, but designing an optimal randomized auction is easy.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In multiagent settings, often an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "Such outcomes could be potential presidents, joint plans, allocations of goods or resources, etc.",
                "The preference aggregator generally does not know the agents preferences a priori.",
                "Rather, the agents report their preferences to the coordinator.",
                "Unfortunately, an agent may have an incentive to misreport its preferences in order to mislead the mechanism into selecting an outcome that is more desirable to the agent than the outcome that would be selected if the agent revealed its preferences truthfully.",
                "Such manipulation is undesirable because preference aggregation mechanisms are tailored to aggregate preferences in a socially desirable way, and if the agents reveal their preferences insincerely, a socially undesirable outcome may be chosen.",
                "Manipulability is a pervasive problem across preference aggregation mechanisms.",
                "A seminal negative result, the Gibbard-Satterthwaite theorem, shows that under any nondictatorial preference aggregation scheme, if there are at least 3 possible outcomes, there are preferences under which an agent is better off reporting untruthfully [10, 23]. (A preference aggregation scheme is called dictatorial if one of the agents dictates the outcome no matter what preferences the other agents report.)",
                "What the aggregator would like to do is design a preference aggregation mechanism so that 1) the self-interested agents are motivated to report their preferences truthfully, and 2) the mechanism chooses an outcome that is desirable from the perspective of some objective.",
                "This is the classic setting of mechanism design in game theory.",
                "In this paper, we study the case where the designer is self-interested, that is, the designer does not directly care about how the out132 come relates to the agents preferences, but is rather concerned with its own agenda for which outcome should be chosen, and with maximizing payments to itself.",
                "This is the mechanism design setting most relevant to electronic commerce.",
                "In the case where the mechanism designer is interested in maximizing some notion of social welfare, the importance of collecting the agents preferences is clear.",
                "It is perhaps less obvious why they should be collected when the designer is self-interested and hence its objective is not directly related to the agents preferences.",
                "The reason for this is that often the agents preferences impose limits on how the designer chooses the outcome and payments.",
                "The most common such constraint is that of individual rationality (IR), which means that the mechanism cannot make any agent worse off than the agent would have been had it not participated in the mechanism.",
                "For instance, in the setting of optimal auction design, the designer (auctioneer) is only concerned with how much revenue is collected, and not per se with how well the allocation of the good (or goods) corresponds to the agents preferences.",
                "Nevertheless, the designer cannot force an agent to pay more than its valuation for the bundle of goods allocated to it.",
                "Therefore, even a self-interested designer will choose an outcome that makes the agents reasonably well off.",
                "On the other hand, the designer will not necessarily choose a social welfare maximizing outcome.",
                "For example, if the designer always chooses an outcome that maximizes social welfare with respect to the reported preferences, and forces each agent to pay the difference between the utility it has now and the utility it would have had if it had not participated in the mechanism, it is easy to see that agents may have an incentive to misreport their preferences-and this may actually lead to less revenue being collected.",
                "Indeed, one of the counterintuitive results of optimal auction design theory is that sometimes the good is allocated to nobody even when the auctioneer has a reservation price of 0.",
                "Classical mechanism design provides some general mechanisms, which, under certain assumptions, satisfy some notion of nonmanipulability and maximize some objective.",
                "The upside of these mechanisms is that they do not rely on (even probabilistic) information about the agents preferences (e.g., the Vickrey-Clarke-Groves (VCG) mechanism [24, 4, 11]), or they can be easily applied to any probability distribution over the preferences (e.g., the dAGVA mechanism [8, 2], the Myerson auction [18], and the Maskin-Riley multi-unit auction [17]).",
                "However, the general mechanisms also have significant downsides: • The most famous and most broadly applicable general mechanisms, VCG and dAGVA, only maximize social welfare.",
                "If the designer is self-interested, as is the case in many electronic commerce settings, these mechanisms do not maximize the designers objective. • The general mechanisms that do focus on a selfinterested designer are only applicable in very restricted settings-such as Myersons expected revenue maximizing auction for selling a single item, and Maskin and Rileys expected revenue maximizing auction for selling multiple identical units of an item. • Even in the restricted settings in which these mechanisms apply, the mechanisms only allow for payment maximization.",
                "In practice, the designer may also be interested in the outcome per se.",
                "For example, an auctioneer may care which bidder receives the item. • It is often assumed that side payments can be used to tailor the agents incentives, but this is not always practical.",
                "For example, in barter-based electronic marketplaces-such as Recipco, firstbarter.com, BarterOne, and Intagio-side payments are not allowed.",
                "Furthermore, among software agents, it might be more desirable to construct mechanisms that do not rely on the ability to make payments, because many software agents do not have the infrastructure to make payments.",
                "In contrast, we follow a recent approach where the mechanism is designed automatically for the specific problem at hand.",
                "This approach addresses all of the downsides listed above.",
                "We formulate the mechanism design problem as an optimization problem.",
                "The input is characterized by the number of agents, the agents possible types (preferences), and the aggregators prior distributions over the agents types.",
                "The output is a nonmanipulable mechanism that is optimal with respect to some objective.",
                "This approach is called automated mechanism design.",
                "The automated mechanism design approach has four advantages over the classical approach of designing general mechanisms.",
                "First, it can be used even in settings that do not satisfy the assumptions of the classical mechanisms (such as availability of side payments or that the objective is social welfare).",
                "Second, it may allow one to circumvent impossibility results (such as the Gibbard-Satterthwaite theorem) which state that there is no mechanism that is desirable across all preferences.",
                "When the mechanism is designed for the setting at hand, it does not matter that it would not work more generally.",
                "Third, it may yield better mechanisms (in terms of stronger nonmanipulability guarantees and/or better outcomes) than classical mechanisms because the mechanism capitalizes on the particulars of the setting (the probabilistic information that the designer has about the agents types).",
                "Given the vast amount of information that parties have about each other today, this approach is likely to lead to tremendous savings over classical mechanisms, which largely ignore that information.",
                "For example, imagine a company automatically creating its procurement mechanism based on statistical knowledge about its suppliers, rather than using a classical descending procurement auction.",
                "Fourth, the burden of design is shifted from humans to a machine.",
                "However, automated mechanism design requires the mechanism design optimization problem to be solved anew for each setting.",
                "Hence its computational complexity becomes a key issue.",
                "Previous research has studied this question for benevolent designers-that wish to maximize, for example, social welfare [5, 6].",
                "In this paper we study the computational complexity of automated mechanism design in the case of a self-interested designer.",
                "This is an important setting for automated mechanism design due to the shortage of general mechanisms in this area, and the fact that in most e-commerce settings the designer is self-interested.",
                "We also show that this problem is closely related to a particular optimal (revenue-maximizing) combinatorial auction design problem. 133 The rest of this paper is organized as follows.",
                "In Section 2, we justify the focus on nonmanipulable mechanisms.",
                "In Section 3, we define the problem we study.",
                "In Section 4, we show that designing an optimal deterministic mechanism is NP-complete even when the designer only cares about the payments made to it.",
                "In Section 5, we show that designing an optimal deterministic mechanism is also NP-complete when payments are not possible and the designer is only interested in the outcome chosen.",
                "In Section 6, we show that an optimal randomized mechanism can be designed in polynomial time even in the general case.",
                "Finally, in Section 7, we show that for designing optimal combinatorial auctions under best-only preferences, our results on AMD imply that this problem is NP-complete for deterministic auctions, but easy for randomized auctions. 2.",
                "JUSTIFYING THE FOCUS ON NONMANIPULABLE MECHANISMS Before we define the computational problem of automated mechanism design, we should justify our focus on nonmanipulable mechanisms.",
                "After all, it is not immediately obvious that there are no manipulable mechanisms that, even when agents report their types strategically and hence sometimes untruthfully, still reach better outcomes (according to whatever objective we use) than any nonmanipulable mechanism.",
                "This does, however, turn out to be the case: given any mechanism, we can construct a nonmanipulable mechanism whose performance is identical, as follows.",
                "We build an interface layer between the agents and the original mechanism.",
                "The agents report their preferences (or types) to the interface layer; subsequently, the interface layer inputs into the original mechanism the types that the agents would have strategically reported to the original mechanism, if their types were as declared to the interface layer.",
                "The resulting outcome is the outcome of the new mechanism.",
                "Since the interface layer acts strategically on each agents behalf, there is never an incentive to report falsely to the interface layer; and hence, the types reported by the interface layer are the strategic types that would have been reported without the interface layer, so the results are exactly as they would have been with the original mechanism.",
                "This argument is known in the mechanism design literature as the revelation principle [16]. (There are computational difficulties with applying the revelation principle in large combinatorial outcome and type spaces [7, 22].",
                "However, because here we focus on flatly represented outcome and type spaces, this is not a concern here.)",
                "Given this, we can focus on truthful mechanisms in the rest of the paper. 3.",
                "DEFINITIONS We now formalize the automated mechanism design setting.",
                "Definition 1.",
                "In an automated mechanism design setting, we are given: • a finite set of outcomes O; • a finite set of N agents; • for each agent i, 1. a finite set of types Θi, 2. a probability distribution γi over Θi (in the case of correlated types, there is a single joint distribution γ over Θ1 × . . . × ΘN ), and 3. a utility function ui : Θi × O → R; 1 • An objective function whose expectation the designer wishes to maximize.",
                "There are many possible objective functions the designer might have, for example, social welfare (where the designer seeks to maximize the sum of the agents utilities), or the minimum utility of any agent (where the designer seeks to maximize the worst utility had by any agent).",
                "In both of these cases, the designer is benevolent, because the designer, in some sense, is pursuing the agents collective happiness.",
                "However, in this paper, we focus on the case of a self-interested designer.",
                "A self-interested designer cares only about the outcome chosen (that is, the designer does not care how the outcome relates to the agents preferences, but rather has a fixed preference over the outcomes), and about the net payments made by the agents, which flow to the designer.",
                "Definition 2.",
                "A self-interested designer has an objective function given by g(o) + N i=1 πi, where g : O → R indicates the designers own preference over the outcomes, and πi is the payment made by agent i.",
                "In the case where g = 0 everywhere, the designer is said to be payment maximizing.",
                "In the case where payments are not possible, g constitutes the objective function by itself.",
                "We now define the kinds of mechanisms under study.",
                "By the revelation principle, we can restrict attention to truthful, direct revelation mechanisms, where agents report their types directly and never have an incentive to misreport them.",
                "Definition 3.",
                "We consider the following kinds of mechanism: • A deterministic mechanism without payments consists of an outcome selection function o : Θ1 × Θ2 × . . . × ΘN → O. • A randomized mechanism without payments consists of a distribution selection function p : Θ1 × Θ2 × . . . × ΘN → P(O), where P(O) is the set of probability distributions over O. • A deterministic mechanism with payments consists of an outcome selection function o : Θ1 ×Θ2 ×. . .×ΘN → O and for each agent i, a payment selection function πi : Θ1 × Θ2 × . . . × ΘN → R, where πi(θ1, . . . , θN ) gives the payment made by agent i when the reported types are θ1, . . . , θN . 1 Though this follows standard game theory notation [16], the fact that the agent has both a utility function and a type is perhaps confusing.",
                "The types encode the various possible preferences that the agent may turn out to have, and the agents type is not known to the aggregator.",
                "The utility function is common knowledge, but because the agents type is a parameter in the agents utility function, the aggregator cannot know what the agents utility is without knowing the agents type. 134 • A randomized mechanism with payments consists of a distribution selection function p : Θ1 × Θ2 × . . . × ΘN → P(O), and for each agent i, a payment selection function πi : Θ1 × Θ2 × . . . × ΘN → R.2 There are two types of constraint on the designer in building the mechanism. 3.1 Individual rationality (IR) constraints The first type of constraint is the following.",
                "The utility of each agent has to be at least as great as the agents fallback utility, that is, the utility that the agent would receive if it did not participate in the mechanism.",
                "Otherwise that agent would not participate in the mechanism-and no agents participation can ever hurt the mechanism designers objective because at worst, the mechanism can ignore an agent by pretending the agent is not there. (Furthermore, if no such constraint applied, the designer could simply make the agents pay an infinite amount.)",
                "This type of constraint is called an IR (individual rationality) constraint.",
                "There are three different possible IR constraints: ex ante, ex interim, and ex post, depending on what the agent knows about its own type and the others types when deciding whether to participate in the mechanism.",
                "Ex ante IR means that the agent would participate if it knew nothing at all (not even its own type).",
                "We will not study this concept in this paper.",
                "Ex interim IR means that the agent would always participate if it knew only its own type, but not those of the others.",
                "Ex post IR means that the agent would always participate even if it knew everybodys type.",
                "We will define the latter two notions of IR formally.",
                "First, we need to formalize the concept of the fallback outcome.",
                "We assume that each agents fallback utility is zero for each one of its types.",
                "This is without loss of generality because we can add a constant term to an agents utility function (for a given type), without affecting the decision-making behavior of that expected utility maximizing agent [16].",
                "Definition 4.",
                "In any automated mechanism design setting with an IR constraint, there is a fallback outcome o0 ∈ O where, for any agent i and any type θi ∈ Θi, we have ui(θi, o0) = 0. (Additionally, in the case of a self-interested designer, g(o0) = 0.)",
                "We can now to define the notions of individual rationality.",
                "Definition 5.",
                "Individual rationality (IR) is defined by: • A deterministic mechanism is ex interim IR if for any agent i, and any type θi ∈ Θi, we have E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, .., θN ))−πi(θ1, .., θN )] ≥ 0.",
                "A randomized mechanism is ex interim IR if for any agent i, and any type θi ∈ Θi, we have E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,..,θn [ui(θi, o)−πi(θ1, .., θN )] ≥ 0. • A deterministic mechanism is ex post IR if for any agent i, and any type vector (θ1, . . . , θN ) ∈ Θ1 × . . . × ΘN , we have ui(θi, o(θ1, . . . , θN )) − πi(θ1, . . . , θN ) ≥ 0. 2 We do not randomize over payments because as long as the agents and the designer are risk neutral with respect to payments, that is, their utility is linear in payments, there is no reason to randomize over payments.",
                "A randomized mechanism is ex post IR if for any agent i, and any type vector (θ1, . . . , θN ) ∈ Θ1 × . . . × ΘN , we have Eo|θ1,..,θn [ui(θi, o) − πi(θ1, .., θN )] ≥ 0.",
                "The terms involving payments can be left out in the case where payments are not possible. 3.2 Incentive compatibility (IC) constraints The second type of constraint says that the agents should never have an incentive to misreport their type (as justified above by the revelation principle).",
                "For this type of constraint, the two most common variants (or solution concepts) are implementation in dominant strategies, and implementation in Bayes-Nash equilibrium.",
                "Definition 6.",
                "Given an automated mechanism design setting, a mechanism is said to implement its outcome and payment functions in dominant strategies if truthtelling is always optimal even when the types reported by the other agents are already known.",
                "Formally, for any agent i, any type vector (θ1, . . . , θi, . . . , θN ) ∈ Θ1 × . . . × Θi × . . . × ΘN , and any alternative type report ˆθi ∈ Θi, in the case of deterministic mechanisms we have ui(θi, o(θ1, . . . , θi, . . . , θN )) − πi(θ1, . . . , θi, . . . , θN ) ≥ ui(θi, o(θ1, . . . , ˆθi, . . . , θN )) − πi(θ1, . . . , ˆθi, . . . , θN ).",
                "In the case of randomized mechanisms we have Eo|θ1,..,θi,..,θn [ui(θi, o) − πi(θ1, . . . , θi, . . . , θN )] ≥ Eo|θ1,.., ˆθi,..,θn [ui(θi, o) − πi(θ1, . . . , ˆθi, . . . , θN )].",
                "The terms involving payments can be left out in the case where payments are not possible.",
                "Thus, in dominant strategies implementation, truthtelling is optimal regardless of what the other agents report.",
                "If it is optimal only given that the other agents are truthful, and given that one does not know the other agents types, we have implementation in Bayes-Nash equilibrium.",
                "Definition 7.",
                "Given an automated mechanism design setting, a mechanism is said to implement its outcome and payment functions in Bayes-Nash equilibrium if truthtelling is always optimal to an agent when that agent does not yet know anything about the other agents types, and the other agents are telling the truth.",
                "Formally, for any agent i, any type θi ∈ Θi, and any alternative type report ˆθi ∈ Θi, in the case of deterministic mechanisms we have E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, . . . , θi, . . . , θN ))− πi(θ1, . . . , θi, . . . , θN )] ≥ E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, . . . , ˆθi, . . . , θN ))− πi(θ1, . . . , ˆθi, . . . , θN )].",
                "In the case of randomized mechanisms we have E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,..,θi,..,θn [ui(θi, o)− πi(θ1, . . . , θi, . . . , θN )] ≥ E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,.., ˆθi,..,θn [ui(θi, o)− πi(θ1, . . . , ˆθi, . . . , θN )].",
                "The terms involving payments can be left out in the case where payments are not possible. 135 3.3 Automated mechanism design We can now define the computational problem we study.",
                "Definition 8. (AUTOMATED-MECHANISM-DESIGN (AMD)) We are given: • an automated mechanism design setting, • an IR notion (ex interim, ex post, or none), • a solution concept (dominant strategies or Bayes-Nash), • whether payments are possible, • whether randomization is possible, • (in the decision variant of the problem) a target value G. We are asked whether there exists a mechanism of the specified kind (in terms of payments and randomization) that satisfies both the IR notion and the solution concept, and gives an expected value of at least G for the objective.",
                "An interesting special case is the setting where there is only one agent.",
                "In this case, the reporting agent always knows everything there is to know about the other agents types-because there are no other agents.",
                "Since ex post and ex interim IR only differ on what an agent is assumed to know about other agents types, the two IR concepts coincide here.",
                "Also, because implementation in dominant strategies and implementation in Bayes-Nash equilibrium only differ on what an agent is assumed to know about other agents types, the two solution concepts coincide here.",
                "This observation will prove to be a useful tool in proving hardness results: if we prove computational hardness in the singleagent setting, this immediately implies hardness for both IR concepts, for both solution concepts, for any number of agents. 4.",
                "PAYMENT-MAXIMIZINGDETERMINISTIC AMD IS HARD In this section we demonstrate that it is NP-complete to design a deterministic mechanism that maximizes the expected sum of the payments collected from the agents.",
                "We show that this problem is hard even in the single-agent setting, thereby immediately showing it hard for both IR concepts, for both solution concepts.",
                "To demonstrate NPhardness, we reduce from the MINSAT problem.",
                "Definition 9 (MINSAT).",
                "We are given a formula φ in conjunctive normal form, represented by a set of Boolean variables V and a set of clauses C, and an integer K (K < |C|).",
                "We are asked whether there exists an assignment to the variables in V such that at most K clauses in φ are satisfied.",
                "MINSAT was recently shown to be NP-complete [14].",
                "We can now present our result.",
                "Theorem 1.",
                "Payment-maximizing deterministic AMD is NP-complete, even for a single agent, even with a uniform distribution over types.",
                "Proof.",
                "It is easy to show that the problem is in NP.",
                "To show NP-hardness, we reduce an arbitrary MINSAT instance to the following single-agent payment-maximizing deterministic AMD instance.",
                "Let the agents type set be Θ = {θc : c ∈ C} ∪ {θv : v ∈ V }, where C is the set of clauses in the MINSAT instance, and V is the set of variables.",
                "Let the probability distribution over these types be uniform.",
                "Let the outcome set be O = {o0} ∪ {oc : c ∈ C} ∪ {ol : l ∈ L}, where L is the set of literals, that is, L = {+v : v ∈ V } ∪ {−v : v ∈ V }.",
                "Let the notation v(l) = v denote that v is the variable corresponding to the literal l, that is, l ∈ {+v, −v}.",
                "Let l ∈ c denote that the literal l occurs in clause c. Then, let the agents utility function be given by u(θc, ol) = |Θ| + 1 for all l ∈ L with l ∈ c; u(θc, ol) = 0 for all l ∈ L with l /∈ c; u(θc, oc) = |Θ| + 1; u(θc, oc ) = 0 for all c ∈ C with c = c ; u(θv, ol) = |Θ| for all l ∈ L with v(l) = v; u(θv, ol) = 0 for all l ∈ L with v(l) = v; u(θv, oc) = 0 for all c ∈ C. The goal of the AMD instance is G = |Θ| + |C|−K |Θ| , where K is the goal of the MINSAT instance.",
                "We show the instances are equivalent.",
                "First, suppose there is a solution to the MINSAT instance.",
                "Let the assignment of truth values to the variables in this solution be given by the function f : V → L (where v(f(v)) = v for all v ∈ V ).",
                "Then, for every v ∈ V , let o(θv) = of(v) and π(θv) = |Θ|.",
                "For every c ∈ C, let o(θc) = oc; let π(θc) = |Θ| + 1 if c is not satisfied in the MINSAT solution, and π(θc) = |Θ| if c is satisfied.",
                "It is straightforward to check that the IR constraint is satisfied.",
                "We now check that the agent has no incentive to misreport.",
                "If the agents type is some θv, then any other report will give it an outcome that is no better, for a payment that is no less, so it has no incentive to misreport.",
                "If the agents type is some θc where c is a satisfied clause, again, any other report will give it an outcome that is no better, for a payment that is no less, so it has no incentive to misreport.",
                "The final case to check is where the agents type is some θc where c is an unsatisfied clause.",
                "In this case, we observe that for none of the types, reporting it leads to an outcome ol for a literal l ∈ c, precisely because the clause is not satisfied in the MINSAT instance.",
                "Because also, no type besides θc leads to the outcome oc, reporting any other type will give an outcome with utility 0, while still forcing a payment of at least |Θ| from the agent.",
                "Clearly the agent is better off reporting truthfully, for a total utility of 0.",
                "This establishes that the agent never has an incentive to misreport.",
                "Finally, we show that the goal is reached.",
                "If s is the number of satisfied clauses in the MINSAT solution (so that s ≤ K), the expected payment from this mechanism is |V ||Θ|+s|Θ|+(|C|−s)(|Θ|+1) |Θ| ≥ |V ||Θ|+K|Θ|+(|C|−K)(|Θ|+1) |Θ| = |Θ| + |C|−K |Θ| = G. So there is a solution to the AMD instance.",
                "Now suppose there is a solution to the AMD instance, given by an outcome function o and a payment function π.",
                "First, suppose there is some v ∈ V such that o(θv) /∈ {o+v, o−v}.",
                "Then the utility that the agent derives from the given outcome for this type is 0, and hence, by IR, no payment can be extracted from the agent for this type.",
                "Because, again by IR, the maximum payment that can be extracted for any other type is |Θ| + 1, it follows that the maximum expected payment that could be obtained is at most (|Θ|−1)(|Θ|+1) |Θ| < |Θ| < G, contradicting that this is a solution to the AMD instance.",
                "It follows that in the solution to the AMD instance, for every v ∈ V , o(θv) ∈ {o+v, o−v}. 136 We can interpret this as an assignment of truth values to the variables: v is set to true if o(θv) = o+v, and to false if o(θv) = o−v.",
                "We claim this assignment is a solution to the MINSAT instance.",
                "By the IR constraint, the maximum payment we can extract from any type θv is |Θ|.",
                "Because there can be no incentives for the agent to report falsely, for any clause c satisfied by the given assignment, the maximum payment we can extract for the corresponding type θc is |Θ|. (For if we extracted more from this type, the agents utility in this case would be less than 1; and if v is the variable satisfying c in the assignment, so that o(θv) = ol where l occurs in c, then the agent would be better off reporting θv instead of the truthful report θc, to get an outcome worth |Θ|+1 to it while having to pay at most |Θ|.)",
                "Finally, for any unsatisfied clause c, by the IR constraint, the maximum payment we can extract for the corresponding type θc is |Θ| + 1.",
                "It follows that the expected payment from our mechanism is at most V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ , where s is the number of satisfied clauses.",
                "Because our mechanism achieves the goal, it follows that V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ ≥ G, which by simple algebraic manipulations is equivalent to s ≤ K. So there is a solution to the MINSAT instance.",
                "Because payment-maximizing AMD is just the special case of AMD for a self-interested designer where the designer has no preferences over the outcome chosen, this immediately implies hardness for the general case of AMD for a selfinterested designer where payments are possible.",
                "However, it does not yet imply hardness for the special case where payments are not possible.",
                "We will prove hardness in this case in the next section. 5.",
                "SELF-INTERESTED DETERMINISTIC AMD WITHOUT PAYMENTS IS HARD In this section we demonstrate that it is NP-complete to design a deterministic mechanism that maximizes the expectation of the designers objective when payments are not possible.",
                "We show that this problem is hard even in the single-agent setting, thereby immediately showing it hard for both IR concepts, for both solution concepts.",
                "Theorem 2.",
                "Without payments, deterministic AMD for a self-interested designer is NP-complete, even for a single agent, even with a uniform distribution over types.",
                "Proof.",
                "It is easy to show that the problem is in NP.",
                "To show NP-hardness, we reduce an arbitrary MINSAT instance to the following single-agent self-interested deterministic AMD without payments instance.",
                "Let the agents type set be Θ = {θc : c ∈ C} ∪ {θv : v ∈ V }, where C is the set of clauses in the MINSAT instance, and V is the set of variables.",
                "Let the probability distribution over these types be uniform.",
                "Let the outcome set be O = {o0} ∪ {oc : c ∈ C}∪{ol : l ∈ L}∪{o∗ }, where L is the set of literals, that is, L = {+v : v ∈ V } ∪ {−v : v ∈ V }.",
                "Let the notation v(l) = v denote that v is the variable corresponding to the literal l, that is, l ∈ {+v, −v}.",
                "Let l ∈ c denote that the literal l occurs in clause c. Then, let the agents utility function be given by u(θc, ol) = 2 for all l ∈ L with l ∈ c; u(θc, ol) = −1 for all l ∈ L with l /∈ c; u(θc, oc) = 2; u(θc, oc ) = −1 for all c ∈ C with c = c ; u(θc, o∗ ) = 1; u(θv, ol) = 1 for all l ∈ L with v(l) = v; u(θv, ol) = −1 for all l ∈ L with v(l) = v; u(θv, oc) = −1 for all c ∈ C; u(θv, o∗ ) = −1.",
                "Let the designers objective function be given by g(o∗ ) = |Θ|+1; g(ol) = |Θ| for all l ∈ L; g(oc) = |Θ| for all c ∈ C. The goal of the AMD instance is G = |Θ| + |C|−K |Θ| , where K is the goal of the MINSAT instance.",
                "We show the instances are equivalent.",
                "First, suppose there is a solution to the MINSAT instance.",
                "Let the assignment of truth values to the variables in this solution be given by the function f : V → L (where v(f(v)) = v for all v ∈ V ).",
                "Then, for every v ∈ V , let o(θv) = of(v).",
                "For every c ∈ C that is satisfied in the MINSAT solution, let o(θc) = oc; for every unsatisfied c ∈ C, let o(θc) = o∗ .",
                "It is straightforward to check that the IR constraint is satisfied.",
                "We now check that the agent has no incentive to misreport.",
                "If the agents type is some θv, it is getting the maximum utility for that type, so it has no incentive to misreport.",
                "If the agents type is some θc where c is a satisfied clause, again, it is getting the maximum utility for that type, so it has no incentive to misreport.",
                "The final case to check is where the agents type is some θc where c is an unsatisfied clause.",
                "In this case, we observe that for none of the types, reporting it leads to an outcome ol for a literal l ∈ c, precisely because the clause is not satisfied in the MINSAT instance.",
                "Because also, no type leads to the outcome oc, there is no outcome that the mechanism ever selects that would give the agent utility greater than 1 for type θc, and hence the agent has no incentive to report falsely.",
                "This establishes that the agent never has an incentive to misreport.",
                "Finally, we show that the goal is reached.",
                "If s is the number of satisfied clauses in the MINSAT solution (so that s ≤ K), then the expected value of the designers objective function is |V ||Θ|+s|Θ|+(|C|−s)(|Θ|+1) |Θ| ≥ |V ||Θ|+K|Θ|+(|C|−K)(|Θ|+1) |Θ| = |Θ| + |C|−K |Θ| = G. So there is a solution to the AMD instance.",
                "Now suppose there is a solution to the AMD instance, given by an outcome function o.",
                "First, suppose there is some v ∈ V such that o(θv) /∈ {o+v, o−v}.",
                "The only other outcome that the mechanism is allowed to choose under the IR constraint is o0.",
                "This has an objective value of 0, and because the highest value the objective function ever takes is |Θ| + 1, it follows that the maximum expected value of the objective function that could be obtained is at most (|Θ|−1)(|Θ|+1) |Θ| < |Θ| < G, contradicting that this is a solution to the AMD instance.",
                "It follows that in the solution to the AMD instance, for every v ∈ V , o(θv) ∈ {o+v, o−v}.",
                "We can interpret this as an assignment of truth values to the variables: v is set to true if o(θv) = o+v, and to false if o(θv) = o−v.",
                "We claim this assignment is a solution to the MINSAT instance.",
                "By the above, for any type θv, the value of the objective function in this mechanism will be |Θ|.",
                "For any clause c satisfied by the given assignment, the value of the objective function in the case where the agent reports type θc will be at most |Θ|. (This is because we cannot choose the outcome o∗ for such a type, as in this case the agent would have an incentive to report θv instead, where v is the variable satisfying c in the assignment (so that o(θv) = ol where l occurs in c).)",
                "Finally, for any unsatisfied clause c, the maximum value the objective function can take in the case where the agent reports type θc is |Θ| + 1, simply because this is the largest value the function ever takes.",
                "It follows that the expected value of the objective function for our mechanism is at most V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ , where s is the number of satisfied 137 clauses.",
                "Because our mechanism achieves the goal, it follows that V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ ≥ G, which by simple algebraic manipulations is equivalent to s ≤ K. So there is a solution to the MINSAT instance.",
                "Both of our hardness results relied on the constraint that the mechanism should be deterministic.",
                "In the next section, we show that the hardness of design disappears when we allow for randomization in the mechanism. 6.",
                "RANDOMIZED AMD FOR A SELFINTERESTED DESIGNER IS EASY We now show how allowing for randomization over the outcomes makes the problem of self-interested AMD tractable through linear programming, for any constant number of agents.",
                "Theorem 3.",
                "Self-interested randomized AMD with a constant number of agents is solvable in polynomial time by linear programming, both with and without payments, both for ex post and ex interim IR, and both for implementation in dominant strategies and for implementation in Bayes-Nash equilibrium-even if the types are correlated.",
                "Proof.",
                "Because linear programs can be solved in polynomial time [13], all we need to show is that the number of variables and equations in our program is polynomial for any constant number of agents-that is, exponential only in N. Throughout, for purposes of determining the size of the linear program, let T = maxi{|Θi|}.",
                "The variables of our linear program will be the probabilities (p(θ1, θ2, . . . , θN ))(o) (at most TN |O| variables) and the payments πi(θ1, θ2, . . . , θN ) (at most NTN variables). (We show the linear program for the case where payments are possible; the case without payments is easily obtained from this by simply omitting all the payment variables in the program, or by adding additional constraints forcing the payments to be 0.)",
                "First, we show the IR constraints.",
                "For ex post IR, we add the following (at most NTN ) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, and for every (θ1, θ2, . . . , θN ) ∈ Θ1 × Θ2 × . . . × ΘN , we add ( o∈O (p(θ1, θ2, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , θN ) ≥ 0.",
                "For ex interim IR, we add the following (at most NT) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, for every θi ∈ Θi, we add θ1,... ,θN γ(θ1, . . . , θN |θi)(( o∈O (p(θ1, θ2, . . . , θN ))(o)u(θi, o))− πi(θ1, θ2, . . . , θN )) ≥ 0.",
                "Now, we show the solution concept constraints.",
                "For implementation in dominant strategies, we add the following (at most NTN+1 ) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, for every (θ1, θ2, . . . , θi, . . . , θN ) ∈ Θ1 × Θ2 × . . . × ΘN , and for every alternative type report ˆθi ∈ Θi, we add the constraint ( o∈O (p(θ1, θ2, . . . , θi, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , θi, . . . , θN ) ≥ ( o∈O (p(θ1, θ2, . . . , ˆθi, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , ˆθi, . . . , θN ).",
                "Finally, for implementation in Bayes-Nash equilibrium, we add the following (at most NT2 ) constraints to the LP: • For every i ∈ {1, 2, ..., N}, for every θi ∈ Θi, and for every alternative type report ˆθi ∈ Θi, we add the constraint θ1,...,θN γ(θ1, ..., θN |θi)(( o∈O (p(θ1, θ2, ..., θi, ..., θN ))(o)u(θi, o)) − πi(θ1, θ2, ..., θi, ..., θN )) ≥ θ1,...,θN γ(θ1, ..., θN |θi)(( o∈O (p(θ1, θ2, ..., ˆθi, ..., θN ))(o)u(θi, o)) − πi(θ1, θ2, ..., ˆθi, ..., θN )).",
                "All that is left to do is to give the expression the designer is seeking to maximize, which is: • θ1,...,θN γ(θ1, ..., θN )(( o∈O (p(θ1, θ2, ..., θi, ..., θN ))(o)g(o)) + N i=1 πi(θ1, θ2, ..., θN )).",
                "As we indicated, the number of variables and constraints is exponential only in N, and hence the linear program is of polynomial size for constant numbers of agents.",
                "Thus the problem is solvable in polynomial time. 7.",
                "IMPLICATIONS FOR AN OPTIMAL COMBINATORIAL AUCTION DESIGN PROBLEM In this section, we will demonstrate some interesting consequences of the problem of automated mechanism design for a self-interested designer on designing optimal combinatorial auctions.",
                "Consider a combinatorial auction with a set S of items for sale.",
                "For any bundle B ⊆ S, let ui(θi, B) be bidder is utility for receiving bundle B when the bidders type is θi.",
                "The optimal auction design problem is to specify the rules of the auction so as to maximize expected revenue to the auctioneer. (By the revelation principle, without loss of generality, we can assume the auction is truthful.)",
                "The optimal auction design problem is solved for the case of a single item by the famous Myerson auction [18].",
                "However, designing optimal auctions in combinatorial auctions is a recognized open research problem [3, 25].",
                "The problem is open even if there are only two items for sale. (The twoitem case with a very special form of complementarity and no substitutability has been solved recently [1].)",
                "Suppose we have free disposal-items can be thrown away at no cost.",
                "Also, suppose that the bidders preferences have the following structure: whenever a bidder receives a bundle of items, the bidders utility for that bundle is determined by the best item in the bundle only. (We emphasize that 138 which item is the best is allowed to depend on the bidders type.)",
                "Definition 10.",
                "Bidder i is said to have best-only preferences over bundles of items if there exists a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s).",
                "We make the following useful observation in this setting: there is no sense in awarding a bidder more than one item.",
                "The reason is that if the bidder is reporting truthfully, taking all but the highest valued item away from the bidder will not hurt the bidder; and, by free disposal, doing so can only reduce the incentive for this bidder to falsely report this type, when the bidder actually has another type.",
                "We now show that the problem of designing a deterministic optimal auction here is NP-complete, by a reduction from the payment maximizing AMD problem!",
                "Theorem 4.",
                "Given an optimal combinatorial auction design problem under best-only preferences (given by a set of items S and for each bidder i, a finite type space Θi and a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s)), designing the optimal deterministic auction is NP-complete, even for a single bidder with a uniform distribution over types.",
                "Proof.",
                "The problem is in NP because we can nondeterministically generate an allocation rule, and then set the payments using linear programming.",
                "To show NP-hardness, we reduce an arbitrary paymentmaximizing deterministic AMD instance, with a single agent and a uniform distribution over types, to the following optimal combinatorial auction design problem instance with a single bidder with best-only preferences.",
                "For every outcome o ∈ O in the AMD instance (besides the outcome o0), let there be one item so ∈ S. Let the type space be the same, and let v(θi, so) = ui(θi, o) (where u is as specified in the AMD instance).",
                "Let the expected revenue target value be the same in both instances.",
                "We show the instances are equivalent.",
                "First suppose there exists a solution to the AMD instance, given by an outcome function and a payment function.",
                "Then, if the AMD solution chooses outcome o for a type, in the optimal auction solution, allocate {so} to the bidder for this type. (Unless o = o0, in which case we allocate {} to the bidder.)",
                "Let the payment functions be the same in both instances.",
                "Then, the utility that an agent receives for reporting a type (given the true type) in either solution is the same, so we have incentive compatibility in the optimal auction solution.",
                "Moreover, because the type distribution and the payment function are the same, the expected revenue to the auctioneer/designer is the same.",
                "It follows that there exists a solution to the optimal auction design instance.",
                "Now suppose there exists a solution to the optimal auction design instance.",
                "By the at-most-one-item observation, we can assume without loss of generality that the solution never allocates more than one item.",
                "Then, if the optimal auction solution allocates item so to the bidder for a type, in the AMD solution, let the mechanism choose outcome o for that type.",
                "If the optimal auction solution allocates nothing to the bidder for a type, in the AMD solution, let the mechanism choose outcome o0 for that type.",
                "Let the payment functions be the same.",
                "Then, the utility that an agent receives for reporting a type (given the true type) in either solution is the same, so we have incentive compatibility in the AMD solution.",
                "Moreover, because the type distribution and the payment function are the same, the expected revenue to the designer/auctioneer is the same.",
                "It follows that there exists a solution to the AMD instance.",
                "Fortunately, we can also carry through the easiness result for randomized mechanisms to this combinatorial auction setting-giving us one of the few known polynomial-time algorithms for an optimal combinatorial auction design problem.",
                "Theorem 5.",
                "Given an optimal combinatorial auction design problem under best-only preferences (given by a set of items S and for each bidder i, a finite type space Θi and a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s)), if the number of bidders is a constant k, then the optimal randomized auction can be designed in polynomial time. (For any IC and IR constraints.)",
                "Proof.",
                "By the at-most-one-item observation, we can without loss of generality restrict ourselves to allocations where each bidder receives at most one item.",
                "There are fewer than (|S| + 1)k such allocations-that is, a polynomial number of allocations.",
                "Because we can list the outcomes explicitly, we can simply solve this as a payment-maximizing AMD instance, with linear programming. 8.",
                "RELATED RESEARCH ON COMPLEXITY IN MECHANISM DESIGN There has been considerable recent interest in mechanism design in computer science.",
                "Some of it has focused on issues of computational complexity, but most of that work has strived toward designing mechanisms that are easy to execute (e.g. [20, 15, 19, 9, 12]), rather than studying the complexity of designing the mechanism.",
                "The closest piece of earlier work studied the complexity of automated mechanism design by a benevolent designer [5, 6].",
                "Roughgarden has studied the complexity of designing a good network topology for agents that selfishly choose the links they use [21].",
                "This is related to mechanism design, but differs significantly in that the designer only has restricted control over the rules of the game because there is no party that can impose the outcome (or side payments).",
                "Also, there is no explicit reporting of preferences. 9.",
                "CONCLUSIONS AND FUTURE RESEARCH Often, an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "The key difficulty is that the agents may report their preferences insincerely to make the chosen outcome more favorable to themselves.",
                "Mechanism design is the art of designing the rules of the game so that the agents are motivated to report their preferences truthfully, and a desirable outcome is chosen.",
                "In a recently emerging approach-called automated mechanism design-a mechanism is computed for the specific preference aggregation setting at hand.",
                "This has several advantages, 139 but the downside is that the mechanism design optimization problem needs to be solved anew each time.",
                "Unlike earlier work on automated mechanism design that studied a benevolent designer, in this paper we studied automated mechanism design problems where the designer is self-interesteda setting much more relevant for electronic commerce.",
                "In this setting, the center cares only about which outcome is chosen and what payments are made to it.",
                "The reason that the agents preferences are relevant is that the center is constrained to making each agent at least as well off as the agent would have been had it not participated in the mechanism.",
                "In this setting, we showed that designing an optimal deterministic mechanism is NP-complete in two important special cases: when the center is interested only in the payments made to it, and when payments are not possible and the center is interested only in the outcome chosen.",
                "These hardness results imply hardness in all more general automated mechanism design settings with a self-interested designer.",
                "The hardness results apply whether the individual rationality (participation) constraints are applied ex interim or ex post, and whether the solution concept is dominant strategies implementation or Bayes-Nash equilibrium implementation.",
                "We then showed that allowing randomization in the mechanism makes the design problem in all these settings computationally easy.",
                "Finally, we showed that the paymentmaximizing AMD problem is closely related to an interesting variant of the optimal (revenue-maximizing) combinatorial auction design problem, where the bidders have best-only preferences.",
                "We showed that here, too, designing an optimal deterministic mechanism is NP-complete even with one agent, but designing an optimal randomized mechanism is easy.",
                "Future research includes studying automated mechanism design with a self-interested designer in more restricted settings such as auctions (where the designers objective may include preferences about which bidder should receive the good-as well as payments).",
                "We also want to study the complexity of automated mechanism design in settings where the outcome and type spaces have special structure so they can be represented more concisely.",
                "Finally, we plan to assemble a data set of real-world mechanism design problems-both historical and current-and apply automated mechanism design to those problems. 10.",
                "REFERENCES [1] M. Armstrong.",
                "Optimal multi-object auctions.",
                "Review of Economic Studies, 67:455-481, 2000. [2] K. Arrow.",
                "The property rights doctrine and demand revelation under incomplete information.",
                "In M. Boskin, editor, Economics and human welfare.",
                "New York Academic Press, 1979. [3] C. Avery and T. Hendershott.",
                "Bundling and optimal auctions of multiple products.",
                "Review of Economic Studies, 67:483-497, 2000. [4] E. H. Clarke.",
                "Multipart pricing of public goods.",
                "Public Choice, 11:17-33, 1971. [5] V. Conitzer and T. Sandholm.",
                "Complexity of mechanism design.",
                "In Proceedings of the 18th Annual Conference on Uncertainty in Artificial Intelligence (UAI-02), pages 103-110, Edmonton, Canada, 2002. [6] V. Conitzer and T. Sandholm.",
                "Automated mechanism design: Complexity results stemming from the single-agent setting.",
                "In Proceedings of the 5th International Conference on Electronic Commerce (ICEC-03), pages 17-24, Pittsburgh, PA, USA, 2003. [7] V. Conitzer and T. Sandholm.",
                "Computational criticisms of the revelation principle.",
                "In Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), New York, NY, 2004.",
                "Short paper.",
                "Full-length version appeared in the AAMAS-03 workshop on Agent-Mediated Electronic Commerce (AMEC). [8] C. dAspremont and L. A. G´erard-Varet.",
                "Incentives and incomplete information.",
                "Journal of Public Economics, 11:25-45, 1979. [9] J. Feigenbaum, C. Papadimitriou, and S. Shenker.",
                "Sharing the cost of muliticast transmissions.",
                "Journal of Computer and System Sciences, 63:21-41, 2001.",
                "Early version in Proceedings of the Annual ACM Symposium on Theory of Computing (STOC), 2000. [10] A. Gibbard.",
                "Manipulation of voting schemes.",
                "Econometrica, 41:587-602, 1973. [11] T. Groves.",
                "Incentives in teams.",
                "Econometrica, 41:617-631, 1973. [12] J. Hershberger and S. Suri.",
                "Vickrey prices and shortest paths: What is an edge worth?",
                "In Proceedings of the Annual Symposium on Foundations of Computer Science (FOCS), 2001. [13] L. Khachiyan.",
                "A polynomial algorithm in linear programming.",
                "Soviet Math.",
                "Doklady, 20:191-194, 1979. [14] R. Kohli, R. Krishnamurthi, and P. Mirchandani.",
                "The minimum satisfiability problem.",
                "SIAM Journal of Discrete Mathematics, 7(2):275-283, 1994. [15] D. Lehmann, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in rapid, approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002.",
                "Early version appeared in Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), 1999. [16] A. Mas-Colell, M. Whinston, and J. R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [17] E. S. Maskin and J. Riley.",
                "Optimal multi-unit auctions.",
                "In F. Hahn, editor, The Economics of Missing Markets, Information, and Games, chapter 14, pages 312-335.",
                "Clarendon Press, Oxford, 1989. [18] R. Myerson.",
                "Optimal auction design.",
                "Mathematics of Operation Research, 6:58-73, 1981. [19] N. Nisan and A. Ronen.",
                "Computationally feasible VCG mechanisms.",
                "In Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), pages 242-252, Minneapolis, MN, 2000. [20] N. Nisan and A. Ronen.",
                "Algorithmic mechanism design.",
                "Games and Economic Behavior, 35:166-196, 2001.",
                "Early version in Proceedings of the Annual ACM Symposium on Theory of Computing (STOC), 1999. [21] T. Roughgarden.",
                "Designing networks for selfish users is hard.",
                "In Proceedings of the Annual Symposium on Foundations of Computer Science (FOCS), 2001. [22] T. Sandholm.",
                "Issues in computational Vickrey auctions.",
                "International Journal of Electronic Commerce, 4(3):107-129, 2000.",
                "Special Issue on 140 Applying Intelligent Agents for Electronic Commerce.",
                "A short, early version appeared at the Second International Conference on Multi-Agent Systems (ICMAS), pages 299-306, 1996. [23] M. A. Satterthwaite.",
                "Strategy-proofness and Arrows conditions: existence and correspondence theorems for voting procedures and social welfare functions.",
                "Journal of Economic Theory, 10:187-217, 1975. [24] W. Vickrey.",
                "Counterspeculation, auctions, and competitive sealed tenders.",
                "Journal of Finance, 16:8-37, 1961. [25] R. V. Vohra.",
                "Research problems in combinatorial auctions.",
                "Mimeo, version Oct. 29, 2001. 141"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "combinatorial auction": {
            "translated_key": "subasta combinatoria",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Self-interested Automated Mechanism Design and Implications for Optimal Combinatorial Auctions∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT Often, an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "The key difficulty is that the agents may report their preferences insincerely to make the chosen outcome more favorable to themselves.",
                "Mechanism design is the art of designing the rules of the game so that the agents are motivated to report their preferences truthfully, and a desirable outcome is chosen.",
                "In a recently proposed approach-called automated mechanism design-a mechanism is computed for the preference aggregation setting at hand.",
                "This has several advantages, but the downside is that the mechanism design optimization problem needs to be solved anew each time.",
                "Unlike the earlier work on automated mechanism design that studied a benevolent designer, in this paper we study automated mechanism design problems where the designer is self-interested.",
                "In this case, the center cares only about which outcome is chosen and what payments are made to it.",
                "The reason that the agents preferences are relevant is that the center is constrained to making each agent at least as well off as the agent would have been had it not participated in the mechanism.",
                "In this setting, we show that designing optimal deterministic mechanisms is NP-complete in two important special cases: when the center is interested only in the payments made to it, and when payments are not possible and the center is interested only in the outcome chosen.",
                "We then show how allowing for randomization in the mechanism makes problems in this setting computationally easy.",
                "Finally, we show that the payment-maximizing AMD problem is closely related to an interesting variant of the optimal (revenuemaximizing) <br>combinatorial auction</br> design problem, where the bidders have best-only preferences.",
                "We show that here, too, designing an optimal deterministic auction is NPcomplete, but designing an optimal randomized auction is easy.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In multiagent settings, often an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "Such outcomes could be potential presidents, joint plans, allocations of goods or resources, etc.",
                "The preference aggregator generally does not know the agents preferences a priori.",
                "Rather, the agents report their preferences to the coordinator.",
                "Unfortunately, an agent may have an incentive to misreport its preferences in order to mislead the mechanism into selecting an outcome that is more desirable to the agent than the outcome that would be selected if the agent revealed its preferences truthfully.",
                "Such manipulation is undesirable because preference aggregation mechanisms are tailored to aggregate preferences in a socially desirable way, and if the agents reveal their preferences insincerely, a socially undesirable outcome may be chosen.",
                "Manipulability is a pervasive problem across preference aggregation mechanisms.",
                "A seminal negative result, the Gibbard-Satterthwaite theorem, shows that under any nondictatorial preference aggregation scheme, if there are at least 3 possible outcomes, there are preferences under which an agent is better off reporting untruthfully [10, 23]. (A preference aggregation scheme is called dictatorial if one of the agents dictates the outcome no matter what preferences the other agents report.)",
                "What the aggregator would like to do is design a preference aggregation mechanism so that 1) the self-interested agents are motivated to report their preferences truthfully, and 2) the mechanism chooses an outcome that is desirable from the perspective of some objective.",
                "This is the classic setting of mechanism design in game theory.",
                "In this paper, we study the case where the designer is self-interested, that is, the designer does not directly care about how the out132 come relates to the agents preferences, but is rather concerned with its own agenda for which outcome should be chosen, and with maximizing payments to itself.",
                "This is the mechanism design setting most relevant to electronic commerce.",
                "In the case where the mechanism designer is interested in maximizing some notion of social welfare, the importance of collecting the agents preferences is clear.",
                "It is perhaps less obvious why they should be collected when the designer is self-interested and hence its objective is not directly related to the agents preferences.",
                "The reason for this is that often the agents preferences impose limits on how the designer chooses the outcome and payments.",
                "The most common such constraint is that of individual rationality (IR), which means that the mechanism cannot make any agent worse off than the agent would have been had it not participated in the mechanism.",
                "For instance, in the setting of optimal auction design, the designer (auctioneer) is only concerned with how much revenue is collected, and not per se with how well the allocation of the good (or goods) corresponds to the agents preferences.",
                "Nevertheless, the designer cannot force an agent to pay more than its valuation for the bundle of goods allocated to it.",
                "Therefore, even a self-interested designer will choose an outcome that makes the agents reasonably well off.",
                "On the other hand, the designer will not necessarily choose a social welfare maximizing outcome.",
                "For example, if the designer always chooses an outcome that maximizes social welfare with respect to the reported preferences, and forces each agent to pay the difference between the utility it has now and the utility it would have had if it had not participated in the mechanism, it is easy to see that agents may have an incentive to misreport their preferences-and this may actually lead to less revenue being collected.",
                "Indeed, one of the counterintuitive results of optimal auction design theory is that sometimes the good is allocated to nobody even when the auctioneer has a reservation price of 0.",
                "Classical mechanism design provides some general mechanisms, which, under certain assumptions, satisfy some notion of nonmanipulability and maximize some objective.",
                "The upside of these mechanisms is that they do not rely on (even probabilistic) information about the agents preferences (e.g., the Vickrey-Clarke-Groves (VCG) mechanism [24, 4, 11]), or they can be easily applied to any probability distribution over the preferences (e.g., the dAGVA mechanism [8, 2], the Myerson auction [18], and the Maskin-Riley multi-unit auction [17]).",
                "However, the general mechanisms also have significant downsides: • The most famous and most broadly applicable general mechanisms, VCG and dAGVA, only maximize social welfare.",
                "If the designer is self-interested, as is the case in many electronic commerce settings, these mechanisms do not maximize the designers objective. • The general mechanisms that do focus on a selfinterested designer are only applicable in very restricted settings-such as Myersons expected revenue maximizing auction for selling a single item, and Maskin and Rileys expected revenue maximizing auction for selling multiple identical units of an item. • Even in the restricted settings in which these mechanisms apply, the mechanisms only allow for payment maximization.",
                "In practice, the designer may also be interested in the outcome per se.",
                "For example, an auctioneer may care which bidder receives the item. • It is often assumed that side payments can be used to tailor the agents incentives, but this is not always practical.",
                "For example, in barter-based electronic marketplaces-such as Recipco, firstbarter.com, BarterOne, and Intagio-side payments are not allowed.",
                "Furthermore, among software agents, it might be more desirable to construct mechanisms that do not rely on the ability to make payments, because many software agents do not have the infrastructure to make payments.",
                "In contrast, we follow a recent approach where the mechanism is designed automatically for the specific problem at hand.",
                "This approach addresses all of the downsides listed above.",
                "We formulate the mechanism design problem as an optimization problem.",
                "The input is characterized by the number of agents, the agents possible types (preferences), and the aggregators prior distributions over the agents types.",
                "The output is a nonmanipulable mechanism that is optimal with respect to some objective.",
                "This approach is called automated mechanism design.",
                "The automated mechanism design approach has four advantages over the classical approach of designing general mechanisms.",
                "First, it can be used even in settings that do not satisfy the assumptions of the classical mechanisms (such as availability of side payments or that the objective is social welfare).",
                "Second, it may allow one to circumvent impossibility results (such as the Gibbard-Satterthwaite theorem) which state that there is no mechanism that is desirable across all preferences.",
                "When the mechanism is designed for the setting at hand, it does not matter that it would not work more generally.",
                "Third, it may yield better mechanisms (in terms of stronger nonmanipulability guarantees and/or better outcomes) than classical mechanisms because the mechanism capitalizes on the particulars of the setting (the probabilistic information that the designer has about the agents types).",
                "Given the vast amount of information that parties have about each other today, this approach is likely to lead to tremendous savings over classical mechanisms, which largely ignore that information.",
                "For example, imagine a company automatically creating its procurement mechanism based on statistical knowledge about its suppliers, rather than using a classical descending procurement auction.",
                "Fourth, the burden of design is shifted from humans to a machine.",
                "However, automated mechanism design requires the mechanism design optimization problem to be solved anew for each setting.",
                "Hence its computational complexity becomes a key issue.",
                "Previous research has studied this question for benevolent designers-that wish to maximize, for example, social welfare [5, 6].",
                "In this paper we study the computational complexity of automated mechanism design in the case of a self-interested designer.",
                "This is an important setting for automated mechanism design due to the shortage of general mechanisms in this area, and the fact that in most e-commerce settings the designer is self-interested.",
                "We also show that this problem is closely related to a particular optimal (revenue-maximizing) <br>combinatorial auction</br> design problem. 133 The rest of this paper is organized as follows.",
                "In Section 2, we justify the focus on nonmanipulable mechanisms.",
                "In Section 3, we define the problem we study.",
                "In Section 4, we show that designing an optimal deterministic mechanism is NP-complete even when the designer only cares about the payments made to it.",
                "In Section 5, we show that designing an optimal deterministic mechanism is also NP-complete when payments are not possible and the designer is only interested in the outcome chosen.",
                "In Section 6, we show that an optimal randomized mechanism can be designed in polynomial time even in the general case.",
                "Finally, in Section 7, we show that for designing optimal combinatorial auctions under best-only preferences, our results on AMD imply that this problem is NP-complete for deterministic auctions, but easy for randomized auctions. 2.",
                "JUSTIFYING THE FOCUS ON NONMANIPULABLE MECHANISMS Before we define the computational problem of automated mechanism design, we should justify our focus on nonmanipulable mechanisms.",
                "After all, it is not immediately obvious that there are no manipulable mechanisms that, even when agents report their types strategically and hence sometimes untruthfully, still reach better outcomes (according to whatever objective we use) than any nonmanipulable mechanism.",
                "This does, however, turn out to be the case: given any mechanism, we can construct a nonmanipulable mechanism whose performance is identical, as follows.",
                "We build an interface layer between the agents and the original mechanism.",
                "The agents report their preferences (or types) to the interface layer; subsequently, the interface layer inputs into the original mechanism the types that the agents would have strategically reported to the original mechanism, if their types were as declared to the interface layer.",
                "The resulting outcome is the outcome of the new mechanism.",
                "Since the interface layer acts strategically on each agents behalf, there is never an incentive to report falsely to the interface layer; and hence, the types reported by the interface layer are the strategic types that would have been reported without the interface layer, so the results are exactly as they would have been with the original mechanism.",
                "This argument is known in the mechanism design literature as the revelation principle [16]. (There are computational difficulties with applying the revelation principle in large combinatorial outcome and type spaces [7, 22].",
                "However, because here we focus on flatly represented outcome and type spaces, this is not a concern here.)",
                "Given this, we can focus on truthful mechanisms in the rest of the paper. 3.",
                "DEFINITIONS We now formalize the automated mechanism design setting.",
                "Definition 1.",
                "In an automated mechanism design setting, we are given: • a finite set of outcomes O; • a finite set of N agents; • for each agent i, 1. a finite set of types Θi, 2. a probability distribution γi over Θi (in the case of correlated types, there is a single joint distribution γ over Θ1 × . . . × ΘN ), and 3. a utility function ui : Θi × O → R; 1 • An objective function whose expectation the designer wishes to maximize.",
                "There are many possible objective functions the designer might have, for example, social welfare (where the designer seeks to maximize the sum of the agents utilities), or the minimum utility of any agent (where the designer seeks to maximize the worst utility had by any agent).",
                "In both of these cases, the designer is benevolent, because the designer, in some sense, is pursuing the agents collective happiness.",
                "However, in this paper, we focus on the case of a self-interested designer.",
                "A self-interested designer cares only about the outcome chosen (that is, the designer does not care how the outcome relates to the agents preferences, but rather has a fixed preference over the outcomes), and about the net payments made by the agents, which flow to the designer.",
                "Definition 2.",
                "A self-interested designer has an objective function given by g(o) + N i=1 πi, where g : O → R indicates the designers own preference over the outcomes, and πi is the payment made by agent i.",
                "In the case where g = 0 everywhere, the designer is said to be payment maximizing.",
                "In the case where payments are not possible, g constitutes the objective function by itself.",
                "We now define the kinds of mechanisms under study.",
                "By the revelation principle, we can restrict attention to truthful, direct revelation mechanisms, where agents report their types directly and never have an incentive to misreport them.",
                "Definition 3.",
                "We consider the following kinds of mechanism: • A deterministic mechanism without payments consists of an outcome selection function o : Θ1 × Θ2 × . . . × ΘN → O. • A randomized mechanism without payments consists of a distribution selection function p : Θ1 × Θ2 × . . . × ΘN → P(O), where P(O) is the set of probability distributions over O. • A deterministic mechanism with payments consists of an outcome selection function o : Θ1 ×Θ2 ×. . .×ΘN → O and for each agent i, a payment selection function πi : Θ1 × Θ2 × . . . × ΘN → R, where πi(θ1, . . . , θN ) gives the payment made by agent i when the reported types are θ1, . . . , θN . 1 Though this follows standard game theory notation [16], the fact that the agent has both a utility function and a type is perhaps confusing.",
                "The types encode the various possible preferences that the agent may turn out to have, and the agents type is not known to the aggregator.",
                "The utility function is common knowledge, but because the agents type is a parameter in the agents utility function, the aggregator cannot know what the agents utility is without knowing the agents type. 134 • A randomized mechanism with payments consists of a distribution selection function p : Θ1 × Θ2 × . . . × ΘN → P(O), and for each agent i, a payment selection function πi : Θ1 × Θ2 × . . . × ΘN → R.2 There are two types of constraint on the designer in building the mechanism. 3.1 Individual rationality (IR) constraints The first type of constraint is the following.",
                "The utility of each agent has to be at least as great as the agents fallback utility, that is, the utility that the agent would receive if it did not participate in the mechanism.",
                "Otherwise that agent would not participate in the mechanism-and no agents participation can ever hurt the mechanism designers objective because at worst, the mechanism can ignore an agent by pretending the agent is not there. (Furthermore, if no such constraint applied, the designer could simply make the agents pay an infinite amount.)",
                "This type of constraint is called an IR (individual rationality) constraint.",
                "There are three different possible IR constraints: ex ante, ex interim, and ex post, depending on what the agent knows about its own type and the others types when deciding whether to participate in the mechanism.",
                "Ex ante IR means that the agent would participate if it knew nothing at all (not even its own type).",
                "We will not study this concept in this paper.",
                "Ex interim IR means that the agent would always participate if it knew only its own type, but not those of the others.",
                "Ex post IR means that the agent would always participate even if it knew everybodys type.",
                "We will define the latter two notions of IR formally.",
                "First, we need to formalize the concept of the fallback outcome.",
                "We assume that each agents fallback utility is zero for each one of its types.",
                "This is without loss of generality because we can add a constant term to an agents utility function (for a given type), without affecting the decision-making behavior of that expected utility maximizing agent [16].",
                "Definition 4.",
                "In any automated mechanism design setting with an IR constraint, there is a fallback outcome o0 ∈ O where, for any agent i and any type θi ∈ Θi, we have ui(θi, o0) = 0. (Additionally, in the case of a self-interested designer, g(o0) = 0.)",
                "We can now to define the notions of individual rationality.",
                "Definition 5.",
                "Individual rationality (IR) is defined by: • A deterministic mechanism is ex interim IR if for any agent i, and any type θi ∈ Θi, we have E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, .., θN ))−πi(θ1, .., θN )] ≥ 0.",
                "A randomized mechanism is ex interim IR if for any agent i, and any type θi ∈ Θi, we have E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,..,θn [ui(θi, o)−πi(θ1, .., θN )] ≥ 0. • A deterministic mechanism is ex post IR if for any agent i, and any type vector (θ1, . . . , θN ) ∈ Θ1 × . . . × ΘN , we have ui(θi, o(θ1, . . . , θN )) − πi(θ1, . . . , θN ) ≥ 0. 2 We do not randomize over payments because as long as the agents and the designer are risk neutral with respect to payments, that is, their utility is linear in payments, there is no reason to randomize over payments.",
                "A randomized mechanism is ex post IR if for any agent i, and any type vector (θ1, . . . , θN ) ∈ Θ1 × . . . × ΘN , we have Eo|θ1,..,θn [ui(θi, o) − πi(θ1, .., θN )] ≥ 0.",
                "The terms involving payments can be left out in the case where payments are not possible. 3.2 Incentive compatibility (IC) constraints The second type of constraint says that the agents should never have an incentive to misreport their type (as justified above by the revelation principle).",
                "For this type of constraint, the two most common variants (or solution concepts) are implementation in dominant strategies, and implementation in Bayes-Nash equilibrium.",
                "Definition 6.",
                "Given an automated mechanism design setting, a mechanism is said to implement its outcome and payment functions in dominant strategies if truthtelling is always optimal even when the types reported by the other agents are already known.",
                "Formally, for any agent i, any type vector (θ1, . . . , θi, . . . , θN ) ∈ Θ1 × . . . × Θi × . . . × ΘN , and any alternative type report ˆθi ∈ Θi, in the case of deterministic mechanisms we have ui(θi, o(θ1, . . . , θi, . . . , θN )) − πi(θ1, . . . , θi, . . . , θN ) ≥ ui(θi, o(θ1, . . . , ˆθi, . . . , θN )) − πi(θ1, . . . , ˆθi, . . . , θN ).",
                "In the case of randomized mechanisms we have Eo|θ1,..,θi,..,θn [ui(θi, o) − πi(θ1, . . . , θi, . . . , θN )] ≥ Eo|θ1,.., ˆθi,..,θn [ui(θi, o) − πi(θ1, . . . , ˆθi, . . . , θN )].",
                "The terms involving payments can be left out in the case where payments are not possible.",
                "Thus, in dominant strategies implementation, truthtelling is optimal regardless of what the other agents report.",
                "If it is optimal only given that the other agents are truthful, and given that one does not know the other agents types, we have implementation in Bayes-Nash equilibrium.",
                "Definition 7.",
                "Given an automated mechanism design setting, a mechanism is said to implement its outcome and payment functions in Bayes-Nash equilibrium if truthtelling is always optimal to an agent when that agent does not yet know anything about the other agents types, and the other agents are telling the truth.",
                "Formally, for any agent i, any type θi ∈ Θi, and any alternative type report ˆθi ∈ Θi, in the case of deterministic mechanisms we have E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, . . . , θi, . . . , θN ))− πi(θ1, . . . , θi, . . . , θN )] ≥ E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, . . . , ˆθi, . . . , θN ))− πi(θ1, . . . , ˆθi, . . . , θN )].",
                "In the case of randomized mechanisms we have E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,..,θi,..,θn [ui(θi, o)− πi(θ1, . . . , θi, . . . , θN )] ≥ E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,.., ˆθi,..,θn [ui(θi, o)− πi(θ1, . . . , ˆθi, . . . , θN )].",
                "The terms involving payments can be left out in the case where payments are not possible. 135 3.3 Automated mechanism design We can now define the computational problem we study.",
                "Definition 8. (AUTOMATED-MECHANISM-DESIGN (AMD)) We are given: • an automated mechanism design setting, • an IR notion (ex interim, ex post, or none), • a solution concept (dominant strategies or Bayes-Nash), • whether payments are possible, • whether randomization is possible, • (in the decision variant of the problem) a target value G. We are asked whether there exists a mechanism of the specified kind (in terms of payments and randomization) that satisfies both the IR notion and the solution concept, and gives an expected value of at least G for the objective.",
                "An interesting special case is the setting where there is only one agent.",
                "In this case, the reporting agent always knows everything there is to know about the other agents types-because there are no other agents.",
                "Since ex post and ex interim IR only differ on what an agent is assumed to know about other agents types, the two IR concepts coincide here.",
                "Also, because implementation in dominant strategies and implementation in Bayes-Nash equilibrium only differ on what an agent is assumed to know about other agents types, the two solution concepts coincide here.",
                "This observation will prove to be a useful tool in proving hardness results: if we prove computational hardness in the singleagent setting, this immediately implies hardness for both IR concepts, for both solution concepts, for any number of agents. 4.",
                "PAYMENT-MAXIMIZINGDETERMINISTIC AMD IS HARD In this section we demonstrate that it is NP-complete to design a deterministic mechanism that maximizes the expected sum of the payments collected from the agents.",
                "We show that this problem is hard even in the single-agent setting, thereby immediately showing it hard for both IR concepts, for both solution concepts.",
                "To demonstrate NPhardness, we reduce from the MINSAT problem.",
                "Definition 9 (MINSAT).",
                "We are given a formula φ in conjunctive normal form, represented by a set of Boolean variables V and a set of clauses C, and an integer K (K < |C|).",
                "We are asked whether there exists an assignment to the variables in V such that at most K clauses in φ are satisfied.",
                "MINSAT was recently shown to be NP-complete [14].",
                "We can now present our result.",
                "Theorem 1.",
                "Payment-maximizing deterministic AMD is NP-complete, even for a single agent, even with a uniform distribution over types.",
                "Proof.",
                "It is easy to show that the problem is in NP.",
                "To show NP-hardness, we reduce an arbitrary MINSAT instance to the following single-agent payment-maximizing deterministic AMD instance.",
                "Let the agents type set be Θ = {θc : c ∈ C} ∪ {θv : v ∈ V }, where C is the set of clauses in the MINSAT instance, and V is the set of variables.",
                "Let the probability distribution over these types be uniform.",
                "Let the outcome set be O = {o0} ∪ {oc : c ∈ C} ∪ {ol : l ∈ L}, where L is the set of literals, that is, L = {+v : v ∈ V } ∪ {−v : v ∈ V }.",
                "Let the notation v(l) = v denote that v is the variable corresponding to the literal l, that is, l ∈ {+v, −v}.",
                "Let l ∈ c denote that the literal l occurs in clause c. Then, let the agents utility function be given by u(θc, ol) = |Θ| + 1 for all l ∈ L with l ∈ c; u(θc, ol) = 0 for all l ∈ L with l /∈ c; u(θc, oc) = |Θ| + 1; u(θc, oc ) = 0 for all c ∈ C with c = c ; u(θv, ol) = |Θ| for all l ∈ L with v(l) = v; u(θv, ol) = 0 for all l ∈ L with v(l) = v; u(θv, oc) = 0 for all c ∈ C. The goal of the AMD instance is G = |Θ| + |C|−K |Θ| , where K is the goal of the MINSAT instance.",
                "We show the instances are equivalent.",
                "First, suppose there is a solution to the MINSAT instance.",
                "Let the assignment of truth values to the variables in this solution be given by the function f : V → L (where v(f(v)) = v for all v ∈ V ).",
                "Then, for every v ∈ V , let o(θv) = of(v) and π(θv) = |Θ|.",
                "For every c ∈ C, let o(θc) = oc; let π(θc) = |Θ| + 1 if c is not satisfied in the MINSAT solution, and π(θc) = |Θ| if c is satisfied.",
                "It is straightforward to check that the IR constraint is satisfied.",
                "We now check that the agent has no incentive to misreport.",
                "If the agents type is some θv, then any other report will give it an outcome that is no better, for a payment that is no less, so it has no incentive to misreport.",
                "If the agents type is some θc where c is a satisfied clause, again, any other report will give it an outcome that is no better, for a payment that is no less, so it has no incentive to misreport.",
                "The final case to check is where the agents type is some θc where c is an unsatisfied clause.",
                "In this case, we observe that for none of the types, reporting it leads to an outcome ol for a literal l ∈ c, precisely because the clause is not satisfied in the MINSAT instance.",
                "Because also, no type besides θc leads to the outcome oc, reporting any other type will give an outcome with utility 0, while still forcing a payment of at least |Θ| from the agent.",
                "Clearly the agent is better off reporting truthfully, for a total utility of 0.",
                "This establishes that the agent never has an incentive to misreport.",
                "Finally, we show that the goal is reached.",
                "If s is the number of satisfied clauses in the MINSAT solution (so that s ≤ K), the expected payment from this mechanism is |V ||Θ|+s|Θ|+(|C|−s)(|Θ|+1) |Θ| ≥ |V ||Θ|+K|Θ|+(|C|−K)(|Θ|+1) |Θ| = |Θ| + |C|−K |Θ| = G. So there is a solution to the AMD instance.",
                "Now suppose there is a solution to the AMD instance, given by an outcome function o and a payment function π.",
                "First, suppose there is some v ∈ V such that o(θv) /∈ {o+v, o−v}.",
                "Then the utility that the agent derives from the given outcome for this type is 0, and hence, by IR, no payment can be extracted from the agent for this type.",
                "Because, again by IR, the maximum payment that can be extracted for any other type is |Θ| + 1, it follows that the maximum expected payment that could be obtained is at most (|Θ|−1)(|Θ|+1) |Θ| < |Θ| < G, contradicting that this is a solution to the AMD instance.",
                "It follows that in the solution to the AMD instance, for every v ∈ V , o(θv) ∈ {o+v, o−v}. 136 We can interpret this as an assignment of truth values to the variables: v is set to true if o(θv) = o+v, and to false if o(θv) = o−v.",
                "We claim this assignment is a solution to the MINSAT instance.",
                "By the IR constraint, the maximum payment we can extract from any type θv is |Θ|.",
                "Because there can be no incentives for the agent to report falsely, for any clause c satisfied by the given assignment, the maximum payment we can extract for the corresponding type θc is |Θ|. (For if we extracted more from this type, the agents utility in this case would be less than 1; and if v is the variable satisfying c in the assignment, so that o(θv) = ol where l occurs in c, then the agent would be better off reporting θv instead of the truthful report θc, to get an outcome worth |Θ|+1 to it while having to pay at most |Θ|.)",
                "Finally, for any unsatisfied clause c, by the IR constraint, the maximum payment we can extract for the corresponding type θc is |Θ| + 1.",
                "It follows that the expected payment from our mechanism is at most V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ , where s is the number of satisfied clauses.",
                "Because our mechanism achieves the goal, it follows that V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ ≥ G, which by simple algebraic manipulations is equivalent to s ≤ K. So there is a solution to the MINSAT instance.",
                "Because payment-maximizing AMD is just the special case of AMD for a self-interested designer where the designer has no preferences over the outcome chosen, this immediately implies hardness for the general case of AMD for a selfinterested designer where payments are possible.",
                "However, it does not yet imply hardness for the special case where payments are not possible.",
                "We will prove hardness in this case in the next section. 5.",
                "SELF-INTERESTED DETERMINISTIC AMD WITHOUT PAYMENTS IS HARD In this section we demonstrate that it is NP-complete to design a deterministic mechanism that maximizes the expectation of the designers objective when payments are not possible.",
                "We show that this problem is hard even in the single-agent setting, thereby immediately showing it hard for both IR concepts, for both solution concepts.",
                "Theorem 2.",
                "Without payments, deterministic AMD for a self-interested designer is NP-complete, even for a single agent, even with a uniform distribution over types.",
                "Proof.",
                "It is easy to show that the problem is in NP.",
                "To show NP-hardness, we reduce an arbitrary MINSAT instance to the following single-agent self-interested deterministic AMD without payments instance.",
                "Let the agents type set be Θ = {θc : c ∈ C} ∪ {θv : v ∈ V }, where C is the set of clauses in the MINSAT instance, and V is the set of variables.",
                "Let the probability distribution over these types be uniform.",
                "Let the outcome set be O = {o0} ∪ {oc : c ∈ C}∪{ol : l ∈ L}∪{o∗ }, where L is the set of literals, that is, L = {+v : v ∈ V } ∪ {−v : v ∈ V }.",
                "Let the notation v(l) = v denote that v is the variable corresponding to the literal l, that is, l ∈ {+v, −v}.",
                "Let l ∈ c denote that the literal l occurs in clause c. Then, let the agents utility function be given by u(θc, ol) = 2 for all l ∈ L with l ∈ c; u(θc, ol) = −1 for all l ∈ L with l /∈ c; u(θc, oc) = 2; u(θc, oc ) = −1 for all c ∈ C with c = c ; u(θc, o∗ ) = 1; u(θv, ol) = 1 for all l ∈ L with v(l) = v; u(θv, ol) = −1 for all l ∈ L with v(l) = v; u(θv, oc) = −1 for all c ∈ C; u(θv, o∗ ) = −1.",
                "Let the designers objective function be given by g(o∗ ) = |Θ|+1; g(ol) = |Θ| for all l ∈ L; g(oc) = |Θ| for all c ∈ C. The goal of the AMD instance is G = |Θ| + |C|−K |Θ| , where K is the goal of the MINSAT instance.",
                "We show the instances are equivalent.",
                "First, suppose there is a solution to the MINSAT instance.",
                "Let the assignment of truth values to the variables in this solution be given by the function f : V → L (where v(f(v)) = v for all v ∈ V ).",
                "Then, for every v ∈ V , let o(θv) = of(v).",
                "For every c ∈ C that is satisfied in the MINSAT solution, let o(θc) = oc; for every unsatisfied c ∈ C, let o(θc) = o∗ .",
                "It is straightforward to check that the IR constraint is satisfied.",
                "We now check that the agent has no incentive to misreport.",
                "If the agents type is some θv, it is getting the maximum utility for that type, so it has no incentive to misreport.",
                "If the agents type is some θc where c is a satisfied clause, again, it is getting the maximum utility for that type, so it has no incentive to misreport.",
                "The final case to check is where the agents type is some θc where c is an unsatisfied clause.",
                "In this case, we observe that for none of the types, reporting it leads to an outcome ol for a literal l ∈ c, precisely because the clause is not satisfied in the MINSAT instance.",
                "Because also, no type leads to the outcome oc, there is no outcome that the mechanism ever selects that would give the agent utility greater than 1 for type θc, and hence the agent has no incentive to report falsely.",
                "This establishes that the agent never has an incentive to misreport.",
                "Finally, we show that the goal is reached.",
                "If s is the number of satisfied clauses in the MINSAT solution (so that s ≤ K), then the expected value of the designers objective function is |V ||Θ|+s|Θ|+(|C|−s)(|Θ|+1) |Θ| ≥ |V ||Θ|+K|Θ|+(|C|−K)(|Θ|+1) |Θ| = |Θ| + |C|−K |Θ| = G. So there is a solution to the AMD instance.",
                "Now suppose there is a solution to the AMD instance, given by an outcome function o.",
                "First, suppose there is some v ∈ V such that o(θv) /∈ {o+v, o−v}.",
                "The only other outcome that the mechanism is allowed to choose under the IR constraint is o0.",
                "This has an objective value of 0, and because the highest value the objective function ever takes is |Θ| + 1, it follows that the maximum expected value of the objective function that could be obtained is at most (|Θ|−1)(|Θ|+1) |Θ| < |Θ| < G, contradicting that this is a solution to the AMD instance.",
                "It follows that in the solution to the AMD instance, for every v ∈ V , o(θv) ∈ {o+v, o−v}.",
                "We can interpret this as an assignment of truth values to the variables: v is set to true if o(θv) = o+v, and to false if o(θv) = o−v.",
                "We claim this assignment is a solution to the MINSAT instance.",
                "By the above, for any type θv, the value of the objective function in this mechanism will be |Θ|.",
                "For any clause c satisfied by the given assignment, the value of the objective function in the case where the agent reports type θc will be at most |Θ|. (This is because we cannot choose the outcome o∗ for such a type, as in this case the agent would have an incentive to report θv instead, where v is the variable satisfying c in the assignment (so that o(θv) = ol where l occurs in c).)",
                "Finally, for any unsatisfied clause c, the maximum value the objective function can take in the case where the agent reports type θc is |Θ| + 1, simply because this is the largest value the function ever takes.",
                "It follows that the expected value of the objective function for our mechanism is at most V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ , where s is the number of satisfied 137 clauses.",
                "Because our mechanism achieves the goal, it follows that V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ ≥ G, which by simple algebraic manipulations is equivalent to s ≤ K. So there is a solution to the MINSAT instance.",
                "Both of our hardness results relied on the constraint that the mechanism should be deterministic.",
                "In the next section, we show that the hardness of design disappears when we allow for randomization in the mechanism. 6.",
                "RANDOMIZED AMD FOR A SELFINTERESTED DESIGNER IS EASY We now show how allowing for randomization over the outcomes makes the problem of self-interested AMD tractable through linear programming, for any constant number of agents.",
                "Theorem 3.",
                "Self-interested randomized AMD with a constant number of agents is solvable in polynomial time by linear programming, both with and without payments, both for ex post and ex interim IR, and both for implementation in dominant strategies and for implementation in Bayes-Nash equilibrium-even if the types are correlated.",
                "Proof.",
                "Because linear programs can be solved in polynomial time [13], all we need to show is that the number of variables and equations in our program is polynomial for any constant number of agents-that is, exponential only in N. Throughout, for purposes of determining the size of the linear program, let T = maxi{|Θi|}.",
                "The variables of our linear program will be the probabilities (p(θ1, θ2, . . . , θN ))(o) (at most TN |O| variables) and the payments πi(θ1, θ2, . . . , θN ) (at most NTN variables). (We show the linear program for the case where payments are possible; the case without payments is easily obtained from this by simply omitting all the payment variables in the program, or by adding additional constraints forcing the payments to be 0.)",
                "First, we show the IR constraints.",
                "For ex post IR, we add the following (at most NTN ) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, and for every (θ1, θ2, . . . , θN ) ∈ Θ1 × Θ2 × . . . × ΘN , we add ( o∈O (p(θ1, θ2, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , θN ) ≥ 0.",
                "For ex interim IR, we add the following (at most NT) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, for every θi ∈ Θi, we add θ1,... ,θN γ(θ1, . . . , θN |θi)(( o∈O (p(θ1, θ2, . . . , θN ))(o)u(θi, o))− πi(θ1, θ2, . . . , θN )) ≥ 0.",
                "Now, we show the solution concept constraints.",
                "For implementation in dominant strategies, we add the following (at most NTN+1 ) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, for every (θ1, θ2, . . . , θi, . . . , θN ) ∈ Θ1 × Θ2 × . . . × ΘN , and for every alternative type report ˆθi ∈ Θi, we add the constraint ( o∈O (p(θ1, θ2, . . . , θi, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , θi, . . . , θN ) ≥ ( o∈O (p(θ1, θ2, . . . , ˆθi, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , ˆθi, . . . , θN ).",
                "Finally, for implementation in Bayes-Nash equilibrium, we add the following (at most NT2 ) constraints to the LP: • For every i ∈ {1, 2, ..., N}, for every θi ∈ Θi, and for every alternative type report ˆθi ∈ Θi, we add the constraint θ1,...,θN γ(θ1, ..., θN |θi)(( o∈O (p(θ1, θ2, ..., θi, ..., θN ))(o)u(θi, o)) − πi(θ1, θ2, ..., θi, ..., θN )) ≥ θ1,...,θN γ(θ1, ..., θN |θi)(( o∈O (p(θ1, θ2, ..., ˆθi, ..., θN ))(o)u(θi, o)) − πi(θ1, θ2, ..., ˆθi, ..., θN )).",
                "All that is left to do is to give the expression the designer is seeking to maximize, which is: • θ1,...,θN γ(θ1, ..., θN )(( o∈O (p(θ1, θ2, ..., θi, ..., θN ))(o)g(o)) + N i=1 πi(θ1, θ2, ..., θN )).",
                "As we indicated, the number of variables and constraints is exponential only in N, and hence the linear program is of polynomial size for constant numbers of agents.",
                "Thus the problem is solvable in polynomial time. 7.",
                "IMPLICATIONS FOR AN OPTIMAL <br>combinatorial auction</br> DESIGN PROBLEM In this section, we will demonstrate some interesting consequences of the problem of automated mechanism design for a self-interested designer on designing optimal combinatorial auctions.",
                "Consider a <br>combinatorial auction</br> with a set S of items for sale.",
                "For any bundle B ⊆ S, let ui(θi, B) be bidder is utility for receiving bundle B when the bidders type is θi.",
                "The optimal auction design problem is to specify the rules of the auction so as to maximize expected revenue to the auctioneer. (By the revelation principle, without loss of generality, we can assume the auction is truthful.)",
                "The optimal auction design problem is solved for the case of a single item by the famous Myerson auction [18].",
                "However, designing optimal auctions in combinatorial auctions is a recognized open research problem [3, 25].",
                "The problem is open even if there are only two items for sale. (The twoitem case with a very special form of complementarity and no substitutability has been solved recently [1].)",
                "Suppose we have free disposal-items can be thrown away at no cost.",
                "Also, suppose that the bidders preferences have the following structure: whenever a bidder receives a bundle of items, the bidders utility for that bundle is determined by the best item in the bundle only. (We emphasize that 138 which item is the best is allowed to depend on the bidders type.)",
                "Definition 10.",
                "Bidder i is said to have best-only preferences over bundles of items if there exists a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s).",
                "We make the following useful observation in this setting: there is no sense in awarding a bidder more than one item.",
                "The reason is that if the bidder is reporting truthfully, taking all but the highest valued item away from the bidder will not hurt the bidder; and, by free disposal, doing so can only reduce the incentive for this bidder to falsely report this type, when the bidder actually has another type.",
                "We now show that the problem of designing a deterministic optimal auction here is NP-complete, by a reduction from the payment maximizing AMD problem!",
                "Theorem 4.",
                "Given an optimal <br>combinatorial auction</br> design problem under best-only preferences (given by a set of items S and for each bidder i, a finite type space Θi and a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s)), designing the optimal deterministic auction is NP-complete, even for a single bidder with a uniform distribution over types.",
                "Proof.",
                "The problem is in NP because we can nondeterministically generate an allocation rule, and then set the payments using linear programming.",
                "To show NP-hardness, we reduce an arbitrary paymentmaximizing deterministic AMD instance, with a single agent and a uniform distribution over types, to the following optimal <br>combinatorial auction</br> design problem instance with a single bidder with best-only preferences.",
                "For every outcome o ∈ O in the AMD instance (besides the outcome o0), let there be one item so ∈ S. Let the type space be the same, and let v(θi, so) = ui(θi, o) (where u is as specified in the AMD instance).",
                "Let the expected revenue target value be the same in both instances.",
                "We show the instances are equivalent.",
                "First suppose there exists a solution to the AMD instance, given by an outcome function and a payment function.",
                "Then, if the AMD solution chooses outcome o for a type, in the optimal auction solution, allocate {so} to the bidder for this type. (Unless o = o0, in which case we allocate {} to the bidder.)",
                "Let the payment functions be the same in both instances.",
                "Then, the utility that an agent receives for reporting a type (given the true type) in either solution is the same, so we have incentive compatibility in the optimal auction solution.",
                "Moreover, because the type distribution and the payment function are the same, the expected revenue to the auctioneer/designer is the same.",
                "It follows that there exists a solution to the optimal auction design instance.",
                "Now suppose there exists a solution to the optimal auction design instance.",
                "By the at-most-one-item observation, we can assume without loss of generality that the solution never allocates more than one item.",
                "Then, if the optimal auction solution allocates item so to the bidder for a type, in the AMD solution, let the mechanism choose outcome o for that type.",
                "If the optimal auction solution allocates nothing to the bidder for a type, in the AMD solution, let the mechanism choose outcome o0 for that type.",
                "Let the payment functions be the same.",
                "Then, the utility that an agent receives for reporting a type (given the true type) in either solution is the same, so we have incentive compatibility in the AMD solution.",
                "Moreover, because the type distribution and the payment function are the same, the expected revenue to the designer/auctioneer is the same.",
                "It follows that there exists a solution to the AMD instance.",
                "Fortunately, we can also carry through the easiness result for randomized mechanisms to this <br>combinatorial auction</br> setting-giving us one of the few known polynomial-time algorithms for an optimal <br>combinatorial auction</br> design problem.",
                "Theorem 5.",
                "Given an optimal <br>combinatorial auction</br> design problem under best-only preferences (given by a set of items S and for each bidder i, a finite type space Θi and a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s)), if the number of bidders is a constant k, then the optimal randomized auction can be designed in polynomial time. (For any IC and IR constraints.)",
                "Proof.",
                "By the at-most-one-item observation, we can without loss of generality restrict ourselves to allocations where each bidder receives at most one item.",
                "There are fewer than (|S| + 1)k such allocations-that is, a polynomial number of allocations.",
                "Because we can list the outcomes explicitly, we can simply solve this as a payment-maximizing AMD instance, with linear programming. 8.",
                "RELATED RESEARCH ON COMPLEXITY IN MECHANISM DESIGN There has been considerable recent interest in mechanism design in computer science.",
                "Some of it has focused on issues of computational complexity, but most of that work has strived toward designing mechanisms that are easy to execute (e.g. [20, 15, 19, 9, 12]), rather than studying the complexity of designing the mechanism.",
                "The closest piece of earlier work studied the complexity of automated mechanism design by a benevolent designer [5, 6].",
                "Roughgarden has studied the complexity of designing a good network topology for agents that selfishly choose the links they use [21].",
                "This is related to mechanism design, but differs significantly in that the designer only has restricted control over the rules of the game because there is no party that can impose the outcome (or side payments).",
                "Also, there is no explicit reporting of preferences. 9.",
                "CONCLUSIONS AND FUTURE RESEARCH Often, an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "The key difficulty is that the agents may report their preferences insincerely to make the chosen outcome more favorable to themselves.",
                "Mechanism design is the art of designing the rules of the game so that the agents are motivated to report their preferences truthfully, and a desirable outcome is chosen.",
                "In a recently emerging approach-called automated mechanism design-a mechanism is computed for the specific preference aggregation setting at hand.",
                "This has several advantages, 139 but the downside is that the mechanism design optimization problem needs to be solved anew each time.",
                "Unlike earlier work on automated mechanism design that studied a benevolent designer, in this paper we studied automated mechanism design problems where the designer is self-interesteda setting much more relevant for electronic commerce.",
                "In this setting, the center cares only about which outcome is chosen and what payments are made to it.",
                "The reason that the agents preferences are relevant is that the center is constrained to making each agent at least as well off as the agent would have been had it not participated in the mechanism.",
                "In this setting, we showed that designing an optimal deterministic mechanism is NP-complete in two important special cases: when the center is interested only in the payments made to it, and when payments are not possible and the center is interested only in the outcome chosen.",
                "These hardness results imply hardness in all more general automated mechanism design settings with a self-interested designer.",
                "The hardness results apply whether the individual rationality (participation) constraints are applied ex interim or ex post, and whether the solution concept is dominant strategies implementation or Bayes-Nash equilibrium implementation.",
                "We then showed that allowing randomization in the mechanism makes the design problem in all these settings computationally easy.",
                "Finally, we showed that the paymentmaximizing AMD problem is closely related to an interesting variant of the optimal (revenue-maximizing) <br>combinatorial auction</br> design problem, where the bidders have best-only preferences.",
                "We showed that here, too, designing an optimal deterministic mechanism is NP-complete even with one agent, but designing an optimal randomized mechanism is easy.",
                "Future research includes studying automated mechanism design with a self-interested designer in more restricted settings such as auctions (where the designers objective may include preferences about which bidder should receive the good-as well as payments).",
                "We also want to study the complexity of automated mechanism design in settings where the outcome and type spaces have special structure so they can be represented more concisely.",
                "Finally, we plan to assemble a data set of real-world mechanism design problems-both historical and current-and apply automated mechanism design to those problems. 10.",
                "REFERENCES [1] M. Armstrong.",
                "Optimal multi-object auctions.",
                "Review of Economic Studies, 67:455-481, 2000. [2] K. Arrow.",
                "The property rights doctrine and demand revelation under incomplete information.",
                "In M. Boskin, editor, Economics and human welfare.",
                "New York Academic Press, 1979. [3] C. Avery and T. Hendershott.",
                "Bundling and optimal auctions of multiple products.",
                "Review of Economic Studies, 67:483-497, 2000. [4] E. H. Clarke.",
                "Multipart pricing of public goods.",
                "Public Choice, 11:17-33, 1971. [5] V. Conitzer and T. Sandholm.",
                "Complexity of mechanism design.",
                "In Proceedings of the 18th Annual Conference on Uncertainty in Artificial Intelligence (UAI-02), pages 103-110, Edmonton, Canada, 2002. [6] V. Conitzer and T. Sandholm.",
                "Automated mechanism design: Complexity results stemming from the single-agent setting.",
                "In Proceedings of the 5th International Conference on Electronic Commerce (ICEC-03), pages 17-24, Pittsburgh, PA, USA, 2003. [7] V. Conitzer and T. Sandholm.",
                "Computational criticisms of the revelation principle.",
                "In Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), New York, NY, 2004.",
                "Short paper.",
                "Full-length version appeared in the AAMAS-03 workshop on Agent-Mediated Electronic Commerce (AMEC). [8] C. dAspremont and L. A. G´erard-Varet.",
                "Incentives and incomplete information.",
                "Journal of Public Economics, 11:25-45, 1979. [9] J. Feigenbaum, C. Papadimitriou, and S. Shenker.",
                "Sharing the cost of muliticast transmissions.",
                "Journal of Computer and System Sciences, 63:21-41, 2001.",
                "Early version in Proceedings of the Annual ACM Symposium on Theory of Computing (STOC), 2000. [10] A. Gibbard.",
                "Manipulation of voting schemes.",
                "Econometrica, 41:587-602, 1973. [11] T. Groves.",
                "Incentives in teams.",
                "Econometrica, 41:617-631, 1973. [12] J. Hershberger and S. Suri.",
                "Vickrey prices and shortest paths: What is an edge worth?",
                "In Proceedings of the Annual Symposium on Foundations of Computer Science (FOCS), 2001. [13] L. Khachiyan.",
                "A polynomial algorithm in linear programming.",
                "Soviet Math.",
                "Doklady, 20:191-194, 1979. [14] R. Kohli, R. Krishnamurthi, and P. Mirchandani.",
                "The minimum satisfiability problem.",
                "SIAM Journal of Discrete Mathematics, 7(2):275-283, 1994. [15] D. Lehmann, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in rapid, approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002.",
                "Early version appeared in Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), 1999. [16] A. Mas-Colell, M. Whinston, and J. R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [17] E. S. Maskin and J. Riley.",
                "Optimal multi-unit auctions.",
                "In F. Hahn, editor, The Economics of Missing Markets, Information, and Games, chapter 14, pages 312-335.",
                "Clarendon Press, Oxford, 1989. [18] R. Myerson.",
                "Optimal auction design.",
                "Mathematics of Operation Research, 6:58-73, 1981. [19] N. Nisan and A. Ronen.",
                "Computationally feasible VCG mechanisms.",
                "In Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), pages 242-252, Minneapolis, MN, 2000. [20] N. Nisan and A. Ronen.",
                "Algorithmic mechanism design.",
                "Games and Economic Behavior, 35:166-196, 2001.",
                "Early version in Proceedings of the Annual ACM Symposium on Theory of Computing (STOC), 1999. [21] T. Roughgarden.",
                "Designing networks for selfish users is hard.",
                "In Proceedings of the Annual Symposium on Foundations of Computer Science (FOCS), 2001. [22] T. Sandholm.",
                "Issues in computational Vickrey auctions.",
                "International Journal of Electronic Commerce, 4(3):107-129, 2000.",
                "Special Issue on 140 Applying Intelligent Agents for Electronic Commerce.",
                "A short, early version appeared at the Second International Conference on Multi-Agent Systems (ICMAS), pages 299-306, 1996. [23] M. A. Satterthwaite.",
                "Strategy-proofness and Arrows conditions: existence and correspondence theorems for voting procedures and social welfare functions.",
                "Journal of Economic Theory, 10:187-217, 1975. [24] W. Vickrey.",
                "Counterspeculation, auctions, and competitive sealed tenders.",
                "Journal of Finance, 16:8-37, 1961. [25] R. V. Vohra.",
                "Research problems in combinatorial auctions.",
                "Mimeo, version Oct. 29, 2001. 141"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Finalmente, mostramos que el problema de la AMD que maximiza el pago está estrechamente relacionado con una variante interesante del problema de diseño óptimo (de subasta combinatoria \"óptima (revenueMaximización), donde los licitantes tienen preferencias solo solo.",
                "También mostramos que este problema está estrechamente relacionado con un problema de diseño de diseño óptimo de \"subasta combinatoria\" óptima (subasta combinatoria \".133 El resto de este documento está organizado de la siguiente manera.",
                "Implicaciones para un problema de diseño óptimo de \"subasta combinatoria\" en esta sección, demostraremos algunas consecuencias interesantes del problema del diseño de mecanismo automatizado para un diseñador egoísta en el diseño de subastas combinatorias óptimas.",
                "Considere una \"subasta combinatoria\" con un conjunto de artículos a la venta.",
                "Dado un problema de diseño óptimo de \"subasta combinatoria\" bajo las preferencias de las mejores solo (dado por un conjunto de elementos sy para cada postor i, un espacio de tipo finito θi y una función vi: θi × s → r tal que para cualquier θi ∈ θi, para cualquier b ⊆ s, ui (θi, b) = maxs∈B VI (θi, s)), diseñar la subasta determinista óptima es NP completa, incluso para un solo postor con una distribución uniforme sobre los tipos.",
                "Para mostrar NP-Hardness, reducimos una instancia de AMD determinista de AMD, con un solo agente y una distribución uniforme sobre los tipos, a la siguiente instancia de diseño de diseño óptimo de \"subasta combinatoria\" con un solo postor con preferencias de solo solo.",
                "Afortunadamente, también podemos llevar a cabo el resultado de facilidad de los mecanismos aleatorios a esta \"subasta combinatoria\" que nos da uno de los pocos algoritmos conocidos de tiempo polinomial para un problema de diseño óptimo de \"subasta combinatoria\".",
                "Dado un problema de diseño óptimo de \"subasta combinatoria\" bajo las preferencias de las mejores solo (dado por un conjunto de elementos sy para cada postor i, un espacio de tipo finito θi y una función vi: θi × s → r tal que para cualquier θi ∈ θi, para cualquier b ⊆ s, ui (θi, b) = maxs∈B vi (θi, s)), si el número de postores es una K constante, entonces la subasta aleatoria óptima se puede diseñar en tiempo polinomial.(Para cualquier restricción IC e IR.)",
                "Finalmente, demostramos que el problema de la AMD que la maximiza el pago está estrechamente relacionado con una variante interesante del problema de diseño óptimo de \"subasta combinatorial\" óptima (que maximiza los ingresos), donde los licitantes tienen preferencias solo."
            ],
            "translated_text": "",
            "candidates": [
                "subasta combinatoria",
                "subasta combinatoria",
                "subasta combinatoria",
                "subasta combinatoria",
                "subasta combinatoria",
                "subasta combinatoria",
                "subasta combinatoria",
                "subasta combinatoria",
                "subasta combinatoria",
                "subasta combinatoria",
                "subasta combinatoria",
                "subasta combinatoria",
                "subasta combinatoria",
                "subasta combinatoria",
                "Subasta combinatoria",
                "subasta combinatoria",
                "subasta combinatoria",
                "subasta combinatorial"
            ],
            "error": []
        },
        "revenue maximization": {
            "translated_key": "maximización de ingresos",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Self-interested Automated Mechanism Design and Implications for Optimal Combinatorial Auctions∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT Often, an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "The key difficulty is that the agents may report their preferences insincerely to make the chosen outcome more favorable to themselves.",
                "Mechanism design is the art of designing the rules of the game so that the agents are motivated to report their preferences truthfully, and a desirable outcome is chosen.",
                "In a recently proposed approach-called automated mechanism design-a mechanism is computed for the preference aggregation setting at hand.",
                "This has several advantages, but the downside is that the mechanism design optimization problem needs to be solved anew each time.",
                "Unlike the earlier work on automated mechanism design that studied a benevolent designer, in this paper we study automated mechanism design problems where the designer is self-interested.",
                "In this case, the center cares only about which outcome is chosen and what payments are made to it.",
                "The reason that the agents preferences are relevant is that the center is constrained to making each agent at least as well off as the agent would have been had it not participated in the mechanism.",
                "In this setting, we show that designing optimal deterministic mechanisms is NP-complete in two important special cases: when the center is interested only in the payments made to it, and when payments are not possible and the center is interested only in the outcome chosen.",
                "We then show how allowing for randomization in the mechanism makes problems in this setting computationally easy.",
                "Finally, we show that the payment-maximizing AMD problem is closely related to an interesting variant of the optimal (revenuemaximizing) combinatorial auction design problem, where the bidders have best-only preferences.",
                "We show that here, too, designing an optimal deterministic auction is NPcomplete, but designing an optimal randomized auction is easy.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In multiagent settings, often an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "Such outcomes could be potential presidents, joint plans, allocations of goods or resources, etc.",
                "The preference aggregator generally does not know the agents preferences a priori.",
                "Rather, the agents report their preferences to the coordinator.",
                "Unfortunately, an agent may have an incentive to misreport its preferences in order to mislead the mechanism into selecting an outcome that is more desirable to the agent than the outcome that would be selected if the agent revealed its preferences truthfully.",
                "Such manipulation is undesirable because preference aggregation mechanisms are tailored to aggregate preferences in a socially desirable way, and if the agents reveal their preferences insincerely, a socially undesirable outcome may be chosen.",
                "Manipulability is a pervasive problem across preference aggregation mechanisms.",
                "A seminal negative result, the Gibbard-Satterthwaite theorem, shows that under any nondictatorial preference aggregation scheme, if there are at least 3 possible outcomes, there are preferences under which an agent is better off reporting untruthfully [10, 23]. (A preference aggregation scheme is called dictatorial if one of the agents dictates the outcome no matter what preferences the other agents report.)",
                "What the aggregator would like to do is design a preference aggregation mechanism so that 1) the self-interested agents are motivated to report their preferences truthfully, and 2) the mechanism chooses an outcome that is desirable from the perspective of some objective.",
                "This is the classic setting of mechanism design in game theory.",
                "In this paper, we study the case where the designer is self-interested, that is, the designer does not directly care about how the out132 come relates to the agents preferences, but is rather concerned with its own agenda for which outcome should be chosen, and with maximizing payments to itself.",
                "This is the mechanism design setting most relevant to electronic commerce.",
                "In the case where the mechanism designer is interested in maximizing some notion of social welfare, the importance of collecting the agents preferences is clear.",
                "It is perhaps less obvious why they should be collected when the designer is self-interested and hence its objective is not directly related to the agents preferences.",
                "The reason for this is that often the agents preferences impose limits on how the designer chooses the outcome and payments.",
                "The most common such constraint is that of individual rationality (IR), which means that the mechanism cannot make any agent worse off than the agent would have been had it not participated in the mechanism.",
                "For instance, in the setting of optimal auction design, the designer (auctioneer) is only concerned with how much revenue is collected, and not per se with how well the allocation of the good (or goods) corresponds to the agents preferences.",
                "Nevertheless, the designer cannot force an agent to pay more than its valuation for the bundle of goods allocated to it.",
                "Therefore, even a self-interested designer will choose an outcome that makes the agents reasonably well off.",
                "On the other hand, the designer will not necessarily choose a social welfare maximizing outcome.",
                "For example, if the designer always chooses an outcome that maximizes social welfare with respect to the reported preferences, and forces each agent to pay the difference between the utility it has now and the utility it would have had if it had not participated in the mechanism, it is easy to see that agents may have an incentive to misreport their preferences-and this may actually lead to less revenue being collected.",
                "Indeed, one of the counterintuitive results of optimal auction design theory is that sometimes the good is allocated to nobody even when the auctioneer has a reservation price of 0.",
                "Classical mechanism design provides some general mechanisms, which, under certain assumptions, satisfy some notion of nonmanipulability and maximize some objective.",
                "The upside of these mechanisms is that they do not rely on (even probabilistic) information about the agents preferences (e.g., the Vickrey-Clarke-Groves (VCG) mechanism [24, 4, 11]), or they can be easily applied to any probability distribution over the preferences (e.g., the dAGVA mechanism [8, 2], the Myerson auction [18], and the Maskin-Riley multi-unit auction [17]).",
                "However, the general mechanisms also have significant downsides: • The most famous and most broadly applicable general mechanisms, VCG and dAGVA, only maximize social welfare.",
                "If the designer is self-interested, as is the case in many electronic commerce settings, these mechanisms do not maximize the designers objective. • The general mechanisms that do focus on a selfinterested designer are only applicable in very restricted settings-such as Myersons expected revenue maximizing auction for selling a single item, and Maskin and Rileys expected revenue maximizing auction for selling multiple identical units of an item. • Even in the restricted settings in which these mechanisms apply, the mechanisms only allow for payment maximization.",
                "In practice, the designer may also be interested in the outcome per se.",
                "For example, an auctioneer may care which bidder receives the item. • It is often assumed that side payments can be used to tailor the agents incentives, but this is not always practical.",
                "For example, in barter-based electronic marketplaces-such as Recipco, firstbarter.com, BarterOne, and Intagio-side payments are not allowed.",
                "Furthermore, among software agents, it might be more desirable to construct mechanisms that do not rely on the ability to make payments, because many software agents do not have the infrastructure to make payments.",
                "In contrast, we follow a recent approach where the mechanism is designed automatically for the specific problem at hand.",
                "This approach addresses all of the downsides listed above.",
                "We formulate the mechanism design problem as an optimization problem.",
                "The input is characterized by the number of agents, the agents possible types (preferences), and the aggregators prior distributions over the agents types.",
                "The output is a nonmanipulable mechanism that is optimal with respect to some objective.",
                "This approach is called automated mechanism design.",
                "The automated mechanism design approach has four advantages over the classical approach of designing general mechanisms.",
                "First, it can be used even in settings that do not satisfy the assumptions of the classical mechanisms (such as availability of side payments or that the objective is social welfare).",
                "Second, it may allow one to circumvent impossibility results (such as the Gibbard-Satterthwaite theorem) which state that there is no mechanism that is desirable across all preferences.",
                "When the mechanism is designed for the setting at hand, it does not matter that it would not work more generally.",
                "Third, it may yield better mechanisms (in terms of stronger nonmanipulability guarantees and/or better outcomes) than classical mechanisms because the mechanism capitalizes on the particulars of the setting (the probabilistic information that the designer has about the agents types).",
                "Given the vast amount of information that parties have about each other today, this approach is likely to lead to tremendous savings over classical mechanisms, which largely ignore that information.",
                "For example, imagine a company automatically creating its procurement mechanism based on statistical knowledge about its suppliers, rather than using a classical descending procurement auction.",
                "Fourth, the burden of design is shifted from humans to a machine.",
                "However, automated mechanism design requires the mechanism design optimization problem to be solved anew for each setting.",
                "Hence its computational complexity becomes a key issue.",
                "Previous research has studied this question for benevolent designers-that wish to maximize, for example, social welfare [5, 6].",
                "In this paper we study the computational complexity of automated mechanism design in the case of a self-interested designer.",
                "This is an important setting for automated mechanism design due to the shortage of general mechanisms in this area, and the fact that in most e-commerce settings the designer is self-interested.",
                "We also show that this problem is closely related to a particular optimal (revenue-maximizing) combinatorial auction design problem. 133 The rest of this paper is organized as follows.",
                "In Section 2, we justify the focus on nonmanipulable mechanisms.",
                "In Section 3, we define the problem we study.",
                "In Section 4, we show that designing an optimal deterministic mechanism is NP-complete even when the designer only cares about the payments made to it.",
                "In Section 5, we show that designing an optimal deterministic mechanism is also NP-complete when payments are not possible and the designer is only interested in the outcome chosen.",
                "In Section 6, we show that an optimal randomized mechanism can be designed in polynomial time even in the general case.",
                "Finally, in Section 7, we show that for designing optimal combinatorial auctions under best-only preferences, our results on AMD imply that this problem is NP-complete for deterministic auctions, but easy for randomized auctions. 2.",
                "JUSTIFYING THE FOCUS ON NONMANIPULABLE MECHANISMS Before we define the computational problem of automated mechanism design, we should justify our focus on nonmanipulable mechanisms.",
                "After all, it is not immediately obvious that there are no manipulable mechanisms that, even when agents report their types strategically and hence sometimes untruthfully, still reach better outcomes (according to whatever objective we use) than any nonmanipulable mechanism.",
                "This does, however, turn out to be the case: given any mechanism, we can construct a nonmanipulable mechanism whose performance is identical, as follows.",
                "We build an interface layer between the agents and the original mechanism.",
                "The agents report their preferences (or types) to the interface layer; subsequently, the interface layer inputs into the original mechanism the types that the agents would have strategically reported to the original mechanism, if their types were as declared to the interface layer.",
                "The resulting outcome is the outcome of the new mechanism.",
                "Since the interface layer acts strategically on each agents behalf, there is never an incentive to report falsely to the interface layer; and hence, the types reported by the interface layer are the strategic types that would have been reported without the interface layer, so the results are exactly as they would have been with the original mechanism.",
                "This argument is known in the mechanism design literature as the revelation principle [16]. (There are computational difficulties with applying the revelation principle in large combinatorial outcome and type spaces [7, 22].",
                "However, because here we focus on flatly represented outcome and type spaces, this is not a concern here.)",
                "Given this, we can focus on truthful mechanisms in the rest of the paper. 3.",
                "DEFINITIONS We now formalize the automated mechanism design setting.",
                "Definition 1.",
                "In an automated mechanism design setting, we are given: • a finite set of outcomes O; • a finite set of N agents; • for each agent i, 1. a finite set of types Θi, 2. a probability distribution γi over Θi (in the case of correlated types, there is a single joint distribution γ over Θ1 × . . . × ΘN ), and 3. a utility function ui : Θi × O → R; 1 • An objective function whose expectation the designer wishes to maximize.",
                "There are many possible objective functions the designer might have, for example, social welfare (where the designer seeks to maximize the sum of the agents utilities), or the minimum utility of any agent (where the designer seeks to maximize the worst utility had by any agent).",
                "In both of these cases, the designer is benevolent, because the designer, in some sense, is pursuing the agents collective happiness.",
                "However, in this paper, we focus on the case of a self-interested designer.",
                "A self-interested designer cares only about the outcome chosen (that is, the designer does not care how the outcome relates to the agents preferences, but rather has a fixed preference over the outcomes), and about the net payments made by the agents, which flow to the designer.",
                "Definition 2.",
                "A self-interested designer has an objective function given by g(o) + N i=1 πi, where g : O → R indicates the designers own preference over the outcomes, and πi is the payment made by agent i.",
                "In the case where g = 0 everywhere, the designer is said to be payment maximizing.",
                "In the case where payments are not possible, g constitutes the objective function by itself.",
                "We now define the kinds of mechanisms under study.",
                "By the revelation principle, we can restrict attention to truthful, direct revelation mechanisms, where agents report their types directly and never have an incentive to misreport them.",
                "Definition 3.",
                "We consider the following kinds of mechanism: • A deterministic mechanism without payments consists of an outcome selection function o : Θ1 × Θ2 × . . . × ΘN → O. • A randomized mechanism without payments consists of a distribution selection function p : Θ1 × Θ2 × . . . × ΘN → P(O), where P(O) is the set of probability distributions over O. • A deterministic mechanism with payments consists of an outcome selection function o : Θ1 ×Θ2 ×. . .×ΘN → O and for each agent i, a payment selection function πi : Θ1 × Θ2 × . . . × ΘN → R, where πi(θ1, . . . , θN ) gives the payment made by agent i when the reported types are θ1, . . . , θN . 1 Though this follows standard game theory notation [16], the fact that the agent has both a utility function and a type is perhaps confusing.",
                "The types encode the various possible preferences that the agent may turn out to have, and the agents type is not known to the aggregator.",
                "The utility function is common knowledge, but because the agents type is a parameter in the agents utility function, the aggregator cannot know what the agents utility is without knowing the agents type. 134 • A randomized mechanism with payments consists of a distribution selection function p : Θ1 × Θ2 × . . . × ΘN → P(O), and for each agent i, a payment selection function πi : Θ1 × Θ2 × . . . × ΘN → R.2 There are two types of constraint on the designer in building the mechanism. 3.1 Individual rationality (IR) constraints The first type of constraint is the following.",
                "The utility of each agent has to be at least as great as the agents fallback utility, that is, the utility that the agent would receive if it did not participate in the mechanism.",
                "Otherwise that agent would not participate in the mechanism-and no agents participation can ever hurt the mechanism designers objective because at worst, the mechanism can ignore an agent by pretending the agent is not there. (Furthermore, if no such constraint applied, the designer could simply make the agents pay an infinite amount.)",
                "This type of constraint is called an IR (individual rationality) constraint.",
                "There are three different possible IR constraints: ex ante, ex interim, and ex post, depending on what the agent knows about its own type and the others types when deciding whether to participate in the mechanism.",
                "Ex ante IR means that the agent would participate if it knew nothing at all (not even its own type).",
                "We will not study this concept in this paper.",
                "Ex interim IR means that the agent would always participate if it knew only its own type, but not those of the others.",
                "Ex post IR means that the agent would always participate even if it knew everybodys type.",
                "We will define the latter two notions of IR formally.",
                "First, we need to formalize the concept of the fallback outcome.",
                "We assume that each agents fallback utility is zero for each one of its types.",
                "This is without loss of generality because we can add a constant term to an agents utility function (for a given type), without affecting the decision-making behavior of that expected utility maximizing agent [16].",
                "Definition 4.",
                "In any automated mechanism design setting with an IR constraint, there is a fallback outcome o0 ∈ O where, for any agent i and any type θi ∈ Θi, we have ui(θi, o0) = 0. (Additionally, in the case of a self-interested designer, g(o0) = 0.)",
                "We can now to define the notions of individual rationality.",
                "Definition 5.",
                "Individual rationality (IR) is defined by: • A deterministic mechanism is ex interim IR if for any agent i, and any type θi ∈ Θi, we have E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, .., θN ))−πi(θ1, .., θN )] ≥ 0.",
                "A randomized mechanism is ex interim IR if for any agent i, and any type θi ∈ Θi, we have E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,..,θn [ui(θi, o)−πi(θ1, .., θN )] ≥ 0. • A deterministic mechanism is ex post IR if for any agent i, and any type vector (θ1, . . . , θN ) ∈ Θ1 × . . . × ΘN , we have ui(θi, o(θ1, . . . , θN )) − πi(θ1, . . . , θN ) ≥ 0. 2 We do not randomize over payments because as long as the agents and the designer are risk neutral with respect to payments, that is, their utility is linear in payments, there is no reason to randomize over payments.",
                "A randomized mechanism is ex post IR if for any agent i, and any type vector (θ1, . . . , θN ) ∈ Θ1 × . . . × ΘN , we have Eo|θ1,..,θn [ui(θi, o) − πi(θ1, .., θN )] ≥ 0.",
                "The terms involving payments can be left out in the case where payments are not possible. 3.2 Incentive compatibility (IC) constraints The second type of constraint says that the agents should never have an incentive to misreport their type (as justified above by the revelation principle).",
                "For this type of constraint, the two most common variants (or solution concepts) are implementation in dominant strategies, and implementation in Bayes-Nash equilibrium.",
                "Definition 6.",
                "Given an automated mechanism design setting, a mechanism is said to implement its outcome and payment functions in dominant strategies if truthtelling is always optimal even when the types reported by the other agents are already known.",
                "Formally, for any agent i, any type vector (θ1, . . . , θi, . . . , θN ) ∈ Θ1 × . . . × Θi × . . . × ΘN , and any alternative type report ˆθi ∈ Θi, in the case of deterministic mechanisms we have ui(θi, o(θ1, . . . , θi, . . . , θN )) − πi(θ1, . . . , θi, . . . , θN ) ≥ ui(θi, o(θ1, . . . , ˆθi, . . . , θN )) − πi(θ1, . . . , ˆθi, . . . , θN ).",
                "In the case of randomized mechanisms we have Eo|θ1,..,θi,..,θn [ui(θi, o) − πi(θ1, . . . , θi, . . . , θN )] ≥ Eo|θ1,.., ˆθi,..,θn [ui(θi, o) − πi(θ1, . . . , ˆθi, . . . , θN )].",
                "The terms involving payments can be left out in the case where payments are not possible.",
                "Thus, in dominant strategies implementation, truthtelling is optimal regardless of what the other agents report.",
                "If it is optimal only given that the other agents are truthful, and given that one does not know the other agents types, we have implementation in Bayes-Nash equilibrium.",
                "Definition 7.",
                "Given an automated mechanism design setting, a mechanism is said to implement its outcome and payment functions in Bayes-Nash equilibrium if truthtelling is always optimal to an agent when that agent does not yet know anything about the other agents types, and the other agents are telling the truth.",
                "Formally, for any agent i, any type θi ∈ Θi, and any alternative type report ˆθi ∈ Θi, in the case of deterministic mechanisms we have E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, . . . , θi, . . . , θN ))− πi(θ1, . . . , θi, . . . , θN )] ≥ E(θ1,..,θi−1,θi+1,..,θN )|θi [ui(θi, o(θ1, . . . , ˆθi, . . . , θN ))− πi(θ1, . . . , ˆθi, . . . , θN )].",
                "In the case of randomized mechanisms we have E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,..,θi,..,θn [ui(θi, o)− πi(θ1, . . . , θi, . . . , θN )] ≥ E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,.., ˆθi,..,θn [ui(θi, o)− πi(θ1, . . . , ˆθi, . . . , θN )].",
                "The terms involving payments can be left out in the case where payments are not possible. 135 3.3 Automated mechanism design We can now define the computational problem we study.",
                "Definition 8. (AUTOMATED-MECHANISM-DESIGN (AMD)) We are given: • an automated mechanism design setting, • an IR notion (ex interim, ex post, or none), • a solution concept (dominant strategies or Bayes-Nash), • whether payments are possible, • whether randomization is possible, • (in the decision variant of the problem) a target value G. We are asked whether there exists a mechanism of the specified kind (in terms of payments and randomization) that satisfies both the IR notion and the solution concept, and gives an expected value of at least G for the objective.",
                "An interesting special case is the setting where there is only one agent.",
                "In this case, the reporting agent always knows everything there is to know about the other agents types-because there are no other agents.",
                "Since ex post and ex interim IR only differ on what an agent is assumed to know about other agents types, the two IR concepts coincide here.",
                "Also, because implementation in dominant strategies and implementation in Bayes-Nash equilibrium only differ on what an agent is assumed to know about other agents types, the two solution concepts coincide here.",
                "This observation will prove to be a useful tool in proving hardness results: if we prove computational hardness in the singleagent setting, this immediately implies hardness for both IR concepts, for both solution concepts, for any number of agents. 4.",
                "PAYMENT-MAXIMIZINGDETERMINISTIC AMD IS HARD In this section we demonstrate that it is NP-complete to design a deterministic mechanism that maximizes the expected sum of the payments collected from the agents.",
                "We show that this problem is hard even in the single-agent setting, thereby immediately showing it hard for both IR concepts, for both solution concepts.",
                "To demonstrate NPhardness, we reduce from the MINSAT problem.",
                "Definition 9 (MINSAT).",
                "We are given a formula φ in conjunctive normal form, represented by a set of Boolean variables V and a set of clauses C, and an integer K (K < |C|).",
                "We are asked whether there exists an assignment to the variables in V such that at most K clauses in φ are satisfied.",
                "MINSAT was recently shown to be NP-complete [14].",
                "We can now present our result.",
                "Theorem 1.",
                "Payment-maximizing deterministic AMD is NP-complete, even for a single agent, even with a uniform distribution over types.",
                "Proof.",
                "It is easy to show that the problem is in NP.",
                "To show NP-hardness, we reduce an arbitrary MINSAT instance to the following single-agent payment-maximizing deterministic AMD instance.",
                "Let the agents type set be Θ = {θc : c ∈ C} ∪ {θv : v ∈ V }, where C is the set of clauses in the MINSAT instance, and V is the set of variables.",
                "Let the probability distribution over these types be uniform.",
                "Let the outcome set be O = {o0} ∪ {oc : c ∈ C} ∪ {ol : l ∈ L}, where L is the set of literals, that is, L = {+v : v ∈ V } ∪ {−v : v ∈ V }.",
                "Let the notation v(l) = v denote that v is the variable corresponding to the literal l, that is, l ∈ {+v, −v}.",
                "Let l ∈ c denote that the literal l occurs in clause c. Then, let the agents utility function be given by u(θc, ol) = |Θ| + 1 for all l ∈ L with l ∈ c; u(θc, ol) = 0 for all l ∈ L with l /∈ c; u(θc, oc) = |Θ| + 1; u(θc, oc ) = 0 for all c ∈ C with c = c ; u(θv, ol) = |Θ| for all l ∈ L with v(l) = v; u(θv, ol) = 0 for all l ∈ L with v(l) = v; u(θv, oc) = 0 for all c ∈ C. The goal of the AMD instance is G = |Θ| + |C|−K |Θ| , where K is the goal of the MINSAT instance.",
                "We show the instances are equivalent.",
                "First, suppose there is a solution to the MINSAT instance.",
                "Let the assignment of truth values to the variables in this solution be given by the function f : V → L (where v(f(v)) = v for all v ∈ V ).",
                "Then, for every v ∈ V , let o(θv) = of(v) and π(θv) = |Θ|.",
                "For every c ∈ C, let o(θc) = oc; let π(θc) = |Θ| + 1 if c is not satisfied in the MINSAT solution, and π(θc) = |Θ| if c is satisfied.",
                "It is straightforward to check that the IR constraint is satisfied.",
                "We now check that the agent has no incentive to misreport.",
                "If the agents type is some θv, then any other report will give it an outcome that is no better, for a payment that is no less, so it has no incentive to misreport.",
                "If the agents type is some θc where c is a satisfied clause, again, any other report will give it an outcome that is no better, for a payment that is no less, so it has no incentive to misreport.",
                "The final case to check is where the agents type is some θc where c is an unsatisfied clause.",
                "In this case, we observe that for none of the types, reporting it leads to an outcome ol for a literal l ∈ c, precisely because the clause is not satisfied in the MINSAT instance.",
                "Because also, no type besides θc leads to the outcome oc, reporting any other type will give an outcome with utility 0, while still forcing a payment of at least |Θ| from the agent.",
                "Clearly the agent is better off reporting truthfully, for a total utility of 0.",
                "This establishes that the agent never has an incentive to misreport.",
                "Finally, we show that the goal is reached.",
                "If s is the number of satisfied clauses in the MINSAT solution (so that s ≤ K), the expected payment from this mechanism is |V ||Θ|+s|Θ|+(|C|−s)(|Θ|+1) |Θ| ≥ |V ||Θ|+K|Θ|+(|C|−K)(|Θ|+1) |Θ| = |Θ| + |C|−K |Θ| = G. So there is a solution to the AMD instance.",
                "Now suppose there is a solution to the AMD instance, given by an outcome function o and a payment function π.",
                "First, suppose there is some v ∈ V such that o(θv) /∈ {o+v, o−v}.",
                "Then the utility that the agent derives from the given outcome for this type is 0, and hence, by IR, no payment can be extracted from the agent for this type.",
                "Because, again by IR, the maximum payment that can be extracted for any other type is |Θ| + 1, it follows that the maximum expected payment that could be obtained is at most (|Θ|−1)(|Θ|+1) |Θ| < |Θ| < G, contradicting that this is a solution to the AMD instance.",
                "It follows that in the solution to the AMD instance, for every v ∈ V , o(θv) ∈ {o+v, o−v}. 136 We can interpret this as an assignment of truth values to the variables: v is set to true if o(θv) = o+v, and to false if o(θv) = o−v.",
                "We claim this assignment is a solution to the MINSAT instance.",
                "By the IR constraint, the maximum payment we can extract from any type θv is |Θ|.",
                "Because there can be no incentives for the agent to report falsely, for any clause c satisfied by the given assignment, the maximum payment we can extract for the corresponding type θc is |Θ|. (For if we extracted more from this type, the agents utility in this case would be less than 1; and if v is the variable satisfying c in the assignment, so that o(θv) = ol where l occurs in c, then the agent would be better off reporting θv instead of the truthful report θc, to get an outcome worth |Θ|+1 to it while having to pay at most |Θ|.)",
                "Finally, for any unsatisfied clause c, by the IR constraint, the maximum payment we can extract for the corresponding type θc is |Θ| + 1.",
                "It follows that the expected payment from our mechanism is at most V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ , where s is the number of satisfied clauses.",
                "Because our mechanism achieves the goal, it follows that V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ ≥ G, which by simple algebraic manipulations is equivalent to s ≤ K. So there is a solution to the MINSAT instance.",
                "Because payment-maximizing AMD is just the special case of AMD for a self-interested designer where the designer has no preferences over the outcome chosen, this immediately implies hardness for the general case of AMD for a selfinterested designer where payments are possible.",
                "However, it does not yet imply hardness for the special case where payments are not possible.",
                "We will prove hardness in this case in the next section. 5.",
                "SELF-INTERESTED DETERMINISTIC AMD WITHOUT PAYMENTS IS HARD In this section we demonstrate that it is NP-complete to design a deterministic mechanism that maximizes the expectation of the designers objective when payments are not possible.",
                "We show that this problem is hard even in the single-agent setting, thereby immediately showing it hard for both IR concepts, for both solution concepts.",
                "Theorem 2.",
                "Without payments, deterministic AMD for a self-interested designer is NP-complete, even for a single agent, even with a uniform distribution over types.",
                "Proof.",
                "It is easy to show that the problem is in NP.",
                "To show NP-hardness, we reduce an arbitrary MINSAT instance to the following single-agent self-interested deterministic AMD without payments instance.",
                "Let the agents type set be Θ = {θc : c ∈ C} ∪ {θv : v ∈ V }, where C is the set of clauses in the MINSAT instance, and V is the set of variables.",
                "Let the probability distribution over these types be uniform.",
                "Let the outcome set be O = {o0} ∪ {oc : c ∈ C}∪{ol : l ∈ L}∪{o∗ }, where L is the set of literals, that is, L = {+v : v ∈ V } ∪ {−v : v ∈ V }.",
                "Let the notation v(l) = v denote that v is the variable corresponding to the literal l, that is, l ∈ {+v, −v}.",
                "Let l ∈ c denote that the literal l occurs in clause c. Then, let the agents utility function be given by u(θc, ol) = 2 for all l ∈ L with l ∈ c; u(θc, ol) = −1 for all l ∈ L with l /∈ c; u(θc, oc) = 2; u(θc, oc ) = −1 for all c ∈ C with c = c ; u(θc, o∗ ) = 1; u(θv, ol) = 1 for all l ∈ L with v(l) = v; u(θv, ol) = −1 for all l ∈ L with v(l) = v; u(θv, oc) = −1 for all c ∈ C; u(θv, o∗ ) = −1.",
                "Let the designers objective function be given by g(o∗ ) = |Θ|+1; g(ol) = |Θ| for all l ∈ L; g(oc) = |Θ| for all c ∈ C. The goal of the AMD instance is G = |Θ| + |C|−K |Θ| , where K is the goal of the MINSAT instance.",
                "We show the instances are equivalent.",
                "First, suppose there is a solution to the MINSAT instance.",
                "Let the assignment of truth values to the variables in this solution be given by the function f : V → L (where v(f(v)) = v for all v ∈ V ).",
                "Then, for every v ∈ V , let o(θv) = of(v).",
                "For every c ∈ C that is satisfied in the MINSAT solution, let o(θc) = oc; for every unsatisfied c ∈ C, let o(θc) = o∗ .",
                "It is straightforward to check that the IR constraint is satisfied.",
                "We now check that the agent has no incentive to misreport.",
                "If the agents type is some θv, it is getting the maximum utility for that type, so it has no incentive to misreport.",
                "If the agents type is some θc where c is a satisfied clause, again, it is getting the maximum utility for that type, so it has no incentive to misreport.",
                "The final case to check is where the agents type is some θc where c is an unsatisfied clause.",
                "In this case, we observe that for none of the types, reporting it leads to an outcome ol for a literal l ∈ c, precisely because the clause is not satisfied in the MINSAT instance.",
                "Because also, no type leads to the outcome oc, there is no outcome that the mechanism ever selects that would give the agent utility greater than 1 for type θc, and hence the agent has no incentive to report falsely.",
                "This establishes that the agent never has an incentive to misreport.",
                "Finally, we show that the goal is reached.",
                "If s is the number of satisfied clauses in the MINSAT solution (so that s ≤ K), then the expected value of the designers objective function is |V ||Θ|+s|Θ|+(|C|−s)(|Θ|+1) |Θ| ≥ |V ||Θ|+K|Θ|+(|C|−K)(|Θ|+1) |Θ| = |Θ| + |C|−K |Θ| = G. So there is a solution to the AMD instance.",
                "Now suppose there is a solution to the AMD instance, given by an outcome function o.",
                "First, suppose there is some v ∈ V such that o(θv) /∈ {o+v, o−v}.",
                "The only other outcome that the mechanism is allowed to choose under the IR constraint is o0.",
                "This has an objective value of 0, and because the highest value the objective function ever takes is |Θ| + 1, it follows that the maximum expected value of the objective function that could be obtained is at most (|Θ|−1)(|Θ|+1) |Θ| < |Θ| < G, contradicting that this is a solution to the AMD instance.",
                "It follows that in the solution to the AMD instance, for every v ∈ V , o(θv) ∈ {o+v, o−v}.",
                "We can interpret this as an assignment of truth values to the variables: v is set to true if o(θv) = o+v, and to false if o(θv) = o−v.",
                "We claim this assignment is a solution to the MINSAT instance.",
                "By the above, for any type θv, the value of the objective function in this mechanism will be |Θ|.",
                "For any clause c satisfied by the given assignment, the value of the objective function in the case where the agent reports type θc will be at most |Θ|. (This is because we cannot choose the outcome o∗ for such a type, as in this case the agent would have an incentive to report θv instead, where v is the variable satisfying c in the assignment (so that o(θv) = ol where l occurs in c).)",
                "Finally, for any unsatisfied clause c, the maximum value the objective function can take in the case where the agent reports type θc is |Θ| + 1, simply because this is the largest value the function ever takes.",
                "It follows that the expected value of the objective function for our mechanism is at most V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ , where s is the number of satisfied 137 clauses.",
                "Because our mechanism achieves the goal, it follows that V |Θ|+s|Θ|+(|C|−s)(|Θ|+1) Θ ≥ G, which by simple algebraic manipulations is equivalent to s ≤ K. So there is a solution to the MINSAT instance.",
                "Both of our hardness results relied on the constraint that the mechanism should be deterministic.",
                "In the next section, we show that the hardness of design disappears when we allow for randomization in the mechanism. 6.",
                "RANDOMIZED AMD FOR A SELFINTERESTED DESIGNER IS EASY We now show how allowing for randomization over the outcomes makes the problem of self-interested AMD tractable through linear programming, for any constant number of agents.",
                "Theorem 3.",
                "Self-interested randomized AMD with a constant number of agents is solvable in polynomial time by linear programming, both with and without payments, both for ex post and ex interim IR, and both for implementation in dominant strategies and for implementation in Bayes-Nash equilibrium-even if the types are correlated.",
                "Proof.",
                "Because linear programs can be solved in polynomial time [13], all we need to show is that the number of variables and equations in our program is polynomial for any constant number of agents-that is, exponential only in N. Throughout, for purposes of determining the size of the linear program, let T = maxi{|Θi|}.",
                "The variables of our linear program will be the probabilities (p(θ1, θ2, . . . , θN ))(o) (at most TN |O| variables) and the payments πi(θ1, θ2, . . . , θN ) (at most NTN variables). (We show the linear program for the case where payments are possible; the case without payments is easily obtained from this by simply omitting all the payment variables in the program, or by adding additional constraints forcing the payments to be 0.)",
                "First, we show the IR constraints.",
                "For ex post IR, we add the following (at most NTN ) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, and for every (θ1, θ2, . . . , θN ) ∈ Θ1 × Θ2 × . . . × ΘN , we add ( o∈O (p(θ1, θ2, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , θN ) ≥ 0.",
                "For ex interim IR, we add the following (at most NT) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, for every θi ∈ Θi, we add θ1,... ,θN γ(θ1, . . . , θN |θi)(( o∈O (p(θ1, θ2, . . . , θN ))(o)u(θi, o))− πi(θ1, θ2, . . . , θN )) ≥ 0.",
                "Now, we show the solution concept constraints.",
                "For implementation in dominant strategies, we add the following (at most NTN+1 ) constraints to the LP: • For every i ∈ {1, 2, . . . , N}, for every (θ1, θ2, . . . , θi, . . . , θN ) ∈ Θ1 × Θ2 × . . . × ΘN , and for every alternative type report ˆθi ∈ Θi, we add the constraint ( o∈O (p(θ1, θ2, . . . , θi, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , θi, . . . , θN ) ≥ ( o∈O (p(θ1, θ2, . . . , ˆθi, . . . , θN ))(o)u(θi, o)) − πi(θ1, θ2, . . . , ˆθi, . . . , θN ).",
                "Finally, for implementation in Bayes-Nash equilibrium, we add the following (at most NT2 ) constraints to the LP: • For every i ∈ {1, 2, ..., N}, for every θi ∈ Θi, and for every alternative type report ˆθi ∈ Θi, we add the constraint θ1,...,θN γ(θ1, ..., θN |θi)(( o∈O (p(θ1, θ2, ..., θi, ..., θN ))(o)u(θi, o)) − πi(θ1, θ2, ..., θi, ..., θN )) ≥ θ1,...,θN γ(θ1, ..., θN |θi)(( o∈O (p(θ1, θ2, ..., ˆθi, ..., θN ))(o)u(θi, o)) − πi(θ1, θ2, ..., ˆθi, ..., θN )).",
                "All that is left to do is to give the expression the designer is seeking to maximize, which is: • θ1,...,θN γ(θ1, ..., θN )(( o∈O (p(θ1, θ2, ..., θi, ..., θN ))(o)g(o)) + N i=1 πi(θ1, θ2, ..., θN )).",
                "As we indicated, the number of variables and constraints is exponential only in N, and hence the linear program is of polynomial size for constant numbers of agents.",
                "Thus the problem is solvable in polynomial time. 7.",
                "IMPLICATIONS FOR AN OPTIMAL COMBINATORIAL AUCTION DESIGN PROBLEM In this section, we will demonstrate some interesting consequences of the problem of automated mechanism design for a self-interested designer on designing optimal combinatorial auctions.",
                "Consider a combinatorial auction with a set S of items for sale.",
                "For any bundle B ⊆ S, let ui(θi, B) be bidder is utility for receiving bundle B when the bidders type is θi.",
                "The optimal auction design problem is to specify the rules of the auction so as to maximize expected revenue to the auctioneer. (By the revelation principle, without loss of generality, we can assume the auction is truthful.)",
                "The optimal auction design problem is solved for the case of a single item by the famous Myerson auction [18].",
                "However, designing optimal auctions in combinatorial auctions is a recognized open research problem [3, 25].",
                "The problem is open even if there are only two items for sale. (The twoitem case with a very special form of complementarity and no substitutability has been solved recently [1].)",
                "Suppose we have free disposal-items can be thrown away at no cost.",
                "Also, suppose that the bidders preferences have the following structure: whenever a bidder receives a bundle of items, the bidders utility for that bundle is determined by the best item in the bundle only. (We emphasize that 138 which item is the best is allowed to depend on the bidders type.)",
                "Definition 10.",
                "Bidder i is said to have best-only preferences over bundles of items if there exists a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s).",
                "We make the following useful observation in this setting: there is no sense in awarding a bidder more than one item.",
                "The reason is that if the bidder is reporting truthfully, taking all but the highest valued item away from the bidder will not hurt the bidder; and, by free disposal, doing so can only reduce the incentive for this bidder to falsely report this type, when the bidder actually has another type.",
                "We now show that the problem of designing a deterministic optimal auction here is NP-complete, by a reduction from the payment maximizing AMD problem!",
                "Theorem 4.",
                "Given an optimal combinatorial auction design problem under best-only preferences (given by a set of items S and for each bidder i, a finite type space Θi and a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s)), designing the optimal deterministic auction is NP-complete, even for a single bidder with a uniform distribution over types.",
                "Proof.",
                "The problem is in NP because we can nondeterministically generate an allocation rule, and then set the payments using linear programming.",
                "To show NP-hardness, we reduce an arbitrary paymentmaximizing deterministic AMD instance, with a single agent and a uniform distribution over types, to the following optimal combinatorial auction design problem instance with a single bidder with best-only preferences.",
                "For every outcome o ∈ O in the AMD instance (besides the outcome o0), let there be one item so ∈ S. Let the type space be the same, and let v(θi, so) = ui(θi, o) (where u is as specified in the AMD instance).",
                "Let the expected revenue target value be the same in both instances.",
                "We show the instances are equivalent.",
                "First suppose there exists a solution to the AMD instance, given by an outcome function and a payment function.",
                "Then, if the AMD solution chooses outcome o for a type, in the optimal auction solution, allocate {so} to the bidder for this type. (Unless o = o0, in which case we allocate {} to the bidder.)",
                "Let the payment functions be the same in both instances.",
                "Then, the utility that an agent receives for reporting a type (given the true type) in either solution is the same, so we have incentive compatibility in the optimal auction solution.",
                "Moreover, because the type distribution and the payment function are the same, the expected revenue to the auctioneer/designer is the same.",
                "It follows that there exists a solution to the optimal auction design instance.",
                "Now suppose there exists a solution to the optimal auction design instance.",
                "By the at-most-one-item observation, we can assume without loss of generality that the solution never allocates more than one item.",
                "Then, if the optimal auction solution allocates item so to the bidder for a type, in the AMD solution, let the mechanism choose outcome o for that type.",
                "If the optimal auction solution allocates nothing to the bidder for a type, in the AMD solution, let the mechanism choose outcome o0 for that type.",
                "Let the payment functions be the same.",
                "Then, the utility that an agent receives for reporting a type (given the true type) in either solution is the same, so we have incentive compatibility in the AMD solution.",
                "Moreover, because the type distribution and the payment function are the same, the expected revenue to the designer/auctioneer is the same.",
                "It follows that there exists a solution to the AMD instance.",
                "Fortunately, we can also carry through the easiness result for randomized mechanisms to this combinatorial auction setting-giving us one of the few known polynomial-time algorithms for an optimal combinatorial auction design problem.",
                "Theorem 5.",
                "Given an optimal combinatorial auction design problem under best-only preferences (given by a set of items S and for each bidder i, a finite type space Θi and a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s)), if the number of bidders is a constant k, then the optimal randomized auction can be designed in polynomial time. (For any IC and IR constraints.)",
                "Proof.",
                "By the at-most-one-item observation, we can without loss of generality restrict ourselves to allocations where each bidder receives at most one item.",
                "There are fewer than (|S| + 1)k such allocations-that is, a polynomial number of allocations.",
                "Because we can list the outcomes explicitly, we can simply solve this as a payment-maximizing AMD instance, with linear programming. 8.",
                "RELATED RESEARCH ON COMPLEXITY IN MECHANISM DESIGN There has been considerable recent interest in mechanism design in computer science.",
                "Some of it has focused on issues of computational complexity, but most of that work has strived toward designing mechanisms that are easy to execute (e.g. [20, 15, 19, 9, 12]), rather than studying the complexity of designing the mechanism.",
                "The closest piece of earlier work studied the complexity of automated mechanism design by a benevolent designer [5, 6].",
                "Roughgarden has studied the complexity of designing a good network topology for agents that selfishly choose the links they use [21].",
                "This is related to mechanism design, but differs significantly in that the designer only has restricted control over the rules of the game because there is no party that can impose the outcome (or side payments).",
                "Also, there is no explicit reporting of preferences. 9.",
                "CONCLUSIONS AND FUTURE RESEARCH Often, an outcome must be chosen on the basis of the preferences reported by a group of agents.",
                "The key difficulty is that the agents may report their preferences insincerely to make the chosen outcome more favorable to themselves.",
                "Mechanism design is the art of designing the rules of the game so that the agents are motivated to report their preferences truthfully, and a desirable outcome is chosen.",
                "In a recently emerging approach-called automated mechanism design-a mechanism is computed for the specific preference aggregation setting at hand.",
                "This has several advantages, 139 but the downside is that the mechanism design optimization problem needs to be solved anew each time.",
                "Unlike earlier work on automated mechanism design that studied a benevolent designer, in this paper we studied automated mechanism design problems where the designer is self-interesteda setting much more relevant for electronic commerce.",
                "In this setting, the center cares only about which outcome is chosen and what payments are made to it.",
                "The reason that the agents preferences are relevant is that the center is constrained to making each agent at least as well off as the agent would have been had it not participated in the mechanism.",
                "In this setting, we showed that designing an optimal deterministic mechanism is NP-complete in two important special cases: when the center is interested only in the payments made to it, and when payments are not possible and the center is interested only in the outcome chosen.",
                "These hardness results imply hardness in all more general automated mechanism design settings with a self-interested designer.",
                "The hardness results apply whether the individual rationality (participation) constraints are applied ex interim or ex post, and whether the solution concept is dominant strategies implementation or Bayes-Nash equilibrium implementation.",
                "We then showed that allowing randomization in the mechanism makes the design problem in all these settings computationally easy.",
                "Finally, we showed that the paymentmaximizing AMD problem is closely related to an interesting variant of the optimal (revenue-maximizing) combinatorial auction design problem, where the bidders have best-only preferences.",
                "We showed that here, too, designing an optimal deterministic mechanism is NP-complete even with one agent, but designing an optimal randomized mechanism is easy.",
                "Future research includes studying automated mechanism design with a self-interested designer in more restricted settings such as auctions (where the designers objective may include preferences about which bidder should receive the good-as well as payments).",
                "We also want to study the complexity of automated mechanism design in settings where the outcome and type spaces have special structure so they can be represented more concisely.",
                "Finally, we plan to assemble a data set of real-world mechanism design problems-both historical and current-and apply automated mechanism design to those problems. 10.",
                "REFERENCES [1] M. Armstrong.",
                "Optimal multi-object auctions.",
                "Review of Economic Studies, 67:455-481, 2000. [2] K. Arrow.",
                "The property rights doctrine and demand revelation under incomplete information.",
                "In M. Boskin, editor, Economics and human welfare.",
                "New York Academic Press, 1979. [3] C. Avery and T. Hendershott.",
                "Bundling and optimal auctions of multiple products.",
                "Review of Economic Studies, 67:483-497, 2000. [4] E. H. Clarke.",
                "Multipart pricing of public goods.",
                "Public Choice, 11:17-33, 1971. [5] V. Conitzer and T. Sandholm.",
                "Complexity of mechanism design.",
                "In Proceedings of the 18th Annual Conference on Uncertainty in Artificial Intelligence (UAI-02), pages 103-110, Edmonton, Canada, 2002. [6] V. Conitzer and T. Sandholm.",
                "Automated mechanism design: Complexity results stemming from the single-agent setting.",
                "In Proceedings of the 5th International Conference on Electronic Commerce (ICEC-03), pages 17-24, Pittsburgh, PA, USA, 2003. [7] V. Conitzer and T. Sandholm.",
                "Computational criticisms of the revelation principle.",
                "In Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), New York, NY, 2004.",
                "Short paper.",
                "Full-length version appeared in the AAMAS-03 workshop on Agent-Mediated Electronic Commerce (AMEC). [8] C. dAspremont and L. A. G´erard-Varet.",
                "Incentives and incomplete information.",
                "Journal of Public Economics, 11:25-45, 1979. [9] J. Feigenbaum, C. Papadimitriou, and S. Shenker.",
                "Sharing the cost of muliticast transmissions.",
                "Journal of Computer and System Sciences, 63:21-41, 2001.",
                "Early version in Proceedings of the Annual ACM Symposium on Theory of Computing (STOC), 2000. [10] A. Gibbard.",
                "Manipulation of voting schemes.",
                "Econometrica, 41:587-602, 1973. [11] T. Groves.",
                "Incentives in teams.",
                "Econometrica, 41:617-631, 1973. [12] J. Hershberger and S. Suri.",
                "Vickrey prices and shortest paths: What is an edge worth?",
                "In Proceedings of the Annual Symposium on Foundations of Computer Science (FOCS), 2001. [13] L. Khachiyan.",
                "A polynomial algorithm in linear programming.",
                "Soviet Math.",
                "Doklady, 20:191-194, 1979. [14] R. Kohli, R. Krishnamurthi, and P. Mirchandani.",
                "The minimum satisfiability problem.",
                "SIAM Journal of Discrete Mathematics, 7(2):275-283, 1994. [15] D. Lehmann, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in rapid, approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002.",
                "Early version appeared in Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), 1999. [16] A. Mas-Colell, M. Whinston, and J. R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [17] E. S. Maskin and J. Riley.",
                "Optimal multi-unit auctions.",
                "In F. Hahn, editor, The Economics of Missing Markets, Information, and Games, chapter 14, pages 312-335.",
                "Clarendon Press, Oxford, 1989. [18] R. Myerson.",
                "Optimal auction design.",
                "Mathematics of Operation Research, 6:58-73, 1981. [19] N. Nisan and A. Ronen.",
                "Computationally feasible VCG mechanisms.",
                "In Proceedings of the ACM Conference on Electronic Commerce (ACM-EC), pages 242-252, Minneapolis, MN, 2000. [20] N. Nisan and A. Ronen.",
                "Algorithmic mechanism design.",
                "Games and Economic Behavior, 35:166-196, 2001.",
                "Early version in Proceedings of the Annual ACM Symposium on Theory of Computing (STOC), 1999. [21] T. Roughgarden.",
                "Designing networks for selfish users is hard.",
                "In Proceedings of the Annual Symposium on Foundations of Computer Science (FOCS), 2001. [22] T. Sandholm.",
                "Issues in computational Vickrey auctions.",
                "International Journal of Electronic Commerce, 4(3):107-129, 2000.",
                "Special Issue on 140 Applying Intelligent Agents for Electronic Commerce.",
                "A short, early version appeared at the Second International Conference on Multi-Agent Systems (ICMAS), pages 299-306, 1996. [23] M. A. Satterthwaite.",
                "Strategy-proofness and Arrows conditions: existence and correspondence theorems for voting procedures and social welfare functions.",
                "Journal of Economic Theory, 10:187-217, 1975. [24] W. Vickrey.",
                "Counterspeculation, auctions, and competitive sealed tenders.",
                "Journal of Finance, 16:8-37, 1961. [25] R. V. Vohra.",
                "Research problems in combinatorial auctions.",
                "Mimeo, version Oct. 29, 2001. 141"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        }
    }
}