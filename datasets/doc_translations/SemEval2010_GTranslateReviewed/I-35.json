{
    "id": "I-35",
    "original_text": "Distributed Norm Management in Regulated Multi-Agent Systems âˆ— Dorian Gaertner Dept. of Computing, Imperial College London, London SW7 2AZ, United Kingdom dg00@doc.ic.ac.uk Andres Garcia-Camino, Pablo Noriega, J.-A. Rodriguez-Aguilar IIIA-CSIC, 08193 Bellaterra, Spain {andres,pablo,jar}@iiia.csic.es Wamberto Vasconcelos Dept. of Computing Science, University of Aberdeen, Aberdeen AB24 3UE, United Kingdom wvasconcelos@acm.org ABSTRACT Norms are widely recognised as a means of coordinating multi-agent systems. The distributed management of norms is a challenging issue and we observe a lack of truly distributed computational realisations of normative models. In order to regulate the behaviour of autonomous agents that take part in multiple, related activities, we propose a normative model, the Normative Structure (NS), an artifact that is based on the propagation of normative positions (obligations, prohibitions, permissions), as consequences of agents actions. Within a NS, conflicts may arise due to the dynamic nature of the MAS and the concurrency of agents actions. However, ensuring conflict-freedom of a NS at design time is computationally intractable. We show this by formalising the notion of conflict, providing a mapping of NSs into Coloured Petri Nets and borrowing well-known theoretical results from that field. Since online conflict resolution is required, we present a tractable algorithm to be employed distributedly. We then demonstrate that this algorithm is paramount for the distributed enactment of a NS. Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Languages and structures General Terms Algorithms, Design, Theory 1. INTRODUCTION A fundamental feature of open, regulated multi-agent systems in which autonomous agents interact, is that participating agents are meant to comply with the conventions of the system. Norms can be used to model such conventions and hence as a means to regulate the observable behaviour of agents [6, 29]. There are many contributions on the subject of norms from sociologists, philosophers and logicians (e.g., [15, 28]). However, there are very few proposals for computational realisations of normative models - the way norms can be integrated in the design and execution of MASs. The few that exist (e.g. [10, 13, 24]), operate in a centralised manner which creates bottlenecks and single points-of-failure. To our knowledge, no proposal truly supports the distributed enactment of normative environments. In our paper we approach that problem and propose means to handle conflicting commitments in open, regulated, multiagent systems in a distributed manner. The type of regulated MAS we envisage consists of multiple, concurrent, related activities where agents interact. Each agent may concurrently participate in several activities, and change from one activity to another. An agents actions within an activity may have consequences in the form of normative positions (i.e. obligations, permissions, and prohibitions) [26] that may constrain its future behaviour. For instance, a buyer agent who runs out of credit may be forbidden to make further offers, or a seller agent is obliged to deliver after closing a deal. We assume that agents may choose not to fulfill all their obligations and hence may be sanctioned by the MAS. Notice that, when activities are distributed, normative positions must flow from the activities in which they are generated to those in which they take effect. For instance, the sellers obligation above must flow (or be propagated) from a negotiation activity to a delivery activity. Since in an open, regulated MAS one cannot embed normative aspects into the agents design, we adopt the view that the MAS should be supplemented with a separate set of norms that further regulates the behaviour of participating agents. In order to model the separation of concerns between the coordination level (agents interactions) and the normative level (propagation of normative positions), we propose an artifact called the Normative Structure (NS). Within a NS conflicts may arise due to the dynamic nature of the MAS and the concurrency of agents actions. For instance, an agent may be obliged and prohibited to do the 636 978-81-904262-7-5 (RPS) c 2007 IFAAMAS very same action in an activity. Since the regulation of a MAS entails that participating agents need to be aware of the validity of those actions that take place within it, such conflicts ought to be identified and possibly resolved if a claim of validity is needed for an agent to engage in an action or be sanctioned. However, ensuring conflict-freedom of a NS at design time is computationally intractable. We show this by formalising the notion of conflict, providing a mapping of NSs into Coloured Petri Nets (CPNs) and borrowing well-known theoretical results from the field of CPNs. We believe that online conflict detection and resolution is required. Hence, we present a tractable algorithm for conflict resolution. This algorithm is paramount for the distributed enactment of a NS. The paper is organised as follows. In Section 2 we detail a scenario to serve as an example throughout the paper. Next, in Section 3 we formally define the normative structure artifact. Further on, in Section 4 we formalise the notion of conflict to subsequently analyse the complexity of conflict detection in terms of CPNs in Section 5. Section 6 describes the computational management of NSs by describing their enactment and presenting an algorithm for conflict resolution. Finally, we comment on related work, draw conclusions and report on future work in Section 7. 2. SCENARIO We use a supply-chain scenario in which companies and individuals come together at an online marketplace to conduct business. The overall transaction procedure may be organised as six distributed activities, represented as nodes in the diagram in Figure 1. They involve different participants whose behaviour is coordinated through protocols. In this scenario agents can play one of four roles: marExit Registration Payment Delivery Negotiation Coordination Model Contract Figure 1: Activity Structure of the Scenario ketplace accountant (acc), client, supplier (supp) and warehouse managers (wm). The arrows connecting the activities represent how agents can move from one activity to another. After registering at the marketplace, clients and suppliers get together in an activity where they negotiate the terms of their transaction, i.e. prices, amounts of goods to be delivered, deadlines and other details. In the contract activity, the order becomes established and an invoice is prepared. The client will then participate in a payment activity, verifying his credit-worthiness and instructing his bank to transfer the correct amount of money. The supplier in the meantime will arrange for the goods to be delivered (e.g. via a warehouse manager) in the delivery activity. Finally, agents can leave the marketplace conforming to a predetermined exit protocol. The marketplace accountant participates in most of the activities as a trusted provider of auditing tools. In the rest of the paper we shall build on this scenario to exemplify the notion of normative structure and to illustrate our approach to conflict detection and resolution in a distributed setting. 3. NORMATIVE STRUCTURE In MASs agents interact according to protocols which naturally are distributed. We advocate that actions in one such protocol may have an effect on the enactment of other protocols. Certain actions can become prohibited or obligatory, for example. We take normative positions to be obligations, prohibitions and permissions akin to work described in [26]. The intention of adding or removing a normative position we call normative command. Occurrences of normative positions in one protocol may also have consequences for other protocols1 . In order to define our norm language and specify how normative positions are propagated, we have been inspired by multi-context systems [14]. These systems allow the structuring of knowledge into distinct formal theories and the definition of relationships between them. The relationships are expressed as bridge rules - deducibility of formulae in some contexts leads to the deduction of other formulae in other contexts. Recently, these systems have been successfully used to define agent architectures [11, 23]. The metaphor translates to our current work as follows: the utterance of illocutions and/or the existence of normative positions in some normative scenes leads to the deduction of normative positions in other normative scenes. We are concerned with the propagation and distribution of normative positions within a network of distributed, normative scenes as a consequence of agents actions. We take normative scenes to be sets of normative positions and utterances that are associated with an underlying interaction protocol corresponding to an activity. In this section, we first present a simple language capturing these aspects and formally introduce the notions of normative scene, normative transition rule and normative structure. We give the intended semantics of these rules and show how to control a MAS via norms in an example. 3.1 Basic Concepts The building blocks of our language are terms and atomic formulae: Def. 1. A term, denoted as t, is (i) any constant expressed using lowercase (with or without subscripts), e.g. a, b0, c or (ii) any variable expressed using uppercase (with or without subscripts), e.g. X, Y, Zb or (iii) any function f(t1, . . . , tn), where f is an n-ary function symbol and t1, .., tn are terms. Some examples of terms and functions are Credit, price or offer(bible, 30) being respectively a variable, a constant and a function. We will be making use of identifiers throughout the paper, which are constant terms and also need the following definition: Def. 2. An atomic formula is any construct p(t1, . . . , tn), where p is an n-ary predicate symbol and t1, . . . , tn are terms. The set of all atomic formulae is denoted as Î”. We focus on an expressive class of MASs in which interaction is carried out by means of illocutionary speech acts exchanged among participating agents: Def. 3. Illocutions I are ground atomic formulae which have the form p(ag, r, ag , r , Î´, t) where p is an element of 1 Here, we abstract from protocols and refer to them generically as activities. The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 637 a set of illocutionary particles (e.g. inform, request, offer); ag, ag are agent identifiers; r, r are role identifiers; Î´, an arbitrary ground term, is the content of the message, built from a shared content language; t âˆˆ N is a time stamp. The intuitive meaning of p(ag, r, ag , r , m, t) is that agent ag playing role r sent message m to agent ag playing role r at time t. An example of an illocution is inform(ag4, supp, ag3, client, offer(wire, 12), 10). Sometimes it is useful to refer to illocutions that are not fully grounded, that is, those that may contain uninstantiated (free) variables. In the description of a protocol, for instance, the precise values of the message exchanged can be left unspecified. During the enactment of the protocol agents will produce the actual values which will give rise to a ground illocution. We can thus define illocution schemata: Def. 4. An illocution schema Â¯I is any atomic formula p(ag, r, ag , r , Î´, t) in which some of the terms may either be variables or may contain variables. 3.2 Formal Definition of the Notion of NS We first define normative scenes as follows: Def. 5. A normative scene is a tuple s = ids, Î”s where ids is a scene identifier and Î”s is the set of atomic formulae Î´ (i.e. utterances and normative positions) that hold in s. We will also refer to Î”s as the state of normative scene s. For instance, a snapshot of the state of the delivery normative scene of our scenario could be represented as: Î”s = 8 < : utt(request(sean, client, kev, wm, receive(wire, 200), 20)), utt(accept(kev, wm, sean, client, receive(wire, 200), 30)), obl(inform(kev, wm, sean, client, delivered(wire, 200), 30)) 9 = ; That is, agent Sean taking up the client role has requested agent Kev (taking up the warehouse manager role wm) to receive 200kg of wire, and agent Kev is obliged to deliver 200kg of wire to Sean since he accepted the request. Note that the state of a normative scene Î”s evolves over time. These normative scenes are connected to one another via normative transitions that specify how utterances and normative positions in one scene affect other normative scenes. As mentioned above, activities are not independent since illocutions uttered in some of them may have an effect on other ones. Normative transition rules define the conditions under which a normative command is generated. These conditions are either utterances or normative positions associated with a given protocol (denoted e.g. activity : utterance) which yield a normative command, i.e. the addition or removal of another normative position, possibly related to a different activity. Our transition rules are thus defined: Def. 6. A normative transition rule R is of the form: R ::= V C V ::= ids : D | V, V D ::= N | utt(Â¯I) N ::= per(Â¯I) | prh(Â¯I) | obl(Â¯I) C ::= add(ids : N) | remove(ids : N) where Â¯I is an illocution schema, N is a normative position (i.e. permission, prohibition or obligation), ids is an identifier for activity s and C is a normative command. We endow our language with the usual semantics of rulebased languages [19]. Rules map an existing normative structure to a new normative structure where only the state of the normative scenes change. In the definitions below we rely on the standard concept of substitution [9]. Def. 7. A normative transition is a tuple b = idb, rb where idb is an identifier and rb is a normative transition rule. We are proposing to extend the notion of MAS, regulated by protocols, with an extra layer consisting of normative scenes and normative transitions. This layer is represented as a bi-partite graph that we term normative structure. A normative structure relates normative scenes and normative transitions specifying which normative positions are to be generated or removed in which normative scenes. Def. 8. A normative structure is a labelled bi-partite graph NS = Nodes, Edges, Lin , Lout . Nodes is a set SâˆªB where S is a set of normative scenes and B is a set of normative transitions. Edges is a set Ain âˆª Aout where Ain âŠ† S Ã— B is a set of input arcs labelled with an atomic formula using the labelling function Lin : Ain â†’ D; and Aout âŠ† B Ã— S is a set of output arcs labelled with a normative position using the labelling function Lout : Aout â†’ N. The following must hold: 1. Each atomic formula appearing in the LHS of a rule rb must be of the form (ids : D) where s âˆˆ S and D âˆˆ Î” and âˆƒain âˆˆ Ain such that ain = (s, b) and Lin (ain ) = D. 2. The atomic formula appearing in the RHS of a rule rb must be of the form add(ids : N) or remove(ids : N) where s âˆˆ S and âˆƒaout âˆˆ Aout such that aout = (b, s) and Lout (aout ) = N. 3. âˆ€a âˆˆ Ain such that a = (s, b) and b = idb, rb and Lin (a) = D then (ids:D) must occur in the LHS of rb. 4. âˆ€a âˆˆ Aout such that a = (b, s) and b = idb, rb and Lout (a) = N then add(ids : N) or remove(ids : N) must occur in the RHS of rb. The first two points ensure that every atomic formulae on the LHS of a normative transition rule labels an arc entering the appropriate normative transition in the normative structure, and that the atomic formula on the RHS labels the corresponding outgoing arc. Points three and four ensure that labels from all incoming arcs are used in the LHS of the normative transition rule that these arcs enter into, and that the labels from all outgoing arcs are used in the RHS of the normative transition rule that these arcs leave. 3.3 Intended Semantics The formal semantics will be defined via a mapping to Coloured Petri Nets in Section 5.1. Here we start defining the intended semantics of normative transition rules by describing how a rule changes a normative scene of an existing normative structure yielding a new normative structure. Each rule is triggered once for each substitution that unifies the left-hand side V of the rule with the state of the corresponding normative scenes. An atomic formula (i.e. an utterance or a normative position) holds iff it is unifiable with an utterance or normative position that belongs to the state of the corresponding normative scene. Every time a rule is triggered, the normative command specified on the right-hand side of that rule is carried out, intending to add or remove a normative position from the state of the corresponding normative scene. However, addition is not unconditional as conflicts may arise. This topic will be treated in Sections 4 and 6.1. 638 The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.4 Example In our running example we have the following exemplary normative transition rule: â€ž payment : obl(inform(X, client, Y, acc, pay(Z, P, Q), T )), payment : utt(inform(X, client, Y, acc, pay(Z, P, Q), T )) Â« delivery : add(obl(inform(Y, wm, X, client, delivered(Z, Q), T ))) That is, during the payment activity, an obligation on client X to inform accountant Y about the payment P of item Z at time T and the corresponding utterance which fulfills this obligation allows the flow of a norm to the delivery activity. The norm is an obligation on agent Y (this time taking up the role of the warehouse manager wm) to send a message to client X that item Z has been delivered. We show in Figure 2 a diagrammatic representation of how activities and a normative structure relate: Payment Delivery Contract Normative Level Exit Registration Payment Delivery Negotiation Coordination Level Contract nt Figure 2: Activities and Normative Structure As illocutions are uttered during activities, normative positions arise. Utterances and normative positions are combined in transition rules, causing the flow of normative positions between normative scenes. The connection between the two levels is described in Section 6.2. 4. CONFLICT DEFINITION The terms deontic conflict and deontic inconsistency have been used interchangeably in the literature. However, in this paper we adopt the view of [7] in which the authors suggest that a deontic inconsistency arises when an action is simultaneously permitted and prohibited - since a permission may not be acted upon, no real conflict occurs. The situations when an action is simultaneously obliged and prohibited are, however, deontic conflicts, as both obligations and prohibitions influence behaviours in a conflicting fashion. The content of normative positions in this paper are illocutions. Therefore, a normative conflict arises when an illocution is simultaneously obliged and prohibited. We propose to use the standard notion of unification [9] to detect when a prohibition and a permission overlap. For instance, an obligation obl(inform(A1, R1, A2, R2, p(c, X), T)) and a prohibition prh(inform(a1, r1, a2, r2, p(Y, d), T )) are in conflict as they unify under Ïƒ = {A1/a1, R1/r1, A2/a2, R2/r2, Y/c, X/d, T/T }). We formally capture this notion: Def. 9. A (deontic) conflict arises between two normative positions N and N under a substitution Ïƒ, denoted as conflict(N, N , Ïƒ), if and only if N = prh(Â¯I), N = obl(Â¯I ) and unify(Â¯I,Â¯I , Ïƒ). That is, a prohibition and an obligation are in conflict if, and only if, their illocutions unify under Ïƒ. The substitution Ïƒ, called here the conflict set, unifies the agents, roles and atomic formulae. We assume that unify is a suitable implementation of a unification algorithm which i) always terminates (possibly failing, if a unifier cannot be found); ii) is correct; and iii) has linear computational complexity. Inconsistencies caused by the same illocution being simultaneously permitted and prohibited can be formalised similarly. In this paper we focus on prohibition/obligation conflicts, but the computational machinery introduced in Section 6.1 can equally be used to detect prohibition/permission inconsistencies, if we substitute modality obl for per. 5. FORMALISING CONFLICT-FREEDOM In this section we introduce some background knowledge on CPNs assuming a basic understanding of ordinary Petri Nets. For technical details we refer the reader to [16]. We then map NSs to CPNs and analyse their properties. CPNs combine the strength of Petri nets with the strength of functional programming languages. On the one hand, Petri nets provide the primitives for the description of the synchronisation of concurrent processes. As noticed in [16], CPNs have a semantics which builds upon true concurrency, instead of interleaving. In our opinion, a true-concurrency semantics is easier to work with because it is the way we envisage the connection between the coordination level and the normative level of a multi-agent system to be. On the other hand, the functional programming languages used by CPNs provide the primitives for the definition of data types and the manipulation of their data values. Thus, we can readily translate expressions of a normative structure. Last but not least, CPNs have a well-defined semantics which unambiguously defines the behaviour of each CPN. Furthermore, CPNs have a large number of formal analysis methods and tools by which properties of CPNs can be proved. Summing up, CPNs provide us with all the necessary features to formally reason about normative structures given that an adequate mapping is provided. In accordance with Petri nets, the states of a CPN are represented by means of places. But unlike Petri Nets, each place has an associated data type determining the kind of data which the place may contain. A state of a CPN is called a marking. It consists of a number of tokens positioned on the individual places. Each token carries a data value which has the type of the corresponding place. In general, a place may contain two or more tokens with the same data value. Thus, a marking of a CPN is a function which maps each place into a multi-set2 of tokens of the correct type. One often refers to the token values as token colours and one also refers to the data types as colour sets. The types of a CPN can be arbitrarily complex. Actions in a CPN are represented by means of transitions. An incoming arc into a transition from a place indicates that the transition may remove tokens from the corresponding place while an outgoing arc indicates that the transition may add tokens. The exact number of tokens and their data values are determined by the arc expressions, which are encoded using the programming language chosen for the CPN. A transition is enabled in a CPN if and only if all the 2 A multi-set (or bag) is an extension to the notion of set, allowing the possibility of multiple appearances of the same element. The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 639 variables in the expressions of its incoming arcs are bound to some value(s) (each one of these bindings is referred to as a binding element). If so, the transition may occur by removing tokens from its input places and adding tokens to its output places. In addition to the arc expressions, it is possible to attach a boolean guard expression (with variables) to each transition. Putting all the elements above together we obtain a formal definition of CPN that shall be employed further ahead for mapping purposes. Def. 10. A CPN is a tuple Î£, P, T, A, N, C, G, E, I where: (i) Î£ is a finite set of non-empty types, also called colour sets; (ii) P is a finite set of places; (iii) T is a finite set of transitions; (iv) A is a finite set of arcs; (v) N is a node function defined from A into P Ã— T âˆª T Ã— P; (vi) C is a colour function from P into Î£; (vii) G is a guard function from T into expressions; (viii) E is an arc expression function from A into expressions; (ix) I is an initialisation function from P into closed expressions; Notice that the informal explanation of the enabling and occurrence rules given above provides the foundations to understand the behaviour of a CPN. In accordance with ordinary Petri nets, the concurrent behaviour of a CPN is based on the notion of step. Formally, a step is a non-empty and finite multi-set over the set of all binding elements. Let step S be enabled in a marking M. Then, S may occur, changing the marking M to M . Moreover, we say that marking M is directly reachable from marking M by the occurrence of step S, and we denote it by M[S > M . A finite occurrence sequence is a finite sequence of steps and markings: M1[S1 > M2 . . . Mn[Sn > Mn+1 such that n âˆˆ N and Mi[Si > Mi+1 âˆ€i âˆˆ {1, . . . , n}. The set of all possible markings reachable for a net Net from a marking M is called its reachability set, and is denoted as R(Net, M). 5.1 Mapping to Coloured Petri Nets Our normative structure is a labelled bi-partite graph. The same is true for a Coloured Petri Net. We are presenting a mapping f from one to the other, in order to provide semantics for the normative structure and prove properties about it by using well-known theoretical results from work on CPNs. The mapping f makes use of correspondences between normative scenes and CPN places, normative transitions and CPN transitions and finally, between arc labels and CPN arc expressions. S â†’ P B â†’ T Lin âˆª Lout â†’ E The set of types is the singleton set containing the colour NP (i.e. Î£ = {NP}). This complex type is structured as follows (we use CPN-ML [4] syntax): color NPT = with Obl | Per | Prh | NoMod color IP = with inform | declare | offer color UTT = record illp : IP ag1, role1, ag2, role2 : string content: string time : int color NP = record mode : NPT illoc : UTT Modelling illocutions as norms without modality (NoMod) is a formal trick we use to ensure that sub-nets can be combined as explained below. Arcs are mapped almost directly. A is a finite set of arcs and N is a node function, such that âˆ€a âˆˆ A âˆƒa âˆˆ Ain âˆªAout . N(a) = a . The initialisation function I is defined as I(p) = Î”s (âˆ€s âˆˆ S where p is obtained from s using the mapping; remember that s = ids, Î”s ). Finally, the colour function C assigns the colour NP to every place: C(p) = NP (âˆ€p âˆˆ P). We are not making use of the guard function G. In future work, this function can be used to model constraints when we extend the expressiveness of our norm language. 5.2 Properties of Normative Structures Having defined the mapping from normative structures to Coloured Petri Nets, we now look at properties of CPNs that help us understand the complexity of conflict detection. One question we would like to answer is, whether at a given point in time, a given normative structure is conflict-free. Such a snapshot of a normative structure corresponds to a marking in the mapped CPN. Def. 11. Given a marking Mi, this marking is conflictfree if Â¬âˆƒp âˆˆ P. âˆƒnp1, np2 âˆˆ Mi(p) such that np1.mode = Obl and np2.mode = Prh and np1.illoc and np2.illoc unify under a valid substitution. Another interesting question would be, whether a conflict will occur from such a snapshot of the system by propagating the normative positions. In order to answer this question, we first translate the snapshot of the normative structure to the corresponding CPN and then execute the finite occurence sequence of markings and steps, verifying the conflict-freedom of each marking as we go along. Def. 12. Given a marking Mi, a finite occurrence sequence Si, Si+1, ..., Sn is called conflict-free, if and only if Mi[Si > Mi+1 . . . Mn[Sn > Mn+1 and Mk is conflict-free for all k such that i â‰¤ k â‰¤ n + 1. However, the main question we would like to investigate, is whether or not a given normative structure is conflictresistant, that is, whether or not the agents enacting the MAS are able to bring about conflicts through their actions. As soon as one includes the possibility of actions (or utterances) from autonomous agents, one looses determinism. Having mapped the normative structure to a CPN, we now add CPN models of the agents interactions. Each form of agent interaction (i.e. each activity) can be modelled using CPNs along the lines of Cost et al. [5]. These nondeterministic CPNs feed tokens into the CPN that models the normative structure. This leads to the introduction of non-determinism into the combined CPN. The lower half of figure 3 shows part of a CPN model of an agent protocol where the arc denoted with 1 represents some utterance of an illocution by an agent. The target transition of this arc, not only moves a token on to the next state of this CPN, but also places a token in the place corresponding to the appropriate normative scene in the CPN model of the normative structure (via arc 2). Transition 3 finally could propagate that token in form of an obligation, for example. Thus, from a given marking, many different occurrence sequences are possible depending on the agents actions. We make use of the reachability set R to define a situation in which agents cannot cause conflicts. 640 The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) Figure 3: Constructing the combined CPN Def. 13. Given a net N, a marking M is conflict-resistant if and only if all markings in R(N,M) are conflict-free. Checking conflict-freedom of a marking can be done in polynomial time by checking all places of the CPN for conflicting tokens. Conflict-freedom of an occurrence sequence in the CPN that represents the normative structure can also be done in polynomial time since this sequence is deterministic given a snapshot. Whether or not a normative structure is designed safely corresponds to checking the conflict-resistance of the initial marking M0. Now, verifying conflict-resistance of a marking becomes a very difficult task. It corresponds to the reachability problem in a CPN: can a state be reached or a marking achieved, that contains a conflict?. This reachability problem is known to be NP-complete for ordinary Petri Nets [22] and since CPNs are functionally identical, we cannot hope to verify conflict-resistance of a normative structure off-line in a reasonable amount of time. Therefore, distributed, run-time mechanisms are needed to ensure that a normative structure maintains consistency. We present one such mechanism in the following section. 6. MANAGING NORMATIVE STRUCTURES Once a conflict (as defined in Section 4) has been detected, we propose to employ the unifier to resolve the conflict. In our example, if the variables in prh(inform(a1, r1, a2, r2, p(Y, d), T )) do not get the values specified in substitution Ïƒ then there will not be a conflict. However, rather than computing the complement set of a substitution (which can be an infinite set) we propose to annotate the prohibition with the unifier itself and use it to determine what the variables of that prohibition cannot be in future unifications in order to avoid a conflict. We therefore denote annotated prohibitions as prh(Â¯I) Î£, where Î£ = {Ïƒ1, . . . , Ïƒn}, is a set of unifiers. Annotated norms3 are interpreted as deontic constructs with curtailed influences, that is, their effect (on agents, roles and illocutions) has been limited by the set Î£ of unifiers. A prohibition may be in conflict with various obligations in a given normative scene s = id, Î” and we need to record (and possibly avoid) all these conflicts. We define below an algorithm which ensures that a normative position will be added to a normative scene in such a way that it will not cause any conflicts. 3 Although we propose to curtail prohibitions, the same machinery can be used to define the curtailment of obligations instead. These different policies are dependent on the intended deontic semantics and requirements of the systems addressed. For instance, some MASs may require that their agents should not act in the presence of conflicts, that is, the obligation should be curtailed. 6.1 Conflict Resolution We propose a fine-grained way of resolving normative conflicts via unification. We detect the overlapping of the influences of norms , i.e. how they affect the behaviour of the concerned agents, and we curtail the influence of the normative position, by appropriately using the annotations when checking if the norm applies to illocutions. The algorithm shown in Figure 4 depicts how we maintain a conflict-free set of norms. It adds a given norm N to an existing, conflictfree normative state Î”, obtaining a resulting new normative state Î” which is conflict-free, that is, its prohibitions are annotated with a set of conflict sets indicating which bindings for variables have to be avoided for conflicts not to take place. algorithm addNorm(N, Î”) begin 1 timestamp(N) 2 case N of 3 per(Â¯I): Î” := Î” âˆª {N} 4 prh(I): if N âˆˆ Î” s.t. conflict(N, N , Ïƒ) then Î” := Î” 5 else Î” := Î” âˆª {N} 6 prh(Â¯I): 7 begin 8 Î£ := âˆ… 9 for each N âˆˆ Î” do 10 if conflict(N, N , Ïƒ) then Î£ := Î£ âˆª {Ïƒ} 11 Î” := Î” âˆª {N Î£} 12 end 13 obl(Â¯I): 14 begin 15 Î”1 := âˆ…; Î”2 := âˆ… 16 for each (N Î£) âˆˆ Î” do 17 if N = prh(I) then 18 if conflict(N , N, Ïƒ) then Î”1 := Î”1 âˆª {N Î£} 19 else nil 20 else 21 if conflict(N , N, Ïƒ) then 22 begin 23 Î”1 := Î”1 âˆª {N Î£} 24 Î”2 := Î”2 âˆª {N (Î£ âˆª {Ïƒ})} 25 end 26 Î” := (Î” âˆ’ Î”1) âˆª Î”2 âˆª {N} 27 end 28 end case 29 return Î” end Figure 4: Algorithm to Preserve Conflict-Freedom The algorithm uses a case of structure to differentiate the different possibilities for a given norm N. Line 3 addresses the case when the given norm is a permission: N is simply added to Î”. Lines 4-5 address the case when we attempt to add a ground prohibition to a normative state: if it conflicts with any obligation, then it is discarded; otherwise it is added to the normative state. Lines 6-12 describe the situation when the normative position to be added is a nonground prohibition. In this case, the algorithm initialises Î£ to an empty set and loops (line 9-10) through the norms N in the old normative state Î”. Upon finding one that conflicts with N, the algorithm updates Î£ by adding the newly found conflict set Ïƒ to it (line 10). By looping through Î”, we are able to check any conflicts between the new prohibition and the existing obligations, adequately building the annotation Î£ to be used when adding N to Î” in line 11. Lines 13-27 describe how a new obligation is accommodated to an existing normative state. We make use of two initially empty, temporary sets, Î”1, Î”2. The algorithm loops through Î” (lines 16-25) picking up those annotated prohibitions N Î£ which conflict with the new obligation. There are, however, two cases to deal with: the one when a ground The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 641 prohibition is found (line 17), and its exception, covering non-ground prohibitions (line 20). In both cases, the old prohibition is stored in Î”1 (lines 18 and 23) to be later removed from Î” (line 26). However, in the case of a nonground prohibition, the algorithm updates its annotation of conflict sets (line 24). The loop guarantees that an exhaustive (linear) search through a normative state takes place, checking if the new obligation is in conflict with any existing prohibitions, possibly updating the annotations of these conflicting prohibitions. In line 26 the algorithm builds the new updated Î” by removing the old prohibitions stored in Î”1 and adding the updated prohibitions stored in Î”2 (if any), as well as the new obligation N. Our proposed algorithm is correct in that, for a given normative position N and a normative state Î”, it provides a new normative state Î” in which all prohibitions have annotations recording how they unify with existing obligations. The annotations can be empty, though: this is the case when we have a ground prohibition or a prohibition which does not unify/conflict with any obligation. Permissions do not affect our algorithm and they are appropriately dealt with (line 3). Any attempt to insert a ground prohibition which conflicts, yields the same normative state (line 4). When a new obligation is being added then the algorithm guarantees that all prohibitions are considered (lines 14-27), leading to the removal of conflicting ground prohibitions or the update of annotations of non-ground prohibitions. The algorithm always terminates: the loops are over a finite set Î” and the conflict checks and set operations always terminate. The complexity of the algorithm is linear: the set Î” is only examined once for each possible case of norm to be added. When managing normative states we may also need to remove normative positions. This is straightforward: permissions can be removed without any problems; annotated prohibitions can also be removed without further considerations; obligations, however, require some housekeeping. When an obligation is to be removed, we must check it against all annotated prohibitions in order to update their annotations. We apply the conflict check and obtain a unifier, then remove this unifier from the prohibitions annotation. We invoke the removal algorithm as removeNorm(N, Î”): it returns a new normative state Î” in which N has been removed, with possible alterations to other normative positions as explained. 6.2 Enactment of a Normative Structure The enactment of a normative structure amounts to the parallel, distributed execution of normative scenes and normative transitions. For illustrative purposes, hereafter we shall describe the interplay between the payment and delivery normative scenes and the normative transition nt linking them in the upper half of figure 2. With this aim, consider for instance that obl(inform(jules, client, rod, acc, pay(copper, 400, 350), T) âˆˆ Î”payment and that Î”delivery holds prh(inform(rod,wm, jules, client, delivered(Z, Q), T)). Such states indicate that client Jules is obliged to pay Â£400 for 350kg of copper to accountant Rod according to the payment normative scene, whereas Rod, taking up the role of warehouse manager this time, is prohibited to deliver anything to client Jules according to the delivery normative scene. For each normative scene, the enactment process goes as follows. Firstly, it processes its incoming message queue that contains three types of messages: utterances from the activity it is linked to; and normative commands either to add or remove normative positions. For instance, in our example, the payment normative scene collects the illocution I = utt((inform(jules, client, rod, acc, pay(copper, 400, 350), 35)) standing for client Jules pending payment for copper (via arrow A in figure 2). Utterances are timestamped and subsequently added to the normative state. We would have Î”payment = Î”payment âˆª {I}, in our example. Upon receiving normative commands to either add or remove a normative position, the normative scene invokes the corresponding addition or removal algorithm described in Section 6.1. Secondly, the normative scene acknowledges its state change by sending a trigger message to every outgoing normative transition it is connected to. In our example, the payment normative scene would be signalling its state change to normative transition nt. For normative transitions, the process works differently. Because each normative transition controls the operation of a single rule, upon receiving a trigger message, it polls every incoming normative scene for substitutions for the relevant illocution schemata on the LHS of its rule. In our example, nt (being responsible for the rule described in Section 3.4), would poll the payment normative scene (via arrow B) for substitutions. Upon receiving replies from them (in the form of sets of substitutions together with time-stamps), it has to unify substitutions from each of these normative scenes. For each unification it finds, the rule is fired, and hence the corresponding normative command is sent along to the output normative scene. The normative transition then keeps track of the firing message it sent on and of the time-stamps of the normative positions that triggered the firing. This is done to ensure that the very same normative positions in the LHS of a rule only trigger its firing once. In our example, nt would be receiving Ïƒ = {X/jules, Y/rod, Z/copper, Q/350} from the payment normative scene. Since the substitions in Ïƒ unify with nts rule, the rule is fired, and the normative command add(delivery : obl(rod, wm, jules, client, delivered(copper, 350), T)) is sent along to the delivery normative scene to oblige Rod to deliver to client Jules 350kg of copper. After that, the delivery normative scene would invoke the addNorm algorithm from figure 4 with Î”delivery and N = obl(rod, wm, jules, client, delivered(copper, 350)) as arguments. 7. RELATED WORK AND CONCLUSIONS Our contributions in this paper are three-fold. Firstly, we introduce an approach for the management of and reasoning about norms in a distributed manner. To our knowledge, there is little work published in this direction. In [8, 21], two languages are presented for the distributed enforcement of norms in MAS. However, in both works, each agent has a local message interface that forwards legal messages according to a set of norms. Since these interfaces are local to each agent, norms can only be expressed in terms of actions of that agent. This is a serious disadvantage, e.g. when one needs to activate an obligation to one agent due to a certain message of another one. The second contribution is the proposal of a normative structure. The notion is fruitful because it allows the separation of normative and procedural concerns. The normative structure we propose makes evident the similarity between the propagation of normative positions and the propagation 642 The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) of tokens in Coloured Petri Nets. That similarity readily suggests a mapping between the two, and gives grounds to a convenient analytical treatment of the normative structure, in general, and the complexity of conflict detection, in particular. The idea of modelling interactions (in the form of conversations) via Petri Nets has been investigated in [18], where the interaction medium and individual agents are modelled as CPN sub-nets that are subsequently combined for analysis. In [5], conversations are first designed and analysed at the level of CPNs and thereafter translated into protocols. Lin et al. [20] map conversation schemata to CPNs. To our knowledge, the use of this representation in the support of conflict detection in regulated MAS has not been reported elsewhere. Finally, we present a distributed mechanism to resolve normative conflicts. Sartor [25] treats normative conflicts from the point of view of legal theory and suggests a way to order the norms involved. His idea is implemented in [12] but requires a central resource for norm maintenance. The approach to conflict detection and resolution is an adaptation and extension of the work on instantiation graphs reported in [17] and a related algorithm in [27]. The algorithm presented in the current paper can be used to manage normative states distributedly: normative scenes that happen in parallel have an associated normative state Î” to which the algorithm is independently applied each time a new norm is to be introduced. These three contributions we present in this paper open many possibilities for future work. We should mention first, that as a broad strategy we are working on a generalisation of the notion of normative structure to make it operate with different coordination models, with richer deontic content and on top of different computational realisations of regulated MAS. As a first step in this direction we are taking advantage of the de-coupling between interaction protocols and declarative normative guidance that the normative structure makes available, to provide a normative layer for electronic institutions (as defined in [1]). We expect such coupling will endow electronic institutions with a more flexible -and more expressive- normative environment. Furthermore, we want to extend our model along several directions: (1) to handle negation and constraints as part of the norm language, and in particular the notion of time; (2) to accommodate multiple, hierarchical norm authorities based on roles, along the lines of Cholvy and Cuppens [3] and power relationships as suggested by Carabelea et al. [2]; (3) to capture in the conflict resolution algorithm different semantics relating the deontic notions by supporting different axiomations (e.g., relative strength of prohibition versus obligation, default deontic notions, deontic inconsistencies). On the theoretical side, we intend to use analysis techniques of CPNs in order to characterise classes of CPNs (e.g., acyclic, symmetric, etc.) corresponding to families of Normative Structures that are susceptible to tractable offline conflict detection. The combination of these techniques along with our online conflict resolution mechanisms is intended to endow MAS designers with the ability to incorporate norms into their systems in a principled way. 8. REFERENCES [1] J. L. Arcos, M. Esteva, P. Noriega, J. A. RodrÂ´Ä±guez, and C. Sierra. Engineering open environments with electronic institutions. Journal on Engineering Applications of Artificial Intelligence, 18(2):191-204, 2005. [2] C. Carabelea, O. Boissier, and C. Castelfranchi. Using social power to enable agents to reason about being part of a group. In 5th Internat. Workshop, ESAW 2004, pages 166-177, 2004. [3] L. Cholvy and F. Cuppens. Solving normative conflicts by merging roles. In Fifth International Conference on Artificial Intelligence and Law, Washington, USA, 1995. [4] S. Christensen and T. B. Haagh. Design CPN - overview of CPN ML syntax. Technical report, University of Aarhus, 1996. [5] R. S. Cost, Y. Chen, T. W. Finin, Y. Labrou, and Y. Peng. Using colored petri nets for conversation modeling. In Issues in Agent Communication, pages 178-192, London, UK, 2000. [6] F. Dignum. Autonomous Agents with Norms. Artificial Intelligence and Law, 7(1):69-79, 1999. [7] A. Elhag, J. Breuker, and P. Brouwer. On the Formal Analysis of Normative Conflicts. Information & Comms. Techn. Law, 9(3):207-217, Oct. 2000. [8] M. Esteva, W. Vasconcelos, C. Sierra, and J. A. RodrÂ´Ä±guez-Aguilar. Norm consistency in electronic institutions. volume 3171 (LNAI), pages 494-505. Springer-Verlag, 2004. [9] M. Fitting. First-Order Logic and Automated Theorem Proving. Springer-Verlag, New York, U.S.A., 1990. [10] N. Fornara, F. Vigan`o, and M. Colombetti. An Event Driven Approach to Norms in Artificial Institutions. In AAMAS05 Workshop: Agents, Norms and Institutions for Regulated Multiagent Systems (ANI@REM), Utrecht, 2005. [11] D. Gaertner, P. Noriega, and C. Sierra. Extending the BDI architecture with commitments. In Proceedings of the 9th International Conference of the Catalan Association of Artificial Intelligence, 2006. [12] A. GarcÂ´Ä±a-Camino, P. Noriega, and J.-A. RodrÂ´Ä±guez-Aguilar. An Algorithm for Conflict Resolution in Regulated Compound Activities. In 7th Int.Workshop - ESAW 06, 2006. [13] A. GarcÂ´Ä±a-Camino, J.-A. RodrÂ´Ä±guez-Aguilar, C. Sierra, and W. Vasconcelos. A Distributed Architecture for Norm-Aware Agent Societies. In DALT III, volume 3904 (LNAI), pages 89-105. Springer, 2006. [14] F. Giunchiglia and L. Serafini. Multi-language hierarchical logics or: How we can do without modal logics. Artificial Intelligence, 65(1):29-70, 1994. [15] J. Habermas. The Theory of Communication Action, Volume One, Reason and the Rationalization of Society. Beacon Press, 1984. [16] K. Jensen. Coloured Petri Nets: Basic Concepts, Analysis Methods and Practical Uses (Volume 1). Springer, 1997. [17] M. Kollingbaum and T. Norman. Strategies for resolving norm conflict in practical reasoning. In ECAI Workshop Coordination in Emergent Agent Societies 2004, 2004. [18] J.-L. Koning, G. Francois, and Y. Demazeau. Formalization and pre-validation for interaction protocols in a multi agent systems. In ECAI, pages 298-307, 1998. [19] B. Kramer and J. Mylopoulos. Knowledge Representation. In S. C. Shapiro, editor, Encyclopedia of Artificial Intelligence, volume 1, pages 743-759. John Wiley & Sons, 1992. [20] F. Lin, D. H. Norrie, W. Shen, and R. Kremer. A schema-based approach to specifying conversation policies. In Issues in Agent Communication, pages 193-204, 2000. [21] N. Minsky. Law Governed Interaction (LGI): A Distributed Coordination and Control Mechanism (An Introduction, and a Reference Manual). Technical report, Rutgers University, 2005. [22] T. Murata. Petri nets: Properties, analysis and applications. Proceedings of the IEEE, 77(4):541-580, 1989. [23] S. Parsons, C. Sierra, and N. Jennings. Agents that reason and negotiate by arguing. Journal of Logic and Computation, 8(3):261-292, 1998. [24] A. Ricci and M. Viroli. Coordination Artifacts: A Unifying Abstraction for Engineering Environment-Mediated Coordination in MAS. Informatica, 29:433-443, 2005. [25] G. Sartor. Normative conflicts in legal reasoning. Artificial Intelligence and Law, 1(2-3):209-235, June 1992. [26] M. Sergot. A Computational Theory of Normative Positions. ACM Trans. Comput. Logic, 2(4):581-622, 2001. [27] W. W. Vasconcelos, M. Kollingbaum, and T. Norman. Resolving Conflict and Inconsistency in Norm-Regulated Virtual Organisations. In Proceedings of AAMAS 07, Hawaii, USA, 2007. IFAAMAS. [28] G. H. von Wright. Norm and Action: A Logical Inquiry. Routledge and Kegan Paul, London, 1963. [29] M. Wooldridge. An Introduction to Multiagent Systems. John Wiley & Sons, Chichester, UK, Feb. 2002. The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 643",
    "original_translation": "GestiÃ³n de normas distribuidas en sistemas regulados de mÃºltiples agentes âˆ— Dorian Gaertner Dept. de Computing, Imperial College London, Londres SW7 2az, Reino Unido dg00@doc.ic.ac.uk Andres Garcia-Camino, Pablo Noriega, J.-A. RodrÃ­guez-Aguilar IIIA-CSIC, 08193 Bellaterra, EspaÃ±a {AndrÃ©s, Pablo, Jar}@iiia.csic.es Wamberto Vasconcelos Departamento de Ciencias de la ComputaciÃ³n, Universidad de Aberdeen, Aberdeen AB24 3ue, Reino Unido Wvasconcelos@acm.ampliamente reconocido como un medio para coordinar sistemas de mÃºltiples agentes. La gestiÃ³n distribuida de las normas es un problema desafiante y observamos una falta de realizaciones computacionales verdaderamente distribuidas de modelos normativos. Para regular el comportamiento de los agentes autÃ³nomos que participan en mÃºltiples actividades relacionadas, proponemos un modelo normativo, la estructura normativa (NS), un artefacto que se basa en la propagaciÃ³n de posiciones normativas (obligaciones, prohibiciones, permisos),como consecuencias de las acciones de los agentes. Dentro de un NS, pueden surgir conflictos debido a la naturaleza dinÃ¡mica del MAS y la concurrencia de las acciones de los agentes. Sin embargo, garantizar la libertad de conflicto de un NS en el tiempo de diseÃ±o es computacionalmente intratable. Mostramos esto al formalizar la nociÃ³n de conflicto, proporcionando un mapeo de NSS en redes de Petri de color y tomando prestados resultados teÃ³ricos bien conocidos de ese campo. Dado que se requiere una resoluciÃ³n de conflictos en lÃ­nea, presentamos un algoritmo manejable para emplear distribuidos. Luego demostramos que este algoritmo es primordial para la promulgaciÃ³n distribuida de un ns. CategorÃ­as y descriptores de temas I.2.11 [Inteligencia artificial distribuida]: Idiomas y estructuras Algoritmos de tÃ©rminos generales, diseÃ±o, teorÃ­a 1. IntroducciÃ³n Una caracterÃ­stica fundamental de los sistemas abiertos y regulados de mÃºltiples agentes en los que interactÃºan los agentes autÃ³nomos es que los agentes participantes estÃ¡n destinados a cumplir con las convenciones del sistema. Las normas pueden usarse para modelar tales convenciones y, por lo tanto, como un medio para regular el comportamiento observable de los agentes [6, 29]. Hay muchas contribuciones sobre el tema de las normas de sociÃ³logos, filÃ³sofos y lÃ³gicos (por ejemplo, [15, 28]). Sin embargo, hay muy pocas propuestas para las realizaciones computacionales de modelos normativos: la forma en que las normas pueden integrarse en el diseÃ±o y ejecuciÃ³n de la masa. Los pocos que existen (por ejemplo, [10, 13, 24]) funcionan de manera centralizada que crea cuellos de botella y puntos de falla individuales. Hasta donde sabemos, ninguna propuesta realmente respalda la promulgaciÃ³n distribuida de entornos normativos. En nuestro artÃ­culo, abordamos ese problema y proponemos medios para manejar compromisos conflictivos en sistemas abiertos, regulados y multiagentes de manera distribuida. El tipo de MAS regulado que imaginamos consiste en mÃºltiples actividades relacionadas mÃºltiples donde los agentes interactÃºan. Cada agente puede participar simultÃ¡neamente en varias actividades y cambiar de una actividad a otra. Las acciones de un agente dentro de una actividad pueden tener consecuencias en forma de posiciones normativas (es decir, obligaciones, permisos y prohibiciones) [26] que pueden limitar su comportamiento futuro. Por ejemplo, un agente comprador que se queda sin crÃ©dito puede tener prohibido hacer mÃ¡s ofertas, o un agente de vendedores estÃ¡ obligado a entregar despuÃ©s de cerrar un acuerdo. Suponemos que los agentes pueden optar por no cumplir con todas sus obligaciones y, por lo tanto, pueden ser sancionados por el MAS. Observe que, cuando se distribuyen actividades, las posiciones normativas deben fluir de las actividades en las que se generan a aquellos en los que surtan efecto. Por ejemplo, la obligaciÃ³n de los vendedores anteriores debe fluir (o ser propagada) de una actividad de negociaciÃ³n a una actividad de entrega. Dado que en un MAS abierto, regulado, uno no puede incorporar aspectos normativos en el diseÃ±o de los agentes, adoptamos la opiniÃ³n de que el MAS debe complementarse con un conjunto separado de normas que regula aÃºn mÃ¡s el comportamiento de los agentes participantes. Para modelar la separaciÃ³n de las preocupaciones entre el nivel de coordinaciÃ³n (interacciones de los agentes) y el nivel normativo (propagaciÃ³n de posiciones normativas), proponemos un artefacto llamado estructura normativa (NS). Dentro de un conflicto NS pueden surgir debido a la naturaleza dinÃ¡mica de la MAS y la concurrencia de las acciones de los agentes. Por ejemplo, un agente puede estar obligado y prohibido a hacer el 636 978-81-904262-7-5 (RPS) c 2007 Ifaamas de la misma acciÃ³n en una actividad. Dado que la regulaciÃ³n de un MAS implica que los agentes participantes deben ser conscientes de la validez de aquellas acciones que tienen lugar dentro de Ã©l, tales conflictos deben identificarse y posiblemente resolverse si se necesita un reclamo de validez para que un agente participe en una acciÃ³no ser sancionado. Sin embargo, garantizar la libertad de conflicto de un NS en el tiempo de diseÃ±o es computacionalmente intratable. Mostramos esto al formalizar la nociÃ³n de conflicto, proporcionando un mapeo de NSS en redes de Petri de color (CPN) y tomando prestados resultados teÃ³ricos bien conocidos del campo de las CPN. Creemos que se requiere la detecciÃ³n y resoluciÃ³n de conflictos en lÃ­nea. Por lo tanto, presentamos un algoritmo manejable para la resoluciÃ³n de conflictos. Este algoritmo es primordial para la promulgaciÃ³n distribuida de un ns. El papel estÃ¡ organizado de la siguiente manera. En la SecciÃ³n 2 detallamos un escenario para servir como ejemplo en todo el documento. A continuaciÃ³n, en la SecciÃ³n 3 definimos formalmente el artefacto de la estructura normativa. MÃ¡s adelante, en la SecciÃ³n 4 formalizamos la nociÃ³n de conflicto para analizar posteriormente la complejidad de la detecciÃ³n de conflictos en tÃ©rminos de CPN en la SecciÃ³n 5. La SecciÃ³n 6 describe la gestiÃ³n computacional de NSS describiendo su promulgaciÃ³n y presentando un algoritmo para la resoluciÃ³n de conflictos. Finalmente, comentamos sobre el trabajo relacionado, sacamos conclusiones e informamos sobre el trabajo futuro en la SecciÃ³n 7. 2. Escenario Utilizamos un escenario de cadena de suministro en el que las empresas y las personas se unen en un mercado en lÃ­nea para realizar negocios. El procedimiento de transacciÃ³n general puede organizarse como seis actividades distribuidas, representadas como nodos en el diagrama en la Figura 1. Involucran a diferentes participantes cuyo comportamiento se coordina a travÃ©s de protocolos. En este escenario, los agentes pueden desempeÃ±ar uno de los cuatro roles: Modelo de coordinaciÃ³n de negociaciÃ³n de pagos de registro de Marexit Modelo de coordinaciÃ³n de negociaciÃ³n Contrato Figura 1: Estructura de actividad del escenario Ketplace Contador (ACC), Cliente, Proveedor (Supp) y Gerentes de Warehouse (WM). Las flechas que conectan las actividades representan cÃ³mo los agentes pueden moverse de una actividad a otra. DespuÃ©s de registrarse en el mercado, los clientes y proveedores se reÃºnen en una actividad en la que negocian los tÃ©rminos de su transacciÃ³n, es decir, precios, cantidades de bienes que se entregarÃ¡n, plazos y otros detalles. En la actividad contractual, la orden se establece y se prepara una factura. Luego, el cliente participarÃ¡ en una actividad de pago, verificando su valÃ­a de crÃ©dito e instruyendo a su banco que transfiera la cantidad correcta de dinero. Mientras tanto, el proveedor organizarÃ¡ que se entreguen los productos (por ejemplo, a travÃ©s de un gerente de almacÃ©n) en la actividad de entrega. Finalmente, los agentes pueden dejar el mercado ajustado a un protocolo de salida predeterminado. El contador del mercado participa en la mayorÃ­a de las actividades como un proveedor confiable de herramientas de auditorÃ­a. En el resto del documento, construiremos sobre este escenario para ejemplificar la nociÃ³n de estructura normativa e ilustrar nuestro enfoque para la detecciÃ³n y resoluciÃ³n de conflictos en un entorno distribuido.3. La estructura normativa en los agentes de masa interactÃºa segÃºn los protocolos que naturalmente se distribuyen. Abogamos que las acciones en uno de esos protocolo pueden tener un efecto sobre la promulgaciÃ³n de otros protocolos. Ciertas acciones pueden estar prohibidas u obligatorias, por ejemplo. Tomamos que las posiciones normativas sean obligaciones, prohibiciones y permisos similares al trabajo descrito en [26]. La intenciÃ³n de agregar o eliminar una posiciÃ³n normativa que llamamos comando normativo. Las ocurrencias de posiciones normativas en un protocolo tambiÃ©n pueden tener consecuencias para otros protocolos1. Para definir nuestro lenguaje de norma y especificar cÃ³mo se propagan las posiciones normativas, nos hemos inspirado en los sistemas de contexto mÃºltiple [14]. Estos sistemas permiten la estructuraciÃ³n del conocimiento en distintas teorÃ­as formales y la definiciÃ³n de relaciones entre ellos. Las relaciones se expresan como reglas del puente: la deducibilidad de las fÃ³rmulas en algunos contextos conduce a la deducciÃ³n de otras fÃ³rmulas en otros contextos. Recientemente, estos sistemas se han utilizado con Ã©xito para definir arquitecturas de agentes [11, 23]. La metÃ¡fora se traduce en nuestro trabajo actual de la siguiente manera: la expresiÃ³n de ilocuciones y/o la existencia de posiciones normativas en algunas escenas normativas conduce a la deducciÃ³n de posiciones normativas en otras escenas normativas. Nos preocupa la propagaciÃ³n y distribuciÃ³n de posiciones normativas dentro de una red de escenas normativas distribuidas como consecuencia de las acciones de los agentes. Tomamos que las escenas normativas sean conjuntos de posiciones y expresiones normativas que estÃ¡n asociados con un protocolo de interacciÃ³n subyacente correspondiente a una actividad. En esta secciÃ³n, primero presentamos un lenguaje simple que captura estos aspectos e introducimos formalmente las nociones de la escena normativa, la regla de transiciÃ³n normativa y la estructura normativa. Damos la semÃ¡ntica prevista de estas reglas y mostramos cÃ³mo controlar un MAS a travÃ©s de las normas en un ejemplo.3.1 Conceptos bÃ¡sicos Los bloques de construcciÃ³n de nuestro idioma son tÃ©rminos y fÃ³rmulas atÃ³micas: def.1. Un tÃ©rmino, denotado como t, es (i) cualquier constante expresada usando minÃºsculas (con o sin subÃ­ndices), p.A, B0, C o (ii) cualquier variable expresada utilizando mayÃºsculas (con o sin subÃ­ndice), p. X, y, zb o (iii) Cualquier funciÃ³n f (t1, ..., tn), donde f es un sÃ­mbolo de funciÃ³n n-ary y t1, .., tn son tÃ©rminos. Algunos ejemplos de tÃ©rminos y funciones son crÃ©dito, precio u oferta (Biblia, 30) respectivamente una variable, una constante y una funciÃ³n. Haremos uso de identificadores en todo el documento, que son tÃ©rminos constantes y tambiÃ©n necesitan la siguiente definiciÃ³n: def.2. Una fÃ³rmula atÃ³mica es cualquier construcciÃ³n p (t1, ..., tn), donde p es un sÃ­mbolo de predicado N-oral y T1 ,..., TN son tÃ©rminos. El conjunto de todas las fÃ³rmulas atÃ³micas se denota como Î´. Nos centramos en una clase expresiva de masa en la que se lleva a cabo la interacciÃ³n mediante actos de discurso ilocucionario intercambiados entre los agentes participantes: def.3. Illocuciones I son fÃ³rmulas atÃ³micas terrestres que tienen la forma P (Ag, R, Ag, R, Î´, T) donde P es un elemento de 1 aquÃ­, resumimos de los protocolos y nos referimos a ellas genÃ©ricamente como actividades. El sexto intl. Conf.en agentes autÃ³nomos y sistemas de mÃºltiples agentes (AAMAS 07) 637 un conjunto de partÃ­culas ilocucionarias (por ejemplo, informar, solicitud, oferta);AG, AG son identificadores de agentes;R, R son identificadores de roles;Î´, un tÃ©rmino terrestre arbitrario, es el contenido del mensaje, construido a partir de un lenguaje de contenido compartido;t âˆˆ N es una marca de tiempo. El significado intuitivo de P (AG, R, AG, R, M, T) es que el agente AG juega el rol R enviÃ³ el mensaje M al agente AG Rol de juego R en el tiempo t.Un ejemplo de ilocuciÃ³n es informar (AG4, Supp, AG3, Cliente, Oferta (Wire, 12), 10). A veces es Ãºtil referirse a ilocuciones que no estÃ¡n completamente fundamentadas, es decir, aquellas que pueden contener variables no asociadas (libres). En la descripciÃ³n de un protocolo, por ejemplo, los valores precisos del mensaje intercambiado pueden dejarse sin especificar. Durante la promulgaciÃ³n del protocolo, los agentes producirÃ¡n los valores reales que darÃ¡n lugar a una ilocuciÃ³n terrestre. Por lo tanto, podemos definir esquemas de ilocuciÃ³n: def.4. Un esquema de ilocuciÃ³n Â¯i es cualquier fÃ³rmula atÃ³mica P (Ag, R, Ag, R, Î´, T) en la que algunos de los tÃ©rminos pueden ser variables o pueden contener variables.3.2 DefiniciÃ³n formal de la nociÃ³n de NS primero definimos escenas normativas de la siguiente manera: def.5. Una escena normativa es una tupla S = IDS, Î”S donde IDS es un identificador de escena y Î”S es el conjunto de fÃ³rmulas atÃ³micas Î´ (es decir, expresiones y posiciones normativas) que se mantienen en s.TambiÃ©n nos referiremos a Î”S como el estado de la escena normativa s.Por ejemplo, una instantÃ¡nea del estado de la escena normativa de entrega de nuestro escenario podrÃ­a representarse como: Î”S = 8 <: Utt (solicitud (Sean, Cliente, Kev, Wm, Recibe (Wire, 200), 20)), Utt(Aceptar (Kev, Wm, Sean, Cliente, Recibir (cable, 200), 30)), Obl (informar (Kev, Wm, Sean, Cliente, entregado (cable, 200), 30)) 9 =;Es decir, el agente Sean asumiÃ³ el rol del cliente ha solicitado el agente KEV (asumiendo el rol de Warehouse Manager WM) para recibir 200 kg de cable, y el agente KEV estÃ¡ obligado a entregar 200 kg de cable a Sean desde que aceptÃ³ la solicitud. Tenga en cuenta que el estado de una escena normativa Î”S evoluciona con el tiempo. Estas escenas normativas estÃ¡n conectadas entre sÃ­ a travÃ©s de transiciones normativas que especifican cÃ³mo las expresiones y las posiciones normativas en una escena afectan otras escenas normativas. Como se mencionÃ³ anteriormente, las actividades no son independientes ya que las ilocuciones pronunciadas en algunos de ellos pueden tener un efecto en otros. Las reglas de transiciÃ³n normativa definen las condiciones bajo las cuales se genera un comando normativo. Estas condiciones son expresiones o posiciones normativas asociadas con un protocolo dado (denotado, por ejemplo, actividad: enunciado) que producen un comando normativo, es decir, la adiciÃ³n o eliminaciÃ³n de otra posiciÃ³n normativa, posiblemente relacionada con una actividad diferente. Nuestras reglas de transiciÃ³n se definen asÃ­: def.6. Una regla de transiciÃ³n normativa R es de la forma: r :: = v c v :: = ids: d |V, V D :: = N |utt (Â¯i) n :: = per (Â¯i) |PRH (Â¯i) |obl (Â¯i) c :: = add (ids: n) |Eliminar (IDS: N) donde Â¯i es un esquema de ilocuciÃ³n, n es una posiciÃ³n normativa (es decir, permiso, prohibiciÃ³n u obligaciÃ³n), IDS es un identificador para la actividad S y C es un comando normativo. Dotamos nuestro idioma con la semÃ¡ntica habitual de los idiomas basados en reglas [19]. Las reglas asignan una estructura normativa existente a una nueva estructura normativa donde solo cambia el estado de las escenas normativas. En las definiciones a continuaciÃ³n, confiamos en el concepto estÃ¡ndar de sustituciÃ³n [9]. Def.7. Una transiciÃ³n normativa es una tupla B = IDB, RB donde IDB es un identificador y RB es una regla de transiciÃ³n normativa. Estamos proponiendo extender la nociÃ³n de MAS, regulada por protocolos, con una capa adicional que consiste en escenas normativas y transiciones normativas. Esta capa se representa como un grÃ¡fico bipartito que llamamos estructura normativa. Una estructura normativa relaciona escenas normativas y transiciones normativas que especifican quÃ© posiciones normativas se generarÃ¡n o eliminarÃ¡n en quÃ© escenas normativas. Def.8. Una estructura normativa es un grÃ¡fico bipartito etiquetado ns = nodos, bordes, LIN, lout. Nodes es un conjunto SâˆªB donde S es un conjunto de escenas normativas y B es un conjunto de transiciones normativas. Los bordes son un conjunto Ain âˆª Aout donde Ain âŠ† S Ã— B es un conjunto de arcos de entrada etiquetados con una fÃ³rmula atÃ³mica utilizando la funciÃ³n de etiquetado Lin: Ain â†’ D;y AOT âŠ† B Ã— S es un conjunto de arcos de salida etiquetados con una posiciÃ³n normativa utilizando la funciÃ³n de etiquetado LOUT: AOUT â†’ N. Lo siguiente debe mantener: 1. Cada fÃ³rmula atÃ³mica que aparece en el LHS de una regla Rb debe ser de la forma (IDS: D) donde s âˆˆ S y D âˆˆ Î´ y âˆƒAin âˆˆ Ain tal que ain = (S, B) y Lin (ain) = D. 2. La fÃ³rmula atÃ³mica que aparece en el RHS de una regla Rb debe ser de la forma agregue (ids: n) o eliminar (ids: n) donde s âˆˆ S y âˆƒAout âˆˆ Aout tal que aout = (b, s) y lout ((aout) = N. 3. âˆ€a âˆˆ Ain tal que a = (s, b) y b = idb, rb y lin (a) = d entonces (ids: d) debe ocurrir en el LHS de Rb.4. âˆ€a âˆˆ Aout tal que a = (b, s) y b = idb, rb y lout (a) = n luego agregue (ids: n) o eliminar (ids: n) debe ocurrir en el rhs de rb. Los dos primeros puntos aseguran que cada fÃ³rmulas atÃ³micas en el LHS de una regla de transiciÃ³n normativa etiquete un arco que ingresa a la transiciÃ³n normativa apropiada en la estructura normativa, y que la fÃ³rmula atÃ³mica en el RHS etiqueta el arco saliente correspondiente. Los puntos tres y cuatro aseguran que las etiquetas de todos los arcos entrantes se usen en el LHS de la regla de transiciÃ³n normativa en la que estos arcos entran, y que las etiquetas de todos los arcos salientes se usan en el RHS de la regla de transiciÃ³n normativa que dejan estos arcos.3.3 SemÃ¡ntica prevista La semÃ¡ntica formal se definirÃ¡ mediante un mapeo a las redes de Petri de color en la SecciÃ³n 5.1. AquÃ­ comenzamos a definir la semÃ¡ntica prevista de las reglas de transiciÃ³n normativa describiendo cÃ³mo una regla cambia una escena normativa de una estructura normativa existente que produce una nueva estructura normativa. Cada regla se desencadena una vez por cada sustituciÃ³n que unifica el lado izquierdo V de la regla con el estado de las escenas normativas correspondientes. Una fÃ³rmula atÃ³mica (es decir, un enunciado o una posiciÃ³n normativa) es un poco unificable con un enunciado o posiciÃ³n normativa que pertenece al estado de la escena normativa correspondiente. Cada vez que se activa una regla, se lleva a cabo el comando normativo especificado en el lado derecho de esa regla, con la intenciÃ³n de agregar o eliminar una posiciÃ³n normativa del estado de la escena normativa correspondiente. Sin embargo, la adiciÃ³n no es incondicional ya que pueden surgir conflictos. Este tema serÃ¡ tratado en las Secciones 4 y 6.1.638 El sexto intl. Conf.En agentes autÃ³nomos y sistemas de mÃºltiples agentes (AAMAS 07) 3.4 Ejemplo En nuestro ejemplo de ejecuciÃ³n, tenemos la siguiente regla de transiciÃ³n normativa ejemplar: â€žPago: OBL (Inform (X, Cliente, Y, ACC, Pay (Z, P, Q), T)), Pago: Utt (inform (x, cliente, y, acc, pay (z, p, q), t)) Â«Entrega: add (obl (inform (y, wm, x, cliente, entregado (Z, q), t))) es decir, durante la actividad de pago, una obligaciÃ³n en el Cliente X de informar el Contador y sobre el pago P del ArtÃ­culo Z en el tiempo T y la expresiÃ³n correspondiente que cumple esta obligaciÃ³n permite el flujo de una Normaa la actividad de entrega. La norma es una obligaciÃ³n para el Agente Y (esta vez asumiendo el papel del Gerente de Warehouse WM) para enviar un mensaje al Cliente X que se ha entregado el Ã­tem Z. Mostramos en la Figura 2 una representaciÃ³n diagramÃ¡tica de cÃ³mo se relacionan las actividades y una estructura normativa: el contrato de entrega de pago Nivel normativo Registro de salida de la entrega de pagos Nivel de coordinaciÃ³n de negociaciÃ³n Contrato NT Figura 2: Actividades y estructura normativa A medida que se pronuncian ilocuciones durante las actividades, surgen posiciones normativas. Las expresiones y las posiciones normativas se combinan en las reglas de transiciÃ³n, causando el flujo de posiciones normativas entre escenas normativas. La conexiÃ³n entre los dos niveles se describe en la SecciÃ³n 6.2.4. DefiniciÃ³n de conflicto Los tÃ©rminos conflictos deoÃ­picos y inconsistencia deoÃ­pica se han utilizado indistintamente en la literatura. Sin embargo, en este documento adoptamos la opiniÃ³n de [7] en la que los autores sugieren que surge una inconsistencia deÃ³ntica cuando una acciÃ³n se permite y prohibida simultÃ¡neamente, ya que no se puede actuar un permiso, no se produce ningÃºn conflicto real. Sin embargo, las situaciones en que una acciÃ³n se obligan y prohibe simultÃ¡neamente son conflictos deÃ³nticos, ya que tanto las obligaciones como las prohibiciones influyen en los comportamientos de una manera conflictiva. El contenido de posiciones normativas en este documento son ilocuciones. Por lo tanto, surge un conflicto normativo cuando una ilocuciÃ³n estÃ¡ simultÃ¡neamente obligada y prohibida. Proponemos usar la nociÃ³n estÃ¡ndar de unificaciÃ³n [9] para detectar cuando una prohibiciÃ³n y una superposiciÃ³n de permiso. Por ejemplo, una obligaciÃ³n obl (Inform (A1, R1, A2, R2, P (C, X), T)) y una ProhibiciÃ³n PRH (Inform (A1, R1, A2, R2, P (Y, D), T)) estÃ¡n en conflicto, ya que se unifican bajo Ïƒ = {a1/a1, r1/r1, a2/a2, r2/r2, y/c, x/d, t/t}). Capturamos formalmente esta nociÃ³n: def.9. Un conflicto (deÃ³ntico) surge entre dos posiciones normativas n y n bajo una sustituciÃ³n Ïƒ, denotada como conflicto (n, n, Ïƒ), si y solo si n = pRH (Â¯i), n = obl (Â¯i) y unificar(Â¯i, Â¯i, Ïƒ). Es decir, una prohibiciÃ³n y una obligaciÃ³n estÃ¡n en conflicto si, y solo si sus ilocuciones se unen bajo Ïƒ. La sustituciÃ³n Ïƒ, llamada aquÃ­ el conflicto establecido, unifica los agentes, roles y fÃ³rmulas atÃ³micas. Suponemos que Unify es una implementaciÃ³n adecuada de un algoritmo de unificaciÃ³n que yo) siempre termina (posiblemente falla, si no se puede encontrar un unificador);ii) es correcto;y iii) tiene complejidad computacional lineal. Las inconsistencias causadas por la misma ilocuciÃ³n que se permite y prohibidas simultÃ¡neamente se pueden formalizar de manera similar. En este artÃ­culo nos centramos en los conflictos de prohibiciÃ³n/obligaciÃ³n, pero la maquinaria computacional introducida en la SecciÃ³n 6.1 puede usarse igualmente para detectar inconsistencias de prohibiciÃ³n/permiso, si sustituimos la modalidad obl por PER.5. Formalizando la libertad de conflicto En esta secciÃ³n, presentamos algunos conocimientos de antecedentes sobre CPN asumiendo una comprensiÃ³n bÃ¡sica de las redes de Petri ordinarias. Para detalles tÃ©cnicos, remitimos al lector a [16]. Luego asignamos NSS a CPN y analizamos sus propiedades. Los CPN combinan la fuerza de las redes de Petri con la fuerza de los lenguajes de programaciÃ³n funcional. Por un lado, las redes de Petri proporcionan las primitivas para la descripciÃ³n de la sincronizaciÃ³n de procesos concurrentes. Como se observÃ³ en [16], los CPN tienen una semÃ¡ntica que se basa en la verdadera concurrencia, en lugar de entrelazar. En nuestra opiniÃ³n, es mÃ¡s fÃ¡cil trabajar con una semÃ¡ntica de la concesiÃ³n verdadera porque es la forma en que imaginamos la conexiÃ³n entre el nivel de coordinaciÃ³n y el nivel normativo de un sistema de mÃºltiples agentes. Por otro lado, los lenguajes de programaciÃ³n funcionales utilizados por los CPN proporcionan las primitivas para la definiciÃ³n de tipos de datos y la manipulaciÃ³n de sus valores de datos. Por lo tanto, podemos traducir fÃ¡cilmente expresiones de una estructura normativa. Por Ãºltimo, pero no menos importante, los CPN tienen una semÃ¡ntica bien definida que define inequÃ­vocamente el comportamiento de cada CPN. AdemÃ¡s, los CPN tienen una gran cantidad de mÃ©todos y herramientas de anÃ¡lisis formales por las cuales se pueden probar las propiedades de las CPN. En resumen, los CPN nos proporcionan todas las caracterÃ­sticas necesarias para razonar formalmente sobre estructuras normativas dado que se proporciona un mapeo adecuado. De acuerdo con las redes de Petri, los estados de una CPN estÃ¡n representados por medio de lugares. Pero a diferencia de las redes de Petri, cada lugar tiene un tipo de datos asociado que determina el tipo de datos que el lugar puede contener. Un estado de CPN se llama marcado. Consiste en una serie de tokens posicionados en los lugares individuales. Cada token lleva un valor de datos que tiene el tipo de lugar correspondiente. En general, un lugar puede contener dos o mÃ¡s tokens con el mismo valor de datos. Por lo tanto, una marca de un CPN es una funciÃ³n que mapea cada lugar en un mÃºltiple 2 de tokens del tipo correcto. A menudo se refiere a los valores de token como colores de token y otro tambiÃ©n se refiere a los tipos de datos como conjuntos de color. Los tipos de una CPN pueden ser arbitrariamente complejos. Las acciones en una CPN se representan mediante transiciones. Un arco entrante en una transiciÃ³n de un lugar indica que la transiciÃ³n puede eliminar los tokens del lugar correspondiente, mientras que un arco saliente indica que la transiciÃ³n puede agregar tokens. El nÃºmero exacto de tokens y sus valores de datos estÃ¡n determinados por las expresiones ARC, que estÃ¡n codificadas utilizando el lenguaje de programaciÃ³n elegido para la CPN. Una transiciÃ³n se habilita en un CPN si y solo si todos los 2 un set (o bolsa) multiset es una extensiÃ³n de la nociÃ³n de SET, lo que permite la posibilidad de mÃºltiples apariencias del mismo elemento. El sexto intl. Conf.En agentes autÃ³nomos y sistemas de mÃºltiples agentes (AAMAS 07), 639 variables en las expresiones de sus arcos entrantes estÃ¡n unidos a algÃºn valor (cada uno de estos enlaces se conoce como un elemento de uniÃ³n). Si es asÃ­, la transiciÃ³n puede ocurrir eliminando los tokens de sus lugares de entrada y agregando tokens a sus lugares de salida. AdemÃ¡s de las expresiones de arco, es posible unir una expresiÃ³n de la guardia booleana (con variables) a cada transiciÃ³n. Al poner todos los elementos anteriores juntos, obtenemos una definiciÃ³n formal de CPN que se emplearÃ¡ mÃ¡s adelante para fines de mapeo. Def.10. Un CPN es una tupla Ïƒ, p, t, a, n, c, g, e, i donde: (i) Ïƒ es un conjunto finito de tipos no vacÃ­os, tambiÃ©n llamados conjuntos de color;(ii) P es un conjunto finito de lugares;(iii) t es un conjunto finito de transiciones;(iv) A es un conjunto finito de arcos;(v) n es una funciÃ³n de nodo definida desde A en p Ã— t âˆª t Ã— p;(vi) C es una funciÃ³n de color de P a Ïƒ;(vii) G es una funciÃ³n de guardia de t a expresiones;(viii) e es una funciÃ³n de expresiÃ³n de arco de A en expresiones;(ix) I es una funciÃ³n de inicializaciÃ³n de P a expresiones cerradas;Observe que la explicaciÃ³n informal de las reglas de habilitaciÃ³n y ocurrencia dadas anteriormente proporciona los cimientos para comprender el comportamiento de una CPN. De acuerdo con las redes de Petri ordinarias, el comportamiento concurrente de una CPN se basa en la nociÃ³n de paso. Formalmente, un paso es un set mÃºltiple no vacÃ­o y finito sobre el conjunto de todos los elementos vinculantes. Deje que los pasos s se habiliten en un marcado M. Entonces, S puede ocurrir, cambiando el marcado m a m. AdemÃ¡s, decimos que el marcado M es directamente accesible desde la marca M por la apariciÃ³n de los pasos S, y la denotamos por m [s> m. Una secuencia de ocurrencia finita es una secuencia finita de pasos y marcas: M1 [S1> M2... Mn [sn> mn+1 tal que n âˆˆ N y mi [si> mi+1 âˆ€i âˆˆ {1 ,..., n}. El conjunto de todas las marcas posibles accesibles para una red neta de una marca M se llama su conjunto de accesibilidad, y se denota como R (NET, M).5.1 Mapeo a las redes de Petri coloreadas Nuestra estructura normativa es un grÃ¡fico bipartito etiquetado. Lo mismo es cierto para una red de Petri de color. Estamos presentando un mapeo F de uno a otro, para proporcionar semÃ¡ntica para la estructura normativa y probar propiedades al usar resultados teÃ³ricos bien conocidos del trabajo en CPN. El mapeo F utiliza correspondencias entre escenas normativas y lugares de CPN, transiciones normativas y transiciones de CPN y finalmente, entre etiquetas de arco y expresiones de arco de CPN. S â†’ P B â†’ T LIN âˆª LOUT â†’ E El conjunto de tipos es el conjunto de singleton que contiene el color NP (es decir, Î£ = {np}). Este tipo complejo estÃ¡ estructurado de la siguiente manera (usamos CPN-ML [4] sintaxis): color npt = con obl |Por |PRH |Nomod color ip = con informes |declarar |Oferta color utt = registro illp: ip ag1, rol1, ag2, rol2: contenido de cadena: tiempo de cadena: int color np = registro modo: npt illoc: UTT modelado ilocuciones como normas sin modalidad (nomod) es un truco formal que usamos para garantizarEsas sub-red se pueden combinar como se explica a continuaciÃ³n. Los arcos se asignan casi directamente. A es un conjunto finito de arcos y N es una funciÃ³n de nodo, de modo que âˆ€a âˆˆ A âˆƒa âˆˆ Ain âˆªAout. N (a) = a. La funciÃ³n de inicializaciÃ³n I se define como i (p) = Î”S (âˆ€s âˆˆ S donde P se obtiene de S usando el mapeo; recuerde que S = IDS, Î”S). Finalmente, la funciÃ³n de color C asigna el color np a cada lugar: c (p) = np (âˆ€p âˆˆ P). No estamos haciendo uso de la funciÃ³n de guardia G. En el trabajo futuro, esta funciÃ³n se puede utilizar para modelar restricciones cuando extendemos la expresividad de nuestro lenguaje de norma.5.2 Propiedades de las estructuras normativas que han definido el mapeo de las estructuras normativas a las redes de Petri de color, ahora observamos las propiedades de los CPN que nos ayudan a comprender la complejidad de la detecciÃ³n de conflictos. Una pregunta que nos gustarÃ­a responder es que, si en un momento dado, una estructura normativa dada estÃ¡ libre de conflictos. Tal instantÃ¡nea de una estructura normativa corresponde a una marca en la CPN mapeada. Def.11. Dado un MI de marcado, esta marca es libre de conflictos si Â¬âˆƒp âˆˆ P. âˆƒnp1, np2 âˆˆ Mi (p) tal que np1.mode = obl y np2.mode = prh y np1.illoc y np2.illoc unify bajo un vÃ¡lidosustituciÃ³n. Otra pregunta interesante serÃ­a si se producirÃ¡ un conflicto a partir de tal instantÃ¡nea del sistema al propagar las posiciones normativas. Para responder a esta pregunta, primero traducimos la instantÃ¡nea de la estructura normativa a la CPN correspondiente y luego ejecutamos la secuencia de marcas y pasos finitos, verificando la libertad de conflicto de cada marca a medida que avanzamos. Def.12. Dado un IM de marcado, una secuencia de ocurrencia finita Si, Si+1, ..., Sn se llama libre de conflictos, si y solo si mi [Si> Mi+1... Mn [Sn> Mn + 1 y MK no tiene conflictos para todos K de tal manera que yo â‰¤ k â‰¤ n + 1. Sin embargo, la pregunta principal que nos gustarÃ­a investigar es si una estructura normativa determinada es conflictiva o no, es decir, si los agentes que promulgan o no pueden lograr conflictos a travÃ©s de sus acciones. Tan pronto como uno incluye la posibilidad de acciones (o enunciados) de agentes autÃ³nomos, uno pierde el determinismo. Habiendo mapeado la estructura normativa a un CPN, ahora agregamos modelos CPN de las interacciones de los agentes. Cada forma de interacciÃ³n del agente (es decir, cada actividad) puede modelarse utilizando CPN a lo largo de las lÃ­neas de costo et al.[5]. Estos CPN no deterministas alimentan tokens en la CPN que modela la estructura normativa. Esto lleva a la introducciÃ³n del no determinismo en la CPN combinada. La mitad inferior de la Figura 3 muestra parte de un modelo CPN de un protocolo de agente donde el arco denotado con 1 representa cierta expresiÃ³n de una ilocuciÃ³n por parte de un agente. La transiciÃ³n objetivo de este arco, no solo mueve un token al siguiente estado de este CPN, sino que tambiÃ©n coloca un token en el lugar correspondiente a la escena normativa apropiada en el modelo CPN de la estructura normativa (a travÃ©s de ARC 2). La transiciÃ³n 3 finalmente podrÃ­a propagar esa ficha en forma de obligaciÃ³n, por ejemplo. Por lo tanto, a partir de un marcado dado, son posibles muchas secuencias de ocurrencia diferentes dependiendo de las acciones de los agentes. Hacemos uso del conjunto de accesibilidad R para definir una situaciÃ³n en la que los agentes no pueden causar conflictos.640 El sexto intl. Conf.en agentes autÃ³nomos y sistemas de mÃºltiples agentes (AAMAS 07) Figura 3: ConstrucciÃ³n de la def. CPN combinado.13. Dada una red n, una marca M es resistente al conflicto si y solo si todas las marcas en R (N, M) no tienen conflictos. Verificar la libertad de conflicto de una marca se puede hacer en el tiempo polinomial verificando todos los lugares de la CPN para fichas en conflicto. La falta de conflicto de una secuencia de ocurrencia en la CPN que representa la estructura normativa tambiÃ©n se puede hacer en el tiempo polinomial ya que esta secuencia es determinista dada una instantÃ¡nea. Si una estructura normativa estÃ¡ diseÃ±ada o no corresponde de forma segura para verificar la resistencia al conflicto de la marca inicial M0. Ahora, verificar la resistencia al conflicto de una marca se convierte en una tarea muy difÃ­cil. Corresponde al problema de accesibilidad en una CPN: Â¿se puede alcanzar un estado o una marca lograda, que contiene un conflicto? Se sabe que este problema de accesibilidad es NP-NP para las redes de Petri ordinarias [22] y dado que las CPN son funcionalmente idÃ©nticas, no podemos esperar verificar la resistencia de conflictos de una estructura normativa fuera de lÃ­nea en un tiempo razonable. Por lo tanto, se necesitan mecanismos distribuidos de tiempo de ejecuciÃ³n para garantizar que una estructura normativa mantenga la consistencia. Presentamos uno de esos mecanismo en la siguiente secciÃ³n.6. GestiÃ³n de estructuras normativas Una vez que se ha detectado un conflicto (como se define en la SecciÃ³n 4), proponemos emplear el unifier para resolver el conflicto. En nuestro ejemplo, si las variables en PRH (informar (A1, R1, A2, R2, P (Y, D), T)) no obtienen los valores especificados en la sustituciÃ³n Ïƒ, entonces no habrÃ¡ un conflicto. Sin embargo, en lugar de calcular el conjunto de complementos de una sustituciÃ³n (que puede ser un conjunto infinito), proponemos anotar la prohibiciÃ³n con el unifier en sÃ­ y usarlo para determinar quÃ© las variables de esa prohibiciÃ³n no pueden ser en futuras unificaciones para evitar unconflicto. Por lo tanto, denotamos prohibiciones anotadas como PRH (Â¯i) Ïƒ, donde Ïƒ = {Ïƒ1 ,..., Ïƒn}, es un conjunto de unificadores. Las normas anotadas3 se interpretan como construcciones deoticas con influencias reducidas, es decir, su efecto (en agentes, roles e ilocuciones) ha estado limitado por el conjunto Ïƒ de los unificadores. Una prohibiciÃ³n puede estar en conflicto con varias obligaciones en una escena normativa dada s = id, Î´ y necesitamos registrar (y posiblemente evitar) todos estos conflictos. Definimos debajo de un algoritmo que garantiza que se agregarÃ¡ una posiciÃ³n normativa a una escena normativa de tal manera que no cause ningÃºn conflicto.3 Aunque proponemos reducir las prohibiciones, se puede usar la misma maquinaria para definir la reducciÃ³n de las obligaciones. Estas diferentes polÃ­ticas dependen de la semÃ¡ntica y requisitos deÃ³nticos previstos de los sistemas abordados. Por ejemplo, alguna masa puede requerir que sus agentes no actÃºen en presencia de conflictos, es decir, la obligaciÃ³n debe reducirse.6.1 ResoluciÃ³n de conflictos Proponemos una forma de grano fino de resolver conflictos normativos a travÃ©s de la unificaciÃ³n. Detectamos la superposiciÃ³n de las influencias de las normas, es decir, cÃ³mo afectan el comportamiento de los agentes preocupados, y reducimos la influencia de la posiciÃ³n normativa, utilizando adecuadamente las anotaciones al verificar si la norma se aplica a las ilocuciones. El algoritmo que se muestra en la Figura 4 muestra cÃ³mo mantenemos un conjunto de normas sin conflictos. Agrega una norma dada n a un estado normativo existente y sin conflicto Î´, obteniendo un nuevo estado normativo resultante Î´ que estÃ¡ libre de conflictos, es decir, sus prohibiciones se anotan con un conjunto de conjuntos de conflictos que indican quÃ© enlaces para variables deben evitarsepara que no se realicen conflictos.algoritmo addnorm (n, Î´) Comience 1 marca de tiempo (n) 2 caso n de 3 por (Â¯i): Î´: = Î´ âˆª {n} 4 prh (i): si n âˆˆ Î´ s.t.conflicto (n, n, Ïƒ) luego Î´: = Î” 5 mÃ¡s Î´: = Î´ âˆª {n} 6 prh (Â¯i): 7 comienza 8 Ïƒ: = âˆ… 9 para cada n âˆˆ Î´ do 10 if conflicto (n,,, n,,N, Ïƒ) Entonces Ïƒ: = Ïƒ âˆª {Ïƒ} 11 Î´: = Î´ âˆª {n Ïƒ} 12 End 13 obl (Â¯i): 14 Comienza 15 Î”1: = âˆ…;Î”2: = âˆ… 16 para cada (n Ïƒ) âˆˆ Î´ do 17 si n = pRH (i) entonces 18 si conflicto (n, n, Ïƒ) entonces Î”1: = Î”1 âˆª {n Ïƒ} 19 mÃ¡s nil 20 mÃ¡s 21 siconflicto (n, n, Ïƒ) luego 22 comienza 23 Î”1: = Î”1 âˆª {n Ïƒ} 24 Î”2: = Î”2 âˆª {n (Ïƒ âˆª {Ïƒ})} 25 End 26 Î´: = (Î” - Î”1) âˆª Î”2âˆª {n} 27 final 28 final caso 29 retorno Î” final Figura 4: Algoritmo para preservar el libertad de conflicto El algoritmo utiliza un caso de estructura para diferenciar las diferentes posibilidades para una norma dada N. La lÃ­nea 3 aborda el caso cuando la norma dada esUn permiso: N simplemente se agrega a Î´. Las lÃ­neas 4-5 abordan el caso cuando intentamos agregar una prohibiciÃ³n de tierra a un estado normativo: si entra en conflicto con alguna obligaciÃ³n, entonces se descarta;De lo contrario, se agrega al estado normativo. Las lÃ­neas 6-12 describen la situaciÃ³n en la que la posiciÃ³n normativa a agregar es una prohibiciÃ³n no inmÃ³vil. En este caso, el algoritmo inicializa Ïƒ a un conjunto y bucles vacÃ­os (lÃ­nea 9-10) a travÃ©s de las normas N en el estado normativo antiguo Î´. Al encontrar uno que entra en conflicto con N, el algoritmo actualiza Ïƒ al agregar el conflicto reciÃ©n encontrado establecido Ïƒ (lÃ­nea 10). Al pasar a travÃ©s de Î´, podemos verificar cualquier conflicto entre la nueva prohibiciÃ³n y las obligaciones existentes, construyendo adecuadamente la anotaciÃ³n Ïƒ que se utilizarÃ¡ al agregar n a Î´ en la lÃ­nea 11. Las lÃ­neas 13-27 describen cÃ³mo se acomoda una nueva obligaciÃ³n para un estado normativo existente. Usamos dos conjuntos temporales inicialmente vacÃ­os, Î”1, Î”2. El algoritmo buce a travÃ©s de Î´ (lÃ­neas 16-25) recogiendo las prohibiciones anotadas n Ïƒ que entran en conflicto con la nueva obligaciÃ³n. Sin embargo, hay dos casos con los que lidiar: el que se encuentra en el sexto intl. Conf.En agentes autÃ³nomos y sistemas de mÃºltiples agentes (AAMAS 07) 641 se encuentra la prohibiciÃ³n (lÃ­nea 17), y su excepciÃ³n, que cubre las prohibiciones no terrestres (lÃ­nea 20). En ambos casos, la prohibiciÃ³n anterior se almacena en Î”1 (lÃ­neas 18 y 23) que luego se eliminarÃ¡n de Î´ (lÃ­nea 26). Sin embargo, en el caso de una prohibiciÃ³n sin reducciÃ³n, el algoritmo actualiza su anotaciÃ³n de conjuntos de conflictos (lÃ­nea 24). El bucle garantiza que se realiza una bÃºsqueda exhaustiva (lineal) a travÃ©s de un estado normativo, verificando si la nueva obligaciÃ³n estÃ¡ en conflicto con cualquier prohibiciÃ³n existente, posiblemente actualizando las anotaciones de estas prohibiciones contradictorias. En la lÃ­nea 26, el algoritmo construye el nuevo Î´ actualizado al eliminar las antiguas prohibiciones almacenadas en Î”1 y agregar las prohibiciones actualizadas almacenadas en Î”2 (si las hay), asÃ­ como la nueva obligaciÃ³n N. Nuestro algoritmo propuesto es correcto en eso, para un dado.PosiciÃ³n normativa N y un estado normativo Î´, proporciona un nuevo estado normativo Î´ en el que todas las prohibiciones tienen anotaciones registrando cÃ³mo unifican con las obligaciones existentes. Sin embargo, las anotaciones pueden estar vacÃ­as: este es el caso cuando tenemos una prohibiciÃ³n terrestre o una prohibiciÃ³n que no unifica/entra en conflicto con ninguna obligaciÃ³n. Los permisos no afectan nuestro algoritmo y se tratan adecuadamente (lÃ­nea 3). Cualquier intento de insertar una prohibiciÃ³n terrestre que entra en conflicto, produce el mismo estado normativo (lÃ­nea 4). Cuando se agrega una nueva obligaciÃ³n, el algoritmo garantiza que se consideren todas las prohibiciones (lÃ­neas 14-27), lo que lleva a la eliminaciÃ³n de prohibiciones de tierra conflictivas o la actualizaciÃ³n de anotaciones de prohibiciones no terrestres. El algoritmo siempre termina: los bucles superan un conjunto finito Î´ y las verificaciones de conflicto y las operaciones establecidas siempre terminan. La complejidad del algoritmo es lineal: el conjunto Î´ solo se examina una vez para cada posible caso de norma a agregar. Al administrar los estados normativos, tambiÃ©n es posible que necesitemos eliminar posiciones normativas. Esto es sencillo: los permisos se pueden eliminar sin ningÃºn problema;Las prohibiciones anotadas tambiÃ©n se pueden eliminar sin mÃ¡s consideraciones;Las obligaciones, sin embargo, requieren cierta limpieza. Cuando se debe eliminar una obligaciÃ³n, debemos verificarla con todas las prohibiciones anotadas para actualizar sus anotaciones. Aplicamos la verificaciÃ³n de conflictos y obtenemos un unificador, luego eliminamos este unifier de la anotaciÃ³n de Prohibiciones. Invocamos el algoritmo de eliminaciÃ³n como removenorm (n, Î´): devuelve un nuevo estado normativo Î´ en el que se ha eliminado N, con posibles alteraciones a otras posiciones normativas como se explica.6.2 AdministraciÃ³n de una estructura normativa La promulgaciÃ³n de una estructura normativa equivale a la ejecuciÃ³n paralela y distribuida de escenas normativas y transiciones normativas. Para fines ilustrativos, en adelante describiremos la interacciÃ³n entre las escenas normativas de pago y entrega y la transiciÃ³n normativa que las une en la mitad superior de la Figura 2. Con este objetivo, considere, por ejemplo, OBL (informar (Jules, Cliente, Rod, ACC, Pay (Cobre, 400, 350), T) âˆˆ Î”payment y que la entrega de servicio contiene PRH (Inform (barra, Wm, Jules, Cliente, entregado(Z, q), t)). Dichos estados indican que el cliente Jules estÃ¡ obligado a pagar Â£ 400 por 350 kg de cobre a la barra contable de acuerdo con la escena normativa de pago, mientras que Rod, asumiendo el papel de Gerente de almacÃ©n esta vez, tiene prohibido entregar algo al cliente Jules de acuerdo con elEntrega escena normativa. Para cada escena normativa, el proceso de promulgaciÃ³n es el siguiente. En primer lugar, procesa su cola de mensajes entrantes que contiene tres tipos de mensajes: expresiones de la actividad a la que estÃ¡ vinculada;y comandos normativos para agregar o eliminar posiciones normativas. Por ejemplo, en nuestro ejemplo, la escena normativa de pago recauda la ilocuciÃ³n i = utt ((informar (Jules, Cliente, Rod, ACC, Pay (Copper, 400, 350), 35)) que se mantiene al cliente Jules en espera de pago por cobre (VÃ­a flecha A en la Figura 2). Las expresiones son de marca de tiempo y posteriormente se agregan al estado normativo. TendrÃ­amos Î”payment = Î”payment âˆª {i}, en nuestro ejemplo. Al recibir comandos normativos para agregar o eliminar una posiciÃ³n normativa, la escena normativa invoca el algoritmo de adiciÃ³n o eliminaciÃ³n correspondiente descrito en la SecciÃ³n 6.1. En segundo lugar, la escena normativa reconoce su cambio de estado al enviar un mensaje de activaciÃ³n a cada transiciÃ³n normativa saliente a la que estÃ¡ conectado. En nuestro ejemplo, la escena normativa de pago estarÃ­a seÃ±alando su cambio de estado a la transiciÃ³n normativa NT. Para las transiciones normativas, el proceso funciona de manera diferente. Debido a que cada transiciÃ³n normativa controla el funcionamiento de una sola regla, al recibir un mensaje de activaciÃ³n, encuesta cada escena normativa entrante para sustituciones por los esquemas de ilocuciÃ³n relevantes en el LHS de su regla. En nuestro ejemplo, NT (que es responsable de la regla descrita en la SecciÃ³n 3.4), encuestarÃ­a la escena normativa de pago (a travÃ©s de Arrow B) por sustituciones. Al recibir respuestas de ellos (en forma de conjuntos de sustituciones junto con sellos de tiempo), tiene que unificar las sustituciones de cada una de estas escenas normativas. Para cada unificaciÃ³n que encuentra, la regla se dispara y, por lo tanto, el comando normativo correspondiente se envÃ­a a la escena normativa de salida. La transiciÃ³n normativa realiza un seguimiento del mensaje de disparo en el que enviÃ³ y de los puestos de tiempo de las posiciones normativas que desencadenaron el disparo. Esto se hace para garantizar que las mismas posiciones normativas en el LHS de una regla solo activen su disparo una vez. En nuestro ejemplo, NT recibirÃ­a Ïƒ = {x/jules, y/rode, z/cobre, q/350} de la escena normativa de pago. Dado que las subestaciones en Ïƒ unifican con la regla NTS, la regla se dispara y el comando normativo agregue (entrega: obl (barra, wm, jules, cliente, entregado (cobre, 350), t)) se envÃ­a a la entrega normativaescena para obligar a Rod a entregar al cliente Jules 350 kg de cobre. DespuÃ©s de eso, la escena normativa de entrega invocarÃ­a el algoritmo AddNorm de la Figura 4 con Î”Delivery y N = OBL (Rod, Wm, Jules, Cliente, entregado (cobre, 350)) como argumentos.7. Trabajo y conclusiones relacionados Nuestras contribuciones en este documento son triple. En primer lugar, presentamos un enfoque para la gestiÃ³n y el razonamiento sobre las normas de manera distribuida. Hasta donde sabemos, hay poco trabajo publicado en esta direcciÃ³n. En [8, 21], se presentan dos idiomas para la aplicaciÃ³n distribuida de las normas en MAS. Sin embargo, en ambos trabajos, cada agente tiene una interfaz de mensajes local que reenvÃ­a mensajes legales de acuerdo con un conjunto de normas. Dado que estas interfaces son locales para cada agente, las normas solo se pueden expresar en tÃ©rminos de acciones de ese agente. Esta es una desventaja grave, p.Cuando uno necesita activar una obligaciÃ³n con un agente debido a un cierto mensaje de otro. La segunda contribuciÃ³n es la propuesta de una estructura normativa. La nociÃ³n es fructÃ­fera porque permite la separaciÃ³n de preocupaciones normativas y de procedimiento. La estructura normativa que proponemos hace evidente la similitud entre la propagaciÃ³n de posiciones normativas y la propagaciÃ³n 642 la sexta intl. Conf.en agentes autÃ³nomos y sistemas de mÃºltiples agentes (AAMAS 07) de tokens en redes de Petri de color. Esa similitud sugiere fÃ¡cilmente un mapeo entre los dos, y da motivos a un tratamiento analÃ­tico conveniente de la estructura normativa, en general, y la complejidad de la detecciÃ³n de conflictos, en particular. La idea de modelar las interacciones (en forma de conversaciones) a travÃ©s de Petri Nets se ha investigado en [18], donde el medio de interacciÃ³n y los agentes individuales se modelan como sub-redes de CPN que posteriormente se combinan para el anÃ¡lisis. En [5], las conversaciones se diseÃ±an y analizan primero a nivel de CPN y luego se traducen en protocolos. Lin et al.[20] Mapa de esquemas de conversaciÃ³n a CPNS. Hasta donde sabemos, el uso de esta representaciÃ³n en el apoyo de la detecciÃ³n de conflictos en MAS regulado no se ha informado en otra parte. Finalmente, presentamos un mecanismo distribuido para resolver conflictos normativos. Sartor [25] trata los conflictos normativos desde el punto de vista de la teorÃ­a legal y sugiere una forma de ordenar las normas involucradas. Su idea se implementa en [12] pero requiere un recurso central para el mantenimiento de las normas. El enfoque de la detecciÃ³n y resoluciÃ³n de conflictos es una adaptaciÃ³n y extensiÃ³n del trabajo en grÃ¡ficos de instanciaciÃ³n reportados en [17] y un algoritmo relacionado en [27]. El algoritmo presentado en el documento actual se puede utilizar para administrar estados normativos distribuidos: las escenas normativas que ocurren en paralelo tienen un estado normativo asociado Î´ al que el algoritmo se aplica de forma independiente cada vez que se introducirÃ¡ una nueva norma. Estas tres contribuciones que presentamos en este documento abren muchas posibilidades para el trabajo futuro. Debemos mencionar primero, que, como estrategia amplia, estamos trabajando en una generalizaciÃ³n de la nociÃ³n de estructura normativa para que funcione con diferentes modelos de coordinaciÃ³n, con contenido deÃ³ntico mÃ¡s rico y ademÃ¡s de diferentes realizaciones computacionales de MAS reguladas. Como primer paso en esta direcciÃ³n, estamos aprovechando el desacoplamiento entre los protocolos de interacciÃ³n y la orientaciÃ³n normativa declarativa que la estructura normativa pone a disposiciÃ³n, para proporcionar una capa normativa para las instituciones electrÃ³nicas (como se define en [1]). Esperamos que dicho acoplamiento doten a las instituciones electrÃ³nicas con un entorno normativo mÃ¡s flexible y mÃ¡s expresivo. AdemÃ¡s, queremos extender nuestro modelo a lo largo de varias direcciones: (1) para manejar la negaciÃ³n y las limitaciones como parte del lenguaje de la norma, y en particular la nociÃ³n de tiempo;(2) Para acomodar mÃºltiples autoridades de normas jerÃ¡rquicas basadas en roles, en la lÃ­nea de Cholvy y Cuppens [3] y las relaciones de poder como lo sugieren Carabelea et al.[2];(3) Capturar en el algoritmo de resoluciÃ³n de conflictos diferentes semÃ¡nticas relacionadas con las nociones deoÃ­picas al apoyar diferentes axiomaciones (por ejemplo, fuerza relativa de prohibiciÃ³n versus obligaciÃ³n, nociones deÃ³nticas predeterminadas, inconsistencias deÃ³nticas). En el lado teÃ³rico, tenemos la intenciÃ³n de utilizar tÃ©cnicas de anÃ¡lisis de CPN para caracterizar las clases de CPN (por ejemplo, acÃ­clico, simÃ©trico, etc.) correspondientes a familias de estructuras normativas que son susceptibles a la detecciÃ³n de conflictos de la lÃ­nea acertable. La combinaciÃ³n de estas tÃ©cnicas junto con nuestros mecanismos de resoluciÃ³n de conflictos en lÃ­nea estÃ¡ destinada a dotar a los diseÃ±adores de MAS con la capacidad de incorporar las normas en sus sistemas de manera principalmente.8. Referencias [1] J. L. Arcos, M. Esteva, P. Noriega, J. A. RodrÂ´Ä±guez y C. Sierra. IngenierÃ­a de entornos abiertos con instituciones electrÃ³nicas. Revista sobre aplicaciones de ingenierÃ­a de inteligencia artificial, 18 (2): 191-204, 2005. [2] C. carabelea, O. Boissier y C. Castelfranchi. Usar el poder social para permitir que los agentes razonen ser parte de un grupo. En 5th Internat. Taller, ESAW 2004, pÃ¡ginas 166-177, 2004. [3] L. Cholvy y F. Cuppens. Resolver conflictos normativos fusionando roles. En la Quinta Conferencia Internacional sobre Inteligencia y Derecho Artificial, Washington, EE. UU., 1995. [4] S. Christensen y T. B. Haagh. Design CPN - DescripciÃ³n general de la sintaxis CPN ML. Informe tÃ©cnico, Universidad de Aarhus, 1996. [5] R. S. Costo, Y. Chen, T. W. Finin, Y. Labrou e Y. Peng. Uso de redes de Petri de color para modelado de conversaciÃ³n. En temas en la comunicaciÃ³n de agentes, pÃ¡ginas 178-192, Londres, Reino Unido, 2000. [6] F. Dignum. Agentes autÃ³nomos con normas. INTELIGENCIA ARTIFICAL Y LEY, 7 (1): 69-79, 1999. [7] A. Elhag, J. Breuker y P. Brouwer. Sobre el anÃ¡lisis formal de conflictos normativos. InformaciÃ³n y comunicaciones. TecnologÃ­a Law, 9 (3): 207-217, octubre de 2000. [8] M. Esteva, W. Vasconcelos, C. Sierra y J. A. RodrÂ´Ä±guez-Aguilar. Consistencia de la norma en instituciones electrÃ³nicas.Volumen 3171 (LNAi), pÃ¡ginas 494-505. Springer-Verlag, 2004. [9] M. ajuste. LÃ³gica de primer orden y prueba de teorema automatizado. Springer-Verlag, Nueva York, EE. UU., 1990. [10] N. Fornara, F. Vigan`o y M. Colombetti. Un enfoque impulsado por el evento a las normas en las instituciones artificiales. En el taller de AAMAS05: agentes, normas e instituciones para sistemas multiagentes regulados (ANI@REM), Utrecht, 2005. [11] D. Gaertner, P. Noriega y C. Sierra. Extendiendo la arquitectura BDI con compromisos. En Actas de la 9Âª Conferencia Internacional de la AsociaciÃ³n Catalana de Inteligencia Artificial, 2006. [12] A. GarcÂ´Ä±a-Camino, P. Noriega y J.-A. RodrÂ´Ä±guez-Aguilar. Un algoritmo para la resoluciÃ³n de conflictos en actividades compuestas reguladas. En 7th Int.Workshop-Esaw 06, 2006. [13] A. GarcÂ´Ä±a-Camino, J.-A. RodrÂ´Ä±guez-Aguilar, C. Sierra y W. Vasconcelos. Una arquitectura distribuida para las sociedades de agentes conscientes de normas. En Dalt III, volumen 3904 (LNAi), pÃ¡ginas 89-105. Springer, 2006. [14] F. Giunchiglia y L. Serafini. LÃ³gicas jerÃ¡rquicas de varios idiomas o: cÃ³mo podemos hacerlo sin lÃ³gicas modales. Inteligencia Artificial, 65 (1): 29-70, 1994. [15] J. Habermas. La teorÃ­a de la acciÃ³n de la comunicaciÃ³n, el volumen uno, la razÃ³n y la racionalizaciÃ³n de la sociedad. Beacon Press, 1984. [16] K. Jensen. Redes de Petri de color: conceptos bÃ¡sicos, mÃ©todos de anÃ¡lisis y usos prÃ¡cticos (Volumen 1). Springer, 1997. [17] M. Kollingbaum y T. Norman. Estrategias para resolver el conflicto de normas en el razonamiento prÃ¡ctico. En la coordinaciÃ³n del taller de ECAI en las sociedades de agentes emergentes 2004, 2004. [18] J.-L.Koning, G. Francois e Y. DeMazeau. FormalizaciÃ³n y pre-validaciÃ³n para protocolos de interacciÃ³n en un sistema de agentes mÃºltiples. En ECAI, pÃ¡ginas 298-307, 1998. [19] B. Kramer y J. Mylopoulos. RepresentaciÃ³n del conocimiento. En S. C. Shapiro, editor, Enciclopedia de Inteligencia Artificial, Volumen 1, pÃ¡ginas 743-759. John Wiley & Sons, 1992. [20] F. Lin, D. H. Norrie, W. Shen y R. Kremer. Un enfoque basado en esquemas para especificar polÃ­ticas de conversaciÃ³n. En temas en la comunicaciÃ³n de agentes, pÃ¡ginas 193-204, 2000. [21] N. Minsky. InteracciÃ³n de la ley regida (LGI): una coordinaciÃ³n distribuida y un mecanismo de control (una introducciÃ³n y un manual de referencia). Informe tÃ©cnico, Universidad de Rutgers, 2005. [22] T. Murata. Petri Nets: propiedades, anÃ¡lisis y aplicaciones. Actas del IEEE, 77 (4): 541-580, 1989. [23] S. Parsons, C. Sierra y N. Jennings. Agentes que razonan y negocian discutiendo. Journal of Logic and Computation, 8 (3): 261-292, 1998. [24] A. ricci y M. viroli. Artifactos de coordinaciÃ³n: una abstracciÃ³n unificadora para la coordinaciÃ³n mediada por el entorno de ingenierÃ­a en MAS. Informatica, 29: 433-443, 2005. [25] G. Sartor. Conflictos normativos en el razonamiento legal. Inteligencia y derecho artificial, 1 (2-3): 209-235, junio de 1992. [26] M. Sergot. Una teorÃ­a computacional de las posiciones normativas. ACM Trans. ComputaciÃ³n. Logic, 2 (4): 581-622, 2001. [27] W. W. Vasconcelos, M. Kollingbaum y T. Norman. ResoluciÃ³n de conflictos e inconsistencia en organizaciones virtuales reguladas por normas. En Actas de Aamas 07, Hawai, EE. UU., 2007. Ifaamas.[28] G. H. von Wright. Norma y acciÃ³n: una consulta lÃ³gica. Routledge y Kegan Paul, Londres, 1963. [29] M. Wooldridge. Una introducciÃ³n a los sistemas multiagentes. John Wiley & Sons, Chichester, Reino Unido, febrero de 2002. El sexto intl. Conf.en agentes autÃ³nomos y sistemas de mÃºltiples agentes (AAMAS 07) 643",
    "original_sentences": [
        "Distributed Norm Management in Regulated Multi-Agent Systems âˆ— Dorian Gaertner Dept.",
        "of Computing, Imperial College London, London SW7 2AZ, United Kingdom dg00@doc.ic.ac.uk Andres Garcia-Camino, Pablo Noriega, J.-A.",
        "Rodriguez-Aguilar IIIA-CSIC, 08193 Bellaterra, Spain {andres,pablo,jar}@iiia.csic.es Wamberto Vasconcelos Dept. of Computing Science, University of Aberdeen, Aberdeen AB24 3UE, United Kingdom wvasconcelos@acm.org ABSTRACT Norms are widely recognised as a means of coordinating multi-agent systems.",
        "The distributed management of norms is a challenging issue and we observe a lack of truly distributed computational realisations of normative models.",
        "In order to regulate the behaviour of autonomous agents that take part in multiple, related activities, we propose a normative model, the Normative Structure (NS), an artifact that is based on the propagation of normative positions (obligations, prohibitions, permissions), as consequences of agents actions.",
        "Within a NS, conflicts may arise due to the dynamic nature of the MAS and the concurrency of agents actions.",
        "However, ensuring conflict-freedom of a NS at design time is computationally intractable.",
        "We show this by formalising the notion of conflict, providing a mapping of NSs into Coloured Petri Nets and borrowing well-known theoretical results from that field.",
        "Since online conflict resolution is required, we present a tractable algorithm to be employed distributedly.",
        "We then demonstrate that this algorithm is paramount for the distributed enactment of a NS.",
        "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Languages and structures General Terms Algorithms, Design, Theory 1.",
        "INTRODUCTION A fundamental feature of open, regulated multi-agent systems in which autonomous agents interact, is that participating agents are meant to comply with the conventions of the system.",
        "Norms can be used to model such conventions and hence as a means to regulate the observable behaviour of agents [6, 29].",
        "There are many contributions on the subject of norms from sociologists, philosophers and logicians (e.g., [15, 28]).",
        "However, there are very few proposals for computational realisations of normative models - the way norms can be integrated in the design and execution of MASs.",
        "The few that exist (e.g. [10, 13, 24]), operate in a centralised manner which creates bottlenecks and single points-of-failure.",
        "To our knowledge, no proposal truly supports the distributed enactment of normative environments.",
        "In our paper we approach that problem and propose means to handle conflicting commitments in open, regulated, multiagent systems in a distributed manner.",
        "The type of regulated MAS we envisage consists of multiple, concurrent, related activities where agents interact.",
        "Each agent may concurrently participate in several activities, and change from one activity to another.",
        "An agents actions within an activity may have consequences in the form of normative positions (i.e. obligations, permissions, and prohibitions) [26] that may constrain its future behaviour.",
        "For instance, a buyer agent who runs out of credit may be forbidden to make further offers, or a seller agent is obliged to deliver after closing a deal.",
        "We assume that agents may choose not to fulfill all their obligations and hence may be sanctioned by the MAS.",
        "Notice that, when activities are distributed, normative positions must flow from the activities in which they are generated to those in which they take effect.",
        "For instance, the sellers obligation above must flow (or be propagated) from a negotiation activity to a delivery activity.",
        "Since in an open, regulated MAS one cannot embed normative aspects into the agents design, we adopt the view that the MAS should be supplemented with a separate set of norms that further regulates the behaviour of participating agents.",
        "In order to model the separation of concerns between the coordination level (agents interactions) and the normative level (propagation of normative positions), we propose an artifact called the Normative Structure (NS).",
        "Within a NS conflicts may arise due to the dynamic nature of the MAS and the concurrency of agents actions.",
        "For instance, an agent may be obliged and prohibited to do the 636 978-81-904262-7-5 (RPS) c 2007 IFAAMAS very same action in an activity.",
        "Since the regulation of a MAS entails that participating agents need to be aware of the validity of those actions that take place within it, such conflicts ought to be identified and possibly resolved if a claim of validity is needed for an agent to engage in an action or be sanctioned.",
        "However, ensuring conflict-freedom of a NS at design time is computationally intractable.",
        "We show this by formalising the notion of conflict, providing a mapping of NSs into Coloured Petri Nets (CPNs) and borrowing well-known theoretical results from the field of CPNs.",
        "We believe that online conflict detection and resolution is required.",
        "Hence, we present a tractable algorithm for conflict resolution.",
        "This algorithm is paramount for the distributed enactment of a NS.",
        "The paper is organised as follows.",
        "In Section 2 we detail a scenario to serve as an example throughout the paper.",
        "Next, in Section 3 we formally define the normative structure artifact.",
        "Further on, in Section 4 we formalise the notion of conflict to subsequently analyse the complexity of conflict detection in terms of CPNs in Section 5.",
        "Section 6 describes the computational management of NSs by describing their enactment and presenting an algorithm for conflict resolution.",
        "Finally, we comment on related work, draw conclusions and report on future work in Section 7. 2.",
        "SCENARIO We use a supply-chain scenario in which companies and individuals come together at an online marketplace to conduct business.",
        "The overall transaction procedure may be organised as six distributed activities, represented as nodes in the diagram in Figure 1.",
        "They involve different participants whose behaviour is coordinated through protocols.",
        "In this scenario agents can play one of four roles: marExit Registration Payment Delivery Negotiation Coordination Model Contract Figure 1: Activity Structure of the Scenario ketplace accountant (acc), client, supplier (supp) and warehouse managers (wm).",
        "The arrows connecting the activities represent how agents can move from one activity to another.",
        "After registering at the marketplace, clients and suppliers get together in an activity where they negotiate the terms of their transaction, i.e. prices, amounts of goods to be delivered, deadlines and other details.",
        "In the contract activity, the order becomes established and an invoice is prepared.",
        "The client will then participate in a payment activity, verifying his credit-worthiness and instructing his bank to transfer the correct amount of money.",
        "The supplier in the meantime will arrange for the goods to be delivered (e.g. via a warehouse manager) in the delivery activity.",
        "Finally, agents can leave the marketplace conforming to a predetermined exit protocol.",
        "The marketplace accountant participates in most of the activities as a trusted provider of auditing tools.",
        "In the rest of the paper we shall build on this scenario to exemplify the notion of normative structure and to illustrate our approach to conflict detection and resolution in a distributed setting. 3.",
        "NORMATIVE STRUCTURE In MASs agents interact according to protocols which naturally are distributed.",
        "We advocate that actions in one such protocol may have an effect on the enactment of other protocols.",
        "Certain actions can become prohibited or obligatory, for example.",
        "We take normative positions to be obligations, prohibitions and permissions akin to work described in [26].",
        "The intention of adding or removing a normative position we call normative command.",
        "Occurrences of normative positions in one protocol may also have consequences for other protocols1 .",
        "In order to define our norm language and specify how normative positions are propagated, we have been inspired by multi-context systems [14].",
        "These systems allow the structuring of knowledge into distinct formal theories and the definition of relationships between them.",
        "The relationships are expressed as bridge rules - deducibility of formulae in some contexts leads to the deduction of other formulae in other contexts.",
        "Recently, these systems have been successfully used to define agent architectures [11, 23].",
        "The metaphor translates to our current work as follows: the utterance of illocutions and/or the existence of normative positions in some normative scenes leads to the deduction of normative positions in other normative scenes.",
        "We are concerned with the propagation and distribution of normative positions within a network of distributed, normative scenes as a consequence of agents actions.",
        "We take normative scenes to be sets of normative positions and utterances that are associated with an underlying interaction protocol corresponding to an activity.",
        "In this section, we first present a simple language capturing these aspects and formally introduce the notions of normative scene, normative transition rule and normative structure.",
        "We give the intended semantics of these rules and show how to control a MAS via norms in an example. 3.1 Basic Concepts The building blocks of our language are terms and atomic formulae: Def. 1.",
        "A term, denoted as t, is (i) any constant expressed using lowercase (with or without subscripts), e.g. a, b0, c or (ii) any variable expressed using uppercase (with or without subscripts), e.g.",
        "X, Y, Zb or (iii) any function f(t1, . . . , tn), where f is an n-ary function symbol and t1, .., tn are terms.",
        "Some examples of terms and functions are Credit, price or offer(bible, 30) being respectively a variable, a constant and a function.",
        "We will be making use of identifiers throughout the paper, which are constant terms and also need the following definition: Def. 2.",
        "An atomic formula is any construct p(t1, . . . , tn), where p is an n-ary predicate symbol and t1, . . . , tn are terms.",
        "The set of all atomic formulae is denoted as Î”.",
        "We focus on an expressive class of MASs in which interaction is carried out by means of illocutionary speech acts exchanged among participating agents: Def. 3.",
        "Illocutions I are ground atomic formulae which have the form p(ag, r, ag , r , Î´, t) where p is an element of 1 Here, we abstract from protocols and refer to them generically as activities.",
        "The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 637 a set of illocutionary particles (e.g. inform, request, offer); ag, ag are agent identifiers; r, r are role identifiers; Î´, an arbitrary ground term, is the content of the message, built from a shared content language; t âˆˆ N is a time stamp.",
        "The intuitive meaning of p(ag, r, ag , r , m, t) is that agent ag playing role r sent message m to agent ag playing role r at time t. An example of an illocution is inform(ag4, supp, ag3, client, offer(wire, 12), 10).",
        "Sometimes it is useful to refer to illocutions that are not fully grounded, that is, those that may contain uninstantiated (free) variables.",
        "In the description of a protocol, for instance, the precise values of the message exchanged can be left unspecified.",
        "During the enactment of the protocol agents will produce the actual values which will give rise to a ground illocution.",
        "We can thus define illocution schemata: Def. 4.",
        "An illocution schema Â¯I is any atomic formula p(ag, r, ag , r , Î´, t) in which some of the terms may either be variables or may contain variables. 3.2 Formal Definition of the Notion of NS We first define normative scenes as follows: Def. 5.",
        "A normative scene is a tuple s = ids, Î”s where ids is a scene identifier and Î”s is the set of atomic formulae Î´ (i.e. utterances and normative positions) that hold in s. We will also refer to Î”s as the state of normative scene s. For instance, a snapshot of the state of the delivery normative scene of our scenario could be represented as: Î”s = 8 < : utt(request(sean, client, kev, wm, receive(wire, 200), 20)), utt(accept(kev, wm, sean, client, receive(wire, 200), 30)), obl(inform(kev, wm, sean, client, delivered(wire, 200), 30)) 9 = ; That is, agent Sean taking up the client role has requested agent Kev (taking up the warehouse manager role wm) to receive 200kg of wire, and agent Kev is obliged to deliver 200kg of wire to Sean since he accepted the request.",
        "Note that the state of a normative scene Î”s evolves over time.",
        "These normative scenes are connected to one another via normative transitions that specify how utterances and normative positions in one scene affect other normative scenes.",
        "As mentioned above, activities are not independent since illocutions uttered in some of them may have an effect on other ones.",
        "Normative transition rules define the conditions under which a normative command is generated.",
        "These conditions are either utterances or normative positions associated with a given protocol (denoted e.g. activity : utterance) which yield a normative command, i.e. the addition or removal of another normative position, possibly related to a different activity.",
        "Our transition rules are thus defined: Def. 6.",
        "A normative transition rule R is of the form: R ::= V C V ::= ids : D | V, V D ::= N | utt(Â¯I) N ::= per(Â¯I) | prh(Â¯I) | obl(Â¯I) C ::= add(ids : N) | remove(ids : N) where Â¯I is an illocution schema, N is a normative position (i.e. permission, prohibition or obligation), ids is an identifier for activity s and C is a normative command.",
        "We endow our language with the usual semantics of rulebased languages [19].",
        "Rules map an existing normative structure to a new normative structure where only the state of the normative scenes change.",
        "In the definitions below we rely on the standard concept of substitution [9].",
        "Def. 7.",
        "A normative transition is a tuple b = idb, rb where idb is an identifier and rb is a normative transition rule.",
        "We are proposing to extend the notion of MAS, regulated by protocols, with an extra layer consisting of normative scenes and normative transitions.",
        "This layer is represented as a bi-partite graph that we term normative structure.",
        "A normative structure relates normative scenes and normative transitions specifying which normative positions are to be generated or removed in which normative scenes.",
        "Def. 8.",
        "A normative structure is a labelled bi-partite graph NS = Nodes, Edges, Lin , Lout .",
        "Nodes is a set SâˆªB where S is a set of normative scenes and B is a set of normative transitions.",
        "Edges is a set Ain âˆª Aout where Ain âŠ† S Ã— B is a set of input arcs labelled with an atomic formula using the labelling function Lin : Ain â†’ D; and Aout âŠ† B Ã— S is a set of output arcs labelled with a normative position using the labelling function Lout : Aout â†’ N. The following must hold: 1.",
        "Each atomic formula appearing in the LHS of a rule rb must be of the form (ids : D) where s âˆˆ S and D âˆˆ Î” and âˆƒain âˆˆ Ain such that ain = (s, b) and Lin (ain ) = D. 2.",
        "The atomic formula appearing in the RHS of a rule rb must be of the form add(ids : N) or remove(ids : N) where s âˆˆ S and âˆƒaout âˆˆ Aout such that aout = (b, s) and Lout (aout ) = N. 3. âˆ€a âˆˆ Ain such that a = (s, b) and b = idb, rb and Lin (a) = D then (ids:D) must occur in the LHS of rb. 4. âˆ€a âˆˆ Aout such that a = (b, s) and b = idb, rb and Lout (a) = N then add(ids : N) or remove(ids : N) must occur in the RHS of rb.",
        "The first two points ensure that every atomic formulae on the LHS of a normative transition rule labels an arc entering the appropriate normative transition in the normative structure, and that the atomic formula on the RHS labels the corresponding outgoing arc.",
        "Points three and four ensure that labels from all incoming arcs are used in the LHS of the normative transition rule that these arcs enter into, and that the labels from all outgoing arcs are used in the RHS of the normative transition rule that these arcs leave. 3.3 Intended Semantics The formal semantics will be defined via a mapping to Coloured Petri Nets in Section 5.1.",
        "Here we start defining the intended semantics of normative transition rules by describing how a rule changes a normative scene of an existing normative structure yielding a new normative structure.",
        "Each rule is triggered once for each substitution that unifies the left-hand side V of the rule with the state of the corresponding normative scenes.",
        "An atomic formula (i.e. an utterance or a normative position) holds iff it is unifiable with an utterance or normative position that belongs to the state of the corresponding normative scene.",
        "Every time a rule is triggered, the normative command specified on the right-hand side of that rule is carried out, intending to add or remove a normative position from the state of the corresponding normative scene.",
        "However, addition is not unconditional as conflicts may arise.",
        "This topic will be treated in Sections 4 and 6.1. 638 The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.4 Example In our running example we have the following exemplary normative transition rule: â€ž payment : obl(inform(X, client, Y, acc, pay(Z, P, Q), T )), payment : utt(inform(X, client, Y, acc, pay(Z, P, Q), T )) Â« delivery : add(obl(inform(Y, wm, X, client, delivered(Z, Q), T ))) That is, during the payment activity, an obligation on client X to inform accountant Y about the payment P of item Z at time T and the corresponding utterance which fulfills this obligation allows the flow of a norm to the delivery activity.",
        "The norm is an obligation on agent Y (this time taking up the role of the warehouse manager wm) to send a message to client X that item Z has been delivered.",
        "We show in Figure 2 a diagrammatic representation of how activities and a normative structure relate: Payment Delivery Contract Normative Level Exit Registration Payment Delivery Negotiation Coordination Level Contract nt Figure 2: Activities and Normative Structure As illocutions are uttered during activities, normative positions arise.",
        "Utterances and normative positions are combined in transition rules, causing the flow of normative positions between normative scenes.",
        "The connection between the two levels is described in Section 6.2. 4.",
        "CONFLICT DEFINITION The terms deontic conflict and deontic inconsistency have been used interchangeably in the literature.",
        "However, in this paper we adopt the view of [7] in which the authors suggest that a deontic inconsistency arises when an action is simultaneously permitted and prohibited - since a permission may not be acted upon, no real conflict occurs.",
        "The situations when an action is simultaneously obliged and prohibited are, however, deontic conflicts, as both obligations and prohibitions influence behaviours in a conflicting fashion.",
        "The content of normative positions in this paper are illocutions.",
        "Therefore, a normative conflict arises when an illocution is simultaneously obliged and prohibited.",
        "We propose to use the standard notion of unification [9] to detect when a prohibition and a permission overlap.",
        "For instance, an obligation obl(inform(A1, R1, A2, R2, p(c, X), T)) and a prohibition prh(inform(a1, r1, a2, r2, p(Y, d), T )) are in conflict as they unify under Ïƒ = {A1/a1, R1/r1, A2/a2, R2/r2, Y/c, X/d, T/T }).",
        "We formally capture this notion: Def. 9.",
        "A (deontic) conflict arises between two normative positions N and N under a substitution Ïƒ, denoted as conflict(N, N , Ïƒ), if and only if N = prh(Â¯I), N = obl(Â¯I ) and unify(Â¯I,Â¯I , Ïƒ).",
        "That is, a prohibition and an obligation are in conflict if, and only if, their illocutions unify under Ïƒ.",
        "The substitution Ïƒ, called here the conflict set, unifies the agents, roles and atomic formulae.",
        "We assume that unify is a suitable implementation of a unification algorithm which i) always terminates (possibly failing, if a unifier cannot be found); ii) is correct; and iii) has linear computational complexity.",
        "Inconsistencies caused by the same illocution being simultaneously permitted and prohibited can be formalised similarly.",
        "In this paper we focus on prohibition/obligation conflicts, but the computational machinery introduced in Section 6.1 can equally be used to detect prohibition/permission inconsistencies, if we substitute modality obl for per. 5.",
        "FORMALISING CONFLICT-FREEDOM In this section we introduce some background knowledge on CPNs assuming a basic understanding of ordinary Petri Nets.",
        "For technical details we refer the reader to [16].",
        "We then map NSs to CPNs and analyse their properties.",
        "CPNs combine the strength of Petri nets with the strength of functional programming languages.",
        "On the one hand, Petri nets provide the primitives for the description of the synchronisation of concurrent processes.",
        "As noticed in [16], CPNs have a semantics which builds upon true concurrency, instead of interleaving.",
        "In our opinion, a true-concurrency semantics is easier to work with because it is the way we envisage the connection between the coordination level and the normative level of a multi-agent system to be.",
        "On the other hand, the functional programming languages used by CPNs provide the primitives for the definition of data types and the manipulation of their data values.",
        "Thus, we can readily translate expressions of a normative structure.",
        "Last but not least, CPNs have a well-defined semantics which unambiguously defines the behaviour of each CPN.",
        "Furthermore, CPNs have a large number of formal analysis methods and tools by which properties of CPNs can be proved.",
        "Summing up, CPNs provide us with all the necessary features to formally reason about normative structures given that an adequate mapping is provided.",
        "In accordance with Petri nets, the states of a CPN are represented by means of places.",
        "But unlike Petri Nets, each place has an associated data type determining the kind of data which the place may contain.",
        "A state of a CPN is called a marking.",
        "It consists of a number of tokens positioned on the individual places.",
        "Each token carries a data value which has the type of the corresponding place.",
        "In general, a place may contain two or more tokens with the same data value.",
        "Thus, a marking of a CPN is a function which maps each place into a multi-set2 of tokens of the correct type.",
        "One often refers to the token values as token colours and one also refers to the data types as colour sets.",
        "The types of a CPN can be arbitrarily complex.",
        "Actions in a CPN are represented by means of transitions.",
        "An incoming arc into a transition from a place indicates that the transition may remove tokens from the corresponding place while an outgoing arc indicates that the transition may add tokens.",
        "The exact number of tokens and their data values are determined by the arc expressions, which are encoded using the programming language chosen for the CPN.",
        "A transition is enabled in a CPN if and only if all the 2 A multi-set (or bag) is an extension to the notion of set, allowing the possibility of multiple appearances of the same element.",
        "The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 639 variables in the expressions of its incoming arcs are bound to some value(s) (each one of these bindings is referred to as a binding element).",
        "If so, the transition may occur by removing tokens from its input places and adding tokens to its output places.",
        "In addition to the arc expressions, it is possible to attach a boolean guard expression (with variables) to each transition.",
        "Putting all the elements above together we obtain a formal definition of CPN that shall be employed further ahead for mapping purposes.",
        "Def. 10.",
        "A CPN is a tuple Î£, P, T, A, N, C, G, E, I where: (i) Î£ is a finite set of non-empty types, also called colour sets; (ii) P is a finite set of places; (iii) T is a finite set of transitions; (iv) A is a finite set of arcs; (v) N is a node function defined from A into P Ã— T âˆª T Ã— P; (vi) C is a colour function from P into Î£; (vii) G is a guard function from T into expressions; (viii) E is an arc expression function from A into expressions; (ix) I is an initialisation function from P into closed expressions; Notice that the informal explanation of the enabling and occurrence rules given above provides the foundations to understand the behaviour of a CPN.",
        "In accordance with ordinary Petri nets, the concurrent behaviour of a CPN is based on the notion of step.",
        "Formally, a step is a non-empty and finite multi-set over the set of all binding elements.",
        "Let step S be enabled in a marking M. Then, S may occur, changing the marking M to M .",
        "Moreover, we say that marking M is directly reachable from marking M by the occurrence of step S, and we denote it by M[S > M .",
        "A finite occurrence sequence is a finite sequence of steps and markings: M1[S1 > M2 . . .",
        "Mn[Sn > Mn+1 such that n âˆˆ N and Mi[Si > Mi+1 âˆ€i âˆˆ {1, . . . , n}.",
        "The set of all possible markings reachable for a net Net from a marking M is called its reachability set, and is denoted as R(Net, M). 5.1 Mapping to Coloured Petri Nets Our normative structure is a labelled bi-partite graph.",
        "The same is true for a Coloured Petri Net.",
        "We are presenting a mapping f from one to the other, in order to provide semantics for the normative structure and prove properties about it by using well-known theoretical results from work on CPNs.",
        "The mapping f makes use of correspondences between normative scenes and CPN places, normative transitions and CPN transitions and finally, between arc labels and CPN arc expressions.",
        "S â†’ P B â†’ T Lin âˆª Lout â†’ E The set of types is the singleton set containing the colour NP (i.e.",
        "Î£ = {NP}).",
        "This complex type is structured as follows (we use CPN-ML [4] syntax): color NPT = with Obl | Per | Prh | NoMod color IP = with inform | declare | offer color UTT = record illp : IP ag1, role1, ag2, role2 : string content: string time : int color NP = record mode : NPT illoc : UTT Modelling illocutions as norms without modality (NoMod) is a formal trick we use to ensure that sub-nets can be combined as explained below.",
        "Arcs are mapped almost directly.",
        "A is a finite set of arcs and N is a node function, such that âˆ€a âˆˆ A âˆƒa âˆˆ Ain âˆªAout .",
        "N(a) = a .",
        "The initialisation function I is defined as I(p) = Î”s (âˆ€s âˆˆ S where p is obtained from s using the mapping; remember that s = ids, Î”s ).",
        "Finally, the colour function C assigns the colour NP to every place: C(p) = NP (âˆ€p âˆˆ P).",
        "We are not making use of the guard function G. In future work, this function can be used to model constraints when we extend the expressiveness of our norm language. 5.2 Properties of Normative Structures Having defined the mapping from normative structures to Coloured Petri Nets, we now look at properties of CPNs that help us understand the complexity of conflict detection.",
        "One question we would like to answer is, whether at a given point in time, a given normative structure is conflict-free.",
        "Such a snapshot of a normative structure corresponds to a marking in the mapped CPN.",
        "Def. 11.",
        "Given a marking Mi, this marking is conflictfree if Â¬âˆƒp âˆˆ P. âˆƒnp1, np2 âˆˆ Mi(p) such that np1.mode = Obl and np2.mode = Prh and np1.illoc and np2.illoc unify under a valid substitution.",
        "Another interesting question would be, whether a conflict will occur from such a snapshot of the system by propagating the normative positions.",
        "In order to answer this question, we first translate the snapshot of the normative structure to the corresponding CPN and then execute the finite occurence sequence of markings and steps, verifying the conflict-freedom of each marking as we go along.",
        "Def. 12.",
        "Given a marking Mi, a finite occurrence sequence Si, Si+1, ..., Sn is called conflict-free, if and only if Mi[Si > Mi+1 . . .",
        "Mn[Sn > Mn+1 and Mk is conflict-free for all k such that i â‰¤ k â‰¤ n + 1.",
        "However, the main question we would like to investigate, is whether or not a given normative structure is conflictresistant, that is, whether or not the agents enacting the MAS are able to bring about conflicts through their actions.",
        "As soon as one includes the possibility of actions (or utterances) from autonomous agents, one looses determinism.",
        "Having mapped the normative structure to a CPN, we now add CPN models of the agents interactions.",
        "Each form of agent interaction (i.e. each activity) can be modelled using CPNs along the lines of Cost et al. [5].",
        "These nondeterministic CPNs feed tokens into the CPN that models the normative structure.",
        "This leads to the introduction of non-determinism into the combined CPN.",
        "The lower half of figure 3 shows part of a CPN model of an agent protocol where the arc denoted with 1 represents some utterance of an illocution by an agent.",
        "The target transition of this arc, not only moves a token on to the next state of this CPN, but also places a token in the place corresponding to the appropriate normative scene in the CPN model of the normative structure (via arc 2).",
        "Transition 3 finally could propagate that token in form of an obligation, for example.",
        "Thus, from a given marking, many different occurrence sequences are possible depending on the agents actions.",
        "We make use of the reachability set R to define a situation in which agents cannot cause conflicts. 640 The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) Figure 3: Constructing the combined CPN Def. 13.",
        "Given a net N, a marking M is conflict-resistant if and only if all markings in R(N,M) are conflict-free.",
        "Checking conflict-freedom of a marking can be done in polynomial time by checking all places of the CPN for conflicting tokens.",
        "Conflict-freedom of an occurrence sequence in the CPN that represents the normative structure can also be done in polynomial time since this sequence is deterministic given a snapshot.",
        "Whether or not a normative structure is designed safely corresponds to checking the conflict-resistance of the initial marking M0.",
        "Now, verifying conflict-resistance of a marking becomes a very difficult task.",
        "It corresponds to the reachability problem in a CPN: can a state be reached or a marking achieved, that contains a conflict?.",
        "This reachability problem is known to be NP-complete for ordinary Petri Nets [22] and since CPNs are functionally identical, we cannot hope to verify conflict-resistance of a normative structure off-line in a reasonable amount of time.",
        "Therefore, distributed, run-time mechanisms are needed to ensure that a normative structure maintains consistency.",
        "We present one such mechanism in the following section. 6.",
        "MANAGING NORMATIVE STRUCTURES Once a conflict (as defined in Section 4) has been detected, we propose to employ the unifier to resolve the conflict.",
        "In our example, if the variables in prh(inform(a1, r1, a2, r2, p(Y, d), T )) do not get the values specified in substitution Ïƒ then there will not be a conflict.",
        "However, rather than computing the complement set of a substitution (which can be an infinite set) we propose to annotate the prohibition with the unifier itself and use it to determine what the variables of that prohibition cannot be in future unifications in order to avoid a conflict.",
        "We therefore denote annotated prohibitions as prh(Â¯I) Î£, where Î£ = {Ïƒ1, . . . , Ïƒn}, is a set of unifiers.",
        "Annotated norms3 are interpreted as deontic constructs with curtailed influences, that is, their effect (on agents, roles and illocutions) has been limited by the set Î£ of unifiers.",
        "A prohibition may be in conflict with various obligations in a given normative scene s = id, Î” and we need to record (and possibly avoid) all these conflicts.",
        "We define below an algorithm which ensures that a normative position will be added to a normative scene in such a way that it will not cause any conflicts. 3 Although we propose to curtail prohibitions, the same machinery can be used to define the curtailment of obligations instead.",
        "These different policies are dependent on the intended deontic semantics and requirements of the systems addressed.",
        "For instance, some MASs may require that their agents should not act in the presence of conflicts, that is, the obligation should be curtailed. 6.1 Conflict Resolution We propose a fine-grained way of resolving normative conflicts via unification.",
        "We detect the overlapping of the influences of norms , i.e. how they affect the behaviour of the concerned agents, and we curtail the influence of the normative position, by appropriately using the annotations when checking if the norm applies to illocutions.",
        "The algorithm shown in Figure 4 depicts how we maintain a conflict-free set of norms.",
        "It adds a given norm N to an existing, conflictfree normative state Î”, obtaining a resulting new normative state Î” which is conflict-free, that is, its prohibitions are annotated with a set of conflict sets indicating which bindings for variables have to be avoided for conflicts not to take place. algorithm addNorm(N, Î”) begin 1 timestamp(N) 2 case N of 3 per(Â¯I): Î” := Î” âˆª {N} 4 prh(I): if N âˆˆ Î” s.t. conflict(N, N , Ïƒ) then Î” := Î” 5 else Î” := Î” âˆª {N} 6 prh(Â¯I): 7 begin 8 Î£ := âˆ… 9 for each N âˆˆ Î” do 10 if conflict(N, N , Ïƒ) then Î£ := Î£ âˆª {Ïƒ} 11 Î” := Î” âˆª {N Î£} 12 end 13 obl(Â¯I): 14 begin 15 Î”1 := âˆ…; Î”2 := âˆ… 16 for each (N Î£) âˆˆ Î” do 17 if N = prh(I) then 18 if conflict(N , N, Ïƒ) then Î”1 := Î”1 âˆª {N Î£} 19 else nil 20 else 21 if conflict(N , N, Ïƒ) then 22 begin 23 Î”1 := Î”1 âˆª {N Î£} 24 Î”2 := Î”2 âˆª {N (Î£ âˆª {Ïƒ})} 25 end 26 Î” := (Î” âˆ’ Î”1) âˆª Î”2 âˆª {N} 27 end 28 end case 29 return Î” end Figure 4: Algorithm to Preserve Conflict-Freedom The algorithm uses a case of structure to differentiate the different possibilities for a given norm N. Line 3 addresses the case when the given norm is a permission: N is simply added to Î”.",
        "Lines 4-5 address the case when we attempt to add a ground prohibition to a normative state: if it conflicts with any obligation, then it is discarded; otherwise it is added to the normative state.",
        "Lines 6-12 describe the situation when the normative position to be added is a nonground prohibition.",
        "In this case, the algorithm initialises Î£ to an empty set and loops (line 9-10) through the norms N in the old normative state Î”.",
        "Upon finding one that conflicts with N, the algorithm updates Î£ by adding the newly found conflict set Ïƒ to it (line 10).",
        "By looping through Î”, we are able to check any conflicts between the new prohibition and the existing obligations, adequately building the annotation Î£ to be used when adding N to Î” in line 11.",
        "Lines 13-27 describe how a new obligation is accommodated to an existing normative state.",
        "We make use of two initially empty, temporary sets, Î”1, Î”2.",
        "The algorithm loops through Î” (lines 16-25) picking up those annotated prohibitions N Î£ which conflict with the new obligation.",
        "There are, however, two cases to deal with: the one when a ground The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 641 prohibition is found (line 17), and its exception, covering non-ground prohibitions (line 20).",
        "In both cases, the old prohibition is stored in Î”1 (lines 18 and 23) to be later removed from Î” (line 26).",
        "However, in the case of a nonground prohibition, the algorithm updates its annotation of conflict sets (line 24).",
        "The loop guarantees that an exhaustive (linear) search through a normative state takes place, checking if the new obligation is in conflict with any existing prohibitions, possibly updating the annotations of these conflicting prohibitions.",
        "In line 26 the algorithm builds the new updated Î” by removing the old prohibitions stored in Î”1 and adding the updated prohibitions stored in Î”2 (if any), as well as the new obligation N. Our proposed algorithm is correct in that, for a given normative position N and a normative state Î”, it provides a new normative state Î” in which all prohibitions have annotations recording how they unify with existing obligations.",
        "The annotations can be empty, though: this is the case when we have a ground prohibition or a prohibition which does not unify/conflict with any obligation.",
        "Permissions do not affect our algorithm and they are appropriately dealt with (line 3).",
        "Any attempt to insert a ground prohibition which conflicts, yields the same normative state (line 4).",
        "When a new obligation is being added then the algorithm guarantees that all prohibitions are considered (lines 14-27), leading to the removal of conflicting ground prohibitions or the update of annotations of non-ground prohibitions.",
        "The algorithm always terminates: the loops are over a finite set Î” and the conflict checks and set operations always terminate.",
        "The complexity of the algorithm is linear: the set Î” is only examined once for each possible case of norm to be added.",
        "When managing normative states we may also need to remove normative positions.",
        "This is straightforward: permissions can be removed without any problems; annotated prohibitions can also be removed without further considerations; obligations, however, require some housekeeping.",
        "When an obligation is to be removed, we must check it against all annotated prohibitions in order to update their annotations.",
        "We apply the conflict check and obtain a unifier, then remove this unifier from the prohibitions annotation.",
        "We invoke the removal algorithm as removeNorm(N, Î”): it returns a new normative state Î” in which N has been removed, with possible alterations to other normative positions as explained. 6.2 Enactment of a Normative Structure The enactment of a normative structure amounts to the parallel, distributed execution of normative scenes and normative transitions.",
        "For illustrative purposes, hereafter we shall describe the interplay between the payment and delivery normative scenes and the normative transition nt linking them in the upper half of figure 2.",
        "With this aim, consider for instance that obl(inform(jules, client, rod, acc, pay(copper, 400, 350), T) âˆˆ Î”payment and that Î”delivery holds prh(inform(rod,wm, jules, client, delivered(Z, Q), T)).",
        "Such states indicate that client Jules is obliged to pay Â£400 for 350kg of copper to accountant Rod according to the payment normative scene, whereas Rod, taking up the role of warehouse manager this time, is prohibited to deliver anything to client Jules according to the delivery normative scene.",
        "For each normative scene, the enactment process goes as follows.",
        "Firstly, it processes its incoming message queue that contains three types of messages: utterances from the activity it is linked to; and normative commands either to add or remove normative positions.",
        "For instance, in our example, the payment normative scene collects the illocution I = utt((inform(jules, client, rod, acc, pay(copper, 400, 350), 35)) standing for client Jules pending payment for copper (via arrow A in figure 2).",
        "Utterances are timestamped and subsequently added to the normative state.",
        "We would have Î”payment = Î”payment âˆª {I}, in our example.",
        "Upon receiving normative commands to either add or remove a normative position, the normative scene invokes the corresponding addition or removal algorithm described in Section 6.1.",
        "Secondly, the normative scene acknowledges its state change by sending a trigger message to every outgoing normative transition it is connected to.",
        "In our example, the payment normative scene would be signalling its state change to normative transition nt.",
        "For normative transitions, the process works differently.",
        "Because each normative transition controls the operation of a single rule, upon receiving a trigger message, it polls every incoming normative scene for substitutions for the relevant illocution schemata on the LHS of its rule.",
        "In our example, nt (being responsible for the rule described in Section 3.4), would poll the payment normative scene (via arrow B) for substitutions.",
        "Upon receiving replies from them (in the form of sets of substitutions together with time-stamps), it has to unify substitutions from each of these normative scenes.",
        "For each unification it finds, the rule is fired, and hence the corresponding normative command is sent along to the output normative scene.",
        "The normative transition then keeps track of the firing message it sent on and of the time-stamps of the normative positions that triggered the firing.",
        "This is done to ensure that the very same normative positions in the LHS of a rule only trigger its firing once.",
        "In our example, nt would be receiving Ïƒ = {X/jules, Y/rod, Z/copper, Q/350} from the payment normative scene.",
        "Since the substitions in Ïƒ unify with nts rule, the rule is fired, and the normative command add(delivery : obl(rod, wm, jules, client, delivered(copper, 350), T)) is sent along to the delivery normative scene to oblige Rod to deliver to client Jules 350kg of copper.",
        "After that, the delivery normative scene would invoke the addNorm algorithm from figure 4 with Î”delivery and N = obl(rod, wm, jules, client, delivered(copper, 350)) as arguments. 7.",
        "RELATED WORK AND CONCLUSIONS Our contributions in this paper are three-fold.",
        "Firstly, we introduce an approach for the management of and reasoning about norms in a distributed manner.",
        "To our knowledge, there is little work published in this direction.",
        "In [8, 21], two languages are presented for the distributed enforcement of norms in MAS.",
        "However, in both works, each agent has a local message interface that forwards legal messages according to a set of norms.",
        "Since these interfaces are local to each agent, norms can only be expressed in terms of actions of that agent.",
        "This is a serious disadvantage, e.g. when one needs to activate an obligation to one agent due to a certain message of another one.",
        "The second contribution is the proposal of a normative structure.",
        "The notion is fruitful because it allows the separation of normative and procedural concerns.",
        "The normative structure we propose makes evident the similarity between the propagation of normative positions and the propagation 642 The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) of tokens in Coloured Petri Nets.",
        "That similarity readily suggests a mapping between the two, and gives grounds to a convenient analytical treatment of the normative structure, in general, and the complexity of conflict detection, in particular.",
        "The idea of modelling interactions (in the form of conversations) via Petri Nets has been investigated in [18], where the interaction medium and individual agents are modelled as CPN sub-nets that are subsequently combined for analysis.",
        "In [5], conversations are first designed and analysed at the level of CPNs and thereafter translated into protocols.",
        "Lin et al. [20] map conversation schemata to CPNs.",
        "To our knowledge, the use of this representation in the support of conflict detection in regulated MAS has not been reported elsewhere.",
        "Finally, we present a distributed mechanism to resolve normative conflicts.",
        "Sartor [25] treats normative conflicts from the point of view of legal theory and suggests a way to order the norms involved.",
        "His idea is implemented in [12] but requires a central resource for norm maintenance.",
        "The approach to conflict detection and resolution is an adaptation and extension of the work on instantiation graphs reported in [17] and a related algorithm in [27].",
        "The algorithm presented in the current paper can be used to manage normative states distributedly: normative scenes that happen in parallel have an associated normative state Î” to which the algorithm is independently applied each time a new norm is to be introduced.",
        "These three contributions we present in this paper open many possibilities for future work.",
        "We should mention first, that as a broad strategy we are working on a generalisation of the notion of normative structure to make it operate with different coordination models, with richer deontic content and on top of different computational realisations of regulated MAS.",
        "As a first step in this direction we are taking advantage of the de-coupling between interaction protocols and declarative normative guidance that the normative structure makes available, to provide a normative layer for electronic institutions (as defined in [1]).",
        "We expect such coupling will endow electronic institutions with a more flexible -and more expressive- normative environment.",
        "Furthermore, we want to extend our model along several directions: (1) to handle negation and constraints as part of the norm language, and in particular the notion of time; (2) to accommodate multiple, hierarchical norm authorities based on roles, along the lines of Cholvy and Cuppens [3] and power relationships as suggested by Carabelea et al. [2]; (3) to capture in the conflict resolution algorithm different semantics relating the deontic notions by supporting different axiomations (e.g., relative strength of prohibition versus obligation, default deontic notions, deontic inconsistencies).",
        "On the theoretical side, we intend to use analysis techniques of CPNs in order to characterise classes of CPNs (e.g., acyclic, symmetric, etc.) corresponding to families of Normative Structures that are susceptible to tractable offline conflict detection.",
        "The combination of these techniques along with our online conflict resolution mechanisms is intended to endow MAS designers with the ability to incorporate norms into their systems in a principled way. 8.",
        "REFERENCES [1] J. L. Arcos, M. Esteva, P. Noriega, J.",
        "A. RodrÂ´Ä±guez, and C. Sierra.",
        "Engineering open environments with electronic institutions.",
        "Journal on Engineering Applications of Artificial Intelligence, 18(2):191-204, 2005. [2] C. Carabelea, O. Boissier, and C. Castelfranchi.",
        "Using social power to enable agents to reason about being part of a group.",
        "In 5th Internat.",
        "Workshop, ESAW 2004, pages 166-177, 2004. [3] L. Cholvy and F. Cuppens.",
        "Solving normative conflicts by merging roles.",
        "In Fifth International Conference on Artificial Intelligence and Law, Washington, USA, 1995. [4] S. Christensen and T. B. Haagh.",
        "Design CPN - overview of CPN ML syntax.",
        "Technical report, University of Aarhus, 1996. [5] R. S. Cost, Y. Chen, T. W. Finin, Y. Labrou, and Y. Peng.",
        "Using colored petri nets for conversation modeling.",
        "In Issues in Agent Communication, pages 178-192, London, UK, 2000. [6] F. Dignum.",
        "Autonomous Agents with Norms.",
        "Artificial Intelligence and Law, 7(1):69-79, 1999. [7] A. Elhag, J. Breuker, and P. Brouwer.",
        "On the Formal Analysis of Normative Conflicts.",
        "Information & Comms.",
        "Techn.",
        "Law, 9(3):207-217, Oct. 2000. [8] M. Esteva, W. Vasconcelos, C. Sierra, and J.",
        "A. RodrÂ´Ä±guez-Aguilar.",
        "Norm consistency in electronic institutions. volume 3171 (LNAI), pages 494-505.",
        "Springer-Verlag, 2004. [9] M. Fitting.",
        "First-Order Logic and Automated Theorem Proving.",
        "Springer-Verlag, New York, U.S.A., 1990. [10] N. Fornara, F. Vigan`o, and M. Colombetti.",
        "An Event Driven Approach to Norms in Artificial Institutions.",
        "In AAMAS05 Workshop: Agents, Norms and Institutions for Regulated Multiagent Systems (ANI@REM), Utrecht, 2005. [11] D. Gaertner, P. Noriega, and C. Sierra.",
        "Extending the BDI architecture with commitments.",
        "In Proceedings of the 9th International Conference of the Catalan Association of Artificial Intelligence, 2006. [12] A. GarcÂ´Ä±a-Camino, P. Noriega, and J.-A.",
        "RodrÂ´Ä±guez-Aguilar.",
        "An Algorithm for Conflict Resolution in Regulated Compound Activities.",
        "In 7th Int.Workshop - ESAW 06, 2006. [13] A. GarcÂ´Ä±a-Camino, J.-A.",
        "RodrÂ´Ä±guez-Aguilar, C. Sierra, and W. Vasconcelos.",
        "A Distributed Architecture for Norm-Aware Agent Societies.",
        "In DALT III, volume 3904 (LNAI), pages 89-105.",
        "Springer, 2006. [14] F. Giunchiglia and L. Serafini.",
        "Multi-language hierarchical logics or: How we can do without modal logics.",
        "Artificial Intelligence, 65(1):29-70, 1994. [15] J. Habermas.",
        "The Theory of Communication Action, Volume One, Reason and the Rationalization of Society.",
        "Beacon Press, 1984. [16] K. Jensen.",
        "Coloured Petri Nets: Basic Concepts, Analysis Methods and Practical Uses (Volume 1).",
        "Springer, 1997. [17] M. Kollingbaum and T. Norman.",
        "Strategies for resolving norm conflict in practical reasoning.",
        "In ECAI Workshop Coordination in Emergent Agent Societies 2004, 2004. [18] J.-L. Koning, G. Francois, and Y. Demazeau.",
        "Formalization and pre-validation for interaction protocols in a multi agent systems.",
        "In ECAI, pages 298-307, 1998. [19] B. Kramer and J. Mylopoulos.",
        "Knowledge Representation.",
        "In S. C. Shapiro, editor, Encyclopedia of Artificial Intelligence, volume 1, pages 743-759.",
        "John Wiley & Sons, 1992. [20] F. Lin, D. H. Norrie, W. Shen, and R. Kremer.",
        "A schema-based approach to specifying conversation policies.",
        "In Issues in Agent Communication, pages 193-204, 2000. [21] N. Minsky.",
        "Law Governed Interaction (LGI): A Distributed Coordination and Control Mechanism (An Introduction, and a Reference Manual).",
        "Technical report, Rutgers University, 2005. [22] T. Murata.",
        "Petri nets: Properties, analysis and applications.",
        "Proceedings of the IEEE, 77(4):541-580, 1989. [23] S. Parsons, C. Sierra, and N. Jennings.",
        "Agents that reason and negotiate by arguing.",
        "Journal of Logic and Computation, 8(3):261-292, 1998. [24] A. Ricci and M. Viroli.",
        "Coordination Artifacts: A Unifying Abstraction for Engineering Environment-Mediated Coordination in MAS.",
        "Informatica, 29:433-443, 2005. [25] G. Sartor.",
        "Normative conflicts in legal reasoning.",
        "Artificial Intelligence and Law, 1(2-3):209-235, June 1992. [26] M. Sergot.",
        "A Computational Theory of Normative Positions.",
        "ACM Trans.",
        "Comput.",
        "Logic, 2(4):581-622, 2001. [27] W. W. Vasconcelos, M. Kollingbaum, and T. Norman.",
        "Resolving Conflict and Inconsistency in Norm-Regulated Virtual Organisations.",
        "In Proceedings of AAMAS 07, Hawaii, USA, 2007.",
        "IFAAMAS. [28] G. H. von Wright.",
        "Norm and Action: A Logical Inquiry.",
        "Routledge and Kegan Paul, London, 1963. [29] M. Wooldridge.",
        "An Introduction to Multiagent Systems.",
        "John Wiley & Sons, Chichester, UK, Feb. 2002.",
        "The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 643"
    ],
    "error_count": 0,
    "keys": {
        "algorithm": {
            "translated_key": "algoritmo",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Distributed Norm Management in Regulated Multi-Agent Systems âˆ— Dorian Gaertner Dept.",
                "of Computing, Imperial College London, London SW7 2AZ, United Kingdom dg00@doc.ic.ac.uk Andres Garcia-Camino, Pablo Noriega, J.-A.",
                "Rodriguez-Aguilar IIIA-CSIC, 08193 Bellaterra, Spain {andres,pablo,jar}@iiia.csic.es Wamberto Vasconcelos Dept. of Computing Science, University of Aberdeen, Aberdeen AB24 3UE, United Kingdom wvasconcelos@acm.org ABSTRACT Norms are widely recognised as a means of coordinating multi-agent systems.",
                "The distributed management of norms is a challenging issue and we observe a lack of truly distributed computational realisations of normative models.",
                "In order to regulate the behaviour of autonomous agents that take part in multiple, related activities, we propose a normative model, the Normative Structure (NS), an artifact that is based on the propagation of normative positions (obligations, prohibitions, permissions), as consequences of agents actions.",
                "Within a NS, conflicts may arise due to the dynamic nature of the MAS and the concurrency of agents actions.",
                "However, ensuring conflict-freedom of a NS at design time is computationally intractable.",
                "We show this by formalising the notion of conflict, providing a mapping of NSs into Coloured Petri Nets and borrowing well-known theoretical results from that field.",
                "Since online conflict resolution is required, we present a tractable <br>algorithm</br> to be employed distributedly.",
                "We then demonstrate that this <br>algorithm</br> is paramount for the distributed enactment of a NS.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Languages and structures General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION A fundamental feature of open, regulated multi-agent systems in which autonomous agents interact, is that participating agents are meant to comply with the conventions of the system.",
                "Norms can be used to model such conventions and hence as a means to regulate the observable behaviour of agents [6, 29].",
                "There are many contributions on the subject of norms from sociologists, philosophers and logicians (e.g., [15, 28]).",
                "However, there are very few proposals for computational realisations of normative models - the way norms can be integrated in the design and execution of MASs.",
                "The few that exist (e.g. [10, 13, 24]), operate in a centralised manner which creates bottlenecks and single points-of-failure.",
                "To our knowledge, no proposal truly supports the distributed enactment of normative environments.",
                "In our paper we approach that problem and propose means to handle conflicting commitments in open, regulated, multiagent systems in a distributed manner.",
                "The type of regulated MAS we envisage consists of multiple, concurrent, related activities where agents interact.",
                "Each agent may concurrently participate in several activities, and change from one activity to another.",
                "An agents actions within an activity may have consequences in the form of normative positions (i.e. obligations, permissions, and prohibitions) [26] that may constrain its future behaviour.",
                "For instance, a buyer agent who runs out of credit may be forbidden to make further offers, or a seller agent is obliged to deliver after closing a deal.",
                "We assume that agents may choose not to fulfill all their obligations and hence may be sanctioned by the MAS.",
                "Notice that, when activities are distributed, normative positions must flow from the activities in which they are generated to those in which they take effect.",
                "For instance, the sellers obligation above must flow (or be propagated) from a negotiation activity to a delivery activity.",
                "Since in an open, regulated MAS one cannot embed normative aspects into the agents design, we adopt the view that the MAS should be supplemented with a separate set of norms that further regulates the behaviour of participating agents.",
                "In order to model the separation of concerns between the coordination level (agents interactions) and the normative level (propagation of normative positions), we propose an artifact called the Normative Structure (NS).",
                "Within a NS conflicts may arise due to the dynamic nature of the MAS and the concurrency of agents actions.",
                "For instance, an agent may be obliged and prohibited to do the 636 978-81-904262-7-5 (RPS) c 2007 IFAAMAS very same action in an activity.",
                "Since the regulation of a MAS entails that participating agents need to be aware of the validity of those actions that take place within it, such conflicts ought to be identified and possibly resolved if a claim of validity is needed for an agent to engage in an action or be sanctioned.",
                "However, ensuring conflict-freedom of a NS at design time is computationally intractable.",
                "We show this by formalising the notion of conflict, providing a mapping of NSs into Coloured Petri Nets (CPNs) and borrowing well-known theoretical results from the field of CPNs.",
                "We believe that online conflict detection and resolution is required.",
                "Hence, we present a tractable <br>algorithm</br> for conflict resolution.",
                "This <br>algorithm</br> is paramount for the distributed enactment of a NS.",
                "The paper is organised as follows.",
                "In Section 2 we detail a scenario to serve as an example throughout the paper.",
                "Next, in Section 3 we formally define the normative structure artifact.",
                "Further on, in Section 4 we formalise the notion of conflict to subsequently analyse the complexity of conflict detection in terms of CPNs in Section 5.",
                "Section 6 describes the computational management of NSs by describing their enactment and presenting an <br>algorithm</br> for conflict resolution.",
                "Finally, we comment on related work, draw conclusions and report on future work in Section 7. 2.",
                "SCENARIO We use a supply-chain scenario in which companies and individuals come together at an online marketplace to conduct business.",
                "The overall transaction procedure may be organised as six distributed activities, represented as nodes in the diagram in Figure 1.",
                "They involve different participants whose behaviour is coordinated through protocols.",
                "In this scenario agents can play one of four roles: marExit Registration Payment Delivery Negotiation Coordination Model Contract Figure 1: Activity Structure of the Scenario ketplace accountant (acc), client, supplier (supp) and warehouse managers (wm).",
                "The arrows connecting the activities represent how agents can move from one activity to another.",
                "After registering at the marketplace, clients and suppliers get together in an activity where they negotiate the terms of their transaction, i.e. prices, amounts of goods to be delivered, deadlines and other details.",
                "In the contract activity, the order becomes established and an invoice is prepared.",
                "The client will then participate in a payment activity, verifying his credit-worthiness and instructing his bank to transfer the correct amount of money.",
                "The supplier in the meantime will arrange for the goods to be delivered (e.g. via a warehouse manager) in the delivery activity.",
                "Finally, agents can leave the marketplace conforming to a predetermined exit protocol.",
                "The marketplace accountant participates in most of the activities as a trusted provider of auditing tools.",
                "In the rest of the paper we shall build on this scenario to exemplify the notion of normative structure and to illustrate our approach to conflict detection and resolution in a distributed setting. 3.",
                "NORMATIVE STRUCTURE In MASs agents interact according to protocols which naturally are distributed.",
                "We advocate that actions in one such protocol may have an effect on the enactment of other protocols.",
                "Certain actions can become prohibited or obligatory, for example.",
                "We take normative positions to be obligations, prohibitions and permissions akin to work described in [26].",
                "The intention of adding or removing a normative position we call normative command.",
                "Occurrences of normative positions in one protocol may also have consequences for other protocols1 .",
                "In order to define our norm language and specify how normative positions are propagated, we have been inspired by multi-context systems [14].",
                "These systems allow the structuring of knowledge into distinct formal theories and the definition of relationships between them.",
                "The relationships are expressed as bridge rules - deducibility of formulae in some contexts leads to the deduction of other formulae in other contexts.",
                "Recently, these systems have been successfully used to define agent architectures [11, 23].",
                "The metaphor translates to our current work as follows: the utterance of illocutions and/or the existence of normative positions in some normative scenes leads to the deduction of normative positions in other normative scenes.",
                "We are concerned with the propagation and distribution of normative positions within a network of distributed, normative scenes as a consequence of agents actions.",
                "We take normative scenes to be sets of normative positions and utterances that are associated with an underlying interaction protocol corresponding to an activity.",
                "In this section, we first present a simple language capturing these aspects and formally introduce the notions of normative scene, normative transition rule and normative structure.",
                "We give the intended semantics of these rules and show how to control a MAS via norms in an example. 3.1 Basic Concepts The building blocks of our language are terms and atomic formulae: Def. 1.",
                "A term, denoted as t, is (i) any constant expressed using lowercase (with or without subscripts), e.g. a, b0, c or (ii) any variable expressed using uppercase (with or without subscripts), e.g.",
                "X, Y, Zb or (iii) any function f(t1, . . . , tn), where f is an n-ary function symbol and t1, .., tn are terms.",
                "Some examples of terms and functions are Credit, price or offer(bible, 30) being respectively a variable, a constant and a function.",
                "We will be making use of identifiers throughout the paper, which are constant terms and also need the following definition: Def. 2.",
                "An atomic formula is any construct p(t1, . . . , tn), where p is an n-ary predicate symbol and t1, . . . , tn are terms.",
                "The set of all atomic formulae is denoted as Î”.",
                "We focus on an expressive class of MASs in which interaction is carried out by means of illocutionary speech acts exchanged among participating agents: Def. 3.",
                "Illocutions I are ground atomic formulae which have the form p(ag, r, ag , r , Î´, t) where p is an element of 1 Here, we abstract from protocols and refer to them generically as activities.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 637 a set of illocutionary particles (e.g. inform, request, offer); ag, ag are agent identifiers; r, r are role identifiers; Î´, an arbitrary ground term, is the content of the message, built from a shared content language; t âˆˆ N is a time stamp.",
                "The intuitive meaning of p(ag, r, ag , r , m, t) is that agent ag playing role r sent message m to agent ag playing role r at time t. An example of an illocution is inform(ag4, supp, ag3, client, offer(wire, 12), 10).",
                "Sometimes it is useful to refer to illocutions that are not fully grounded, that is, those that may contain uninstantiated (free) variables.",
                "In the description of a protocol, for instance, the precise values of the message exchanged can be left unspecified.",
                "During the enactment of the protocol agents will produce the actual values which will give rise to a ground illocution.",
                "We can thus define illocution schemata: Def. 4.",
                "An illocution schema Â¯I is any atomic formula p(ag, r, ag , r , Î´, t) in which some of the terms may either be variables or may contain variables. 3.2 Formal Definition of the Notion of NS We first define normative scenes as follows: Def. 5.",
                "A normative scene is a tuple s = ids, Î”s where ids is a scene identifier and Î”s is the set of atomic formulae Î´ (i.e. utterances and normative positions) that hold in s. We will also refer to Î”s as the state of normative scene s. For instance, a snapshot of the state of the delivery normative scene of our scenario could be represented as: Î”s = 8 < : utt(request(sean, client, kev, wm, receive(wire, 200), 20)), utt(accept(kev, wm, sean, client, receive(wire, 200), 30)), obl(inform(kev, wm, sean, client, delivered(wire, 200), 30)) 9 = ; That is, agent Sean taking up the client role has requested agent Kev (taking up the warehouse manager role wm) to receive 200kg of wire, and agent Kev is obliged to deliver 200kg of wire to Sean since he accepted the request.",
                "Note that the state of a normative scene Î”s evolves over time.",
                "These normative scenes are connected to one another via normative transitions that specify how utterances and normative positions in one scene affect other normative scenes.",
                "As mentioned above, activities are not independent since illocutions uttered in some of them may have an effect on other ones.",
                "Normative transition rules define the conditions under which a normative command is generated.",
                "These conditions are either utterances or normative positions associated with a given protocol (denoted e.g. activity : utterance) which yield a normative command, i.e. the addition or removal of another normative position, possibly related to a different activity.",
                "Our transition rules are thus defined: Def. 6.",
                "A normative transition rule R is of the form: R ::= V C V ::= ids : D | V, V D ::= N | utt(Â¯I) N ::= per(Â¯I) | prh(Â¯I) | obl(Â¯I) C ::= add(ids : N) | remove(ids : N) where Â¯I is an illocution schema, N is a normative position (i.e. permission, prohibition or obligation), ids is an identifier for activity s and C is a normative command.",
                "We endow our language with the usual semantics of rulebased languages [19].",
                "Rules map an existing normative structure to a new normative structure where only the state of the normative scenes change.",
                "In the definitions below we rely on the standard concept of substitution [9].",
                "Def. 7.",
                "A normative transition is a tuple b = idb, rb where idb is an identifier and rb is a normative transition rule.",
                "We are proposing to extend the notion of MAS, regulated by protocols, with an extra layer consisting of normative scenes and normative transitions.",
                "This layer is represented as a bi-partite graph that we term normative structure.",
                "A normative structure relates normative scenes and normative transitions specifying which normative positions are to be generated or removed in which normative scenes.",
                "Def. 8.",
                "A normative structure is a labelled bi-partite graph NS = Nodes, Edges, Lin , Lout .",
                "Nodes is a set SâˆªB where S is a set of normative scenes and B is a set of normative transitions.",
                "Edges is a set Ain âˆª Aout where Ain âŠ† S Ã— B is a set of input arcs labelled with an atomic formula using the labelling function Lin : Ain â†’ D; and Aout âŠ† B Ã— S is a set of output arcs labelled with a normative position using the labelling function Lout : Aout â†’ N. The following must hold: 1.",
                "Each atomic formula appearing in the LHS of a rule rb must be of the form (ids : D) where s âˆˆ S and D âˆˆ Î” and âˆƒain âˆˆ Ain such that ain = (s, b) and Lin (ain ) = D. 2.",
                "The atomic formula appearing in the RHS of a rule rb must be of the form add(ids : N) or remove(ids : N) where s âˆˆ S and âˆƒaout âˆˆ Aout such that aout = (b, s) and Lout (aout ) = N. 3. âˆ€a âˆˆ Ain such that a = (s, b) and b = idb, rb and Lin (a) = D then (ids:D) must occur in the LHS of rb. 4. âˆ€a âˆˆ Aout such that a = (b, s) and b = idb, rb and Lout (a) = N then add(ids : N) or remove(ids : N) must occur in the RHS of rb.",
                "The first two points ensure that every atomic formulae on the LHS of a normative transition rule labels an arc entering the appropriate normative transition in the normative structure, and that the atomic formula on the RHS labels the corresponding outgoing arc.",
                "Points three and four ensure that labels from all incoming arcs are used in the LHS of the normative transition rule that these arcs enter into, and that the labels from all outgoing arcs are used in the RHS of the normative transition rule that these arcs leave. 3.3 Intended Semantics The formal semantics will be defined via a mapping to Coloured Petri Nets in Section 5.1.",
                "Here we start defining the intended semantics of normative transition rules by describing how a rule changes a normative scene of an existing normative structure yielding a new normative structure.",
                "Each rule is triggered once for each substitution that unifies the left-hand side V of the rule with the state of the corresponding normative scenes.",
                "An atomic formula (i.e. an utterance or a normative position) holds iff it is unifiable with an utterance or normative position that belongs to the state of the corresponding normative scene.",
                "Every time a rule is triggered, the normative command specified on the right-hand side of that rule is carried out, intending to add or remove a normative position from the state of the corresponding normative scene.",
                "However, addition is not unconditional as conflicts may arise.",
                "This topic will be treated in Sections 4 and 6.1. 638 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.4 Example In our running example we have the following exemplary normative transition rule: â€ž payment : obl(inform(X, client, Y, acc, pay(Z, P, Q), T )), payment : utt(inform(X, client, Y, acc, pay(Z, P, Q), T )) Â« delivery : add(obl(inform(Y, wm, X, client, delivered(Z, Q), T ))) That is, during the payment activity, an obligation on client X to inform accountant Y about the payment P of item Z at time T and the corresponding utterance which fulfills this obligation allows the flow of a norm to the delivery activity.",
                "The norm is an obligation on agent Y (this time taking up the role of the warehouse manager wm) to send a message to client X that item Z has been delivered.",
                "We show in Figure 2 a diagrammatic representation of how activities and a normative structure relate: Payment Delivery Contract Normative Level Exit Registration Payment Delivery Negotiation Coordination Level Contract nt Figure 2: Activities and Normative Structure As illocutions are uttered during activities, normative positions arise.",
                "Utterances and normative positions are combined in transition rules, causing the flow of normative positions between normative scenes.",
                "The connection between the two levels is described in Section 6.2. 4.",
                "CONFLICT DEFINITION The terms deontic conflict and deontic inconsistency have been used interchangeably in the literature.",
                "However, in this paper we adopt the view of [7] in which the authors suggest that a deontic inconsistency arises when an action is simultaneously permitted and prohibited - since a permission may not be acted upon, no real conflict occurs.",
                "The situations when an action is simultaneously obliged and prohibited are, however, deontic conflicts, as both obligations and prohibitions influence behaviours in a conflicting fashion.",
                "The content of normative positions in this paper are illocutions.",
                "Therefore, a normative conflict arises when an illocution is simultaneously obliged and prohibited.",
                "We propose to use the standard notion of unification [9] to detect when a prohibition and a permission overlap.",
                "For instance, an obligation obl(inform(A1, R1, A2, R2, p(c, X), T)) and a prohibition prh(inform(a1, r1, a2, r2, p(Y, d), T )) are in conflict as they unify under Ïƒ = {A1/a1, R1/r1, A2/a2, R2/r2, Y/c, X/d, T/T }).",
                "We formally capture this notion: Def. 9.",
                "A (deontic) conflict arises between two normative positions N and N under a substitution Ïƒ, denoted as conflict(N, N , Ïƒ), if and only if N = prh(Â¯I), N = obl(Â¯I ) and unify(Â¯I,Â¯I , Ïƒ).",
                "That is, a prohibition and an obligation are in conflict if, and only if, their illocutions unify under Ïƒ.",
                "The substitution Ïƒ, called here the conflict set, unifies the agents, roles and atomic formulae.",
                "We assume that unify is a suitable implementation of a unification <br>algorithm</br> which i) always terminates (possibly failing, if a unifier cannot be found); ii) is correct; and iii) has linear computational complexity.",
                "Inconsistencies caused by the same illocution being simultaneously permitted and prohibited can be formalised similarly.",
                "In this paper we focus on prohibition/obligation conflicts, but the computational machinery introduced in Section 6.1 can equally be used to detect prohibition/permission inconsistencies, if we substitute modality obl for per. 5.",
                "FORMALISING CONFLICT-FREEDOM In this section we introduce some background knowledge on CPNs assuming a basic understanding of ordinary Petri Nets.",
                "For technical details we refer the reader to [16].",
                "We then map NSs to CPNs and analyse their properties.",
                "CPNs combine the strength of Petri nets with the strength of functional programming languages.",
                "On the one hand, Petri nets provide the primitives for the description of the synchronisation of concurrent processes.",
                "As noticed in [16], CPNs have a semantics which builds upon true concurrency, instead of interleaving.",
                "In our opinion, a true-concurrency semantics is easier to work with because it is the way we envisage the connection between the coordination level and the normative level of a multi-agent system to be.",
                "On the other hand, the functional programming languages used by CPNs provide the primitives for the definition of data types and the manipulation of their data values.",
                "Thus, we can readily translate expressions of a normative structure.",
                "Last but not least, CPNs have a well-defined semantics which unambiguously defines the behaviour of each CPN.",
                "Furthermore, CPNs have a large number of formal analysis methods and tools by which properties of CPNs can be proved.",
                "Summing up, CPNs provide us with all the necessary features to formally reason about normative structures given that an adequate mapping is provided.",
                "In accordance with Petri nets, the states of a CPN are represented by means of places.",
                "But unlike Petri Nets, each place has an associated data type determining the kind of data which the place may contain.",
                "A state of a CPN is called a marking.",
                "It consists of a number of tokens positioned on the individual places.",
                "Each token carries a data value which has the type of the corresponding place.",
                "In general, a place may contain two or more tokens with the same data value.",
                "Thus, a marking of a CPN is a function which maps each place into a multi-set2 of tokens of the correct type.",
                "One often refers to the token values as token colours and one also refers to the data types as colour sets.",
                "The types of a CPN can be arbitrarily complex.",
                "Actions in a CPN are represented by means of transitions.",
                "An incoming arc into a transition from a place indicates that the transition may remove tokens from the corresponding place while an outgoing arc indicates that the transition may add tokens.",
                "The exact number of tokens and their data values are determined by the arc expressions, which are encoded using the programming language chosen for the CPN.",
                "A transition is enabled in a CPN if and only if all the 2 A multi-set (or bag) is an extension to the notion of set, allowing the possibility of multiple appearances of the same element.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 639 variables in the expressions of its incoming arcs are bound to some value(s) (each one of these bindings is referred to as a binding element).",
                "If so, the transition may occur by removing tokens from its input places and adding tokens to its output places.",
                "In addition to the arc expressions, it is possible to attach a boolean guard expression (with variables) to each transition.",
                "Putting all the elements above together we obtain a formal definition of CPN that shall be employed further ahead for mapping purposes.",
                "Def. 10.",
                "A CPN is a tuple Î£, P, T, A, N, C, G, E, I where: (i) Î£ is a finite set of non-empty types, also called colour sets; (ii) P is a finite set of places; (iii) T is a finite set of transitions; (iv) A is a finite set of arcs; (v) N is a node function defined from A into P Ã— T âˆª T Ã— P; (vi) C is a colour function from P into Î£; (vii) G is a guard function from T into expressions; (viii) E is an arc expression function from A into expressions; (ix) I is an initialisation function from P into closed expressions; Notice that the informal explanation of the enabling and occurrence rules given above provides the foundations to understand the behaviour of a CPN.",
                "In accordance with ordinary Petri nets, the concurrent behaviour of a CPN is based on the notion of step.",
                "Formally, a step is a non-empty and finite multi-set over the set of all binding elements.",
                "Let step S be enabled in a marking M. Then, S may occur, changing the marking M to M .",
                "Moreover, we say that marking M is directly reachable from marking M by the occurrence of step S, and we denote it by M[S > M .",
                "A finite occurrence sequence is a finite sequence of steps and markings: M1[S1 > M2 . . .",
                "Mn[Sn > Mn+1 such that n âˆˆ N and Mi[Si > Mi+1 âˆ€i âˆˆ {1, . . . , n}.",
                "The set of all possible markings reachable for a net Net from a marking M is called its reachability set, and is denoted as R(Net, M). 5.1 Mapping to Coloured Petri Nets Our normative structure is a labelled bi-partite graph.",
                "The same is true for a Coloured Petri Net.",
                "We are presenting a mapping f from one to the other, in order to provide semantics for the normative structure and prove properties about it by using well-known theoretical results from work on CPNs.",
                "The mapping f makes use of correspondences between normative scenes and CPN places, normative transitions and CPN transitions and finally, between arc labels and CPN arc expressions.",
                "S â†’ P B â†’ T Lin âˆª Lout â†’ E The set of types is the singleton set containing the colour NP (i.e.",
                "Î£ = {NP}).",
                "This complex type is structured as follows (we use CPN-ML [4] syntax): color NPT = with Obl | Per | Prh | NoMod color IP = with inform | declare | offer color UTT = record illp : IP ag1, role1, ag2, role2 : string content: string time : int color NP = record mode : NPT illoc : UTT Modelling illocutions as norms without modality (NoMod) is a formal trick we use to ensure that sub-nets can be combined as explained below.",
                "Arcs are mapped almost directly.",
                "A is a finite set of arcs and N is a node function, such that âˆ€a âˆˆ A âˆƒa âˆˆ Ain âˆªAout .",
                "N(a) = a .",
                "The initialisation function I is defined as I(p) = Î”s (âˆ€s âˆˆ S where p is obtained from s using the mapping; remember that s = ids, Î”s ).",
                "Finally, the colour function C assigns the colour NP to every place: C(p) = NP (âˆ€p âˆˆ P).",
                "We are not making use of the guard function G. In future work, this function can be used to model constraints when we extend the expressiveness of our norm language. 5.2 Properties of Normative Structures Having defined the mapping from normative structures to Coloured Petri Nets, we now look at properties of CPNs that help us understand the complexity of conflict detection.",
                "One question we would like to answer is, whether at a given point in time, a given normative structure is conflict-free.",
                "Such a snapshot of a normative structure corresponds to a marking in the mapped CPN.",
                "Def. 11.",
                "Given a marking Mi, this marking is conflictfree if Â¬âˆƒp âˆˆ P. âˆƒnp1, np2 âˆˆ Mi(p) such that np1.mode = Obl and np2.mode = Prh and np1.illoc and np2.illoc unify under a valid substitution.",
                "Another interesting question would be, whether a conflict will occur from such a snapshot of the system by propagating the normative positions.",
                "In order to answer this question, we first translate the snapshot of the normative structure to the corresponding CPN and then execute the finite occurence sequence of markings and steps, verifying the conflict-freedom of each marking as we go along.",
                "Def. 12.",
                "Given a marking Mi, a finite occurrence sequence Si, Si+1, ..., Sn is called conflict-free, if and only if Mi[Si > Mi+1 . . .",
                "Mn[Sn > Mn+1 and Mk is conflict-free for all k such that i â‰¤ k â‰¤ n + 1.",
                "However, the main question we would like to investigate, is whether or not a given normative structure is conflictresistant, that is, whether or not the agents enacting the MAS are able to bring about conflicts through their actions.",
                "As soon as one includes the possibility of actions (or utterances) from autonomous agents, one looses determinism.",
                "Having mapped the normative structure to a CPN, we now add CPN models of the agents interactions.",
                "Each form of agent interaction (i.e. each activity) can be modelled using CPNs along the lines of Cost et al. [5].",
                "These nondeterministic CPNs feed tokens into the CPN that models the normative structure.",
                "This leads to the introduction of non-determinism into the combined CPN.",
                "The lower half of figure 3 shows part of a CPN model of an agent protocol where the arc denoted with 1 represents some utterance of an illocution by an agent.",
                "The target transition of this arc, not only moves a token on to the next state of this CPN, but also places a token in the place corresponding to the appropriate normative scene in the CPN model of the normative structure (via arc 2).",
                "Transition 3 finally could propagate that token in form of an obligation, for example.",
                "Thus, from a given marking, many different occurrence sequences are possible depending on the agents actions.",
                "We make use of the reachability set R to define a situation in which agents cannot cause conflicts. 640 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) Figure 3: Constructing the combined CPN Def. 13.",
                "Given a net N, a marking M is conflict-resistant if and only if all markings in R(N,M) are conflict-free.",
                "Checking conflict-freedom of a marking can be done in polynomial time by checking all places of the CPN for conflicting tokens.",
                "Conflict-freedom of an occurrence sequence in the CPN that represents the normative structure can also be done in polynomial time since this sequence is deterministic given a snapshot.",
                "Whether or not a normative structure is designed safely corresponds to checking the conflict-resistance of the initial marking M0.",
                "Now, verifying conflict-resistance of a marking becomes a very difficult task.",
                "It corresponds to the reachability problem in a CPN: can a state be reached or a marking achieved, that contains a conflict?.",
                "This reachability problem is known to be NP-complete for ordinary Petri Nets [22] and since CPNs are functionally identical, we cannot hope to verify conflict-resistance of a normative structure off-line in a reasonable amount of time.",
                "Therefore, distributed, run-time mechanisms are needed to ensure that a normative structure maintains consistency.",
                "We present one such mechanism in the following section. 6.",
                "MANAGING NORMATIVE STRUCTURES Once a conflict (as defined in Section 4) has been detected, we propose to employ the unifier to resolve the conflict.",
                "In our example, if the variables in prh(inform(a1, r1, a2, r2, p(Y, d), T )) do not get the values specified in substitution Ïƒ then there will not be a conflict.",
                "However, rather than computing the complement set of a substitution (which can be an infinite set) we propose to annotate the prohibition with the unifier itself and use it to determine what the variables of that prohibition cannot be in future unifications in order to avoid a conflict.",
                "We therefore denote annotated prohibitions as prh(Â¯I) Î£, where Î£ = {Ïƒ1, . . . , Ïƒn}, is a set of unifiers.",
                "Annotated norms3 are interpreted as deontic constructs with curtailed influences, that is, their effect (on agents, roles and illocutions) has been limited by the set Î£ of unifiers.",
                "A prohibition may be in conflict with various obligations in a given normative scene s = id, Î” and we need to record (and possibly avoid) all these conflicts.",
                "We define below an <br>algorithm</br> which ensures that a normative position will be added to a normative scene in such a way that it will not cause any conflicts. 3 Although we propose to curtail prohibitions, the same machinery can be used to define the curtailment of obligations instead.",
                "These different policies are dependent on the intended deontic semantics and requirements of the systems addressed.",
                "For instance, some MASs may require that their agents should not act in the presence of conflicts, that is, the obligation should be curtailed. 6.1 Conflict Resolution We propose a fine-grained way of resolving normative conflicts via unification.",
                "We detect the overlapping of the influences of norms , i.e. how they affect the behaviour of the concerned agents, and we curtail the influence of the normative position, by appropriately using the annotations when checking if the norm applies to illocutions.",
                "The <br>algorithm</br> shown in Figure 4 depicts how we maintain a conflict-free set of norms.",
                "It adds a given norm N to an existing, conflictfree normative state Î”, obtaining a resulting new normative state Î” which is conflict-free, that is, its prohibitions are annotated with a set of conflict sets indicating which bindings for variables have to be avoided for conflicts not to take place. <br>algorithm</br> addNorm(N, Î”) begin 1 timestamp(N) 2 case N of 3 per(Â¯I): Î” := Î” âˆª {N} 4 prh(I): if N âˆˆ Î” s.t. conflict(N, N , Ïƒ) then Î” := Î” 5 else Î” := Î” âˆª {N} 6 prh(Â¯I): 7 begin 8 Î£ := âˆ… 9 for each N âˆˆ Î” do 10 if conflict(N, N , Ïƒ) then Î£ := Î£ âˆª {Ïƒ} 11 Î” := Î” âˆª {N Î£} 12 end 13 obl(Â¯I): 14 begin 15 Î”1 := âˆ…; Î”2 := âˆ… 16 for each (N Î£) âˆˆ Î” do 17 if N = prh(I) then 18 if conflict(N , N, Ïƒ) then Î”1 := Î”1 âˆª {N Î£} 19 else nil 20 else 21 if conflict(N , N, Ïƒ) then 22 begin 23 Î”1 := Î”1 âˆª {N Î£} 24 Î”2 := Î”2 âˆª {N (Î£ âˆª {Ïƒ})} 25 end 26 Î” := (Î” âˆ’ Î”1) âˆª Î”2 âˆª {N} 27 end 28 end case 29 return Î” end Figure 4: <br>algorithm</br> to Preserve Conflict-Freedom The algorithm uses a case of structure to differentiate the different possibilities for a given norm N. Line 3 addresses the case when the given norm is a permission: N is simply added to Î”.",
                "Lines 4-5 address the case when we attempt to add a ground prohibition to a normative state: if it conflicts with any obligation, then it is discarded; otherwise it is added to the normative state.",
                "Lines 6-12 describe the situation when the normative position to be added is a nonground prohibition.",
                "In this case, the <br>algorithm</br> initialises Î£ to an empty set and loops (line 9-10) through the norms N in the old normative state Î”.",
                "Upon finding one that conflicts with N, the <br>algorithm</br> updates Î£ by adding the newly found conflict set Ïƒ to it (line 10).",
                "By looping through Î”, we are able to check any conflicts between the new prohibition and the existing obligations, adequately building the annotation Î£ to be used when adding N to Î” in line 11.",
                "Lines 13-27 describe how a new obligation is accommodated to an existing normative state.",
                "We make use of two initially empty, temporary sets, Î”1, Î”2.",
                "The <br>algorithm</br> loops through Î” (lines 16-25) picking up those annotated prohibitions N Î£ which conflict with the new obligation.",
                "There are, however, two cases to deal with: the one when a ground The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 641 prohibition is found (line 17), and its exception, covering non-ground prohibitions (line 20).",
                "In both cases, the old prohibition is stored in Î”1 (lines 18 and 23) to be later removed from Î” (line 26).",
                "However, in the case of a nonground prohibition, the <br>algorithm</br> updates its annotation of conflict sets (line 24).",
                "The loop guarantees that an exhaustive (linear) search through a normative state takes place, checking if the new obligation is in conflict with any existing prohibitions, possibly updating the annotations of these conflicting prohibitions.",
                "In line 26 the <br>algorithm</br> builds the new updated Î” by removing the old prohibitions stored in Î”1 and adding the updated prohibitions stored in Î”2 (if any), as well as the new obligation N. Our proposed <br>algorithm</br> is correct in that, for a given normative position N and a normative state Î”, it provides a new normative state Î” in which all prohibitions have annotations recording how they unify with existing obligations.",
                "The annotations can be empty, though: this is the case when we have a ground prohibition or a prohibition which does not unify/conflict with any obligation.",
                "Permissions do not affect our <br>algorithm</br> and they are appropriately dealt with (line 3).",
                "Any attempt to insert a ground prohibition which conflicts, yields the same normative state (line 4).",
                "When a new obligation is being added then the <br>algorithm</br> guarantees that all prohibitions are considered (lines 14-27), leading to the removal of conflicting ground prohibitions or the update of annotations of non-ground prohibitions.",
                "The <br>algorithm</br> always terminates: the loops are over a finite set Î” and the conflict checks and set operations always terminate.",
                "The complexity of the <br>algorithm</br> is linear: the set Î” is only examined once for each possible case of norm to be added.",
                "When managing normative states we may also need to remove normative positions.",
                "This is straightforward: permissions can be removed without any problems; annotated prohibitions can also be removed without further considerations; obligations, however, require some housekeeping.",
                "When an obligation is to be removed, we must check it against all annotated prohibitions in order to update their annotations.",
                "We apply the conflict check and obtain a unifier, then remove this unifier from the prohibitions annotation.",
                "We invoke the removal <br>algorithm</br> as removeNorm(N, Î”): it returns a new normative state Î” in which N has been removed, with possible alterations to other normative positions as explained. 6.2 Enactment of a Normative Structure The enactment of a normative structure amounts to the parallel, distributed execution of normative scenes and normative transitions.",
                "For illustrative purposes, hereafter we shall describe the interplay between the payment and delivery normative scenes and the normative transition nt linking them in the upper half of figure 2.",
                "With this aim, consider for instance that obl(inform(jules, client, rod, acc, pay(copper, 400, 350), T) âˆˆ Î”payment and that Î”delivery holds prh(inform(rod,wm, jules, client, delivered(Z, Q), T)).",
                "Such states indicate that client Jules is obliged to pay Â£400 for 350kg of copper to accountant Rod according to the payment normative scene, whereas Rod, taking up the role of warehouse manager this time, is prohibited to deliver anything to client Jules according to the delivery normative scene.",
                "For each normative scene, the enactment process goes as follows.",
                "Firstly, it processes its incoming message queue that contains three types of messages: utterances from the activity it is linked to; and normative commands either to add or remove normative positions.",
                "For instance, in our example, the payment normative scene collects the illocution I = utt((inform(jules, client, rod, acc, pay(copper, 400, 350), 35)) standing for client Jules pending payment for copper (via arrow A in figure 2).",
                "Utterances are timestamped and subsequently added to the normative state.",
                "We would have Î”payment = Î”payment âˆª {I}, in our example.",
                "Upon receiving normative commands to either add or remove a normative position, the normative scene invokes the corresponding addition or removal <br>algorithm</br> described in Section 6.1.",
                "Secondly, the normative scene acknowledges its state change by sending a trigger message to every outgoing normative transition it is connected to.",
                "In our example, the payment normative scene would be signalling its state change to normative transition nt.",
                "For normative transitions, the process works differently.",
                "Because each normative transition controls the operation of a single rule, upon receiving a trigger message, it polls every incoming normative scene for substitutions for the relevant illocution schemata on the LHS of its rule.",
                "In our example, nt (being responsible for the rule described in Section 3.4), would poll the payment normative scene (via arrow B) for substitutions.",
                "Upon receiving replies from them (in the form of sets of substitutions together with time-stamps), it has to unify substitutions from each of these normative scenes.",
                "For each unification it finds, the rule is fired, and hence the corresponding normative command is sent along to the output normative scene.",
                "The normative transition then keeps track of the firing message it sent on and of the time-stamps of the normative positions that triggered the firing.",
                "This is done to ensure that the very same normative positions in the LHS of a rule only trigger its firing once.",
                "In our example, nt would be receiving Ïƒ = {X/jules, Y/rod, Z/copper, Q/350} from the payment normative scene.",
                "Since the substitions in Ïƒ unify with nts rule, the rule is fired, and the normative command add(delivery : obl(rod, wm, jules, client, delivered(copper, 350), T)) is sent along to the delivery normative scene to oblige Rod to deliver to client Jules 350kg of copper.",
                "After that, the delivery normative scene would invoke the addNorm <br>algorithm</br> from figure 4 with Î”delivery and N = obl(rod, wm, jules, client, delivered(copper, 350)) as arguments. 7.",
                "RELATED WORK AND CONCLUSIONS Our contributions in this paper are three-fold.",
                "Firstly, we introduce an approach for the management of and reasoning about norms in a distributed manner.",
                "To our knowledge, there is little work published in this direction.",
                "In [8, 21], two languages are presented for the distributed enforcement of norms in MAS.",
                "However, in both works, each agent has a local message interface that forwards legal messages according to a set of norms.",
                "Since these interfaces are local to each agent, norms can only be expressed in terms of actions of that agent.",
                "This is a serious disadvantage, e.g. when one needs to activate an obligation to one agent due to a certain message of another one.",
                "The second contribution is the proposal of a normative structure.",
                "The notion is fruitful because it allows the separation of normative and procedural concerns.",
                "The normative structure we propose makes evident the similarity between the propagation of normative positions and the propagation 642 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) of tokens in Coloured Petri Nets.",
                "That similarity readily suggests a mapping between the two, and gives grounds to a convenient analytical treatment of the normative structure, in general, and the complexity of conflict detection, in particular.",
                "The idea of modelling interactions (in the form of conversations) via Petri Nets has been investigated in [18], where the interaction medium and individual agents are modelled as CPN sub-nets that are subsequently combined for analysis.",
                "In [5], conversations are first designed and analysed at the level of CPNs and thereafter translated into protocols.",
                "Lin et al. [20] map conversation schemata to CPNs.",
                "To our knowledge, the use of this representation in the support of conflict detection in regulated MAS has not been reported elsewhere.",
                "Finally, we present a distributed mechanism to resolve normative conflicts.",
                "Sartor [25] treats normative conflicts from the point of view of legal theory and suggests a way to order the norms involved.",
                "His idea is implemented in [12] but requires a central resource for norm maintenance.",
                "The approach to conflict detection and resolution is an adaptation and extension of the work on instantiation graphs reported in [17] and a related <br>algorithm</br> in [27].",
                "The <br>algorithm</br> presented in the current paper can be used to manage normative states distributedly: normative scenes that happen in parallel have an associated normative state Î” to which the <br>algorithm</br> is independently applied each time a new norm is to be introduced.",
                "These three contributions we present in this paper open many possibilities for future work.",
                "We should mention first, that as a broad strategy we are working on a generalisation of the notion of normative structure to make it operate with different coordination models, with richer deontic content and on top of different computational realisations of regulated MAS.",
                "As a first step in this direction we are taking advantage of the de-coupling between interaction protocols and declarative normative guidance that the normative structure makes available, to provide a normative layer for electronic institutions (as defined in [1]).",
                "We expect such coupling will endow electronic institutions with a more flexible -and more expressive- normative environment.",
                "Furthermore, we want to extend our model along several directions: (1) to handle negation and constraints as part of the norm language, and in particular the notion of time; (2) to accommodate multiple, hierarchical norm authorities based on roles, along the lines of Cholvy and Cuppens [3] and power relationships as suggested by Carabelea et al. [2]; (3) to capture in the conflict resolution <br>algorithm</br> different semantics relating the deontic notions by supporting different axiomations (e.g., relative strength of prohibition versus obligation, default deontic notions, deontic inconsistencies).",
                "On the theoretical side, we intend to use analysis techniques of CPNs in order to characterise classes of CPNs (e.g., acyclic, symmetric, etc.) corresponding to families of Normative Structures that are susceptible to tractable offline conflict detection.",
                "The combination of these techniques along with our online conflict resolution mechanisms is intended to endow MAS designers with the ability to incorporate norms into their systems in a principled way. 8.",
                "REFERENCES [1] J. L. Arcos, M. Esteva, P. Noriega, J.",
                "A. RodrÂ´Ä±guez, and C. Sierra.",
                "Engineering open environments with electronic institutions.",
                "Journal on Engineering Applications of Artificial Intelligence, 18(2):191-204, 2005. [2] C. Carabelea, O. Boissier, and C. Castelfranchi.",
                "Using social power to enable agents to reason about being part of a group.",
                "In 5th Internat.",
                "Workshop, ESAW 2004, pages 166-177, 2004. [3] L. Cholvy and F. Cuppens.",
                "Solving normative conflicts by merging roles.",
                "In Fifth International Conference on Artificial Intelligence and Law, Washington, USA, 1995. [4] S. Christensen and T. B. Haagh.",
                "Design CPN - overview of CPN ML syntax.",
                "Technical report, University of Aarhus, 1996. [5] R. S. Cost, Y. Chen, T. W. Finin, Y. Labrou, and Y. Peng.",
                "Using colored petri nets for conversation modeling.",
                "In Issues in Agent Communication, pages 178-192, London, UK, 2000. [6] F. Dignum.",
                "Autonomous Agents with Norms.",
                "Artificial Intelligence and Law, 7(1):69-79, 1999. [7] A. Elhag, J. Breuker, and P. Brouwer.",
                "On the Formal Analysis of Normative Conflicts.",
                "Information & Comms.",
                "Techn.",
                "Law, 9(3):207-217, Oct. 2000. [8] M. Esteva, W. Vasconcelos, C. Sierra, and J.",
                "A. RodrÂ´Ä±guez-Aguilar.",
                "Norm consistency in electronic institutions. volume 3171 (LNAI), pages 494-505.",
                "Springer-Verlag, 2004. [9] M. Fitting.",
                "First-Order Logic and Automated Theorem Proving.",
                "Springer-Verlag, New York, U.S.A., 1990. [10] N. Fornara, F. Vigan`o, and M. Colombetti.",
                "An Event Driven Approach to Norms in Artificial Institutions.",
                "In AAMAS05 Workshop: Agents, Norms and Institutions for Regulated Multiagent Systems (ANI@REM), Utrecht, 2005. [11] D. Gaertner, P. Noriega, and C. Sierra.",
                "Extending the BDI architecture with commitments.",
                "In Proceedings of the 9th International Conference of the Catalan Association of Artificial Intelligence, 2006. [12] A. GarcÂ´Ä±a-Camino, P. Noriega, and J.-A.",
                "RodrÂ´Ä±guez-Aguilar.",
                "An <br>algorithm</br> for Conflict Resolution in Regulated Compound Activities.",
                "In 7th Int.Workshop - ESAW 06, 2006. [13] A. GarcÂ´Ä±a-Camino, J.-A.",
                "RodrÂ´Ä±guez-Aguilar, C. Sierra, and W. Vasconcelos.",
                "A Distributed Architecture for Norm-Aware Agent Societies.",
                "In DALT III, volume 3904 (LNAI), pages 89-105.",
                "Springer, 2006. [14] F. Giunchiglia and L. Serafini.",
                "Multi-language hierarchical logics or: How we can do without modal logics.",
                "Artificial Intelligence, 65(1):29-70, 1994. [15] J. Habermas.",
                "The Theory of Communication Action, Volume One, Reason and the Rationalization of Society.",
                "Beacon Press, 1984. [16] K. Jensen.",
                "Coloured Petri Nets: Basic Concepts, Analysis Methods and Practical Uses (Volume 1).",
                "Springer, 1997. [17] M. Kollingbaum and T. Norman.",
                "Strategies for resolving norm conflict in practical reasoning.",
                "In ECAI Workshop Coordination in Emergent Agent Societies 2004, 2004. [18] J.-L. Koning, G. Francois, and Y. Demazeau.",
                "Formalization and pre-validation for interaction protocols in a multi agent systems.",
                "In ECAI, pages 298-307, 1998. [19] B. Kramer and J. Mylopoulos.",
                "Knowledge Representation.",
                "In S. C. Shapiro, editor, Encyclopedia of Artificial Intelligence, volume 1, pages 743-759.",
                "John Wiley & Sons, 1992. [20] F. Lin, D. H. Norrie, W. Shen, and R. Kremer.",
                "A schema-based approach to specifying conversation policies.",
                "In Issues in Agent Communication, pages 193-204, 2000. [21] N. Minsky.",
                "Law Governed Interaction (LGI): A Distributed Coordination and Control Mechanism (An Introduction, and a Reference Manual).",
                "Technical report, Rutgers University, 2005. [22] T. Murata.",
                "Petri nets: Properties, analysis and applications.",
                "Proceedings of the IEEE, 77(4):541-580, 1989. [23] S. Parsons, C. Sierra, and N. Jennings.",
                "Agents that reason and negotiate by arguing.",
                "Journal of Logic and Computation, 8(3):261-292, 1998. [24] A. Ricci and M. Viroli.",
                "Coordination Artifacts: A Unifying Abstraction for Engineering Environment-Mediated Coordination in MAS.",
                "Informatica, 29:433-443, 2005. [25] G. Sartor.",
                "Normative conflicts in legal reasoning.",
                "Artificial Intelligence and Law, 1(2-3):209-235, June 1992. [26] M. Sergot.",
                "A Computational Theory of Normative Positions.",
                "ACM Trans.",
                "Comput.",
                "Logic, 2(4):581-622, 2001. [27] W. W. Vasconcelos, M. Kollingbaum, and T. Norman.",
                "Resolving Conflict and Inconsistency in Norm-Regulated Virtual Organisations.",
                "In Proceedings of AAMAS 07, Hawaii, USA, 2007.",
                "IFAAMAS. [28] G. H. von Wright.",
                "Norm and Action: A Logical Inquiry.",
                "Routledge and Kegan Paul, London, 1963. [29] M. Wooldridge.",
                "An Introduction to Multiagent Systems.",
                "John Wiley & Sons, Chichester, UK, Feb. 2002.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 643"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Dado que se requiere una resoluciÃ³n de conflictos en lÃ­nea, presentamos un \"algoritmo\" manejable para emplear distribuidos.",
                "Luego demostramos que este \"algoritmo\" es primordial para la promulgaciÃ³n distribuida de un ns.",
                "Por lo tanto, presentamos un \"algoritmo\" manejable para la resoluciÃ³n de conflictos.",
                "Este \"algoritmo\" es primordial para la promulgaciÃ³n distribuida de un ns.",
                "La SecciÃ³n 6 describe la gestiÃ³n computacional de NSS describiendo su promulgaciÃ³n y presentando un \"algoritmo\" para la resoluciÃ³n de conflictos.",
                "Suponemos que Unify es una implementaciÃ³n adecuada de un \"algoritmo\" de unificaciÃ³n que yo) siempre termina (posiblemente falla, si no se puede encontrar un unifier);ii) es correcto;y iii) tiene complejidad computacional lineal.",
                "Definimos debajo de un \"algoritmo\" que garantiza que se agregarÃ¡ una posiciÃ³n normativa a una escena normativa de tal manera que no cause ningÃºn conflicto.3 Aunque proponemos reducir las prohibiciones, se puede usar la misma maquinaria para definir la reducciÃ³n de las obligaciones.",
                "El \"algoritmo\" que se muestra en la Figura 4 muestra cÃ³mo mantenemos un conjunto de normas sin conflictos.",
                "Agrega una norma dada n a un estado normativo existente y sin conflicto Î´, obteniendo un nuevo estado normativo resultante Î´ que estÃ¡ libre de conflictos, es decir, sus prohibiciones se anotan con un conjunto de conjuntos de conflictos que indican quÃ© enlaces para variables deben evitarsepara que no se realicen conflictos.\"Algoritmo\" addnorm (n, Î´) comience 1 marca de tiempo (n) 2 caso n de 3 por (Â¯i): Î”: = Î´ âˆª {n} 4 prh (i): si n âˆˆ Î´ s.t.conflicto (n, n, Ïƒ) luego Î´: = Î” 5 mÃ¡s Î´: = Î´ âˆª {n} 6 prh (Â¯i): 7 comienza 8 Ïƒ: = âˆ… 9 para cada n âˆˆ Î´ do 10 if conflicto (n,,, n,,N, Ïƒ) Entonces Ïƒ: = Ïƒ âˆª {Ïƒ} 11 Î´: = Î´ âˆª {n Ïƒ} 12 End 13 obl (Â¯i): 14 Comienza 15 Î”1: = âˆ…;Î”2: = âˆ… 16 para cada (n Ïƒ) âˆˆ Î´ do 17 si n = pRH (i) entonces 18 si conflicto (n, n, Ïƒ) entonces Î”1: = Î”1 âˆª {n Ïƒ} 19 mÃ¡s nil 20 mÃ¡s 21 siconflicto (n, n, Ïƒ) luego 22 comienza 23 Î”1: = Î”1 âˆª {n Ïƒ} 24 Î”2: = Î”2 âˆª {n (Ïƒ âˆª {Ïƒ})} 25 End 26 Î´: = (Î” - Î”1) âˆª Î”2âˆª âˆª {n} 27 final 28 final caso 29 retorno Î´ final Figura 4: \"Algoritmo\" para preservar el cargo de conflicto El algoritmo utiliza un caso de estructura para diferenciar las diferentes posibilidades para una norma N. La lÃ­nea 3 aborda el caso cuando el casoLa norma es un permiso: N simplemente se agrega a Î´.",
                "En este caso, el \"algoritmo\" inicializa Ïƒ a un conjunto vacÃ­o y bucles (lÃ­nea 9-10) a travÃ©s de las normas N en el estado normativo antiguo Î´.",
                "Al encontrar uno que entra en conflicto con N, el \"algoritmo\" actualiza Ïƒ al agregar el conflicto reciÃ©n encontrado establecido Ïƒ (lÃ­nea 10).",
                "El \"algoritmo\" buce a travÃ©s de Î´ (lÃ­neas 16-25) recogiendo las prohibiciones anotadas n Ïƒ que entran en conflicto con la nueva obligaciÃ³n.",
                "Sin embargo, en el caso de una prohibiciÃ³n sin reducciÃ³n, el \"algoritmo\" actualiza su anotaciÃ³n de conjuntos de conflictos (lÃ­nea 24).",
                "En la lÃ­nea 26, el \"algoritmo\" construye el nuevo Î´ actualizado al eliminar las prohibiciones antiguas almacenadas en Î”1 y agregar las prohibiciones actualizadas almacenadas en Î”2 (si las hay), asÃ­ como la nueva obligaciÃ³n N. Nuestro \"algoritmo\" propuesto es correcto en eso, para una posiciÃ³n normativa dada n y un estado normativo Î´, proporciona un nuevo estado normativo Î´ en el que todas las prohibiciones tienen anotaciones que registran cÃ³mo se unifican con las obligaciones existentes.",
                "Los permisos no afectan nuestro \"algoritmo\" y se tratan adecuadamente (lÃ­nea 3).",
                "Cuando se agrega una nueva obligaciÃ³n, el \"algoritmo\" garantiza que se consideran todas las prohibiciones (lÃ­neas 14-27), lo que lleva a la eliminaciÃ³n de las prohibiciones de tierra conflictivas o la actualizaciÃ³n de anotaciones de prohibiciones no terrestres.",
                "El \"algoritmo\" siempre termina: los bucles superan un conjunto finito Î´ y las verificaciones de conflicto y las operaciones establecidas siempre terminan.",
                "La complejidad del \"algoritmo\" es lineal: el conjunto Î´ solo se examina una vez para cada posible caso de norma a agregar.",
                "Invocamos el \"algoritmo\" de eliminaciÃ³n como removenorm (n, Î´): devuelve un nuevo estado normativo Î´ en el que se ha eliminado N, con posibles alteraciones a otras posiciones normativas como se explica.6.2 AdministraciÃ³n de una estructura normativa La promulgaciÃ³n de una estructura normativa equivale a la ejecuciÃ³n paralela y distribuida de escenas normativas y transiciones normativas.",
                "Al recibir comandos normativos para agregar o eliminar una posiciÃ³n normativa, la escena normativa invoca la adiciÃ³n o eliminaciÃ³n del \"algoritmo\" de eliminaciÃ³n correspondiente descrita en la SecciÃ³n 6.1.",
                "DespuÃ©s de eso, la escena normativa de entrega invocarÃ­a el \"algoritmo\" de AddNorm de la Figura 4 con Î”Delivery y N = obl (barra, Wm, Jules, cliente, entregado (cobre, 350)) como argumentos.7.",
                "El enfoque de la detecciÃ³n y resoluciÃ³n de conflictos es una adaptaciÃ³n y extensiÃ³n del trabajo en grÃ¡ficos de instanciaciÃ³n reportados en [17] y un \"algoritmo\" relacionado en [27].",
                "El \"algoritmo\" presentado en el documento actual se puede utilizar para administrar estados normativos distribuidos: las escenas normativas que ocurren en paralelo tienen un estado normativo asociado Î´ al que el \"algoritmo\" se aplica de forma independiente cada vez que se introduce una nueva norma.",
                "AdemÃ¡s, queremos extender nuestro modelo a lo largo de varias direcciones: (1) para manejar la negaciÃ³n y las limitaciones como parte del lenguaje de la norma, y en particular la nociÃ³n de tiempo;(2) Para acomodar mÃºltiples autoridades de normas jerÃ¡rquicas basadas en roles, en la lÃ­nea de Cholvy y Cuppens [3] y las relaciones de poder como lo sugieren Carabelea et al.[2];(3) Capturar en la resoluciÃ³n de conflictos \"Algoritmo\" de diferentes semÃ¡nticas relacionadas con las nociones deoÃ­picas al apoyar diferentes axiomaciones (por ejemplo, fuerza relativa de prohibiciÃ³n versus obligaciÃ³n, nociones deÃ³nticas predeterminadas, inconsistencias deÃ³nticas).",
                "Un \"algoritmo\" para la resoluciÃ³n de conflictos en actividades compuestas reguladas."
            ],
            "translated_text": "",
            "candidates": [
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "Algoritmo",
                "Algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "Algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "Algoritmo",
                "algoritmo",
                "algoritmo"
            ],
            "error": []
        },
        "activity": {
            "translated_key": "actividad",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Distributed Norm Management in Regulated Multi-Agent Systems âˆ— Dorian Gaertner Dept.",
                "of Computing, Imperial College London, London SW7 2AZ, United Kingdom dg00@doc.ic.ac.uk Andres Garcia-Camino, Pablo Noriega, J.-A.",
                "Rodriguez-Aguilar IIIA-CSIC, 08193 Bellaterra, Spain {andres,pablo,jar}@iiia.csic.es Wamberto Vasconcelos Dept. of Computing Science, University of Aberdeen, Aberdeen AB24 3UE, United Kingdom wvasconcelos@acm.org ABSTRACT Norms are widely recognised as a means of coordinating multi-agent systems.",
                "The distributed management of norms is a challenging issue and we observe a lack of truly distributed computational realisations of normative models.",
                "In order to regulate the behaviour of autonomous agents that take part in multiple, related activities, we propose a normative model, the Normative Structure (NS), an artifact that is based on the propagation of normative positions (obligations, prohibitions, permissions), as consequences of agents actions.",
                "Within a NS, conflicts may arise due to the dynamic nature of the MAS and the concurrency of agents actions.",
                "However, ensuring conflict-freedom of a NS at design time is computationally intractable.",
                "We show this by formalising the notion of conflict, providing a mapping of NSs into Coloured Petri Nets and borrowing well-known theoretical results from that field.",
                "Since online conflict resolution is required, we present a tractable algorithm to be employed distributedly.",
                "We then demonstrate that this algorithm is paramount for the distributed enactment of a NS.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Languages and structures General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION A fundamental feature of open, regulated multi-agent systems in which autonomous agents interact, is that participating agents are meant to comply with the conventions of the system.",
                "Norms can be used to model such conventions and hence as a means to regulate the observable behaviour of agents [6, 29].",
                "There are many contributions on the subject of norms from sociologists, philosophers and logicians (e.g., [15, 28]).",
                "However, there are very few proposals for computational realisations of normative models - the way norms can be integrated in the design and execution of MASs.",
                "The few that exist (e.g. [10, 13, 24]), operate in a centralised manner which creates bottlenecks and single points-of-failure.",
                "To our knowledge, no proposal truly supports the distributed enactment of normative environments.",
                "In our paper we approach that problem and propose means to handle conflicting commitments in open, regulated, multiagent systems in a distributed manner.",
                "The type of regulated MAS we envisage consists of multiple, concurrent, related activities where agents interact.",
                "Each agent may concurrently participate in several activities, and change from one <br>activity</br> to another.",
                "An agents actions within an <br>activity</br> may have consequences in the form of normative positions (i.e. obligations, permissions, and prohibitions) [26] that may constrain its future behaviour.",
                "For instance, a buyer agent who runs out of credit may be forbidden to make further offers, or a seller agent is obliged to deliver after closing a deal.",
                "We assume that agents may choose not to fulfill all their obligations and hence may be sanctioned by the MAS.",
                "Notice that, when activities are distributed, normative positions must flow from the activities in which they are generated to those in which they take effect.",
                "For instance, the sellers obligation above must flow (or be propagated) from a negotiation <br>activity</br> to a delivery <br>activity</br>.",
                "Since in an open, regulated MAS one cannot embed normative aspects into the agents design, we adopt the view that the MAS should be supplemented with a separate set of norms that further regulates the behaviour of participating agents.",
                "In order to model the separation of concerns between the coordination level (agents interactions) and the normative level (propagation of normative positions), we propose an artifact called the Normative Structure (NS).",
                "Within a NS conflicts may arise due to the dynamic nature of the MAS and the concurrency of agents actions.",
                "For instance, an agent may be obliged and prohibited to do the 636 978-81-904262-7-5 (RPS) c 2007 IFAAMAS very same action in an <br>activity</br>.",
                "Since the regulation of a MAS entails that participating agents need to be aware of the validity of those actions that take place within it, such conflicts ought to be identified and possibly resolved if a claim of validity is needed for an agent to engage in an action or be sanctioned.",
                "However, ensuring conflict-freedom of a NS at design time is computationally intractable.",
                "We show this by formalising the notion of conflict, providing a mapping of NSs into Coloured Petri Nets (CPNs) and borrowing well-known theoretical results from the field of CPNs.",
                "We believe that online conflict detection and resolution is required.",
                "Hence, we present a tractable algorithm for conflict resolution.",
                "This algorithm is paramount for the distributed enactment of a NS.",
                "The paper is organised as follows.",
                "In Section 2 we detail a scenario to serve as an example throughout the paper.",
                "Next, in Section 3 we formally define the normative structure artifact.",
                "Further on, in Section 4 we formalise the notion of conflict to subsequently analyse the complexity of conflict detection in terms of CPNs in Section 5.",
                "Section 6 describes the computational management of NSs by describing their enactment and presenting an algorithm for conflict resolution.",
                "Finally, we comment on related work, draw conclusions and report on future work in Section 7. 2.",
                "SCENARIO We use a supply-chain scenario in which companies and individuals come together at an online marketplace to conduct business.",
                "The overall transaction procedure may be organised as six distributed activities, represented as nodes in the diagram in Figure 1.",
                "They involve different participants whose behaviour is coordinated through protocols.",
                "In this scenario agents can play one of four roles: marExit Registration Payment Delivery Negotiation Coordination Model Contract Figure 1: <br>activity</br> Structure of the Scenario ketplace accountant (acc), client, supplier (supp) and warehouse managers (wm).",
                "The arrows connecting the activities represent how agents can move from one <br>activity</br> to another.",
                "After registering at the marketplace, clients and suppliers get together in an <br>activity</br> where they negotiate the terms of their transaction, i.e. prices, amounts of goods to be delivered, deadlines and other details.",
                "In the contract <br>activity</br>, the order becomes established and an invoice is prepared.",
                "The client will then participate in a payment <br>activity</br>, verifying his credit-worthiness and instructing his bank to transfer the correct amount of money.",
                "The supplier in the meantime will arrange for the goods to be delivered (e.g. via a warehouse manager) in the delivery <br>activity</br>.",
                "Finally, agents can leave the marketplace conforming to a predetermined exit protocol.",
                "The marketplace accountant participates in most of the activities as a trusted provider of auditing tools.",
                "In the rest of the paper we shall build on this scenario to exemplify the notion of normative structure and to illustrate our approach to conflict detection and resolution in a distributed setting. 3.",
                "NORMATIVE STRUCTURE In MASs agents interact according to protocols which naturally are distributed.",
                "We advocate that actions in one such protocol may have an effect on the enactment of other protocols.",
                "Certain actions can become prohibited or obligatory, for example.",
                "We take normative positions to be obligations, prohibitions and permissions akin to work described in [26].",
                "The intention of adding or removing a normative position we call normative command.",
                "Occurrences of normative positions in one protocol may also have consequences for other protocols1 .",
                "In order to define our norm language and specify how normative positions are propagated, we have been inspired by multi-context systems [14].",
                "These systems allow the structuring of knowledge into distinct formal theories and the definition of relationships between them.",
                "The relationships are expressed as bridge rules - deducibility of formulae in some contexts leads to the deduction of other formulae in other contexts.",
                "Recently, these systems have been successfully used to define agent architectures [11, 23].",
                "The metaphor translates to our current work as follows: the utterance of illocutions and/or the existence of normative positions in some normative scenes leads to the deduction of normative positions in other normative scenes.",
                "We are concerned with the propagation and distribution of normative positions within a network of distributed, normative scenes as a consequence of agents actions.",
                "We take normative scenes to be sets of normative positions and utterances that are associated with an underlying interaction protocol corresponding to an <br>activity</br>.",
                "In this section, we first present a simple language capturing these aspects and formally introduce the notions of normative scene, normative transition rule and normative structure.",
                "We give the intended semantics of these rules and show how to control a MAS via norms in an example. 3.1 Basic Concepts The building blocks of our language are terms and atomic formulae: Def. 1.",
                "A term, denoted as t, is (i) any constant expressed using lowercase (with or without subscripts), e.g. a, b0, c or (ii) any variable expressed using uppercase (with or without subscripts), e.g.",
                "X, Y, Zb or (iii) any function f(t1, . . . , tn), where f is an n-ary function symbol and t1, .., tn are terms.",
                "Some examples of terms and functions are Credit, price or offer(bible, 30) being respectively a variable, a constant and a function.",
                "We will be making use of identifiers throughout the paper, which are constant terms and also need the following definition: Def. 2.",
                "An atomic formula is any construct p(t1, . . . , tn), where p is an n-ary predicate symbol and t1, . . . , tn are terms.",
                "The set of all atomic formulae is denoted as Î”.",
                "We focus on an expressive class of MASs in which interaction is carried out by means of illocutionary speech acts exchanged among participating agents: Def. 3.",
                "Illocutions I are ground atomic formulae which have the form p(ag, r, ag , r , Î´, t) where p is an element of 1 Here, we abstract from protocols and refer to them generically as activities.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 637 a set of illocutionary particles (e.g. inform, request, offer); ag, ag are agent identifiers; r, r are role identifiers; Î´, an arbitrary ground term, is the content of the message, built from a shared content language; t âˆˆ N is a time stamp.",
                "The intuitive meaning of p(ag, r, ag , r , m, t) is that agent ag playing role r sent message m to agent ag playing role r at time t. An example of an illocution is inform(ag4, supp, ag3, client, offer(wire, 12), 10).",
                "Sometimes it is useful to refer to illocutions that are not fully grounded, that is, those that may contain uninstantiated (free) variables.",
                "In the description of a protocol, for instance, the precise values of the message exchanged can be left unspecified.",
                "During the enactment of the protocol agents will produce the actual values which will give rise to a ground illocution.",
                "We can thus define illocution schemata: Def. 4.",
                "An illocution schema Â¯I is any atomic formula p(ag, r, ag , r , Î´, t) in which some of the terms may either be variables or may contain variables. 3.2 Formal Definition of the Notion of NS We first define normative scenes as follows: Def. 5.",
                "A normative scene is a tuple s = ids, Î”s where ids is a scene identifier and Î”s is the set of atomic formulae Î´ (i.e. utterances and normative positions) that hold in s. We will also refer to Î”s as the state of normative scene s. For instance, a snapshot of the state of the delivery normative scene of our scenario could be represented as: Î”s = 8 < : utt(request(sean, client, kev, wm, receive(wire, 200), 20)), utt(accept(kev, wm, sean, client, receive(wire, 200), 30)), obl(inform(kev, wm, sean, client, delivered(wire, 200), 30)) 9 = ; That is, agent Sean taking up the client role has requested agent Kev (taking up the warehouse manager role wm) to receive 200kg of wire, and agent Kev is obliged to deliver 200kg of wire to Sean since he accepted the request.",
                "Note that the state of a normative scene Î”s evolves over time.",
                "These normative scenes are connected to one another via normative transitions that specify how utterances and normative positions in one scene affect other normative scenes.",
                "As mentioned above, activities are not independent since illocutions uttered in some of them may have an effect on other ones.",
                "Normative transition rules define the conditions under which a normative command is generated.",
                "These conditions are either utterances or normative positions associated with a given protocol (denoted e.g. <br>activity</br> : utterance) which yield a normative command, i.e. the addition or removal of another normative position, possibly related to a different <br>activity</br>.",
                "Our transition rules are thus defined: Def. 6.",
                "A normative transition rule R is of the form: R ::= V C V ::= ids : D | V, V D ::= N | utt(Â¯I) N ::= per(Â¯I) | prh(Â¯I) | obl(Â¯I) C ::= add(ids : N) | remove(ids : N) where Â¯I is an illocution schema, N is a normative position (i.e. permission, prohibition or obligation), ids is an identifier for <br>activity</br> s and C is a normative command.",
                "We endow our language with the usual semantics of rulebased languages [19].",
                "Rules map an existing normative structure to a new normative structure where only the state of the normative scenes change.",
                "In the definitions below we rely on the standard concept of substitution [9].",
                "Def. 7.",
                "A normative transition is a tuple b = idb, rb where idb is an identifier and rb is a normative transition rule.",
                "We are proposing to extend the notion of MAS, regulated by protocols, with an extra layer consisting of normative scenes and normative transitions.",
                "This layer is represented as a bi-partite graph that we term normative structure.",
                "A normative structure relates normative scenes and normative transitions specifying which normative positions are to be generated or removed in which normative scenes.",
                "Def. 8.",
                "A normative structure is a labelled bi-partite graph NS = Nodes, Edges, Lin , Lout .",
                "Nodes is a set SâˆªB where S is a set of normative scenes and B is a set of normative transitions.",
                "Edges is a set Ain âˆª Aout where Ain âŠ† S Ã— B is a set of input arcs labelled with an atomic formula using the labelling function Lin : Ain â†’ D; and Aout âŠ† B Ã— S is a set of output arcs labelled with a normative position using the labelling function Lout : Aout â†’ N. The following must hold: 1.",
                "Each atomic formula appearing in the LHS of a rule rb must be of the form (ids : D) where s âˆˆ S and D âˆˆ Î” and âˆƒain âˆˆ Ain such that ain = (s, b) and Lin (ain ) = D. 2.",
                "The atomic formula appearing in the RHS of a rule rb must be of the form add(ids : N) or remove(ids : N) where s âˆˆ S and âˆƒaout âˆˆ Aout such that aout = (b, s) and Lout (aout ) = N. 3. âˆ€a âˆˆ Ain such that a = (s, b) and b = idb, rb and Lin (a) = D then (ids:D) must occur in the LHS of rb. 4. âˆ€a âˆˆ Aout such that a = (b, s) and b = idb, rb and Lout (a) = N then add(ids : N) or remove(ids : N) must occur in the RHS of rb.",
                "The first two points ensure that every atomic formulae on the LHS of a normative transition rule labels an arc entering the appropriate normative transition in the normative structure, and that the atomic formula on the RHS labels the corresponding outgoing arc.",
                "Points three and four ensure that labels from all incoming arcs are used in the LHS of the normative transition rule that these arcs enter into, and that the labels from all outgoing arcs are used in the RHS of the normative transition rule that these arcs leave. 3.3 Intended Semantics The formal semantics will be defined via a mapping to Coloured Petri Nets in Section 5.1.",
                "Here we start defining the intended semantics of normative transition rules by describing how a rule changes a normative scene of an existing normative structure yielding a new normative structure.",
                "Each rule is triggered once for each substitution that unifies the left-hand side V of the rule with the state of the corresponding normative scenes.",
                "An atomic formula (i.e. an utterance or a normative position) holds iff it is unifiable with an utterance or normative position that belongs to the state of the corresponding normative scene.",
                "Every time a rule is triggered, the normative command specified on the right-hand side of that rule is carried out, intending to add or remove a normative position from the state of the corresponding normative scene.",
                "However, addition is not unconditional as conflicts may arise.",
                "This topic will be treated in Sections 4 and 6.1. 638 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.4 Example In our running example we have the following exemplary normative transition rule: â€ž payment : obl(inform(X, client, Y, acc, pay(Z, P, Q), T )), payment : utt(inform(X, client, Y, acc, pay(Z, P, Q), T )) Â« delivery : add(obl(inform(Y, wm, X, client, delivered(Z, Q), T ))) That is, during the payment <br>activity</br>, an obligation on client X to inform accountant Y about the payment P of item Z at time T and the corresponding utterance which fulfills this obligation allows the flow of a norm to the delivery <br>activity</br>.",
                "The norm is an obligation on agent Y (this time taking up the role of the warehouse manager wm) to send a message to client X that item Z has been delivered.",
                "We show in Figure 2 a diagrammatic representation of how activities and a normative structure relate: Payment Delivery Contract Normative Level Exit Registration Payment Delivery Negotiation Coordination Level Contract nt Figure 2: Activities and Normative Structure As illocutions are uttered during activities, normative positions arise.",
                "Utterances and normative positions are combined in transition rules, causing the flow of normative positions between normative scenes.",
                "The connection between the two levels is described in Section 6.2. 4.",
                "CONFLICT DEFINITION The terms deontic conflict and deontic inconsistency have been used interchangeably in the literature.",
                "However, in this paper we adopt the view of [7] in which the authors suggest that a deontic inconsistency arises when an action is simultaneously permitted and prohibited - since a permission may not be acted upon, no real conflict occurs.",
                "The situations when an action is simultaneously obliged and prohibited are, however, deontic conflicts, as both obligations and prohibitions influence behaviours in a conflicting fashion.",
                "The content of normative positions in this paper are illocutions.",
                "Therefore, a normative conflict arises when an illocution is simultaneously obliged and prohibited.",
                "We propose to use the standard notion of unification [9] to detect when a prohibition and a permission overlap.",
                "For instance, an obligation obl(inform(A1, R1, A2, R2, p(c, X), T)) and a prohibition prh(inform(a1, r1, a2, r2, p(Y, d), T )) are in conflict as they unify under Ïƒ = {A1/a1, R1/r1, A2/a2, R2/r2, Y/c, X/d, T/T }).",
                "We formally capture this notion: Def. 9.",
                "A (deontic) conflict arises between two normative positions N and N under a substitution Ïƒ, denoted as conflict(N, N , Ïƒ), if and only if N = prh(Â¯I), N = obl(Â¯I ) and unify(Â¯I,Â¯I , Ïƒ).",
                "That is, a prohibition and an obligation are in conflict if, and only if, their illocutions unify under Ïƒ.",
                "The substitution Ïƒ, called here the conflict set, unifies the agents, roles and atomic formulae.",
                "We assume that unify is a suitable implementation of a unification algorithm which i) always terminates (possibly failing, if a unifier cannot be found); ii) is correct; and iii) has linear computational complexity.",
                "Inconsistencies caused by the same illocution being simultaneously permitted and prohibited can be formalised similarly.",
                "In this paper we focus on prohibition/obligation conflicts, but the computational machinery introduced in Section 6.1 can equally be used to detect prohibition/permission inconsistencies, if we substitute modality obl for per. 5.",
                "FORMALISING CONFLICT-FREEDOM In this section we introduce some background knowledge on CPNs assuming a basic understanding of ordinary Petri Nets.",
                "For technical details we refer the reader to [16].",
                "We then map NSs to CPNs and analyse their properties.",
                "CPNs combine the strength of Petri nets with the strength of functional programming languages.",
                "On the one hand, Petri nets provide the primitives for the description of the synchronisation of concurrent processes.",
                "As noticed in [16], CPNs have a semantics which builds upon true concurrency, instead of interleaving.",
                "In our opinion, a true-concurrency semantics is easier to work with because it is the way we envisage the connection between the coordination level and the normative level of a multi-agent system to be.",
                "On the other hand, the functional programming languages used by CPNs provide the primitives for the definition of data types and the manipulation of their data values.",
                "Thus, we can readily translate expressions of a normative structure.",
                "Last but not least, CPNs have a well-defined semantics which unambiguously defines the behaviour of each CPN.",
                "Furthermore, CPNs have a large number of formal analysis methods and tools by which properties of CPNs can be proved.",
                "Summing up, CPNs provide us with all the necessary features to formally reason about normative structures given that an adequate mapping is provided.",
                "In accordance with Petri nets, the states of a CPN are represented by means of places.",
                "But unlike Petri Nets, each place has an associated data type determining the kind of data which the place may contain.",
                "A state of a CPN is called a marking.",
                "It consists of a number of tokens positioned on the individual places.",
                "Each token carries a data value which has the type of the corresponding place.",
                "In general, a place may contain two or more tokens with the same data value.",
                "Thus, a marking of a CPN is a function which maps each place into a multi-set2 of tokens of the correct type.",
                "One often refers to the token values as token colours and one also refers to the data types as colour sets.",
                "The types of a CPN can be arbitrarily complex.",
                "Actions in a CPN are represented by means of transitions.",
                "An incoming arc into a transition from a place indicates that the transition may remove tokens from the corresponding place while an outgoing arc indicates that the transition may add tokens.",
                "The exact number of tokens and their data values are determined by the arc expressions, which are encoded using the programming language chosen for the CPN.",
                "A transition is enabled in a CPN if and only if all the 2 A multi-set (or bag) is an extension to the notion of set, allowing the possibility of multiple appearances of the same element.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 639 variables in the expressions of its incoming arcs are bound to some value(s) (each one of these bindings is referred to as a binding element).",
                "If so, the transition may occur by removing tokens from its input places and adding tokens to its output places.",
                "In addition to the arc expressions, it is possible to attach a boolean guard expression (with variables) to each transition.",
                "Putting all the elements above together we obtain a formal definition of CPN that shall be employed further ahead for mapping purposes.",
                "Def. 10.",
                "A CPN is a tuple Î£, P, T, A, N, C, G, E, I where: (i) Î£ is a finite set of non-empty types, also called colour sets; (ii) P is a finite set of places; (iii) T is a finite set of transitions; (iv) A is a finite set of arcs; (v) N is a node function defined from A into P Ã— T âˆª T Ã— P; (vi) C is a colour function from P into Î£; (vii) G is a guard function from T into expressions; (viii) E is an arc expression function from A into expressions; (ix) I is an initialisation function from P into closed expressions; Notice that the informal explanation of the enabling and occurrence rules given above provides the foundations to understand the behaviour of a CPN.",
                "In accordance with ordinary Petri nets, the concurrent behaviour of a CPN is based on the notion of step.",
                "Formally, a step is a non-empty and finite multi-set over the set of all binding elements.",
                "Let step S be enabled in a marking M. Then, S may occur, changing the marking M to M .",
                "Moreover, we say that marking M is directly reachable from marking M by the occurrence of step S, and we denote it by M[S > M .",
                "A finite occurrence sequence is a finite sequence of steps and markings: M1[S1 > M2 . . .",
                "Mn[Sn > Mn+1 such that n âˆˆ N and Mi[Si > Mi+1 âˆ€i âˆˆ {1, . . . , n}.",
                "The set of all possible markings reachable for a net Net from a marking M is called its reachability set, and is denoted as R(Net, M). 5.1 Mapping to Coloured Petri Nets Our normative structure is a labelled bi-partite graph.",
                "The same is true for a Coloured Petri Net.",
                "We are presenting a mapping f from one to the other, in order to provide semantics for the normative structure and prove properties about it by using well-known theoretical results from work on CPNs.",
                "The mapping f makes use of correspondences between normative scenes and CPN places, normative transitions and CPN transitions and finally, between arc labels and CPN arc expressions.",
                "S â†’ P B â†’ T Lin âˆª Lout â†’ E The set of types is the singleton set containing the colour NP (i.e.",
                "Î£ = {NP}).",
                "This complex type is structured as follows (we use CPN-ML [4] syntax): color NPT = with Obl | Per | Prh | NoMod color IP = with inform | declare | offer color UTT = record illp : IP ag1, role1, ag2, role2 : string content: string time : int color NP = record mode : NPT illoc : UTT Modelling illocutions as norms without modality (NoMod) is a formal trick we use to ensure that sub-nets can be combined as explained below.",
                "Arcs are mapped almost directly.",
                "A is a finite set of arcs and N is a node function, such that âˆ€a âˆˆ A âˆƒa âˆˆ Ain âˆªAout .",
                "N(a) = a .",
                "The initialisation function I is defined as I(p) = Î”s (âˆ€s âˆˆ S where p is obtained from s using the mapping; remember that s = ids, Î”s ).",
                "Finally, the colour function C assigns the colour NP to every place: C(p) = NP (âˆ€p âˆˆ P).",
                "We are not making use of the guard function G. In future work, this function can be used to model constraints when we extend the expressiveness of our norm language. 5.2 Properties of Normative Structures Having defined the mapping from normative structures to Coloured Petri Nets, we now look at properties of CPNs that help us understand the complexity of conflict detection.",
                "One question we would like to answer is, whether at a given point in time, a given normative structure is conflict-free.",
                "Such a snapshot of a normative structure corresponds to a marking in the mapped CPN.",
                "Def. 11.",
                "Given a marking Mi, this marking is conflictfree if Â¬âˆƒp âˆˆ P. âˆƒnp1, np2 âˆˆ Mi(p) such that np1.mode = Obl and np2.mode = Prh and np1.illoc and np2.illoc unify under a valid substitution.",
                "Another interesting question would be, whether a conflict will occur from such a snapshot of the system by propagating the normative positions.",
                "In order to answer this question, we first translate the snapshot of the normative structure to the corresponding CPN and then execute the finite occurence sequence of markings and steps, verifying the conflict-freedom of each marking as we go along.",
                "Def. 12.",
                "Given a marking Mi, a finite occurrence sequence Si, Si+1, ..., Sn is called conflict-free, if and only if Mi[Si > Mi+1 . . .",
                "Mn[Sn > Mn+1 and Mk is conflict-free for all k such that i â‰¤ k â‰¤ n + 1.",
                "However, the main question we would like to investigate, is whether or not a given normative structure is conflictresistant, that is, whether or not the agents enacting the MAS are able to bring about conflicts through their actions.",
                "As soon as one includes the possibility of actions (or utterances) from autonomous agents, one looses determinism.",
                "Having mapped the normative structure to a CPN, we now add CPN models of the agents interactions.",
                "Each form of agent interaction (i.e. each <br>activity</br>) can be modelled using CPNs along the lines of Cost et al. [5].",
                "These nondeterministic CPNs feed tokens into the CPN that models the normative structure.",
                "This leads to the introduction of non-determinism into the combined CPN.",
                "The lower half of figure 3 shows part of a CPN model of an agent protocol where the arc denoted with 1 represents some utterance of an illocution by an agent.",
                "The target transition of this arc, not only moves a token on to the next state of this CPN, but also places a token in the place corresponding to the appropriate normative scene in the CPN model of the normative structure (via arc 2).",
                "Transition 3 finally could propagate that token in form of an obligation, for example.",
                "Thus, from a given marking, many different occurrence sequences are possible depending on the agents actions.",
                "We make use of the reachability set R to define a situation in which agents cannot cause conflicts. 640 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) Figure 3: Constructing the combined CPN Def. 13.",
                "Given a net N, a marking M is conflict-resistant if and only if all markings in R(N,M) are conflict-free.",
                "Checking conflict-freedom of a marking can be done in polynomial time by checking all places of the CPN for conflicting tokens.",
                "Conflict-freedom of an occurrence sequence in the CPN that represents the normative structure can also be done in polynomial time since this sequence is deterministic given a snapshot.",
                "Whether or not a normative structure is designed safely corresponds to checking the conflict-resistance of the initial marking M0.",
                "Now, verifying conflict-resistance of a marking becomes a very difficult task.",
                "It corresponds to the reachability problem in a CPN: can a state be reached or a marking achieved, that contains a conflict?.",
                "This reachability problem is known to be NP-complete for ordinary Petri Nets [22] and since CPNs are functionally identical, we cannot hope to verify conflict-resistance of a normative structure off-line in a reasonable amount of time.",
                "Therefore, distributed, run-time mechanisms are needed to ensure that a normative structure maintains consistency.",
                "We present one such mechanism in the following section. 6.",
                "MANAGING NORMATIVE STRUCTURES Once a conflict (as defined in Section 4) has been detected, we propose to employ the unifier to resolve the conflict.",
                "In our example, if the variables in prh(inform(a1, r1, a2, r2, p(Y, d), T )) do not get the values specified in substitution Ïƒ then there will not be a conflict.",
                "However, rather than computing the complement set of a substitution (which can be an infinite set) we propose to annotate the prohibition with the unifier itself and use it to determine what the variables of that prohibition cannot be in future unifications in order to avoid a conflict.",
                "We therefore denote annotated prohibitions as prh(Â¯I) Î£, where Î£ = {Ïƒ1, . . . , Ïƒn}, is a set of unifiers.",
                "Annotated norms3 are interpreted as deontic constructs with curtailed influences, that is, their effect (on agents, roles and illocutions) has been limited by the set Î£ of unifiers.",
                "A prohibition may be in conflict with various obligations in a given normative scene s = id, Î” and we need to record (and possibly avoid) all these conflicts.",
                "We define below an algorithm which ensures that a normative position will be added to a normative scene in such a way that it will not cause any conflicts. 3 Although we propose to curtail prohibitions, the same machinery can be used to define the curtailment of obligations instead.",
                "These different policies are dependent on the intended deontic semantics and requirements of the systems addressed.",
                "For instance, some MASs may require that their agents should not act in the presence of conflicts, that is, the obligation should be curtailed. 6.1 Conflict Resolution We propose a fine-grained way of resolving normative conflicts via unification.",
                "We detect the overlapping of the influences of norms , i.e. how they affect the behaviour of the concerned agents, and we curtail the influence of the normative position, by appropriately using the annotations when checking if the norm applies to illocutions.",
                "The algorithm shown in Figure 4 depicts how we maintain a conflict-free set of norms.",
                "It adds a given norm N to an existing, conflictfree normative state Î”, obtaining a resulting new normative state Î” which is conflict-free, that is, its prohibitions are annotated with a set of conflict sets indicating which bindings for variables have to be avoided for conflicts not to take place. algorithm addNorm(N, Î”) begin 1 timestamp(N) 2 case N of 3 per(Â¯I): Î” := Î” âˆª {N} 4 prh(I): if N âˆˆ Î” s.t. conflict(N, N , Ïƒ) then Î” := Î” 5 else Î” := Î” âˆª {N} 6 prh(Â¯I): 7 begin 8 Î£ := âˆ… 9 for each N âˆˆ Î” do 10 if conflict(N, N , Ïƒ) then Î£ := Î£ âˆª {Ïƒ} 11 Î” := Î” âˆª {N Î£} 12 end 13 obl(Â¯I): 14 begin 15 Î”1 := âˆ…; Î”2 := âˆ… 16 for each (N Î£) âˆˆ Î” do 17 if N = prh(I) then 18 if conflict(N , N, Ïƒ) then Î”1 := Î”1 âˆª {N Î£} 19 else nil 20 else 21 if conflict(N , N, Ïƒ) then 22 begin 23 Î”1 := Î”1 âˆª {N Î£} 24 Î”2 := Î”2 âˆª {N (Î£ âˆª {Ïƒ})} 25 end 26 Î” := (Î” âˆ’ Î”1) âˆª Î”2 âˆª {N} 27 end 28 end case 29 return Î” end Figure 4: Algorithm to Preserve Conflict-Freedom The algorithm uses a case of structure to differentiate the different possibilities for a given norm N. Line 3 addresses the case when the given norm is a permission: N is simply added to Î”.",
                "Lines 4-5 address the case when we attempt to add a ground prohibition to a normative state: if it conflicts with any obligation, then it is discarded; otherwise it is added to the normative state.",
                "Lines 6-12 describe the situation when the normative position to be added is a nonground prohibition.",
                "In this case, the algorithm initialises Î£ to an empty set and loops (line 9-10) through the norms N in the old normative state Î”.",
                "Upon finding one that conflicts with N, the algorithm updates Î£ by adding the newly found conflict set Ïƒ to it (line 10).",
                "By looping through Î”, we are able to check any conflicts between the new prohibition and the existing obligations, adequately building the annotation Î£ to be used when adding N to Î” in line 11.",
                "Lines 13-27 describe how a new obligation is accommodated to an existing normative state.",
                "We make use of two initially empty, temporary sets, Î”1, Î”2.",
                "The algorithm loops through Î” (lines 16-25) picking up those annotated prohibitions N Î£ which conflict with the new obligation.",
                "There are, however, two cases to deal with: the one when a ground The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 641 prohibition is found (line 17), and its exception, covering non-ground prohibitions (line 20).",
                "In both cases, the old prohibition is stored in Î”1 (lines 18 and 23) to be later removed from Î” (line 26).",
                "However, in the case of a nonground prohibition, the algorithm updates its annotation of conflict sets (line 24).",
                "The loop guarantees that an exhaustive (linear) search through a normative state takes place, checking if the new obligation is in conflict with any existing prohibitions, possibly updating the annotations of these conflicting prohibitions.",
                "In line 26 the algorithm builds the new updated Î” by removing the old prohibitions stored in Î”1 and adding the updated prohibitions stored in Î”2 (if any), as well as the new obligation N. Our proposed algorithm is correct in that, for a given normative position N and a normative state Î”, it provides a new normative state Î” in which all prohibitions have annotations recording how they unify with existing obligations.",
                "The annotations can be empty, though: this is the case when we have a ground prohibition or a prohibition which does not unify/conflict with any obligation.",
                "Permissions do not affect our algorithm and they are appropriately dealt with (line 3).",
                "Any attempt to insert a ground prohibition which conflicts, yields the same normative state (line 4).",
                "When a new obligation is being added then the algorithm guarantees that all prohibitions are considered (lines 14-27), leading to the removal of conflicting ground prohibitions or the update of annotations of non-ground prohibitions.",
                "The algorithm always terminates: the loops are over a finite set Î” and the conflict checks and set operations always terminate.",
                "The complexity of the algorithm is linear: the set Î” is only examined once for each possible case of norm to be added.",
                "When managing normative states we may also need to remove normative positions.",
                "This is straightforward: permissions can be removed without any problems; annotated prohibitions can also be removed without further considerations; obligations, however, require some housekeeping.",
                "When an obligation is to be removed, we must check it against all annotated prohibitions in order to update their annotations.",
                "We apply the conflict check and obtain a unifier, then remove this unifier from the prohibitions annotation.",
                "We invoke the removal algorithm as removeNorm(N, Î”): it returns a new normative state Î” in which N has been removed, with possible alterations to other normative positions as explained. 6.2 Enactment of a Normative Structure The enactment of a normative structure amounts to the parallel, distributed execution of normative scenes and normative transitions.",
                "For illustrative purposes, hereafter we shall describe the interplay between the payment and delivery normative scenes and the normative transition nt linking them in the upper half of figure 2.",
                "With this aim, consider for instance that obl(inform(jules, client, rod, acc, pay(copper, 400, 350), T) âˆˆ Î”payment and that Î”delivery holds prh(inform(rod,wm, jules, client, delivered(Z, Q), T)).",
                "Such states indicate that client Jules is obliged to pay Â£400 for 350kg of copper to accountant Rod according to the payment normative scene, whereas Rod, taking up the role of warehouse manager this time, is prohibited to deliver anything to client Jules according to the delivery normative scene.",
                "For each normative scene, the enactment process goes as follows.",
                "Firstly, it processes its incoming message queue that contains three types of messages: utterances from the <br>activity</br> it is linked to; and normative commands either to add or remove normative positions.",
                "For instance, in our example, the payment normative scene collects the illocution I = utt((inform(jules, client, rod, acc, pay(copper, 400, 350), 35)) standing for client Jules pending payment for copper (via arrow A in figure 2).",
                "Utterances are timestamped and subsequently added to the normative state.",
                "We would have Î”payment = Î”payment âˆª {I}, in our example.",
                "Upon receiving normative commands to either add or remove a normative position, the normative scene invokes the corresponding addition or removal algorithm described in Section 6.1.",
                "Secondly, the normative scene acknowledges its state change by sending a trigger message to every outgoing normative transition it is connected to.",
                "In our example, the payment normative scene would be signalling its state change to normative transition nt.",
                "For normative transitions, the process works differently.",
                "Because each normative transition controls the operation of a single rule, upon receiving a trigger message, it polls every incoming normative scene for substitutions for the relevant illocution schemata on the LHS of its rule.",
                "In our example, nt (being responsible for the rule described in Section 3.4), would poll the payment normative scene (via arrow B) for substitutions.",
                "Upon receiving replies from them (in the form of sets of substitutions together with time-stamps), it has to unify substitutions from each of these normative scenes.",
                "For each unification it finds, the rule is fired, and hence the corresponding normative command is sent along to the output normative scene.",
                "The normative transition then keeps track of the firing message it sent on and of the time-stamps of the normative positions that triggered the firing.",
                "This is done to ensure that the very same normative positions in the LHS of a rule only trigger its firing once.",
                "In our example, nt would be receiving Ïƒ = {X/jules, Y/rod, Z/copper, Q/350} from the payment normative scene.",
                "Since the substitions in Ïƒ unify with nts rule, the rule is fired, and the normative command add(delivery : obl(rod, wm, jules, client, delivered(copper, 350), T)) is sent along to the delivery normative scene to oblige Rod to deliver to client Jules 350kg of copper.",
                "After that, the delivery normative scene would invoke the addNorm algorithm from figure 4 with Î”delivery and N = obl(rod, wm, jules, client, delivered(copper, 350)) as arguments. 7.",
                "RELATED WORK AND CONCLUSIONS Our contributions in this paper are three-fold.",
                "Firstly, we introduce an approach for the management of and reasoning about norms in a distributed manner.",
                "To our knowledge, there is little work published in this direction.",
                "In [8, 21], two languages are presented for the distributed enforcement of norms in MAS.",
                "However, in both works, each agent has a local message interface that forwards legal messages according to a set of norms.",
                "Since these interfaces are local to each agent, norms can only be expressed in terms of actions of that agent.",
                "This is a serious disadvantage, e.g. when one needs to activate an obligation to one agent due to a certain message of another one.",
                "The second contribution is the proposal of a normative structure.",
                "The notion is fruitful because it allows the separation of normative and procedural concerns.",
                "The normative structure we propose makes evident the similarity between the propagation of normative positions and the propagation 642 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) of tokens in Coloured Petri Nets.",
                "That similarity readily suggests a mapping between the two, and gives grounds to a convenient analytical treatment of the normative structure, in general, and the complexity of conflict detection, in particular.",
                "The idea of modelling interactions (in the form of conversations) via Petri Nets has been investigated in [18], where the interaction medium and individual agents are modelled as CPN sub-nets that are subsequently combined for analysis.",
                "In [5], conversations are first designed and analysed at the level of CPNs and thereafter translated into protocols.",
                "Lin et al. [20] map conversation schemata to CPNs.",
                "To our knowledge, the use of this representation in the support of conflict detection in regulated MAS has not been reported elsewhere.",
                "Finally, we present a distributed mechanism to resolve normative conflicts.",
                "Sartor [25] treats normative conflicts from the point of view of legal theory and suggests a way to order the norms involved.",
                "His idea is implemented in [12] but requires a central resource for norm maintenance.",
                "The approach to conflict detection and resolution is an adaptation and extension of the work on instantiation graphs reported in [17] and a related algorithm in [27].",
                "The algorithm presented in the current paper can be used to manage normative states distributedly: normative scenes that happen in parallel have an associated normative state Î” to which the algorithm is independently applied each time a new norm is to be introduced.",
                "These three contributions we present in this paper open many possibilities for future work.",
                "We should mention first, that as a broad strategy we are working on a generalisation of the notion of normative structure to make it operate with different coordination models, with richer deontic content and on top of different computational realisations of regulated MAS.",
                "As a first step in this direction we are taking advantage of the de-coupling between interaction protocols and declarative normative guidance that the normative structure makes available, to provide a normative layer for electronic institutions (as defined in [1]).",
                "We expect such coupling will endow electronic institutions with a more flexible -and more expressive- normative environment.",
                "Furthermore, we want to extend our model along several directions: (1) to handle negation and constraints as part of the norm language, and in particular the notion of time; (2) to accommodate multiple, hierarchical norm authorities based on roles, along the lines of Cholvy and Cuppens [3] and power relationships as suggested by Carabelea et al. [2]; (3) to capture in the conflict resolution algorithm different semantics relating the deontic notions by supporting different axiomations (e.g., relative strength of prohibition versus obligation, default deontic notions, deontic inconsistencies).",
                "On the theoretical side, we intend to use analysis techniques of CPNs in order to characterise classes of CPNs (e.g., acyclic, symmetric, etc.) corresponding to families of Normative Structures that are susceptible to tractable offline conflict detection.",
                "The combination of these techniques along with our online conflict resolution mechanisms is intended to endow MAS designers with the ability to incorporate norms into their systems in a principled way. 8.",
                "REFERENCES [1] J. L. Arcos, M. Esteva, P. Noriega, J.",
                "A. RodrÂ´Ä±guez, and C. Sierra.",
                "Engineering open environments with electronic institutions.",
                "Journal on Engineering Applications of Artificial Intelligence, 18(2):191-204, 2005. [2] C. Carabelea, O. Boissier, and C. Castelfranchi.",
                "Using social power to enable agents to reason about being part of a group.",
                "In 5th Internat.",
                "Workshop, ESAW 2004, pages 166-177, 2004. [3] L. Cholvy and F. Cuppens.",
                "Solving normative conflicts by merging roles.",
                "In Fifth International Conference on Artificial Intelligence and Law, Washington, USA, 1995. [4] S. Christensen and T. B. Haagh.",
                "Design CPN - overview of CPN ML syntax.",
                "Technical report, University of Aarhus, 1996. [5] R. S. Cost, Y. Chen, T. W. Finin, Y. Labrou, and Y. Peng.",
                "Using colored petri nets for conversation modeling.",
                "In Issues in Agent Communication, pages 178-192, London, UK, 2000. [6] F. Dignum.",
                "Autonomous Agents with Norms.",
                "Artificial Intelligence and Law, 7(1):69-79, 1999. [7] A. Elhag, J. Breuker, and P. Brouwer.",
                "On the Formal Analysis of Normative Conflicts.",
                "Information & Comms.",
                "Techn.",
                "Law, 9(3):207-217, Oct. 2000. [8] M. Esteva, W. Vasconcelos, C. Sierra, and J.",
                "A. RodrÂ´Ä±guez-Aguilar.",
                "Norm consistency in electronic institutions. volume 3171 (LNAI), pages 494-505.",
                "Springer-Verlag, 2004. [9] M. Fitting.",
                "First-Order Logic and Automated Theorem Proving.",
                "Springer-Verlag, New York, U.S.A., 1990. [10] N. Fornara, F. Vigan`o, and M. Colombetti.",
                "An Event Driven Approach to Norms in Artificial Institutions.",
                "In AAMAS05 Workshop: Agents, Norms and Institutions for Regulated Multiagent Systems (ANI@REM), Utrecht, 2005. [11] D. Gaertner, P. Noriega, and C. Sierra.",
                "Extending the BDI architecture with commitments.",
                "In Proceedings of the 9th International Conference of the Catalan Association of Artificial Intelligence, 2006. [12] A. GarcÂ´Ä±a-Camino, P. Noriega, and J.-A.",
                "RodrÂ´Ä±guez-Aguilar.",
                "An Algorithm for Conflict Resolution in Regulated Compound Activities.",
                "In 7th Int.Workshop - ESAW 06, 2006. [13] A. GarcÂ´Ä±a-Camino, J.-A.",
                "RodrÂ´Ä±guez-Aguilar, C. Sierra, and W. Vasconcelos.",
                "A Distributed Architecture for Norm-Aware Agent Societies.",
                "In DALT III, volume 3904 (LNAI), pages 89-105.",
                "Springer, 2006. [14] F. Giunchiglia and L. Serafini.",
                "Multi-language hierarchical logics or: How we can do without modal logics.",
                "Artificial Intelligence, 65(1):29-70, 1994. [15] J. Habermas.",
                "The Theory of Communication Action, Volume One, Reason and the Rationalization of Society.",
                "Beacon Press, 1984. [16] K. Jensen.",
                "Coloured Petri Nets: Basic Concepts, Analysis Methods and Practical Uses (Volume 1).",
                "Springer, 1997. [17] M. Kollingbaum and T. Norman.",
                "Strategies for resolving norm conflict in practical reasoning.",
                "In ECAI Workshop Coordination in Emergent Agent Societies 2004, 2004. [18] J.-L. Koning, G. Francois, and Y. Demazeau.",
                "Formalization and pre-validation for interaction protocols in a multi agent systems.",
                "In ECAI, pages 298-307, 1998. [19] B. Kramer and J. Mylopoulos.",
                "Knowledge Representation.",
                "In S. C. Shapiro, editor, Encyclopedia of Artificial Intelligence, volume 1, pages 743-759.",
                "John Wiley & Sons, 1992. [20] F. Lin, D. H. Norrie, W. Shen, and R. Kremer.",
                "A schema-based approach to specifying conversation policies.",
                "In Issues in Agent Communication, pages 193-204, 2000. [21] N. Minsky.",
                "Law Governed Interaction (LGI): A Distributed Coordination and Control Mechanism (An Introduction, and a Reference Manual).",
                "Technical report, Rutgers University, 2005. [22] T. Murata.",
                "Petri nets: Properties, analysis and applications.",
                "Proceedings of the IEEE, 77(4):541-580, 1989. [23] S. Parsons, C. Sierra, and N. Jennings.",
                "Agents that reason and negotiate by arguing.",
                "Journal of Logic and Computation, 8(3):261-292, 1998. [24] A. Ricci and M. Viroli.",
                "Coordination Artifacts: A Unifying Abstraction for Engineering Environment-Mediated Coordination in MAS.",
                "Informatica, 29:433-443, 2005. [25] G. Sartor.",
                "Normative conflicts in legal reasoning.",
                "Artificial Intelligence and Law, 1(2-3):209-235, June 1992. [26] M. Sergot.",
                "A Computational Theory of Normative Positions.",
                "ACM Trans.",
                "Comput.",
                "Logic, 2(4):581-622, 2001. [27] W. W. Vasconcelos, M. Kollingbaum, and T. Norman.",
                "Resolving Conflict and Inconsistency in Norm-Regulated Virtual Organisations.",
                "In Proceedings of AAMAS 07, Hawaii, USA, 2007.",
                "IFAAMAS. [28] G. H. von Wright.",
                "Norm and Action: A Logical Inquiry.",
                "Routledge and Kegan Paul, London, 1963. [29] M. Wooldridge.",
                "An Introduction to Multiagent Systems.",
                "John Wiley & Sons, Chichester, UK, Feb. 2002.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 643"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Cada agente puede participar simultÃ¡neamente en varias actividades y cambiar de una \"actividad\" a otra.",
                "Las acciones de un agente dentro de una \"actividad\" pueden tener consecuencias en forma de posiciones normativas (es decir, obligaciones, permisos y prohibiciones) [26] que pueden limitar su comportamiento futuro.",
                "Por ejemplo, la obligaciÃ³n de los vendedores anteriores debe fluir (o ser propagada) de una \"actividad\" de negociaciÃ³n a una \"actividad\" de entrega.",
                "Por ejemplo, un agente puede estar obligado y prohibido a hacer el 636 978-81-904262-7-5 (RPS) c 2007 Ifaamas de la misma acciÃ³n en una \"actividad\".",
                "En este escenario, los agentes pueden desempeÃ±ar uno de los cuatro roles: Modelo de coordinaciÃ³n de negociaciÃ³n de pago de registro de registro Marexit Contrato de coordinaciÃ³n de negociaciÃ³n Figura 1: \"Actividad\" Estructura del escenario Contador Ketplace (ACC), Cliente, Proveedor (Supp) y Gerentes de Warehouse (WM).",
                "Las flechas que conectan las actividades representan cÃ³mo los agentes pueden moverse de una \"actividad\" a otra.",
                "DespuÃ©s de registrarse en el mercado, los clientes y los proveedores se reÃºnen en una \"actividad\" donde negocian los tÃ©rminos de su transacciÃ³n, es decir, precios, cantidades de bienes que se entregarÃ¡n, plazos y otros detalles.",
                "En el contrato \"actividad\", la orden se establece y se prepara una factura.",
                "Luego, el cliente participarÃ¡ en una \"actividad\" de pago, verificarÃ¡ su valÃ­a de crÃ©dito e instruye a su banco que transfiera la cantidad correcta de dinero.",
                "Mientras tanto, el proveedor organizarÃ¡ que se entreguen los productos (por ejemplo, a travÃ©s de un gerente de almacÃ©n) en la \"actividad\" de entrega.",
                "Tomamos que las escenas normativas sean conjuntos de posiciones normativas y expresiones asociadas con un protocolo de interacciÃ³n subyacente correspondiente a una \"actividad\".",
                "Estas condiciones son expresiones o posiciones normativas asociadas con un protocolo dado (denotado, por ejemplo, \"actividad\": enunciado) que producen un comando normativo, es decir, la adiciÃ³n o eliminaciÃ³n de otra posiciÃ³n normativa, posiblemente relacionada con una \"actividad\" diferente.",
                "Una regla de transiciÃ³n normativa R es de la forma: r :: = v c v :: = ids: d |V, V D :: = N |utt (Â¯i) n :: = per (Â¯i) |PRH (Â¯i) |obl (Â¯i) c :: = add (ids: n) |Eliminar (IDS: N) donde Â¯i es un esquema de ilocuciÃ³n, N es una posiciÃ³n normativa (es decir, permiso, prohibiciÃ³n u obligaciÃ³n), IDS es un identificador para la \"actividad\" S y C es un comando normativo.",
                "Conf.En agentes autÃ³nomos y sistemas de mÃºltiples agentes (AAMAS 07) 3.4 Ejemplo En nuestro ejemplo de ejecuciÃ³n, tenemos la siguiente regla de transiciÃ³n normativa ejemplar: â€žPago: OBL (Inform (X, Cliente, Y, ACC, Pay (Z, P, Q), T)), Pago: Utt (inform (x, cliente, y, acc, pay (z, p, q), t)) Â«Entrega: add (obl (inform (y, wm, x, cliente, entregado (Z, q), t))) es decir, durante la \"actividad\" de pago, una obligaciÃ³n del Cliente X de informar el Contador Y sobre el pago P del ArtÃ­culo Z en el momento T y la expresiÃ³n correspondiente que cumple esta obligaciÃ³n permite el flujo de flujo deUna norma a la entrega \"Actividad\".",
                "Cada forma de interacciÃ³n del agente (es decir, cada \"actividad\") puede modelarse utilizando CPN en la lÃ­nea de Costo et al.[5].",
                "En primer lugar, procesa su cola de mensajes entrantes que contiene tres tipos de mensajes: expresiones de la \"actividad\" a la que estÃ¡ vinculada;y comandos normativos para agregar o eliminar posiciones normativas."
            ],
            "translated_text": "",
            "candidates": [
                "actividad",
                "actividad",
                "actividad",
                "actividad",
                "actividad",
                "actividad",
                "actividad",
                "actividad",
                "actividad",
                "actividad",
                "Actividad",
                "actividad",
                "actividad",
                "actividad",
                "actividad",
                "actividad",
                "actividad",
                "actividad",
                "actividad",
                "actividad",
                "actividad",
                "actividad",
                "actividad",
                "actividad",
                "actividad",
                "actividad",
                "actividad",
                "actividad",
                "actividad",
                "actividad",
                "Actividad",
                "actividad",
                "actividad",
                "actividad",
                "actividad"
            ],
            "error": []
        },
        "scenario": {
            "translated_key": "escenario",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Distributed Norm Management in Regulated Multi-Agent Systems âˆ— Dorian Gaertner Dept.",
                "of Computing, Imperial College London, London SW7 2AZ, United Kingdom dg00@doc.ic.ac.uk Andres Garcia-Camino, Pablo Noriega, J.-A.",
                "Rodriguez-Aguilar IIIA-CSIC, 08193 Bellaterra, Spain {andres,pablo,jar}@iiia.csic.es Wamberto Vasconcelos Dept. of Computing Science, University of Aberdeen, Aberdeen AB24 3UE, United Kingdom wvasconcelos@acm.org ABSTRACT Norms are widely recognised as a means of coordinating multi-agent systems.",
                "The distributed management of norms is a challenging issue and we observe a lack of truly distributed computational realisations of normative models.",
                "In order to regulate the behaviour of autonomous agents that take part in multiple, related activities, we propose a normative model, the Normative Structure (NS), an artifact that is based on the propagation of normative positions (obligations, prohibitions, permissions), as consequences of agents actions.",
                "Within a NS, conflicts may arise due to the dynamic nature of the MAS and the concurrency of agents actions.",
                "However, ensuring conflict-freedom of a NS at design time is computationally intractable.",
                "We show this by formalising the notion of conflict, providing a mapping of NSs into Coloured Petri Nets and borrowing well-known theoretical results from that field.",
                "Since online conflict resolution is required, we present a tractable algorithm to be employed distributedly.",
                "We then demonstrate that this algorithm is paramount for the distributed enactment of a NS.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Languages and structures General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION A fundamental feature of open, regulated multi-agent systems in which autonomous agents interact, is that participating agents are meant to comply with the conventions of the system.",
                "Norms can be used to model such conventions and hence as a means to regulate the observable behaviour of agents [6, 29].",
                "There are many contributions on the subject of norms from sociologists, philosophers and logicians (e.g., [15, 28]).",
                "However, there are very few proposals for computational realisations of normative models - the way norms can be integrated in the design and execution of MASs.",
                "The few that exist (e.g. [10, 13, 24]), operate in a centralised manner which creates bottlenecks and single points-of-failure.",
                "To our knowledge, no proposal truly supports the distributed enactment of normative environments.",
                "In our paper we approach that problem and propose means to handle conflicting commitments in open, regulated, multiagent systems in a distributed manner.",
                "The type of regulated MAS we envisage consists of multiple, concurrent, related activities where agents interact.",
                "Each agent may concurrently participate in several activities, and change from one activity to another.",
                "An agents actions within an activity may have consequences in the form of normative positions (i.e. obligations, permissions, and prohibitions) [26] that may constrain its future behaviour.",
                "For instance, a buyer agent who runs out of credit may be forbidden to make further offers, or a seller agent is obliged to deliver after closing a deal.",
                "We assume that agents may choose not to fulfill all their obligations and hence may be sanctioned by the MAS.",
                "Notice that, when activities are distributed, normative positions must flow from the activities in which they are generated to those in which they take effect.",
                "For instance, the sellers obligation above must flow (or be propagated) from a negotiation activity to a delivery activity.",
                "Since in an open, regulated MAS one cannot embed normative aspects into the agents design, we adopt the view that the MAS should be supplemented with a separate set of norms that further regulates the behaviour of participating agents.",
                "In order to model the separation of concerns between the coordination level (agents interactions) and the normative level (propagation of normative positions), we propose an artifact called the Normative Structure (NS).",
                "Within a NS conflicts may arise due to the dynamic nature of the MAS and the concurrency of agents actions.",
                "For instance, an agent may be obliged and prohibited to do the 636 978-81-904262-7-5 (RPS) c 2007 IFAAMAS very same action in an activity.",
                "Since the regulation of a MAS entails that participating agents need to be aware of the validity of those actions that take place within it, such conflicts ought to be identified and possibly resolved if a claim of validity is needed for an agent to engage in an action or be sanctioned.",
                "However, ensuring conflict-freedom of a NS at design time is computationally intractable.",
                "We show this by formalising the notion of conflict, providing a mapping of NSs into Coloured Petri Nets (CPNs) and borrowing well-known theoretical results from the field of CPNs.",
                "We believe that online conflict detection and resolution is required.",
                "Hence, we present a tractable algorithm for conflict resolution.",
                "This algorithm is paramount for the distributed enactment of a NS.",
                "The paper is organised as follows.",
                "In Section 2 we detail a <br>scenario</br> to serve as an example throughout the paper.",
                "Next, in Section 3 we formally define the normative structure artifact.",
                "Further on, in Section 4 we formalise the notion of conflict to subsequently analyse the complexity of conflict detection in terms of CPNs in Section 5.",
                "Section 6 describes the computational management of NSs by describing their enactment and presenting an algorithm for conflict resolution.",
                "Finally, we comment on related work, draw conclusions and report on future work in Section 7. 2.",
                "<br>scenario</br> We use a supply-chain <br>scenario</br> in which companies and individuals come together at an online marketplace to conduct business.",
                "The overall transaction procedure may be organised as six distributed activities, represented as nodes in the diagram in Figure 1.",
                "They involve different participants whose behaviour is coordinated through protocols.",
                "In this <br>scenario</br> agents can play one of four roles: marExit Registration Payment Delivery Negotiation Coordination Model Contract Figure 1: Activity Structure of the <br>scenario</br> ketplace accountant (acc), client, supplier (supp) and warehouse managers (wm).",
                "The arrows connecting the activities represent how agents can move from one activity to another.",
                "After registering at the marketplace, clients and suppliers get together in an activity where they negotiate the terms of their transaction, i.e. prices, amounts of goods to be delivered, deadlines and other details.",
                "In the contract activity, the order becomes established and an invoice is prepared.",
                "The client will then participate in a payment activity, verifying his credit-worthiness and instructing his bank to transfer the correct amount of money.",
                "The supplier in the meantime will arrange for the goods to be delivered (e.g. via a warehouse manager) in the delivery activity.",
                "Finally, agents can leave the marketplace conforming to a predetermined exit protocol.",
                "The marketplace accountant participates in most of the activities as a trusted provider of auditing tools.",
                "In the rest of the paper we shall build on this <br>scenario</br> to exemplify the notion of normative structure and to illustrate our approach to conflict detection and resolution in a distributed setting. 3.",
                "NORMATIVE STRUCTURE In MASs agents interact according to protocols which naturally are distributed.",
                "We advocate that actions in one such protocol may have an effect on the enactment of other protocols.",
                "Certain actions can become prohibited or obligatory, for example.",
                "We take normative positions to be obligations, prohibitions and permissions akin to work described in [26].",
                "The intention of adding or removing a normative position we call normative command.",
                "Occurrences of normative positions in one protocol may also have consequences for other protocols1 .",
                "In order to define our norm language and specify how normative positions are propagated, we have been inspired by multi-context systems [14].",
                "These systems allow the structuring of knowledge into distinct formal theories and the definition of relationships between them.",
                "The relationships are expressed as bridge rules - deducibility of formulae in some contexts leads to the deduction of other formulae in other contexts.",
                "Recently, these systems have been successfully used to define agent architectures [11, 23].",
                "The metaphor translates to our current work as follows: the utterance of illocutions and/or the existence of normative positions in some normative scenes leads to the deduction of normative positions in other normative scenes.",
                "We are concerned with the propagation and distribution of normative positions within a network of distributed, normative scenes as a consequence of agents actions.",
                "We take normative scenes to be sets of normative positions and utterances that are associated with an underlying interaction protocol corresponding to an activity.",
                "In this section, we first present a simple language capturing these aspects and formally introduce the notions of normative scene, normative transition rule and normative structure.",
                "We give the intended semantics of these rules and show how to control a MAS via norms in an example. 3.1 Basic Concepts The building blocks of our language are terms and atomic formulae: Def. 1.",
                "A term, denoted as t, is (i) any constant expressed using lowercase (with or without subscripts), e.g. a, b0, c or (ii) any variable expressed using uppercase (with or without subscripts), e.g.",
                "X, Y, Zb or (iii) any function f(t1, . . . , tn), where f is an n-ary function symbol and t1, .., tn are terms.",
                "Some examples of terms and functions are Credit, price or offer(bible, 30) being respectively a variable, a constant and a function.",
                "We will be making use of identifiers throughout the paper, which are constant terms and also need the following definition: Def. 2.",
                "An atomic formula is any construct p(t1, . . . , tn), where p is an n-ary predicate symbol and t1, . . . , tn are terms.",
                "The set of all atomic formulae is denoted as Î”.",
                "We focus on an expressive class of MASs in which interaction is carried out by means of illocutionary speech acts exchanged among participating agents: Def. 3.",
                "Illocutions I are ground atomic formulae which have the form p(ag, r, ag , r , Î´, t) where p is an element of 1 Here, we abstract from protocols and refer to them generically as activities.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 637 a set of illocutionary particles (e.g. inform, request, offer); ag, ag are agent identifiers; r, r are role identifiers; Î´, an arbitrary ground term, is the content of the message, built from a shared content language; t âˆˆ N is a time stamp.",
                "The intuitive meaning of p(ag, r, ag , r , m, t) is that agent ag playing role r sent message m to agent ag playing role r at time t. An example of an illocution is inform(ag4, supp, ag3, client, offer(wire, 12), 10).",
                "Sometimes it is useful to refer to illocutions that are not fully grounded, that is, those that may contain uninstantiated (free) variables.",
                "In the description of a protocol, for instance, the precise values of the message exchanged can be left unspecified.",
                "During the enactment of the protocol agents will produce the actual values which will give rise to a ground illocution.",
                "We can thus define illocution schemata: Def. 4.",
                "An illocution schema Â¯I is any atomic formula p(ag, r, ag , r , Î´, t) in which some of the terms may either be variables or may contain variables. 3.2 Formal Definition of the Notion of NS We first define normative scenes as follows: Def. 5.",
                "A normative scene is a tuple s = ids, Î”s where ids is a scene identifier and Î”s is the set of atomic formulae Î´ (i.e. utterances and normative positions) that hold in s. We will also refer to Î”s as the state of normative scene s. For instance, a snapshot of the state of the delivery normative scene of our <br>scenario</br> could be represented as: Î”s = 8 < : utt(request(sean, client, kev, wm, receive(wire, 200), 20)), utt(accept(kev, wm, sean, client, receive(wire, 200), 30)), obl(inform(kev, wm, sean, client, delivered(wire, 200), 30)) 9 = ; That is, agent Sean taking up the client role has requested agent Kev (taking up the warehouse manager role wm) to receive 200kg of wire, and agent Kev is obliged to deliver 200kg of wire to Sean since he accepted the request.",
                "Note that the state of a normative scene Î”s evolves over time.",
                "These normative scenes are connected to one another via normative transitions that specify how utterances and normative positions in one scene affect other normative scenes.",
                "As mentioned above, activities are not independent since illocutions uttered in some of them may have an effect on other ones.",
                "Normative transition rules define the conditions under which a normative command is generated.",
                "These conditions are either utterances or normative positions associated with a given protocol (denoted e.g. activity : utterance) which yield a normative command, i.e. the addition or removal of another normative position, possibly related to a different activity.",
                "Our transition rules are thus defined: Def. 6.",
                "A normative transition rule R is of the form: R ::= V C V ::= ids : D | V, V D ::= N | utt(Â¯I) N ::= per(Â¯I) | prh(Â¯I) | obl(Â¯I) C ::= add(ids : N) | remove(ids : N) where Â¯I is an illocution schema, N is a normative position (i.e. permission, prohibition or obligation), ids is an identifier for activity s and C is a normative command.",
                "We endow our language with the usual semantics of rulebased languages [19].",
                "Rules map an existing normative structure to a new normative structure where only the state of the normative scenes change.",
                "In the definitions below we rely on the standard concept of substitution [9].",
                "Def. 7.",
                "A normative transition is a tuple b = idb, rb where idb is an identifier and rb is a normative transition rule.",
                "We are proposing to extend the notion of MAS, regulated by protocols, with an extra layer consisting of normative scenes and normative transitions.",
                "This layer is represented as a bi-partite graph that we term normative structure.",
                "A normative structure relates normative scenes and normative transitions specifying which normative positions are to be generated or removed in which normative scenes.",
                "Def. 8.",
                "A normative structure is a labelled bi-partite graph NS = Nodes, Edges, Lin , Lout .",
                "Nodes is a set SâˆªB where S is a set of normative scenes and B is a set of normative transitions.",
                "Edges is a set Ain âˆª Aout where Ain âŠ† S Ã— B is a set of input arcs labelled with an atomic formula using the labelling function Lin : Ain â†’ D; and Aout âŠ† B Ã— S is a set of output arcs labelled with a normative position using the labelling function Lout : Aout â†’ N. The following must hold: 1.",
                "Each atomic formula appearing in the LHS of a rule rb must be of the form (ids : D) where s âˆˆ S and D âˆˆ Î” and âˆƒain âˆˆ Ain such that ain = (s, b) and Lin (ain ) = D. 2.",
                "The atomic formula appearing in the RHS of a rule rb must be of the form add(ids : N) or remove(ids : N) where s âˆˆ S and âˆƒaout âˆˆ Aout such that aout = (b, s) and Lout (aout ) = N. 3. âˆ€a âˆˆ Ain such that a = (s, b) and b = idb, rb and Lin (a) = D then (ids:D) must occur in the LHS of rb. 4. âˆ€a âˆˆ Aout such that a = (b, s) and b = idb, rb and Lout (a) = N then add(ids : N) or remove(ids : N) must occur in the RHS of rb.",
                "The first two points ensure that every atomic formulae on the LHS of a normative transition rule labels an arc entering the appropriate normative transition in the normative structure, and that the atomic formula on the RHS labels the corresponding outgoing arc.",
                "Points three and four ensure that labels from all incoming arcs are used in the LHS of the normative transition rule that these arcs enter into, and that the labels from all outgoing arcs are used in the RHS of the normative transition rule that these arcs leave. 3.3 Intended Semantics The formal semantics will be defined via a mapping to Coloured Petri Nets in Section 5.1.",
                "Here we start defining the intended semantics of normative transition rules by describing how a rule changes a normative scene of an existing normative structure yielding a new normative structure.",
                "Each rule is triggered once for each substitution that unifies the left-hand side V of the rule with the state of the corresponding normative scenes.",
                "An atomic formula (i.e. an utterance or a normative position) holds iff it is unifiable with an utterance or normative position that belongs to the state of the corresponding normative scene.",
                "Every time a rule is triggered, the normative command specified on the right-hand side of that rule is carried out, intending to add or remove a normative position from the state of the corresponding normative scene.",
                "However, addition is not unconditional as conflicts may arise.",
                "This topic will be treated in Sections 4 and 6.1. 638 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.4 Example In our running example we have the following exemplary normative transition rule: â€ž payment : obl(inform(X, client, Y, acc, pay(Z, P, Q), T )), payment : utt(inform(X, client, Y, acc, pay(Z, P, Q), T )) Â« delivery : add(obl(inform(Y, wm, X, client, delivered(Z, Q), T ))) That is, during the payment activity, an obligation on client X to inform accountant Y about the payment P of item Z at time T and the corresponding utterance which fulfills this obligation allows the flow of a norm to the delivery activity.",
                "The norm is an obligation on agent Y (this time taking up the role of the warehouse manager wm) to send a message to client X that item Z has been delivered.",
                "We show in Figure 2 a diagrammatic representation of how activities and a normative structure relate: Payment Delivery Contract Normative Level Exit Registration Payment Delivery Negotiation Coordination Level Contract nt Figure 2: Activities and Normative Structure As illocutions are uttered during activities, normative positions arise.",
                "Utterances and normative positions are combined in transition rules, causing the flow of normative positions between normative scenes.",
                "The connection between the two levels is described in Section 6.2. 4.",
                "CONFLICT DEFINITION The terms deontic conflict and deontic inconsistency have been used interchangeably in the literature.",
                "However, in this paper we adopt the view of [7] in which the authors suggest that a deontic inconsistency arises when an action is simultaneously permitted and prohibited - since a permission may not be acted upon, no real conflict occurs.",
                "The situations when an action is simultaneously obliged and prohibited are, however, deontic conflicts, as both obligations and prohibitions influence behaviours in a conflicting fashion.",
                "The content of normative positions in this paper are illocutions.",
                "Therefore, a normative conflict arises when an illocution is simultaneously obliged and prohibited.",
                "We propose to use the standard notion of unification [9] to detect when a prohibition and a permission overlap.",
                "For instance, an obligation obl(inform(A1, R1, A2, R2, p(c, X), T)) and a prohibition prh(inform(a1, r1, a2, r2, p(Y, d), T )) are in conflict as they unify under Ïƒ = {A1/a1, R1/r1, A2/a2, R2/r2, Y/c, X/d, T/T }).",
                "We formally capture this notion: Def. 9.",
                "A (deontic) conflict arises between two normative positions N and N under a substitution Ïƒ, denoted as conflict(N, N , Ïƒ), if and only if N = prh(Â¯I), N = obl(Â¯I ) and unify(Â¯I,Â¯I , Ïƒ).",
                "That is, a prohibition and an obligation are in conflict if, and only if, their illocutions unify under Ïƒ.",
                "The substitution Ïƒ, called here the conflict set, unifies the agents, roles and atomic formulae.",
                "We assume that unify is a suitable implementation of a unification algorithm which i) always terminates (possibly failing, if a unifier cannot be found); ii) is correct; and iii) has linear computational complexity.",
                "Inconsistencies caused by the same illocution being simultaneously permitted and prohibited can be formalised similarly.",
                "In this paper we focus on prohibition/obligation conflicts, but the computational machinery introduced in Section 6.1 can equally be used to detect prohibition/permission inconsistencies, if we substitute modality obl for per. 5.",
                "FORMALISING CONFLICT-FREEDOM In this section we introduce some background knowledge on CPNs assuming a basic understanding of ordinary Petri Nets.",
                "For technical details we refer the reader to [16].",
                "We then map NSs to CPNs and analyse their properties.",
                "CPNs combine the strength of Petri nets with the strength of functional programming languages.",
                "On the one hand, Petri nets provide the primitives for the description of the synchronisation of concurrent processes.",
                "As noticed in [16], CPNs have a semantics which builds upon true concurrency, instead of interleaving.",
                "In our opinion, a true-concurrency semantics is easier to work with because it is the way we envisage the connection between the coordination level and the normative level of a multi-agent system to be.",
                "On the other hand, the functional programming languages used by CPNs provide the primitives for the definition of data types and the manipulation of their data values.",
                "Thus, we can readily translate expressions of a normative structure.",
                "Last but not least, CPNs have a well-defined semantics which unambiguously defines the behaviour of each CPN.",
                "Furthermore, CPNs have a large number of formal analysis methods and tools by which properties of CPNs can be proved.",
                "Summing up, CPNs provide us with all the necessary features to formally reason about normative structures given that an adequate mapping is provided.",
                "In accordance with Petri nets, the states of a CPN are represented by means of places.",
                "But unlike Petri Nets, each place has an associated data type determining the kind of data which the place may contain.",
                "A state of a CPN is called a marking.",
                "It consists of a number of tokens positioned on the individual places.",
                "Each token carries a data value which has the type of the corresponding place.",
                "In general, a place may contain two or more tokens with the same data value.",
                "Thus, a marking of a CPN is a function which maps each place into a multi-set2 of tokens of the correct type.",
                "One often refers to the token values as token colours and one also refers to the data types as colour sets.",
                "The types of a CPN can be arbitrarily complex.",
                "Actions in a CPN are represented by means of transitions.",
                "An incoming arc into a transition from a place indicates that the transition may remove tokens from the corresponding place while an outgoing arc indicates that the transition may add tokens.",
                "The exact number of tokens and their data values are determined by the arc expressions, which are encoded using the programming language chosen for the CPN.",
                "A transition is enabled in a CPN if and only if all the 2 A multi-set (or bag) is an extension to the notion of set, allowing the possibility of multiple appearances of the same element.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 639 variables in the expressions of its incoming arcs are bound to some value(s) (each one of these bindings is referred to as a binding element).",
                "If so, the transition may occur by removing tokens from its input places and adding tokens to its output places.",
                "In addition to the arc expressions, it is possible to attach a boolean guard expression (with variables) to each transition.",
                "Putting all the elements above together we obtain a formal definition of CPN that shall be employed further ahead for mapping purposes.",
                "Def. 10.",
                "A CPN is a tuple Î£, P, T, A, N, C, G, E, I where: (i) Î£ is a finite set of non-empty types, also called colour sets; (ii) P is a finite set of places; (iii) T is a finite set of transitions; (iv) A is a finite set of arcs; (v) N is a node function defined from A into P Ã— T âˆª T Ã— P; (vi) C is a colour function from P into Î£; (vii) G is a guard function from T into expressions; (viii) E is an arc expression function from A into expressions; (ix) I is an initialisation function from P into closed expressions; Notice that the informal explanation of the enabling and occurrence rules given above provides the foundations to understand the behaviour of a CPN.",
                "In accordance with ordinary Petri nets, the concurrent behaviour of a CPN is based on the notion of step.",
                "Formally, a step is a non-empty and finite multi-set over the set of all binding elements.",
                "Let step S be enabled in a marking M. Then, S may occur, changing the marking M to M .",
                "Moreover, we say that marking M is directly reachable from marking M by the occurrence of step S, and we denote it by M[S > M .",
                "A finite occurrence sequence is a finite sequence of steps and markings: M1[S1 > M2 . . .",
                "Mn[Sn > Mn+1 such that n âˆˆ N and Mi[Si > Mi+1 âˆ€i âˆˆ {1, . . . , n}.",
                "The set of all possible markings reachable for a net Net from a marking M is called its reachability set, and is denoted as R(Net, M). 5.1 Mapping to Coloured Petri Nets Our normative structure is a labelled bi-partite graph.",
                "The same is true for a Coloured Petri Net.",
                "We are presenting a mapping f from one to the other, in order to provide semantics for the normative structure and prove properties about it by using well-known theoretical results from work on CPNs.",
                "The mapping f makes use of correspondences between normative scenes and CPN places, normative transitions and CPN transitions and finally, between arc labels and CPN arc expressions.",
                "S â†’ P B â†’ T Lin âˆª Lout â†’ E The set of types is the singleton set containing the colour NP (i.e.",
                "Î£ = {NP}).",
                "This complex type is structured as follows (we use CPN-ML [4] syntax): color NPT = with Obl | Per | Prh | NoMod color IP = with inform | declare | offer color UTT = record illp : IP ag1, role1, ag2, role2 : string content: string time : int color NP = record mode : NPT illoc : UTT Modelling illocutions as norms without modality (NoMod) is a formal trick we use to ensure that sub-nets can be combined as explained below.",
                "Arcs are mapped almost directly.",
                "A is a finite set of arcs and N is a node function, such that âˆ€a âˆˆ A âˆƒa âˆˆ Ain âˆªAout .",
                "N(a) = a .",
                "The initialisation function I is defined as I(p) = Î”s (âˆ€s âˆˆ S where p is obtained from s using the mapping; remember that s = ids, Î”s ).",
                "Finally, the colour function C assigns the colour NP to every place: C(p) = NP (âˆ€p âˆˆ P).",
                "We are not making use of the guard function G. In future work, this function can be used to model constraints when we extend the expressiveness of our norm language. 5.2 Properties of Normative Structures Having defined the mapping from normative structures to Coloured Petri Nets, we now look at properties of CPNs that help us understand the complexity of conflict detection.",
                "One question we would like to answer is, whether at a given point in time, a given normative structure is conflict-free.",
                "Such a snapshot of a normative structure corresponds to a marking in the mapped CPN.",
                "Def. 11.",
                "Given a marking Mi, this marking is conflictfree if Â¬âˆƒp âˆˆ P. âˆƒnp1, np2 âˆˆ Mi(p) such that np1.mode = Obl and np2.mode = Prh and np1.illoc and np2.illoc unify under a valid substitution.",
                "Another interesting question would be, whether a conflict will occur from such a snapshot of the system by propagating the normative positions.",
                "In order to answer this question, we first translate the snapshot of the normative structure to the corresponding CPN and then execute the finite occurence sequence of markings and steps, verifying the conflict-freedom of each marking as we go along.",
                "Def. 12.",
                "Given a marking Mi, a finite occurrence sequence Si, Si+1, ..., Sn is called conflict-free, if and only if Mi[Si > Mi+1 . . .",
                "Mn[Sn > Mn+1 and Mk is conflict-free for all k such that i â‰¤ k â‰¤ n + 1.",
                "However, the main question we would like to investigate, is whether or not a given normative structure is conflictresistant, that is, whether or not the agents enacting the MAS are able to bring about conflicts through their actions.",
                "As soon as one includes the possibility of actions (or utterances) from autonomous agents, one looses determinism.",
                "Having mapped the normative structure to a CPN, we now add CPN models of the agents interactions.",
                "Each form of agent interaction (i.e. each activity) can be modelled using CPNs along the lines of Cost et al. [5].",
                "These nondeterministic CPNs feed tokens into the CPN that models the normative structure.",
                "This leads to the introduction of non-determinism into the combined CPN.",
                "The lower half of figure 3 shows part of a CPN model of an agent protocol where the arc denoted with 1 represents some utterance of an illocution by an agent.",
                "The target transition of this arc, not only moves a token on to the next state of this CPN, but also places a token in the place corresponding to the appropriate normative scene in the CPN model of the normative structure (via arc 2).",
                "Transition 3 finally could propagate that token in form of an obligation, for example.",
                "Thus, from a given marking, many different occurrence sequences are possible depending on the agents actions.",
                "We make use of the reachability set R to define a situation in which agents cannot cause conflicts. 640 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) Figure 3: Constructing the combined CPN Def. 13.",
                "Given a net N, a marking M is conflict-resistant if and only if all markings in R(N,M) are conflict-free.",
                "Checking conflict-freedom of a marking can be done in polynomial time by checking all places of the CPN for conflicting tokens.",
                "Conflict-freedom of an occurrence sequence in the CPN that represents the normative structure can also be done in polynomial time since this sequence is deterministic given a snapshot.",
                "Whether or not a normative structure is designed safely corresponds to checking the conflict-resistance of the initial marking M0.",
                "Now, verifying conflict-resistance of a marking becomes a very difficult task.",
                "It corresponds to the reachability problem in a CPN: can a state be reached or a marking achieved, that contains a conflict?.",
                "This reachability problem is known to be NP-complete for ordinary Petri Nets [22] and since CPNs are functionally identical, we cannot hope to verify conflict-resistance of a normative structure off-line in a reasonable amount of time.",
                "Therefore, distributed, run-time mechanisms are needed to ensure that a normative structure maintains consistency.",
                "We present one such mechanism in the following section. 6.",
                "MANAGING NORMATIVE STRUCTURES Once a conflict (as defined in Section 4) has been detected, we propose to employ the unifier to resolve the conflict.",
                "In our example, if the variables in prh(inform(a1, r1, a2, r2, p(Y, d), T )) do not get the values specified in substitution Ïƒ then there will not be a conflict.",
                "However, rather than computing the complement set of a substitution (which can be an infinite set) we propose to annotate the prohibition with the unifier itself and use it to determine what the variables of that prohibition cannot be in future unifications in order to avoid a conflict.",
                "We therefore denote annotated prohibitions as prh(Â¯I) Î£, where Î£ = {Ïƒ1, . . . , Ïƒn}, is a set of unifiers.",
                "Annotated norms3 are interpreted as deontic constructs with curtailed influences, that is, their effect (on agents, roles and illocutions) has been limited by the set Î£ of unifiers.",
                "A prohibition may be in conflict with various obligations in a given normative scene s = id, Î” and we need to record (and possibly avoid) all these conflicts.",
                "We define below an algorithm which ensures that a normative position will be added to a normative scene in such a way that it will not cause any conflicts. 3 Although we propose to curtail prohibitions, the same machinery can be used to define the curtailment of obligations instead.",
                "These different policies are dependent on the intended deontic semantics and requirements of the systems addressed.",
                "For instance, some MASs may require that their agents should not act in the presence of conflicts, that is, the obligation should be curtailed. 6.1 Conflict Resolution We propose a fine-grained way of resolving normative conflicts via unification.",
                "We detect the overlapping of the influences of norms , i.e. how they affect the behaviour of the concerned agents, and we curtail the influence of the normative position, by appropriately using the annotations when checking if the norm applies to illocutions.",
                "The algorithm shown in Figure 4 depicts how we maintain a conflict-free set of norms.",
                "It adds a given norm N to an existing, conflictfree normative state Î”, obtaining a resulting new normative state Î” which is conflict-free, that is, its prohibitions are annotated with a set of conflict sets indicating which bindings for variables have to be avoided for conflicts not to take place. algorithm addNorm(N, Î”) begin 1 timestamp(N) 2 case N of 3 per(Â¯I): Î” := Î” âˆª {N} 4 prh(I): if N âˆˆ Î” s.t. conflict(N, N , Ïƒ) then Î” := Î” 5 else Î” := Î” âˆª {N} 6 prh(Â¯I): 7 begin 8 Î£ := âˆ… 9 for each N âˆˆ Î” do 10 if conflict(N, N , Ïƒ) then Î£ := Î£ âˆª {Ïƒ} 11 Î” := Î” âˆª {N Î£} 12 end 13 obl(Â¯I): 14 begin 15 Î”1 := âˆ…; Î”2 := âˆ… 16 for each (N Î£) âˆˆ Î” do 17 if N = prh(I) then 18 if conflict(N , N, Ïƒ) then Î”1 := Î”1 âˆª {N Î£} 19 else nil 20 else 21 if conflict(N , N, Ïƒ) then 22 begin 23 Î”1 := Î”1 âˆª {N Î£} 24 Î”2 := Î”2 âˆª {N (Î£ âˆª {Ïƒ})} 25 end 26 Î” := (Î” âˆ’ Î”1) âˆª Î”2 âˆª {N} 27 end 28 end case 29 return Î” end Figure 4: Algorithm to Preserve Conflict-Freedom The algorithm uses a case of structure to differentiate the different possibilities for a given norm N. Line 3 addresses the case when the given norm is a permission: N is simply added to Î”.",
                "Lines 4-5 address the case when we attempt to add a ground prohibition to a normative state: if it conflicts with any obligation, then it is discarded; otherwise it is added to the normative state.",
                "Lines 6-12 describe the situation when the normative position to be added is a nonground prohibition.",
                "In this case, the algorithm initialises Î£ to an empty set and loops (line 9-10) through the norms N in the old normative state Î”.",
                "Upon finding one that conflicts with N, the algorithm updates Î£ by adding the newly found conflict set Ïƒ to it (line 10).",
                "By looping through Î”, we are able to check any conflicts between the new prohibition and the existing obligations, adequately building the annotation Î£ to be used when adding N to Î” in line 11.",
                "Lines 13-27 describe how a new obligation is accommodated to an existing normative state.",
                "We make use of two initially empty, temporary sets, Î”1, Î”2.",
                "The algorithm loops through Î” (lines 16-25) picking up those annotated prohibitions N Î£ which conflict with the new obligation.",
                "There are, however, two cases to deal with: the one when a ground The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 641 prohibition is found (line 17), and its exception, covering non-ground prohibitions (line 20).",
                "In both cases, the old prohibition is stored in Î”1 (lines 18 and 23) to be later removed from Î” (line 26).",
                "However, in the case of a nonground prohibition, the algorithm updates its annotation of conflict sets (line 24).",
                "The loop guarantees that an exhaustive (linear) search through a normative state takes place, checking if the new obligation is in conflict with any existing prohibitions, possibly updating the annotations of these conflicting prohibitions.",
                "In line 26 the algorithm builds the new updated Î” by removing the old prohibitions stored in Î”1 and adding the updated prohibitions stored in Î”2 (if any), as well as the new obligation N. Our proposed algorithm is correct in that, for a given normative position N and a normative state Î”, it provides a new normative state Î” in which all prohibitions have annotations recording how they unify with existing obligations.",
                "The annotations can be empty, though: this is the case when we have a ground prohibition or a prohibition which does not unify/conflict with any obligation.",
                "Permissions do not affect our algorithm and they are appropriately dealt with (line 3).",
                "Any attempt to insert a ground prohibition which conflicts, yields the same normative state (line 4).",
                "When a new obligation is being added then the algorithm guarantees that all prohibitions are considered (lines 14-27), leading to the removal of conflicting ground prohibitions or the update of annotations of non-ground prohibitions.",
                "The algorithm always terminates: the loops are over a finite set Î” and the conflict checks and set operations always terminate.",
                "The complexity of the algorithm is linear: the set Î” is only examined once for each possible case of norm to be added.",
                "When managing normative states we may also need to remove normative positions.",
                "This is straightforward: permissions can be removed without any problems; annotated prohibitions can also be removed without further considerations; obligations, however, require some housekeeping.",
                "When an obligation is to be removed, we must check it against all annotated prohibitions in order to update their annotations.",
                "We apply the conflict check and obtain a unifier, then remove this unifier from the prohibitions annotation.",
                "We invoke the removal algorithm as removeNorm(N, Î”): it returns a new normative state Î” in which N has been removed, with possible alterations to other normative positions as explained. 6.2 Enactment of a Normative Structure The enactment of a normative structure amounts to the parallel, distributed execution of normative scenes and normative transitions.",
                "For illustrative purposes, hereafter we shall describe the interplay between the payment and delivery normative scenes and the normative transition nt linking them in the upper half of figure 2.",
                "With this aim, consider for instance that obl(inform(jules, client, rod, acc, pay(copper, 400, 350), T) âˆˆ Î”payment and that Î”delivery holds prh(inform(rod,wm, jules, client, delivered(Z, Q), T)).",
                "Such states indicate that client Jules is obliged to pay Â£400 for 350kg of copper to accountant Rod according to the payment normative scene, whereas Rod, taking up the role of warehouse manager this time, is prohibited to deliver anything to client Jules according to the delivery normative scene.",
                "For each normative scene, the enactment process goes as follows.",
                "Firstly, it processes its incoming message queue that contains three types of messages: utterances from the activity it is linked to; and normative commands either to add or remove normative positions.",
                "For instance, in our example, the payment normative scene collects the illocution I = utt((inform(jules, client, rod, acc, pay(copper, 400, 350), 35)) standing for client Jules pending payment for copper (via arrow A in figure 2).",
                "Utterances are timestamped and subsequently added to the normative state.",
                "We would have Î”payment = Î”payment âˆª {I}, in our example.",
                "Upon receiving normative commands to either add or remove a normative position, the normative scene invokes the corresponding addition or removal algorithm described in Section 6.1.",
                "Secondly, the normative scene acknowledges its state change by sending a trigger message to every outgoing normative transition it is connected to.",
                "In our example, the payment normative scene would be signalling its state change to normative transition nt.",
                "For normative transitions, the process works differently.",
                "Because each normative transition controls the operation of a single rule, upon receiving a trigger message, it polls every incoming normative scene for substitutions for the relevant illocution schemata on the LHS of its rule.",
                "In our example, nt (being responsible for the rule described in Section 3.4), would poll the payment normative scene (via arrow B) for substitutions.",
                "Upon receiving replies from them (in the form of sets of substitutions together with time-stamps), it has to unify substitutions from each of these normative scenes.",
                "For each unification it finds, the rule is fired, and hence the corresponding normative command is sent along to the output normative scene.",
                "The normative transition then keeps track of the firing message it sent on and of the time-stamps of the normative positions that triggered the firing.",
                "This is done to ensure that the very same normative positions in the LHS of a rule only trigger its firing once.",
                "In our example, nt would be receiving Ïƒ = {X/jules, Y/rod, Z/copper, Q/350} from the payment normative scene.",
                "Since the substitions in Ïƒ unify with nts rule, the rule is fired, and the normative command add(delivery : obl(rod, wm, jules, client, delivered(copper, 350), T)) is sent along to the delivery normative scene to oblige Rod to deliver to client Jules 350kg of copper.",
                "After that, the delivery normative scene would invoke the addNorm algorithm from figure 4 with Î”delivery and N = obl(rod, wm, jules, client, delivered(copper, 350)) as arguments. 7.",
                "RELATED WORK AND CONCLUSIONS Our contributions in this paper are three-fold.",
                "Firstly, we introduce an approach for the management of and reasoning about norms in a distributed manner.",
                "To our knowledge, there is little work published in this direction.",
                "In [8, 21], two languages are presented for the distributed enforcement of norms in MAS.",
                "However, in both works, each agent has a local message interface that forwards legal messages according to a set of norms.",
                "Since these interfaces are local to each agent, norms can only be expressed in terms of actions of that agent.",
                "This is a serious disadvantage, e.g. when one needs to activate an obligation to one agent due to a certain message of another one.",
                "The second contribution is the proposal of a normative structure.",
                "The notion is fruitful because it allows the separation of normative and procedural concerns.",
                "The normative structure we propose makes evident the similarity between the propagation of normative positions and the propagation 642 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) of tokens in Coloured Petri Nets.",
                "That similarity readily suggests a mapping between the two, and gives grounds to a convenient analytical treatment of the normative structure, in general, and the complexity of conflict detection, in particular.",
                "The idea of modelling interactions (in the form of conversations) via Petri Nets has been investigated in [18], where the interaction medium and individual agents are modelled as CPN sub-nets that are subsequently combined for analysis.",
                "In [5], conversations are first designed and analysed at the level of CPNs and thereafter translated into protocols.",
                "Lin et al. [20] map conversation schemata to CPNs.",
                "To our knowledge, the use of this representation in the support of conflict detection in regulated MAS has not been reported elsewhere.",
                "Finally, we present a distributed mechanism to resolve normative conflicts.",
                "Sartor [25] treats normative conflicts from the point of view of legal theory and suggests a way to order the norms involved.",
                "His idea is implemented in [12] but requires a central resource for norm maintenance.",
                "The approach to conflict detection and resolution is an adaptation and extension of the work on instantiation graphs reported in [17] and a related algorithm in [27].",
                "The algorithm presented in the current paper can be used to manage normative states distributedly: normative scenes that happen in parallel have an associated normative state Î” to which the algorithm is independently applied each time a new norm is to be introduced.",
                "These three contributions we present in this paper open many possibilities for future work.",
                "We should mention first, that as a broad strategy we are working on a generalisation of the notion of normative structure to make it operate with different coordination models, with richer deontic content and on top of different computational realisations of regulated MAS.",
                "As a first step in this direction we are taking advantage of the de-coupling between interaction protocols and declarative normative guidance that the normative structure makes available, to provide a normative layer for electronic institutions (as defined in [1]).",
                "We expect such coupling will endow electronic institutions with a more flexible -and more expressive- normative environment.",
                "Furthermore, we want to extend our model along several directions: (1) to handle negation and constraints as part of the norm language, and in particular the notion of time; (2) to accommodate multiple, hierarchical norm authorities based on roles, along the lines of Cholvy and Cuppens [3] and power relationships as suggested by Carabelea et al. [2]; (3) to capture in the conflict resolution algorithm different semantics relating the deontic notions by supporting different axiomations (e.g., relative strength of prohibition versus obligation, default deontic notions, deontic inconsistencies).",
                "On the theoretical side, we intend to use analysis techniques of CPNs in order to characterise classes of CPNs (e.g., acyclic, symmetric, etc.) corresponding to families of Normative Structures that are susceptible to tractable offline conflict detection.",
                "The combination of these techniques along with our online conflict resolution mechanisms is intended to endow MAS designers with the ability to incorporate norms into their systems in a principled way. 8.",
                "REFERENCES [1] J. L. Arcos, M. Esteva, P. Noriega, J.",
                "A. RodrÂ´Ä±guez, and C. Sierra.",
                "Engineering open environments with electronic institutions.",
                "Journal on Engineering Applications of Artificial Intelligence, 18(2):191-204, 2005. [2] C. Carabelea, O. Boissier, and C. Castelfranchi.",
                "Using social power to enable agents to reason about being part of a group.",
                "In 5th Internat.",
                "Workshop, ESAW 2004, pages 166-177, 2004. [3] L. Cholvy and F. Cuppens.",
                "Solving normative conflicts by merging roles.",
                "In Fifth International Conference on Artificial Intelligence and Law, Washington, USA, 1995. [4] S. Christensen and T. B. Haagh.",
                "Design CPN - overview of CPN ML syntax.",
                "Technical report, University of Aarhus, 1996. [5] R. S. Cost, Y. Chen, T. W. Finin, Y. Labrou, and Y. Peng.",
                "Using colored petri nets for conversation modeling.",
                "In Issues in Agent Communication, pages 178-192, London, UK, 2000. [6] F. Dignum.",
                "Autonomous Agents with Norms.",
                "Artificial Intelligence and Law, 7(1):69-79, 1999. [7] A. Elhag, J. Breuker, and P. Brouwer.",
                "On the Formal Analysis of Normative Conflicts.",
                "Information & Comms.",
                "Techn.",
                "Law, 9(3):207-217, Oct. 2000. [8] M. Esteva, W. Vasconcelos, C. Sierra, and J.",
                "A. RodrÂ´Ä±guez-Aguilar.",
                "Norm consistency in electronic institutions. volume 3171 (LNAI), pages 494-505.",
                "Springer-Verlag, 2004. [9] M. Fitting.",
                "First-Order Logic and Automated Theorem Proving.",
                "Springer-Verlag, New York, U.S.A., 1990. [10] N. Fornara, F. Vigan`o, and M. Colombetti.",
                "An Event Driven Approach to Norms in Artificial Institutions.",
                "In AAMAS05 Workshop: Agents, Norms and Institutions for Regulated Multiagent Systems (ANI@REM), Utrecht, 2005. [11] D. Gaertner, P. Noriega, and C. Sierra.",
                "Extending the BDI architecture with commitments.",
                "In Proceedings of the 9th International Conference of the Catalan Association of Artificial Intelligence, 2006. [12] A. GarcÂ´Ä±a-Camino, P. Noriega, and J.-A.",
                "RodrÂ´Ä±guez-Aguilar.",
                "An Algorithm for Conflict Resolution in Regulated Compound Activities.",
                "In 7th Int.Workshop - ESAW 06, 2006. [13] A. GarcÂ´Ä±a-Camino, J.-A.",
                "RodrÂ´Ä±guez-Aguilar, C. Sierra, and W. Vasconcelos.",
                "A Distributed Architecture for Norm-Aware Agent Societies.",
                "In DALT III, volume 3904 (LNAI), pages 89-105.",
                "Springer, 2006. [14] F. Giunchiglia and L. Serafini.",
                "Multi-language hierarchical logics or: How we can do without modal logics.",
                "Artificial Intelligence, 65(1):29-70, 1994. [15] J. Habermas.",
                "The Theory of Communication Action, Volume One, Reason and the Rationalization of Society.",
                "Beacon Press, 1984. [16] K. Jensen.",
                "Coloured Petri Nets: Basic Concepts, Analysis Methods and Practical Uses (Volume 1).",
                "Springer, 1997. [17] M. Kollingbaum and T. Norman.",
                "Strategies for resolving norm conflict in practical reasoning.",
                "In ECAI Workshop Coordination in Emergent Agent Societies 2004, 2004. [18] J.-L. Koning, G. Francois, and Y. Demazeau.",
                "Formalization and pre-validation for interaction protocols in a multi agent systems.",
                "In ECAI, pages 298-307, 1998. [19] B. Kramer and J. Mylopoulos.",
                "Knowledge Representation.",
                "In S. C. Shapiro, editor, Encyclopedia of Artificial Intelligence, volume 1, pages 743-759.",
                "John Wiley & Sons, 1992. [20] F. Lin, D. H. Norrie, W. Shen, and R. Kremer.",
                "A schema-based approach to specifying conversation policies.",
                "In Issues in Agent Communication, pages 193-204, 2000. [21] N. Minsky.",
                "Law Governed Interaction (LGI): A Distributed Coordination and Control Mechanism (An Introduction, and a Reference Manual).",
                "Technical report, Rutgers University, 2005. [22] T. Murata.",
                "Petri nets: Properties, analysis and applications.",
                "Proceedings of the IEEE, 77(4):541-580, 1989. [23] S. Parsons, C. Sierra, and N. Jennings.",
                "Agents that reason and negotiate by arguing.",
                "Journal of Logic and Computation, 8(3):261-292, 1998. [24] A. Ricci and M. Viroli.",
                "Coordination Artifacts: A Unifying Abstraction for Engineering Environment-Mediated Coordination in MAS.",
                "Informatica, 29:433-443, 2005. [25] G. Sartor.",
                "Normative conflicts in legal reasoning.",
                "Artificial Intelligence and Law, 1(2-3):209-235, June 1992. [26] M. Sergot.",
                "A Computational Theory of Normative Positions.",
                "ACM Trans.",
                "Comput.",
                "Logic, 2(4):581-622, 2001. [27] W. W. Vasconcelos, M. Kollingbaum, and T. Norman.",
                "Resolving Conflict and Inconsistency in Norm-Regulated Virtual Organisations.",
                "In Proceedings of AAMAS 07, Hawaii, USA, 2007.",
                "IFAAMAS. [28] G. H. von Wright.",
                "Norm and Action: A Logical Inquiry.",
                "Routledge and Kegan Paul, London, 1963. [29] M. Wooldridge.",
                "An Introduction to Multiagent Systems.",
                "John Wiley & Sons, Chichester, UK, Feb. 2002.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 643"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "En la SecciÃ³n 2 detallamos un \"escenario\" para servir como ejemplo en todo el documento.",
                "\"Escenario\" Utilizamos un \"escenario\" de la cadena de suministro en el que las empresas y las personas se unen en un mercado en lÃ­nea para realizar negocios.",
                "En este \"escenario\", los agentes pueden desempeÃ±ar uno de los cuatro roles: Modelo de coordinaciÃ³n de negociaciÃ³n de pago de registro de registro de Marexit Contrato de coordinaciÃ³n de negociaciÃ³n Figura 1: Estructura de actividad del \"escenario\" contador (ACC), Cliente, Proveedor (Supp) y Gerentes de Warehouse (WM).",
                "En el resto del documento, construiremos sobre este \"escenario\" para ejemplificar la nociÃ³n de estructura normativa e ilustrar nuestro enfoque para la detecciÃ³n y resoluciÃ³n de conflictos en un entorno distribuido.3.",
                "Una escena normativa es una tupla S = IDS, Î”S donde IDS es un identificador de escena y Î”S es el conjunto de fÃ³rmulas atÃ³micas Î´ (es decir, expresiones y posiciones normativas) que se mantienen en s.TambiÃ©n nos referiremos a Î”S como el estado de la escena normativa s.Por ejemplo, una instantÃ¡nea del estado de la escena normativa de entrega de nuestro \"escenario\" podrÃ­a representarse como: Î”S = 8 <: Utt (Solicitud (Sean, Cliente, KEV, WM, Recibe (Wire, 200), 20)))), utt (aceptar (kev, wm, sean, cliente, recibir (cable, 200), 30)), obl (inform (kev, wm, sean, cliente, entregado (cable, 200), 30)) 9 =;Es decir, el agente Sean asumiÃ³ el rol del cliente ha solicitado el agente KEV (asumiendo el rol de Warehouse Manager WM) para recibir 200 kg de cable, y el agente KEV estÃ¡ obligado a entregar 200 kg de cable a Sean desde que aceptÃ³ la solicitud."
            ],
            "translated_text": "",
            "candidates": [
                "guiÃ³n",
                "escenario",
                "guiÃ³n",
                "Escenario",
                "escenario",
                "guiÃ³n",
                "escenario",
                "escenario",
                "Escenario",
                "escenario",
                "guiÃ³n",
                "escenario"
            ],
            "error": []
        },
        "normative position": {
            "translated_key": "posiciÃ³n normativa",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Distributed Norm Management in Regulated Multi-Agent Systems âˆ— Dorian Gaertner Dept.",
                "of Computing, Imperial College London, London SW7 2AZ, United Kingdom dg00@doc.ic.ac.uk Andres Garcia-Camino, Pablo Noriega, J.-A.",
                "Rodriguez-Aguilar IIIA-CSIC, 08193 Bellaterra, Spain {andres,pablo,jar}@iiia.csic.es Wamberto Vasconcelos Dept. of Computing Science, University of Aberdeen, Aberdeen AB24 3UE, United Kingdom wvasconcelos@acm.org ABSTRACT Norms are widely recognised as a means of coordinating multi-agent systems.",
                "The distributed management of norms is a challenging issue and we observe a lack of truly distributed computational realisations of normative models.",
                "In order to regulate the behaviour of autonomous agents that take part in multiple, related activities, we propose a normative model, the Normative Structure (NS), an artifact that is based on the propagation of normative positions (obligations, prohibitions, permissions), as consequences of agents actions.",
                "Within a NS, conflicts may arise due to the dynamic nature of the MAS and the concurrency of agents actions.",
                "However, ensuring conflict-freedom of a NS at design time is computationally intractable.",
                "We show this by formalising the notion of conflict, providing a mapping of NSs into Coloured Petri Nets and borrowing well-known theoretical results from that field.",
                "Since online conflict resolution is required, we present a tractable algorithm to be employed distributedly.",
                "We then demonstrate that this algorithm is paramount for the distributed enactment of a NS.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Languages and structures General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION A fundamental feature of open, regulated multi-agent systems in which autonomous agents interact, is that participating agents are meant to comply with the conventions of the system.",
                "Norms can be used to model such conventions and hence as a means to regulate the observable behaviour of agents [6, 29].",
                "There are many contributions on the subject of norms from sociologists, philosophers and logicians (e.g., [15, 28]).",
                "However, there are very few proposals for computational realisations of normative models - the way norms can be integrated in the design and execution of MASs.",
                "The few that exist (e.g. [10, 13, 24]), operate in a centralised manner which creates bottlenecks and single points-of-failure.",
                "To our knowledge, no proposal truly supports the distributed enactment of normative environments.",
                "In our paper we approach that problem and propose means to handle conflicting commitments in open, regulated, multiagent systems in a distributed manner.",
                "The type of regulated MAS we envisage consists of multiple, concurrent, related activities where agents interact.",
                "Each agent may concurrently participate in several activities, and change from one activity to another.",
                "An agents actions within an activity may have consequences in the form of normative positions (i.e. obligations, permissions, and prohibitions) [26] that may constrain its future behaviour.",
                "For instance, a buyer agent who runs out of credit may be forbidden to make further offers, or a seller agent is obliged to deliver after closing a deal.",
                "We assume that agents may choose not to fulfill all their obligations and hence may be sanctioned by the MAS.",
                "Notice that, when activities are distributed, normative positions must flow from the activities in which they are generated to those in which they take effect.",
                "For instance, the sellers obligation above must flow (or be propagated) from a negotiation activity to a delivery activity.",
                "Since in an open, regulated MAS one cannot embed normative aspects into the agents design, we adopt the view that the MAS should be supplemented with a separate set of norms that further regulates the behaviour of participating agents.",
                "In order to model the separation of concerns between the coordination level (agents interactions) and the normative level (propagation of normative positions), we propose an artifact called the Normative Structure (NS).",
                "Within a NS conflicts may arise due to the dynamic nature of the MAS and the concurrency of agents actions.",
                "For instance, an agent may be obliged and prohibited to do the 636 978-81-904262-7-5 (RPS) c 2007 IFAAMAS very same action in an activity.",
                "Since the regulation of a MAS entails that participating agents need to be aware of the validity of those actions that take place within it, such conflicts ought to be identified and possibly resolved if a claim of validity is needed for an agent to engage in an action or be sanctioned.",
                "However, ensuring conflict-freedom of a NS at design time is computationally intractable.",
                "We show this by formalising the notion of conflict, providing a mapping of NSs into Coloured Petri Nets (CPNs) and borrowing well-known theoretical results from the field of CPNs.",
                "We believe that online conflict detection and resolution is required.",
                "Hence, we present a tractable algorithm for conflict resolution.",
                "This algorithm is paramount for the distributed enactment of a NS.",
                "The paper is organised as follows.",
                "In Section 2 we detail a scenario to serve as an example throughout the paper.",
                "Next, in Section 3 we formally define the normative structure artifact.",
                "Further on, in Section 4 we formalise the notion of conflict to subsequently analyse the complexity of conflict detection in terms of CPNs in Section 5.",
                "Section 6 describes the computational management of NSs by describing their enactment and presenting an algorithm for conflict resolution.",
                "Finally, we comment on related work, draw conclusions and report on future work in Section 7. 2.",
                "SCENARIO We use a supply-chain scenario in which companies and individuals come together at an online marketplace to conduct business.",
                "The overall transaction procedure may be organised as six distributed activities, represented as nodes in the diagram in Figure 1.",
                "They involve different participants whose behaviour is coordinated through protocols.",
                "In this scenario agents can play one of four roles: marExit Registration Payment Delivery Negotiation Coordination Model Contract Figure 1: Activity Structure of the Scenario ketplace accountant (acc), client, supplier (supp) and warehouse managers (wm).",
                "The arrows connecting the activities represent how agents can move from one activity to another.",
                "After registering at the marketplace, clients and suppliers get together in an activity where they negotiate the terms of their transaction, i.e. prices, amounts of goods to be delivered, deadlines and other details.",
                "In the contract activity, the order becomes established and an invoice is prepared.",
                "The client will then participate in a payment activity, verifying his credit-worthiness and instructing his bank to transfer the correct amount of money.",
                "The supplier in the meantime will arrange for the goods to be delivered (e.g. via a warehouse manager) in the delivery activity.",
                "Finally, agents can leave the marketplace conforming to a predetermined exit protocol.",
                "The marketplace accountant participates in most of the activities as a trusted provider of auditing tools.",
                "In the rest of the paper we shall build on this scenario to exemplify the notion of normative structure and to illustrate our approach to conflict detection and resolution in a distributed setting. 3.",
                "NORMATIVE STRUCTURE In MASs agents interact according to protocols which naturally are distributed.",
                "We advocate that actions in one such protocol may have an effect on the enactment of other protocols.",
                "Certain actions can become prohibited or obligatory, for example.",
                "We take normative positions to be obligations, prohibitions and permissions akin to work described in [26].",
                "The intention of adding or removing a <br>normative position</br> we call normative command.",
                "Occurrences of normative positions in one protocol may also have consequences for other protocols1 .",
                "In order to define our norm language and specify how normative positions are propagated, we have been inspired by multi-context systems [14].",
                "These systems allow the structuring of knowledge into distinct formal theories and the definition of relationships between them.",
                "The relationships are expressed as bridge rules - deducibility of formulae in some contexts leads to the deduction of other formulae in other contexts.",
                "Recently, these systems have been successfully used to define agent architectures [11, 23].",
                "The metaphor translates to our current work as follows: the utterance of illocutions and/or the existence of normative positions in some normative scenes leads to the deduction of normative positions in other normative scenes.",
                "We are concerned with the propagation and distribution of normative positions within a network of distributed, normative scenes as a consequence of agents actions.",
                "We take normative scenes to be sets of normative positions and utterances that are associated with an underlying interaction protocol corresponding to an activity.",
                "In this section, we first present a simple language capturing these aspects and formally introduce the notions of normative scene, normative transition rule and normative structure.",
                "We give the intended semantics of these rules and show how to control a MAS via norms in an example. 3.1 Basic Concepts The building blocks of our language are terms and atomic formulae: Def. 1.",
                "A term, denoted as t, is (i) any constant expressed using lowercase (with or without subscripts), e.g. a, b0, c or (ii) any variable expressed using uppercase (with or without subscripts), e.g.",
                "X, Y, Zb or (iii) any function f(t1, . . . , tn), where f is an n-ary function symbol and t1, .., tn are terms.",
                "Some examples of terms and functions are Credit, price or offer(bible, 30) being respectively a variable, a constant and a function.",
                "We will be making use of identifiers throughout the paper, which are constant terms and also need the following definition: Def. 2.",
                "An atomic formula is any construct p(t1, . . . , tn), where p is an n-ary predicate symbol and t1, . . . , tn are terms.",
                "The set of all atomic formulae is denoted as Î”.",
                "We focus on an expressive class of MASs in which interaction is carried out by means of illocutionary speech acts exchanged among participating agents: Def. 3.",
                "Illocutions I are ground atomic formulae which have the form p(ag, r, ag , r , Î´, t) where p is an element of 1 Here, we abstract from protocols and refer to them generically as activities.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 637 a set of illocutionary particles (e.g. inform, request, offer); ag, ag are agent identifiers; r, r are role identifiers; Î´, an arbitrary ground term, is the content of the message, built from a shared content language; t âˆˆ N is a time stamp.",
                "The intuitive meaning of p(ag, r, ag , r , m, t) is that agent ag playing role r sent message m to agent ag playing role r at time t. An example of an illocution is inform(ag4, supp, ag3, client, offer(wire, 12), 10).",
                "Sometimes it is useful to refer to illocutions that are not fully grounded, that is, those that may contain uninstantiated (free) variables.",
                "In the description of a protocol, for instance, the precise values of the message exchanged can be left unspecified.",
                "During the enactment of the protocol agents will produce the actual values which will give rise to a ground illocution.",
                "We can thus define illocution schemata: Def. 4.",
                "An illocution schema Â¯I is any atomic formula p(ag, r, ag , r , Î´, t) in which some of the terms may either be variables or may contain variables. 3.2 Formal Definition of the Notion of NS We first define normative scenes as follows: Def. 5.",
                "A normative scene is a tuple s = ids, Î”s where ids is a scene identifier and Î”s is the set of atomic formulae Î´ (i.e. utterances and normative positions) that hold in s. We will also refer to Î”s as the state of normative scene s. For instance, a snapshot of the state of the delivery normative scene of our scenario could be represented as: Î”s = 8 < : utt(request(sean, client, kev, wm, receive(wire, 200), 20)), utt(accept(kev, wm, sean, client, receive(wire, 200), 30)), obl(inform(kev, wm, sean, client, delivered(wire, 200), 30)) 9 = ; That is, agent Sean taking up the client role has requested agent Kev (taking up the warehouse manager role wm) to receive 200kg of wire, and agent Kev is obliged to deliver 200kg of wire to Sean since he accepted the request.",
                "Note that the state of a normative scene Î”s evolves over time.",
                "These normative scenes are connected to one another via normative transitions that specify how utterances and normative positions in one scene affect other normative scenes.",
                "As mentioned above, activities are not independent since illocutions uttered in some of them may have an effect on other ones.",
                "Normative transition rules define the conditions under which a normative command is generated.",
                "These conditions are either utterances or normative positions associated with a given protocol (denoted e.g. activity : utterance) which yield a normative command, i.e. the addition or removal of another <br>normative position</br>, possibly related to a different activity.",
                "Our transition rules are thus defined: Def. 6.",
                "A normative transition rule R is of the form: R ::= V C V ::= ids : D | V, V D ::= N | utt(Â¯I) N ::= per(Â¯I) | prh(Â¯I) | obl(Â¯I) C ::= add(ids : N) | remove(ids : N) where Â¯I is an illocution schema, N is a <br>normative position</br> (i.e. permission, prohibition or obligation), ids is an identifier for activity s and C is a normative command.",
                "We endow our language with the usual semantics of rulebased languages [19].",
                "Rules map an existing normative structure to a new normative structure where only the state of the normative scenes change.",
                "In the definitions below we rely on the standard concept of substitution [9].",
                "Def. 7.",
                "A normative transition is a tuple b = idb, rb where idb is an identifier and rb is a normative transition rule.",
                "We are proposing to extend the notion of MAS, regulated by protocols, with an extra layer consisting of normative scenes and normative transitions.",
                "This layer is represented as a bi-partite graph that we term normative structure.",
                "A normative structure relates normative scenes and normative transitions specifying which normative positions are to be generated or removed in which normative scenes.",
                "Def. 8.",
                "A normative structure is a labelled bi-partite graph NS = Nodes, Edges, Lin , Lout .",
                "Nodes is a set SâˆªB where S is a set of normative scenes and B is a set of normative transitions.",
                "Edges is a set Ain âˆª Aout where Ain âŠ† S Ã— B is a set of input arcs labelled with an atomic formula using the labelling function Lin : Ain â†’ D; and Aout âŠ† B Ã— S is a set of output arcs labelled with a <br>normative position</br> using the labelling function Lout : Aout â†’ N. The following must hold: 1.",
                "Each atomic formula appearing in the LHS of a rule rb must be of the form (ids : D) where s âˆˆ S and D âˆˆ Î” and âˆƒain âˆˆ Ain such that ain = (s, b) and Lin (ain ) = D. 2.",
                "The atomic formula appearing in the RHS of a rule rb must be of the form add(ids : N) or remove(ids : N) where s âˆˆ S and âˆƒaout âˆˆ Aout such that aout = (b, s) and Lout (aout ) = N. 3. âˆ€a âˆˆ Ain such that a = (s, b) and b = idb, rb and Lin (a) = D then (ids:D) must occur in the LHS of rb. 4. âˆ€a âˆˆ Aout such that a = (b, s) and b = idb, rb and Lout (a) = N then add(ids : N) or remove(ids : N) must occur in the RHS of rb.",
                "The first two points ensure that every atomic formulae on the LHS of a normative transition rule labels an arc entering the appropriate normative transition in the normative structure, and that the atomic formula on the RHS labels the corresponding outgoing arc.",
                "Points three and four ensure that labels from all incoming arcs are used in the LHS of the normative transition rule that these arcs enter into, and that the labels from all outgoing arcs are used in the RHS of the normative transition rule that these arcs leave. 3.3 Intended Semantics The formal semantics will be defined via a mapping to Coloured Petri Nets in Section 5.1.",
                "Here we start defining the intended semantics of normative transition rules by describing how a rule changes a normative scene of an existing normative structure yielding a new normative structure.",
                "Each rule is triggered once for each substitution that unifies the left-hand side V of the rule with the state of the corresponding normative scenes.",
                "An atomic formula (i.e. an utterance or a <br>normative position</br>) holds iff it is unifiable with an utterance or <br>normative position</br> that belongs to the state of the corresponding normative scene.",
                "Every time a rule is triggered, the normative command specified on the right-hand side of that rule is carried out, intending to add or remove a <br>normative position</br> from the state of the corresponding normative scene.",
                "However, addition is not unconditional as conflicts may arise.",
                "This topic will be treated in Sections 4 and 6.1. 638 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.4 Example In our running example we have the following exemplary normative transition rule: â€ž payment : obl(inform(X, client, Y, acc, pay(Z, P, Q), T )), payment : utt(inform(X, client, Y, acc, pay(Z, P, Q), T )) Â« delivery : add(obl(inform(Y, wm, X, client, delivered(Z, Q), T ))) That is, during the payment activity, an obligation on client X to inform accountant Y about the payment P of item Z at time T and the corresponding utterance which fulfills this obligation allows the flow of a norm to the delivery activity.",
                "The norm is an obligation on agent Y (this time taking up the role of the warehouse manager wm) to send a message to client X that item Z has been delivered.",
                "We show in Figure 2 a diagrammatic representation of how activities and a normative structure relate: Payment Delivery Contract Normative Level Exit Registration Payment Delivery Negotiation Coordination Level Contract nt Figure 2: Activities and Normative Structure As illocutions are uttered during activities, normative positions arise.",
                "Utterances and normative positions are combined in transition rules, causing the flow of normative positions between normative scenes.",
                "The connection between the two levels is described in Section 6.2. 4.",
                "CONFLICT DEFINITION The terms deontic conflict and deontic inconsistency have been used interchangeably in the literature.",
                "However, in this paper we adopt the view of [7] in which the authors suggest that a deontic inconsistency arises when an action is simultaneously permitted and prohibited - since a permission may not be acted upon, no real conflict occurs.",
                "The situations when an action is simultaneously obliged and prohibited are, however, deontic conflicts, as both obligations and prohibitions influence behaviours in a conflicting fashion.",
                "The content of normative positions in this paper are illocutions.",
                "Therefore, a normative conflict arises when an illocution is simultaneously obliged and prohibited.",
                "We propose to use the standard notion of unification [9] to detect when a prohibition and a permission overlap.",
                "For instance, an obligation obl(inform(A1, R1, A2, R2, p(c, X), T)) and a prohibition prh(inform(a1, r1, a2, r2, p(Y, d), T )) are in conflict as they unify under Ïƒ = {A1/a1, R1/r1, A2/a2, R2/r2, Y/c, X/d, T/T }).",
                "We formally capture this notion: Def. 9.",
                "A (deontic) conflict arises between two normative positions N and N under a substitution Ïƒ, denoted as conflict(N, N , Ïƒ), if and only if N = prh(Â¯I), N = obl(Â¯I ) and unify(Â¯I,Â¯I , Ïƒ).",
                "That is, a prohibition and an obligation are in conflict if, and only if, their illocutions unify under Ïƒ.",
                "The substitution Ïƒ, called here the conflict set, unifies the agents, roles and atomic formulae.",
                "We assume that unify is a suitable implementation of a unification algorithm which i) always terminates (possibly failing, if a unifier cannot be found); ii) is correct; and iii) has linear computational complexity.",
                "Inconsistencies caused by the same illocution being simultaneously permitted and prohibited can be formalised similarly.",
                "In this paper we focus on prohibition/obligation conflicts, but the computational machinery introduced in Section 6.1 can equally be used to detect prohibition/permission inconsistencies, if we substitute modality obl for per. 5.",
                "FORMALISING CONFLICT-FREEDOM In this section we introduce some background knowledge on CPNs assuming a basic understanding of ordinary Petri Nets.",
                "For technical details we refer the reader to [16].",
                "We then map NSs to CPNs and analyse their properties.",
                "CPNs combine the strength of Petri nets with the strength of functional programming languages.",
                "On the one hand, Petri nets provide the primitives for the description of the synchronisation of concurrent processes.",
                "As noticed in [16], CPNs have a semantics which builds upon true concurrency, instead of interleaving.",
                "In our opinion, a true-concurrency semantics is easier to work with because it is the way we envisage the connection between the coordination level and the normative level of a multi-agent system to be.",
                "On the other hand, the functional programming languages used by CPNs provide the primitives for the definition of data types and the manipulation of their data values.",
                "Thus, we can readily translate expressions of a normative structure.",
                "Last but not least, CPNs have a well-defined semantics which unambiguously defines the behaviour of each CPN.",
                "Furthermore, CPNs have a large number of formal analysis methods and tools by which properties of CPNs can be proved.",
                "Summing up, CPNs provide us with all the necessary features to formally reason about normative structures given that an adequate mapping is provided.",
                "In accordance with Petri nets, the states of a CPN are represented by means of places.",
                "But unlike Petri Nets, each place has an associated data type determining the kind of data which the place may contain.",
                "A state of a CPN is called a marking.",
                "It consists of a number of tokens positioned on the individual places.",
                "Each token carries a data value which has the type of the corresponding place.",
                "In general, a place may contain two or more tokens with the same data value.",
                "Thus, a marking of a CPN is a function which maps each place into a multi-set2 of tokens of the correct type.",
                "One often refers to the token values as token colours and one also refers to the data types as colour sets.",
                "The types of a CPN can be arbitrarily complex.",
                "Actions in a CPN are represented by means of transitions.",
                "An incoming arc into a transition from a place indicates that the transition may remove tokens from the corresponding place while an outgoing arc indicates that the transition may add tokens.",
                "The exact number of tokens and their data values are determined by the arc expressions, which are encoded using the programming language chosen for the CPN.",
                "A transition is enabled in a CPN if and only if all the 2 A multi-set (or bag) is an extension to the notion of set, allowing the possibility of multiple appearances of the same element.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 639 variables in the expressions of its incoming arcs are bound to some value(s) (each one of these bindings is referred to as a binding element).",
                "If so, the transition may occur by removing tokens from its input places and adding tokens to its output places.",
                "In addition to the arc expressions, it is possible to attach a boolean guard expression (with variables) to each transition.",
                "Putting all the elements above together we obtain a formal definition of CPN that shall be employed further ahead for mapping purposes.",
                "Def. 10.",
                "A CPN is a tuple Î£, P, T, A, N, C, G, E, I where: (i) Î£ is a finite set of non-empty types, also called colour sets; (ii) P is a finite set of places; (iii) T is a finite set of transitions; (iv) A is a finite set of arcs; (v) N is a node function defined from A into P Ã— T âˆª T Ã— P; (vi) C is a colour function from P into Î£; (vii) G is a guard function from T into expressions; (viii) E is an arc expression function from A into expressions; (ix) I is an initialisation function from P into closed expressions; Notice that the informal explanation of the enabling and occurrence rules given above provides the foundations to understand the behaviour of a CPN.",
                "In accordance with ordinary Petri nets, the concurrent behaviour of a CPN is based on the notion of step.",
                "Formally, a step is a non-empty and finite multi-set over the set of all binding elements.",
                "Let step S be enabled in a marking M. Then, S may occur, changing the marking M to M .",
                "Moreover, we say that marking M is directly reachable from marking M by the occurrence of step S, and we denote it by M[S > M .",
                "A finite occurrence sequence is a finite sequence of steps and markings: M1[S1 > M2 . . .",
                "Mn[Sn > Mn+1 such that n âˆˆ N and Mi[Si > Mi+1 âˆ€i âˆˆ {1, . . . , n}.",
                "The set of all possible markings reachable for a net Net from a marking M is called its reachability set, and is denoted as R(Net, M). 5.1 Mapping to Coloured Petri Nets Our normative structure is a labelled bi-partite graph.",
                "The same is true for a Coloured Petri Net.",
                "We are presenting a mapping f from one to the other, in order to provide semantics for the normative structure and prove properties about it by using well-known theoretical results from work on CPNs.",
                "The mapping f makes use of correspondences between normative scenes and CPN places, normative transitions and CPN transitions and finally, between arc labels and CPN arc expressions.",
                "S â†’ P B â†’ T Lin âˆª Lout â†’ E The set of types is the singleton set containing the colour NP (i.e.",
                "Î£ = {NP}).",
                "This complex type is structured as follows (we use CPN-ML [4] syntax): color NPT = with Obl | Per | Prh | NoMod color IP = with inform | declare | offer color UTT = record illp : IP ag1, role1, ag2, role2 : string content: string time : int color NP = record mode : NPT illoc : UTT Modelling illocutions as norms without modality (NoMod) is a formal trick we use to ensure that sub-nets can be combined as explained below.",
                "Arcs are mapped almost directly.",
                "A is a finite set of arcs and N is a node function, such that âˆ€a âˆˆ A âˆƒa âˆˆ Ain âˆªAout .",
                "N(a) = a .",
                "The initialisation function I is defined as I(p) = Î”s (âˆ€s âˆˆ S where p is obtained from s using the mapping; remember that s = ids, Î”s ).",
                "Finally, the colour function C assigns the colour NP to every place: C(p) = NP (âˆ€p âˆˆ P).",
                "We are not making use of the guard function G. In future work, this function can be used to model constraints when we extend the expressiveness of our norm language. 5.2 Properties of Normative Structures Having defined the mapping from normative structures to Coloured Petri Nets, we now look at properties of CPNs that help us understand the complexity of conflict detection.",
                "One question we would like to answer is, whether at a given point in time, a given normative structure is conflict-free.",
                "Such a snapshot of a normative structure corresponds to a marking in the mapped CPN.",
                "Def. 11.",
                "Given a marking Mi, this marking is conflictfree if Â¬âˆƒp âˆˆ P. âˆƒnp1, np2 âˆˆ Mi(p) such that np1.mode = Obl and np2.mode = Prh and np1.illoc and np2.illoc unify under a valid substitution.",
                "Another interesting question would be, whether a conflict will occur from such a snapshot of the system by propagating the normative positions.",
                "In order to answer this question, we first translate the snapshot of the normative structure to the corresponding CPN and then execute the finite occurence sequence of markings and steps, verifying the conflict-freedom of each marking as we go along.",
                "Def. 12.",
                "Given a marking Mi, a finite occurrence sequence Si, Si+1, ..., Sn is called conflict-free, if and only if Mi[Si > Mi+1 . . .",
                "Mn[Sn > Mn+1 and Mk is conflict-free for all k such that i â‰¤ k â‰¤ n + 1.",
                "However, the main question we would like to investigate, is whether or not a given normative structure is conflictresistant, that is, whether or not the agents enacting the MAS are able to bring about conflicts through their actions.",
                "As soon as one includes the possibility of actions (or utterances) from autonomous agents, one looses determinism.",
                "Having mapped the normative structure to a CPN, we now add CPN models of the agents interactions.",
                "Each form of agent interaction (i.e. each activity) can be modelled using CPNs along the lines of Cost et al. [5].",
                "These nondeterministic CPNs feed tokens into the CPN that models the normative structure.",
                "This leads to the introduction of non-determinism into the combined CPN.",
                "The lower half of figure 3 shows part of a CPN model of an agent protocol where the arc denoted with 1 represents some utterance of an illocution by an agent.",
                "The target transition of this arc, not only moves a token on to the next state of this CPN, but also places a token in the place corresponding to the appropriate normative scene in the CPN model of the normative structure (via arc 2).",
                "Transition 3 finally could propagate that token in form of an obligation, for example.",
                "Thus, from a given marking, many different occurrence sequences are possible depending on the agents actions.",
                "We make use of the reachability set R to define a situation in which agents cannot cause conflicts. 640 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) Figure 3: Constructing the combined CPN Def. 13.",
                "Given a net N, a marking M is conflict-resistant if and only if all markings in R(N,M) are conflict-free.",
                "Checking conflict-freedom of a marking can be done in polynomial time by checking all places of the CPN for conflicting tokens.",
                "Conflict-freedom of an occurrence sequence in the CPN that represents the normative structure can also be done in polynomial time since this sequence is deterministic given a snapshot.",
                "Whether or not a normative structure is designed safely corresponds to checking the conflict-resistance of the initial marking M0.",
                "Now, verifying conflict-resistance of a marking becomes a very difficult task.",
                "It corresponds to the reachability problem in a CPN: can a state be reached or a marking achieved, that contains a conflict?.",
                "This reachability problem is known to be NP-complete for ordinary Petri Nets [22] and since CPNs are functionally identical, we cannot hope to verify conflict-resistance of a normative structure off-line in a reasonable amount of time.",
                "Therefore, distributed, run-time mechanisms are needed to ensure that a normative structure maintains consistency.",
                "We present one such mechanism in the following section. 6.",
                "MANAGING NORMATIVE STRUCTURES Once a conflict (as defined in Section 4) has been detected, we propose to employ the unifier to resolve the conflict.",
                "In our example, if the variables in prh(inform(a1, r1, a2, r2, p(Y, d), T )) do not get the values specified in substitution Ïƒ then there will not be a conflict.",
                "However, rather than computing the complement set of a substitution (which can be an infinite set) we propose to annotate the prohibition with the unifier itself and use it to determine what the variables of that prohibition cannot be in future unifications in order to avoid a conflict.",
                "We therefore denote annotated prohibitions as prh(Â¯I) Î£, where Î£ = {Ïƒ1, . . . , Ïƒn}, is a set of unifiers.",
                "Annotated norms3 are interpreted as deontic constructs with curtailed influences, that is, their effect (on agents, roles and illocutions) has been limited by the set Î£ of unifiers.",
                "A prohibition may be in conflict with various obligations in a given normative scene s = id, Î” and we need to record (and possibly avoid) all these conflicts.",
                "We define below an algorithm which ensures that a <br>normative position</br> will be added to a normative scene in such a way that it will not cause any conflicts. 3 Although we propose to curtail prohibitions, the same machinery can be used to define the curtailment of obligations instead.",
                "These different policies are dependent on the intended deontic semantics and requirements of the systems addressed.",
                "For instance, some MASs may require that their agents should not act in the presence of conflicts, that is, the obligation should be curtailed. 6.1 Conflict Resolution We propose a fine-grained way of resolving normative conflicts via unification.",
                "We detect the overlapping of the influences of norms , i.e. how they affect the behaviour of the concerned agents, and we curtail the influence of the <br>normative position</br>, by appropriately using the annotations when checking if the norm applies to illocutions.",
                "The algorithm shown in Figure 4 depicts how we maintain a conflict-free set of norms.",
                "It adds a given norm N to an existing, conflictfree normative state Î”, obtaining a resulting new normative state Î” which is conflict-free, that is, its prohibitions are annotated with a set of conflict sets indicating which bindings for variables have to be avoided for conflicts not to take place. algorithm addNorm(N, Î”) begin 1 timestamp(N) 2 case N of 3 per(Â¯I): Î” := Î” âˆª {N} 4 prh(I): if N âˆˆ Î” s.t. conflict(N, N , Ïƒ) then Î” := Î” 5 else Î” := Î” âˆª {N} 6 prh(Â¯I): 7 begin 8 Î£ := âˆ… 9 for each N âˆˆ Î” do 10 if conflict(N, N , Ïƒ) then Î£ := Î£ âˆª {Ïƒ} 11 Î” := Î” âˆª {N Î£} 12 end 13 obl(Â¯I): 14 begin 15 Î”1 := âˆ…; Î”2 := âˆ… 16 for each (N Î£) âˆˆ Î” do 17 if N = prh(I) then 18 if conflict(N , N, Ïƒ) then Î”1 := Î”1 âˆª {N Î£} 19 else nil 20 else 21 if conflict(N , N, Ïƒ) then 22 begin 23 Î”1 := Î”1 âˆª {N Î£} 24 Î”2 := Î”2 âˆª {N (Î£ âˆª {Ïƒ})} 25 end 26 Î” := (Î” âˆ’ Î”1) âˆª Î”2 âˆª {N} 27 end 28 end case 29 return Î” end Figure 4: Algorithm to Preserve Conflict-Freedom The algorithm uses a case of structure to differentiate the different possibilities for a given norm N. Line 3 addresses the case when the given norm is a permission: N is simply added to Î”.",
                "Lines 4-5 address the case when we attempt to add a ground prohibition to a normative state: if it conflicts with any obligation, then it is discarded; otherwise it is added to the normative state.",
                "Lines 6-12 describe the situation when the <br>normative position</br> to be added is a nonground prohibition.",
                "In this case, the algorithm initialises Î£ to an empty set and loops (line 9-10) through the norms N in the old normative state Î”.",
                "Upon finding one that conflicts with N, the algorithm updates Î£ by adding the newly found conflict set Ïƒ to it (line 10).",
                "By looping through Î”, we are able to check any conflicts between the new prohibition and the existing obligations, adequately building the annotation Î£ to be used when adding N to Î” in line 11.",
                "Lines 13-27 describe how a new obligation is accommodated to an existing normative state.",
                "We make use of two initially empty, temporary sets, Î”1, Î”2.",
                "The algorithm loops through Î” (lines 16-25) picking up those annotated prohibitions N Î£ which conflict with the new obligation.",
                "There are, however, two cases to deal with: the one when a ground The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 641 prohibition is found (line 17), and its exception, covering non-ground prohibitions (line 20).",
                "In both cases, the old prohibition is stored in Î”1 (lines 18 and 23) to be later removed from Î” (line 26).",
                "However, in the case of a nonground prohibition, the algorithm updates its annotation of conflict sets (line 24).",
                "The loop guarantees that an exhaustive (linear) search through a normative state takes place, checking if the new obligation is in conflict with any existing prohibitions, possibly updating the annotations of these conflicting prohibitions.",
                "In line 26 the algorithm builds the new updated Î” by removing the old prohibitions stored in Î”1 and adding the updated prohibitions stored in Î”2 (if any), as well as the new obligation N. Our proposed algorithm is correct in that, for a given <br>normative position</br> N and a normative state Î”, it provides a new normative state Î” in which all prohibitions have annotations recording how they unify with existing obligations.",
                "The annotations can be empty, though: this is the case when we have a ground prohibition or a prohibition which does not unify/conflict with any obligation.",
                "Permissions do not affect our algorithm and they are appropriately dealt with (line 3).",
                "Any attempt to insert a ground prohibition which conflicts, yields the same normative state (line 4).",
                "When a new obligation is being added then the algorithm guarantees that all prohibitions are considered (lines 14-27), leading to the removal of conflicting ground prohibitions or the update of annotations of non-ground prohibitions.",
                "The algorithm always terminates: the loops are over a finite set Î” and the conflict checks and set operations always terminate.",
                "The complexity of the algorithm is linear: the set Î” is only examined once for each possible case of norm to be added.",
                "When managing normative states we may also need to remove normative positions.",
                "This is straightforward: permissions can be removed without any problems; annotated prohibitions can also be removed without further considerations; obligations, however, require some housekeeping.",
                "When an obligation is to be removed, we must check it against all annotated prohibitions in order to update their annotations.",
                "We apply the conflict check and obtain a unifier, then remove this unifier from the prohibitions annotation.",
                "We invoke the removal algorithm as removeNorm(N, Î”): it returns a new normative state Î” in which N has been removed, with possible alterations to other normative positions as explained. 6.2 Enactment of a Normative Structure The enactment of a normative structure amounts to the parallel, distributed execution of normative scenes and normative transitions.",
                "For illustrative purposes, hereafter we shall describe the interplay between the payment and delivery normative scenes and the normative transition nt linking them in the upper half of figure 2.",
                "With this aim, consider for instance that obl(inform(jules, client, rod, acc, pay(copper, 400, 350), T) âˆˆ Î”payment and that Î”delivery holds prh(inform(rod,wm, jules, client, delivered(Z, Q), T)).",
                "Such states indicate that client Jules is obliged to pay Â£400 for 350kg of copper to accountant Rod according to the payment normative scene, whereas Rod, taking up the role of warehouse manager this time, is prohibited to deliver anything to client Jules according to the delivery normative scene.",
                "For each normative scene, the enactment process goes as follows.",
                "Firstly, it processes its incoming message queue that contains three types of messages: utterances from the activity it is linked to; and normative commands either to add or remove normative positions.",
                "For instance, in our example, the payment normative scene collects the illocution I = utt((inform(jules, client, rod, acc, pay(copper, 400, 350), 35)) standing for client Jules pending payment for copper (via arrow A in figure 2).",
                "Utterances are timestamped and subsequently added to the normative state.",
                "We would have Î”payment = Î”payment âˆª {I}, in our example.",
                "Upon receiving normative commands to either add or remove a <br>normative position</br>, the normative scene invokes the corresponding addition or removal algorithm described in Section 6.1.",
                "Secondly, the normative scene acknowledges its state change by sending a trigger message to every outgoing normative transition it is connected to.",
                "In our example, the payment normative scene would be signalling its state change to normative transition nt.",
                "For normative transitions, the process works differently.",
                "Because each normative transition controls the operation of a single rule, upon receiving a trigger message, it polls every incoming normative scene for substitutions for the relevant illocution schemata on the LHS of its rule.",
                "In our example, nt (being responsible for the rule described in Section 3.4), would poll the payment normative scene (via arrow B) for substitutions.",
                "Upon receiving replies from them (in the form of sets of substitutions together with time-stamps), it has to unify substitutions from each of these normative scenes.",
                "For each unification it finds, the rule is fired, and hence the corresponding normative command is sent along to the output normative scene.",
                "The normative transition then keeps track of the firing message it sent on and of the time-stamps of the normative positions that triggered the firing.",
                "This is done to ensure that the very same normative positions in the LHS of a rule only trigger its firing once.",
                "In our example, nt would be receiving Ïƒ = {X/jules, Y/rod, Z/copper, Q/350} from the payment normative scene.",
                "Since the substitions in Ïƒ unify with nts rule, the rule is fired, and the normative command add(delivery : obl(rod, wm, jules, client, delivered(copper, 350), T)) is sent along to the delivery normative scene to oblige Rod to deliver to client Jules 350kg of copper.",
                "After that, the delivery normative scene would invoke the addNorm algorithm from figure 4 with Î”delivery and N = obl(rod, wm, jules, client, delivered(copper, 350)) as arguments. 7.",
                "RELATED WORK AND CONCLUSIONS Our contributions in this paper are three-fold.",
                "Firstly, we introduce an approach for the management of and reasoning about norms in a distributed manner.",
                "To our knowledge, there is little work published in this direction.",
                "In [8, 21], two languages are presented for the distributed enforcement of norms in MAS.",
                "However, in both works, each agent has a local message interface that forwards legal messages according to a set of norms.",
                "Since these interfaces are local to each agent, norms can only be expressed in terms of actions of that agent.",
                "This is a serious disadvantage, e.g. when one needs to activate an obligation to one agent due to a certain message of another one.",
                "The second contribution is the proposal of a normative structure.",
                "The notion is fruitful because it allows the separation of normative and procedural concerns.",
                "The normative structure we propose makes evident the similarity between the propagation of normative positions and the propagation 642 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) of tokens in Coloured Petri Nets.",
                "That similarity readily suggests a mapping between the two, and gives grounds to a convenient analytical treatment of the normative structure, in general, and the complexity of conflict detection, in particular.",
                "The idea of modelling interactions (in the form of conversations) via Petri Nets has been investigated in [18], where the interaction medium and individual agents are modelled as CPN sub-nets that are subsequently combined for analysis.",
                "In [5], conversations are first designed and analysed at the level of CPNs and thereafter translated into protocols.",
                "Lin et al. [20] map conversation schemata to CPNs.",
                "To our knowledge, the use of this representation in the support of conflict detection in regulated MAS has not been reported elsewhere.",
                "Finally, we present a distributed mechanism to resolve normative conflicts.",
                "Sartor [25] treats normative conflicts from the point of view of legal theory and suggests a way to order the norms involved.",
                "His idea is implemented in [12] but requires a central resource for norm maintenance.",
                "The approach to conflict detection and resolution is an adaptation and extension of the work on instantiation graphs reported in [17] and a related algorithm in [27].",
                "The algorithm presented in the current paper can be used to manage normative states distributedly: normative scenes that happen in parallel have an associated normative state Î” to which the algorithm is independently applied each time a new norm is to be introduced.",
                "These three contributions we present in this paper open many possibilities for future work.",
                "We should mention first, that as a broad strategy we are working on a generalisation of the notion of normative structure to make it operate with different coordination models, with richer deontic content and on top of different computational realisations of regulated MAS.",
                "As a first step in this direction we are taking advantage of the de-coupling between interaction protocols and declarative normative guidance that the normative structure makes available, to provide a normative layer for electronic institutions (as defined in [1]).",
                "We expect such coupling will endow electronic institutions with a more flexible -and more expressive- normative environment.",
                "Furthermore, we want to extend our model along several directions: (1) to handle negation and constraints as part of the norm language, and in particular the notion of time; (2) to accommodate multiple, hierarchical norm authorities based on roles, along the lines of Cholvy and Cuppens [3] and power relationships as suggested by Carabelea et al. [2]; (3) to capture in the conflict resolution algorithm different semantics relating the deontic notions by supporting different axiomations (e.g., relative strength of prohibition versus obligation, default deontic notions, deontic inconsistencies).",
                "On the theoretical side, we intend to use analysis techniques of CPNs in order to characterise classes of CPNs (e.g., acyclic, symmetric, etc.) corresponding to families of Normative Structures that are susceptible to tractable offline conflict detection.",
                "The combination of these techniques along with our online conflict resolution mechanisms is intended to endow MAS designers with the ability to incorporate norms into their systems in a principled way. 8.",
                "REFERENCES [1] J. L. Arcos, M. Esteva, P. Noriega, J.",
                "A. RodrÂ´Ä±guez, and C. Sierra.",
                "Engineering open environments with electronic institutions.",
                "Journal on Engineering Applications of Artificial Intelligence, 18(2):191-204, 2005. [2] C. Carabelea, O. Boissier, and C. Castelfranchi.",
                "Using social power to enable agents to reason about being part of a group.",
                "In 5th Internat.",
                "Workshop, ESAW 2004, pages 166-177, 2004. [3] L. Cholvy and F. Cuppens.",
                "Solving normative conflicts by merging roles.",
                "In Fifth International Conference on Artificial Intelligence and Law, Washington, USA, 1995. [4] S. Christensen and T. B. Haagh.",
                "Design CPN - overview of CPN ML syntax.",
                "Technical report, University of Aarhus, 1996. [5] R. S. Cost, Y. Chen, T. W. Finin, Y. Labrou, and Y. Peng.",
                "Using colored petri nets for conversation modeling.",
                "In Issues in Agent Communication, pages 178-192, London, UK, 2000. [6] F. Dignum.",
                "Autonomous Agents with Norms.",
                "Artificial Intelligence and Law, 7(1):69-79, 1999. [7] A. Elhag, J. Breuker, and P. Brouwer.",
                "On the Formal Analysis of Normative Conflicts.",
                "Information & Comms.",
                "Techn.",
                "Law, 9(3):207-217, Oct. 2000. [8] M. Esteva, W. Vasconcelos, C. Sierra, and J.",
                "A. RodrÂ´Ä±guez-Aguilar.",
                "Norm consistency in electronic institutions. volume 3171 (LNAI), pages 494-505.",
                "Springer-Verlag, 2004. [9] M. Fitting.",
                "First-Order Logic and Automated Theorem Proving.",
                "Springer-Verlag, New York, U.S.A., 1990. [10] N. Fornara, F. Vigan`o, and M. Colombetti.",
                "An Event Driven Approach to Norms in Artificial Institutions.",
                "In AAMAS05 Workshop: Agents, Norms and Institutions for Regulated Multiagent Systems (ANI@REM), Utrecht, 2005. [11] D. Gaertner, P. Noriega, and C. Sierra.",
                "Extending the BDI architecture with commitments.",
                "In Proceedings of the 9th International Conference of the Catalan Association of Artificial Intelligence, 2006. [12] A. GarcÂ´Ä±a-Camino, P. Noriega, and J.-A.",
                "RodrÂ´Ä±guez-Aguilar.",
                "An Algorithm for Conflict Resolution in Regulated Compound Activities.",
                "In 7th Int.Workshop - ESAW 06, 2006. [13] A. GarcÂ´Ä±a-Camino, J.-A.",
                "RodrÂ´Ä±guez-Aguilar, C. Sierra, and W. Vasconcelos.",
                "A Distributed Architecture for Norm-Aware Agent Societies.",
                "In DALT III, volume 3904 (LNAI), pages 89-105.",
                "Springer, 2006. [14] F. Giunchiglia and L. Serafini.",
                "Multi-language hierarchical logics or: How we can do without modal logics.",
                "Artificial Intelligence, 65(1):29-70, 1994. [15] J. Habermas.",
                "The Theory of Communication Action, Volume One, Reason and the Rationalization of Society.",
                "Beacon Press, 1984. [16] K. Jensen.",
                "Coloured Petri Nets: Basic Concepts, Analysis Methods and Practical Uses (Volume 1).",
                "Springer, 1997. [17] M. Kollingbaum and T. Norman.",
                "Strategies for resolving norm conflict in practical reasoning.",
                "In ECAI Workshop Coordination in Emergent Agent Societies 2004, 2004. [18] J.-L. Koning, G. Francois, and Y. Demazeau.",
                "Formalization and pre-validation for interaction protocols in a multi agent systems.",
                "In ECAI, pages 298-307, 1998. [19] B. Kramer and J. Mylopoulos.",
                "Knowledge Representation.",
                "In S. C. Shapiro, editor, Encyclopedia of Artificial Intelligence, volume 1, pages 743-759.",
                "John Wiley & Sons, 1992. [20] F. Lin, D. H. Norrie, W. Shen, and R. Kremer.",
                "A schema-based approach to specifying conversation policies.",
                "In Issues in Agent Communication, pages 193-204, 2000. [21] N. Minsky.",
                "Law Governed Interaction (LGI): A Distributed Coordination and Control Mechanism (An Introduction, and a Reference Manual).",
                "Technical report, Rutgers University, 2005. [22] T. Murata.",
                "Petri nets: Properties, analysis and applications.",
                "Proceedings of the IEEE, 77(4):541-580, 1989. [23] S. Parsons, C. Sierra, and N. Jennings.",
                "Agents that reason and negotiate by arguing.",
                "Journal of Logic and Computation, 8(3):261-292, 1998. [24] A. Ricci and M. Viroli.",
                "Coordination Artifacts: A Unifying Abstraction for Engineering Environment-Mediated Coordination in MAS.",
                "Informatica, 29:433-443, 2005. [25] G. Sartor.",
                "Normative conflicts in legal reasoning.",
                "Artificial Intelligence and Law, 1(2-3):209-235, June 1992. [26] M. Sergot.",
                "A Computational Theory of Normative Positions.",
                "ACM Trans.",
                "Comput.",
                "Logic, 2(4):581-622, 2001. [27] W. W. Vasconcelos, M. Kollingbaum, and T. Norman.",
                "Resolving Conflict and Inconsistency in Norm-Regulated Virtual Organisations.",
                "In Proceedings of AAMAS 07, Hawaii, USA, 2007.",
                "IFAAMAS. [28] G. H. von Wright.",
                "Norm and Action: A Logical Inquiry.",
                "Routledge and Kegan Paul, London, 1963. [29] M. Wooldridge.",
                "An Introduction to Multiagent Systems.",
                "John Wiley & Sons, Chichester, UK, Feb. 2002.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 643"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "La intenciÃ³n de agregar o eliminar una \"posiciÃ³n normativa\" llamamos comando normativo.",
                "Estas condiciones son expresiones o posiciones normativas asociadas con un protocolo dado (denotado, por ejemplo, actividad: enunciado) que producen un comando normativo, es decir, la adiciÃ³n o eliminaciÃ³n de otra \"posiciÃ³n normativa\", posiblemente relacionada con una actividad diferente.",
                "Una regla de transiciÃ³n normativa R es de la forma: r :: = v c v :: = ids: d |V, V D :: = N |utt (Â¯i) n :: = per (Â¯i) |PRH (Â¯i) |obl (Â¯i) c :: = add (ids: n) |Eliminar (IDS: N) donde Â¯i es un esquema de ilocuciÃ³n, n es una \"posiciÃ³n normativa\" (es decir, permiso, prohibiciÃ³n u obligaciÃ³n), IDS es un identificador para la actividad S y C es un comando normativo.",
                "Los bordes son un conjunto Ain âˆª Aout donde Ain âŠ† S Ã— B es un conjunto de arcos de entrada etiquetados con una fÃ³rmula atÃ³mica utilizando la funciÃ³n de etiquetado Lin: Ain â†’ D;y Aout âŠ† B Ã— S es un conjunto de arcos de salida etiquetados con una \"posiciÃ³n normativa\" utilizando la funciÃ³n de etiquetado Tout: Aout â†’ N. Lo siguiente debe mantener: 1.",
                "Una fÃ³rmula atÃ³mica (es decir, un enunciado o una \"posiciÃ³n normativa\") es uniforme con un enunciado o \"posiciÃ³n normativa\" que pertenece al estado de la escena normativa correspondiente.",
                "Cada vez que se activa una regla, se lleva a cabo el comando normativo especificado en el lado derecho de esa regla, con la intenciÃ³n de agregar o eliminar una \"posiciÃ³n normativa\" del estado de la escena normativa correspondiente.",
                "Definimos debajo de un algoritmo que garantiza que se agregue una \"posiciÃ³n normativa\" a una escena normativa de tal manera que no cause ningÃºn conflicto.3 Aunque proponemos reducir las prohibiciones, se puede usar la misma maquinaria para definir la reducciÃ³n de las obligaciones.",
                "Detectamos la superposiciÃ³n de las influencias de las normas, es decir, cÃ³mo afectan el comportamiento de los agentes preocupados, y reducimos la influencia de la \"posiciÃ³n normativa\", utilizando adecuadamente las anotaciones al verificar si la norma se aplica a las ilocuciones.",
                "Las lÃ­neas 6-12 describen la situaciÃ³n en la que la \"posiciÃ³n normativa\" a agregar es una prohibiciÃ³n sin reducciÃ³n.",
                "En la lÃ­nea 26, el algoritmo construye el nuevo Î´ actualizado al eliminar las antiguas prohibiciones almacenadas en Î”1 y agregar las prohibiciones actualizadas almacenadas en Î”2 (si las hay), asÃ­ como la nueva obligaciÃ³n N. Nuestro algoritmo propuesto es correcto en eso, para un dado.\"PosiciÃ³n normativa\" n y un estado normativo Î´, proporciona un nuevo estado normativo Î´ en el que todas las prohibiciones tienen anotaciones registrando cÃ³mo se unen con las obligaciones existentes.",
                "Al recibir comandos normativos para agregar o eliminar una \"posiciÃ³n normativa\", la escena normativa invoca el algoritmo de adiciÃ³n o eliminaciÃ³n correspondiente descrito en la SecciÃ³n 6.1."
            ],
            "translated_text": "",
            "candidates": [
                "posiciÃ³n normativa",
                "posiciÃ³n normativa",
                "posiciÃ³n normativa",
                "posiciÃ³n normativa",
                "posiciÃ³n normativa",
                "posiciÃ³n normativa",
                "PosiciÃ³n normativa",
                "posiciÃ³n normativa",
                "posiciÃ³n normativa",
                "posiciÃ³n normativa",
                "posiciÃ³n normativa",
                "posiciÃ³n normativa",
                "posiciÃ³n normativa",
                "posiciÃ³n normativa",
                "posiciÃ³n normativa",
                "posiciÃ³n normativa",
                "posiciÃ³n normativa",
                "posiciÃ³n normativa",
                "posiciÃ³n normativa",
                "posiciÃ³n normativa",
                "PosiciÃ³n normativa",
                "posiciÃ³n normativa",
                "posiciÃ³n normativa"
            ],
            "error": []
        },
        "protocol": {
            "translated_key": "protocolo",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Distributed Norm Management in Regulated Multi-Agent Systems âˆ— Dorian Gaertner Dept.",
                "of Computing, Imperial College London, London SW7 2AZ, United Kingdom dg00@doc.ic.ac.uk Andres Garcia-Camino, Pablo Noriega, J.-A.",
                "Rodriguez-Aguilar IIIA-CSIC, 08193 Bellaterra, Spain {andres,pablo,jar}@iiia.csic.es Wamberto Vasconcelos Dept. of Computing Science, University of Aberdeen, Aberdeen AB24 3UE, United Kingdom wvasconcelos@acm.org ABSTRACT Norms are widely recognised as a means of coordinating multi-agent systems.",
                "The distributed management of norms is a challenging issue and we observe a lack of truly distributed computational realisations of normative models.",
                "In order to regulate the behaviour of autonomous agents that take part in multiple, related activities, we propose a normative model, the Normative Structure (NS), an artifact that is based on the propagation of normative positions (obligations, prohibitions, permissions), as consequences of agents actions.",
                "Within a NS, conflicts may arise due to the dynamic nature of the MAS and the concurrency of agents actions.",
                "However, ensuring conflict-freedom of a NS at design time is computationally intractable.",
                "We show this by formalising the notion of conflict, providing a mapping of NSs into Coloured Petri Nets and borrowing well-known theoretical results from that field.",
                "Since online conflict resolution is required, we present a tractable algorithm to be employed distributedly.",
                "We then demonstrate that this algorithm is paramount for the distributed enactment of a NS.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Languages and structures General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION A fundamental feature of open, regulated multi-agent systems in which autonomous agents interact, is that participating agents are meant to comply with the conventions of the system.",
                "Norms can be used to model such conventions and hence as a means to regulate the observable behaviour of agents [6, 29].",
                "There are many contributions on the subject of norms from sociologists, philosophers and logicians (e.g., [15, 28]).",
                "However, there are very few proposals for computational realisations of normative models - the way norms can be integrated in the design and execution of MASs.",
                "The few that exist (e.g. [10, 13, 24]), operate in a centralised manner which creates bottlenecks and single points-of-failure.",
                "To our knowledge, no proposal truly supports the distributed enactment of normative environments.",
                "In our paper we approach that problem and propose means to handle conflicting commitments in open, regulated, multiagent systems in a distributed manner.",
                "The type of regulated MAS we envisage consists of multiple, concurrent, related activities where agents interact.",
                "Each agent may concurrently participate in several activities, and change from one activity to another.",
                "An agents actions within an activity may have consequences in the form of normative positions (i.e. obligations, permissions, and prohibitions) [26] that may constrain its future behaviour.",
                "For instance, a buyer agent who runs out of credit may be forbidden to make further offers, or a seller agent is obliged to deliver after closing a deal.",
                "We assume that agents may choose not to fulfill all their obligations and hence may be sanctioned by the MAS.",
                "Notice that, when activities are distributed, normative positions must flow from the activities in which they are generated to those in which they take effect.",
                "For instance, the sellers obligation above must flow (or be propagated) from a negotiation activity to a delivery activity.",
                "Since in an open, regulated MAS one cannot embed normative aspects into the agents design, we adopt the view that the MAS should be supplemented with a separate set of norms that further regulates the behaviour of participating agents.",
                "In order to model the separation of concerns between the coordination level (agents interactions) and the normative level (propagation of normative positions), we propose an artifact called the Normative Structure (NS).",
                "Within a NS conflicts may arise due to the dynamic nature of the MAS and the concurrency of agents actions.",
                "For instance, an agent may be obliged and prohibited to do the 636 978-81-904262-7-5 (RPS) c 2007 IFAAMAS very same action in an activity.",
                "Since the regulation of a MAS entails that participating agents need to be aware of the validity of those actions that take place within it, such conflicts ought to be identified and possibly resolved if a claim of validity is needed for an agent to engage in an action or be sanctioned.",
                "However, ensuring conflict-freedom of a NS at design time is computationally intractable.",
                "We show this by formalising the notion of conflict, providing a mapping of NSs into Coloured Petri Nets (CPNs) and borrowing well-known theoretical results from the field of CPNs.",
                "We believe that online conflict detection and resolution is required.",
                "Hence, we present a tractable algorithm for conflict resolution.",
                "This algorithm is paramount for the distributed enactment of a NS.",
                "The paper is organised as follows.",
                "In Section 2 we detail a scenario to serve as an example throughout the paper.",
                "Next, in Section 3 we formally define the normative structure artifact.",
                "Further on, in Section 4 we formalise the notion of conflict to subsequently analyse the complexity of conflict detection in terms of CPNs in Section 5.",
                "Section 6 describes the computational management of NSs by describing their enactment and presenting an algorithm for conflict resolution.",
                "Finally, we comment on related work, draw conclusions and report on future work in Section 7. 2.",
                "SCENARIO We use a supply-chain scenario in which companies and individuals come together at an online marketplace to conduct business.",
                "The overall transaction procedure may be organised as six distributed activities, represented as nodes in the diagram in Figure 1.",
                "They involve different participants whose behaviour is coordinated through protocols.",
                "In this scenario agents can play one of four roles: marExit Registration Payment Delivery Negotiation Coordination Model Contract Figure 1: Activity Structure of the Scenario ketplace accountant (acc), client, supplier (supp) and warehouse managers (wm).",
                "The arrows connecting the activities represent how agents can move from one activity to another.",
                "After registering at the marketplace, clients and suppliers get together in an activity where they negotiate the terms of their transaction, i.e. prices, amounts of goods to be delivered, deadlines and other details.",
                "In the contract activity, the order becomes established and an invoice is prepared.",
                "The client will then participate in a payment activity, verifying his credit-worthiness and instructing his bank to transfer the correct amount of money.",
                "The supplier in the meantime will arrange for the goods to be delivered (e.g. via a warehouse manager) in the delivery activity.",
                "Finally, agents can leave the marketplace conforming to a predetermined exit <br>protocol</br>.",
                "The marketplace accountant participates in most of the activities as a trusted provider of auditing tools.",
                "In the rest of the paper we shall build on this scenario to exemplify the notion of normative structure and to illustrate our approach to conflict detection and resolution in a distributed setting. 3.",
                "NORMATIVE STRUCTURE In MASs agents interact according to protocols which naturally are distributed.",
                "We advocate that actions in one such <br>protocol</br> may have an effect on the enactment of other protocols.",
                "Certain actions can become prohibited or obligatory, for example.",
                "We take normative positions to be obligations, prohibitions and permissions akin to work described in [26].",
                "The intention of adding or removing a normative position we call normative command.",
                "Occurrences of normative positions in one <br>protocol</br> may also have consequences for other protocols1 .",
                "In order to define our norm language and specify how normative positions are propagated, we have been inspired by multi-context systems [14].",
                "These systems allow the structuring of knowledge into distinct formal theories and the definition of relationships between them.",
                "The relationships are expressed as bridge rules - deducibility of formulae in some contexts leads to the deduction of other formulae in other contexts.",
                "Recently, these systems have been successfully used to define agent architectures [11, 23].",
                "The metaphor translates to our current work as follows: the utterance of illocutions and/or the existence of normative positions in some normative scenes leads to the deduction of normative positions in other normative scenes.",
                "We are concerned with the propagation and distribution of normative positions within a network of distributed, normative scenes as a consequence of agents actions.",
                "We take normative scenes to be sets of normative positions and utterances that are associated with an underlying interaction <br>protocol</br> corresponding to an activity.",
                "In this section, we first present a simple language capturing these aspects and formally introduce the notions of normative scene, normative transition rule and normative structure.",
                "We give the intended semantics of these rules and show how to control a MAS via norms in an example. 3.1 Basic Concepts The building blocks of our language are terms and atomic formulae: Def. 1.",
                "A term, denoted as t, is (i) any constant expressed using lowercase (with or without subscripts), e.g. a, b0, c or (ii) any variable expressed using uppercase (with or without subscripts), e.g.",
                "X, Y, Zb or (iii) any function f(t1, . . . , tn), where f is an n-ary function symbol and t1, .., tn are terms.",
                "Some examples of terms and functions are Credit, price or offer(bible, 30) being respectively a variable, a constant and a function.",
                "We will be making use of identifiers throughout the paper, which are constant terms and also need the following definition: Def. 2.",
                "An atomic formula is any construct p(t1, . . . , tn), where p is an n-ary predicate symbol and t1, . . . , tn are terms.",
                "The set of all atomic formulae is denoted as Î”.",
                "We focus on an expressive class of MASs in which interaction is carried out by means of illocutionary speech acts exchanged among participating agents: Def. 3.",
                "Illocutions I are ground atomic formulae which have the form p(ag, r, ag , r , Î´, t) where p is an element of 1 Here, we abstract from protocols and refer to them generically as activities.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 637 a set of illocutionary particles (e.g. inform, request, offer); ag, ag are agent identifiers; r, r are role identifiers; Î´, an arbitrary ground term, is the content of the message, built from a shared content language; t âˆˆ N is a time stamp.",
                "The intuitive meaning of p(ag, r, ag , r , m, t) is that agent ag playing role r sent message m to agent ag playing role r at time t. An example of an illocution is inform(ag4, supp, ag3, client, offer(wire, 12), 10).",
                "Sometimes it is useful to refer to illocutions that are not fully grounded, that is, those that may contain uninstantiated (free) variables.",
                "In the description of a <br>protocol</br>, for instance, the precise values of the message exchanged can be left unspecified.",
                "During the enactment of the <br>protocol</br> agents will produce the actual values which will give rise to a ground illocution.",
                "We can thus define illocution schemata: Def. 4.",
                "An illocution schema Â¯I is any atomic formula p(ag, r, ag , r , Î´, t) in which some of the terms may either be variables or may contain variables. 3.2 Formal Definition of the Notion of NS We first define normative scenes as follows: Def. 5.",
                "A normative scene is a tuple s = ids, Î”s where ids is a scene identifier and Î”s is the set of atomic formulae Î´ (i.e. utterances and normative positions) that hold in s. We will also refer to Î”s as the state of normative scene s. For instance, a snapshot of the state of the delivery normative scene of our scenario could be represented as: Î”s = 8 < : utt(request(sean, client, kev, wm, receive(wire, 200), 20)), utt(accept(kev, wm, sean, client, receive(wire, 200), 30)), obl(inform(kev, wm, sean, client, delivered(wire, 200), 30)) 9 = ; That is, agent Sean taking up the client role has requested agent Kev (taking up the warehouse manager role wm) to receive 200kg of wire, and agent Kev is obliged to deliver 200kg of wire to Sean since he accepted the request.",
                "Note that the state of a normative scene Î”s evolves over time.",
                "These normative scenes are connected to one another via normative transitions that specify how utterances and normative positions in one scene affect other normative scenes.",
                "As mentioned above, activities are not independent since illocutions uttered in some of them may have an effect on other ones.",
                "Normative transition rules define the conditions under which a normative command is generated.",
                "These conditions are either utterances or normative positions associated with a given <br>protocol</br> (denoted e.g. activity : utterance) which yield a normative command, i.e. the addition or removal of another normative position, possibly related to a different activity.",
                "Our transition rules are thus defined: Def. 6.",
                "A normative transition rule R is of the form: R ::= V C V ::= ids : D | V, V D ::= N | utt(Â¯I) N ::= per(Â¯I) | prh(Â¯I) | obl(Â¯I) C ::= add(ids : N) | remove(ids : N) where Â¯I is an illocution schema, N is a normative position (i.e. permission, prohibition or obligation), ids is an identifier for activity s and C is a normative command.",
                "We endow our language with the usual semantics of rulebased languages [19].",
                "Rules map an existing normative structure to a new normative structure where only the state of the normative scenes change.",
                "In the definitions below we rely on the standard concept of substitution [9].",
                "Def. 7.",
                "A normative transition is a tuple b = idb, rb where idb is an identifier and rb is a normative transition rule.",
                "We are proposing to extend the notion of MAS, regulated by protocols, with an extra layer consisting of normative scenes and normative transitions.",
                "This layer is represented as a bi-partite graph that we term normative structure.",
                "A normative structure relates normative scenes and normative transitions specifying which normative positions are to be generated or removed in which normative scenes.",
                "Def. 8.",
                "A normative structure is a labelled bi-partite graph NS = Nodes, Edges, Lin , Lout .",
                "Nodes is a set SâˆªB where S is a set of normative scenes and B is a set of normative transitions.",
                "Edges is a set Ain âˆª Aout where Ain âŠ† S Ã— B is a set of input arcs labelled with an atomic formula using the labelling function Lin : Ain â†’ D; and Aout âŠ† B Ã— S is a set of output arcs labelled with a normative position using the labelling function Lout : Aout â†’ N. The following must hold: 1.",
                "Each atomic formula appearing in the LHS of a rule rb must be of the form (ids : D) where s âˆˆ S and D âˆˆ Î” and âˆƒain âˆˆ Ain such that ain = (s, b) and Lin (ain ) = D. 2.",
                "The atomic formula appearing in the RHS of a rule rb must be of the form add(ids : N) or remove(ids : N) where s âˆˆ S and âˆƒaout âˆˆ Aout such that aout = (b, s) and Lout (aout ) = N. 3. âˆ€a âˆˆ Ain such that a = (s, b) and b = idb, rb and Lin (a) = D then (ids:D) must occur in the LHS of rb. 4. âˆ€a âˆˆ Aout such that a = (b, s) and b = idb, rb and Lout (a) = N then add(ids : N) or remove(ids : N) must occur in the RHS of rb.",
                "The first two points ensure that every atomic formulae on the LHS of a normative transition rule labels an arc entering the appropriate normative transition in the normative structure, and that the atomic formula on the RHS labels the corresponding outgoing arc.",
                "Points three and four ensure that labels from all incoming arcs are used in the LHS of the normative transition rule that these arcs enter into, and that the labels from all outgoing arcs are used in the RHS of the normative transition rule that these arcs leave. 3.3 Intended Semantics The formal semantics will be defined via a mapping to Coloured Petri Nets in Section 5.1.",
                "Here we start defining the intended semantics of normative transition rules by describing how a rule changes a normative scene of an existing normative structure yielding a new normative structure.",
                "Each rule is triggered once for each substitution that unifies the left-hand side V of the rule with the state of the corresponding normative scenes.",
                "An atomic formula (i.e. an utterance or a normative position) holds iff it is unifiable with an utterance or normative position that belongs to the state of the corresponding normative scene.",
                "Every time a rule is triggered, the normative command specified on the right-hand side of that rule is carried out, intending to add or remove a normative position from the state of the corresponding normative scene.",
                "However, addition is not unconditional as conflicts may arise.",
                "This topic will be treated in Sections 4 and 6.1. 638 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.4 Example In our running example we have the following exemplary normative transition rule: â€ž payment : obl(inform(X, client, Y, acc, pay(Z, P, Q), T )), payment : utt(inform(X, client, Y, acc, pay(Z, P, Q), T )) Â« delivery : add(obl(inform(Y, wm, X, client, delivered(Z, Q), T ))) That is, during the payment activity, an obligation on client X to inform accountant Y about the payment P of item Z at time T and the corresponding utterance which fulfills this obligation allows the flow of a norm to the delivery activity.",
                "The norm is an obligation on agent Y (this time taking up the role of the warehouse manager wm) to send a message to client X that item Z has been delivered.",
                "We show in Figure 2 a diagrammatic representation of how activities and a normative structure relate: Payment Delivery Contract Normative Level Exit Registration Payment Delivery Negotiation Coordination Level Contract nt Figure 2: Activities and Normative Structure As illocutions are uttered during activities, normative positions arise.",
                "Utterances and normative positions are combined in transition rules, causing the flow of normative positions between normative scenes.",
                "The connection between the two levels is described in Section 6.2. 4.",
                "CONFLICT DEFINITION The terms deontic conflict and deontic inconsistency have been used interchangeably in the literature.",
                "However, in this paper we adopt the view of [7] in which the authors suggest that a deontic inconsistency arises when an action is simultaneously permitted and prohibited - since a permission may not be acted upon, no real conflict occurs.",
                "The situations when an action is simultaneously obliged and prohibited are, however, deontic conflicts, as both obligations and prohibitions influence behaviours in a conflicting fashion.",
                "The content of normative positions in this paper are illocutions.",
                "Therefore, a normative conflict arises when an illocution is simultaneously obliged and prohibited.",
                "We propose to use the standard notion of unification [9] to detect when a prohibition and a permission overlap.",
                "For instance, an obligation obl(inform(A1, R1, A2, R2, p(c, X), T)) and a prohibition prh(inform(a1, r1, a2, r2, p(Y, d), T )) are in conflict as they unify under Ïƒ = {A1/a1, R1/r1, A2/a2, R2/r2, Y/c, X/d, T/T }).",
                "We formally capture this notion: Def. 9.",
                "A (deontic) conflict arises between two normative positions N and N under a substitution Ïƒ, denoted as conflict(N, N , Ïƒ), if and only if N = prh(Â¯I), N = obl(Â¯I ) and unify(Â¯I,Â¯I , Ïƒ).",
                "That is, a prohibition and an obligation are in conflict if, and only if, their illocutions unify under Ïƒ.",
                "The substitution Ïƒ, called here the conflict set, unifies the agents, roles and atomic formulae.",
                "We assume that unify is a suitable implementation of a unification algorithm which i) always terminates (possibly failing, if a unifier cannot be found); ii) is correct; and iii) has linear computational complexity.",
                "Inconsistencies caused by the same illocution being simultaneously permitted and prohibited can be formalised similarly.",
                "In this paper we focus on prohibition/obligation conflicts, but the computational machinery introduced in Section 6.1 can equally be used to detect prohibition/permission inconsistencies, if we substitute modality obl for per. 5.",
                "FORMALISING CONFLICT-FREEDOM In this section we introduce some background knowledge on CPNs assuming a basic understanding of ordinary Petri Nets.",
                "For technical details we refer the reader to [16].",
                "We then map NSs to CPNs and analyse their properties.",
                "CPNs combine the strength of Petri nets with the strength of functional programming languages.",
                "On the one hand, Petri nets provide the primitives for the description of the synchronisation of concurrent processes.",
                "As noticed in [16], CPNs have a semantics which builds upon true concurrency, instead of interleaving.",
                "In our opinion, a true-concurrency semantics is easier to work with because it is the way we envisage the connection between the coordination level and the normative level of a multi-agent system to be.",
                "On the other hand, the functional programming languages used by CPNs provide the primitives for the definition of data types and the manipulation of their data values.",
                "Thus, we can readily translate expressions of a normative structure.",
                "Last but not least, CPNs have a well-defined semantics which unambiguously defines the behaviour of each CPN.",
                "Furthermore, CPNs have a large number of formal analysis methods and tools by which properties of CPNs can be proved.",
                "Summing up, CPNs provide us with all the necessary features to formally reason about normative structures given that an adequate mapping is provided.",
                "In accordance with Petri nets, the states of a CPN are represented by means of places.",
                "But unlike Petri Nets, each place has an associated data type determining the kind of data which the place may contain.",
                "A state of a CPN is called a marking.",
                "It consists of a number of tokens positioned on the individual places.",
                "Each token carries a data value which has the type of the corresponding place.",
                "In general, a place may contain two or more tokens with the same data value.",
                "Thus, a marking of a CPN is a function which maps each place into a multi-set2 of tokens of the correct type.",
                "One often refers to the token values as token colours and one also refers to the data types as colour sets.",
                "The types of a CPN can be arbitrarily complex.",
                "Actions in a CPN are represented by means of transitions.",
                "An incoming arc into a transition from a place indicates that the transition may remove tokens from the corresponding place while an outgoing arc indicates that the transition may add tokens.",
                "The exact number of tokens and their data values are determined by the arc expressions, which are encoded using the programming language chosen for the CPN.",
                "A transition is enabled in a CPN if and only if all the 2 A multi-set (or bag) is an extension to the notion of set, allowing the possibility of multiple appearances of the same element.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 639 variables in the expressions of its incoming arcs are bound to some value(s) (each one of these bindings is referred to as a binding element).",
                "If so, the transition may occur by removing tokens from its input places and adding tokens to its output places.",
                "In addition to the arc expressions, it is possible to attach a boolean guard expression (with variables) to each transition.",
                "Putting all the elements above together we obtain a formal definition of CPN that shall be employed further ahead for mapping purposes.",
                "Def. 10.",
                "A CPN is a tuple Î£, P, T, A, N, C, G, E, I where: (i) Î£ is a finite set of non-empty types, also called colour sets; (ii) P is a finite set of places; (iii) T is a finite set of transitions; (iv) A is a finite set of arcs; (v) N is a node function defined from A into P Ã— T âˆª T Ã— P; (vi) C is a colour function from P into Î£; (vii) G is a guard function from T into expressions; (viii) E is an arc expression function from A into expressions; (ix) I is an initialisation function from P into closed expressions; Notice that the informal explanation of the enabling and occurrence rules given above provides the foundations to understand the behaviour of a CPN.",
                "In accordance with ordinary Petri nets, the concurrent behaviour of a CPN is based on the notion of step.",
                "Formally, a step is a non-empty and finite multi-set over the set of all binding elements.",
                "Let step S be enabled in a marking M. Then, S may occur, changing the marking M to M .",
                "Moreover, we say that marking M is directly reachable from marking M by the occurrence of step S, and we denote it by M[S > M .",
                "A finite occurrence sequence is a finite sequence of steps and markings: M1[S1 > M2 . . .",
                "Mn[Sn > Mn+1 such that n âˆˆ N and Mi[Si > Mi+1 âˆ€i âˆˆ {1, . . . , n}.",
                "The set of all possible markings reachable for a net Net from a marking M is called its reachability set, and is denoted as R(Net, M). 5.1 Mapping to Coloured Petri Nets Our normative structure is a labelled bi-partite graph.",
                "The same is true for a Coloured Petri Net.",
                "We are presenting a mapping f from one to the other, in order to provide semantics for the normative structure and prove properties about it by using well-known theoretical results from work on CPNs.",
                "The mapping f makes use of correspondences between normative scenes and CPN places, normative transitions and CPN transitions and finally, between arc labels and CPN arc expressions.",
                "S â†’ P B â†’ T Lin âˆª Lout â†’ E The set of types is the singleton set containing the colour NP (i.e.",
                "Î£ = {NP}).",
                "This complex type is structured as follows (we use CPN-ML [4] syntax): color NPT = with Obl | Per | Prh | NoMod color IP = with inform | declare | offer color UTT = record illp : IP ag1, role1, ag2, role2 : string content: string time : int color NP = record mode : NPT illoc : UTT Modelling illocutions as norms without modality (NoMod) is a formal trick we use to ensure that sub-nets can be combined as explained below.",
                "Arcs are mapped almost directly.",
                "A is a finite set of arcs and N is a node function, such that âˆ€a âˆˆ A âˆƒa âˆˆ Ain âˆªAout .",
                "N(a) = a .",
                "The initialisation function I is defined as I(p) = Î”s (âˆ€s âˆˆ S where p is obtained from s using the mapping; remember that s = ids, Î”s ).",
                "Finally, the colour function C assigns the colour NP to every place: C(p) = NP (âˆ€p âˆˆ P).",
                "We are not making use of the guard function G. In future work, this function can be used to model constraints when we extend the expressiveness of our norm language. 5.2 Properties of Normative Structures Having defined the mapping from normative structures to Coloured Petri Nets, we now look at properties of CPNs that help us understand the complexity of conflict detection.",
                "One question we would like to answer is, whether at a given point in time, a given normative structure is conflict-free.",
                "Such a snapshot of a normative structure corresponds to a marking in the mapped CPN.",
                "Def. 11.",
                "Given a marking Mi, this marking is conflictfree if Â¬âˆƒp âˆˆ P. âˆƒnp1, np2 âˆˆ Mi(p) such that np1.mode = Obl and np2.mode = Prh and np1.illoc and np2.illoc unify under a valid substitution.",
                "Another interesting question would be, whether a conflict will occur from such a snapshot of the system by propagating the normative positions.",
                "In order to answer this question, we first translate the snapshot of the normative structure to the corresponding CPN and then execute the finite occurence sequence of markings and steps, verifying the conflict-freedom of each marking as we go along.",
                "Def. 12.",
                "Given a marking Mi, a finite occurrence sequence Si, Si+1, ..., Sn is called conflict-free, if and only if Mi[Si > Mi+1 . . .",
                "Mn[Sn > Mn+1 and Mk is conflict-free for all k such that i â‰¤ k â‰¤ n + 1.",
                "However, the main question we would like to investigate, is whether or not a given normative structure is conflictresistant, that is, whether or not the agents enacting the MAS are able to bring about conflicts through their actions.",
                "As soon as one includes the possibility of actions (or utterances) from autonomous agents, one looses determinism.",
                "Having mapped the normative structure to a CPN, we now add CPN models of the agents interactions.",
                "Each form of agent interaction (i.e. each activity) can be modelled using CPNs along the lines of Cost et al. [5].",
                "These nondeterministic CPNs feed tokens into the CPN that models the normative structure.",
                "This leads to the introduction of non-determinism into the combined CPN.",
                "The lower half of figure 3 shows part of a CPN model of an agent <br>protocol</br> where the arc denoted with 1 represents some utterance of an illocution by an agent.",
                "The target transition of this arc, not only moves a token on to the next state of this CPN, but also places a token in the place corresponding to the appropriate normative scene in the CPN model of the normative structure (via arc 2).",
                "Transition 3 finally could propagate that token in form of an obligation, for example.",
                "Thus, from a given marking, many different occurrence sequences are possible depending on the agents actions.",
                "We make use of the reachability set R to define a situation in which agents cannot cause conflicts. 640 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) Figure 3: Constructing the combined CPN Def. 13.",
                "Given a net N, a marking M is conflict-resistant if and only if all markings in R(N,M) are conflict-free.",
                "Checking conflict-freedom of a marking can be done in polynomial time by checking all places of the CPN for conflicting tokens.",
                "Conflict-freedom of an occurrence sequence in the CPN that represents the normative structure can also be done in polynomial time since this sequence is deterministic given a snapshot.",
                "Whether or not a normative structure is designed safely corresponds to checking the conflict-resistance of the initial marking M0.",
                "Now, verifying conflict-resistance of a marking becomes a very difficult task.",
                "It corresponds to the reachability problem in a CPN: can a state be reached or a marking achieved, that contains a conflict?.",
                "This reachability problem is known to be NP-complete for ordinary Petri Nets [22] and since CPNs are functionally identical, we cannot hope to verify conflict-resistance of a normative structure off-line in a reasonable amount of time.",
                "Therefore, distributed, run-time mechanisms are needed to ensure that a normative structure maintains consistency.",
                "We present one such mechanism in the following section. 6.",
                "MANAGING NORMATIVE STRUCTURES Once a conflict (as defined in Section 4) has been detected, we propose to employ the unifier to resolve the conflict.",
                "In our example, if the variables in prh(inform(a1, r1, a2, r2, p(Y, d), T )) do not get the values specified in substitution Ïƒ then there will not be a conflict.",
                "However, rather than computing the complement set of a substitution (which can be an infinite set) we propose to annotate the prohibition with the unifier itself and use it to determine what the variables of that prohibition cannot be in future unifications in order to avoid a conflict.",
                "We therefore denote annotated prohibitions as prh(Â¯I) Î£, where Î£ = {Ïƒ1, . . . , Ïƒn}, is a set of unifiers.",
                "Annotated norms3 are interpreted as deontic constructs with curtailed influences, that is, their effect (on agents, roles and illocutions) has been limited by the set Î£ of unifiers.",
                "A prohibition may be in conflict with various obligations in a given normative scene s = id, Î” and we need to record (and possibly avoid) all these conflicts.",
                "We define below an algorithm which ensures that a normative position will be added to a normative scene in such a way that it will not cause any conflicts. 3 Although we propose to curtail prohibitions, the same machinery can be used to define the curtailment of obligations instead.",
                "These different policies are dependent on the intended deontic semantics and requirements of the systems addressed.",
                "For instance, some MASs may require that their agents should not act in the presence of conflicts, that is, the obligation should be curtailed. 6.1 Conflict Resolution We propose a fine-grained way of resolving normative conflicts via unification.",
                "We detect the overlapping of the influences of norms , i.e. how they affect the behaviour of the concerned agents, and we curtail the influence of the normative position, by appropriately using the annotations when checking if the norm applies to illocutions.",
                "The algorithm shown in Figure 4 depicts how we maintain a conflict-free set of norms.",
                "It adds a given norm N to an existing, conflictfree normative state Î”, obtaining a resulting new normative state Î” which is conflict-free, that is, its prohibitions are annotated with a set of conflict sets indicating which bindings for variables have to be avoided for conflicts not to take place. algorithm addNorm(N, Î”) begin 1 timestamp(N) 2 case N of 3 per(Â¯I): Î” := Î” âˆª {N} 4 prh(I): if N âˆˆ Î” s.t. conflict(N, N , Ïƒ) then Î” := Î” 5 else Î” := Î” âˆª {N} 6 prh(Â¯I): 7 begin 8 Î£ := âˆ… 9 for each N âˆˆ Î” do 10 if conflict(N, N , Ïƒ) then Î£ := Î£ âˆª {Ïƒ} 11 Î” := Î” âˆª {N Î£} 12 end 13 obl(Â¯I): 14 begin 15 Î”1 := âˆ…; Î”2 := âˆ… 16 for each (N Î£) âˆˆ Î” do 17 if N = prh(I) then 18 if conflict(N , N, Ïƒ) then Î”1 := Î”1 âˆª {N Î£} 19 else nil 20 else 21 if conflict(N , N, Ïƒ) then 22 begin 23 Î”1 := Î”1 âˆª {N Î£} 24 Î”2 := Î”2 âˆª {N (Î£ âˆª {Ïƒ})} 25 end 26 Î” := (Î” âˆ’ Î”1) âˆª Î”2 âˆª {N} 27 end 28 end case 29 return Î” end Figure 4: Algorithm to Preserve Conflict-Freedom The algorithm uses a case of structure to differentiate the different possibilities for a given norm N. Line 3 addresses the case when the given norm is a permission: N is simply added to Î”.",
                "Lines 4-5 address the case when we attempt to add a ground prohibition to a normative state: if it conflicts with any obligation, then it is discarded; otherwise it is added to the normative state.",
                "Lines 6-12 describe the situation when the normative position to be added is a nonground prohibition.",
                "In this case, the algorithm initialises Î£ to an empty set and loops (line 9-10) through the norms N in the old normative state Î”.",
                "Upon finding one that conflicts with N, the algorithm updates Î£ by adding the newly found conflict set Ïƒ to it (line 10).",
                "By looping through Î”, we are able to check any conflicts between the new prohibition and the existing obligations, adequately building the annotation Î£ to be used when adding N to Î” in line 11.",
                "Lines 13-27 describe how a new obligation is accommodated to an existing normative state.",
                "We make use of two initially empty, temporary sets, Î”1, Î”2.",
                "The algorithm loops through Î” (lines 16-25) picking up those annotated prohibitions N Î£ which conflict with the new obligation.",
                "There are, however, two cases to deal with: the one when a ground The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 641 prohibition is found (line 17), and its exception, covering non-ground prohibitions (line 20).",
                "In both cases, the old prohibition is stored in Î”1 (lines 18 and 23) to be later removed from Î” (line 26).",
                "However, in the case of a nonground prohibition, the algorithm updates its annotation of conflict sets (line 24).",
                "The loop guarantees that an exhaustive (linear) search through a normative state takes place, checking if the new obligation is in conflict with any existing prohibitions, possibly updating the annotations of these conflicting prohibitions.",
                "In line 26 the algorithm builds the new updated Î” by removing the old prohibitions stored in Î”1 and adding the updated prohibitions stored in Î”2 (if any), as well as the new obligation N. Our proposed algorithm is correct in that, for a given normative position N and a normative state Î”, it provides a new normative state Î” in which all prohibitions have annotations recording how they unify with existing obligations.",
                "The annotations can be empty, though: this is the case when we have a ground prohibition or a prohibition which does not unify/conflict with any obligation.",
                "Permissions do not affect our algorithm and they are appropriately dealt with (line 3).",
                "Any attempt to insert a ground prohibition which conflicts, yields the same normative state (line 4).",
                "When a new obligation is being added then the algorithm guarantees that all prohibitions are considered (lines 14-27), leading to the removal of conflicting ground prohibitions or the update of annotations of non-ground prohibitions.",
                "The algorithm always terminates: the loops are over a finite set Î” and the conflict checks and set operations always terminate.",
                "The complexity of the algorithm is linear: the set Î” is only examined once for each possible case of norm to be added.",
                "When managing normative states we may also need to remove normative positions.",
                "This is straightforward: permissions can be removed without any problems; annotated prohibitions can also be removed without further considerations; obligations, however, require some housekeeping.",
                "When an obligation is to be removed, we must check it against all annotated prohibitions in order to update their annotations.",
                "We apply the conflict check and obtain a unifier, then remove this unifier from the prohibitions annotation.",
                "We invoke the removal algorithm as removeNorm(N, Î”): it returns a new normative state Î” in which N has been removed, with possible alterations to other normative positions as explained. 6.2 Enactment of a Normative Structure The enactment of a normative structure amounts to the parallel, distributed execution of normative scenes and normative transitions.",
                "For illustrative purposes, hereafter we shall describe the interplay between the payment and delivery normative scenes and the normative transition nt linking them in the upper half of figure 2.",
                "With this aim, consider for instance that obl(inform(jules, client, rod, acc, pay(copper, 400, 350), T) âˆˆ Î”payment and that Î”delivery holds prh(inform(rod,wm, jules, client, delivered(Z, Q), T)).",
                "Such states indicate that client Jules is obliged to pay Â£400 for 350kg of copper to accountant Rod according to the payment normative scene, whereas Rod, taking up the role of warehouse manager this time, is prohibited to deliver anything to client Jules according to the delivery normative scene.",
                "For each normative scene, the enactment process goes as follows.",
                "Firstly, it processes its incoming message queue that contains three types of messages: utterances from the activity it is linked to; and normative commands either to add or remove normative positions.",
                "For instance, in our example, the payment normative scene collects the illocution I = utt((inform(jules, client, rod, acc, pay(copper, 400, 350), 35)) standing for client Jules pending payment for copper (via arrow A in figure 2).",
                "Utterances are timestamped and subsequently added to the normative state.",
                "We would have Î”payment = Î”payment âˆª {I}, in our example.",
                "Upon receiving normative commands to either add or remove a normative position, the normative scene invokes the corresponding addition or removal algorithm described in Section 6.1.",
                "Secondly, the normative scene acknowledges its state change by sending a trigger message to every outgoing normative transition it is connected to.",
                "In our example, the payment normative scene would be signalling its state change to normative transition nt.",
                "For normative transitions, the process works differently.",
                "Because each normative transition controls the operation of a single rule, upon receiving a trigger message, it polls every incoming normative scene for substitutions for the relevant illocution schemata on the LHS of its rule.",
                "In our example, nt (being responsible for the rule described in Section 3.4), would poll the payment normative scene (via arrow B) for substitutions.",
                "Upon receiving replies from them (in the form of sets of substitutions together with time-stamps), it has to unify substitutions from each of these normative scenes.",
                "For each unification it finds, the rule is fired, and hence the corresponding normative command is sent along to the output normative scene.",
                "The normative transition then keeps track of the firing message it sent on and of the time-stamps of the normative positions that triggered the firing.",
                "This is done to ensure that the very same normative positions in the LHS of a rule only trigger its firing once.",
                "In our example, nt would be receiving Ïƒ = {X/jules, Y/rod, Z/copper, Q/350} from the payment normative scene.",
                "Since the substitions in Ïƒ unify with nts rule, the rule is fired, and the normative command add(delivery : obl(rod, wm, jules, client, delivered(copper, 350), T)) is sent along to the delivery normative scene to oblige Rod to deliver to client Jules 350kg of copper.",
                "After that, the delivery normative scene would invoke the addNorm algorithm from figure 4 with Î”delivery and N = obl(rod, wm, jules, client, delivered(copper, 350)) as arguments. 7.",
                "RELATED WORK AND CONCLUSIONS Our contributions in this paper are three-fold.",
                "Firstly, we introduce an approach for the management of and reasoning about norms in a distributed manner.",
                "To our knowledge, there is little work published in this direction.",
                "In [8, 21], two languages are presented for the distributed enforcement of norms in MAS.",
                "However, in both works, each agent has a local message interface that forwards legal messages according to a set of norms.",
                "Since these interfaces are local to each agent, norms can only be expressed in terms of actions of that agent.",
                "This is a serious disadvantage, e.g. when one needs to activate an obligation to one agent due to a certain message of another one.",
                "The second contribution is the proposal of a normative structure.",
                "The notion is fruitful because it allows the separation of normative and procedural concerns.",
                "The normative structure we propose makes evident the similarity between the propagation of normative positions and the propagation 642 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) of tokens in Coloured Petri Nets.",
                "That similarity readily suggests a mapping between the two, and gives grounds to a convenient analytical treatment of the normative structure, in general, and the complexity of conflict detection, in particular.",
                "The idea of modelling interactions (in the form of conversations) via Petri Nets has been investigated in [18], where the interaction medium and individual agents are modelled as CPN sub-nets that are subsequently combined for analysis.",
                "In [5], conversations are first designed and analysed at the level of CPNs and thereafter translated into protocols.",
                "Lin et al. [20] map conversation schemata to CPNs.",
                "To our knowledge, the use of this representation in the support of conflict detection in regulated MAS has not been reported elsewhere.",
                "Finally, we present a distributed mechanism to resolve normative conflicts.",
                "Sartor [25] treats normative conflicts from the point of view of legal theory and suggests a way to order the norms involved.",
                "His idea is implemented in [12] but requires a central resource for norm maintenance.",
                "The approach to conflict detection and resolution is an adaptation and extension of the work on instantiation graphs reported in [17] and a related algorithm in [27].",
                "The algorithm presented in the current paper can be used to manage normative states distributedly: normative scenes that happen in parallel have an associated normative state Î” to which the algorithm is independently applied each time a new norm is to be introduced.",
                "These three contributions we present in this paper open many possibilities for future work.",
                "We should mention first, that as a broad strategy we are working on a generalisation of the notion of normative structure to make it operate with different coordination models, with richer deontic content and on top of different computational realisations of regulated MAS.",
                "As a first step in this direction we are taking advantage of the de-coupling between interaction protocols and declarative normative guidance that the normative structure makes available, to provide a normative layer for electronic institutions (as defined in [1]).",
                "We expect such coupling will endow electronic institutions with a more flexible -and more expressive- normative environment.",
                "Furthermore, we want to extend our model along several directions: (1) to handle negation and constraints as part of the norm language, and in particular the notion of time; (2) to accommodate multiple, hierarchical norm authorities based on roles, along the lines of Cholvy and Cuppens [3] and power relationships as suggested by Carabelea et al. [2]; (3) to capture in the conflict resolution algorithm different semantics relating the deontic notions by supporting different axiomations (e.g., relative strength of prohibition versus obligation, default deontic notions, deontic inconsistencies).",
                "On the theoretical side, we intend to use analysis techniques of CPNs in order to characterise classes of CPNs (e.g., acyclic, symmetric, etc.) corresponding to families of Normative Structures that are susceptible to tractable offline conflict detection.",
                "The combination of these techniques along with our online conflict resolution mechanisms is intended to endow MAS designers with the ability to incorporate norms into their systems in a principled way. 8.",
                "REFERENCES [1] J. L. Arcos, M. Esteva, P. Noriega, J.",
                "A. RodrÂ´Ä±guez, and C. Sierra.",
                "Engineering open environments with electronic institutions.",
                "Journal on Engineering Applications of Artificial Intelligence, 18(2):191-204, 2005. [2] C. Carabelea, O. Boissier, and C. Castelfranchi.",
                "Using social power to enable agents to reason about being part of a group.",
                "In 5th Internat.",
                "Workshop, ESAW 2004, pages 166-177, 2004. [3] L. Cholvy and F. Cuppens.",
                "Solving normative conflicts by merging roles.",
                "In Fifth International Conference on Artificial Intelligence and Law, Washington, USA, 1995. [4] S. Christensen and T. B. Haagh.",
                "Design CPN - overview of CPN ML syntax.",
                "Technical report, University of Aarhus, 1996. [5] R. S. Cost, Y. Chen, T. W. Finin, Y. Labrou, and Y. Peng.",
                "Using colored petri nets for conversation modeling.",
                "In Issues in Agent Communication, pages 178-192, London, UK, 2000. [6] F. Dignum.",
                "Autonomous Agents with Norms.",
                "Artificial Intelligence and Law, 7(1):69-79, 1999. [7] A. Elhag, J. Breuker, and P. Brouwer.",
                "On the Formal Analysis of Normative Conflicts.",
                "Information & Comms.",
                "Techn.",
                "Law, 9(3):207-217, Oct. 2000. [8] M. Esteva, W. Vasconcelos, C. Sierra, and J.",
                "A. RodrÂ´Ä±guez-Aguilar.",
                "Norm consistency in electronic institutions. volume 3171 (LNAI), pages 494-505.",
                "Springer-Verlag, 2004. [9] M. Fitting.",
                "First-Order Logic and Automated Theorem Proving.",
                "Springer-Verlag, New York, U.S.A., 1990. [10] N. Fornara, F. Vigan`o, and M. Colombetti.",
                "An Event Driven Approach to Norms in Artificial Institutions.",
                "In AAMAS05 Workshop: Agents, Norms and Institutions for Regulated Multiagent Systems (ANI@REM), Utrecht, 2005. [11] D. Gaertner, P. Noriega, and C. Sierra.",
                "Extending the BDI architecture with commitments.",
                "In Proceedings of the 9th International Conference of the Catalan Association of Artificial Intelligence, 2006. [12] A. GarcÂ´Ä±a-Camino, P. Noriega, and J.-A.",
                "RodrÂ´Ä±guez-Aguilar.",
                "An Algorithm for Conflict Resolution in Regulated Compound Activities.",
                "In 7th Int.Workshop - ESAW 06, 2006. [13] A. GarcÂ´Ä±a-Camino, J.-A.",
                "RodrÂ´Ä±guez-Aguilar, C. Sierra, and W. Vasconcelos.",
                "A Distributed Architecture for Norm-Aware Agent Societies.",
                "In DALT III, volume 3904 (LNAI), pages 89-105.",
                "Springer, 2006. [14] F. Giunchiglia and L. Serafini.",
                "Multi-language hierarchical logics or: How we can do without modal logics.",
                "Artificial Intelligence, 65(1):29-70, 1994. [15] J. Habermas.",
                "The Theory of Communication Action, Volume One, Reason and the Rationalization of Society.",
                "Beacon Press, 1984. [16] K. Jensen.",
                "Coloured Petri Nets: Basic Concepts, Analysis Methods and Practical Uses (Volume 1).",
                "Springer, 1997. [17] M. Kollingbaum and T. Norman.",
                "Strategies for resolving norm conflict in practical reasoning.",
                "In ECAI Workshop Coordination in Emergent Agent Societies 2004, 2004. [18] J.-L. Koning, G. Francois, and Y. Demazeau.",
                "Formalization and pre-validation for interaction protocols in a multi agent systems.",
                "In ECAI, pages 298-307, 1998. [19] B. Kramer and J. Mylopoulos.",
                "Knowledge Representation.",
                "In S. C. Shapiro, editor, Encyclopedia of Artificial Intelligence, volume 1, pages 743-759.",
                "John Wiley & Sons, 1992. [20] F. Lin, D. H. Norrie, W. Shen, and R. Kremer.",
                "A schema-based approach to specifying conversation policies.",
                "In Issues in Agent Communication, pages 193-204, 2000. [21] N. Minsky.",
                "Law Governed Interaction (LGI): A Distributed Coordination and Control Mechanism (An Introduction, and a Reference Manual).",
                "Technical report, Rutgers University, 2005. [22] T. Murata.",
                "Petri nets: Properties, analysis and applications.",
                "Proceedings of the IEEE, 77(4):541-580, 1989. [23] S. Parsons, C. Sierra, and N. Jennings.",
                "Agents that reason and negotiate by arguing.",
                "Journal of Logic and Computation, 8(3):261-292, 1998. [24] A. Ricci and M. Viroli.",
                "Coordination Artifacts: A Unifying Abstraction for Engineering Environment-Mediated Coordination in MAS.",
                "Informatica, 29:433-443, 2005. [25] G. Sartor.",
                "Normative conflicts in legal reasoning.",
                "Artificial Intelligence and Law, 1(2-3):209-235, June 1992. [26] M. Sergot.",
                "A Computational Theory of Normative Positions.",
                "ACM Trans.",
                "Comput.",
                "Logic, 2(4):581-622, 2001. [27] W. W. Vasconcelos, M. Kollingbaum, and T. Norman.",
                "Resolving Conflict and Inconsistency in Norm-Regulated Virtual Organisations.",
                "In Proceedings of AAMAS 07, Hawaii, USA, 2007.",
                "IFAAMAS. [28] G. H. von Wright.",
                "Norm and Action: A Logical Inquiry.",
                "Routledge and Kegan Paul, London, 1963. [29] M. Wooldridge.",
                "An Introduction to Multiagent Systems.",
                "John Wiley & Sons, Chichester, UK, Feb. 2002.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 643"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Finalmente, los agentes pueden dejar el mercado ajustado a un \"protocolo\" de salida predeterminado.",
                "Abogamos que las acciones en uno de esos \"protocolo\" pueden tener un efecto en la promulgaciÃ³n de otros protocolos.",
                "Las ocurrencias de posiciones normativas en un \"protocolo\" tambiÃ©n pueden tener consecuencias para otros protocolos1.",
                "Tomamos que las escenas normativas sean conjuntos de posiciones y expresiones normativas que estÃ¡n asociadas con un \"protocolo\" de interacciÃ³n subyacente correspondiente a una actividad.",
                "En la descripciÃ³n de un \"protocolo\", por ejemplo, los valores precisos del mensaje intercambiado pueden dejarse sin especificar.",
                "Durante la promulgaciÃ³n del \"protocolo\", los agentes producirÃ¡n los valores reales que darÃ¡n lugar a una ilocuciÃ³n terrestre.",
                "Estas condiciones son expresiones o posiciones normativas asociadas con un \"protocolo\" dado (denotado, por ejemplo, actividad: enunciado) que produce un comando normativo, es decir, la adiciÃ³n o eliminaciÃ³n de otra posiciÃ³n normativa, posiblemente relacionada con una actividad diferente.",
                "La mitad inferior de la Figura 3 muestra parte de un modelo CPN de un \"protocolo\" de agente donde el arco denotado con 1 representa cierta expresiÃ³n de una ilocuciÃ³n por parte de un agente."
            ],
            "translated_text": "",
            "candidates": [
                "protocolo",
                "protocolo",
                "protocolo",
                "protocolo",
                "protocolo",
                "protocolo",
                "protocolo",
                "protocolo",
                "protocolo",
                "protocolo",
                "protocolo",
                "protocolo",
                "protocolo",
                "protocolo",
                "protocolo",
                "protocolo"
            ],
            "error": []
        },
        "normative scene": {
            "translated_key": "escena normativa",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Distributed Norm Management in Regulated Multi-Agent Systems âˆ— Dorian Gaertner Dept.",
                "of Computing, Imperial College London, London SW7 2AZ, United Kingdom dg00@doc.ic.ac.uk Andres Garcia-Camino, Pablo Noriega, J.-A.",
                "Rodriguez-Aguilar IIIA-CSIC, 08193 Bellaterra, Spain {andres,pablo,jar}@iiia.csic.es Wamberto Vasconcelos Dept. of Computing Science, University of Aberdeen, Aberdeen AB24 3UE, United Kingdom wvasconcelos@acm.org ABSTRACT Norms are widely recognised as a means of coordinating multi-agent systems.",
                "The distributed management of norms is a challenging issue and we observe a lack of truly distributed computational realisations of normative models.",
                "In order to regulate the behaviour of autonomous agents that take part in multiple, related activities, we propose a normative model, the Normative Structure (NS), an artifact that is based on the propagation of normative positions (obligations, prohibitions, permissions), as consequences of agents actions.",
                "Within a NS, conflicts may arise due to the dynamic nature of the MAS and the concurrency of agents actions.",
                "However, ensuring conflict-freedom of a NS at design time is computationally intractable.",
                "We show this by formalising the notion of conflict, providing a mapping of NSs into Coloured Petri Nets and borrowing well-known theoretical results from that field.",
                "Since online conflict resolution is required, we present a tractable algorithm to be employed distributedly.",
                "We then demonstrate that this algorithm is paramount for the distributed enactment of a NS.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Languages and structures General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION A fundamental feature of open, regulated multi-agent systems in which autonomous agents interact, is that participating agents are meant to comply with the conventions of the system.",
                "Norms can be used to model such conventions and hence as a means to regulate the observable behaviour of agents [6, 29].",
                "There are many contributions on the subject of norms from sociologists, philosophers and logicians (e.g., [15, 28]).",
                "However, there are very few proposals for computational realisations of normative models - the way norms can be integrated in the design and execution of MASs.",
                "The few that exist (e.g. [10, 13, 24]), operate in a centralised manner which creates bottlenecks and single points-of-failure.",
                "To our knowledge, no proposal truly supports the distributed enactment of normative environments.",
                "In our paper we approach that problem and propose means to handle conflicting commitments in open, regulated, multiagent systems in a distributed manner.",
                "The type of regulated MAS we envisage consists of multiple, concurrent, related activities where agents interact.",
                "Each agent may concurrently participate in several activities, and change from one activity to another.",
                "An agents actions within an activity may have consequences in the form of normative positions (i.e. obligations, permissions, and prohibitions) [26] that may constrain its future behaviour.",
                "For instance, a buyer agent who runs out of credit may be forbidden to make further offers, or a seller agent is obliged to deliver after closing a deal.",
                "We assume that agents may choose not to fulfill all their obligations and hence may be sanctioned by the MAS.",
                "Notice that, when activities are distributed, normative positions must flow from the activities in which they are generated to those in which they take effect.",
                "For instance, the sellers obligation above must flow (or be propagated) from a negotiation activity to a delivery activity.",
                "Since in an open, regulated MAS one cannot embed normative aspects into the agents design, we adopt the view that the MAS should be supplemented with a separate set of norms that further regulates the behaviour of participating agents.",
                "In order to model the separation of concerns between the coordination level (agents interactions) and the normative level (propagation of normative positions), we propose an artifact called the Normative Structure (NS).",
                "Within a NS conflicts may arise due to the dynamic nature of the MAS and the concurrency of agents actions.",
                "For instance, an agent may be obliged and prohibited to do the 636 978-81-904262-7-5 (RPS) c 2007 IFAAMAS very same action in an activity.",
                "Since the regulation of a MAS entails that participating agents need to be aware of the validity of those actions that take place within it, such conflicts ought to be identified and possibly resolved if a claim of validity is needed for an agent to engage in an action or be sanctioned.",
                "However, ensuring conflict-freedom of a NS at design time is computationally intractable.",
                "We show this by formalising the notion of conflict, providing a mapping of NSs into Coloured Petri Nets (CPNs) and borrowing well-known theoretical results from the field of CPNs.",
                "We believe that online conflict detection and resolution is required.",
                "Hence, we present a tractable algorithm for conflict resolution.",
                "This algorithm is paramount for the distributed enactment of a NS.",
                "The paper is organised as follows.",
                "In Section 2 we detail a scenario to serve as an example throughout the paper.",
                "Next, in Section 3 we formally define the normative structure artifact.",
                "Further on, in Section 4 we formalise the notion of conflict to subsequently analyse the complexity of conflict detection in terms of CPNs in Section 5.",
                "Section 6 describes the computational management of NSs by describing their enactment and presenting an algorithm for conflict resolution.",
                "Finally, we comment on related work, draw conclusions and report on future work in Section 7. 2.",
                "SCENARIO We use a supply-chain scenario in which companies and individuals come together at an online marketplace to conduct business.",
                "The overall transaction procedure may be organised as six distributed activities, represented as nodes in the diagram in Figure 1.",
                "They involve different participants whose behaviour is coordinated through protocols.",
                "In this scenario agents can play one of four roles: marExit Registration Payment Delivery Negotiation Coordination Model Contract Figure 1: Activity Structure of the Scenario ketplace accountant (acc), client, supplier (supp) and warehouse managers (wm).",
                "The arrows connecting the activities represent how agents can move from one activity to another.",
                "After registering at the marketplace, clients and suppliers get together in an activity where they negotiate the terms of their transaction, i.e. prices, amounts of goods to be delivered, deadlines and other details.",
                "In the contract activity, the order becomes established and an invoice is prepared.",
                "The client will then participate in a payment activity, verifying his credit-worthiness and instructing his bank to transfer the correct amount of money.",
                "The supplier in the meantime will arrange for the goods to be delivered (e.g. via a warehouse manager) in the delivery activity.",
                "Finally, agents can leave the marketplace conforming to a predetermined exit protocol.",
                "The marketplace accountant participates in most of the activities as a trusted provider of auditing tools.",
                "In the rest of the paper we shall build on this scenario to exemplify the notion of normative structure and to illustrate our approach to conflict detection and resolution in a distributed setting. 3.",
                "NORMATIVE STRUCTURE In MASs agents interact according to protocols which naturally are distributed.",
                "We advocate that actions in one such protocol may have an effect on the enactment of other protocols.",
                "Certain actions can become prohibited or obligatory, for example.",
                "We take normative positions to be obligations, prohibitions and permissions akin to work described in [26].",
                "The intention of adding or removing a normative position we call normative command.",
                "Occurrences of normative positions in one protocol may also have consequences for other protocols1 .",
                "In order to define our norm language and specify how normative positions are propagated, we have been inspired by multi-context systems [14].",
                "These systems allow the structuring of knowledge into distinct formal theories and the definition of relationships between them.",
                "The relationships are expressed as bridge rules - deducibility of formulae in some contexts leads to the deduction of other formulae in other contexts.",
                "Recently, these systems have been successfully used to define agent architectures [11, 23].",
                "The metaphor translates to our current work as follows: the utterance of illocutions and/or the existence of normative positions in some normative scenes leads to the deduction of normative positions in other normative scenes.",
                "We are concerned with the propagation and distribution of normative positions within a network of distributed, normative scenes as a consequence of agents actions.",
                "We take normative scenes to be sets of normative positions and utterances that are associated with an underlying interaction protocol corresponding to an activity.",
                "In this section, we first present a simple language capturing these aspects and formally introduce the notions of <br>normative scene</br>, normative transition rule and normative structure.",
                "We give the intended semantics of these rules and show how to control a MAS via norms in an example. 3.1 Basic Concepts The building blocks of our language are terms and atomic formulae: Def. 1.",
                "A term, denoted as t, is (i) any constant expressed using lowercase (with or without subscripts), e.g. a, b0, c or (ii) any variable expressed using uppercase (with or without subscripts), e.g.",
                "X, Y, Zb or (iii) any function f(t1, . . . , tn), where f is an n-ary function symbol and t1, .., tn are terms.",
                "Some examples of terms and functions are Credit, price or offer(bible, 30) being respectively a variable, a constant and a function.",
                "We will be making use of identifiers throughout the paper, which are constant terms and also need the following definition: Def. 2.",
                "An atomic formula is any construct p(t1, . . . , tn), where p is an n-ary predicate symbol and t1, . . . , tn are terms.",
                "The set of all atomic formulae is denoted as Î”.",
                "We focus on an expressive class of MASs in which interaction is carried out by means of illocutionary speech acts exchanged among participating agents: Def. 3.",
                "Illocutions I are ground atomic formulae which have the form p(ag, r, ag , r , Î´, t) where p is an element of 1 Here, we abstract from protocols and refer to them generically as activities.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 637 a set of illocutionary particles (e.g. inform, request, offer); ag, ag are agent identifiers; r, r are role identifiers; Î´, an arbitrary ground term, is the content of the message, built from a shared content language; t âˆˆ N is a time stamp.",
                "The intuitive meaning of p(ag, r, ag , r , m, t) is that agent ag playing role r sent message m to agent ag playing role r at time t. An example of an illocution is inform(ag4, supp, ag3, client, offer(wire, 12), 10).",
                "Sometimes it is useful to refer to illocutions that are not fully grounded, that is, those that may contain uninstantiated (free) variables.",
                "In the description of a protocol, for instance, the precise values of the message exchanged can be left unspecified.",
                "During the enactment of the protocol agents will produce the actual values which will give rise to a ground illocution.",
                "We can thus define illocution schemata: Def. 4.",
                "An illocution schema Â¯I is any atomic formula p(ag, r, ag , r , Î´, t) in which some of the terms may either be variables or may contain variables. 3.2 Formal Definition of the Notion of NS We first define normative scenes as follows: Def. 5.",
                "A <br>normative scene</br> is a tuple s = ids, Î”s where ids is a scene identifier and Î”s is the set of atomic formulae Î´ (i.e. utterances and normative positions) that hold in s. We will also refer to Î”s as the state of <br>normative scene</br> s. For instance, a snapshot of the state of the delivery normative scene of our scenario could be represented as: Î”s = 8 < : utt(request(sean, client, kev, wm, receive(wire, 200), 20)), utt(accept(kev, wm, sean, client, receive(wire, 200), 30)), obl(inform(kev, wm, sean, client, delivered(wire, 200), 30)) 9 = ; That is, agent Sean taking up the client role has requested agent Kev (taking up the warehouse manager role wm) to receive 200kg of wire, and agent Kev is obliged to deliver 200kg of wire to Sean since he accepted the request.",
                "Note that the state of a <br>normative scene</br> Î”s evolves over time.",
                "These normative scenes are connected to one another via normative transitions that specify how utterances and normative positions in one scene affect other normative scenes.",
                "As mentioned above, activities are not independent since illocutions uttered in some of them may have an effect on other ones.",
                "Normative transition rules define the conditions under which a normative command is generated.",
                "These conditions are either utterances or normative positions associated with a given protocol (denoted e.g. activity : utterance) which yield a normative command, i.e. the addition or removal of another normative position, possibly related to a different activity.",
                "Our transition rules are thus defined: Def. 6.",
                "A normative transition rule R is of the form: R ::= V C V ::= ids : D | V, V D ::= N | utt(Â¯I) N ::= per(Â¯I) | prh(Â¯I) | obl(Â¯I) C ::= add(ids : N) | remove(ids : N) where Â¯I is an illocution schema, N is a normative position (i.e. permission, prohibition or obligation), ids is an identifier for activity s and C is a normative command.",
                "We endow our language with the usual semantics of rulebased languages [19].",
                "Rules map an existing normative structure to a new normative structure where only the state of the normative scenes change.",
                "In the definitions below we rely on the standard concept of substitution [9].",
                "Def. 7.",
                "A normative transition is a tuple b = idb, rb where idb is an identifier and rb is a normative transition rule.",
                "We are proposing to extend the notion of MAS, regulated by protocols, with an extra layer consisting of normative scenes and normative transitions.",
                "This layer is represented as a bi-partite graph that we term normative structure.",
                "A normative structure relates normative scenes and normative transitions specifying which normative positions are to be generated or removed in which normative scenes.",
                "Def. 8.",
                "A normative structure is a labelled bi-partite graph NS = Nodes, Edges, Lin , Lout .",
                "Nodes is a set SâˆªB where S is a set of normative scenes and B is a set of normative transitions.",
                "Edges is a set Ain âˆª Aout where Ain âŠ† S Ã— B is a set of input arcs labelled with an atomic formula using the labelling function Lin : Ain â†’ D; and Aout âŠ† B Ã— S is a set of output arcs labelled with a normative position using the labelling function Lout : Aout â†’ N. The following must hold: 1.",
                "Each atomic formula appearing in the LHS of a rule rb must be of the form (ids : D) where s âˆˆ S and D âˆˆ Î” and âˆƒain âˆˆ Ain such that ain = (s, b) and Lin (ain ) = D. 2.",
                "The atomic formula appearing in the RHS of a rule rb must be of the form add(ids : N) or remove(ids : N) where s âˆˆ S and âˆƒaout âˆˆ Aout such that aout = (b, s) and Lout (aout ) = N. 3. âˆ€a âˆˆ Ain such that a = (s, b) and b = idb, rb and Lin (a) = D then (ids:D) must occur in the LHS of rb. 4. âˆ€a âˆˆ Aout such that a = (b, s) and b = idb, rb and Lout (a) = N then add(ids : N) or remove(ids : N) must occur in the RHS of rb.",
                "The first two points ensure that every atomic formulae on the LHS of a normative transition rule labels an arc entering the appropriate normative transition in the normative structure, and that the atomic formula on the RHS labels the corresponding outgoing arc.",
                "Points three and four ensure that labels from all incoming arcs are used in the LHS of the normative transition rule that these arcs enter into, and that the labels from all outgoing arcs are used in the RHS of the normative transition rule that these arcs leave. 3.3 Intended Semantics The formal semantics will be defined via a mapping to Coloured Petri Nets in Section 5.1.",
                "Here we start defining the intended semantics of normative transition rules by describing how a rule changes a <br>normative scene</br> of an existing normative structure yielding a new normative structure.",
                "Each rule is triggered once for each substitution that unifies the left-hand side V of the rule with the state of the corresponding normative scenes.",
                "An atomic formula (i.e. an utterance or a normative position) holds iff it is unifiable with an utterance or normative position that belongs to the state of the corresponding <br>normative scene</br>.",
                "Every time a rule is triggered, the normative command specified on the right-hand side of that rule is carried out, intending to add or remove a normative position from the state of the corresponding <br>normative scene</br>.",
                "However, addition is not unconditional as conflicts may arise.",
                "This topic will be treated in Sections 4 and 6.1. 638 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.4 Example In our running example we have the following exemplary normative transition rule: â€ž payment : obl(inform(X, client, Y, acc, pay(Z, P, Q), T )), payment : utt(inform(X, client, Y, acc, pay(Z, P, Q), T )) Â« delivery : add(obl(inform(Y, wm, X, client, delivered(Z, Q), T ))) That is, during the payment activity, an obligation on client X to inform accountant Y about the payment P of item Z at time T and the corresponding utterance which fulfills this obligation allows the flow of a norm to the delivery activity.",
                "The norm is an obligation on agent Y (this time taking up the role of the warehouse manager wm) to send a message to client X that item Z has been delivered.",
                "We show in Figure 2 a diagrammatic representation of how activities and a normative structure relate: Payment Delivery Contract Normative Level Exit Registration Payment Delivery Negotiation Coordination Level Contract nt Figure 2: Activities and Normative Structure As illocutions are uttered during activities, normative positions arise.",
                "Utterances and normative positions are combined in transition rules, causing the flow of normative positions between normative scenes.",
                "The connection between the two levels is described in Section 6.2. 4.",
                "CONFLICT DEFINITION The terms deontic conflict and deontic inconsistency have been used interchangeably in the literature.",
                "However, in this paper we adopt the view of [7] in which the authors suggest that a deontic inconsistency arises when an action is simultaneously permitted and prohibited - since a permission may not be acted upon, no real conflict occurs.",
                "The situations when an action is simultaneously obliged and prohibited are, however, deontic conflicts, as both obligations and prohibitions influence behaviours in a conflicting fashion.",
                "The content of normative positions in this paper are illocutions.",
                "Therefore, a normative conflict arises when an illocution is simultaneously obliged and prohibited.",
                "We propose to use the standard notion of unification [9] to detect when a prohibition and a permission overlap.",
                "For instance, an obligation obl(inform(A1, R1, A2, R2, p(c, X), T)) and a prohibition prh(inform(a1, r1, a2, r2, p(Y, d), T )) are in conflict as they unify under Ïƒ = {A1/a1, R1/r1, A2/a2, R2/r2, Y/c, X/d, T/T }).",
                "We formally capture this notion: Def. 9.",
                "A (deontic) conflict arises between two normative positions N and N under a substitution Ïƒ, denoted as conflict(N, N , Ïƒ), if and only if N = prh(Â¯I), N = obl(Â¯I ) and unify(Â¯I,Â¯I , Ïƒ).",
                "That is, a prohibition and an obligation are in conflict if, and only if, their illocutions unify under Ïƒ.",
                "The substitution Ïƒ, called here the conflict set, unifies the agents, roles and atomic formulae.",
                "We assume that unify is a suitable implementation of a unification algorithm which i) always terminates (possibly failing, if a unifier cannot be found); ii) is correct; and iii) has linear computational complexity.",
                "Inconsistencies caused by the same illocution being simultaneously permitted and prohibited can be formalised similarly.",
                "In this paper we focus on prohibition/obligation conflicts, but the computational machinery introduced in Section 6.1 can equally be used to detect prohibition/permission inconsistencies, if we substitute modality obl for per. 5.",
                "FORMALISING CONFLICT-FREEDOM In this section we introduce some background knowledge on CPNs assuming a basic understanding of ordinary Petri Nets.",
                "For technical details we refer the reader to [16].",
                "We then map NSs to CPNs and analyse their properties.",
                "CPNs combine the strength of Petri nets with the strength of functional programming languages.",
                "On the one hand, Petri nets provide the primitives for the description of the synchronisation of concurrent processes.",
                "As noticed in [16], CPNs have a semantics which builds upon true concurrency, instead of interleaving.",
                "In our opinion, a true-concurrency semantics is easier to work with because it is the way we envisage the connection between the coordination level and the normative level of a multi-agent system to be.",
                "On the other hand, the functional programming languages used by CPNs provide the primitives for the definition of data types and the manipulation of their data values.",
                "Thus, we can readily translate expressions of a normative structure.",
                "Last but not least, CPNs have a well-defined semantics which unambiguously defines the behaviour of each CPN.",
                "Furthermore, CPNs have a large number of formal analysis methods and tools by which properties of CPNs can be proved.",
                "Summing up, CPNs provide us with all the necessary features to formally reason about normative structures given that an adequate mapping is provided.",
                "In accordance with Petri nets, the states of a CPN are represented by means of places.",
                "But unlike Petri Nets, each place has an associated data type determining the kind of data which the place may contain.",
                "A state of a CPN is called a marking.",
                "It consists of a number of tokens positioned on the individual places.",
                "Each token carries a data value which has the type of the corresponding place.",
                "In general, a place may contain two or more tokens with the same data value.",
                "Thus, a marking of a CPN is a function which maps each place into a multi-set2 of tokens of the correct type.",
                "One often refers to the token values as token colours and one also refers to the data types as colour sets.",
                "The types of a CPN can be arbitrarily complex.",
                "Actions in a CPN are represented by means of transitions.",
                "An incoming arc into a transition from a place indicates that the transition may remove tokens from the corresponding place while an outgoing arc indicates that the transition may add tokens.",
                "The exact number of tokens and their data values are determined by the arc expressions, which are encoded using the programming language chosen for the CPN.",
                "A transition is enabled in a CPN if and only if all the 2 A multi-set (or bag) is an extension to the notion of set, allowing the possibility of multiple appearances of the same element.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 639 variables in the expressions of its incoming arcs are bound to some value(s) (each one of these bindings is referred to as a binding element).",
                "If so, the transition may occur by removing tokens from its input places and adding tokens to its output places.",
                "In addition to the arc expressions, it is possible to attach a boolean guard expression (with variables) to each transition.",
                "Putting all the elements above together we obtain a formal definition of CPN that shall be employed further ahead for mapping purposes.",
                "Def. 10.",
                "A CPN is a tuple Î£, P, T, A, N, C, G, E, I where: (i) Î£ is a finite set of non-empty types, also called colour sets; (ii) P is a finite set of places; (iii) T is a finite set of transitions; (iv) A is a finite set of arcs; (v) N is a node function defined from A into P Ã— T âˆª T Ã— P; (vi) C is a colour function from P into Î£; (vii) G is a guard function from T into expressions; (viii) E is an arc expression function from A into expressions; (ix) I is an initialisation function from P into closed expressions; Notice that the informal explanation of the enabling and occurrence rules given above provides the foundations to understand the behaviour of a CPN.",
                "In accordance with ordinary Petri nets, the concurrent behaviour of a CPN is based on the notion of step.",
                "Formally, a step is a non-empty and finite multi-set over the set of all binding elements.",
                "Let step S be enabled in a marking M. Then, S may occur, changing the marking M to M .",
                "Moreover, we say that marking M is directly reachable from marking M by the occurrence of step S, and we denote it by M[S > M .",
                "A finite occurrence sequence is a finite sequence of steps and markings: M1[S1 > M2 . . .",
                "Mn[Sn > Mn+1 such that n âˆˆ N and Mi[Si > Mi+1 âˆ€i âˆˆ {1, . . . , n}.",
                "The set of all possible markings reachable for a net Net from a marking M is called its reachability set, and is denoted as R(Net, M). 5.1 Mapping to Coloured Petri Nets Our normative structure is a labelled bi-partite graph.",
                "The same is true for a Coloured Petri Net.",
                "We are presenting a mapping f from one to the other, in order to provide semantics for the normative structure and prove properties about it by using well-known theoretical results from work on CPNs.",
                "The mapping f makes use of correspondences between normative scenes and CPN places, normative transitions and CPN transitions and finally, between arc labels and CPN arc expressions.",
                "S â†’ P B â†’ T Lin âˆª Lout â†’ E The set of types is the singleton set containing the colour NP (i.e.",
                "Î£ = {NP}).",
                "This complex type is structured as follows (we use CPN-ML [4] syntax): color NPT = with Obl | Per | Prh | NoMod color IP = with inform | declare | offer color UTT = record illp : IP ag1, role1, ag2, role2 : string content: string time : int color NP = record mode : NPT illoc : UTT Modelling illocutions as norms without modality (NoMod) is a formal trick we use to ensure that sub-nets can be combined as explained below.",
                "Arcs are mapped almost directly.",
                "A is a finite set of arcs and N is a node function, such that âˆ€a âˆˆ A âˆƒa âˆˆ Ain âˆªAout .",
                "N(a) = a .",
                "The initialisation function I is defined as I(p) = Î”s (âˆ€s âˆˆ S where p is obtained from s using the mapping; remember that s = ids, Î”s ).",
                "Finally, the colour function C assigns the colour NP to every place: C(p) = NP (âˆ€p âˆˆ P).",
                "We are not making use of the guard function G. In future work, this function can be used to model constraints when we extend the expressiveness of our norm language. 5.2 Properties of Normative Structures Having defined the mapping from normative structures to Coloured Petri Nets, we now look at properties of CPNs that help us understand the complexity of conflict detection.",
                "One question we would like to answer is, whether at a given point in time, a given normative structure is conflict-free.",
                "Such a snapshot of a normative structure corresponds to a marking in the mapped CPN.",
                "Def. 11.",
                "Given a marking Mi, this marking is conflictfree if Â¬âˆƒp âˆˆ P. âˆƒnp1, np2 âˆˆ Mi(p) such that np1.mode = Obl and np2.mode = Prh and np1.illoc and np2.illoc unify under a valid substitution.",
                "Another interesting question would be, whether a conflict will occur from such a snapshot of the system by propagating the normative positions.",
                "In order to answer this question, we first translate the snapshot of the normative structure to the corresponding CPN and then execute the finite occurence sequence of markings and steps, verifying the conflict-freedom of each marking as we go along.",
                "Def. 12.",
                "Given a marking Mi, a finite occurrence sequence Si, Si+1, ..., Sn is called conflict-free, if and only if Mi[Si > Mi+1 . . .",
                "Mn[Sn > Mn+1 and Mk is conflict-free for all k such that i â‰¤ k â‰¤ n + 1.",
                "However, the main question we would like to investigate, is whether or not a given normative structure is conflictresistant, that is, whether or not the agents enacting the MAS are able to bring about conflicts through their actions.",
                "As soon as one includes the possibility of actions (or utterances) from autonomous agents, one looses determinism.",
                "Having mapped the normative structure to a CPN, we now add CPN models of the agents interactions.",
                "Each form of agent interaction (i.e. each activity) can be modelled using CPNs along the lines of Cost et al. [5].",
                "These nondeterministic CPNs feed tokens into the CPN that models the normative structure.",
                "This leads to the introduction of non-determinism into the combined CPN.",
                "The lower half of figure 3 shows part of a CPN model of an agent protocol where the arc denoted with 1 represents some utterance of an illocution by an agent.",
                "The target transition of this arc, not only moves a token on to the next state of this CPN, but also places a token in the place corresponding to the appropriate <br>normative scene</br> in the CPN model of the normative structure (via arc 2).",
                "Transition 3 finally could propagate that token in form of an obligation, for example.",
                "Thus, from a given marking, many different occurrence sequences are possible depending on the agents actions.",
                "We make use of the reachability set R to define a situation in which agents cannot cause conflicts. 640 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) Figure 3: Constructing the combined CPN Def. 13.",
                "Given a net N, a marking M is conflict-resistant if and only if all markings in R(N,M) are conflict-free.",
                "Checking conflict-freedom of a marking can be done in polynomial time by checking all places of the CPN for conflicting tokens.",
                "Conflict-freedom of an occurrence sequence in the CPN that represents the normative structure can also be done in polynomial time since this sequence is deterministic given a snapshot.",
                "Whether or not a normative structure is designed safely corresponds to checking the conflict-resistance of the initial marking M0.",
                "Now, verifying conflict-resistance of a marking becomes a very difficult task.",
                "It corresponds to the reachability problem in a CPN: can a state be reached or a marking achieved, that contains a conflict?.",
                "This reachability problem is known to be NP-complete for ordinary Petri Nets [22] and since CPNs are functionally identical, we cannot hope to verify conflict-resistance of a normative structure off-line in a reasonable amount of time.",
                "Therefore, distributed, run-time mechanisms are needed to ensure that a normative structure maintains consistency.",
                "We present one such mechanism in the following section. 6.",
                "MANAGING NORMATIVE STRUCTURES Once a conflict (as defined in Section 4) has been detected, we propose to employ the unifier to resolve the conflict.",
                "In our example, if the variables in prh(inform(a1, r1, a2, r2, p(Y, d), T )) do not get the values specified in substitution Ïƒ then there will not be a conflict.",
                "However, rather than computing the complement set of a substitution (which can be an infinite set) we propose to annotate the prohibition with the unifier itself and use it to determine what the variables of that prohibition cannot be in future unifications in order to avoid a conflict.",
                "We therefore denote annotated prohibitions as prh(Â¯I) Î£, where Î£ = {Ïƒ1, . . . , Ïƒn}, is a set of unifiers.",
                "Annotated norms3 are interpreted as deontic constructs with curtailed influences, that is, their effect (on agents, roles and illocutions) has been limited by the set Î£ of unifiers.",
                "A prohibition may be in conflict with various obligations in a given <br>normative scene</br> s = id, Î” and we need to record (and possibly avoid) all these conflicts.",
                "We define below an algorithm which ensures that a normative position will be added to a <br>normative scene</br> in such a way that it will not cause any conflicts. 3 Although we propose to curtail prohibitions, the same machinery can be used to define the curtailment of obligations instead.",
                "These different policies are dependent on the intended deontic semantics and requirements of the systems addressed.",
                "For instance, some MASs may require that their agents should not act in the presence of conflicts, that is, the obligation should be curtailed. 6.1 Conflict Resolution We propose a fine-grained way of resolving normative conflicts via unification.",
                "We detect the overlapping of the influences of norms , i.e. how they affect the behaviour of the concerned agents, and we curtail the influence of the normative position, by appropriately using the annotations when checking if the norm applies to illocutions.",
                "The algorithm shown in Figure 4 depicts how we maintain a conflict-free set of norms.",
                "It adds a given norm N to an existing, conflictfree normative state Î”, obtaining a resulting new normative state Î” which is conflict-free, that is, its prohibitions are annotated with a set of conflict sets indicating which bindings for variables have to be avoided for conflicts not to take place. algorithm addNorm(N, Î”) begin 1 timestamp(N) 2 case N of 3 per(Â¯I): Î” := Î” âˆª {N} 4 prh(I): if N âˆˆ Î” s.t. conflict(N, N , Ïƒ) then Î” := Î” 5 else Î” := Î” âˆª {N} 6 prh(Â¯I): 7 begin 8 Î£ := âˆ… 9 for each N âˆˆ Î” do 10 if conflict(N, N , Ïƒ) then Î£ := Î£ âˆª {Ïƒ} 11 Î” := Î” âˆª {N Î£} 12 end 13 obl(Â¯I): 14 begin 15 Î”1 := âˆ…; Î”2 := âˆ… 16 for each (N Î£) âˆˆ Î” do 17 if N = prh(I) then 18 if conflict(N , N, Ïƒ) then Î”1 := Î”1 âˆª {N Î£} 19 else nil 20 else 21 if conflict(N , N, Ïƒ) then 22 begin 23 Î”1 := Î”1 âˆª {N Î£} 24 Î”2 := Î”2 âˆª {N (Î£ âˆª {Ïƒ})} 25 end 26 Î” := (Î” âˆ’ Î”1) âˆª Î”2 âˆª {N} 27 end 28 end case 29 return Î” end Figure 4: Algorithm to Preserve Conflict-Freedom The algorithm uses a case of structure to differentiate the different possibilities for a given norm N. Line 3 addresses the case when the given norm is a permission: N is simply added to Î”.",
                "Lines 4-5 address the case when we attempt to add a ground prohibition to a normative state: if it conflicts with any obligation, then it is discarded; otherwise it is added to the normative state.",
                "Lines 6-12 describe the situation when the normative position to be added is a nonground prohibition.",
                "In this case, the algorithm initialises Î£ to an empty set and loops (line 9-10) through the norms N in the old normative state Î”.",
                "Upon finding one that conflicts with N, the algorithm updates Î£ by adding the newly found conflict set Ïƒ to it (line 10).",
                "By looping through Î”, we are able to check any conflicts between the new prohibition and the existing obligations, adequately building the annotation Î£ to be used when adding N to Î” in line 11.",
                "Lines 13-27 describe how a new obligation is accommodated to an existing normative state.",
                "We make use of two initially empty, temporary sets, Î”1, Î”2.",
                "The algorithm loops through Î” (lines 16-25) picking up those annotated prohibitions N Î£ which conflict with the new obligation.",
                "There are, however, two cases to deal with: the one when a ground The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 641 prohibition is found (line 17), and its exception, covering non-ground prohibitions (line 20).",
                "In both cases, the old prohibition is stored in Î”1 (lines 18 and 23) to be later removed from Î” (line 26).",
                "However, in the case of a nonground prohibition, the algorithm updates its annotation of conflict sets (line 24).",
                "The loop guarantees that an exhaustive (linear) search through a normative state takes place, checking if the new obligation is in conflict with any existing prohibitions, possibly updating the annotations of these conflicting prohibitions.",
                "In line 26 the algorithm builds the new updated Î” by removing the old prohibitions stored in Î”1 and adding the updated prohibitions stored in Î”2 (if any), as well as the new obligation N. Our proposed algorithm is correct in that, for a given normative position N and a normative state Î”, it provides a new normative state Î” in which all prohibitions have annotations recording how they unify with existing obligations.",
                "The annotations can be empty, though: this is the case when we have a ground prohibition or a prohibition which does not unify/conflict with any obligation.",
                "Permissions do not affect our algorithm and they are appropriately dealt with (line 3).",
                "Any attempt to insert a ground prohibition which conflicts, yields the same normative state (line 4).",
                "When a new obligation is being added then the algorithm guarantees that all prohibitions are considered (lines 14-27), leading to the removal of conflicting ground prohibitions or the update of annotations of non-ground prohibitions.",
                "The algorithm always terminates: the loops are over a finite set Î” and the conflict checks and set operations always terminate.",
                "The complexity of the algorithm is linear: the set Î” is only examined once for each possible case of norm to be added.",
                "When managing normative states we may also need to remove normative positions.",
                "This is straightforward: permissions can be removed without any problems; annotated prohibitions can also be removed without further considerations; obligations, however, require some housekeeping.",
                "When an obligation is to be removed, we must check it against all annotated prohibitions in order to update their annotations.",
                "We apply the conflict check and obtain a unifier, then remove this unifier from the prohibitions annotation.",
                "We invoke the removal algorithm as removeNorm(N, Î”): it returns a new normative state Î” in which N has been removed, with possible alterations to other normative positions as explained. 6.2 Enactment of a Normative Structure The enactment of a normative structure amounts to the parallel, distributed execution of normative scenes and normative transitions.",
                "For illustrative purposes, hereafter we shall describe the interplay between the payment and delivery normative scenes and the normative transition nt linking them in the upper half of figure 2.",
                "With this aim, consider for instance that obl(inform(jules, client, rod, acc, pay(copper, 400, 350), T) âˆˆ Î”payment and that Î”delivery holds prh(inform(rod,wm, jules, client, delivered(Z, Q), T)).",
                "Such states indicate that client Jules is obliged to pay Â£400 for 350kg of copper to accountant Rod according to the payment <br>normative scene</br>, whereas Rod, taking up the role of warehouse manager this time, is prohibited to deliver anything to client Jules according to the delivery <br>normative scene</br>.",
                "For each <br>normative scene</br>, the enactment process goes as follows.",
                "Firstly, it processes its incoming message queue that contains three types of messages: utterances from the activity it is linked to; and normative commands either to add or remove normative positions.",
                "For instance, in our example, the payment <br>normative scene</br> collects the illocution I = utt((inform(jules, client, rod, acc, pay(copper, 400, 350), 35)) standing for client Jules pending payment for copper (via arrow A in figure 2).",
                "Utterances are timestamped and subsequently added to the normative state.",
                "We would have Î”payment = Î”payment âˆª {I}, in our example.",
                "Upon receiving normative commands to either add or remove a normative position, the <br>normative scene</br> invokes the corresponding addition or removal algorithm described in Section 6.1.",
                "Secondly, the <br>normative scene</br> acknowledges its state change by sending a trigger message to every outgoing normative transition it is connected to.",
                "In our example, the payment <br>normative scene</br> would be signalling its state change to normative transition nt.",
                "For normative transitions, the process works differently.",
                "Because each normative transition controls the operation of a single rule, upon receiving a trigger message, it polls every incoming <br>normative scene</br> for substitutions for the relevant illocution schemata on the LHS of its rule.",
                "In our example, nt (being responsible for the rule described in Section 3.4), would poll the payment <br>normative scene</br> (via arrow B) for substitutions.",
                "Upon receiving replies from them (in the form of sets of substitutions together with time-stamps), it has to unify substitutions from each of these normative scenes.",
                "For each unification it finds, the rule is fired, and hence the corresponding normative command is sent along to the output <br>normative scene</br>.",
                "The normative transition then keeps track of the firing message it sent on and of the time-stamps of the normative positions that triggered the firing.",
                "This is done to ensure that the very same normative positions in the LHS of a rule only trigger its firing once.",
                "In our example, nt would be receiving Ïƒ = {X/jules, Y/rod, Z/copper, Q/350} from the payment <br>normative scene</br>.",
                "Since the substitions in Ïƒ unify with nts rule, the rule is fired, and the normative command add(delivery : obl(rod, wm, jules, client, delivered(copper, 350), T)) is sent along to the delivery <br>normative scene</br> to oblige Rod to deliver to client Jules 350kg of copper.",
                "After that, the delivery <br>normative scene</br> would invoke the addNorm algorithm from figure 4 with Î”delivery and N = obl(rod, wm, jules, client, delivered(copper, 350)) as arguments. 7.",
                "RELATED WORK AND CONCLUSIONS Our contributions in this paper are three-fold.",
                "Firstly, we introduce an approach for the management of and reasoning about norms in a distributed manner.",
                "To our knowledge, there is little work published in this direction.",
                "In [8, 21], two languages are presented for the distributed enforcement of norms in MAS.",
                "However, in both works, each agent has a local message interface that forwards legal messages according to a set of norms.",
                "Since these interfaces are local to each agent, norms can only be expressed in terms of actions of that agent.",
                "This is a serious disadvantage, e.g. when one needs to activate an obligation to one agent due to a certain message of another one.",
                "The second contribution is the proposal of a normative structure.",
                "The notion is fruitful because it allows the separation of normative and procedural concerns.",
                "The normative structure we propose makes evident the similarity between the propagation of normative positions and the propagation 642 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) of tokens in Coloured Petri Nets.",
                "That similarity readily suggests a mapping between the two, and gives grounds to a convenient analytical treatment of the normative structure, in general, and the complexity of conflict detection, in particular.",
                "The idea of modelling interactions (in the form of conversations) via Petri Nets has been investigated in [18], where the interaction medium and individual agents are modelled as CPN sub-nets that are subsequently combined for analysis.",
                "In [5], conversations are first designed and analysed at the level of CPNs and thereafter translated into protocols.",
                "Lin et al. [20] map conversation schemata to CPNs.",
                "To our knowledge, the use of this representation in the support of conflict detection in regulated MAS has not been reported elsewhere.",
                "Finally, we present a distributed mechanism to resolve normative conflicts.",
                "Sartor [25] treats normative conflicts from the point of view of legal theory and suggests a way to order the norms involved.",
                "His idea is implemented in [12] but requires a central resource for norm maintenance.",
                "The approach to conflict detection and resolution is an adaptation and extension of the work on instantiation graphs reported in [17] and a related algorithm in [27].",
                "The algorithm presented in the current paper can be used to manage normative states distributedly: normative scenes that happen in parallel have an associated normative state Î” to which the algorithm is independently applied each time a new norm is to be introduced.",
                "These three contributions we present in this paper open many possibilities for future work.",
                "We should mention first, that as a broad strategy we are working on a generalisation of the notion of normative structure to make it operate with different coordination models, with richer deontic content and on top of different computational realisations of regulated MAS.",
                "As a first step in this direction we are taking advantage of the de-coupling between interaction protocols and declarative normative guidance that the normative structure makes available, to provide a normative layer for electronic institutions (as defined in [1]).",
                "We expect such coupling will endow electronic institutions with a more flexible -and more expressive- normative environment.",
                "Furthermore, we want to extend our model along several directions: (1) to handle negation and constraints as part of the norm language, and in particular the notion of time; (2) to accommodate multiple, hierarchical norm authorities based on roles, along the lines of Cholvy and Cuppens [3] and power relationships as suggested by Carabelea et al. [2]; (3) to capture in the conflict resolution algorithm different semantics relating the deontic notions by supporting different axiomations (e.g., relative strength of prohibition versus obligation, default deontic notions, deontic inconsistencies).",
                "On the theoretical side, we intend to use analysis techniques of CPNs in order to characterise classes of CPNs (e.g., acyclic, symmetric, etc.) corresponding to families of Normative Structures that are susceptible to tractable offline conflict detection.",
                "The combination of these techniques along with our online conflict resolution mechanisms is intended to endow MAS designers with the ability to incorporate norms into their systems in a principled way. 8.",
                "REFERENCES [1] J. L. Arcos, M. Esteva, P. Noriega, J.",
                "A. RodrÂ´Ä±guez, and C. Sierra.",
                "Engineering open environments with electronic institutions.",
                "Journal on Engineering Applications of Artificial Intelligence, 18(2):191-204, 2005. [2] C. Carabelea, O. Boissier, and C. Castelfranchi.",
                "Using social power to enable agents to reason about being part of a group.",
                "In 5th Internat.",
                "Workshop, ESAW 2004, pages 166-177, 2004. [3] L. Cholvy and F. Cuppens.",
                "Solving normative conflicts by merging roles.",
                "In Fifth International Conference on Artificial Intelligence and Law, Washington, USA, 1995. [4] S. Christensen and T. B. Haagh.",
                "Design CPN - overview of CPN ML syntax.",
                "Technical report, University of Aarhus, 1996. [5] R. S. Cost, Y. Chen, T. W. Finin, Y. Labrou, and Y. Peng.",
                "Using colored petri nets for conversation modeling.",
                "In Issues in Agent Communication, pages 178-192, London, UK, 2000. [6] F. Dignum.",
                "Autonomous Agents with Norms.",
                "Artificial Intelligence and Law, 7(1):69-79, 1999. [7] A. Elhag, J. Breuker, and P. Brouwer.",
                "On the Formal Analysis of Normative Conflicts.",
                "Information & Comms.",
                "Techn.",
                "Law, 9(3):207-217, Oct. 2000. [8] M. Esteva, W. Vasconcelos, C. Sierra, and J.",
                "A. RodrÂ´Ä±guez-Aguilar.",
                "Norm consistency in electronic institutions. volume 3171 (LNAI), pages 494-505.",
                "Springer-Verlag, 2004. [9] M. Fitting.",
                "First-Order Logic and Automated Theorem Proving.",
                "Springer-Verlag, New York, U.S.A., 1990. [10] N. Fornara, F. Vigan`o, and M. Colombetti.",
                "An Event Driven Approach to Norms in Artificial Institutions.",
                "In AAMAS05 Workshop: Agents, Norms and Institutions for Regulated Multiagent Systems (ANI@REM), Utrecht, 2005. [11] D. Gaertner, P. Noriega, and C. Sierra.",
                "Extending the BDI architecture with commitments.",
                "In Proceedings of the 9th International Conference of the Catalan Association of Artificial Intelligence, 2006. [12] A. GarcÂ´Ä±a-Camino, P. Noriega, and J.-A.",
                "RodrÂ´Ä±guez-Aguilar.",
                "An Algorithm for Conflict Resolution in Regulated Compound Activities.",
                "In 7th Int.Workshop - ESAW 06, 2006. [13] A. GarcÂ´Ä±a-Camino, J.-A.",
                "RodrÂ´Ä±guez-Aguilar, C. Sierra, and W. Vasconcelos.",
                "A Distributed Architecture for Norm-Aware Agent Societies.",
                "In DALT III, volume 3904 (LNAI), pages 89-105.",
                "Springer, 2006. [14] F. Giunchiglia and L. Serafini.",
                "Multi-language hierarchical logics or: How we can do without modal logics.",
                "Artificial Intelligence, 65(1):29-70, 1994. [15] J. Habermas.",
                "The Theory of Communication Action, Volume One, Reason and the Rationalization of Society.",
                "Beacon Press, 1984. [16] K. Jensen.",
                "Coloured Petri Nets: Basic Concepts, Analysis Methods and Practical Uses (Volume 1).",
                "Springer, 1997. [17] M. Kollingbaum and T. Norman.",
                "Strategies for resolving norm conflict in practical reasoning.",
                "In ECAI Workshop Coordination in Emergent Agent Societies 2004, 2004. [18] J.-L. Koning, G. Francois, and Y. Demazeau.",
                "Formalization and pre-validation for interaction protocols in a multi agent systems.",
                "In ECAI, pages 298-307, 1998. [19] B. Kramer and J. Mylopoulos.",
                "Knowledge Representation.",
                "In S. C. Shapiro, editor, Encyclopedia of Artificial Intelligence, volume 1, pages 743-759.",
                "John Wiley & Sons, 1992. [20] F. Lin, D. H. Norrie, W. Shen, and R. Kremer.",
                "A schema-based approach to specifying conversation policies.",
                "In Issues in Agent Communication, pages 193-204, 2000. [21] N. Minsky.",
                "Law Governed Interaction (LGI): A Distributed Coordination and Control Mechanism (An Introduction, and a Reference Manual).",
                "Technical report, Rutgers University, 2005. [22] T. Murata.",
                "Petri nets: Properties, analysis and applications.",
                "Proceedings of the IEEE, 77(4):541-580, 1989. [23] S. Parsons, C. Sierra, and N. Jennings.",
                "Agents that reason and negotiate by arguing.",
                "Journal of Logic and Computation, 8(3):261-292, 1998. [24] A. Ricci and M. Viroli.",
                "Coordination Artifacts: A Unifying Abstraction for Engineering Environment-Mediated Coordination in MAS.",
                "Informatica, 29:433-443, 2005. [25] G. Sartor.",
                "Normative conflicts in legal reasoning.",
                "Artificial Intelligence and Law, 1(2-3):209-235, June 1992. [26] M. Sergot.",
                "A Computational Theory of Normative Positions.",
                "ACM Trans.",
                "Comput.",
                "Logic, 2(4):581-622, 2001. [27] W. W. Vasconcelos, M. Kollingbaum, and T. Norman.",
                "Resolving Conflict and Inconsistency in Norm-Regulated Virtual Organisations.",
                "In Proceedings of AAMAS 07, Hawaii, USA, 2007.",
                "IFAAMAS. [28] G. H. von Wright.",
                "Norm and Action: A Logical Inquiry.",
                "Routledge and Kegan Paul, London, 1963. [29] M. Wooldridge.",
                "An Introduction to Multiagent Systems.",
                "John Wiley & Sons, Chichester, UK, Feb. 2002.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 643"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "En esta secciÃ³n, primero presentamos un lenguaje simple que captura estos aspectos e introducimos formalmente las nociones de \"escena normativa\", regla de transiciÃ³n normativa y estructura normativa.",
                "Una \"escena normativa\" es una tupla S = IDS, Î”S donde IDS es un identificador de escena y Î”S es el conjunto de fÃ³rmulas atÃ³micas Î´ (es decir, expresiones y posiciones normativas) que se mantienen en s.TambiÃ©n nos referiremos a Î”S como el estado de \"escena normativa\" s.Por ejemplo, una instantÃ¡nea del estado de la escena normativa de entrega de nuestro escenario podrÃ­a representarse como: Î”S = 8 <: Utt (solicitud (Sean, Cliente, Kev, Wm, Recibe (Wire, 200), 20)), Utt(Aceptar (Kev, Wm, Sean, Cliente, Recibir (cable, 200), 30)), Obl (informar (Kev, Wm, Sean, Cliente, entregado (cable, 200), 30)) 9 =;Es decir, el agente Sean asumiÃ³ el rol del cliente ha solicitado el agente KEV (asumiendo el rol de Warehouse Manager WM) para recibir 200 kg de cable, y el agente KEV estÃ¡ obligado a entregar 200 kg de cable a Sean desde que aceptÃ³ la solicitud.",
                "Tenga en cuenta que el estado de una \"escena normativa\" Î”S evoluciona con el tiempo.",
                "AquÃ­ comenzamos a definir la semÃ¡ntica prevista de las reglas de transiciÃ³n normativa describiendo cÃ³mo una regla cambia una \"escena normativa\" de una estructura normativa existente que produce una nueva estructura normativa.",
                "Una fÃ³rmula atÃ³mica (es decir, un enunciado o una posiciÃ³n normativa) es un poco unificable con un enunciado o posiciÃ³n normativa que pertenece al estado de la \"escena normativa\" correspondiente.",
                "Cada vez que se activa una regla, se lleva a cabo el comando normativo especificado en el lado derecho de esa regla, con la intenciÃ³n de agregar o eliminar una posiciÃ³n normativa del estado de la \"escena normativa\" correspondiente.",
                "La transiciÃ³n objetivo de este arco, no solo mueve una ficha al siguiente estado de este CPN, sino que tambiÃ©n coloca un token en el lugar correspondiente a la \"escena normativa\" apropiada en el modelo CPN de la estructura normativa (a travÃ©s de ARC 2).",
                "Una prohibiciÃ³n puede estar en conflicto con varias obligaciones en una \"escena normativa\" dada s = id, Î´ y necesitamos registrar (y posiblemente evitar) todos estos conflictos.",
                "Definimos debajo de un algoritmo que garantiza que se agregarÃ¡ una posiciÃ³n normativa a una \"escena normativa\" de tal manera que no cause ningÃºn conflicto.3 Aunque proponemos reducir las prohibiciones, se puede usar la misma maquinaria para definir la reducciÃ³n de las obligaciones.",
                "Dichos estados indican que el cliente Jules estÃ¡ obligado a pagar Â£ 400 por 350 kg de cobre a la barra del contador de acuerdo con la \"escena normativa\" de pago, mientras que Rod, asumiendo el papel de Gerente de almacÃ©n esta vez, estÃ¡ prohibido entregar algo al cliente Jules segÃºna la entrega \"escena normativa\".",
                "Para cada \"escena normativa\", el proceso de promulgaciÃ³n es el siguiente.",
                "Por ejemplo, en nuestro ejemplo, la \"escena normativa\" de pago cobra la ilocuciÃ³n i = utt ((informar (Jules, Cliente, Rod, ACC, Pay (Copper, 400, 350), 35)) Cabeza para el cliente Jules en espera de pago porcobre (a travÃ©s de la flecha A en la Figura 2).",
                "Al recibir comandos normativos para agregar o eliminar una posiciÃ³n normativa, la \"escena normativa\" invoca el algoritmo de adiciÃ³n o eliminaciÃ³n correspondiente descrito en la SecciÃ³n 6.1.",
                "En segundo lugar, la \"escena normativa\" reconoce su cambio de estado al enviar un mensaje de activaciÃ³n a cada transiciÃ³n normativa saliente a la que estÃ¡ conectado.",
                "En nuestro ejemplo, la \"escena normativa\" de pago estarÃ­a seÃ±alando su cambio de estado a la transiciÃ³n normativa NT.",
                "Debido a que cada transiciÃ³n normativa controla la operaciÃ³n de una sola regla, al recibir un mensaje de activaciÃ³n, encuesta cada \"escena normativa\" entrante para sustituciones por los esquemas de ilocuciÃ³n relevantes en el LHS de su regla.",
                "En nuestro ejemplo, NT (siendo responsable de la regla descrita en la SecciÃ³n 3.4), encuestarÃ­a la \"escena normativa\" de pago (a travÃ©s de Arrow B) por sustituciones.",
                "Para cada unificaciÃ³n que encuentra, la regla se dispara y, por lo tanto, el comando normativo correspondiente se envÃ­a a la salida \"escena normativa\".",
                "En nuestro ejemplo, NT recibirÃ­a Ïƒ = {x/jules, y/rode, z/cobre, q/350} de la \"escena normativa\" de pago.",
                "Dado que las subestaciones en Ïƒ unifican con la regla NTS, la regla se dispara y el comando normativo agregue (entrega: obl (barra, wm, jules, cliente, entregado (cobre, 350), t)) se envÃ­a a la entrega \"escena normativa \"para obligar a Rod a entregar al cliente Jules 350 kg de cobre.",
                "DespuÃ©s de eso, la \"escena normativa\" de entrega invocarÃ­a el algoritmo AddNorm de la Figura 4 con Î”Delivery y N = OBL (Rod, Wm, Jules, Cliente, entregado (cobre, 350)) como argumentos.7."
            ],
            "translated_text": "",
            "candidates": [
                "escena normativa",
                "escena normativa",
                "escena normativa",
                "escena normativa",
                "escena normativa",
                "escena normativa",
                "escena normativa",
                "escena normativa",
                "escena normativa",
                "escena normativa",
                "escena normativa",
                "escena normativa",
                "escena normativa",
                "escena normativa",
                "escena normativa",
                "escena normativa",
                "escena normativa",
                "escena normativa",
                "escena normativa",
                "escena normativa",
                "escena normativa",
                "escena normativa",
                "escena normativa",
                "escena normativa",
                "Escena normativa",
                "escena normativa",
                "escena normativa",
                "escena normativa",
                "escena normativa",
                "escena normativa",
                "escena normativa",
                "escena normativa",
                "escena normativa",
                "escena normativa",
                "escena normativa",
                "escena normativa",
                "escena normativa",
                "escena normativa",
                "escena normativa",
                "escena normativa",
                "escena normativa",
                "escena normativa ",
                "Escena normativa",
                "escena normativa"
            ],
            "error": []
        },
        "normative transition rule": {
            "translated_key": "regla de transiciÃ³n normativa",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Distributed Norm Management in Regulated Multi-Agent Systems âˆ— Dorian Gaertner Dept.",
                "of Computing, Imperial College London, London SW7 2AZ, United Kingdom dg00@doc.ic.ac.uk Andres Garcia-Camino, Pablo Noriega, J.-A.",
                "Rodriguez-Aguilar IIIA-CSIC, 08193 Bellaterra, Spain {andres,pablo,jar}@iiia.csic.es Wamberto Vasconcelos Dept. of Computing Science, University of Aberdeen, Aberdeen AB24 3UE, United Kingdom wvasconcelos@acm.org ABSTRACT Norms are widely recognised as a means of coordinating multi-agent systems.",
                "The distributed management of norms is a challenging issue and we observe a lack of truly distributed computational realisations of normative models.",
                "In order to regulate the behaviour of autonomous agents that take part in multiple, related activities, we propose a normative model, the Normative Structure (NS), an artifact that is based on the propagation of normative positions (obligations, prohibitions, permissions), as consequences of agents actions.",
                "Within a NS, conflicts may arise due to the dynamic nature of the MAS and the concurrency of agents actions.",
                "However, ensuring conflict-freedom of a NS at design time is computationally intractable.",
                "We show this by formalising the notion of conflict, providing a mapping of NSs into Coloured Petri Nets and borrowing well-known theoretical results from that field.",
                "Since online conflict resolution is required, we present a tractable algorithm to be employed distributedly.",
                "We then demonstrate that this algorithm is paramount for the distributed enactment of a NS.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Languages and structures General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION A fundamental feature of open, regulated multi-agent systems in which autonomous agents interact, is that participating agents are meant to comply with the conventions of the system.",
                "Norms can be used to model such conventions and hence as a means to regulate the observable behaviour of agents [6, 29].",
                "There are many contributions on the subject of norms from sociologists, philosophers and logicians (e.g., [15, 28]).",
                "However, there are very few proposals for computational realisations of normative models - the way norms can be integrated in the design and execution of MASs.",
                "The few that exist (e.g. [10, 13, 24]), operate in a centralised manner which creates bottlenecks and single points-of-failure.",
                "To our knowledge, no proposal truly supports the distributed enactment of normative environments.",
                "In our paper we approach that problem and propose means to handle conflicting commitments in open, regulated, multiagent systems in a distributed manner.",
                "The type of regulated MAS we envisage consists of multiple, concurrent, related activities where agents interact.",
                "Each agent may concurrently participate in several activities, and change from one activity to another.",
                "An agents actions within an activity may have consequences in the form of normative positions (i.e. obligations, permissions, and prohibitions) [26] that may constrain its future behaviour.",
                "For instance, a buyer agent who runs out of credit may be forbidden to make further offers, or a seller agent is obliged to deliver after closing a deal.",
                "We assume that agents may choose not to fulfill all their obligations and hence may be sanctioned by the MAS.",
                "Notice that, when activities are distributed, normative positions must flow from the activities in which they are generated to those in which they take effect.",
                "For instance, the sellers obligation above must flow (or be propagated) from a negotiation activity to a delivery activity.",
                "Since in an open, regulated MAS one cannot embed normative aspects into the agents design, we adopt the view that the MAS should be supplemented with a separate set of norms that further regulates the behaviour of participating agents.",
                "In order to model the separation of concerns between the coordination level (agents interactions) and the normative level (propagation of normative positions), we propose an artifact called the Normative Structure (NS).",
                "Within a NS conflicts may arise due to the dynamic nature of the MAS and the concurrency of agents actions.",
                "For instance, an agent may be obliged and prohibited to do the 636 978-81-904262-7-5 (RPS) c 2007 IFAAMAS very same action in an activity.",
                "Since the regulation of a MAS entails that participating agents need to be aware of the validity of those actions that take place within it, such conflicts ought to be identified and possibly resolved if a claim of validity is needed for an agent to engage in an action or be sanctioned.",
                "However, ensuring conflict-freedom of a NS at design time is computationally intractable.",
                "We show this by formalising the notion of conflict, providing a mapping of NSs into Coloured Petri Nets (CPNs) and borrowing well-known theoretical results from the field of CPNs.",
                "We believe that online conflict detection and resolution is required.",
                "Hence, we present a tractable algorithm for conflict resolution.",
                "This algorithm is paramount for the distributed enactment of a NS.",
                "The paper is organised as follows.",
                "In Section 2 we detail a scenario to serve as an example throughout the paper.",
                "Next, in Section 3 we formally define the normative structure artifact.",
                "Further on, in Section 4 we formalise the notion of conflict to subsequently analyse the complexity of conflict detection in terms of CPNs in Section 5.",
                "Section 6 describes the computational management of NSs by describing their enactment and presenting an algorithm for conflict resolution.",
                "Finally, we comment on related work, draw conclusions and report on future work in Section 7. 2.",
                "SCENARIO We use a supply-chain scenario in which companies and individuals come together at an online marketplace to conduct business.",
                "The overall transaction procedure may be organised as six distributed activities, represented as nodes in the diagram in Figure 1.",
                "They involve different participants whose behaviour is coordinated through protocols.",
                "In this scenario agents can play one of four roles: marExit Registration Payment Delivery Negotiation Coordination Model Contract Figure 1: Activity Structure of the Scenario ketplace accountant (acc), client, supplier (supp) and warehouse managers (wm).",
                "The arrows connecting the activities represent how agents can move from one activity to another.",
                "After registering at the marketplace, clients and suppliers get together in an activity where they negotiate the terms of their transaction, i.e. prices, amounts of goods to be delivered, deadlines and other details.",
                "In the contract activity, the order becomes established and an invoice is prepared.",
                "The client will then participate in a payment activity, verifying his credit-worthiness and instructing his bank to transfer the correct amount of money.",
                "The supplier in the meantime will arrange for the goods to be delivered (e.g. via a warehouse manager) in the delivery activity.",
                "Finally, agents can leave the marketplace conforming to a predetermined exit protocol.",
                "The marketplace accountant participates in most of the activities as a trusted provider of auditing tools.",
                "In the rest of the paper we shall build on this scenario to exemplify the notion of normative structure and to illustrate our approach to conflict detection and resolution in a distributed setting. 3.",
                "NORMATIVE STRUCTURE In MASs agents interact according to protocols which naturally are distributed.",
                "We advocate that actions in one such protocol may have an effect on the enactment of other protocols.",
                "Certain actions can become prohibited or obligatory, for example.",
                "We take normative positions to be obligations, prohibitions and permissions akin to work described in [26].",
                "The intention of adding or removing a normative position we call normative command.",
                "Occurrences of normative positions in one protocol may also have consequences for other protocols1 .",
                "In order to define our norm language and specify how normative positions are propagated, we have been inspired by multi-context systems [14].",
                "These systems allow the structuring of knowledge into distinct formal theories and the definition of relationships between them.",
                "The relationships are expressed as bridge rules - deducibility of formulae in some contexts leads to the deduction of other formulae in other contexts.",
                "Recently, these systems have been successfully used to define agent architectures [11, 23].",
                "The metaphor translates to our current work as follows: the utterance of illocutions and/or the existence of normative positions in some normative scenes leads to the deduction of normative positions in other normative scenes.",
                "We are concerned with the propagation and distribution of normative positions within a network of distributed, normative scenes as a consequence of agents actions.",
                "We take normative scenes to be sets of normative positions and utterances that are associated with an underlying interaction protocol corresponding to an activity.",
                "In this section, we first present a simple language capturing these aspects and formally introduce the notions of normative scene, <br>normative transition rule</br> and normative structure.",
                "We give the intended semantics of these rules and show how to control a MAS via norms in an example. 3.1 Basic Concepts The building blocks of our language are terms and atomic formulae: Def. 1.",
                "A term, denoted as t, is (i) any constant expressed using lowercase (with or without subscripts), e.g. a, b0, c or (ii) any variable expressed using uppercase (with or without subscripts), e.g.",
                "X, Y, Zb or (iii) any function f(t1, . . . , tn), where f is an n-ary function symbol and t1, .., tn are terms.",
                "Some examples of terms and functions are Credit, price or offer(bible, 30) being respectively a variable, a constant and a function.",
                "We will be making use of identifiers throughout the paper, which are constant terms and also need the following definition: Def. 2.",
                "An atomic formula is any construct p(t1, . . . , tn), where p is an n-ary predicate symbol and t1, . . . , tn are terms.",
                "The set of all atomic formulae is denoted as Î”.",
                "We focus on an expressive class of MASs in which interaction is carried out by means of illocutionary speech acts exchanged among participating agents: Def. 3.",
                "Illocutions I are ground atomic formulae which have the form p(ag, r, ag , r , Î´, t) where p is an element of 1 Here, we abstract from protocols and refer to them generically as activities.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 637 a set of illocutionary particles (e.g. inform, request, offer); ag, ag are agent identifiers; r, r are role identifiers; Î´, an arbitrary ground term, is the content of the message, built from a shared content language; t âˆˆ N is a time stamp.",
                "The intuitive meaning of p(ag, r, ag , r , m, t) is that agent ag playing role r sent message m to agent ag playing role r at time t. An example of an illocution is inform(ag4, supp, ag3, client, offer(wire, 12), 10).",
                "Sometimes it is useful to refer to illocutions that are not fully grounded, that is, those that may contain uninstantiated (free) variables.",
                "In the description of a protocol, for instance, the precise values of the message exchanged can be left unspecified.",
                "During the enactment of the protocol agents will produce the actual values which will give rise to a ground illocution.",
                "We can thus define illocution schemata: Def. 4.",
                "An illocution schema Â¯I is any atomic formula p(ag, r, ag , r , Î´, t) in which some of the terms may either be variables or may contain variables. 3.2 Formal Definition of the Notion of NS We first define normative scenes as follows: Def. 5.",
                "A normative scene is a tuple s = ids, Î”s where ids is a scene identifier and Î”s is the set of atomic formulae Î´ (i.e. utterances and normative positions) that hold in s. We will also refer to Î”s as the state of normative scene s. For instance, a snapshot of the state of the delivery normative scene of our scenario could be represented as: Î”s = 8 < : utt(request(sean, client, kev, wm, receive(wire, 200), 20)), utt(accept(kev, wm, sean, client, receive(wire, 200), 30)), obl(inform(kev, wm, sean, client, delivered(wire, 200), 30)) 9 = ; That is, agent Sean taking up the client role has requested agent Kev (taking up the warehouse manager role wm) to receive 200kg of wire, and agent Kev is obliged to deliver 200kg of wire to Sean since he accepted the request.",
                "Note that the state of a normative scene Î”s evolves over time.",
                "These normative scenes are connected to one another via normative transitions that specify how utterances and normative positions in one scene affect other normative scenes.",
                "As mentioned above, activities are not independent since illocutions uttered in some of them may have an effect on other ones.",
                "Normative transition rules define the conditions under which a normative command is generated.",
                "These conditions are either utterances or normative positions associated with a given protocol (denoted e.g. activity : utterance) which yield a normative command, i.e. the addition or removal of another normative position, possibly related to a different activity.",
                "Our transition rules are thus defined: Def. 6.",
                "A <br>normative transition rule</br> R is of the form: R ::= V C V ::= ids : D | V, V D ::= N | utt(Â¯I) N ::= per(Â¯I) | prh(Â¯I) | obl(Â¯I) C ::= add(ids : N) | remove(ids : N) where Â¯I is an illocution schema, N is a normative position (i.e. permission, prohibition or obligation), ids is an identifier for activity s and C is a normative command.",
                "We endow our language with the usual semantics of rulebased languages [19].",
                "Rules map an existing normative structure to a new normative structure where only the state of the normative scenes change.",
                "In the definitions below we rely on the standard concept of substitution [9].",
                "Def. 7.",
                "A normative transition is a tuple b = idb, rb where idb is an identifier and rb is a <br>normative transition rule</br>.",
                "We are proposing to extend the notion of MAS, regulated by protocols, with an extra layer consisting of normative scenes and normative transitions.",
                "This layer is represented as a bi-partite graph that we term normative structure.",
                "A normative structure relates normative scenes and normative transitions specifying which normative positions are to be generated or removed in which normative scenes.",
                "Def. 8.",
                "A normative structure is a labelled bi-partite graph NS = Nodes, Edges, Lin , Lout .",
                "Nodes is a set SâˆªB where S is a set of normative scenes and B is a set of normative transitions.",
                "Edges is a set Ain âˆª Aout where Ain âŠ† S Ã— B is a set of input arcs labelled with an atomic formula using the labelling function Lin : Ain â†’ D; and Aout âŠ† B Ã— S is a set of output arcs labelled with a normative position using the labelling function Lout : Aout â†’ N. The following must hold: 1.",
                "Each atomic formula appearing in the LHS of a rule rb must be of the form (ids : D) where s âˆˆ S and D âˆˆ Î” and âˆƒain âˆˆ Ain such that ain = (s, b) and Lin (ain ) = D. 2.",
                "The atomic formula appearing in the RHS of a rule rb must be of the form add(ids : N) or remove(ids : N) where s âˆˆ S and âˆƒaout âˆˆ Aout such that aout = (b, s) and Lout (aout ) = N. 3. âˆ€a âˆˆ Ain such that a = (s, b) and b = idb, rb and Lin (a) = D then (ids:D) must occur in the LHS of rb. 4. âˆ€a âˆˆ Aout such that a = (b, s) and b = idb, rb and Lout (a) = N then add(ids : N) or remove(ids : N) must occur in the RHS of rb.",
                "The first two points ensure that every atomic formulae on the LHS of a <br>normative transition rule</br> labels an arc entering the appropriate normative transition in the normative structure, and that the atomic formula on the RHS labels the corresponding outgoing arc.",
                "Points three and four ensure that labels from all incoming arcs are used in the LHS of the <br>normative transition rule</br> that these arcs enter into, and that the labels from all outgoing arcs are used in the RHS of the <br>normative transition rule</br> that these arcs leave. 3.3 Intended Semantics The formal semantics will be defined via a mapping to Coloured Petri Nets in Section 5.1.",
                "Here we start defining the intended semantics of normative transition rules by describing how a rule changes a normative scene of an existing normative structure yielding a new normative structure.",
                "Each rule is triggered once for each substitution that unifies the left-hand side V of the rule with the state of the corresponding normative scenes.",
                "An atomic formula (i.e. an utterance or a normative position) holds iff it is unifiable with an utterance or normative position that belongs to the state of the corresponding normative scene.",
                "Every time a rule is triggered, the normative command specified on the right-hand side of that rule is carried out, intending to add or remove a normative position from the state of the corresponding normative scene.",
                "However, addition is not unconditional as conflicts may arise.",
                "This topic will be treated in Sections 4 and 6.1. 638 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.4 Example In our running example we have the following exemplary <br>normative transition rule</br>: â€ž payment : obl(inform(X, client, Y, acc, pay(Z, P, Q), T )), payment : utt(inform(X, client, Y, acc, pay(Z, P, Q), T )) Â« delivery : add(obl(inform(Y, wm, X, client, delivered(Z, Q), T ))) That is, during the payment activity, an obligation on client X to inform accountant Y about the payment P of item Z at time T and the corresponding utterance which fulfills this obligation allows the flow of a norm to the delivery activity.",
                "The norm is an obligation on agent Y (this time taking up the role of the warehouse manager wm) to send a message to client X that item Z has been delivered.",
                "We show in Figure 2 a diagrammatic representation of how activities and a normative structure relate: Payment Delivery Contract Normative Level Exit Registration Payment Delivery Negotiation Coordination Level Contract nt Figure 2: Activities and Normative Structure As illocutions are uttered during activities, normative positions arise.",
                "Utterances and normative positions are combined in transition rules, causing the flow of normative positions between normative scenes.",
                "The connection between the two levels is described in Section 6.2. 4.",
                "CONFLICT DEFINITION The terms deontic conflict and deontic inconsistency have been used interchangeably in the literature.",
                "However, in this paper we adopt the view of [7] in which the authors suggest that a deontic inconsistency arises when an action is simultaneously permitted and prohibited - since a permission may not be acted upon, no real conflict occurs.",
                "The situations when an action is simultaneously obliged and prohibited are, however, deontic conflicts, as both obligations and prohibitions influence behaviours in a conflicting fashion.",
                "The content of normative positions in this paper are illocutions.",
                "Therefore, a normative conflict arises when an illocution is simultaneously obliged and prohibited.",
                "We propose to use the standard notion of unification [9] to detect when a prohibition and a permission overlap.",
                "For instance, an obligation obl(inform(A1, R1, A2, R2, p(c, X), T)) and a prohibition prh(inform(a1, r1, a2, r2, p(Y, d), T )) are in conflict as they unify under Ïƒ = {A1/a1, R1/r1, A2/a2, R2/r2, Y/c, X/d, T/T }).",
                "We formally capture this notion: Def. 9.",
                "A (deontic) conflict arises between two normative positions N and N under a substitution Ïƒ, denoted as conflict(N, N , Ïƒ), if and only if N = prh(Â¯I), N = obl(Â¯I ) and unify(Â¯I,Â¯I , Ïƒ).",
                "That is, a prohibition and an obligation are in conflict if, and only if, their illocutions unify under Ïƒ.",
                "The substitution Ïƒ, called here the conflict set, unifies the agents, roles and atomic formulae.",
                "We assume that unify is a suitable implementation of a unification algorithm which i) always terminates (possibly failing, if a unifier cannot be found); ii) is correct; and iii) has linear computational complexity.",
                "Inconsistencies caused by the same illocution being simultaneously permitted and prohibited can be formalised similarly.",
                "In this paper we focus on prohibition/obligation conflicts, but the computational machinery introduced in Section 6.1 can equally be used to detect prohibition/permission inconsistencies, if we substitute modality obl for per. 5.",
                "FORMALISING CONFLICT-FREEDOM In this section we introduce some background knowledge on CPNs assuming a basic understanding of ordinary Petri Nets.",
                "For technical details we refer the reader to [16].",
                "We then map NSs to CPNs and analyse their properties.",
                "CPNs combine the strength of Petri nets with the strength of functional programming languages.",
                "On the one hand, Petri nets provide the primitives for the description of the synchronisation of concurrent processes.",
                "As noticed in [16], CPNs have a semantics which builds upon true concurrency, instead of interleaving.",
                "In our opinion, a true-concurrency semantics is easier to work with because it is the way we envisage the connection between the coordination level and the normative level of a multi-agent system to be.",
                "On the other hand, the functional programming languages used by CPNs provide the primitives for the definition of data types and the manipulation of their data values.",
                "Thus, we can readily translate expressions of a normative structure.",
                "Last but not least, CPNs have a well-defined semantics which unambiguously defines the behaviour of each CPN.",
                "Furthermore, CPNs have a large number of formal analysis methods and tools by which properties of CPNs can be proved.",
                "Summing up, CPNs provide us with all the necessary features to formally reason about normative structures given that an adequate mapping is provided.",
                "In accordance with Petri nets, the states of a CPN are represented by means of places.",
                "But unlike Petri Nets, each place has an associated data type determining the kind of data which the place may contain.",
                "A state of a CPN is called a marking.",
                "It consists of a number of tokens positioned on the individual places.",
                "Each token carries a data value which has the type of the corresponding place.",
                "In general, a place may contain two or more tokens with the same data value.",
                "Thus, a marking of a CPN is a function which maps each place into a multi-set2 of tokens of the correct type.",
                "One often refers to the token values as token colours and one also refers to the data types as colour sets.",
                "The types of a CPN can be arbitrarily complex.",
                "Actions in a CPN are represented by means of transitions.",
                "An incoming arc into a transition from a place indicates that the transition may remove tokens from the corresponding place while an outgoing arc indicates that the transition may add tokens.",
                "The exact number of tokens and their data values are determined by the arc expressions, which are encoded using the programming language chosen for the CPN.",
                "A transition is enabled in a CPN if and only if all the 2 A multi-set (or bag) is an extension to the notion of set, allowing the possibility of multiple appearances of the same element.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 639 variables in the expressions of its incoming arcs are bound to some value(s) (each one of these bindings is referred to as a binding element).",
                "If so, the transition may occur by removing tokens from its input places and adding tokens to its output places.",
                "In addition to the arc expressions, it is possible to attach a boolean guard expression (with variables) to each transition.",
                "Putting all the elements above together we obtain a formal definition of CPN that shall be employed further ahead for mapping purposes.",
                "Def. 10.",
                "A CPN is a tuple Î£, P, T, A, N, C, G, E, I where: (i) Î£ is a finite set of non-empty types, also called colour sets; (ii) P is a finite set of places; (iii) T is a finite set of transitions; (iv) A is a finite set of arcs; (v) N is a node function defined from A into P Ã— T âˆª T Ã— P; (vi) C is a colour function from P into Î£; (vii) G is a guard function from T into expressions; (viii) E is an arc expression function from A into expressions; (ix) I is an initialisation function from P into closed expressions; Notice that the informal explanation of the enabling and occurrence rules given above provides the foundations to understand the behaviour of a CPN.",
                "In accordance with ordinary Petri nets, the concurrent behaviour of a CPN is based on the notion of step.",
                "Formally, a step is a non-empty and finite multi-set over the set of all binding elements.",
                "Let step S be enabled in a marking M. Then, S may occur, changing the marking M to M .",
                "Moreover, we say that marking M is directly reachable from marking M by the occurrence of step S, and we denote it by M[S > M .",
                "A finite occurrence sequence is a finite sequence of steps and markings: M1[S1 > M2 . . .",
                "Mn[Sn > Mn+1 such that n âˆˆ N and Mi[Si > Mi+1 âˆ€i âˆˆ {1, . . . , n}.",
                "The set of all possible markings reachable for a net Net from a marking M is called its reachability set, and is denoted as R(Net, M). 5.1 Mapping to Coloured Petri Nets Our normative structure is a labelled bi-partite graph.",
                "The same is true for a Coloured Petri Net.",
                "We are presenting a mapping f from one to the other, in order to provide semantics for the normative structure and prove properties about it by using well-known theoretical results from work on CPNs.",
                "The mapping f makes use of correspondences between normative scenes and CPN places, normative transitions and CPN transitions and finally, between arc labels and CPN arc expressions.",
                "S â†’ P B â†’ T Lin âˆª Lout â†’ E The set of types is the singleton set containing the colour NP (i.e.",
                "Î£ = {NP}).",
                "This complex type is structured as follows (we use CPN-ML [4] syntax): color NPT = with Obl | Per | Prh | NoMod color IP = with inform | declare | offer color UTT = record illp : IP ag1, role1, ag2, role2 : string content: string time : int color NP = record mode : NPT illoc : UTT Modelling illocutions as norms without modality (NoMod) is a formal trick we use to ensure that sub-nets can be combined as explained below.",
                "Arcs are mapped almost directly.",
                "A is a finite set of arcs and N is a node function, such that âˆ€a âˆˆ A âˆƒa âˆˆ Ain âˆªAout .",
                "N(a) = a .",
                "The initialisation function I is defined as I(p) = Î”s (âˆ€s âˆˆ S where p is obtained from s using the mapping; remember that s = ids, Î”s ).",
                "Finally, the colour function C assigns the colour NP to every place: C(p) = NP (âˆ€p âˆˆ P).",
                "We are not making use of the guard function G. In future work, this function can be used to model constraints when we extend the expressiveness of our norm language. 5.2 Properties of Normative Structures Having defined the mapping from normative structures to Coloured Petri Nets, we now look at properties of CPNs that help us understand the complexity of conflict detection.",
                "One question we would like to answer is, whether at a given point in time, a given normative structure is conflict-free.",
                "Such a snapshot of a normative structure corresponds to a marking in the mapped CPN.",
                "Def. 11.",
                "Given a marking Mi, this marking is conflictfree if Â¬âˆƒp âˆˆ P. âˆƒnp1, np2 âˆˆ Mi(p) such that np1.mode = Obl and np2.mode = Prh and np1.illoc and np2.illoc unify under a valid substitution.",
                "Another interesting question would be, whether a conflict will occur from such a snapshot of the system by propagating the normative positions.",
                "In order to answer this question, we first translate the snapshot of the normative structure to the corresponding CPN and then execute the finite occurence sequence of markings and steps, verifying the conflict-freedom of each marking as we go along.",
                "Def. 12.",
                "Given a marking Mi, a finite occurrence sequence Si, Si+1, ..., Sn is called conflict-free, if and only if Mi[Si > Mi+1 . . .",
                "Mn[Sn > Mn+1 and Mk is conflict-free for all k such that i â‰¤ k â‰¤ n + 1.",
                "However, the main question we would like to investigate, is whether or not a given normative structure is conflictresistant, that is, whether or not the agents enacting the MAS are able to bring about conflicts through their actions.",
                "As soon as one includes the possibility of actions (or utterances) from autonomous agents, one looses determinism.",
                "Having mapped the normative structure to a CPN, we now add CPN models of the agents interactions.",
                "Each form of agent interaction (i.e. each activity) can be modelled using CPNs along the lines of Cost et al. [5].",
                "These nondeterministic CPNs feed tokens into the CPN that models the normative structure.",
                "This leads to the introduction of non-determinism into the combined CPN.",
                "The lower half of figure 3 shows part of a CPN model of an agent protocol where the arc denoted with 1 represents some utterance of an illocution by an agent.",
                "The target transition of this arc, not only moves a token on to the next state of this CPN, but also places a token in the place corresponding to the appropriate normative scene in the CPN model of the normative structure (via arc 2).",
                "Transition 3 finally could propagate that token in form of an obligation, for example.",
                "Thus, from a given marking, many different occurrence sequences are possible depending on the agents actions.",
                "We make use of the reachability set R to define a situation in which agents cannot cause conflicts. 640 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) Figure 3: Constructing the combined CPN Def. 13.",
                "Given a net N, a marking M is conflict-resistant if and only if all markings in R(N,M) are conflict-free.",
                "Checking conflict-freedom of a marking can be done in polynomial time by checking all places of the CPN for conflicting tokens.",
                "Conflict-freedom of an occurrence sequence in the CPN that represents the normative structure can also be done in polynomial time since this sequence is deterministic given a snapshot.",
                "Whether or not a normative structure is designed safely corresponds to checking the conflict-resistance of the initial marking M0.",
                "Now, verifying conflict-resistance of a marking becomes a very difficult task.",
                "It corresponds to the reachability problem in a CPN: can a state be reached or a marking achieved, that contains a conflict?.",
                "This reachability problem is known to be NP-complete for ordinary Petri Nets [22] and since CPNs are functionally identical, we cannot hope to verify conflict-resistance of a normative structure off-line in a reasonable amount of time.",
                "Therefore, distributed, run-time mechanisms are needed to ensure that a normative structure maintains consistency.",
                "We present one such mechanism in the following section. 6.",
                "MANAGING NORMATIVE STRUCTURES Once a conflict (as defined in Section 4) has been detected, we propose to employ the unifier to resolve the conflict.",
                "In our example, if the variables in prh(inform(a1, r1, a2, r2, p(Y, d), T )) do not get the values specified in substitution Ïƒ then there will not be a conflict.",
                "However, rather than computing the complement set of a substitution (which can be an infinite set) we propose to annotate the prohibition with the unifier itself and use it to determine what the variables of that prohibition cannot be in future unifications in order to avoid a conflict.",
                "We therefore denote annotated prohibitions as prh(Â¯I) Î£, where Î£ = {Ïƒ1, . . . , Ïƒn}, is a set of unifiers.",
                "Annotated norms3 are interpreted as deontic constructs with curtailed influences, that is, their effect (on agents, roles and illocutions) has been limited by the set Î£ of unifiers.",
                "A prohibition may be in conflict with various obligations in a given normative scene s = id, Î” and we need to record (and possibly avoid) all these conflicts.",
                "We define below an algorithm which ensures that a normative position will be added to a normative scene in such a way that it will not cause any conflicts. 3 Although we propose to curtail prohibitions, the same machinery can be used to define the curtailment of obligations instead.",
                "These different policies are dependent on the intended deontic semantics and requirements of the systems addressed.",
                "For instance, some MASs may require that their agents should not act in the presence of conflicts, that is, the obligation should be curtailed. 6.1 Conflict Resolution We propose a fine-grained way of resolving normative conflicts via unification.",
                "We detect the overlapping of the influences of norms , i.e. how they affect the behaviour of the concerned agents, and we curtail the influence of the normative position, by appropriately using the annotations when checking if the norm applies to illocutions.",
                "The algorithm shown in Figure 4 depicts how we maintain a conflict-free set of norms.",
                "It adds a given norm N to an existing, conflictfree normative state Î”, obtaining a resulting new normative state Î” which is conflict-free, that is, its prohibitions are annotated with a set of conflict sets indicating which bindings for variables have to be avoided for conflicts not to take place. algorithm addNorm(N, Î”) begin 1 timestamp(N) 2 case N of 3 per(Â¯I): Î” := Î” âˆª {N} 4 prh(I): if N âˆˆ Î” s.t. conflict(N, N , Ïƒ) then Î” := Î” 5 else Î” := Î” âˆª {N} 6 prh(Â¯I): 7 begin 8 Î£ := âˆ… 9 for each N âˆˆ Î” do 10 if conflict(N, N , Ïƒ) then Î£ := Î£ âˆª {Ïƒ} 11 Î” := Î” âˆª {N Î£} 12 end 13 obl(Â¯I): 14 begin 15 Î”1 := âˆ…; Î”2 := âˆ… 16 for each (N Î£) âˆˆ Î” do 17 if N = prh(I) then 18 if conflict(N , N, Ïƒ) then Î”1 := Î”1 âˆª {N Î£} 19 else nil 20 else 21 if conflict(N , N, Ïƒ) then 22 begin 23 Î”1 := Î”1 âˆª {N Î£} 24 Î”2 := Î”2 âˆª {N (Î£ âˆª {Ïƒ})} 25 end 26 Î” := (Î” âˆ’ Î”1) âˆª Î”2 âˆª {N} 27 end 28 end case 29 return Î” end Figure 4: Algorithm to Preserve Conflict-Freedom The algorithm uses a case of structure to differentiate the different possibilities for a given norm N. Line 3 addresses the case when the given norm is a permission: N is simply added to Î”.",
                "Lines 4-5 address the case when we attempt to add a ground prohibition to a normative state: if it conflicts with any obligation, then it is discarded; otherwise it is added to the normative state.",
                "Lines 6-12 describe the situation when the normative position to be added is a nonground prohibition.",
                "In this case, the algorithm initialises Î£ to an empty set and loops (line 9-10) through the norms N in the old normative state Î”.",
                "Upon finding one that conflicts with N, the algorithm updates Î£ by adding the newly found conflict set Ïƒ to it (line 10).",
                "By looping through Î”, we are able to check any conflicts between the new prohibition and the existing obligations, adequately building the annotation Î£ to be used when adding N to Î” in line 11.",
                "Lines 13-27 describe how a new obligation is accommodated to an existing normative state.",
                "We make use of two initially empty, temporary sets, Î”1, Î”2.",
                "The algorithm loops through Î” (lines 16-25) picking up those annotated prohibitions N Î£ which conflict with the new obligation.",
                "There are, however, two cases to deal with: the one when a ground The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 641 prohibition is found (line 17), and its exception, covering non-ground prohibitions (line 20).",
                "In both cases, the old prohibition is stored in Î”1 (lines 18 and 23) to be later removed from Î” (line 26).",
                "However, in the case of a nonground prohibition, the algorithm updates its annotation of conflict sets (line 24).",
                "The loop guarantees that an exhaustive (linear) search through a normative state takes place, checking if the new obligation is in conflict with any existing prohibitions, possibly updating the annotations of these conflicting prohibitions.",
                "In line 26 the algorithm builds the new updated Î” by removing the old prohibitions stored in Î”1 and adding the updated prohibitions stored in Î”2 (if any), as well as the new obligation N. Our proposed algorithm is correct in that, for a given normative position N and a normative state Î”, it provides a new normative state Î” in which all prohibitions have annotations recording how they unify with existing obligations.",
                "The annotations can be empty, though: this is the case when we have a ground prohibition or a prohibition which does not unify/conflict with any obligation.",
                "Permissions do not affect our algorithm and they are appropriately dealt with (line 3).",
                "Any attempt to insert a ground prohibition which conflicts, yields the same normative state (line 4).",
                "When a new obligation is being added then the algorithm guarantees that all prohibitions are considered (lines 14-27), leading to the removal of conflicting ground prohibitions or the update of annotations of non-ground prohibitions.",
                "The algorithm always terminates: the loops are over a finite set Î” and the conflict checks and set operations always terminate.",
                "The complexity of the algorithm is linear: the set Î” is only examined once for each possible case of norm to be added.",
                "When managing normative states we may also need to remove normative positions.",
                "This is straightforward: permissions can be removed without any problems; annotated prohibitions can also be removed without further considerations; obligations, however, require some housekeeping.",
                "When an obligation is to be removed, we must check it against all annotated prohibitions in order to update their annotations.",
                "We apply the conflict check and obtain a unifier, then remove this unifier from the prohibitions annotation.",
                "We invoke the removal algorithm as removeNorm(N, Î”): it returns a new normative state Î” in which N has been removed, with possible alterations to other normative positions as explained. 6.2 Enactment of a Normative Structure The enactment of a normative structure amounts to the parallel, distributed execution of normative scenes and normative transitions.",
                "For illustrative purposes, hereafter we shall describe the interplay between the payment and delivery normative scenes and the normative transition nt linking them in the upper half of figure 2.",
                "With this aim, consider for instance that obl(inform(jules, client, rod, acc, pay(copper, 400, 350), T) âˆˆ Î”payment and that Î”delivery holds prh(inform(rod,wm, jules, client, delivered(Z, Q), T)).",
                "Such states indicate that client Jules is obliged to pay Â£400 for 350kg of copper to accountant Rod according to the payment normative scene, whereas Rod, taking up the role of warehouse manager this time, is prohibited to deliver anything to client Jules according to the delivery normative scene.",
                "For each normative scene, the enactment process goes as follows.",
                "Firstly, it processes its incoming message queue that contains three types of messages: utterances from the activity it is linked to; and normative commands either to add or remove normative positions.",
                "For instance, in our example, the payment normative scene collects the illocution I = utt((inform(jules, client, rod, acc, pay(copper, 400, 350), 35)) standing for client Jules pending payment for copper (via arrow A in figure 2).",
                "Utterances are timestamped and subsequently added to the normative state.",
                "We would have Î”payment = Î”payment âˆª {I}, in our example.",
                "Upon receiving normative commands to either add or remove a normative position, the normative scene invokes the corresponding addition or removal algorithm described in Section 6.1.",
                "Secondly, the normative scene acknowledges its state change by sending a trigger message to every outgoing normative transition it is connected to.",
                "In our example, the payment normative scene would be signalling its state change to normative transition nt.",
                "For normative transitions, the process works differently.",
                "Because each normative transition controls the operation of a single rule, upon receiving a trigger message, it polls every incoming normative scene for substitutions for the relevant illocution schemata on the LHS of its rule.",
                "In our example, nt (being responsible for the rule described in Section 3.4), would poll the payment normative scene (via arrow B) for substitutions.",
                "Upon receiving replies from them (in the form of sets of substitutions together with time-stamps), it has to unify substitutions from each of these normative scenes.",
                "For each unification it finds, the rule is fired, and hence the corresponding normative command is sent along to the output normative scene.",
                "The normative transition then keeps track of the firing message it sent on and of the time-stamps of the normative positions that triggered the firing.",
                "This is done to ensure that the very same normative positions in the LHS of a rule only trigger its firing once.",
                "In our example, nt would be receiving Ïƒ = {X/jules, Y/rod, Z/copper, Q/350} from the payment normative scene.",
                "Since the substitions in Ïƒ unify with nts rule, the rule is fired, and the normative command add(delivery : obl(rod, wm, jules, client, delivered(copper, 350), T)) is sent along to the delivery normative scene to oblige Rod to deliver to client Jules 350kg of copper.",
                "After that, the delivery normative scene would invoke the addNorm algorithm from figure 4 with Î”delivery and N = obl(rod, wm, jules, client, delivered(copper, 350)) as arguments. 7.",
                "RELATED WORK AND CONCLUSIONS Our contributions in this paper are three-fold.",
                "Firstly, we introduce an approach for the management of and reasoning about norms in a distributed manner.",
                "To our knowledge, there is little work published in this direction.",
                "In [8, 21], two languages are presented for the distributed enforcement of norms in MAS.",
                "However, in both works, each agent has a local message interface that forwards legal messages according to a set of norms.",
                "Since these interfaces are local to each agent, norms can only be expressed in terms of actions of that agent.",
                "This is a serious disadvantage, e.g. when one needs to activate an obligation to one agent due to a certain message of another one.",
                "The second contribution is the proposal of a normative structure.",
                "The notion is fruitful because it allows the separation of normative and procedural concerns.",
                "The normative structure we propose makes evident the similarity between the propagation of normative positions and the propagation 642 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) of tokens in Coloured Petri Nets.",
                "That similarity readily suggests a mapping between the two, and gives grounds to a convenient analytical treatment of the normative structure, in general, and the complexity of conflict detection, in particular.",
                "The idea of modelling interactions (in the form of conversations) via Petri Nets has been investigated in [18], where the interaction medium and individual agents are modelled as CPN sub-nets that are subsequently combined for analysis.",
                "In [5], conversations are first designed and analysed at the level of CPNs and thereafter translated into protocols.",
                "Lin et al. [20] map conversation schemata to CPNs.",
                "To our knowledge, the use of this representation in the support of conflict detection in regulated MAS has not been reported elsewhere.",
                "Finally, we present a distributed mechanism to resolve normative conflicts.",
                "Sartor [25] treats normative conflicts from the point of view of legal theory and suggests a way to order the norms involved.",
                "His idea is implemented in [12] but requires a central resource for norm maintenance.",
                "The approach to conflict detection and resolution is an adaptation and extension of the work on instantiation graphs reported in [17] and a related algorithm in [27].",
                "The algorithm presented in the current paper can be used to manage normative states distributedly: normative scenes that happen in parallel have an associated normative state Î” to which the algorithm is independently applied each time a new norm is to be introduced.",
                "These three contributions we present in this paper open many possibilities for future work.",
                "We should mention first, that as a broad strategy we are working on a generalisation of the notion of normative structure to make it operate with different coordination models, with richer deontic content and on top of different computational realisations of regulated MAS.",
                "As a first step in this direction we are taking advantage of the de-coupling between interaction protocols and declarative normative guidance that the normative structure makes available, to provide a normative layer for electronic institutions (as defined in [1]).",
                "We expect such coupling will endow electronic institutions with a more flexible -and more expressive- normative environment.",
                "Furthermore, we want to extend our model along several directions: (1) to handle negation and constraints as part of the norm language, and in particular the notion of time; (2) to accommodate multiple, hierarchical norm authorities based on roles, along the lines of Cholvy and Cuppens [3] and power relationships as suggested by Carabelea et al. [2]; (3) to capture in the conflict resolution algorithm different semantics relating the deontic notions by supporting different axiomations (e.g., relative strength of prohibition versus obligation, default deontic notions, deontic inconsistencies).",
                "On the theoretical side, we intend to use analysis techniques of CPNs in order to characterise classes of CPNs (e.g., acyclic, symmetric, etc.) corresponding to families of Normative Structures that are susceptible to tractable offline conflict detection.",
                "The combination of these techniques along with our online conflict resolution mechanisms is intended to endow MAS designers with the ability to incorporate norms into their systems in a principled way. 8.",
                "REFERENCES [1] J. L. Arcos, M. Esteva, P. Noriega, J.",
                "A. RodrÂ´Ä±guez, and C. Sierra.",
                "Engineering open environments with electronic institutions.",
                "Journal on Engineering Applications of Artificial Intelligence, 18(2):191-204, 2005. [2] C. Carabelea, O. Boissier, and C. Castelfranchi.",
                "Using social power to enable agents to reason about being part of a group.",
                "In 5th Internat.",
                "Workshop, ESAW 2004, pages 166-177, 2004. [3] L. Cholvy and F. Cuppens.",
                "Solving normative conflicts by merging roles.",
                "In Fifth International Conference on Artificial Intelligence and Law, Washington, USA, 1995. [4] S. Christensen and T. B. Haagh.",
                "Design CPN - overview of CPN ML syntax.",
                "Technical report, University of Aarhus, 1996. [5] R. S. Cost, Y. Chen, T. W. Finin, Y. Labrou, and Y. Peng.",
                "Using colored petri nets for conversation modeling.",
                "In Issues in Agent Communication, pages 178-192, London, UK, 2000. [6] F. Dignum.",
                "Autonomous Agents with Norms.",
                "Artificial Intelligence and Law, 7(1):69-79, 1999. [7] A. Elhag, J. Breuker, and P. Brouwer.",
                "On the Formal Analysis of Normative Conflicts.",
                "Information & Comms.",
                "Techn.",
                "Law, 9(3):207-217, Oct. 2000. [8] M. Esteva, W. Vasconcelos, C. Sierra, and J.",
                "A. RodrÂ´Ä±guez-Aguilar.",
                "Norm consistency in electronic institutions. volume 3171 (LNAI), pages 494-505.",
                "Springer-Verlag, 2004. [9] M. Fitting.",
                "First-Order Logic and Automated Theorem Proving.",
                "Springer-Verlag, New York, U.S.A., 1990. [10] N. Fornara, F. Vigan`o, and M. Colombetti.",
                "An Event Driven Approach to Norms in Artificial Institutions.",
                "In AAMAS05 Workshop: Agents, Norms and Institutions for Regulated Multiagent Systems (ANI@REM), Utrecht, 2005. [11] D. Gaertner, P. Noriega, and C. Sierra.",
                "Extending the BDI architecture with commitments.",
                "In Proceedings of the 9th International Conference of the Catalan Association of Artificial Intelligence, 2006. [12] A. GarcÂ´Ä±a-Camino, P. Noriega, and J.-A.",
                "RodrÂ´Ä±guez-Aguilar.",
                "An Algorithm for Conflict Resolution in Regulated Compound Activities.",
                "In 7th Int.Workshop - ESAW 06, 2006. [13] A. GarcÂ´Ä±a-Camino, J.-A.",
                "RodrÂ´Ä±guez-Aguilar, C. Sierra, and W. Vasconcelos.",
                "A Distributed Architecture for Norm-Aware Agent Societies.",
                "In DALT III, volume 3904 (LNAI), pages 89-105.",
                "Springer, 2006. [14] F. Giunchiglia and L. Serafini.",
                "Multi-language hierarchical logics or: How we can do without modal logics.",
                "Artificial Intelligence, 65(1):29-70, 1994. [15] J. Habermas.",
                "The Theory of Communication Action, Volume One, Reason and the Rationalization of Society.",
                "Beacon Press, 1984. [16] K. Jensen.",
                "Coloured Petri Nets: Basic Concepts, Analysis Methods and Practical Uses (Volume 1).",
                "Springer, 1997. [17] M. Kollingbaum and T. Norman.",
                "Strategies for resolving norm conflict in practical reasoning.",
                "In ECAI Workshop Coordination in Emergent Agent Societies 2004, 2004. [18] J.-L. Koning, G. Francois, and Y. Demazeau.",
                "Formalization and pre-validation for interaction protocols in a multi agent systems.",
                "In ECAI, pages 298-307, 1998. [19] B. Kramer and J. Mylopoulos.",
                "Knowledge Representation.",
                "In S. C. Shapiro, editor, Encyclopedia of Artificial Intelligence, volume 1, pages 743-759.",
                "John Wiley & Sons, 1992. [20] F. Lin, D. H. Norrie, W. Shen, and R. Kremer.",
                "A schema-based approach to specifying conversation policies.",
                "In Issues in Agent Communication, pages 193-204, 2000. [21] N. Minsky.",
                "Law Governed Interaction (LGI): A Distributed Coordination and Control Mechanism (An Introduction, and a Reference Manual).",
                "Technical report, Rutgers University, 2005. [22] T. Murata.",
                "Petri nets: Properties, analysis and applications.",
                "Proceedings of the IEEE, 77(4):541-580, 1989. [23] S. Parsons, C. Sierra, and N. Jennings.",
                "Agents that reason and negotiate by arguing.",
                "Journal of Logic and Computation, 8(3):261-292, 1998. [24] A. Ricci and M. Viroli.",
                "Coordination Artifacts: A Unifying Abstraction for Engineering Environment-Mediated Coordination in MAS.",
                "Informatica, 29:433-443, 2005. [25] G. Sartor.",
                "Normative conflicts in legal reasoning.",
                "Artificial Intelligence and Law, 1(2-3):209-235, June 1992. [26] M. Sergot.",
                "A Computational Theory of Normative Positions.",
                "ACM Trans.",
                "Comput.",
                "Logic, 2(4):581-622, 2001. [27] W. W. Vasconcelos, M. Kollingbaum, and T. Norman.",
                "Resolving Conflict and Inconsistency in Norm-Regulated Virtual Organisations.",
                "In Proceedings of AAMAS 07, Hawaii, USA, 2007.",
                "IFAAMAS. [28] G. H. von Wright.",
                "Norm and Action: A Logical Inquiry.",
                "Routledge and Kegan Paul, London, 1963. [29] M. Wooldridge.",
                "An Introduction to Multiagent Systems.",
                "John Wiley & Sons, Chichester, UK, Feb. 2002.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 643"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "En esta secciÃ³n, primero presentamos un lenguaje simple que captura estos aspectos e introducimos formalmente las nociones de la escena normativa, la \"regla de transiciÃ³n normativa\" y la estructura normativa.",
                "Una \"regla de transiciÃ³n normativa\" r es de la forma: r :: = v c v :: = ids: d |V, V D :: = N |utt (Â¯i) n :: = per (Â¯i) |PRH (Â¯i) |obl (Â¯i) c :: = add (ids: n) |Eliminar (IDS: N) donde Â¯i es un esquema de ilocuciÃ³n, n es una posiciÃ³n normativa (es decir, permiso, prohibiciÃ³n u obligaciÃ³n), IDS es un identificador para la actividad S y C es un comando normativo.",
                "Una transiciÃ³n normativa es una tupla B = IDB, RB donde IDB es un identificador y RB es una \"regla de transiciÃ³n normativa\".",
                "Los dos primeros puntos aseguran que cada fÃ³rmulas atÃ³micas en el LHS de una \"regla de transiciÃ³n normativa\" etiquete un arco que ingresa a la transiciÃ³n normativa apropiada en la estructura normativa, y que la fÃ³rmula atÃ³mica en el RHS etiqueta el arco saliente correspondiente.",
                "Los puntos tres y cuatro garantizan que las etiquetas de todos los arcos entrantes se usen en el LHS de la \"regla de transiciÃ³n normativa\" en los que estos arcos entran, y que las etiquetas de todos los arcos salientes se usan en el RHS de la \"regla de transiciÃ³n normativa\" que \"que\" que \"es queEstos arcos se van.3.3 SemÃ¡ntica prevista La semÃ¡ntica formal se definirÃ¡ mediante un mapeo a las redes de Petri de color en la SecciÃ³n 5.1.",
                "Conf.En agentes autÃ³nomos y sistemas de mÃºltiples agentes (AAMAS 07) 3.4 Ejemplo En nuestro ejemplo de ejecuciÃ³n tenemos la siguiente \"regla de transiciÃ³n normativa\" ejemplar: â€žPago: Obl (Inform (X, Cliente, Y, ACC, Pay (Z, P,Q), t)), Pago: UTT (informar (X, Cliente, Y, ACC, Pay (Z, P, Q), T)) Â«Entrega: Agregar (Obl (Inform (y, Wm, X, Cliente, Cliente,Entregado (z, q), t)))) es decir, durante la actividad de pago, una obligaciÃ³n del Cliente X de informar el Contador y sobre el pago P del ArtÃ­culo Z en el tiempo T y la expresiÃ³n correspondiente que cumple esta obligaciÃ³n permite el flujo de flujo deuna norma para la actividad de entrega."
            ],
            "translated_text": "",
            "candidates": [
                "regla de transiciÃ³n normativa",
                "regla de transiciÃ³n normativa",
                "regla de transiciÃ³n normativa",
                "regla de transiciÃ³n normativa",
                "regla de transiciÃ³n normativa",
                "regla de transiciÃ³n normativa",
                "regla de transiciÃ³n normativa",
                "regla de transiciÃ³n normativa",
                "regla de transiciÃ³n normativa",
                "regla de transiciÃ³n normativa",
                "regla de transiciÃ³n normativa",
                "que",
                "regla de transiciÃ³n normativa",
                "regla de transiciÃ³n normativa"
            ],
            "error": []
        },
        "normative structure": {
            "translated_key": "estructura normativa",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Distributed Norm Management in Regulated Multi-Agent Systems âˆ— Dorian Gaertner Dept.",
                "of Computing, Imperial College London, London SW7 2AZ, United Kingdom dg00@doc.ic.ac.uk Andres Garcia-Camino, Pablo Noriega, J.-A.",
                "Rodriguez-Aguilar IIIA-CSIC, 08193 Bellaterra, Spain {andres,pablo,jar}@iiia.csic.es Wamberto Vasconcelos Dept. of Computing Science, University of Aberdeen, Aberdeen AB24 3UE, United Kingdom wvasconcelos@acm.org ABSTRACT Norms are widely recognised as a means of coordinating multi-agent systems.",
                "The distributed management of norms is a challenging issue and we observe a lack of truly distributed computational realisations of normative models.",
                "In order to regulate the behaviour of autonomous agents that take part in multiple, related activities, we propose a normative model, the <br>normative structure</br> (NS), an artifact that is based on the propagation of normative positions (obligations, prohibitions, permissions), as consequences of agents actions.",
                "Within a NS, conflicts may arise due to the dynamic nature of the MAS and the concurrency of agents actions.",
                "However, ensuring conflict-freedom of a NS at design time is computationally intractable.",
                "We show this by formalising the notion of conflict, providing a mapping of NSs into Coloured Petri Nets and borrowing well-known theoretical results from that field.",
                "Since online conflict resolution is required, we present a tractable algorithm to be employed distributedly.",
                "We then demonstrate that this algorithm is paramount for the distributed enactment of a NS.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Languages and structures General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION A fundamental feature of open, regulated multi-agent systems in which autonomous agents interact, is that participating agents are meant to comply with the conventions of the system.",
                "Norms can be used to model such conventions and hence as a means to regulate the observable behaviour of agents [6, 29].",
                "There are many contributions on the subject of norms from sociologists, philosophers and logicians (e.g., [15, 28]).",
                "However, there are very few proposals for computational realisations of normative models - the way norms can be integrated in the design and execution of MASs.",
                "The few that exist (e.g. [10, 13, 24]), operate in a centralised manner which creates bottlenecks and single points-of-failure.",
                "To our knowledge, no proposal truly supports the distributed enactment of normative environments.",
                "In our paper we approach that problem and propose means to handle conflicting commitments in open, regulated, multiagent systems in a distributed manner.",
                "The type of regulated MAS we envisage consists of multiple, concurrent, related activities where agents interact.",
                "Each agent may concurrently participate in several activities, and change from one activity to another.",
                "An agents actions within an activity may have consequences in the form of normative positions (i.e. obligations, permissions, and prohibitions) [26] that may constrain its future behaviour.",
                "For instance, a buyer agent who runs out of credit may be forbidden to make further offers, or a seller agent is obliged to deliver after closing a deal.",
                "We assume that agents may choose not to fulfill all their obligations and hence may be sanctioned by the MAS.",
                "Notice that, when activities are distributed, normative positions must flow from the activities in which they are generated to those in which they take effect.",
                "For instance, the sellers obligation above must flow (or be propagated) from a negotiation activity to a delivery activity.",
                "Since in an open, regulated MAS one cannot embed normative aspects into the agents design, we adopt the view that the MAS should be supplemented with a separate set of norms that further regulates the behaviour of participating agents.",
                "In order to model the separation of concerns between the coordination level (agents interactions) and the normative level (propagation of normative positions), we propose an artifact called the <br>normative structure</br> (NS).",
                "Within a NS conflicts may arise due to the dynamic nature of the MAS and the concurrency of agents actions.",
                "For instance, an agent may be obliged and prohibited to do the 636 978-81-904262-7-5 (RPS) c 2007 IFAAMAS very same action in an activity.",
                "Since the regulation of a MAS entails that participating agents need to be aware of the validity of those actions that take place within it, such conflicts ought to be identified and possibly resolved if a claim of validity is needed for an agent to engage in an action or be sanctioned.",
                "However, ensuring conflict-freedom of a NS at design time is computationally intractable.",
                "We show this by formalising the notion of conflict, providing a mapping of NSs into Coloured Petri Nets (CPNs) and borrowing well-known theoretical results from the field of CPNs.",
                "We believe that online conflict detection and resolution is required.",
                "Hence, we present a tractable algorithm for conflict resolution.",
                "This algorithm is paramount for the distributed enactment of a NS.",
                "The paper is organised as follows.",
                "In Section 2 we detail a scenario to serve as an example throughout the paper.",
                "Next, in Section 3 we formally define the <br>normative structure</br> artifact.",
                "Further on, in Section 4 we formalise the notion of conflict to subsequently analyse the complexity of conflict detection in terms of CPNs in Section 5.",
                "Section 6 describes the computational management of NSs by describing their enactment and presenting an algorithm for conflict resolution.",
                "Finally, we comment on related work, draw conclusions and report on future work in Section 7. 2.",
                "SCENARIO We use a supply-chain scenario in which companies and individuals come together at an online marketplace to conduct business.",
                "The overall transaction procedure may be organised as six distributed activities, represented as nodes in the diagram in Figure 1.",
                "They involve different participants whose behaviour is coordinated through protocols.",
                "In this scenario agents can play one of four roles: marExit Registration Payment Delivery Negotiation Coordination Model Contract Figure 1: Activity Structure of the Scenario ketplace accountant (acc), client, supplier (supp) and warehouse managers (wm).",
                "The arrows connecting the activities represent how agents can move from one activity to another.",
                "After registering at the marketplace, clients and suppliers get together in an activity where they negotiate the terms of their transaction, i.e. prices, amounts of goods to be delivered, deadlines and other details.",
                "In the contract activity, the order becomes established and an invoice is prepared.",
                "The client will then participate in a payment activity, verifying his credit-worthiness and instructing his bank to transfer the correct amount of money.",
                "The supplier in the meantime will arrange for the goods to be delivered (e.g. via a warehouse manager) in the delivery activity.",
                "Finally, agents can leave the marketplace conforming to a predetermined exit protocol.",
                "The marketplace accountant participates in most of the activities as a trusted provider of auditing tools.",
                "In the rest of the paper we shall build on this scenario to exemplify the notion of <br>normative structure</br> and to illustrate our approach to conflict detection and resolution in a distributed setting. 3.",
                "<br>normative structure</br> In MASs agents interact according to protocols which naturally are distributed.",
                "We advocate that actions in one such protocol may have an effect on the enactment of other protocols.",
                "Certain actions can become prohibited or obligatory, for example.",
                "We take normative positions to be obligations, prohibitions and permissions akin to work described in [26].",
                "The intention of adding or removing a normative position we call normative command.",
                "Occurrences of normative positions in one protocol may also have consequences for other protocols1 .",
                "In order to define our norm language and specify how normative positions are propagated, we have been inspired by multi-context systems [14].",
                "These systems allow the structuring of knowledge into distinct formal theories and the definition of relationships between them.",
                "The relationships are expressed as bridge rules - deducibility of formulae in some contexts leads to the deduction of other formulae in other contexts.",
                "Recently, these systems have been successfully used to define agent architectures [11, 23].",
                "The metaphor translates to our current work as follows: the utterance of illocutions and/or the existence of normative positions in some normative scenes leads to the deduction of normative positions in other normative scenes.",
                "We are concerned with the propagation and distribution of normative positions within a network of distributed, normative scenes as a consequence of agents actions.",
                "We take normative scenes to be sets of normative positions and utterances that are associated with an underlying interaction protocol corresponding to an activity.",
                "In this section, we first present a simple language capturing these aspects and formally introduce the notions of normative scene, normative transition rule and <br>normative structure</br>.",
                "We give the intended semantics of these rules and show how to control a MAS via norms in an example. 3.1 Basic Concepts The building blocks of our language are terms and atomic formulae: Def. 1.",
                "A term, denoted as t, is (i) any constant expressed using lowercase (with or without subscripts), e.g. a, b0, c or (ii) any variable expressed using uppercase (with or without subscripts), e.g.",
                "X, Y, Zb or (iii) any function f(t1, . . . , tn), where f is an n-ary function symbol and t1, .., tn are terms.",
                "Some examples of terms and functions are Credit, price or offer(bible, 30) being respectively a variable, a constant and a function.",
                "We will be making use of identifiers throughout the paper, which are constant terms and also need the following definition: Def. 2.",
                "An atomic formula is any construct p(t1, . . . , tn), where p is an n-ary predicate symbol and t1, . . . , tn are terms.",
                "The set of all atomic formulae is denoted as Î”.",
                "We focus on an expressive class of MASs in which interaction is carried out by means of illocutionary speech acts exchanged among participating agents: Def. 3.",
                "Illocutions I are ground atomic formulae which have the form p(ag, r, ag , r , Î´, t) where p is an element of 1 Here, we abstract from protocols and refer to them generically as activities.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 637 a set of illocutionary particles (e.g. inform, request, offer); ag, ag are agent identifiers; r, r are role identifiers; Î´, an arbitrary ground term, is the content of the message, built from a shared content language; t âˆˆ N is a time stamp.",
                "The intuitive meaning of p(ag, r, ag , r , m, t) is that agent ag playing role r sent message m to agent ag playing role r at time t. An example of an illocution is inform(ag4, supp, ag3, client, offer(wire, 12), 10).",
                "Sometimes it is useful to refer to illocutions that are not fully grounded, that is, those that may contain uninstantiated (free) variables.",
                "In the description of a protocol, for instance, the precise values of the message exchanged can be left unspecified.",
                "During the enactment of the protocol agents will produce the actual values which will give rise to a ground illocution.",
                "We can thus define illocution schemata: Def. 4.",
                "An illocution schema Â¯I is any atomic formula p(ag, r, ag , r , Î´, t) in which some of the terms may either be variables or may contain variables. 3.2 Formal Definition of the Notion of NS We first define normative scenes as follows: Def. 5.",
                "A normative scene is a tuple s = ids, Î”s where ids is a scene identifier and Î”s is the set of atomic formulae Î´ (i.e. utterances and normative positions) that hold in s. We will also refer to Î”s as the state of normative scene s. For instance, a snapshot of the state of the delivery normative scene of our scenario could be represented as: Î”s = 8 < : utt(request(sean, client, kev, wm, receive(wire, 200), 20)), utt(accept(kev, wm, sean, client, receive(wire, 200), 30)), obl(inform(kev, wm, sean, client, delivered(wire, 200), 30)) 9 = ; That is, agent Sean taking up the client role has requested agent Kev (taking up the warehouse manager role wm) to receive 200kg of wire, and agent Kev is obliged to deliver 200kg of wire to Sean since he accepted the request.",
                "Note that the state of a normative scene Î”s evolves over time.",
                "These normative scenes are connected to one another via normative transitions that specify how utterances and normative positions in one scene affect other normative scenes.",
                "As mentioned above, activities are not independent since illocutions uttered in some of them may have an effect on other ones.",
                "Normative transition rules define the conditions under which a normative command is generated.",
                "These conditions are either utterances or normative positions associated with a given protocol (denoted e.g. activity : utterance) which yield a normative command, i.e. the addition or removal of another normative position, possibly related to a different activity.",
                "Our transition rules are thus defined: Def. 6.",
                "A normative transition rule R is of the form: R ::= V C V ::= ids : D | V, V D ::= N | utt(Â¯I) N ::= per(Â¯I) | prh(Â¯I) | obl(Â¯I) C ::= add(ids : N) | remove(ids : N) where Â¯I is an illocution schema, N is a normative position (i.e. permission, prohibition or obligation), ids is an identifier for activity s and C is a normative command.",
                "We endow our language with the usual semantics of rulebased languages [19].",
                "Rules map an existing <br>normative structure</br> to a new <br>normative structure</br> where only the state of the normative scenes change.",
                "In the definitions below we rely on the standard concept of substitution [9].",
                "Def. 7.",
                "A normative transition is a tuple b = idb, rb where idb is an identifier and rb is a normative transition rule.",
                "We are proposing to extend the notion of MAS, regulated by protocols, with an extra layer consisting of normative scenes and normative transitions.",
                "This layer is represented as a bi-partite graph that we term <br>normative structure</br>.",
                "A <br>normative structure</br> relates normative scenes and normative transitions specifying which normative positions are to be generated or removed in which normative scenes.",
                "Def. 8.",
                "A <br>normative structure</br> is a labelled bi-partite graph NS = Nodes, Edges, Lin , Lout .",
                "Nodes is a set SâˆªB where S is a set of normative scenes and B is a set of normative transitions.",
                "Edges is a set Ain âˆª Aout where Ain âŠ† S Ã— B is a set of input arcs labelled with an atomic formula using the labelling function Lin : Ain â†’ D; and Aout âŠ† B Ã— S is a set of output arcs labelled with a normative position using the labelling function Lout : Aout â†’ N. The following must hold: 1.",
                "Each atomic formula appearing in the LHS of a rule rb must be of the form (ids : D) where s âˆˆ S and D âˆˆ Î” and âˆƒain âˆˆ Ain such that ain = (s, b) and Lin (ain ) = D. 2.",
                "The atomic formula appearing in the RHS of a rule rb must be of the form add(ids : N) or remove(ids : N) where s âˆˆ S and âˆƒaout âˆˆ Aout such that aout = (b, s) and Lout (aout ) = N. 3. âˆ€a âˆˆ Ain such that a = (s, b) and b = idb, rb and Lin (a) = D then (ids:D) must occur in the LHS of rb. 4. âˆ€a âˆˆ Aout such that a = (b, s) and b = idb, rb and Lout (a) = N then add(ids : N) or remove(ids : N) must occur in the RHS of rb.",
                "The first two points ensure that every atomic formulae on the LHS of a normative transition rule labels an arc entering the appropriate normative transition in the <br>normative structure</br>, and that the atomic formula on the RHS labels the corresponding outgoing arc.",
                "Points three and four ensure that labels from all incoming arcs are used in the LHS of the normative transition rule that these arcs enter into, and that the labels from all outgoing arcs are used in the RHS of the normative transition rule that these arcs leave. 3.3 Intended Semantics The formal semantics will be defined via a mapping to Coloured Petri Nets in Section 5.1.",
                "Here we start defining the intended semantics of normative transition rules by describing how a rule changes a normative scene of an existing <br>normative structure</br> yielding a new <br>normative structure</br>.",
                "Each rule is triggered once for each substitution that unifies the left-hand side V of the rule with the state of the corresponding normative scenes.",
                "An atomic formula (i.e. an utterance or a normative position) holds iff it is unifiable with an utterance or normative position that belongs to the state of the corresponding normative scene.",
                "Every time a rule is triggered, the normative command specified on the right-hand side of that rule is carried out, intending to add or remove a normative position from the state of the corresponding normative scene.",
                "However, addition is not unconditional as conflicts may arise.",
                "This topic will be treated in Sections 4 and 6.1. 638 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.4 Example In our running example we have the following exemplary normative transition rule: â€ž payment : obl(inform(X, client, Y, acc, pay(Z, P, Q), T )), payment : utt(inform(X, client, Y, acc, pay(Z, P, Q), T )) Â« delivery : add(obl(inform(Y, wm, X, client, delivered(Z, Q), T ))) That is, during the payment activity, an obligation on client X to inform accountant Y about the payment P of item Z at time T and the corresponding utterance which fulfills this obligation allows the flow of a norm to the delivery activity.",
                "The norm is an obligation on agent Y (this time taking up the role of the warehouse manager wm) to send a message to client X that item Z has been delivered.",
                "We show in Figure 2 a diagrammatic representation of how activities and a <br>normative structure</br> relate: Payment Delivery Contract Normative Level Exit Registration Payment Delivery Negotiation Coordination Level Contract nt Figure 2: Activities and <br>normative structure</br> As illocutions are uttered during activities, normative positions arise.",
                "Utterances and normative positions are combined in transition rules, causing the flow of normative positions between normative scenes.",
                "The connection between the two levels is described in Section 6.2. 4.",
                "CONFLICT DEFINITION The terms deontic conflict and deontic inconsistency have been used interchangeably in the literature.",
                "However, in this paper we adopt the view of [7] in which the authors suggest that a deontic inconsistency arises when an action is simultaneously permitted and prohibited - since a permission may not be acted upon, no real conflict occurs.",
                "The situations when an action is simultaneously obliged and prohibited are, however, deontic conflicts, as both obligations and prohibitions influence behaviours in a conflicting fashion.",
                "The content of normative positions in this paper are illocutions.",
                "Therefore, a normative conflict arises when an illocution is simultaneously obliged and prohibited.",
                "We propose to use the standard notion of unification [9] to detect when a prohibition and a permission overlap.",
                "For instance, an obligation obl(inform(A1, R1, A2, R2, p(c, X), T)) and a prohibition prh(inform(a1, r1, a2, r2, p(Y, d), T )) are in conflict as they unify under Ïƒ = {A1/a1, R1/r1, A2/a2, R2/r2, Y/c, X/d, T/T }).",
                "We formally capture this notion: Def. 9.",
                "A (deontic) conflict arises between two normative positions N and N under a substitution Ïƒ, denoted as conflict(N, N , Ïƒ), if and only if N = prh(Â¯I), N = obl(Â¯I ) and unify(Â¯I,Â¯I , Ïƒ).",
                "That is, a prohibition and an obligation are in conflict if, and only if, their illocutions unify under Ïƒ.",
                "The substitution Ïƒ, called here the conflict set, unifies the agents, roles and atomic formulae.",
                "We assume that unify is a suitable implementation of a unification algorithm which i) always terminates (possibly failing, if a unifier cannot be found); ii) is correct; and iii) has linear computational complexity.",
                "Inconsistencies caused by the same illocution being simultaneously permitted and prohibited can be formalised similarly.",
                "In this paper we focus on prohibition/obligation conflicts, but the computational machinery introduced in Section 6.1 can equally be used to detect prohibition/permission inconsistencies, if we substitute modality obl for per. 5.",
                "FORMALISING CONFLICT-FREEDOM In this section we introduce some background knowledge on CPNs assuming a basic understanding of ordinary Petri Nets.",
                "For technical details we refer the reader to [16].",
                "We then map NSs to CPNs and analyse their properties.",
                "CPNs combine the strength of Petri nets with the strength of functional programming languages.",
                "On the one hand, Petri nets provide the primitives for the description of the synchronisation of concurrent processes.",
                "As noticed in [16], CPNs have a semantics which builds upon true concurrency, instead of interleaving.",
                "In our opinion, a true-concurrency semantics is easier to work with because it is the way we envisage the connection between the coordination level and the normative level of a multi-agent system to be.",
                "On the other hand, the functional programming languages used by CPNs provide the primitives for the definition of data types and the manipulation of their data values.",
                "Thus, we can readily translate expressions of a <br>normative structure</br>.",
                "Last but not least, CPNs have a well-defined semantics which unambiguously defines the behaviour of each CPN.",
                "Furthermore, CPNs have a large number of formal analysis methods and tools by which properties of CPNs can be proved.",
                "Summing up, CPNs provide us with all the necessary features to formally reason about normative structures given that an adequate mapping is provided.",
                "In accordance with Petri nets, the states of a CPN are represented by means of places.",
                "But unlike Petri Nets, each place has an associated data type determining the kind of data which the place may contain.",
                "A state of a CPN is called a marking.",
                "It consists of a number of tokens positioned on the individual places.",
                "Each token carries a data value which has the type of the corresponding place.",
                "In general, a place may contain two or more tokens with the same data value.",
                "Thus, a marking of a CPN is a function which maps each place into a multi-set2 of tokens of the correct type.",
                "One often refers to the token values as token colours and one also refers to the data types as colour sets.",
                "The types of a CPN can be arbitrarily complex.",
                "Actions in a CPN are represented by means of transitions.",
                "An incoming arc into a transition from a place indicates that the transition may remove tokens from the corresponding place while an outgoing arc indicates that the transition may add tokens.",
                "The exact number of tokens and their data values are determined by the arc expressions, which are encoded using the programming language chosen for the CPN.",
                "A transition is enabled in a CPN if and only if all the 2 A multi-set (or bag) is an extension to the notion of set, allowing the possibility of multiple appearances of the same element.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 639 variables in the expressions of its incoming arcs are bound to some value(s) (each one of these bindings is referred to as a binding element).",
                "If so, the transition may occur by removing tokens from its input places and adding tokens to its output places.",
                "In addition to the arc expressions, it is possible to attach a boolean guard expression (with variables) to each transition.",
                "Putting all the elements above together we obtain a formal definition of CPN that shall be employed further ahead for mapping purposes.",
                "Def. 10.",
                "A CPN is a tuple Î£, P, T, A, N, C, G, E, I where: (i) Î£ is a finite set of non-empty types, also called colour sets; (ii) P is a finite set of places; (iii) T is a finite set of transitions; (iv) A is a finite set of arcs; (v) N is a node function defined from A into P Ã— T âˆª T Ã— P; (vi) C is a colour function from P into Î£; (vii) G is a guard function from T into expressions; (viii) E is an arc expression function from A into expressions; (ix) I is an initialisation function from P into closed expressions; Notice that the informal explanation of the enabling and occurrence rules given above provides the foundations to understand the behaviour of a CPN.",
                "In accordance with ordinary Petri nets, the concurrent behaviour of a CPN is based on the notion of step.",
                "Formally, a step is a non-empty and finite multi-set over the set of all binding elements.",
                "Let step S be enabled in a marking M. Then, S may occur, changing the marking M to M .",
                "Moreover, we say that marking M is directly reachable from marking M by the occurrence of step S, and we denote it by M[S > M .",
                "A finite occurrence sequence is a finite sequence of steps and markings: M1[S1 > M2 . . .",
                "Mn[Sn > Mn+1 such that n âˆˆ N and Mi[Si > Mi+1 âˆ€i âˆˆ {1, . . . , n}.",
                "The set of all possible markings reachable for a net Net from a marking M is called its reachability set, and is denoted as R(Net, M). 5.1 Mapping to Coloured Petri Nets Our <br>normative structure</br> is a labelled bi-partite graph.",
                "The same is true for a Coloured Petri Net.",
                "We are presenting a mapping f from one to the other, in order to provide semantics for the <br>normative structure</br> and prove properties about it by using well-known theoretical results from work on CPNs.",
                "The mapping f makes use of correspondences between normative scenes and CPN places, normative transitions and CPN transitions and finally, between arc labels and CPN arc expressions.",
                "S â†’ P B â†’ T Lin âˆª Lout â†’ E The set of types is the singleton set containing the colour NP (i.e.",
                "Î£ = {NP}).",
                "This complex type is structured as follows (we use CPN-ML [4] syntax): color NPT = with Obl | Per | Prh | NoMod color IP = with inform | declare | offer color UTT = record illp : IP ag1, role1, ag2, role2 : string content: string time : int color NP = record mode : NPT illoc : UTT Modelling illocutions as norms without modality (NoMod) is a formal trick we use to ensure that sub-nets can be combined as explained below.",
                "Arcs are mapped almost directly.",
                "A is a finite set of arcs and N is a node function, such that âˆ€a âˆˆ A âˆƒa âˆˆ Ain âˆªAout .",
                "N(a) = a .",
                "The initialisation function I is defined as I(p) = Î”s (âˆ€s âˆˆ S where p is obtained from s using the mapping; remember that s = ids, Î”s ).",
                "Finally, the colour function C assigns the colour NP to every place: C(p) = NP (âˆ€p âˆˆ P).",
                "We are not making use of the guard function G. In future work, this function can be used to model constraints when we extend the expressiveness of our norm language. 5.2 Properties of Normative Structures Having defined the mapping from normative structures to Coloured Petri Nets, we now look at properties of CPNs that help us understand the complexity of conflict detection.",
                "One question we would like to answer is, whether at a given point in time, a given <br>normative structure</br> is conflict-free.",
                "Such a snapshot of a <br>normative structure</br> corresponds to a marking in the mapped CPN.",
                "Def. 11.",
                "Given a marking Mi, this marking is conflictfree if Â¬âˆƒp âˆˆ P. âˆƒnp1, np2 âˆˆ Mi(p) such that np1.mode = Obl and np2.mode = Prh and np1.illoc and np2.illoc unify under a valid substitution.",
                "Another interesting question would be, whether a conflict will occur from such a snapshot of the system by propagating the normative positions.",
                "In order to answer this question, we first translate the snapshot of the <br>normative structure</br> to the corresponding CPN and then execute the finite occurence sequence of markings and steps, verifying the conflict-freedom of each marking as we go along.",
                "Def. 12.",
                "Given a marking Mi, a finite occurrence sequence Si, Si+1, ..., Sn is called conflict-free, if and only if Mi[Si > Mi+1 . . .",
                "Mn[Sn > Mn+1 and Mk is conflict-free for all k such that i â‰¤ k â‰¤ n + 1.",
                "However, the main question we would like to investigate, is whether or not a given <br>normative structure</br> is conflictresistant, that is, whether or not the agents enacting the MAS are able to bring about conflicts through their actions.",
                "As soon as one includes the possibility of actions (or utterances) from autonomous agents, one looses determinism.",
                "Having mapped the <br>normative structure</br> to a CPN, we now add CPN models of the agents interactions.",
                "Each form of agent interaction (i.e. each activity) can be modelled using CPNs along the lines of Cost et al. [5].",
                "These nondeterministic CPNs feed tokens into the CPN that models the <br>normative structure</br>.",
                "This leads to the introduction of non-determinism into the combined CPN.",
                "The lower half of figure 3 shows part of a CPN model of an agent protocol where the arc denoted with 1 represents some utterance of an illocution by an agent.",
                "The target transition of this arc, not only moves a token on to the next state of this CPN, but also places a token in the place corresponding to the appropriate normative scene in the CPN model of the <br>normative structure</br> (via arc 2).",
                "Transition 3 finally could propagate that token in form of an obligation, for example.",
                "Thus, from a given marking, many different occurrence sequences are possible depending on the agents actions.",
                "We make use of the reachability set R to define a situation in which agents cannot cause conflicts. 640 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) Figure 3: Constructing the combined CPN Def. 13.",
                "Given a net N, a marking M is conflict-resistant if and only if all markings in R(N,M) are conflict-free.",
                "Checking conflict-freedom of a marking can be done in polynomial time by checking all places of the CPN for conflicting tokens.",
                "Conflict-freedom of an occurrence sequence in the CPN that represents the <br>normative structure</br> can also be done in polynomial time since this sequence is deterministic given a snapshot.",
                "Whether or not a <br>normative structure</br> is designed safely corresponds to checking the conflict-resistance of the initial marking M0.",
                "Now, verifying conflict-resistance of a marking becomes a very difficult task.",
                "It corresponds to the reachability problem in a CPN: can a state be reached or a marking achieved, that contains a conflict?.",
                "This reachability problem is known to be NP-complete for ordinary Petri Nets [22] and since CPNs are functionally identical, we cannot hope to verify conflict-resistance of a <br>normative structure</br> off-line in a reasonable amount of time.",
                "Therefore, distributed, run-time mechanisms are needed to ensure that a <br>normative structure</br> maintains consistency.",
                "We present one such mechanism in the following section. 6.",
                "MANAGING NORMATIVE STRUCTURES Once a conflict (as defined in Section 4) has been detected, we propose to employ the unifier to resolve the conflict.",
                "In our example, if the variables in prh(inform(a1, r1, a2, r2, p(Y, d), T )) do not get the values specified in substitution Ïƒ then there will not be a conflict.",
                "However, rather than computing the complement set of a substitution (which can be an infinite set) we propose to annotate the prohibition with the unifier itself and use it to determine what the variables of that prohibition cannot be in future unifications in order to avoid a conflict.",
                "We therefore denote annotated prohibitions as prh(Â¯I) Î£, where Î£ = {Ïƒ1, . . . , Ïƒn}, is a set of unifiers.",
                "Annotated norms3 are interpreted as deontic constructs with curtailed influences, that is, their effect (on agents, roles and illocutions) has been limited by the set Î£ of unifiers.",
                "A prohibition may be in conflict with various obligations in a given normative scene s = id, Î” and we need to record (and possibly avoid) all these conflicts.",
                "We define below an algorithm which ensures that a normative position will be added to a normative scene in such a way that it will not cause any conflicts. 3 Although we propose to curtail prohibitions, the same machinery can be used to define the curtailment of obligations instead.",
                "These different policies are dependent on the intended deontic semantics and requirements of the systems addressed.",
                "For instance, some MASs may require that their agents should not act in the presence of conflicts, that is, the obligation should be curtailed. 6.1 Conflict Resolution We propose a fine-grained way of resolving normative conflicts via unification.",
                "We detect the overlapping of the influences of norms , i.e. how they affect the behaviour of the concerned agents, and we curtail the influence of the normative position, by appropriately using the annotations when checking if the norm applies to illocutions.",
                "The algorithm shown in Figure 4 depicts how we maintain a conflict-free set of norms.",
                "It adds a given norm N to an existing, conflictfree normative state Î”, obtaining a resulting new normative state Î” which is conflict-free, that is, its prohibitions are annotated with a set of conflict sets indicating which bindings for variables have to be avoided for conflicts not to take place. algorithm addNorm(N, Î”) begin 1 timestamp(N) 2 case N of 3 per(Â¯I): Î” := Î” âˆª {N} 4 prh(I): if N âˆˆ Î” s.t. conflict(N, N , Ïƒ) then Î” := Î” 5 else Î” := Î” âˆª {N} 6 prh(Â¯I): 7 begin 8 Î£ := âˆ… 9 for each N âˆˆ Î” do 10 if conflict(N, N , Ïƒ) then Î£ := Î£ âˆª {Ïƒ} 11 Î” := Î” âˆª {N Î£} 12 end 13 obl(Â¯I): 14 begin 15 Î”1 := âˆ…; Î”2 := âˆ… 16 for each (N Î£) âˆˆ Î” do 17 if N = prh(I) then 18 if conflict(N , N, Ïƒ) then Î”1 := Î”1 âˆª {N Î£} 19 else nil 20 else 21 if conflict(N , N, Ïƒ) then 22 begin 23 Î”1 := Î”1 âˆª {N Î£} 24 Î”2 := Î”2 âˆª {N (Î£ âˆª {Ïƒ})} 25 end 26 Î” := (Î” âˆ’ Î”1) âˆª Î”2 âˆª {N} 27 end 28 end case 29 return Î” end Figure 4: Algorithm to Preserve Conflict-Freedom The algorithm uses a case of structure to differentiate the different possibilities for a given norm N. Line 3 addresses the case when the given norm is a permission: N is simply added to Î”.",
                "Lines 4-5 address the case when we attempt to add a ground prohibition to a normative state: if it conflicts with any obligation, then it is discarded; otherwise it is added to the normative state.",
                "Lines 6-12 describe the situation when the normative position to be added is a nonground prohibition.",
                "In this case, the algorithm initialises Î£ to an empty set and loops (line 9-10) through the norms N in the old normative state Î”.",
                "Upon finding one that conflicts with N, the algorithm updates Î£ by adding the newly found conflict set Ïƒ to it (line 10).",
                "By looping through Î”, we are able to check any conflicts between the new prohibition and the existing obligations, adequately building the annotation Î£ to be used when adding N to Î” in line 11.",
                "Lines 13-27 describe how a new obligation is accommodated to an existing normative state.",
                "We make use of two initially empty, temporary sets, Î”1, Î”2.",
                "The algorithm loops through Î” (lines 16-25) picking up those annotated prohibitions N Î£ which conflict with the new obligation.",
                "There are, however, two cases to deal with: the one when a ground The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 641 prohibition is found (line 17), and its exception, covering non-ground prohibitions (line 20).",
                "In both cases, the old prohibition is stored in Î”1 (lines 18 and 23) to be later removed from Î” (line 26).",
                "However, in the case of a nonground prohibition, the algorithm updates its annotation of conflict sets (line 24).",
                "The loop guarantees that an exhaustive (linear) search through a normative state takes place, checking if the new obligation is in conflict with any existing prohibitions, possibly updating the annotations of these conflicting prohibitions.",
                "In line 26 the algorithm builds the new updated Î” by removing the old prohibitions stored in Î”1 and adding the updated prohibitions stored in Î”2 (if any), as well as the new obligation N. Our proposed algorithm is correct in that, for a given normative position N and a normative state Î”, it provides a new normative state Î” in which all prohibitions have annotations recording how they unify with existing obligations.",
                "The annotations can be empty, though: this is the case when we have a ground prohibition or a prohibition which does not unify/conflict with any obligation.",
                "Permissions do not affect our algorithm and they are appropriately dealt with (line 3).",
                "Any attempt to insert a ground prohibition which conflicts, yields the same normative state (line 4).",
                "When a new obligation is being added then the algorithm guarantees that all prohibitions are considered (lines 14-27), leading to the removal of conflicting ground prohibitions or the update of annotations of non-ground prohibitions.",
                "The algorithm always terminates: the loops are over a finite set Î” and the conflict checks and set operations always terminate.",
                "The complexity of the algorithm is linear: the set Î” is only examined once for each possible case of norm to be added.",
                "When managing normative states we may also need to remove normative positions.",
                "This is straightforward: permissions can be removed without any problems; annotated prohibitions can also be removed without further considerations; obligations, however, require some housekeeping.",
                "When an obligation is to be removed, we must check it against all annotated prohibitions in order to update their annotations.",
                "We apply the conflict check and obtain a unifier, then remove this unifier from the prohibitions annotation.",
                "We invoke the removal algorithm as removeNorm(N, Î”): it returns a new normative state Î” in which N has been removed, with possible alterations to other normative positions as explained. 6.2 Enactment of a <br>normative structure</br> The enactment of a <br>normative structure</br> amounts to the parallel, distributed execution of normative scenes and normative transitions.",
                "For illustrative purposes, hereafter we shall describe the interplay between the payment and delivery normative scenes and the normative transition nt linking them in the upper half of figure 2.",
                "With this aim, consider for instance that obl(inform(jules, client, rod, acc, pay(copper, 400, 350), T) âˆˆ Î”payment and that Î”delivery holds prh(inform(rod,wm, jules, client, delivered(Z, Q), T)).",
                "Such states indicate that client Jules is obliged to pay Â£400 for 350kg of copper to accountant Rod according to the payment normative scene, whereas Rod, taking up the role of warehouse manager this time, is prohibited to deliver anything to client Jules according to the delivery normative scene.",
                "For each normative scene, the enactment process goes as follows.",
                "Firstly, it processes its incoming message queue that contains three types of messages: utterances from the activity it is linked to; and normative commands either to add or remove normative positions.",
                "For instance, in our example, the payment normative scene collects the illocution I = utt((inform(jules, client, rod, acc, pay(copper, 400, 350), 35)) standing for client Jules pending payment for copper (via arrow A in figure 2).",
                "Utterances are timestamped and subsequently added to the normative state.",
                "We would have Î”payment = Î”payment âˆª {I}, in our example.",
                "Upon receiving normative commands to either add or remove a normative position, the normative scene invokes the corresponding addition or removal algorithm described in Section 6.1.",
                "Secondly, the normative scene acknowledges its state change by sending a trigger message to every outgoing normative transition it is connected to.",
                "In our example, the payment normative scene would be signalling its state change to normative transition nt.",
                "For normative transitions, the process works differently.",
                "Because each normative transition controls the operation of a single rule, upon receiving a trigger message, it polls every incoming normative scene for substitutions for the relevant illocution schemata on the LHS of its rule.",
                "In our example, nt (being responsible for the rule described in Section 3.4), would poll the payment normative scene (via arrow B) for substitutions.",
                "Upon receiving replies from them (in the form of sets of substitutions together with time-stamps), it has to unify substitutions from each of these normative scenes.",
                "For each unification it finds, the rule is fired, and hence the corresponding normative command is sent along to the output normative scene.",
                "The normative transition then keeps track of the firing message it sent on and of the time-stamps of the normative positions that triggered the firing.",
                "This is done to ensure that the very same normative positions in the LHS of a rule only trigger its firing once.",
                "In our example, nt would be receiving Ïƒ = {X/jules, Y/rod, Z/copper, Q/350} from the payment normative scene.",
                "Since the substitions in Ïƒ unify with nts rule, the rule is fired, and the normative command add(delivery : obl(rod, wm, jules, client, delivered(copper, 350), T)) is sent along to the delivery normative scene to oblige Rod to deliver to client Jules 350kg of copper.",
                "After that, the delivery normative scene would invoke the addNorm algorithm from figure 4 with Î”delivery and N = obl(rod, wm, jules, client, delivered(copper, 350)) as arguments. 7.",
                "RELATED WORK AND CONCLUSIONS Our contributions in this paper are three-fold.",
                "Firstly, we introduce an approach for the management of and reasoning about norms in a distributed manner.",
                "To our knowledge, there is little work published in this direction.",
                "In [8, 21], two languages are presented for the distributed enforcement of norms in MAS.",
                "However, in both works, each agent has a local message interface that forwards legal messages according to a set of norms.",
                "Since these interfaces are local to each agent, norms can only be expressed in terms of actions of that agent.",
                "This is a serious disadvantage, e.g. when one needs to activate an obligation to one agent due to a certain message of another one.",
                "The second contribution is the proposal of a <br>normative structure</br>.",
                "The notion is fruitful because it allows the separation of normative and procedural concerns.",
                "The <br>normative structure</br> we propose makes evident the similarity between the propagation of normative positions and the propagation 642 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) of tokens in Coloured Petri Nets.",
                "That similarity readily suggests a mapping between the two, and gives grounds to a convenient analytical treatment of the <br>normative structure</br>, in general, and the complexity of conflict detection, in particular.",
                "The idea of modelling interactions (in the form of conversations) via Petri Nets has been investigated in [18], where the interaction medium and individual agents are modelled as CPN sub-nets that are subsequently combined for analysis.",
                "In [5], conversations are first designed and analysed at the level of CPNs and thereafter translated into protocols.",
                "Lin et al. [20] map conversation schemata to CPNs.",
                "To our knowledge, the use of this representation in the support of conflict detection in regulated MAS has not been reported elsewhere.",
                "Finally, we present a distributed mechanism to resolve normative conflicts.",
                "Sartor [25] treats normative conflicts from the point of view of legal theory and suggests a way to order the norms involved.",
                "His idea is implemented in [12] but requires a central resource for norm maintenance.",
                "The approach to conflict detection and resolution is an adaptation and extension of the work on instantiation graphs reported in [17] and a related algorithm in [27].",
                "The algorithm presented in the current paper can be used to manage normative states distributedly: normative scenes that happen in parallel have an associated normative state Î” to which the algorithm is independently applied each time a new norm is to be introduced.",
                "These three contributions we present in this paper open many possibilities for future work.",
                "We should mention first, that as a broad strategy we are working on a generalisation of the notion of <br>normative structure</br> to make it operate with different coordination models, with richer deontic content and on top of different computational realisations of regulated MAS.",
                "As a first step in this direction we are taking advantage of the de-coupling between interaction protocols and declarative normative guidance that the <br>normative structure</br> makes available, to provide a normative layer for electronic institutions (as defined in [1]).",
                "We expect such coupling will endow electronic institutions with a more flexible -and more expressive- normative environment.",
                "Furthermore, we want to extend our model along several directions: (1) to handle negation and constraints as part of the norm language, and in particular the notion of time; (2) to accommodate multiple, hierarchical norm authorities based on roles, along the lines of Cholvy and Cuppens [3] and power relationships as suggested by Carabelea et al. [2]; (3) to capture in the conflict resolution algorithm different semantics relating the deontic notions by supporting different axiomations (e.g., relative strength of prohibition versus obligation, default deontic notions, deontic inconsistencies).",
                "On the theoretical side, we intend to use analysis techniques of CPNs in order to characterise classes of CPNs (e.g., acyclic, symmetric, etc.) corresponding to families of Normative Structures that are susceptible to tractable offline conflict detection.",
                "The combination of these techniques along with our online conflict resolution mechanisms is intended to endow MAS designers with the ability to incorporate norms into their systems in a principled way. 8.",
                "REFERENCES [1] J. L. Arcos, M. Esteva, P. Noriega, J.",
                "A. RodrÂ´Ä±guez, and C. Sierra.",
                "Engineering open environments with electronic institutions.",
                "Journal on Engineering Applications of Artificial Intelligence, 18(2):191-204, 2005. [2] C. Carabelea, O. Boissier, and C. Castelfranchi.",
                "Using social power to enable agents to reason about being part of a group.",
                "In 5th Internat.",
                "Workshop, ESAW 2004, pages 166-177, 2004. [3] L. Cholvy and F. Cuppens.",
                "Solving normative conflicts by merging roles.",
                "In Fifth International Conference on Artificial Intelligence and Law, Washington, USA, 1995. [4] S. Christensen and T. B. Haagh.",
                "Design CPN - overview of CPN ML syntax.",
                "Technical report, University of Aarhus, 1996. [5] R. S. Cost, Y. Chen, T. W. Finin, Y. Labrou, and Y. Peng.",
                "Using colored petri nets for conversation modeling.",
                "In Issues in Agent Communication, pages 178-192, London, UK, 2000. [6] F. Dignum.",
                "Autonomous Agents with Norms.",
                "Artificial Intelligence and Law, 7(1):69-79, 1999. [7] A. Elhag, J. Breuker, and P. Brouwer.",
                "On the Formal Analysis of Normative Conflicts.",
                "Information & Comms.",
                "Techn.",
                "Law, 9(3):207-217, Oct. 2000. [8] M. Esteva, W. Vasconcelos, C. Sierra, and J.",
                "A. RodrÂ´Ä±guez-Aguilar.",
                "Norm consistency in electronic institutions. volume 3171 (LNAI), pages 494-505.",
                "Springer-Verlag, 2004. [9] M. Fitting.",
                "First-Order Logic and Automated Theorem Proving.",
                "Springer-Verlag, New York, U.S.A., 1990. [10] N. Fornara, F. Vigan`o, and M. Colombetti.",
                "An Event Driven Approach to Norms in Artificial Institutions.",
                "In AAMAS05 Workshop: Agents, Norms and Institutions for Regulated Multiagent Systems (ANI@REM), Utrecht, 2005. [11] D. Gaertner, P. Noriega, and C. Sierra.",
                "Extending the BDI architecture with commitments.",
                "In Proceedings of the 9th International Conference of the Catalan Association of Artificial Intelligence, 2006. [12] A. GarcÂ´Ä±a-Camino, P. Noriega, and J.-A.",
                "RodrÂ´Ä±guez-Aguilar.",
                "An Algorithm for Conflict Resolution in Regulated Compound Activities.",
                "In 7th Int.Workshop - ESAW 06, 2006. [13] A. GarcÂ´Ä±a-Camino, J.-A.",
                "RodrÂ´Ä±guez-Aguilar, C. Sierra, and W. Vasconcelos.",
                "A Distributed Architecture for Norm-Aware Agent Societies.",
                "In DALT III, volume 3904 (LNAI), pages 89-105.",
                "Springer, 2006. [14] F. Giunchiglia and L. Serafini.",
                "Multi-language hierarchical logics or: How we can do without modal logics.",
                "Artificial Intelligence, 65(1):29-70, 1994. [15] J. Habermas.",
                "The Theory of Communication Action, Volume One, Reason and the Rationalization of Society.",
                "Beacon Press, 1984. [16] K. Jensen.",
                "Coloured Petri Nets: Basic Concepts, Analysis Methods and Practical Uses (Volume 1).",
                "Springer, 1997. [17] M. Kollingbaum and T. Norman.",
                "Strategies for resolving norm conflict in practical reasoning.",
                "In ECAI Workshop Coordination in Emergent Agent Societies 2004, 2004. [18] J.-L. Koning, G. Francois, and Y. Demazeau.",
                "Formalization and pre-validation for interaction protocols in a multi agent systems.",
                "In ECAI, pages 298-307, 1998. [19] B. Kramer and J. Mylopoulos.",
                "Knowledge Representation.",
                "In S. C. Shapiro, editor, Encyclopedia of Artificial Intelligence, volume 1, pages 743-759.",
                "John Wiley & Sons, 1992. [20] F. Lin, D. H. Norrie, W. Shen, and R. Kremer.",
                "A schema-based approach to specifying conversation policies.",
                "In Issues in Agent Communication, pages 193-204, 2000. [21] N. Minsky.",
                "Law Governed Interaction (LGI): A Distributed Coordination and Control Mechanism (An Introduction, and a Reference Manual).",
                "Technical report, Rutgers University, 2005. [22] T. Murata.",
                "Petri nets: Properties, analysis and applications.",
                "Proceedings of the IEEE, 77(4):541-580, 1989. [23] S. Parsons, C. Sierra, and N. Jennings.",
                "Agents that reason and negotiate by arguing.",
                "Journal of Logic and Computation, 8(3):261-292, 1998. [24] A. Ricci and M. Viroli.",
                "Coordination Artifacts: A Unifying Abstraction for Engineering Environment-Mediated Coordination in MAS.",
                "Informatica, 29:433-443, 2005. [25] G. Sartor.",
                "Normative conflicts in legal reasoning.",
                "Artificial Intelligence and Law, 1(2-3):209-235, June 1992. [26] M. Sergot.",
                "A Computational Theory of Normative Positions.",
                "ACM Trans.",
                "Comput.",
                "Logic, 2(4):581-622, 2001. [27] W. W. Vasconcelos, M. Kollingbaum, and T. Norman.",
                "Resolving Conflict and Inconsistency in Norm-Regulated Virtual Organisations.",
                "In Proceedings of AAMAS 07, Hawaii, USA, 2007.",
                "IFAAMAS. [28] G. H. von Wright.",
                "Norm and Action: A Logical Inquiry.",
                "Routledge and Kegan Paul, London, 1963. [29] M. Wooldridge.",
                "An Introduction to Multiagent Systems.",
                "John Wiley & Sons, Chichester, UK, Feb. 2002.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 643"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Para regular el comportamiento de los agentes autÃ³nomos que participan en mÃºltiples actividades relacionadas, proponemos un modelo normativo, la \"estructura normativa\" (NS), un artefacto basado en la propagaciÃ³n de posiciones normativas (obligaciones, prohibiciones, permisos), como consecuencias de las acciones de los agentes.",
                "Para modelar la separaciÃ³n de las preocupaciones entre el nivel de coordinaciÃ³n (interacciones de los agentes) y el nivel normativo (propagaciÃ³n de posiciones normativas), proponemos un artefacto llamado \"estructura normativa\" (NS).",
                "A continuaciÃ³n, en la SecciÃ³n 3 definimos formalmente el artefacto de \"estructura normativa\".",
                "En el resto del documento, construiremos sobre este escenario para ejemplificar la nociÃ³n de \"estructura normativa\" e ilustrar nuestro enfoque para la detecciÃ³n y resoluciÃ³n de conflictos en un entorno distribuido.3.",
                "La \"estructura normativa\" en los agentes de masa interactÃºa segÃºn los protocolos que naturalmente se distribuyen.",
                "En esta secciÃ³n, primero presentamos un lenguaje simple que captura estos aspectos e introducimos formalmente las nociones de la escena normativa, la regla de transiciÃ³n normativa y la \"estructura normativa\".",
                "Las reglas asignan una \"estructura normativa\" existente a una nueva \"estructura normativa\" donde solo cambia el estado de las escenas normativas.",
                "Esta capa se representa como un grÃ¡fico bipartito que llamamos \"estructura normativa\".",
                "Una \"estructura normativa\" se refiere a escenas normativas y transiciones normativas que especifican quÃ© posiciones normativas se generarÃ¡n o eliminarÃ¡n en quÃ© escenas normativas.",
                "Una \"estructura normativa\" es una grÃ¡fica bipartita etiquetada ns = nodos, bordes, LIN, lout.",
                "Los dos primeros puntos aseguran que cada fÃ³rmulas atÃ³micas en el LHS de una regla de transiciÃ³n normativa etiquete un arco que ingresa a la transiciÃ³n normativa apropiada en la \"estructura normativa\", y que la fÃ³rmula atÃ³mica en el RHS etiqueta el arco saliente correspondiente.",
                "AquÃ­ comenzamos a definir la semÃ¡ntica prevista de las reglas de transiciÃ³n normativa describiendo cÃ³mo una regla cambia una escena normativa de una \"estructura normativa\" existente que produce una nueva \"estructura normativa\".",
                "Mostramos en la Figura 2 una representaciÃ³n diagramÃ¡tica de cÃ³mo las actividades y una \"estructura normativa\" se refieren: Contrato de pago de pago Nivel normativo Registro de salida de la entrega de pagos Nivel de coordinaciÃ³n de negociaciÃ³n Contrato NT Figura 2: Actividades y \"estructura normativa\" A medida que se pronuncian las ilocuciones durante las actividades, normativo, normativosurgen posiciones.",
                "Por lo tanto, podemos traducir fÃ¡cilmente expresiones de una \"estructura normativa\".",
                "El conjunto de todas las marcas posibles accesibles para una red neta de una marca M se llama su conjunto de accesibilidad, y se denota como R (NET, M).5.1 Mapeo a las redes de Petri coloreadas Nuestra \"estructura normativa\" es un grÃ¡fico bipartito etiquetado.",
                "Estamos presentando un mapeo F de uno a otro, para proporcionar semÃ¡ntica para la \"estructura normativa\" y probar propiedades al respecto mediante el uso de resultados teÃ³ricos bien conocidos del trabajo en CPN.",
                "Una pregunta que nos gustarÃ­a responder es que, si en un momento dado, una \"estructura normativa\" dada estÃ¡ libre de conflictos.",
                "Tal instantÃ¡nea de una \"estructura normativa\" corresponde a una marca en la CPN mapeada.",
                "Para responder a esta pregunta, primero traducimos la instantÃ¡nea de la \"estructura normativa\" a la CPN correspondiente y luego ejecutamos la secuencia finita de ocurrencia de marcas y pasos, verificando la libertad de conflicto de cada marca a medida que avanzamos.",
                "Sin embargo, la pregunta principal que nos gustarÃ­a investigar es si una \"estructura normativa\" dada es conflectora, es decir, si los agentes que promulgan o no pueden lograr conflictos a travÃ©s de sus acciones.",
                "Habiendo mapeado la \"estructura normativa\" a un CPN, ahora agregamos modelos CPN de las interacciones de los agentes.",
                "Estos CPN no deterministas alimentan tokens en la CPN que modela la \"estructura normativa\".",
                "La transiciÃ³n objetivo de este arco, no solo mueve una ficha al siguiente estado de este CPN, sino que tambiÃ©n coloca una ficha en el lugar correspondiente a la escena normativa apropiada en el modelo de CPN de la \"estructura normativa\" (a travÃ©s de ARC 2).",
                "La falta de conflicto de una secuencia de ocurrencia en la CPN que representa la \"estructura normativa\" tambiÃ©n se puede hacer en el tiempo polinomial ya que esta secuencia es determinista dada una instantÃ¡nea.",
                "Si se diseÃ±a o no una \"estructura normativa\" corresponde de forma segura para verificar la resistencia al conflicto de la marca inicial M0.",
                "Se sabe que este problema de accesibilidad es completo para las redes de Petri ordinarias [22] y dado que las CPN son funcionalmente idÃ©nticas, no podemos esperar verificar la resistencia de conflictos de una \"estructura normativa\" fuera de lÃ­nea en un tiempo razonable.",
                "Por lo tanto, se necesitan mecanismos distribuidos de tiempo de ejecuciÃ³n para garantizar que una \"estructura normativa\" mantenga la consistencia.",
                "Invocamos el algoritmo de eliminaciÃ³n como removenorm (n, Î´): devuelve un nuevo estado normativo Î´ en el que se ha eliminado N, con posibles alteraciones a otras posiciones normativas como se explica.6.2 La promulgaciÃ³n de una \"estructura normativa\" La promulgaciÃ³n de una \"estructura normativa\" equivale a la ejecuciÃ³n paralela y distribuida de escenas normativas y transiciones normativas.",
                "La segunda contribuciÃ³n es la propuesta de una \"estructura normativa\".",
                "La \"estructura normativa\" que proponemos hace evidente la similitud entre la propagaciÃ³n de posiciones normativas y la propagaciÃ³n 642 la sexta intl.",
                "Esa similitud sugiere fÃ¡cilmente un mapeo entre los dos, y da motivos a un tratamiento analÃ­tico conveniente de la \"estructura normativa\", en general, y la complejidad de la detecciÃ³n de conflictos, en particular.",
                "Debemos mencionar primero, que, como estrategia amplia, estamos trabajando en una generalizaciÃ³n de la nociÃ³n de \"estructura normativa\" para que funcione con diferentes modelos de coordinaciÃ³n, con contenido deÃ³ntico mÃ¡s rico y ademÃ¡s de diferentes realizaciones computacionales de MAS reguladas.",
                "Como primer paso en esta direcciÃ³n, estamos aprovechando el desacoplamiento entre los protocolos de interacciÃ³n y la orientaciÃ³n normativa declarativa que la \"estructura normativa\" pone a disposiciÃ³n, para proporcionar una capa normativa para las instituciones electrÃ³nicas (como se define en [1])."
            ],
            "translated_text": "",
            "candidates": [
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "Estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa",
                "estructura normativa"
            ],
            "error": []
        },
        "bi-partite graph": {
            "translated_key": "grafo bipartito",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Distributed Norm Management in Regulated Multi-Agent Systems âˆ— Dorian Gaertner Dept.",
                "of Computing, Imperial College London, London SW7 2AZ, United Kingdom dg00@doc.ic.ac.uk Andres Garcia-Camino, Pablo Noriega, J.-A.",
                "Rodriguez-Aguilar IIIA-CSIC, 08193 Bellaterra, Spain {andres,pablo,jar}@iiia.csic.es Wamberto Vasconcelos Dept. of Computing Science, University of Aberdeen, Aberdeen AB24 3UE, United Kingdom wvasconcelos@acm.org ABSTRACT Norms are widely recognised as a means of coordinating multi-agent systems.",
                "The distributed management of norms is a challenging issue and we observe a lack of truly distributed computational realisations of normative models.",
                "In order to regulate the behaviour of autonomous agents that take part in multiple, related activities, we propose a normative model, the Normative Structure (NS), an artifact that is based on the propagation of normative positions (obligations, prohibitions, permissions), as consequences of agents actions.",
                "Within a NS, conflicts may arise due to the dynamic nature of the MAS and the concurrency of agents actions.",
                "However, ensuring conflict-freedom of a NS at design time is computationally intractable.",
                "We show this by formalising the notion of conflict, providing a mapping of NSs into Coloured Petri Nets and borrowing well-known theoretical results from that field.",
                "Since online conflict resolution is required, we present a tractable algorithm to be employed distributedly.",
                "We then demonstrate that this algorithm is paramount for the distributed enactment of a NS.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Languages and structures General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION A fundamental feature of open, regulated multi-agent systems in which autonomous agents interact, is that participating agents are meant to comply with the conventions of the system.",
                "Norms can be used to model such conventions and hence as a means to regulate the observable behaviour of agents [6, 29].",
                "There are many contributions on the subject of norms from sociologists, philosophers and logicians (e.g., [15, 28]).",
                "However, there are very few proposals for computational realisations of normative models - the way norms can be integrated in the design and execution of MASs.",
                "The few that exist (e.g. [10, 13, 24]), operate in a centralised manner which creates bottlenecks and single points-of-failure.",
                "To our knowledge, no proposal truly supports the distributed enactment of normative environments.",
                "In our paper we approach that problem and propose means to handle conflicting commitments in open, regulated, multiagent systems in a distributed manner.",
                "The type of regulated MAS we envisage consists of multiple, concurrent, related activities where agents interact.",
                "Each agent may concurrently participate in several activities, and change from one activity to another.",
                "An agents actions within an activity may have consequences in the form of normative positions (i.e. obligations, permissions, and prohibitions) [26] that may constrain its future behaviour.",
                "For instance, a buyer agent who runs out of credit may be forbidden to make further offers, or a seller agent is obliged to deliver after closing a deal.",
                "We assume that agents may choose not to fulfill all their obligations and hence may be sanctioned by the MAS.",
                "Notice that, when activities are distributed, normative positions must flow from the activities in which they are generated to those in which they take effect.",
                "For instance, the sellers obligation above must flow (or be propagated) from a negotiation activity to a delivery activity.",
                "Since in an open, regulated MAS one cannot embed normative aspects into the agents design, we adopt the view that the MAS should be supplemented with a separate set of norms that further regulates the behaviour of participating agents.",
                "In order to model the separation of concerns between the coordination level (agents interactions) and the normative level (propagation of normative positions), we propose an artifact called the Normative Structure (NS).",
                "Within a NS conflicts may arise due to the dynamic nature of the MAS and the concurrency of agents actions.",
                "For instance, an agent may be obliged and prohibited to do the 636 978-81-904262-7-5 (RPS) c 2007 IFAAMAS very same action in an activity.",
                "Since the regulation of a MAS entails that participating agents need to be aware of the validity of those actions that take place within it, such conflicts ought to be identified and possibly resolved if a claim of validity is needed for an agent to engage in an action or be sanctioned.",
                "However, ensuring conflict-freedom of a NS at design time is computationally intractable.",
                "We show this by formalising the notion of conflict, providing a mapping of NSs into Coloured Petri Nets (CPNs) and borrowing well-known theoretical results from the field of CPNs.",
                "We believe that online conflict detection and resolution is required.",
                "Hence, we present a tractable algorithm for conflict resolution.",
                "This algorithm is paramount for the distributed enactment of a NS.",
                "The paper is organised as follows.",
                "In Section 2 we detail a scenario to serve as an example throughout the paper.",
                "Next, in Section 3 we formally define the normative structure artifact.",
                "Further on, in Section 4 we formalise the notion of conflict to subsequently analyse the complexity of conflict detection in terms of CPNs in Section 5.",
                "Section 6 describes the computational management of NSs by describing their enactment and presenting an algorithm for conflict resolution.",
                "Finally, we comment on related work, draw conclusions and report on future work in Section 7. 2.",
                "SCENARIO We use a supply-chain scenario in which companies and individuals come together at an online marketplace to conduct business.",
                "The overall transaction procedure may be organised as six distributed activities, represented as nodes in the diagram in Figure 1.",
                "They involve different participants whose behaviour is coordinated through protocols.",
                "In this scenario agents can play one of four roles: marExit Registration Payment Delivery Negotiation Coordination Model Contract Figure 1: Activity Structure of the Scenario ketplace accountant (acc), client, supplier (supp) and warehouse managers (wm).",
                "The arrows connecting the activities represent how agents can move from one activity to another.",
                "After registering at the marketplace, clients and suppliers get together in an activity where they negotiate the terms of their transaction, i.e. prices, amounts of goods to be delivered, deadlines and other details.",
                "In the contract activity, the order becomes established and an invoice is prepared.",
                "The client will then participate in a payment activity, verifying his credit-worthiness and instructing his bank to transfer the correct amount of money.",
                "The supplier in the meantime will arrange for the goods to be delivered (e.g. via a warehouse manager) in the delivery activity.",
                "Finally, agents can leave the marketplace conforming to a predetermined exit protocol.",
                "The marketplace accountant participates in most of the activities as a trusted provider of auditing tools.",
                "In the rest of the paper we shall build on this scenario to exemplify the notion of normative structure and to illustrate our approach to conflict detection and resolution in a distributed setting. 3.",
                "NORMATIVE STRUCTURE In MASs agents interact according to protocols which naturally are distributed.",
                "We advocate that actions in one such protocol may have an effect on the enactment of other protocols.",
                "Certain actions can become prohibited or obligatory, for example.",
                "We take normative positions to be obligations, prohibitions and permissions akin to work described in [26].",
                "The intention of adding or removing a normative position we call normative command.",
                "Occurrences of normative positions in one protocol may also have consequences for other protocols1 .",
                "In order to define our norm language and specify how normative positions are propagated, we have been inspired by multi-context systems [14].",
                "These systems allow the structuring of knowledge into distinct formal theories and the definition of relationships between them.",
                "The relationships are expressed as bridge rules - deducibility of formulae in some contexts leads to the deduction of other formulae in other contexts.",
                "Recently, these systems have been successfully used to define agent architectures [11, 23].",
                "The metaphor translates to our current work as follows: the utterance of illocutions and/or the existence of normative positions in some normative scenes leads to the deduction of normative positions in other normative scenes.",
                "We are concerned with the propagation and distribution of normative positions within a network of distributed, normative scenes as a consequence of agents actions.",
                "We take normative scenes to be sets of normative positions and utterances that are associated with an underlying interaction protocol corresponding to an activity.",
                "In this section, we first present a simple language capturing these aspects and formally introduce the notions of normative scene, normative transition rule and normative structure.",
                "We give the intended semantics of these rules and show how to control a MAS via norms in an example. 3.1 Basic Concepts The building blocks of our language are terms and atomic formulae: Def. 1.",
                "A term, denoted as t, is (i) any constant expressed using lowercase (with or without subscripts), e.g. a, b0, c or (ii) any variable expressed using uppercase (with or without subscripts), e.g.",
                "X, Y, Zb or (iii) any function f(t1, . . . , tn), where f is an n-ary function symbol and t1, .., tn are terms.",
                "Some examples of terms and functions are Credit, price or offer(bible, 30) being respectively a variable, a constant and a function.",
                "We will be making use of identifiers throughout the paper, which are constant terms and also need the following definition: Def. 2.",
                "An atomic formula is any construct p(t1, . . . , tn), where p is an n-ary predicate symbol and t1, . . . , tn are terms.",
                "The set of all atomic formulae is denoted as Î”.",
                "We focus on an expressive class of MASs in which interaction is carried out by means of illocutionary speech acts exchanged among participating agents: Def. 3.",
                "Illocutions I are ground atomic formulae which have the form p(ag, r, ag , r , Î´, t) where p is an element of 1 Here, we abstract from protocols and refer to them generically as activities.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 637 a set of illocutionary particles (e.g. inform, request, offer); ag, ag are agent identifiers; r, r are role identifiers; Î´, an arbitrary ground term, is the content of the message, built from a shared content language; t âˆˆ N is a time stamp.",
                "The intuitive meaning of p(ag, r, ag , r , m, t) is that agent ag playing role r sent message m to agent ag playing role r at time t. An example of an illocution is inform(ag4, supp, ag3, client, offer(wire, 12), 10).",
                "Sometimes it is useful to refer to illocutions that are not fully grounded, that is, those that may contain uninstantiated (free) variables.",
                "In the description of a protocol, for instance, the precise values of the message exchanged can be left unspecified.",
                "During the enactment of the protocol agents will produce the actual values which will give rise to a ground illocution.",
                "We can thus define illocution schemata: Def. 4.",
                "An illocution schema Â¯I is any atomic formula p(ag, r, ag , r , Î´, t) in which some of the terms may either be variables or may contain variables. 3.2 Formal Definition of the Notion of NS We first define normative scenes as follows: Def. 5.",
                "A normative scene is a tuple s = ids, Î”s where ids is a scene identifier and Î”s is the set of atomic formulae Î´ (i.e. utterances and normative positions) that hold in s. We will also refer to Î”s as the state of normative scene s. For instance, a snapshot of the state of the delivery normative scene of our scenario could be represented as: Î”s = 8 < : utt(request(sean, client, kev, wm, receive(wire, 200), 20)), utt(accept(kev, wm, sean, client, receive(wire, 200), 30)), obl(inform(kev, wm, sean, client, delivered(wire, 200), 30)) 9 = ; That is, agent Sean taking up the client role has requested agent Kev (taking up the warehouse manager role wm) to receive 200kg of wire, and agent Kev is obliged to deliver 200kg of wire to Sean since he accepted the request.",
                "Note that the state of a normative scene Î”s evolves over time.",
                "These normative scenes are connected to one another via normative transitions that specify how utterances and normative positions in one scene affect other normative scenes.",
                "As mentioned above, activities are not independent since illocutions uttered in some of them may have an effect on other ones.",
                "Normative transition rules define the conditions under which a normative command is generated.",
                "These conditions are either utterances or normative positions associated with a given protocol (denoted e.g. activity : utterance) which yield a normative command, i.e. the addition or removal of another normative position, possibly related to a different activity.",
                "Our transition rules are thus defined: Def. 6.",
                "A normative transition rule R is of the form: R ::= V C V ::= ids : D | V, V D ::= N | utt(Â¯I) N ::= per(Â¯I) | prh(Â¯I) | obl(Â¯I) C ::= add(ids : N) | remove(ids : N) where Â¯I is an illocution schema, N is a normative position (i.e. permission, prohibition or obligation), ids is an identifier for activity s and C is a normative command.",
                "We endow our language with the usual semantics of rulebased languages [19].",
                "Rules map an existing normative structure to a new normative structure where only the state of the normative scenes change.",
                "In the definitions below we rely on the standard concept of substitution [9].",
                "Def. 7.",
                "A normative transition is a tuple b = idb, rb where idb is an identifier and rb is a normative transition rule.",
                "We are proposing to extend the notion of MAS, regulated by protocols, with an extra layer consisting of normative scenes and normative transitions.",
                "This layer is represented as a <br>bi-partite graph</br> that we term normative structure.",
                "A normative structure relates normative scenes and normative transitions specifying which normative positions are to be generated or removed in which normative scenes.",
                "Def. 8.",
                "A normative structure is a labelled <br>bi-partite graph</br> NS = Nodes, Edges, Lin , Lout .",
                "Nodes is a set SâˆªB where S is a set of normative scenes and B is a set of normative transitions.",
                "Edges is a set Ain âˆª Aout where Ain âŠ† S Ã— B is a set of input arcs labelled with an atomic formula using the labelling function Lin : Ain â†’ D; and Aout âŠ† B Ã— S is a set of output arcs labelled with a normative position using the labelling function Lout : Aout â†’ N. The following must hold: 1.",
                "Each atomic formula appearing in the LHS of a rule rb must be of the form (ids : D) where s âˆˆ S and D âˆˆ Î” and âˆƒain âˆˆ Ain such that ain = (s, b) and Lin (ain ) = D. 2.",
                "The atomic formula appearing in the RHS of a rule rb must be of the form add(ids : N) or remove(ids : N) where s âˆˆ S and âˆƒaout âˆˆ Aout such that aout = (b, s) and Lout (aout ) = N. 3. âˆ€a âˆˆ Ain such that a = (s, b) and b = idb, rb and Lin (a) = D then (ids:D) must occur in the LHS of rb. 4. âˆ€a âˆˆ Aout such that a = (b, s) and b = idb, rb and Lout (a) = N then add(ids : N) or remove(ids : N) must occur in the RHS of rb.",
                "The first two points ensure that every atomic formulae on the LHS of a normative transition rule labels an arc entering the appropriate normative transition in the normative structure, and that the atomic formula on the RHS labels the corresponding outgoing arc.",
                "Points three and four ensure that labels from all incoming arcs are used in the LHS of the normative transition rule that these arcs enter into, and that the labels from all outgoing arcs are used in the RHS of the normative transition rule that these arcs leave. 3.3 Intended Semantics The formal semantics will be defined via a mapping to Coloured Petri Nets in Section 5.1.",
                "Here we start defining the intended semantics of normative transition rules by describing how a rule changes a normative scene of an existing normative structure yielding a new normative structure.",
                "Each rule is triggered once for each substitution that unifies the left-hand side V of the rule with the state of the corresponding normative scenes.",
                "An atomic formula (i.e. an utterance or a normative position) holds iff it is unifiable with an utterance or normative position that belongs to the state of the corresponding normative scene.",
                "Every time a rule is triggered, the normative command specified on the right-hand side of that rule is carried out, intending to add or remove a normative position from the state of the corresponding normative scene.",
                "However, addition is not unconditional as conflicts may arise.",
                "This topic will be treated in Sections 4 and 6.1. 638 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.4 Example In our running example we have the following exemplary normative transition rule: â€ž payment : obl(inform(X, client, Y, acc, pay(Z, P, Q), T )), payment : utt(inform(X, client, Y, acc, pay(Z, P, Q), T )) Â« delivery : add(obl(inform(Y, wm, X, client, delivered(Z, Q), T ))) That is, during the payment activity, an obligation on client X to inform accountant Y about the payment P of item Z at time T and the corresponding utterance which fulfills this obligation allows the flow of a norm to the delivery activity.",
                "The norm is an obligation on agent Y (this time taking up the role of the warehouse manager wm) to send a message to client X that item Z has been delivered.",
                "We show in Figure 2 a diagrammatic representation of how activities and a normative structure relate: Payment Delivery Contract Normative Level Exit Registration Payment Delivery Negotiation Coordination Level Contract nt Figure 2: Activities and Normative Structure As illocutions are uttered during activities, normative positions arise.",
                "Utterances and normative positions are combined in transition rules, causing the flow of normative positions between normative scenes.",
                "The connection between the two levels is described in Section 6.2. 4.",
                "CONFLICT DEFINITION The terms deontic conflict and deontic inconsistency have been used interchangeably in the literature.",
                "However, in this paper we adopt the view of [7] in which the authors suggest that a deontic inconsistency arises when an action is simultaneously permitted and prohibited - since a permission may not be acted upon, no real conflict occurs.",
                "The situations when an action is simultaneously obliged and prohibited are, however, deontic conflicts, as both obligations and prohibitions influence behaviours in a conflicting fashion.",
                "The content of normative positions in this paper are illocutions.",
                "Therefore, a normative conflict arises when an illocution is simultaneously obliged and prohibited.",
                "We propose to use the standard notion of unification [9] to detect when a prohibition and a permission overlap.",
                "For instance, an obligation obl(inform(A1, R1, A2, R2, p(c, X), T)) and a prohibition prh(inform(a1, r1, a2, r2, p(Y, d), T )) are in conflict as they unify under Ïƒ = {A1/a1, R1/r1, A2/a2, R2/r2, Y/c, X/d, T/T }).",
                "We formally capture this notion: Def. 9.",
                "A (deontic) conflict arises between two normative positions N and N under a substitution Ïƒ, denoted as conflict(N, N , Ïƒ), if and only if N = prh(Â¯I), N = obl(Â¯I ) and unify(Â¯I,Â¯I , Ïƒ).",
                "That is, a prohibition and an obligation are in conflict if, and only if, their illocutions unify under Ïƒ.",
                "The substitution Ïƒ, called here the conflict set, unifies the agents, roles and atomic formulae.",
                "We assume that unify is a suitable implementation of a unification algorithm which i) always terminates (possibly failing, if a unifier cannot be found); ii) is correct; and iii) has linear computational complexity.",
                "Inconsistencies caused by the same illocution being simultaneously permitted and prohibited can be formalised similarly.",
                "In this paper we focus on prohibition/obligation conflicts, but the computational machinery introduced in Section 6.1 can equally be used to detect prohibition/permission inconsistencies, if we substitute modality obl for per. 5.",
                "FORMALISING CONFLICT-FREEDOM In this section we introduce some background knowledge on CPNs assuming a basic understanding of ordinary Petri Nets.",
                "For technical details we refer the reader to [16].",
                "We then map NSs to CPNs and analyse their properties.",
                "CPNs combine the strength of Petri nets with the strength of functional programming languages.",
                "On the one hand, Petri nets provide the primitives for the description of the synchronisation of concurrent processes.",
                "As noticed in [16], CPNs have a semantics which builds upon true concurrency, instead of interleaving.",
                "In our opinion, a true-concurrency semantics is easier to work with because it is the way we envisage the connection between the coordination level and the normative level of a multi-agent system to be.",
                "On the other hand, the functional programming languages used by CPNs provide the primitives for the definition of data types and the manipulation of their data values.",
                "Thus, we can readily translate expressions of a normative structure.",
                "Last but not least, CPNs have a well-defined semantics which unambiguously defines the behaviour of each CPN.",
                "Furthermore, CPNs have a large number of formal analysis methods and tools by which properties of CPNs can be proved.",
                "Summing up, CPNs provide us with all the necessary features to formally reason about normative structures given that an adequate mapping is provided.",
                "In accordance with Petri nets, the states of a CPN are represented by means of places.",
                "But unlike Petri Nets, each place has an associated data type determining the kind of data which the place may contain.",
                "A state of a CPN is called a marking.",
                "It consists of a number of tokens positioned on the individual places.",
                "Each token carries a data value which has the type of the corresponding place.",
                "In general, a place may contain two or more tokens with the same data value.",
                "Thus, a marking of a CPN is a function which maps each place into a multi-set2 of tokens of the correct type.",
                "One often refers to the token values as token colours and one also refers to the data types as colour sets.",
                "The types of a CPN can be arbitrarily complex.",
                "Actions in a CPN are represented by means of transitions.",
                "An incoming arc into a transition from a place indicates that the transition may remove tokens from the corresponding place while an outgoing arc indicates that the transition may add tokens.",
                "The exact number of tokens and their data values are determined by the arc expressions, which are encoded using the programming language chosen for the CPN.",
                "A transition is enabled in a CPN if and only if all the 2 A multi-set (or bag) is an extension to the notion of set, allowing the possibility of multiple appearances of the same element.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 639 variables in the expressions of its incoming arcs are bound to some value(s) (each one of these bindings is referred to as a binding element).",
                "If so, the transition may occur by removing tokens from its input places and adding tokens to its output places.",
                "In addition to the arc expressions, it is possible to attach a boolean guard expression (with variables) to each transition.",
                "Putting all the elements above together we obtain a formal definition of CPN that shall be employed further ahead for mapping purposes.",
                "Def. 10.",
                "A CPN is a tuple Î£, P, T, A, N, C, G, E, I where: (i) Î£ is a finite set of non-empty types, also called colour sets; (ii) P is a finite set of places; (iii) T is a finite set of transitions; (iv) A is a finite set of arcs; (v) N is a node function defined from A into P Ã— T âˆª T Ã— P; (vi) C is a colour function from P into Î£; (vii) G is a guard function from T into expressions; (viii) E is an arc expression function from A into expressions; (ix) I is an initialisation function from P into closed expressions; Notice that the informal explanation of the enabling and occurrence rules given above provides the foundations to understand the behaviour of a CPN.",
                "In accordance with ordinary Petri nets, the concurrent behaviour of a CPN is based on the notion of step.",
                "Formally, a step is a non-empty and finite multi-set over the set of all binding elements.",
                "Let step S be enabled in a marking M. Then, S may occur, changing the marking M to M .",
                "Moreover, we say that marking M is directly reachable from marking M by the occurrence of step S, and we denote it by M[S > M .",
                "A finite occurrence sequence is a finite sequence of steps and markings: M1[S1 > M2 . . .",
                "Mn[Sn > Mn+1 such that n âˆˆ N and Mi[Si > Mi+1 âˆ€i âˆˆ {1, . . . , n}.",
                "The set of all possible markings reachable for a net Net from a marking M is called its reachability set, and is denoted as R(Net, M). 5.1 Mapping to Coloured Petri Nets Our normative structure is a labelled <br>bi-partite graph</br>.",
                "The same is true for a Coloured Petri Net.",
                "We are presenting a mapping f from one to the other, in order to provide semantics for the normative structure and prove properties about it by using well-known theoretical results from work on CPNs.",
                "The mapping f makes use of correspondences between normative scenes and CPN places, normative transitions and CPN transitions and finally, between arc labels and CPN arc expressions.",
                "S â†’ P B â†’ T Lin âˆª Lout â†’ E The set of types is the singleton set containing the colour NP (i.e.",
                "Î£ = {NP}).",
                "This complex type is structured as follows (we use CPN-ML [4] syntax): color NPT = with Obl | Per | Prh | NoMod color IP = with inform | declare | offer color UTT = record illp : IP ag1, role1, ag2, role2 : string content: string time : int color NP = record mode : NPT illoc : UTT Modelling illocutions as norms without modality (NoMod) is a formal trick we use to ensure that sub-nets can be combined as explained below.",
                "Arcs are mapped almost directly.",
                "A is a finite set of arcs and N is a node function, such that âˆ€a âˆˆ A âˆƒa âˆˆ Ain âˆªAout .",
                "N(a) = a .",
                "The initialisation function I is defined as I(p) = Î”s (âˆ€s âˆˆ S where p is obtained from s using the mapping; remember that s = ids, Î”s ).",
                "Finally, the colour function C assigns the colour NP to every place: C(p) = NP (âˆ€p âˆˆ P).",
                "We are not making use of the guard function G. In future work, this function can be used to model constraints when we extend the expressiveness of our norm language. 5.2 Properties of Normative Structures Having defined the mapping from normative structures to Coloured Petri Nets, we now look at properties of CPNs that help us understand the complexity of conflict detection.",
                "One question we would like to answer is, whether at a given point in time, a given normative structure is conflict-free.",
                "Such a snapshot of a normative structure corresponds to a marking in the mapped CPN.",
                "Def. 11.",
                "Given a marking Mi, this marking is conflictfree if Â¬âˆƒp âˆˆ P. âˆƒnp1, np2 âˆˆ Mi(p) such that np1.mode = Obl and np2.mode = Prh and np1.illoc and np2.illoc unify under a valid substitution.",
                "Another interesting question would be, whether a conflict will occur from such a snapshot of the system by propagating the normative positions.",
                "In order to answer this question, we first translate the snapshot of the normative structure to the corresponding CPN and then execute the finite occurence sequence of markings and steps, verifying the conflict-freedom of each marking as we go along.",
                "Def. 12.",
                "Given a marking Mi, a finite occurrence sequence Si, Si+1, ..., Sn is called conflict-free, if and only if Mi[Si > Mi+1 . . .",
                "Mn[Sn > Mn+1 and Mk is conflict-free for all k such that i â‰¤ k â‰¤ n + 1.",
                "However, the main question we would like to investigate, is whether or not a given normative structure is conflictresistant, that is, whether or not the agents enacting the MAS are able to bring about conflicts through their actions.",
                "As soon as one includes the possibility of actions (or utterances) from autonomous agents, one looses determinism.",
                "Having mapped the normative structure to a CPN, we now add CPN models of the agents interactions.",
                "Each form of agent interaction (i.e. each activity) can be modelled using CPNs along the lines of Cost et al. [5].",
                "These nondeterministic CPNs feed tokens into the CPN that models the normative structure.",
                "This leads to the introduction of non-determinism into the combined CPN.",
                "The lower half of figure 3 shows part of a CPN model of an agent protocol where the arc denoted with 1 represents some utterance of an illocution by an agent.",
                "The target transition of this arc, not only moves a token on to the next state of this CPN, but also places a token in the place corresponding to the appropriate normative scene in the CPN model of the normative structure (via arc 2).",
                "Transition 3 finally could propagate that token in form of an obligation, for example.",
                "Thus, from a given marking, many different occurrence sequences are possible depending on the agents actions.",
                "We make use of the reachability set R to define a situation in which agents cannot cause conflicts. 640 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) Figure 3: Constructing the combined CPN Def. 13.",
                "Given a net N, a marking M is conflict-resistant if and only if all markings in R(N,M) are conflict-free.",
                "Checking conflict-freedom of a marking can be done in polynomial time by checking all places of the CPN for conflicting tokens.",
                "Conflict-freedom of an occurrence sequence in the CPN that represents the normative structure can also be done in polynomial time since this sequence is deterministic given a snapshot.",
                "Whether or not a normative structure is designed safely corresponds to checking the conflict-resistance of the initial marking M0.",
                "Now, verifying conflict-resistance of a marking becomes a very difficult task.",
                "It corresponds to the reachability problem in a CPN: can a state be reached or a marking achieved, that contains a conflict?.",
                "This reachability problem is known to be NP-complete for ordinary Petri Nets [22] and since CPNs are functionally identical, we cannot hope to verify conflict-resistance of a normative structure off-line in a reasonable amount of time.",
                "Therefore, distributed, run-time mechanisms are needed to ensure that a normative structure maintains consistency.",
                "We present one such mechanism in the following section. 6.",
                "MANAGING NORMATIVE STRUCTURES Once a conflict (as defined in Section 4) has been detected, we propose to employ the unifier to resolve the conflict.",
                "In our example, if the variables in prh(inform(a1, r1, a2, r2, p(Y, d), T )) do not get the values specified in substitution Ïƒ then there will not be a conflict.",
                "However, rather than computing the complement set of a substitution (which can be an infinite set) we propose to annotate the prohibition with the unifier itself and use it to determine what the variables of that prohibition cannot be in future unifications in order to avoid a conflict.",
                "We therefore denote annotated prohibitions as prh(Â¯I) Î£, where Î£ = {Ïƒ1, . . . , Ïƒn}, is a set of unifiers.",
                "Annotated norms3 are interpreted as deontic constructs with curtailed influences, that is, their effect (on agents, roles and illocutions) has been limited by the set Î£ of unifiers.",
                "A prohibition may be in conflict with various obligations in a given normative scene s = id, Î” and we need to record (and possibly avoid) all these conflicts.",
                "We define below an algorithm which ensures that a normative position will be added to a normative scene in such a way that it will not cause any conflicts. 3 Although we propose to curtail prohibitions, the same machinery can be used to define the curtailment of obligations instead.",
                "These different policies are dependent on the intended deontic semantics and requirements of the systems addressed.",
                "For instance, some MASs may require that their agents should not act in the presence of conflicts, that is, the obligation should be curtailed. 6.1 Conflict Resolution We propose a fine-grained way of resolving normative conflicts via unification.",
                "We detect the overlapping of the influences of norms , i.e. how they affect the behaviour of the concerned agents, and we curtail the influence of the normative position, by appropriately using the annotations when checking if the norm applies to illocutions.",
                "The algorithm shown in Figure 4 depicts how we maintain a conflict-free set of norms.",
                "It adds a given norm N to an existing, conflictfree normative state Î”, obtaining a resulting new normative state Î” which is conflict-free, that is, its prohibitions are annotated with a set of conflict sets indicating which bindings for variables have to be avoided for conflicts not to take place. algorithm addNorm(N, Î”) begin 1 timestamp(N) 2 case N of 3 per(Â¯I): Î” := Î” âˆª {N} 4 prh(I): if N âˆˆ Î” s.t. conflict(N, N , Ïƒ) then Î” := Î” 5 else Î” := Î” âˆª {N} 6 prh(Â¯I): 7 begin 8 Î£ := âˆ… 9 for each N âˆˆ Î” do 10 if conflict(N, N , Ïƒ) then Î£ := Î£ âˆª {Ïƒ} 11 Î” := Î” âˆª {N Î£} 12 end 13 obl(Â¯I): 14 begin 15 Î”1 := âˆ…; Î”2 := âˆ… 16 for each (N Î£) âˆˆ Î” do 17 if N = prh(I) then 18 if conflict(N , N, Ïƒ) then Î”1 := Î”1 âˆª {N Î£} 19 else nil 20 else 21 if conflict(N , N, Ïƒ) then 22 begin 23 Î”1 := Î”1 âˆª {N Î£} 24 Î”2 := Î”2 âˆª {N (Î£ âˆª {Ïƒ})} 25 end 26 Î” := (Î” âˆ’ Î”1) âˆª Î”2 âˆª {N} 27 end 28 end case 29 return Î” end Figure 4: Algorithm to Preserve Conflict-Freedom The algorithm uses a case of structure to differentiate the different possibilities for a given norm N. Line 3 addresses the case when the given norm is a permission: N is simply added to Î”.",
                "Lines 4-5 address the case when we attempt to add a ground prohibition to a normative state: if it conflicts with any obligation, then it is discarded; otherwise it is added to the normative state.",
                "Lines 6-12 describe the situation when the normative position to be added is a nonground prohibition.",
                "In this case, the algorithm initialises Î£ to an empty set and loops (line 9-10) through the norms N in the old normative state Î”.",
                "Upon finding one that conflicts with N, the algorithm updates Î£ by adding the newly found conflict set Ïƒ to it (line 10).",
                "By looping through Î”, we are able to check any conflicts between the new prohibition and the existing obligations, adequately building the annotation Î£ to be used when adding N to Î” in line 11.",
                "Lines 13-27 describe how a new obligation is accommodated to an existing normative state.",
                "We make use of two initially empty, temporary sets, Î”1, Î”2.",
                "The algorithm loops through Î” (lines 16-25) picking up those annotated prohibitions N Î£ which conflict with the new obligation.",
                "There are, however, two cases to deal with: the one when a ground The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 641 prohibition is found (line 17), and its exception, covering non-ground prohibitions (line 20).",
                "In both cases, the old prohibition is stored in Î”1 (lines 18 and 23) to be later removed from Î” (line 26).",
                "However, in the case of a nonground prohibition, the algorithm updates its annotation of conflict sets (line 24).",
                "The loop guarantees that an exhaustive (linear) search through a normative state takes place, checking if the new obligation is in conflict with any existing prohibitions, possibly updating the annotations of these conflicting prohibitions.",
                "In line 26 the algorithm builds the new updated Î” by removing the old prohibitions stored in Î”1 and adding the updated prohibitions stored in Î”2 (if any), as well as the new obligation N. Our proposed algorithm is correct in that, for a given normative position N and a normative state Î”, it provides a new normative state Î” in which all prohibitions have annotations recording how they unify with existing obligations.",
                "The annotations can be empty, though: this is the case when we have a ground prohibition or a prohibition which does not unify/conflict with any obligation.",
                "Permissions do not affect our algorithm and they are appropriately dealt with (line 3).",
                "Any attempt to insert a ground prohibition which conflicts, yields the same normative state (line 4).",
                "When a new obligation is being added then the algorithm guarantees that all prohibitions are considered (lines 14-27), leading to the removal of conflicting ground prohibitions or the update of annotations of non-ground prohibitions.",
                "The algorithm always terminates: the loops are over a finite set Î” and the conflict checks and set operations always terminate.",
                "The complexity of the algorithm is linear: the set Î” is only examined once for each possible case of norm to be added.",
                "When managing normative states we may also need to remove normative positions.",
                "This is straightforward: permissions can be removed without any problems; annotated prohibitions can also be removed without further considerations; obligations, however, require some housekeeping.",
                "When an obligation is to be removed, we must check it against all annotated prohibitions in order to update their annotations.",
                "We apply the conflict check and obtain a unifier, then remove this unifier from the prohibitions annotation.",
                "We invoke the removal algorithm as removeNorm(N, Î”): it returns a new normative state Î” in which N has been removed, with possible alterations to other normative positions as explained. 6.2 Enactment of a Normative Structure The enactment of a normative structure amounts to the parallel, distributed execution of normative scenes and normative transitions.",
                "For illustrative purposes, hereafter we shall describe the interplay between the payment and delivery normative scenes and the normative transition nt linking them in the upper half of figure 2.",
                "With this aim, consider for instance that obl(inform(jules, client, rod, acc, pay(copper, 400, 350), T) âˆˆ Î”payment and that Î”delivery holds prh(inform(rod,wm, jules, client, delivered(Z, Q), T)).",
                "Such states indicate that client Jules is obliged to pay Â£400 for 350kg of copper to accountant Rod according to the payment normative scene, whereas Rod, taking up the role of warehouse manager this time, is prohibited to deliver anything to client Jules according to the delivery normative scene.",
                "For each normative scene, the enactment process goes as follows.",
                "Firstly, it processes its incoming message queue that contains three types of messages: utterances from the activity it is linked to; and normative commands either to add or remove normative positions.",
                "For instance, in our example, the payment normative scene collects the illocution I = utt((inform(jules, client, rod, acc, pay(copper, 400, 350), 35)) standing for client Jules pending payment for copper (via arrow A in figure 2).",
                "Utterances are timestamped and subsequently added to the normative state.",
                "We would have Î”payment = Î”payment âˆª {I}, in our example.",
                "Upon receiving normative commands to either add or remove a normative position, the normative scene invokes the corresponding addition or removal algorithm described in Section 6.1.",
                "Secondly, the normative scene acknowledges its state change by sending a trigger message to every outgoing normative transition it is connected to.",
                "In our example, the payment normative scene would be signalling its state change to normative transition nt.",
                "For normative transitions, the process works differently.",
                "Because each normative transition controls the operation of a single rule, upon receiving a trigger message, it polls every incoming normative scene for substitutions for the relevant illocution schemata on the LHS of its rule.",
                "In our example, nt (being responsible for the rule described in Section 3.4), would poll the payment normative scene (via arrow B) for substitutions.",
                "Upon receiving replies from them (in the form of sets of substitutions together with time-stamps), it has to unify substitutions from each of these normative scenes.",
                "For each unification it finds, the rule is fired, and hence the corresponding normative command is sent along to the output normative scene.",
                "The normative transition then keeps track of the firing message it sent on and of the time-stamps of the normative positions that triggered the firing.",
                "This is done to ensure that the very same normative positions in the LHS of a rule only trigger its firing once.",
                "In our example, nt would be receiving Ïƒ = {X/jules, Y/rod, Z/copper, Q/350} from the payment normative scene.",
                "Since the substitions in Ïƒ unify with nts rule, the rule is fired, and the normative command add(delivery : obl(rod, wm, jules, client, delivered(copper, 350), T)) is sent along to the delivery normative scene to oblige Rod to deliver to client Jules 350kg of copper.",
                "After that, the delivery normative scene would invoke the addNorm algorithm from figure 4 with Î”delivery and N = obl(rod, wm, jules, client, delivered(copper, 350)) as arguments. 7.",
                "RELATED WORK AND CONCLUSIONS Our contributions in this paper are three-fold.",
                "Firstly, we introduce an approach for the management of and reasoning about norms in a distributed manner.",
                "To our knowledge, there is little work published in this direction.",
                "In [8, 21], two languages are presented for the distributed enforcement of norms in MAS.",
                "However, in both works, each agent has a local message interface that forwards legal messages according to a set of norms.",
                "Since these interfaces are local to each agent, norms can only be expressed in terms of actions of that agent.",
                "This is a serious disadvantage, e.g. when one needs to activate an obligation to one agent due to a certain message of another one.",
                "The second contribution is the proposal of a normative structure.",
                "The notion is fruitful because it allows the separation of normative and procedural concerns.",
                "The normative structure we propose makes evident the similarity between the propagation of normative positions and the propagation 642 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) of tokens in Coloured Petri Nets.",
                "That similarity readily suggests a mapping between the two, and gives grounds to a convenient analytical treatment of the normative structure, in general, and the complexity of conflict detection, in particular.",
                "The idea of modelling interactions (in the form of conversations) via Petri Nets has been investigated in [18], where the interaction medium and individual agents are modelled as CPN sub-nets that are subsequently combined for analysis.",
                "In [5], conversations are first designed and analysed at the level of CPNs and thereafter translated into protocols.",
                "Lin et al. [20] map conversation schemata to CPNs.",
                "To our knowledge, the use of this representation in the support of conflict detection in regulated MAS has not been reported elsewhere.",
                "Finally, we present a distributed mechanism to resolve normative conflicts.",
                "Sartor [25] treats normative conflicts from the point of view of legal theory and suggests a way to order the norms involved.",
                "His idea is implemented in [12] but requires a central resource for norm maintenance.",
                "The approach to conflict detection and resolution is an adaptation and extension of the work on instantiation graphs reported in [17] and a related algorithm in [27].",
                "The algorithm presented in the current paper can be used to manage normative states distributedly: normative scenes that happen in parallel have an associated normative state Î” to which the algorithm is independently applied each time a new norm is to be introduced.",
                "These three contributions we present in this paper open many possibilities for future work.",
                "We should mention first, that as a broad strategy we are working on a generalisation of the notion of normative structure to make it operate with different coordination models, with richer deontic content and on top of different computational realisations of regulated MAS.",
                "As a first step in this direction we are taking advantage of the de-coupling between interaction protocols and declarative normative guidance that the normative structure makes available, to provide a normative layer for electronic institutions (as defined in [1]).",
                "We expect such coupling will endow electronic institutions with a more flexible -and more expressive- normative environment.",
                "Furthermore, we want to extend our model along several directions: (1) to handle negation and constraints as part of the norm language, and in particular the notion of time; (2) to accommodate multiple, hierarchical norm authorities based on roles, along the lines of Cholvy and Cuppens [3] and power relationships as suggested by Carabelea et al. [2]; (3) to capture in the conflict resolution algorithm different semantics relating the deontic notions by supporting different axiomations (e.g., relative strength of prohibition versus obligation, default deontic notions, deontic inconsistencies).",
                "On the theoretical side, we intend to use analysis techniques of CPNs in order to characterise classes of CPNs (e.g., acyclic, symmetric, etc.) corresponding to families of Normative Structures that are susceptible to tractable offline conflict detection.",
                "The combination of these techniques along with our online conflict resolution mechanisms is intended to endow MAS designers with the ability to incorporate norms into their systems in a principled way. 8.",
                "REFERENCES [1] J. L. Arcos, M. Esteva, P. Noriega, J.",
                "A. RodrÂ´Ä±guez, and C. Sierra.",
                "Engineering open environments with electronic institutions.",
                "Journal on Engineering Applications of Artificial Intelligence, 18(2):191-204, 2005. [2] C. Carabelea, O. Boissier, and C. Castelfranchi.",
                "Using social power to enable agents to reason about being part of a group.",
                "In 5th Internat.",
                "Workshop, ESAW 2004, pages 166-177, 2004. [3] L. Cholvy and F. Cuppens.",
                "Solving normative conflicts by merging roles.",
                "In Fifth International Conference on Artificial Intelligence and Law, Washington, USA, 1995. [4] S. Christensen and T. B. Haagh.",
                "Design CPN - overview of CPN ML syntax.",
                "Technical report, University of Aarhus, 1996. [5] R. S. Cost, Y. Chen, T. W. Finin, Y. Labrou, and Y. Peng.",
                "Using colored petri nets for conversation modeling.",
                "In Issues in Agent Communication, pages 178-192, London, UK, 2000. [6] F. Dignum.",
                "Autonomous Agents with Norms.",
                "Artificial Intelligence and Law, 7(1):69-79, 1999. [7] A. Elhag, J. Breuker, and P. Brouwer.",
                "On the Formal Analysis of Normative Conflicts.",
                "Information & Comms.",
                "Techn.",
                "Law, 9(3):207-217, Oct. 2000. [8] M. Esteva, W. Vasconcelos, C. Sierra, and J.",
                "A. RodrÂ´Ä±guez-Aguilar.",
                "Norm consistency in electronic institutions. volume 3171 (LNAI), pages 494-505.",
                "Springer-Verlag, 2004. [9] M. Fitting.",
                "First-Order Logic and Automated Theorem Proving.",
                "Springer-Verlag, New York, U.S.A., 1990. [10] N. Fornara, F. Vigan`o, and M. Colombetti.",
                "An Event Driven Approach to Norms in Artificial Institutions.",
                "In AAMAS05 Workshop: Agents, Norms and Institutions for Regulated Multiagent Systems (ANI@REM), Utrecht, 2005. [11] D. Gaertner, P. Noriega, and C. Sierra.",
                "Extending the BDI architecture with commitments.",
                "In Proceedings of the 9th International Conference of the Catalan Association of Artificial Intelligence, 2006. [12] A. GarcÂ´Ä±a-Camino, P. Noriega, and J.-A.",
                "RodrÂ´Ä±guez-Aguilar.",
                "An Algorithm for Conflict Resolution in Regulated Compound Activities.",
                "In 7th Int.Workshop - ESAW 06, 2006. [13] A. GarcÂ´Ä±a-Camino, J.-A.",
                "RodrÂ´Ä±guez-Aguilar, C. Sierra, and W. Vasconcelos.",
                "A Distributed Architecture for Norm-Aware Agent Societies.",
                "In DALT III, volume 3904 (LNAI), pages 89-105.",
                "Springer, 2006. [14] F. Giunchiglia and L. Serafini.",
                "Multi-language hierarchical logics or: How we can do without modal logics.",
                "Artificial Intelligence, 65(1):29-70, 1994. [15] J. Habermas.",
                "The Theory of Communication Action, Volume One, Reason and the Rationalization of Society.",
                "Beacon Press, 1984. [16] K. Jensen.",
                "Coloured Petri Nets: Basic Concepts, Analysis Methods and Practical Uses (Volume 1).",
                "Springer, 1997. [17] M. Kollingbaum and T. Norman.",
                "Strategies for resolving norm conflict in practical reasoning.",
                "In ECAI Workshop Coordination in Emergent Agent Societies 2004, 2004. [18] J.-L. Koning, G. Francois, and Y. Demazeau.",
                "Formalization and pre-validation for interaction protocols in a multi agent systems.",
                "In ECAI, pages 298-307, 1998. [19] B. Kramer and J. Mylopoulos.",
                "Knowledge Representation.",
                "In S. C. Shapiro, editor, Encyclopedia of Artificial Intelligence, volume 1, pages 743-759.",
                "John Wiley & Sons, 1992. [20] F. Lin, D. H. Norrie, W. Shen, and R. Kremer.",
                "A schema-based approach to specifying conversation policies.",
                "In Issues in Agent Communication, pages 193-204, 2000. [21] N. Minsky.",
                "Law Governed Interaction (LGI): A Distributed Coordination and Control Mechanism (An Introduction, and a Reference Manual).",
                "Technical report, Rutgers University, 2005. [22] T. Murata.",
                "Petri nets: Properties, analysis and applications.",
                "Proceedings of the IEEE, 77(4):541-580, 1989. [23] S. Parsons, C. Sierra, and N. Jennings.",
                "Agents that reason and negotiate by arguing.",
                "Journal of Logic and Computation, 8(3):261-292, 1998. [24] A. Ricci and M. Viroli.",
                "Coordination Artifacts: A Unifying Abstraction for Engineering Environment-Mediated Coordination in MAS.",
                "Informatica, 29:433-443, 2005. [25] G. Sartor.",
                "Normative conflicts in legal reasoning.",
                "Artificial Intelligence and Law, 1(2-3):209-235, June 1992. [26] M. Sergot.",
                "A Computational Theory of Normative Positions.",
                "ACM Trans.",
                "Comput.",
                "Logic, 2(4):581-622, 2001. [27] W. W. Vasconcelos, M. Kollingbaum, and T. Norman.",
                "Resolving Conflict and Inconsistency in Norm-Regulated Virtual Organisations.",
                "In Proceedings of AAMAS 07, Hawaii, USA, 2007.",
                "IFAAMAS. [28] G. H. von Wright.",
                "Norm and Action: A Logical Inquiry.",
                "Routledge and Kegan Paul, London, 1963. [29] M. Wooldridge.",
                "An Introduction to Multiagent Systems.",
                "John Wiley & Sons, Chichester, UK, Feb. 2002.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 643"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Esta capa se representa como un \"grÃ¡fico bipartito\" que llamamos estructura normativa.",
                "Una estructura normativa es un \"grÃ¡fico bipartito\" etiquetado ns = nodos, bordes, Lin, lout.",
                "El conjunto de todas las marcas posibles accesibles para una red neta de una marca M se llama su conjunto de accesibilidad, y se denota como R (NET, M).5.1 Mapeo a las redes de Petri coloreadas Nuestra estructura normativa es un \"grÃ¡fico bipartito\" etiquetado."
            ],
            "translated_text": "",
            "candidates": [
                "grÃ¡fica bipartita",
                "grÃ¡fico bipartito",
                "grÃ¡fica bipartita",
                "grÃ¡fico bipartito",
                "grÃ¡fica bipartita",
                "grÃ¡fico bipartito"
            ],
            "error": []
        },
        "prohibition": {
            "translated_key": "prohibiciÃ³n",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Distributed Norm Management in Regulated Multi-Agent Systems âˆ— Dorian Gaertner Dept.",
                "of Computing, Imperial College London, London SW7 2AZ, United Kingdom dg00@doc.ic.ac.uk Andres Garcia-Camino, Pablo Noriega, J.-A.",
                "Rodriguez-Aguilar IIIA-CSIC, 08193 Bellaterra, Spain {andres,pablo,jar}@iiia.csic.es Wamberto Vasconcelos Dept. of Computing Science, University of Aberdeen, Aberdeen AB24 3UE, United Kingdom wvasconcelos@acm.org ABSTRACT Norms are widely recognised as a means of coordinating multi-agent systems.",
                "The distributed management of norms is a challenging issue and we observe a lack of truly distributed computational realisations of normative models.",
                "In order to regulate the behaviour of autonomous agents that take part in multiple, related activities, we propose a normative model, the Normative Structure (NS), an artifact that is based on the propagation of normative positions (obligations, prohibitions, permissions), as consequences of agents actions.",
                "Within a NS, conflicts may arise due to the dynamic nature of the MAS and the concurrency of agents actions.",
                "However, ensuring conflict-freedom of a NS at design time is computationally intractable.",
                "We show this by formalising the notion of conflict, providing a mapping of NSs into Coloured Petri Nets and borrowing well-known theoretical results from that field.",
                "Since online conflict resolution is required, we present a tractable algorithm to be employed distributedly.",
                "We then demonstrate that this algorithm is paramount for the distributed enactment of a NS.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Languages and structures General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION A fundamental feature of open, regulated multi-agent systems in which autonomous agents interact, is that participating agents are meant to comply with the conventions of the system.",
                "Norms can be used to model such conventions and hence as a means to regulate the observable behaviour of agents [6, 29].",
                "There are many contributions on the subject of norms from sociologists, philosophers and logicians (e.g., [15, 28]).",
                "However, there are very few proposals for computational realisations of normative models - the way norms can be integrated in the design and execution of MASs.",
                "The few that exist (e.g. [10, 13, 24]), operate in a centralised manner which creates bottlenecks and single points-of-failure.",
                "To our knowledge, no proposal truly supports the distributed enactment of normative environments.",
                "In our paper we approach that problem and propose means to handle conflicting commitments in open, regulated, multiagent systems in a distributed manner.",
                "The type of regulated MAS we envisage consists of multiple, concurrent, related activities where agents interact.",
                "Each agent may concurrently participate in several activities, and change from one activity to another.",
                "An agents actions within an activity may have consequences in the form of normative positions (i.e. obligations, permissions, and prohibitions) [26] that may constrain its future behaviour.",
                "For instance, a buyer agent who runs out of credit may be forbidden to make further offers, or a seller agent is obliged to deliver after closing a deal.",
                "We assume that agents may choose not to fulfill all their obligations and hence may be sanctioned by the MAS.",
                "Notice that, when activities are distributed, normative positions must flow from the activities in which they are generated to those in which they take effect.",
                "For instance, the sellers obligation above must flow (or be propagated) from a negotiation activity to a delivery activity.",
                "Since in an open, regulated MAS one cannot embed normative aspects into the agents design, we adopt the view that the MAS should be supplemented with a separate set of norms that further regulates the behaviour of participating agents.",
                "In order to model the separation of concerns between the coordination level (agents interactions) and the normative level (propagation of normative positions), we propose an artifact called the Normative Structure (NS).",
                "Within a NS conflicts may arise due to the dynamic nature of the MAS and the concurrency of agents actions.",
                "For instance, an agent may be obliged and prohibited to do the 636 978-81-904262-7-5 (RPS) c 2007 IFAAMAS very same action in an activity.",
                "Since the regulation of a MAS entails that participating agents need to be aware of the validity of those actions that take place within it, such conflicts ought to be identified and possibly resolved if a claim of validity is needed for an agent to engage in an action or be sanctioned.",
                "However, ensuring conflict-freedom of a NS at design time is computationally intractable.",
                "We show this by formalising the notion of conflict, providing a mapping of NSs into Coloured Petri Nets (CPNs) and borrowing well-known theoretical results from the field of CPNs.",
                "We believe that online conflict detection and resolution is required.",
                "Hence, we present a tractable algorithm for conflict resolution.",
                "This algorithm is paramount for the distributed enactment of a NS.",
                "The paper is organised as follows.",
                "In Section 2 we detail a scenario to serve as an example throughout the paper.",
                "Next, in Section 3 we formally define the normative structure artifact.",
                "Further on, in Section 4 we formalise the notion of conflict to subsequently analyse the complexity of conflict detection in terms of CPNs in Section 5.",
                "Section 6 describes the computational management of NSs by describing their enactment and presenting an algorithm for conflict resolution.",
                "Finally, we comment on related work, draw conclusions and report on future work in Section 7. 2.",
                "SCENARIO We use a supply-chain scenario in which companies and individuals come together at an online marketplace to conduct business.",
                "The overall transaction procedure may be organised as six distributed activities, represented as nodes in the diagram in Figure 1.",
                "They involve different participants whose behaviour is coordinated through protocols.",
                "In this scenario agents can play one of four roles: marExit Registration Payment Delivery Negotiation Coordination Model Contract Figure 1: Activity Structure of the Scenario ketplace accountant (acc), client, supplier (supp) and warehouse managers (wm).",
                "The arrows connecting the activities represent how agents can move from one activity to another.",
                "After registering at the marketplace, clients and suppliers get together in an activity where they negotiate the terms of their transaction, i.e. prices, amounts of goods to be delivered, deadlines and other details.",
                "In the contract activity, the order becomes established and an invoice is prepared.",
                "The client will then participate in a payment activity, verifying his credit-worthiness and instructing his bank to transfer the correct amount of money.",
                "The supplier in the meantime will arrange for the goods to be delivered (e.g. via a warehouse manager) in the delivery activity.",
                "Finally, agents can leave the marketplace conforming to a predetermined exit protocol.",
                "The marketplace accountant participates in most of the activities as a trusted provider of auditing tools.",
                "In the rest of the paper we shall build on this scenario to exemplify the notion of normative structure and to illustrate our approach to conflict detection and resolution in a distributed setting. 3.",
                "NORMATIVE STRUCTURE In MASs agents interact according to protocols which naturally are distributed.",
                "We advocate that actions in one such protocol may have an effect on the enactment of other protocols.",
                "Certain actions can become prohibited or obligatory, for example.",
                "We take normative positions to be obligations, prohibitions and permissions akin to work described in [26].",
                "The intention of adding or removing a normative position we call normative command.",
                "Occurrences of normative positions in one protocol may also have consequences for other protocols1 .",
                "In order to define our norm language and specify how normative positions are propagated, we have been inspired by multi-context systems [14].",
                "These systems allow the structuring of knowledge into distinct formal theories and the definition of relationships between them.",
                "The relationships are expressed as bridge rules - deducibility of formulae in some contexts leads to the deduction of other formulae in other contexts.",
                "Recently, these systems have been successfully used to define agent architectures [11, 23].",
                "The metaphor translates to our current work as follows: the utterance of illocutions and/or the existence of normative positions in some normative scenes leads to the deduction of normative positions in other normative scenes.",
                "We are concerned with the propagation and distribution of normative positions within a network of distributed, normative scenes as a consequence of agents actions.",
                "We take normative scenes to be sets of normative positions and utterances that are associated with an underlying interaction protocol corresponding to an activity.",
                "In this section, we first present a simple language capturing these aspects and formally introduce the notions of normative scene, normative transition rule and normative structure.",
                "We give the intended semantics of these rules and show how to control a MAS via norms in an example. 3.1 Basic Concepts The building blocks of our language are terms and atomic formulae: Def. 1.",
                "A term, denoted as t, is (i) any constant expressed using lowercase (with or without subscripts), e.g. a, b0, c or (ii) any variable expressed using uppercase (with or without subscripts), e.g.",
                "X, Y, Zb or (iii) any function f(t1, . . . , tn), where f is an n-ary function symbol and t1, .., tn are terms.",
                "Some examples of terms and functions are Credit, price or offer(bible, 30) being respectively a variable, a constant and a function.",
                "We will be making use of identifiers throughout the paper, which are constant terms and also need the following definition: Def. 2.",
                "An atomic formula is any construct p(t1, . . . , tn), where p is an n-ary predicate symbol and t1, . . . , tn are terms.",
                "The set of all atomic formulae is denoted as Î”.",
                "We focus on an expressive class of MASs in which interaction is carried out by means of illocutionary speech acts exchanged among participating agents: Def. 3.",
                "Illocutions I are ground atomic formulae which have the form p(ag, r, ag , r , Î´, t) where p is an element of 1 Here, we abstract from protocols and refer to them generically as activities.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 637 a set of illocutionary particles (e.g. inform, request, offer); ag, ag are agent identifiers; r, r are role identifiers; Î´, an arbitrary ground term, is the content of the message, built from a shared content language; t âˆˆ N is a time stamp.",
                "The intuitive meaning of p(ag, r, ag , r , m, t) is that agent ag playing role r sent message m to agent ag playing role r at time t. An example of an illocution is inform(ag4, supp, ag3, client, offer(wire, 12), 10).",
                "Sometimes it is useful to refer to illocutions that are not fully grounded, that is, those that may contain uninstantiated (free) variables.",
                "In the description of a protocol, for instance, the precise values of the message exchanged can be left unspecified.",
                "During the enactment of the protocol agents will produce the actual values which will give rise to a ground illocution.",
                "We can thus define illocution schemata: Def. 4.",
                "An illocution schema Â¯I is any atomic formula p(ag, r, ag , r , Î´, t) in which some of the terms may either be variables or may contain variables. 3.2 Formal Definition of the Notion of NS We first define normative scenes as follows: Def. 5.",
                "A normative scene is a tuple s = ids, Î”s where ids is a scene identifier and Î”s is the set of atomic formulae Î´ (i.e. utterances and normative positions) that hold in s. We will also refer to Î”s as the state of normative scene s. For instance, a snapshot of the state of the delivery normative scene of our scenario could be represented as: Î”s = 8 < : utt(request(sean, client, kev, wm, receive(wire, 200), 20)), utt(accept(kev, wm, sean, client, receive(wire, 200), 30)), obl(inform(kev, wm, sean, client, delivered(wire, 200), 30)) 9 = ; That is, agent Sean taking up the client role has requested agent Kev (taking up the warehouse manager role wm) to receive 200kg of wire, and agent Kev is obliged to deliver 200kg of wire to Sean since he accepted the request.",
                "Note that the state of a normative scene Î”s evolves over time.",
                "These normative scenes are connected to one another via normative transitions that specify how utterances and normative positions in one scene affect other normative scenes.",
                "As mentioned above, activities are not independent since illocutions uttered in some of them may have an effect on other ones.",
                "Normative transition rules define the conditions under which a normative command is generated.",
                "These conditions are either utterances or normative positions associated with a given protocol (denoted e.g. activity : utterance) which yield a normative command, i.e. the addition or removal of another normative position, possibly related to a different activity.",
                "Our transition rules are thus defined: Def. 6.",
                "A normative transition rule R is of the form: R ::= V C V ::= ids : D | V, V D ::= N | utt(Â¯I) N ::= per(Â¯I) | prh(Â¯I) | obl(Â¯I) C ::= add(ids : N) | remove(ids : N) where Â¯I is an illocution schema, N is a normative position (i.e. permission, <br>prohibition</br> or obligation), ids is an identifier for activity s and C is a normative command.",
                "We endow our language with the usual semantics of rulebased languages [19].",
                "Rules map an existing normative structure to a new normative structure where only the state of the normative scenes change.",
                "In the definitions below we rely on the standard concept of substitution [9].",
                "Def. 7.",
                "A normative transition is a tuple b = idb, rb where idb is an identifier and rb is a normative transition rule.",
                "We are proposing to extend the notion of MAS, regulated by protocols, with an extra layer consisting of normative scenes and normative transitions.",
                "This layer is represented as a bi-partite graph that we term normative structure.",
                "A normative structure relates normative scenes and normative transitions specifying which normative positions are to be generated or removed in which normative scenes.",
                "Def. 8.",
                "A normative structure is a labelled bi-partite graph NS = Nodes, Edges, Lin , Lout .",
                "Nodes is a set SâˆªB where S is a set of normative scenes and B is a set of normative transitions.",
                "Edges is a set Ain âˆª Aout where Ain âŠ† S Ã— B is a set of input arcs labelled with an atomic formula using the labelling function Lin : Ain â†’ D; and Aout âŠ† B Ã— S is a set of output arcs labelled with a normative position using the labelling function Lout : Aout â†’ N. The following must hold: 1.",
                "Each atomic formula appearing in the LHS of a rule rb must be of the form (ids : D) where s âˆˆ S and D âˆˆ Î” and âˆƒain âˆˆ Ain such that ain = (s, b) and Lin (ain ) = D. 2.",
                "The atomic formula appearing in the RHS of a rule rb must be of the form add(ids : N) or remove(ids : N) where s âˆˆ S and âˆƒaout âˆˆ Aout such that aout = (b, s) and Lout (aout ) = N. 3. âˆ€a âˆˆ Ain such that a = (s, b) and b = idb, rb and Lin (a) = D then (ids:D) must occur in the LHS of rb. 4. âˆ€a âˆˆ Aout such that a = (b, s) and b = idb, rb and Lout (a) = N then add(ids : N) or remove(ids : N) must occur in the RHS of rb.",
                "The first two points ensure that every atomic formulae on the LHS of a normative transition rule labels an arc entering the appropriate normative transition in the normative structure, and that the atomic formula on the RHS labels the corresponding outgoing arc.",
                "Points three and four ensure that labels from all incoming arcs are used in the LHS of the normative transition rule that these arcs enter into, and that the labels from all outgoing arcs are used in the RHS of the normative transition rule that these arcs leave. 3.3 Intended Semantics The formal semantics will be defined via a mapping to Coloured Petri Nets in Section 5.1.",
                "Here we start defining the intended semantics of normative transition rules by describing how a rule changes a normative scene of an existing normative structure yielding a new normative structure.",
                "Each rule is triggered once for each substitution that unifies the left-hand side V of the rule with the state of the corresponding normative scenes.",
                "An atomic formula (i.e. an utterance or a normative position) holds iff it is unifiable with an utterance or normative position that belongs to the state of the corresponding normative scene.",
                "Every time a rule is triggered, the normative command specified on the right-hand side of that rule is carried out, intending to add or remove a normative position from the state of the corresponding normative scene.",
                "However, addition is not unconditional as conflicts may arise.",
                "This topic will be treated in Sections 4 and 6.1. 638 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.4 Example In our running example we have the following exemplary normative transition rule: â€ž payment : obl(inform(X, client, Y, acc, pay(Z, P, Q), T )), payment : utt(inform(X, client, Y, acc, pay(Z, P, Q), T )) Â« delivery : add(obl(inform(Y, wm, X, client, delivered(Z, Q), T ))) That is, during the payment activity, an obligation on client X to inform accountant Y about the payment P of item Z at time T and the corresponding utterance which fulfills this obligation allows the flow of a norm to the delivery activity.",
                "The norm is an obligation on agent Y (this time taking up the role of the warehouse manager wm) to send a message to client X that item Z has been delivered.",
                "We show in Figure 2 a diagrammatic representation of how activities and a normative structure relate: Payment Delivery Contract Normative Level Exit Registration Payment Delivery Negotiation Coordination Level Contract nt Figure 2: Activities and Normative Structure As illocutions are uttered during activities, normative positions arise.",
                "Utterances and normative positions are combined in transition rules, causing the flow of normative positions between normative scenes.",
                "The connection between the two levels is described in Section 6.2. 4.",
                "CONFLICT DEFINITION The terms deontic conflict and deontic inconsistency have been used interchangeably in the literature.",
                "However, in this paper we adopt the view of [7] in which the authors suggest that a deontic inconsistency arises when an action is simultaneously permitted and prohibited - since a permission may not be acted upon, no real conflict occurs.",
                "The situations when an action is simultaneously obliged and prohibited are, however, deontic conflicts, as both obligations and prohibitions influence behaviours in a conflicting fashion.",
                "The content of normative positions in this paper are illocutions.",
                "Therefore, a normative conflict arises when an illocution is simultaneously obliged and prohibited.",
                "We propose to use the standard notion of unification [9] to detect when a <br>prohibition</br> and a permission overlap.",
                "For instance, an obligation obl(inform(A1, R1, A2, R2, p(c, X), T)) and a <br>prohibition</br> prh(inform(a1, r1, a2, r2, p(Y, d), T )) are in conflict as they unify under Ïƒ = {A1/a1, R1/r1, A2/a2, R2/r2, Y/c, X/d, T/T }).",
                "We formally capture this notion: Def. 9.",
                "A (deontic) conflict arises between two normative positions N and N under a substitution Ïƒ, denoted as conflict(N, N , Ïƒ), if and only if N = prh(Â¯I), N = obl(Â¯I ) and unify(Â¯I,Â¯I , Ïƒ).",
                "That is, a <br>prohibition</br> and an obligation are in conflict if, and only if, their illocutions unify under Ïƒ.",
                "The substitution Ïƒ, called here the conflict set, unifies the agents, roles and atomic formulae.",
                "We assume that unify is a suitable implementation of a unification algorithm which i) always terminates (possibly failing, if a unifier cannot be found); ii) is correct; and iii) has linear computational complexity.",
                "Inconsistencies caused by the same illocution being simultaneously permitted and prohibited can be formalised similarly.",
                "In this paper we focus on <br>prohibition</br>/obligation conflicts, but the computational machinery introduced in Section 6.1 can equally be used to detect <br>prohibition</br>/permission inconsistencies, if we substitute modality obl for per. 5.",
                "FORMALISING CONFLICT-FREEDOM In this section we introduce some background knowledge on CPNs assuming a basic understanding of ordinary Petri Nets.",
                "For technical details we refer the reader to [16].",
                "We then map NSs to CPNs and analyse their properties.",
                "CPNs combine the strength of Petri nets with the strength of functional programming languages.",
                "On the one hand, Petri nets provide the primitives for the description of the synchronisation of concurrent processes.",
                "As noticed in [16], CPNs have a semantics which builds upon true concurrency, instead of interleaving.",
                "In our opinion, a true-concurrency semantics is easier to work with because it is the way we envisage the connection between the coordination level and the normative level of a multi-agent system to be.",
                "On the other hand, the functional programming languages used by CPNs provide the primitives for the definition of data types and the manipulation of their data values.",
                "Thus, we can readily translate expressions of a normative structure.",
                "Last but not least, CPNs have a well-defined semantics which unambiguously defines the behaviour of each CPN.",
                "Furthermore, CPNs have a large number of formal analysis methods and tools by which properties of CPNs can be proved.",
                "Summing up, CPNs provide us with all the necessary features to formally reason about normative structures given that an adequate mapping is provided.",
                "In accordance with Petri nets, the states of a CPN are represented by means of places.",
                "But unlike Petri Nets, each place has an associated data type determining the kind of data which the place may contain.",
                "A state of a CPN is called a marking.",
                "It consists of a number of tokens positioned on the individual places.",
                "Each token carries a data value which has the type of the corresponding place.",
                "In general, a place may contain two or more tokens with the same data value.",
                "Thus, a marking of a CPN is a function which maps each place into a multi-set2 of tokens of the correct type.",
                "One often refers to the token values as token colours and one also refers to the data types as colour sets.",
                "The types of a CPN can be arbitrarily complex.",
                "Actions in a CPN are represented by means of transitions.",
                "An incoming arc into a transition from a place indicates that the transition may remove tokens from the corresponding place while an outgoing arc indicates that the transition may add tokens.",
                "The exact number of tokens and their data values are determined by the arc expressions, which are encoded using the programming language chosen for the CPN.",
                "A transition is enabled in a CPN if and only if all the 2 A multi-set (or bag) is an extension to the notion of set, allowing the possibility of multiple appearances of the same element.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 639 variables in the expressions of its incoming arcs are bound to some value(s) (each one of these bindings is referred to as a binding element).",
                "If so, the transition may occur by removing tokens from its input places and adding tokens to its output places.",
                "In addition to the arc expressions, it is possible to attach a boolean guard expression (with variables) to each transition.",
                "Putting all the elements above together we obtain a formal definition of CPN that shall be employed further ahead for mapping purposes.",
                "Def. 10.",
                "A CPN is a tuple Î£, P, T, A, N, C, G, E, I where: (i) Î£ is a finite set of non-empty types, also called colour sets; (ii) P is a finite set of places; (iii) T is a finite set of transitions; (iv) A is a finite set of arcs; (v) N is a node function defined from A into P Ã— T âˆª T Ã— P; (vi) C is a colour function from P into Î£; (vii) G is a guard function from T into expressions; (viii) E is an arc expression function from A into expressions; (ix) I is an initialisation function from P into closed expressions; Notice that the informal explanation of the enabling and occurrence rules given above provides the foundations to understand the behaviour of a CPN.",
                "In accordance with ordinary Petri nets, the concurrent behaviour of a CPN is based on the notion of step.",
                "Formally, a step is a non-empty and finite multi-set over the set of all binding elements.",
                "Let step S be enabled in a marking M. Then, S may occur, changing the marking M to M .",
                "Moreover, we say that marking M is directly reachable from marking M by the occurrence of step S, and we denote it by M[S > M .",
                "A finite occurrence sequence is a finite sequence of steps and markings: M1[S1 > M2 . . .",
                "Mn[Sn > Mn+1 such that n âˆˆ N and Mi[Si > Mi+1 âˆ€i âˆˆ {1, . . . , n}.",
                "The set of all possible markings reachable for a net Net from a marking M is called its reachability set, and is denoted as R(Net, M). 5.1 Mapping to Coloured Petri Nets Our normative structure is a labelled bi-partite graph.",
                "The same is true for a Coloured Petri Net.",
                "We are presenting a mapping f from one to the other, in order to provide semantics for the normative structure and prove properties about it by using well-known theoretical results from work on CPNs.",
                "The mapping f makes use of correspondences between normative scenes and CPN places, normative transitions and CPN transitions and finally, between arc labels and CPN arc expressions.",
                "S â†’ P B â†’ T Lin âˆª Lout â†’ E The set of types is the singleton set containing the colour NP (i.e.",
                "Î£ = {NP}).",
                "This complex type is structured as follows (we use CPN-ML [4] syntax): color NPT = with Obl | Per | Prh | NoMod color IP = with inform | declare | offer color UTT = record illp : IP ag1, role1, ag2, role2 : string content: string time : int color NP = record mode : NPT illoc : UTT Modelling illocutions as norms without modality (NoMod) is a formal trick we use to ensure that sub-nets can be combined as explained below.",
                "Arcs are mapped almost directly.",
                "A is a finite set of arcs and N is a node function, such that âˆ€a âˆˆ A âˆƒa âˆˆ Ain âˆªAout .",
                "N(a) = a .",
                "The initialisation function I is defined as I(p) = Î”s (âˆ€s âˆˆ S where p is obtained from s using the mapping; remember that s = ids, Î”s ).",
                "Finally, the colour function C assigns the colour NP to every place: C(p) = NP (âˆ€p âˆˆ P).",
                "We are not making use of the guard function G. In future work, this function can be used to model constraints when we extend the expressiveness of our norm language. 5.2 Properties of Normative Structures Having defined the mapping from normative structures to Coloured Petri Nets, we now look at properties of CPNs that help us understand the complexity of conflict detection.",
                "One question we would like to answer is, whether at a given point in time, a given normative structure is conflict-free.",
                "Such a snapshot of a normative structure corresponds to a marking in the mapped CPN.",
                "Def. 11.",
                "Given a marking Mi, this marking is conflictfree if Â¬âˆƒp âˆˆ P. âˆƒnp1, np2 âˆˆ Mi(p) such that np1.mode = Obl and np2.mode = Prh and np1.illoc and np2.illoc unify under a valid substitution.",
                "Another interesting question would be, whether a conflict will occur from such a snapshot of the system by propagating the normative positions.",
                "In order to answer this question, we first translate the snapshot of the normative structure to the corresponding CPN and then execute the finite occurence sequence of markings and steps, verifying the conflict-freedom of each marking as we go along.",
                "Def. 12.",
                "Given a marking Mi, a finite occurrence sequence Si, Si+1, ..., Sn is called conflict-free, if and only if Mi[Si > Mi+1 . . .",
                "Mn[Sn > Mn+1 and Mk is conflict-free for all k such that i â‰¤ k â‰¤ n + 1.",
                "However, the main question we would like to investigate, is whether or not a given normative structure is conflictresistant, that is, whether or not the agents enacting the MAS are able to bring about conflicts through their actions.",
                "As soon as one includes the possibility of actions (or utterances) from autonomous agents, one looses determinism.",
                "Having mapped the normative structure to a CPN, we now add CPN models of the agents interactions.",
                "Each form of agent interaction (i.e. each activity) can be modelled using CPNs along the lines of Cost et al. [5].",
                "These nondeterministic CPNs feed tokens into the CPN that models the normative structure.",
                "This leads to the introduction of non-determinism into the combined CPN.",
                "The lower half of figure 3 shows part of a CPN model of an agent protocol where the arc denoted with 1 represents some utterance of an illocution by an agent.",
                "The target transition of this arc, not only moves a token on to the next state of this CPN, but also places a token in the place corresponding to the appropriate normative scene in the CPN model of the normative structure (via arc 2).",
                "Transition 3 finally could propagate that token in form of an obligation, for example.",
                "Thus, from a given marking, many different occurrence sequences are possible depending on the agents actions.",
                "We make use of the reachability set R to define a situation in which agents cannot cause conflicts. 640 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) Figure 3: Constructing the combined CPN Def. 13.",
                "Given a net N, a marking M is conflict-resistant if and only if all markings in R(N,M) are conflict-free.",
                "Checking conflict-freedom of a marking can be done in polynomial time by checking all places of the CPN for conflicting tokens.",
                "Conflict-freedom of an occurrence sequence in the CPN that represents the normative structure can also be done in polynomial time since this sequence is deterministic given a snapshot.",
                "Whether or not a normative structure is designed safely corresponds to checking the conflict-resistance of the initial marking M0.",
                "Now, verifying conflict-resistance of a marking becomes a very difficult task.",
                "It corresponds to the reachability problem in a CPN: can a state be reached or a marking achieved, that contains a conflict?.",
                "This reachability problem is known to be NP-complete for ordinary Petri Nets [22] and since CPNs are functionally identical, we cannot hope to verify conflict-resistance of a normative structure off-line in a reasonable amount of time.",
                "Therefore, distributed, run-time mechanisms are needed to ensure that a normative structure maintains consistency.",
                "We present one such mechanism in the following section. 6.",
                "MANAGING NORMATIVE STRUCTURES Once a conflict (as defined in Section 4) has been detected, we propose to employ the unifier to resolve the conflict.",
                "In our example, if the variables in prh(inform(a1, r1, a2, r2, p(Y, d), T )) do not get the values specified in substitution Ïƒ then there will not be a conflict.",
                "However, rather than computing the complement set of a substitution (which can be an infinite set) we propose to annotate the <br>prohibition</br> with the unifier itself and use it to determine what the variables of that <br>prohibition</br> cannot be in future unifications in order to avoid a conflict.",
                "We therefore denote annotated prohibitions as prh(Â¯I) Î£, where Î£ = {Ïƒ1, . . . , Ïƒn}, is a set of unifiers.",
                "Annotated norms3 are interpreted as deontic constructs with curtailed influences, that is, their effect (on agents, roles and illocutions) has been limited by the set Î£ of unifiers.",
                "A <br>prohibition</br> may be in conflict with various obligations in a given normative scene s = id, Î” and we need to record (and possibly avoid) all these conflicts.",
                "We define below an algorithm which ensures that a normative position will be added to a normative scene in such a way that it will not cause any conflicts. 3 Although we propose to curtail prohibitions, the same machinery can be used to define the curtailment of obligations instead.",
                "These different policies are dependent on the intended deontic semantics and requirements of the systems addressed.",
                "For instance, some MASs may require that their agents should not act in the presence of conflicts, that is, the obligation should be curtailed. 6.1 Conflict Resolution We propose a fine-grained way of resolving normative conflicts via unification.",
                "We detect the overlapping of the influences of norms , i.e. how they affect the behaviour of the concerned agents, and we curtail the influence of the normative position, by appropriately using the annotations when checking if the norm applies to illocutions.",
                "The algorithm shown in Figure 4 depicts how we maintain a conflict-free set of norms.",
                "It adds a given norm N to an existing, conflictfree normative state Î”, obtaining a resulting new normative state Î” which is conflict-free, that is, its prohibitions are annotated with a set of conflict sets indicating which bindings for variables have to be avoided for conflicts not to take place. algorithm addNorm(N, Î”) begin 1 timestamp(N) 2 case N of 3 per(Â¯I): Î” := Î” âˆª {N} 4 prh(I): if N âˆˆ Î” s.t. conflict(N, N , Ïƒ) then Î” := Î” 5 else Î” := Î” âˆª {N} 6 prh(Â¯I): 7 begin 8 Î£ := âˆ… 9 for each N âˆˆ Î” do 10 if conflict(N, N , Ïƒ) then Î£ := Î£ âˆª {Ïƒ} 11 Î” := Î” âˆª {N Î£} 12 end 13 obl(Â¯I): 14 begin 15 Î”1 := âˆ…; Î”2 := âˆ… 16 for each (N Î£) âˆˆ Î” do 17 if N = prh(I) then 18 if conflict(N , N, Ïƒ) then Î”1 := Î”1 âˆª {N Î£} 19 else nil 20 else 21 if conflict(N , N, Ïƒ) then 22 begin 23 Î”1 := Î”1 âˆª {N Î£} 24 Î”2 := Î”2 âˆª {N (Î£ âˆª {Ïƒ})} 25 end 26 Î” := (Î” âˆ’ Î”1) âˆª Î”2 âˆª {N} 27 end 28 end case 29 return Î” end Figure 4: Algorithm to Preserve Conflict-Freedom The algorithm uses a case of structure to differentiate the different possibilities for a given norm N. Line 3 addresses the case when the given norm is a permission: N is simply added to Î”.",
                "Lines 4-5 address the case when we attempt to add a ground <br>prohibition</br> to a normative state: if it conflicts with any obligation, then it is discarded; otherwise it is added to the normative state.",
                "Lines 6-12 describe the situation when the normative position to be added is a nonground <br>prohibition</br>.",
                "In this case, the algorithm initialises Î£ to an empty set and loops (line 9-10) through the norms N in the old normative state Î”.",
                "Upon finding one that conflicts with N, the algorithm updates Î£ by adding the newly found conflict set Ïƒ to it (line 10).",
                "By looping through Î”, we are able to check any conflicts between the new <br>prohibition</br> and the existing obligations, adequately building the annotation Î£ to be used when adding N to Î” in line 11.",
                "Lines 13-27 describe how a new obligation is accommodated to an existing normative state.",
                "We make use of two initially empty, temporary sets, Î”1, Î”2.",
                "The algorithm loops through Î” (lines 16-25) picking up those annotated prohibitions N Î£ which conflict with the new obligation.",
                "There are, however, two cases to deal with: the one when a ground The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 641 <br>prohibition</br> is found (line 17), and its exception, covering non-ground prohibitions (line 20).",
                "In both cases, the old <br>prohibition</br> is stored in Î”1 (lines 18 and 23) to be later removed from Î” (line 26).",
                "However, in the case of a nonground <br>prohibition</br>, the algorithm updates its annotation of conflict sets (line 24).",
                "The loop guarantees that an exhaustive (linear) search through a normative state takes place, checking if the new obligation is in conflict with any existing prohibitions, possibly updating the annotations of these conflicting prohibitions.",
                "In line 26 the algorithm builds the new updated Î” by removing the old prohibitions stored in Î”1 and adding the updated prohibitions stored in Î”2 (if any), as well as the new obligation N. Our proposed algorithm is correct in that, for a given normative position N and a normative state Î”, it provides a new normative state Î” in which all prohibitions have annotations recording how they unify with existing obligations.",
                "The annotations can be empty, though: this is the case when we have a ground <br>prohibition</br> or a <br>prohibition</br> which does not unify/conflict with any obligation.",
                "Permissions do not affect our algorithm and they are appropriately dealt with (line 3).",
                "Any attempt to insert a ground <br>prohibition</br> which conflicts, yields the same normative state (line 4).",
                "When a new obligation is being added then the algorithm guarantees that all prohibitions are considered (lines 14-27), leading to the removal of conflicting ground prohibitions or the update of annotations of non-ground prohibitions.",
                "The algorithm always terminates: the loops are over a finite set Î” and the conflict checks and set operations always terminate.",
                "The complexity of the algorithm is linear: the set Î” is only examined once for each possible case of norm to be added.",
                "When managing normative states we may also need to remove normative positions.",
                "This is straightforward: permissions can be removed without any problems; annotated prohibitions can also be removed without further considerations; obligations, however, require some housekeeping.",
                "When an obligation is to be removed, we must check it against all annotated prohibitions in order to update their annotations.",
                "We apply the conflict check and obtain a unifier, then remove this unifier from the prohibitions annotation.",
                "We invoke the removal algorithm as removeNorm(N, Î”): it returns a new normative state Î” in which N has been removed, with possible alterations to other normative positions as explained. 6.2 Enactment of a Normative Structure The enactment of a normative structure amounts to the parallel, distributed execution of normative scenes and normative transitions.",
                "For illustrative purposes, hereafter we shall describe the interplay between the payment and delivery normative scenes and the normative transition nt linking them in the upper half of figure 2.",
                "With this aim, consider for instance that obl(inform(jules, client, rod, acc, pay(copper, 400, 350), T) âˆˆ Î”payment and that Î”delivery holds prh(inform(rod,wm, jules, client, delivered(Z, Q), T)).",
                "Such states indicate that client Jules is obliged to pay Â£400 for 350kg of copper to accountant Rod according to the payment normative scene, whereas Rod, taking up the role of warehouse manager this time, is prohibited to deliver anything to client Jules according to the delivery normative scene.",
                "For each normative scene, the enactment process goes as follows.",
                "Firstly, it processes its incoming message queue that contains three types of messages: utterances from the activity it is linked to; and normative commands either to add or remove normative positions.",
                "For instance, in our example, the payment normative scene collects the illocution I = utt((inform(jules, client, rod, acc, pay(copper, 400, 350), 35)) standing for client Jules pending payment for copper (via arrow A in figure 2).",
                "Utterances are timestamped and subsequently added to the normative state.",
                "We would have Î”payment = Î”payment âˆª {I}, in our example.",
                "Upon receiving normative commands to either add or remove a normative position, the normative scene invokes the corresponding addition or removal algorithm described in Section 6.1.",
                "Secondly, the normative scene acknowledges its state change by sending a trigger message to every outgoing normative transition it is connected to.",
                "In our example, the payment normative scene would be signalling its state change to normative transition nt.",
                "For normative transitions, the process works differently.",
                "Because each normative transition controls the operation of a single rule, upon receiving a trigger message, it polls every incoming normative scene for substitutions for the relevant illocution schemata on the LHS of its rule.",
                "In our example, nt (being responsible for the rule described in Section 3.4), would poll the payment normative scene (via arrow B) for substitutions.",
                "Upon receiving replies from them (in the form of sets of substitutions together with time-stamps), it has to unify substitutions from each of these normative scenes.",
                "For each unification it finds, the rule is fired, and hence the corresponding normative command is sent along to the output normative scene.",
                "The normative transition then keeps track of the firing message it sent on and of the time-stamps of the normative positions that triggered the firing.",
                "This is done to ensure that the very same normative positions in the LHS of a rule only trigger its firing once.",
                "In our example, nt would be receiving Ïƒ = {X/jules, Y/rod, Z/copper, Q/350} from the payment normative scene.",
                "Since the substitions in Ïƒ unify with nts rule, the rule is fired, and the normative command add(delivery : obl(rod, wm, jules, client, delivered(copper, 350), T)) is sent along to the delivery normative scene to oblige Rod to deliver to client Jules 350kg of copper.",
                "After that, the delivery normative scene would invoke the addNorm algorithm from figure 4 with Î”delivery and N = obl(rod, wm, jules, client, delivered(copper, 350)) as arguments. 7.",
                "RELATED WORK AND CONCLUSIONS Our contributions in this paper are three-fold.",
                "Firstly, we introduce an approach for the management of and reasoning about norms in a distributed manner.",
                "To our knowledge, there is little work published in this direction.",
                "In [8, 21], two languages are presented for the distributed enforcement of norms in MAS.",
                "However, in both works, each agent has a local message interface that forwards legal messages according to a set of norms.",
                "Since these interfaces are local to each agent, norms can only be expressed in terms of actions of that agent.",
                "This is a serious disadvantage, e.g. when one needs to activate an obligation to one agent due to a certain message of another one.",
                "The second contribution is the proposal of a normative structure.",
                "The notion is fruitful because it allows the separation of normative and procedural concerns.",
                "The normative structure we propose makes evident the similarity between the propagation of normative positions and the propagation 642 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) of tokens in Coloured Petri Nets.",
                "That similarity readily suggests a mapping between the two, and gives grounds to a convenient analytical treatment of the normative structure, in general, and the complexity of conflict detection, in particular.",
                "The idea of modelling interactions (in the form of conversations) via Petri Nets has been investigated in [18], where the interaction medium and individual agents are modelled as CPN sub-nets that are subsequently combined for analysis.",
                "In [5], conversations are first designed and analysed at the level of CPNs and thereafter translated into protocols.",
                "Lin et al. [20] map conversation schemata to CPNs.",
                "To our knowledge, the use of this representation in the support of conflict detection in regulated MAS has not been reported elsewhere.",
                "Finally, we present a distributed mechanism to resolve normative conflicts.",
                "Sartor [25] treats normative conflicts from the point of view of legal theory and suggests a way to order the norms involved.",
                "His idea is implemented in [12] but requires a central resource for norm maintenance.",
                "The approach to conflict detection and resolution is an adaptation and extension of the work on instantiation graphs reported in [17] and a related algorithm in [27].",
                "The algorithm presented in the current paper can be used to manage normative states distributedly: normative scenes that happen in parallel have an associated normative state Î” to which the algorithm is independently applied each time a new norm is to be introduced.",
                "These three contributions we present in this paper open many possibilities for future work.",
                "We should mention first, that as a broad strategy we are working on a generalisation of the notion of normative structure to make it operate with different coordination models, with richer deontic content and on top of different computational realisations of regulated MAS.",
                "As a first step in this direction we are taking advantage of the de-coupling between interaction protocols and declarative normative guidance that the normative structure makes available, to provide a normative layer for electronic institutions (as defined in [1]).",
                "We expect such coupling will endow electronic institutions with a more flexible -and more expressive- normative environment.",
                "Furthermore, we want to extend our model along several directions: (1) to handle negation and constraints as part of the norm language, and in particular the notion of time; (2) to accommodate multiple, hierarchical norm authorities based on roles, along the lines of Cholvy and Cuppens [3] and power relationships as suggested by Carabelea et al. [2]; (3) to capture in the conflict resolution algorithm different semantics relating the deontic notions by supporting different axiomations (e.g., relative strength of <br>prohibition</br> versus obligation, default deontic notions, deontic inconsistencies).",
                "On the theoretical side, we intend to use analysis techniques of CPNs in order to characterise classes of CPNs (e.g., acyclic, symmetric, etc.) corresponding to families of Normative Structures that are susceptible to tractable offline conflict detection.",
                "The combination of these techniques along with our online conflict resolution mechanisms is intended to endow MAS designers with the ability to incorporate norms into their systems in a principled way. 8.",
                "REFERENCES [1] J. L. Arcos, M. Esteva, P. Noriega, J.",
                "A. RodrÂ´Ä±guez, and C. Sierra.",
                "Engineering open environments with electronic institutions.",
                "Journal on Engineering Applications of Artificial Intelligence, 18(2):191-204, 2005. [2] C. Carabelea, O. Boissier, and C. Castelfranchi.",
                "Using social power to enable agents to reason about being part of a group.",
                "In 5th Internat.",
                "Workshop, ESAW 2004, pages 166-177, 2004. [3] L. Cholvy and F. Cuppens.",
                "Solving normative conflicts by merging roles.",
                "In Fifth International Conference on Artificial Intelligence and Law, Washington, USA, 1995. [4] S. Christensen and T. B. Haagh.",
                "Design CPN - overview of CPN ML syntax.",
                "Technical report, University of Aarhus, 1996. [5] R. S. Cost, Y. Chen, T. W. Finin, Y. Labrou, and Y. Peng.",
                "Using colored petri nets for conversation modeling.",
                "In Issues in Agent Communication, pages 178-192, London, UK, 2000. [6] F. Dignum.",
                "Autonomous Agents with Norms.",
                "Artificial Intelligence and Law, 7(1):69-79, 1999. [7] A. Elhag, J. Breuker, and P. Brouwer.",
                "On the Formal Analysis of Normative Conflicts.",
                "Information & Comms.",
                "Techn.",
                "Law, 9(3):207-217, Oct. 2000. [8] M. Esteva, W. Vasconcelos, C. Sierra, and J.",
                "A. RodrÂ´Ä±guez-Aguilar.",
                "Norm consistency in electronic institutions. volume 3171 (LNAI), pages 494-505.",
                "Springer-Verlag, 2004. [9] M. Fitting.",
                "First-Order Logic and Automated Theorem Proving.",
                "Springer-Verlag, New York, U.S.A., 1990. [10] N. Fornara, F. Vigan`o, and M. Colombetti.",
                "An Event Driven Approach to Norms in Artificial Institutions.",
                "In AAMAS05 Workshop: Agents, Norms and Institutions for Regulated Multiagent Systems (ANI@REM), Utrecht, 2005. [11] D. Gaertner, P. Noriega, and C. Sierra.",
                "Extending the BDI architecture with commitments.",
                "In Proceedings of the 9th International Conference of the Catalan Association of Artificial Intelligence, 2006. [12] A. GarcÂ´Ä±a-Camino, P. Noriega, and J.-A.",
                "RodrÂ´Ä±guez-Aguilar.",
                "An Algorithm for Conflict Resolution in Regulated Compound Activities.",
                "In 7th Int.Workshop - ESAW 06, 2006. [13] A. GarcÂ´Ä±a-Camino, J.-A.",
                "RodrÂ´Ä±guez-Aguilar, C. Sierra, and W. Vasconcelos.",
                "A Distributed Architecture for Norm-Aware Agent Societies.",
                "In DALT III, volume 3904 (LNAI), pages 89-105.",
                "Springer, 2006. [14] F. Giunchiglia and L. Serafini.",
                "Multi-language hierarchical logics or: How we can do without modal logics.",
                "Artificial Intelligence, 65(1):29-70, 1994. [15] J. Habermas.",
                "The Theory of Communication Action, Volume One, Reason and the Rationalization of Society.",
                "Beacon Press, 1984. [16] K. Jensen.",
                "Coloured Petri Nets: Basic Concepts, Analysis Methods and Practical Uses (Volume 1).",
                "Springer, 1997. [17] M. Kollingbaum and T. Norman.",
                "Strategies for resolving norm conflict in practical reasoning.",
                "In ECAI Workshop Coordination in Emergent Agent Societies 2004, 2004. [18] J.-L. Koning, G. Francois, and Y. Demazeau.",
                "Formalization and pre-validation for interaction protocols in a multi agent systems.",
                "In ECAI, pages 298-307, 1998. [19] B. Kramer and J. Mylopoulos.",
                "Knowledge Representation.",
                "In S. C. Shapiro, editor, Encyclopedia of Artificial Intelligence, volume 1, pages 743-759.",
                "John Wiley & Sons, 1992. [20] F. Lin, D. H. Norrie, W. Shen, and R. Kremer.",
                "A schema-based approach to specifying conversation policies.",
                "In Issues in Agent Communication, pages 193-204, 2000. [21] N. Minsky.",
                "Law Governed Interaction (LGI): A Distributed Coordination and Control Mechanism (An Introduction, and a Reference Manual).",
                "Technical report, Rutgers University, 2005. [22] T. Murata.",
                "Petri nets: Properties, analysis and applications.",
                "Proceedings of the IEEE, 77(4):541-580, 1989. [23] S. Parsons, C. Sierra, and N. Jennings.",
                "Agents that reason and negotiate by arguing.",
                "Journal of Logic and Computation, 8(3):261-292, 1998. [24] A. Ricci and M. Viroli.",
                "Coordination Artifacts: A Unifying Abstraction for Engineering Environment-Mediated Coordination in MAS.",
                "Informatica, 29:433-443, 2005. [25] G. Sartor.",
                "Normative conflicts in legal reasoning.",
                "Artificial Intelligence and Law, 1(2-3):209-235, June 1992. [26] M. Sergot.",
                "A Computational Theory of Normative Positions.",
                "ACM Trans.",
                "Comput.",
                "Logic, 2(4):581-622, 2001. [27] W. W. Vasconcelos, M. Kollingbaum, and T. Norman.",
                "Resolving Conflict and Inconsistency in Norm-Regulated Virtual Organisations.",
                "In Proceedings of AAMAS 07, Hawaii, USA, 2007.",
                "IFAAMAS. [28] G. H. von Wright.",
                "Norm and Action: A Logical Inquiry.",
                "Routledge and Kegan Paul, London, 1963. [29] M. Wooldridge.",
                "An Introduction to Multiagent Systems.",
                "John Wiley & Sons, Chichester, UK, Feb. 2002.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 643"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Una regla de transiciÃ³n normativa R es de la forma: r :: = v c v :: = ids: d |V, V D :: = N |utt (Â¯i) n :: = per (Â¯i) |PRH (Â¯i) |obl (Â¯i) c :: = add (ids: n) |Eliminar (IDS: N) donde Â¯i es un esquema de ilocuciÃ³n, n es una posiciÃ³n normativa (es decir, permiso, \"prohibiciÃ³n\" u obligaciÃ³n), IDS es un identificador para la actividad S y C es un comando normativo.",
                "Proponemos usar la nociÃ³n estÃ¡ndar de unificaciÃ³n [9] para detectar cuando una \"prohibiciÃ³n\" y una superposiciÃ³n de permiso.",
                "Por ejemplo, una obligaciÃ³n obl (Inform (A1, R1, A2, R2, P (C, X), T)) y una \"ProhibiciÃ³n\" PRH (Inform (A1, R1, A2, R2, P (Y, D), T)) estÃ¡n en conflicto, ya que se unen bajo Ïƒ = {a1/a1, r1/r1, a2/a2, r2/r2, y/c, x/d, t/t}).",
                "Es decir, una \"prohibiciÃ³n\" y una obligaciÃ³n estÃ¡n en conflicto si, y solo si sus ilocuciones se unen bajo Ïƒ.",
                "En este documento nos centramos en los conflictos de \"prohibiciÃ³n\"/obligaciÃ³n, pero la maquinaria computacional introducida en la SecciÃ³n 6.1 puede usarse igualmente para detectar las inconsistencias de \"prohibiciÃ³n\"/permiso, si sustituimos la modalidad obl por PER.5.",
                "Sin embargo, en lugar de calcular el conjunto del complemento de una sustituciÃ³n (que puede ser un conjunto infinito), proponemos anotar la \"prohibiciÃ³n\" con el unificador en sÃ­ y usarlo para determinar quÃ© las variables de esa \"prohibiciÃ³n\" no pueden estar en futuras unificaciones enpara evitar un conflicto.",
                "Una \"prohibiciÃ³n\" puede estar en conflicto con varias obligaciones en una escena normativa dada S = ID, Î´ y necesitamos registrar (y posiblemente evitar) todos estos conflictos.",
                "Las lÃ­neas 4-5 abordan el caso cuando intentamos agregar una \"prohibiciÃ³n\" terrestre a un estado normativo: si entra en conflicto con alguna obligaciÃ³n, entonces se descarta;De lo contrario, se agrega al estado normativo.",
                "Al pasar a travÃ©s de Î´, podemos verificar cualquier conflicto entre la nueva \"prohibiciÃ³n\" y las obligaciones existentes, construyendo adecuadamente la anotaciÃ³n Ïƒ que se utilizarÃ¡ al agregar n a Î´ en la lÃ­nea 11.",
                "Conf.En agentes autÃ³nomos y sistemas de mÃºltiples agentes (AAMAS 07) 641 \"ProhibiciÃ³n\" se encuentra (lÃ­nea 17), y su excepciÃ³n, que cubre las prohibiciones no terrestres (lÃ­nea 20).",
                "En ambos casos, la antigua \"prohibiciÃ³n\" se almacena en Î”1 (lÃ­neas 18 y 23) que luego se eliminarÃ¡n de Î´ (lÃ­nea 26).",
                "Sin embargo, en el caso de una \"prohibiciÃ³n\" no ruida, el algoritmo actualiza su anotaciÃ³n de conjuntos de conflictos (lÃ­nea 24).",
                "Sin embargo, las anotaciones pueden estar vacÃ­as: este es el caso cuando tenemos una \"prohibiciÃ³n\" de tierra o una \"prohibiciÃ³n\" que no unifica/confunde en conflicto con ninguna obligaciÃ³n.",
                "Cualquier intento de insertar una \"prohibiciÃ³n\" terrestre que entra en conflicto, produce el mismo estado normativo (lÃ­nea 4).",
                "AdemÃ¡s, queremos extender nuestro modelo a lo largo de varias direcciones: (1) para manejar la negaciÃ³n y las limitaciones como parte del lenguaje de la norma, y en particular la nociÃ³n de tiempo;(2) Para acomodar mÃºltiples autoridades de normas jerÃ¡rquicas basadas en roles, en la lÃ­nea de Cholvy y Cuppens [3] y las relaciones de poder como lo sugieren Carabelea et al.[2];(3) Capturar en el algoritmo de resoluciÃ³n de conflictos diferentes semÃ¡nticas relacionadas con las nociones deoÃ­picas al apoyar diferentes axiomaciones (por ejemplo, fuerza relativa de \"prohibiciÃ³n\" versus obligaciÃ³n, nociones deÃ³nticas predeterminadas, inconsistencias deÃ³nticas)."
            ],
            "translated_text": "",
            "candidates": [
                "prohibiciÃ³n",
                "prohibiciÃ³n",
                "prohibiciÃ³n",
                "prohibiciÃ³n",
                "prohibiciÃ³n",
                "ProhibiciÃ³n",
                "prohibiciÃ³n",
                "prohibiciÃ³n",
                "ProhibiciÃ³n",
                "prohibiciÃ³n",
                "prohibiciÃ³n",
                "prohibiciÃ³n",
                "prohibiciÃ³n",
                "prohibiciÃ³n",
                "prohibiciÃ³n",
                "prohibiciÃ³n",
                "prohibiciÃ³n",
                "prohibiciÃ³n",
                "ProhibiciÃ³n",
                "prohibiciÃ³n",
                "prohibiciÃ³n",
                "ProhibiciÃ³n",
                "prohibiciÃ³n",
                "prohibiciÃ³n",
                "prohibiciÃ³n",
                "prohibiciÃ³n",
                "prohibiciÃ³n",
                "prohibiciÃ³n",
                "prohibiciÃ³n",
                "prohibiciÃ³n",
                "prohibiciÃ³n",
                "prohibiciÃ³n",
                "prohibiciÃ³n"
            ],
            "error": []
        },
        "permission overlap": {
            "translated_key": "superposiciÃ³n de permiso",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Distributed Norm Management in Regulated Multi-Agent Systems âˆ— Dorian Gaertner Dept.",
                "of Computing, Imperial College London, London SW7 2AZ, United Kingdom dg00@doc.ic.ac.uk Andres Garcia-Camino, Pablo Noriega, J.-A.",
                "Rodriguez-Aguilar IIIA-CSIC, 08193 Bellaterra, Spain {andres,pablo,jar}@iiia.csic.es Wamberto Vasconcelos Dept. of Computing Science, University of Aberdeen, Aberdeen AB24 3UE, United Kingdom wvasconcelos@acm.org ABSTRACT Norms are widely recognised as a means of coordinating multi-agent systems.",
                "The distributed management of norms is a challenging issue and we observe a lack of truly distributed computational realisations of normative models.",
                "In order to regulate the behaviour of autonomous agents that take part in multiple, related activities, we propose a normative model, the Normative Structure (NS), an artifact that is based on the propagation of normative positions (obligations, prohibitions, permissions), as consequences of agents actions.",
                "Within a NS, conflicts may arise due to the dynamic nature of the MAS and the concurrency of agents actions.",
                "However, ensuring conflict-freedom of a NS at design time is computationally intractable.",
                "We show this by formalising the notion of conflict, providing a mapping of NSs into Coloured Petri Nets and borrowing well-known theoretical results from that field.",
                "Since online conflict resolution is required, we present a tractable algorithm to be employed distributedly.",
                "We then demonstrate that this algorithm is paramount for the distributed enactment of a NS.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Languages and structures General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION A fundamental feature of open, regulated multi-agent systems in which autonomous agents interact, is that participating agents are meant to comply with the conventions of the system.",
                "Norms can be used to model such conventions and hence as a means to regulate the observable behaviour of agents [6, 29].",
                "There are many contributions on the subject of norms from sociologists, philosophers and logicians (e.g., [15, 28]).",
                "However, there are very few proposals for computational realisations of normative models - the way norms can be integrated in the design and execution of MASs.",
                "The few that exist (e.g. [10, 13, 24]), operate in a centralised manner which creates bottlenecks and single points-of-failure.",
                "To our knowledge, no proposal truly supports the distributed enactment of normative environments.",
                "In our paper we approach that problem and propose means to handle conflicting commitments in open, regulated, multiagent systems in a distributed manner.",
                "The type of regulated MAS we envisage consists of multiple, concurrent, related activities where agents interact.",
                "Each agent may concurrently participate in several activities, and change from one activity to another.",
                "An agents actions within an activity may have consequences in the form of normative positions (i.e. obligations, permissions, and prohibitions) [26] that may constrain its future behaviour.",
                "For instance, a buyer agent who runs out of credit may be forbidden to make further offers, or a seller agent is obliged to deliver after closing a deal.",
                "We assume that agents may choose not to fulfill all their obligations and hence may be sanctioned by the MAS.",
                "Notice that, when activities are distributed, normative positions must flow from the activities in which they are generated to those in which they take effect.",
                "For instance, the sellers obligation above must flow (or be propagated) from a negotiation activity to a delivery activity.",
                "Since in an open, regulated MAS one cannot embed normative aspects into the agents design, we adopt the view that the MAS should be supplemented with a separate set of norms that further regulates the behaviour of participating agents.",
                "In order to model the separation of concerns between the coordination level (agents interactions) and the normative level (propagation of normative positions), we propose an artifact called the Normative Structure (NS).",
                "Within a NS conflicts may arise due to the dynamic nature of the MAS and the concurrency of agents actions.",
                "For instance, an agent may be obliged and prohibited to do the 636 978-81-904262-7-5 (RPS) c 2007 IFAAMAS very same action in an activity.",
                "Since the regulation of a MAS entails that participating agents need to be aware of the validity of those actions that take place within it, such conflicts ought to be identified and possibly resolved if a claim of validity is needed for an agent to engage in an action or be sanctioned.",
                "However, ensuring conflict-freedom of a NS at design time is computationally intractable.",
                "We show this by formalising the notion of conflict, providing a mapping of NSs into Coloured Petri Nets (CPNs) and borrowing well-known theoretical results from the field of CPNs.",
                "We believe that online conflict detection and resolution is required.",
                "Hence, we present a tractable algorithm for conflict resolution.",
                "This algorithm is paramount for the distributed enactment of a NS.",
                "The paper is organised as follows.",
                "In Section 2 we detail a scenario to serve as an example throughout the paper.",
                "Next, in Section 3 we formally define the normative structure artifact.",
                "Further on, in Section 4 we formalise the notion of conflict to subsequently analyse the complexity of conflict detection in terms of CPNs in Section 5.",
                "Section 6 describes the computational management of NSs by describing their enactment and presenting an algorithm for conflict resolution.",
                "Finally, we comment on related work, draw conclusions and report on future work in Section 7. 2.",
                "SCENARIO We use a supply-chain scenario in which companies and individuals come together at an online marketplace to conduct business.",
                "The overall transaction procedure may be organised as six distributed activities, represented as nodes in the diagram in Figure 1.",
                "They involve different participants whose behaviour is coordinated through protocols.",
                "In this scenario agents can play one of four roles: marExit Registration Payment Delivery Negotiation Coordination Model Contract Figure 1: Activity Structure of the Scenario ketplace accountant (acc), client, supplier (supp) and warehouse managers (wm).",
                "The arrows connecting the activities represent how agents can move from one activity to another.",
                "After registering at the marketplace, clients and suppliers get together in an activity where they negotiate the terms of their transaction, i.e. prices, amounts of goods to be delivered, deadlines and other details.",
                "In the contract activity, the order becomes established and an invoice is prepared.",
                "The client will then participate in a payment activity, verifying his credit-worthiness and instructing his bank to transfer the correct amount of money.",
                "The supplier in the meantime will arrange for the goods to be delivered (e.g. via a warehouse manager) in the delivery activity.",
                "Finally, agents can leave the marketplace conforming to a predetermined exit protocol.",
                "The marketplace accountant participates in most of the activities as a trusted provider of auditing tools.",
                "In the rest of the paper we shall build on this scenario to exemplify the notion of normative structure and to illustrate our approach to conflict detection and resolution in a distributed setting. 3.",
                "NORMATIVE STRUCTURE In MASs agents interact according to protocols which naturally are distributed.",
                "We advocate that actions in one such protocol may have an effect on the enactment of other protocols.",
                "Certain actions can become prohibited or obligatory, for example.",
                "We take normative positions to be obligations, prohibitions and permissions akin to work described in [26].",
                "The intention of adding or removing a normative position we call normative command.",
                "Occurrences of normative positions in one protocol may also have consequences for other protocols1 .",
                "In order to define our norm language and specify how normative positions are propagated, we have been inspired by multi-context systems [14].",
                "These systems allow the structuring of knowledge into distinct formal theories and the definition of relationships between them.",
                "The relationships are expressed as bridge rules - deducibility of formulae in some contexts leads to the deduction of other formulae in other contexts.",
                "Recently, these systems have been successfully used to define agent architectures [11, 23].",
                "The metaphor translates to our current work as follows: the utterance of illocutions and/or the existence of normative positions in some normative scenes leads to the deduction of normative positions in other normative scenes.",
                "We are concerned with the propagation and distribution of normative positions within a network of distributed, normative scenes as a consequence of agents actions.",
                "We take normative scenes to be sets of normative positions and utterances that are associated with an underlying interaction protocol corresponding to an activity.",
                "In this section, we first present a simple language capturing these aspects and formally introduce the notions of normative scene, normative transition rule and normative structure.",
                "We give the intended semantics of these rules and show how to control a MAS via norms in an example. 3.1 Basic Concepts The building blocks of our language are terms and atomic formulae: Def. 1.",
                "A term, denoted as t, is (i) any constant expressed using lowercase (with or without subscripts), e.g. a, b0, c or (ii) any variable expressed using uppercase (with or without subscripts), e.g.",
                "X, Y, Zb or (iii) any function f(t1, . . . , tn), where f is an n-ary function symbol and t1, .., tn are terms.",
                "Some examples of terms and functions are Credit, price or offer(bible, 30) being respectively a variable, a constant and a function.",
                "We will be making use of identifiers throughout the paper, which are constant terms and also need the following definition: Def. 2.",
                "An atomic formula is any construct p(t1, . . . , tn), where p is an n-ary predicate symbol and t1, . . . , tn are terms.",
                "The set of all atomic formulae is denoted as Î”.",
                "We focus on an expressive class of MASs in which interaction is carried out by means of illocutionary speech acts exchanged among participating agents: Def. 3.",
                "Illocutions I are ground atomic formulae which have the form p(ag, r, ag , r , Î´, t) where p is an element of 1 Here, we abstract from protocols and refer to them generically as activities.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 637 a set of illocutionary particles (e.g. inform, request, offer); ag, ag are agent identifiers; r, r are role identifiers; Î´, an arbitrary ground term, is the content of the message, built from a shared content language; t âˆˆ N is a time stamp.",
                "The intuitive meaning of p(ag, r, ag , r , m, t) is that agent ag playing role r sent message m to agent ag playing role r at time t. An example of an illocution is inform(ag4, supp, ag3, client, offer(wire, 12), 10).",
                "Sometimes it is useful to refer to illocutions that are not fully grounded, that is, those that may contain uninstantiated (free) variables.",
                "In the description of a protocol, for instance, the precise values of the message exchanged can be left unspecified.",
                "During the enactment of the protocol agents will produce the actual values which will give rise to a ground illocution.",
                "We can thus define illocution schemata: Def. 4.",
                "An illocution schema Â¯I is any atomic formula p(ag, r, ag , r , Î´, t) in which some of the terms may either be variables or may contain variables. 3.2 Formal Definition of the Notion of NS We first define normative scenes as follows: Def. 5.",
                "A normative scene is a tuple s = ids, Î”s where ids is a scene identifier and Î”s is the set of atomic formulae Î´ (i.e. utterances and normative positions) that hold in s. We will also refer to Î”s as the state of normative scene s. For instance, a snapshot of the state of the delivery normative scene of our scenario could be represented as: Î”s = 8 < : utt(request(sean, client, kev, wm, receive(wire, 200), 20)), utt(accept(kev, wm, sean, client, receive(wire, 200), 30)), obl(inform(kev, wm, sean, client, delivered(wire, 200), 30)) 9 = ; That is, agent Sean taking up the client role has requested agent Kev (taking up the warehouse manager role wm) to receive 200kg of wire, and agent Kev is obliged to deliver 200kg of wire to Sean since he accepted the request.",
                "Note that the state of a normative scene Î”s evolves over time.",
                "These normative scenes are connected to one another via normative transitions that specify how utterances and normative positions in one scene affect other normative scenes.",
                "As mentioned above, activities are not independent since illocutions uttered in some of them may have an effect on other ones.",
                "Normative transition rules define the conditions under which a normative command is generated.",
                "These conditions are either utterances or normative positions associated with a given protocol (denoted e.g. activity : utterance) which yield a normative command, i.e. the addition or removal of another normative position, possibly related to a different activity.",
                "Our transition rules are thus defined: Def. 6.",
                "A normative transition rule R is of the form: R ::= V C V ::= ids : D | V, V D ::= N | utt(Â¯I) N ::= per(Â¯I) | prh(Â¯I) | obl(Â¯I) C ::= add(ids : N) | remove(ids : N) where Â¯I is an illocution schema, N is a normative position (i.e. permission, prohibition or obligation), ids is an identifier for activity s and C is a normative command.",
                "We endow our language with the usual semantics of rulebased languages [19].",
                "Rules map an existing normative structure to a new normative structure where only the state of the normative scenes change.",
                "In the definitions below we rely on the standard concept of substitution [9].",
                "Def. 7.",
                "A normative transition is a tuple b = idb, rb where idb is an identifier and rb is a normative transition rule.",
                "We are proposing to extend the notion of MAS, regulated by protocols, with an extra layer consisting of normative scenes and normative transitions.",
                "This layer is represented as a bi-partite graph that we term normative structure.",
                "A normative structure relates normative scenes and normative transitions specifying which normative positions are to be generated or removed in which normative scenes.",
                "Def. 8.",
                "A normative structure is a labelled bi-partite graph NS = Nodes, Edges, Lin , Lout .",
                "Nodes is a set SâˆªB where S is a set of normative scenes and B is a set of normative transitions.",
                "Edges is a set Ain âˆª Aout where Ain âŠ† S Ã— B is a set of input arcs labelled with an atomic formula using the labelling function Lin : Ain â†’ D; and Aout âŠ† B Ã— S is a set of output arcs labelled with a normative position using the labelling function Lout : Aout â†’ N. The following must hold: 1.",
                "Each atomic formula appearing in the LHS of a rule rb must be of the form (ids : D) where s âˆˆ S and D âˆˆ Î” and âˆƒain âˆˆ Ain such that ain = (s, b) and Lin (ain ) = D. 2.",
                "The atomic formula appearing in the RHS of a rule rb must be of the form add(ids : N) or remove(ids : N) where s âˆˆ S and âˆƒaout âˆˆ Aout such that aout = (b, s) and Lout (aout ) = N. 3. âˆ€a âˆˆ Ain such that a = (s, b) and b = idb, rb and Lin (a) = D then (ids:D) must occur in the LHS of rb. 4. âˆ€a âˆˆ Aout such that a = (b, s) and b = idb, rb and Lout (a) = N then add(ids : N) or remove(ids : N) must occur in the RHS of rb.",
                "The first two points ensure that every atomic formulae on the LHS of a normative transition rule labels an arc entering the appropriate normative transition in the normative structure, and that the atomic formula on the RHS labels the corresponding outgoing arc.",
                "Points three and four ensure that labels from all incoming arcs are used in the LHS of the normative transition rule that these arcs enter into, and that the labels from all outgoing arcs are used in the RHS of the normative transition rule that these arcs leave. 3.3 Intended Semantics The formal semantics will be defined via a mapping to Coloured Petri Nets in Section 5.1.",
                "Here we start defining the intended semantics of normative transition rules by describing how a rule changes a normative scene of an existing normative structure yielding a new normative structure.",
                "Each rule is triggered once for each substitution that unifies the left-hand side V of the rule with the state of the corresponding normative scenes.",
                "An atomic formula (i.e. an utterance or a normative position) holds iff it is unifiable with an utterance or normative position that belongs to the state of the corresponding normative scene.",
                "Every time a rule is triggered, the normative command specified on the right-hand side of that rule is carried out, intending to add or remove a normative position from the state of the corresponding normative scene.",
                "However, addition is not unconditional as conflicts may arise.",
                "This topic will be treated in Sections 4 and 6.1. 638 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.4 Example In our running example we have the following exemplary normative transition rule: â€ž payment : obl(inform(X, client, Y, acc, pay(Z, P, Q), T )), payment : utt(inform(X, client, Y, acc, pay(Z, P, Q), T )) Â« delivery : add(obl(inform(Y, wm, X, client, delivered(Z, Q), T ))) That is, during the payment activity, an obligation on client X to inform accountant Y about the payment P of item Z at time T and the corresponding utterance which fulfills this obligation allows the flow of a norm to the delivery activity.",
                "The norm is an obligation on agent Y (this time taking up the role of the warehouse manager wm) to send a message to client X that item Z has been delivered.",
                "We show in Figure 2 a diagrammatic representation of how activities and a normative structure relate: Payment Delivery Contract Normative Level Exit Registration Payment Delivery Negotiation Coordination Level Contract nt Figure 2: Activities and Normative Structure As illocutions are uttered during activities, normative positions arise.",
                "Utterances and normative positions are combined in transition rules, causing the flow of normative positions between normative scenes.",
                "The connection between the two levels is described in Section 6.2. 4.",
                "CONFLICT DEFINITION The terms deontic conflict and deontic inconsistency have been used interchangeably in the literature.",
                "However, in this paper we adopt the view of [7] in which the authors suggest that a deontic inconsistency arises when an action is simultaneously permitted and prohibited - since a permission may not be acted upon, no real conflict occurs.",
                "The situations when an action is simultaneously obliged and prohibited are, however, deontic conflicts, as both obligations and prohibitions influence behaviours in a conflicting fashion.",
                "The content of normative positions in this paper are illocutions.",
                "Therefore, a normative conflict arises when an illocution is simultaneously obliged and prohibited.",
                "We propose to use the standard notion of unification [9] to detect when a prohibition and a <br>permission overlap</br>.",
                "For instance, an obligation obl(inform(A1, R1, A2, R2, p(c, X), T)) and a prohibition prh(inform(a1, r1, a2, r2, p(Y, d), T )) are in conflict as they unify under Ïƒ = {A1/a1, R1/r1, A2/a2, R2/r2, Y/c, X/d, T/T }).",
                "We formally capture this notion: Def. 9.",
                "A (deontic) conflict arises between two normative positions N and N under a substitution Ïƒ, denoted as conflict(N, N , Ïƒ), if and only if N = prh(Â¯I), N = obl(Â¯I ) and unify(Â¯I,Â¯I , Ïƒ).",
                "That is, a prohibition and an obligation are in conflict if, and only if, their illocutions unify under Ïƒ.",
                "The substitution Ïƒ, called here the conflict set, unifies the agents, roles and atomic formulae.",
                "We assume that unify is a suitable implementation of a unification algorithm which i) always terminates (possibly failing, if a unifier cannot be found); ii) is correct; and iii) has linear computational complexity.",
                "Inconsistencies caused by the same illocution being simultaneously permitted and prohibited can be formalised similarly.",
                "In this paper we focus on prohibition/obligation conflicts, but the computational machinery introduced in Section 6.1 can equally be used to detect prohibition/permission inconsistencies, if we substitute modality obl for per. 5.",
                "FORMALISING CONFLICT-FREEDOM In this section we introduce some background knowledge on CPNs assuming a basic understanding of ordinary Petri Nets.",
                "For technical details we refer the reader to [16].",
                "We then map NSs to CPNs and analyse their properties.",
                "CPNs combine the strength of Petri nets with the strength of functional programming languages.",
                "On the one hand, Petri nets provide the primitives for the description of the synchronisation of concurrent processes.",
                "As noticed in [16], CPNs have a semantics which builds upon true concurrency, instead of interleaving.",
                "In our opinion, a true-concurrency semantics is easier to work with because it is the way we envisage the connection between the coordination level and the normative level of a multi-agent system to be.",
                "On the other hand, the functional programming languages used by CPNs provide the primitives for the definition of data types and the manipulation of their data values.",
                "Thus, we can readily translate expressions of a normative structure.",
                "Last but not least, CPNs have a well-defined semantics which unambiguously defines the behaviour of each CPN.",
                "Furthermore, CPNs have a large number of formal analysis methods and tools by which properties of CPNs can be proved.",
                "Summing up, CPNs provide us with all the necessary features to formally reason about normative structures given that an adequate mapping is provided.",
                "In accordance with Petri nets, the states of a CPN are represented by means of places.",
                "But unlike Petri Nets, each place has an associated data type determining the kind of data which the place may contain.",
                "A state of a CPN is called a marking.",
                "It consists of a number of tokens positioned on the individual places.",
                "Each token carries a data value which has the type of the corresponding place.",
                "In general, a place may contain two or more tokens with the same data value.",
                "Thus, a marking of a CPN is a function which maps each place into a multi-set2 of tokens of the correct type.",
                "One often refers to the token values as token colours and one also refers to the data types as colour sets.",
                "The types of a CPN can be arbitrarily complex.",
                "Actions in a CPN are represented by means of transitions.",
                "An incoming arc into a transition from a place indicates that the transition may remove tokens from the corresponding place while an outgoing arc indicates that the transition may add tokens.",
                "The exact number of tokens and their data values are determined by the arc expressions, which are encoded using the programming language chosen for the CPN.",
                "A transition is enabled in a CPN if and only if all the 2 A multi-set (or bag) is an extension to the notion of set, allowing the possibility of multiple appearances of the same element.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 639 variables in the expressions of its incoming arcs are bound to some value(s) (each one of these bindings is referred to as a binding element).",
                "If so, the transition may occur by removing tokens from its input places and adding tokens to its output places.",
                "In addition to the arc expressions, it is possible to attach a boolean guard expression (with variables) to each transition.",
                "Putting all the elements above together we obtain a formal definition of CPN that shall be employed further ahead for mapping purposes.",
                "Def. 10.",
                "A CPN is a tuple Î£, P, T, A, N, C, G, E, I where: (i) Î£ is a finite set of non-empty types, also called colour sets; (ii) P is a finite set of places; (iii) T is a finite set of transitions; (iv) A is a finite set of arcs; (v) N is a node function defined from A into P Ã— T âˆª T Ã— P; (vi) C is a colour function from P into Î£; (vii) G is a guard function from T into expressions; (viii) E is an arc expression function from A into expressions; (ix) I is an initialisation function from P into closed expressions; Notice that the informal explanation of the enabling and occurrence rules given above provides the foundations to understand the behaviour of a CPN.",
                "In accordance with ordinary Petri nets, the concurrent behaviour of a CPN is based on the notion of step.",
                "Formally, a step is a non-empty and finite multi-set over the set of all binding elements.",
                "Let step S be enabled in a marking M. Then, S may occur, changing the marking M to M .",
                "Moreover, we say that marking M is directly reachable from marking M by the occurrence of step S, and we denote it by M[S > M .",
                "A finite occurrence sequence is a finite sequence of steps and markings: M1[S1 > M2 . . .",
                "Mn[Sn > Mn+1 such that n âˆˆ N and Mi[Si > Mi+1 âˆ€i âˆˆ {1, . . . , n}.",
                "The set of all possible markings reachable for a net Net from a marking M is called its reachability set, and is denoted as R(Net, M). 5.1 Mapping to Coloured Petri Nets Our normative structure is a labelled bi-partite graph.",
                "The same is true for a Coloured Petri Net.",
                "We are presenting a mapping f from one to the other, in order to provide semantics for the normative structure and prove properties about it by using well-known theoretical results from work on CPNs.",
                "The mapping f makes use of correspondences between normative scenes and CPN places, normative transitions and CPN transitions and finally, between arc labels and CPN arc expressions.",
                "S â†’ P B â†’ T Lin âˆª Lout â†’ E The set of types is the singleton set containing the colour NP (i.e.",
                "Î£ = {NP}).",
                "This complex type is structured as follows (we use CPN-ML [4] syntax): color NPT = with Obl | Per | Prh | NoMod color IP = with inform | declare | offer color UTT = record illp : IP ag1, role1, ag2, role2 : string content: string time : int color NP = record mode : NPT illoc : UTT Modelling illocutions as norms without modality (NoMod) is a formal trick we use to ensure that sub-nets can be combined as explained below.",
                "Arcs are mapped almost directly.",
                "A is a finite set of arcs and N is a node function, such that âˆ€a âˆˆ A âˆƒa âˆˆ Ain âˆªAout .",
                "N(a) = a .",
                "The initialisation function I is defined as I(p) = Î”s (âˆ€s âˆˆ S where p is obtained from s using the mapping; remember that s = ids, Î”s ).",
                "Finally, the colour function C assigns the colour NP to every place: C(p) = NP (âˆ€p âˆˆ P).",
                "We are not making use of the guard function G. In future work, this function can be used to model constraints when we extend the expressiveness of our norm language. 5.2 Properties of Normative Structures Having defined the mapping from normative structures to Coloured Petri Nets, we now look at properties of CPNs that help us understand the complexity of conflict detection.",
                "One question we would like to answer is, whether at a given point in time, a given normative structure is conflict-free.",
                "Such a snapshot of a normative structure corresponds to a marking in the mapped CPN.",
                "Def. 11.",
                "Given a marking Mi, this marking is conflictfree if Â¬âˆƒp âˆˆ P. âˆƒnp1, np2 âˆˆ Mi(p) such that np1.mode = Obl and np2.mode = Prh and np1.illoc and np2.illoc unify under a valid substitution.",
                "Another interesting question would be, whether a conflict will occur from such a snapshot of the system by propagating the normative positions.",
                "In order to answer this question, we first translate the snapshot of the normative structure to the corresponding CPN and then execute the finite occurence sequence of markings and steps, verifying the conflict-freedom of each marking as we go along.",
                "Def. 12.",
                "Given a marking Mi, a finite occurrence sequence Si, Si+1, ..., Sn is called conflict-free, if and only if Mi[Si > Mi+1 . . .",
                "Mn[Sn > Mn+1 and Mk is conflict-free for all k such that i â‰¤ k â‰¤ n + 1.",
                "However, the main question we would like to investigate, is whether or not a given normative structure is conflictresistant, that is, whether or not the agents enacting the MAS are able to bring about conflicts through their actions.",
                "As soon as one includes the possibility of actions (or utterances) from autonomous agents, one looses determinism.",
                "Having mapped the normative structure to a CPN, we now add CPN models of the agents interactions.",
                "Each form of agent interaction (i.e. each activity) can be modelled using CPNs along the lines of Cost et al. [5].",
                "These nondeterministic CPNs feed tokens into the CPN that models the normative structure.",
                "This leads to the introduction of non-determinism into the combined CPN.",
                "The lower half of figure 3 shows part of a CPN model of an agent protocol where the arc denoted with 1 represents some utterance of an illocution by an agent.",
                "The target transition of this arc, not only moves a token on to the next state of this CPN, but also places a token in the place corresponding to the appropriate normative scene in the CPN model of the normative structure (via arc 2).",
                "Transition 3 finally could propagate that token in form of an obligation, for example.",
                "Thus, from a given marking, many different occurrence sequences are possible depending on the agents actions.",
                "We make use of the reachability set R to define a situation in which agents cannot cause conflicts. 640 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) Figure 3: Constructing the combined CPN Def. 13.",
                "Given a net N, a marking M is conflict-resistant if and only if all markings in R(N,M) are conflict-free.",
                "Checking conflict-freedom of a marking can be done in polynomial time by checking all places of the CPN for conflicting tokens.",
                "Conflict-freedom of an occurrence sequence in the CPN that represents the normative structure can also be done in polynomial time since this sequence is deterministic given a snapshot.",
                "Whether or not a normative structure is designed safely corresponds to checking the conflict-resistance of the initial marking M0.",
                "Now, verifying conflict-resistance of a marking becomes a very difficult task.",
                "It corresponds to the reachability problem in a CPN: can a state be reached or a marking achieved, that contains a conflict?.",
                "This reachability problem is known to be NP-complete for ordinary Petri Nets [22] and since CPNs are functionally identical, we cannot hope to verify conflict-resistance of a normative structure off-line in a reasonable amount of time.",
                "Therefore, distributed, run-time mechanisms are needed to ensure that a normative structure maintains consistency.",
                "We present one such mechanism in the following section. 6.",
                "MANAGING NORMATIVE STRUCTURES Once a conflict (as defined in Section 4) has been detected, we propose to employ the unifier to resolve the conflict.",
                "In our example, if the variables in prh(inform(a1, r1, a2, r2, p(Y, d), T )) do not get the values specified in substitution Ïƒ then there will not be a conflict.",
                "However, rather than computing the complement set of a substitution (which can be an infinite set) we propose to annotate the prohibition with the unifier itself and use it to determine what the variables of that prohibition cannot be in future unifications in order to avoid a conflict.",
                "We therefore denote annotated prohibitions as prh(Â¯I) Î£, where Î£ = {Ïƒ1, . . . , Ïƒn}, is a set of unifiers.",
                "Annotated norms3 are interpreted as deontic constructs with curtailed influences, that is, their effect (on agents, roles and illocutions) has been limited by the set Î£ of unifiers.",
                "A prohibition may be in conflict with various obligations in a given normative scene s = id, Î” and we need to record (and possibly avoid) all these conflicts.",
                "We define below an algorithm which ensures that a normative position will be added to a normative scene in such a way that it will not cause any conflicts. 3 Although we propose to curtail prohibitions, the same machinery can be used to define the curtailment of obligations instead.",
                "These different policies are dependent on the intended deontic semantics and requirements of the systems addressed.",
                "For instance, some MASs may require that their agents should not act in the presence of conflicts, that is, the obligation should be curtailed. 6.1 Conflict Resolution We propose a fine-grained way of resolving normative conflicts via unification.",
                "We detect the overlapping of the influences of norms , i.e. how they affect the behaviour of the concerned agents, and we curtail the influence of the normative position, by appropriately using the annotations when checking if the norm applies to illocutions.",
                "The algorithm shown in Figure 4 depicts how we maintain a conflict-free set of norms.",
                "It adds a given norm N to an existing, conflictfree normative state Î”, obtaining a resulting new normative state Î” which is conflict-free, that is, its prohibitions are annotated with a set of conflict sets indicating which bindings for variables have to be avoided for conflicts not to take place. algorithm addNorm(N, Î”) begin 1 timestamp(N) 2 case N of 3 per(Â¯I): Î” := Î” âˆª {N} 4 prh(I): if N âˆˆ Î” s.t. conflict(N, N , Ïƒ) then Î” := Î” 5 else Î” := Î” âˆª {N} 6 prh(Â¯I): 7 begin 8 Î£ := âˆ… 9 for each N âˆˆ Î” do 10 if conflict(N, N , Ïƒ) then Î£ := Î£ âˆª {Ïƒ} 11 Î” := Î” âˆª {N Î£} 12 end 13 obl(Â¯I): 14 begin 15 Î”1 := âˆ…; Î”2 := âˆ… 16 for each (N Î£) âˆˆ Î” do 17 if N = prh(I) then 18 if conflict(N , N, Ïƒ) then Î”1 := Î”1 âˆª {N Î£} 19 else nil 20 else 21 if conflict(N , N, Ïƒ) then 22 begin 23 Î”1 := Î”1 âˆª {N Î£} 24 Î”2 := Î”2 âˆª {N (Î£ âˆª {Ïƒ})} 25 end 26 Î” := (Î” âˆ’ Î”1) âˆª Î”2 âˆª {N} 27 end 28 end case 29 return Î” end Figure 4: Algorithm to Preserve Conflict-Freedom The algorithm uses a case of structure to differentiate the different possibilities for a given norm N. Line 3 addresses the case when the given norm is a permission: N is simply added to Î”.",
                "Lines 4-5 address the case when we attempt to add a ground prohibition to a normative state: if it conflicts with any obligation, then it is discarded; otherwise it is added to the normative state.",
                "Lines 6-12 describe the situation when the normative position to be added is a nonground prohibition.",
                "In this case, the algorithm initialises Î£ to an empty set and loops (line 9-10) through the norms N in the old normative state Î”.",
                "Upon finding one that conflicts with N, the algorithm updates Î£ by adding the newly found conflict set Ïƒ to it (line 10).",
                "By looping through Î”, we are able to check any conflicts between the new prohibition and the existing obligations, adequately building the annotation Î£ to be used when adding N to Î” in line 11.",
                "Lines 13-27 describe how a new obligation is accommodated to an existing normative state.",
                "We make use of two initially empty, temporary sets, Î”1, Î”2.",
                "The algorithm loops through Î” (lines 16-25) picking up those annotated prohibitions N Î£ which conflict with the new obligation.",
                "There are, however, two cases to deal with: the one when a ground The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 641 prohibition is found (line 17), and its exception, covering non-ground prohibitions (line 20).",
                "In both cases, the old prohibition is stored in Î”1 (lines 18 and 23) to be later removed from Î” (line 26).",
                "However, in the case of a nonground prohibition, the algorithm updates its annotation of conflict sets (line 24).",
                "The loop guarantees that an exhaustive (linear) search through a normative state takes place, checking if the new obligation is in conflict with any existing prohibitions, possibly updating the annotations of these conflicting prohibitions.",
                "In line 26 the algorithm builds the new updated Î” by removing the old prohibitions stored in Î”1 and adding the updated prohibitions stored in Î”2 (if any), as well as the new obligation N. Our proposed algorithm is correct in that, for a given normative position N and a normative state Î”, it provides a new normative state Î” in which all prohibitions have annotations recording how they unify with existing obligations.",
                "The annotations can be empty, though: this is the case when we have a ground prohibition or a prohibition which does not unify/conflict with any obligation.",
                "Permissions do not affect our algorithm and they are appropriately dealt with (line 3).",
                "Any attempt to insert a ground prohibition which conflicts, yields the same normative state (line 4).",
                "When a new obligation is being added then the algorithm guarantees that all prohibitions are considered (lines 14-27), leading to the removal of conflicting ground prohibitions or the update of annotations of non-ground prohibitions.",
                "The algorithm always terminates: the loops are over a finite set Î” and the conflict checks and set operations always terminate.",
                "The complexity of the algorithm is linear: the set Î” is only examined once for each possible case of norm to be added.",
                "When managing normative states we may also need to remove normative positions.",
                "This is straightforward: permissions can be removed without any problems; annotated prohibitions can also be removed without further considerations; obligations, however, require some housekeeping.",
                "When an obligation is to be removed, we must check it against all annotated prohibitions in order to update their annotations.",
                "We apply the conflict check and obtain a unifier, then remove this unifier from the prohibitions annotation.",
                "We invoke the removal algorithm as removeNorm(N, Î”): it returns a new normative state Î” in which N has been removed, with possible alterations to other normative positions as explained. 6.2 Enactment of a Normative Structure The enactment of a normative structure amounts to the parallel, distributed execution of normative scenes and normative transitions.",
                "For illustrative purposes, hereafter we shall describe the interplay between the payment and delivery normative scenes and the normative transition nt linking them in the upper half of figure 2.",
                "With this aim, consider for instance that obl(inform(jules, client, rod, acc, pay(copper, 400, 350), T) âˆˆ Î”payment and that Î”delivery holds prh(inform(rod,wm, jules, client, delivered(Z, Q), T)).",
                "Such states indicate that client Jules is obliged to pay Â£400 for 350kg of copper to accountant Rod according to the payment normative scene, whereas Rod, taking up the role of warehouse manager this time, is prohibited to deliver anything to client Jules according to the delivery normative scene.",
                "For each normative scene, the enactment process goes as follows.",
                "Firstly, it processes its incoming message queue that contains three types of messages: utterances from the activity it is linked to; and normative commands either to add or remove normative positions.",
                "For instance, in our example, the payment normative scene collects the illocution I = utt((inform(jules, client, rod, acc, pay(copper, 400, 350), 35)) standing for client Jules pending payment for copper (via arrow A in figure 2).",
                "Utterances are timestamped and subsequently added to the normative state.",
                "We would have Î”payment = Î”payment âˆª {I}, in our example.",
                "Upon receiving normative commands to either add or remove a normative position, the normative scene invokes the corresponding addition or removal algorithm described in Section 6.1.",
                "Secondly, the normative scene acknowledges its state change by sending a trigger message to every outgoing normative transition it is connected to.",
                "In our example, the payment normative scene would be signalling its state change to normative transition nt.",
                "For normative transitions, the process works differently.",
                "Because each normative transition controls the operation of a single rule, upon receiving a trigger message, it polls every incoming normative scene for substitutions for the relevant illocution schemata on the LHS of its rule.",
                "In our example, nt (being responsible for the rule described in Section 3.4), would poll the payment normative scene (via arrow B) for substitutions.",
                "Upon receiving replies from them (in the form of sets of substitutions together with time-stamps), it has to unify substitutions from each of these normative scenes.",
                "For each unification it finds, the rule is fired, and hence the corresponding normative command is sent along to the output normative scene.",
                "The normative transition then keeps track of the firing message it sent on and of the time-stamps of the normative positions that triggered the firing.",
                "This is done to ensure that the very same normative positions in the LHS of a rule only trigger its firing once.",
                "In our example, nt would be receiving Ïƒ = {X/jules, Y/rod, Z/copper, Q/350} from the payment normative scene.",
                "Since the substitions in Ïƒ unify with nts rule, the rule is fired, and the normative command add(delivery : obl(rod, wm, jules, client, delivered(copper, 350), T)) is sent along to the delivery normative scene to oblige Rod to deliver to client Jules 350kg of copper.",
                "After that, the delivery normative scene would invoke the addNorm algorithm from figure 4 with Î”delivery and N = obl(rod, wm, jules, client, delivered(copper, 350)) as arguments. 7.",
                "RELATED WORK AND CONCLUSIONS Our contributions in this paper are three-fold.",
                "Firstly, we introduce an approach for the management of and reasoning about norms in a distributed manner.",
                "To our knowledge, there is little work published in this direction.",
                "In [8, 21], two languages are presented for the distributed enforcement of norms in MAS.",
                "However, in both works, each agent has a local message interface that forwards legal messages according to a set of norms.",
                "Since these interfaces are local to each agent, norms can only be expressed in terms of actions of that agent.",
                "This is a serious disadvantage, e.g. when one needs to activate an obligation to one agent due to a certain message of another one.",
                "The second contribution is the proposal of a normative structure.",
                "The notion is fruitful because it allows the separation of normative and procedural concerns.",
                "The normative structure we propose makes evident the similarity between the propagation of normative positions and the propagation 642 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) of tokens in Coloured Petri Nets.",
                "That similarity readily suggests a mapping between the two, and gives grounds to a convenient analytical treatment of the normative structure, in general, and the complexity of conflict detection, in particular.",
                "The idea of modelling interactions (in the form of conversations) via Petri Nets has been investigated in [18], where the interaction medium and individual agents are modelled as CPN sub-nets that are subsequently combined for analysis.",
                "In [5], conversations are first designed and analysed at the level of CPNs and thereafter translated into protocols.",
                "Lin et al. [20] map conversation schemata to CPNs.",
                "To our knowledge, the use of this representation in the support of conflict detection in regulated MAS has not been reported elsewhere.",
                "Finally, we present a distributed mechanism to resolve normative conflicts.",
                "Sartor [25] treats normative conflicts from the point of view of legal theory and suggests a way to order the norms involved.",
                "His idea is implemented in [12] but requires a central resource for norm maintenance.",
                "The approach to conflict detection and resolution is an adaptation and extension of the work on instantiation graphs reported in [17] and a related algorithm in [27].",
                "The algorithm presented in the current paper can be used to manage normative states distributedly: normative scenes that happen in parallel have an associated normative state Î” to which the algorithm is independently applied each time a new norm is to be introduced.",
                "These three contributions we present in this paper open many possibilities for future work.",
                "We should mention first, that as a broad strategy we are working on a generalisation of the notion of normative structure to make it operate with different coordination models, with richer deontic content and on top of different computational realisations of regulated MAS.",
                "As a first step in this direction we are taking advantage of the de-coupling between interaction protocols and declarative normative guidance that the normative structure makes available, to provide a normative layer for electronic institutions (as defined in [1]).",
                "We expect such coupling will endow electronic institutions with a more flexible -and more expressive- normative environment.",
                "Furthermore, we want to extend our model along several directions: (1) to handle negation and constraints as part of the norm language, and in particular the notion of time; (2) to accommodate multiple, hierarchical norm authorities based on roles, along the lines of Cholvy and Cuppens [3] and power relationships as suggested by Carabelea et al. [2]; (3) to capture in the conflict resolution algorithm different semantics relating the deontic notions by supporting different axiomations (e.g., relative strength of prohibition versus obligation, default deontic notions, deontic inconsistencies).",
                "On the theoretical side, we intend to use analysis techniques of CPNs in order to characterise classes of CPNs (e.g., acyclic, symmetric, etc.) corresponding to families of Normative Structures that are susceptible to tractable offline conflict detection.",
                "The combination of these techniques along with our online conflict resolution mechanisms is intended to endow MAS designers with the ability to incorporate norms into their systems in a principled way. 8.",
                "REFERENCES [1] J. L. Arcos, M. Esteva, P. Noriega, J.",
                "A. RodrÂ´Ä±guez, and C. Sierra.",
                "Engineering open environments with electronic institutions.",
                "Journal on Engineering Applications of Artificial Intelligence, 18(2):191-204, 2005. [2] C. Carabelea, O. Boissier, and C. Castelfranchi.",
                "Using social power to enable agents to reason about being part of a group.",
                "In 5th Internat.",
                "Workshop, ESAW 2004, pages 166-177, 2004. [3] L. Cholvy and F. Cuppens.",
                "Solving normative conflicts by merging roles.",
                "In Fifth International Conference on Artificial Intelligence and Law, Washington, USA, 1995. [4] S. Christensen and T. B. Haagh.",
                "Design CPN - overview of CPN ML syntax.",
                "Technical report, University of Aarhus, 1996. [5] R. S. Cost, Y. Chen, T. W. Finin, Y. Labrou, and Y. Peng.",
                "Using colored petri nets for conversation modeling.",
                "In Issues in Agent Communication, pages 178-192, London, UK, 2000. [6] F. Dignum.",
                "Autonomous Agents with Norms.",
                "Artificial Intelligence and Law, 7(1):69-79, 1999. [7] A. Elhag, J. Breuker, and P. Brouwer.",
                "On the Formal Analysis of Normative Conflicts.",
                "Information & Comms.",
                "Techn.",
                "Law, 9(3):207-217, Oct. 2000. [8] M. Esteva, W. Vasconcelos, C. Sierra, and J.",
                "A. RodrÂ´Ä±guez-Aguilar.",
                "Norm consistency in electronic institutions. volume 3171 (LNAI), pages 494-505.",
                "Springer-Verlag, 2004. [9] M. Fitting.",
                "First-Order Logic and Automated Theorem Proving.",
                "Springer-Verlag, New York, U.S.A., 1990. [10] N. Fornara, F. Vigan`o, and M. Colombetti.",
                "An Event Driven Approach to Norms in Artificial Institutions.",
                "In AAMAS05 Workshop: Agents, Norms and Institutions for Regulated Multiagent Systems (ANI@REM), Utrecht, 2005. [11] D. Gaertner, P. Noriega, and C. Sierra.",
                "Extending the BDI architecture with commitments.",
                "In Proceedings of the 9th International Conference of the Catalan Association of Artificial Intelligence, 2006. [12] A. GarcÂ´Ä±a-Camino, P. Noriega, and J.-A.",
                "RodrÂ´Ä±guez-Aguilar.",
                "An Algorithm for Conflict Resolution in Regulated Compound Activities.",
                "In 7th Int.Workshop - ESAW 06, 2006. [13] A. GarcÂ´Ä±a-Camino, J.-A.",
                "RodrÂ´Ä±guez-Aguilar, C. Sierra, and W. Vasconcelos.",
                "A Distributed Architecture for Norm-Aware Agent Societies.",
                "In DALT III, volume 3904 (LNAI), pages 89-105.",
                "Springer, 2006. [14] F. Giunchiglia and L. Serafini.",
                "Multi-language hierarchical logics or: How we can do without modal logics.",
                "Artificial Intelligence, 65(1):29-70, 1994. [15] J. Habermas.",
                "The Theory of Communication Action, Volume One, Reason and the Rationalization of Society.",
                "Beacon Press, 1984. [16] K. Jensen.",
                "Coloured Petri Nets: Basic Concepts, Analysis Methods and Practical Uses (Volume 1).",
                "Springer, 1997. [17] M. Kollingbaum and T. Norman.",
                "Strategies for resolving norm conflict in practical reasoning.",
                "In ECAI Workshop Coordination in Emergent Agent Societies 2004, 2004. [18] J.-L. Koning, G. Francois, and Y. Demazeau.",
                "Formalization and pre-validation for interaction protocols in a multi agent systems.",
                "In ECAI, pages 298-307, 1998. [19] B. Kramer and J. Mylopoulos.",
                "Knowledge Representation.",
                "In S. C. Shapiro, editor, Encyclopedia of Artificial Intelligence, volume 1, pages 743-759.",
                "John Wiley & Sons, 1992. [20] F. Lin, D. H. Norrie, W. Shen, and R. Kremer.",
                "A schema-based approach to specifying conversation policies.",
                "In Issues in Agent Communication, pages 193-204, 2000. [21] N. Minsky.",
                "Law Governed Interaction (LGI): A Distributed Coordination and Control Mechanism (An Introduction, and a Reference Manual).",
                "Technical report, Rutgers University, 2005. [22] T. Murata.",
                "Petri nets: Properties, analysis and applications.",
                "Proceedings of the IEEE, 77(4):541-580, 1989. [23] S. Parsons, C. Sierra, and N. Jennings.",
                "Agents that reason and negotiate by arguing.",
                "Journal of Logic and Computation, 8(3):261-292, 1998. [24] A. Ricci and M. Viroli.",
                "Coordination Artifacts: A Unifying Abstraction for Engineering Environment-Mediated Coordination in MAS.",
                "Informatica, 29:433-443, 2005. [25] G. Sartor.",
                "Normative conflicts in legal reasoning.",
                "Artificial Intelligence and Law, 1(2-3):209-235, June 1992. [26] M. Sergot.",
                "A Computational Theory of Normative Positions.",
                "ACM Trans.",
                "Comput.",
                "Logic, 2(4):581-622, 2001. [27] W. W. Vasconcelos, M. Kollingbaum, and T. Norman.",
                "Resolving Conflict and Inconsistency in Norm-Regulated Virtual Organisations.",
                "In Proceedings of AAMAS 07, Hawaii, USA, 2007.",
                "IFAAMAS. [28] G. H. von Wright.",
                "Norm and Action: A Logical Inquiry.",
                "Routledge and Kegan Paul, London, 1963. [29] M. Wooldridge.",
                "An Introduction to Multiagent Systems.",
                "John Wiley & Sons, Chichester, UK, Feb. 2002.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 643"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Proponemos usar la nociÃ³n estÃ¡ndar de unificaciÃ³n [9] para detectar cuando una prohibiciÃ³n y una \"superposiciÃ³n de permiso\"."
            ],
            "translated_text": "",
            "candidates": [
                "superposiciÃ³n de permiso",
                "superposiciÃ³n de permiso"
            ],
            "error": []
        },
        "token": {
            "translated_key": "token",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Distributed Norm Management in Regulated Multi-Agent Systems âˆ— Dorian Gaertner Dept.",
                "of Computing, Imperial College London, London SW7 2AZ, United Kingdom dg00@doc.ic.ac.uk Andres Garcia-Camino, Pablo Noriega, J.-A.",
                "Rodriguez-Aguilar IIIA-CSIC, 08193 Bellaterra, Spain {andres,pablo,jar}@iiia.csic.es Wamberto Vasconcelos Dept. of Computing Science, University of Aberdeen, Aberdeen AB24 3UE, United Kingdom wvasconcelos@acm.org ABSTRACT Norms are widely recognised as a means of coordinating multi-agent systems.",
                "The distributed management of norms is a challenging issue and we observe a lack of truly distributed computational realisations of normative models.",
                "In order to regulate the behaviour of autonomous agents that take part in multiple, related activities, we propose a normative model, the Normative Structure (NS), an artifact that is based on the propagation of normative positions (obligations, prohibitions, permissions), as consequences of agents actions.",
                "Within a NS, conflicts may arise due to the dynamic nature of the MAS and the concurrency of agents actions.",
                "However, ensuring conflict-freedom of a NS at design time is computationally intractable.",
                "We show this by formalising the notion of conflict, providing a mapping of NSs into Coloured Petri Nets and borrowing well-known theoretical results from that field.",
                "Since online conflict resolution is required, we present a tractable algorithm to be employed distributedly.",
                "We then demonstrate that this algorithm is paramount for the distributed enactment of a NS.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Languages and structures General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION A fundamental feature of open, regulated multi-agent systems in which autonomous agents interact, is that participating agents are meant to comply with the conventions of the system.",
                "Norms can be used to model such conventions and hence as a means to regulate the observable behaviour of agents [6, 29].",
                "There are many contributions on the subject of norms from sociologists, philosophers and logicians (e.g., [15, 28]).",
                "However, there are very few proposals for computational realisations of normative models - the way norms can be integrated in the design and execution of MASs.",
                "The few that exist (e.g. [10, 13, 24]), operate in a centralised manner which creates bottlenecks and single points-of-failure.",
                "To our knowledge, no proposal truly supports the distributed enactment of normative environments.",
                "In our paper we approach that problem and propose means to handle conflicting commitments in open, regulated, multiagent systems in a distributed manner.",
                "The type of regulated MAS we envisage consists of multiple, concurrent, related activities where agents interact.",
                "Each agent may concurrently participate in several activities, and change from one activity to another.",
                "An agents actions within an activity may have consequences in the form of normative positions (i.e. obligations, permissions, and prohibitions) [26] that may constrain its future behaviour.",
                "For instance, a buyer agent who runs out of credit may be forbidden to make further offers, or a seller agent is obliged to deliver after closing a deal.",
                "We assume that agents may choose not to fulfill all their obligations and hence may be sanctioned by the MAS.",
                "Notice that, when activities are distributed, normative positions must flow from the activities in which they are generated to those in which they take effect.",
                "For instance, the sellers obligation above must flow (or be propagated) from a negotiation activity to a delivery activity.",
                "Since in an open, regulated MAS one cannot embed normative aspects into the agents design, we adopt the view that the MAS should be supplemented with a separate set of norms that further regulates the behaviour of participating agents.",
                "In order to model the separation of concerns between the coordination level (agents interactions) and the normative level (propagation of normative positions), we propose an artifact called the Normative Structure (NS).",
                "Within a NS conflicts may arise due to the dynamic nature of the MAS and the concurrency of agents actions.",
                "For instance, an agent may be obliged and prohibited to do the 636 978-81-904262-7-5 (RPS) c 2007 IFAAMAS very same action in an activity.",
                "Since the regulation of a MAS entails that participating agents need to be aware of the validity of those actions that take place within it, such conflicts ought to be identified and possibly resolved if a claim of validity is needed for an agent to engage in an action or be sanctioned.",
                "However, ensuring conflict-freedom of a NS at design time is computationally intractable.",
                "We show this by formalising the notion of conflict, providing a mapping of NSs into Coloured Petri Nets (CPNs) and borrowing well-known theoretical results from the field of CPNs.",
                "We believe that online conflict detection and resolution is required.",
                "Hence, we present a tractable algorithm for conflict resolution.",
                "This algorithm is paramount for the distributed enactment of a NS.",
                "The paper is organised as follows.",
                "In Section 2 we detail a scenario to serve as an example throughout the paper.",
                "Next, in Section 3 we formally define the normative structure artifact.",
                "Further on, in Section 4 we formalise the notion of conflict to subsequently analyse the complexity of conflict detection in terms of CPNs in Section 5.",
                "Section 6 describes the computational management of NSs by describing their enactment and presenting an algorithm for conflict resolution.",
                "Finally, we comment on related work, draw conclusions and report on future work in Section 7. 2.",
                "SCENARIO We use a supply-chain scenario in which companies and individuals come together at an online marketplace to conduct business.",
                "The overall transaction procedure may be organised as six distributed activities, represented as nodes in the diagram in Figure 1.",
                "They involve different participants whose behaviour is coordinated through protocols.",
                "In this scenario agents can play one of four roles: marExit Registration Payment Delivery Negotiation Coordination Model Contract Figure 1: Activity Structure of the Scenario ketplace accountant (acc), client, supplier (supp) and warehouse managers (wm).",
                "The arrows connecting the activities represent how agents can move from one activity to another.",
                "After registering at the marketplace, clients and suppliers get together in an activity where they negotiate the terms of their transaction, i.e. prices, amounts of goods to be delivered, deadlines and other details.",
                "In the contract activity, the order becomes established and an invoice is prepared.",
                "The client will then participate in a payment activity, verifying his credit-worthiness and instructing his bank to transfer the correct amount of money.",
                "The supplier in the meantime will arrange for the goods to be delivered (e.g. via a warehouse manager) in the delivery activity.",
                "Finally, agents can leave the marketplace conforming to a predetermined exit protocol.",
                "The marketplace accountant participates in most of the activities as a trusted provider of auditing tools.",
                "In the rest of the paper we shall build on this scenario to exemplify the notion of normative structure and to illustrate our approach to conflict detection and resolution in a distributed setting. 3.",
                "NORMATIVE STRUCTURE In MASs agents interact according to protocols which naturally are distributed.",
                "We advocate that actions in one such protocol may have an effect on the enactment of other protocols.",
                "Certain actions can become prohibited or obligatory, for example.",
                "We take normative positions to be obligations, prohibitions and permissions akin to work described in [26].",
                "The intention of adding or removing a normative position we call normative command.",
                "Occurrences of normative positions in one protocol may also have consequences for other protocols1 .",
                "In order to define our norm language and specify how normative positions are propagated, we have been inspired by multi-context systems [14].",
                "These systems allow the structuring of knowledge into distinct formal theories and the definition of relationships between them.",
                "The relationships are expressed as bridge rules - deducibility of formulae in some contexts leads to the deduction of other formulae in other contexts.",
                "Recently, these systems have been successfully used to define agent architectures [11, 23].",
                "The metaphor translates to our current work as follows: the utterance of illocutions and/or the existence of normative positions in some normative scenes leads to the deduction of normative positions in other normative scenes.",
                "We are concerned with the propagation and distribution of normative positions within a network of distributed, normative scenes as a consequence of agents actions.",
                "We take normative scenes to be sets of normative positions and utterances that are associated with an underlying interaction protocol corresponding to an activity.",
                "In this section, we first present a simple language capturing these aspects and formally introduce the notions of normative scene, normative transition rule and normative structure.",
                "We give the intended semantics of these rules and show how to control a MAS via norms in an example. 3.1 Basic Concepts The building blocks of our language are terms and atomic formulae: Def. 1.",
                "A term, denoted as t, is (i) any constant expressed using lowercase (with or without subscripts), e.g. a, b0, c or (ii) any variable expressed using uppercase (with or without subscripts), e.g.",
                "X, Y, Zb or (iii) any function f(t1, . . . , tn), where f is an n-ary function symbol and t1, .., tn are terms.",
                "Some examples of terms and functions are Credit, price or offer(bible, 30) being respectively a variable, a constant and a function.",
                "We will be making use of identifiers throughout the paper, which are constant terms and also need the following definition: Def. 2.",
                "An atomic formula is any construct p(t1, . . . , tn), where p is an n-ary predicate symbol and t1, . . . , tn are terms.",
                "The set of all atomic formulae is denoted as Î”.",
                "We focus on an expressive class of MASs in which interaction is carried out by means of illocutionary speech acts exchanged among participating agents: Def. 3.",
                "Illocutions I are ground atomic formulae which have the form p(ag, r, ag , r , Î´, t) where p is an element of 1 Here, we abstract from protocols and refer to them generically as activities.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 637 a set of illocutionary particles (e.g. inform, request, offer); ag, ag are agent identifiers; r, r are role identifiers; Î´, an arbitrary ground term, is the content of the message, built from a shared content language; t âˆˆ N is a time stamp.",
                "The intuitive meaning of p(ag, r, ag , r , m, t) is that agent ag playing role r sent message m to agent ag playing role r at time t. An example of an illocution is inform(ag4, supp, ag3, client, offer(wire, 12), 10).",
                "Sometimes it is useful to refer to illocutions that are not fully grounded, that is, those that may contain uninstantiated (free) variables.",
                "In the description of a protocol, for instance, the precise values of the message exchanged can be left unspecified.",
                "During the enactment of the protocol agents will produce the actual values which will give rise to a ground illocution.",
                "We can thus define illocution schemata: Def. 4.",
                "An illocution schema Â¯I is any atomic formula p(ag, r, ag , r , Î´, t) in which some of the terms may either be variables or may contain variables. 3.2 Formal Definition of the Notion of NS We first define normative scenes as follows: Def. 5.",
                "A normative scene is a tuple s = ids, Î”s where ids is a scene identifier and Î”s is the set of atomic formulae Î´ (i.e. utterances and normative positions) that hold in s. We will also refer to Î”s as the state of normative scene s. For instance, a snapshot of the state of the delivery normative scene of our scenario could be represented as: Î”s = 8 < : utt(request(sean, client, kev, wm, receive(wire, 200), 20)), utt(accept(kev, wm, sean, client, receive(wire, 200), 30)), obl(inform(kev, wm, sean, client, delivered(wire, 200), 30)) 9 = ; That is, agent Sean taking up the client role has requested agent Kev (taking up the warehouse manager role wm) to receive 200kg of wire, and agent Kev is obliged to deliver 200kg of wire to Sean since he accepted the request.",
                "Note that the state of a normative scene Î”s evolves over time.",
                "These normative scenes are connected to one another via normative transitions that specify how utterances and normative positions in one scene affect other normative scenes.",
                "As mentioned above, activities are not independent since illocutions uttered in some of them may have an effect on other ones.",
                "Normative transition rules define the conditions under which a normative command is generated.",
                "These conditions are either utterances or normative positions associated with a given protocol (denoted e.g. activity : utterance) which yield a normative command, i.e. the addition or removal of another normative position, possibly related to a different activity.",
                "Our transition rules are thus defined: Def. 6.",
                "A normative transition rule R is of the form: R ::= V C V ::= ids : D | V, V D ::= N | utt(Â¯I) N ::= per(Â¯I) | prh(Â¯I) | obl(Â¯I) C ::= add(ids : N) | remove(ids : N) where Â¯I is an illocution schema, N is a normative position (i.e. permission, prohibition or obligation), ids is an identifier for activity s and C is a normative command.",
                "We endow our language with the usual semantics of rulebased languages [19].",
                "Rules map an existing normative structure to a new normative structure where only the state of the normative scenes change.",
                "In the definitions below we rely on the standard concept of substitution [9].",
                "Def. 7.",
                "A normative transition is a tuple b = idb, rb where idb is an identifier and rb is a normative transition rule.",
                "We are proposing to extend the notion of MAS, regulated by protocols, with an extra layer consisting of normative scenes and normative transitions.",
                "This layer is represented as a bi-partite graph that we term normative structure.",
                "A normative structure relates normative scenes and normative transitions specifying which normative positions are to be generated or removed in which normative scenes.",
                "Def. 8.",
                "A normative structure is a labelled bi-partite graph NS = Nodes, Edges, Lin , Lout .",
                "Nodes is a set SâˆªB where S is a set of normative scenes and B is a set of normative transitions.",
                "Edges is a set Ain âˆª Aout where Ain âŠ† S Ã— B is a set of input arcs labelled with an atomic formula using the labelling function Lin : Ain â†’ D; and Aout âŠ† B Ã— S is a set of output arcs labelled with a normative position using the labelling function Lout : Aout â†’ N. The following must hold: 1.",
                "Each atomic formula appearing in the LHS of a rule rb must be of the form (ids : D) where s âˆˆ S and D âˆˆ Î” and âˆƒain âˆˆ Ain such that ain = (s, b) and Lin (ain ) = D. 2.",
                "The atomic formula appearing in the RHS of a rule rb must be of the form add(ids : N) or remove(ids : N) where s âˆˆ S and âˆƒaout âˆˆ Aout such that aout = (b, s) and Lout (aout ) = N. 3. âˆ€a âˆˆ Ain such that a = (s, b) and b = idb, rb and Lin (a) = D then (ids:D) must occur in the LHS of rb. 4. âˆ€a âˆˆ Aout such that a = (b, s) and b = idb, rb and Lout (a) = N then add(ids : N) or remove(ids : N) must occur in the RHS of rb.",
                "The first two points ensure that every atomic formulae on the LHS of a normative transition rule labels an arc entering the appropriate normative transition in the normative structure, and that the atomic formula on the RHS labels the corresponding outgoing arc.",
                "Points three and four ensure that labels from all incoming arcs are used in the LHS of the normative transition rule that these arcs enter into, and that the labels from all outgoing arcs are used in the RHS of the normative transition rule that these arcs leave. 3.3 Intended Semantics The formal semantics will be defined via a mapping to Coloured Petri Nets in Section 5.1.",
                "Here we start defining the intended semantics of normative transition rules by describing how a rule changes a normative scene of an existing normative structure yielding a new normative structure.",
                "Each rule is triggered once for each substitution that unifies the left-hand side V of the rule with the state of the corresponding normative scenes.",
                "An atomic formula (i.e. an utterance or a normative position) holds iff it is unifiable with an utterance or normative position that belongs to the state of the corresponding normative scene.",
                "Every time a rule is triggered, the normative command specified on the right-hand side of that rule is carried out, intending to add or remove a normative position from the state of the corresponding normative scene.",
                "However, addition is not unconditional as conflicts may arise.",
                "This topic will be treated in Sections 4 and 6.1. 638 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.4 Example In our running example we have the following exemplary normative transition rule: â€ž payment : obl(inform(X, client, Y, acc, pay(Z, P, Q), T )), payment : utt(inform(X, client, Y, acc, pay(Z, P, Q), T )) Â« delivery : add(obl(inform(Y, wm, X, client, delivered(Z, Q), T ))) That is, during the payment activity, an obligation on client X to inform accountant Y about the payment P of item Z at time T and the corresponding utterance which fulfills this obligation allows the flow of a norm to the delivery activity.",
                "The norm is an obligation on agent Y (this time taking up the role of the warehouse manager wm) to send a message to client X that item Z has been delivered.",
                "We show in Figure 2 a diagrammatic representation of how activities and a normative structure relate: Payment Delivery Contract Normative Level Exit Registration Payment Delivery Negotiation Coordination Level Contract nt Figure 2: Activities and Normative Structure As illocutions are uttered during activities, normative positions arise.",
                "Utterances and normative positions are combined in transition rules, causing the flow of normative positions between normative scenes.",
                "The connection between the two levels is described in Section 6.2. 4.",
                "CONFLICT DEFINITION The terms deontic conflict and deontic inconsistency have been used interchangeably in the literature.",
                "However, in this paper we adopt the view of [7] in which the authors suggest that a deontic inconsistency arises when an action is simultaneously permitted and prohibited - since a permission may not be acted upon, no real conflict occurs.",
                "The situations when an action is simultaneously obliged and prohibited are, however, deontic conflicts, as both obligations and prohibitions influence behaviours in a conflicting fashion.",
                "The content of normative positions in this paper are illocutions.",
                "Therefore, a normative conflict arises when an illocution is simultaneously obliged and prohibited.",
                "We propose to use the standard notion of unification [9] to detect when a prohibition and a permission overlap.",
                "For instance, an obligation obl(inform(A1, R1, A2, R2, p(c, X), T)) and a prohibition prh(inform(a1, r1, a2, r2, p(Y, d), T )) are in conflict as they unify under Ïƒ = {A1/a1, R1/r1, A2/a2, R2/r2, Y/c, X/d, T/T }).",
                "We formally capture this notion: Def. 9.",
                "A (deontic) conflict arises between two normative positions N and N under a substitution Ïƒ, denoted as conflict(N, N , Ïƒ), if and only if N = prh(Â¯I), N = obl(Â¯I ) and unify(Â¯I,Â¯I , Ïƒ).",
                "That is, a prohibition and an obligation are in conflict if, and only if, their illocutions unify under Ïƒ.",
                "The substitution Ïƒ, called here the conflict set, unifies the agents, roles and atomic formulae.",
                "We assume that unify is a suitable implementation of a unification algorithm which i) always terminates (possibly failing, if a unifier cannot be found); ii) is correct; and iii) has linear computational complexity.",
                "Inconsistencies caused by the same illocution being simultaneously permitted and prohibited can be formalised similarly.",
                "In this paper we focus on prohibition/obligation conflicts, but the computational machinery introduced in Section 6.1 can equally be used to detect prohibition/permission inconsistencies, if we substitute modality obl for per. 5.",
                "FORMALISING CONFLICT-FREEDOM In this section we introduce some background knowledge on CPNs assuming a basic understanding of ordinary Petri Nets.",
                "For technical details we refer the reader to [16].",
                "We then map NSs to CPNs and analyse their properties.",
                "CPNs combine the strength of Petri nets with the strength of functional programming languages.",
                "On the one hand, Petri nets provide the primitives for the description of the synchronisation of concurrent processes.",
                "As noticed in [16], CPNs have a semantics which builds upon true concurrency, instead of interleaving.",
                "In our opinion, a true-concurrency semantics is easier to work with because it is the way we envisage the connection between the coordination level and the normative level of a multi-agent system to be.",
                "On the other hand, the functional programming languages used by CPNs provide the primitives for the definition of data types and the manipulation of their data values.",
                "Thus, we can readily translate expressions of a normative structure.",
                "Last but not least, CPNs have a well-defined semantics which unambiguously defines the behaviour of each CPN.",
                "Furthermore, CPNs have a large number of formal analysis methods and tools by which properties of CPNs can be proved.",
                "Summing up, CPNs provide us with all the necessary features to formally reason about normative structures given that an adequate mapping is provided.",
                "In accordance with Petri nets, the states of a CPN are represented by means of places.",
                "But unlike Petri Nets, each place has an associated data type determining the kind of data which the place may contain.",
                "A state of a CPN is called a marking.",
                "It consists of a number of tokens positioned on the individual places.",
                "Each <br>token</br> carries a data value which has the type of the corresponding place.",
                "In general, a place may contain two or more tokens with the same data value.",
                "Thus, a marking of a CPN is a function which maps each place into a multi-set2 of tokens of the correct type.",
                "One often refers to the <br>token</br> values as <br>token</br> colours and one also refers to the data types as colour sets.",
                "The types of a CPN can be arbitrarily complex.",
                "Actions in a CPN are represented by means of transitions.",
                "An incoming arc into a transition from a place indicates that the transition may remove tokens from the corresponding place while an outgoing arc indicates that the transition may add tokens.",
                "The exact number of tokens and their data values are determined by the arc expressions, which are encoded using the programming language chosen for the CPN.",
                "A transition is enabled in a CPN if and only if all the 2 A multi-set (or bag) is an extension to the notion of set, allowing the possibility of multiple appearances of the same element.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 639 variables in the expressions of its incoming arcs are bound to some value(s) (each one of these bindings is referred to as a binding element).",
                "If so, the transition may occur by removing tokens from its input places and adding tokens to its output places.",
                "In addition to the arc expressions, it is possible to attach a boolean guard expression (with variables) to each transition.",
                "Putting all the elements above together we obtain a formal definition of CPN that shall be employed further ahead for mapping purposes.",
                "Def. 10.",
                "A CPN is a tuple Î£, P, T, A, N, C, G, E, I where: (i) Î£ is a finite set of non-empty types, also called colour sets; (ii) P is a finite set of places; (iii) T is a finite set of transitions; (iv) A is a finite set of arcs; (v) N is a node function defined from A into P Ã— T âˆª T Ã— P; (vi) C is a colour function from P into Î£; (vii) G is a guard function from T into expressions; (viii) E is an arc expression function from A into expressions; (ix) I is an initialisation function from P into closed expressions; Notice that the informal explanation of the enabling and occurrence rules given above provides the foundations to understand the behaviour of a CPN.",
                "In accordance with ordinary Petri nets, the concurrent behaviour of a CPN is based on the notion of step.",
                "Formally, a step is a non-empty and finite multi-set over the set of all binding elements.",
                "Let step S be enabled in a marking M. Then, S may occur, changing the marking M to M .",
                "Moreover, we say that marking M is directly reachable from marking M by the occurrence of step S, and we denote it by M[S > M .",
                "A finite occurrence sequence is a finite sequence of steps and markings: M1[S1 > M2 . . .",
                "Mn[Sn > Mn+1 such that n âˆˆ N and Mi[Si > Mi+1 âˆ€i âˆˆ {1, . . . , n}.",
                "The set of all possible markings reachable for a net Net from a marking M is called its reachability set, and is denoted as R(Net, M). 5.1 Mapping to Coloured Petri Nets Our normative structure is a labelled bi-partite graph.",
                "The same is true for a Coloured Petri Net.",
                "We are presenting a mapping f from one to the other, in order to provide semantics for the normative structure and prove properties about it by using well-known theoretical results from work on CPNs.",
                "The mapping f makes use of correspondences between normative scenes and CPN places, normative transitions and CPN transitions and finally, between arc labels and CPN arc expressions.",
                "S â†’ P B â†’ T Lin âˆª Lout â†’ E The set of types is the singleton set containing the colour NP (i.e.",
                "Î£ = {NP}).",
                "This complex type is structured as follows (we use CPN-ML [4] syntax): color NPT = with Obl | Per | Prh | NoMod color IP = with inform | declare | offer color UTT = record illp : IP ag1, role1, ag2, role2 : string content: string time : int color NP = record mode : NPT illoc : UTT Modelling illocutions as norms without modality (NoMod) is a formal trick we use to ensure that sub-nets can be combined as explained below.",
                "Arcs are mapped almost directly.",
                "A is a finite set of arcs and N is a node function, such that âˆ€a âˆˆ A âˆƒa âˆˆ Ain âˆªAout .",
                "N(a) = a .",
                "The initialisation function I is defined as I(p) = Î”s (âˆ€s âˆˆ S where p is obtained from s using the mapping; remember that s = ids, Î”s ).",
                "Finally, the colour function C assigns the colour NP to every place: C(p) = NP (âˆ€p âˆˆ P).",
                "We are not making use of the guard function G. In future work, this function can be used to model constraints when we extend the expressiveness of our norm language. 5.2 Properties of Normative Structures Having defined the mapping from normative structures to Coloured Petri Nets, we now look at properties of CPNs that help us understand the complexity of conflict detection.",
                "One question we would like to answer is, whether at a given point in time, a given normative structure is conflict-free.",
                "Such a snapshot of a normative structure corresponds to a marking in the mapped CPN.",
                "Def. 11.",
                "Given a marking Mi, this marking is conflictfree if Â¬âˆƒp âˆˆ P. âˆƒnp1, np2 âˆˆ Mi(p) such that np1.mode = Obl and np2.mode = Prh and np1.illoc and np2.illoc unify under a valid substitution.",
                "Another interesting question would be, whether a conflict will occur from such a snapshot of the system by propagating the normative positions.",
                "In order to answer this question, we first translate the snapshot of the normative structure to the corresponding CPN and then execute the finite occurence sequence of markings and steps, verifying the conflict-freedom of each marking as we go along.",
                "Def. 12.",
                "Given a marking Mi, a finite occurrence sequence Si, Si+1, ..., Sn is called conflict-free, if and only if Mi[Si > Mi+1 . . .",
                "Mn[Sn > Mn+1 and Mk is conflict-free for all k such that i â‰¤ k â‰¤ n + 1.",
                "However, the main question we would like to investigate, is whether or not a given normative structure is conflictresistant, that is, whether or not the agents enacting the MAS are able to bring about conflicts through their actions.",
                "As soon as one includes the possibility of actions (or utterances) from autonomous agents, one looses determinism.",
                "Having mapped the normative structure to a CPN, we now add CPN models of the agents interactions.",
                "Each form of agent interaction (i.e. each activity) can be modelled using CPNs along the lines of Cost et al. [5].",
                "These nondeterministic CPNs feed tokens into the CPN that models the normative structure.",
                "This leads to the introduction of non-determinism into the combined CPN.",
                "The lower half of figure 3 shows part of a CPN model of an agent protocol where the arc denoted with 1 represents some utterance of an illocution by an agent.",
                "The target transition of this arc, not only moves a <br>token</br> on to the next state of this CPN, but also places a <br>token</br> in the place corresponding to the appropriate normative scene in the CPN model of the normative structure (via arc 2).",
                "Transition 3 finally could propagate that <br>token</br> in form of an obligation, for example.",
                "Thus, from a given marking, many different occurrence sequences are possible depending on the agents actions.",
                "We make use of the reachability set R to define a situation in which agents cannot cause conflicts. 640 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) Figure 3: Constructing the combined CPN Def. 13.",
                "Given a net N, a marking M is conflict-resistant if and only if all markings in R(N,M) are conflict-free.",
                "Checking conflict-freedom of a marking can be done in polynomial time by checking all places of the CPN for conflicting tokens.",
                "Conflict-freedom of an occurrence sequence in the CPN that represents the normative structure can also be done in polynomial time since this sequence is deterministic given a snapshot.",
                "Whether or not a normative structure is designed safely corresponds to checking the conflict-resistance of the initial marking M0.",
                "Now, verifying conflict-resistance of a marking becomes a very difficult task.",
                "It corresponds to the reachability problem in a CPN: can a state be reached or a marking achieved, that contains a conflict?.",
                "This reachability problem is known to be NP-complete for ordinary Petri Nets [22] and since CPNs are functionally identical, we cannot hope to verify conflict-resistance of a normative structure off-line in a reasonable amount of time.",
                "Therefore, distributed, run-time mechanisms are needed to ensure that a normative structure maintains consistency.",
                "We present one such mechanism in the following section. 6.",
                "MANAGING NORMATIVE STRUCTURES Once a conflict (as defined in Section 4) has been detected, we propose to employ the unifier to resolve the conflict.",
                "In our example, if the variables in prh(inform(a1, r1, a2, r2, p(Y, d), T )) do not get the values specified in substitution Ïƒ then there will not be a conflict.",
                "However, rather than computing the complement set of a substitution (which can be an infinite set) we propose to annotate the prohibition with the unifier itself and use it to determine what the variables of that prohibition cannot be in future unifications in order to avoid a conflict.",
                "We therefore denote annotated prohibitions as prh(Â¯I) Î£, where Î£ = {Ïƒ1, . . . , Ïƒn}, is a set of unifiers.",
                "Annotated norms3 are interpreted as deontic constructs with curtailed influences, that is, their effect (on agents, roles and illocutions) has been limited by the set Î£ of unifiers.",
                "A prohibition may be in conflict with various obligations in a given normative scene s = id, Î” and we need to record (and possibly avoid) all these conflicts.",
                "We define below an algorithm which ensures that a normative position will be added to a normative scene in such a way that it will not cause any conflicts. 3 Although we propose to curtail prohibitions, the same machinery can be used to define the curtailment of obligations instead.",
                "These different policies are dependent on the intended deontic semantics and requirements of the systems addressed.",
                "For instance, some MASs may require that their agents should not act in the presence of conflicts, that is, the obligation should be curtailed. 6.1 Conflict Resolution We propose a fine-grained way of resolving normative conflicts via unification.",
                "We detect the overlapping of the influences of norms , i.e. how they affect the behaviour of the concerned agents, and we curtail the influence of the normative position, by appropriately using the annotations when checking if the norm applies to illocutions.",
                "The algorithm shown in Figure 4 depicts how we maintain a conflict-free set of norms.",
                "It adds a given norm N to an existing, conflictfree normative state Î”, obtaining a resulting new normative state Î” which is conflict-free, that is, its prohibitions are annotated with a set of conflict sets indicating which bindings for variables have to be avoided for conflicts not to take place. algorithm addNorm(N, Î”) begin 1 timestamp(N) 2 case N of 3 per(Â¯I): Î” := Î” âˆª {N} 4 prh(I): if N âˆˆ Î” s.t. conflict(N, N , Ïƒ) then Î” := Î” 5 else Î” := Î” âˆª {N} 6 prh(Â¯I): 7 begin 8 Î£ := âˆ… 9 for each N âˆˆ Î” do 10 if conflict(N, N , Ïƒ) then Î£ := Î£ âˆª {Ïƒ} 11 Î” := Î” âˆª {N Î£} 12 end 13 obl(Â¯I): 14 begin 15 Î”1 := âˆ…; Î”2 := âˆ… 16 for each (N Î£) âˆˆ Î” do 17 if N = prh(I) then 18 if conflict(N , N, Ïƒ) then Î”1 := Î”1 âˆª {N Î£} 19 else nil 20 else 21 if conflict(N , N, Ïƒ) then 22 begin 23 Î”1 := Î”1 âˆª {N Î£} 24 Î”2 := Î”2 âˆª {N (Î£ âˆª {Ïƒ})} 25 end 26 Î” := (Î” âˆ’ Î”1) âˆª Î”2 âˆª {N} 27 end 28 end case 29 return Î” end Figure 4: Algorithm to Preserve Conflict-Freedom The algorithm uses a case of structure to differentiate the different possibilities for a given norm N. Line 3 addresses the case when the given norm is a permission: N is simply added to Î”.",
                "Lines 4-5 address the case when we attempt to add a ground prohibition to a normative state: if it conflicts with any obligation, then it is discarded; otherwise it is added to the normative state.",
                "Lines 6-12 describe the situation when the normative position to be added is a nonground prohibition.",
                "In this case, the algorithm initialises Î£ to an empty set and loops (line 9-10) through the norms N in the old normative state Î”.",
                "Upon finding one that conflicts with N, the algorithm updates Î£ by adding the newly found conflict set Ïƒ to it (line 10).",
                "By looping through Î”, we are able to check any conflicts between the new prohibition and the existing obligations, adequately building the annotation Î£ to be used when adding N to Î” in line 11.",
                "Lines 13-27 describe how a new obligation is accommodated to an existing normative state.",
                "We make use of two initially empty, temporary sets, Î”1, Î”2.",
                "The algorithm loops through Î” (lines 16-25) picking up those annotated prohibitions N Î£ which conflict with the new obligation.",
                "There are, however, two cases to deal with: the one when a ground The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 641 prohibition is found (line 17), and its exception, covering non-ground prohibitions (line 20).",
                "In both cases, the old prohibition is stored in Î”1 (lines 18 and 23) to be later removed from Î” (line 26).",
                "However, in the case of a nonground prohibition, the algorithm updates its annotation of conflict sets (line 24).",
                "The loop guarantees that an exhaustive (linear) search through a normative state takes place, checking if the new obligation is in conflict with any existing prohibitions, possibly updating the annotations of these conflicting prohibitions.",
                "In line 26 the algorithm builds the new updated Î” by removing the old prohibitions stored in Î”1 and adding the updated prohibitions stored in Î”2 (if any), as well as the new obligation N. Our proposed algorithm is correct in that, for a given normative position N and a normative state Î”, it provides a new normative state Î” in which all prohibitions have annotations recording how they unify with existing obligations.",
                "The annotations can be empty, though: this is the case when we have a ground prohibition or a prohibition which does not unify/conflict with any obligation.",
                "Permissions do not affect our algorithm and they are appropriately dealt with (line 3).",
                "Any attempt to insert a ground prohibition which conflicts, yields the same normative state (line 4).",
                "When a new obligation is being added then the algorithm guarantees that all prohibitions are considered (lines 14-27), leading to the removal of conflicting ground prohibitions or the update of annotations of non-ground prohibitions.",
                "The algorithm always terminates: the loops are over a finite set Î” and the conflict checks and set operations always terminate.",
                "The complexity of the algorithm is linear: the set Î” is only examined once for each possible case of norm to be added.",
                "When managing normative states we may also need to remove normative positions.",
                "This is straightforward: permissions can be removed without any problems; annotated prohibitions can also be removed without further considerations; obligations, however, require some housekeeping.",
                "When an obligation is to be removed, we must check it against all annotated prohibitions in order to update their annotations.",
                "We apply the conflict check and obtain a unifier, then remove this unifier from the prohibitions annotation.",
                "We invoke the removal algorithm as removeNorm(N, Î”): it returns a new normative state Î” in which N has been removed, with possible alterations to other normative positions as explained. 6.2 Enactment of a Normative Structure The enactment of a normative structure amounts to the parallel, distributed execution of normative scenes and normative transitions.",
                "For illustrative purposes, hereafter we shall describe the interplay between the payment and delivery normative scenes and the normative transition nt linking them in the upper half of figure 2.",
                "With this aim, consider for instance that obl(inform(jules, client, rod, acc, pay(copper, 400, 350), T) âˆˆ Î”payment and that Î”delivery holds prh(inform(rod,wm, jules, client, delivered(Z, Q), T)).",
                "Such states indicate that client Jules is obliged to pay Â£400 for 350kg of copper to accountant Rod according to the payment normative scene, whereas Rod, taking up the role of warehouse manager this time, is prohibited to deliver anything to client Jules according to the delivery normative scene.",
                "For each normative scene, the enactment process goes as follows.",
                "Firstly, it processes its incoming message queue that contains three types of messages: utterances from the activity it is linked to; and normative commands either to add or remove normative positions.",
                "For instance, in our example, the payment normative scene collects the illocution I = utt((inform(jules, client, rod, acc, pay(copper, 400, 350), 35)) standing for client Jules pending payment for copper (via arrow A in figure 2).",
                "Utterances are timestamped and subsequently added to the normative state.",
                "We would have Î”payment = Î”payment âˆª {I}, in our example.",
                "Upon receiving normative commands to either add or remove a normative position, the normative scene invokes the corresponding addition or removal algorithm described in Section 6.1.",
                "Secondly, the normative scene acknowledges its state change by sending a trigger message to every outgoing normative transition it is connected to.",
                "In our example, the payment normative scene would be signalling its state change to normative transition nt.",
                "For normative transitions, the process works differently.",
                "Because each normative transition controls the operation of a single rule, upon receiving a trigger message, it polls every incoming normative scene for substitutions for the relevant illocution schemata on the LHS of its rule.",
                "In our example, nt (being responsible for the rule described in Section 3.4), would poll the payment normative scene (via arrow B) for substitutions.",
                "Upon receiving replies from them (in the form of sets of substitutions together with time-stamps), it has to unify substitutions from each of these normative scenes.",
                "For each unification it finds, the rule is fired, and hence the corresponding normative command is sent along to the output normative scene.",
                "The normative transition then keeps track of the firing message it sent on and of the time-stamps of the normative positions that triggered the firing.",
                "This is done to ensure that the very same normative positions in the LHS of a rule only trigger its firing once.",
                "In our example, nt would be receiving Ïƒ = {X/jules, Y/rod, Z/copper, Q/350} from the payment normative scene.",
                "Since the substitions in Ïƒ unify with nts rule, the rule is fired, and the normative command add(delivery : obl(rod, wm, jules, client, delivered(copper, 350), T)) is sent along to the delivery normative scene to oblige Rod to deliver to client Jules 350kg of copper.",
                "After that, the delivery normative scene would invoke the addNorm algorithm from figure 4 with Î”delivery and N = obl(rod, wm, jules, client, delivered(copper, 350)) as arguments. 7.",
                "RELATED WORK AND CONCLUSIONS Our contributions in this paper are three-fold.",
                "Firstly, we introduce an approach for the management of and reasoning about norms in a distributed manner.",
                "To our knowledge, there is little work published in this direction.",
                "In [8, 21], two languages are presented for the distributed enforcement of norms in MAS.",
                "However, in both works, each agent has a local message interface that forwards legal messages according to a set of norms.",
                "Since these interfaces are local to each agent, norms can only be expressed in terms of actions of that agent.",
                "This is a serious disadvantage, e.g. when one needs to activate an obligation to one agent due to a certain message of another one.",
                "The second contribution is the proposal of a normative structure.",
                "The notion is fruitful because it allows the separation of normative and procedural concerns.",
                "The normative structure we propose makes evident the similarity between the propagation of normative positions and the propagation 642 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) of tokens in Coloured Petri Nets.",
                "That similarity readily suggests a mapping between the two, and gives grounds to a convenient analytical treatment of the normative structure, in general, and the complexity of conflict detection, in particular.",
                "The idea of modelling interactions (in the form of conversations) via Petri Nets has been investigated in [18], where the interaction medium and individual agents are modelled as CPN sub-nets that are subsequently combined for analysis.",
                "In [5], conversations are first designed and analysed at the level of CPNs and thereafter translated into protocols.",
                "Lin et al. [20] map conversation schemata to CPNs.",
                "To our knowledge, the use of this representation in the support of conflict detection in regulated MAS has not been reported elsewhere.",
                "Finally, we present a distributed mechanism to resolve normative conflicts.",
                "Sartor [25] treats normative conflicts from the point of view of legal theory and suggests a way to order the norms involved.",
                "His idea is implemented in [12] but requires a central resource for norm maintenance.",
                "The approach to conflict detection and resolution is an adaptation and extension of the work on instantiation graphs reported in [17] and a related algorithm in [27].",
                "The algorithm presented in the current paper can be used to manage normative states distributedly: normative scenes that happen in parallel have an associated normative state Î” to which the algorithm is independently applied each time a new norm is to be introduced.",
                "These three contributions we present in this paper open many possibilities for future work.",
                "We should mention first, that as a broad strategy we are working on a generalisation of the notion of normative structure to make it operate with different coordination models, with richer deontic content and on top of different computational realisations of regulated MAS.",
                "As a first step in this direction we are taking advantage of the de-coupling between interaction protocols and declarative normative guidance that the normative structure makes available, to provide a normative layer for electronic institutions (as defined in [1]).",
                "We expect such coupling will endow electronic institutions with a more flexible -and more expressive- normative environment.",
                "Furthermore, we want to extend our model along several directions: (1) to handle negation and constraints as part of the norm language, and in particular the notion of time; (2) to accommodate multiple, hierarchical norm authorities based on roles, along the lines of Cholvy and Cuppens [3] and power relationships as suggested by Carabelea et al. [2]; (3) to capture in the conflict resolution algorithm different semantics relating the deontic notions by supporting different axiomations (e.g., relative strength of prohibition versus obligation, default deontic notions, deontic inconsistencies).",
                "On the theoretical side, we intend to use analysis techniques of CPNs in order to characterise classes of CPNs (e.g., acyclic, symmetric, etc.) corresponding to families of Normative Structures that are susceptible to tractable offline conflict detection.",
                "The combination of these techniques along with our online conflict resolution mechanisms is intended to endow MAS designers with the ability to incorporate norms into their systems in a principled way. 8.",
                "REFERENCES [1] J. L. Arcos, M. Esteva, P. Noriega, J.",
                "A. RodrÂ´Ä±guez, and C. Sierra.",
                "Engineering open environments with electronic institutions.",
                "Journal on Engineering Applications of Artificial Intelligence, 18(2):191-204, 2005. [2] C. Carabelea, O. Boissier, and C. Castelfranchi.",
                "Using social power to enable agents to reason about being part of a group.",
                "In 5th Internat.",
                "Workshop, ESAW 2004, pages 166-177, 2004. [3] L. Cholvy and F. Cuppens.",
                "Solving normative conflicts by merging roles.",
                "In Fifth International Conference on Artificial Intelligence and Law, Washington, USA, 1995. [4] S. Christensen and T. B. Haagh.",
                "Design CPN - overview of CPN ML syntax.",
                "Technical report, University of Aarhus, 1996. [5] R. S. Cost, Y. Chen, T. W. Finin, Y. Labrou, and Y. Peng.",
                "Using colored petri nets for conversation modeling.",
                "In Issues in Agent Communication, pages 178-192, London, UK, 2000. [6] F. Dignum.",
                "Autonomous Agents with Norms.",
                "Artificial Intelligence and Law, 7(1):69-79, 1999. [7] A. Elhag, J. Breuker, and P. Brouwer.",
                "On the Formal Analysis of Normative Conflicts.",
                "Information & Comms.",
                "Techn.",
                "Law, 9(3):207-217, Oct. 2000. [8] M. Esteva, W. Vasconcelos, C. Sierra, and J.",
                "A. RodrÂ´Ä±guez-Aguilar.",
                "Norm consistency in electronic institutions. volume 3171 (LNAI), pages 494-505.",
                "Springer-Verlag, 2004. [9] M. Fitting.",
                "First-Order Logic and Automated Theorem Proving.",
                "Springer-Verlag, New York, U.S.A., 1990. [10] N. Fornara, F. Vigan`o, and M. Colombetti.",
                "An Event Driven Approach to Norms in Artificial Institutions.",
                "In AAMAS05 Workshop: Agents, Norms and Institutions for Regulated Multiagent Systems (ANI@REM), Utrecht, 2005. [11] D. Gaertner, P. Noriega, and C. Sierra.",
                "Extending the BDI architecture with commitments.",
                "In Proceedings of the 9th International Conference of the Catalan Association of Artificial Intelligence, 2006. [12] A. GarcÂ´Ä±a-Camino, P. Noriega, and J.-A.",
                "RodrÂ´Ä±guez-Aguilar.",
                "An Algorithm for Conflict Resolution in Regulated Compound Activities.",
                "In 7th Int.Workshop - ESAW 06, 2006. [13] A. GarcÂ´Ä±a-Camino, J.-A.",
                "RodrÂ´Ä±guez-Aguilar, C. Sierra, and W. Vasconcelos.",
                "A Distributed Architecture for Norm-Aware Agent Societies.",
                "In DALT III, volume 3904 (LNAI), pages 89-105.",
                "Springer, 2006. [14] F. Giunchiglia and L. Serafini.",
                "Multi-language hierarchical logics or: How we can do without modal logics.",
                "Artificial Intelligence, 65(1):29-70, 1994. [15] J. Habermas.",
                "The Theory of Communication Action, Volume One, Reason and the Rationalization of Society.",
                "Beacon Press, 1984. [16] K. Jensen.",
                "Coloured Petri Nets: Basic Concepts, Analysis Methods and Practical Uses (Volume 1).",
                "Springer, 1997. [17] M. Kollingbaum and T. Norman.",
                "Strategies for resolving norm conflict in practical reasoning.",
                "In ECAI Workshop Coordination in Emergent Agent Societies 2004, 2004. [18] J.-L. Koning, G. Francois, and Y. Demazeau.",
                "Formalization and pre-validation for interaction protocols in a multi agent systems.",
                "In ECAI, pages 298-307, 1998. [19] B. Kramer and J. Mylopoulos.",
                "Knowledge Representation.",
                "In S. C. Shapiro, editor, Encyclopedia of Artificial Intelligence, volume 1, pages 743-759.",
                "John Wiley & Sons, 1992. [20] F. Lin, D. H. Norrie, W. Shen, and R. Kremer.",
                "A schema-based approach to specifying conversation policies.",
                "In Issues in Agent Communication, pages 193-204, 2000. [21] N. Minsky.",
                "Law Governed Interaction (LGI): A Distributed Coordination and Control Mechanism (An Introduction, and a Reference Manual).",
                "Technical report, Rutgers University, 2005. [22] T. Murata.",
                "Petri nets: Properties, analysis and applications.",
                "Proceedings of the IEEE, 77(4):541-580, 1989. [23] S. Parsons, C. Sierra, and N. Jennings.",
                "Agents that reason and negotiate by arguing.",
                "Journal of Logic and Computation, 8(3):261-292, 1998. [24] A. Ricci and M. Viroli.",
                "Coordination Artifacts: A Unifying Abstraction for Engineering Environment-Mediated Coordination in MAS.",
                "Informatica, 29:433-443, 2005. [25] G. Sartor.",
                "Normative conflicts in legal reasoning.",
                "Artificial Intelligence and Law, 1(2-3):209-235, June 1992. [26] M. Sergot.",
                "A Computational Theory of Normative Positions.",
                "ACM Trans.",
                "Comput.",
                "Logic, 2(4):581-622, 2001. [27] W. W. Vasconcelos, M. Kollingbaum, and T. Norman.",
                "Resolving Conflict and Inconsistency in Norm-Regulated Virtual Organisations.",
                "In Proceedings of AAMAS 07, Hawaii, USA, 2007.",
                "IFAAMAS. [28] G. H. von Wright.",
                "Norm and Action: A Logical Inquiry.",
                "Routledge and Kegan Paul, London, 1963. [29] M. Wooldridge.",
                "An Introduction to Multiagent Systems.",
                "John Wiley & Sons, Chichester, UK, Feb. 2002.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 643"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Cada \"token\" lleva un valor de datos que tiene el tipo de lugar correspondiente.",
                "A menudo se refiere a los valores \"tokens\" como colores \"tokens\" y tambiÃ©n se refiere a los tipos de datos como conjuntos de color.",
                "La transiciÃ³n objetivo de este arco, no solo mueve una \"ficha\" al siguiente estado de este CPN, sino que tambiÃ©n coloca una \"ficha\" en el lugar correspondiente a la escena normativa apropiada en el modelo de CPN de la estructura normativa (a travÃ©s de ARC2).",
                "La transiciÃ³n 3 finalmente podrÃ­a propagar que \"token\" en forma de obligaciÃ³n, por ejemplo."
            ],
            "translated_text": "",
            "candidates": [
                "simbÃ³lico",
                "token",
                "simbÃ³lico",
                "tokens",
                "tokens",
                "simbÃ³lico",
                "ficha",
                "ficha",
                "simbÃ³lico",
                "token"
            ],
            "error": []
        },
        "conflict": {
            "translated_key": "conflicto",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Distributed Norm Management in Regulated Multi-Agent Systems âˆ— Dorian Gaertner Dept.",
                "of Computing, Imperial College London, London SW7 2AZ, United Kingdom dg00@doc.ic.ac.uk Andres Garcia-Camino, Pablo Noriega, J.-A.",
                "Rodriguez-Aguilar IIIA-CSIC, 08193 Bellaterra, Spain {andres,pablo,jar}@iiia.csic.es Wamberto Vasconcelos Dept. of Computing Science, University of Aberdeen, Aberdeen AB24 3UE, United Kingdom wvasconcelos@acm.org ABSTRACT Norms are widely recognised as a means of coordinating multi-agent systems.",
                "The distributed management of norms is a challenging issue and we observe a lack of truly distributed computational realisations of normative models.",
                "In order to regulate the behaviour of autonomous agents that take part in multiple, related activities, we propose a normative model, the Normative Structure (NS), an artifact that is based on the propagation of normative positions (obligations, prohibitions, permissions), as consequences of agents actions.",
                "Within a NS, conflicts may arise due to the dynamic nature of the MAS and the concurrency of agents actions.",
                "However, ensuring <br>conflict</br>-freedom of a NS at design time is computationally intractable.",
                "We show this by formalising the notion of <br>conflict</br>, providing a mapping of NSs into Coloured Petri Nets and borrowing well-known theoretical results from that field.",
                "Since online <br>conflict</br> resolution is required, we present a tractable algorithm to be employed distributedly.",
                "We then demonstrate that this algorithm is paramount for the distributed enactment of a NS.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Languages and structures General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION A fundamental feature of open, regulated multi-agent systems in which autonomous agents interact, is that participating agents are meant to comply with the conventions of the system.",
                "Norms can be used to model such conventions and hence as a means to regulate the observable behaviour of agents [6, 29].",
                "There are many contributions on the subject of norms from sociologists, philosophers and logicians (e.g., [15, 28]).",
                "However, there are very few proposals for computational realisations of normative models - the way norms can be integrated in the design and execution of MASs.",
                "The few that exist (e.g. [10, 13, 24]), operate in a centralised manner which creates bottlenecks and single points-of-failure.",
                "To our knowledge, no proposal truly supports the distributed enactment of normative environments.",
                "In our paper we approach that problem and propose means to handle conflicting commitments in open, regulated, multiagent systems in a distributed manner.",
                "The type of regulated MAS we envisage consists of multiple, concurrent, related activities where agents interact.",
                "Each agent may concurrently participate in several activities, and change from one activity to another.",
                "An agents actions within an activity may have consequences in the form of normative positions (i.e. obligations, permissions, and prohibitions) [26] that may constrain its future behaviour.",
                "For instance, a buyer agent who runs out of credit may be forbidden to make further offers, or a seller agent is obliged to deliver after closing a deal.",
                "We assume that agents may choose not to fulfill all their obligations and hence may be sanctioned by the MAS.",
                "Notice that, when activities are distributed, normative positions must flow from the activities in which they are generated to those in which they take effect.",
                "For instance, the sellers obligation above must flow (or be propagated) from a negotiation activity to a delivery activity.",
                "Since in an open, regulated MAS one cannot embed normative aspects into the agents design, we adopt the view that the MAS should be supplemented with a separate set of norms that further regulates the behaviour of participating agents.",
                "In order to model the separation of concerns between the coordination level (agents interactions) and the normative level (propagation of normative positions), we propose an artifact called the Normative Structure (NS).",
                "Within a NS conflicts may arise due to the dynamic nature of the MAS and the concurrency of agents actions.",
                "For instance, an agent may be obliged and prohibited to do the 636 978-81-904262-7-5 (RPS) c 2007 IFAAMAS very same action in an activity.",
                "Since the regulation of a MAS entails that participating agents need to be aware of the validity of those actions that take place within it, such conflicts ought to be identified and possibly resolved if a claim of validity is needed for an agent to engage in an action or be sanctioned.",
                "However, ensuring <br>conflict</br>-freedom of a NS at design time is computationally intractable.",
                "We show this by formalising the notion of <br>conflict</br>, providing a mapping of NSs into Coloured Petri Nets (CPNs) and borrowing well-known theoretical results from the field of CPNs.",
                "We believe that online <br>conflict</br> detection and resolution is required.",
                "Hence, we present a tractable algorithm for <br>conflict</br> resolution.",
                "This algorithm is paramount for the distributed enactment of a NS.",
                "The paper is organised as follows.",
                "In Section 2 we detail a scenario to serve as an example throughout the paper.",
                "Next, in Section 3 we formally define the normative structure artifact.",
                "Further on, in Section 4 we formalise the notion of <br>conflict</br> to subsequently analyse the complexity of <br>conflict</br> detection in terms of CPNs in Section 5.",
                "Section 6 describes the computational management of NSs by describing their enactment and presenting an algorithm for <br>conflict</br> resolution.",
                "Finally, we comment on related work, draw conclusions and report on future work in Section 7. 2.",
                "SCENARIO We use a supply-chain scenario in which companies and individuals come together at an online marketplace to conduct business.",
                "The overall transaction procedure may be organised as six distributed activities, represented as nodes in the diagram in Figure 1.",
                "They involve different participants whose behaviour is coordinated through protocols.",
                "In this scenario agents can play one of four roles: marExit Registration Payment Delivery Negotiation Coordination Model Contract Figure 1: Activity Structure of the Scenario ketplace accountant (acc), client, supplier (supp) and warehouse managers (wm).",
                "The arrows connecting the activities represent how agents can move from one activity to another.",
                "After registering at the marketplace, clients and suppliers get together in an activity where they negotiate the terms of their transaction, i.e. prices, amounts of goods to be delivered, deadlines and other details.",
                "In the contract activity, the order becomes established and an invoice is prepared.",
                "The client will then participate in a payment activity, verifying his credit-worthiness and instructing his bank to transfer the correct amount of money.",
                "The supplier in the meantime will arrange for the goods to be delivered (e.g. via a warehouse manager) in the delivery activity.",
                "Finally, agents can leave the marketplace conforming to a predetermined exit protocol.",
                "The marketplace accountant participates in most of the activities as a trusted provider of auditing tools.",
                "In the rest of the paper we shall build on this scenario to exemplify the notion of normative structure and to illustrate our approach to <br>conflict</br> detection and resolution in a distributed setting. 3.",
                "NORMATIVE STRUCTURE In MASs agents interact according to protocols which naturally are distributed.",
                "We advocate that actions in one such protocol may have an effect on the enactment of other protocols.",
                "Certain actions can become prohibited or obligatory, for example.",
                "We take normative positions to be obligations, prohibitions and permissions akin to work described in [26].",
                "The intention of adding or removing a normative position we call normative command.",
                "Occurrences of normative positions in one protocol may also have consequences for other protocols1 .",
                "In order to define our norm language and specify how normative positions are propagated, we have been inspired by multi-context systems [14].",
                "These systems allow the structuring of knowledge into distinct formal theories and the definition of relationships between them.",
                "The relationships are expressed as bridge rules - deducibility of formulae in some contexts leads to the deduction of other formulae in other contexts.",
                "Recently, these systems have been successfully used to define agent architectures [11, 23].",
                "The metaphor translates to our current work as follows: the utterance of illocutions and/or the existence of normative positions in some normative scenes leads to the deduction of normative positions in other normative scenes.",
                "We are concerned with the propagation and distribution of normative positions within a network of distributed, normative scenes as a consequence of agents actions.",
                "We take normative scenes to be sets of normative positions and utterances that are associated with an underlying interaction protocol corresponding to an activity.",
                "In this section, we first present a simple language capturing these aspects and formally introduce the notions of normative scene, normative transition rule and normative structure.",
                "We give the intended semantics of these rules and show how to control a MAS via norms in an example. 3.1 Basic Concepts The building blocks of our language are terms and atomic formulae: Def. 1.",
                "A term, denoted as t, is (i) any constant expressed using lowercase (with or without subscripts), e.g. a, b0, c or (ii) any variable expressed using uppercase (with or without subscripts), e.g.",
                "X, Y, Zb or (iii) any function f(t1, . . . , tn), where f is an n-ary function symbol and t1, .., tn are terms.",
                "Some examples of terms and functions are Credit, price or offer(bible, 30) being respectively a variable, a constant and a function.",
                "We will be making use of identifiers throughout the paper, which are constant terms and also need the following definition: Def. 2.",
                "An atomic formula is any construct p(t1, . . . , tn), where p is an n-ary predicate symbol and t1, . . . , tn are terms.",
                "The set of all atomic formulae is denoted as Î”.",
                "We focus on an expressive class of MASs in which interaction is carried out by means of illocutionary speech acts exchanged among participating agents: Def. 3.",
                "Illocutions I are ground atomic formulae which have the form p(ag, r, ag , r , Î´, t) where p is an element of 1 Here, we abstract from protocols and refer to them generically as activities.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 637 a set of illocutionary particles (e.g. inform, request, offer); ag, ag are agent identifiers; r, r are role identifiers; Î´, an arbitrary ground term, is the content of the message, built from a shared content language; t âˆˆ N is a time stamp.",
                "The intuitive meaning of p(ag, r, ag , r , m, t) is that agent ag playing role r sent message m to agent ag playing role r at time t. An example of an illocution is inform(ag4, supp, ag3, client, offer(wire, 12), 10).",
                "Sometimes it is useful to refer to illocutions that are not fully grounded, that is, those that may contain uninstantiated (free) variables.",
                "In the description of a protocol, for instance, the precise values of the message exchanged can be left unspecified.",
                "During the enactment of the protocol agents will produce the actual values which will give rise to a ground illocution.",
                "We can thus define illocution schemata: Def. 4.",
                "An illocution schema Â¯I is any atomic formula p(ag, r, ag , r , Î´, t) in which some of the terms may either be variables or may contain variables. 3.2 Formal Definition of the Notion of NS We first define normative scenes as follows: Def. 5.",
                "A normative scene is a tuple s = ids, Î”s where ids is a scene identifier and Î”s is the set of atomic formulae Î´ (i.e. utterances and normative positions) that hold in s. We will also refer to Î”s as the state of normative scene s. For instance, a snapshot of the state of the delivery normative scene of our scenario could be represented as: Î”s = 8 < : utt(request(sean, client, kev, wm, receive(wire, 200), 20)), utt(accept(kev, wm, sean, client, receive(wire, 200), 30)), obl(inform(kev, wm, sean, client, delivered(wire, 200), 30)) 9 = ; That is, agent Sean taking up the client role has requested agent Kev (taking up the warehouse manager role wm) to receive 200kg of wire, and agent Kev is obliged to deliver 200kg of wire to Sean since he accepted the request.",
                "Note that the state of a normative scene Î”s evolves over time.",
                "These normative scenes are connected to one another via normative transitions that specify how utterances and normative positions in one scene affect other normative scenes.",
                "As mentioned above, activities are not independent since illocutions uttered in some of them may have an effect on other ones.",
                "Normative transition rules define the conditions under which a normative command is generated.",
                "These conditions are either utterances or normative positions associated with a given protocol (denoted e.g. activity : utterance) which yield a normative command, i.e. the addition or removal of another normative position, possibly related to a different activity.",
                "Our transition rules are thus defined: Def. 6.",
                "A normative transition rule R is of the form: R ::= V C V ::= ids : D | V, V D ::= N | utt(Â¯I) N ::= per(Â¯I) | prh(Â¯I) | obl(Â¯I) C ::= add(ids : N) | remove(ids : N) where Â¯I is an illocution schema, N is a normative position (i.e. permission, prohibition or obligation), ids is an identifier for activity s and C is a normative command.",
                "We endow our language with the usual semantics of rulebased languages [19].",
                "Rules map an existing normative structure to a new normative structure where only the state of the normative scenes change.",
                "In the definitions below we rely on the standard concept of substitution [9].",
                "Def. 7.",
                "A normative transition is a tuple b = idb, rb where idb is an identifier and rb is a normative transition rule.",
                "We are proposing to extend the notion of MAS, regulated by protocols, with an extra layer consisting of normative scenes and normative transitions.",
                "This layer is represented as a bi-partite graph that we term normative structure.",
                "A normative structure relates normative scenes and normative transitions specifying which normative positions are to be generated or removed in which normative scenes.",
                "Def. 8.",
                "A normative structure is a labelled bi-partite graph NS = Nodes, Edges, Lin , Lout .",
                "Nodes is a set SâˆªB where S is a set of normative scenes and B is a set of normative transitions.",
                "Edges is a set Ain âˆª Aout where Ain âŠ† S Ã— B is a set of input arcs labelled with an atomic formula using the labelling function Lin : Ain â†’ D; and Aout âŠ† B Ã— S is a set of output arcs labelled with a normative position using the labelling function Lout : Aout â†’ N. The following must hold: 1.",
                "Each atomic formula appearing in the LHS of a rule rb must be of the form (ids : D) where s âˆˆ S and D âˆˆ Î” and âˆƒain âˆˆ Ain such that ain = (s, b) and Lin (ain ) = D. 2.",
                "The atomic formula appearing in the RHS of a rule rb must be of the form add(ids : N) or remove(ids : N) where s âˆˆ S and âˆƒaout âˆˆ Aout such that aout = (b, s) and Lout (aout ) = N. 3. âˆ€a âˆˆ Ain such that a = (s, b) and b = idb, rb and Lin (a) = D then (ids:D) must occur in the LHS of rb. 4. âˆ€a âˆˆ Aout such that a = (b, s) and b = idb, rb and Lout (a) = N then add(ids : N) or remove(ids : N) must occur in the RHS of rb.",
                "The first two points ensure that every atomic formulae on the LHS of a normative transition rule labels an arc entering the appropriate normative transition in the normative structure, and that the atomic formula on the RHS labels the corresponding outgoing arc.",
                "Points three and four ensure that labels from all incoming arcs are used in the LHS of the normative transition rule that these arcs enter into, and that the labels from all outgoing arcs are used in the RHS of the normative transition rule that these arcs leave. 3.3 Intended Semantics The formal semantics will be defined via a mapping to Coloured Petri Nets in Section 5.1.",
                "Here we start defining the intended semantics of normative transition rules by describing how a rule changes a normative scene of an existing normative structure yielding a new normative structure.",
                "Each rule is triggered once for each substitution that unifies the left-hand side V of the rule with the state of the corresponding normative scenes.",
                "An atomic formula (i.e. an utterance or a normative position) holds iff it is unifiable with an utterance or normative position that belongs to the state of the corresponding normative scene.",
                "Every time a rule is triggered, the normative command specified on the right-hand side of that rule is carried out, intending to add or remove a normative position from the state of the corresponding normative scene.",
                "However, addition is not unconditional as conflicts may arise.",
                "This topic will be treated in Sections 4 and 6.1. 638 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.4 Example In our running example we have the following exemplary normative transition rule: â€ž payment : obl(inform(X, client, Y, acc, pay(Z, P, Q), T )), payment : utt(inform(X, client, Y, acc, pay(Z, P, Q), T )) Â« delivery : add(obl(inform(Y, wm, X, client, delivered(Z, Q), T ))) That is, during the payment activity, an obligation on client X to inform accountant Y about the payment P of item Z at time T and the corresponding utterance which fulfills this obligation allows the flow of a norm to the delivery activity.",
                "The norm is an obligation on agent Y (this time taking up the role of the warehouse manager wm) to send a message to client X that item Z has been delivered.",
                "We show in Figure 2 a diagrammatic representation of how activities and a normative structure relate: Payment Delivery Contract Normative Level Exit Registration Payment Delivery Negotiation Coordination Level Contract nt Figure 2: Activities and Normative Structure As illocutions are uttered during activities, normative positions arise.",
                "Utterances and normative positions are combined in transition rules, causing the flow of normative positions between normative scenes.",
                "The connection between the two levels is described in Section 6.2. 4.",
                "<br>conflict</br> DEFINITION The terms deontic <br>conflict</br> and deontic inconsistency have been used interchangeably in the literature.",
                "However, in this paper we adopt the view of [7] in which the authors suggest that a deontic inconsistency arises when an action is simultaneously permitted and prohibited - since a permission may not be acted upon, no real <br>conflict</br> occurs.",
                "The situations when an action is simultaneously obliged and prohibited are, however, deontic conflicts, as both obligations and prohibitions influence behaviours in a conflicting fashion.",
                "The content of normative positions in this paper are illocutions.",
                "Therefore, a normative <br>conflict</br> arises when an illocution is simultaneously obliged and prohibited.",
                "We propose to use the standard notion of unification [9] to detect when a prohibition and a permission overlap.",
                "For instance, an obligation obl(inform(A1, R1, A2, R2, p(c, X), T)) and a prohibition prh(inform(a1, r1, a2, r2, p(Y, d), T )) are in <br>conflict</br> as they unify under Ïƒ = {A1/a1, R1/r1, A2/a2, R2/r2, Y/c, X/d, T/T }).",
                "We formally capture this notion: Def. 9.",
                "A (deontic) <br>conflict</br> arises between two normative positions N and N under a substitution Ïƒ, denoted as <br>conflict</br>(N, N , Ïƒ), if and only if N = prh(Â¯I), N = obl(Â¯I ) and unify(Â¯I,Â¯I , Ïƒ).",
                "That is, a prohibition and an obligation are in <br>conflict</br> if, and only if, their illocutions unify under Ïƒ.",
                "The substitution Ïƒ, called here the <br>conflict</br> set, unifies the agents, roles and atomic formulae.",
                "We assume that unify is a suitable implementation of a unification algorithm which i) always terminates (possibly failing, if a unifier cannot be found); ii) is correct; and iii) has linear computational complexity.",
                "Inconsistencies caused by the same illocution being simultaneously permitted and prohibited can be formalised similarly.",
                "In this paper we focus on prohibition/obligation conflicts, but the computational machinery introduced in Section 6.1 can equally be used to detect prohibition/permission inconsistencies, if we substitute modality obl for per. 5.",
                "FORMALISING <br>conflict</br>-FREEDOM In this section we introduce some background knowledge on CPNs assuming a basic understanding of ordinary Petri Nets.",
                "For technical details we refer the reader to [16].",
                "We then map NSs to CPNs and analyse their properties.",
                "CPNs combine the strength of Petri nets with the strength of functional programming languages.",
                "On the one hand, Petri nets provide the primitives for the description of the synchronisation of concurrent processes.",
                "As noticed in [16], CPNs have a semantics which builds upon true concurrency, instead of interleaving.",
                "In our opinion, a true-concurrency semantics is easier to work with because it is the way we envisage the connection between the coordination level and the normative level of a multi-agent system to be.",
                "On the other hand, the functional programming languages used by CPNs provide the primitives for the definition of data types and the manipulation of their data values.",
                "Thus, we can readily translate expressions of a normative structure.",
                "Last but not least, CPNs have a well-defined semantics which unambiguously defines the behaviour of each CPN.",
                "Furthermore, CPNs have a large number of formal analysis methods and tools by which properties of CPNs can be proved.",
                "Summing up, CPNs provide us with all the necessary features to formally reason about normative structures given that an adequate mapping is provided.",
                "In accordance with Petri nets, the states of a CPN are represented by means of places.",
                "But unlike Petri Nets, each place has an associated data type determining the kind of data which the place may contain.",
                "A state of a CPN is called a marking.",
                "It consists of a number of tokens positioned on the individual places.",
                "Each token carries a data value which has the type of the corresponding place.",
                "In general, a place may contain two or more tokens with the same data value.",
                "Thus, a marking of a CPN is a function which maps each place into a multi-set2 of tokens of the correct type.",
                "One often refers to the token values as token colours and one also refers to the data types as colour sets.",
                "The types of a CPN can be arbitrarily complex.",
                "Actions in a CPN are represented by means of transitions.",
                "An incoming arc into a transition from a place indicates that the transition may remove tokens from the corresponding place while an outgoing arc indicates that the transition may add tokens.",
                "The exact number of tokens and their data values are determined by the arc expressions, which are encoded using the programming language chosen for the CPN.",
                "A transition is enabled in a CPN if and only if all the 2 A multi-set (or bag) is an extension to the notion of set, allowing the possibility of multiple appearances of the same element.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 639 variables in the expressions of its incoming arcs are bound to some value(s) (each one of these bindings is referred to as a binding element).",
                "If so, the transition may occur by removing tokens from its input places and adding tokens to its output places.",
                "In addition to the arc expressions, it is possible to attach a boolean guard expression (with variables) to each transition.",
                "Putting all the elements above together we obtain a formal definition of CPN that shall be employed further ahead for mapping purposes.",
                "Def. 10.",
                "A CPN is a tuple Î£, P, T, A, N, C, G, E, I where: (i) Î£ is a finite set of non-empty types, also called colour sets; (ii) P is a finite set of places; (iii) T is a finite set of transitions; (iv) A is a finite set of arcs; (v) N is a node function defined from A into P Ã— T âˆª T Ã— P; (vi) C is a colour function from P into Î£; (vii) G is a guard function from T into expressions; (viii) E is an arc expression function from A into expressions; (ix) I is an initialisation function from P into closed expressions; Notice that the informal explanation of the enabling and occurrence rules given above provides the foundations to understand the behaviour of a CPN.",
                "In accordance with ordinary Petri nets, the concurrent behaviour of a CPN is based on the notion of step.",
                "Formally, a step is a non-empty and finite multi-set over the set of all binding elements.",
                "Let step S be enabled in a marking M. Then, S may occur, changing the marking M to M .",
                "Moreover, we say that marking M is directly reachable from marking M by the occurrence of step S, and we denote it by M[S > M .",
                "A finite occurrence sequence is a finite sequence of steps and markings: M1[S1 > M2 . . .",
                "Mn[Sn > Mn+1 such that n âˆˆ N and Mi[Si > Mi+1 âˆ€i âˆˆ {1, . . . , n}.",
                "The set of all possible markings reachable for a net Net from a marking M is called its reachability set, and is denoted as R(Net, M). 5.1 Mapping to Coloured Petri Nets Our normative structure is a labelled bi-partite graph.",
                "The same is true for a Coloured Petri Net.",
                "We are presenting a mapping f from one to the other, in order to provide semantics for the normative structure and prove properties about it by using well-known theoretical results from work on CPNs.",
                "The mapping f makes use of correspondences between normative scenes and CPN places, normative transitions and CPN transitions and finally, between arc labels and CPN arc expressions.",
                "S â†’ P B â†’ T Lin âˆª Lout â†’ E The set of types is the singleton set containing the colour NP (i.e.",
                "Î£ = {NP}).",
                "This complex type is structured as follows (we use CPN-ML [4] syntax): color NPT = with Obl | Per | Prh | NoMod color IP = with inform | declare | offer color UTT = record illp : IP ag1, role1, ag2, role2 : string content: string time : int color NP = record mode : NPT illoc : UTT Modelling illocutions as norms without modality (NoMod) is a formal trick we use to ensure that sub-nets can be combined as explained below.",
                "Arcs are mapped almost directly.",
                "A is a finite set of arcs and N is a node function, such that âˆ€a âˆˆ A âˆƒa âˆˆ Ain âˆªAout .",
                "N(a) = a .",
                "The initialisation function I is defined as I(p) = Î”s (âˆ€s âˆˆ S where p is obtained from s using the mapping; remember that s = ids, Î”s ).",
                "Finally, the colour function C assigns the colour NP to every place: C(p) = NP (âˆ€p âˆˆ P).",
                "We are not making use of the guard function G. In future work, this function can be used to model constraints when we extend the expressiveness of our norm language. 5.2 Properties of Normative Structures Having defined the mapping from normative structures to Coloured Petri Nets, we now look at properties of CPNs that help us understand the complexity of <br>conflict</br> detection.",
                "One question we would like to answer is, whether at a given point in time, a given normative structure is <br>conflict</br>-free.",
                "Such a snapshot of a normative structure corresponds to a marking in the mapped CPN.",
                "Def. 11.",
                "Given a marking Mi, this marking is conflictfree if Â¬âˆƒp âˆˆ P. âˆƒnp1, np2 âˆˆ Mi(p) such that np1.mode = Obl and np2.mode = Prh and np1.illoc and np2.illoc unify under a valid substitution.",
                "Another interesting question would be, whether a <br>conflict</br> will occur from such a snapshot of the system by propagating the normative positions.",
                "In order to answer this question, we first translate the snapshot of the normative structure to the corresponding CPN and then execute the finite occurence sequence of markings and steps, verifying the <br>conflict</br>-freedom of each marking as we go along.",
                "Def. 12.",
                "Given a marking Mi, a finite occurrence sequence Si, Si+1, ..., Sn is called <br>conflict</br>-free, if and only if Mi[Si > Mi+1 . . .",
                "Mn[Sn > Mn+1 and Mk is <br>conflict</br>-free for all k such that i â‰¤ k â‰¤ n + 1.",
                "However, the main question we would like to investigate, is whether or not a given normative structure is conflictresistant, that is, whether or not the agents enacting the MAS are able to bring about conflicts through their actions.",
                "As soon as one includes the possibility of actions (or utterances) from autonomous agents, one looses determinism.",
                "Having mapped the normative structure to a CPN, we now add CPN models of the agents interactions.",
                "Each form of agent interaction (i.e. each activity) can be modelled using CPNs along the lines of Cost et al. [5].",
                "These nondeterministic CPNs feed tokens into the CPN that models the normative structure.",
                "This leads to the introduction of non-determinism into the combined CPN.",
                "The lower half of figure 3 shows part of a CPN model of an agent protocol where the arc denoted with 1 represents some utterance of an illocution by an agent.",
                "The target transition of this arc, not only moves a token on to the next state of this CPN, but also places a token in the place corresponding to the appropriate normative scene in the CPN model of the normative structure (via arc 2).",
                "Transition 3 finally could propagate that token in form of an obligation, for example.",
                "Thus, from a given marking, many different occurrence sequences are possible depending on the agents actions.",
                "We make use of the reachability set R to define a situation in which agents cannot cause conflicts. 640 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) Figure 3: Constructing the combined CPN Def. 13.",
                "Given a net N, a marking M is <br>conflict</br>-resistant if and only if all markings in R(N,M) are <br>conflict</br>-free.",
                "Checking <br>conflict</br>-freedom of a marking can be done in polynomial time by checking all places of the CPN for conflicting tokens.",
                "<br>conflict</br>-freedom of an occurrence sequence in the CPN that represents the normative structure can also be done in polynomial time since this sequence is deterministic given a snapshot.",
                "Whether or not a normative structure is designed safely corresponds to checking the <br>conflict</br>-resistance of the initial marking M0.",
                "Now, verifying <br>conflict</br>-resistance of a marking becomes a very difficult task.",
                "It corresponds to the reachability problem in a CPN: can a state be reached or a marking achieved, that contains a <br>conflict</br>?.",
                "This reachability problem is known to be NP-complete for ordinary Petri Nets [22] and since CPNs are functionally identical, we cannot hope to verify <br>conflict</br>-resistance of a normative structure off-line in a reasonable amount of time.",
                "Therefore, distributed, run-time mechanisms are needed to ensure that a normative structure maintains consistency.",
                "We present one such mechanism in the following section. 6.",
                "MANAGING NORMATIVE STRUCTURES Once a <br>conflict</br> (as defined in Section 4) has been detected, we propose to employ the unifier to resolve the <br>conflict</br>.",
                "In our example, if the variables in prh(inform(a1, r1, a2, r2, p(Y, d), T )) do not get the values specified in substitution Ïƒ then there will not be a <br>conflict</br>.",
                "However, rather than computing the complement set of a substitution (which can be an infinite set) we propose to annotate the prohibition with the unifier itself and use it to determine what the variables of that prohibition cannot be in future unifications in order to avoid a <br>conflict</br>.",
                "We therefore denote annotated prohibitions as prh(Â¯I) Î£, where Î£ = {Ïƒ1, . . . , Ïƒn}, is a set of unifiers.",
                "Annotated norms3 are interpreted as deontic constructs with curtailed influences, that is, their effect (on agents, roles and illocutions) has been limited by the set Î£ of unifiers.",
                "A prohibition may be in <br>conflict</br> with various obligations in a given normative scene s = id, Î” and we need to record (and possibly avoid) all these conflicts.",
                "We define below an algorithm which ensures that a normative position will be added to a normative scene in such a way that it will not cause any conflicts. 3 Although we propose to curtail prohibitions, the same machinery can be used to define the curtailment of obligations instead.",
                "These different policies are dependent on the intended deontic semantics and requirements of the systems addressed.",
                "For instance, some MASs may require that their agents should not act in the presence of conflicts, that is, the obligation should be curtailed. 6.1 <br>conflict</br> Resolution We propose a fine-grained way of resolving normative conflicts via unification.",
                "We detect the overlapping of the influences of norms , i.e. how they affect the behaviour of the concerned agents, and we curtail the influence of the normative position, by appropriately using the annotations when checking if the norm applies to illocutions.",
                "The algorithm shown in Figure 4 depicts how we maintain a <br>conflict</br>-free set of norms.",
                "It adds a given norm N to an existing, conflictfree normative state Î”, obtaining a resulting new normative state Î” which is <br>conflict</br>-free, that is, its prohibitions are annotated with a set of <br>conflict</br> sets indicating which bindings for variables have to be avoided for conflicts not to take place. algorithm addNorm(N, Î”) begin 1 timestamp(N) 2 case N of 3 per(Â¯I): Î” := Î” âˆª {N} 4 prh(I): if N âˆˆ Î” s.t. conflict(N, N , Ïƒ) then Î” := Î” 5 else Î” := Î” âˆª {N} 6 prh(Â¯I): 7 begin 8 Î£ := âˆ… 9 for each N âˆˆ Î” do 10 if conflict(N, N , Ïƒ) then Î£ := Î£ âˆª {Ïƒ} 11 Î” := Î” âˆª {N Î£} 12 end 13 obl(Â¯I): 14 begin 15 Î”1 := âˆ…; Î”2 := âˆ… 16 for each (N Î£) âˆˆ Î” do 17 if N = prh(I) then 18 if conflict(N , N, Ïƒ) then Î”1 := Î”1 âˆª {N Î£} 19 else nil 20 else 21 if conflict(N , N, Ïƒ) then 22 begin 23 Î”1 := Î”1 âˆª {N Î£} 24 Î”2 := Î”2 âˆª {N (Î£ âˆª {Ïƒ})} 25 end 26 Î” := (Î” âˆ’ Î”1) âˆª Î”2 âˆª {N} 27 end 28 end case 29 return Î” end Figure 4: Algorithm to Preserve Conflict-Freedom The algorithm uses a case of structure to differentiate the different possibilities for a given norm N. Line 3 addresses the case when the given norm is a permission: N is simply added to Î”.",
                "Lines 4-5 address the case when we attempt to add a ground prohibition to a normative state: if it conflicts with any obligation, then it is discarded; otherwise it is added to the normative state.",
                "Lines 6-12 describe the situation when the normative position to be added is a nonground prohibition.",
                "In this case, the algorithm initialises Î£ to an empty set and loops (line 9-10) through the norms N in the old normative state Î”.",
                "Upon finding one that conflicts with N, the algorithm updates Î£ by adding the newly found <br>conflict</br> set Ïƒ to it (line 10).",
                "By looping through Î”, we are able to check any conflicts between the new prohibition and the existing obligations, adequately building the annotation Î£ to be used when adding N to Î” in line 11.",
                "Lines 13-27 describe how a new obligation is accommodated to an existing normative state.",
                "We make use of two initially empty, temporary sets, Î”1, Î”2.",
                "The algorithm loops through Î” (lines 16-25) picking up those annotated prohibitions N Î£ which <br>conflict</br> with the new obligation.",
                "There are, however, two cases to deal with: the one when a ground The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 641 prohibition is found (line 17), and its exception, covering non-ground prohibitions (line 20).",
                "In both cases, the old prohibition is stored in Î”1 (lines 18 and 23) to be later removed from Î” (line 26).",
                "However, in the case of a nonground prohibition, the algorithm updates its annotation of <br>conflict</br> sets (line 24).",
                "The loop guarantees that an exhaustive (linear) search through a normative state takes place, checking if the new obligation is in <br>conflict</br> with any existing prohibitions, possibly updating the annotations of these conflicting prohibitions.",
                "In line 26 the algorithm builds the new updated Î” by removing the old prohibitions stored in Î”1 and adding the updated prohibitions stored in Î”2 (if any), as well as the new obligation N. Our proposed algorithm is correct in that, for a given normative position N and a normative state Î”, it provides a new normative state Î” in which all prohibitions have annotations recording how they unify with existing obligations.",
                "The annotations can be empty, though: this is the case when we have a ground prohibition or a prohibition which does not unify/<br>conflict</br> with any obligation.",
                "Permissions do not affect our algorithm and they are appropriately dealt with (line 3).",
                "Any attempt to insert a ground prohibition which conflicts, yields the same normative state (line 4).",
                "When a new obligation is being added then the algorithm guarantees that all prohibitions are considered (lines 14-27), leading to the removal of conflicting ground prohibitions or the update of annotations of non-ground prohibitions.",
                "The algorithm always terminates: the loops are over a finite set Î” and the <br>conflict</br> checks and set operations always terminate.",
                "The complexity of the algorithm is linear: the set Î” is only examined once for each possible case of norm to be added.",
                "When managing normative states we may also need to remove normative positions.",
                "This is straightforward: permissions can be removed without any problems; annotated prohibitions can also be removed without further considerations; obligations, however, require some housekeeping.",
                "When an obligation is to be removed, we must check it against all annotated prohibitions in order to update their annotations.",
                "We apply the <br>conflict</br> check and obtain a unifier, then remove this unifier from the prohibitions annotation.",
                "We invoke the removal algorithm as removeNorm(N, Î”): it returns a new normative state Î” in which N has been removed, with possible alterations to other normative positions as explained. 6.2 Enactment of a Normative Structure The enactment of a normative structure amounts to the parallel, distributed execution of normative scenes and normative transitions.",
                "For illustrative purposes, hereafter we shall describe the interplay between the payment and delivery normative scenes and the normative transition nt linking them in the upper half of figure 2.",
                "With this aim, consider for instance that obl(inform(jules, client, rod, acc, pay(copper, 400, 350), T) âˆˆ Î”payment and that Î”delivery holds prh(inform(rod,wm, jules, client, delivered(Z, Q), T)).",
                "Such states indicate that client Jules is obliged to pay Â£400 for 350kg of copper to accountant Rod according to the payment normative scene, whereas Rod, taking up the role of warehouse manager this time, is prohibited to deliver anything to client Jules according to the delivery normative scene.",
                "For each normative scene, the enactment process goes as follows.",
                "Firstly, it processes its incoming message queue that contains three types of messages: utterances from the activity it is linked to; and normative commands either to add or remove normative positions.",
                "For instance, in our example, the payment normative scene collects the illocution I = utt((inform(jules, client, rod, acc, pay(copper, 400, 350), 35)) standing for client Jules pending payment for copper (via arrow A in figure 2).",
                "Utterances are timestamped and subsequently added to the normative state.",
                "We would have Î”payment = Î”payment âˆª {I}, in our example.",
                "Upon receiving normative commands to either add or remove a normative position, the normative scene invokes the corresponding addition or removal algorithm described in Section 6.1.",
                "Secondly, the normative scene acknowledges its state change by sending a trigger message to every outgoing normative transition it is connected to.",
                "In our example, the payment normative scene would be signalling its state change to normative transition nt.",
                "For normative transitions, the process works differently.",
                "Because each normative transition controls the operation of a single rule, upon receiving a trigger message, it polls every incoming normative scene for substitutions for the relevant illocution schemata on the LHS of its rule.",
                "In our example, nt (being responsible for the rule described in Section 3.4), would poll the payment normative scene (via arrow B) for substitutions.",
                "Upon receiving replies from them (in the form of sets of substitutions together with time-stamps), it has to unify substitutions from each of these normative scenes.",
                "For each unification it finds, the rule is fired, and hence the corresponding normative command is sent along to the output normative scene.",
                "The normative transition then keeps track of the firing message it sent on and of the time-stamps of the normative positions that triggered the firing.",
                "This is done to ensure that the very same normative positions in the LHS of a rule only trigger its firing once.",
                "In our example, nt would be receiving Ïƒ = {X/jules, Y/rod, Z/copper, Q/350} from the payment normative scene.",
                "Since the substitions in Ïƒ unify with nts rule, the rule is fired, and the normative command add(delivery : obl(rod, wm, jules, client, delivered(copper, 350), T)) is sent along to the delivery normative scene to oblige Rod to deliver to client Jules 350kg of copper.",
                "After that, the delivery normative scene would invoke the addNorm algorithm from figure 4 with Î”delivery and N = obl(rod, wm, jules, client, delivered(copper, 350)) as arguments. 7.",
                "RELATED WORK AND CONCLUSIONS Our contributions in this paper are three-fold.",
                "Firstly, we introduce an approach for the management of and reasoning about norms in a distributed manner.",
                "To our knowledge, there is little work published in this direction.",
                "In [8, 21], two languages are presented for the distributed enforcement of norms in MAS.",
                "However, in both works, each agent has a local message interface that forwards legal messages according to a set of norms.",
                "Since these interfaces are local to each agent, norms can only be expressed in terms of actions of that agent.",
                "This is a serious disadvantage, e.g. when one needs to activate an obligation to one agent due to a certain message of another one.",
                "The second contribution is the proposal of a normative structure.",
                "The notion is fruitful because it allows the separation of normative and procedural concerns.",
                "The normative structure we propose makes evident the similarity between the propagation of normative positions and the propagation 642 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) of tokens in Coloured Petri Nets.",
                "That similarity readily suggests a mapping between the two, and gives grounds to a convenient analytical treatment of the normative structure, in general, and the complexity of <br>conflict</br> detection, in particular.",
                "The idea of modelling interactions (in the form of conversations) via Petri Nets has been investigated in [18], where the interaction medium and individual agents are modelled as CPN sub-nets that are subsequently combined for analysis.",
                "In [5], conversations are first designed and analysed at the level of CPNs and thereafter translated into protocols.",
                "Lin et al. [20] map conversation schemata to CPNs.",
                "To our knowledge, the use of this representation in the support of <br>conflict</br> detection in regulated MAS has not been reported elsewhere.",
                "Finally, we present a distributed mechanism to resolve normative conflicts.",
                "Sartor [25] treats normative conflicts from the point of view of legal theory and suggests a way to order the norms involved.",
                "His idea is implemented in [12] but requires a central resource for norm maintenance.",
                "The approach to <br>conflict</br> detection and resolution is an adaptation and extension of the work on instantiation graphs reported in [17] and a related algorithm in [27].",
                "The algorithm presented in the current paper can be used to manage normative states distributedly: normative scenes that happen in parallel have an associated normative state Î” to which the algorithm is independently applied each time a new norm is to be introduced.",
                "These three contributions we present in this paper open many possibilities for future work.",
                "We should mention first, that as a broad strategy we are working on a generalisation of the notion of normative structure to make it operate with different coordination models, with richer deontic content and on top of different computational realisations of regulated MAS.",
                "As a first step in this direction we are taking advantage of the de-coupling between interaction protocols and declarative normative guidance that the normative structure makes available, to provide a normative layer for electronic institutions (as defined in [1]).",
                "We expect such coupling will endow electronic institutions with a more flexible -and more expressive- normative environment.",
                "Furthermore, we want to extend our model along several directions: (1) to handle negation and constraints as part of the norm language, and in particular the notion of time; (2) to accommodate multiple, hierarchical norm authorities based on roles, along the lines of Cholvy and Cuppens [3] and power relationships as suggested by Carabelea et al. [2]; (3) to capture in the <br>conflict</br> resolution algorithm different semantics relating the deontic notions by supporting different axiomations (e.g., relative strength of prohibition versus obligation, default deontic notions, deontic inconsistencies).",
                "On the theoretical side, we intend to use analysis techniques of CPNs in order to characterise classes of CPNs (e.g., acyclic, symmetric, etc.) corresponding to families of Normative Structures that are susceptible to tractable offline <br>conflict</br> detection.",
                "The combination of these techniques along with our online <br>conflict</br> resolution mechanisms is intended to endow MAS designers with the ability to incorporate norms into their systems in a principled way. 8.",
                "REFERENCES [1] J. L. Arcos, M. Esteva, P. Noriega, J.",
                "A. RodrÂ´Ä±guez, and C. Sierra.",
                "Engineering open environments with electronic institutions.",
                "Journal on Engineering Applications of Artificial Intelligence, 18(2):191-204, 2005. [2] C. Carabelea, O. Boissier, and C. Castelfranchi.",
                "Using social power to enable agents to reason about being part of a group.",
                "In 5th Internat.",
                "Workshop, ESAW 2004, pages 166-177, 2004. [3] L. Cholvy and F. Cuppens.",
                "Solving normative conflicts by merging roles.",
                "In Fifth International Conference on Artificial Intelligence and Law, Washington, USA, 1995. [4] S. Christensen and T. B. Haagh.",
                "Design CPN - overview of CPN ML syntax.",
                "Technical report, University of Aarhus, 1996. [5] R. S. Cost, Y. Chen, T. W. Finin, Y. Labrou, and Y. Peng.",
                "Using colored petri nets for conversation modeling.",
                "In Issues in Agent Communication, pages 178-192, London, UK, 2000. [6] F. Dignum.",
                "Autonomous Agents with Norms.",
                "Artificial Intelligence and Law, 7(1):69-79, 1999. [7] A. Elhag, J. Breuker, and P. Brouwer.",
                "On the Formal Analysis of Normative Conflicts.",
                "Information & Comms.",
                "Techn.",
                "Law, 9(3):207-217, Oct. 2000. [8] M. Esteva, W. Vasconcelos, C. Sierra, and J.",
                "A. RodrÂ´Ä±guez-Aguilar.",
                "Norm consistency in electronic institutions. volume 3171 (LNAI), pages 494-505.",
                "Springer-Verlag, 2004. [9] M. Fitting.",
                "First-Order Logic and Automated Theorem Proving.",
                "Springer-Verlag, New York, U.S.A., 1990. [10] N. Fornara, F. Vigan`o, and M. Colombetti.",
                "An Event Driven Approach to Norms in Artificial Institutions.",
                "In AAMAS05 Workshop: Agents, Norms and Institutions for Regulated Multiagent Systems (ANI@REM), Utrecht, 2005. [11] D. Gaertner, P. Noriega, and C. Sierra.",
                "Extending the BDI architecture with commitments.",
                "In Proceedings of the 9th International Conference of the Catalan Association of Artificial Intelligence, 2006. [12] A. GarcÂ´Ä±a-Camino, P. Noriega, and J.-A.",
                "RodrÂ´Ä±guez-Aguilar.",
                "An Algorithm for <br>conflict</br> Resolution in Regulated Compound Activities.",
                "In 7th Int.Workshop - ESAW 06, 2006. [13] A. GarcÂ´Ä±a-Camino, J.-A.",
                "RodrÂ´Ä±guez-Aguilar, C. Sierra, and W. Vasconcelos.",
                "A Distributed Architecture for Norm-Aware Agent Societies.",
                "In DALT III, volume 3904 (LNAI), pages 89-105.",
                "Springer, 2006. [14] F. Giunchiglia and L. Serafini.",
                "Multi-language hierarchical logics or: How we can do without modal logics.",
                "Artificial Intelligence, 65(1):29-70, 1994. [15] J. Habermas.",
                "The Theory of Communication Action, Volume One, Reason and the Rationalization of Society.",
                "Beacon Press, 1984. [16] K. Jensen.",
                "Coloured Petri Nets: Basic Concepts, Analysis Methods and Practical Uses (Volume 1).",
                "Springer, 1997. [17] M. Kollingbaum and T. Norman.",
                "Strategies for resolving norm <br>conflict</br> in practical reasoning.",
                "In ECAI Workshop Coordination in Emergent Agent Societies 2004, 2004. [18] J.-L. Koning, G. Francois, and Y. Demazeau.",
                "Formalization and pre-validation for interaction protocols in a multi agent systems.",
                "In ECAI, pages 298-307, 1998. [19] B. Kramer and J. Mylopoulos.",
                "Knowledge Representation.",
                "In S. C. Shapiro, editor, Encyclopedia of Artificial Intelligence, volume 1, pages 743-759.",
                "John Wiley & Sons, 1992. [20] F. Lin, D. H. Norrie, W. Shen, and R. Kremer.",
                "A schema-based approach to specifying conversation policies.",
                "In Issues in Agent Communication, pages 193-204, 2000. [21] N. Minsky.",
                "Law Governed Interaction (LGI): A Distributed Coordination and Control Mechanism (An Introduction, and a Reference Manual).",
                "Technical report, Rutgers University, 2005. [22] T. Murata.",
                "Petri nets: Properties, analysis and applications.",
                "Proceedings of the IEEE, 77(4):541-580, 1989. [23] S. Parsons, C. Sierra, and N. Jennings.",
                "Agents that reason and negotiate by arguing.",
                "Journal of Logic and Computation, 8(3):261-292, 1998. [24] A. Ricci and M. Viroli.",
                "Coordination Artifacts: A Unifying Abstraction for Engineering Environment-Mediated Coordination in MAS.",
                "Informatica, 29:433-443, 2005. [25] G. Sartor.",
                "Normative conflicts in legal reasoning.",
                "Artificial Intelligence and Law, 1(2-3):209-235, June 1992. [26] M. Sergot.",
                "A Computational Theory of Normative Positions.",
                "ACM Trans.",
                "Comput.",
                "Logic, 2(4):581-622, 2001. [27] W. W. Vasconcelos, M. Kollingbaum, and T. Norman.",
                "Resolving <br>conflict</br> and Inconsistency in Norm-Regulated Virtual Organisations.",
                "In Proceedings of AAMAS 07, Hawaii, USA, 2007.",
                "IFAAMAS. [28] G. H. von Wright.",
                "Norm and Action: A Logical Inquiry.",
                "Routledge and Kegan Paul, London, 1963. [29] M. Wooldridge.",
                "An Introduction to Multiagent Systems.",
                "John Wiley & Sons, Chichester, UK, Feb. 2002.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 643"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Sin embargo, garantizar la libertad de \"conflicto\" de un NS en el momento de diseÃ±o es computacionalmente intratable.",
                "Mostramos esto al formalizar la nociÃ³n de \"conflicto\", proporcionando un mapeo de NSS en redes de Petri de color y tomando prestados resultados teÃ³ricos bien conocidos de ese campo.",
                "Dado que se requiere una resoluciÃ³n de \"conflicto\" en lÃ­nea, presentamos un algoritmo manejable para emplear distribuidos.",
                "Sin embargo, garantizar la libertad de \"conflicto\" de un NS en el momento de diseÃ±o es computacionalmente intratable.",
                "Mostramos esto formalizando la nociÃ³n de \"conflicto\", proporcionando un mapeo de NSS en redes de Petri de color (CPN) y tomando prestados resultados teÃ³ricos bien conocidos del campo de los CPN.",
                "Creemos que se requiere detecciÃ³n y resoluciÃ³n en lÃ­nea de \"conflicto\".",
                "Por lo tanto, presentamos un algoritmo manejable para la resoluciÃ³n de \"conflicto\".",
                "",
                "La SecciÃ³n 6 describe la gestiÃ³n computacional de NSS describiendo su promulgaciÃ³n y presentando un algoritmo para la resoluciÃ³n de \"conflicto\".",
                "En el resto del documento, construiremos sobre este escenario para ejemplificar la nociÃ³n de estructura normativa e ilustrar nuestro enfoque de detecciÃ³n y resoluciÃ³n de \"conflicto\" en un entorno distribuido.3.",
                "\"Conflicto\" DefiniciÃ³n Los tÃ©rminos \"conflictos\" deÃ³nticos y la inconsistencia deoÃ­pica se han utilizado indistintamente en la literatura.",
                "Sin embargo, en este documento adoptamos la opiniÃ³n de [7] en la que los autores sugieren que surge una inconsistencia deÃ³ntica cuando una acciÃ³n se permite y prohibida simultÃ¡neamente, ya que no se puede actuar un permiso, no se produce ningÃºn \"conflicto\" real.",
                "Por lo tanto, un \"conflicto\" normativo surge cuando una ilocuciÃ³n se ve y prohibida simultÃ¡neamente.",
                "Por ejemplo, una obligaciÃ³n obl (Inform (A1, R1, A2, R2, P (C, X), T)) y una ProhibiciÃ³n PRH (Inform (A1, R1, A2, R2, P (Y, D), T)) estÃ¡n en \"conflicto\", ya que se unen en Ïƒ = {a1/a1, r1/r1, a2/a2, r2/r2, y/c, x/d, t/t}).",
                "Un \"conflicto\" (deÃ³ntico) surge entre dos posiciones normativas n y n bajo una sustituciÃ³n Ïƒ, denotada como \"conflicto\" (n, n, Ïƒ), si y solo si n = pRH (Â¯i), n = obl (Â¯I) y unificar (Â¯i, Â¯i, Ïƒ).",
                "Es decir, una prohibiciÃ³n y una obligaciÃ³n estÃ¡n en \"conflicto\" si, y solo si sus ilocuciones se unen bajo Ïƒ.",
                "La sustituciÃ³n Ïƒ, llamada aquÃ­ el conjunto de \"conflicto\", unifica los agentes, roles y fÃ³rmulas atÃ³micas.",
                "Formalizando el \"conflicto\"-Freedom En esta secciÃ³n Introducimos algunos conocimientos de antecedentes sobre CPN asumiendo una comprensiÃ³n bÃ¡sica de las redes de Petri ordinarias.",
                "No estamos haciendo uso de la funciÃ³n de guardia G. En el trabajo futuro, esta funciÃ³n se puede utilizar para modelar restricciones cuando extendemos la expresividad de nuestro lenguaje de norma.5.2 Propiedades de las estructuras normativas que han definido el mapeo de las estructuras normativas a las redes de Petri de color, ahora observamos propiedades de CPN que nos ayudan a comprender la complejidad de la detecciÃ³n de \"conflicto\".",
                "Una pregunta que nos gustarÃ­a responder es que, si en un momento dado, una estructura normativa dada es \"conflicto\".",
                "Otra pregunta interesante serÃ­a si se producirÃ¡ un \"conflicto\" a partir de tal instantÃ¡nea del sistema al propagar las posiciones normativas.",
                "Para responder a esta pregunta, primero traducimos la instantÃ¡nea de la estructura normativa a la CPN correspondiente y luego ejecutamos la secuencia de marcas y pasos finitos, verificando el \"conflicto\" de cada marcado a medida que avanzamos.",
                "Dado un IM de marcado, una secuencia de ocurrencia finita Si, Si+1, ..., Sn se llama \"conflicto\", si y solo si mi [si> mi+1...",
                "Mn [sn> mn + 1 y mk es \"conflicto\"-libre para todos k tal que yo â‰¤ k â‰¤ n + 1.",
                "Dada una red n, una marca M es resistente a \"conflicto\" si y solo si todas las marcas en R (n, m) tienen \"conflicto\".",
                "Comprobar el \"conflicto\" -Seedom de una marca se puede hacer en el tiempo polinomial verificando todos los lugares de la CPN para fichas en conflicto.",
                "\"Conflicto\" -Seedom de una secuencia de ocurrencia en la CPN que representa la estructura normativa tambiÃ©n se puede hacer en el tiempo polinomial ya que esta secuencia es determinista dada una instantÃ¡nea.",
                "Si una estructura normativa estÃ¡ diseÃ±ada o no corresponde de forma segura para verificar la resistencia del \"conflicto\" de la marca inicial M0.",
                "Ahora, verificar el \"conflicto\": la resistencia de una marca se convierte en una tarea muy difÃ­cil.",
                "Corresponde al problema de accesibilidad en una CPN: Â¿se puede alcanzar un estado o una marca lograda, que contiene un \"conflicto\"?",
                "Se sabe que este problema de accesibilidad es completado por NP para las redes de Petri ordinarias [22] y dado que las CPN son funcionalmente idÃ©nticas, no podemos esperar verificar la resistencia del \"conflicto\" de una estructura normativa fuera de lÃ­nea en un perÃ­odo de tiempo razonable.",
                "Se ha detectado la gestiÃ³n de estructuras normativas una vez que se ha detectado un \"conflicto\" (como se define en la SecciÃ³n 4), proponemos emplear el unifier para resolver el \"conflicto\".",
                "En nuestro ejemplo, si las variables en PRH (informar (A1, R1, A2, R2, P (Y, D), T)) no obtienen los valores especificados en la sustituciÃ³n Ïƒ, entonces no habrÃ¡ un \"conflicto\".",
                "Sin embargo, en lugar de calcular el conjunto de complementos de una sustituciÃ³n (que puede ser un conjunto infinito), proponemos anotar la prohibiciÃ³n con el unifier en sÃ­ y usarlo para determinar quÃ© las variables de esa prohibiciÃ³n no pueden ser en futuras unificaciones para evitar un\"conflicto\".",
                "Una prohibiciÃ³n puede estar en \"conflicto\" con varias obligaciones en una escena normativa dada s = id, Î´ y necesitamos registrar (y posiblemente evitar) todos estos conflictos.",
                "Por ejemplo, alguna masa puede requerir que sus agentes no actÃºen en presencia de conflictos, es decir, la obligaciÃ³n debe reducirse.6.1 ResoluciÃ³n de \"conflicto\" Proponemos una forma de grano fino de resolver conflictos normativos a travÃ©s de la unificaciÃ³n.",
                "El algoritmo que se muestra en la Figura 4 muestra cÃ³mo mantenemos un conjunto de normas sin \"conflicto\".",
                "Agrega una norma dada n a un estado normativo existente sin conflicto Î´, obteniendo un nuevo estado normativo resultante Î´ que es \"conflicto\", es decir, sus prohibiciones se anotan con un conjunto de conjuntos de \"conflicto\" que indican quÃ© enlaces para variablesDeben evitarse para que no se realicen conflictos.algoritmo addnorm (n, Î´) Comience 1 marca de tiempo (n) 2 caso n de 3 por (Â¯i): Î´: = Î´ âˆª {n} 4 prh (i): si n âˆˆ Î´ s.t.conflicto (n, n, Ïƒ) luego Î´: = Î” 5 mÃ¡s Î´: = Î´ âˆª {n} 6 prh (Â¯i): 7 comienza 8 Ïƒ: = âˆ… 9 para cada n âˆˆ Î´ do 10 if conflicto (n,,, n,,N, Ïƒ) Entonces Ïƒ: = Ïƒ âˆª {Ïƒ} 11 Î´: = Î´ âˆª {n Ïƒ} 12 End 13 obl (Â¯i): 14 Comienza 15 Î”1: = âˆ…;Î”2: = âˆ… 16 para cada (n Ïƒ) âˆˆ Î´ do 17 si n = pRH (i) entonces 18 si conflicto (n, n, Ïƒ) entonces Î”1: = Î”1 âˆª {n Ïƒ} 19 mÃ¡s nil 20 mÃ¡s 21 siconflicto (n, n, Ïƒ) luego 22 comienza 23 Î”1: = Î”1 âˆª {n Ïƒ} 24 Î”2: = Î”2 âˆª {n (Ïƒ âˆª {Ïƒ})} 25 End 26 Î´: = (Î” - Î”1) âˆª Î”2âˆª {n} 27 final 28 final caso 29 retorno Î” final Figura 4: Algoritmo para preservar el libertad de conflicto El algoritmo utiliza un caso de estructura para diferenciar las diferentes posibilidades para una norma dada N. La lÃ­nea 3 aborda el caso cuando la norma dada esUn permiso: N simplemente se agrega a Î´.",
                "Al encontrar uno que entra en conflicto con N, el algoritmo actualiza Ïƒ agregando el \"conflicto\" reciÃ©n encontrado establecido Ïƒ (lÃ­nea 10).",
                "El algoritmo buce a travÃ©s de Î´ (lÃ­neas 16-25) recogiendo las prohibiciones anotadas n Ïƒ que \"conflictos\" con la nueva obligaciÃ³n.",
                "Sin embargo, en el caso de una prohibiciÃ³n sin reducciÃ³n, el algoritmo actualiza su anotaciÃ³n de conjuntos de \"conflicto\" (lÃ­nea 24).",
                "El bucle garantiza que se realiza una bÃºsqueda exhaustiva (lineal) a travÃ©s de un estado normativo, verificando si la nueva obligaciÃ³n estÃ¡ en \"conflicto\" con cualquier prohibiciÃ³n existente, posiblemente actualizando las anotaciones de estas prohibiciones conflictivas.",
                "Sin embargo, las anotaciones pueden estar vacÃ­as: este es el caso cuando tenemos una prohibiciÃ³n terrestre o una prohibiciÃ³n que no unifica/\"conflicto\" con ninguna obligaciÃ³n.",
                "El algoritmo siempre termina: los bucles superan un conjunto finito Î´ y las verificaciones de \"conflicto\" y las operaciones establecidas siempre terminan.",
                "Aplicamos la verificaciÃ³n de \"conflicto\" y obtenemos un unificador, luego eliminamos este unifier de la anotaciÃ³n de Prohibiciones.",
                "Esa similitud sugiere fÃ¡cilmente un mapeo entre los dos, y da motivos a un tratamiento analÃ­tico conveniente de la estructura normativa, en general, y la complejidad de la detecciÃ³n de \"conflicto\", en particular.",
                "Hasta donde sabemos, el uso de esta representaciÃ³n en el apoyo de la detecciÃ³n de \"conflicto\" en MAS regulado no se ha informado en otra parte.",
                "El enfoque de la detecciÃ³n y la resoluciÃ³n de \"conflicto\" es una adaptaciÃ³n y extensiÃ³n del trabajo en grÃ¡ficos de instanciaciÃ³n reportados en [17] y un algoritmo relacionado en [27].",
                "AdemÃ¡s, queremos extender nuestro modelo a lo largo de varias direcciones: (1) para manejar la negaciÃ³n y las limitaciones como parte del lenguaje de la norma, y en particular la nociÃ³n de tiempo;(2) Para acomodar mÃºltiples autoridades de normas jerÃ¡rquicas basadas en roles, en la lÃ­nea de Cholvy y Cuppens [3] y las relaciones de poder como lo sugieren Carabelea et al.[2];(3) Capturar en el algoritmo de resoluciÃ³n de \"conflicto\" diferentes semÃ¡nticas relacionadas con las nociones deoÃ­picas apoyando diferentes axiomaciones (por ejemplo, fuerza relativa de prohibiciÃ³n versus obligaciÃ³n, nociones deÃ³nticas predeterminadas, inconsistencias deÃ³nticas).",
                "En el lado teÃ³rico, tenemos la intenciÃ³n de utilizar tÃ©cnicas de anÃ¡lisis de CPN para caracterizar las clases de CPN (por ejemplo, acÃ­clica, simÃ©trica, etc.) correspondientes a familias de estructuras normativas que son susceptibles a la detecciÃ³n de \"conflicto\" de la lÃ­nea de la lÃ­nea \".",
                "La combinaciÃ³n de estas tÃ©cnicas junto con nuestros mecanismos de resoluciÃ³n de \"conflicto\" en lÃ­nea estÃ¡ destinado a dotar a los diseÃ±adores de MAS con la capacidad de incorporar las normas en sus sistemas de manera principalmente.8.",
                "Un algoritmo para la resoluciÃ³n de \"conflicto\" en actividades compuestas reguladas.",
                "Estrategias para resolver el \"conflicto\" de la norma en el razonamiento prÃ¡ctico.",
                "Resolviendo \"conflicto\" e inconsistencia en organizaciones virtuales reguladas por normas."
            ],
            "translated_text": "",
            "candidates": [
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "Conflicto",
                "conflictos",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "Conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflictos",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto",
                "conflicto"
            ],
            "error": []
        },
        "regulate multi-agent system": {
            "translated_key": "regular el sistema de mÃºltiples agentes",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Distributed Norm Management in Regulated Multi-Agent Systems âˆ— Dorian Gaertner Dept.",
                "of Computing, Imperial College London, London SW7 2AZ, United Kingdom dg00@doc.ic.ac.uk Andres Garcia-Camino, Pablo Noriega, J.-A.",
                "Rodriguez-Aguilar IIIA-CSIC, 08193 Bellaterra, Spain {andres,pablo,jar}@iiia.csic.es Wamberto Vasconcelos Dept. of Computing Science, University of Aberdeen, Aberdeen AB24 3UE, United Kingdom wvasconcelos@acm.org ABSTRACT Norms are widely recognised as a means of coordinating multi-agent systems.",
                "The distributed management of norms is a challenging issue and we observe a lack of truly distributed computational realisations of normative models.",
                "In order to regulate the behaviour of autonomous agents that take part in multiple, related activities, we propose a normative model, the Normative Structure (NS), an artifact that is based on the propagation of normative positions (obligations, prohibitions, permissions), as consequences of agents actions.",
                "Within a NS, conflicts may arise due to the dynamic nature of the MAS and the concurrency of agents actions.",
                "However, ensuring conflict-freedom of a NS at design time is computationally intractable.",
                "We show this by formalising the notion of conflict, providing a mapping of NSs into Coloured Petri Nets and borrowing well-known theoretical results from that field.",
                "Since online conflict resolution is required, we present a tractable algorithm to be employed distributedly.",
                "We then demonstrate that this algorithm is paramount for the distributed enactment of a NS.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Languages and structures General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION A fundamental feature of open, regulated multi-agent systems in which autonomous agents interact, is that participating agents are meant to comply with the conventions of the system.",
                "Norms can be used to model such conventions and hence as a means to regulate the observable behaviour of agents [6, 29].",
                "There are many contributions on the subject of norms from sociologists, philosophers and logicians (e.g., [15, 28]).",
                "However, there are very few proposals for computational realisations of normative models - the way norms can be integrated in the design and execution of MASs.",
                "The few that exist (e.g. [10, 13, 24]), operate in a centralised manner which creates bottlenecks and single points-of-failure.",
                "To our knowledge, no proposal truly supports the distributed enactment of normative environments.",
                "In our paper we approach that problem and propose means to handle conflicting commitments in open, regulated, multiagent systems in a distributed manner.",
                "The type of regulated MAS we envisage consists of multiple, concurrent, related activities where agents interact.",
                "Each agent may concurrently participate in several activities, and change from one activity to another.",
                "An agents actions within an activity may have consequences in the form of normative positions (i.e. obligations, permissions, and prohibitions) [26] that may constrain its future behaviour.",
                "For instance, a buyer agent who runs out of credit may be forbidden to make further offers, or a seller agent is obliged to deliver after closing a deal.",
                "We assume that agents may choose not to fulfill all their obligations and hence may be sanctioned by the MAS.",
                "Notice that, when activities are distributed, normative positions must flow from the activities in which they are generated to those in which they take effect.",
                "For instance, the sellers obligation above must flow (or be propagated) from a negotiation activity to a delivery activity.",
                "Since in an open, regulated MAS one cannot embed normative aspects into the agents design, we adopt the view that the MAS should be supplemented with a separate set of norms that further regulates the behaviour of participating agents.",
                "In order to model the separation of concerns between the coordination level (agents interactions) and the normative level (propagation of normative positions), we propose an artifact called the Normative Structure (NS).",
                "Within a NS conflicts may arise due to the dynamic nature of the MAS and the concurrency of agents actions.",
                "For instance, an agent may be obliged and prohibited to do the 636 978-81-904262-7-5 (RPS) c 2007 IFAAMAS very same action in an activity.",
                "Since the regulation of a MAS entails that participating agents need to be aware of the validity of those actions that take place within it, such conflicts ought to be identified and possibly resolved if a claim of validity is needed for an agent to engage in an action or be sanctioned.",
                "However, ensuring conflict-freedom of a NS at design time is computationally intractable.",
                "We show this by formalising the notion of conflict, providing a mapping of NSs into Coloured Petri Nets (CPNs) and borrowing well-known theoretical results from the field of CPNs.",
                "We believe that online conflict detection and resolution is required.",
                "Hence, we present a tractable algorithm for conflict resolution.",
                "This algorithm is paramount for the distributed enactment of a NS.",
                "The paper is organised as follows.",
                "In Section 2 we detail a scenario to serve as an example throughout the paper.",
                "Next, in Section 3 we formally define the normative structure artifact.",
                "Further on, in Section 4 we formalise the notion of conflict to subsequently analyse the complexity of conflict detection in terms of CPNs in Section 5.",
                "Section 6 describes the computational management of NSs by describing their enactment and presenting an algorithm for conflict resolution.",
                "Finally, we comment on related work, draw conclusions and report on future work in Section 7. 2.",
                "SCENARIO We use a supply-chain scenario in which companies and individuals come together at an online marketplace to conduct business.",
                "The overall transaction procedure may be organised as six distributed activities, represented as nodes in the diagram in Figure 1.",
                "They involve different participants whose behaviour is coordinated through protocols.",
                "In this scenario agents can play one of four roles: marExit Registration Payment Delivery Negotiation Coordination Model Contract Figure 1: Activity Structure of the Scenario ketplace accountant (acc), client, supplier (supp) and warehouse managers (wm).",
                "The arrows connecting the activities represent how agents can move from one activity to another.",
                "After registering at the marketplace, clients and suppliers get together in an activity where they negotiate the terms of their transaction, i.e. prices, amounts of goods to be delivered, deadlines and other details.",
                "In the contract activity, the order becomes established and an invoice is prepared.",
                "The client will then participate in a payment activity, verifying his credit-worthiness and instructing his bank to transfer the correct amount of money.",
                "The supplier in the meantime will arrange for the goods to be delivered (e.g. via a warehouse manager) in the delivery activity.",
                "Finally, agents can leave the marketplace conforming to a predetermined exit protocol.",
                "The marketplace accountant participates in most of the activities as a trusted provider of auditing tools.",
                "In the rest of the paper we shall build on this scenario to exemplify the notion of normative structure and to illustrate our approach to conflict detection and resolution in a distributed setting. 3.",
                "NORMATIVE STRUCTURE In MASs agents interact according to protocols which naturally are distributed.",
                "We advocate that actions in one such protocol may have an effect on the enactment of other protocols.",
                "Certain actions can become prohibited or obligatory, for example.",
                "We take normative positions to be obligations, prohibitions and permissions akin to work described in [26].",
                "The intention of adding or removing a normative position we call normative command.",
                "Occurrences of normative positions in one protocol may also have consequences for other protocols1 .",
                "In order to define our norm language and specify how normative positions are propagated, we have been inspired by multi-context systems [14].",
                "These systems allow the structuring of knowledge into distinct formal theories and the definition of relationships between them.",
                "The relationships are expressed as bridge rules - deducibility of formulae in some contexts leads to the deduction of other formulae in other contexts.",
                "Recently, these systems have been successfully used to define agent architectures [11, 23].",
                "The metaphor translates to our current work as follows: the utterance of illocutions and/or the existence of normative positions in some normative scenes leads to the deduction of normative positions in other normative scenes.",
                "We are concerned with the propagation and distribution of normative positions within a network of distributed, normative scenes as a consequence of agents actions.",
                "We take normative scenes to be sets of normative positions and utterances that are associated with an underlying interaction protocol corresponding to an activity.",
                "In this section, we first present a simple language capturing these aspects and formally introduce the notions of normative scene, normative transition rule and normative structure.",
                "We give the intended semantics of these rules and show how to control a MAS via norms in an example. 3.1 Basic Concepts The building blocks of our language are terms and atomic formulae: Def. 1.",
                "A term, denoted as t, is (i) any constant expressed using lowercase (with or without subscripts), e.g. a, b0, c or (ii) any variable expressed using uppercase (with or without subscripts), e.g.",
                "X, Y, Zb or (iii) any function f(t1, . . . , tn), where f is an n-ary function symbol and t1, .., tn are terms.",
                "Some examples of terms and functions are Credit, price or offer(bible, 30) being respectively a variable, a constant and a function.",
                "We will be making use of identifiers throughout the paper, which are constant terms and also need the following definition: Def. 2.",
                "An atomic formula is any construct p(t1, . . . , tn), where p is an n-ary predicate symbol and t1, . . . , tn are terms.",
                "The set of all atomic formulae is denoted as Î”.",
                "We focus on an expressive class of MASs in which interaction is carried out by means of illocutionary speech acts exchanged among participating agents: Def. 3.",
                "Illocutions I are ground atomic formulae which have the form p(ag, r, ag , r , Î´, t) where p is an element of 1 Here, we abstract from protocols and refer to them generically as activities.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 637 a set of illocutionary particles (e.g. inform, request, offer); ag, ag are agent identifiers; r, r are role identifiers; Î´, an arbitrary ground term, is the content of the message, built from a shared content language; t âˆˆ N is a time stamp.",
                "The intuitive meaning of p(ag, r, ag , r , m, t) is that agent ag playing role r sent message m to agent ag playing role r at time t. An example of an illocution is inform(ag4, supp, ag3, client, offer(wire, 12), 10).",
                "Sometimes it is useful to refer to illocutions that are not fully grounded, that is, those that may contain uninstantiated (free) variables.",
                "In the description of a protocol, for instance, the precise values of the message exchanged can be left unspecified.",
                "During the enactment of the protocol agents will produce the actual values which will give rise to a ground illocution.",
                "We can thus define illocution schemata: Def. 4.",
                "An illocution schema Â¯I is any atomic formula p(ag, r, ag , r , Î´, t) in which some of the terms may either be variables or may contain variables. 3.2 Formal Definition of the Notion of NS We first define normative scenes as follows: Def. 5.",
                "A normative scene is a tuple s = ids, Î”s where ids is a scene identifier and Î”s is the set of atomic formulae Î´ (i.e. utterances and normative positions) that hold in s. We will also refer to Î”s as the state of normative scene s. For instance, a snapshot of the state of the delivery normative scene of our scenario could be represented as: Î”s = 8 < : utt(request(sean, client, kev, wm, receive(wire, 200), 20)), utt(accept(kev, wm, sean, client, receive(wire, 200), 30)), obl(inform(kev, wm, sean, client, delivered(wire, 200), 30)) 9 = ; That is, agent Sean taking up the client role has requested agent Kev (taking up the warehouse manager role wm) to receive 200kg of wire, and agent Kev is obliged to deliver 200kg of wire to Sean since he accepted the request.",
                "Note that the state of a normative scene Î”s evolves over time.",
                "These normative scenes are connected to one another via normative transitions that specify how utterances and normative positions in one scene affect other normative scenes.",
                "As mentioned above, activities are not independent since illocutions uttered in some of them may have an effect on other ones.",
                "Normative transition rules define the conditions under which a normative command is generated.",
                "These conditions are either utterances or normative positions associated with a given protocol (denoted e.g. activity : utterance) which yield a normative command, i.e. the addition or removal of another normative position, possibly related to a different activity.",
                "Our transition rules are thus defined: Def. 6.",
                "A normative transition rule R is of the form: R ::= V C V ::= ids : D | V, V D ::= N | utt(Â¯I) N ::= per(Â¯I) | prh(Â¯I) | obl(Â¯I) C ::= add(ids : N) | remove(ids : N) where Â¯I is an illocution schema, N is a normative position (i.e. permission, prohibition or obligation), ids is an identifier for activity s and C is a normative command.",
                "We endow our language with the usual semantics of rulebased languages [19].",
                "Rules map an existing normative structure to a new normative structure where only the state of the normative scenes change.",
                "In the definitions below we rely on the standard concept of substitution [9].",
                "Def. 7.",
                "A normative transition is a tuple b = idb, rb where idb is an identifier and rb is a normative transition rule.",
                "We are proposing to extend the notion of MAS, regulated by protocols, with an extra layer consisting of normative scenes and normative transitions.",
                "This layer is represented as a bi-partite graph that we term normative structure.",
                "A normative structure relates normative scenes and normative transitions specifying which normative positions are to be generated or removed in which normative scenes.",
                "Def. 8.",
                "A normative structure is a labelled bi-partite graph NS = Nodes, Edges, Lin , Lout .",
                "Nodes is a set SâˆªB where S is a set of normative scenes and B is a set of normative transitions.",
                "Edges is a set Ain âˆª Aout where Ain âŠ† S Ã— B is a set of input arcs labelled with an atomic formula using the labelling function Lin : Ain â†’ D; and Aout âŠ† B Ã— S is a set of output arcs labelled with a normative position using the labelling function Lout : Aout â†’ N. The following must hold: 1.",
                "Each atomic formula appearing in the LHS of a rule rb must be of the form (ids : D) where s âˆˆ S and D âˆˆ Î” and âˆƒain âˆˆ Ain such that ain = (s, b) and Lin (ain ) = D. 2.",
                "The atomic formula appearing in the RHS of a rule rb must be of the form add(ids : N) or remove(ids : N) where s âˆˆ S and âˆƒaout âˆˆ Aout such that aout = (b, s) and Lout (aout ) = N. 3. âˆ€a âˆˆ Ain such that a = (s, b) and b = idb, rb and Lin (a) = D then (ids:D) must occur in the LHS of rb. 4. âˆ€a âˆˆ Aout such that a = (b, s) and b = idb, rb and Lout (a) = N then add(ids : N) or remove(ids : N) must occur in the RHS of rb.",
                "The first two points ensure that every atomic formulae on the LHS of a normative transition rule labels an arc entering the appropriate normative transition in the normative structure, and that the atomic formula on the RHS labels the corresponding outgoing arc.",
                "Points three and four ensure that labels from all incoming arcs are used in the LHS of the normative transition rule that these arcs enter into, and that the labels from all outgoing arcs are used in the RHS of the normative transition rule that these arcs leave. 3.3 Intended Semantics The formal semantics will be defined via a mapping to Coloured Petri Nets in Section 5.1.",
                "Here we start defining the intended semantics of normative transition rules by describing how a rule changes a normative scene of an existing normative structure yielding a new normative structure.",
                "Each rule is triggered once for each substitution that unifies the left-hand side V of the rule with the state of the corresponding normative scenes.",
                "An atomic formula (i.e. an utterance or a normative position) holds iff it is unifiable with an utterance or normative position that belongs to the state of the corresponding normative scene.",
                "Every time a rule is triggered, the normative command specified on the right-hand side of that rule is carried out, intending to add or remove a normative position from the state of the corresponding normative scene.",
                "However, addition is not unconditional as conflicts may arise.",
                "This topic will be treated in Sections 4 and 6.1. 638 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.4 Example In our running example we have the following exemplary normative transition rule: â€ž payment : obl(inform(X, client, Y, acc, pay(Z, P, Q), T )), payment : utt(inform(X, client, Y, acc, pay(Z, P, Q), T )) Â« delivery : add(obl(inform(Y, wm, X, client, delivered(Z, Q), T ))) That is, during the payment activity, an obligation on client X to inform accountant Y about the payment P of item Z at time T and the corresponding utterance which fulfills this obligation allows the flow of a norm to the delivery activity.",
                "The norm is an obligation on agent Y (this time taking up the role of the warehouse manager wm) to send a message to client X that item Z has been delivered.",
                "We show in Figure 2 a diagrammatic representation of how activities and a normative structure relate: Payment Delivery Contract Normative Level Exit Registration Payment Delivery Negotiation Coordination Level Contract nt Figure 2: Activities and Normative Structure As illocutions are uttered during activities, normative positions arise.",
                "Utterances and normative positions are combined in transition rules, causing the flow of normative positions between normative scenes.",
                "The connection between the two levels is described in Section 6.2. 4.",
                "CONFLICT DEFINITION The terms deontic conflict and deontic inconsistency have been used interchangeably in the literature.",
                "However, in this paper we adopt the view of [7] in which the authors suggest that a deontic inconsistency arises when an action is simultaneously permitted and prohibited - since a permission may not be acted upon, no real conflict occurs.",
                "The situations when an action is simultaneously obliged and prohibited are, however, deontic conflicts, as both obligations and prohibitions influence behaviours in a conflicting fashion.",
                "The content of normative positions in this paper are illocutions.",
                "Therefore, a normative conflict arises when an illocution is simultaneously obliged and prohibited.",
                "We propose to use the standard notion of unification [9] to detect when a prohibition and a permission overlap.",
                "For instance, an obligation obl(inform(A1, R1, A2, R2, p(c, X), T)) and a prohibition prh(inform(a1, r1, a2, r2, p(Y, d), T )) are in conflict as they unify under Ïƒ = {A1/a1, R1/r1, A2/a2, R2/r2, Y/c, X/d, T/T }).",
                "We formally capture this notion: Def. 9.",
                "A (deontic) conflict arises between two normative positions N and N under a substitution Ïƒ, denoted as conflict(N, N , Ïƒ), if and only if N = prh(Â¯I), N = obl(Â¯I ) and unify(Â¯I,Â¯I , Ïƒ).",
                "That is, a prohibition and an obligation are in conflict if, and only if, their illocutions unify under Ïƒ.",
                "The substitution Ïƒ, called here the conflict set, unifies the agents, roles and atomic formulae.",
                "We assume that unify is a suitable implementation of a unification algorithm which i) always terminates (possibly failing, if a unifier cannot be found); ii) is correct; and iii) has linear computational complexity.",
                "Inconsistencies caused by the same illocution being simultaneously permitted and prohibited can be formalised similarly.",
                "In this paper we focus on prohibition/obligation conflicts, but the computational machinery introduced in Section 6.1 can equally be used to detect prohibition/permission inconsistencies, if we substitute modality obl for per. 5.",
                "FORMALISING CONFLICT-FREEDOM In this section we introduce some background knowledge on CPNs assuming a basic understanding of ordinary Petri Nets.",
                "For technical details we refer the reader to [16].",
                "We then map NSs to CPNs and analyse their properties.",
                "CPNs combine the strength of Petri nets with the strength of functional programming languages.",
                "On the one hand, Petri nets provide the primitives for the description of the synchronisation of concurrent processes.",
                "As noticed in [16], CPNs have a semantics which builds upon true concurrency, instead of interleaving.",
                "In our opinion, a true-concurrency semantics is easier to work with because it is the way we envisage the connection between the coordination level and the normative level of a multi-agent system to be.",
                "On the other hand, the functional programming languages used by CPNs provide the primitives for the definition of data types and the manipulation of their data values.",
                "Thus, we can readily translate expressions of a normative structure.",
                "Last but not least, CPNs have a well-defined semantics which unambiguously defines the behaviour of each CPN.",
                "Furthermore, CPNs have a large number of formal analysis methods and tools by which properties of CPNs can be proved.",
                "Summing up, CPNs provide us with all the necessary features to formally reason about normative structures given that an adequate mapping is provided.",
                "In accordance with Petri nets, the states of a CPN are represented by means of places.",
                "But unlike Petri Nets, each place has an associated data type determining the kind of data which the place may contain.",
                "A state of a CPN is called a marking.",
                "It consists of a number of tokens positioned on the individual places.",
                "Each token carries a data value which has the type of the corresponding place.",
                "In general, a place may contain two or more tokens with the same data value.",
                "Thus, a marking of a CPN is a function which maps each place into a multi-set2 of tokens of the correct type.",
                "One often refers to the token values as token colours and one also refers to the data types as colour sets.",
                "The types of a CPN can be arbitrarily complex.",
                "Actions in a CPN are represented by means of transitions.",
                "An incoming arc into a transition from a place indicates that the transition may remove tokens from the corresponding place while an outgoing arc indicates that the transition may add tokens.",
                "The exact number of tokens and their data values are determined by the arc expressions, which are encoded using the programming language chosen for the CPN.",
                "A transition is enabled in a CPN if and only if all the 2 A multi-set (or bag) is an extension to the notion of set, allowing the possibility of multiple appearances of the same element.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 639 variables in the expressions of its incoming arcs are bound to some value(s) (each one of these bindings is referred to as a binding element).",
                "If so, the transition may occur by removing tokens from its input places and adding tokens to its output places.",
                "In addition to the arc expressions, it is possible to attach a boolean guard expression (with variables) to each transition.",
                "Putting all the elements above together we obtain a formal definition of CPN that shall be employed further ahead for mapping purposes.",
                "Def. 10.",
                "A CPN is a tuple Î£, P, T, A, N, C, G, E, I where: (i) Î£ is a finite set of non-empty types, also called colour sets; (ii) P is a finite set of places; (iii) T is a finite set of transitions; (iv) A is a finite set of arcs; (v) N is a node function defined from A into P Ã— T âˆª T Ã— P; (vi) C is a colour function from P into Î£; (vii) G is a guard function from T into expressions; (viii) E is an arc expression function from A into expressions; (ix) I is an initialisation function from P into closed expressions; Notice that the informal explanation of the enabling and occurrence rules given above provides the foundations to understand the behaviour of a CPN.",
                "In accordance with ordinary Petri nets, the concurrent behaviour of a CPN is based on the notion of step.",
                "Formally, a step is a non-empty and finite multi-set over the set of all binding elements.",
                "Let step S be enabled in a marking M. Then, S may occur, changing the marking M to M .",
                "Moreover, we say that marking M is directly reachable from marking M by the occurrence of step S, and we denote it by M[S > M .",
                "A finite occurrence sequence is a finite sequence of steps and markings: M1[S1 > M2 . . .",
                "Mn[Sn > Mn+1 such that n âˆˆ N and Mi[Si > Mi+1 âˆ€i âˆˆ {1, . . . , n}.",
                "The set of all possible markings reachable for a net Net from a marking M is called its reachability set, and is denoted as R(Net, M). 5.1 Mapping to Coloured Petri Nets Our normative structure is a labelled bi-partite graph.",
                "The same is true for a Coloured Petri Net.",
                "We are presenting a mapping f from one to the other, in order to provide semantics for the normative structure and prove properties about it by using well-known theoretical results from work on CPNs.",
                "The mapping f makes use of correspondences between normative scenes and CPN places, normative transitions and CPN transitions and finally, between arc labels and CPN arc expressions.",
                "S â†’ P B â†’ T Lin âˆª Lout â†’ E The set of types is the singleton set containing the colour NP (i.e.",
                "Î£ = {NP}).",
                "This complex type is structured as follows (we use CPN-ML [4] syntax): color NPT = with Obl | Per | Prh | NoMod color IP = with inform | declare | offer color UTT = record illp : IP ag1, role1, ag2, role2 : string content: string time : int color NP = record mode : NPT illoc : UTT Modelling illocutions as norms without modality (NoMod) is a formal trick we use to ensure that sub-nets can be combined as explained below.",
                "Arcs are mapped almost directly.",
                "A is a finite set of arcs and N is a node function, such that âˆ€a âˆˆ A âˆƒa âˆˆ Ain âˆªAout .",
                "N(a) = a .",
                "The initialisation function I is defined as I(p) = Î”s (âˆ€s âˆˆ S where p is obtained from s using the mapping; remember that s = ids, Î”s ).",
                "Finally, the colour function C assigns the colour NP to every place: C(p) = NP (âˆ€p âˆˆ P).",
                "We are not making use of the guard function G. In future work, this function can be used to model constraints when we extend the expressiveness of our norm language. 5.2 Properties of Normative Structures Having defined the mapping from normative structures to Coloured Petri Nets, we now look at properties of CPNs that help us understand the complexity of conflict detection.",
                "One question we would like to answer is, whether at a given point in time, a given normative structure is conflict-free.",
                "Such a snapshot of a normative structure corresponds to a marking in the mapped CPN.",
                "Def. 11.",
                "Given a marking Mi, this marking is conflictfree if Â¬âˆƒp âˆˆ P. âˆƒnp1, np2 âˆˆ Mi(p) such that np1.mode = Obl and np2.mode = Prh and np1.illoc and np2.illoc unify under a valid substitution.",
                "Another interesting question would be, whether a conflict will occur from such a snapshot of the system by propagating the normative positions.",
                "In order to answer this question, we first translate the snapshot of the normative structure to the corresponding CPN and then execute the finite occurence sequence of markings and steps, verifying the conflict-freedom of each marking as we go along.",
                "Def. 12.",
                "Given a marking Mi, a finite occurrence sequence Si, Si+1, ..., Sn is called conflict-free, if and only if Mi[Si > Mi+1 . . .",
                "Mn[Sn > Mn+1 and Mk is conflict-free for all k such that i â‰¤ k â‰¤ n + 1.",
                "However, the main question we would like to investigate, is whether or not a given normative structure is conflictresistant, that is, whether or not the agents enacting the MAS are able to bring about conflicts through their actions.",
                "As soon as one includes the possibility of actions (or utterances) from autonomous agents, one looses determinism.",
                "Having mapped the normative structure to a CPN, we now add CPN models of the agents interactions.",
                "Each form of agent interaction (i.e. each activity) can be modelled using CPNs along the lines of Cost et al. [5].",
                "These nondeterministic CPNs feed tokens into the CPN that models the normative structure.",
                "This leads to the introduction of non-determinism into the combined CPN.",
                "The lower half of figure 3 shows part of a CPN model of an agent protocol where the arc denoted with 1 represents some utterance of an illocution by an agent.",
                "The target transition of this arc, not only moves a token on to the next state of this CPN, but also places a token in the place corresponding to the appropriate normative scene in the CPN model of the normative structure (via arc 2).",
                "Transition 3 finally could propagate that token in form of an obligation, for example.",
                "Thus, from a given marking, many different occurrence sequences are possible depending on the agents actions.",
                "We make use of the reachability set R to define a situation in which agents cannot cause conflicts. 640 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) Figure 3: Constructing the combined CPN Def. 13.",
                "Given a net N, a marking M is conflict-resistant if and only if all markings in R(N,M) are conflict-free.",
                "Checking conflict-freedom of a marking can be done in polynomial time by checking all places of the CPN for conflicting tokens.",
                "Conflict-freedom of an occurrence sequence in the CPN that represents the normative structure can also be done in polynomial time since this sequence is deterministic given a snapshot.",
                "Whether or not a normative structure is designed safely corresponds to checking the conflict-resistance of the initial marking M0.",
                "Now, verifying conflict-resistance of a marking becomes a very difficult task.",
                "It corresponds to the reachability problem in a CPN: can a state be reached or a marking achieved, that contains a conflict?.",
                "This reachability problem is known to be NP-complete for ordinary Petri Nets [22] and since CPNs are functionally identical, we cannot hope to verify conflict-resistance of a normative structure off-line in a reasonable amount of time.",
                "Therefore, distributed, run-time mechanisms are needed to ensure that a normative structure maintains consistency.",
                "We present one such mechanism in the following section. 6.",
                "MANAGING NORMATIVE STRUCTURES Once a conflict (as defined in Section 4) has been detected, we propose to employ the unifier to resolve the conflict.",
                "In our example, if the variables in prh(inform(a1, r1, a2, r2, p(Y, d), T )) do not get the values specified in substitution Ïƒ then there will not be a conflict.",
                "However, rather than computing the complement set of a substitution (which can be an infinite set) we propose to annotate the prohibition with the unifier itself and use it to determine what the variables of that prohibition cannot be in future unifications in order to avoid a conflict.",
                "We therefore denote annotated prohibitions as prh(Â¯I) Î£, where Î£ = {Ïƒ1, . . . , Ïƒn}, is a set of unifiers.",
                "Annotated norms3 are interpreted as deontic constructs with curtailed influences, that is, their effect (on agents, roles and illocutions) has been limited by the set Î£ of unifiers.",
                "A prohibition may be in conflict with various obligations in a given normative scene s = id, Î” and we need to record (and possibly avoid) all these conflicts.",
                "We define below an algorithm which ensures that a normative position will be added to a normative scene in such a way that it will not cause any conflicts. 3 Although we propose to curtail prohibitions, the same machinery can be used to define the curtailment of obligations instead.",
                "These different policies are dependent on the intended deontic semantics and requirements of the systems addressed.",
                "For instance, some MASs may require that their agents should not act in the presence of conflicts, that is, the obligation should be curtailed. 6.1 Conflict Resolution We propose a fine-grained way of resolving normative conflicts via unification.",
                "We detect the overlapping of the influences of norms , i.e. how they affect the behaviour of the concerned agents, and we curtail the influence of the normative position, by appropriately using the annotations when checking if the norm applies to illocutions.",
                "The algorithm shown in Figure 4 depicts how we maintain a conflict-free set of norms.",
                "It adds a given norm N to an existing, conflictfree normative state Î”, obtaining a resulting new normative state Î” which is conflict-free, that is, its prohibitions are annotated with a set of conflict sets indicating which bindings for variables have to be avoided for conflicts not to take place. algorithm addNorm(N, Î”) begin 1 timestamp(N) 2 case N of 3 per(Â¯I): Î” := Î” âˆª {N} 4 prh(I): if N âˆˆ Î” s.t. conflict(N, N , Ïƒ) then Î” := Î” 5 else Î” := Î” âˆª {N} 6 prh(Â¯I): 7 begin 8 Î£ := âˆ… 9 for each N âˆˆ Î” do 10 if conflict(N, N , Ïƒ) then Î£ := Î£ âˆª {Ïƒ} 11 Î” := Î” âˆª {N Î£} 12 end 13 obl(Â¯I): 14 begin 15 Î”1 := âˆ…; Î”2 := âˆ… 16 for each (N Î£) âˆˆ Î” do 17 if N = prh(I) then 18 if conflict(N , N, Ïƒ) then Î”1 := Î”1 âˆª {N Î£} 19 else nil 20 else 21 if conflict(N , N, Ïƒ) then 22 begin 23 Î”1 := Î”1 âˆª {N Î£} 24 Î”2 := Î”2 âˆª {N (Î£ âˆª {Ïƒ})} 25 end 26 Î” := (Î” âˆ’ Î”1) âˆª Î”2 âˆª {N} 27 end 28 end case 29 return Î” end Figure 4: Algorithm to Preserve Conflict-Freedom The algorithm uses a case of structure to differentiate the different possibilities for a given norm N. Line 3 addresses the case when the given norm is a permission: N is simply added to Î”.",
                "Lines 4-5 address the case when we attempt to add a ground prohibition to a normative state: if it conflicts with any obligation, then it is discarded; otherwise it is added to the normative state.",
                "Lines 6-12 describe the situation when the normative position to be added is a nonground prohibition.",
                "In this case, the algorithm initialises Î£ to an empty set and loops (line 9-10) through the norms N in the old normative state Î”.",
                "Upon finding one that conflicts with N, the algorithm updates Î£ by adding the newly found conflict set Ïƒ to it (line 10).",
                "By looping through Î”, we are able to check any conflicts between the new prohibition and the existing obligations, adequately building the annotation Î£ to be used when adding N to Î” in line 11.",
                "Lines 13-27 describe how a new obligation is accommodated to an existing normative state.",
                "We make use of two initially empty, temporary sets, Î”1, Î”2.",
                "The algorithm loops through Î” (lines 16-25) picking up those annotated prohibitions N Î£ which conflict with the new obligation.",
                "There are, however, two cases to deal with: the one when a ground The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 641 prohibition is found (line 17), and its exception, covering non-ground prohibitions (line 20).",
                "In both cases, the old prohibition is stored in Î”1 (lines 18 and 23) to be later removed from Î” (line 26).",
                "However, in the case of a nonground prohibition, the algorithm updates its annotation of conflict sets (line 24).",
                "The loop guarantees that an exhaustive (linear) search through a normative state takes place, checking if the new obligation is in conflict with any existing prohibitions, possibly updating the annotations of these conflicting prohibitions.",
                "In line 26 the algorithm builds the new updated Î” by removing the old prohibitions stored in Î”1 and adding the updated prohibitions stored in Î”2 (if any), as well as the new obligation N. Our proposed algorithm is correct in that, for a given normative position N and a normative state Î”, it provides a new normative state Î” in which all prohibitions have annotations recording how they unify with existing obligations.",
                "The annotations can be empty, though: this is the case when we have a ground prohibition or a prohibition which does not unify/conflict with any obligation.",
                "Permissions do not affect our algorithm and they are appropriately dealt with (line 3).",
                "Any attempt to insert a ground prohibition which conflicts, yields the same normative state (line 4).",
                "When a new obligation is being added then the algorithm guarantees that all prohibitions are considered (lines 14-27), leading to the removal of conflicting ground prohibitions or the update of annotations of non-ground prohibitions.",
                "The algorithm always terminates: the loops are over a finite set Î” and the conflict checks and set operations always terminate.",
                "The complexity of the algorithm is linear: the set Î” is only examined once for each possible case of norm to be added.",
                "When managing normative states we may also need to remove normative positions.",
                "This is straightforward: permissions can be removed without any problems; annotated prohibitions can also be removed without further considerations; obligations, however, require some housekeeping.",
                "When an obligation is to be removed, we must check it against all annotated prohibitions in order to update their annotations.",
                "We apply the conflict check and obtain a unifier, then remove this unifier from the prohibitions annotation.",
                "We invoke the removal algorithm as removeNorm(N, Î”): it returns a new normative state Î” in which N has been removed, with possible alterations to other normative positions as explained. 6.2 Enactment of a Normative Structure The enactment of a normative structure amounts to the parallel, distributed execution of normative scenes and normative transitions.",
                "For illustrative purposes, hereafter we shall describe the interplay between the payment and delivery normative scenes and the normative transition nt linking them in the upper half of figure 2.",
                "With this aim, consider for instance that obl(inform(jules, client, rod, acc, pay(copper, 400, 350), T) âˆˆ Î”payment and that Î”delivery holds prh(inform(rod,wm, jules, client, delivered(Z, Q), T)).",
                "Such states indicate that client Jules is obliged to pay Â£400 for 350kg of copper to accountant Rod according to the payment normative scene, whereas Rod, taking up the role of warehouse manager this time, is prohibited to deliver anything to client Jules according to the delivery normative scene.",
                "For each normative scene, the enactment process goes as follows.",
                "Firstly, it processes its incoming message queue that contains three types of messages: utterances from the activity it is linked to; and normative commands either to add or remove normative positions.",
                "For instance, in our example, the payment normative scene collects the illocution I = utt((inform(jules, client, rod, acc, pay(copper, 400, 350), 35)) standing for client Jules pending payment for copper (via arrow A in figure 2).",
                "Utterances are timestamped and subsequently added to the normative state.",
                "We would have Î”payment = Î”payment âˆª {I}, in our example.",
                "Upon receiving normative commands to either add or remove a normative position, the normative scene invokes the corresponding addition or removal algorithm described in Section 6.1.",
                "Secondly, the normative scene acknowledges its state change by sending a trigger message to every outgoing normative transition it is connected to.",
                "In our example, the payment normative scene would be signalling its state change to normative transition nt.",
                "For normative transitions, the process works differently.",
                "Because each normative transition controls the operation of a single rule, upon receiving a trigger message, it polls every incoming normative scene for substitutions for the relevant illocution schemata on the LHS of its rule.",
                "In our example, nt (being responsible for the rule described in Section 3.4), would poll the payment normative scene (via arrow B) for substitutions.",
                "Upon receiving replies from them (in the form of sets of substitutions together with time-stamps), it has to unify substitutions from each of these normative scenes.",
                "For each unification it finds, the rule is fired, and hence the corresponding normative command is sent along to the output normative scene.",
                "The normative transition then keeps track of the firing message it sent on and of the time-stamps of the normative positions that triggered the firing.",
                "This is done to ensure that the very same normative positions in the LHS of a rule only trigger its firing once.",
                "In our example, nt would be receiving Ïƒ = {X/jules, Y/rod, Z/copper, Q/350} from the payment normative scene.",
                "Since the substitions in Ïƒ unify with nts rule, the rule is fired, and the normative command add(delivery : obl(rod, wm, jules, client, delivered(copper, 350), T)) is sent along to the delivery normative scene to oblige Rod to deliver to client Jules 350kg of copper.",
                "After that, the delivery normative scene would invoke the addNorm algorithm from figure 4 with Î”delivery and N = obl(rod, wm, jules, client, delivered(copper, 350)) as arguments. 7.",
                "RELATED WORK AND CONCLUSIONS Our contributions in this paper are three-fold.",
                "Firstly, we introduce an approach for the management of and reasoning about norms in a distributed manner.",
                "To our knowledge, there is little work published in this direction.",
                "In [8, 21], two languages are presented for the distributed enforcement of norms in MAS.",
                "However, in both works, each agent has a local message interface that forwards legal messages according to a set of norms.",
                "Since these interfaces are local to each agent, norms can only be expressed in terms of actions of that agent.",
                "This is a serious disadvantage, e.g. when one needs to activate an obligation to one agent due to a certain message of another one.",
                "The second contribution is the proposal of a normative structure.",
                "The notion is fruitful because it allows the separation of normative and procedural concerns.",
                "The normative structure we propose makes evident the similarity between the propagation of normative positions and the propagation 642 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) of tokens in Coloured Petri Nets.",
                "That similarity readily suggests a mapping between the two, and gives grounds to a convenient analytical treatment of the normative structure, in general, and the complexity of conflict detection, in particular.",
                "The idea of modelling interactions (in the form of conversations) via Petri Nets has been investigated in [18], where the interaction medium and individual agents are modelled as CPN sub-nets that are subsequently combined for analysis.",
                "In [5], conversations are first designed and analysed at the level of CPNs and thereafter translated into protocols.",
                "Lin et al. [20] map conversation schemata to CPNs.",
                "To our knowledge, the use of this representation in the support of conflict detection in regulated MAS has not been reported elsewhere.",
                "Finally, we present a distributed mechanism to resolve normative conflicts.",
                "Sartor [25] treats normative conflicts from the point of view of legal theory and suggests a way to order the norms involved.",
                "His idea is implemented in [12] but requires a central resource for norm maintenance.",
                "The approach to conflict detection and resolution is an adaptation and extension of the work on instantiation graphs reported in [17] and a related algorithm in [27].",
                "The algorithm presented in the current paper can be used to manage normative states distributedly: normative scenes that happen in parallel have an associated normative state Î” to which the algorithm is independently applied each time a new norm is to be introduced.",
                "These three contributions we present in this paper open many possibilities for future work.",
                "We should mention first, that as a broad strategy we are working on a generalisation of the notion of normative structure to make it operate with different coordination models, with richer deontic content and on top of different computational realisations of regulated MAS.",
                "As a first step in this direction we are taking advantage of the de-coupling between interaction protocols and declarative normative guidance that the normative structure makes available, to provide a normative layer for electronic institutions (as defined in [1]).",
                "We expect such coupling will endow electronic institutions with a more flexible -and more expressive- normative environment.",
                "Furthermore, we want to extend our model along several directions: (1) to handle negation and constraints as part of the norm language, and in particular the notion of time; (2) to accommodate multiple, hierarchical norm authorities based on roles, along the lines of Cholvy and Cuppens [3] and power relationships as suggested by Carabelea et al. [2]; (3) to capture in the conflict resolution algorithm different semantics relating the deontic notions by supporting different axiomations (e.g., relative strength of prohibition versus obligation, default deontic notions, deontic inconsistencies).",
                "On the theoretical side, we intend to use analysis techniques of CPNs in order to characterise classes of CPNs (e.g., acyclic, symmetric, etc.) corresponding to families of Normative Structures that are susceptible to tractable offline conflict detection.",
                "The combination of these techniques along with our online conflict resolution mechanisms is intended to endow MAS designers with the ability to incorporate norms into their systems in a principled way. 8.",
                "REFERENCES [1] J. L. Arcos, M. Esteva, P. Noriega, J.",
                "A. RodrÂ´Ä±guez, and C. Sierra.",
                "Engineering open environments with electronic institutions.",
                "Journal on Engineering Applications of Artificial Intelligence, 18(2):191-204, 2005. [2] C. Carabelea, O. Boissier, and C. Castelfranchi.",
                "Using social power to enable agents to reason about being part of a group.",
                "In 5th Internat.",
                "Workshop, ESAW 2004, pages 166-177, 2004. [3] L. Cholvy and F. Cuppens.",
                "Solving normative conflicts by merging roles.",
                "In Fifth International Conference on Artificial Intelligence and Law, Washington, USA, 1995. [4] S. Christensen and T. B. Haagh.",
                "Design CPN - overview of CPN ML syntax.",
                "Technical report, University of Aarhus, 1996. [5] R. S. Cost, Y. Chen, T. W. Finin, Y. Labrou, and Y. Peng.",
                "Using colored petri nets for conversation modeling.",
                "In Issues in Agent Communication, pages 178-192, London, UK, 2000. [6] F. Dignum.",
                "Autonomous Agents with Norms.",
                "Artificial Intelligence and Law, 7(1):69-79, 1999. [7] A. Elhag, J. Breuker, and P. Brouwer.",
                "On the Formal Analysis of Normative Conflicts.",
                "Information & Comms.",
                "Techn.",
                "Law, 9(3):207-217, Oct. 2000. [8] M. Esteva, W. Vasconcelos, C. Sierra, and J.",
                "A. RodrÂ´Ä±guez-Aguilar.",
                "Norm consistency in electronic institutions. volume 3171 (LNAI), pages 494-505.",
                "Springer-Verlag, 2004. [9] M. Fitting.",
                "First-Order Logic and Automated Theorem Proving.",
                "Springer-Verlag, New York, U.S.A., 1990. [10] N. Fornara, F. Vigan`o, and M. Colombetti.",
                "An Event Driven Approach to Norms in Artificial Institutions.",
                "In AAMAS05 Workshop: Agents, Norms and Institutions for Regulated Multiagent Systems (ANI@REM), Utrecht, 2005. [11] D. Gaertner, P. Noriega, and C. Sierra.",
                "Extending the BDI architecture with commitments.",
                "In Proceedings of the 9th International Conference of the Catalan Association of Artificial Intelligence, 2006. [12] A. GarcÂ´Ä±a-Camino, P. Noriega, and J.-A.",
                "RodrÂ´Ä±guez-Aguilar.",
                "An Algorithm for Conflict Resolution in Regulated Compound Activities.",
                "In 7th Int.Workshop - ESAW 06, 2006. [13] A. GarcÂ´Ä±a-Camino, J.-A.",
                "RodrÂ´Ä±guez-Aguilar, C. Sierra, and W. Vasconcelos.",
                "A Distributed Architecture for Norm-Aware Agent Societies.",
                "In DALT III, volume 3904 (LNAI), pages 89-105.",
                "Springer, 2006. [14] F. Giunchiglia and L. Serafini.",
                "Multi-language hierarchical logics or: How we can do without modal logics.",
                "Artificial Intelligence, 65(1):29-70, 1994. [15] J. Habermas.",
                "The Theory of Communication Action, Volume One, Reason and the Rationalization of Society.",
                "Beacon Press, 1984. [16] K. Jensen.",
                "Coloured Petri Nets: Basic Concepts, Analysis Methods and Practical Uses (Volume 1).",
                "Springer, 1997. [17] M. Kollingbaum and T. Norman.",
                "Strategies for resolving norm conflict in practical reasoning.",
                "In ECAI Workshop Coordination in Emergent Agent Societies 2004, 2004. [18] J.-L. Koning, G. Francois, and Y. Demazeau.",
                "Formalization and pre-validation for interaction protocols in a multi agent systems.",
                "In ECAI, pages 298-307, 1998. [19] B. Kramer and J. Mylopoulos.",
                "Knowledge Representation.",
                "In S. C. Shapiro, editor, Encyclopedia of Artificial Intelligence, volume 1, pages 743-759.",
                "John Wiley & Sons, 1992. [20] F. Lin, D. H. Norrie, W. Shen, and R. Kremer.",
                "A schema-based approach to specifying conversation policies.",
                "In Issues in Agent Communication, pages 193-204, 2000. [21] N. Minsky.",
                "Law Governed Interaction (LGI): A Distributed Coordination and Control Mechanism (An Introduction, and a Reference Manual).",
                "Technical report, Rutgers University, 2005. [22] T. Murata.",
                "Petri nets: Properties, analysis and applications.",
                "Proceedings of the IEEE, 77(4):541-580, 1989. [23] S. Parsons, C. Sierra, and N. Jennings.",
                "Agents that reason and negotiate by arguing.",
                "Journal of Logic and Computation, 8(3):261-292, 1998. [24] A. Ricci and M. Viroli.",
                "Coordination Artifacts: A Unifying Abstraction for Engineering Environment-Mediated Coordination in MAS.",
                "Informatica, 29:433-443, 2005. [25] G. Sartor.",
                "Normative conflicts in legal reasoning.",
                "Artificial Intelligence and Law, 1(2-3):209-235, June 1992. [26] M. Sergot.",
                "A Computational Theory of Normative Positions.",
                "ACM Trans.",
                "Comput.",
                "Logic, 2(4):581-622, 2001. [27] W. W. Vasconcelos, M. Kollingbaum, and T. Norman.",
                "Resolving Conflict and Inconsistency in Norm-Regulated Virtual Organisations.",
                "In Proceedings of AAMAS 07, Hawaii, USA, 2007.",
                "IFAAMAS. [28] G. H. von Wright.",
                "Norm and Action: A Logical Inquiry.",
                "Routledge and Kegan Paul, London, 1963. [29] M. Wooldridge.",
                "An Introduction to Multiagent Systems.",
                "John Wiley & Sons, Chichester, UK, Feb. 2002.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 643"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "norm conflict": {
            "translated_key": "conflicto de normas",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Distributed Norm Management in Regulated Multi-Agent Systems âˆ— Dorian Gaertner Dept.",
                "of Computing, Imperial College London, London SW7 2AZ, United Kingdom dg00@doc.ic.ac.uk Andres Garcia-Camino, Pablo Noriega, J.-A.",
                "Rodriguez-Aguilar IIIA-CSIC, 08193 Bellaterra, Spain {andres,pablo,jar}@iiia.csic.es Wamberto Vasconcelos Dept. of Computing Science, University of Aberdeen, Aberdeen AB24 3UE, United Kingdom wvasconcelos@acm.org ABSTRACT Norms are widely recognised as a means of coordinating multi-agent systems.",
                "The distributed management of norms is a challenging issue and we observe a lack of truly distributed computational realisations of normative models.",
                "In order to regulate the behaviour of autonomous agents that take part in multiple, related activities, we propose a normative model, the Normative Structure (NS), an artifact that is based on the propagation of normative positions (obligations, prohibitions, permissions), as consequences of agents actions.",
                "Within a NS, conflicts may arise due to the dynamic nature of the MAS and the concurrency of agents actions.",
                "However, ensuring conflict-freedom of a NS at design time is computationally intractable.",
                "We show this by formalising the notion of conflict, providing a mapping of NSs into Coloured Petri Nets and borrowing well-known theoretical results from that field.",
                "Since online conflict resolution is required, we present a tractable algorithm to be employed distributedly.",
                "We then demonstrate that this algorithm is paramount for the distributed enactment of a NS.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Languages and structures General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION A fundamental feature of open, regulated multi-agent systems in which autonomous agents interact, is that participating agents are meant to comply with the conventions of the system.",
                "Norms can be used to model such conventions and hence as a means to regulate the observable behaviour of agents [6, 29].",
                "There are many contributions on the subject of norms from sociologists, philosophers and logicians (e.g., [15, 28]).",
                "However, there are very few proposals for computational realisations of normative models - the way norms can be integrated in the design and execution of MASs.",
                "The few that exist (e.g. [10, 13, 24]), operate in a centralised manner which creates bottlenecks and single points-of-failure.",
                "To our knowledge, no proposal truly supports the distributed enactment of normative environments.",
                "In our paper we approach that problem and propose means to handle conflicting commitments in open, regulated, multiagent systems in a distributed manner.",
                "The type of regulated MAS we envisage consists of multiple, concurrent, related activities where agents interact.",
                "Each agent may concurrently participate in several activities, and change from one activity to another.",
                "An agents actions within an activity may have consequences in the form of normative positions (i.e. obligations, permissions, and prohibitions) [26] that may constrain its future behaviour.",
                "For instance, a buyer agent who runs out of credit may be forbidden to make further offers, or a seller agent is obliged to deliver after closing a deal.",
                "We assume that agents may choose not to fulfill all their obligations and hence may be sanctioned by the MAS.",
                "Notice that, when activities are distributed, normative positions must flow from the activities in which they are generated to those in which they take effect.",
                "For instance, the sellers obligation above must flow (or be propagated) from a negotiation activity to a delivery activity.",
                "Since in an open, regulated MAS one cannot embed normative aspects into the agents design, we adopt the view that the MAS should be supplemented with a separate set of norms that further regulates the behaviour of participating agents.",
                "In order to model the separation of concerns between the coordination level (agents interactions) and the normative level (propagation of normative positions), we propose an artifact called the Normative Structure (NS).",
                "Within a NS conflicts may arise due to the dynamic nature of the MAS and the concurrency of agents actions.",
                "For instance, an agent may be obliged and prohibited to do the 636 978-81-904262-7-5 (RPS) c 2007 IFAAMAS very same action in an activity.",
                "Since the regulation of a MAS entails that participating agents need to be aware of the validity of those actions that take place within it, such conflicts ought to be identified and possibly resolved if a claim of validity is needed for an agent to engage in an action or be sanctioned.",
                "However, ensuring conflict-freedom of a NS at design time is computationally intractable.",
                "We show this by formalising the notion of conflict, providing a mapping of NSs into Coloured Petri Nets (CPNs) and borrowing well-known theoretical results from the field of CPNs.",
                "We believe that online conflict detection and resolution is required.",
                "Hence, we present a tractable algorithm for conflict resolution.",
                "This algorithm is paramount for the distributed enactment of a NS.",
                "The paper is organised as follows.",
                "In Section 2 we detail a scenario to serve as an example throughout the paper.",
                "Next, in Section 3 we formally define the normative structure artifact.",
                "Further on, in Section 4 we formalise the notion of conflict to subsequently analyse the complexity of conflict detection in terms of CPNs in Section 5.",
                "Section 6 describes the computational management of NSs by describing their enactment and presenting an algorithm for conflict resolution.",
                "Finally, we comment on related work, draw conclusions and report on future work in Section 7. 2.",
                "SCENARIO We use a supply-chain scenario in which companies and individuals come together at an online marketplace to conduct business.",
                "The overall transaction procedure may be organised as six distributed activities, represented as nodes in the diagram in Figure 1.",
                "They involve different participants whose behaviour is coordinated through protocols.",
                "In this scenario agents can play one of four roles: marExit Registration Payment Delivery Negotiation Coordination Model Contract Figure 1: Activity Structure of the Scenario ketplace accountant (acc), client, supplier (supp) and warehouse managers (wm).",
                "The arrows connecting the activities represent how agents can move from one activity to another.",
                "After registering at the marketplace, clients and suppliers get together in an activity where they negotiate the terms of their transaction, i.e. prices, amounts of goods to be delivered, deadlines and other details.",
                "In the contract activity, the order becomes established and an invoice is prepared.",
                "The client will then participate in a payment activity, verifying his credit-worthiness and instructing his bank to transfer the correct amount of money.",
                "The supplier in the meantime will arrange for the goods to be delivered (e.g. via a warehouse manager) in the delivery activity.",
                "Finally, agents can leave the marketplace conforming to a predetermined exit protocol.",
                "The marketplace accountant participates in most of the activities as a trusted provider of auditing tools.",
                "In the rest of the paper we shall build on this scenario to exemplify the notion of normative structure and to illustrate our approach to conflict detection and resolution in a distributed setting. 3.",
                "NORMATIVE STRUCTURE In MASs agents interact according to protocols which naturally are distributed.",
                "We advocate that actions in one such protocol may have an effect on the enactment of other protocols.",
                "Certain actions can become prohibited or obligatory, for example.",
                "We take normative positions to be obligations, prohibitions and permissions akin to work described in [26].",
                "The intention of adding or removing a normative position we call normative command.",
                "Occurrences of normative positions in one protocol may also have consequences for other protocols1 .",
                "In order to define our norm language and specify how normative positions are propagated, we have been inspired by multi-context systems [14].",
                "These systems allow the structuring of knowledge into distinct formal theories and the definition of relationships between them.",
                "The relationships are expressed as bridge rules - deducibility of formulae in some contexts leads to the deduction of other formulae in other contexts.",
                "Recently, these systems have been successfully used to define agent architectures [11, 23].",
                "The metaphor translates to our current work as follows: the utterance of illocutions and/or the existence of normative positions in some normative scenes leads to the deduction of normative positions in other normative scenes.",
                "We are concerned with the propagation and distribution of normative positions within a network of distributed, normative scenes as a consequence of agents actions.",
                "We take normative scenes to be sets of normative positions and utterances that are associated with an underlying interaction protocol corresponding to an activity.",
                "In this section, we first present a simple language capturing these aspects and formally introduce the notions of normative scene, normative transition rule and normative structure.",
                "We give the intended semantics of these rules and show how to control a MAS via norms in an example. 3.1 Basic Concepts The building blocks of our language are terms and atomic formulae: Def. 1.",
                "A term, denoted as t, is (i) any constant expressed using lowercase (with or without subscripts), e.g. a, b0, c or (ii) any variable expressed using uppercase (with or without subscripts), e.g.",
                "X, Y, Zb or (iii) any function f(t1, . . . , tn), where f is an n-ary function symbol and t1, .., tn are terms.",
                "Some examples of terms and functions are Credit, price or offer(bible, 30) being respectively a variable, a constant and a function.",
                "We will be making use of identifiers throughout the paper, which are constant terms and also need the following definition: Def. 2.",
                "An atomic formula is any construct p(t1, . . . , tn), where p is an n-ary predicate symbol and t1, . . . , tn are terms.",
                "The set of all atomic formulae is denoted as Î”.",
                "We focus on an expressive class of MASs in which interaction is carried out by means of illocutionary speech acts exchanged among participating agents: Def. 3.",
                "Illocutions I are ground atomic formulae which have the form p(ag, r, ag , r , Î´, t) where p is an element of 1 Here, we abstract from protocols and refer to them generically as activities.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 637 a set of illocutionary particles (e.g. inform, request, offer); ag, ag are agent identifiers; r, r are role identifiers; Î´, an arbitrary ground term, is the content of the message, built from a shared content language; t âˆˆ N is a time stamp.",
                "The intuitive meaning of p(ag, r, ag , r , m, t) is that agent ag playing role r sent message m to agent ag playing role r at time t. An example of an illocution is inform(ag4, supp, ag3, client, offer(wire, 12), 10).",
                "Sometimes it is useful to refer to illocutions that are not fully grounded, that is, those that may contain uninstantiated (free) variables.",
                "In the description of a protocol, for instance, the precise values of the message exchanged can be left unspecified.",
                "During the enactment of the protocol agents will produce the actual values which will give rise to a ground illocution.",
                "We can thus define illocution schemata: Def. 4.",
                "An illocution schema Â¯I is any atomic formula p(ag, r, ag , r , Î´, t) in which some of the terms may either be variables or may contain variables. 3.2 Formal Definition of the Notion of NS We first define normative scenes as follows: Def. 5.",
                "A normative scene is a tuple s = ids, Î”s where ids is a scene identifier and Î”s is the set of atomic formulae Î´ (i.e. utterances and normative positions) that hold in s. We will also refer to Î”s as the state of normative scene s. For instance, a snapshot of the state of the delivery normative scene of our scenario could be represented as: Î”s = 8 < : utt(request(sean, client, kev, wm, receive(wire, 200), 20)), utt(accept(kev, wm, sean, client, receive(wire, 200), 30)), obl(inform(kev, wm, sean, client, delivered(wire, 200), 30)) 9 = ; That is, agent Sean taking up the client role has requested agent Kev (taking up the warehouse manager role wm) to receive 200kg of wire, and agent Kev is obliged to deliver 200kg of wire to Sean since he accepted the request.",
                "Note that the state of a normative scene Î”s evolves over time.",
                "These normative scenes are connected to one another via normative transitions that specify how utterances and normative positions in one scene affect other normative scenes.",
                "As mentioned above, activities are not independent since illocutions uttered in some of them may have an effect on other ones.",
                "Normative transition rules define the conditions under which a normative command is generated.",
                "These conditions are either utterances or normative positions associated with a given protocol (denoted e.g. activity : utterance) which yield a normative command, i.e. the addition or removal of another normative position, possibly related to a different activity.",
                "Our transition rules are thus defined: Def. 6.",
                "A normative transition rule R is of the form: R ::= V C V ::= ids : D | V, V D ::= N | utt(Â¯I) N ::= per(Â¯I) | prh(Â¯I) | obl(Â¯I) C ::= add(ids : N) | remove(ids : N) where Â¯I is an illocution schema, N is a normative position (i.e. permission, prohibition or obligation), ids is an identifier for activity s and C is a normative command.",
                "We endow our language with the usual semantics of rulebased languages [19].",
                "Rules map an existing normative structure to a new normative structure where only the state of the normative scenes change.",
                "In the definitions below we rely on the standard concept of substitution [9].",
                "Def. 7.",
                "A normative transition is a tuple b = idb, rb where idb is an identifier and rb is a normative transition rule.",
                "We are proposing to extend the notion of MAS, regulated by protocols, with an extra layer consisting of normative scenes and normative transitions.",
                "This layer is represented as a bi-partite graph that we term normative structure.",
                "A normative structure relates normative scenes and normative transitions specifying which normative positions are to be generated or removed in which normative scenes.",
                "Def. 8.",
                "A normative structure is a labelled bi-partite graph NS = Nodes, Edges, Lin , Lout .",
                "Nodes is a set SâˆªB where S is a set of normative scenes and B is a set of normative transitions.",
                "Edges is a set Ain âˆª Aout where Ain âŠ† S Ã— B is a set of input arcs labelled with an atomic formula using the labelling function Lin : Ain â†’ D; and Aout âŠ† B Ã— S is a set of output arcs labelled with a normative position using the labelling function Lout : Aout â†’ N. The following must hold: 1.",
                "Each atomic formula appearing in the LHS of a rule rb must be of the form (ids : D) where s âˆˆ S and D âˆˆ Î” and âˆƒain âˆˆ Ain such that ain = (s, b) and Lin (ain ) = D. 2.",
                "The atomic formula appearing in the RHS of a rule rb must be of the form add(ids : N) or remove(ids : N) where s âˆˆ S and âˆƒaout âˆˆ Aout such that aout = (b, s) and Lout (aout ) = N. 3. âˆ€a âˆˆ Ain such that a = (s, b) and b = idb, rb and Lin (a) = D then (ids:D) must occur in the LHS of rb. 4. âˆ€a âˆˆ Aout such that a = (b, s) and b = idb, rb and Lout (a) = N then add(ids : N) or remove(ids : N) must occur in the RHS of rb.",
                "The first two points ensure that every atomic formulae on the LHS of a normative transition rule labels an arc entering the appropriate normative transition in the normative structure, and that the atomic formula on the RHS labels the corresponding outgoing arc.",
                "Points three and four ensure that labels from all incoming arcs are used in the LHS of the normative transition rule that these arcs enter into, and that the labels from all outgoing arcs are used in the RHS of the normative transition rule that these arcs leave. 3.3 Intended Semantics The formal semantics will be defined via a mapping to Coloured Petri Nets in Section 5.1.",
                "Here we start defining the intended semantics of normative transition rules by describing how a rule changes a normative scene of an existing normative structure yielding a new normative structure.",
                "Each rule is triggered once for each substitution that unifies the left-hand side V of the rule with the state of the corresponding normative scenes.",
                "An atomic formula (i.e. an utterance or a normative position) holds iff it is unifiable with an utterance or normative position that belongs to the state of the corresponding normative scene.",
                "Every time a rule is triggered, the normative command specified on the right-hand side of that rule is carried out, intending to add or remove a normative position from the state of the corresponding normative scene.",
                "However, addition is not unconditional as conflicts may arise.",
                "This topic will be treated in Sections 4 and 6.1. 638 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.4 Example In our running example we have the following exemplary normative transition rule: â€ž payment : obl(inform(X, client, Y, acc, pay(Z, P, Q), T )), payment : utt(inform(X, client, Y, acc, pay(Z, P, Q), T )) Â« delivery : add(obl(inform(Y, wm, X, client, delivered(Z, Q), T ))) That is, during the payment activity, an obligation on client X to inform accountant Y about the payment P of item Z at time T and the corresponding utterance which fulfills this obligation allows the flow of a norm to the delivery activity.",
                "The norm is an obligation on agent Y (this time taking up the role of the warehouse manager wm) to send a message to client X that item Z has been delivered.",
                "We show in Figure 2 a diagrammatic representation of how activities and a normative structure relate: Payment Delivery Contract Normative Level Exit Registration Payment Delivery Negotiation Coordination Level Contract nt Figure 2: Activities and Normative Structure As illocutions are uttered during activities, normative positions arise.",
                "Utterances and normative positions are combined in transition rules, causing the flow of normative positions between normative scenes.",
                "The connection between the two levels is described in Section 6.2. 4.",
                "CONFLICT DEFINITION The terms deontic conflict and deontic inconsistency have been used interchangeably in the literature.",
                "However, in this paper we adopt the view of [7] in which the authors suggest that a deontic inconsistency arises when an action is simultaneously permitted and prohibited - since a permission may not be acted upon, no real conflict occurs.",
                "The situations when an action is simultaneously obliged and prohibited are, however, deontic conflicts, as both obligations and prohibitions influence behaviours in a conflicting fashion.",
                "The content of normative positions in this paper are illocutions.",
                "Therefore, a normative conflict arises when an illocution is simultaneously obliged and prohibited.",
                "We propose to use the standard notion of unification [9] to detect when a prohibition and a permission overlap.",
                "For instance, an obligation obl(inform(A1, R1, A2, R2, p(c, X), T)) and a prohibition prh(inform(a1, r1, a2, r2, p(Y, d), T )) are in conflict as they unify under Ïƒ = {A1/a1, R1/r1, A2/a2, R2/r2, Y/c, X/d, T/T }).",
                "We formally capture this notion: Def. 9.",
                "A (deontic) conflict arises between two normative positions N and N under a substitution Ïƒ, denoted as conflict(N, N , Ïƒ), if and only if N = prh(Â¯I), N = obl(Â¯I ) and unify(Â¯I,Â¯I , Ïƒ).",
                "That is, a prohibition and an obligation are in conflict if, and only if, their illocutions unify under Ïƒ.",
                "The substitution Ïƒ, called here the conflict set, unifies the agents, roles and atomic formulae.",
                "We assume that unify is a suitable implementation of a unification algorithm which i) always terminates (possibly failing, if a unifier cannot be found); ii) is correct; and iii) has linear computational complexity.",
                "Inconsistencies caused by the same illocution being simultaneously permitted and prohibited can be formalised similarly.",
                "In this paper we focus on prohibition/obligation conflicts, but the computational machinery introduced in Section 6.1 can equally be used to detect prohibition/permission inconsistencies, if we substitute modality obl for per. 5.",
                "FORMALISING CONFLICT-FREEDOM In this section we introduce some background knowledge on CPNs assuming a basic understanding of ordinary Petri Nets.",
                "For technical details we refer the reader to [16].",
                "We then map NSs to CPNs and analyse their properties.",
                "CPNs combine the strength of Petri nets with the strength of functional programming languages.",
                "On the one hand, Petri nets provide the primitives for the description of the synchronisation of concurrent processes.",
                "As noticed in [16], CPNs have a semantics which builds upon true concurrency, instead of interleaving.",
                "In our opinion, a true-concurrency semantics is easier to work with because it is the way we envisage the connection between the coordination level and the normative level of a multi-agent system to be.",
                "On the other hand, the functional programming languages used by CPNs provide the primitives for the definition of data types and the manipulation of their data values.",
                "Thus, we can readily translate expressions of a normative structure.",
                "Last but not least, CPNs have a well-defined semantics which unambiguously defines the behaviour of each CPN.",
                "Furthermore, CPNs have a large number of formal analysis methods and tools by which properties of CPNs can be proved.",
                "Summing up, CPNs provide us with all the necessary features to formally reason about normative structures given that an adequate mapping is provided.",
                "In accordance with Petri nets, the states of a CPN are represented by means of places.",
                "But unlike Petri Nets, each place has an associated data type determining the kind of data which the place may contain.",
                "A state of a CPN is called a marking.",
                "It consists of a number of tokens positioned on the individual places.",
                "Each token carries a data value which has the type of the corresponding place.",
                "In general, a place may contain two or more tokens with the same data value.",
                "Thus, a marking of a CPN is a function which maps each place into a multi-set2 of tokens of the correct type.",
                "One often refers to the token values as token colours and one also refers to the data types as colour sets.",
                "The types of a CPN can be arbitrarily complex.",
                "Actions in a CPN are represented by means of transitions.",
                "An incoming arc into a transition from a place indicates that the transition may remove tokens from the corresponding place while an outgoing arc indicates that the transition may add tokens.",
                "The exact number of tokens and their data values are determined by the arc expressions, which are encoded using the programming language chosen for the CPN.",
                "A transition is enabled in a CPN if and only if all the 2 A multi-set (or bag) is an extension to the notion of set, allowing the possibility of multiple appearances of the same element.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 639 variables in the expressions of its incoming arcs are bound to some value(s) (each one of these bindings is referred to as a binding element).",
                "If so, the transition may occur by removing tokens from its input places and adding tokens to its output places.",
                "In addition to the arc expressions, it is possible to attach a boolean guard expression (with variables) to each transition.",
                "Putting all the elements above together we obtain a formal definition of CPN that shall be employed further ahead for mapping purposes.",
                "Def. 10.",
                "A CPN is a tuple Î£, P, T, A, N, C, G, E, I where: (i) Î£ is a finite set of non-empty types, also called colour sets; (ii) P is a finite set of places; (iii) T is a finite set of transitions; (iv) A is a finite set of arcs; (v) N is a node function defined from A into P Ã— T âˆª T Ã— P; (vi) C is a colour function from P into Î£; (vii) G is a guard function from T into expressions; (viii) E is an arc expression function from A into expressions; (ix) I is an initialisation function from P into closed expressions; Notice that the informal explanation of the enabling and occurrence rules given above provides the foundations to understand the behaviour of a CPN.",
                "In accordance with ordinary Petri nets, the concurrent behaviour of a CPN is based on the notion of step.",
                "Formally, a step is a non-empty and finite multi-set over the set of all binding elements.",
                "Let step S be enabled in a marking M. Then, S may occur, changing the marking M to M .",
                "Moreover, we say that marking M is directly reachable from marking M by the occurrence of step S, and we denote it by M[S > M .",
                "A finite occurrence sequence is a finite sequence of steps and markings: M1[S1 > M2 . . .",
                "Mn[Sn > Mn+1 such that n âˆˆ N and Mi[Si > Mi+1 âˆ€i âˆˆ {1, . . . , n}.",
                "The set of all possible markings reachable for a net Net from a marking M is called its reachability set, and is denoted as R(Net, M). 5.1 Mapping to Coloured Petri Nets Our normative structure is a labelled bi-partite graph.",
                "The same is true for a Coloured Petri Net.",
                "We are presenting a mapping f from one to the other, in order to provide semantics for the normative structure and prove properties about it by using well-known theoretical results from work on CPNs.",
                "The mapping f makes use of correspondences between normative scenes and CPN places, normative transitions and CPN transitions and finally, between arc labels and CPN arc expressions.",
                "S â†’ P B â†’ T Lin âˆª Lout â†’ E The set of types is the singleton set containing the colour NP (i.e.",
                "Î£ = {NP}).",
                "This complex type is structured as follows (we use CPN-ML [4] syntax): color NPT = with Obl | Per | Prh | NoMod color IP = with inform | declare | offer color UTT = record illp : IP ag1, role1, ag2, role2 : string content: string time : int color NP = record mode : NPT illoc : UTT Modelling illocutions as norms without modality (NoMod) is a formal trick we use to ensure that sub-nets can be combined as explained below.",
                "Arcs are mapped almost directly.",
                "A is a finite set of arcs and N is a node function, such that âˆ€a âˆˆ A âˆƒa âˆˆ Ain âˆªAout .",
                "N(a) = a .",
                "The initialisation function I is defined as I(p) = Î”s (âˆ€s âˆˆ S where p is obtained from s using the mapping; remember that s = ids, Î”s ).",
                "Finally, the colour function C assigns the colour NP to every place: C(p) = NP (âˆ€p âˆˆ P).",
                "We are not making use of the guard function G. In future work, this function can be used to model constraints when we extend the expressiveness of our norm language. 5.2 Properties of Normative Structures Having defined the mapping from normative structures to Coloured Petri Nets, we now look at properties of CPNs that help us understand the complexity of conflict detection.",
                "One question we would like to answer is, whether at a given point in time, a given normative structure is conflict-free.",
                "Such a snapshot of a normative structure corresponds to a marking in the mapped CPN.",
                "Def. 11.",
                "Given a marking Mi, this marking is conflictfree if Â¬âˆƒp âˆˆ P. âˆƒnp1, np2 âˆˆ Mi(p) such that np1.mode = Obl and np2.mode = Prh and np1.illoc and np2.illoc unify under a valid substitution.",
                "Another interesting question would be, whether a conflict will occur from such a snapshot of the system by propagating the normative positions.",
                "In order to answer this question, we first translate the snapshot of the normative structure to the corresponding CPN and then execute the finite occurence sequence of markings and steps, verifying the conflict-freedom of each marking as we go along.",
                "Def. 12.",
                "Given a marking Mi, a finite occurrence sequence Si, Si+1, ..., Sn is called conflict-free, if and only if Mi[Si > Mi+1 . . .",
                "Mn[Sn > Mn+1 and Mk is conflict-free for all k such that i â‰¤ k â‰¤ n + 1.",
                "However, the main question we would like to investigate, is whether or not a given normative structure is conflictresistant, that is, whether or not the agents enacting the MAS are able to bring about conflicts through their actions.",
                "As soon as one includes the possibility of actions (or utterances) from autonomous agents, one looses determinism.",
                "Having mapped the normative structure to a CPN, we now add CPN models of the agents interactions.",
                "Each form of agent interaction (i.e. each activity) can be modelled using CPNs along the lines of Cost et al. [5].",
                "These nondeterministic CPNs feed tokens into the CPN that models the normative structure.",
                "This leads to the introduction of non-determinism into the combined CPN.",
                "The lower half of figure 3 shows part of a CPN model of an agent protocol where the arc denoted with 1 represents some utterance of an illocution by an agent.",
                "The target transition of this arc, not only moves a token on to the next state of this CPN, but also places a token in the place corresponding to the appropriate normative scene in the CPN model of the normative structure (via arc 2).",
                "Transition 3 finally could propagate that token in form of an obligation, for example.",
                "Thus, from a given marking, many different occurrence sequences are possible depending on the agents actions.",
                "We make use of the reachability set R to define a situation in which agents cannot cause conflicts. 640 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) Figure 3: Constructing the combined CPN Def. 13.",
                "Given a net N, a marking M is conflict-resistant if and only if all markings in R(N,M) are conflict-free.",
                "Checking conflict-freedom of a marking can be done in polynomial time by checking all places of the CPN for conflicting tokens.",
                "Conflict-freedom of an occurrence sequence in the CPN that represents the normative structure can also be done in polynomial time since this sequence is deterministic given a snapshot.",
                "Whether or not a normative structure is designed safely corresponds to checking the conflict-resistance of the initial marking M0.",
                "Now, verifying conflict-resistance of a marking becomes a very difficult task.",
                "It corresponds to the reachability problem in a CPN: can a state be reached or a marking achieved, that contains a conflict?.",
                "This reachability problem is known to be NP-complete for ordinary Petri Nets [22] and since CPNs are functionally identical, we cannot hope to verify conflict-resistance of a normative structure off-line in a reasonable amount of time.",
                "Therefore, distributed, run-time mechanisms are needed to ensure that a normative structure maintains consistency.",
                "We present one such mechanism in the following section. 6.",
                "MANAGING NORMATIVE STRUCTURES Once a conflict (as defined in Section 4) has been detected, we propose to employ the unifier to resolve the conflict.",
                "In our example, if the variables in prh(inform(a1, r1, a2, r2, p(Y, d), T )) do not get the values specified in substitution Ïƒ then there will not be a conflict.",
                "However, rather than computing the complement set of a substitution (which can be an infinite set) we propose to annotate the prohibition with the unifier itself and use it to determine what the variables of that prohibition cannot be in future unifications in order to avoid a conflict.",
                "We therefore denote annotated prohibitions as prh(Â¯I) Î£, where Î£ = {Ïƒ1, . . . , Ïƒn}, is a set of unifiers.",
                "Annotated norms3 are interpreted as deontic constructs with curtailed influences, that is, their effect (on agents, roles and illocutions) has been limited by the set Î£ of unifiers.",
                "A prohibition may be in conflict with various obligations in a given normative scene s = id, Î” and we need to record (and possibly avoid) all these conflicts.",
                "We define below an algorithm which ensures that a normative position will be added to a normative scene in such a way that it will not cause any conflicts. 3 Although we propose to curtail prohibitions, the same machinery can be used to define the curtailment of obligations instead.",
                "These different policies are dependent on the intended deontic semantics and requirements of the systems addressed.",
                "For instance, some MASs may require that their agents should not act in the presence of conflicts, that is, the obligation should be curtailed. 6.1 Conflict Resolution We propose a fine-grained way of resolving normative conflicts via unification.",
                "We detect the overlapping of the influences of norms , i.e. how they affect the behaviour of the concerned agents, and we curtail the influence of the normative position, by appropriately using the annotations when checking if the norm applies to illocutions.",
                "The algorithm shown in Figure 4 depicts how we maintain a conflict-free set of norms.",
                "It adds a given norm N to an existing, conflictfree normative state Î”, obtaining a resulting new normative state Î” which is conflict-free, that is, its prohibitions are annotated with a set of conflict sets indicating which bindings for variables have to be avoided for conflicts not to take place. algorithm addNorm(N, Î”) begin 1 timestamp(N) 2 case N of 3 per(Â¯I): Î” := Î” âˆª {N} 4 prh(I): if N âˆˆ Î” s.t. conflict(N, N , Ïƒ) then Î” := Î” 5 else Î” := Î” âˆª {N} 6 prh(Â¯I): 7 begin 8 Î£ := âˆ… 9 for each N âˆˆ Î” do 10 if conflict(N, N , Ïƒ) then Î£ := Î£ âˆª {Ïƒ} 11 Î” := Î” âˆª {N Î£} 12 end 13 obl(Â¯I): 14 begin 15 Î”1 := âˆ…; Î”2 := âˆ… 16 for each (N Î£) âˆˆ Î” do 17 if N = prh(I) then 18 if conflict(N , N, Ïƒ) then Î”1 := Î”1 âˆª {N Î£} 19 else nil 20 else 21 if conflict(N , N, Ïƒ) then 22 begin 23 Î”1 := Î”1 âˆª {N Î£} 24 Î”2 := Î”2 âˆª {N (Î£ âˆª {Ïƒ})} 25 end 26 Î” := (Î” âˆ’ Î”1) âˆª Î”2 âˆª {N} 27 end 28 end case 29 return Î” end Figure 4: Algorithm to Preserve Conflict-Freedom The algorithm uses a case of structure to differentiate the different possibilities for a given norm N. Line 3 addresses the case when the given norm is a permission: N is simply added to Î”.",
                "Lines 4-5 address the case when we attempt to add a ground prohibition to a normative state: if it conflicts with any obligation, then it is discarded; otherwise it is added to the normative state.",
                "Lines 6-12 describe the situation when the normative position to be added is a nonground prohibition.",
                "In this case, the algorithm initialises Î£ to an empty set and loops (line 9-10) through the norms N in the old normative state Î”.",
                "Upon finding one that conflicts with N, the algorithm updates Î£ by adding the newly found conflict set Ïƒ to it (line 10).",
                "By looping through Î”, we are able to check any conflicts between the new prohibition and the existing obligations, adequately building the annotation Î£ to be used when adding N to Î” in line 11.",
                "Lines 13-27 describe how a new obligation is accommodated to an existing normative state.",
                "We make use of two initially empty, temporary sets, Î”1, Î”2.",
                "The algorithm loops through Î” (lines 16-25) picking up those annotated prohibitions N Î£ which conflict with the new obligation.",
                "There are, however, two cases to deal with: the one when a ground The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 641 prohibition is found (line 17), and its exception, covering non-ground prohibitions (line 20).",
                "In both cases, the old prohibition is stored in Î”1 (lines 18 and 23) to be later removed from Î” (line 26).",
                "However, in the case of a nonground prohibition, the algorithm updates its annotation of conflict sets (line 24).",
                "The loop guarantees that an exhaustive (linear) search through a normative state takes place, checking if the new obligation is in conflict with any existing prohibitions, possibly updating the annotations of these conflicting prohibitions.",
                "In line 26 the algorithm builds the new updated Î” by removing the old prohibitions stored in Î”1 and adding the updated prohibitions stored in Î”2 (if any), as well as the new obligation N. Our proposed algorithm is correct in that, for a given normative position N and a normative state Î”, it provides a new normative state Î” in which all prohibitions have annotations recording how they unify with existing obligations.",
                "The annotations can be empty, though: this is the case when we have a ground prohibition or a prohibition which does not unify/conflict with any obligation.",
                "Permissions do not affect our algorithm and they are appropriately dealt with (line 3).",
                "Any attempt to insert a ground prohibition which conflicts, yields the same normative state (line 4).",
                "When a new obligation is being added then the algorithm guarantees that all prohibitions are considered (lines 14-27), leading to the removal of conflicting ground prohibitions or the update of annotations of non-ground prohibitions.",
                "The algorithm always terminates: the loops are over a finite set Î” and the conflict checks and set operations always terminate.",
                "The complexity of the algorithm is linear: the set Î” is only examined once for each possible case of norm to be added.",
                "When managing normative states we may also need to remove normative positions.",
                "This is straightforward: permissions can be removed without any problems; annotated prohibitions can also be removed without further considerations; obligations, however, require some housekeeping.",
                "When an obligation is to be removed, we must check it against all annotated prohibitions in order to update their annotations.",
                "We apply the conflict check and obtain a unifier, then remove this unifier from the prohibitions annotation.",
                "We invoke the removal algorithm as removeNorm(N, Î”): it returns a new normative state Î” in which N has been removed, with possible alterations to other normative positions as explained. 6.2 Enactment of a Normative Structure The enactment of a normative structure amounts to the parallel, distributed execution of normative scenes and normative transitions.",
                "For illustrative purposes, hereafter we shall describe the interplay between the payment and delivery normative scenes and the normative transition nt linking them in the upper half of figure 2.",
                "With this aim, consider for instance that obl(inform(jules, client, rod, acc, pay(copper, 400, 350), T) âˆˆ Î”payment and that Î”delivery holds prh(inform(rod,wm, jules, client, delivered(Z, Q), T)).",
                "Such states indicate that client Jules is obliged to pay Â£400 for 350kg of copper to accountant Rod according to the payment normative scene, whereas Rod, taking up the role of warehouse manager this time, is prohibited to deliver anything to client Jules according to the delivery normative scene.",
                "For each normative scene, the enactment process goes as follows.",
                "Firstly, it processes its incoming message queue that contains three types of messages: utterances from the activity it is linked to; and normative commands either to add or remove normative positions.",
                "For instance, in our example, the payment normative scene collects the illocution I = utt((inform(jules, client, rod, acc, pay(copper, 400, 350), 35)) standing for client Jules pending payment for copper (via arrow A in figure 2).",
                "Utterances are timestamped and subsequently added to the normative state.",
                "We would have Î”payment = Î”payment âˆª {I}, in our example.",
                "Upon receiving normative commands to either add or remove a normative position, the normative scene invokes the corresponding addition or removal algorithm described in Section 6.1.",
                "Secondly, the normative scene acknowledges its state change by sending a trigger message to every outgoing normative transition it is connected to.",
                "In our example, the payment normative scene would be signalling its state change to normative transition nt.",
                "For normative transitions, the process works differently.",
                "Because each normative transition controls the operation of a single rule, upon receiving a trigger message, it polls every incoming normative scene for substitutions for the relevant illocution schemata on the LHS of its rule.",
                "In our example, nt (being responsible for the rule described in Section 3.4), would poll the payment normative scene (via arrow B) for substitutions.",
                "Upon receiving replies from them (in the form of sets of substitutions together with time-stamps), it has to unify substitutions from each of these normative scenes.",
                "For each unification it finds, the rule is fired, and hence the corresponding normative command is sent along to the output normative scene.",
                "The normative transition then keeps track of the firing message it sent on and of the time-stamps of the normative positions that triggered the firing.",
                "This is done to ensure that the very same normative positions in the LHS of a rule only trigger its firing once.",
                "In our example, nt would be receiving Ïƒ = {X/jules, Y/rod, Z/copper, Q/350} from the payment normative scene.",
                "Since the substitions in Ïƒ unify with nts rule, the rule is fired, and the normative command add(delivery : obl(rod, wm, jules, client, delivered(copper, 350), T)) is sent along to the delivery normative scene to oblige Rod to deliver to client Jules 350kg of copper.",
                "After that, the delivery normative scene would invoke the addNorm algorithm from figure 4 with Î”delivery and N = obl(rod, wm, jules, client, delivered(copper, 350)) as arguments. 7.",
                "RELATED WORK AND CONCLUSIONS Our contributions in this paper are three-fold.",
                "Firstly, we introduce an approach for the management of and reasoning about norms in a distributed manner.",
                "To our knowledge, there is little work published in this direction.",
                "In [8, 21], two languages are presented for the distributed enforcement of norms in MAS.",
                "However, in both works, each agent has a local message interface that forwards legal messages according to a set of norms.",
                "Since these interfaces are local to each agent, norms can only be expressed in terms of actions of that agent.",
                "This is a serious disadvantage, e.g. when one needs to activate an obligation to one agent due to a certain message of another one.",
                "The second contribution is the proposal of a normative structure.",
                "The notion is fruitful because it allows the separation of normative and procedural concerns.",
                "The normative structure we propose makes evident the similarity between the propagation of normative positions and the propagation 642 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) of tokens in Coloured Petri Nets.",
                "That similarity readily suggests a mapping between the two, and gives grounds to a convenient analytical treatment of the normative structure, in general, and the complexity of conflict detection, in particular.",
                "The idea of modelling interactions (in the form of conversations) via Petri Nets has been investigated in [18], where the interaction medium and individual agents are modelled as CPN sub-nets that are subsequently combined for analysis.",
                "In [5], conversations are first designed and analysed at the level of CPNs and thereafter translated into protocols.",
                "Lin et al. [20] map conversation schemata to CPNs.",
                "To our knowledge, the use of this representation in the support of conflict detection in regulated MAS has not been reported elsewhere.",
                "Finally, we present a distributed mechanism to resolve normative conflicts.",
                "Sartor [25] treats normative conflicts from the point of view of legal theory and suggests a way to order the norms involved.",
                "His idea is implemented in [12] but requires a central resource for norm maintenance.",
                "The approach to conflict detection and resolution is an adaptation and extension of the work on instantiation graphs reported in [17] and a related algorithm in [27].",
                "The algorithm presented in the current paper can be used to manage normative states distributedly: normative scenes that happen in parallel have an associated normative state Î” to which the algorithm is independently applied each time a new norm is to be introduced.",
                "These three contributions we present in this paper open many possibilities for future work.",
                "We should mention first, that as a broad strategy we are working on a generalisation of the notion of normative structure to make it operate with different coordination models, with richer deontic content and on top of different computational realisations of regulated MAS.",
                "As a first step in this direction we are taking advantage of the de-coupling between interaction protocols and declarative normative guidance that the normative structure makes available, to provide a normative layer for electronic institutions (as defined in [1]).",
                "We expect such coupling will endow electronic institutions with a more flexible -and more expressive- normative environment.",
                "Furthermore, we want to extend our model along several directions: (1) to handle negation and constraints as part of the norm language, and in particular the notion of time; (2) to accommodate multiple, hierarchical norm authorities based on roles, along the lines of Cholvy and Cuppens [3] and power relationships as suggested by Carabelea et al. [2]; (3) to capture in the conflict resolution algorithm different semantics relating the deontic notions by supporting different axiomations (e.g., relative strength of prohibition versus obligation, default deontic notions, deontic inconsistencies).",
                "On the theoretical side, we intend to use analysis techniques of CPNs in order to characterise classes of CPNs (e.g., acyclic, symmetric, etc.) corresponding to families of Normative Structures that are susceptible to tractable offline conflict detection.",
                "The combination of these techniques along with our online conflict resolution mechanisms is intended to endow MAS designers with the ability to incorporate norms into their systems in a principled way. 8.",
                "REFERENCES [1] J. L. Arcos, M. Esteva, P. Noriega, J.",
                "A. RodrÂ´Ä±guez, and C. Sierra.",
                "Engineering open environments with electronic institutions.",
                "Journal on Engineering Applications of Artificial Intelligence, 18(2):191-204, 2005. [2] C. Carabelea, O. Boissier, and C. Castelfranchi.",
                "Using social power to enable agents to reason about being part of a group.",
                "In 5th Internat.",
                "Workshop, ESAW 2004, pages 166-177, 2004. [3] L. Cholvy and F. Cuppens.",
                "Solving normative conflicts by merging roles.",
                "In Fifth International Conference on Artificial Intelligence and Law, Washington, USA, 1995. [4] S. Christensen and T. B. Haagh.",
                "Design CPN - overview of CPN ML syntax.",
                "Technical report, University of Aarhus, 1996. [5] R. S. Cost, Y. Chen, T. W. Finin, Y. Labrou, and Y. Peng.",
                "Using colored petri nets for conversation modeling.",
                "In Issues in Agent Communication, pages 178-192, London, UK, 2000. [6] F. Dignum.",
                "Autonomous Agents with Norms.",
                "Artificial Intelligence and Law, 7(1):69-79, 1999. [7] A. Elhag, J. Breuker, and P. Brouwer.",
                "On the Formal Analysis of Normative Conflicts.",
                "Information & Comms.",
                "Techn.",
                "Law, 9(3):207-217, Oct. 2000. [8] M. Esteva, W. Vasconcelos, C. Sierra, and J.",
                "A. RodrÂ´Ä±guez-Aguilar.",
                "Norm consistency in electronic institutions. volume 3171 (LNAI), pages 494-505.",
                "Springer-Verlag, 2004. [9] M. Fitting.",
                "First-Order Logic and Automated Theorem Proving.",
                "Springer-Verlag, New York, U.S.A., 1990. [10] N. Fornara, F. Vigan`o, and M. Colombetti.",
                "An Event Driven Approach to Norms in Artificial Institutions.",
                "In AAMAS05 Workshop: Agents, Norms and Institutions for Regulated Multiagent Systems (ANI@REM), Utrecht, 2005. [11] D. Gaertner, P. Noriega, and C. Sierra.",
                "Extending the BDI architecture with commitments.",
                "In Proceedings of the 9th International Conference of the Catalan Association of Artificial Intelligence, 2006. [12] A. GarcÂ´Ä±a-Camino, P. Noriega, and J.-A.",
                "RodrÂ´Ä±guez-Aguilar.",
                "An Algorithm for Conflict Resolution in Regulated Compound Activities.",
                "In 7th Int.Workshop - ESAW 06, 2006. [13] A. GarcÂ´Ä±a-Camino, J.-A.",
                "RodrÂ´Ä±guez-Aguilar, C. Sierra, and W. Vasconcelos.",
                "A Distributed Architecture for Norm-Aware Agent Societies.",
                "In DALT III, volume 3904 (LNAI), pages 89-105.",
                "Springer, 2006. [14] F. Giunchiglia and L. Serafini.",
                "Multi-language hierarchical logics or: How we can do without modal logics.",
                "Artificial Intelligence, 65(1):29-70, 1994. [15] J. Habermas.",
                "The Theory of Communication Action, Volume One, Reason and the Rationalization of Society.",
                "Beacon Press, 1984. [16] K. Jensen.",
                "Coloured Petri Nets: Basic Concepts, Analysis Methods and Practical Uses (Volume 1).",
                "Springer, 1997. [17] M. Kollingbaum and T. Norman.",
                "Strategies for resolving <br>norm conflict</br> in practical reasoning.",
                "In ECAI Workshop Coordination in Emergent Agent Societies 2004, 2004. [18] J.-L. Koning, G. Francois, and Y. Demazeau.",
                "Formalization and pre-validation for interaction protocols in a multi agent systems.",
                "In ECAI, pages 298-307, 1998. [19] B. Kramer and J. Mylopoulos.",
                "Knowledge Representation.",
                "In S. C. Shapiro, editor, Encyclopedia of Artificial Intelligence, volume 1, pages 743-759.",
                "John Wiley & Sons, 1992. [20] F. Lin, D. H. Norrie, W. Shen, and R. Kremer.",
                "A schema-based approach to specifying conversation policies.",
                "In Issues in Agent Communication, pages 193-204, 2000. [21] N. Minsky.",
                "Law Governed Interaction (LGI): A Distributed Coordination and Control Mechanism (An Introduction, and a Reference Manual).",
                "Technical report, Rutgers University, 2005. [22] T. Murata.",
                "Petri nets: Properties, analysis and applications.",
                "Proceedings of the IEEE, 77(4):541-580, 1989. [23] S. Parsons, C. Sierra, and N. Jennings.",
                "Agents that reason and negotiate by arguing.",
                "Journal of Logic and Computation, 8(3):261-292, 1998. [24] A. Ricci and M. Viroli.",
                "Coordination Artifacts: A Unifying Abstraction for Engineering Environment-Mediated Coordination in MAS.",
                "Informatica, 29:433-443, 2005. [25] G. Sartor.",
                "Normative conflicts in legal reasoning.",
                "Artificial Intelligence and Law, 1(2-3):209-235, June 1992. [26] M. Sergot.",
                "A Computational Theory of Normative Positions.",
                "ACM Trans.",
                "Comput.",
                "Logic, 2(4):581-622, 2001. [27] W. W. Vasconcelos, M. Kollingbaum, and T. Norman.",
                "Resolving Conflict and Inconsistency in Norm-Regulated Virtual Organisations.",
                "In Proceedings of AAMAS 07, Hawaii, USA, 2007.",
                "IFAAMAS. [28] G. H. von Wright.",
                "Norm and Action: A Logical Inquiry.",
                "Routledge and Kegan Paul, London, 1963. [29] M. Wooldridge.",
                "An Introduction to Multiagent Systems.",
                "John Wiley & Sons, Chichester, UK, Feb. 2002.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 643"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Estrategias para resolver el \"conflicto de normas\" en el razonamiento prÃ¡ctico."
            ],
            "translated_text": "",
            "candidates": [
                "conflicto de normas",
                "conflicto de normas"
            ],
            "error": []
        },
        "electronic institution": {
            "translated_key": "instituciÃ³n electrÃ³nica",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Distributed Norm Management in Regulated Multi-Agent Systems âˆ— Dorian Gaertner Dept.",
                "of Computing, Imperial College London, London SW7 2AZ, United Kingdom dg00@doc.ic.ac.uk Andres Garcia-Camino, Pablo Noriega, J.-A.",
                "Rodriguez-Aguilar IIIA-CSIC, 08193 Bellaterra, Spain {andres,pablo,jar}@iiia.csic.es Wamberto Vasconcelos Dept. of Computing Science, University of Aberdeen, Aberdeen AB24 3UE, United Kingdom wvasconcelos@acm.org ABSTRACT Norms are widely recognised as a means of coordinating multi-agent systems.",
                "The distributed management of norms is a challenging issue and we observe a lack of truly distributed computational realisations of normative models.",
                "In order to regulate the behaviour of autonomous agents that take part in multiple, related activities, we propose a normative model, the Normative Structure (NS), an artifact that is based on the propagation of normative positions (obligations, prohibitions, permissions), as consequences of agents actions.",
                "Within a NS, conflicts may arise due to the dynamic nature of the MAS and the concurrency of agents actions.",
                "However, ensuring conflict-freedom of a NS at design time is computationally intractable.",
                "We show this by formalising the notion of conflict, providing a mapping of NSs into Coloured Petri Nets and borrowing well-known theoretical results from that field.",
                "Since online conflict resolution is required, we present a tractable algorithm to be employed distributedly.",
                "We then demonstrate that this algorithm is paramount for the distributed enactment of a NS.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Languages and structures General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION A fundamental feature of open, regulated multi-agent systems in which autonomous agents interact, is that participating agents are meant to comply with the conventions of the system.",
                "Norms can be used to model such conventions and hence as a means to regulate the observable behaviour of agents [6, 29].",
                "There are many contributions on the subject of norms from sociologists, philosophers and logicians (e.g., [15, 28]).",
                "However, there are very few proposals for computational realisations of normative models - the way norms can be integrated in the design and execution of MASs.",
                "The few that exist (e.g. [10, 13, 24]), operate in a centralised manner which creates bottlenecks and single points-of-failure.",
                "To our knowledge, no proposal truly supports the distributed enactment of normative environments.",
                "In our paper we approach that problem and propose means to handle conflicting commitments in open, regulated, multiagent systems in a distributed manner.",
                "The type of regulated MAS we envisage consists of multiple, concurrent, related activities where agents interact.",
                "Each agent may concurrently participate in several activities, and change from one activity to another.",
                "An agents actions within an activity may have consequences in the form of normative positions (i.e. obligations, permissions, and prohibitions) [26] that may constrain its future behaviour.",
                "For instance, a buyer agent who runs out of credit may be forbidden to make further offers, or a seller agent is obliged to deliver after closing a deal.",
                "We assume that agents may choose not to fulfill all their obligations and hence may be sanctioned by the MAS.",
                "Notice that, when activities are distributed, normative positions must flow from the activities in which they are generated to those in which they take effect.",
                "For instance, the sellers obligation above must flow (or be propagated) from a negotiation activity to a delivery activity.",
                "Since in an open, regulated MAS one cannot embed normative aspects into the agents design, we adopt the view that the MAS should be supplemented with a separate set of norms that further regulates the behaviour of participating agents.",
                "In order to model the separation of concerns between the coordination level (agents interactions) and the normative level (propagation of normative positions), we propose an artifact called the Normative Structure (NS).",
                "Within a NS conflicts may arise due to the dynamic nature of the MAS and the concurrency of agents actions.",
                "For instance, an agent may be obliged and prohibited to do the 636 978-81-904262-7-5 (RPS) c 2007 IFAAMAS very same action in an activity.",
                "Since the regulation of a MAS entails that participating agents need to be aware of the validity of those actions that take place within it, such conflicts ought to be identified and possibly resolved if a claim of validity is needed for an agent to engage in an action or be sanctioned.",
                "However, ensuring conflict-freedom of a NS at design time is computationally intractable.",
                "We show this by formalising the notion of conflict, providing a mapping of NSs into Coloured Petri Nets (CPNs) and borrowing well-known theoretical results from the field of CPNs.",
                "We believe that online conflict detection and resolution is required.",
                "Hence, we present a tractable algorithm for conflict resolution.",
                "This algorithm is paramount for the distributed enactment of a NS.",
                "The paper is organised as follows.",
                "In Section 2 we detail a scenario to serve as an example throughout the paper.",
                "Next, in Section 3 we formally define the normative structure artifact.",
                "Further on, in Section 4 we formalise the notion of conflict to subsequently analyse the complexity of conflict detection in terms of CPNs in Section 5.",
                "Section 6 describes the computational management of NSs by describing their enactment and presenting an algorithm for conflict resolution.",
                "Finally, we comment on related work, draw conclusions and report on future work in Section 7. 2.",
                "SCENARIO We use a supply-chain scenario in which companies and individuals come together at an online marketplace to conduct business.",
                "The overall transaction procedure may be organised as six distributed activities, represented as nodes in the diagram in Figure 1.",
                "They involve different participants whose behaviour is coordinated through protocols.",
                "In this scenario agents can play one of four roles: marExit Registration Payment Delivery Negotiation Coordination Model Contract Figure 1: Activity Structure of the Scenario ketplace accountant (acc), client, supplier (supp) and warehouse managers (wm).",
                "The arrows connecting the activities represent how agents can move from one activity to another.",
                "After registering at the marketplace, clients and suppliers get together in an activity where they negotiate the terms of their transaction, i.e. prices, amounts of goods to be delivered, deadlines and other details.",
                "In the contract activity, the order becomes established and an invoice is prepared.",
                "The client will then participate in a payment activity, verifying his credit-worthiness and instructing his bank to transfer the correct amount of money.",
                "The supplier in the meantime will arrange for the goods to be delivered (e.g. via a warehouse manager) in the delivery activity.",
                "Finally, agents can leave the marketplace conforming to a predetermined exit protocol.",
                "The marketplace accountant participates in most of the activities as a trusted provider of auditing tools.",
                "In the rest of the paper we shall build on this scenario to exemplify the notion of normative structure and to illustrate our approach to conflict detection and resolution in a distributed setting. 3.",
                "NORMATIVE STRUCTURE In MASs agents interact according to protocols which naturally are distributed.",
                "We advocate that actions in one such protocol may have an effect on the enactment of other protocols.",
                "Certain actions can become prohibited or obligatory, for example.",
                "We take normative positions to be obligations, prohibitions and permissions akin to work described in [26].",
                "The intention of adding or removing a normative position we call normative command.",
                "Occurrences of normative positions in one protocol may also have consequences for other protocols1 .",
                "In order to define our norm language and specify how normative positions are propagated, we have been inspired by multi-context systems [14].",
                "These systems allow the structuring of knowledge into distinct formal theories and the definition of relationships between them.",
                "The relationships are expressed as bridge rules - deducibility of formulae in some contexts leads to the deduction of other formulae in other contexts.",
                "Recently, these systems have been successfully used to define agent architectures [11, 23].",
                "The metaphor translates to our current work as follows: the utterance of illocutions and/or the existence of normative positions in some normative scenes leads to the deduction of normative positions in other normative scenes.",
                "We are concerned with the propagation and distribution of normative positions within a network of distributed, normative scenes as a consequence of agents actions.",
                "We take normative scenes to be sets of normative positions and utterances that are associated with an underlying interaction protocol corresponding to an activity.",
                "In this section, we first present a simple language capturing these aspects and formally introduce the notions of normative scene, normative transition rule and normative structure.",
                "We give the intended semantics of these rules and show how to control a MAS via norms in an example. 3.1 Basic Concepts The building blocks of our language are terms and atomic formulae: Def. 1.",
                "A term, denoted as t, is (i) any constant expressed using lowercase (with or without subscripts), e.g. a, b0, c or (ii) any variable expressed using uppercase (with or without subscripts), e.g.",
                "X, Y, Zb or (iii) any function f(t1, . . . , tn), where f is an n-ary function symbol and t1, .., tn are terms.",
                "Some examples of terms and functions are Credit, price or offer(bible, 30) being respectively a variable, a constant and a function.",
                "We will be making use of identifiers throughout the paper, which are constant terms and also need the following definition: Def. 2.",
                "An atomic formula is any construct p(t1, . . . , tn), where p is an n-ary predicate symbol and t1, . . . , tn are terms.",
                "The set of all atomic formulae is denoted as Î”.",
                "We focus on an expressive class of MASs in which interaction is carried out by means of illocutionary speech acts exchanged among participating agents: Def. 3.",
                "Illocutions I are ground atomic formulae which have the form p(ag, r, ag , r , Î´, t) where p is an element of 1 Here, we abstract from protocols and refer to them generically as activities.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 637 a set of illocutionary particles (e.g. inform, request, offer); ag, ag are agent identifiers; r, r are role identifiers; Î´, an arbitrary ground term, is the content of the message, built from a shared content language; t âˆˆ N is a time stamp.",
                "The intuitive meaning of p(ag, r, ag , r , m, t) is that agent ag playing role r sent message m to agent ag playing role r at time t. An example of an illocution is inform(ag4, supp, ag3, client, offer(wire, 12), 10).",
                "Sometimes it is useful to refer to illocutions that are not fully grounded, that is, those that may contain uninstantiated (free) variables.",
                "In the description of a protocol, for instance, the precise values of the message exchanged can be left unspecified.",
                "During the enactment of the protocol agents will produce the actual values which will give rise to a ground illocution.",
                "We can thus define illocution schemata: Def. 4.",
                "An illocution schema Â¯I is any atomic formula p(ag, r, ag , r , Î´, t) in which some of the terms may either be variables or may contain variables. 3.2 Formal Definition of the Notion of NS We first define normative scenes as follows: Def. 5.",
                "A normative scene is a tuple s = ids, Î”s where ids is a scene identifier and Î”s is the set of atomic formulae Î´ (i.e. utterances and normative positions) that hold in s. We will also refer to Î”s as the state of normative scene s. For instance, a snapshot of the state of the delivery normative scene of our scenario could be represented as: Î”s = 8 < : utt(request(sean, client, kev, wm, receive(wire, 200), 20)), utt(accept(kev, wm, sean, client, receive(wire, 200), 30)), obl(inform(kev, wm, sean, client, delivered(wire, 200), 30)) 9 = ; That is, agent Sean taking up the client role has requested agent Kev (taking up the warehouse manager role wm) to receive 200kg of wire, and agent Kev is obliged to deliver 200kg of wire to Sean since he accepted the request.",
                "Note that the state of a normative scene Î”s evolves over time.",
                "These normative scenes are connected to one another via normative transitions that specify how utterances and normative positions in one scene affect other normative scenes.",
                "As mentioned above, activities are not independent since illocutions uttered in some of them may have an effect on other ones.",
                "Normative transition rules define the conditions under which a normative command is generated.",
                "These conditions are either utterances or normative positions associated with a given protocol (denoted e.g. activity : utterance) which yield a normative command, i.e. the addition or removal of another normative position, possibly related to a different activity.",
                "Our transition rules are thus defined: Def. 6.",
                "A normative transition rule R is of the form: R ::= V C V ::= ids : D | V, V D ::= N | utt(Â¯I) N ::= per(Â¯I) | prh(Â¯I) | obl(Â¯I) C ::= add(ids : N) | remove(ids : N) where Â¯I is an illocution schema, N is a normative position (i.e. permission, prohibition or obligation), ids is an identifier for activity s and C is a normative command.",
                "We endow our language with the usual semantics of rulebased languages [19].",
                "Rules map an existing normative structure to a new normative structure where only the state of the normative scenes change.",
                "In the definitions below we rely on the standard concept of substitution [9].",
                "Def. 7.",
                "A normative transition is a tuple b = idb, rb where idb is an identifier and rb is a normative transition rule.",
                "We are proposing to extend the notion of MAS, regulated by protocols, with an extra layer consisting of normative scenes and normative transitions.",
                "This layer is represented as a bi-partite graph that we term normative structure.",
                "A normative structure relates normative scenes and normative transitions specifying which normative positions are to be generated or removed in which normative scenes.",
                "Def. 8.",
                "A normative structure is a labelled bi-partite graph NS = Nodes, Edges, Lin , Lout .",
                "Nodes is a set SâˆªB where S is a set of normative scenes and B is a set of normative transitions.",
                "Edges is a set Ain âˆª Aout where Ain âŠ† S Ã— B is a set of input arcs labelled with an atomic formula using the labelling function Lin : Ain â†’ D; and Aout âŠ† B Ã— S is a set of output arcs labelled with a normative position using the labelling function Lout : Aout â†’ N. The following must hold: 1.",
                "Each atomic formula appearing in the LHS of a rule rb must be of the form (ids : D) where s âˆˆ S and D âˆˆ Î” and âˆƒain âˆˆ Ain such that ain = (s, b) and Lin (ain ) = D. 2.",
                "The atomic formula appearing in the RHS of a rule rb must be of the form add(ids : N) or remove(ids : N) where s âˆˆ S and âˆƒaout âˆˆ Aout such that aout = (b, s) and Lout (aout ) = N. 3. âˆ€a âˆˆ Ain such that a = (s, b) and b = idb, rb and Lin (a) = D then (ids:D) must occur in the LHS of rb. 4. âˆ€a âˆˆ Aout such that a = (b, s) and b = idb, rb and Lout (a) = N then add(ids : N) or remove(ids : N) must occur in the RHS of rb.",
                "The first two points ensure that every atomic formulae on the LHS of a normative transition rule labels an arc entering the appropriate normative transition in the normative structure, and that the atomic formula on the RHS labels the corresponding outgoing arc.",
                "Points three and four ensure that labels from all incoming arcs are used in the LHS of the normative transition rule that these arcs enter into, and that the labels from all outgoing arcs are used in the RHS of the normative transition rule that these arcs leave. 3.3 Intended Semantics The formal semantics will be defined via a mapping to Coloured Petri Nets in Section 5.1.",
                "Here we start defining the intended semantics of normative transition rules by describing how a rule changes a normative scene of an existing normative structure yielding a new normative structure.",
                "Each rule is triggered once for each substitution that unifies the left-hand side V of the rule with the state of the corresponding normative scenes.",
                "An atomic formula (i.e. an utterance or a normative position) holds iff it is unifiable with an utterance or normative position that belongs to the state of the corresponding normative scene.",
                "Every time a rule is triggered, the normative command specified on the right-hand side of that rule is carried out, intending to add or remove a normative position from the state of the corresponding normative scene.",
                "However, addition is not unconditional as conflicts may arise.",
                "This topic will be treated in Sections 4 and 6.1. 638 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.4 Example In our running example we have the following exemplary normative transition rule: â€ž payment : obl(inform(X, client, Y, acc, pay(Z, P, Q), T )), payment : utt(inform(X, client, Y, acc, pay(Z, P, Q), T )) Â« delivery : add(obl(inform(Y, wm, X, client, delivered(Z, Q), T ))) That is, during the payment activity, an obligation on client X to inform accountant Y about the payment P of item Z at time T and the corresponding utterance which fulfills this obligation allows the flow of a norm to the delivery activity.",
                "The norm is an obligation on agent Y (this time taking up the role of the warehouse manager wm) to send a message to client X that item Z has been delivered.",
                "We show in Figure 2 a diagrammatic representation of how activities and a normative structure relate: Payment Delivery Contract Normative Level Exit Registration Payment Delivery Negotiation Coordination Level Contract nt Figure 2: Activities and Normative Structure As illocutions are uttered during activities, normative positions arise.",
                "Utterances and normative positions are combined in transition rules, causing the flow of normative positions between normative scenes.",
                "The connection between the two levels is described in Section 6.2. 4.",
                "CONFLICT DEFINITION The terms deontic conflict and deontic inconsistency have been used interchangeably in the literature.",
                "However, in this paper we adopt the view of [7] in which the authors suggest that a deontic inconsistency arises when an action is simultaneously permitted and prohibited - since a permission may not be acted upon, no real conflict occurs.",
                "The situations when an action is simultaneously obliged and prohibited are, however, deontic conflicts, as both obligations and prohibitions influence behaviours in a conflicting fashion.",
                "The content of normative positions in this paper are illocutions.",
                "Therefore, a normative conflict arises when an illocution is simultaneously obliged and prohibited.",
                "We propose to use the standard notion of unification [9] to detect when a prohibition and a permission overlap.",
                "For instance, an obligation obl(inform(A1, R1, A2, R2, p(c, X), T)) and a prohibition prh(inform(a1, r1, a2, r2, p(Y, d), T )) are in conflict as they unify under Ïƒ = {A1/a1, R1/r1, A2/a2, R2/r2, Y/c, X/d, T/T }).",
                "We formally capture this notion: Def. 9.",
                "A (deontic) conflict arises between two normative positions N and N under a substitution Ïƒ, denoted as conflict(N, N , Ïƒ), if and only if N = prh(Â¯I), N = obl(Â¯I ) and unify(Â¯I,Â¯I , Ïƒ).",
                "That is, a prohibition and an obligation are in conflict if, and only if, their illocutions unify under Ïƒ.",
                "The substitution Ïƒ, called here the conflict set, unifies the agents, roles and atomic formulae.",
                "We assume that unify is a suitable implementation of a unification algorithm which i) always terminates (possibly failing, if a unifier cannot be found); ii) is correct; and iii) has linear computational complexity.",
                "Inconsistencies caused by the same illocution being simultaneously permitted and prohibited can be formalised similarly.",
                "In this paper we focus on prohibition/obligation conflicts, but the computational machinery introduced in Section 6.1 can equally be used to detect prohibition/permission inconsistencies, if we substitute modality obl for per. 5.",
                "FORMALISING CONFLICT-FREEDOM In this section we introduce some background knowledge on CPNs assuming a basic understanding of ordinary Petri Nets.",
                "For technical details we refer the reader to [16].",
                "We then map NSs to CPNs and analyse their properties.",
                "CPNs combine the strength of Petri nets with the strength of functional programming languages.",
                "On the one hand, Petri nets provide the primitives for the description of the synchronisation of concurrent processes.",
                "As noticed in [16], CPNs have a semantics which builds upon true concurrency, instead of interleaving.",
                "In our opinion, a true-concurrency semantics is easier to work with because it is the way we envisage the connection between the coordination level and the normative level of a multi-agent system to be.",
                "On the other hand, the functional programming languages used by CPNs provide the primitives for the definition of data types and the manipulation of their data values.",
                "Thus, we can readily translate expressions of a normative structure.",
                "Last but not least, CPNs have a well-defined semantics which unambiguously defines the behaviour of each CPN.",
                "Furthermore, CPNs have a large number of formal analysis methods and tools by which properties of CPNs can be proved.",
                "Summing up, CPNs provide us with all the necessary features to formally reason about normative structures given that an adequate mapping is provided.",
                "In accordance with Petri nets, the states of a CPN are represented by means of places.",
                "But unlike Petri Nets, each place has an associated data type determining the kind of data which the place may contain.",
                "A state of a CPN is called a marking.",
                "It consists of a number of tokens positioned on the individual places.",
                "Each token carries a data value which has the type of the corresponding place.",
                "In general, a place may contain two or more tokens with the same data value.",
                "Thus, a marking of a CPN is a function which maps each place into a multi-set2 of tokens of the correct type.",
                "One often refers to the token values as token colours and one also refers to the data types as colour sets.",
                "The types of a CPN can be arbitrarily complex.",
                "Actions in a CPN are represented by means of transitions.",
                "An incoming arc into a transition from a place indicates that the transition may remove tokens from the corresponding place while an outgoing arc indicates that the transition may add tokens.",
                "The exact number of tokens and their data values are determined by the arc expressions, which are encoded using the programming language chosen for the CPN.",
                "A transition is enabled in a CPN if and only if all the 2 A multi-set (or bag) is an extension to the notion of set, allowing the possibility of multiple appearances of the same element.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 639 variables in the expressions of its incoming arcs are bound to some value(s) (each one of these bindings is referred to as a binding element).",
                "If so, the transition may occur by removing tokens from its input places and adding tokens to its output places.",
                "In addition to the arc expressions, it is possible to attach a boolean guard expression (with variables) to each transition.",
                "Putting all the elements above together we obtain a formal definition of CPN that shall be employed further ahead for mapping purposes.",
                "Def. 10.",
                "A CPN is a tuple Î£, P, T, A, N, C, G, E, I where: (i) Î£ is a finite set of non-empty types, also called colour sets; (ii) P is a finite set of places; (iii) T is a finite set of transitions; (iv) A is a finite set of arcs; (v) N is a node function defined from A into P Ã— T âˆª T Ã— P; (vi) C is a colour function from P into Î£; (vii) G is a guard function from T into expressions; (viii) E is an arc expression function from A into expressions; (ix) I is an initialisation function from P into closed expressions; Notice that the informal explanation of the enabling and occurrence rules given above provides the foundations to understand the behaviour of a CPN.",
                "In accordance with ordinary Petri nets, the concurrent behaviour of a CPN is based on the notion of step.",
                "Formally, a step is a non-empty and finite multi-set over the set of all binding elements.",
                "Let step S be enabled in a marking M. Then, S may occur, changing the marking M to M .",
                "Moreover, we say that marking M is directly reachable from marking M by the occurrence of step S, and we denote it by M[S > M .",
                "A finite occurrence sequence is a finite sequence of steps and markings: M1[S1 > M2 . . .",
                "Mn[Sn > Mn+1 such that n âˆˆ N and Mi[Si > Mi+1 âˆ€i âˆˆ {1, . . . , n}.",
                "The set of all possible markings reachable for a net Net from a marking M is called its reachability set, and is denoted as R(Net, M). 5.1 Mapping to Coloured Petri Nets Our normative structure is a labelled bi-partite graph.",
                "The same is true for a Coloured Petri Net.",
                "We are presenting a mapping f from one to the other, in order to provide semantics for the normative structure and prove properties about it by using well-known theoretical results from work on CPNs.",
                "The mapping f makes use of correspondences between normative scenes and CPN places, normative transitions and CPN transitions and finally, between arc labels and CPN arc expressions.",
                "S â†’ P B â†’ T Lin âˆª Lout â†’ E The set of types is the singleton set containing the colour NP (i.e.",
                "Î£ = {NP}).",
                "This complex type is structured as follows (we use CPN-ML [4] syntax): color NPT = with Obl | Per | Prh | NoMod color IP = with inform | declare | offer color UTT = record illp : IP ag1, role1, ag2, role2 : string content: string time : int color NP = record mode : NPT illoc : UTT Modelling illocutions as norms without modality (NoMod) is a formal trick we use to ensure that sub-nets can be combined as explained below.",
                "Arcs are mapped almost directly.",
                "A is a finite set of arcs and N is a node function, such that âˆ€a âˆˆ A âˆƒa âˆˆ Ain âˆªAout .",
                "N(a) = a .",
                "The initialisation function I is defined as I(p) = Î”s (âˆ€s âˆˆ S where p is obtained from s using the mapping; remember that s = ids, Î”s ).",
                "Finally, the colour function C assigns the colour NP to every place: C(p) = NP (âˆ€p âˆˆ P).",
                "We are not making use of the guard function G. In future work, this function can be used to model constraints when we extend the expressiveness of our norm language. 5.2 Properties of Normative Structures Having defined the mapping from normative structures to Coloured Petri Nets, we now look at properties of CPNs that help us understand the complexity of conflict detection.",
                "One question we would like to answer is, whether at a given point in time, a given normative structure is conflict-free.",
                "Such a snapshot of a normative structure corresponds to a marking in the mapped CPN.",
                "Def. 11.",
                "Given a marking Mi, this marking is conflictfree if Â¬âˆƒp âˆˆ P. âˆƒnp1, np2 âˆˆ Mi(p) such that np1.mode = Obl and np2.mode = Prh and np1.illoc and np2.illoc unify under a valid substitution.",
                "Another interesting question would be, whether a conflict will occur from such a snapshot of the system by propagating the normative positions.",
                "In order to answer this question, we first translate the snapshot of the normative structure to the corresponding CPN and then execute the finite occurence sequence of markings and steps, verifying the conflict-freedom of each marking as we go along.",
                "Def. 12.",
                "Given a marking Mi, a finite occurrence sequence Si, Si+1, ..., Sn is called conflict-free, if and only if Mi[Si > Mi+1 . . .",
                "Mn[Sn > Mn+1 and Mk is conflict-free for all k such that i â‰¤ k â‰¤ n + 1.",
                "However, the main question we would like to investigate, is whether or not a given normative structure is conflictresistant, that is, whether or not the agents enacting the MAS are able to bring about conflicts through their actions.",
                "As soon as one includes the possibility of actions (or utterances) from autonomous agents, one looses determinism.",
                "Having mapped the normative structure to a CPN, we now add CPN models of the agents interactions.",
                "Each form of agent interaction (i.e. each activity) can be modelled using CPNs along the lines of Cost et al. [5].",
                "These nondeterministic CPNs feed tokens into the CPN that models the normative structure.",
                "This leads to the introduction of non-determinism into the combined CPN.",
                "The lower half of figure 3 shows part of a CPN model of an agent protocol where the arc denoted with 1 represents some utterance of an illocution by an agent.",
                "The target transition of this arc, not only moves a token on to the next state of this CPN, but also places a token in the place corresponding to the appropriate normative scene in the CPN model of the normative structure (via arc 2).",
                "Transition 3 finally could propagate that token in form of an obligation, for example.",
                "Thus, from a given marking, many different occurrence sequences are possible depending on the agents actions.",
                "We make use of the reachability set R to define a situation in which agents cannot cause conflicts. 640 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) Figure 3: Constructing the combined CPN Def. 13.",
                "Given a net N, a marking M is conflict-resistant if and only if all markings in R(N,M) are conflict-free.",
                "Checking conflict-freedom of a marking can be done in polynomial time by checking all places of the CPN for conflicting tokens.",
                "Conflict-freedom of an occurrence sequence in the CPN that represents the normative structure can also be done in polynomial time since this sequence is deterministic given a snapshot.",
                "Whether or not a normative structure is designed safely corresponds to checking the conflict-resistance of the initial marking M0.",
                "Now, verifying conflict-resistance of a marking becomes a very difficult task.",
                "It corresponds to the reachability problem in a CPN: can a state be reached or a marking achieved, that contains a conflict?.",
                "This reachability problem is known to be NP-complete for ordinary Petri Nets [22] and since CPNs are functionally identical, we cannot hope to verify conflict-resistance of a normative structure off-line in a reasonable amount of time.",
                "Therefore, distributed, run-time mechanisms are needed to ensure that a normative structure maintains consistency.",
                "We present one such mechanism in the following section. 6.",
                "MANAGING NORMATIVE STRUCTURES Once a conflict (as defined in Section 4) has been detected, we propose to employ the unifier to resolve the conflict.",
                "In our example, if the variables in prh(inform(a1, r1, a2, r2, p(Y, d), T )) do not get the values specified in substitution Ïƒ then there will not be a conflict.",
                "However, rather than computing the complement set of a substitution (which can be an infinite set) we propose to annotate the prohibition with the unifier itself and use it to determine what the variables of that prohibition cannot be in future unifications in order to avoid a conflict.",
                "We therefore denote annotated prohibitions as prh(Â¯I) Î£, where Î£ = {Ïƒ1, . . . , Ïƒn}, is a set of unifiers.",
                "Annotated norms3 are interpreted as deontic constructs with curtailed influences, that is, their effect (on agents, roles and illocutions) has been limited by the set Î£ of unifiers.",
                "A prohibition may be in conflict with various obligations in a given normative scene s = id, Î” and we need to record (and possibly avoid) all these conflicts.",
                "We define below an algorithm which ensures that a normative position will be added to a normative scene in such a way that it will not cause any conflicts. 3 Although we propose to curtail prohibitions, the same machinery can be used to define the curtailment of obligations instead.",
                "These different policies are dependent on the intended deontic semantics and requirements of the systems addressed.",
                "For instance, some MASs may require that their agents should not act in the presence of conflicts, that is, the obligation should be curtailed. 6.1 Conflict Resolution We propose a fine-grained way of resolving normative conflicts via unification.",
                "We detect the overlapping of the influences of norms , i.e. how they affect the behaviour of the concerned agents, and we curtail the influence of the normative position, by appropriately using the annotations when checking if the norm applies to illocutions.",
                "The algorithm shown in Figure 4 depicts how we maintain a conflict-free set of norms.",
                "It adds a given norm N to an existing, conflictfree normative state Î”, obtaining a resulting new normative state Î” which is conflict-free, that is, its prohibitions are annotated with a set of conflict sets indicating which bindings for variables have to be avoided for conflicts not to take place. algorithm addNorm(N, Î”) begin 1 timestamp(N) 2 case N of 3 per(Â¯I): Î” := Î” âˆª {N} 4 prh(I): if N âˆˆ Î” s.t. conflict(N, N , Ïƒ) then Î” := Î” 5 else Î” := Î” âˆª {N} 6 prh(Â¯I): 7 begin 8 Î£ := âˆ… 9 for each N âˆˆ Î” do 10 if conflict(N, N , Ïƒ) then Î£ := Î£ âˆª {Ïƒ} 11 Î” := Î” âˆª {N Î£} 12 end 13 obl(Â¯I): 14 begin 15 Î”1 := âˆ…; Î”2 := âˆ… 16 for each (N Î£) âˆˆ Î” do 17 if N = prh(I) then 18 if conflict(N , N, Ïƒ) then Î”1 := Î”1 âˆª {N Î£} 19 else nil 20 else 21 if conflict(N , N, Ïƒ) then 22 begin 23 Î”1 := Î”1 âˆª {N Î£} 24 Î”2 := Î”2 âˆª {N (Î£ âˆª {Ïƒ})} 25 end 26 Î” := (Î” âˆ’ Î”1) âˆª Î”2 âˆª {N} 27 end 28 end case 29 return Î” end Figure 4: Algorithm to Preserve Conflict-Freedom The algorithm uses a case of structure to differentiate the different possibilities for a given norm N. Line 3 addresses the case when the given norm is a permission: N is simply added to Î”.",
                "Lines 4-5 address the case when we attempt to add a ground prohibition to a normative state: if it conflicts with any obligation, then it is discarded; otherwise it is added to the normative state.",
                "Lines 6-12 describe the situation when the normative position to be added is a nonground prohibition.",
                "In this case, the algorithm initialises Î£ to an empty set and loops (line 9-10) through the norms N in the old normative state Î”.",
                "Upon finding one that conflicts with N, the algorithm updates Î£ by adding the newly found conflict set Ïƒ to it (line 10).",
                "By looping through Î”, we are able to check any conflicts between the new prohibition and the existing obligations, adequately building the annotation Î£ to be used when adding N to Î” in line 11.",
                "Lines 13-27 describe how a new obligation is accommodated to an existing normative state.",
                "We make use of two initially empty, temporary sets, Î”1, Î”2.",
                "The algorithm loops through Î” (lines 16-25) picking up those annotated prohibitions N Î£ which conflict with the new obligation.",
                "There are, however, two cases to deal with: the one when a ground The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 641 prohibition is found (line 17), and its exception, covering non-ground prohibitions (line 20).",
                "In both cases, the old prohibition is stored in Î”1 (lines 18 and 23) to be later removed from Î” (line 26).",
                "However, in the case of a nonground prohibition, the algorithm updates its annotation of conflict sets (line 24).",
                "The loop guarantees that an exhaustive (linear) search through a normative state takes place, checking if the new obligation is in conflict with any existing prohibitions, possibly updating the annotations of these conflicting prohibitions.",
                "In line 26 the algorithm builds the new updated Î” by removing the old prohibitions stored in Î”1 and adding the updated prohibitions stored in Î”2 (if any), as well as the new obligation N. Our proposed algorithm is correct in that, for a given normative position N and a normative state Î”, it provides a new normative state Î” in which all prohibitions have annotations recording how they unify with existing obligations.",
                "The annotations can be empty, though: this is the case when we have a ground prohibition or a prohibition which does not unify/conflict with any obligation.",
                "Permissions do not affect our algorithm and they are appropriately dealt with (line 3).",
                "Any attempt to insert a ground prohibition which conflicts, yields the same normative state (line 4).",
                "When a new obligation is being added then the algorithm guarantees that all prohibitions are considered (lines 14-27), leading to the removal of conflicting ground prohibitions or the update of annotations of non-ground prohibitions.",
                "The algorithm always terminates: the loops are over a finite set Î” and the conflict checks and set operations always terminate.",
                "The complexity of the algorithm is linear: the set Î” is only examined once for each possible case of norm to be added.",
                "When managing normative states we may also need to remove normative positions.",
                "This is straightforward: permissions can be removed without any problems; annotated prohibitions can also be removed without further considerations; obligations, however, require some housekeeping.",
                "When an obligation is to be removed, we must check it against all annotated prohibitions in order to update their annotations.",
                "We apply the conflict check and obtain a unifier, then remove this unifier from the prohibitions annotation.",
                "We invoke the removal algorithm as removeNorm(N, Î”): it returns a new normative state Î” in which N has been removed, with possible alterations to other normative positions as explained. 6.2 Enactment of a Normative Structure The enactment of a normative structure amounts to the parallel, distributed execution of normative scenes and normative transitions.",
                "For illustrative purposes, hereafter we shall describe the interplay between the payment and delivery normative scenes and the normative transition nt linking them in the upper half of figure 2.",
                "With this aim, consider for instance that obl(inform(jules, client, rod, acc, pay(copper, 400, 350), T) âˆˆ Î”payment and that Î”delivery holds prh(inform(rod,wm, jules, client, delivered(Z, Q), T)).",
                "Such states indicate that client Jules is obliged to pay Â£400 for 350kg of copper to accountant Rod according to the payment normative scene, whereas Rod, taking up the role of warehouse manager this time, is prohibited to deliver anything to client Jules according to the delivery normative scene.",
                "For each normative scene, the enactment process goes as follows.",
                "Firstly, it processes its incoming message queue that contains three types of messages: utterances from the activity it is linked to; and normative commands either to add or remove normative positions.",
                "For instance, in our example, the payment normative scene collects the illocution I = utt((inform(jules, client, rod, acc, pay(copper, 400, 350), 35)) standing for client Jules pending payment for copper (via arrow A in figure 2).",
                "Utterances are timestamped and subsequently added to the normative state.",
                "We would have Î”payment = Î”payment âˆª {I}, in our example.",
                "Upon receiving normative commands to either add or remove a normative position, the normative scene invokes the corresponding addition or removal algorithm described in Section 6.1.",
                "Secondly, the normative scene acknowledges its state change by sending a trigger message to every outgoing normative transition it is connected to.",
                "In our example, the payment normative scene would be signalling its state change to normative transition nt.",
                "For normative transitions, the process works differently.",
                "Because each normative transition controls the operation of a single rule, upon receiving a trigger message, it polls every incoming normative scene for substitutions for the relevant illocution schemata on the LHS of its rule.",
                "In our example, nt (being responsible for the rule described in Section 3.4), would poll the payment normative scene (via arrow B) for substitutions.",
                "Upon receiving replies from them (in the form of sets of substitutions together with time-stamps), it has to unify substitutions from each of these normative scenes.",
                "For each unification it finds, the rule is fired, and hence the corresponding normative command is sent along to the output normative scene.",
                "The normative transition then keeps track of the firing message it sent on and of the time-stamps of the normative positions that triggered the firing.",
                "This is done to ensure that the very same normative positions in the LHS of a rule only trigger its firing once.",
                "In our example, nt would be receiving Ïƒ = {X/jules, Y/rod, Z/copper, Q/350} from the payment normative scene.",
                "Since the substitions in Ïƒ unify with nts rule, the rule is fired, and the normative command add(delivery : obl(rod, wm, jules, client, delivered(copper, 350), T)) is sent along to the delivery normative scene to oblige Rod to deliver to client Jules 350kg of copper.",
                "After that, the delivery normative scene would invoke the addNorm algorithm from figure 4 with Î”delivery and N = obl(rod, wm, jules, client, delivered(copper, 350)) as arguments. 7.",
                "RELATED WORK AND CONCLUSIONS Our contributions in this paper are three-fold.",
                "Firstly, we introduce an approach for the management of and reasoning about norms in a distributed manner.",
                "To our knowledge, there is little work published in this direction.",
                "In [8, 21], two languages are presented for the distributed enforcement of norms in MAS.",
                "However, in both works, each agent has a local message interface that forwards legal messages according to a set of norms.",
                "Since these interfaces are local to each agent, norms can only be expressed in terms of actions of that agent.",
                "This is a serious disadvantage, e.g. when one needs to activate an obligation to one agent due to a certain message of another one.",
                "The second contribution is the proposal of a normative structure.",
                "The notion is fruitful because it allows the separation of normative and procedural concerns.",
                "The normative structure we propose makes evident the similarity between the propagation of normative positions and the propagation 642 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) of tokens in Coloured Petri Nets.",
                "That similarity readily suggests a mapping between the two, and gives grounds to a convenient analytical treatment of the normative structure, in general, and the complexity of conflict detection, in particular.",
                "The idea of modelling interactions (in the form of conversations) via Petri Nets has been investigated in [18], where the interaction medium and individual agents are modelled as CPN sub-nets that are subsequently combined for analysis.",
                "In [5], conversations are first designed and analysed at the level of CPNs and thereafter translated into protocols.",
                "Lin et al. [20] map conversation schemata to CPNs.",
                "To our knowledge, the use of this representation in the support of conflict detection in regulated MAS has not been reported elsewhere.",
                "Finally, we present a distributed mechanism to resolve normative conflicts.",
                "Sartor [25] treats normative conflicts from the point of view of legal theory and suggests a way to order the norms involved.",
                "His idea is implemented in [12] but requires a central resource for norm maintenance.",
                "The approach to conflict detection and resolution is an adaptation and extension of the work on instantiation graphs reported in [17] and a related algorithm in [27].",
                "The algorithm presented in the current paper can be used to manage normative states distributedly: normative scenes that happen in parallel have an associated normative state Î” to which the algorithm is independently applied each time a new norm is to be introduced.",
                "These three contributions we present in this paper open many possibilities for future work.",
                "We should mention first, that as a broad strategy we are working on a generalisation of the notion of normative structure to make it operate with different coordination models, with richer deontic content and on top of different computational realisations of regulated MAS.",
                "As a first step in this direction we are taking advantage of the de-coupling between interaction protocols and declarative normative guidance that the normative structure makes available, to provide a normative layer for <br>electronic institution</br>s (as defined in [1]).",
                "We expect such coupling will endow <br>electronic institution</br>s with a more flexible -and more expressive- normative environment.",
                "Furthermore, we want to extend our model along several directions: (1) to handle negation and constraints as part of the norm language, and in particular the notion of time; (2) to accommodate multiple, hierarchical norm authorities based on roles, along the lines of Cholvy and Cuppens [3] and power relationships as suggested by Carabelea et al. [2]; (3) to capture in the conflict resolution algorithm different semantics relating the deontic notions by supporting different axiomations (e.g., relative strength of prohibition versus obligation, default deontic notions, deontic inconsistencies).",
                "On the theoretical side, we intend to use analysis techniques of CPNs in order to characterise classes of CPNs (e.g., acyclic, symmetric, etc.) corresponding to families of Normative Structures that are susceptible to tractable offline conflict detection.",
                "The combination of these techniques along with our online conflict resolution mechanisms is intended to endow MAS designers with the ability to incorporate norms into their systems in a principled way. 8.",
                "REFERENCES [1] J. L. Arcos, M. Esteva, P. Noriega, J.",
                "A. RodrÂ´Ä±guez, and C. Sierra.",
                "Engineering open environments with <br>electronic institution</br>s.",
                "Journal on Engineering Applications of Artificial Intelligence, 18(2):191-204, 2005. [2] C. Carabelea, O. Boissier, and C. Castelfranchi.",
                "Using social power to enable agents to reason about being part of a group.",
                "In 5th Internat.",
                "Workshop, ESAW 2004, pages 166-177, 2004. [3] L. Cholvy and F. Cuppens.",
                "Solving normative conflicts by merging roles.",
                "In Fifth International Conference on Artificial Intelligence and Law, Washington, USA, 1995. [4] S. Christensen and T. B. Haagh.",
                "Design CPN - overview of CPN ML syntax.",
                "Technical report, University of Aarhus, 1996. [5] R. S. Cost, Y. Chen, T. W. Finin, Y. Labrou, and Y. Peng.",
                "Using colored petri nets for conversation modeling.",
                "In Issues in Agent Communication, pages 178-192, London, UK, 2000. [6] F. Dignum.",
                "Autonomous Agents with Norms.",
                "Artificial Intelligence and Law, 7(1):69-79, 1999. [7] A. Elhag, J. Breuker, and P. Brouwer.",
                "On the Formal Analysis of Normative Conflicts.",
                "Information & Comms.",
                "Techn.",
                "Law, 9(3):207-217, Oct. 2000. [8] M. Esteva, W. Vasconcelos, C. Sierra, and J.",
                "A. RodrÂ´Ä±guez-Aguilar.",
                "Norm consistency in <br>electronic institution</br>s. volume 3171 (LNAI), pages 494-505.",
                "Springer-Verlag, 2004. [9] M. Fitting.",
                "First-Order Logic and Automated Theorem Proving.",
                "Springer-Verlag, New York, U.S.A., 1990. [10] N. Fornara, F. Vigan`o, and M. Colombetti.",
                "An Event Driven Approach to Norms in Artificial Institutions.",
                "In AAMAS05 Workshop: Agents, Norms and Institutions for Regulated Multiagent Systems (ANI@REM), Utrecht, 2005. [11] D. Gaertner, P. Noriega, and C. Sierra.",
                "Extending the BDI architecture with commitments.",
                "In Proceedings of the 9th International Conference of the Catalan Association of Artificial Intelligence, 2006. [12] A. GarcÂ´Ä±a-Camino, P. Noriega, and J.-A.",
                "RodrÂ´Ä±guez-Aguilar.",
                "An Algorithm for Conflict Resolution in Regulated Compound Activities.",
                "In 7th Int.Workshop - ESAW 06, 2006. [13] A. GarcÂ´Ä±a-Camino, J.-A.",
                "RodrÂ´Ä±guez-Aguilar, C. Sierra, and W. Vasconcelos.",
                "A Distributed Architecture for Norm-Aware Agent Societies.",
                "In DALT III, volume 3904 (LNAI), pages 89-105.",
                "Springer, 2006. [14] F. Giunchiglia and L. Serafini.",
                "Multi-language hierarchical logics or: How we can do without modal logics.",
                "Artificial Intelligence, 65(1):29-70, 1994. [15] J. Habermas.",
                "The Theory of Communication Action, Volume One, Reason and the Rationalization of Society.",
                "Beacon Press, 1984. [16] K. Jensen.",
                "Coloured Petri Nets: Basic Concepts, Analysis Methods and Practical Uses (Volume 1).",
                "Springer, 1997. [17] M. Kollingbaum and T. Norman.",
                "Strategies for resolving norm conflict in practical reasoning.",
                "In ECAI Workshop Coordination in Emergent Agent Societies 2004, 2004. [18] J.-L. Koning, G. Francois, and Y. Demazeau.",
                "Formalization and pre-validation for interaction protocols in a multi agent systems.",
                "In ECAI, pages 298-307, 1998. [19] B. Kramer and J. Mylopoulos.",
                "Knowledge Representation.",
                "In S. C. Shapiro, editor, Encyclopedia of Artificial Intelligence, volume 1, pages 743-759.",
                "John Wiley & Sons, 1992. [20] F. Lin, D. H. Norrie, W. Shen, and R. Kremer.",
                "A schema-based approach to specifying conversation policies.",
                "In Issues in Agent Communication, pages 193-204, 2000. [21] N. Minsky.",
                "Law Governed Interaction (LGI): A Distributed Coordination and Control Mechanism (An Introduction, and a Reference Manual).",
                "Technical report, Rutgers University, 2005. [22] T. Murata.",
                "Petri nets: Properties, analysis and applications.",
                "Proceedings of the IEEE, 77(4):541-580, 1989. [23] S. Parsons, C. Sierra, and N. Jennings.",
                "Agents that reason and negotiate by arguing.",
                "Journal of Logic and Computation, 8(3):261-292, 1998. [24] A. Ricci and M. Viroli.",
                "Coordination Artifacts: A Unifying Abstraction for Engineering Environment-Mediated Coordination in MAS.",
                "Informatica, 29:433-443, 2005. [25] G. Sartor.",
                "Normative conflicts in legal reasoning.",
                "Artificial Intelligence and Law, 1(2-3):209-235, June 1992. [26] M. Sergot.",
                "A Computational Theory of Normative Positions.",
                "ACM Trans.",
                "Comput.",
                "Logic, 2(4):581-622, 2001. [27] W. W. Vasconcelos, M. Kollingbaum, and T. Norman.",
                "Resolving Conflict and Inconsistency in Norm-Regulated Virtual Organisations.",
                "In Proceedings of AAMAS 07, Hawaii, USA, 2007.",
                "IFAAMAS. [28] G. H. von Wright.",
                "Norm and Action: A Logical Inquiry.",
                "Routledge and Kegan Paul, London, 1963. [29] M. Wooldridge.",
                "An Introduction to Multiagent Systems.",
                "John Wiley & Sons, Chichester, UK, Feb. 2002.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 643"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Como primer paso en esta direcciÃ³n, estamos aprovechando el desacoplamiento entre los protocolos de interacciÃ³n y la orientaciÃ³n normativa declarativa que la estructura normativa pone a disposiciÃ³n, para proporcionar una capa normativa para las \"instituciones electrÃ³nicas\" (como se define en [1]).",
                "Esperamos que dicho acoplamiento doten \"instituciones electrÃ³nicas\" con un entorno normativo mÃ¡s flexible y mÃ¡s expresivo.",
                "IngenierÃ­a de entornos abiertos con \"instituciÃ³n electrÃ³nica\" s.",
                "Consistencia de la norma en \"instituciÃ³n electrÃ³nica\" s.Volumen 3171 (LNAi), pÃ¡ginas 494-505."
            ],
            "translated_text": "",
            "candidates": [
                "instituciÃ³n electrÃ³nica",
                "instituciones electrÃ³nicas",
                "instituciÃ³n electrÃ³nica",
                "instituciones electrÃ³nicas",
                "instituciÃ³n electrÃ³nica",
                "instituciÃ³n electrÃ³nica",
                "instituciÃ³n electrÃ³nica",
                "instituciÃ³n electrÃ³nica"
            ],
            "error": []
        },
        "organisation": {
            "translated_key": "organizaciÃ³n",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Distributed Norm Management in Regulated Multi-Agent Systems âˆ— Dorian Gaertner Dept.",
                "of Computing, Imperial College London, London SW7 2AZ, United Kingdom dg00@doc.ic.ac.uk Andres Garcia-Camino, Pablo Noriega, J.-A.",
                "Rodriguez-Aguilar IIIA-CSIC, 08193 Bellaterra, Spain {andres,pablo,jar}@iiia.csic.es Wamberto Vasconcelos Dept. of Computing Science, University of Aberdeen, Aberdeen AB24 3UE, United Kingdom wvasconcelos@acm.org ABSTRACT Norms are widely recognised as a means of coordinating multi-agent systems.",
                "The distributed management of norms is a challenging issue and we observe a lack of truly distributed computational realisations of normative models.",
                "In order to regulate the behaviour of autonomous agents that take part in multiple, related activities, we propose a normative model, the Normative Structure (NS), an artifact that is based on the propagation of normative positions (obligations, prohibitions, permissions), as consequences of agents actions.",
                "Within a NS, conflicts may arise due to the dynamic nature of the MAS and the concurrency of agents actions.",
                "However, ensuring conflict-freedom of a NS at design time is computationally intractable.",
                "We show this by formalising the notion of conflict, providing a mapping of NSs into Coloured Petri Nets and borrowing well-known theoretical results from that field.",
                "Since online conflict resolution is required, we present a tractable algorithm to be employed distributedly.",
                "We then demonstrate that this algorithm is paramount for the distributed enactment of a NS.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Languages and structures General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION A fundamental feature of open, regulated multi-agent systems in which autonomous agents interact, is that participating agents are meant to comply with the conventions of the system.",
                "Norms can be used to model such conventions and hence as a means to regulate the observable behaviour of agents [6, 29].",
                "There are many contributions on the subject of norms from sociologists, philosophers and logicians (e.g., [15, 28]).",
                "However, there are very few proposals for computational realisations of normative models - the way norms can be integrated in the design and execution of MASs.",
                "The few that exist (e.g. [10, 13, 24]), operate in a centralised manner which creates bottlenecks and single points-of-failure.",
                "To our knowledge, no proposal truly supports the distributed enactment of normative environments.",
                "In our paper we approach that problem and propose means to handle conflicting commitments in open, regulated, multiagent systems in a distributed manner.",
                "The type of regulated MAS we envisage consists of multiple, concurrent, related activities where agents interact.",
                "Each agent may concurrently participate in several activities, and change from one activity to another.",
                "An agents actions within an activity may have consequences in the form of normative positions (i.e. obligations, permissions, and prohibitions) [26] that may constrain its future behaviour.",
                "For instance, a buyer agent who runs out of credit may be forbidden to make further offers, or a seller agent is obliged to deliver after closing a deal.",
                "We assume that agents may choose not to fulfill all their obligations and hence may be sanctioned by the MAS.",
                "Notice that, when activities are distributed, normative positions must flow from the activities in which they are generated to those in which they take effect.",
                "For instance, the sellers obligation above must flow (or be propagated) from a negotiation activity to a delivery activity.",
                "Since in an open, regulated MAS one cannot embed normative aspects into the agents design, we adopt the view that the MAS should be supplemented with a separate set of norms that further regulates the behaviour of participating agents.",
                "In order to model the separation of concerns between the coordination level (agents interactions) and the normative level (propagation of normative positions), we propose an artifact called the Normative Structure (NS).",
                "Within a NS conflicts may arise due to the dynamic nature of the MAS and the concurrency of agents actions.",
                "For instance, an agent may be obliged and prohibited to do the 636 978-81-904262-7-5 (RPS) c 2007 IFAAMAS very same action in an activity.",
                "Since the regulation of a MAS entails that participating agents need to be aware of the validity of those actions that take place within it, such conflicts ought to be identified and possibly resolved if a claim of validity is needed for an agent to engage in an action or be sanctioned.",
                "However, ensuring conflict-freedom of a NS at design time is computationally intractable.",
                "We show this by formalising the notion of conflict, providing a mapping of NSs into Coloured Petri Nets (CPNs) and borrowing well-known theoretical results from the field of CPNs.",
                "We believe that online conflict detection and resolution is required.",
                "Hence, we present a tractable algorithm for conflict resolution.",
                "This algorithm is paramount for the distributed enactment of a NS.",
                "The paper is organised as follows.",
                "In Section 2 we detail a scenario to serve as an example throughout the paper.",
                "Next, in Section 3 we formally define the normative structure artifact.",
                "Further on, in Section 4 we formalise the notion of conflict to subsequently analyse the complexity of conflict detection in terms of CPNs in Section 5.",
                "Section 6 describes the computational management of NSs by describing their enactment and presenting an algorithm for conflict resolution.",
                "Finally, we comment on related work, draw conclusions and report on future work in Section 7. 2.",
                "SCENARIO We use a supply-chain scenario in which companies and individuals come together at an online marketplace to conduct business.",
                "The overall transaction procedure may be organised as six distributed activities, represented as nodes in the diagram in Figure 1.",
                "They involve different participants whose behaviour is coordinated through protocols.",
                "In this scenario agents can play one of four roles: marExit Registration Payment Delivery Negotiation Coordination Model Contract Figure 1: Activity Structure of the Scenario ketplace accountant (acc), client, supplier (supp) and warehouse managers (wm).",
                "The arrows connecting the activities represent how agents can move from one activity to another.",
                "After registering at the marketplace, clients and suppliers get together in an activity where they negotiate the terms of their transaction, i.e. prices, amounts of goods to be delivered, deadlines and other details.",
                "In the contract activity, the order becomes established and an invoice is prepared.",
                "The client will then participate in a payment activity, verifying his credit-worthiness and instructing his bank to transfer the correct amount of money.",
                "The supplier in the meantime will arrange for the goods to be delivered (e.g. via a warehouse manager) in the delivery activity.",
                "Finally, agents can leave the marketplace conforming to a predetermined exit protocol.",
                "The marketplace accountant participates in most of the activities as a trusted provider of auditing tools.",
                "In the rest of the paper we shall build on this scenario to exemplify the notion of normative structure and to illustrate our approach to conflict detection and resolution in a distributed setting. 3.",
                "NORMATIVE STRUCTURE In MASs agents interact according to protocols which naturally are distributed.",
                "We advocate that actions in one such protocol may have an effect on the enactment of other protocols.",
                "Certain actions can become prohibited or obligatory, for example.",
                "We take normative positions to be obligations, prohibitions and permissions akin to work described in [26].",
                "The intention of adding or removing a normative position we call normative command.",
                "Occurrences of normative positions in one protocol may also have consequences for other protocols1 .",
                "In order to define our norm language and specify how normative positions are propagated, we have been inspired by multi-context systems [14].",
                "These systems allow the structuring of knowledge into distinct formal theories and the definition of relationships between them.",
                "The relationships are expressed as bridge rules - deducibility of formulae in some contexts leads to the deduction of other formulae in other contexts.",
                "Recently, these systems have been successfully used to define agent architectures [11, 23].",
                "The metaphor translates to our current work as follows: the utterance of illocutions and/or the existence of normative positions in some normative scenes leads to the deduction of normative positions in other normative scenes.",
                "We are concerned with the propagation and distribution of normative positions within a network of distributed, normative scenes as a consequence of agents actions.",
                "We take normative scenes to be sets of normative positions and utterances that are associated with an underlying interaction protocol corresponding to an activity.",
                "In this section, we first present a simple language capturing these aspects and formally introduce the notions of normative scene, normative transition rule and normative structure.",
                "We give the intended semantics of these rules and show how to control a MAS via norms in an example. 3.1 Basic Concepts The building blocks of our language are terms and atomic formulae: Def. 1.",
                "A term, denoted as t, is (i) any constant expressed using lowercase (with or without subscripts), e.g. a, b0, c or (ii) any variable expressed using uppercase (with or without subscripts), e.g.",
                "X, Y, Zb or (iii) any function f(t1, . . . , tn), where f is an n-ary function symbol and t1, .., tn are terms.",
                "Some examples of terms and functions are Credit, price or offer(bible, 30) being respectively a variable, a constant and a function.",
                "We will be making use of identifiers throughout the paper, which are constant terms and also need the following definition: Def. 2.",
                "An atomic formula is any construct p(t1, . . . , tn), where p is an n-ary predicate symbol and t1, . . . , tn are terms.",
                "The set of all atomic formulae is denoted as Î”.",
                "We focus on an expressive class of MASs in which interaction is carried out by means of illocutionary speech acts exchanged among participating agents: Def. 3.",
                "Illocutions I are ground atomic formulae which have the form p(ag, r, ag , r , Î´, t) where p is an element of 1 Here, we abstract from protocols and refer to them generically as activities.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 637 a set of illocutionary particles (e.g. inform, request, offer); ag, ag are agent identifiers; r, r are role identifiers; Î´, an arbitrary ground term, is the content of the message, built from a shared content language; t âˆˆ N is a time stamp.",
                "The intuitive meaning of p(ag, r, ag , r , m, t) is that agent ag playing role r sent message m to agent ag playing role r at time t. An example of an illocution is inform(ag4, supp, ag3, client, offer(wire, 12), 10).",
                "Sometimes it is useful to refer to illocutions that are not fully grounded, that is, those that may contain uninstantiated (free) variables.",
                "In the description of a protocol, for instance, the precise values of the message exchanged can be left unspecified.",
                "During the enactment of the protocol agents will produce the actual values which will give rise to a ground illocution.",
                "We can thus define illocution schemata: Def. 4.",
                "An illocution schema Â¯I is any atomic formula p(ag, r, ag , r , Î´, t) in which some of the terms may either be variables or may contain variables. 3.2 Formal Definition of the Notion of NS We first define normative scenes as follows: Def. 5.",
                "A normative scene is a tuple s = ids, Î”s where ids is a scene identifier and Î”s is the set of atomic formulae Î´ (i.e. utterances and normative positions) that hold in s. We will also refer to Î”s as the state of normative scene s. For instance, a snapshot of the state of the delivery normative scene of our scenario could be represented as: Î”s = 8 < : utt(request(sean, client, kev, wm, receive(wire, 200), 20)), utt(accept(kev, wm, sean, client, receive(wire, 200), 30)), obl(inform(kev, wm, sean, client, delivered(wire, 200), 30)) 9 = ; That is, agent Sean taking up the client role has requested agent Kev (taking up the warehouse manager role wm) to receive 200kg of wire, and agent Kev is obliged to deliver 200kg of wire to Sean since he accepted the request.",
                "Note that the state of a normative scene Î”s evolves over time.",
                "These normative scenes are connected to one another via normative transitions that specify how utterances and normative positions in one scene affect other normative scenes.",
                "As mentioned above, activities are not independent since illocutions uttered in some of them may have an effect on other ones.",
                "Normative transition rules define the conditions under which a normative command is generated.",
                "These conditions are either utterances or normative positions associated with a given protocol (denoted e.g. activity : utterance) which yield a normative command, i.e. the addition or removal of another normative position, possibly related to a different activity.",
                "Our transition rules are thus defined: Def. 6.",
                "A normative transition rule R is of the form: R ::= V C V ::= ids : D | V, V D ::= N | utt(Â¯I) N ::= per(Â¯I) | prh(Â¯I) | obl(Â¯I) C ::= add(ids : N) | remove(ids : N) where Â¯I is an illocution schema, N is a normative position (i.e. permission, prohibition or obligation), ids is an identifier for activity s and C is a normative command.",
                "We endow our language with the usual semantics of rulebased languages [19].",
                "Rules map an existing normative structure to a new normative structure where only the state of the normative scenes change.",
                "In the definitions below we rely on the standard concept of substitution [9].",
                "Def. 7.",
                "A normative transition is a tuple b = idb, rb where idb is an identifier and rb is a normative transition rule.",
                "We are proposing to extend the notion of MAS, regulated by protocols, with an extra layer consisting of normative scenes and normative transitions.",
                "This layer is represented as a bi-partite graph that we term normative structure.",
                "A normative structure relates normative scenes and normative transitions specifying which normative positions are to be generated or removed in which normative scenes.",
                "Def. 8.",
                "A normative structure is a labelled bi-partite graph NS = Nodes, Edges, Lin , Lout .",
                "Nodes is a set SâˆªB where S is a set of normative scenes and B is a set of normative transitions.",
                "Edges is a set Ain âˆª Aout where Ain âŠ† S Ã— B is a set of input arcs labelled with an atomic formula using the labelling function Lin : Ain â†’ D; and Aout âŠ† B Ã— S is a set of output arcs labelled with a normative position using the labelling function Lout : Aout â†’ N. The following must hold: 1.",
                "Each atomic formula appearing in the LHS of a rule rb must be of the form (ids : D) where s âˆˆ S and D âˆˆ Î” and âˆƒain âˆˆ Ain such that ain = (s, b) and Lin (ain ) = D. 2.",
                "The atomic formula appearing in the RHS of a rule rb must be of the form add(ids : N) or remove(ids : N) where s âˆˆ S and âˆƒaout âˆˆ Aout such that aout = (b, s) and Lout (aout ) = N. 3. âˆ€a âˆˆ Ain such that a = (s, b) and b = idb, rb and Lin (a) = D then (ids:D) must occur in the LHS of rb. 4. âˆ€a âˆˆ Aout such that a = (b, s) and b = idb, rb and Lout (a) = N then add(ids : N) or remove(ids : N) must occur in the RHS of rb.",
                "The first two points ensure that every atomic formulae on the LHS of a normative transition rule labels an arc entering the appropriate normative transition in the normative structure, and that the atomic formula on the RHS labels the corresponding outgoing arc.",
                "Points three and four ensure that labels from all incoming arcs are used in the LHS of the normative transition rule that these arcs enter into, and that the labels from all outgoing arcs are used in the RHS of the normative transition rule that these arcs leave. 3.3 Intended Semantics The formal semantics will be defined via a mapping to Coloured Petri Nets in Section 5.1.",
                "Here we start defining the intended semantics of normative transition rules by describing how a rule changes a normative scene of an existing normative structure yielding a new normative structure.",
                "Each rule is triggered once for each substitution that unifies the left-hand side V of the rule with the state of the corresponding normative scenes.",
                "An atomic formula (i.e. an utterance or a normative position) holds iff it is unifiable with an utterance or normative position that belongs to the state of the corresponding normative scene.",
                "Every time a rule is triggered, the normative command specified on the right-hand side of that rule is carried out, intending to add or remove a normative position from the state of the corresponding normative scene.",
                "However, addition is not unconditional as conflicts may arise.",
                "This topic will be treated in Sections 4 and 6.1. 638 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.4 Example In our running example we have the following exemplary normative transition rule: â€ž payment : obl(inform(X, client, Y, acc, pay(Z, P, Q), T )), payment : utt(inform(X, client, Y, acc, pay(Z, P, Q), T )) Â« delivery : add(obl(inform(Y, wm, X, client, delivered(Z, Q), T ))) That is, during the payment activity, an obligation on client X to inform accountant Y about the payment P of item Z at time T and the corresponding utterance which fulfills this obligation allows the flow of a norm to the delivery activity.",
                "The norm is an obligation on agent Y (this time taking up the role of the warehouse manager wm) to send a message to client X that item Z has been delivered.",
                "We show in Figure 2 a diagrammatic representation of how activities and a normative structure relate: Payment Delivery Contract Normative Level Exit Registration Payment Delivery Negotiation Coordination Level Contract nt Figure 2: Activities and Normative Structure As illocutions are uttered during activities, normative positions arise.",
                "Utterances and normative positions are combined in transition rules, causing the flow of normative positions between normative scenes.",
                "The connection between the two levels is described in Section 6.2. 4.",
                "CONFLICT DEFINITION The terms deontic conflict and deontic inconsistency have been used interchangeably in the literature.",
                "However, in this paper we adopt the view of [7] in which the authors suggest that a deontic inconsistency arises when an action is simultaneously permitted and prohibited - since a permission may not be acted upon, no real conflict occurs.",
                "The situations when an action is simultaneously obliged and prohibited are, however, deontic conflicts, as both obligations and prohibitions influence behaviours in a conflicting fashion.",
                "The content of normative positions in this paper are illocutions.",
                "Therefore, a normative conflict arises when an illocution is simultaneously obliged and prohibited.",
                "We propose to use the standard notion of unification [9] to detect when a prohibition and a permission overlap.",
                "For instance, an obligation obl(inform(A1, R1, A2, R2, p(c, X), T)) and a prohibition prh(inform(a1, r1, a2, r2, p(Y, d), T )) are in conflict as they unify under Ïƒ = {A1/a1, R1/r1, A2/a2, R2/r2, Y/c, X/d, T/T }).",
                "We formally capture this notion: Def. 9.",
                "A (deontic) conflict arises between two normative positions N and N under a substitution Ïƒ, denoted as conflict(N, N , Ïƒ), if and only if N = prh(Â¯I), N = obl(Â¯I ) and unify(Â¯I,Â¯I , Ïƒ).",
                "That is, a prohibition and an obligation are in conflict if, and only if, their illocutions unify under Ïƒ.",
                "The substitution Ïƒ, called here the conflict set, unifies the agents, roles and atomic formulae.",
                "We assume that unify is a suitable implementation of a unification algorithm which i) always terminates (possibly failing, if a unifier cannot be found); ii) is correct; and iii) has linear computational complexity.",
                "Inconsistencies caused by the same illocution being simultaneously permitted and prohibited can be formalised similarly.",
                "In this paper we focus on prohibition/obligation conflicts, but the computational machinery introduced in Section 6.1 can equally be used to detect prohibition/permission inconsistencies, if we substitute modality obl for per. 5.",
                "FORMALISING CONFLICT-FREEDOM In this section we introduce some background knowledge on CPNs assuming a basic understanding of ordinary Petri Nets.",
                "For technical details we refer the reader to [16].",
                "We then map NSs to CPNs and analyse their properties.",
                "CPNs combine the strength of Petri nets with the strength of functional programming languages.",
                "On the one hand, Petri nets provide the primitives for the description of the synchronisation of concurrent processes.",
                "As noticed in [16], CPNs have a semantics which builds upon true concurrency, instead of interleaving.",
                "In our opinion, a true-concurrency semantics is easier to work with because it is the way we envisage the connection between the coordination level and the normative level of a multi-agent system to be.",
                "On the other hand, the functional programming languages used by CPNs provide the primitives for the definition of data types and the manipulation of their data values.",
                "Thus, we can readily translate expressions of a normative structure.",
                "Last but not least, CPNs have a well-defined semantics which unambiguously defines the behaviour of each CPN.",
                "Furthermore, CPNs have a large number of formal analysis methods and tools by which properties of CPNs can be proved.",
                "Summing up, CPNs provide us with all the necessary features to formally reason about normative structures given that an adequate mapping is provided.",
                "In accordance with Petri nets, the states of a CPN are represented by means of places.",
                "But unlike Petri Nets, each place has an associated data type determining the kind of data which the place may contain.",
                "A state of a CPN is called a marking.",
                "It consists of a number of tokens positioned on the individual places.",
                "Each token carries a data value which has the type of the corresponding place.",
                "In general, a place may contain two or more tokens with the same data value.",
                "Thus, a marking of a CPN is a function which maps each place into a multi-set2 of tokens of the correct type.",
                "One often refers to the token values as token colours and one also refers to the data types as colour sets.",
                "The types of a CPN can be arbitrarily complex.",
                "Actions in a CPN are represented by means of transitions.",
                "An incoming arc into a transition from a place indicates that the transition may remove tokens from the corresponding place while an outgoing arc indicates that the transition may add tokens.",
                "The exact number of tokens and their data values are determined by the arc expressions, which are encoded using the programming language chosen for the CPN.",
                "A transition is enabled in a CPN if and only if all the 2 A multi-set (or bag) is an extension to the notion of set, allowing the possibility of multiple appearances of the same element.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 639 variables in the expressions of its incoming arcs are bound to some value(s) (each one of these bindings is referred to as a binding element).",
                "If so, the transition may occur by removing tokens from its input places and adding tokens to its output places.",
                "In addition to the arc expressions, it is possible to attach a boolean guard expression (with variables) to each transition.",
                "Putting all the elements above together we obtain a formal definition of CPN that shall be employed further ahead for mapping purposes.",
                "Def. 10.",
                "A CPN is a tuple Î£, P, T, A, N, C, G, E, I where: (i) Î£ is a finite set of non-empty types, also called colour sets; (ii) P is a finite set of places; (iii) T is a finite set of transitions; (iv) A is a finite set of arcs; (v) N is a node function defined from A into P Ã— T âˆª T Ã— P; (vi) C is a colour function from P into Î£; (vii) G is a guard function from T into expressions; (viii) E is an arc expression function from A into expressions; (ix) I is an initialisation function from P into closed expressions; Notice that the informal explanation of the enabling and occurrence rules given above provides the foundations to understand the behaviour of a CPN.",
                "In accordance with ordinary Petri nets, the concurrent behaviour of a CPN is based on the notion of step.",
                "Formally, a step is a non-empty and finite multi-set over the set of all binding elements.",
                "Let step S be enabled in a marking M. Then, S may occur, changing the marking M to M .",
                "Moreover, we say that marking M is directly reachable from marking M by the occurrence of step S, and we denote it by M[S > M .",
                "A finite occurrence sequence is a finite sequence of steps and markings: M1[S1 > M2 . . .",
                "Mn[Sn > Mn+1 such that n âˆˆ N and Mi[Si > Mi+1 âˆ€i âˆˆ {1, . . . , n}.",
                "The set of all possible markings reachable for a net Net from a marking M is called its reachability set, and is denoted as R(Net, M). 5.1 Mapping to Coloured Petri Nets Our normative structure is a labelled bi-partite graph.",
                "The same is true for a Coloured Petri Net.",
                "We are presenting a mapping f from one to the other, in order to provide semantics for the normative structure and prove properties about it by using well-known theoretical results from work on CPNs.",
                "The mapping f makes use of correspondences between normative scenes and CPN places, normative transitions and CPN transitions and finally, between arc labels and CPN arc expressions.",
                "S â†’ P B â†’ T Lin âˆª Lout â†’ E The set of types is the singleton set containing the colour NP (i.e.",
                "Î£ = {NP}).",
                "This complex type is structured as follows (we use CPN-ML [4] syntax): color NPT = with Obl | Per | Prh | NoMod color IP = with inform | declare | offer color UTT = record illp : IP ag1, role1, ag2, role2 : string content: string time : int color NP = record mode : NPT illoc : UTT Modelling illocutions as norms without modality (NoMod) is a formal trick we use to ensure that sub-nets can be combined as explained below.",
                "Arcs are mapped almost directly.",
                "A is a finite set of arcs and N is a node function, such that âˆ€a âˆˆ A âˆƒa âˆˆ Ain âˆªAout .",
                "N(a) = a .",
                "The initialisation function I is defined as I(p) = Î”s (âˆ€s âˆˆ S where p is obtained from s using the mapping; remember that s = ids, Î”s ).",
                "Finally, the colour function C assigns the colour NP to every place: C(p) = NP (âˆ€p âˆˆ P).",
                "We are not making use of the guard function G. In future work, this function can be used to model constraints when we extend the expressiveness of our norm language. 5.2 Properties of Normative Structures Having defined the mapping from normative structures to Coloured Petri Nets, we now look at properties of CPNs that help us understand the complexity of conflict detection.",
                "One question we would like to answer is, whether at a given point in time, a given normative structure is conflict-free.",
                "Such a snapshot of a normative structure corresponds to a marking in the mapped CPN.",
                "Def. 11.",
                "Given a marking Mi, this marking is conflictfree if Â¬âˆƒp âˆˆ P. âˆƒnp1, np2 âˆˆ Mi(p) such that np1.mode = Obl and np2.mode = Prh and np1.illoc and np2.illoc unify under a valid substitution.",
                "Another interesting question would be, whether a conflict will occur from such a snapshot of the system by propagating the normative positions.",
                "In order to answer this question, we first translate the snapshot of the normative structure to the corresponding CPN and then execute the finite occurence sequence of markings and steps, verifying the conflict-freedom of each marking as we go along.",
                "Def. 12.",
                "Given a marking Mi, a finite occurrence sequence Si, Si+1, ..., Sn is called conflict-free, if and only if Mi[Si > Mi+1 . . .",
                "Mn[Sn > Mn+1 and Mk is conflict-free for all k such that i â‰¤ k â‰¤ n + 1.",
                "However, the main question we would like to investigate, is whether or not a given normative structure is conflictresistant, that is, whether or not the agents enacting the MAS are able to bring about conflicts through their actions.",
                "As soon as one includes the possibility of actions (or utterances) from autonomous agents, one looses determinism.",
                "Having mapped the normative structure to a CPN, we now add CPN models of the agents interactions.",
                "Each form of agent interaction (i.e. each activity) can be modelled using CPNs along the lines of Cost et al. [5].",
                "These nondeterministic CPNs feed tokens into the CPN that models the normative structure.",
                "This leads to the introduction of non-determinism into the combined CPN.",
                "The lower half of figure 3 shows part of a CPN model of an agent protocol where the arc denoted with 1 represents some utterance of an illocution by an agent.",
                "The target transition of this arc, not only moves a token on to the next state of this CPN, but also places a token in the place corresponding to the appropriate normative scene in the CPN model of the normative structure (via arc 2).",
                "Transition 3 finally could propagate that token in form of an obligation, for example.",
                "Thus, from a given marking, many different occurrence sequences are possible depending on the agents actions.",
                "We make use of the reachability set R to define a situation in which agents cannot cause conflicts. 640 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) Figure 3: Constructing the combined CPN Def. 13.",
                "Given a net N, a marking M is conflict-resistant if and only if all markings in R(N,M) are conflict-free.",
                "Checking conflict-freedom of a marking can be done in polynomial time by checking all places of the CPN for conflicting tokens.",
                "Conflict-freedom of an occurrence sequence in the CPN that represents the normative structure can also be done in polynomial time since this sequence is deterministic given a snapshot.",
                "Whether or not a normative structure is designed safely corresponds to checking the conflict-resistance of the initial marking M0.",
                "Now, verifying conflict-resistance of a marking becomes a very difficult task.",
                "It corresponds to the reachability problem in a CPN: can a state be reached or a marking achieved, that contains a conflict?.",
                "This reachability problem is known to be NP-complete for ordinary Petri Nets [22] and since CPNs are functionally identical, we cannot hope to verify conflict-resistance of a normative structure off-line in a reasonable amount of time.",
                "Therefore, distributed, run-time mechanisms are needed to ensure that a normative structure maintains consistency.",
                "We present one such mechanism in the following section. 6.",
                "MANAGING NORMATIVE STRUCTURES Once a conflict (as defined in Section 4) has been detected, we propose to employ the unifier to resolve the conflict.",
                "In our example, if the variables in prh(inform(a1, r1, a2, r2, p(Y, d), T )) do not get the values specified in substitution Ïƒ then there will not be a conflict.",
                "However, rather than computing the complement set of a substitution (which can be an infinite set) we propose to annotate the prohibition with the unifier itself and use it to determine what the variables of that prohibition cannot be in future unifications in order to avoid a conflict.",
                "We therefore denote annotated prohibitions as prh(Â¯I) Î£, where Î£ = {Ïƒ1, . . . , Ïƒn}, is a set of unifiers.",
                "Annotated norms3 are interpreted as deontic constructs with curtailed influences, that is, their effect (on agents, roles and illocutions) has been limited by the set Î£ of unifiers.",
                "A prohibition may be in conflict with various obligations in a given normative scene s = id, Î” and we need to record (and possibly avoid) all these conflicts.",
                "We define below an algorithm which ensures that a normative position will be added to a normative scene in such a way that it will not cause any conflicts. 3 Although we propose to curtail prohibitions, the same machinery can be used to define the curtailment of obligations instead.",
                "These different policies are dependent on the intended deontic semantics and requirements of the systems addressed.",
                "For instance, some MASs may require that their agents should not act in the presence of conflicts, that is, the obligation should be curtailed. 6.1 Conflict Resolution We propose a fine-grained way of resolving normative conflicts via unification.",
                "We detect the overlapping of the influences of norms , i.e. how they affect the behaviour of the concerned agents, and we curtail the influence of the normative position, by appropriately using the annotations when checking if the norm applies to illocutions.",
                "The algorithm shown in Figure 4 depicts how we maintain a conflict-free set of norms.",
                "It adds a given norm N to an existing, conflictfree normative state Î”, obtaining a resulting new normative state Î” which is conflict-free, that is, its prohibitions are annotated with a set of conflict sets indicating which bindings for variables have to be avoided for conflicts not to take place. algorithm addNorm(N, Î”) begin 1 timestamp(N) 2 case N of 3 per(Â¯I): Î” := Î” âˆª {N} 4 prh(I): if N âˆˆ Î” s.t. conflict(N, N , Ïƒ) then Î” := Î” 5 else Î” := Î” âˆª {N} 6 prh(Â¯I): 7 begin 8 Î£ := âˆ… 9 for each N âˆˆ Î” do 10 if conflict(N, N , Ïƒ) then Î£ := Î£ âˆª {Ïƒ} 11 Î” := Î” âˆª {N Î£} 12 end 13 obl(Â¯I): 14 begin 15 Î”1 := âˆ…; Î”2 := âˆ… 16 for each (N Î£) âˆˆ Î” do 17 if N = prh(I) then 18 if conflict(N , N, Ïƒ) then Î”1 := Î”1 âˆª {N Î£} 19 else nil 20 else 21 if conflict(N , N, Ïƒ) then 22 begin 23 Î”1 := Î”1 âˆª {N Î£} 24 Î”2 := Î”2 âˆª {N (Î£ âˆª {Ïƒ})} 25 end 26 Î” := (Î” âˆ’ Î”1) âˆª Î”2 âˆª {N} 27 end 28 end case 29 return Î” end Figure 4: Algorithm to Preserve Conflict-Freedom The algorithm uses a case of structure to differentiate the different possibilities for a given norm N. Line 3 addresses the case when the given norm is a permission: N is simply added to Î”.",
                "Lines 4-5 address the case when we attempt to add a ground prohibition to a normative state: if it conflicts with any obligation, then it is discarded; otherwise it is added to the normative state.",
                "Lines 6-12 describe the situation when the normative position to be added is a nonground prohibition.",
                "In this case, the algorithm initialises Î£ to an empty set and loops (line 9-10) through the norms N in the old normative state Î”.",
                "Upon finding one that conflicts with N, the algorithm updates Î£ by adding the newly found conflict set Ïƒ to it (line 10).",
                "By looping through Î”, we are able to check any conflicts between the new prohibition and the existing obligations, adequately building the annotation Î£ to be used when adding N to Î” in line 11.",
                "Lines 13-27 describe how a new obligation is accommodated to an existing normative state.",
                "We make use of two initially empty, temporary sets, Î”1, Î”2.",
                "The algorithm loops through Î” (lines 16-25) picking up those annotated prohibitions N Î£ which conflict with the new obligation.",
                "There are, however, two cases to deal with: the one when a ground The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 641 prohibition is found (line 17), and its exception, covering non-ground prohibitions (line 20).",
                "In both cases, the old prohibition is stored in Î”1 (lines 18 and 23) to be later removed from Î” (line 26).",
                "However, in the case of a nonground prohibition, the algorithm updates its annotation of conflict sets (line 24).",
                "The loop guarantees that an exhaustive (linear) search through a normative state takes place, checking if the new obligation is in conflict with any existing prohibitions, possibly updating the annotations of these conflicting prohibitions.",
                "In line 26 the algorithm builds the new updated Î” by removing the old prohibitions stored in Î”1 and adding the updated prohibitions stored in Î”2 (if any), as well as the new obligation N. Our proposed algorithm is correct in that, for a given normative position N and a normative state Î”, it provides a new normative state Î” in which all prohibitions have annotations recording how they unify with existing obligations.",
                "The annotations can be empty, though: this is the case when we have a ground prohibition or a prohibition which does not unify/conflict with any obligation.",
                "Permissions do not affect our algorithm and they are appropriately dealt with (line 3).",
                "Any attempt to insert a ground prohibition which conflicts, yields the same normative state (line 4).",
                "When a new obligation is being added then the algorithm guarantees that all prohibitions are considered (lines 14-27), leading to the removal of conflicting ground prohibitions or the update of annotations of non-ground prohibitions.",
                "The algorithm always terminates: the loops are over a finite set Î” and the conflict checks and set operations always terminate.",
                "The complexity of the algorithm is linear: the set Î” is only examined once for each possible case of norm to be added.",
                "When managing normative states we may also need to remove normative positions.",
                "This is straightforward: permissions can be removed without any problems; annotated prohibitions can also be removed without further considerations; obligations, however, require some housekeeping.",
                "When an obligation is to be removed, we must check it against all annotated prohibitions in order to update their annotations.",
                "We apply the conflict check and obtain a unifier, then remove this unifier from the prohibitions annotation.",
                "We invoke the removal algorithm as removeNorm(N, Î”): it returns a new normative state Î” in which N has been removed, with possible alterations to other normative positions as explained. 6.2 Enactment of a Normative Structure The enactment of a normative structure amounts to the parallel, distributed execution of normative scenes and normative transitions.",
                "For illustrative purposes, hereafter we shall describe the interplay between the payment and delivery normative scenes and the normative transition nt linking them in the upper half of figure 2.",
                "With this aim, consider for instance that obl(inform(jules, client, rod, acc, pay(copper, 400, 350), T) âˆˆ Î”payment and that Î”delivery holds prh(inform(rod,wm, jules, client, delivered(Z, Q), T)).",
                "Such states indicate that client Jules is obliged to pay Â£400 for 350kg of copper to accountant Rod according to the payment normative scene, whereas Rod, taking up the role of warehouse manager this time, is prohibited to deliver anything to client Jules according to the delivery normative scene.",
                "For each normative scene, the enactment process goes as follows.",
                "Firstly, it processes its incoming message queue that contains three types of messages: utterances from the activity it is linked to; and normative commands either to add or remove normative positions.",
                "For instance, in our example, the payment normative scene collects the illocution I = utt((inform(jules, client, rod, acc, pay(copper, 400, 350), 35)) standing for client Jules pending payment for copper (via arrow A in figure 2).",
                "Utterances are timestamped and subsequently added to the normative state.",
                "We would have Î”payment = Î”payment âˆª {I}, in our example.",
                "Upon receiving normative commands to either add or remove a normative position, the normative scene invokes the corresponding addition or removal algorithm described in Section 6.1.",
                "Secondly, the normative scene acknowledges its state change by sending a trigger message to every outgoing normative transition it is connected to.",
                "In our example, the payment normative scene would be signalling its state change to normative transition nt.",
                "For normative transitions, the process works differently.",
                "Because each normative transition controls the operation of a single rule, upon receiving a trigger message, it polls every incoming normative scene for substitutions for the relevant illocution schemata on the LHS of its rule.",
                "In our example, nt (being responsible for the rule described in Section 3.4), would poll the payment normative scene (via arrow B) for substitutions.",
                "Upon receiving replies from them (in the form of sets of substitutions together with time-stamps), it has to unify substitutions from each of these normative scenes.",
                "For each unification it finds, the rule is fired, and hence the corresponding normative command is sent along to the output normative scene.",
                "The normative transition then keeps track of the firing message it sent on and of the time-stamps of the normative positions that triggered the firing.",
                "This is done to ensure that the very same normative positions in the LHS of a rule only trigger its firing once.",
                "In our example, nt would be receiving Ïƒ = {X/jules, Y/rod, Z/copper, Q/350} from the payment normative scene.",
                "Since the substitions in Ïƒ unify with nts rule, the rule is fired, and the normative command add(delivery : obl(rod, wm, jules, client, delivered(copper, 350), T)) is sent along to the delivery normative scene to oblige Rod to deliver to client Jules 350kg of copper.",
                "After that, the delivery normative scene would invoke the addNorm algorithm from figure 4 with Î”delivery and N = obl(rod, wm, jules, client, delivered(copper, 350)) as arguments. 7.",
                "RELATED WORK AND CONCLUSIONS Our contributions in this paper are three-fold.",
                "Firstly, we introduce an approach for the management of and reasoning about norms in a distributed manner.",
                "To our knowledge, there is little work published in this direction.",
                "In [8, 21], two languages are presented for the distributed enforcement of norms in MAS.",
                "However, in both works, each agent has a local message interface that forwards legal messages according to a set of norms.",
                "Since these interfaces are local to each agent, norms can only be expressed in terms of actions of that agent.",
                "This is a serious disadvantage, e.g. when one needs to activate an obligation to one agent due to a certain message of another one.",
                "The second contribution is the proposal of a normative structure.",
                "The notion is fruitful because it allows the separation of normative and procedural concerns.",
                "The normative structure we propose makes evident the similarity between the propagation of normative positions and the propagation 642 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) of tokens in Coloured Petri Nets.",
                "That similarity readily suggests a mapping between the two, and gives grounds to a convenient analytical treatment of the normative structure, in general, and the complexity of conflict detection, in particular.",
                "The idea of modelling interactions (in the form of conversations) via Petri Nets has been investigated in [18], where the interaction medium and individual agents are modelled as CPN sub-nets that are subsequently combined for analysis.",
                "In [5], conversations are first designed and analysed at the level of CPNs and thereafter translated into protocols.",
                "Lin et al. [20] map conversation schemata to CPNs.",
                "To our knowledge, the use of this representation in the support of conflict detection in regulated MAS has not been reported elsewhere.",
                "Finally, we present a distributed mechanism to resolve normative conflicts.",
                "Sartor [25] treats normative conflicts from the point of view of legal theory and suggests a way to order the norms involved.",
                "His idea is implemented in [12] but requires a central resource for norm maintenance.",
                "The approach to conflict detection and resolution is an adaptation and extension of the work on instantiation graphs reported in [17] and a related algorithm in [27].",
                "The algorithm presented in the current paper can be used to manage normative states distributedly: normative scenes that happen in parallel have an associated normative state Î” to which the algorithm is independently applied each time a new norm is to be introduced.",
                "These three contributions we present in this paper open many possibilities for future work.",
                "We should mention first, that as a broad strategy we are working on a generalisation of the notion of normative structure to make it operate with different coordination models, with richer deontic content and on top of different computational realisations of regulated MAS.",
                "As a first step in this direction we are taking advantage of the de-coupling between interaction protocols and declarative normative guidance that the normative structure makes available, to provide a normative layer for electronic institutions (as defined in [1]).",
                "We expect such coupling will endow electronic institutions with a more flexible -and more expressive- normative environment.",
                "Furthermore, we want to extend our model along several directions: (1) to handle negation and constraints as part of the norm language, and in particular the notion of time; (2) to accommodate multiple, hierarchical norm authorities based on roles, along the lines of Cholvy and Cuppens [3] and power relationships as suggested by Carabelea et al. [2]; (3) to capture in the conflict resolution algorithm different semantics relating the deontic notions by supporting different axiomations (e.g., relative strength of prohibition versus obligation, default deontic notions, deontic inconsistencies).",
                "On the theoretical side, we intend to use analysis techniques of CPNs in order to characterise classes of CPNs (e.g., acyclic, symmetric, etc.) corresponding to families of Normative Structures that are susceptible to tractable offline conflict detection.",
                "The combination of these techniques along with our online conflict resolution mechanisms is intended to endow MAS designers with the ability to incorporate norms into their systems in a principled way. 8.",
                "REFERENCES [1] J. L. Arcos, M. Esteva, P. Noriega, J.",
                "A. RodrÂ´Ä±guez, and C. Sierra.",
                "Engineering open environments with electronic institutions.",
                "Journal on Engineering Applications of Artificial Intelligence, 18(2):191-204, 2005. [2] C. Carabelea, O. Boissier, and C. Castelfranchi.",
                "Using social power to enable agents to reason about being part of a group.",
                "In 5th Internat.",
                "Workshop, ESAW 2004, pages 166-177, 2004. [3] L. Cholvy and F. Cuppens.",
                "Solving normative conflicts by merging roles.",
                "In Fifth International Conference on Artificial Intelligence and Law, Washington, USA, 1995. [4] S. Christensen and T. B. Haagh.",
                "Design CPN - overview of CPN ML syntax.",
                "Technical report, University of Aarhus, 1996. [5] R. S. Cost, Y. Chen, T. W. Finin, Y. Labrou, and Y. Peng.",
                "Using colored petri nets for conversation modeling.",
                "In Issues in Agent Communication, pages 178-192, London, UK, 2000. [6] F. Dignum.",
                "Autonomous Agents with Norms.",
                "Artificial Intelligence and Law, 7(1):69-79, 1999. [7] A. Elhag, J. Breuker, and P. Brouwer.",
                "On the Formal Analysis of Normative Conflicts.",
                "Information & Comms.",
                "Techn.",
                "Law, 9(3):207-217, Oct. 2000. [8] M. Esteva, W. Vasconcelos, C. Sierra, and J.",
                "A. RodrÂ´Ä±guez-Aguilar.",
                "Norm consistency in electronic institutions. volume 3171 (LNAI), pages 494-505.",
                "Springer-Verlag, 2004. [9] M. Fitting.",
                "First-Order Logic and Automated Theorem Proving.",
                "Springer-Verlag, New York, U.S.A., 1990. [10] N. Fornara, F. Vigan`o, and M. Colombetti.",
                "An Event Driven Approach to Norms in Artificial Institutions.",
                "In AAMAS05 Workshop: Agents, Norms and Institutions for Regulated Multiagent Systems (ANI@REM), Utrecht, 2005. [11] D. Gaertner, P. Noriega, and C. Sierra.",
                "Extending the BDI architecture with commitments.",
                "In Proceedings of the 9th International Conference of the Catalan Association of Artificial Intelligence, 2006. [12] A. GarcÂ´Ä±a-Camino, P. Noriega, and J.-A.",
                "RodrÂ´Ä±guez-Aguilar.",
                "An Algorithm for Conflict Resolution in Regulated Compound Activities.",
                "In 7th Int.Workshop - ESAW 06, 2006. [13] A. GarcÂ´Ä±a-Camino, J.-A.",
                "RodrÂ´Ä±guez-Aguilar, C. Sierra, and W. Vasconcelos.",
                "A Distributed Architecture for Norm-Aware Agent Societies.",
                "In DALT III, volume 3904 (LNAI), pages 89-105.",
                "Springer, 2006. [14] F. Giunchiglia and L. Serafini.",
                "Multi-language hierarchical logics or: How we can do without modal logics.",
                "Artificial Intelligence, 65(1):29-70, 1994. [15] J. Habermas.",
                "The Theory of Communication Action, Volume One, Reason and the Rationalization of Society.",
                "Beacon Press, 1984. [16] K. Jensen.",
                "Coloured Petri Nets: Basic Concepts, Analysis Methods and Practical Uses (Volume 1).",
                "Springer, 1997. [17] M. Kollingbaum and T. Norman.",
                "Strategies for resolving norm conflict in practical reasoning.",
                "In ECAI Workshop Coordination in Emergent Agent Societies 2004, 2004. [18] J.-L. Koning, G. Francois, and Y. Demazeau.",
                "Formalization and pre-validation for interaction protocols in a multi agent systems.",
                "In ECAI, pages 298-307, 1998. [19] B. Kramer and J. Mylopoulos.",
                "Knowledge Representation.",
                "In S. C. Shapiro, editor, Encyclopedia of Artificial Intelligence, volume 1, pages 743-759.",
                "John Wiley & Sons, 1992. [20] F. Lin, D. H. Norrie, W. Shen, and R. Kremer.",
                "A schema-based approach to specifying conversation policies.",
                "In Issues in Agent Communication, pages 193-204, 2000. [21] N. Minsky.",
                "Law Governed Interaction (LGI): A Distributed Coordination and Control Mechanism (An Introduction, and a Reference Manual).",
                "Technical report, Rutgers University, 2005. [22] T. Murata.",
                "Petri nets: Properties, analysis and applications.",
                "Proceedings of the IEEE, 77(4):541-580, 1989. [23] S. Parsons, C. Sierra, and N. Jennings.",
                "Agents that reason and negotiate by arguing.",
                "Journal of Logic and Computation, 8(3):261-292, 1998. [24] A. Ricci and M. Viroli.",
                "Coordination Artifacts: A Unifying Abstraction for Engineering Environment-Mediated Coordination in MAS.",
                "Informatica, 29:433-443, 2005. [25] G. Sartor.",
                "Normative conflicts in legal reasoning.",
                "Artificial Intelligence and Law, 1(2-3):209-235, June 1992. [26] M. Sergot.",
                "A Computational Theory of Normative Positions.",
                "ACM Trans.",
                "Comput.",
                "Logic, 2(4):581-622, 2001. [27] W. W. Vasconcelos, M. Kollingbaum, and T. Norman.",
                "Resolving Conflict and Inconsistency in Norm-Regulated Virtual Organisations.",
                "In Proceedings of AAMAS 07, Hawaii, USA, 2007.",
                "IFAAMAS. [28] G. H. von Wright.",
                "Norm and Action: A Logical Inquiry.",
                "Routledge and Kegan Paul, London, 1963. [29] M. Wooldridge.",
                "An Introduction to Multiagent Systems.",
                "John Wiley & Sons, Chichester, UK, Feb. 2002.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 643"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "coordination": {
            "translated_key": "coordinaciÃ³n",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Distributed Norm Management in Regulated Multi-Agent Systems âˆ— Dorian Gaertner Dept.",
                "of Computing, Imperial College London, London SW7 2AZ, United Kingdom dg00@doc.ic.ac.uk Andres Garcia-Camino, Pablo Noriega, J.-A.",
                "Rodriguez-Aguilar IIIA-CSIC, 08193 Bellaterra, Spain {andres,pablo,jar}@iiia.csic.es Wamberto Vasconcelos Dept. of Computing Science, University of Aberdeen, Aberdeen AB24 3UE, United Kingdom wvasconcelos@acm.org ABSTRACT Norms are widely recognised as a means of coordinating multi-agent systems.",
                "The distributed management of norms is a challenging issue and we observe a lack of truly distributed computational realisations of normative models.",
                "In order to regulate the behaviour of autonomous agents that take part in multiple, related activities, we propose a normative model, the Normative Structure (NS), an artifact that is based on the propagation of normative positions (obligations, prohibitions, permissions), as consequences of agents actions.",
                "Within a NS, conflicts may arise due to the dynamic nature of the MAS and the concurrency of agents actions.",
                "However, ensuring conflict-freedom of a NS at design time is computationally intractable.",
                "We show this by formalising the notion of conflict, providing a mapping of NSs into Coloured Petri Nets and borrowing well-known theoretical results from that field.",
                "Since online conflict resolution is required, we present a tractable algorithm to be employed distributedly.",
                "We then demonstrate that this algorithm is paramount for the distributed enactment of a NS.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Languages and structures General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION A fundamental feature of open, regulated multi-agent systems in which autonomous agents interact, is that participating agents are meant to comply with the conventions of the system.",
                "Norms can be used to model such conventions and hence as a means to regulate the observable behaviour of agents [6, 29].",
                "There are many contributions on the subject of norms from sociologists, philosophers and logicians (e.g., [15, 28]).",
                "However, there are very few proposals for computational realisations of normative models - the way norms can be integrated in the design and execution of MASs.",
                "The few that exist (e.g. [10, 13, 24]), operate in a centralised manner which creates bottlenecks and single points-of-failure.",
                "To our knowledge, no proposal truly supports the distributed enactment of normative environments.",
                "In our paper we approach that problem and propose means to handle conflicting commitments in open, regulated, multiagent systems in a distributed manner.",
                "The type of regulated MAS we envisage consists of multiple, concurrent, related activities where agents interact.",
                "Each agent may concurrently participate in several activities, and change from one activity to another.",
                "An agents actions within an activity may have consequences in the form of normative positions (i.e. obligations, permissions, and prohibitions) [26] that may constrain its future behaviour.",
                "For instance, a buyer agent who runs out of credit may be forbidden to make further offers, or a seller agent is obliged to deliver after closing a deal.",
                "We assume that agents may choose not to fulfill all their obligations and hence may be sanctioned by the MAS.",
                "Notice that, when activities are distributed, normative positions must flow from the activities in which they are generated to those in which they take effect.",
                "For instance, the sellers obligation above must flow (or be propagated) from a negotiation activity to a delivery activity.",
                "Since in an open, regulated MAS one cannot embed normative aspects into the agents design, we adopt the view that the MAS should be supplemented with a separate set of norms that further regulates the behaviour of participating agents.",
                "In order to model the separation of concerns between the <br>coordination</br> level (agents interactions) and the normative level (propagation of normative positions), we propose an artifact called the Normative Structure (NS).",
                "Within a NS conflicts may arise due to the dynamic nature of the MAS and the concurrency of agents actions.",
                "For instance, an agent may be obliged and prohibited to do the 636 978-81-904262-7-5 (RPS) c 2007 IFAAMAS very same action in an activity.",
                "Since the regulation of a MAS entails that participating agents need to be aware of the validity of those actions that take place within it, such conflicts ought to be identified and possibly resolved if a claim of validity is needed for an agent to engage in an action or be sanctioned.",
                "However, ensuring conflict-freedom of a NS at design time is computationally intractable.",
                "We show this by formalising the notion of conflict, providing a mapping of NSs into Coloured Petri Nets (CPNs) and borrowing well-known theoretical results from the field of CPNs.",
                "We believe that online conflict detection and resolution is required.",
                "Hence, we present a tractable algorithm for conflict resolution.",
                "This algorithm is paramount for the distributed enactment of a NS.",
                "The paper is organised as follows.",
                "In Section 2 we detail a scenario to serve as an example throughout the paper.",
                "Next, in Section 3 we formally define the normative structure artifact.",
                "Further on, in Section 4 we formalise the notion of conflict to subsequently analyse the complexity of conflict detection in terms of CPNs in Section 5.",
                "Section 6 describes the computational management of NSs by describing their enactment and presenting an algorithm for conflict resolution.",
                "Finally, we comment on related work, draw conclusions and report on future work in Section 7. 2.",
                "SCENARIO We use a supply-chain scenario in which companies and individuals come together at an online marketplace to conduct business.",
                "The overall transaction procedure may be organised as six distributed activities, represented as nodes in the diagram in Figure 1.",
                "They involve different participants whose behaviour is coordinated through protocols.",
                "In this scenario agents can play one of four roles: marExit Registration Payment Delivery Negotiation <br>coordination</br> Model Contract Figure 1: Activity Structure of the Scenario ketplace accountant (acc), client, supplier (supp) and warehouse managers (wm).",
                "The arrows connecting the activities represent how agents can move from one activity to another.",
                "After registering at the marketplace, clients and suppliers get together in an activity where they negotiate the terms of their transaction, i.e. prices, amounts of goods to be delivered, deadlines and other details.",
                "In the contract activity, the order becomes established and an invoice is prepared.",
                "The client will then participate in a payment activity, verifying his credit-worthiness and instructing his bank to transfer the correct amount of money.",
                "The supplier in the meantime will arrange for the goods to be delivered (e.g. via a warehouse manager) in the delivery activity.",
                "Finally, agents can leave the marketplace conforming to a predetermined exit protocol.",
                "The marketplace accountant participates in most of the activities as a trusted provider of auditing tools.",
                "In the rest of the paper we shall build on this scenario to exemplify the notion of normative structure and to illustrate our approach to conflict detection and resolution in a distributed setting. 3.",
                "NORMATIVE STRUCTURE In MASs agents interact according to protocols which naturally are distributed.",
                "We advocate that actions in one such protocol may have an effect on the enactment of other protocols.",
                "Certain actions can become prohibited or obligatory, for example.",
                "We take normative positions to be obligations, prohibitions and permissions akin to work described in [26].",
                "The intention of adding or removing a normative position we call normative command.",
                "Occurrences of normative positions in one protocol may also have consequences for other protocols1 .",
                "In order to define our norm language and specify how normative positions are propagated, we have been inspired by multi-context systems [14].",
                "These systems allow the structuring of knowledge into distinct formal theories and the definition of relationships between them.",
                "The relationships are expressed as bridge rules - deducibility of formulae in some contexts leads to the deduction of other formulae in other contexts.",
                "Recently, these systems have been successfully used to define agent architectures [11, 23].",
                "The metaphor translates to our current work as follows: the utterance of illocutions and/or the existence of normative positions in some normative scenes leads to the deduction of normative positions in other normative scenes.",
                "We are concerned with the propagation and distribution of normative positions within a network of distributed, normative scenes as a consequence of agents actions.",
                "We take normative scenes to be sets of normative positions and utterances that are associated with an underlying interaction protocol corresponding to an activity.",
                "In this section, we first present a simple language capturing these aspects and formally introduce the notions of normative scene, normative transition rule and normative structure.",
                "We give the intended semantics of these rules and show how to control a MAS via norms in an example. 3.1 Basic Concepts The building blocks of our language are terms and atomic formulae: Def. 1.",
                "A term, denoted as t, is (i) any constant expressed using lowercase (with or without subscripts), e.g. a, b0, c or (ii) any variable expressed using uppercase (with or without subscripts), e.g.",
                "X, Y, Zb or (iii) any function f(t1, . . . , tn), where f is an n-ary function symbol and t1, .., tn are terms.",
                "Some examples of terms and functions are Credit, price or offer(bible, 30) being respectively a variable, a constant and a function.",
                "We will be making use of identifiers throughout the paper, which are constant terms and also need the following definition: Def. 2.",
                "An atomic formula is any construct p(t1, . . . , tn), where p is an n-ary predicate symbol and t1, . . . , tn are terms.",
                "The set of all atomic formulae is denoted as Î”.",
                "We focus on an expressive class of MASs in which interaction is carried out by means of illocutionary speech acts exchanged among participating agents: Def. 3.",
                "Illocutions I are ground atomic formulae which have the form p(ag, r, ag , r , Î´, t) where p is an element of 1 Here, we abstract from protocols and refer to them generically as activities.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 637 a set of illocutionary particles (e.g. inform, request, offer); ag, ag are agent identifiers; r, r are role identifiers; Î´, an arbitrary ground term, is the content of the message, built from a shared content language; t âˆˆ N is a time stamp.",
                "The intuitive meaning of p(ag, r, ag , r , m, t) is that agent ag playing role r sent message m to agent ag playing role r at time t. An example of an illocution is inform(ag4, supp, ag3, client, offer(wire, 12), 10).",
                "Sometimes it is useful to refer to illocutions that are not fully grounded, that is, those that may contain uninstantiated (free) variables.",
                "In the description of a protocol, for instance, the precise values of the message exchanged can be left unspecified.",
                "During the enactment of the protocol agents will produce the actual values which will give rise to a ground illocution.",
                "We can thus define illocution schemata: Def. 4.",
                "An illocution schema Â¯I is any atomic formula p(ag, r, ag , r , Î´, t) in which some of the terms may either be variables or may contain variables. 3.2 Formal Definition of the Notion of NS We first define normative scenes as follows: Def. 5.",
                "A normative scene is a tuple s = ids, Î”s where ids is a scene identifier and Î”s is the set of atomic formulae Î´ (i.e. utterances and normative positions) that hold in s. We will also refer to Î”s as the state of normative scene s. For instance, a snapshot of the state of the delivery normative scene of our scenario could be represented as: Î”s = 8 < : utt(request(sean, client, kev, wm, receive(wire, 200), 20)), utt(accept(kev, wm, sean, client, receive(wire, 200), 30)), obl(inform(kev, wm, sean, client, delivered(wire, 200), 30)) 9 = ; That is, agent Sean taking up the client role has requested agent Kev (taking up the warehouse manager role wm) to receive 200kg of wire, and agent Kev is obliged to deliver 200kg of wire to Sean since he accepted the request.",
                "Note that the state of a normative scene Î”s evolves over time.",
                "These normative scenes are connected to one another via normative transitions that specify how utterances and normative positions in one scene affect other normative scenes.",
                "As mentioned above, activities are not independent since illocutions uttered in some of them may have an effect on other ones.",
                "Normative transition rules define the conditions under which a normative command is generated.",
                "These conditions are either utterances or normative positions associated with a given protocol (denoted e.g. activity : utterance) which yield a normative command, i.e. the addition or removal of another normative position, possibly related to a different activity.",
                "Our transition rules are thus defined: Def. 6.",
                "A normative transition rule R is of the form: R ::= V C V ::= ids : D | V, V D ::= N | utt(Â¯I) N ::= per(Â¯I) | prh(Â¯I) | obl(Â¯I) C ::= add(ids : N) | remove(ids : N) where Â¯I is an illocution schema, N is a normative position (i.e. permission, prohibition or obligation), ids is an identifier for activity s and C is a normative command.",
                "We endow our language with the usual semantics of rulebased languages [19].",
                "Rules map an existing normative structure to a new normative structure where only the state of the normative scenes change.",
                "In the definitions below we rely on the standard concept of substitution [9].",
                "Def. 7.",
                "A normative transition is a tuple b = idb, rb where idb is an identifier and rb is a normative transition rule.",
                "We are proposing to extend the notion of MAS, regulated by protocols, with an extra layer consisting of normative scenes and normative transitions.",
                "This layer is represented as a bi-partite graph that we term normative structure.",
                "A normative structure relates normative scenes and normative transitions specifying which normative positions are to be generated or removed in which normative scenes.",
                "Def. 8.",
                "A normative structure is a labelled bi-partite graph NS = Nodes, Edges, Lin , Lout .",
                "Nodes is a set SâˆªB where S is a set of normative scenes and B is a set of normative transitions.",
                "Edges is a set Ain âˆª Aout where Ain âŠ† S Ã— B is a set of input arcs labelled with an atomic formula using the labelling function Lin : Ain â†’ D; and Aout âŠ† B Ã— S is a set of output arcs labelled with a normative position using the labelling function Lout : Aout â†’ N. The following must hold: 1.",
                "Each atomic formula appearing in the LHS of a rule rb must be of the form (ids : D) where s âˆˆ S and D âˆˆ Î” and âˆƒain âˆˆ Ain such that ain = (s, b) and Lin (ain ) = D. 2.",
                "The atomic formula appearing in the RHS of a rule rb must be of the form add(ids : N) or remove(ids : N) where s âˆˆ S and âˆƒaout âˆˆ Aout such that aout = (b, s) and Lout (aout ) = N. 3. âˆ€a âˆˆ Ain such that a = (s, b) and b = idb, rb and Lin (a) = D then (ids:D) must occur in the LHS of rb. 4. âˆ€a âˆˆ Aout such that a = (b, s) and b = idb, rb and Lout (a) = N then add(ids : N) or remove(ids : N) must occur in the RHS of rb.",
                "The first two points ensure that every atomic formulae on the LHS of a normative transition rule labels an arc entering the appropriate normative transition in the normative structure, and that the atomic formula on the RHS labels the corresponding outgoing arc.",
                "Points three and four ensure that labels from all incoming arcs are used in the LHS of the normative transition rule that these arcs enter into, and that the labels from all outgoing arcs are used in the RHS of the normative transition rule that these arcs leave. 3.3 Intended Semantics The formal semantics will be defined via a mapping to Coloured Petri Nets in Section 5.1.",
                "Here we start defining the intended semantics of normative transition rules by describing how a rule changes a normative scene of an existing normative structure yielding a new normative structure.",
                "Each rule is triggered once for each substitution that unifies the left-hand side V of the rule with the state of the corresponding normative scenes.",
                "An atomic formula (i.e. an utterance or a normative position) holds iff it is unifiable with an utterance or normative position that belongs to the state of the corresponding normative scene.",
                "Every time a rule is triggered, the normative command specified on the right-hand side of that rule is carried out, intending to add or remove a normative position from the state of the corresponding normative scene.",
                "However, addition is not unconditional as conflicts may arise.",
                "This topic will be treated in Sections 4 and 6.1. 638 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.4 Example In our running example we have the following exemplary normative transition rule: â€ž payment : obl(inform(X, client, Y, acc, pay(Z, P, Q), T )), payment : utt(inform(X, client, Y, acc, pay(Z, P, Q), T )) Â« delivery : add(obl(inform(Y, wm, X, client, delivered(Z, Q), T ))) That is, during the payment activity, an obligation on client X to inform accountant Y about the payment P of item Z at time T and the corresponding utterance which fulfills this obligation allows the flow of a norm to the delivery activity.",
                "The norm is an obligation on agent Y (this time taking up the role of the warehouse manager wm) to send a message to client X that item Z has been delivered.",
                "We show in Figure 2 a diagrammatic representation of how activities and a normative structure relate: Payment Delivery Contract Normative Level Exit Registration Payment Delivery Negotiation <br>coordination</br> Level Contract nt Figure 2: Activities and Normative Structure As illocutions are uttered during activities, normative positions arise.",
                "Utterances and normative positions are combined in transition rules, causing the flow of normative positions between normative scenes.",
                "The connection between the two levels is described in Section 6.2. 4.",
                "CONFLICT DEFINITION The terms deontic conflict and deontic inconsistency have been used interchangeably in the literature.",
                "However, in this paper we adopt the view of [7] in which the authors suggest that a deontic inconsistency arises when an action is simultaneously permitted and prohibited - since a permission may not be acted upon, no real conflict occurs.",
                "The situations when an action is simultaneously obliged and prohibited are, however, deontic conflicts, as both obligations and prohibitions influence behaviours in a conflicting fashion.",
                "The content of normative positions in this paper are illocutions.",
                "Therefore, a normative conflict arises when an illocution is simultaneously obliged and prohibited.",
                "We propose to use the standard notion of unification [9] to detect when a prohibition and a permission overlap.",
                "For instance, an obligation obl(inform(A1, R1, A2, R2, p(c, X), T)) and a prohibition prh(inform(a1, r1, a2, r2, p(Y, d), T )) are in conflict as they unify under Ïƒ = {A1/a1, R1/r1, A2/a2, R2/r2, Y/c, X/d, T/T }).",
                "We formally capture this notion: Def. 9.",
                "A (deontic) conflict arises between two normative positions N and N under a substitution Ïƒ, denoted as conflict(N, N , Ïƒ), if and only if N = prh(Â¯I), N = obl(Â¯I ) and unify(Â¯I,Â¯I , Ïƒ).",
                "That is, a prohibition and an obligation are in conflict if, and only if, their illocutions unify under Ïƒ.",
                "The substitution Ïƒ, called here the conflict set, unifies the agents, roles and atomic formulae.",
                "We assume that unify is a suitable implementation of a unification algorithm which i) always terminates (possibly failing, if a unifier cannot be found); ii) is correct; and iii) has linear computational complexity.",
                "Inconsistencies caused by the same illocution being simultaneously permitted and prohibited can be formalised similarly.",
                "In this paper we focus on prohibition/obligation conflicts, but the computational machinery introduced in Section 6.1 can equally be used to detect prohibition/permission inconsistencies, if we substitute modality obl for per. 5.",
                "FORMALISING CONFLICT-FREEDOM In this section we introduce some background knowledge on CPNs assuming a basic understanding of ordinary Petri Nets.",
                "For technical details we refer the reader to [16].",
                "We then map NSs to CPNs and analyse their properties.",
                "CPNs combine the strength of Petri nets with the strength of functional programming languages.",
                "On the one hand, Petri nets provide the primitives for the description of the synchronisation of concurrent processes.",
                "As noticed in [16], CPNs have a semantics which builds upon true concurrency, instead of interleaving.",
                "In our opinion, a true-concurrency semantics is easier to work with because it is the way we envisage the connection between the <br>coordination</br> level and the normative level of a multi-agent system to be.",
                "On the other hand, the functional programming languages used by CPNs provide the primitives for the definition of data types and the manipulation of their data values.",
                "Thus, we can readily translate expressions of a normative structure.",
                "Last but not least, CPNs have a well-defined semantics which unambiguously defines the behaviour of each CPN.",
                "Furthermore, CPNs have a large number of formal analysis methods and tools by which properties of CPNs can be proved.",
                "Summing up, CPNs provide us with all the necessary features to formally reason about normative structures given that an adequate mapping is provided.",
                "In accordance with Petri nets, the states of a CPN are represented by means of places.",
                "But unlike Petri Nets, each place has an associated data type determining the kind of data which the place may contain.",
                "A state of a CPN is called a marking.",
                "It consists of a number of tokens positioned on the individual places.",
                "Each token carries a data value which has the type of the corresponding place.",
                "In general, a place may contain two or more tokens with the same data value.",
                "Thus, a marking of a CPN is a function which maps each place into a multi-set2 of tokens of the correct type.",
                "One often refers to the token values as token colours and one also refers to the data types as colour sets.",
                "The types of a CPN can be arbitrarily complex.",
                "Actions in a CPN are represented by means of transitions.",
                "An incoming arc into a transition from a place indicates that the transition may remove tokens from the corresponding place while an outgoing arc indicates that the transition may add tokens.",
                "The exact number of tokens and their data values are determined by the arc expressions, which are encoded using the programming language chosen for the CPN.",
                "A transition is enabled in a CPN if and only if all the 2 A multi-set (or bag) is an extension to the notion of set, allowing the possibility of multiple appearances of the same element.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 639 variables in the expressions of its incoming arcs are bound to some value(s) (each one of these bindings is referred to as a binding element).",
                "If so, the transition may occur by removing tokens from its input places and adding tokens to its output places.",
                "In addition to the arc expressions, it is possible to attach a boolean guard expression (with variables) to each transition.",
                "Putting all the elements above together we obtain a formal definition of CPN that shall be employed further ahead for mapping purposes.",
                "Def. 10.",
                "A CPN is a tuple Î£, P, T, A, N, C, G, E, I where: (i) Î£ is a finite set of non-empty types, also called colour sets; (ii) P is a finite set of places; (iii) T is a finite set of transitions; (iv) A is a finite set of arcs; (v) N is a node function defined from A into P Ã— T âˆª T Ã— P; (vi) C is a colour function from P into Î£; (vii) G is a guard function from T into expressions; (viii) E is an arc expression function from A into expressions; (ix) I is an initialisation function from P into closed expressions; Notice that the informal explanation of the enabling and occurrence rules given above provides the foundations to understand the behaviour of a CPN.",
                "In accordance with ordinary Petri nets, the concurrent behaviour of a CPN is based on the notion of step.",
                "Formally, a step is a non-empty and finite multi-set over the set of all binding elements.",
                "Let step S be enabled in a marking M. Then, S may occur, changing the marking M to M .",
                "Moreover, we say that marking M is directly reachable from marking M by the occurrence of step S, and we denote it by M[S > M .",
                "A finite occurrence sequence is a finite sequence of steps and markings: M1[S1 > M2 . . .",
                "Mn[Sn > Mn+1 such that n âˆˆ N and Mi[Si > Mi+1 âˆ€i âˆˆ {1, . . . , n}.",
                "The set of all possible markings reachable for a net Net from a marking M is called its reachability set, and is denoted as R(Net, M). 5.1 Mapping to Coloured Petri Nets Our normative structure is a labelled bi-partite graph.",
                "The same is true for a Coloured Petri Net.",
                "We are presenting a mapping f from one to the other, in order to provide semantics for the normative structure and prove properties about it by using well-known theoretical results from work on CPNs.",
                "The mapping f makes use of correspondences between normative scenes and CPN places, normative transitions and CPN transitions and finally, between arc labels and CPN arc expressions.",
                "S â†’ P B â†’ T Lin âˆª Lout â†’ E The set of types is the singleton set containing the colour NP (i.e.",
                "Î£ = {NP}).",
                "This complex type is structured as follows (we use CPN-ML [4] syntax): color NPT = with Obl | Per | Prh | NoMod color IP = with inform | declare | offer color UTT = record illp : IP ag1, role1, ag2, role2 : string content: string time : int color NP = record mode : NPT illoc : UTT Modelling illocutions as norms without modality (NoMod) is a formal trick we use to ensure that sub-nets can be combined as explained below.",
                "Arcs are mapped almost directly.",
                "A is a finite set of arcs and N is a node function, such that âˆ€a âˆˆ A âˆƒa âˆˆ Ain âˆªAout .",
                "N(a) = a .",
                "The initialisation function I is defined as I(p) = Î”s (âˆ€s âˆˆ S where p is obtained from s using the mapping; remember that s = ids, Î”s ).",
                "Finally, the colour function C assigns the colour NP to every place: C(p) = NP (âˆ€p âˆˆ P).",
                "We are not making use of the guard function G. In future work, this function can be used to model constraints when we extend the expressiveness of our norm language. 5.2 Properties of Normative Structures Having defined the mapping from normative structures to Coloured Petri Nets, we now look at properties of CPNs that help us understand the complexity of conflict detection.",
                "One question we would like to answer is, whether at a given point in time, a given normative structure is conflict-free.",
                "Such a snapshot of a normative structure corresponds to a marking in the mapped CPN.",
                "Def. 11.",
                "Given a marking Mi, this marking is conflictfree if Â¬âˆƒp âˆˆ P. âˆƒnp1, np2 âˆˆ Mi(p) such that np1.mode = Obl and np2.mode = Prh and np1.illoc and np2.illoc unify under a valid substitution.",
                "Another interesting question would be, whether a conflict will occur from such a snapshot of the system by propagating the normative positions.",
                "In order to answer this question, we first translate the snapshot of the normative structure to the corresponding CPN and then execute the finite occurence sequence of markings and steps, verifying the conflict-freedom of each marking as we go along.",
                "Def. 12.",
                "Given a marking Mi, a finite occurrence sequence Si, Si+1, ..., Sn is called conflict-free, if and only if Mi[Si > Mi+1 . . .",
                "Mn[Sn > Mn+1 and Mk is conflict-free for all k such that i â‰¤ k â‰¤ n + 1.",
                "However, the main question we would like to investigate, is whether or not a given normative structure is conflictresistant, that is, whether or not the agents enacting the MAS are able to bring about conflicts through their actions.",
                "As soon as one includes the possibility of actions (or utterances) from autonomous agents, one looses determinism.",
                "Having mapped the normative structure to a CPN, we now add CPN models of the agents interactions.",
                "Each form of agent interaction (i.e. each activity) can be modelled using CPNs along the lines of Cost et al. [5].",
                "These nondeterministic CPNs feed tokens into the CPN that models the normative structure.",
                "This leads to the introduction of non-determinism into the combined CPN.",
                "The lower half of figure 3 shows part of a CPN model of an agent protocol where the arc denoted with 1 represents some utterance of an illocution by an agent.",
                "The target transition of this arc, not only moves a token on to the next state of this CPN, but also places a token in the place corresponding to the appropriate normative scene in the CPN model of the normative structure (via arc 2).",
                "Transition 3 finally could propagate that token in form of an obligation, for example.",
                "Thus, from a given marking, many different occurrence sequences are possible depending on the agents actions.",
                "We make use of the reachability set R to define a situation in which agents cannot cause conflicts. 640 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) Figure 3: Constructing the combined CPN Def. 13.",
                "Given a net N, a marking M is conflict-resistant if and only if all markings in R(N,M) are conflict-free.",
                "Checking conflict-freedom of a marking can be done in polynomial time by checking all places of the CPN for conflicting tokens.",
                "Conflict-freedom of an occurrence sequence in the CPN that represents the normative structure can also be done in polynomial time since this sequence is deterministic given a snapshot.",
                "Whether or not a normative structure is designed safely corresponds to checking the conflict-resistance of the initial marking M0.",
                "Now, verifying conflict-resistance of a marking becomes a very difficult task.",
                "It corresponds to the reachability problem in a CPN: can a state be reached or a marking achieved, that contains a conflict?.",
                "This reachability problem is known to be NP-complete for ordinary Petri Nets [22] and since CPNs are functionally identical, we cannot hope to verify conflict-resistance of a normative structure off-line in a reasonable amount of time.",
                "Therefore, distributed, run-time mechanisms are needed to ensure that a normative structure maintains consistency.",
                "We present one such mechanism in the following section. 6.",
                "MANAGING NORMATIVE STRUCTURES Once a conflict (as defined in Section 4) has been detected, we propose to employ the unifier to resolve the conflict.",
                "In our example, if the variables in prh(inform(a1, r1, a2, r2, p(Y, d), T )) do not get the values specified in substitution Ïƒ then there will not be a conflict.",
                "However, rather than computing the complement set of a substitution (which can be an infinite set) we propose to annotate the prohibition with the unifier itself and use it to determine what the variables of that prohibition cannot be in future unifications in order to avoid a conflict.",
                "We therefore denote annotated prohibitions as prh(Â¯I) Î£, where Î£ = {Ïƒ1, . . . , Ïƒn}, is a set of unifiers.",
                "Annotated norms3 are interpreted as deontic constructs with curtailed influences, that is, their effect (on agents, roles and illocutions) has been limited by the set Î£ of unifiers.",
                "A prohibition may be in conflict with various obligations in a given normative scene s = id, Î” and we need to record (and possibly avoid) all these conflicts.",
                "We define below an algorithm which ensures that a normative position will be added to a normative scene in such a way that it will not cause any conflicts. 3 Although we propose to curtail prohibitions, the same machinery can be used to define the curtailment of obligations instead.",
                "These different policies are dependent on the intended deontic semantics and requirements of the systems addressed.",
                "For instance, some MASs may require that their agents should not act in the presence of conflicts, that is, the obligation should be curtailed. 6.1 Conflict Resolution We propose a fine-grained way of resolving normative conflicts via unification.",
                "We detect the overlapping of the influences of norms , i.e. how they affect the behaviour of the concerned agents, and we curtail the influence of the normative position, by appropriately using the annotations when checking if the norm applies to illocutions.",
                "The algorithm shown in Figure 4 depicts how we maintain a conflict-free set of norms.",
                "It adds a given norm N to an existing, conflictfree normative state Î”, obtaining a resulting new normative state Î” which is conflict-free, that is, its prohibitions are annotated with a set of conflict sets indicating which bindings for variables have to be avoided for conflicts not to take place. algorithm addNorm(N, Î”) begin 1 timestamp(N) 2 case N of 3 per(Â¯I): Î” := Î” âˆª {N} 4 prh(I): if N âˆˆ Î” s.t. conflict(N, N , Ïƒ) then Î” := Î” 5 else Î” := Î” âˆª {N} 6 prh(Â¯I): 7 begin 8 Î£ := âˆ… 9 for each N âˆˆ Î” do 10 if conflict(N, N , Ïƒ) then Î£ := Î£ âˆª {Ïƒ} 11 Î” := Î” âˆª {N Î£} 12 end 13 obl(Â¯I): 14 begin 15 Î”1 := âˆ…; Î”2 := âˆ… 16 for each (N Î£) âˆˆ Î” do 17 if N = prh(I) then 18 if conflict(N , N, Ïƒ) then Î”1 := Î”1 âˆª {N Î£} 19 else nil 20 else 21 if conflict(N , N, Ïƒ) then 22 begin 23 Î”1 := Î”1 âˆª {N Î£} 24 Î”2 := Î”2 âˆª {N (Î£ âˆª {Ïƒ})} 25 end 26 Î” := (Î” âˆ’ Î”1) âˆª Î”2 âˆª {N} 27 end 28 end case 29 return Î” end Figure 4: Algorithm to Preserve Conflict-Freedom The algorithm uses a case of structure to differentiate the different possibilities for a given norm N. Line 3 addresses the case when the given norm is a permission: N is simply added to Î”.",
                "Lines 4-5 address the case when we attempt to add a ground prohibition to a normative state: if it conflicts with any obligation, then it is discarded; otherwise it is added to the normative state.",
                "Lines 6-12 describe the situation when the normative position to be added is a nonground prohibition.",
                "In this case, the algorithm initialises Î£ to an empty set and loops (line 9-10) through the norms N in the old normative state Î”.",
                "Upon finding one that conflicts with N, the algorithm updates Î£ by adding the newly found conflict set Ïƒ to it (line 10).",
                "By looping through Î”, we are able to check any conflicts between the new prohibition and the existing obligations, adequately building the annotation Î£ to be used when adding N to Î” in line 11.",
                "Lines 13-27 describe how a new obligation is accommodated to an existing normative state.",
                "We make use of two initially empty, temporary sets, Î”1, Î”2.",
                "The algorithm loops through Î” (lines 16-25) picking up those annotated prohibitions N Î£ which conflict with the new obligation.",
                "There are, however, two cases to deal with: the one when a ground The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 641 prohibition is found (line 17), and its exception, covering non-ground prohibitions (line 20).",
                "In both cases, the old prohibition is stored in Î”1 (lines 18 and 23) to be later removed from Î” (line 26).",
                "However, in the case of a nonground prohibition, the algorithm updates its annotation of conflict sets (line 24).",
                "The loop guarantees that an exhaustive (linear) search through a normative state takes place, checking if the new obligation is in conflict with any existing prohibitions, possibly updating the annotations of these conflicting prohibitions.",
                "In line 26 the algorithm builds the new updated Î” by removing the old prohibitions stored in Î”1 and adding the updated prohibitions stored in Î”2 (if any), as well as the new obligation N. Our proposed algorithm is correct in that, for a given normative position N and a normative state Î”, it provides a new normative state Î” in which all prohibitions have annotations recording how they unify with existing obligations.",
                "The annotations can be empty, though: this is the case when we have a ground prohibition or a prohibition which does not unify/conflict with any obligation.",
                "Permissions do not affect our algorithm and they are appropriately dealt with (line 3).",
                "Any attempt to insert a ground prohibition which conflicts, yields the same normative state (line 4).",
                "When a new obligation is being added then the algorithm guarantees that all prohibitions are considered (lines 14-27), leading to the removal of conflicting ground prohibitions or the update of annotations of non-ground prohibitions.",
                "The algorithm always terminates: the loops are over a finite set Î” and the conflict checks and set operations always terminate.",
                "The complexity of the algorithm is linear: the set Î” is only examined once for each possible case of norm to be added.",
                "When managing normative states we may also need to remove normative positions.",
                "This is straightforward: permissions can be removed without any problems; annotated prohibitions can also be removed without further considerations; obligations, however, require some housekeeping.",
                "When an obligation is to be removed, we must check it against all annotated prohibitions in order to update their annotations.",
                "We apply the conflict check and obtain a unifier, then remove this unifier from the prohibitions annotation.",
                "We invoke the removal algorithm as removeNorm(N, Î”): it returns a new normative state Î” in which N has been removed, with possible alterations to other normative positions as explained. 6.2 Enactment of a Normative Structure The enactment of a normative structure amounts to the parallel, distributed execution of normative scenes and normative transitions.",
                "For illustrative purposes, hereafter we shall describe the interplay between the payment and delivery normative scenes and the normative transition nt linking them in the upper half of figure 2.",
                "With this aim, consider for instance that obl(inform(jules, client, rod, acc, pay(copper, 400, 350), T) âˆˆ Î”payment and that Î”delivery holds prh(inform(rod,wm, jules, client, delivered(Z, Q), T)).",
                "Such states indicate that client Jules is obliged to pay Â£400 for 350kg of copper to accountant Rod according to the payment normative scene, whereas Rod, taking up the role of warehouse manager this time, is prohibited to deliver anything to client Jules according to the delivery normative scene.",
                "For each normative scene, the enactment process goes as follows.",
                "Firstly, it processes its incoming message queue that contains three types of messages: utterances from the activity it is linked to; and normative commands either to add or remove normative positions.",
                "For instance, in our example, the payment normative scene collects the illocution I = utt((inform(jules, client, rod, acc, pay(copper, 400, 350), 35)) standing for client Jules pending payment for copper (via arrow A in figure 2).",
                "Utterances are timestamped and subsequently added to the normative state.",
                "We would have Î”payment = Î”payment âˆª {I}, in our example.",
                "Upon receiving normative commands to either add or remove a normative position, the normative scene invokes the corresponding addition or removal algorithm described in Section 6.1.",
                "Secondly, the normative scene acknowledges its state change by sending a trigger message to every outgoing normative transition it is connected to.",
                "In our example, the payment normative scene would be signalling its state change to normative transition nt.",
                "For normative transitions, the process works differently.",
                "Because each normative transition controls the operation of a single rule, upon receiving a trigger message, it polls every incoming normative scene for substitutions for the relevant illocution schemata on the LHS of its rule.",
                "In our example, nt (being responsible for the rule described in Section 3.4), would poll the payment normative scene (via arrow B) for substitutions.",
                "Upon receiving replies from them (in the form of sets of substitutions together with time-stamps), it has to unify substitutions from each of these normative scenes.",
                "For each unification it finds, the rule is fired, and hence the corresponding normative command is sent along to the output normative scene.",
                "The normative transition then keeps track of the firing message it sent on and of the time-stamps of the normative positions that triggered the firing.",
                "This is done to ensure that the very same normative positions in the LHS of a rule only trigger its firing once.",
                "In our example, nt would be receiving Ïƒ = {X/jules, Y/rod, Z/copper, Q/350} from the payment normative scene.",
                "Since the substitions in Ïƒ unify with nts rule, the rule is fired, and the normative command add(delivery : obl(rod, wm, jules, client, delivered(copper, 350), T)) is sent along to the delivery normative scene to oblige Rod to deliver to client Jules 350kg of copper.",
                "After that, the delivery normative scene would invoke the addNorm algorithm from figure 4 with Î”delivery and N = obl(rod, wm, jules, client, delivered(copper, 350)) as arguments. 7.",
                "RELATED WORK AND CONCLUSIONS Our contributions in this paper are three-fold.",
                "Firstly, we introduce an approach for the management of and reasoning about norms in a distributed manner.",
                "To our knowledge, there is little work published in this direction.",
                "In [8, 21], two languages are presented for the distributed enforcement of norms in MAS.",
                "However, in both works, each agent has a local message interface that forwards legal messages according to a set of norms.",
                "Since these interfaces are local to each agent, norms can only be expressed in terms of actions of that agent.",
                "This is a serious disadvantage, e.g. when one needs to activate an obligation to one agent due to a certain message of another one.",
                "The second contribution is the proposal of a normative structure.",
                "The notion is fruitful because it allows the separation of normative and procedural concerns.",
                "The normative structure we propose makes evident the similarity between the propagation of normative positions and the propagation 642 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) of tokens in Coloured Petri Nets.",
                "That similarity readily suggests a mapping between the two, and gives grounds to a convenient analytical treatment of the normative structure, in general, and the complexity of conflict detection, in particular.",
                "The idea of modelling interactions (in the form of conversations) via Petri Nets has been investigated in [18], where the interaction medium and individual agents are modelled as CPN sub-nets that are subsequently combined for analysis.",
                "In [5], conversations are first designed and analysed at the level of CPNs and thereafter translated into protocols.",
                "Lin et al. [20] map conversation schemata to CPNs.",
                "To our knowledge, the use of this representation in the support of conflict detection in regulated MAS has not been reported elsewhere.",
                "Finally, we present a distributed mechanism to resolve normative conflicts.",
                "Sartor [25] treats normative conflicts from the point of view of legal theory and suggests a way to order the norms involved.",
                "His idea is implemented in [12] but requires a central resource for norm maintenance.",
                "The approach to conflict detection and resolution is an adaptation and extension of the work on instantiation graphs reported in [17] and a related algorithm in [27].",
                "The algorithm presented in the current paper can be used to manage normative states distributedly: normative scenes that happen in parallel have an associated normative state Î” to which the algorithm is independently applied each time a new norm is to be introduced.",
                "These three contributions we present in this paper open many possibilities for future work.",
                "We should mention first, that as a broad strategy we are working on a generalisation of the notion of normative structure to make it operate with different <br>coordination</br> models, with richer deontic content and on top of different computational realisations of regulated MAS.",
                "As a first step in this direction we are taking advantage of the de-coupling between interaction protocols and declarative normative guidance that the normative structure makes available, to provide a normative layer for electronic institutions (as defined in [1]).",
                "We expect such coupling will endow electronic institutions with a more flexible -and more expressive- normative environment.",
                "Furthermore, we want to extend our model along several directions: (1) to handle negation and constraints as part of the norm language, and in particular the notion of time; (2) to accommodate multiple, hierarchical norm authorities based on roles, along the lines of Cholvy and Cuppens [3] and power relationships as suggested by Carabelea et al. [2]; (3) to capture in the conflict resolution algorithm different semantics relating the deontic notions by supporting different axiomations (e.g., relative strength of prohibition versus obligation, default deontic notions, deontic inconsistencies).",
                "On the theoretical side, we intend to use analysis techniques of CPNs in order to characterise classes of CPNs (e.g., acyclic, symmetric, etc.) corresponding to families of Normative Structures that are susceptible to tractable offline conflict detection.",
                "The combination of these techniques along with our online conflict resolution mechanisms is intended to endow MAS designers with the ability to incorporate norms into their systems in a principled way. 8.",
                "REFERENCES [1] J. L. Arcos, M. Esteva, P. Noriega, J.",
                "A. RodrÂ´Ä±guez, and C. Sierra.",
                "Engineering open environments with electronic institutions.",
                "Journal on Engineering Applications of Artificial Intelligence, 18(2):191-204, 2005. [2] C. Carabelea, O. Boissier, and C. Castelfranchi.",
                "Using social power to enable agents to reason about being part of a group.",
                "In 5th Internat.",
                "Workshop, ESAW 2004, pages 166-177, 2004. [3] L. Cholvy and F. Cuppens.",
                "Solving normative conflicts by merging roles.",
                "In Fifth International Conference on Artificial Intelligence and Law, Washington, USA, 1995. [4] S. Christensen and T. B. Haagh.",
                "Design CPN - overview of CPN ML syntax.",
                "Technical report, University of Aarhus, 1996. [5] R. S. Cost, Y. Chen, T. W. Finin, Y. Labrou, and Y. Peng.",
                "Using colored petri nets for conversation modeling.",
                "In Issues in Agent Communication, pages 178-192, London, UK, 2000. [6] F. Dignum.",
                "Autonomous Agents with Norms.",
                "Artificial Intelligence and Law, 7(1):69-79, 1999. [7] A. Elhag, J. Breuker, and P. Brouwer.",
                "On the Formal Analysis of Normative Conflicts.",
                "Information & Comms.",
                "Techn.",
                "Law, 9(3):207-217, Oct. 2000. [8] M. Esteva, W. Vasconcelos, C. Sierra, and J.",
                "A. RodrÂ´Ä±guez-Aguilar.",
                "Norm consistency in electronic institutions. volume 3171 (LNAI), pages 494-505.",
                "Springer-Verlag, 2004. [9] M. Fitting.",
                "First-Order Logic and Automated Theorem Proving.",
                "Springer-Verlag, New York, U.S.A., 1990. [10] N. Fornara, F. Vigan`o, and M. Colombetti.",
                "An Event Driven Approach to Norms in Artificial Institutions.",
                "In AAMAS05 Workshop: Agents, Norms and Institutions for Regulated Multiagent Systems (ANI@REM), Utrecht, 2005. [11] D. Gaertner, P. Noriega, and C. Sierra.",
                "Extending the BDI architecture with commitments.",
                "In Proceedings of the 9th International Conference of the Catalan Association of Artificial Intelligence, 2006. [12] A. GarcÂ´Ä±a-Camino, P. Noriega, and J.-A.",
                "RodrÂ´Ä±guez-Aguilar.",
                "An Algorithm for Conflict Resolution in Regulated Compound Activities.",
                "In 7th Int.Workshop - ESAW 06, 2006. [13] A. GarcÂ´Ä±a-Camino, J.-A.",
                "RodrÂ´Ä±guez-Aguilar, C. Sierra, and W. Vasconcelos.",
                "A Distributed Architecture for Norm-Aware Agent Societies.",
                "In DALT III, volume 3904 (LNAI), pages 89-105.",
                "Springer, 2006. [14] F. Giunchiglia and L. Serafini.",
                "Multi-language hierarchical logics or: How we can do without modal logics.",
                "Artificial Intelligence, 65(1):29-70, 1994. [15] J. Habermas.",
                "The Theory of Communication Action, Volume One, Reason and the Rationalization of Society.",
                "Beacon Press, 1984. [16] K. Jensen.",
                "Coloured Petri Nets: Basic Concepts, Analysis Methods and Practical Uses (Volume 1).",
                "Springer, 1997. [17] M. Kollingbaum and T. Norman.",
                "Strategies for resolving norm conflict in practical reasoning.",
                "In ECAI Workshop <br>coordination</br> in Emergent Agent Societies 2004, 2004. [18] J.-L. Koning, G. Francois, and Y. Demazeau.",
                "Formalization and pre-validation for interaction protocols in a multi agent systems.",
                "In ECAI, pages 298-307, 1998. [19] B. Kramer and J. Mylopoulos.",
                "Knowledge Representation.",
                "In S. C. Shapiro, editor, Encyclopedia of Artificial Intelligence, volume 1, pages 743-759.",
                "John Wiley & Sons, 1992. [20] F. Lin, D. H. Norrie, W. Shen, and R. Kremer.",
                "A schema-based approach to specifying conversation policies.",
                "In Issues in Agent Communication, pages 193-204, 2000. [21] N. Minsky.",
                "Law Governed Interaction (LGI): A Distributed <br>coordination</br> and Control Mechanism (An Introduction, and a Reference Manual).",
                "Technical report, Rutgers University, 2005. [22] T. Murata.",
                "Petri nets: Properties, analysis and applications.",
                "Proceedings of the IEEE, 77(4):541-580, 1989. [23] S. Parsons, C. Sierra, and N. Jennings.",
                "Agents that reason and negotiate by arguing.",
                "Journal of Logic and Computation, 8(3):261-292, 1998. [24] A. Ricci and M. Viroli.",
                "<br>coordination</br> Artifacts: A Unifying Abstraction for Engineering Environment-Mediated <br>coordination</br> in MAS.",
                "Informatica, 29:433-443, 2005. [25] G. Sartor.",
                "Normative conflicts in legal reasoning.",
                "Artificial Intelligence and Law, 1(2-3):209-235, June 1992. [26] M. Sergot.",
                "A Computational Theory of Normative Positions.",
                "ACM Trans.",
                "Comput.",
                "Logic, 2(4):581-622, 2001. [27] W. W. Vasconcelos, M. Kollingbaum, and T. Norman.",
                "Resolving Conflict and Inconsistency in Norm-Regulated Virtual Organisations.",
                "In Proceedings of AAMAS 07, Hawaii, USA, 2007.",
                "IFAAMAS. [28] G. H. von Wright.",
                "Norm and Action: A Logical Inquiry.",
                "Routledge and Kegan Paul, London, 1963. [29] M. Wooldridge.",
                "An Introduction to Multiagent Systems.",
                "John Wiley & Sons, Chichester, UK, Feb. 2002.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 643"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Para modelar la separaciÃ³n de las preocupaciones entre el nivel de \"coordinaciÃ³n\" (interacciones de los agentes) y el nivel normativo (propagaciÃ³n de posiciones normativas), proponemos un artefacto llamado estructura normativa (NS).",
                "En este escenario, los agentes pueden desempeÃ±ar uno de los cuatro roles: registro de registro de Marexit NegociaciÃ³n de la entrega de pago \"CoordinaciÃ³n\" Modelo Contrato Figura 1: Estructura de actividad del escenario Ketplace Contador (ACC), Cliente, Proveedor (Supp) y Gerentes de Warehouse (WM).",
                "Mostramos en la Figura 2 una representaciÃ³n diagramÃ¡tica de cÃ³mo se relacionan las actividades y una estructura normativa: el contrato de entrega de pago Nivel normativo Registro Registro de la entrega de pagos NegociaciÃ³n \"CoordinaciÃ³n\" Contrato NT Figura 2: Actividades y estructura normativa A medida que se pronuncian ilocuciones durante las actividades, las posiciones normativas.",
                "En nuestra opiniÃ³n, es mÃ¡s fÃ¡cil trabajar con una semÃ¡ntica de concesiÃ³n verdadera porque es la forma en que imaginamos la conexiÃ³n entre el nivel de \"coordinaciÃ³n\" y el nivel normativo de un sistema de agentes mÃºltiples para ser.",
                "Primero debemos mencionar que, como estrategia amplia, estamos trabajando en una generalizaciÃ³n de la nociÃ³n de estructura normativa para que funcione con diferentes modelos de \"coordinaciÃ³n\", con contenido deÃ³ntico mÃ¡s rico y ademÃ¡s de diferentes realizaciones computacionales de MAS reguladas.",
                "En el taller de ECAI \"CoordinaciÃ³n\" en Sociedades de Agentes Emergentes 2004, 2004. [18] J.-L.Koning, G. Francois e Y. DeMazeau.",
                "InteracciÃ³n de la ley gobernada (LGI): una \"coordinaciÃ³n\" distribuida y un mecanismo de control (una introducciÃ³n y un manual de referencia).",
                "Artifactos de \"coordinaciÃ³n\": una abstracciÃ³n unificadora para la \"coordinaciÃ³n\" mediada por el entorno de ingenierÃ­a en MAS."
            ],
            "translated_text": "",
            "candidates": [
                "coordinaciÃ³n",
                "coordinaciÃ³n",
                "coordinaciÃ³n",
                "CoordinaciÃ³n",
                "coordinaciÃ³n",
                "CoordinaciÃ³n",
                "coordinaciÃ³n",
                "coordinaciÃ³n",
                "coordinaciÃ³n",
                "coordinaciÃ³n",
                "coordinaciÃ³n",
                "CoordinaciÃ³n",
                "coordinaciÃ³n",
                "coordinaciÃ³n",
                "coordinaciÃ³n",
                "coordinaciÃ³n",
                "coordinaciÃ³n"
            ],
            "error": []
        }
    }
}