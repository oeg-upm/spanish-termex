{
    "id": "J-59",
    "original_text": "Cost Sharing in a Job Scheduling Problem Using the Shapley Value Debasis Mishra Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium mishra@core.ucl.ac.be Bharath Rangarajan Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium rangarajan@core.ucl.ac.be ABSTRACT A set of jobs need to be served by a single server which can serve only one job at a time. Jobs have processing times and incur waiting costs (linear in their waiting time). The jobs share their costs through compensation using monetary transfers. We characterize the Shapley value rule for this model using fairness axioms. Our axioms include a bound on the cost share of jobs in a group, efficiency, and some independence properties on the the cost share of a job. Categories and Subject Descriptors J.4 [Social and Behaviorial Sciences]: Economics General Terms Economics, Theory 1. INTRODUCTION A set of jobs need to be served by a server. The server can process only one job at a time. Each job has a finite processing time and a per unit time waiting cost. Efficient ordering of this queue directs us to serve the jobs in increasing order of the ratio of per unit time waiting cost and processing time. To compensate for waiting by jobs, monetary transfers to jobs are allowed. How should the jobs share the cost equitably amongst themselves (through transfers)? The problem of fair division of costs among agents in a queue has many practical applications. For example, computer programs are regularly scheduled on servers, data are scheduled to be transmitted over networks, jobs are scheduled in shop-floor on machines, and queues appear in many public services (post offices, banks). Study of queueing problems has attracted economists for a long time [7, 17]. Cost sharing is a fundamental problem in many settings on the Internet. Internet can be seen as a common resource shared by many users and the cost incured by using the resource needs to be shared in an equitable manner. The current surge in cost sharing literature from computer scientists validate this claim [8, 11, 12, 6, 24]. Internet has many settings in which our model of job scheduling appears and the agents waiting in a queue incur costs (jobs scheduled on servers, queries answered from a database, data scheduled to be transmitted over a fixed bandwidth network etc.). We hope that our analysis will give new insights on cost sharing problems of this nature. Recently, there has been increased interest in cost sharing methods with submodular cost functions [11, 12, 6, 24]. While many settings do have submodular cost functions (for example, multi-cast transmission games [8]), while the cost function of our game is supermodular. Also, such literature typically does not assume budget-balance (transfers adding up to zero), while it is an inherent feature of our model. A recent paper by Maniquet [15] is the closest to our model and is the motivation behind our work 1 . Maniquet [15] studies a model where he assumes all processing times are unity. For such a model, he characterizes the Shapley value rule using classical fairness axioms. Chun [1] interprets the worth of a coalition of jobs in a different manner for the same model and derives a reverse rule. Chun characterizes this rule using similar fairness axioms. Chun [2] also studies the envy properties of these rules. Moulin [22, 21] studies the queueing problem from a strategic point view when per unit waiting costs are unity. Moulin introduces new concepts in the queueing settings such as splitting and merging of jobs, and ways to prevent them. Another stream of literature is on sequencing games, first introduced by Curiel et al. [4]. For a detailed survey, refer to Curiel et al. [3]. Curiel et al. [4] defined sequencing games similar to our model, but in which an initial ordering of jobs is given. Besides, their notion of worth of a coalition is very different from the notions studied in Maniquet [15] and Chun [1] (these are the notions used in our work too). The particular notion of the worth of a coalition makes the sequencing game of Curiel et al. [4] convex, whereas our game is not convex and does not assume the presence of any initial order. In summary, the focus of this stream of 1 The authors thank Fran¸cois Maniquet for several fruitful discussions. 232 research is how to share the savings in costs from the initial ordering to the optimal ordering amongst jobs (also see Hamers et al. [9], Curiel et al. [5]). Recently, Klijn and S´anchez [13, 14] considered sequencing games without any initial ordering of jobs. They take two approaches to define the worth of coalitions. One of their approaches, called the tail game, is related to the reverse rule of Chun [1]. In the tail game, jobs in a coalition are served after the jobs not in the coalition are served. Klijn and S´anchez [14] showed that the tail game is balanced. Further, they provide expressions for the Shapley value in tail game in terms of marginal vectors and reversed marginal vectors. We provide a simpler expression of the Shapley value in the tail game, generalizing the result in Chun [1]. Klijn and S´anchez [13] study the core of this game in detail. Strategic aspects of queueing problems have also been researched. Mitra [19] studies the first best implementation in queueing models with generic cost functions. First best implementation means that there exists an efficient mechanism in which jobs in the queue have a dominant strategy to reveal their true types and their transfers add up to zero. Suijs [27] shows that if waiting costs of jobs are linear then first best implementation is possible. Mitra [19] shows that among a more general class of queueing problems first best implementation is possible if and only if the cost is linear. For another queueing model, Mitra [18] shows that first best implementation is possible if and only if the cost function satisfies a combinatorial property and an independence property. Moulin [22, 21] studies strategic concepts such as splitting and merging in queueing problems with unit per unit waiting costs. The general cost sharing literature is vast and has a long history. For a good survey, we refer to [20]. From the seminal work of Shapley [25] to recent works on cost sharing in multi-cast transmission and optimization problems [8, 6, 23] this area has attracted economists, computer scientists, and operations researchers. 1.1 Our Contribution Ours is the first model which considers cost sharing when both processing time and per unit waiting cost of jobs are present. We take a cooperative game theory approach and apply the classical Shapley value rule to the problem. We show that the Shapley value rule satisfies many intuitive fairness axioms. Due to two dimensional nature of our model and one dimensional nature of Maniquets model [15], his axioms are insufficient to characterize the Shapley value in our setting. We introduce axioms such as independece of preceding jobs unit waiting cost and independence of following jobs processing time. A key axiom that we introduce gives us a bound on cost share of a job in a group of jobs which have the same ratio of unit time waiting cost and processing time (these jobs can be ordered in any manner between themseleves in an efficient ordering). If such a group consists of just one job, then the axiom says that such a job should at least pay his own processing cost (i.e., the cost it would have incurred if it was the only job in the queue). If there are multiple jobs in such a group, the probability of any two jobs from such a group inflicting costs on each other is same (1 2 ) in an efficient ordering. Depending on the ordering selected, one job inflicts cost on the other. Our fairness axiom says that each job should at least bear such expected costs. We characterize the Shapley value rule using these fairness axioms. We also extend the envy results in [2] to our setting and discuss a class of reasonable cost sharing mechanisms. 2. THE MODEL There are n jobs that need to be served by one server which can process only one job at a time. The set of jobs are denoted as N = {1, . . . , n}. σ : N → N is an ordering of jobs in N and σi denotes the position of job i in the ordering σ. Given an ordering σ, define Fi(σ) = {j ∈ N : σi < σj} and Pi(σ) = {j ∈ N : σi > σj}. Every job i is identified by two parameters: (pi, θi). pi is the processing time and θi is the cost per unit waiting time of job i. Thus, a queueing problem is defined by a list q = (N, p, θ) ∈ Q, where Q is the set of all possible lists. We will denote γi = θi pi . Given an ordering of jobs σ, the cost incurred by job i is given by ci(σ) = piθi + θi   j∈Pi(σ) pj. The total cost incurred by all jobs due to an ordering σ can be written in two ways: (i) by summing the cost incurred by every job and (ii) by summing the costs inflicted by a job on other jobs with their own processing cost. C(N, σ) =   i∈N ci(σ) =   i∈N piθi +   i∈N ¡θi   j∈Pi(σ) pj¢. =   i∈N piθi +   i∈N ¡pi   j∈Fi(σ) θj¢. An efficient ordering σ∗ is the one which minimizes the total cost incurred by all jobs. So, C(N, σ∗ ) ≤ C(N, σ) ∀ σ ∈ Σ. To achieve notational simplicity, we will write the total cost in an efficient ordering of jobs from N as C(N) whenever it is not confusing. Sometimes, we will deal with only a subset of jobs S ⊆ N. The ordering σ will then be defined on jobs in S only and we will write the total cost from an efficient ordering of jobs in S as C(S). The following lemma shows that jobs are ordered in decreasing γ in an efficient ordering. This is also known as the weighted shortest processing time rule, first introduced by Smith [26]. Lemma 1. For any S ⊆ N, let σ∗ be an efficient ordering of jobs in S. For every i = j, i, j ∈ S, if σ∗ i > σ∗ j , then γi ≤ γj. Proof. Assume for contradiction that the statment of the lemma is not true. This means, we can find two consecutive jobs i, j ∈ S (σ∗ i = σ∗ j + 1) such that γi > γj. Define a new ordering σ by interchanging i and j in σ∗ . The costs to jobs in S \\ {i, j} is not changed from σ∗ to σ. The difference between total costs in σ∗ and σ is given by, C(S, σ) − C(S, σ∗ ) = θjpi − θipj. From efficiency we get θjpi − θipj ≥ 0. This gives us γj ≥ γi, which is a contradiction. An allocation for q = (N, p, θ) ∈ Q has two components: an ordering σ and a transfer ti for every job i ∈ N. ti denotes the payment received by job i. Given a transfer ti and an ordering σ, the cost share of job i is defined as, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. 233 An allocation (σ, t) is efficient for q = (N, p, θ) whenever σ is an efficient ordering and £i∈N ti = 0. The set of efficient orderings of q is denoted as Σ∗ (q) and σ∗ (q) will be used to refer to a typical element of the set. The following straightforward lemma says that for two different efficient orderings, the cost share in one efficient allocation is possible to achieve in the other by appropriately modifying the transfers. Lemma 2. Let (σ, t) be an efficient allocation and π be the vector of cost shares of jobs from this allocation. If σ∗ = σ be an efficient ordering and t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, then (σ∗ , t∗ ) is also an efficient allocation. Proof. Since (σ, t) is efficient, £i∈N ti = 0. This gives £i∈N πi = C(N). Since σ∗ is an efficient ordering, £i∈N ci(σ∗ ) = C(N). This means, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0. So, (σ∗ , t∗ ) is an efficient allocation. Depending on the transfers, the cost shares in different efficient allocations may differ. An allocation rule ψ associates with every q ∈ Q a non-empty subset ψ(q) of allocations. 3. COST SHARING USING THE SHAPLEY VALUE In this section, we define the coalitional cost of this game and analyze the solution proposed by the Shapley value. Given a queue q ∈ Q, the cost of a coalition of S ⊆ N jobs in the queue is defined as the cost incurred by jobs in S if these are the only jobs served in the queue using an efficient ordering. Formally, the cost of a coalition S ⊆ N is, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, where σ∗ = σ∗ (S) is an efficient ordering considering jobs from S only. The worth of a coalition of S jobs is just −C(S). Maniquet [15] observes another equivalent way to define the worth of a coalition is using the dual function of the cost function C(·). Other interesting ways to define the worth of a coalition in such games is discussed by Chun [1], who assume that a coalition of jobs are served after the jobs not in the coalition are served. The Shapley value (or cost share) of a job i is defined as, SVi =   S⊆N\\{i} |S|!(|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) The Shapley value allocation rule says that jobs are ordered using an efficient ordering and transfers are assigned to jobs such that the cost share of job i is given by Equation 1. Lemma 3. Let σ∗ be an efficient ordering of jobs in set N. For all i ∈ N, the Shapley value is given by, SVi = piθi + 1 2 ¡Li + Ri¢, where Li = θi £j∈Pi(σ∗) pj and Ri = pi £j∈Fi(σ∗) θj. Proof. Another way to write the Shapley value formula is the following [10], SVi =   S⊆N:i∈S ∆(S) |S| , where ∆(S) = C(S) if |S| = 1 and ∆(S) = C(S)−£T S ∆(T). This gives ∆({i}) = C({i}) = piθi ∀i ∈ N. For any i, j ∈ N with i = j, we have ∆({i, j}) = C({i, j}) − C({i}) − C({j}) = min(piθi + pjθj + pjθi, piθi + pjθj + piθj) − piθi − pjθj = min(pjθi, piθj). We will show by induction that ∆(S) = 0 if |S| > 2. For |S| = 3, let S = {i, j, k}. Without loss of generality, assume θi pi ≥ θj pj ≥ θk pk . So, ∆(S) = C(S) − ∆({i, j}) − ∆({j, k}) − ∆({i, k})−∆({i})−∆({j})−∆({k}) = C(S)−piθj −pjθk − piθk − piθi − pjθj − pkθk = C(S) − C(S) = 0. Now, assume for T S, ∆(T) = 0 if |T| > 2. Without loss of generality assume that σ to be the identity mapping. Now, ∆(S) = C(S) −   T S ∆(T) = C(S) −   i∈S   j∈S:j<i ∆({i, j}) −   i∈S ∆({i}) = C(S) −   i∈S   j∈S:j<i pjθi −   i∈S piθi = C(S) − C(S) = 0. This proves that ∆(S) = 0 if |S| > 2. Using the Shapley value formula now, SVi =   S⊆N:i∈S ∆(S) |S| = ∆({i}) + 1 2   j∈N:j=i ∆({i, j}) = piθi + 1 2 ¡  j<i ∆({i, j}) +   j>i ∆({i, j})¢ = piθi + 1 2 ¡  j<i pjθi +   j>i piθj¢= piθi + 1 2 ¡Li + Ri¢. 4. AXIOMATICCHARACTERIZATIONOF THE SHAPLEY VALUE In this section, we will define serveral axioms on fairness and characterize the Shapley value using them. For a given q ∈ Q, we will denote ψ(q) as the set of allocations from allocation rule ψ. Also, we will denote the cost share vector associated with an allocation rule (σ, t) as π and that with allocation rule (σ , t ) as π etc. 4.1 The Fairness Axioms We will define three types of fairness axioms: (i) related to efficiency, (ii) related to equity, and (iii) related to independence. Efficiency Axioms We define two types of efficiency axioms. One related to efficiency which states that an efficient ordering should be selected and the transfers of jobs should add up to zero (budget balance). Definition 1. An allocation rule ψ satisfies efficiency if for every q ∈ Q and (σ, t) ∈ ψ(q), (σ, t) is an efficient allocation. 234 The second axiom related to efficiency says that the allocation rule should not discriminate between two allocations which are equivalent to each other in terms of cost shares of jobs. Definition 2. An allocation rule ψ satisfies Pareto indifference if for every q ∈ Q, (σ, t) ∈ ψ(q), and (σ , t ) ∈ Σ(q), we have ¡πi = πi ∀ i ∈ N¢⇒ ¡(σ , t ) ∈ ψ(q)¢. An implication of Pareto indifference axiom and Lemma 2 is that for every efficient ordering there is some set of transfers of jobs such that it is part of an efficient rule and the cost share of a job in all these allocations are same. Equity Axioms How should the cost be shared between two jobs if the jobs have some kind of similarity between them? Equity axioms provide us with fairness properties which help us answer this question. We provide five such axioms. Some of these axioms (for example anonymity, equal treatment of equals) are standard in the literature, while some are new. We start with a well known equity axiom called anonymity. Denote ρ : N → N as a permutation of elements in N. Let ρ(σ, t) denote the allocation obtained by permuting elements in σ and t according to ρ. Similarly, let ρ(p, θ) denote the new list of (p, θ) obtained by permuting elements of p and θ according to ρ. Our first equity axiom states that allocation rules should be immune to such permutation of data. Definition 3. An allocation rule ψ satisfies anonymity if for all q ∈ Q, (σ, t) ∈ ψ(q) and every permutation ρ, we then ρ(σ, t) ∈ ψ(N, ρ(q)). The next equity axiom is classical in literature and says that two similar jobs should be compensated such that their cost shares are equal. This implies that if all the jobs are of same type, then jobs should equally share the total system cost. Definition 4. An allocation rule ψ satisfies equal treatment of equals (ETE) if for all q ∈ Q, (σ, t) ∈ ψ(q), i, j ∈ N, then ¡pi = pj; θi = θj¢⇒ ¡πi = πj¢. ETE directs us to share costs equally between jobs if they are of the same per unit waiting cost and processing time. But it is silent about the cost shares of two jobs i and j which satisfy θi pi = θj pj . We introduce a new axiom for this. If an efficient rule chooses σ such that σi < σj for some i, j ∈ N, then job i is inflicting a cost of piθj on job j and job j is inflicting zero cost on job i. Define for some γ ≥ 0, S(γ) = {i ∈ N : γi = γ}. In an efficient rule, the elements in S(γ) can be ordered in any manner (in |S(γ)|! ways). If i, j ∈ S(γ) then we have pjθi = piθj. Probability of σi < σj is 1 2 and so is the probability of σi > σj. The expected cost i inflicts on j is 1 2 piθj and j inflicts on i is 1 2 pjθi. Our next fairness axiom says that i and j should each be responsible for their own processing cost and this expected cost they inflict on each other. Arguing for every pair of jobs i, j ∈ S(γ), we establish a bound on the cost share of jobs in S(γ). We impose this as an equity axiom below. Definition 5. An allocation rule satisfies expected cost bound (ECB) if for all q ∈ Q, (σ, t) ∈ ψ(q) with π being the resulting cost share, for any γ ≥ 0, and for every i ∈ S(γ), we have πi ≥ piθi + 1 2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢. The central idea behind this axiom is that of expected cost inflicted. If an allocation rule chooses multiple allocations, we can assign equal probabilities of selecting one of the allocations. In that case, the expected cost inflicted by a job i on another job j in the allocation rule can be calculated. Our axiom says that the cost share of a job should be at least its own processing cost and the total expected cost it inflicts on others. Note that the above bound poses no constraints on how the costs are shared among different groups. Also observe that if S(γ) contains just one job, ECB says that job should at least bear its own processing cost. A direct consequence of ECB is the following lemma. Lemma 4. Let ψ be an efficient rule which satisfies ECB. For a q ∈ Q if S(γ) = N, then for any (σ, t) ∈ ψ(q) which gives a cost share of π, πi = piθi + 1 2 ¡Li + Ri¢∀ i ∈ N. Proof. From ECB, we get πi ≥ piθi+1 2 ¡Li+Ri¢∀ i ∈ N. Assume for contradiction that there exists j ∈ N such that πj > pjθj + 1 2 ¡Li + Ri¢. Using efficiency and the fact that £i∈N Li = £i∈N Ri, we get £i∈N πi = C(N) > £i∈N piθi + 1 2 £i∈N ¡Li + Ri¢ = C(N). This gives us a contradiction. Next, we introduce an axiom about sharing the transfer of a job between a set of jobs. In particular, if the last job quits the system, then the ordering need not change. But the transfer to the last job needs to be shared between the other jobs. This should be done in proportion to their processing times because every job influenced the last job based on its processing time. Definition 6. An allocation rule ψ satisfies proportionate responsibility of p (PRp) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = |N|, q = (N \\ {k}, p , θ ) ∈ Q, such that for all i ∈ N\\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk pi £j=k pj . An analogous fairness axiom results if we remove the job from the beginning of the queue. Since the presence of the first job influenced each job depending on their θ values, its transfer needs to be shared in proportion to θ values. Definition 7. An allocation rule ψ satisfies proportionate responsibility of θ (PRθ) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = 1, q = (N \\{k}, p , θ ) ∈ Q, such that for all i ∈ N \\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk θi £j=k θj . The proportionate responsibility axioms are generalizations of equal responsibility axioms introduced by Maniquet [15]. 235 Independence Axioms The waiting cost of a job does not depend on the per unit waiting cost of its preceding jobs. Similarly, the waiting cost inflicted by a job to its following jobs is independent of the processing times of the following jobs. These independence properties should be carried over to the cost sharing rules. This gives us two independence axioms. Definition 8. An allocation rule ψ satisfies independence of preceding jobs θ (IPJθ) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk < γk, pk = pk, then for all j ∈ N such that σj > σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ). Definition 9. An allocation rule ψ satisfies independence of following jobs p (IFJp) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk > γk, θk = θk, then for all j ∈ N such that σj < σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ). 4.2 The Characterization Results Having stated the fairness axioms, we propose three different ways to characterize the Shapley value rule using these axioms. All our characterizations involve efficiency and ECB. But if we have IPJθ, we either need IFJp or PRp. Similarly if we have IFJp, we either need IPJθ or PRθ. Proposition 1. Any efficient rule ψ that satisfies ECB, IPJθ, and IFJp is a rule implied by the Shapley value rule. Proof. Define for any i, j ∈ N, θi j = γipj and pi j = θj γi . Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider the following q = (N, p , θ ) corresponding to job i with pj = pj if j ≤ i and pj = pi j if j > i, θj = θi j if j < i and θj = θj if j ≥ i. Observe that all jobs have the same γ: γi. By Lemma 2 and efficiency, (σ, t ) ∈ ψ(q ) for some set of transfers t . Using Lemma 4, we get cost share of i from (σ, t ) as πi = piθi + 1 2 ¡Li + Ri¢. Now, for any j < i, if we change θj to θj without changing processing time, the new γ of j is γj ≥ γi. Applying IPJθ, the cost share of job i should not change. Similarly, for any job j > i, if we change pj to pj without changing θj, the new γ of j is γj ≤ γi. Applying IFJp, the cost share of job i should not change. Applying this procedure for every j < i with IPJθ and for every j > i with IFJp, we reach q = (N, p, θ) and the payoff of i does not change from πi. Using this argument for every i ∈ N and using the expression for the Shapley value in Lemma 3, we get the Shapley value rule. It is possible to replace one of the independence axioms with an equity axiom on sharing the transfer of a job. This is shown in Propositions 2 and 3. Proposition 2. Any efficient rule ψ that satisfies ECB, IPJθ, and PRp is a rule implied by the Shapley value rule. Proof. As in the proof of Proposition 1, define θi j = γipj ∀ i, j ∈ N. Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider a queue with jobs in set K = {1, . . . , i, i + 1}, where i < n. Define q = (K, p, θ ), where θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ is an efficient ordering for q . By ECB and Lemma 4 the cost share of job i + 1 in any allocation rule in ψ must be πi+1 = pi+1θi+1 + 1 2 ¡£j<i+1 pjθi+1¢. Now, consider q = (K, p, θ ) such that θj = θi j ∀ j ≤ i and θi+1 = θi+1. σ remains an efficient ordering in q and by IPJθ the cost share of i + 1 remains πi+1. In q = (K \\ {i + 1}, p, θ ), we can calculate the cost share of job i using ECB and Lemma 4 as πi = piθi + 1 2 £j<i pjθi. So, using PRp we get the new cost share of job i in q as πi = πi + ti+1 pi j<i+1 pj = piθi + 1 2 ¡£j<i pjθi + piθi+1¢. Now, we can set K = K ∪ {i + 2}. As before, we can find cost share of i + 2 in this queue as πi+2 = pi+2θi+2 + 1 2 ¡£j<i+2 pjθi+2¢. Using PRp we get the new cost share of job i in the new queue as πi = piθi + 1 2 ¡£j<i pjθi + piθi+1 + piθi+2¢. This process can be repeated till we add job n at which point cost share of i is piθi + 1 2 ¡£j<i pjθi + £j>i piθj¢. Then, we can adjust the θ of preceding jobs of i to their original value and applying IPJθ, the payoffs of jobs i through n will not change. This gives us the Shapley values of jobs i through n. Setting i = 1, we get cost shares of all the jobs from ψ as the Shapley value. Proposition 3. Any efficient rule ψ that satisfies ECB, IFJp, and PRθ is a rule implied by the Shapley value rule. Proof. The proof mirrors the proof of Proposition 2. We provide a short sketch. Analogous to the proof of Proposition 2, θs are kept equal to original data and processing times are initialized to pi+1 j . This allows us to use IFJp. Also, contrast to Proposition 2, we consider K = {i, i + 1, . . . , n} and repeatedly add jobs to the beginning of the queue maintaining the same efficient ordering. So, we add the cost components of preceding jobs to the cost share of jobs in each iteration and converge to the Shapley value rule. The next proposition shows that the Shapley value rule satisfies all the fairness axioms discussed. Proposition 4. The Shapley value rule satisfies efficiency, pareto indifference, anonymity, ETE, ECB, IPJθ, IFJp, PRp, and PRθ. Proof. The Shapley value rule chooses an efficient ordering and by definition the payments add upto zero. So, it satisfies efficiency. The Shapley value assigns same cost share to a job irrespective of the efficient ordering chosen. So, it is pareto indifferent. The Shapley value is anonymous because the particular index of a job does not effect his ordering or cost share. For ETE, consider two jobs i, j ∈ N such that pi = pj and θi = θj. Without loss of generality assume the efficient ordering to be 1, . . . , i, . . . , j, . . . , n. Now, the Shapley value of job i is 236 SVi = piθi + 1 2 ¡Li + Ri¢(From Lemma 3) = pjθj + 1 2 ¡Lj + Rj¢− 1 2 ¡Li − Lj + Ri − Rj¢ = SVj − 1 2 ¡   i<k≤j piθk −   i≤k<j pkθi¢ = SVj − 1 2   i<k≤j (piθk − pkθi) (Using pi = pj and θi = θj) = SVj (Using θk pk = θi pi for all i ≤ k ≤ j). The Shapley value satisfies ECB by its expression in Lemma 3. Consider any job i, in an efficient ordering σ, if we increase the value of γj for some j = i such that σj > σi, then the set Pi ( preceding jobs) does not change in the new efficient ordering. If γj is changed such that pj remains the same, then the expression £j∈Pi θipj is unchanged. If (p, θ) values of no other jobs are changed, then the Shapley value is unchanged by increasing γj for some j ∈ Pi while keeping pj unchanged. Thus, the Shapley value rule satisfies IPJθ. An analogous argument shows that the Shapley value rule satisfies IFJp. For PRp, assume without loss of generality that jobs are ordered 1, . . . , n in an efficient ordering. Denote the transfer of job i = n due to the Shapley value with set of jobs N and set of jobs N \\ {n} as ti and ti respectively. Transfer of last job is tn = 1 2 θn £j<n pj. Now, ti = 1 2 ¡θi   j<i pj − pi   j>i θj¢ = 1 2 ¡θi   j<i pj − pi   j>i:j=n θj¢− 1 2 piθn = ti − 1 2 θn   j<n pj pi £j<n pj = ti − tn pi £j<n pj . A similar argument shows that the Shapley value rule satisfies PRθ. These series of propositions lead us to our main result. Theorem 1. Let ψ be an allocation rule. The following statements are equivalent: 1) For each q ∈ Q, ψ(q) selects all the allocation assigning jobs cost shares implied by the Shapley value. 2) ψ satisfies efficiency, ECB, IFJp, and IPJθ. 3) ψ satisfies efficiency, ECB, IFJp, and PRθ. 4) ψ satisfies efficiency, ECB, PRp, and IPJθ. Proof. The proof follows from Propositions 1, 2, 3, and 4. 5. DISCUSSIONS 5.1 A Reasonable Class of Cost Sharing Mechanisms In this section, we will define a reasonable class of cost sharing mechanisms. We will show how these reasonable mechanisms lead to the Shapley value mechanism. Definition 10. An allocation rule ψ is reasonable if for all q ∈ Q and (σ, t) ∈ ψ(q) we have for all i ∈ N, ti = α ¡θi   j∈Pi(σ) pj − pi   j∈Fi(σ) θj¢∀ i ∈ N, where 0 ≤ α ≤ 1. The reasonable cost sharing mechanism says that every job should be paid a constant fraction of the difference between the waiting cost he incurs and the waiting cost he inflicts on other jobs. If α = 0, then every job bears its own cost. If α = 1, then every job gets compensated for its waiting cost but compensates others for the cost he inflicts on others. The Shapley value rule comes as a result of ETE as shown in the following proposition. Proposition 5. Any efficient and reasonable allocation rule ψ that satisfies ETE is a rule implied by the Shapley value rule. Proof. Consider a q ∈ Q in which pi = pj and θi = θj. Let (σ, t) ∈ ψ(q) and π be the resulting cost shares. From ETE, we get, πi = πj ⇒ ci(σ) − ti = cj(σ) − tj ⇒ piθi + (1 − α)Li + αRi = pjθj + (1 − α)Lj + αRj (Since ψ is efficient and reasonable) ⇒ (1 − α)(Li − Lj) = α(Rj − Ri) (Using pi = pj, θi = θj) ⇒ 1 − α = α (Using Li − Lj = Rj − Ri = 0) ⇒ α = 1 2 . This gives us the Shapley value rule by Lemma 3. 5.2 Results on Envy Chun [2] discusses a fariness condition called no-envy for the case when processing times of all jobs are unity. Definition 11. An allocation rule satisfies no-envy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tj, where π is the cost share from allocation rule (σ, t) and σij is the ordering obtaining by swapping i and j. From the result in [2], the Shapley value rule does not satisfy no-envy in our model also. To overcome this, Chun [2] introduces the notion of adjusted no-envy, which he shows is satisfied in the Shapley value rule when processing times of all jobs are unity. Here, we show that adjusted envy continues to hold in the Shapley value rule in our model (when processing times need not be unity). As before denote σij be an ordering where the position of i and j is swapped from an ordering σ. For adjusted noenvy, if (σ, t) is an allocation for some q ∈ Q, let tij be the 237 transfer of job i when the transfer of i is calculated with respect to ordering σij . Observe that an allocation may not allow for calculation of tij . For example, if ψ is efficient, then tij cannot be calculated if σij is also not efficient. For simplicity, we state the definition of adjusted no-envy to apply to all such rules. Definition 12. An allocation rule satisfies adjusted noenvy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tij i . Proposition 6. The Shapley value rule satisfies adjusted no-envy. Proof. Without loss of generality, assume efficient ordering of jobs is: 1, . . . , n. Consider two jobs i and i + k. From Lemma 3, SVi = piθi + 1 2 ¡  j<i θipj +   j>i θjpi¢. Let ˆπi be the cost share of i due to adjusted transfer tii+k i in the ordering σii+k . ˆπi = ci(σii+k ) − tii+k i = piθi + 1 2 ¡  j<i θipj + θipi+k +   i<j<i+k θipj +   j>i θjpi − θi+kpi −   i<j<i+k θjpi¢ = SVi + 1 2   i<j≤i+k ¡θipj − θjpi¢ ≥ SVi (Using the fact that θi pi ≥ θj pj for i < j). 6. CONCLUSION We studied the problem of sharing costs for a job scheduling problem on a single server, when jobs have processing times and unit time waiting costs. We took a cooperative game theory approach and show that the famous the Shapley value rule satisfies many nice fairness properties. We characterized the Shapley value rule using different intuitive fairness axioms. In future, we plan to further simplify some of the fairness axioms. Some initial simplifications already appear in [16], where we provide an alternative axiom to ECB and also discuss the implication of transfers between jobs (in stead of transfers from jobs to a central server). We also plan to look at cost sharing mechanisms other than the Shapley value. Investigating the strategic power of jobs in such mechanisms is another line of future research. 7. REFERENCES [1] Youngsub Chun. A Note on Maniquets Characterization of the Shapley Value in Queueing Problems. Working Paper, Rochester University, 2004. [2] Youngsub Chun. No-envy in Queuing Problems. Working Paper, Rochester University, 2004. [3] Imma Curiel, Herbert Hamers, and Flip Klijn. Sequencing Games: A Survey. In Peter Borm and Hans Peters, editors, Chapter in Game Theory. Theory and Decision Library, Kulwer Academic Publishers, 2002. [4] Imma Curiel, Giorgio Pederzoli, and Stef Tijs. Sequencing Games. European Journal of Operational Research, 40:344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs, and Bart Veltman. Sequencing and Cooperation. Operations Research, 42(3):566-568, May-June 1994. [6] Nikhil R. Devanur, Milena Mihail, and Vijay V. Vazirani. Strategyproof Cost-sharing Mechanisms for Set Cover and Facility Location Games. In Proceedings of Fourth Annual ACM Conferece on Electronic Commerce, 2003. [7] Robert J. Dolan. Incentive Mechanisms for Priority Queueing Problems. Bell Journal of Economics, 9:421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou, and Scott Shenker. Sharing the Cost of Multicast Transmissions. In Proceedings of Thirty-Second Annual ACM Symposium on Theory of Computing, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs, and Peter Borm. The Split Core for Sequencing Games. Games and Economic Behavior, 15:165-176, 1996. [10] John C. Harsanyi. Contributions to Theory of Games IV, chapter A Bargaining Model for Cooperative n-person Games. Princeton University Press, 1959. Editors: A. W. Tucker, R. D. Luce. [11] Kamal Jain and Vijay Vazirani. Applications of Approximate Algorithms to Cooperative Games. In Proceedings of 33rd Symposium on Theory of Computing (STOC 01), 2001. [12] Kamal Jain and Vijay Vazirani. Equitable Cost Allocations via Primal-Dual Type Algorithms. In Proceedings of 34th Symposium on Theory of Computing (STOC 02), 2002. [13] Flip Klijn and Estela S´anchez. Sequencing Games without a Completely Specified Initial Order. Report in Statistics and Operations Research, pages 1-17, 2002. Report 02-04. [14] Flip Klijn and Estela S´anchez. Sequencing Games without Initial Order. Working Paper, Universitat Aut´onoma de Barcelona, July 2004. [15] Franois Maniquet. A Characterization of the Shapley Value in Queueing Problems. Journal of Economic Theory, 109:90-103, 2003. [16] Debasis Mishra and Bharath Rangarajan. Cost sharing in a job scheduling problem. Working Paper, CORE, 2005. [17] Manipushpak Mitra. Essays on First Best Implementable Incentive Problems. Ph.D. Thesis, Indian Statistical Institute, New Delhi, 2000. [18] Manipushpak Mitra. Mechanism design in queueing problems. Economic Theory, 17(2):277-305, 2001. [19] Manipushpak Mitra. Achieving the first best in sequencing problems. Review of Economic Design, 7:75-91, 2002. [20] Herv´e Moulin. Handbook of Social Choice and Welfare, chapter Axiomatic Cost and Surplus Sharing. North-Holland, 2002. Publishers: Arrow, Sen, Suzumura. [21] Herv´e Moulin. On Scheduling Fees to Prevent 238 Merging, Splitting and Transferring of Jobs. Working Paper, Rice University, 2004. [22] Herv´e Moulin. Split-proof Probabilistic Scheduling. Working Paper, Rice University, 2004. [23] Herv´e Moulin and Rakesh Vohra. Characterization of Additive Cost Sharing Methods. Economic Letters, 80:399-407, 2003. [24] Martin P´al and ´Eva Tardos. Group Strategyproof Mechanisms via Primal-Dual Algorithms. In Proceedings of the 44th Annual IEEE Symposium on the Foundations of Computer Science (FOCS 03), 2003. [25] Lloyd S. Shapley. Contributions to the Theory of Games II, chapter A Value for n-person Games, pages 307-317. Annals of Mathematics Studies, 1953. Ediors: H. W. Kuhn, A. W. Tucker. [26] Wayne E. Smith. Various Optimizers for Single-Stage Production. Naval Research Logistics Quarterly, 3:59-66, 1956. [27] Jeroen Suijs. On incentive compatibility and budget balancedness in public decision making. Economic Design, 2, 2002. 239",
    "original_translation": "Coste compartido en un problema de programación de empleo utilizando el valor de shapley de Debasis Mishra para la investigación de operaciones y la economía (core) Universit´e Catholique de Louvain Louvain La Neuve, Bélgica mishra@core.ucl.ac.be Bharath Rangarajan para la investigación de operaciones y la economía de la economía(Core) Universit´e Catholique de Louvain Louvain La Neuve, Belgium rangarajan@core.ucl.ac.be Resumen Un conjunto de trabajos debe ser atendido por un solo servidor que solo puede servir un trabajo a la vez. Los trabajos tienen tiempos de procesamiento e incurren en costos de espera (lineal en su tiempo de espera). Los trabajos comparten sus costos mediante la compensación utilizando transferencias monetarias. Caracterizamos la regla de valor de Shapley para este modelo utilizando axiomas de equidad. Nuestros axiomas incluyen un límite en la parte de los costos de los trabajos en un grupo, eficiencia y algunas propiedades de independencia en la parte de los costos de un trabajo. Categorías y descriptores de sujetos J.4 [Ciencias sociales y conductuales]: Economía Términos generales Economía, Teoría 1. Introducción Un conjunto de trabajos debe ser atendido por un servidor. El servidor solo puede procesar un trabajo a la vez. Cada trabajo tiene un tiempo de procesamiento finito y un costo de espera por unidad de tiempo. El pedido eficiente de esta cola nos dirige a servir a los trabajos en el orden creciente de la relación de costo de espera y tiempo de procesamiento por unidad de tiempo. Para compensar la espera por empleos, se permiten transferencias monetarias a trabajos. ¿Cómo deberían los trabajos compartir el costo de manera equitativa entre ellos (a través de transferencias)? El problema de la división justa de los costos entre los agentes en una cola tiene muchas aplicaciones prácticas. Por ejemplo, los programas de computadora están programados regularmente en los servidores, los datos están programados para transmitirse a través de redes, los trabajos están programados en el piso de la tienda en máquinas y las colas aparecen en muchos servicios públicos (oficinas de correos, bancos). El estudio de los problemas de cola ha atraído a los economistas durante mucho tiempo [7, 17]. Los costos compartidos son un problema fundamental en muchos entornos en Internet. Internet puede verse como un recurso común compartido por muchos usuarios y el costo incurado al usar el recurso debe compartirse de manera equitativa. El aumento actual en la literatura de costos compartidos de los científicos informáticos validan esta afirmación [8, 11, 12, 6, 24]. Internet tiene muchas configuraciones en las que aparece nuestro modelo de programación de empleo y los agentes que esperan en una cola incurren en costos (trabajos programados en servidores, consultas respondidas desde una base de datos, datos programados para transmitirse a través de una red de ancho de banda fija, etc.). Esperamos que nuestro análisis brinde nuevas ideas sobre los problemas de costo compartido de esta naturaleza. Recientemente, ha habido un mayor interés en los métodos de costo compartido con funciones de costo submodular [11, 12, 6, 24]. Si bien muchas configuraciones tienen funciones de costo submodular (por ejemplo, juegos de transmisión de múltiples castas [8]), mientras que la función de costo de nuestro juego es supermodular. Además, dicha literatura generalmente no asume el equilibrio del presupuesto (transferencias que se suman a cero), mientras que es una característica inherente de nuestro modelo. Un artículo reciente de Maniquet [15] es el más cercano a nuestro modelo y es la motivación detrás de nuestro trabajo 1. Maniquet [15] estudia un modelo donde asume que todos los tiempos de procesamiento son la unidad. Para tal modelo, caracteriza la regla de valor de Shapley utilizando axiomas clásicos de equidad. Chun [1] interpreta el valor de una coalición de empleos de manera diferente para el mismo modelo y deriva una regla inversa. Chun caracteriza esta regla usando axiomas de equidad similares. Chun [2] también estudia las propiedades de envidia de estas reglas. Moulin [22, 21] estudia el problema de cola desde una vista de punto estratégico cuando los costos de espera por unidad son la unidad. Moulin presenta nuevos conceptos en la configuración de colas, como dividir y fusionar trabajos, y formas de prevenirlos. Otro flujo de literatura está en los juegos de secuenciación, introducidos por primera vez por Curiel et al.[4]. Para una encuesta detallada, consulte Curiel et al.[3]. Curiel et al.[4] Los juegos de secuenciación definidos similares a nuestro modelo, pero en los que se otorga un orden inicial de trabajos. Además, su noción de valor de una coalición es muy diferente de las nociones estudiadas en Maniquet [15] y Chun [1] (estas son las nociones utilizadas en nuestro trabajo también). La noción particular del valor de una coalición hace que el juego de secuenciación de Curiel et al.[4] Convexo, mientras que nuestro juego no es convexo y no asume la presencia de ningún orden inicial. En resumen, el enfoque de esta corriente de 1 Los autores agradecen a Fran¸cois Maniquet por varias discusiones fructíferas.232 La investigación es cómo compartir los ahorros en los costos desde el orden inicial hasta el orden óptimo entre los trabajos (ver también Hamers et al. [9], Curiel et al. [5]). Recientemente, Klijn y S´anchez [13, 14] consideraron la secuencia de juegos sin ningún orden inicial de trabajos. Toman dos enfoques para definir el valor de las coaliciones. Uno de sus enfoques, llamado juego de cola, está relacionado con la regla inversa de Chun [1]. En el juego de cola, los trabajos en una coalición se sirven después de que se sirven los trabajos que no en la coalición. Klijn y S´anchez [14] mostraron que el juego de cola está equilibrado. Además, proporcionan expresiones para el valor de Shapley en el juego de cola en términos de vectores marginales y vectores marginales invertidos. Proporcionamos una expresión más simple del valor de Shapley en el juego de cola, generalizando el resultado en Chun [1]. Klijn y S´anchez [13] estudian el núcleo de este juego en detalle. También se han investigado aspectos estratégicos de los problemas de cola. Mitra [19] estudia la primera mejor implementación en modelos de colas con funciones de costo genérico. La primera mejor implementación significa que existe un mecanismo eficiente en el que los trabajos en la cola tienen una estrategia dominante para revelar sus tipos verdaderos y sus transferencias se suman a cero. Suijs [27] muestra que si los costos de espera de los trabajos son lineales, entonces es posible la primera mejor implementación. Mitra [19] muestra que entre una clase más general de problemas de cola, la primera mejor implementación es posible si y solo si el costo es lineal. Para otro modelo de cola, Mitra [18] muestra que la primera mejor implementación es posible si y solo si la función de costo satisface una propiedad combinatoria y una propiedad de independencia. Moulin [22, 21] estudia conceptos estratégicos, como dividir y fusionar problemas de cola con la unidad por unidad de costos de espera. La literatura general de costos compartidos es vasta y tiene una larga historia. Para una buena encuesta, nos referimos a [20]. Desde el trabajo seminal de Shapley [25] hasta trabajos recientes sobre costos compartidos en problemas de transmisión y optimización de varios casos [8, 6, 23] Esta área ha atraído a economistas, informáticos e investigadores de operaciones.1.1 Nuestra contribución es el primer modelo que considera el costo compartido cuando el tiempo de procesamiento y el costo de espera de los trabajos están presentes. Tomamos un enfoque de teoría de juegos cooperativo y aplicamos la regla de valor de Shapley clásica al problema. Mostramos que la regla del valor de Shapley satisface muchos axiomas intuitivos de equidad. Debido a la naturaleza bidimensional de nuestro modelo y la naturaleza unidimensional del modelo de Maniquets [15], sus axiomas son insuficientes para caracterizar el valor de Shapley en nuestro entorno. Introducimos axiomas como Independece de la unidad de empleos anterior a los costos de espera y la independencia del tiempo de procesamiento de empleos. Un axioma clave que presentamos nos da un límite en la parte de costos de un trabajo en un grupo de trabajos que tienen la misma relación de tiempo de espera de tiempo de unidad y tiempo de procesamiento (estos trabajos se pueden ordenar de cualquier manera entre ellos en un pedido eficiente). Si dicho grupo consiste en un solo trabajo, entonces el axioma dice que dicho trabajo debería al menos pagar su propio costo de procesamiento (es decir, el costo en el que habría incurrido si fuera el único trabajo en la cola). Si hay múltiples trabajos en dicho grupo, la probabilidad de dos trabajos de dicho grupo que infligen costos entre sí es la misma (1 2) en un pedido eficiente. Dependiendo del pedido seleccionado, un trabajo inflige el costo en el otro. Nuestro axioma de justicia dice que cada trabajo debería al menos asumir tales costos esperados. Caracterizamos la regla de valor de Shapley usando estos axiomas de equidad. También ampliamos los resultados de envidia en [2] a nuestro entorno y discutimos una clase de mecanismos razonables de costo compartido.2. El modelo hay n trabajos que deben ser atendidos por un servidor que solo puede procesar un trabajo a la vez. El conjunto de trabajos se denota como n = {1 ,..., n}.σ: N → N es un orden de trabajos en n y σi denota la posición del trabajo I en el orden σ. Dado un orden σ, defina fi (σ) = {j ∈ N: σi <σj} y pi (σ) = {j ∈ N: σi> σj}. Cada trabajo I es identificado por dos parámetros: (PI, θi).Pi es el tiempo de procesamiento y θi es el costo por unidad de tiempo de espera del trabajo i. Por lo tanto, un problema de cola se define mediante una lista q = (n, p, θ) ∈ Q, donde Q es el conjunto de todas las listas posibles. Denotaremos γi = θi pi. Dado un orden de trabajos σ, el costo incurrido por el trabajo I está dado por Ci (σ) = Piθi + θi j∈Pi (σ) PJ. El costo total incurrido por todos los trabajos debido a un pedido σ se puede escribir de dos maneras: (i) sumando el costo incurrido por cada trabajo y (ii) sumando los costos infligidos por un trabajo en otros trabajos con su propio costo de procesamiento. C (n, σ) = i∈N ci (σ) = i∈N piθi + i∈N ¡θi j∈Pi (σ) pj ¢.= i∈N piθi + i∈N ¡pi j∈Fi (σ) θj ¢. Un orden eficiente σ ∗ es el que minimiza el costo total incurrido por todos los trabajos. Entonces, c (n, σ ∗) ≤ c (n, σ) ∀ σ ∈ σ. Para lograr una simplicidad de notación, escribiremos el costo total en un orden eficiente de trabajos de n como c (n) siempre que no sea confuso. A veces, lidiaremos solo con un subconjunto de trabajos S ⊆ N. El orden σ se definirá solo en trabajos en S solo y escribiremos el costo total de un orden eficiente de trabajos en S como C (S). El siguiente lema muestra que los trabajos se ordenan para disminuir el γ en un pedido eficiente. Esto también se conoce como la regla de tiempo de procesamiento más corta ponderada, introducida por primera vez por Smith [26]. Lema 1. Para cualquier s ⊆ n, deje σ ∗ un orden eficiente de trabajos en S. para cada i = j, i, j ∈ S, si σ ∗ i> σ ∗ j, entonces γi ≤ γj. Prueba. Suponga por contradicción que el estebo del lema no es cierto. Esto significa que podemos encontrar dos trabajos consecutivos I, j ∈ S (σ ∗ i = σ ∗ j + 1) tal que γi> γj. Defina un nuevo orden σ intercambiando I y J en σ ∗. Los costos de los trabajos en S \\ {i, J} no cambian de σ ∗ a σ. La diferencia entre los costos totales en σ ∗ y σ viene dada por, c (s, σ) - c (s, σ ∗) = θjpi - θipj. De la eficiencia obtenemos θjpi - θipj ≥ 0. Esto nos da γj ≥ γi, que es una contradicción. Una asignación para q = (n, p, θ) ∈ Q tiene dos componentes: un orden σ y una transferencia Ti para cada trabajo i ∈ N. ti denota el pago recibido por el trabajo i. Dada una transferencia Ti y un orden σ, el costo compartido del trabajo I se define como, πi = ci (σ) - ti = θi j∈N: σj ≤σi pj - ti.233 Una asignación (σ, t) es eficiente para q = (n, p, θ) siempre que σ sea un orden eficiente y £ i∈N ti = 0. El conjunto de ordenamientos eficientes de Q se denota como σ ∗ (Q) y σ ∗ (Q) se utilizará para referirse a un elemento típico del conjunto. El siguiente lema sencillo dice que para dos pedidos eficientes diferentes, la participación de costos en una asignación eficiente es posible lograr en el otro modificando adecuadamente las transferencias. Lema 2. Sea (σ, t) una asignación eficiente y π el vector de las acciones de costos de los trabajos de esta asignación. Si σ ∗ = σ será un orden eficiente y t ∗ i = ci (σ ∗) - πi ∀ i ∈ N, entonces (σ ∗, t ∗) también es una asignación eficiente. Prueba. Ya que (σ, t) es eficiente, £ i∈N ti = 0. Esto da £ i∈N πi = c (n). Dado que σ ∗ es un orden eficiente, £ i∈N ci (σ ∗) = c (n). Esto significa, £ i∈N t ∗ i = £ i∈N [ci (σ ∗) - πi] = 0. Entonces, (σ ∗, t ∗) es una asignación eficiente. Dependiendo de las transferencias, las acciones de costos en diferentes asignaciones eficientes pueden diferir. Una regla de asignación ψ se asocia con cada q ∈ Q un subconjunto no vacío ψ (q) de asignaciones.3. Costos compartidos utilizando el valor de Shapley en esta sección, definimos el costo de coalición de este juego y analizamos la solución propuesta por el valor de Shapley. Dada una cola q ∈ Q, el costo de una coalición de s ⊆ n trabajos en la cola se define como el costo incurrido por los trabajos en s si estos son los únicos trabajos atendidos en la cola utilizando un pedido eficiente. Formalmente, el costo de una coalición s ⊆ n es, c (s) = i∈S j fueronsolo. El valor de una coalición de trabajos S es solo −c (s). Maniquet [15] observa que otra forma equivalente de definir el valor de una coalición es usar la función dual de la función de costo C (·). Chun [1] discute otras formas interesantes de definir el valor de una coalición en tales juegos, quienes asumen que se sirve una coalición de empleos después de que se sirven los empleos que no en la coalición. El valor de Shapley (o los costos compartidos) de un trabajo I se define como, svi = s⊆n \\ {i} | s |!(| N | - | s | - 1)!| N |!¡C (S∪ {i}) - C (s) ¢.(1) La regla de asignación de valor de Shapley dice que los trabajos se ordenan utilizando un pedido eficiente y las transferencias se asignan a trabajos de manera que el costo del trabajo I esté dado por la ecuación 1. Lema 3. Sea σ ∗ un orden eficiente de trabajos en el conjunto N. Para todos los i ∈ N, el valor de Shapley viene dado por SVI = Piθi + 1 2 ¡li + ri ¢, donde li = θi £ j∈Pi (σ ∗)PJ y Ri = Pi £ j∈Fi (σ ∗) θj. Prueba. Otra forma de escribir la fórmula de valor Shapley es la siguiente [10], svi = s⊆n: i∈S ∆ (s) | s |, donde ∆ (s) = c (s) if | s |= 1 y ∆ (s) = c (s) - £ t s ∆ (t). Esto da ∆ ({i}) = c ({i}) = piθi ∀i ∈ N. para cualquier i, j ∈ N con i = j, tenemos ∆ ({i, j}) = c ({i,j}) - c ({i}) - c ({j}) = min (piθi + pjθj + pjθi, piθi + pjθj + piθj) - piθi - pjθj = min (pjθi, piθj). Mostraremos por inducción que ∆ (s) = 0 si | s |> 2. Para | s |= 3, deje s = {i, j, k}. Sin pérdida de generalidad, suponga θi pi ≥ θj pj ≥ θk pk. Entonces, ∆ (s) = c (s) - ∆ ({i, j}) - ∆ ({j, k}) - ∆ ({i, k}) - ∆ ({i}) - ∆ ({j}) - ∆ ({k}) = c (s) −piθj −pjθk - piθk - piθi - pjθj - pkθk = c (s) - c (s) = 0. Ahora, suponga para t s, ∆ (t) = 0 si | t |> 2. Sin pérdida de generalidad supone que σ es el mapeo de identidad. Ahora, ∆ (s) = C (s) - t s ∆ (t) = c (s) - i∈S j∈S: j <i ∆ ({i, j}) - i∈S ∆ ({i}) = C (s) - i∈S j∈S: j <i pjθi - i∈S Piθi = c (s) - c (s) = 0. Esto demuestra que ∆ (s) = 0 si | s |> 2. Usando la fórmula de valor Shapley ahora, svi = s⊆n: i∈S ∆ (s) | s |= ∆ ({i}) + 1 2 j∈N: j = i ∆ ({i, j}) = piθi + 1 2 ¡j <i ∆ ({i, j}) + j> i ∆ ({i, j}) ¢ = piθi + 1 2 ¡j <i pjθi + j> i piθj ¢ = piθi + 1 2 ¡li + ri ¢.4. Caracterización axiomática del valor de Shapley En esta sección, definiremos varios axiomas en la equidad y caracterizaremos el valor de Shapley utilizándolos. Para un q ∈ Q dado, denotaremos ψ (q) como el conjunto de asignaciones de la regla de asignación ψ. Además, denotaremos el vector de costos compartidos asociado con una regla de asignación (σ, t) como π y que con la regla de asignación (σ, t) como π etc. 4.1 Los axiomas de equidad definiremos tres tipos de axiomas de equidad: (i (i) relacionado con la eficiencia, (ii) relacionado con la equidad, y (iii) relacionado con la independencia. Axiomas de eficiencia Definimos dos tipos de axiomas de eficiencia. Uno relacionado con la eficiencia que establece que se debe seleccionar un pedido eficiente y las transferencias de trabajos deben sumar cero (saldo presupuestario). Definición 1. Una regla de asignación ψ satisface la eficiencia si para cada q ∈ Q y (σ, t) ∈ ψ (q), (σ, t) es una asignación eficiente.234 El segundo axioma relacionado con la eficiencia dice que la regla de asignación no debe discriminar entre dos asignaciones que son equivalentes entre sí en términos de acciones de empleos. Definición 2. Una regla de asignación ψ satisface la indiferencia de Pareto si para cada q ∈ Q, (σ, t) ∈ ψ (q) y (σ, t) ∈ σ (q), tenemos πi = πi ∀ i ∈ N ¢ ⇒ ¡(σ, t) ∈ ψ (q) ¢. Una implicación del axioma de indiferencia de Pareto y el lema 2 es que para cada orden eficiente hay un conjunto de transferencias de trabajos de manera que forma parte de una regla eficiente y la participación de costos de un trabajo en todas estas asignaciones es la misma. Axiomas de equidad ¿Cómo se debe compartir el costo entre dos trabajos si los trabajos tienen algún tipo de similitud entre ellos? Los axiomas de equidad nos proporcionan propiedades de equidad que nos ayudan a responder esta pregunta. Proporcionamos cinco de estos axiomas. Algunos de estos axiomas (por ejemplo, el anonimato, el trato igual de iguales) son estándar en la literatura, mientras que algunos son nuevos. Comenzamos con un axioma de equidad bien conocido llamado anonimato. Denota ρ: n → n como una permutación de elementos en N. goza ρ (σ, t) denota la asignación obtenida al permitir elementos en σ y t de acuerdo con ρ. Del mismo modo, deje que ρ (p, θ) denote la nueva lista de (p, θ) obtenida permitiendo elementos de p y θ según ρ. Nuestro primer axioma de equidad establece que las reglas de asignación deben ser inmunes a dicha permutación de datos. Definición 3. Una regla de asignación ψ satisface el anonimato si para todas q ∈ Q, (σ, t) ∈ ψ (q) y cada permutación ρ, entonces ρ (σ, t) ∈ ψ (n, ρ (q)). El siguiente axioma de capital es clásico en literatura y dice que dos trabajos similares deben ser compensados de manera que sus acciones de costos sean iguales. Esto implica que si todos los trabajos son del mismo tipo, entonces los trabajos deberían compartir igualmente el costo total del sistema. Definición 4. Una regla de asignación ψ satisface el trato igual de iguales (ete) si para todas q ∈ Q, (σ, t) ∈ ψ (q), i, j ∈ N, entonces ¡Pi = Pj;θi = θj ¢ ⇒ ok πi = πj ¢. ETE nos dirige a compartir los costos por igual entre los trabajos si son del mismo por unidad de costo de espera y tiempo de procesamiento. Pero no está en silencio sobre el costo de las acciones de dos trabajos I y J que satisfacen θi pi = θj pj. Presentamos un nuevo axioma para esto. Si una regla eficiente elige σ tal que σi <σj para algunos i, j ∈ N, entonces el trabajo I está infligiendo un costo de piθj en el trabajo j y el trabajo j está infligiendo cero costo en el trabajo i. Definir para algunos γ ≥ 0, s (γ) = {i ∈ N: γi = γ}. En una regla eficiente, los elementos en S (γ) se pueden ordenar de cualquier manera (en | S (γ) |! Si i, j ∈ S (γ) entonces tenemos pjθi = piθj. La probabilidad de σi <σj es 1 2 y también la probabilidad de σi> σj. El costo esperado que inflige en J es 1 2 Piθj y J se infla en I es 1 2 PJθi. Nuestro próximo axioma de justicia dice que yo y J deberían ser responsables de su propio costo de procesamiento y este costo esperado se infligen el uno al otro. Argumentando por cada par de trabajos I, j ∈ S (γ), establecemos un límite en la parte de los costos de los trabajos en S (γ). Imponemos esto como un axioma de equidad a continuación. Definición 5. Una regla de asignación satisface el costo esperado (ECB) si para todas q ∈ Q, (σ, t) ∈ ψ (q) con π es el costo resultante compartido, para cualquier γ ≥ 0, y para cada i ∈ S (γ), tenemos πi ≥ Piθi + 1 2 ¡j∈S (γ): σj <σi pjθi + j∈S (γ): σj> σi piθj ¢. La idea central detrás de este axioma es la del costo esperado infligido. Si una regla de asignación elige múltiples asignaciones, podemos asignar probabilidades iguales de seleccionar una de las asignaciones. En ese caso, se puede calcular el costo esperado infligido por un trabajo I en otro trabajo j en la regla de asignación. Nuestro axioma dice que la participación en el costo de un trabajo debería ser al menos su propio costo de procesamiento y el costo total esperado que inflige a los demás. Tenga en cuenta que el límite anterior no plantea restricciones sobre cómo se comparten los costos entre los diferentes grupos. También observe que si S (γ) contiene solo un trabajo, el BCE dice que el trabajo debería al menos tener su propio costo de procesamiento. Una consecuencia directa del BCE es el siguiente lema. Lema 4. Sea ψ una regla eficiente que satisface el BCE. Para un q ∈ Q if s (γ) = n, entonces para cualquier (σ, t) ∈ ψ (q) que da un costo compartido de π, πi = piθi + 1 2 ¡li + ri ¢ ∀ i ∈ N. prueba. De ECB, obtenemos πi ≥ Piθi + 1 2 ¡li + ri ¢ ∀ i ∈ N. Suponga la contradicción que existe j ∈ N tal que πj> pjθj + 1 2 ¡li + ri ¢. Usando la eficiencia y el hecho de que £ i∈N li = £ i∈N ri, obtenemos £ i∈N πi = c (n)> £ i∈N piθi + 1 2 £ i∈N ¡li + ri ¢ = c(NORTE). Esto nos da una contradicción. A continuación, presentamos un axioma sobre compartir la transferencia de un trabajo entre un conjunto de trabajos. En particular, si el último trabajo deja del sistema, entonces el pedido no necesita cambiar. Pero la transferencia al último trabajo debe compartirse entre los otros trabajos. Esto debe hacerse en proporción a sus tiempos de procesamiento porque cada trabajo influyó en el último trabajo en función de su tiempo de procesamiento. Definición 6. Una regla de asignación ψ satisface la responsabilidad proporcional de P (PRP) si para todas q ∈ Q, para todos (σ, t) ∈ ψ (q), k ∈ N tal que σk = | n |, q = (n \\ {k}, p, θ) ∈ Q, de modo que para todos los i ∈ N \\ {k}: θi = θi, pi = pi, existe (σ, t) ∈ ψ (q) tal que para todos los i ∈ N \\ {k}: σi = σi y ti = ti + tk pi £ j = k pj. Un axioma de justicia análoga si eliminamos el trabajo del comienzo de la cola. Dado que la presencia del primer trabajo influyó en cada trabajo dependiendo de sus valores θ, su transferencia debe compartirse en proporción a los valores θ. Definición 7. Una regla de asignación ψ satisface la responsabilidad proporcional de θ (prθ) si para todas q ∈ Q, para todos (σ, t) ∈ ψ (q), k ∈ N tal que σk = 1, q = (n \\ {k},,p, θ) ∈ Q, de modo que para todos los i ∈ N \\ {k}: θi = θi, pi = pi, existe (σ, t) ∈ ψ (q) tales que para todos i ∈ N \\ {k}: σi = σi y ti = ti + tk θi £ j = k θj. Los axiomas de responsabilidad proporcional son las generalizaciones de igual responsabilidad axiomas introducidos por Maniquet [15].235 Axiomas de independencia El costo de espera de un trabajo no depende del costo de espera por unidad de sus trabajos anteriores. Del mismo modo, el costo de espera infligido por un trabajo a sus siguientes trabajos es independiente de los tiempos de procesamiento de los siguientes trabajos. Estas propiedades de independencia deben transferirse a las reglas de costo compartido. Esto nos da dos axiomas de independencia. Definición 8. Una regla de asignación ψ satisface la independencia de los trabajos anteriores θ (ipjθ) si para todos q = (n, p, θ), q = (n, p, θ) ∈ Q, (σ, t) ∈ ψ (q), (((σ, t) ∈ ψ (q), si para todo i ∈ N \\ {k}: θi = θi, pi = pi y γk <γk, pk = pk, entonces para todos j ∈ N tal que σj> σk: πj= πj, donde π es el costo compartido en (σ, t) y π es el costo compartido en (σ, t). Definición 9. Una regla de asignación ψ satisface la independencia de los siguientes trabajos p (ifjp) si para todos q = (n, p, θ), q = (n, p, θ) ∈ Q, (σ, t) ∈ ψ (q), (((σ, t) ∈ ψ (q), si para todo i ∈ N \\ {k}: θi = θi, pi = pi y γk> γk, θk = θk, entonces para todos j ∈ N tal que σj <σk: πj= πj, donde π es el costo compartido en (σ, t) y π es el costo compartido en (σ, t).4.2 Los resultados de la caracterización han declarado los axiomas de equidad, proponemos tres formas diferentes de caracterizar la regla de valor de Shapley usando estos axiomas. Todas nuestras caracterizaciones implican eficiencia y BCE. Pero si tenemos IPJθ, necesitamos IFJP o PRP. Del mismo modo, si tenemos IFJP, necesitamos IPJθ o PRθ. Proposición 1. Cualquier regla eficiente ψ que satisfaga el BCE, IPJθ e IFJP es una regla implícita por la regla de valor de Shapley. Prueba. Defina para cualquier I, J ∈ N, θi J = γipj y Pi J = θj γi. Suponga sin pérdida de generalidad que σ es un orden eficiente con σi = i ∀ i ∈ N. Considere el siguiente q = (n, p, θ) correspondiente al trabajo I con pj = pj si j ≤ i y pj = pi j sij> i, θj = θi j if j <i y θj = θj si j ≥ i. Observe que todos los trabajos tienen el mismo γ: γi. Por Lemma 2 y eficiencia, (σ, t) ∈ ψ (q) para algún conjunto de transferencias t. Usando Lemma 4, obtenemos costos compartidos de I de (σ, t) como πi = piθi + 1 2 ¡li + ri ¢. Ahora, para cualquier j <i, si cambiamos θj a θj sin cambiar el tiempo de procesamiento, el nuevo γ de J es γj ≥ γi. Aplicando IPJθ, la parte de los costos del trabajo no debería cambiar. Del mismo modo, para cualquier trabajo j> i, si cambiamos PJ a PJ sin cambiar θj, el nuevo γ de J es γj ≤ γi. Aplicando IFJP, la parte de costos del trabajo no debería cambiar. Aplicando este procedimiento para cada j <i con IPJθ y para cada j> i con IFJP, llegamos a Q = (n, p, θ) y el pago de I no cambia de πi. Usando este argumento para cada i ∈ N y usando la expresión para el valor de Shapley en Lemma 3, obtenemos la regla de valor de Shapley. Es posible reemplazar uno de los axiomas de independencia con un axioma de equidad para compartir la transferencia de un trabajo. Esto se muestra en las proposiciones 2 y 3. Proposición 2. Cualquier regla eficiente ψ que satisfaga el BCE, IPJθ y PRP es una regla implícita por la regla de valor de Shapley. Prueba. Como en la prueba de la Proposición 1, defina θi j = γipj ∀ i, j ∈ N. Suponga sin pérdida de generalidad que σ es un orden eficiente con σi = i ∀ i ∈ N. Considere una cola con trabajos en el conjunto k = {1 ,..., i, i + 1}, donde i <n.Defina q = (k, p, θ), donde θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ es un orden eficiente para q. Por BCB y Lemma 4 El costo compartido del trabajo i+1 en cualquier regla de asignación en ψ debe ser πi+1 = pi+1θi+1+1 2 ¡£ j <i+1 pjθi+1 ¢. Ahora, considere q = (k, p, θ) de modo que θj = θi j ∀ j ≤ i y θi+1 = θi+1.σ sigue siendo un orden eficiente en q y por IPJθ el costo compartido de i + 1 permanece πi + 1. En q = (k \\ {i + 1}, p, θ), podemos calcular el costo compartido del trabajo I usando el ECB y el lema 4 como πi = piθi + 1 2 £ j <i pjθi. Entonces, usando PRP obtenemos el nuevo costo compartido del trabajo I en q como πi = πi + ti + 1 pi j <i + 1 pj = piθi + 1 2 ¡£ j <i pjθi + piθi + 1 ¢. Ahora, podemos establecer k = k ∪ {i + 2}. Como antes, podemos encontrar la participación de los costos de i+2 en esta cola como πi+2 = pi+2θi+2+1 2 ¡£ j <i+2 pjθi+2 ¢. Usando PRP obtenemos el nuevo costo compartido del trabajo I en la nueva cola como πi = piθi + 1 2 ¡£ j <i pjθi + piθi + 1 + piθi + 2 ¢. Este proceso se puede repetir hasta que agregamos trabajo n en el que el costo de costo de i es piθi + 1 2 ¡£ j <i pjθi + £ j> i piθj ¢. Luego, podemos ajustar el θ de los trabajos anteriores de I a su valor original y aplicar IPJθ, los pagos de los trabajos i a n no cambiarán. Esto nos da los valores de Shapley de los trabajos i a n.Configuración I = 1, obtenemos acciones de todos los trabajos de ψ como valor de Shapley. Proposición 3. Cualquier regla eficiente ψ que satisfaga el BCE, IFJP y PRθ es una regla implícita por la regla de valor de Shapley. Prueba. La prueba refleja la prueba de la Proposición 2. Proporcionamos un boceto corto. Análogo a la prueba de la Proposición 2, los θs se mantienen iguales a los datos originales y los tiempos de procesamiento se inicializan a PI+1 J. Esto nos permite usar IFJP. Además, en contraste con la Proposición 2, consideramos k = {i, i + 1 ,..., n} y agregue repetidamente trabajos al comienzo de la cola que mantiene el mismo orden eficiente. Por lo tanto, agregamos los componentes de costo de los trabajos anteriores al costo de los trabajos en cada iteración y convergimos a la regla de valor de Shapley. La siguiente proposición muestra que la regla del valor de Shapley satisface todos los axiomas de equidad discutidos. Proposición 4. La regla de valor de Shapley satisface la eficiencia, la indiferencia de Pareto, el anonimato, el ETE, el ECB, IPJθ, IFJP, PRP y PRθ. Prueba. La regla de valor de Shapley elige un pedido eficiente y, por definición, los pagos se suman hasta cero. Entonces, satisface la eficiencia. El valor de Shapley asigna el mismo costo compartido a un trabajo independientemente del orden eficiente elegido. Entonces, es Pareto indiferente. El valor de Shapley es anónimo porque el índice particular de un trabajo no afecta su pedido o parte de los costos. Para Ete, considere dos trabajos I, J ∈ N tal que Pi = Pj y θi = θj. Sin pérdida de generalidad suponga que el orden eficiente es 1 ,..., i, ..., J ,..., n.Ahora, el valor de Shapley del trabajo I es 236 SVI = Piθi + 1 2 ¡li + ri ¢ (de lemma 3) = pjθj + 1 2 ¡lj + rj ¢ - 1 2 ¡li - lj + ri - rj ¢ = svj = svj− 1 2 ¡i <k≤j piθk - i≤k <j pkθi ¢ = svj - 1 2 i <k≤j (piθk - pkθi) (usando pi = pj y θi = θj) = svj (usando θk pk =θi pi para todo i ≤ k ≤ j). El valor de Shapley satisface el BCE por su expresión en Lemma 3. Considere cualquier trabajo I, en un orden eficiente σ, si aumentamos el valor de γj para algunos j = I tal que σj> σi, entonces el conjunto PI (trabajos anteriores) no cambia en el nuevo orden eficiente. Si γj se cambia de tal manera que PJ sigue siendo la misma, entonces la expresión £ j∈Pi θipj no cambia. Si (p, θ) no se cambian los valores de otros trabajos, entonces el valor de Shapley no cambia al aumentar γj para algunos j ∈ Pi mientras mantiene PJ sin cambios. Por lo tanto, la regla de valor de Shapley satisface IPJθ. Un argumento análogo muestra que la regla del valor de Shapley satisface IFJP. Para PRP, suponga sin pérdida de generalidad que los trabajos se ordenan 1 ,..., n en un pedido eficiente. Denota la transferencia del trabajo i = n debido al valor de Shapley con el conjunto de trabajos n y el conjunto de trabajos n \\ {n} como ti y ti respectivamente. La transferencia del último trabajo es tn = 1 2 θn £ j <n PJ. Ahora, ti = 1 2 ¡θi j <i pj - pi j> i θj ¢ = 1 2 ¡θi j <i pj - pi j> i: j = n θj ¢ - 1 2 piθn = ti - 1 2 θn j<n pj pi £ j <n pj = ti - tn pi £ j <n pj. Un argumento similar muestra que la regla de valor de Shapley satisface PRθ. Estas series de proposiciones nos llevan a nuestro resultado principal. Teorema 1. Sea ψ una regla de asignación. Las siguientes afirmaciones son equivalentes: 1) para cada q ∈ Q, ψ (q) selecciona todas las acciones de asignación de asignación de trabajos implícitos por el valor de Shapley.2) ψ satisface la eficiencia, el BCE, IFJP y IPJθ.3) ψ satisface la eficiencia, el BCE, IFJP y PRθ.4) ψ satisface la eficiencia, el BCE, PRP y IPJθ. Prueba. La prueba se deduce de las Propuestas 1, 2, 3 y 4. 5. Discusiones 5.1 Una clase razonable de mecanismos de costo compartido en esta sección, definiremos una clase razonable de mecanismos de costo compartido. Mostraremos cómo estos mecanismos razonables conducen al mecanismo de valor de Shapley. Definición 10. Una regla de asignación ψ es razonable si para todas q ∈ Q y (σ, t) ∈ ψ (q) tenemos para todos los i ∈ N, ti = α ¡θi j∈Pi (σ) pj - pi j∈Fi (σ) θj ¢ ∀ i ∈ N, donde 0 ≤ α ≤ 1. El mecanismo razonable de costo compartido dice que a cada trabajo se le debe pagar una fracción constante de la diferencia entre el costo de espera que incurre y el costo de espera que inflige en otros trabajos. Si α = 0, cada trabajo tiene su propio costo. Si α = 1, cada trabajo se compensa por su costo de espera, pero compensa a otros por el costo que inflige a los demás. La regla de valor de Shapley viene como resultado de ETE como se muestra en la siguiente proposición. Proposición 5. Cualquier regla de asignación eficiente y razonable ψ que satisfaga ETE es una regla implícita por la regla de valor de Shapley. Prueba. Considere una q ∈ Q en la que pi = pj y θi = θj. Sea (σ, t) ∈ ψ (q) y π el costo de costo resultante. De Ete, obtenemos, πi = πj ⇒ ci (σ) - ti = cj (σ) - tj ⇒ piθi + (1 - α) li + αri = pjθj + (1 - α) lj + αrj (ya que ψ es eficientey razonable) ⇒ (1 - α) (li - lj) = α (rj - ri) (usando pi = pj, θi = θj) ⇒ 1 - α = α (usando li - lj = rj - ri = 0) ⇒α = 1 2. Esto nos da la regla de valor de Shapley de Lemma 3. 5.2 Resultados en Envy Chun [2] discute una condición de femircinidad llamada no-envidia para el caso cuando los tiempos de procesamiento de todos los trabajos son la unidad. Definición 11. Una regla de asignación satisface sin modificación si para todas q ∈ Q, (σ, t) ∈ ψ (q) e I, j ∈ N, tenemos πi ≤ ci (σij)-tj, donde π es el costo compartido deLa regla de asignación (σ, t) y σij es el ordenamiento que obtiene intercambiando i y j. A partir del resultado en [2], la regla de valor de Shapley no satisface también a no tener en nuestro modelo. Para superar esto, Chun [2] introduce la noción de no envoltura ajustada, que muestra que está satisfecho en la regla de valor de Shapley cuando los tiempos de procesamiento de todos los trabajos son la unidad. Aquí, mostramos que la envidia ajustada continúa en la regla de valor de Shapley en nuestro modelo (cuando los tiempos de procesamiento no necesitan ser la unidad). Como antes denota σij ser un orden en el que la posición de I y J se intercambia de un orden σ. Para el noenvía ajustado, If (σ, t) es una asignación para algunos q ∈ Q, deje que Tij sea la transferencia 237 del trabajo I cuando la transferencia de I se calcula con respecto al orden σij. Observe que una asignación puede no permitir el cálculo de TIJ. Por ejemplo, si ψ es eficiente, entonces Tij no se puede calcular si σij tampoco es eficiente. Para simplificar, indicamos la definición de no envoltura ajustada para aplicar a todas esas reglas. Definición 12. Una regla de asignación satisface el noenvio ajustado si para todas q ∈ Q, (σ, t) ∈ ψ (q), y i, j ∈ N, tenemos πi ≤ ci (σij) - tij i. Proposición 6. La regla de valor de Shapley satisface el no envoltorio ajustado. Prueba. Sin pérdida de generalidad, suponga que el orden eficiente de los trabajos es: 1 ,..., n.Considere dos trabajos I y I + K.De Lemma 3, svi = piθi + 1 2 ¡j <i θipj + j> i θjpi ¢. Sea ˆπi el costo compartido de I debido a la transferencia ajustada tii+k i en el orden σii+k.ˆΠi = ci (σii+k) - tii+k i = piθi+1 2 ¡j <i θipj+θipi+k+i <j <i+k θipj+j> i θjpi - θi+kpi - i <j <i+k θjpi ¢ = svi +1 2 i <j≤i +k ¡θipj - θjpi ¢ ≥ svi (usando el hecho de que θi pi ≥ θj pj para i <j).6. Conclusión Estudiamos el problema de compartir costos para un problema de programación de trabajo en un solo servidor, cuando los trabajos tienen tiempos de procesamiento y costos de espera de tiempo de unidad. Tomamos un enfoque de teoría de juegos cooperativo y mostramos que la famosa regla del valor de Shapley satisface muchas propiedades de justicia. Caracterizamos la regla de valor de Shapley utilizando diferentes axiomas de equidad intuitiva. En el futuro, planeamos simplificar aún más algunos de los axiomas de equidad. Algunas simplificaciones iniciales ya aparecen en [16], donde proporcionamos un axioma alternativo al BCE y también discutimos la implicación de las transferencias entre trabajos (en lugar de transferencias de trabajos a un servidor central). También planeamos analizar los mecanismos de costo compartido que no sean el valor de Shapley. Investigar el poder estratégico de los empleos en tales mecanismos es otra línea de investigación futura.7. Referencias [1] Youngsub Chun. Una nota sobre la caracterización de Maniquets del valor de Shapley en los problemas de cola. Documento de trabajo, Universidad de Rochester, 2004. [2] Youngsub Chun. Sin modificación en problemas de cola. Documento de trabajo, Universidad de Rochester, 2004. [3] Imma Curiel, Herbert Hamers y Flip Klijn. Juegos de secuencia: una encuesta. En Peter Borm y Hans Peters, editores, Capítulo en Teoría del juego. Teoría y Biblioteca de Decisiones, Kulwer Academic Publishers, 2002. [4] Imma Curiel, Giorgio Pederzoli y Stef Tijs. Juegos de secuencia. European Journal of Operational Research, 40: 344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs y Bart Veltman. Secuenciación y cooperación. Operations Research, 42 (3): 566-568, mayo-junio de 1994. [6] Nikhil R. Devanur, Milena Mihail y Vijay V. Vazirani. Mecanismos de intercambio de costos a prueba de estrategias para juegos de cubierta y ubicación de la instalación. En Actas de la cuarta conferencia ACM anual sobre comercio electrónico, 2003. [7] Robert J. Dolan. Mecanismos de incentivos para problemas de colas prioritarias. Bell Journal of Economics, 9: 421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou y Scott Shenker. Compartir el costo de las transmisiones de multidifusión. En Actas del Simposio ACM anual de treinta segundos sobre Teoría de la Computación, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs y Peter Borm. El núcleo dividido para los juegos de secuenciación. Juegos y comportamiento económico, 15: 165-176, 1996. [10] John C. Harsanyi. Contribuciones a la teoría de los Juegos IV, Capítulo Un modelo de negociación para los juegos cooperativos de N-persona. Princeton University Press, 1959. Editores: A. W. Tucker, R. D. Luce.[11] Kamal Jain y Vijay Vazirani. Aplicaciones de algoritmos aproximados a juegos cooperativos. En Actas del 33º Simposio sobre Teoría de la Computación (STOC 01), 2001. [12] Kamal Jain y Vijay Vazirani. Asignaciones de costos equitativas a través de algoritmos de tipo primario de dual. En Actas del 34º Simposio sobre Teoría de la Computación (STOC 02), 2002. [13] Flip Klijn y Estela S´anchez. Juegos de secuencia sin un orden inicial completamente especificado. Informe en Estadísticas e Investigación de Operaciones, páginas 1-17, 2002. Informe 02-04.[14] Flip Klijn y Estela Sánchez. Juegos de secuencia sin orden inicial. Documento de trabajo, Universitat Aut´onoma de Barcelona, julio de 2004. [15] Franois Maniquet. Una caracterización del valor de Shapley en los problemas de cola. Journal of Economic Theory, 109: 90-103, 2003. [16] Debasis Mishra y Bharath Rangarajan. Costos compartidos en un problema de programación de trabajo. Documento de trabajo, Core, 2005. [17] Manipushpak Mitra. Ensayos sobre los primeros mejores problemas de incentivos implementables. Doctor.Tesis, Instituto Estadístico Indio, Nueva Delhi, 2000. [18] Manipushpak Mitra. Diseño de mecanismo en problemas de cola. Teoría económica, 17 (2): 277-305, 2001. [19] Manipushpak Mitra. Lograr lo primero en problemas de secuenciación. Review of Economic Design, 7: 75-91, 2002. [20] Herv´e Moulin. Manual de elección social y bienestar, costo axiomático del capítulo y intercambio excedente. Holanda del Norte, 2002. Editores: Arrow, Sen, Suzumura.[21] Herv´e Moulin. Al programar tarifas para evitar que se fusionen, dividirse y transferir 238 empleos. Documento de trabajo, Universidad de Rice, 2004. [22] Herv´e Moulin. Programación probabilística a prueba de división. Documento de trabajo, Universidad de Rice, 2004. [23] Herv´e Moulin y Rakesh Vohra. Caracterización de métodos de costo compartido aditivo. Letras económicas, 80: 399-407, 2003. [24] Martin P´al y ´Eva Tardos. Mecanismos de grupos a prueba de estrategias a través de algoritmos Primal-Dual. En Actas del 44º Simposio IEEE anual sobre los fundamentos de la informática (FOCS 03), 2003. [25] Lloyd S. Shapley. Contribuciones a la teoría de los Juegos II, Capítulo Un valor para los juegos N-Persona, páginas 307-317. Anales de Estudios de Matemáticas, 1953. EDIORS: H. W. Kuhn, A. W. Tucker.[26] Wayne E. Smith. Varios optimizadores para la producción de una sola etapa. Naval Research Logistics Quarterly, 3: 59-66, 1956. [27] Jeroen Suijs. Sobre la compatibilidad de incentivos y la equilibrio del presupuesto en la toma de decisiones públicas. Diseño económico, 2, 2002. 239",
    "original_sentences": [
        "Cost Sharing in a Job Scheduling Problem Using the Shapley Value Debasis Mishra Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium mishra@core.ucl.ac.be Bharath Rangarajan Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium rangarajan@core.ucl.ac.be ABSTRACT A set of jobs need to be served by a single server which can serve only one job at a time.",
        "Jobs have processing times and incur waiting costs (linear in their waiting time).",
        "The jobs share their costs through compensation using monetary transfers.",
        "We characterize the Shapley value rule for this model using fairness axioms.",
        "Our axioms include a bound on the cost share of jobs in a group, efficiency, and some independence properties on the the cost share of a job.",
        "Categories and Subject Descriptors J.4 [Social and Behaviorial Sciences]: Economics General Terms Economics, Theory 1.",
        "INTRODUCTION A set of jobs need to be served by a server.",
        "The server can process only one job at a time.",
        "Each job has a finite processing time and a per unit time waiting cost.",
        "Efficient ordering of this queue directs us to serve the jobs in increasing order of the ratio of per unit time waiting cost and processing time.",
        "To compensate for waiting by jobs, monetary transfers to jobs are allowed.",
        "How should the jobs share the cost equitably amongst themselves (through transfers)?",
        "The problem of fair division of costs among agents in a queue has many practical applications.",
        "For example, computer programs are regularly scheduled on servers, data are scheduled to be transmitted over networks, jobs are scheduled in shop-floor on machines, and queues appear in many public services (post offices, banks).",
        "Study of queueing problems has attracted economists for a long time [7, 17].",
        "Cost sharing is a fundamental problem in many settings on the Internet.",
        "Internet can be seen as a common resource shared by many users and the cost incured by using the resource needs to be shared in an equitable manner.",
        "The current surge in cost sharing literature from computer scientists validate this claim [8, 11, 12, 6, 24].",
        "Internet has many settings in which our model of job scheduling appears and the agents waiting in a queue incur costs (jobs scheduled on servers, queries answered from a database, data scheduled to be transmitted over a fixed bandwidth network etc.).",
        "We hope that our analysis will give new insights on cost sharing problems of this nature.",
        "Recently, there has been increased interest in cost sharing methods with submodular cost functions [11, 12, 6, 24].",
        "While many settings do have submodular cost functions (for example, multi-cast transmission games [8]), while the cost function of our game is supermodular.",
        "Also, such literature typically does not assume budget-balance (transfers adding up to zero), while it is an inherent feature of our model.",
        "A recent paper by Maniquet [15] is the closest to our model and is the motivation behind our work 1 .",
        "Maniquet [15] studies a model where he assumes all processing times are unity.",
        "For such a model, he characterizes the Shapley value rule using classical fairness axioms.",
        "Chun [1] interprets the worth of a coalition of jobs in a different manner for the same model and derives a reverse rule.",
        "Chun characterizes this rule using similar fairness axioms.",
        "Chun [2] also studies the envy properties of these rules.",
        "Moulin [22, 21] studies the queueing problem from a strategic point view when per unit waiting costs are unity.",
        "Moulin introduces new concepts in the queueing settings such as splitting and merging of jobs, and ways to prevent them.",
        "Another stream of literature is on sequencing games, first introduced by Curiel et al. [4].",
        "For a detailed survey, refer to Curiel et al. [3].",
        "Curiel et al. [4] defined sequencing games similar to our model, but in which an initial ordering of jobs is given.",
        "Besides, their notion of worth of a coalition is very different from the notions studied in Maniquet [15] and Chun [1] (these are the notions used in our work too).",
        "The particular notion of the worth of a coalition makes the sequencing game of Curiel et al. [4] convex, whereas our game is not convex and does not assume the presence of any initial order.",
        "In summary, the focus of this stream of 1 The authors thank Fran¸cois Maniquet for several fruitful discussions. 232 research is how to share the savings in costs from the initial ordering to the optimal ordering amongst jobs (also see Hamers et al. [9], Curiel et al. [5]).",
        "Recently, Klijn and S´anchez [13, 14] considered sequencing games without any initial ordering of jobs.",
        "They take two approaches to define the worth of coalitions.",
        "One of their approaches, called the tail game, is related to the reverse rule of Chun [1].",
        "In the tail game, jobs in a coalition are served after the jobs not in the coalition are served.",
        "Klijn and S´anchez [14] showed that the tail game is balanced.",
        "Further, they provide expressions for the Shapley value in tail game in terms of marginal vectors and reversed marginal vectors.",
        "We provide a simpler expression of the Shapley value in the tail game, generalizing the result in Chun [1].",
        "Klijn and S´anchez [13] study the core of this game in detail.",
        "Strategic aspects of queueing problems have also been researched.",
        "Mitra [19] studies the first best implementation in queueing models with generic cost functions.",
        "First best implementation means that there exists an efficient mechanism in which jobs in the queue have a dominant strategy to reveal their true types and their transfers add up to zero.",
        "Suijs [27] shows that if waiting costs of jobs are linear then first best implementation is possible.",
        "Mitra [19] shows that among a more general class of queueing problems first best implementation is possible if and only if the cost is linear.",
        "For another queueing model, Mitra [18] shows that first best implementation is possible if and only if the cost function satisfies a combinatorial property and an independence property.",
        "Moulin [22, 21] studies strategic concepts such as splitting and merging in queueing problems with unit per unit waiting costs.",
        "The general cost sharing literature is vast and has a long history.",
        "For a good survey, we refer to [20].",
        "From the seminal work of Shapley [25] to recent works on cost sharing in multi-cast transmission and optimization problems [8, 6, 23] this area has attracted economists, computer scientists, and operations researchers. 1.1 Our Contribution Ours is the first model which considers cost sharing when both processing time and per unit waiting cost of jobs are present.",
        "We take a cooperative game theory approach and apply the classical Shapley value rule to the problem.",
        "We show that the Shapley value rule satisfies many intuitive fairness axioms.",
        "Due to two dimensional nature of our model and one dimensional nature of Maniquets model [15], his axioms are insufficient to characterize the Shapley value in our setting.",
        "We introduce axioms such as independece of preceding jobs unit waiting cost and independence of following jobs processing time.",
        "A key axiom that we introduce gives us a bound on cost share of a job in a group of jobs which have the same ratio of unit time waiting cost and processing time (these jobs can be ordered in any manner between themseleves in an efficient ordering).",
        "If such a group consists of just one job, then the axiom says that such a job should at least pay his own processing cost (i.e., the cost it would have incurred if it was the only job in the queue).",
        "If there are multiple jobs in such a group, the probability of any two jobs from such a group inflicting costs on each other is same (1 2 ) in an efficient ordering.",
        "Depending on the ordering selected, one job inflicts cost on the other.",
        "Our fairness axiom says that each job should at least bear such expected costs.",
        "We characterize the Shapley value rule using these fairness axioms.",
        "We also extend the envy results in [2] to our setting and discuss a class of reasonable cost sharing mechanisms. 2.",
        "THE MODEL There are n jobs that need to be served by one server which can process only one job at a time.",
        "The set of jobs are denoted as N = {1, . . . , n}. σ : N → N is an ordering of jobs in N and σi denotes the position of job i in the ordering σ.",
        "Given an ordering σ, define Fi(σ) = {j ∈ N : σi < σj} and Pi(σ) = {j ∈ N : σi > σj}.",
        "Every job i is identified by two parameters: (pi, θi). pi is the processing time and θi is the cost per unit waiting time of job i.",
        "Thus, a queueing problem is defined by a list q = (N, p, θ) ∈ Q, where Q is the set of all possible lists.",
        "We will denote γi = θi pi .",
        "Given an ordering of jobs σ, the cost incurred by job i is given by ci(σ) = piθi + θi   j∈Pi(σ) pj.",
        "The total cost incurred by all jobs due to an ordering σ can be written in two ways: (i) by summing the cost incurred by every job and (ii) by summing the costs inflicted by a job on other jobs with their own processing cost.",
        "C(N, σ) =   i∈N ci(σ) =   i∈N piθi +   i∈N ¡θi   j∈Pi(σ) pj¢. =   i∈N piθi +   i∈N ¡pi   j∈Fi(σ) θj¢.",
        "An efficient ordering σ∗ is the one which minimizes the total cost incurred by all jobs.",
        "So, C(N, σ∗ ) ≤ C(N, σ) ∀ σ ∈ Σ.",
        "To achieve notational simplicity, we will write the total cost in an efficient ordering of jobs from N as C(N) whenever it is not confusing.",
        "Sometimes, we will deal with only a subset of jobs S ⊆ N. The ordering σ will then be defined on jobs in S only and we will write the total cost from an efficient ordering of jobs in S as C(S).",
        "The following lemma shows that jobs are ordered in decreasing γ in an efficient ordering.",
        "This is also known as the weighted shortest processing time rule, first introduced by Smith [26].",
        "Lemma 1.",
        "For any S ⊆ N, let σ∗ be an efficient ordering of jobs in S. For every i = j, i, j ∈ S, if σ∗ i > σ∗ j , then γi ≤ γj.",
        "Proof.",
        "Assume for contradiction that the statment of the lemma is not true.",
        "This means, we can find two consecutive jobs i, j ∈ S (σ∗ i = σ∗ j + 1) such that γi > γj.",
        "Define a new ordering σ by interchanging i and j in σ∗ .",
        "The costs to jobs in S \\ {i, j} is not changed from σ∗ to σ.",
        "The difference between total costs in σ∗ and σ is given by, C(S, σ) − C(S, σ∗ ) = θjpi − θipj.",
        "From efficiency we get θjpi − θipj ≥ 0.",
        "This gives us γj ≥ γi, which is a contradiction.",
        "An allocation for q = (N, p, θ) ∈ Q has two components: an ordering σ and a transfer ti for every job i ∈ N. ti denotes the payment received by job i.",
        "Given a transfer ti and an ordering σ, the cost share of job i is defined as, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. 233 An allocation (σ, t) is efficient for q = (N, p, θ) whenever σ is an efficient ordering and £i∈N ti = 0.",
        "The set of efficient orderings of q is denoted as Σ∗ (q) and σ∗ (q) will be used to refer to a typical element of the set.",
        "The following straightforward lemma says that for two different efficient orderings, the cost share in one efficient allocation is possible to achieve in the other by appropriately modifying the transfers.",
        "Lemma 2.",
        "Let (σ, t) be an efficient allocation and π be the vector of cost shares of jobs from this allocation.",
        "If σ∗ = σ be an efficient ordering and t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, then (σ∗ , t∗ ) is also an efficient allocation.",
        "Proof.",
        "Since (σ, t) is efficient, £i∈N ti = 0.",
        "This gives £i∈N πi = C(N).",
        "Since σ∗ is an efficient ordering, £i∈N ci(σ∗ ) = C(N).",
        "This means, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0.",
        "So, (σ∗ , t∗ ) is an efficient allocation.",
        "Depending on the transfers, the cost shares in different efficient allocations may differ.",
        "An allocation rule ψ associates with every q ∈ Q a non-empty subset ψ(q) of allocations. 3.",
        "COST SHARING USING THE SHAPLEY VALUE In this section, we define the coalitional cost of this game and analyze the solution proposed by the Shapley value.",
        "Given a queue q ∈ Q, the cost of a coalition of S ⊆ N jobs in the queue is defined as the cost incurred by jobs in S if these are the only jobs served in the queue using an efficient ordering.",
        "Formally, the cost of a coalition S ⊆ N is, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, where σ∗ = σ∗ (S) is an efficient ordering considering jobs from S only.",
        "The worth of a coalition of S jobs is just −C(S).",
        "Maniquet [15] observes another equivalent way to define the worth of a coalition is using the dual function of the cost function C(·).",
        "Other interesting ways to define the worth of a coalition in such games is discussed by Chun [1], who assume that a coalition of jobs are served after the jobs not in the coalition are served.",
        "The Shapley value (or cost share) of a job i is defined as, SVi =   S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) The Shapley value allocation rule says that jobs are ordered using an efficient ordering and transfers are assigned to jobs such that the cost share of job i is given by Equation 1.",
        "Lemma 3.",
        "Let σ∗ be an efficient ordering of jobs in set N. For all i ∈ N, the Shapley value is given by, SVi = piθi + 1 2 ¡Li + Ri¢, where Li = θi £j∈Pi(σ∗) pj and Ri = pi £j∈Fi(σ∗) θj.",
        "Proof.",
        "Another way to write the Shapley value formula is the following [10], SVi =   S⊆N:i∈S ∆(S) |S| , where ∆(S) = C(S) if |S| = 1 and ∆(S) = C(S)−£T S ∆(T).",
        "This gives ∆({i}) = C({i}) = piθi ∀i ∈ N. For any i, j ∈ N with i = j, we have ∆({i, j}) = C({i, j}) − C({i}) − C({j}) = min(piθi + pjθj + pjθi, piθi + pjθj + piθj) − piθi − pjθj = min(pjθi, piθj).",
        "We will show by induction that ∆(S) = 0 if |S| > 2.",
        "For |S| = 3, let S = {i, j, k}.",
        "Without loss of generality, assume θi pi ≥ θj pj ≥ θk pk .",
        "So, ∆(S) = C(S) − ∆({i, j}) − ∆({j, k}) − ∆({i, k})−∆({i})−∆({j})−∆({k}) = C(S)−piθj −pjθk − piθk − piθi − pjθj − pkθk = C(S) − C(S) = 0.",
        "Now, assume for T S, ∆(T) = 0 if |T| > 2.",
        "Without loss of generality assume that σ to be the identity mapping.",
        "Now, ∆(S) = C(S) −   T S ∆(T) = C(S) −   i∈S   j∈S:j<i ∆({i, j}) −   i∈S ∆({i}) = C(S) −   i∈S   j∈S:j<i pjθi −   i∈S piθi = C(S) − C(S) = 0.",
        "This proves that ∆(S) = 0 if |S| > 2.",
        "Using the Shapley value formula now, SVi =   S⊆N:i∈S ∆(S) |S| = ∆({i}) + 1 2   j∈N:j=i ∆({i, j}) = piθi + 1 2 ¡  j<i ∆({i, j}) +   j>i ∆({i, j})¢ = piθi + 1 2 ¡  j<i pjθi +   j>i piθj¢= piθi + 1 2 ¡Li + Ri¢. 4.",
        "AXIOMATICCHARACTERIZATIONOF THE SHAPLEY VALUE In this section, we will define serveral axioms on fairness and characterize the Shapley value using them.",
        "For a given q ∈ Q, we will denote ψ(q) as the set of allocations from allocation rule ψ.",
        "Also, we will denote the cost share vector associated with an allocation rule (σ, t) as π and that with allocation rule (σ , t ) as π etc. 4.1 The Fairness Axioms We will define three types of fairness axioms: (i) related to efficiency, (ii) related to equity, and (iii) related to independence.",
        "Efficiency Axioms We define two types of efficiency axioms.",
        "One related to efficiency which states that an efficient ordering should be selected and the transfers of jobs should add up to zero (budget balance).",
        "Definition 1.",
        "An allocation rule ψ satisfies efficiency if for every q ∈ Q and (σ, t) ∈ ψ(q), (σ, t) is an efficient allocation. 234 The second axiom related to efficiency says that the allocation rule should not discriminate between two allocations which are equivalent to each other in terms of cost shares of jobs.",
        "Definition 2.",
        "An allocation rule ψ satisfies Pareto indifference if for every q ∈ Q, (σ, t) ∈ ψ(q), and (σ , t ) ∈ Σ(q), we have ¡πi = πi ∀ i ∈ N¢⇒ ¡(σ , t ) ∈ ψ(q)¢.",
        "An implication of Pareto indifference axiom and Lemma 2 is that for every efficient ordering there is some set of transfers of jobs such that it is part of an efficient rule and the cost share of a job in all these allocations are same.",
        "Equity Axioms How should the cost be shared between two jobs if the jobs have some kind of similarity between them?",
        "Equity axioms provide us with fairness properties which help us answer this question.",
        "We provide five such axioms.",
        "Some of these axioms (for example anonymity, equal treatment of equals) are standard in the literature, while some are new.",
        "We start with a well known equity axiom called anonymity.",
        "Denote ρ : N → N as a permutation of elements in N. Let ρ(σ, t) denote the allocation obtained by permuting elements in σ and t according to ρ.",
        "Similarly, let ρ(p, θ) denote the new list of (p, θ) obtained by permuting elements of p and θ according to ρ.",
        "Our first equity axiom states that allocation rules should be immune to such permutation of data.",
        "Definition 3.",
        "An allocation rule ψ satisfies anonymity if for all q ∈ Q, (σ, t) ∈ ψ(q) and every permutation ρ, we then ρ(σ, t) ∈ ψ(N, ρ(q)).",
        "The next equity axiom is classical in literature and says that two similar jobs should be compensated such that their cost shares are equal.",
        "This implies that if all the jobs are of same type, then jobs should equally share the total system cost.",
        "Definition 4.",
        "An allocation rule ψ satisfies equal treatment of equals (ETE) if for all q ∈ Q, (σ, t) ∈ ψ(q), i, j ∈ N, then ¡pi = pj; θi = θj¢⇒ ¡πi = πj¢.",
        "ETE directs us to share costs equally between jobs if they are of the same per unit waiting cost and processing time.",
        "But it is silent about the cost shares of two jobs i and j which satisfy θi pi = θj pj .",
        "We introduce a new axiom for this.",
        "If an efficient rule chooses σ such that σi < σj for some i, j ∈ N, then job i is inflicting a cost of piθj on job j and job j is inflicting zero cost on job i.",
        "Define for some γ ≥ 0, S(γ) = {i ∈ N : γi = γ}.",
        "In an efficient rule, the elements in S(γ) can be ordered in any manner (in |S(γ)|! ways).",
        "If i, j ∈ S(γ) then we have pjθi = piθj.",
        "Probability of σi < σj is 1 2 and so is the probability of σi > σj.",
        "The expected cost i inflicts on j is 1 2 piθj and j inflicts on i is 1 2 pjθi.",
        "Our next fairness axiom says that i and j should each be responsible for their own processing cost and this expected cost they inflict on each other.",
        "Arguing for every pair of jobs i, j ∈ S(γ), we establish a bound on the cost share of jobs in S(γ).",
        "We impose this as an equity axiom below.",
        "Definition 5.",
        "An allocation rule satisfies expected cost bound (ECB) if for all q ∈ Q, (σ, t) ∈ ψ(q) with π being the resulting cost share, for any γ ≥ 0, and for every i ∈ S(γ), we have πi ≥ piθi + 1 2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢.",
        "The central idea behind this axiom is that of expected cost inflicted.",
        "If an allocation rule chooses multiple allocations, we can assign equal probabilities of selecting one of the allocations.",
        "In that case, the expected cost inflicted by a job i on another job j in the allocation rule can be calculated.",
        "Our axiom says that the cost share of a job should be at least its own processing cost and the total expected cost it inflicts on others.",
        "Note that the above bound poses no constraints on how the costs are shared among different groups.",
        "Also observe that if S(γ) contains just one job, ECB says that job should at least bear its own processing cost.",
        "A direct consequence of ECB is the following lemma.",
        "Lemma 4.",
        "Let ψ be an efficient rule which satisfies ECB.",
        "For a q ∈ Q if S(γ) = N, then for any (σ, t) ∈ ψ(q) which gives a cost share of π, πi = piθi + 1 2 ¡Li + Ri¢∀ i ∈ N. Proof.",
        "From ECB, we get πi ≥ piθi+1 2 ¡Li+Ri¢∀ i ∈ N. Assume for contradiction that there exists j ∈ N such that πj > pjθj + 1 2 ¡Li + Ri¢.",
        "Using efficiency and the fact that £i∈N Li = £i∈N Ri, we get £i∈N πi = C(N) > £i∈N piθi + 1 2 £i∈N ¡Li + Ri¢ = C(N).",
        "This gives us a contradiction.",
        "Next, we introduce an axiom about sharing the transfer of a job between a set of jobs.",
        "In particular, if the last job quits the system, then the ordering need not change.",
        "But the transfer to the last job needs to be shared between the other jobs.",
        "This should be done in proportion to their processing times because every job influenced the last job based on its processing time.",
        "Definition 6.",
        "An allocation rule ψ satisfies proportionate responsibility of p (PRp) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = |N|, q = (N \\ {k}, p , θ ) ∈ Q, such that for all i ∈ N\\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk pi £j=k pj .",
        "An analogous fairness axiom results if we remove the job from the beginning of the queue.",
        "Since the presence of the first job influenced each job depending on their θ values, its transfer needs to be shared in proportion to θ values.",
        "Definition 7.",
        "An allocation rule ψ satisfies proportionate responsibility of θ (PRθ) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = 1, q = (N \\{k}, p , θ ) ∈ Q, such that for all i ∈ N \\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk θi £j=k θj .",
        "The proportionate responsibility axioms are generalizations of equal responsibility axioms introduced by Maniquet [15]. 235 Independence Axioms The waiting cost of a job does not depend on the per unit waiting cost of its preceding jobs.",
        "Similarly, the waiting cost inflicted by a job to its following jobs is independent of the processing times of the following jobs.",
        "These independence properties should be carried over to the cost sharing rules.",
        "This gives us two independence axioms.",
        "Definition 8.",
        "An allocation rule ψ satisfies independence of preceding jobs θ (IPJθ) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk < γk, pk = pk, then for all j ∈ N such that σj > σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ).",
        "Definition 9.",
        "An allocation rule ψ satisfies independence of following jobs p (IFJp) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk > γk, θk = θk, then for all j ∈ N such that σj < σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ). 4.2 The Characterization Results Having stated the fairness axioms, we propose three different ways to characterize the Shapley value rule using these axioms.",
        "All our characterizations involve efficiency and ECB.",
        "But if we have IPJθ, we either need IFJp or PRp.",
        "Similarly if we have IFJp, we either need IPJθ or PRθ.",
        "Proposition 1.",
        "Any efficient rule ψ that satisfies ECB, IPJθ, and IFJp is a rule implied by the Shapley value rule.",
        "Proof.",
        "Define for any i, j ∈ N, θi j = γipj and pi j = θj γi .",
        "Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider the following q = (N, p , θ ) corresponding to job i with pj = pj if j ≤ i and pj = pi j if j > i, θj = θi j if j < i and θj = θj if j ≥ i.",
        "Observe that all jobs have the same γ: γi.",
        "By Lemma 2 and efficiency, (σ, t ) ∈ ψ(q ) for some set of transfers t .",
        "Using Lemma 4, we get cost share of i from (σ, t ) as πi = piθi + 1 2 ¡Li + Ri¢.",
        "Now, for any j < i, if we change θj to θj without changing processing time, the new γ of j is γj ≥ γi.",
        "Applying IPJθ, the cost share of job i should not change.",
        "Similarly, for any job j > i, if we change pj to pj without changing θj, the new γ of j is γj ≤ γi.",
        "Applying IFJp, the cost share of job i should not change.",
        "Applying this procedure for every j < i with IPJθ and for every j > i with IFJp, we reach q = (N, p, θ) and the payoff of i does not change from πi.",
        "Using this argument for every i ∈ N and using the expression for the Shapley value in Lemma 3, we get the Shapley value rule.",
        "It is possible to replace one of the independence axioms with an equity axiom on sharing the transfer of a job.",
        "This is shown in Propositions 2 and 3.",
        "Proposition 2.",
        "Any efficient rule ψ that satisfies ECB, IPJθ, and PRp is a rule implied by the Shapley value rule.",
        "Proof.",
        "As in the proof of Proposition 1, define θi j = γipj ∀ i, j ∈ N. Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider a queue with jobs in set K = {1, . . . , i, i + 1}, where i < n. Define q = (K, p, θ ), where θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ is an efficient ordering for q .",
        "By ECB and Lemma 4 the cost share of job i + 1 in any allocation rule in ψ must be πi+1 = pi+1θi+1 + 1 2 ¡£j<i+1 pjθi+1¢.",
        "Now, consider q = (K, p, θ ) such that θj = θi j ∀ j ≤ i and θi+1 = θi+1. σ remains an efficient ordering in q and by IPJθ the cost share of i + 1 remains πi+1.",
        "In q = (K \\ {i + 1}, p, θ ), we can calculate the cost share of job i using ECB and Lemma 4 as πi = piθi + 1 2 £j<i pjθi.",
        "So, using PRp we get the new cost share of job i in q as πi = πi + ti+1 pi j<i+1 pj = piθi + 1 2 ¡£j<i pjθi + piθi+1¢.",
        "Now, we can set K = K ∪ {i + 2}.",
        "As before, we can find cost share of i + 2 in this queue as πi+2 = pi+2θi+2 + 1 2 ¡£j<i+2 pjθi+2¢.",
        "Using PRp we get the new cost share of job i in the new queue as πi = piθi + 1 2 ¡£j<i pjθi + piθi+1 + piθi+2¢.",
        "This process can be repeated till we add job n at which point cost share of i is piθi + 1 2 ¡£j<i pjθi + £j>i piθj¢.",
        "Then, we can adjust the θ of preceding jobs of i to their original value and applying IPJθ, the payoffs of jobs i through n will not change.",
        "This gives us the Shapley values of jobs i through n. Setting i = 1, we get cost shares of all the jobs from ψ as the Shapley value.",
        "Proposition 3.",
        "Any efficient rule ψ that satisfies ECB, IFJp, and PRθ is a rule implied by the Shapley value rule.",
        "Proof.",
        "The proof mirrors the proof of Proposition 2.",
        "We provide a short sketch.",
        "Analogous to the proof of Proposition 2, θs are kept equal to original data and processing times are initialized to pi+1 j .",
        "This allows us to use IFJp.",
        "Also, contrast to Proposition 2, we consider K = {i, i + 1, . . . , n} and repeatedly add jobs to the beginning of the queue maintaining the same efficient ordering.",
        "So, we add the cost components of preceding jobs to the cost share of jobs in each iteration and converge to the Shapley value rule.",
        "The next proposition shows that the Shapley value rule satisfies all the fairness axioms discussed.",
        "Proposition 4.",
        "The Shapley value rule satisfies efficiency, pareto indifference, anonymity, ETE, ECB, IPJθ, IFJp, PRp, and PRθ.",
        "Proof.",
        "The Shapley value rule chooses an efficient ordering and by definition the payments add upto zero.",
        "So, it satisfies efficiency.",
        "The Shapley value assigns same cost share to a job irrespective of the efficient ordering chosen.",
        "So, it is pareto indifferent.",
        "The Shapley value is anonymous because the particular index of a job does not effect his ordering or cost share.",
        "For ETE, consider two jobs i, j ∈ N such that pi = pj and θi = θj.",
        "Without loss of generality assume the efficient ordering to be 1, . . . , i, . . . , j, . . . , n. Now, the Shapley value of job i is 236 SVi = piθi + 1 2 ¡Li + Ri¢(From Lemma 3) = pjθj + 1 2 ¡Lj + Rj¢− 1 2 ¡Li − Lj + Ri − Rj¢ = SVj − 1 2 ¡   i<k≤j piθk −   i≤k<j pkθi¢ = SVj − 1 2   i<k≤j (piθk − pkθi) (Using pi = pj and θi = θj) = SVj (Using θk pk = θi pi for all i ≤ k ≤ j).",
        "The Shapley value satisfies ECB by its expression in Lemma 3.",
        "Consider any job i, in an efficient ordering σ, if we increase the value of γj for some j = i such that σj > σi, then the set Pi ( preceding jobs) does not change in the new efficient ordering.",
        "If γj is changed such that pj remains the same, then the expression £j∈Pi θipj is unchanged.",
        "If (p, θ) values of no other jobs are changed, then the Shapley value is unchanged by increasing γj for some j ∈ Pi while keeping pj unchanged.",
        "Thus, the Shapley value rule satisfies IPJθ.",
        "An analogous argument shows that the Shapley value rule satisfies IFJp.",
        "For PRp, assume without loss of generality that jobs are ordered 1, . . . , n in an efficient ordering.",
        "Denote the transfer of job i = n due to the Shapley value with set of jobs N and set of jobs N \\ {n} as ti and ti respectively.",
        "Transfer of last job is tn = 1 2 θn £j<n pj.",
        "Now, ti = 1 2 ¡θi   j<i pj − pi   j>i θj¢ = 1 2 ¡θi   j<i pj − pi   j>i:j=n θj¢− 1 2 piθn = ti − 1 2 θn   j<n pj pi £j<n pj = ti − tn pi £j<n pj .",
        "A similar argument shows that the Shapley value rule satisfies PRθ.",
        "These series of propositions lead us to our main result.",
        "Theorem 1.",
        "Let ψ be an allocation rule.",
        "The following statements are equivalent: 1) For each q ∈ Q, ψ(q) selects all the allocation assigning jobs cost shares implied by the Shapley value. 2) ψ satisfies efficiency, ECB, IFJp, and IPJθ. 3) ψ satisfies efficiency, ECB, IFJp, and PRθ. 4) ψ satisfies efficiency, ECB, PRp, and IPJθ.",
        "Proof.",
        "The proof follows from Propositions 1, 2, 3, and 4. 5.",
        "DISCUSSIONS 5.1 A Reasonable Class of Cost Sharing Mechanisms In this section, we will define a reasonable class of cost sharing mechanisms.",
        "We will show how these reasonable mechanisms lead to the Shapley value mechanism.",
        "Definition 10.",
        "An allocation rule ψ is reasonable if for all q ∈ Q and (σ, t) ∈ ψ(q) we have for all i ∈ N, ti = α ¡θi   j∈Pi(σ) pj − pi   j∈Fi(σ) θj¢∀ i ∈ N, where 0 ≤ α ≤ 1.",
        "The reasonable cost sharing mechanism says that every job should be paid a constant fraction of the difference between the waiting cost he incurs and the waiting cost he inflicts on other jobs.",
        "If α = 0, then every job bears its own cost.",
        "If α = 1, then every job gets compensated for its waiting cost but compensates others for the cost he inflicts on others.",
        "The Shapley value rule comes as a result of ETE as shown in the following proposition.",
        "Proposition 5.",
        "Any efficient and reasonable allocation rule ψ that satisfies ETE is a rule implied by the Shapley value rule.",
        "Proof.",
        "Consider a q ∈ Q in which pi = pj and θi = θj.",
        "Let (σ, t) ∈ ψ(q) and π be the resulting cost shares.",
        "From ETE, we get, πi = πj ⇒ ci(σ) − ti = cj(σ) − tj ⇒ piθi + (1 − α)Li + αRi = pjθj + (1 − α)Lj + αRj (Since ψ is efficient and reasonable) ⇒ (1 − α)(Li − Lj) = α(Rj − Ri) (Using pi = pj, θi = θj) ⇒ 1 − α = α (Using Li − Lj = Rj − Ri = 0) ⇒ α = 1 2 .",
        "This gives us the Shapley value rule by Lemma 3. 5.2 Results on Envy Chun [2] discusses a fariness condition called no-envy for the case when processing times of all jobs are unity.",
        "Definition 11.",
        "An allocation rule satisfies no-envy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tj, where π is the cost share from allocation rule (σ, t) and σij is the ordering obtaining by swapping i and j.",
        "From the result in [2], the Shapley value rule does not satisfy no-envy in our model also.",
        "To overcome this, Chun [2] introduces the notion of adjusted no-envy, which he shows is satisfied in the Shapley value rule when processing times of all jobs are unity.",
        "Here, we show that adjusted envy continues to hold in the Shapley value rule in our model (when processing times need not be unity).",
        "As before denote σij be an ordering where the position of i and j is swapped from an ordering σ.",
        "For adjusted noenvy, if (σ, t) is an allocation for some q ∈ Q, let tij be the 237 transfer of job i when the transfer of i is calculated with respect to ordering σij .",
        "Observe that an allocation may not allow for calculation of tij .",
        "For example, if ψ is efficient, then tij cannot be calculated if σij is also not efficient.",
        "For simplicity, we state the definition of adjusted no-envy to apply to all such rules.",
        "Definition 12.",
        "An allocation rule satisfies adjusted noenvy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tij i .",
        "Proposition 6.",
        "The Shapley value rule satisfies adjusted no-envy.",
        "Proof.",
        "Without loss of generality, assume efficient ordering of jobs is: 1, . . . , n. Consider two jobs i and i + k. From Lemma 3, SVi = piθi + 1 2 ¡  j<i θipj +   j>i θjpi¢.",
        "Let ˆπi be the cost share of i due to adjusted transfer tii+k i in the ordering σii+k . ˆπi = ci(σii+k ) − tii+k i = piθi + 1 2 ¡  j<i θipj + θipi+k +   i<j<i+k θipj +   j>i θjpi − θi+kpi −   i<j<i+k θjpi¢ = SVi + 1 2   i<j≤i+k ¡θipj − θjpi¢ ≥ SVi (Using the fact that θi pi ≥ θj pj for i < j). 6.",
        "CONCLUSION We studied the problem of sharing costs for a job scheduling problem on a single server, when jobs have processing times and unit time waiting costs.",
        "We took a cooperative game theory approach and show that the famous the Shapley value rule satisfies many nice fairness properties.",
        "We characterized the Shapley value rule using different intuitive fairness axioms.",
        "In future, we plan to further simplify some of the fairness axioms.",
        "Some initial simplifications already appear in [16], where we provide an alternative axiom to ECB and also discuss the implication of transfers between jobs (in stead of transfers from jobs to a central server).",
        "We also plan to look at cost sharing mechanisms other than the Shapley value.",
        "Investigating the strategic power of jobs in such mechanisms is another line of future research. 7.",
        "REFERENCES [1] Youngsub Chun.",
        "A Note on Maniquets Characterization of the Shapley Value in Queueing Problems.",
        "Working Paper, Rochester University, 2004. [2] Youngsub Chun.",
        "No-envy in Queuing Problems.",
        "Working Paper, Rochester University, 2004. [3] Imma Curiel, Herbert Hamers, and Flip Klijn.",
        "Sequencing Games: A Survey.",
        "In Peter Borm and Hans Peters, editors, Chapter in Game Theory.",
        "Theory and Decision Library, Kulwer Academic Publishers, 2002. [4] Imma Curiel, Giorgio Pederzoli, and Stef Tijs.",
        "Sequencing Games.",
        "European Journal of Operational Research, 40:344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs, and Bart Veltman.",
        "Sequencing and Cooperation.",
        "Operations Research, 42(3):566-568, May-June 1994. [6] Nikhil R. Devanur, Milena Mihail, and Vijay V. Vazirani.",
        "Strategyproof Cost-sharing Mechanisms for Set Cover and Facility Location Games.",
        "In Proceedings of Fourth Annual ACM Conferece on Electronic Commerce, 2003. [7] Robert J. Dolan.",
        "Incentive Mechanisms for Priority Queueing Problems.",
        "Bell Journal of Economics, 9:421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou, and Scott Shenker.",
        "Sharing the Cost of Multicast Transmissions.",
        "In Proceedings of Thirty-Second Annual ACM Symposium on Theory of Computing, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs, and Peter Borm.",
        "The Split Core for Sequencing Games.",
        "Games and Economic Behavior, 15:165-176, 1996. [10] John C. Harsanyi.",
        "Contributions to Theory of Games IV, chapter A Bargaining Model for Cooperative n-person Games.",
        "Princeton University Press, 1959.",
        "Editors: A. W. Tucker, R. D. Luce. [11] Kamal Jain and Vijay Vazirani.",
        "Applications of Approximate Algorithms to Cooperative Games.",
        "In Proceedings of 33rd Symposium on Theory of Computing (STOC 01), 2001. [12] Kamal Jain and Vijay Vazirani.",
        "Equitable Cost Allocations via Primal-Dual Type Algorithms.",
        "In Proceedings of 34th Symposium on Theory of Computing (STOC 02), 2002. [13] Flip Klijn and Estela S´anchez.",
        "Sequencing Games without a Completely Specified Initial Order.",
        "Report in Statistics and Operations Research, pages 1-17, 2002.",
        "Report 02-04. [14] Flip Klijn and Estela S´anchez.",
        "Sequencing Games without Initial Order.",
        "Working Paper, Universitat Aut´onoma de Barcelona, July 2004. [15] Franois Maniquet.",
        "A Characterization of the Shapley Value in Queueing Problems.",
        "Journal of Economic Theory, 109:90-103, 2003. [16] Debasis Mishra and Bharath Rangarajan.",
        "Cost sharing in a job scheduling problem.",
        "Working Paper, CORE, 2005. [17] Manipushpak Mitra.",
        "Essays on First Best Implementable Incentive Problems.",
        "Ph.D. Thesis, Indian Statistical Institute, New Delhi, 2000. [18] Manipushpak Mitra.",
        "Mechanism design in queueing problems.",
        "Economic Theory, 17(2):277-305, 2001. [19] Manipushpak Mitra.",
        "Achieving the first best in sequencing problems.",
        "Review of Economic Design, 7:75-91, 2002. [20] Herv´e Moulin.",
        "Handbook of Social Choice and Welfare, chapter Axiomatic Cost and Surplus Sharing.",
        "North-Holland, 2002.",
        "Publishers: Arrow, Sen, Suzumura. [21] Herv´e Moulin.",
        "On Scheduling Fees to Prevent 238 Merging, Splitting and Transferring of Jobs.",
        "Working Paper, Rice University, 2004. [22] Herv´e Moulin.",
        "Split-proof Probabilistic Scheduling.",
        "Working Paper, Rice University, 2004. [23] Herv´e Moulin and Rakesh Vohra.",
        "Characterization of Additive Cost Sharing Methods.",
        "Economic Letters, 80:399-407, 2003. [24] Martin P´al and ´Eva Tardos.",
        "Group Strategyproof Mechanisms via Primal-Dual Algorithms.",
        "In Proceedings of the 44th Annual IEEE Symposium on the Foundations of Computer Science (FOCS 03), 2003. [25] Lloyd S. Shapley.",
        "Contributions to the Theory of Games II, chapter A Value for n-person Games, pages 307-317.",
        "Annals of Mathematics Studies, 1953.",
        "Ediors: H. W. Kuhn, A. W. Tucker. [26] Wayne E. Smith.",
        "Various Optimizers for Single-Stage Production.",
        "Naval Research Logistics Quarterly, 3:59-66, 1956. [27] Jeroen Suijs.",
        "On incentive compatibility and budget balancedness in public decision making.",
        "Economic Design, 2, 2002. 239"
    ],
    "error_count": 0,
    "keys": {
        "cost sharing": {
            "translated_key": "Coste compartido",
            "is_in_text": true,
            "original_annotated_sentences": [
                "<br>cost sharing</br> in a Job Scheduling Problem Using the Shapley Value Debasis Mishra Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium mishra@core.ucl.ac.be Bharath Rangarajan Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium rangarajan@core.ucl.ac.be ABSTRACT A set of jobs need to be served by a single server which can serve only one job at a time.",
                "Jobs have processing times and incur waiting costs (linear in their waiting time).",
                "The jobs share their costs through compensation using monetary transfers.",
                "We characterize the Shapley value rule for this model using fairness axioms.",
                "Our axioms include a bound on the cost share of jobs in a group, efficiency, and some independence properties on the the cost share of a job.",
                "Categories and Subject Descriptors J.4 [Social and Behaviorial Sciences]: Economics General Terms Economics, Theory 1.",
                "INTRODUCTION A set of jobs need to be served by a server.",
                "The server can process only one job at a time.",
                "Each job has a finite processing time and a per unit time waiting cost.",
                "Efficient ordering of this queue directs us to serve the jobs in increasing order of the ratio of per unit time waiting cost and processing time.",
                "To compensate for waiting by jobs, monetary transfers to jobs are allowed.",
                "How should the jobs share the cost equitably amongst themselves (through transfers)?",
                "The problem of fair division of costs among agents in a queue has many practical applications.",
                "For example, computer programs are regularly scheduled on servers, data are scheduled to be transmitted over networks, jobs are scheduled in shop-floor on machines, and queues appear in many public services (post offices, banks).",
                "Study of queueing problems has attracted economists for a long time [7, 17].",
                "<br>cost sharing</br> is a fundamental problem in many settings on the Internet.",
                "Internet can be seen as a common resource shared by many users and the cost incured by using the resource needs to be shared in an equitable manner.",
                "The current surge in <br>cost sharing</br> literature from computer scientists validate this claim [8, 11, 12, 6, 24].",
                "Internet has many settings in which our model of job scheduling appears and the agents waiting in a queue incur costs (jobs scheduled on servers, queries answered from a database, data scheduled to be transmitted over a fixed bandwidth network etc.).",
                "We hope that our analysis will give new insights on <br>cost sharing</br> problems of this nature.",
                "Recently, there has been increased interest in <br>cost sharing</br> methods with submodular cost functions [11, 12, 6, 24].",
                "While many settings do have submodular cost functions (for example, multi-cast transmission games [8]), while the cost function of our game is supermodular.",
                "Also, such literature typically does not assume budget-balance (transfers adding up to zero), while it is an inherent feature of our model.",
                "A recent paper by Maniquet [15] is the closest to our model and is the motivation behind our work 1 .",
                "Maniquet [15] studies a model where he assumes all processing times are unity.",
                "For such a model, he characterizes the Shapley value rule using classical fairness axioms.",
                "Chun [1] interprets the worth of a coalition of jobs in a different manner for the same model and derives a reverse rule.",
                "Chun characterizes this rule using similar fairness axioms.",
                "Chun [2] also studies the envy properties of these rules.",
                "Moulin [22, 21] studies the queueing problem from a strategic point view when per unit waiting costs are unity.",
                "Moulin introduces new concepts in the queueing settings such as splitting and merging of jobs, and ways to prevent them.",
                "Another stream of literature is on sequencing games, first introduced by Curiel et al. [4].",
                "For a detailed survey, refer to Curiel et al. [3].",
                "Curiel et al. [4] defined sequencing games similar to our model, but in which an initial ordering of jobs is given.",
                "Besides, their notion of worth of a coalition is very different from the notions studied in Maniquet [15] and Chun [1] (these are the notions used in our work too).",
                "The particular notion of the worth of a coalition makes the sequencing game of Curiel et al. [4] convex, whereas our game is not convex and does not assume the presence of any initial order.",
                "In summary, the focus of this stream of 1 The authors thank Fran¸cois Maniquet for several fruitful discussions. 232 research is how to share the savings in costs from the initial ordering to the optimal ordering amongst jobs (also see Hamers et al. [9], Curiel et al. [5]).",
                "Recently, Klijn and S´anchez [13, 14] considered sequencing games without any initial ordering of jobs.",
                "They take two approaches to define the worth of coalitions.",
                "One of their approaches, called the tail game, is related to the reverse rule of Chun [1].",
                "In the tail game, jobs in a coalition are served after the jobs not in the coalition are served.",
                "Klijn and S´anchez [14] showed that the tail game is balanced.",
                "Further, they provide expressions for the Shapley value in tail game in terms of marginal vectors and reversed marginal vectors.",
                "We provide a simpler expression of the Shapley value in the tail game, generalizing the result in Chun [1].",
                "Klijn and S´anchez [13] study the core of this game in detail.",
                "Strategic aspects of queueing problems have also been researched.",
                "Mitra [19] studies the first best implementation in queueing models with generic cost functions.",
                "First best implementation means that there exists an efficient mechanism in which jobs in the queue have a dominant strategy to reveal their true types and their transfers add up to zero.",
                "Suijs [27] shows that if waiting costs of jobs are linear then first best implementation is possible.",
                "Mitra [19] shows that among a more general class of queueing problems first best implementation is possible if and only if the cost is linear.",
                "For another queueing model, Mitra [18] shows that first best implementation is possible if and only if the cost function satisfies a combinatorial property and an independence property.",
                "Moulin [22, 21] studies strategic concepts such as splitting and merging in queueing problems with unit per unit waiting costs.",
                "The general <br>cost sharing</br> literature is vast and has a long history.",
                "For a good survey, we refer to [20].",
                "From the seminal work of Shapley [25] to recent works on <br>cost sharing</br> in multi-cast transmission and optimization problems [8, 6, 23] this area has attracted economists, computer scientists, and operations researchers. 1.1 Our Contribution Ours is the first model which considers <br>cost sharing</br> when both processing time and per unit waiting cost of jobs are present.",
                "We take a cooperative game theory approach and apply the classical Shapley value rule to the problem.",
                "We show that the Shapley value rule satisfies many intuitive fairness axioms.",
                "Due to two dimensional nature of our model and one dimensional nature of Maniquets model [15], his axioms are insufficient to characterize the Shapley value in our setting.",
                "We introduce axioms such as independece of preceding jobs unit waiting cost and independence of following jobs processing time.",
                "A key axiom that we introduce gives us a bound on cost share of a job in a group of jobs which have the same ratio of unit time waiting cost and processing time (these jobs can be ordered in any manner between themseleves in an efficient ordering).",
                "If such a group consists of just one job, then the axiom says that such a job should at least pay his own processing cost (i.e., the cost it would have incurred if it was the only job in the queue).",
                "If there are multiple jobs in such a group, the probability of any two jobs from such a group inflicting costs on each other is same (1 2 ) in an efficient ordering.",
                "Depending on the ordering selected, one job inflicts cost on the other.",
                "Our fairness axiom says that each job should at least bear such expected costs.",
                "We characterize the Shapley value rule using these fairness axioms.",
                "We also extend the envy results in [2] to our setting and discuss a class of reasonable <br>cost sharing</br> mechanisms. 2.",
                "THE MODEL There are n jobs that need to be served by one server which can process only one job at a time.",
                "The set of jobs are denoted as N = {1, . . . , n}. σ : N → N is an ordering of jobs in N and σi denotes the position of job i in the ordering σ.",
                "Given an ordering σ, define Fi(σ) = {j ∈ N : σi < σj} and Pi(σ) = {j ∈ N : σi > σj}.",
                "Every job i is identified by two parameters: (pi, θi). pi is the processing time and θi is the cost per unit waiting time of job i.",
                "Thus, a queueing problem is defined by a list q = (N, p, θ) ∈ Q, where Q is the set of all possible lists.",
                "We will denote γi = θi pi .",
                "Given an ordering of jobs σ, the cost incurred by job i is given by ci(σ) = piθi + θi   j∈Pi(σ) pj.",
                "The total cost incurred by all jobs due to an ordering σ can be written in two ways: (i) by summing the cost incurred by every job and (ii) by summing the costs inflicted by a job on other jobs with their own processing cost.",
                "C(N, σ) =   i∈N ci(σ) =   i∈N piθi +   i∈N ¡θi   j∈Pi(σ) pj¢. =   i∈N piθi +   i∈N ¡pi   j∈Fi(σ) θj¢.",
                "An efficient ordering σ∗ is the one which minimizes the total cost incurred by all jobs.",
                "So, C(N, σ∗ ) ≤ C(N, σ) ∀ σ ∈ Σ.",
                "To achieve notational simplicity, we will write the total cost in an efficient ordering of jobs from N as C(N) whenever it is not confusing.",
                "Sometimes, we will deal with only a subset of jobs S ⊆ N. The ordering σ will then be defined on jobs in S only and we will write the total cost from an efficient ordering of jobs in S as C(S).",
                "The following lemma shows that jobs are ordered in decreasing γ in an efficient ordering.",
                "This is also known as the weighted shortest processing time rule, first introduced by Smith [26].",
                "Lemma 1.",
                "For any S ⊆ N, let σ∗ be an efficient ordering of jobs in S. For every i = j, i, j ∈ S, if σ∗ i > σ∗ j , then γi ≤ γj.",
                "Proof.",
                "Assume for contradiction that the statment of the lemma is not true.",
                "This means, we can find two consecutive jobs i, j ∈ S (σ∗ i = σ∗ j + 1) such that γi > γj.",
                "Define a new ordering σ by interchanging i and j in σ∗ .",
                "The costs to jobs in S \\ {i, j} is not changed from σ∗ to σ.",
                "The difference between total costs in σ∗ and σ is given by, C(S, σ) − C(S, σ∗ ) = θjpi − θipj.",
                "From efficiency we get θjpi − θipj ≥ 0.",
                "This gives us γj ≥ γi, which is a contradiction.",
                "An allocation for q = (N, p, θ) ∈ Q has two components: an ordering σ and a transfer ti for every job i ∈ N. ti denotes the payment received by job i.",
                "Given a transfer ti and an ordering σ, the cost share of job i is defined as, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. 233 An allocation (σ, t) is efficient for q = (N, p, θ) whenever σ is an efficient ordering and £i∈N ti = 0.",
                "The set of efficient orderings of q is denoted as Σ∗ (q) and σ∗ (q) will be used to refer to a typical element of the set.",
                "The following straightforward lemma says that for two different efficient orderings, the cost share in one efficient allocation is possible to achieve in the other by appropriately modifying the transfers.",
                "Lemma 2.",
                "Let (σ, t) be an efficient allocation and π be the vector of cost shares of jobs from this allocation.",
                "If σ∗ = σ be an efficient ordering and t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, then (σ∗ , t∗ ) is also an efficient allocation.",
                "Proof.",
                "Since (σ, t) is efficient, £i∈N ti = 0.",
                "This gives £i∈N πi = C(N).",
                "Since σ∗ is an efficient ordering, £i∈N ci(σ∗ ) = C(N).",
                "This means, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0.",
                "So, (σ∗ , t∗ ) is an efficient allocation.",
                "Depending on the transfers, the cost shares in different efficient allocations may differ.",
                "An allocation rule ψ associates with every q ∈ Q a non-empty subset ψ(q) of allocations. 3.",
                "<br>cost sharing</br> USING THE SHAPLEY VALUE In this section, we define the coalitional cost of this game and analyze the solution proposed by the Shapley value.",
                "Given a queue q ∈ Q, the cost of a coalition of S ⊆ N jobs in the queue is defined as the cost incurred by jobs in S if these are the only jobs served in the queue using an efficient ordering.",
                "Formally, the cost of a coalition S ⊆ N is, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, where σ∗ = σ∗ (S) is an efficient ordering considering jobs from S only.",
                "The worth of a coalition of S jobs is just −C(S).",
                "Maniquet [15] observes another equivalent way to define the worth of a coalition is using the dual function of the cost function C(·).",
                "Other interesting ways to define the worth of a coalition in such games is discussed by Chun [1], who assume that a coalition of jobs are served after the jobs not in the coalition are served.",
                "The Shapley value (or cost share) of a job i is defined as, SVi =   S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) The Shapley value allocation rule says that jobs are ordered using an efficient ordering and transfers are assigned to jobs such that the cost share of job i is given by Equation 1.",
                "Lemma 3.",
                "Let σ∗ be an efficient ordering of jobs in set N. For all i ∈ N, the Shapley value is given by, SVi = piθi + 1 2 ¡Li + Ri¢, where Li = θi £j∈Pi(σ∗) pj and Ri = pi £j∈Fi(σ∗) θj.",
                "Proof.",
                "Another way to write the Shapley value formula is the following [10], SVi =   S⊆N:i∈S ∆(S) |S| , where ∆(S) = C(S) if |S| = 1 and ∆(S) = C(S)−£T S ∆(T).",
                "This gives ∆({i}) = C({i}) = piθi ∀i ∈ N. For any i, j ∈ N with i = j, we have ∆({i, j}) = C({i, j}) − C({i}) − C({j}) = min(piθi + pjθj + pjθi, piθi + pjθj + piθj) − piθi − pjθj = min(pjθi, piθj).",
                "We will show by induction that ∆(S) = 0 if |S| > 2.",
                "For |S| = 3, let S = {i, j, k}.",
                "Without loss of generality, assume θi pi ≥ θj pj ≥ θk pk .",
                "So, ∆(S) = C(S) − ∆({i, j}) − ∆({j, k}) − ∆({i, k})−∆({i})−∆({j})−∆({k}) = C(S)−piθj −pjθk − piθk − piθi − pjθj − pkθk = C(S) − C(S) = 0.",
                "Now, assume for T S, ∆(T) = 0 if |T| > 2.",
                "Without loss of generality assume that σ to be the identity mapping.",
                "Now, ∆(S) = C(S) −   T S ∆(T) = C(S) −   i∈S   j∈S:j<i ∆({i, j}) −   i∈S ∆({i}) = C(S) −   i∈S   j∈S:j<i pjθi −   i∈S piθi = C(S) − C(S) = 0.",
                "This proves that ∆(S) = 0 if |S| > 2.",
                "Using the Shapley value formula now, SVi =   S⊆N:i∈S ∆(S) |S| = ∆({i}) + 1 2   j∈N:j=i ∆({i, j}) = piθi + 1 2 ¡  j<i ∆({i, j}) +   j>i ∆({i, j})¢ = piθi + 1 2 ¡  j<i pjθi +   j>i piθj¢= piθi + 1 2 ¡Li + Ri¢. 4.",
                "AXIOMATICCHARACTERIZATIONOF THE SHAPLEY VALUE In this section, we will define serveral axioms on fairness and characterize the Shapley value using them.",
                "For a given q ∈ Q, we will denote ψ(q) as the set of allocations from allocation rule ψ.",
                "Also, we will denote the cost share vector associated with an allocation rule (σ, t) as π and that with allocation rule (σ , t ) as π etc. 4.1 The Fairness Axioms We will define three types of fairness axioms: (i) related to efficiency, (ii) related to equity, and (iii) related to independence.",
                "Efficiency Axioms We define two types of efficiency axioms.",
                "One related to efficiency which states that an efficient ordering should be selected and the transfers of jobs should add up to zero (budget balance).",
                "Definition 1.",
                "An allocation rule ψ satisfies efficiency if for every q ∈ Q and (σ, t) ∈ ψ(q), (σ, t) is an efficient allocation. 234 The second axiom related to efficiency says that the allocation rule should not discriminate between two allocations which are equivalent to each other in terms of cost shares of jobs.",
                "Definition 2.",
                "An allocation rule ψ satisfies Pareto indifference if for every q ∈ Q, (σ, t) ∈ ψ(q), and (σ , t ) ∈ Σ(q), we have ¡πi = πi ∀ i ∈ N¢⇒ ¡(σ , t ) ∈ ψ(q)¢.",
                "An implication of Pareto indifference axiom and Lemma 2 is that for every efficient ordering there is some set of transfers of jobs such that it is part of an efficient rule and the cost share of a job in all these allocations are same.",
                "Equity Axioms How should the cost be shared between two jobs if the jobs have some kind of similarity between them?",
                "Equity axioms provide us with fairness properties which help us answer this question.",
                "We provide five such axioms.",
                "Some of these axioms (for example anonymity, equal treatment of equals) are standard in the literature, while some are new.",
                "We start with a well known equity axiom called anonymity.",
                "Denote ρ : N → N as a permutation of elements in N. Let ρ(σ, t) denote the allocation obtained by permuting elements in σ and t according to ρ.",
                "Similarly, let ρ(p, θ) denote the new list of (p, θ) obtained by permuting elements of p and θ according to ρ.",
                "Our first equity axiom states that allocation rules should be immune to such permutation of data.",
                "Definition 3.",
                "An allocation rule ψ satisfies anonymity if for all q ∈ Q, (σ, t) ∈ ψ(q) and every permutation ρ, we then ρ(σ, t) ∈ ψ(N, ρ(q)).",
                "The next equity axiom is classical in literature and says that two similar jobs should be compensated such that their cost shares are equal.",
                "This implies that if all the jobs are of same type, then jobs should equally share the total system cost.",
                "Definition 4.",
                "An allocation rule ψ satisfies equal treatment of equals (ETE) if for all q ∈ Q, (σ, t) ∈ ψ(q), i, j ∈ N, then ¡pi = pj; θi = θj¢⇒ ¡πi = πj¢.",
                "ETE directs us to share costs equally between jobs if they are of the same per unit waiting cost and processing time.",
                "But it is silent about the cost shares of two jobs i and j which satisfy θi pi = θj pj .",
                "We introduce a new axiom for this.",
                "If an efficient rule chooses σ such that σi < σj for some i, j ∈ N, then job i is inflicting a cost of piθj on job j and job j is inflicting zero cost on job i.",
                "Define for some γ ≥ 0, S(γ) = {i ∈ N : γi = γ}.",
                "In an efficient rule, the elements in S(γ) can be ordered in any manner (in |S(γ)|! ways).",
                "If i, j ∈ S(γ) then we have pjθi = piθj.",
                "Probability of σi < σj is 1 2 and so is the probability of σi > σj.",
                "The expected cost i inflicts on j is 1 2 piθj and j inflicts on i is 1 2 pjθi.",
                "Our next fairness axiom says that i and j should each be responsible for their own processing cost and this expected cost they inflict on each other.",
                "Arguing for every pair of jobs i, j ∈ S(γ), we establish a bound on the cost share of jobs in S(γ).",
                "We impose this as an equity axiom below.",
                "Definition 5.",
                "An allocation rule satisfies expected cost bound (ECB) if for all q ∈ Q, (σ, t) ∈ ψ(q) with π being the resulting cost share, for any γ ≥ 0, and for every i ∈ S(γ), we have πi ≥ piθi + 1 2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢.",
                "The central idea behind this axiom is that of expected cost inflicted.",
                "If an allocation rule chooses multiple allocations, we can assign equal probabilities of selecting one of the allocations.",
                "In that case, the expected cost inflicted by a job i on another job j in the allocation rule can be calculated.",
                "Our axiom says that the cost share of a job should be at least its own processing cost and the total expected cost it inflicts on others.",
                "Note that the above bound poses no constraints on how the costs are shared among different groups.",
                "Also observe that if S(γ) contains just one job, ECB says that job should at least bear its own processing cost.",
                "A direct consequence of ECB is the following lemma.",
                "Lemma 4.",
                "Let ψ be an efficient rule which satisfies ECB.",
                "For a q ∈ Q if S(γ) = N, then for any (σ, t) ∈ ψ(q) which gives a cost share of π, πi = piθi + 1 2 ¡Li + Ri¢∀ i ∈ N. Proof.",
                "From ECB, we get πi ≥ piθi+1 2 ¡Li+Ri¢∀ i ∈ N. Assume for contradiction that there exists j ∈ N such that πj > pjθj + 1 2 ¡Li + Ri¢.",
                "Using efficiency and the fact that £i∈N Li = £i∈N Ri, we get £i∈N πi = C(N) > £i∈N piθi + 1 2 £i∈N ¡Li + Ri¢ = C(N).",
                "This gives us a contradiction.",
                "Next, we introduce an axiom about sharing the transfer of a job between a set of jobs.",
                "In particular, if the last job quits the system, then the ordering need not change.",
                "But the transfer to the last job needs to be shared between the other jobs.",
                "This should be done in proportion to their processing times because every job influenced the last job based on its processing time.",
                "Definition 6.",
                "An allocation rule ψ satisfies proportionate responsibility of p (PRp) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = |N|, q = (N \\ {k}, p , θ ) ∈ Q, such that for all i ∈ N\\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk pi £j=k pj .",
                "An analogous fairness axiom results if we remove the job from the beginning of the queue.",
                "Since the presence of the first job influenced each job depending on their θ values, its transfer needs to be shared in proportion to θ values.",
                "Definition 7.",
                "An allocation rule ψ satisfies proportionate responsibility of θ (PRθ) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = 1, q = (N \\{k}, p , θ ) ∈ Q, such that for all i ∈ N \\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk θi £j=k θj .",
                "The proportionate responsibility axioms are generalizations of equal responsibility axioms introduced by Maniquet [15]. 235 Independence Axioms The waiting cost of a job does not depend on the per unit waiting cost of its preceding jobs.",
                "Similarly, the waiting cost inflicted by a job to its following jobs is independent of the processing times of the following jobs.",
                "These independence properties should be carried over to the <br>cost sharing</br> rules.",
                "This gives us two independence axioms.",
                "Definition 8.",
                "An allocation rule ψ satisfies independence of preceding jobs θ (IPJθ) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk < γk, pk = pk, then for all j ∈ N such that σj > σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ).",
                "Definition 9.",
                "An allocation rule ψ satisfies independence of following jobs p (IFJp) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk > γk, θk = θk, then for all j ∈ N such that σj < σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ). 4.2 The Characterization Results Having stated the fairness axioms, we propose three different ways to characterize the Shapley value rule using these axioms.",
                "All our characterizations involve efficiency and ECB.",
                "But if we have IPJθ, we either need IFJp or PRp.",
                "Similarly if we have IFJp, we either need IPJθ or PRθ.",
                "Proposition 1.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and IFJp is a rule implied by the Shapley value rule.",
                "Proof.",
                "Define for any i, j ∈ N, θi j = γipj and pi j = θj γi .",
                "Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider the following q = (N, p , θ ) corresponding to job i with pj = pj if j ≤ i and pj = pi j if j > i, θj = θi j if j < i and θj = θj if j ≥ i.",
                "Observe that all jobs have the same γ: γi.",
                "By Lemma 2 and efficiency, (σ, t ) ∈ ψ(q ) for some set of transfers t .",
                "Using Lemma 4, we get cost share of i from (σ, t ) as πi = piθi + 1 2 ¡Li + Ri¢.",
                "Now, for any j < i, if we change θj to θj without changing processing time, the new γ of j is γj ≥ γi.",
                "Applying IPJθ, the cost share of job i should not change.",
                "Similarly, for any job j > i, if we change pj to pj without changing θj, the new γ of j is γj ≤ γi.",
                "Applying IFJp, the cost share of job i should not change.",
                "Applying this procedure for every j < i with IPJθ and for every j > i with IFJp, we reach q = (N, p, θ) and the payoff of i does not change from πi.",
                "Using this argument for every i ∈ N and using the expression for the Shapley value in Lemma 3, we get the Shapley value rule.",
                "It is possible to replace one of the independence axioms with an equity axiom on sharing the transfer of a job.",
                "This is shown in Propositions 2 and 3.",
                "Proposition 2.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and PRp is a rule implied by the Shapley value rule.",
                "Proof.",
                "As in the proof of Proposition 1, define θi j = γipj ∀ i, j ∈ N. Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider a queue with jobs in set K = {1, . . . , i, i + 1}, where i < n. Define q = (K, p, θ ), where θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ is an efficient ordering for q .",
                "By ECB and Lemma 4 the cost share of job i + 1 in any allocation rule in ψ must be πi+1 = pi+1θi+1 + 1 2 ¡£j<i+1 pjθi+1¢.",
                "Now, consider q = (K, p, θ ) such that θj = θi j ∀ j ≤ i and θi+1 = θi+1. σ remains an efficient ordering in q and by IPJθ the cost share of i + 1 remains πi+1.",
                "In q = (K \\ {i + 1}, p, θ ), we can calculate the cost share of job i using ECB and Lemma 4 as πi = piθi + 1 2 £j<i pjθi.",
                "So, using PRp we get the new cost share of job i in q as πi = πi + ti+1 pi j<i+1 pj = piθi + 1 2 ¡£j<i pjθi + piθi+1¢.",
                "Now, we can set K = K ∪ {i + 2}.",
                "As before, we can find cost share of i + 2 in this queue as πi+2 = pi+2θi+2 + 1 2 ¡£j<i+2 pjθi+2¢.",
                "Using PRp we get the new cost share of job i in the new queue as πi = piθi + 1 2 ¡£j<i pjθi + piθi+1 + piθi+2¢.",
                "This process can be repeated till we add job n at which point cost share of i is piθi + 1 2 ¡£j<i pjθi + £j>i piθj¢.",
                "Then, we can adjust the θ of preceding jobs of i to their original value and applying IPJθ, the payoffs of jobs i through n will not change.",
                "This gives us the Shapley values of jobs i through n. Setting i = 1, we get cost shares of all the jobs from ψ as the Shapley value.",
                "Proposition 3.",
                "Any efficient rule ψ that satisfies ECB, IFJp, and PRθ is a rule implied by the Shapley value rule.",
                "Proof.",
                "The proof mirrors the proof of Proposition 2.",
                "We provide a short sketch.",
                "Analogous to the proof of Proposition 2, θs are kept equal to original data and processing times are initialized to pi+1 j .",
                "This allows us to use IFJp.",
                "Also, contrast to Proposition 2, we consider K = {i, i + 1, . . . , n} and repeatedly add jobs to the beginning of the queue maintaining the same efficient ordering.",
                "So, we add the cost components of preceding jobs to the cost share of jobs in each iteration and converge to the Shapley value rule.",
                "The next proposition shows that the Shapley value rule satisfies all the fairness axioms discussed.",
                "Proposition 4.",
                "The Shapley value rule satisfies efficiency, pareto indifference, anonymity, ETE, ECB, IPJθ, IFJp, PRp, and PRθ.",
                "Proof.",
                "The Shapley value rule chooses an efficient ordering and by definition the payments add upto zero.",
                "So, it satisfies efficiency.",
                "The Shapley value assigns same cost share to a job irrespective of the efficient ordering chosen.",
                "So, it is pareto indifferent.",
                "The Shapley value is anonymous because the particular index of a job does not effect his ordering or cost share.",
                "For ETE, consider two jobs i, j ∈ N such that pi = pj and θi = θj.",
                "Without loss of generality assume the efficient ordering to be 1, . . . , i, . . . , j, . . . , n. Now, the Shapley value of job i is 236 SVi = piθi + 1 2 ¡Li + Ri¢(From Lemma 3) = pjθj + 1 2 ¡Lj + Rj¢− 1 2 ¡Li − Lj + Ri − Rj¢ = SVj − 1 2 ¡   i<k≤j piθk −   i≤k<j pkθi¢ = SVj − 1 2   i<k≤j (piθk − pkθi) (Using pi = pj and θi = θj) = SVj (Using θk pk = θi pi for all i ≤ k ≤ j).",
                "The Shapley value satisfies ECB by its expression in Lemma 3.",
                "Consider any job i, in an efficient ordering σ, if we increase the value of γj for some j = i such that σj > σi, then the set Pi ( preceding jobs) does not change in the new efficient ordering.",
                "If γj is changed such that pj remains the same, then the expression £j∈Pi θipj is unchanged.",
                "If (p, θ) values of no other jobs are changed, then the Shapley value is unchanged by increasing γj for some j ∈ Pi while keeping pj unchanged.",
                "Thus, the Shapley value rule satisfies IPJθ.",
                "An analogous argument shows that the Shapley value rule satisfies IFJp.",
                "For PRp, assume without loss of generality that jobs are ordered 1, . . . , n in an efficient ordering.",
                "Denote the transfer of job i = n due to the Shapley value with set of jobs N and set of jobs N \\ {n} as ti and ti respectively.",
                "Transfer of last job is tn = 1 2 θn £j<n pj.",
                "Now, ti = 1 2 ¡θi   j<i pj − pi   j>i θj¢ = 1 2 ¡θi   j<i pj − pi   j>i:j=n θj¢− 1 2 piθn = ti − 1 2 θn   j<n pj pi £j<n pj = ti − tn pi £j<n pj .",
                "A similar argument shows that the Shapley value rule satisfies PRθ.",
                "These series of propositions lead us to our main result.",
                "Theorem 1.",
                "Let ψ be an allocation rule.",
                "The following statements are equivalent: 1) For each q ∈ Q, ψ(q) selects all the allocation assigning jobs cost shares implied by the Shapley value. 2) ψ satisfies efficiency, ECB, IFJp, and IPJθ. 3) ψ satisfies efficiency, ECB, IFJp, and PRθ. 4) ψ satisfies efficiency, ECB, PRp, and IPJθ.",
                "Proof.",
                "The proof follows from Propositions 1, 2, 3, and 4. 5.",
                "DISCUSSIONS 5.1 A Reasonable Class of <br>cost sharing</br> Mechanisms In this section, we will define a reasonable class of <br>cost sharing</br> mechanisms.",
                "We will show how these reasonable mechanisms lead to the Shapley value mechanism.",
                "Definition 10.",
                "An allocation rule ψ is reasonable if for all q ∈ Q and (σ, t) ∈ ψ(q) we have for all i ∈ N, ti = α ¡θi   j∈Pi(σ) pj − pi   j∈Fi(σ) θj¢∀ i ∈ N, where 0 ≤ α ≤ 1.",
                "The reasonable <br>cost sharing</br> mechanism says that every job should be paid a constant fraction of the difference between the waiting cost he incurs and the waiting cost he inflicts on other jobs.",
                "If α = 0, then every job bears its own cost.",
                "If α = 1, then every job gets compensated for its waiting cost but compensates others for the cost he inflicts on others.",
                "The Shapley value rule comes as a result of ETE as shown in the following proposition.",
                "Proposition 5.",
                "Any efficient and reasonable allocation rule ψ that satisfies ETE is a rule implied by the Shapley value rule.",
                "Proof.",
                "Consider a q ∈ Q in which pi = pj and θi = θj.",
                "Let (σ, t) ∈ ψ(q) and π be the resulting cost shares.",
                "From ETE, we get, πi = πj ⇒ ci(σ) − ti = cj(σ) − tj ⇒ piθi + (1 − α)Li + αRi = pjθj + (1 − α)Lj + αRj (Since ψ is efficient and reasonable) ⇒ (1 − α)(Li − Lj) = α(Rj − Ri) (Using pi = pj, θi = θj) ⇒ 1 − α = α (Using Li − Lj = Rj − Ri = 0) ⇒ α = 1 2 .",
                "This gives us the Shapley value rule by Lemma 3. 5.2 Results on Envy Chun [2] discusses a fariness condition called no-envy for the case when processing times of all jobs are unity.",
                "Definition 11.",
                "An allocation rule satisfies no-envy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tj, where π is the cost share from allocation rule (σ, t) and σij is the ordering obtaining by swapping i and j.",
                "From the result in [2], the Shapley value rule does not satisfy no-envy in our model also.",
                "To overcome this, Chun [2] introduces the notion of adjusted no-envy, which he shows is satisfied in the Shapley value rule when processing times of all jobs are unity.",
                "Here, we show that adjusted envy continues to hold in the Shapley value rule in our model (when processing times need not be unity).",
                "As before denote σij be an ordering where the position of i and j is swapped from an ordering σ.",
                "For adjusted noenvy, if (σ, t) is an allocation for some q ∈ Q, let tij be the 237 transfer of job i when the transfer of i is calculated with respect to ordering σij .",
                "Observe that an allocation may not allow for calculation of tij .",
                "For example, if ψ is efficient, then tij cannot be calculated if σij is also not efficient.",
                "For simplicity, we state the definition of adjusted no-envy to apply to all such rules.",
                "Definition 12.",
                "An allocation rule satisfies adjusted noenvy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tij i .",
                "Proposition 6.",
                "The Shapley value rule satisfies adjusted no-envy.",
                "Proof.",
                "Without loss of generality, assume efficient ordering of jobs is: 1, . . . , n. Consider two jobs i and i + k. From Lemma 3, SVi = piθi + 1 2 ¡  j<i θipj +   j>i θjpi¢.",
                "Let ˆπi be the cost share of i due to adjusted transfer tii+k i in the ordering σii+k . ˆπi = ci(σii+k ) − tii+k i = piθi + 1 2 ¡  j<i θipj + θipi+k +   i<j<i+k θipj +   j>i θjpi − θi+kpi −   i<j<i+k θjpi¢ = SVi + 1 2   i<j≤i+k ¡θipj − θjpi¢ ≥ SVi (Using the fact that θi pi ≥ θj pj for i < j). 6.",
                "CONCLUSION We studied the problem of sharing costs for a job scheduling problem on a single server, when jobs have processing times and unit time waiting costs.",
                "We took a cooperative game theory approach and show that the famous the Shapley value rule satisfies many nice fairness properties.",
                "We characterized the Shapley value rule using different intuitive fairness axioms.",
                "In future, we plan to further simplify some of the fairness axioms.",
                "Some initial simplifications already appear in [16], where we provide an alternative axiom to ECB and also discuss the implication of transfers between jobs (in stead of transfers from jobs to a central server).",
                "We also plan to look at <br>cost sharing</br> mechanisms other than the Shapley value.",
                "Investigating the strategic power of jobs in such mechanisms is another line of future research. 7.",
                "REFERENCES [1] Youngsub Chun.",
                "A Note on Maniquets Characterization of the Shapley Value in Queueing Problems.",
                "Working Paper, Rochester University, 2004. [2] Youngsub Chun.",
                "No-envy in Queuing Problems.",
                "Working Paper, Rochester University, 2004. [3] Imma Curiel, Herbert Hamers, and Flip Klijn.",
                "Sequencing Games: A Survey.",
                "In Peter Borm and Hans Peters, editors, Chapter in Game Theory.",
                "Theory and Decision Library, Kulwer Academic Publishers, 2002. [4] Imma Curiel, Giorgio Pederzoli, and Stef Tijs.",
                "Sequencing Games.",
                "European Journal of Operational Research, 40:344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs, and Bart Veltman.",
                "Sequencing and Cooperation.",
                "Operations Research, 42(3):566-568, May-June 1994. [6] Nikhil R. Devanur, Milena Mihail, and Vijay V. Vazirani.",
                "Strategyproof Cost-sharing Mechanisms for Set Cover and Facility Location Games.",
                "In Proceedings of Fourth Annual ACM Conferece on Electronic Commerce, 2003. [7] Robert J. Dolan.",
                "Incentive Mechanisms for Priority Queueing Problems.",
                "Bell Journal of Economics, 9:421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou, and Scott Shenker.",
                "Sharing the Cost of Multicast Transmissions.",
                "In Proceedings of Thirty-Second Annual ACM Symposium on Theory of Computing, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs, and Peter Borm.",
                "The Split Core for Sequencing Games.",
                "Games and Economic Behavior, 15:165-176, 1996. [10] John C. Harsanyi.",
                "Contributions to Theory of Games IV, chapter A Bargaining Model for Cooperative n-person Games.",
                "Princeton University Press, 1959.",
                "Editors: A. W. Tucker, R. D. Luce. [11] Kamal Jain and Vijay Vazirani.",
                "Applications of Approximate Algorithms to Cooperative Games.",
                "In Proceedings of 33rd Symposium on Theory of Computing (STOC 01), 2001. [12] Kamal Jain and Vijay Vazirani.",
                "Equitable Cost Allocations via Primal-Dual Type Algorithms.",
                "In Proceedings of 34th Symposium on Theory of Computing (STOC 02), 2002. [13] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without a Completely Specified Initial Order.",
                "Report in Statistics and Operations Research, pages 1-17, 2002.",
                "Report 02-04. [14] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without Initial Order.",
                "Working Paper, Universitat Aut´onoma de Barcelona, July 2004. [15] Franois Maniquet.",
                "A Characterization of the Shapley Value in Queueing Problems.",
                "Journal of Economic Theory, 109:90-103, 2003. [16] Debasis Mishra and Bharath Rangarajan.",
                "<br>cost sharing</br> in a job scheduling problem.",
                "Working Paper, CORE, 2005. [17] Manipushpak Mitra.",
                "Essays on First Best Implementable Incentive Problems.",
                "Ph.D. Thesis, Indian Statistical Institute, New Delhi, 2000. [18] Manipushpak Mitra.",
                "Mechanism design in queueing problems.",
                "Economic Theory, 17(2):277-305, 2001. [19] Manipushpak Mitra.",
                "Achieving the first best in sequencing problems.",
                "Review of Economic Design, 7:75-91, 2002. [20] Herv´e Moulin.",
                "Handbook of Social Choice and Welfare, chapter Axiomatic Cost and Surplus Sharing.",
                "North-Holland, 2002.",
                "Publishers: Arrow, Sen, Suzumura. [21] Herv´e Moulin.",
                "On Scheduling Fees to Prevent 238 Merging, Splitting and Transferring of Jobs.",
                "Working Paper, Rice University, 2004. [22] Herv´e Moulin.",
                "Split-proof Probabilistic Scheduling.",
                "Working Paper, Rice University, 2004. [23] Herv´e Moulin and Rakesh Vohra.",
                "Characterization of Additive <br>cost sharing</br> Methods.",
                "Economic Letters, 80:399-407, 2003. [24] Martin P´al and ´Eva Tardos.",
                "Group Strategyproof Mechanisms via Primal-Dual Algorithms.",
                "In Proceedings of the 44th Annual IEEE Symposium on the Foundations of Computer Science (FOCS 03), 2003. [25] Lloyd S. Shapley.",
                "Contributions to the Theory of Games II, chapter A Value for n-person Games, pages 307-317.",
                "Annals of Mathematics Studies, 1953.",
                "Ediors: H. W. Kuhn, A. W. Tucker. [26] Wayne E. Smith.",
                "Various Optimizers for Single-Stage Production.",
                "Naval Research Logistics Quarterly, 3:59-66, 1956. [27] Jeroen Suijs.",
                "On incentive compatibility and budget balancedness in public decision making.",
                "Economic Design, 2, 2002. 239"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "\"Coste compartido\" en un problema de programación de empleo utilizando el Centro de Investigación de Operaciones de Operaciones y la Econometría (Core) de Shapley Value.y Econometrics (Core) Universit´e Catholique de Louvain Louvain La Neuve, Bélgica rangarajan@core.ucl.ac.s Resumen Un conjunto de trabajos debe ser atendido por un solo servidor que solo puede servir un trabajo a la vez.",
                "El \"costo compartido\" es un problema fundamental en muchos entornos en Internet.",
                "El aumento actual en la literatura de \"costos compartidos\" de los informáticos validan esta afirmación [8, 11, 12, 6, 24].",
                "Esperamos que nuestro análisis brinde nuevas ideas sobre los problemas de \"costos compartidos\" de esta naturaleza.",
                "Recientemente, ha habido un mayor interés en los métodos de \"costos compartidos\" con funciones de costo submodular [11, 12, 6, 24].",
                "La literatura general de \"costos compartidos\" es vasta y tiene una larga historia.",
                "Desde el trabajo seminal de Shapley [25] hasta trabajos recientes sobre \"costos compartidos\" en problemas de transmisión y optimización de múltiples casos [8, 6, 23] Esta área ha atraído a economistas, informáticos e investigadores de operaciones.1.1 Nuestra contribución es el primer modelo que considera el \"costo compartido\" cuando el tiempo de procesamiento y el costo de espera de los trabajos están presentes.",
                "También ampliamos los resultados de envidia en [2] a nuestro entorno y discutimos una clase de mecanismos razonables de \"costos compartidos\".2.",
                "\"Coste compartido\" Usando el valor de Shapley en esta sección, definimos el costo coalición de este juego y analizamos la solución propuesta por el valor de Shapley.",
                "Estas propiedades de independencia deben transferirse a las reglas de \"costos compartidos\".",
                "Discusiones 5.1 Una clase razonable de mecanismos de \"costos compartidos\" en esta sección, definiremos una clase razonable de mecanismos de \"costos compartidos\".",
                "El mecanismo razonable de \"costo compartido\" dice que a cada trabajo se le debe pagar una fracción constante de la diferencia entre el costo de espera que incurre y el costo de espera que inflige a otros trabajos.",
                "También planeamos analizar los mecanismos de \"costos compartidos\" que no sean el valor de Shapley.",
                "\"Coste compartido\" en un problema de programación de trabajo.",
                "Caracterización de los métodos aditivos de \"costo compartido\"."
            ],
            "translated_text": "",
            "candidates": [
                "compratir costos",
                "Coste compartido",
                "compratir costos",
                "costo compartido",
                "compratir costos",
                "costos compartidos",
                "compratir costos",
                "costos compartidos",
                "compratir costos",
                "costos compartidos",
                "compratir costos",
                "costos compartidos",
                "compratir costos",
                "costos compartidos",
                "costo compartido",
                "Coste compartido",
                "costos compartidos",
                "compratir costos",
                "Coste compartido",
                "compratir costos",
                "costos compartidos",
                "compratir costos",
                "costos compartidos",
                "costos compartidos",
                "compratir costos",
                "costo compartido",
                "compratir costos",
                "costos compartidos",
                "compratir costos",
                "Coste compartido",
                "compratir costos",
                "costo compartido"
            ],
            "error": []
        },
        "job scheduling": {
            "translated_key": "Programación de trabajo",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Cost Sharing in a <br>job scheduling</br> Problem Using the Shapley Value Debasis Mishra Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium mishra@core.ucl.ac.be Bharath Rangarajan Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium rangarajan@core.ucl.ac.be ABSTRACT A set of jobs need to be served by a single server which can serve only one job at a time.",
                "Jobs have processing times and incur waiting costs (linear in their waiting time).",
                "The jobs share their costs through compensation using monetary transfers.",
                "We characterize the Shapley value rule for this model using fairness axioms.",
                "Our axioms include a bound on the cost share of jobs in a group, efficiency, and some independence properties on the the cost share of a job.",
                "Categories and Subject Descriptors J.4 [Social and Behaviorial Sciences]: Economics General Terms Economics, Theory 1.",
                "INTRODUCTION A set of jobs need to be served by a server.",
                "The server can process only one job at a time.",
                "Each job has a finite processing time and a per unit time waiting cost.",
                "Efficient ordering of this queue directs us to serve the jobs in increasing order of the ratio of per unit time waiting cost and processing time.",
                "To compensate for waiting by jobs, monetary transfers to jobs are allowed.",
                "How should the jobs share the cost equitably amongst themselves (through transfers)?",
                "The problem of fair division of costs among agents in a queue has many practical applications.",
                "For example, computer programs are regularly scheduled on servers, data are scheduled to be transmitted over networks, jobs are scheduled in shop-floor on machines, and queues appear in many public services (post offices, banks).",
                "Study of queueing problems has attracted economists for a long time [7, 17].",
                "Cost sharing is a fundamental problem in many settings on the Internet.",
                "Internet can be seen as a common resource shared by many users and the cost incured by using the resource needs to be shared in an equitable manner.",
                "The current surge in cost sharing literature from computer scientists validate this claim [8, 11, 12, 6, 24].",
                "Internet has many settings in which our model of <br>job scheduling</br> appears and the agents waiting in a queue incur costs (jobs scheduled on servers, queries answered from a database, data scheduled to be transmitted over a fixed bandwidth network etc.).",
                "We hope that our analysis will give new insights on cost sharing problems of this nature.",
                "Recently, there has been increased interest in cost sharing methods with submodular cost functions [11, 12, 6, 24].",
                "While many settings do have submodular cost functions (for example, multi-cast transmission games [8]), while the cost function of our game is supermodular.",
                "Also, such literature typically does not assume budget-balance (transfers adding up to zero), while it is an inherent feature of our model.",
                "A recent paper by Maniquet [15] is the closest to our model and is the motivation behind our work 1 .",
                "Maniquet [15] studies a model where he assumes all processing times are unity.",
                "For such a model, he characterizes the Shapley value rule using classical fairness axioms.",
                "Chun [1] interprets the worth of a coalition of jobs in a different manner for the same model and derives a reverse rule.",
                "Chun characterizes this rule using similar fairness axioms.",
                "Chun [2] also studies the envy properties of these rules.",
                "Moulin [22, 21] studies the queueing problem from a strategic point view when per unit waiting costs are unity.",
                "Moulin introduces new concepts in the queueing settings such as splitting and merging of jobs, and ways to prevent them.",
                "Another stream of literature is on sequencing games, first introduced by Curiel et al. [4].",
                "For a detailed survey, refer to Curiel et al. [3].",
                "Curiel et al. [4] defined sequencing games similar to our model, but in which an initial ordering of jobs is given.",
                "Besides, their notion of worth of a coalition is very different from the notions studied in Maniquet [15] and Chun [1] (these are the notions used in our work too).",
                "The particular notion of the worth of a coalition makes the sequencing game of Curiel et al. [4] convex, whereas our game is not convex and does not assume the presence of any initial order.",
                "In summary, the focus of this stream of 1 The authors thank Fran¸cois Maniquet for several fruitful discussions. 232 research is how to share the savings in costs from the initial ordering to the optimal ordering amongst jobs (also see Hamers et al. [9], Curiel et al. [5]).",
                "Recently, Klijn and S´anchez [13, 14] considered sequencing games without any initial ordering of jobs.",
                "They take two approaches to define the worth of coalitions.",
                "One of their approaches, called the tail game, is related to the reverse rule of Chun [1].",
                "In the tail game, jobs in a coalition are served after the jobs not in the coalition are served.",
                "Klijn and S´anchez [14] showed that the tail game is balanced.",
                "Further, they provide expressions for the Shapley value in tail game in terms of marginal vectors and reversed marginal vectors.",
                "We provide a simpler expression of the Shapley value in the tail game, generalizing the result in Chun [1].",
                "Klijn and S´anchez [13] study the core of this game in detail.",
                "Strategic aspects of queueing problems have also been researched.",
                "Mitra [19] studies the first best implementation in queueing models with generic cost functions.",
                "First best implementation means that there exists an efficient mechanism in which jobs in the queue have a dominant strategy to reveal their true types and their transfers add up to zero.",
                "Suijs [27] shows that if waiting costs of jobs are linear then first best implementation is possible.",
                "Mitra [19] shows that among a more general class of queueing problems first best implementation is possible if and only if the cost is linear.",
                "For another queueing model, Mitra [18] shows that first best implementation is possible if and only if the cost function satisfies a combinatorial property and an independence property.",
                "Moulin [22, 21] studies strategic concepts such as splitting and merging in queueing problems with unit per unit waiting costs.",
                "The general cost sharing literature is vast and has a long history.",
                "For a good survey, we refer to [20].",
                "From the seminal work of Shapley [25] to recent works on cost sharing in multi-cast transmission and optimization problems [8, 6, 23] this area has attracted economists, computer scientists, and operations researchers. 1.1 Our Contribution Ours is the first model which considers cost sharing when both processing time and per unit waiting cost of jobs are present.",
                "We take a cooperative game theory approach and apply the classical Shapley value rule to the problem.",
                "We show that the Shapley value rule satisfies many intuitive fairness axioms.",
                "Due to two dimensional nature of our model and one dimensional nature of Maniquets model [15], his axioms are insufficient to characterize the Shapley value in our setting.",
                "We introduce axioms such as independece of preceding jobs unit waiting cost and independence of following jobs processing time.",
                "A key axiom that we introduce gives us a bound on cost share of a job in a group of jobs which have the same ratio of unit time waiting cost and processing time (these jobs can be ordered in any manner between themseleves in an efficient ordering).",
                "If such a group consists of just one job, then the axiom says that such a job should at least pay his own processing cost (i.e., the cost it would have incurred if it was the only job in the queue).",
                "If there are multiple jobs in such a group, the probability of any two jobs from such a group inflicting costs on each other is same (1 2 ) in an efficient ordering.",
                "Depending on the ordering selected, one job inflicts cost on the other.",
                "Our fairness axiom says that each job should at least bear such expected costs.",
                "We characterize the Shapley value rule using these fairness axioms.",
                "We also extend the envy results in [2] to our setting and discuss a class of reasonable cost sharing mechanisms. 2.",
                "THE MODEL There are n jobs that need to be served by one server which can process only one job at a time.",
                "The set of jobs are denoted as N = {1, . . . , n}. σ : N → N is an ordering of jobs in N and σi denotes the position of job i in the ordering σ.",
                "Given an ordering σ, define Fi(σ) = {j ∈ N : σi < σj} and Pi(σ) = {j ∈ N : σi > σj}.",
                "Every job i is identified by two parameters: (pi, θi). pi is the processing time and θi is the cost per unit waiting time of job i.",
                "Thus, a queueing problem is defined by a list q = (N, p, θ) ∈ Q, where Q is the set of all possible lists.",
                "We will denote γi = θi pi .",
                "Given an ordering of jobs σ, the cost incurred by job i is given by ci(σ) = piθi + θi   j∈Pi(σ) pj.",
                "The total cost incurred by all jobs due to an ordering σ can be written in two ways: (i) by summing the cost incurred by every job and (ii) by summing the costs inflicted by a job on other jobs with their own processing cost.",
                "C(N, σ) =   i∈N ci(σ) =   i∈N piθi +   i∈N ¡θi   j∈Pi(σ) pj¢. =   i∈N piθi +   i∈N ¡pi   j∈Fi(σ) θj¢.",
                "An efficient ordering σ∗ is the one which minimizes the total cost incurred by all jobs.",
                "So, C(N, σ∗ ) ≤ C(N, σ) ∀ σ ∈ Σ.",
                "To achieve notational simplicity, we will write the total cost in an efficient ordering of jobs from N as C(N) whenever it is not confusing.",
                "Sometimes, we will deal with only a subset of jobs S ⊆ N. The ordering σ will then be defined on jobs in S only and we will write the total cost from an efficient ordering of jobs in S as C(S).",
                "The following lemma shows that jobs are ordered in decreasing γ in an efficient ordering.",
                "This is also known as the weighted shortest processing time rule, first introduced by Smith [26].",
                "Lemma 1.",
                "For any S ⊆ N, let σ∗ be an efficient ordering of jobs in S. For every i = j, i, j ∈ S, if σ∗ i > σ∗ j , then γi ≤ γj.",
                "Proof.",
                "Assume for contradiction that the statment of the lemma is not true.",
                "This means, we can find two consecutive jobs i, j ∈ S (σ∗ i = σ∗ j + 1) such that γi > γj.",
                "Define a new ordering σ by interchanging i and j in σ∗ .",
                "The costs to jobs in S \\ {i, j} is not changed from σ∗ to σ.",
                "The difference between total costs in σ∗ and σ is given by, C(S, σ) − C(S, σ∗ ) = θjpi − θipj.",
                "From efficiency we get θjpi − θipj ≥ 0.",
                "This gives us γj ≥ γi, which is a contradiction.",
                "An allocation for q = (N, p, θ) ∈ Q has two components: an ordering σ and a transfer ti for every job i ∈ N. ti denotes the payment received by job i.",
                "Given a transfer ti and an ordering σ, the cost share of job i is defined as, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. 233 An allocation (σ, t) is efficient for q = (N, p, θ) whenever σ is an efficient ordering and £i∈N ti = 0.",
                "The set of efficient orderings of q is denoted as Σ∗ (q) and σ∗ (q) will be used to refer to a typical element of the set.",
                "The following straightforward lemma says that for two different efficient orderings, the cost share in one efficient allocation is possible to achieve in the other by appropriately modifying the transfers.",
                "Lemma 2.",
                "Let (σ, t) be an efficient allocation and π be the vector of cost shares of jobs from this allocation.",
                "If σ∗ = σ be an efficient ordering and t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, then (σ∗ , t∗ ) is also an efficient allocation.",
                "Proof.",
                "Since (σ, t) is efficient, £i∈N ti = 0.",
                "This gives £i∈N πi = C(N).",
                "Since σ∗ is an efficient ordering, £i∈N ci(σ∗ ) = C(N).",
                "This means, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0.",
                "So, (σ∗ , t∗ ) is an efficient allocation.",
                "Depending on the transfers, the cost shares in different efficient allocations may differ.",
                "An allocation rule ψ associates with every q ∈ Q a non-empty subset ψ(q) of allocations. 3.",
                "COST SHARING USING THE SHAPLEY VALUE In this section, we define the coalitional cost of this game and analyze the solution proposed by the Shapley value.",
                "Given a queue q ∈ Q, the cost of a coalition of S ⊆ N jobs in the queue is defined as the cost incurred by jobs in S if these are the only jobs served in the queue using an efficient ordering.",
                "Formally, the cost of a coalition S ⊆ N is, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, where σ∗ = σ∗ (S) is an efficient ordering considering jobs from S only.",
                "The worth of a coalition of S jobs is just −C(S).",
                "Maniquet [15] observes another equivalent way to define the worth of a coalition is using the dual function of the cost function C(·).",
                "Other interesting ways to define the worth of a coalition in such games is discussed by Chun [1], who assume that a coalition of jobs are served after the jobs not in the coalition are served.",
                "The Shapley value (or cost share) of a job i is defined as, SVi =   S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) The Shapley value allocation rule says that jobs are ordered using an efficient ordering and transfers are assigned to jobs such that the cost share of job i is given by Equation 1.",
                "Lemma 3.",
                "Let σ∗ be an efficient ordering of jobs in set N. For all i ∈ N, the Shapley value is given by, SVi = piθi + 1 2 ¡Li + Ri¢, where Li = θi £j∈Pi(σ∗) pj and Ri = pi £j∈Fi(σ∗) θj.",
                "Proof.",
                "Another way to write the Shapley value formula is the following [10], SVi =   S⊆N:i∈S ∆(S) |S| , where ∆(S) = C(S) if |S| = 1 and ∆(S) = C(S)−£T S ∆(T).",
                "This gives ∆({i}) = C({i}) = piθi ∀i ∈ N. For any i, j ∈ N with i = j, we have ∆({i, j}) = C({i, j}) − C({i}) − C({j}) = min(piθi + pjθj + pjθi, piθi + pjθj + piθj) − piθi − pjθj = min(pjθi, piθj).",
                "We will show by induction that ∆(S) = 0 if |S| > 2.",
                "For |S| = 3, let S = {i, j, k}.",
                "Without loss of generality, assume θi pi ≥ θj pj ≥ θk pk .",
                "So, ∆(S) = C(S) − ∆({i, j}) − ∆({j, k}) − ∆({i, k})−∆({i})−∆({j})−∆({k}) = C(S)−piθj −pjθk − piθk − piθi − pjθj − pkθk = C(S) − C(S) = 0.",
                "Now, assume for T S, ∆(T) = 0 if |T| > 2.",
                "Without loss of generality assume that σ to be the identity mapping.",
                "Now, ∆(S) = C(S) −   T S ∆(T) = C(S) −   i∈S   j∈S:j<i ∆({i, j}) −   i∈S ∆({i}) = C(S) −   i∈S   j∈S:j<i pjθi −   i∈S piθi = C(S) − C(S) = 0.",
                "This proves that ∆(S) = 0 if |S| > 2.",
                "Using the Shapley value formula now, SVi =   S⊆N:i∈S ∆(S) |S| = ∆({i}) + 1 2   j∈N:j=i ∆({i, j}) = piθi + 1 2 ¡  j<i ∆({i, j}) +   j>i ∆({i, j})¢ = piθi + 1 2 ¡  j<i pjθi +   j>i piθj¢= piθi + 1 2 ¡Li + Ri¢. 4.",
                "AXIOMATICCHARACTERIZATIONOF THE SHAPLEY VALUE In this section, we will define serveral axioms on fairness and characterize the Shapley value using them.",
                "For a given q ∈ Q, we will denote ψ(q) as the set of allocations from allocation rule ψ.",
                "Also, we will denote the cost share vector associated with an allocation rule (σ, t) as π and that with allocation rule (σ , t ) as π etc. 4.1 The Fairness Axioms We will define three types of fairness axioms: (i) related to efficiency, (ii) related to equity, and (iii) related to independence.",
                "Efficiency Axioms We define two types of efficiency axioms.",
                "One related to efficiency which states that an efficient ordering should be selected and the transfers of jobs should add up to zero (budget balance).",
                "Definition 1.",
                "An allocation rule ψ satisfies efficiency if for every q ∈ Q and (σ, t) ∈ ψ(q), (σ, t) is an efficient allocation. 234 The second axiom related to efficiency says that the allocation rule should not discriminate between two allocations which are equivalent to each other in terms of cost shares of jobs.",
                "Definition 2.",
                "An allocation rule ψ satisfies Pareto indifference if for every q ∈ Q, (σ, t) ∈ ψ(q), and (σ , t ) ∈ Σ(q), we have ¡πi = πi ∀ i ∈ N¢⇒ ¡(σ , t ) ∈ ψ(q)¢.",
                "An implication of Pareto indifference axiom and Lemma 2 is that for every efficient ordering there is some set of transfers of jobs such that it is part of an efficient rule and the cost share of a job in all these allocations are same.",
                "Equity Axioms How should the cost be shared between two jobs if the jobs have some kind of similarity between them?",
                "Equity axioms provide us with fairness properties which help us answer this question.",
                "We provide five such axioms.",
                "Some of these axioms (for example anonymity, equal treatment of equals) are standard in the literature, while some are new.",
                "We start with a well known equity axiom called anonymity.",
                "Denote ρ : N → N as a permutation of elements in N. Let ρ(σ, t) denote the allocation obtained by permuting elements in σ and t according to ρ.",
                "Similarly, let ρ(p, θ) denote the new list of (p, θ) obtained by permuting elements of p and θ according to ρ.",
                "Our first equity axiom states that allocation rules should be immune to such permutation of data.",
                "Definition 3.",
                "An allocation rule ψ satisfies anonymity if for all q ∈ Q, (σ, t) ∈ ψ(q) and every permutation ρ, we then ρ(σ, t) ∈ ψ(N, ρ(q)).",
                "The next equity axiom is classical in literature and says that two similar jobs should be compensated such that their cost shares are equal.",
                "This implies that if all the jobs are of same type, then jobs should equally share the total system cost.",
                "Definition 4.",
                "An allocation rule ψ satisfies equal treatment of equals (ETE) if for all q ∈ Q, (σ, t) ∈ ψ(q), i, j ∈ N, then ¡pi = pj; θi = θj¢⇒ ¡πi = πj¢.",
                "ETE directs us to share costs equally between jobs if they are of the same per unit waiting cost and processing time.",
                "But it is silent about the cost shares of two jobs i and j which satisfy θi pi = θj pj .",
                "We introduce a new axiom for this.",
                "If an efficient rule chooses σ such that σi < σj for some i, j ∈ N, then job i is inflicting a cost of piθj on job j and job j is inflicting zero cost on job i.",
                "Define for some γ ≥ 0, S(γ) = {i ∈ N : γi = γ}.",
                "In an efficient rule, the elements in S(γ) can be ordered in any manner (in |S(γ)|! ways).",
                "If i, j ∈ S(γ) then we have pjθi = piθj.",
                "Probability of σi < σj is 1 2 and so is the probability of σi > σj.",
                "The expected cost i inflicts on j is 1 2 piθj and j inflicts on i is 1 2 pjθi.",
                "Our next fairness axiom says that i and j should each be responsible for their own processing cost and this expected cost they inflict on each other.",
                "Arguing for every pair of jobs i, j ∈ S(γ), we establish a bound on the cost share of jobs in S(γ).",
                "We impose this as an equity axiom below.",
                "Definition 5.",
                "An allocation rule satisfies expected cost bound (ECB) if for all q ∈ Q, (σ, t) ∈ ψ(q) with π being the resulting cost share, for any γ ≥ 0, and for every i ∈ S(γ), we have πi ≥ piθi + 1 2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢.",
                "The central idea behind this axiom is that of expected cost inflicted.",
                "If an allocation rule chooses multiple allocations, we can assign equal probabilities of selecting one of the allocations.",
                "In that case, the expected cost inflicted by a job i on another job j in the allocation rule can be calculated.",
                "Our axiom says that the cost share of a job should be at least its own processing cost and the total expected cost it inflicts on others.",
                "Note that the above bound poses no constraints on how the costs are shared among different groups.",
                "Also observe that if S(γ) contains just one job, ECB says that job should at least bear its own processing cost.",
                "A direct consequence of ECB is the following lemma.",
                "Lemma 4.",
                "Let ψ be an efficient rule which satisfies ECB.",
                "For a q ∈ Q if S(γ) = N, then for any (σ, t) ∈ ψ(q) which gives a cost share of π, πi = piθi + 1 2 ¡Li + Ri¢∀ i ∈ N. Proof.",
                "From ECB, we get πi ≥ piθi+1 2 ¡Li+Ri¢∀ i ∈ N. Assume for contradiction that there exists j ∈ N such that πj > pjθj + 1 2 ¡Li + Ri¢.",
                "Using efficiency and the fact that £i∈N Li = £i∈N Ri, we get £i∈N πi = C(N) > £i∈N piθi + 1 2 £i∈N ¡Li + Ri¢ = C(N).",
                "This gives us a contradiction.",
                "Next, we introduce an axiom about sharing the transfer of a job between a set of jobs.",
                "In particular, if the last job quits the system, then the ordering need not change.",
                "But the transfer to the last job needs to be shared between the other jobs.",
                "This should be done in proportion to their processing times because every job influenced the last job based on its processing time.",
                "Definition 6.",
                "An allocation rule ψ satisfies proportionate responsibility of p (PRp) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = |N|, q = (N \\ {k}, p , θ ) ∈ Q, such that for all i ∈ N\\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk pi £j=k pj .",
                "An analogous fairness axiom results if we remove the job from the beginning of the queue.",
                "Since the presence of the first job influenced each job depending on their θ values, its transfer needs to be shared in proportion to θ values.",
                "Definition 7.",
                "An allocation rule ψ satisfies proportionate responsibility of θ (PRθ) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = 1, q = (N \\{k}, p , θ ) ∈ Q, such that for all i ∈ N \\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk θi £j=k θj .",
                "The proportionate responsibility axioms are generalizations of equal responsibility axioms introduced by Maniquet [15]. 235 Independence Axioms The waiting cost of a job does not depend on the per unit waiting cost of its preceding jobs.",
                "Similarly, the waiting cost inflicted by a job to its following jobs is independent of the processing times of the following jobs.",
                "These independence properties should be carried over to the cost sharing rules.",
                "This gives us two independence axioms.",
                "Definition 8.",
                "An allocation rule ψ satisfies independence of preceding jobs θ (IPJθ) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk < γk, pk = pk, then for all j ∈ N such that σj > σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ).",
                "Definition 9.",
                "An allocation rule ψ satisfies independence of following jobs p (IFJp) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk > γk, θk = θk, then for all j ∈ N such that σj < σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ). 4.2 The Characterization Results Having stated the fairness axioms, we propose three different ways to characterize the Shapley value rule using these axioms.",
                "All our characterizations involve efficiency and ECB.",
                "But if we have IPJθ, we either need IFJp or PRp.",
                "Similarly if we have IFJp, we either need IPJθ or PRθ.",
                "Proposition 1.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and IFJp is a rule implied by the Shapley value rule.",
                "Proof.",
                "Define for any i, j ∈ N, θi j = γipj and pi j = θj γi .",
                "Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider the following q = (N, p , θ ) corresponding to job i with pj = pj if j ≤ i and pj = pi j if j > i, θj = θi j if j < i and θj = θj if j ≥ i.",
                "Observe that all jobs have the same γ: γi.",
                "By Lemma 2 and efficiency, (σ, t ) ∈ ψ(q ) for some set of transfers t .",
                "Using Lemma 4, we get cost share of i from (σ, t ) as πi = piθi + 1 2 ¡Li + Ri¢.",
                "Now, for any j < i, if we change θj to θj without changing processing time, the new γ of j is γj ≥ γi.",
                "Applying IPJθ, the cost share of job i should not change.",
                "Similarly, for any job j > i, if we change pj to pj without changing θj, the new γ of j is γj ≤ γi.",
                "Applying IFJp, the cost share of job i should not change.",
                "Applying this procedure for every j < i with IPJθ and for every j > i with IFJp, we reach q = (N, p, θ) and the payoff of i does not change from πi.",
                "Using this argument for every i ∈ N and using the expression for the Shapley value in Lemma 3, we get the Shapley value rule.",
                "It is possible to replace one of the independence axioms with an equity axiom on sharing the transfer of a job.",
                "This is shown in Propositions 2 and 3.",
                "Proposition 2.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and PRp is a rule implied by the Shapley value rule.",
                "Proof.",
                "As in the proof of Proposition 1, define θi j = γipj ∀ i, j ∈ N. Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider a queue with jobs in set K = {1, . . . , i, i + 1}, where i < n. Define q = (K, p, θ ), where θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ is an efficient ordering for q .",
                "By ECB and Lemma 4 the cost share of job i + 1 in any allocation rule in ψ must be πi+1 = pi+1θi+1 + 1 2 ¡£j<i+1 pjθi+1¢.",
                "Now, consider q = (K, p, θ ) such that θj = θi j ∀ j ≤ i and θi+1 = θi+1. σ remains an efficient ordering in q and by IPJθ the cost share of i + 1 remains πi+1.",
                "In q = (K \\ {i + 1}, p, θ ), we can calculate the cost share of job i using ECB and Lemma 4 as πi = piθi + 1 2 £j<i pjθi.",
                "So, using PRp we get the new cost share of job i in q as πi = πi + ti+1 pi j<i+1 pj = piθi + 1 2 ¡£j<i pjθi + piθi+1¢.",
                "Now, we can set K = K ∪ {i + 2}.",
                "As before, we can find cost share of i + 2 in this queue as πi+2 = pi+2θi+2 + 1 2 ¡£j<i+2 pjθi+2¢.",
                "Using PRp we get the new cost share of job i in the new queue as πi = piθi + 1 2 ¡£j<i pjθi + piθi+1 + piθi+2¢.",
                "This process can be repeated till we add job n at which point cost share of i is piθi + 1 2 ¡£j<i pjθi + £j>i piθj¢.",
                "Then, we can adjust the θ of preceding jobs of i to their original value and applying IPJθ, the payoffs of jobs i through n will not change.",
                "This gives us the Shapley values of jobs i through n. Setting i = 1, we get cost shares of all the jobs from ψ as the Shapley value.",
                "Proposition 3.",
                "Any efficient rule ψ that satisfies ECB, IFJp, and PRθ is a rule implied by the Shapley value rule.",
                "Proof.",
                "The proof mirrors the proof of Proposition 2.",
                "We provide a short sketch.",
                "Analogous to the proof of Proposition 2, θs are kept equal to original data and processing times are initialized to pi+1 j .",
                "This allows us to use IFJp.",
                "Also, contrast to Proposition 2, we consider K = {i, i + 1, . . . , n} and repeatedly add jobs to the beginning of the queue maintaining the same efficient ordering.",
                "So, we add the cost components of preceding jobs to the cost share of jobs in each iteration and converge to the Shapley value rule.",
                "The next proposition shows that the Shapley value rule satisfies all the fairness axioms discussed.",
                "Proposition 4.",
                "The Shapley value rule satisfies efficiency, pareto indifference, anonymity, ETE, ECB, IPJθ, IFJp, PRp, and PRθ.",
                "Proof.",
                "The Shapley value rule chooses an efficient ordering and by definition the payments add upto zero.",
                "So, it satisfies efficiency.",
                "The Shapley value assigns same cost share to a job irrespective of the efficient ordering chosen.",
                "So, it is pareto indifferent.",
                "The Shapley value is anonymous because the particular index of a job does not effect his ordering or cost share.",
                "For ETE, consider two jobs i, j ∈ N such that pi = pj and θi = θj.",
                "Without loss of generality assume the efficient ordering to be 1, . . . , i, . . . , j, . . . , n. Now, the Shapley value of job i is 236 SVi = piθi + 1 2 ¡Li + Ri¢(From Lemma 3) = pjθj + 1 2 ¡Lj + Rj¢− 1 2 ¡Li − Lj + Ri − Rj¢ = SVj − 1 2 ¡   i<k≤j piθk −   i≤k<j pkθi¢ = SVj − 1 2   i<k≤j (piθk − pkθi) (Using pi = pj and θi = θj) = SVj (Using θk pk = θi pi for all i ≤ k ≤ j).",
                "The Shapley value satisfies ECB by its expression in Lemma 3.",
                "Consider any job i, in an efficient ordering σ, if we increase the value of γj for some j = i such that σj > σi, then the set Pi ( preceding jobs) does not change in the new efficient ordering.",
                "If γj is changed such that pj remains the same, then the expression £j∈Pi θipj is unchanged.",
                "If (p, θ) values of no other jobs are changed, then the Shapley value is unchanged by increasing γj for some j ∈ Pi while keeping pj unchanged.",
                "Thus, the Shapley value rule satisfies IPJθ.",
                "An analogous argument shows that the Shapley value rule satisfies IFJp.",
                "For PRp, assume without loss of generality that jobs are ordered 1, . . . , n in an efficient ordering.",
                "Denote the transfer of job i = n due to the Shapley value with set of jobs N and set of jobs N \\ {n} as ti and ti respectively.",
                "Transfer of last job is tn = 1 2 θn £j<n pj.",
                "Now, ti = 1 2 ¡θi   j<i pj − pi   j>i θj¢ = 1 2 ¡θi   j<i pj − pi   j>i:j=n θj¢− 1 2 piθn = ti − 1 2 θn   j<n pj pi £j<n pj = ti − tn pi £j<n pj .",
                "A similar argument shows that the Shapley value rule satisfies PRθ.",
                "These series of propositions lead us to our main result.",
                "Theorem 1.",
                "Let ψ be an allocation rule.",
                "The following statements are equivalent: 1) For each q ∈ Q, ψ(q) selects all the allocation assigning jobs cost shares implied by the Shapley value. 2) ψ satisfies efficiency, ECB, IFJp, and IPJθ. 3) ψ satisfies efficiency, ECB, IFJp, and PRθ. 4) ψ satisfies efficiency, ECB, PRp, and IPJθ.",
                "Proof.",
                "The proof follows from Propositions 1, 2, 3, and 4. 5.",
                "DISCUSSIONS 5.1 A Reasonable Class of Cost Sharing Mechanisms In this section, we will define a reasonable class of cost sharing mechanisms.",
                "We will show how these reasonable mechanisms lead to the Shapley value mechanism.",
                "Definition 10.",
                "An allocation rule ψ is reasonable if for all q ∈ Q and (σ, t) ∈ ψ(q) we have for all i ∈ N, ti = α ¡θi   j∈Pi(σ) pj − pi   j∈Fi(σ) θj¢∀ i ∈ N, where 0 ≤ α ≤ 1.",
                "The reasonable cost sharing mechanism says that every job should be paid a constant fraction of the difference between the waiting cost he incurs and the waiting cost he inflicts on other jobs.",
                "If α = 0, then every job bears its own cost.",
                "If α = 1, then every job gets compensated for its waiting cost but compensates others for the cost he inflicts on others.",
                "The Shapley value rule comes as a result of ETE as shown in the following proposition.",
                "Proposition 5.",
                "Any efficient and reasonable allocation rule ψ that satisfies ETE is a rule implied by the Shapley value rule.",
                "Proof.",
                "Consider a q ∈ Q in which pi = pj and θi = θj.",
                "Let (σ, t) ∈ ψ(q) and π be the resulting cost shares.",
                "From ETE, we get, πi = πj ⇒ ci(σ) − ti = cj(σ) − tj ⇒ piθi + (1 − α)Li + αRi = pjθj + (1 − α)Lj + αRj (Since ψ is efficient and reasonable) ⇒ (1 − α)(Li − Lj) = α(Rj − Ri) (Using pi = pj, θi = θj) ⇒ 1 − α = α (Using Li − Lj = Rj − Ri = 0) ⇒ α = 1 2 .",
                "This gives us the Shapley value rule by Lemma 3. 5.2 Results on Envy Chun [2] discusses a fariness condition called no-envy for the case when processing times of all jobs are unity.",
                "Definition 11.",
                "An allocation rule satisfies no-envy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tj, where π is the cost share from allocation rule (σ, t) and σij is the ordering obtaining by swapping i and j.",
                "From the result in [2], the Shapley value rule does not satisfy no-envy in our model also.",
                "To overcome this, Chun [2] introduces the notion of adjusted no-envy, which he shows is satisfied in the Shapley value rule when processing times of all jobs are unity.",
                "Here, we show that adjusted envy continues to hold in the Shapley value rule in our model (when processing times need not be unity).",
                "As before denote σij be an ordering where the position of i and j is swapped from an ordering σ.",
                "For adjusted noenvy, if (σ, t) is an allocation for some q ∈ Q, let tij be the 237 transfer of job i when the transfer of i is calculated with respect to ordering σij .",
                "Observe that an allocation may not allow for calculation of tij .",
                "For example, if ψ is efficient, then tij cannot be calculated if σij is also not efficient.",
                "For simplicity, we state the definition of adjusted no-envy to apply to all such rules.",
                "Definition 12.",
                "An allocation rule satisfies adjusted noenvy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tij i .",
                "Proposition 6.",
                "The Shapley value rule satisfies adjusted no-envy.",
                "Proof.",
                "Without loss of generality, assume efficient ordering of jobs is: 1, . . . , n. Consider two jobs i and i + k. From Lemma 3, SVi = piθi + 1 2 ¡  j<i θipj +   j>i θjpi¢.",
                "Let ˆπi be the cost share of i due to adjusted transfer tii+k i in the ordering σii+k . ˆπi = ci(σii+k ) − tii+k i = piθi + 1 2 ¡  j<i θipj + θipi+k +   i<j<i+k θipj +   j>i θjpi − θi+kpi −   i<j<i+k θjpi¢ = SVi + 1 2   i<j≤i+k ¡θipj − θjpi¢ ≥ SVi (Using the fact that θi pi ≥ θj pj for i < j). 6.",
                "CONCLUSION We studied the problem of sharing costs for a <br>job scheduling</br> problem on a single server, when jobs have processing times and unit time waiting costs.",
                "We took a cooperative game theory approach and show that the famous the Shapley value rule satisfies many nice fairness properties.",
                "We characterized the Shapley value rule using different intuitive fairness axioms.",
                "In future, we plan to further simplify some of the fairness axioms.",
                "Some initial simplifications already appear in [16], where we provide an alternative axiom to ECB and also discuss the implication of transfers between jobs (in stead of transfers from jobs to a central server).",
                "We also plan to look at cost sharing mechanisms other than the Shapley value.",
                "Investigating the strategic power of jobs in such mechanisms is another line of future research. 7.",
                "REFERENCES [1] Youngsub Chun.",
                "A Note on Maniquets Characterization of the Shapley Value in Queueing Problems.",
                "Working Paper, Rochester University, 2004. [2] Youngsub Chun.",
                "No-envy in Queuing Problems.",
                "Working Paper, Rochester University, 2004. [3] Imma Curiel, Herbert Hamers, and Flip Klijn.",
                "Sequencing Games: A Survey.",
                "In Peter Borm and Hans Peters, editors, Chapter in Game Theory.",
                "Theory and Decision Library, Kulwer Academic Publishers, 2002. [4] Imma Curiel, Giorgio Pederzoli, and Stef Tijs.",
                "Sequencing Games.",
                "European Journal of Operational Research, 40:344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs, and Bart Veltman.",
                "Sequencing and Cooperation.",
                "Operations Research, 42(3):566-568, May-June 1994. [6] Nikhil R. Devanur, Milena Mihail, and Vijay V. Vazirani.",
                "Strategyproof Cost-sharing Mechanisms for Set Cover and Facility Location Games.",
                "In Proceedings of Fourth Annual ACM Conferece on Electronic Commerce, 2003. [7] Robert J. Dolan.",
                "Incentive Mechanisms for Priority Queueing Problems.",
                "Bell Journal of Economics, 9:421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou, and Scott Shenker.",
                "Sharing the Cost of Multicast Transmissions.",
                "In Proceedings of Thirty-Second Annual ACM Symposium on Theory of Computing, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs, and Peter Borm.",
                "The Split Core for Sequencing Games.",
                "Games and Economic Behavior, 15:165-176, 1996. [10] John C. Harsanyi.",
                "Contributions to Theory of Games IV, chapter A Bargaining Model for Cooperative n-person Games.",
                "Princeton University Press, 1959.",
                "Editors: A. W. Tucker, R. D. Luce. [11] Kamal Jain and Vijay Vazirani.",
                "Applications of Approximate Algorithms to Cooperative Games.",
                "In Proceedings of 33rd Symposium on Theory of Computing (STOC 01), 2001. [12] Kamal Jain and Vijay Vazirani.",
                "Equitable Cost Allocations via Primal-Dual Type Algorithms.",
                "In Proceedings of 34th Symposium on Theory of Computing (STOC 02), 2002. [13] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without a Completely Specified Initial Order.",
                "Report in Statistics and Operations Research, pages 1-17, 2002.",
                "Report 02-04. [14] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without Initial Order.",
                "Working Paper, Universitat Aut´onoma de Barcelona, July 2004. [15] Franois Maniquet.",
                "A Characterization of the Shapley Value in Queueing Problems.",
                "Journal of Economic Theory, 109:90-103, 2003. [16] Debasis Mishra and Bharath Rangarajan.",
                "Cost sharing in a <br>job scheduling</br> problem.",
                "Working Paper, CORE, 2005. [17] Manipushpak Mitra.",
                "Essays on First Best Implementable Incentive Problems.",
                "Ph.D. Thesis, Indian Statistical Institute, New Delhi, 2000. [18] Manipushpak Mitra.",
                "Mechanism design in queueing problems.",
                "Economic Theory, 17(2):277-305, 2001. [19] Manipushpak Mitra.",
                "Achieving the first best in sequencing problems.",
                "Review of Economic Design, 7:75-91, 2002. [20] Herv´e Moulin.",
                "Handbook of Social Choice and Welfare, chapter Axiomatic Cost and Surplus Sharing.",
                "North-Holland, 2002.",
                "Publishers: Arrow, Sen, Suzumura. [21] Herv´e Moulin.",
                "On Scheduling Fees to Prevent 238 Merging, Splitting and Transferring of Jobs.",
                "Working Paper, Rice University, 2004. [22] Herv´e Moulin.",
                "Split-proof Probabilistic Scheduling.",
                "Working Paper, Rice University, 2004. [23] Herv´e Moulin and Rakesh Vohra.",
                "Characterization of Additive Cost Sharing Methods.",
                "Economic Letters, 80:399-407, 2003. [24] Martin P´al and ´Eva Tardos.",
                "Group Strategyproof Mechanisms via Primal-Dual Algorithms.",
                "In Proceedings of the 44th Annual IEEE Symposium on the Foundations of Computer Science (FOCS 03), 2003. [25] Lloyd S. Shapley.",
                "Contributions to the Theory of Games II, chapter A Value for n-person Games, pages 307-317.",
                "Annals of Mathematics Studies, 1953.",
                "Ediors: H. W. Kuhn, A. W. Tucker. [26] Wayne E. Smith.",
                "Various Optimizers for Single-Stage Production.",
                "Naval Research Logistics Quarterly, 3:59-66, 1956. [27] Jeroen Suijs.",
                "On incentive compatibility and budget balancedness in public decision making.",
                "Economic Design, 2, 2002. 239"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Costos compartidos en un problema de \"programación de trabajo\" utilizando el Centro de Investigación de Operaciones y Econometría (Core) de Valor de Shapley de Debasis, Belgium, belgium, belgium ..core.ucl.ac.be Bharath Rangarajan para la investigación de operaciones para la investigación de operacionesy Econometrics (Core) Universit´e Catholique de Louvain Louvain La Neuve, Bélgica rangarajan@core.ucl.ac.s Resumen Un conjunto de trabajos debe ser atendido por un solo servidor que solo puede servir un trabajo a la vez.",
                "Internet tiene muchas configuraciones en las que aparece nuestro modelo de \"programación de empleo\" y los agentes que esperan en una cola incurren en costos (trabajos programados en servidores, consultas respondidas desde una base de datos, datos programados para transmitirse a través de una red de ancho de banda fija, etc.).",
                "Conclusión Estudiamos el problema de compartir costos para un problema de \"programación de trabajo\" en un solo servidor, cuando los trabajos tienen tiempos de procesamiento y costos de espera de tiempo de unidad.",
                "Costos compartidos en un problema de \"programación de trabajo\"."
            ],
            "translated_text": "",
            "candidates": [
                "Programación de trabajo",
                "programación de trabajo",
                "Programación de trabajo",
                "programación de empleo",
                "Programación de trabajo",
                "programación de trabajo",
                "Programación de trabajo",
                "programación de trabajo"
            ],
            "error": []
        },
        "shapley value": {
            "translated_key": "Valor de Shapley",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Cost Sharing in a Job Scheduling Problem Using the <br>shapley value</br> Debasis Mishra Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium mishra@core.ucl.ac.be Bharath Rangarajan Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium rangarajan@core.ucl.ac.be ABSTRACT A set of jobs need to be served by a single server which can serve only one job at a time.",
                "Jobs have processing times and incur waiting costs (linear in their waiting time).",
                "The jobs share their costs through compensation using monetary transfers.",
                "We characterize the <br>shapley value</br> rule for this model using fairness axioms.",
                "Our axioms include a bound on the cost share of jobs in a group, efficiency, and some independence properties on the the cost share of a job.",
                "Categories and Subject Descriptors J.4 [Social and Behaviorial Sciences]: Economics General Terms Economics, Theory 1.",
                "INTRODUCTION A set of jobs need to be served by a server.",
                "The server can process only one job at a time.",
                "Each job has a finite processing time and a per unit time waiting cost.",
                "Efficient ordering of this queue directs us to serve the jobs in increasing order of the ratio of per unit time waiting cost and processing time.",
                "To compensate for waiting by jobs, monetary transfers to jobs are allowed.",
                "How should the jobs share the cost equitably amongst themselves (through transfers)?",
                "The problem of fair division of costs among agents in a queue has many practical applications.",
                "For example, computer programs are regularly scheduled on servers, data are scheduled to be transmitted over networks, jobs are scheduled in shop-floor on machines, and queues appear in many public services (post offices, banks).",
                "Study of queueing problems has attracted economists for a long time [7, 17].",
                "Cost sharing is a fundamental problem in many settings on the Internet.",
                "Internet can be seen as a common resource shared by many users and the cost incured by using the resource needs to be shared in an equitable manner.",
                "The current surge in cost sharing literature from computer scientists validate this claim [8, 11, 12, 6, 24].",
                "Internet has many settings in which our model of job scheduling appears and the agents waiting in a queue incur costs (jobs scheduled on servers, queries answered from a database, data scheduled to be transmitted over a fixed bandwidth network etc.).",
                "We hope that our analysis will give new insights on cost sharing problems of this nature.",
                "Recently, there has been increased interest in cost sharing methods with submodular cost functions [11, 12, 6, 24].",
                "While many settings do have submodular cost functions (for example, multi-cast transmission games [8]), while the cost function of our game is supermodular.",
                "Also, such literature typically does not assume budget-balance (transfers adding up to zero), while it is an inherent feature of our model.",
                "A recent paper by Maniquet [15] is the closest to our model and is the motivation behind our work 1 .",
                "Maniquet [15] studies a model where he assumes all processing times are unity.",
                "For such a model, he characterizes the <br>shapley value</br> rule using classical fairness axioms.",
                "Chun [1] interprets the worth of a coalition of jobs in a different manner for the same model and derives a reverse rule.",
                "Chun characterizes this rule using similar fairness axioms.",
                "Chun [2] also studies the envy properties of these rules.",
                "Moulin [22, 21] studies the queueing problem from a strategic point view when per unit waiting costs are unity.",
                "Moulin introduces new concepts in the queueing settings such as splitting and merging of jobs, and ways to prevent them.",
                "Another stream of literature is on sequencing games, first introduced by Curiel et al. [4].",
                "For a detailed survey, refer to Curiel et al. [3].",
                "Curiel et al. [4] defined sequencing games similar to our model, but in which an initial ordering of jobs is given.",
                "Besides, their notion of worth of a coalition is very different from the notions studied in Maniquet [15] and Chun [1] (these are the notions used in our work too).",
                "The particular notion of the worth of a coalition makes the sequencing game of Curiel et al. [4] convex, whereas our game is not convex and does not assume the presence of any initial order.",
                "In summary, the focus of this stream of 1 The authors thank Fran¸cois Maniquet for several fruitful discussions. 232 research is how to share the savings in costs from the initial ordering to the optimal ordering amongst jobs (also see Hamers et al. [9], Curiel et al. [5]).",
                "Recently, Klijn and S´anchez [13, 14] considered sequencing games without any initial ordering of jobs.",
                "They take two approaches to define the worth of coalitions.",
                "One of their approaches, called the tail game, is related to the reverse rule of Chun [1].",
                "In the tail game, jobs in a coalition are served after the jobs not in the coalition are served.",
                "Klijn and S´anchez [14] showed that the tail game is balanced.",
                "Further, they provide expressions for the <br>shapley value</br> in tail game in terms of marginal vectors and reversed marginal vectors.",
                "We provide a simpler expression of the <br>shapley value</br> in the tail game, generalizing the result in Chun [1].",
                "Klijn and S´anchez [13] study the core of this game in detail.",
                "Strategic aspects of queueing problems have also been researched.",
                "Mitra [19] studies the first best implementation in queueing models with generic cost functions.",
                "First best implementation means that there exists an efficient mechanism in which jobs in the queue have a dominant strategy to reveal their true types and their transfers add up to zero.",
                "Suijs [27] shows that if waiting costs of jobs are linear then first best implementation is possible.",
                "Mitra [19] shows that among a more general class of queueing problems first best implementation is possible if and only if the cost is linear.",
                "For another queueing model, Mitra [18] shows that first best implementation is possible if and only if the cost function satisfies a combinatorial property and an independence property.",
                "Moulin [22, 21] studies strategic concepts such as splitting and merging in queueing problems with unit per unit waiting costs.",
                "The general cost sharing literature is vast and has a long history.",
                "For a good survey, we refer to [20].",
                "From the seminal work of Shapley [25] to recent works on cost sharing in multi-cast transmission and optimization problems [8, 6, 23] this area has attracted economists, computer scientists, and operations researchers. 1.1 Our Contribution Ours is the first model which considers cost sharing when both processing time and per unit waiting cost of jobs are present.",
                "We take a cooperative game theory approach and apply the classical <br>shapley value</br> rule to the problem.",
                "We show that the <br>shapley value</br> rule satisfies many intuitive fairness axioms.",
                "Due to two dimensional nature of our model and one dimensional nature of Maniquets model [15], his axioms are insufficient to characterize the <br>shapley value</br> in our setting.",
                "We introduce axioms such as independece of preceding jobs unit waiting cost and independence of following jobs processing time.",
                "A key axiom that we introduce gives us a bound on cost share of a job in a group of jobs which have the same ratio of unit time waiting cost and processing time (these jobs can be ordered in any manner between themseleves in an efficient ordering).",
                "If such a group consists of just one job, then the axiom says that such a job should at least pay his own processing cost (i.e., the cost it would have incurred if it was the only job in the queue).",
                "If there are multiple jobs in such a group, the probability of any two jobs from such a group inflicting costs on each other is same (1 2 ) in an efficient ordering.",
                "Depending on the ordering selected, one job inflicts cost on the other.",
                "Our fairness axiom says that each job should at least bear such expected costs.",
                "We characterize the <br>shapley value</br> rule using these fairness axioms.",
                "We also extend the envy results in [2] to our setting and discuss a class of reasonable cost sharing mechanisms. 2.",
                "THE MODEL There are n jobs that need to be served by one server which can process only one job at a time.",
                "The set of jobs are denoted as N = {1, . . . , n}. σ : N → N is an ordering of jobs in N and σi denotes the position of job i in the ordering σ.",
                "Given an ordering σ, define Fi(σ) = {j ∈ N : σi < σj} and Pi(σ) = {j ∈ N : σi > σj}.",
                "Every job i is identified by two parameters: (pi, θi). pi is the processing time and θi is the cost per unit waiting time of job i.",
                "Thus, a queueing problem is defined by a list q = (N, p, θ) ∈ Q, where Q is the set of all possible lists.",
                "We will denote γi = θi pi .",
                "Given an ordering of jobs σ, the cost incurred by job i is given by ci(σ) = piθi + θi   j∈Pi(σ) pj.",
                "The total cost incurred by all jobs due to an ordering σ can be written in two ways: (i) by summing the cost incurred by every job and (ii) by summing the costs inflicted by a job on other jobs with their own processing cost.",
                "C(N, σ) =   i∈N ci(σ) =   i∈N piθi +   i∈N ¡θi   j∈Pi(σ) pj¢. =   i∈N piθi +   i∈N ¡pi   j∈Fi(σ) θj¢.",
                "An efficient ordering σ∗ is the one which minimizes the total cost incurred by all jobs.",
                "So, C(N, σ∗ ) ≤ C(N, σ) ∀ σ ∈ Σ.",
                "To achieve notational simplicity, we will write the total cost in an efficient ordering of jobs from N as C(N) whenever it is not confusing.",
                "Sometimes, we will deal with only a subset of jobs S ⊆ N. The ordering σ will then be defined on jobs in S only and we will write the total cost from an efficient ordering of jobs in S as C(S).",
                "The following lemma shows that jobs are ordered in decreasing γ in an efficient ordering.",
                "This is also known as the weighted shortest processing time rule, first introduced by Smith [26].",
                "Lemma 1.",
                "For any S ⊆ N, let σ∗ be an efficient ordering of jobs in S. For every i = j, i, j ∈ S, if σ∗ i > σ∗ j , then γi ≤ γj.",
                "Proof.",
                "Assume for contradiction that the statment of the lemma is not true.",
                "This means, we can find two consecutive jobs i, j ∈ S (σ∗ i = σ∗ j + 1) such that γi > γj.",
                "Define a new ordering σ by interchanging i and j in σ∗ .",
                "The costs to jobs in S \\ {i, j} is not changed from σ∗ to σ.",
                "The difference between total costs in σ∗ and σ is given by, C(S, σ) − C(S, σ∗ ) = θjpi − θipj.",
                "From efficiency we get θjpi − θipj ≥ 0.",
                "This gives us γj ≥ γi, which is a contradiction.",
                "An allocation for q = (N, p, θ) ∈ Q has two components: an ordering σ and a transfer ti for every job i ∈ N. ti denotes the payment received by job i.",
                "Given a transfer ti and an ordering σ, the cost share of job i is defined as, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. 233 An allocation (σ, t) is efficient for q = (N, p, θ) whenever σ is an efficient ordering and £i∈N ti = 0.",
                "The set of efficient orderings of q is denoted as Σ∗ (q) and σ∗ (q) will be used to refer to a typical element of the set.",
                "The following straightforward lemma says that for two different efficient orderings, the cost share in one efficient allocation is possible to achieve in the other by appropriately modifying the transfers.",
                "Lemma 2.",
                "Let (σ, t) be an efficient allocation and π be the vector of cost shares of jobs from this allocation.",
                "If σ∗ = σ be an efficient ordering and t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, then (σ∗ , t∗ ) is also an efficient allocation.",
                "Proof.",
                "Since (σ, t) is efficient, £i∈N ti = 0.",
                "This gives £i∈N πi = C(N).",
                "Since σ∗ is an efficient ordering, £i∈N ci(σ∗ ) = C(N).",
                "This means, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0.",
                "So, (σ∗ , t∗ ) is an efficient allocation.",
                "Depending on the transfers, the cost shares in different efficient allocations may differ.",
                "An allocation rule ψ associates with every q ∈ Q a non-empty subset ψ(q) of allocations. 3.",
                "COST SHARING USING THE <br>shapley value</br> In this section, we define the coalitional cost of this game and analyze the solution proposed by the <br>shapley value</br>.",
                "Given a queue q ∈ Q, the cost of a coalition of S ⊆ N jobs in the queue is defined as the cost incurred by jobs in S if these are the only jobs served in the queue using an efficient ordering.",
                "Formally, the cost of a coalition S ⊆ N is, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, where σ∗ = σ∗ (S) is an efficient ordering considering jobs from S only.",
                "The worth of a coalition of S jobs is just −C(S).",
                "Maniquet [15] observes another equivalent way to define the worth of a coalition is using the dual function of the cost function C(·).",
                "Other interesting ways to define the worth of a coalition in such games is discussed by Chun [1], who assume that a coalition of jobs are served after the jobs not in the coalition are served.",
                "The <br>shapley value</br> (or cost share) of a job i is defined as, SVi =   S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) The <br>shapley value</br> allocation rule says that jobs are ordered using an efficient ordering and transfers are assigned to jobs such that the cost share of job i is given by Equation 1.",
                "Lemma 3.",
                "Let σ∗ be an efficient ordering of jobs in set N. For all i ∈ N, the <br>shapley value</br> is given by, SVi = piθi + 1 2 ¡Li + Ri¢, where Li = θi £j∈Pi(σ∗) pj and Ri = pi £j∈Fi(σ∗) θj.",
                "Proof.",
                "Another way to write the <br>shapley value</br> formula is the following [10], SVi =   S⊆N:i∈S ∆(S) |S| , where ∆(S) = C(S) if |S| = 1 and ∆(S) = C(S)−£T S ∆(T).",
                "This gives ∆({i}) = C({i}) = piθi ∀i ∈ N. For any i, j ∈ N with i = j, we have ∆({i, j}) = C({i, j}) − C({i}) − C({j}) = min(piθi + pjθj + pjθi, piθi + pjθj + piθj) − piθi − pjθj = min(pjθi, piθj).",
                "We will show by induction that ∆(S) = 0 if |S| > 2.",
                "For |S| = 3, let S = {i, j, k}.",
                "Without loss of generality, assume θi pi ≥ θj pj ≥ θk pk .",
                "So, ∆(S) = C(S) − ∆({i, j}) − ∆({j, k}) − ∆({i, k})−∆({i})−∆({j})−∆({k}) = C(S)−piθj −pjθk − piθk − piθi − pjθj − pkθk = C(S) − C(S) = 0.",
                "Now, assume for T S, ∆(T) = 0 if |T| > 2.",
                "Without loss of generality assume that σ to be the identity mapping.",
                "Now, ∆(S) = C(S) −   T S ∆(T) = C(S) −   i∈S   j∈S:j<i ∆({i, j}) −   i∈S ∆({i}) = C(S) −   i∈S   j∈S:j<i pjθi −   i∈S piθi = C(S) − C(S) = 0.",
                "This proves that ∆(S) = 0 if |S| > 2.",
                "Using the <br>shapley value</br> formula now, SVi =   S⊆N:i∈S ∆(S) |S| = ∆({i}) + 1 2   j∈N:j=i ∆({i, j}) = piθi + 1 2 ¡  j<i ∆({i, j}) +   j>i ∆({i, j})¢ = piθi + 1 2 ¡  j<i pjθi +   j>i piθj¢= piθi + 1 2 ¡Li + Ri¢. 4.",
                "AXIOMATICCHARACTERIZATIONOF THE <br>shapley value</br> In this section, we will define serveral axioms on fairness and characterize the <br>shapley value</br> using them.",
                "For a given q ∈ Q, we will denote ψ(q) as the set of allocations from allocation rule ψ.",
                "Also, we will denote the cost share vector associated with an allocation rule (σ, t) as π and that with allocation rule (σ , t ) as π etc. 4.1 The Fairness Axioms We will define three types of fairness axioms: (i) related to efficiency, (ii) related to equity, and (iii) related to independence.",
                "Efficiency Axioms We define two types of efficiency axioms.",
                "One related to efficiency which states that an efficient ordering should be selected and the transfers of jobs should add up to zero (budget balance).",
                "Definition 1.",
                "An allocation rule ψ satisfies efficiency if for every q ∈ Q and (σ, t) ∈ ψ(q), (σ, t) is an efficient allocation. 234 The second axiom related to efficiency says that the allocation rule should not discriminate between two allocations which are equivalent to each other in terms of cost shares of jobs.",
                "Definition 2.",
                "An allocation rule ψ satisfies Pareto indifference if for every q ∈ Q, (σ, t) ∈ ψ(q), and (σ , t ) ∈ Σ(q), we have ¡πi = πi ∀ i ∈ N¢⇒ ¡(σ , t ) ∈ ψ(q)¢.",
                "An implication of Pareto indifference axiom and Lemma 2 is that for every efficient ordering there is some set of transfers of jobs such that it is part of an efficient rule and the cost share of a job in all these allocations are same.",
                "Equity Axioms How should the cost be shared between two jobs if the jobs have some kind of similarity between them?",
                "Equity axioms provide us with fairness properties which help us answer this question.",
                "We provide five such axioms.",
                "Some of these axioms (for example anonymity, equal treatment of equals) are standard in the literature, while some are new.",
                "We start with a well known equity axiom called anonymity.",
                "Denote ρ : N → N as a permutation of elements in N. Let ρ(σ, t) denote the allocation obtained by permuting elements in σ and t according to ρ.",
                "Similarly, let ρ(p, θ) denote the new list of (p, θ) obtained by permuting elements of p and θ according to ρ.",
                "Our first equity axiom states that allocation rules should be immune to such permutation of data.",
                "Definition 3.",
                "An allocation rule ψ satisfies anonymity if for all q ∈ Q, (σ, t) ∈ ψ(q) and every permutation ρ, we then ρ(σ, t) ∈ ψ(N, ρ(q)).",
                "The next equity axiom is classical in literature and says that two similar jobs should be compensated such that their cost shares are equal.",
                "This implies that if all the jobs are of same type, then jobs should equally share the total system cost.",
                "Definition 4.",
                "An allocation rule ψ satisfies equal treatment of equals (ETE) if for all q ∈ Q, (σ, t) ∈ ψ(q), i, j ∈ N, then ¡pi = pj; θi = θj¢⇒ ¡πi = πj¢.",
                "ETE directs us to share costs equally between jobs if they are of the same per unit waiting cost and processing time.",
                "But it is silent about the cost shares of two jobs i and j which satisfy θi pi = θj pj .",
                "We introduce a new axiom for this.",
                "If an efficient rule chooses σ such that σi < σj for some i, j ∈ N, then job i is inflicting a cost of piθj on job j and job j is inflicting zero cost on job i.",
                "Define for some γ ≥ 0, S(γ) = {i ∈ N : γi = γ}.",
                "In an efficient rule, the elements in S(γ) can be ordered in any manner (in |S(γ)|! ways).",
                "If i, j ∈ S(γ) then we have pjθi = piθj.",
                "Probability of σi < σj is 1 2 and so is the probability of σi > σj.",
                "The expected cost i inflicts on j is 1 2 piθj and j inflicts on i is 1 2 pjθi.",
                "Our next fairness axiom says that i and j should each be responsible for their own processing cost and this expected cost they inflict on each other.",
                "Arguing for every pair of jobs i, j ∈ S(γ), we establish a bound on the cost share of jobs in S(γ).",
                "We impose this as an equity axiom below.",
                "Definition 5.",
                "An allocation rule satisfies expected cost bound (ECB) if for all q ∈ Q, (σ, t) ∈ ψ(q) with π being the resulting cost share, for any γ ≥ 0, and for every i ∈ S(γ), we have πi ≥ piθi + 1 2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢.",
                "The central idea behind this axiom is that of expected cost inflicted.",
                "If an allocation rule chooses multiple allocations, we can assign equal probabilities of selecting one of the allocations.",
                "In that case, the expected cost inflicted by a job i on another job j in the allocation rule can be calculated.",
                "Our axiom says that the cost share of a job should be at least its own processing cost and the total expected cost it inflicts on others.",
                "Note that the above bound poses no constraints on how the costs are shared among different groups.",
                "Also observe that if S(γ) contains just one job, ECB says that job should at least bear its own processing cost.",
                "A direct consequence of ECB is the following lemma.",
                "Lemma 4.",
                "Let ψ be an efficient rule which satisfies ECB.",
                "For a q ∈ Q if S(γ) = N, then for any (σ, t) ∈ ψ(q) which gives a cost share of π, πi = piθi + 1 2 ¡Li + Ri¢∀ i ∈ N. Proof.",
                "From ECB, we get πi ≥ piθi+1 2 ¡Li+Ri¢∀ i ∈ N. Assume for contradiction that there exists j ∈ N such that πj > pjθj + 1 2 ¡Li + Ri¢.",
                "Using efficiency and the fact that £i∈N Li = £i∈N Ri, we get £i∈N πi = C(N) > £i∈N piθi + 1 2 £i∈N ¡Li + Ri¢ = C(N).",
                "This gives us a contradiction.",
                "Next, we introduce an axiom about sharing the transfer of a job between a set of jobs.",
                "In particular, if the last job quits the system, then the ordering need not change.",
                "But the transfer to the last job needs to be shared between the other jobs.",
                "This should be done in proportion to their processing times because every job influenced the last job based on its processing time.",
                "Definition 6.",
                "An allocation rule ψ satisfies proportionate responsibility of p (PRp) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = |N|, q = (N \\ {k}, p , θ ) ∈ Q, such that for all i ∈ N\\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk pi £j=k pj .",
                "An analogous fairness axiom results if we remove the job from the beginning of the queue.",
                "Since the presence of the first job influenced each job depending on their θ values, its transfer needs to be shared in proportion to θ values.",
                "Definition 7.",
                "An allocation rule ψ satisfies proportionate responsibility of θ (PRθ) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = 1, q = (N \\{k}, p , θ ) ∈ Q, such that for all i ∈ N \\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk θi £j=k θj .",
                "The proportionate responsibility axioms are generalizations of equal responsibility axioms introduced by Maniquet [15]. 235 Independence Axioms The waiting cost of a job does not depend on the per unit waiting cost of its preceding jobs.",
                "Similarly, the waiting cost inflicted by a job to its following jobs is independent of the processing times of the following jobs.",
                "These independence properties should be carried over to the cost sharing rules.",
                "This gives us two independence axioms.",
                "Definition 8.",
                "An allocation rule ψ satisfies independence of preceding jobs θ (IPJθ) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk < γk, pk = pk, then for all j ∈ N such that σj > σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ).",
                "Definition 9.",
                "An allocation rule ψ satisfies independence of following jobs p (IFJp) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk > γk, θk = θk, then for all j ∈ N such that σj < σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ). 4.2 The Characterization Results Having stated the fairness axioms, we propose three different ways to characterize the <br>shapley value</br> rule using these axioms.",
                "All our characterizations involve efficiency and ECB.",
                "But if we have IPJθ, we either need IFJp or PRp.",
                "Similarly if we have IFJp, we either need IPJθ or PRθ.",
                "Proposition 1.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and IFJp is a rule implied by the <br>shapley value</br> rule.",
                "Proof.",
                "Define for any i, j ∈ N, θi j = γipj and pi j = θj γi .",
                "Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider the following q = (N, p , θ ) corresponding to job i with pj = pj if j ≤ i and pj = pi j if j > i, θj = θi j if j < i and θj = θj if j ≥ i.",
                "Observe that all jobs have the same γ: γi.",
                "By Lemma 2 and efficiency, (σ, t ) ∈ ψ(q ) for some set of transfers t .",
                "Using Lemma 4, we get cost share of i from (σ, t ) as πi = piθi + 1 2 ¡Li + Ri¢.",
                "Now, for any j < i, if we change θj to θj without changing processing time, the new γ of j is γj ≥ γi.",
                "Applying IPJθ, the cost share of job i should not change.",
                "Similarly, for any job j > i, if we change pj to pj without changing θj, the new γ of j is γj ≤ γi.",
                "Applying IFJp, the cost share of job i should not change.",
                "Applying this procedure for every j < i with IPJθ and for every j > i with IFJp, we reach q = (N, p, θ) and the payoff of i does not change from πi.",
                "Using this argument for every i ∈ N and using the expression for the <br>shapley value</br> in Lemma 3, we get the <br>shapley value</br> rule.",
                "It is possible to replace one of the independence axioms with an equity axiom on sharing the transfer of a job.",
                "This is shown in Propositions 2 and 3.",
                "Proposition 2.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and PRp is a rule implied by the <br>shapley value</br> rule.",
                "Proof.",
                "As in the proof of Proposition 1, define θi j = γipj ∀ i, j ∈ N. Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider a queue with jobs in set K = {1, . . . , i, i + 1}, where i < n. Define q = (K, p, θ ), where θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ is an efficient ordering for q .",
                "By ECB and Lemma 4 the cost share of job i + 1 in any allocation rule in ψ must be πi+1 = pi+1θi+1 + 1 2 ¡£j<i+1 pjθi+1¢.",
                "Now, consider q = (K, p, θ ) such that θj = θi j ∀ j ≤ i and θi+1 = θi+1. σ remains an efficient ordering in q and by IPJθ the cost share of i + 1 remains πi+1.",
                "In q = (K \\ {i + 1}, p, θ ), we can calculate the cost share of job i using ECB and Lemma 4 as πi = piθi + 1 2 £j<i pjθi.",
                "So, using PRp we get the new cost share of job i in q as πi = πi + ti+1 pi j<i+1 pj = piθi + 1 2 ¡£j<i pjθi + piθi+1¢.",
                "Now, we can set K = K ∪ {i + 2}.",
                "As before, we can find cost share of i + 2 in this queue as πi+2 = pi+2θi+2 + 1 2 ¡£j<i+2 pjθi+2¢.",
                "Using PRp we get the new cost share of job i in the new queue as πi = piθi + 1 2 ¡£j<i pjθi + piθi+1 + piθi+2¢.",
                "This process can be repeated till we add job n at which point cost share of i is piθi + 1 2 ¡£j<i pjθi + £j>i piθj¢.",
                "Then, we can adjust the θ of preceding jobs of i to their original value and applying IPJθ, the payoffs of jobs i through n will not change.",
                "This gives us the Shapley values of jobs i through n. Setting i = 1, we get cost shares of all the jobs from ψ as the <br>shapley value</br>.",
                "Proposition 3.",
                "Any efficient rule ψ that satisfies ECB, IFJp, and PRθ is a rule implied by the <br>shapley value</br> rule.",
                "Proof.",
                "The proof mirrors the proof of Proposition 2.",
                "We provide a short sketch.",
                "Analogous to the proof of Proposition 2, θs are kept equal to original data and processing times are initialized to pi+1 j .",
                "This allows us to use IFJp.",
                "Also, contrast to Proposition 2, we consider K = {i, i + 1, . . . , n} and repeatedly add jobs to the beginning of the queue maintaining the same efficient ordering.",
                "So, we add the cost components of preceding jobs to the cost share of jobs in each iteration and converge to the <br>shapley value</br> rule.",
                "The next proposition shows that the <br>shapley value</br> rule satisfies all the fairness axioms discussed.",
                "Proposition 4.",
                "The <br>shapley value</br> rule satisfies efficiency, pareto indifference, anonymity, ETE, ECB, IPJθ, IFJp, PRp, and PRθ.",
                "Proof.",
                "The <br>shapley value</br> rule chooses an efficient ordering and by definition the payments add upto zero.",
                "So, it satisfies efficiency.",
                "The <br>shapley value</br> assigns same cost share to a job irrespective of the efficient ordering chosen.",
                "So, it is pareto indifferent.",
                "The <br>shapley value</br> is anonymous because the particular index of a job does not effect his ordering or cost share.",
                "For ETE, consider two jobs i, j ∈ N such that pi = pj and θi = θj.",
                "Without loss of generality assume the efficient ordering to be 1, . . . , i, . . . , j, . . . , n. Now, the <br>shapley value</br> of job i is 236 SVi = piθi + 1 2 ¡Li + Ri¢(From Lemma 3) = pjθj + 1 2 ¡Lj + Rj¢− 1 2 ¡Li − Lj + Ri − Rj¢ = SVj − 1 2 ¡   i<k≤j piθk −   i≤k<j pkθi¢ = SVj − 1 2   i<k≤j (piθk − pkθi) (Using pi = pj and θi = θj) = SVj (Using θk pk = θi pi for all i ≤ k ≤ j).",
                "The <br>shapley value</br> satisfies ECB by its expression in Lemma 3.",
                "Consider any job i, in an efficient ordering σ, if we increase the value of γj for some j = i such that σj > σi, then the set Pi ( preceding jobs) does not change in the new efficient ordering.",
                "If γj is changed such that pj remains the same, then the expression £j∈Pi θipj is unchanged.",
                "If (p, θ) values of no other jobs are changed, then the <br>shapley value</br> is unchanged by increasing γj for some j ∈ Pi while keeping pj unchanged.",
                "Thus, the <br>shapley value</br> rule satisfies IPJθ.",
                "An analogous argument shows that the <br>shapley value</br> rule satisfies IFJp.",
                "For PRp, assume without loss of generality that jobs are ordered 1, . . . , n in an efficient ordering.",
                "Denote the transfer of job i = n due to the <br>shapley value</br> with set of jobs N and set of jobs N \\ {n} as ti and ti respectively.",
                "Transfer of last job is tn = 1 2 θn £j<n pj.",
                "Now, ti = 1 2 ¡θi   j<i pj − pi   j>i θj¢ = 1 2 ¡θi   j<i pj − pi   j>i:j=n θj¢− 1 2 piθn = ti − 1 2 θn   j<n pj pi £j<n pj = ti − tn pi £j<n pj .",
                "A similar argument shows that the <br>shapley value</br> rule satisfies PRθ.",
                "These series of propositions lead us to our main result.",
                "Theorem 1.",
                "Let ψ be an allocation rule.",
                "The following statements are equivalent: 1) For each q ∈ Q, ψ(q) selects all the allocation assigning jobs cost shares implied by the <br>shapley value</br>. 2) ψ satisfies efficiency, ECB, IFJp, and IPJθ. 3) ψ satisfies efficiency, ECB, IFJp, and PRθ. 4) ψ satisfies efficiency, ECB, PRp, and IPJθ.",
                "Proof.",
                "The proof follows from Propositions 1, 2, 3, and 4. 5.",
                "DISCUSSIONS 5.1 A Reasonable Class of Cost Sharing Mechanisms In this section, we will define a reasonable class of cost sharing mechanisms.",
                "We will show how these reasonable mechanisms lead to the <br>shapley value</br> mechanism.",
                "Definition 10.",
                "An allocation rule ψ is reasonable if for all q ∈ Q and (σ, t) ∈ ψ(q) we have for all i ∈ N, ti = α ¡θi   j∈Pi(σ) pj − pi   j∈Fi(σ) θj¢∀ i ∈ N, where 0 ≤ α ≤ 1.",
                "The reasonable cost sharing mechanism says that every job should be paid a constant fraction of the difference between the waiting cost he incurs and the waiting cost he inflicts on other jobs.",
                "If α = 0, then every job bears its own cost.",
                "If α = 1, then every job gets compensated for its waiting cost but compensates others for the cost he inflicts on others.",
                "The <br>shapley value</br> rule comes as a result of ETE as shown in the following proposition.",
                "Proposition 5.",
                "Any efficient and reasonable allocation rule ψ that satisfies ETE is a rule implied by the <br>shapley value</br> rule.",
                "Proof.",
                "Consider a q ∈ Q in which pi = pj and θi = θj.",
                "Let (σ, t) ∈ ψ(q) and π be the resulting cost shares.",
                "From ETE, we get, πi = πj ⇒ ci(σ) − ti = cj(σ) − tj ⇒ piθi + (1 − α)Li + αRi = pjθj + (1 − α)Lj + αRj (Since ψ is efficient and reasonable) ⇒ (1 − α)(Li − Lj) = α(Rj − Ri) (Using pi = pj, θi = θj) ⇒ 1 − α = α (Using Li − Lj = Rj − Ri = 0) ⇒ α = 1 2 .",
                "This gives us the <br>shapley value</br> rule by Lemma 3. 5.2 Results on Envy Chun [2] discusses a fariness condition called no-envy for the case when processing times of all jobs are unity.",
                "Definition 11.",
                "An allocation rule satisfies no-envy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tj, where π is the cost share from allocation rule (σ, t) and σij is the ordering obtaining by swapping i and j.",
                "From the result in [2], the <br>shapley value</br> rule does not satisfy no-envy in our model also.",
                "To overcome this, Chun [2] introduces the notion of adjusted no-envy, which he shows is satisfied in the <br>shapley value</br> rule when processing times of all jobs are unity.",
                "Here, we show that adjusted envy continues to hold in the <br>shapley value</br> rule in our model (when processing times need not be unity).",
                "As before denote σij be an ordering where the position of i and j is swapped from an ordering σ.",
                "For adjusted noenvy, if (σ, t) is an allocation for some q ∈ Q, let tij be the 237 transfer of job i when the transfer of i is calculated with respect to ordering σij .",
                "Observe that an allocation may not allow for calculation of tij .",
                "For example, if ψ is efficient, then tij cannot be calculated if σij is also not efficient.",
                "For simplicity, we state the definition of adjusted no-envy to apply to all such rules.",
                "Definition 12.",
                "An allocation rule satisfies adjusted noenvy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tij i .",
                "Proposition 6.",
                "The <br>shapley value</br> rule satisfies adjusted no-envy.",
                "Proof.",
                "Without loss of generality, assume efficient ordering of jobs is: 1, . . . , n. Consider two jobs i and i + k. From Lemma 3, SVi = piθi + 1 2 ¡  j<i θipj +   j>i θjpi¢.",
                "Let ˆπi be the cost share of i due to adjusted transfer tii+k i in the ordering σii+k . ˆπi = ci(σii+k ) − tii+k i = piθi + 1 2 ¡  j<i θipj + θipi+k +   i<j<i+k θipj +   j>i θjpi − θi+kpi −   i<j<i+k θjpi¢ = SVi + 1 2   i<j≤i+k ¡θipj − θjpi¢ ≥ SVi (Using the fact that θi pi ≥ θj pj for i < j). 6.",
                "CONCLUSION We studied the problem of sharing costs for a job scheduling problem on a single server, when jobs have processing times and unit time waiting costs.",
                "We took a cooperative game theory approach and show that the famous the <br>shapley value</br> rule satisfies many nice fairness properties.",
                "We characterized the <br>shapley value</br> rule using different intuitive fairness axioms.",
                "In future, we plan to further simplify some of the fairness axioms.",
                "Some initial simplifications already appear in [16], where we provide an alternative axiom to ECB and also discuss the implication of transfers between jobs (in stead of transfers from jobs to a central server).",
                "We also plan to look at cost sharing mechanisms other than the <br>shapley value</br>.",
                "Investigating the strategic power of jobs in such mechanisms is another line of future research. 7.",
                "REFERENCES [1] Youngsub Chun.",
                "A Note on Maniquets Characterization of the <br>shapley value</br> in Queueing Problems.",
                "Working Paper, Rochester University, 2004. [2] Youngsub Chun.",
                "No-envy in Queuing Problems.",
                "Working Paper, Rochester University, 2004. [3] Imma Curiel, Herbert Hamers, and Flip Klijn.",
                "Sequencing Games: A Survey.",
                "In Peter Borm and Hans Peters, editors, Chapter in Game Theory.",
                "Theory and Decision Library, Kulwer Academic Publishers, 2002. [4] Imma Curiel, Giorgio Pederzoli, and Stef Tijs.",
                "Sequencing Games.",
                "European Journal of Operational Research, 40:344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs, and Bart Veltman.",
                "Sequencing and Cooperation.",
                "Operations Research, 42(3):566-568, May-June 1994. [6] Nikhil R. Devanur, Milena Mihail, and Vijay V. Vazirani.",
                "Strategyproof Cost-sharing Mechanisms for Set Cover and Facility Location Games.",
                "In Proceedings of Fourth Annual ACM Conferece on Electronic Commerce, 2003. [7] Robert J. Dolan.",
                "Incentive Mechanisms for Priority Queueing Problems.",
                "Bell Journal of Economics, 9:421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou, and Scott Shenker.",
                "Sharing the Cost of Multicast Transmissions.",
                "In Proceedings of Thirty-Second Annual ACM Symposium on Theory of Computing, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs, and Peter Borm.",
                "The Split Core for Sequencing Games.",
                "Games and Economic Behavior, 15:165-176, 1996. [10] John C. Harsanyi.",
                "Contributions to Theory of Games IV, chapter A Bargaining Model for Cooperative n-person Games.",
                "Princeton University Press, 1959.",
                "Editors: A. W. Tucker, R. D. Luce. [11] Kamal Jain and Vijay Vazirani.",
                "Applications of Approximate Algorithms to Cooperative Games.",
                "In Proceedings of 33rd Symposium on Theory of Computing (STOC 01), 2001. [12] Kamal Jain and Vijay Vazirani.",
                "Equitable Cost Allocations via Primal-Dual Type Algorithms.",
                "In Proceedings of 34th Symposium on Theory of Computing (STOC 02), 2002. [13] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without a Completely Specified Initial Order.",
                "Report in Statistics and Operations Research, pages 1-17, 2002.",
                "Report 02-04. [14] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without Initial Order.",
                "Working Paper, Universitat Aut´onoma de Barcelona, July 2004. [15] Franois Maniquet.",
                "A Characterization of the <br>shapley value</br> in Queueing Problems.",
                "Journal of Economic Theory, 109:90-103, 2003. [16] Debasis Mishra and Bharath Rangarajan.",
                "Cost sharing in a job scheduling problem.",
                "Working Paper, CORE, 2005. [17] Manipushpak Mitra.",
                "Essays on First Best Implementable Incentive Problems.",
                "Ph.D. Thesis, Indian Statistical Institute, New Delhi, 2000. [18] Manipushpak Mitra.",
                "Mechanism design in queueing problems.",
                "Economic Theory, 17(2):277-305, 2001. [19] Manipushpak Mitra.",
                "Achieving the first best in sequencing problems.",
                "Review of Economic Design, 7:75-91, 2002. [20] Herv´e Moulin.",
                "Handbook of Social Choice and Welfare, chapter Axiomatic Cost and Surplus Sharing.",
                "North-Holland, 2002.",
                "Publishers: Arrow, Sen, Suzumura. [21] Herv´e Moulin.",
                "On Scheduling Fees to Prevent 238 Merging, Splitting and Transferring of Jobs.",
                "Working Paper, Rice University, 2004. [22] Herv´e Moulin.",
                "Split-proof Probabilistic Scheduling.",
                "Working Paper, Rice University, 2004. [23] Herv´e Moulin and Rakesh Vohra.",
                "Characterization of Additive Cost Sharing Methods.",
                "Economic Letters, 80:399-407, 2003. [24] Martin P´al and ´Eva Tardos.",
                "Group Strategyproof Mechanisms via Primal-Dual Algorithms.",
                "In Proceedings of the 44th Annual IEEE Symposium on the Foundations of Computer Science (FOCS 03), 2003. [25] Lloyd S. Shapley.",
                "Contributions to the Theory of Games II, chapter A Value for n-person Games, pages 307-317.",
                "Annals of Mathematics Studies, 1953.",
                "Ediors: H. W. Kuhn, A. W. Tucker. [26] Wayne E. Smith.",
                "Various Optimizers for Single-Stage Production.",
                "Naval Research Logistics Quarterly, 3:59-66, 1956. [27] Jeroen Suijs.",
                "On incentive compatibility and budget balancedness in public decision making.",
                "Economic Design, 2, 2002. 239"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Coste compartido en un problema de programación de empleo utilizando el Centro de Investigación de Operaciones y Econometría (Core) de \"Valor de Shapley\" Catolique de Louvain de Louvain la Neuve, Belgium Mishra@core.ucl.ac.be Bharath Rangarajan para investigaciones de operaciones para operaciones Investigaciones de operacionesy Econometrics (Core) Universit´e Catholique de Louvain Louvain La Neuve, Bélgica rangarajan@core.ucl.ac.s Resumen Un conjunto de trabajos debe ser atendido por un solo servidor que solo puede servir un trabajo a la vez.",
                "Caracterizamos la regla de \"valor de Shapley\" para este modelo utilizando axiomas de equidad.",
                "Para tal modelo, caracteriza la regla de \"valor de Shapley\" utilizando axiomas clásicos de equidad.",
                "Además, proporcionan expresiones para el \"valor de Shapley\" en el juego de cola en términos de vectores marginales y vectores marginales invertidos.",
                "Proporcionamos una expresión más simple del \"valor de Shapley\" en el juego de cola, generalizando el resultado en Chun [1].",
                "Tomamos un enfoque de teoría de juegos cooperativo y aplicamos la regla clásica de \"valor de Shapley\" al problema.",
                "Mostramos que la regla de \"valor de Shapley\" satisface muchos axiomas intuitivos de equidad.",
                "Debido a la naturaleza bidimensional de nuestro modelo y la naturaleza unidimensional del modelo de Maniquets [15], sus axiomas son insuficientes para caracterizar el \"valor de Shapley\" en nuestro entorno.",
                "Caracterizamos la regla de \"valor de Shapley\" utilizando estos axiomas de equidad.",
                "Costos compartidos utilizando el \"valor de Shapley\" en esta sección, definimos el costo coalición de este juego y analizamos la solución propuesta por el \"valor de Shapley\".",
                "El \"valor de Shapley\" (o los costos compartidos) de un trabajo I se define como, svi = s⊆n \\ {i} | s |!(| N | - | s | - 1)!| N |!¡C (S∪ {i}) - C (s) ¢.(1) La regla de asignación de \"valor de Shapley\" dice que los trabajos se ordenan utilizando un pedido eficiente y las transferencias se asignan a trabajos de modo que la participación de costos del trabajo I esté dada por la ecuación 1.",
                "Sea σ ∗ un orden eficiente de trabajos en el set N. Para todos los i ∈ N, el \"valor de Shapley\" viene dado por Svi = Piθi + 1 2 ¡li + ri ¢, donde li = θi £ j∈Pi (σ∗) pj y ri = pi £ j∈Fi (σ ∗) θj.",
                "Otra forma de escribir la fórmula \"Valor de Shapley\" es la siguiente [10], svi = s⊆n: i∈S ∆ (s) | S |, donde ∆ (s) = c (s) if | s |= 1 y ∆ (s) = c (s) - £ t s ∆ (t).",
                "Usando la fórmula de \"valor de Shapley\" ahora, svi = s⊆n: i∈S ∆ (s) | s |= ∆ ({i}) + 1 2 j∈N: j = i ∆ ({i, j}) = piθi + 1 2 ¡j <i ∆ ({i, j}) + j> i ∆ ({i, j}) ¢ = piθi + 1 2 ¡j <i pjθi + j> i piθj ¢ = piθi + 1 2 ¡li + ri ¢.4.",
                "Caracterización axiomática del \"valor de Shapley\" en esta sección, definiremos varios axiomas en la equidad y caracterizaremos el \"valor de Shapley\" que los usa.",
                "Una regla de asignación ψ satisface la independencia de los siguientes trabajos p (ifjp) si para todos q = (n, p, θ), q = (n, p, θ) ∈ Q, (σ, t) ∈ ψ (q), (((σ, t) ∈ ψ (q), si para todo i ∈ N \\ {k}: θi = θi, pi = pi y γk> γk, θk = θk, entonces para todos j ∈ N tal que σj <σk: πj= πj, donde π es el costo compartido en (σ, t) y π es el costo compartido en (σ, t).4.2 Los resultados de la caracterización que habían declarado los axiomas de equidad, proponemos tres formas diferentes de caracterizar la regla de \"valor de Shapley\" usando estos axiomas.",
                "Cualquier regla eficiente ψ que satisfaga el BCE, IPJθ e IFJP es una regla implícita por la regla de \"valor de Shapley\".",
                "Usando este argumento para cada i ∈ N y usando la expresión para el \"valor de Shapley\" en Lemma 3, obtenemos la regla de \"valor de Shapley\".",
                "Cualquier regla eficiente ψ que satisfaga el BCE, IPJθ y PRP es una regla implícita por la regla de \"valor de Shapley\".",
                "Esto nos da los valores de Shapley de los trabajos i a n.Configuración I = 1, obtenemos acciones de todos los trabajos de ψ como el \"valor de Shapley\".",
                "Cualquier regla eficiente ψ que satisfaga el BCE, IFJP y PRθ es una regla implícita por la regla de \"valor de Shapley\".",
                "Por lo tanto, agregamos los componentes de costo de los trabajos anteriores al costo de los trabajos en cada iteración y convergimos a la regla de \"valor de Shapley\".",
                "La siguiente proposición muestra que la regla de \"valor de Shapley\" satisface todos los axiomas de equidad discutidos.",
                "La regla de \"valor de Shapley\" satisface la eficiencia, la indiferencia de Pareto, el anonimato, el ete, el ECB, IPJθ, IFJP, PRP y PRθ.",
                "La regla de \"valor de Shapley\" elige un pedido eficiente y, por definición, los pagos se suman hasta cero.",
                "El \"valor de Shapley\" asigna el mismo costo compartido a un trabajo independientemente del orden eficiente elegido.",
                "El \"valor de Shapley\" es anónimo porque el índice particular de un trabajo no afecta su pedido o participación en costos.",
                "Sin pérdida de generalidad suponga que el orden eficiente es 1 ,..., i, ..., J ,..., n.Ahora, el \"valor de forma de flapas\" del trabajo I es 236 SVI = Piθi + 1 2 ¡li + ri ¢ (de lemma 3) = pjθj + 1 2 ¡lj + rj ¢ - 1 2 ¡li - lj + ri - rj ¢= Svj - 1 2 ¡i <k≤j piθk - i≤k <j pkθi ¢ = svj - 1 2 i <k cansil (piθk - pkθi) (usando pi = pj y θi = θj) = svj (usando θkpk = θi pi para todo i ≤ k ≤ j).",
                "El \"valor de Shapley\" satisface el BCE por su expresión en Lemma 3.",
                "Si (p, θ) no se cambian los valores de otros trabajos, entonces el \"valor de Shapley\" no cambia al aumentar γj para algunos j ∈ Pi mientras mantiene PJ sin cambios.",
                "Por lo tanto, la regla de \"valor de Shapley\" satisface IPJθ.",
                "Un argumento análogo muestra que la regla de \"valor de Shapley\" satisface IFJP.",
                "Denota la transferencia del trabajo i = n debido al \"valor de Shapley\" con un conjunto de trabajos n y un conjunto de trabajos n \\ {n} como ti y ti respectivamente.",
                "Un argumento similar muestra que la regla de \"valor de Shapley\" satisface a PRθ.",
                "Las siguientes afirmaciones son equivalentes: 1) para cada q ∈ Q, ψ (q) selecciona todas las acciones de asignación de asignación de trabajos implícitos por el \"valor de Shapley\".2) ψ satisface la eficiencia, el BCE, IFJP y IPJθ.3) ψ satisface la eficiencia, el BCE, IFJP y PRθ.4) ψ satisface la eficiencia, el BCE, PRP y IPJθ.",
                "Mostraremos cómo estos mecanismos razonables conducen al mecanismo de \"valor de Shapley\".",
                "La regla del \"valor de Shapley\" viene como resultado de ETE como se muestra en la siguiente proposición.",
                "Cualquier regla de asignación eficiente y razonable ψ que satisfaga ETE es una regla implícita por la regla de \"valor de Shapley\".",
                "Esto nos da la regla de \"valor de Shapley\" de Lemma 3. 5.2 Resultados en Envy Chun [2] discute una condición de fariness llamada no-envidia para el caso cuando los tiempos de procesamiento de todos los trabajos son la unidad.",
                "A partir del resultado en [2], la regla del \"valor de Shapley\" no satisface el no envoltura en nuestro modelo también.",
                "Para superar esto, Chun [2] introduce la noción de no envoltura ajustada, que muestra que está satisfecho en la regla de \"valor de Shapley\" cuando los tiempos de procesamiento de todos los trabajos son la unidad.",
                "Aquí, mostramos que la envidia ajustada continúa en la regla de \"valor de Shapley\" en nuestro modelo (cuando los tiempos de procesamiento no necesitan ser la unidad).",
                "La regla del \"valor de Shapley\" satisface el no envoltura ajustada.",
                "Tomamos un enfoque de teoría de juegos cooperativo y mostramos que la famosa regla del \"valor de Shapley\" satisface muchas propiedades de equidad agradables.",
                "Caracterizamos la regla de \"valor de Shapley\" utilizando diferentes axiomas de equidad intuitiva.",
                "También planeamos analizar los mecanismos de costo compartido que no sean el \"valor de Shapley\".",
                "Una nota sobre la caracterización de Maniquets del \"valor de Shapley\" en los problemas de colas.",
                "Una caracterización del \"valor de Shapley\" en los problemas de colas."
            ],
            "translated_text": "",
            "candidates": [
                "Valor de Shapley",
                "Valor de Shapley",
                "Valor de Shapley",
                "valor de Shapley",
                "Valor de Shapley",
                "valor de Shapley",
                "Valor de Shapley",
                "valor de Shapley",
                "Valor de Shapley",
                "valor de Shapley",
                "Valor de Shapley",
                "valor de Shapley",
                "Valor de Shapley",
                "valor de Shapley",
                "Valor de Shapley",
                "valor de Shapley",
                "Valor de Shapley",
                "valor de Shapley",
                "Valor de Shapley",
                "valor de Shapley",
                "valor de Shapley",
                "Valor de Shapley",
                "valor de Shapley",
                "valor de Shapley",
                "Valor de Shapley",
                "valor de Shapley",
                "Valor de Shapley",
                "Valor de Shapley",
                "Valor de Shapley",
                "valor de Shapley",
                "Valor de Shapley",
                "valor de Shapley",
                "valor de Shapley",
                "Valor de Shapley",
                "valor de Shapley",
                "Valor de Shapley",
                "valor de Shapley",
                "Valor de Shapley",
                "valor de Shapley",
                "valor de Shapley",
                "Valor de Shapley",
                "valor de Shapley",
                "Valor de Shapley",
                "valor de Shapley",
                "Valor de Shapley",
                "valor de Shapley",
                "Valor de Shapley",
                "valor de Shapley",
                "Valor de Shapley",
                "valor de Shapley",
                "Valor de Shapley",
                "valor de Shapley",
                "Valor de Shapley",
                "valor de Shapley",
                "Valor de Shapley",
                "valor de Shapley",
                "Valor de Shapley",
                "valor de Shapley",
                "Valor de Shapley",
                "valor de forma de flapas",
                "Valor de Shapley",
                "valor de Shapley",
                "Valor de Shapley",
                "valor de Shapley",
                "Valor de Shapley",
                "valor de Shapley",
                "Valor de Shapley",
                "valor de Shapley",
                "Valor de Shapley",
                "valor de Shapley",
                "Valor de Shapley",
                "valor de Shapley",
                "Valor de Shapley",
                "valor de Shapley",
                "Valor de Shapley",
                "valor de Shapley",
                "Valor de Shapley",
                "valor de Shapley",
                "Valor de Shapley",
                "valor de Shapley",
                "Valor de Shapley",
                "valor de Shapley",
                "Valor de Shapley",
                "valor de Shapley",
                "Valor de Shapley",
                "valor de Shapley",
                "Valor de Shapley",
                "valor de Shapley",
                "Valor de Shapley",
                "valor de Shapley",
                "Valor de Shapley",
                "valor de Shapley",
                "Valor de Shapley",
                "valor de Shapley",
                "Valor de Shapley",
                "valor de Shapley",
                "Valor de Shapley",
                "valor de Shapley",
                "Valor de Shapley",
                "valor de Shapley"
            ],
            "error": []
        },
        "monetary transfer": {
            "translated_key": "transferencia monetaria",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Cost Sharing in a Job Scheduling Problem Using the Shapley Value Debasis Mishra Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium mishra@core.ucl.ac.be Bharath Rangarajan Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium rangarajan@core.ucl.ac.be ABSTRACT A set of jobs need to be served by a single server which can serve only one job at a time.",
                "Jobs have processing times and incur waiting costs (linear in their waiting time).",
                "The jobs share their costs through compensation using <br>monetary transfer</br>s.",
                "We characterize the Shapley value rule for this model using fairness axioms.",
                "Our axioms include a bound on the cost share of jobs in a group, efficiency, and some independence properties on the the cost share of a job.",
                "Categories and Subject Descriptors J.4 [Social and Behaviorial Sciences]: Economics General Terms Economics, Theory 1.",
                "INTRODUCTION A set of jobs need to be served by a server.",
                "The server can process only one job at a time.",
                "Each job has a finite processing time and a per unit time waiting cost.",
                "Efficient ordering of this queue directs us to serve the jobs in increasing order of the ratio of per unit time waiting cost and processing time.",
                "To compensate for waiting by jobs, <br>monetary transfer</br>s to jobs are allowed.",
                "How should the jobs share the cost equitably amongst themselves (through transfers)?",
                "The problem of fair division of costs among agents in a queue has many practical applications.",
                "For example, computer programs are regularly scheduled on servers, data are scheduled to be transmitted over networks, jobs are scheduled in shop-floor on machines, and queues appear in many public services (post offices, banks).",
                "Study of queueing problems has attracted economists for a long time [7, 17].",
                "Cost sharing is a fundamental problem in many settings on the Internet.",
                "Internet can be seen as a common resource shared by many users and the cost incured by using the resource needs to be shared in an equitable manner.",
                "The current surge in cost sharing literature from computer scientists validate this claim [8, 11, 12, 6, 24].",
                "Internet has many settings in which our model of job scheduling appears and the agents waiting in a queue incur costs (jobs scheduled on servers, queries answered from a database, data scheduled to be transmitted over a fixed bandwidth network etc.).",
                "We hope that our analysis will give new insights on cost sharing problems of this nature.",
                "Recently, there has been increased interest in cost sharing methods with submodular cost functions [11, 12, 6, 24].",
                "While many settings do have submodular cost functions (for example, multi-cast transmission games [8]), while the cost function of our game is supermodular.",
                "Also, such literature typically does not assume budget-balance (transfers adding up to zero), while it is an inherent feature of our model.",
                "A recent paper by Maniquet [15] is the closest to our model and is the motivation behind our work 1 .",
                "Maniquet [15] studies a model where he assumes all processing times are unity.",
                "For such a model, he characterizes the Shapley value rule using classical fairness axioms.",
                "Chun [1] interprets the worth of a coalition of jobs in a different manner for the same model and derives a reverse rule.",
                "Chun characterizes this rule using similar fairness axioms.",
                "Chun [2] also studies the envy properties of these rules.",
                "Moulin [22, 21] studies the queueing problem from a strategic point view when per unit waiting costs are unity.",
                "Moulin introduces new concepts in the queueing settings such as splitting and merging of jobs, and ways to prevent them.",
                "Another stream of literature is on sequencing games, first introduced by Curiel et al. [4].",
                "For a detailed survey, refer to Curiel et al. [3].",
                "Curiel et al. [4] defined sequencing games similar to our model, but in which an initial ordering of jobs is given.",
                "Besides, their notion of worth of a coalition is very different from the notions studied in Maniquet [15] and Chun [1] (these are the notions used in our work too).",
                "The particular notion of the worth of a coalition makes the sequencing game of Curiel et al. [4] convex, whereas our game is not convex and does not assume the presence of any initial order.",
                "In summary, the focus of this stream of 1 The authors thank Fran¸cois Maniquet for several fruitful discussions. 232 research is how to share the savings in costs from the initial ordering to the optimal ordering amongst jobs (also see Hamers et al. [9], Curiel et al. [5]).",
                "Recently, Klijn and S´anchez [13, 14] considered sequencing games without any initial ordering of jobs.",
                "They take two approaches to define the worth of coalitions.",
                "One of their approaches, called the tail game, is related to the reverse rule of Chun [1].",
                "In the tail game, jobs in a coalition are served after the jobs not in the coalition are served.",
                "Klijn and S´anchez [14] showed that the tail game is balanced.",
                "Further, they provide expressions for the Shapley value in tail game in terms of marginal vectors and reversed marginal vectors.",
                "We provide a simpler expression of the Shapley value in the tail game, generalizing the result in Chun [1].",
                "Klijn and S´anchez [13] study the core of this game in detail.",
                "Strategic aspects of queueing problems have also been researched.",
                "Mitra [19] studies the first best implementation in queueing models with generic cost functions.",
                "First best implementation means that there exists an efficient mechanism in which jobs in the queue have a dominant strategy to reveal their true types and their transfers add up to zero.",
                "Suijs [27] shows that if waiting costs of jobs are linear then first best implementation is possible.",
                "Mitra [19] shows that among a more general class of queueing problems first best implementation is possible if and only if the cost is linear.",
                "For another queueing model, Mitra [18] shows that first best implementation is possible if and only if the cost function satisfies a combinatorial property and an independence property.",
                "Moulin [22, 21] studies strategic concepts such as splitting and merging in queueing problems with unit per unit waiting costs.",
                "The general cost sharing literature is vast and has a long history.",
                "For a good survey, we refer to [20].",
                "From the seminal work of Shapley [25] to recent works on cost sharing in multi-cast transmission and optimization problems [8, 6, 23] this area has attracted economists, computer scientists, and operations researchers. 1.1 Our Contribution Ours is the first model which considers cost sharing when both processing time and per unit waiting cost of jobs are present.",
                "We take a cooperative game theory approach and apply the classical Shapley value rule to the problem.",
                "We show that the Shapley value rule satisfies many intuitive fairness axioms.",
                "Due to two dimensional nature of our model and one dimensional nature of Maniquets model [15], his axioms are insufficient to characterize the Shapley value in our setting.",
                "We introduce axioms such as independece of preceding jobs unit waiting cost and independence of following jobs processing time.",
                "A key axiom that we introduce gives us a bound on cost share of a job in a group of jobs which have the same ratio of unit time waiting cost and processing time (these jobs can be ordered in any manner between themseleves in an efficient ordering).",
                "If such a group consists of just one job, then the axiom says that such a job should at least pay his own processing cost (i.e., the cost it would have incurred if it was the only job in the queue).",
                "If there are multiple jobs in such a group, the probability of any two jobs from such a group inflicting costs on each other is same (1 2 ) in an efficient ordering.",
                "Depending on the ordering selected, one job inflicts cost on the other.",
                "Our fairness axiom says that each job should at least bear such expected costs.",
                "We characterize the Shapley value rule using these fairness axioms.",
                "We also extend the envy results in [2] to our setting and discuss a class of reasonable cost sharing mechanisms. 2.",
                "THE MODEL There are n jobs that need to be served by one server which can process only one job at a time.",
                "The set of jobs are denoted as N = {1, . . . , n}. σ : N → N is an ordering of jobs in N and σi denotes the position of job i in the ordering σ.",
                "Given an ordering σ, define Fi(σ) = {j ∈ N : σi < σj} and Pi(σ) = {j ∈ N : σi > σj}.",
                "Every job i is identified by two parameters: (pi, θi). pi is the processing time and θi is the cost per unit waiting time of job i.",
                "Thus, a queueing problem is defined by a list q = (N, p, θ) ∈ Q, where Q is the set of all possible lists.",
                "We will denote γi = θi pi .",
                "Given an ordering of jobs σ, the cost incurred by job i is given by ci(σ) = piθi + θi   j∈Pi(σ) pj.",
                "The total cost incurred by all jobs due to an ordering σ can be written in two ways: (i) by summing the cost incurred by every job and (ii) by summing the costs inflicted by a job on other jobs with their own processing cost.",
                "C(N, σ) =   i∈N ci(σ) =   i∈N piθi +   i∈N ¡θi   j∈Pi(σ) pj¢. =   i∈N piθi +   i∈N ¡pi   j∈Fi(σ) θj¢.",
                "An efficient ordering σ∗ is the one which minimizes the total cost incurred by all jobs.",
                "So, C(N, σ∗ ) ≤ C(N, σ) ∀ σ ∈ Σ.",
                "To achieve notational simplicity, we will write the total cost in an efficient ordering of jobs from N as C(N) whenever it is not confusing.",
                "Sometimes, we will deal with only a subset of jobs S ⊆ N. The ordering σ will then be defined on jobs in S only and we will write the total cost from an efficient ordering of jobs in S as C(S).",
                "The following lemma shows that jobs are ordered in decreasing γ in an efficient ordering.",
                "This is also known as the weighted shortest processing time rule, first introduced by Smith [26].",
                "Lemma 1.",
                "For any S ⊆ N, let σ∗ be an efficient ordering of jobs in S. For every i = j, i, j ∈ S, if σ∗ i > σ∗ j , then γi ≤ γj.",
                "Proof.",
                "Assume for contradiction that the statment of the lemma is not true.",
                "This means, we can find two consecutive jobs i, j ∈ S (σ∗ i = σ∗ j + 1) such that γi > γj.",
                "Define a new ordering σ by interchanging i and j in σ∗ .",
                "The costs to jobs in S \\ {i, j} is not changed from σ∗ to σ.",
                "The difference between total costs in σ∗ and σ is given by, C(S, σ) − C(S, σ∗ ) = θjpi − θipj.",
                "From efficiency we get θjpi − θipj ≥ 0.",
                "This gives us γj ≥ γi, which is a contradiction.",
                "An allocation for q = (N, p, θ) ∈ Q has two components: an ordering σ and a transfer ti for every job i ∈ N. ti denotes the payment received by job i.",
                "Given a transfer ti and an ordering σ, the cost share of job i is defined as, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. 233 An allocation (σ, t) is efficient for q = (N, p, θ) whenever σ is an efficient ordering and £i∈N ti = 0.",
                "The set of efficient orderings of q is denoted as Σ∗ (q) and σ∗ (q) will be used to refer to a typical element of the set.",
                "The following straightforward lemma says that for two different efficient orderings, the cost share in one efficient allocation is possible to achieve in the other by appropriately modifying the transfers.",
                "Lemma 2.",
                "Let (σ, t) be an efficient allocation and π be the vector of cost shares of jobs from this allocation.",
                "If σ∗ = σ be an efficient ordering and t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, then (σ∗ , t∗ ) is also an efficient allocation.",
                "Proof.",
                "Since (σ, t) is efficient, £i∈N ti = 0.",
                "This gives £i∈N πi = C(N).",
                "Since σ∗ is an efficient ordering, £i∈N ci(σ∗ ) = C(N).",
                "This means, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0.",
                "So, (σ∗ , t∗ ) is an efficient allocation.",
                "Depending on the transfers, the cost shares in different efficient allocations may differ.",
                "An allocation rule ψ associates with every q ∈ Q a non-empty subset ψ(q) of allocations. 3.",
                "COST SHARING USING THE SHAPLEY VALUE In this section, we define the coalitional cost of this game and analyze the solution proposed by the Shapley value.",
                "Given a queue q ∈ Q, the cost of a coalition of S ⊆ N jobs in the queue is defined as the cost incurred by jobs in S if these are the only jobs served in the queue using an efficient ordering.",
                "Formally, the cost of a coalition S ⊆ N is, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, where σ∗ = σ∗ (S) is an efficient ordering considering jobs from S only.",
                "The worth of a coalition of S jobs is just −C(S).",
                "Maniquet [15] observes another equivalent way to define the worth of a coalition is using the dual function of the cost function C(·).",
                "Other interesting ways to define the worth of a coalition in such games is discussed by Chun [1], who assume that a coalition of jobs are served after the jobs not in the coalition are served.",
                "The Shapley value (or cost share) of a job i is defined as, SVi =   S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) The Shapley value allocation rule says that jobs are ordered using an efficient ordering and transfers are assigned to jobs such that the cost share of job i is given by Equation 1.",
                "Lemma 3.",
                "Let σ∗ be an efficient ordering of jobs in set N. For all i ∈ N, the Shapley value is given by, SVi = piθi + 1 2 ¡Li + Ri¢, where Li = θi £j∈Pi(σ∗) pj and Ri = pi £j∈Fi(σ∗) θj.",
                "Proof.",
                "Another way to write the Shapley value formula is the following [10], SVi =   S⊆N:i∈S ∆(S) |S| , where ∆(S) = C(S) if |S| = 1 and ∆(S) = C(S)−£T S ∆(T).",
                "This gives ∆({i}) = C({i}) = piθi ∀i ∈ N. For any i, j ∈ N with i = j, we have ∆({i, j}) = C({i, j}) − C({i}) − C({j}) = min(piθi + pjθj + pjθi, piθi + pjθj + piθj) − piθi − pjθj = min(pjθi, piθj).",
                "We will show by induction that ∆(S) = 0 if |S| > 2.",
                "For |S| = 3, let S = {i, j, k}.",
                "Without loss of generality, assume θi pi ≥ θj pj ≥ θk pk .",
                "So, ∆(S) = C(S) − ∆({i, j}) − ∆({j, k}) − ∆({i, k})−∆({i})−∆({j})−∆({k}) = C(S)−piθj −pjθk − piθk − piθi − pjθj − pkθk = C(S) − C(S) = 0.",
                "Now, assume for T S, ∆(T) = 0 if |T| > 2.",
                "Without loss of generality assume that σ to be the identity mapping.",
                "Now, ∆(S) = C(S) −   T S ∆(T) = C(S) −   i∈S   j∈S:j<i ∆({i, j}) −   i∈S ∆({i}) = C(S) −   i∈S   j∈S:j<i pjθi −   i∈S piθi = C(S) − C(S) = 0.",
                "This proves that ∆(S) = 0 if |S| > 2.",
                "Using the Shapley value formula now, SVi =   S⊆N:i∈S ∆(S) |S| = ∆({i}) + 1 2   j∈N:j=i ∆({i, j}) = piθi + 1 2 ¡  j<i ∆({i, j}) +   j>i ∆({i, j})¢ = piθi + 1 2 ¡  j<i pjθi +   j>i piθj¢= piθi + 1 2 ¡Li + Ri¢. 4.",
                "AXIOMATICCHARACTERIZATIONOF THE SHAPLEY VALUE In this section, we will define serveral axioms on fairness and characterize the Shapley value using them.",
                "For a given q ∈ Q, we will denote ψ(q) as the set of allocations from allocation rule ψ.",
                "Also, we will denote the cost share vector associated with an allocation rule (σ, t) as π and that with allocation rule (σ , t ) as π etc. 4.1 The Fairness Axioms We will define three types of fairness axioms: (i) related to efficiency, (ii) related to equity, and (iii) related to independence.",
                "Efficiency Axioms We define two types of efficiency axioms.",
                "One related to efficiency which states that an efficient ordering should be selected and the transfers of jobs should add up to zero (budget balance).",
                "Definition 1.",
                "An allocation rule ψ satisfies efficiency if for every q ∈ Q and (σ, t) ∈ ψ(q), (σ, t) is an efficient allocation. 234 The second axiom related to efficiency says that the allocation rule should not discriminate between two allocations which are equivalent to each other in terms of cost shares of jobs.",
                "Definition 2.",
                "An allocation rule ψ satisfies Pareto indifference if for every q ∈ Q, (σ, t) ∈ ψ(q), and (σ , t ) ∈ Σ(q), we have ¡πi = πi ∀ i ∈ N¢⇒ ¡(σ , t ) ∈ ψ(q)¢.",
                "An implication of Pareto indifference axiom and Lemma 2 is that for every efficient ordering there is some set of transfers of jobs such that it is part of an efficient rule and the cost share of a job in all these allocations are same.",
                "Equity Axioms How should the cost be shared between two jobs if the jobs have some kind of similarity between them?",
                "Equity axioms provide us with fairness properties which help us answer this question.",
                "We provide five such axioms.",
                "Some of these axioms (for example anonymity, equal treatment of equals) are standard in the literature, while some are new.",
                "We start with a well known equity axiom called anonymity.",
                "Denote ρ : N → N as a permutation of elements in N. Let ρ(σ, t) denote the allocation obtained by permuting elements in σ and t according to ρ.",
                "Similarly, let ρ(p, θ) denote the new list of (p, θ) obtained by permuting elements of p and θ according to ρ.",
                "Our first equity axiom states that allocation rules should be immune to such permutation of data.",
                "Definition 3.",
                "An allocation rule ψ satisfies anonymity if for all q ∈ Q, (σ, t) ∈ ψ(q) and every permutation ρ, we then ρ(σ, t) ∈ ψ(N, ρ(q)).",
                "The next equity axiom is classical in literature and says that two similar jobs should be compensated such that their cost shares are equal.",
                "This implies that if all the jobs are of same type, then jobs should equally share the total system cost.",
                "Definition 4.",
                "An allocation rule ψ satisfies equal treatment of equals (ETE) if for all q ∈ Q, (σ, t) ∈ ψ(q), i, j ∈ N, then ¡pi = pj; θi = θj¢⇒ ¡πi = πj¢.",
                "ETE directs us to share costs equally between jobs if they are of the same per unit waiting cost and processing time.",
                "But it is silent about the cost shares of two jobs i and j which satisfy θi pi = θj pj .",
                "We introduce a new axiom for this.",
                "If an efficient rule chooses σ such that σi < σj for some i, j ∈ N, then job i is inflicting a cost of piθj on job j and job j is inflicting zero cost on job i.",
                "Define for some γ ≥ 0, S(γ) = {i ∈ N : γi = γ}.",
                "In an efficient rule, the elements in S(γ) can be ordered in any manner (in |S(γ)|! ways).",
                "If i, j ∈ S(γ) then we have pjθi = piθj.",
                "Probability of σi < σj is 1 2 and so is the probability of σi > σj.",
                "The expected cost i inflicts on j is 1 2 piθj and j inflicts on i is 1 2 pjθi.",
                "Our next fairness axiom says that i and j should each be responsible for their own processing cost and this expected cost they inflict on each other.",
                "Arguing for every pair of jobs i, j ∈ S(γ), we establish a bound on the cost share of jobs in S(γ).",
                "We impose this as an equity axiom below.",
                "Definition 5.",
                "An allocation rule satisfies expected cost bound (ECB) if for all q ∈ Q, (σ, t) ∈ ψ(q) with π being the resulting cost share, for any γ ≥ 0, and for every i ∈ S(γ), we have πi ≥ piθi + 1 2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢.",
                "The central idea behind this axiom is that of expected cost inflicted.",
                "If an allocation rule chooses multiple allocations, we can assign equal probabilities of selecting one of the allocations.",
                "In that case, the expected cost inflicted by a job i on another job j in the allocation rule can be calculated.",
                "Our axiom says that the cost share of a job should be at least its own processing cost and the total expected cost it inflicts on others.",
                "Note that the above bound poses no constraints on how the costs are shared among different groups.",
                "Also observe that if S(γ) contains just one job, ECB says that job should at least bear its own processing cost.",
                "A direct consequence of ECB is the following lemma.",
                "Lemma 4.",
                "Let ψ be an efficient rule which satisfies ECB.",
                "For a q ∈ Q if S(γ) = N, then for any (σ, t) ∈ ψ(q) which gives a cost share of π, πi = piθi + 1 2 ¡Li + Ri¢∀ i ∈ N. Proof.",
                "From ECB, we get πi ≥ piθi+1 2 ¡Li+Ri¢∀ i ∈ N. Assume for contradiction that there exists j ∈ N such that πj > pjθj + 1 2 ¡Li + Ri¢.",
                "Using efficiency and the fact that £i∈N Li = £i∈N Ri, we get £i∈N πi = C(N) > £i∈N piθi + 1 2 £i∈N ¡Li + Ri¢ = C(N).",
                "This gives us a contradiction.",
                "Next, we introduce an axiom about sharing the transfer of a job between a set of jobs.",
                "In particular, if the last job quits the system, then the ordering need not change.",
                "But the transfer to the last job needs to be shared between the other jobs.",
                "This should be done in proportion to their processing times because every job influenced the last job based on its processing time.",
                "Definition 6.",
                "An allocation rule ψ satisfies proportionate responsibility of p (PRp) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = |N|, q = (N \\ {k}, p , θ ) ∈ Q, such that for all i ∈ N\\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk pi £j=k pj .",
                "An analogous fairness axiom results if we remove the job from the beginning of the queue.",
                "Since the presence of the first job influenced each job depending on their θ values, its transfer needs to be shared in proportion to θ values.",
                "Definition 7.",
                "An allocation rule ψ satisfies proportionate responsibility of θ (PRθ) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = 1, q = (N \\{k}, p , θ ) ∈ Q, such that for all i ∈ N \\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk θi £j=k θj .",
                "The proportionate responsibility axioms are generalizations of equal responsibility axioms introduced by Maniquet [15]. 235 Independence Axioms The waiting cost of a job does not depend on the per unit waiting cost of its preceding jobs.",
                "Similarly, the waiting cost inflicted by a job to its following jobs is independent of the processing times of the following jobs.",
                "These independence properties should be carried over to the cost sharing rules.",
                "This gives us two independence axioms.",
                "Definition 8.",
                "An allocation rule ψ satisfies independence of preceding jobs θ (IPJθ) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk < γk, pk = pk, then for all j ∈ N such that σj > σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ).",
                "Definition 9.",
                "An allocation rule ψ satisfies independence of following jobs p (IFJp) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk > γk, θk = θk, then for all j ∈ N such that σj < σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ). 4.2 The Characterization Results Having stated the fairness axioms, we propose three different ways to characterize the Shapley value rule using these axioms.",
                "All our characterizations involve efficiency and ECB.",
                "But if we have IPJθ, we either need IFJp or PRp.",
                "Similarly if we have IFJp, we either need IPJθ or PRθ.",
                "Proposition 1.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and IFJp is a rule implied by the Shapley value rule.",
                "Proof.",
                "Define for any i, j ∈ N, θi j = γipj and pi j = θj γi .",
                "Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider the following q = (N, p , θ ) corresponding to job i with pj = pj if j ≤ i and pj = pi j if j > i, θj = θi j if j < i and θj = θj if j ≥ i.",
                "Observe that all jobs have the same γ: γi.",
                "By Lemma 2 and efficiency, (σ, t ) ∈ ψ(q ) for some set of transfers t .",
                "Using Lemma 4, we get cost share of i from (σ, t ) as πi = piθi + 1 2 ¡Li + Ri¢.",
                "Now, for any j < i, if we change θj to θj without changing processing time, the new γ of j is γj ≥ γi.",
                "Applying IPJθ, the cost share of job i should not change.",
                "Similarly, for any job j > i, if we change pj to pj without changing θj, the new γ of j is γj ≤ γi.",
                "Applying IFJp, the cost share of job i should not change.",
                "Applying this procedure for every j < i with IPJθ and for every j > i with IFJp, we reach q = (N, p, θ) and the payoff of i does not change from πi.",
                "Using this argument for every i ∈ N and using the expression for the Shapley value in Lemma 3, we get the Shapley value rule.",
                "It is possible to replace one of the independence axioms with an equity axiom on sharing the transfer of a job.",
                "This is shown in Propositions 2 and 3.",
                "Proposition 2.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and PRp is a rule implied by the Shapley value rule.",
                "Proof.",
                "As in the proof of Proposition 1, define θi j = γipj ∀ i, j ∈ N. Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider a queue with jobs in set K = {1, . . . , i, i + 1}, where i < n. Define q = (K, p, θ ), where θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ is an efficient ordering for q .",
                "By ECB and Lemma 4 the cost share of job i + 1 in any allocation rule in ψ must be πi+1 = pi+1θi+1 + 1 2 ¡£j<i+1 pjθi+1¢.",
                "Now, consider q = (K, p, θ ) such that θj = θi j ∀ j ≤ i and θi+1 = θi+1. σ remains an efficient ordering in q and by IPJθ the cost share of i + 1 remains πi+1.",
                "In q = (K \\ {i + 1}, p, θ ), we can calculate the cost share of job i using ECB and Lemma 4 as πi = piθi + 1 2 £j<i pjθi.",
                "So, using PRp we get the new cost share of job i in q as πi = πi + ti+1 pi j<i+1 pj = piθi + 1 2 ¡£j<i pjθi + piθi+1¢.",
                "Now, we can set K = K ∪ {i + 2}.",
                "As before, we can find cost share of i + 2 in this queue as πi+2 = pi+2θi+2 + 1 2 ¡£j<i+2 pjθi+2¢.",
                "Using PRp we get the new cost share of job i in the new queue as πi = piθi + 1 2 ¡£j<i pjθi + piθi+1 + piθi+2¢.",
                "This process can be repeated till we add job n at which point cost share of i is piθi + 1 2 ¡£j<i pjθi + £j>i piθj¢.",
                "Then, we can adjust the θ of preceding jobs of i to their original value and applying IPJθ, the payoffs of jobs i through n will not change.",
                "This gives us the Shapley values of jobs i through n. Setting i = 1, we get cost shares of all the jobs from ψ as the Shapley value.",
                "Proposition 3.",
                "Any efficient rule ψ that satisfies ECB, IFJp, and PRθ is a rule implied by the Shapley value rule.",
                "Proof.",
                "The proof mirrors the proof of Proposition 2.",
                "We provide a short sketch.",
                "Analogous to the proof of Proposition 2, θs are kept equal to original data and processing times are initialized to pi+1 j .",
                "This allows us to use IFJp.",
                "Also, contrast to Proposition 2, we consider K = {i, i + 1, . . . , n} and repeatedly add jobs to the beginning of the queue maintaining the same efficient ordering.",
                "So, we add the cost components of preceding jobs to the cost share of jobs in each iteration and converge to the Shapley value rule.",
                "The next proposition shows that the Shapley value rule satisfies all the fairness axioms discussed.",
                "Proposition 4.",
                "The Shapley value rule satisfies efficiency, pareto indifference, anonymity, ETE, ECB, IPJθ, IFJp, PRp, and PRθ.",
                "Proof.",
                "The Shapley value rule chooses an efficient ordering and by definition the payments add upto zero.",
                "So, it satisfies efficiency.",
                "The Shapley value assigns same cost share to a job irrespective of the efficient ordering chosen.",
                "So, it is pareto indifferent.",
                "The Shapley value is anonymous because the particular index of a job does not effect his ordering or cost share.",
                "For ETE, consider two jobs i, j ∈ N such that pi = pj and θi = θj.",
                "Without loss of generality assume the efficient ordering to be 1, . . . , i, . . . , j, . . . , n. Now, the Shapley value of job i is 236 SVi = piθi + 1 2 ¡Li + Ri¢(From Lemma 3) = pjθj + 1 2 ¡Lj + Rj¢− 1 2 ¡Li − Lj + Ri − Rj¢ = SVj − 1 2 ¡   i<k≤j piθk −   i≤k<j pkθi¢ = SVj − 1 2   i<k≤j (piθk − pkθi) (Using pi = pj and θi = θj) = SVj (Using θk pk = θi pi for all i ≤ k ≤ j).",
                "The Shapley value satisfies ECB by its expression in Lemma 3.",
                "Consider any job i, in an efficient ordering σ, if we increase the value of γj for some j = i such that σj > σi, then the set Pi ( preceding jobs) does not change in the new efficient ordering.",
                "If γj is changed such that pj remains the same, then the expression £j∈Pi θipj is unchanged.",
                "If (p, θ) values of no other jobs are changed, then the Shapley value is unchanged by increasing γj for some j ∈ Pi while keeping pj unchanged.",
                "Thus, the Shapley value rule satisfies IPJθ.",
                "An analogous argument shows that the Shapley value rule satisfies IFJp.",
                "For PRp, assume without loss of generality that jobs are ordered 1, . . . , n in an efficient ordering.",
                "Denote the transfer of job i = n due to the Shapley value with set of jobs N and set of jobs N \\ {n} as ti and ti respectively.",
                "Transfer of last job is tn = 1 2 θn £j<n pj.",
                "Now, ti = 1 2 ¡θi   j<i pj − pi   j>i θj¢ = 1 2 ¡θi   j<i pj − pi   j>i:j=n θj¢− 1 2 piθn = ti − 1 2 θn   j<n pj pi £j<n pj = ti − tn pi £j<n pj .",
                "A similar argument shows that the Shapley value rule satisfies PRθ.",
                "These series of propositions lead us to our main result.",
                "Theorem 1.",
                "Let ψ be an allocation rule.",
                "The following statements are equivalent: 1) For each q ∈ Q, ψ(q) selects all the allocation assigning jobs cost shares implied by the Shapley value. 2) ψ satisfies efficiency, ECB, IFJp, and IPJθ. 3) ψ satisfies efficiency, ECB, IFJp, and PRθ. 4) ψ satisfies efficiency, ECB, PRp, and IPJθ.",
                "Proof.",
                "The proof follows from Propositions 1, 2, 3, and 4. 5.",
                "DISCUSSIONS 5.1 A Reasonable Class of Cost Sharing Mechanisms In this section, we will define a reasonable class of cost sharing mechanisms.",
                "We will show how these reasonable mechanisms lead to the Shapley value mechanism.",
                "Definition 10.",
                "An allocation rule ψ is reasonable if for all q ∈ Q and (σ, t) ∈ ψ(q) we have for all i ∈ N, ti = α ¡θi   j∈Pi(σ) pj − pi   j∈Fi(σ) θj¢∀ i ∈ N, where 0 ≤ α ≤ 1.",
                "The reasonable cost sharing mechanism says that every job should be paid a constant fraction of the difference between the waiting cost he incurs and the waiting cost he inflicts on other jobs.",
                "If α = 0, then every job bears its own cost.",
                "If α = 1, then every job gets compensated for its waiting cost but compensates others for the cost he inflicts on others.",
                "The Shapley value rule comes as a result of ETE as shown in the following proposition.",
                "Proposition 5.",
                "Any efficient and reasonable allocation rule ψ that satisfies ETE is a rule implied by the Shapley value rule.",
                "Proof.",
                "Consider a q ∈ Q in which pi = pj and θi = θj.",
                "Let (σ, t) ∈ ψ(q) and π be the resulting cost shares.",
                "From ETE, we get, πi = πj ⇒ ci(σ) − ti = cj(σ) − tj ⇒ piθi + (1 − α)Li + αRi = pjθj + (1 − α)Lj + αRj (Since ψ is efficient and reasonable) ⇒ (1 − α)(Li − Lj) = α(Rj − Ri) (Using pi = pj, θi = θj) ⇒ 1 − α = α (Using Li − Lj = Rj − Ri = 0) ⇒ α = 1 2 .",
                "This gives us the Shapley value rule by Lemma 3. 5.2 Results on Envy Chun [2] discusses a fariness condition called no-envy for the case when processing times of all jobs are unity.",
                "Definition 11.",
                "An allocation rule satisfies no-envy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tj, where π is the cost share from allocation rule (σ, t) and σij is the ordering obtaining by swapping i and j.",
                "From the result in [2], the Shapley value rule does not satisfy no-envy in our model also.",
                "To overcome this, Chun [2] introduces the notion of adjusted no-envy, which he shows is satisfied in the Shapley value rule when processing times of all jobs are unity.",
                "Here, we show that adjusted envy continues to hold in the Shapley value rule in our model (when processing times need not be unity).",
                "As before denote σij be an ordering where the position of i and j is swapped from an ordering σ.",
                "For adjusted noenvy, if (σ, t) is an allocation for some q ∈ Q, let tij be the 237 transfer of job i when the transfer of i is calculated with respect to ordering σij .",
                "Observe that an allocation may not allow for calculation of tij .",
                "For example, if ψ is efficient, then tij cannot be calculated if σij is also not efficient.",
                "For simplicity, we state the definition of adjusted no-envy to apply to all such rules.",
                "Definition 12.",
                "An allocation rule satisfies adjusted noenvy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tij i .",
                "Proposition 6.",
                "The Shapley value rule satisfies adjusted no-envy.",
                "Proof.",
                "Without loss of generality, assume efficient ordering of jobs is: 1, . . . , n. Consider two jobs i and i + k. From Lemma 3, SVi = piθi + 1 2 ¡  j<i θipj +   j>i θjpi¢.",
                "Let ˆπi be the cost share of i due to adjusted transfer tii+k i in the ordering σii+k . ˆπi = ci(σii+k ) − tii+k i = piθi + 1 2 ¡  j<i θipj + θipi+k +   i<j<i+k θipj +   j>i θjpi − θi+kpi −   i<j<i+k θjpi¢ = SVi + 1 2   i<j≤i+k ¡θipj − θjpi¢ ≥ SVi (Using the fact that θi pi ≥ θj pj for i < j). 6.",
                "CONCLUSION We studied the problem of sharing costs for a job scheduling problem on a single server, when jobs have processing times and unit time waiting costs.",
                "We took a cooperative game theory approach and show that the famous the Shapley value rule satisfies many nice fairness properties.",
                "We characterized the Shapley value rule using different intuitive fairness axioms.",
                "In future, we plan to further simplify some of the fairness axioms.",
                "Some initial simplifications already appear in [16], where we provide an alternative axiom to ECB and also discuss the implication of transfers between jobs (in stead of transfers from jobs to a central server).",
                "We also plan to look at cost sharing mechanisms other than the Shapley value.",
                "Investigating the strategic power of jobs in such mechanisms is another line of future research. 7.",
                "REFERENCES [1] Youngsub Chun.",
                "A Note on Maniquets Characterization of the Shapley Value in Queueing Problems.",
                "Working Paper, Rochester University, 2004. [2] Youngsub Chun.",
                "No-envy in Queuing Problems.",
                "Working Paper, Rochester University, 2004. [3] Imma Curiel, Herbert Hamers, and Flip Klijn.",
                "Sequencing Games: A Survey.",
                "In Peter Borm and Hans Peters, editors, Chapter in Game Theory.",
                "Theory and Decision Library, Kulwer Academic Publishers, 2002. [4] Imma Curiel, Giorgio Pederzoli, and Stef Tijs.",
                "Sequencing Games.",
                "European Journal of Operational Research, 40:344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs, and Bart Veltman.",
                "Sequencing and Cooperation.",
                "Operations Research, 42(3):566-568, May-June 1994. [6] Nikhil R. Devanur, Milena Mihail, and Vijay V. Vazirani.",
                "Strategyproof Cost-sharing Mechanisms for Set Cover and Facility Location Games.",
                "In Proceedings of Fourth Annual ACM Conferece on Electronic Commerce, 2003. [7] Robert J. Dolan.",
                "Incentive Mechanisms for Priority Queueing Problems.",
                "Bell Journal of Economics, 9:421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou, and Scott Shenker.",
                "Sharing the Cost of Multicast Transmissions.",
                "In Proceedings of Thirty-Second Annual ACM Symposium on Theory of Computing, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs, and Peter Borm.",
                "The Split Core for Sequencing Games.",
                "Games and Economic Behavior, 15:165-176, 1996. [10] John C. Harsanyi.",
                "Contributions to Theory of Games IV, chapter A Bargaining Model for Cooperative n-person Games.",
                "Princeton University Press, 1959.",
                "Editors: A. W. Tucker, R. D. Luce. [11] Kamal Jain and Vijay Vazirani.",
                "Applications of Approximate Algorithms to Cooperative Games.",
                "In Proceedings of 33rd Symposium on Theory of Computing (STOC 01), 2001. [12] Kamal Jain and Vijay Vazirani.",
                "Equitable Cost Allocations via Primal-Dual Type Algorithms.",
                "In Proceedings of 34th Symposium on Theory of Computing (STOC 02), 2002. [13] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without a Completely Specified Initial Order.",
                "Report in Statistics and Operations Research, pages 1-17, 2002.",
                "Report 02-04. [14] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without Initial Order.",
                "Working Paper, Universitat Aut´onoma de Barcelona, July 2004. [15] Franois Maniquet.",
                "A Characterization of the Shapley Value in Queueing Problems.",
                "Journal of Economic Theory, 109:90-103, 2003. [16] Debasis Mishra and Bharath Rangarajan.",
                "Cost sharing in a job scheduling problem.",
                "Working Paper, CORE, 2005. [17] Manipushpak Mitra.",
                "Essays on First Best Implementable Incentive Problems.",
                "Ph.D. Thesis, Indian Statistical Institute, New Delhi, 2000. [18] Manipushpak Mitra.",
                "Mechanism design in queueing problems.",
                "Economic Theory, 17(2):277-305, 2001. [19] Manipushpak Mitra.",
                "Achieving the first best in sequencing problems.",
                "Review of Economic Design, 7:75-91, 2002. [20] Herv´e Moulin.",
                "Handbook of Social Choice and Welfare, chapter Axiomatic Cost and Surplus Sharing.",
                "North-Holland, 2002.",
                "Publishers: Arrow, Sen, Suzumura. [21] Herv´e Moulin.",
                "On Scheduling Fees to Prevent 238 Merging, Splitting and Transferring of Jobs.",
                "Working Paper, Rice University, 2004. [22] Herv´e Moulin.",
                "Split-proof Probabilistic Scheduling.",
                "Working Paper, Rice University, 2004. [23] Herv´e Moulin and Rakesh Vohra.",
                "Characterization of Additive Cost Sharing Methods.",
                "Economic Letters, 80:399-407, 2003. [24] Martin P´al and ´Eva Tardos.",
                "Group Strategyproof Mechanisms via Primal-Dual Algorithms.",
                "In Proceedings of the 44th Annual IEEE Symposium on the Foundations of Computer Science (FOCS 03), 2003. [25] Lloyd S. Shapley.",
                "Contributions to the Theory of Games II, chapter A Value for n-person Games, pages 307-317.",
                "Annals of Mathematics Studies, 1953.",
                "Ediors: H. W. Kuhn, A. W. Tucker. [26] Wayne E. Smith.",
                "Various Optimizers for Single-Stage Production.",
                "Naval Research Logistics Quarterly, 3:59-66, 1956. [27] Jeroen Suijs.",
                "On incentive compatibility and budget balancedness in public decision making.",
                "Economic Design, 2, 2002. 239"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Los trabajos comparten sus costos mediante la compensación utilizando \"transferencia monetaria\" s.",
                "Para compensar la espera por empleos, se permiten \"transferencia monetaria\" a los trabajos."
            ],
            "translated_text": "",
            "candidates": [
                "transferencia monetaria",
                "transferencia monetaria",
                "transferencia monetaria",
                "transferencia monetaria"
            ],
            "error": []
        },
        "fairness axiom": {
            "translated_key": "axioma de justicia",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Cost Sharing in a Job Scheduling Problem Using the Shapley Value Debasis Mishra Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium mishra@core.ucl.ac.be Bharath Rangarajan Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium rangarajan@core.ucl.ac.be ABSTRACT A set of jobs need to be served by a single server which can serve only one job at a time.",
                "Jobs have processing times and incur waiting costs (linear in their waiting time).",
                "The jobs share their costs through compensation using monetary transfers.",
                "We characterize the Shapley value rule for this model using fairness axioms.",
                "Our axioms include a bound on the cost share of jobs in a group, efficiency, and some independence properties on the the cost share of a job.",
                "Categories and Subject Descriptors J.4 [Social and Behaviorial Sciences]: Economics General Terms Economics, Theory 1.",
                "INTRODUCTION A set of jobs need to be served by a server.",
                "The server can process only one job at a time.",
                "Each job has a finite processing time and a per unit time waiting cost.",
                "Efficient ordering of this queue directs us to serve the jobs in increasing order of the ratio of per unit time waiting cost and processing time.",
                "To compensate for waiting by jobs, monetary transfers to jobs are allowed.",
                "How should the jobs share the cost equitably amongst themselves (through transfers)?",
                "The problem of fair division of costs among agents in a queue has many practical applications.",
                "For example, computer programs are regularly scheduled on servers, data are scheduled to be transmitted over networks, jobs are scheduled in shop-floor on machines, and queues appear in many public services (post offices, banks).",
                "Study of queueing problems has attracted economists for a long time [7, 17].",
                "Cost sharing is a fundamental problem in many settings on the Internet.",
                "Internet can be seen as a common resource shared by many users and the cost incured by using the resource needs to be shared in an equitable manner.",
                "The current surge in cost sharing literature from computer scientists validate this claim [8, 11, 12, 6, 24].",
                "Internet has many settings in which our model of job scheduling appears and the agents waiting in a queue incur costs (jobs scheduled on servers, queries answered from a database, data scheduled to be transmitted over a fixed bandwidth network etc.).",
                "We hope that our analysis will give new insights on cost sharing problems of this nature.",
                "Recently, there has been increased interest in cost sharing methods with submodular cost functions [11, 12, 6, 24].",
                "While many settings do have submodular cost functions (for example, multi-cast transmission games [8]), while the cost function of our game is supermodular.",
                "Also, such literature typically does not assume budget-balance (transfers adding up to zero), while it is an inherent feature of our model.",
                "A recent paper by Maniquet [15] is the closest to our model and is the motivation behind our work 1 .",
                "Maniquet [15] studies a model where he assumes all processing times are unity.",
                "For such a model, he characterizes the Shapley value rule using classical fairness axioms.",
                "Chun [1] interprets the worth of a coalition of jobs in a different manner for the same model and derives a reverse rule.",
                "Chun characterizes this rule using similar fairness axioms.",
                "Chun [2] also studies the envy properties of these rules.",
                "Moulin [22, 21] studies the queueing problem from a strategic point view when per unit waiting costs are unity.",
                "Moulin introduces new concepts in the queueing settings such as splitting and merging of jobs, and ways to prevent them.",
                "Another stream of literature is on sequencing games, first introduced by Curiel et al. [4].",
                "For a detailed survey, refer to Curiel et al. [3].",
                "Curiel et al. [4] defined sequencing games similar to our model, but in which an initial ordering of jobs is given.",
                "Besides, their notion of worth of a coalition is very different from the notions studied in Maniquet [15] and Chun [1] (these are the notions used in our work too).",
                "The particular notion of the worth of a coalition makes the sequencing game of Curiel et al. [4] convex, whereas our game is not convex and does not assume the presence of any initial order.",
                "In summary, the focus of this stream of 1 The authors thank Fran¸cois Maniquet for several fruitful discussions. 232 research is how to share the savings in costs from the initial ordering to the optimal ordering amongst jobs (also see Hamers et al. [9], Curiel et al. [5]).",
                "Recently, Klijn and S´anchez [13, 14] considered sequencing games without any initial ordering of jobs.",
                "They take two approaches to define the worth of coalitions.",
                "One of their approaches, called the tail game, is related to the reverse rule of Chun [1].",
                "In the tail game, jobs in a coalition are served after the jobs not in the coalition are served.",
                "Klijn and S´anchez [14] showed that the tail game is balanced.",
                "Further, they provide expressions for the Shapley value in tail game in terms of marginal vectors and reversed marginal vectors.",
                "We provide a simpler expression of the Shapley value in the tail game, generalizing the result in Chun [1].",
                "Klijn and S´anchez [13] study the core of this game in detail.",
                "Strategic aspects of queueing problems have also been researched.",
                "Mitra [19] studies the first best implementation in queueing models with generic cost functions.",
                "First best implementation means that there exists an efficient mechanism in which jobs in the queue have a dominant strategy to reveal their true types and their transfers add up to zero.",
                "Suijs [27] shows that if waiting costs of jobs are linear then first best implementation is possible.",
                "Mitra [19] shows that among a more general class of queueing problems first best implementation is possible if and only if the cost is linear.",
                "For another queueing model, Mitra [18] shows that first best implementation is possible if and only if the cost function satisfies a combinatorial property and an independence property.",
                "Moulin [22, 21] studies strategic concepts such as splitting and merging in queueing problems with unit per unit waiting costs.",
                "The general cost sharing literature is vast and has a long history.",
                "For a good survey, we refer to [20].",
                "From the seminal work of Shapley [25] to recent works on cost sharing in multi-cast transmission and optimization problems [8, 6, 23] this area has attracted economists, computer scientists, and operations researchers. 1.1 Our Contribution Ours is the first model which considers cost sharing when both processing time and per unit waiting cost of jobs are present.",
                "We take a cooperative game theory approach and apply the classical Shapley value rule to the problem.",
                "We show that the Shapley value rule satisfies many intuitive fairness axioms.",
                "Due to two dimensional nature of our model and one dimensional nature of Maniquets model [15], his axioms are insufficient to characterize the Shapley value in our setting.",
                "We introduce axioms such as independece of preceding jobs unit waiting cost and independence of following jobs processing time.",
                "A key axiom that we introduce gives us a bound on cost share of a job in a group of jobs which have the same ratio of unit time waiting cost and processing time (these jobs can be ordered in any manner between themseleves in an efficient ordering).",
                "If such a group consists of just one job, then the axiom says that such a job should at least pay his own processing cost (i.e., the cost it would have incurred if it was the only job in the queue).",
                "If there are multiple jobs in such a group, the probability of any two jobs from such a group inflicting costs on each other is same (1 2 ) in an efficient ordering.",
                "Depending on the ordering selected, one job inflicts cost on the other.",
                "Our <br>fairness axiom</br> says that each job should at least bear such expected costs.",
                "We characterize the Shapley value rule using these fairness axioms.",
                "We also extend the envy results in [2] to our setting and discuss a class of reasonable cost sharing mechanisms. 2.",
                "THE MODEL There are n jobs that need to be served by one server which can process only one job at a time.",
                "The set of jobs are denoted as N = {1, . . . , n}. σ : N → N is an ordering of jobs in N and σi denotes the position of job i in the ordering σ.",
                "Given an ordering σ, define Fi(σ) = {j ∈ N : σi < σj} and Pi(σ) = {j ∈ N : σi > σj}.",
                "Every job i is identified by two parameters: (pi, θi). pi is the processing time and θi is the cost per unit waiting time of job i.",
                "Thus, a queueing problem is defined by a list q = (N, p, θ) ∈ Q, where Q is the set of all possible lists.",
                "We will denote γi = θi pi .",
                "Given an ordering of jobs σ, the cost incurred by job i is given by ci(σ) = piθi + θi   j∈Pi(σ) pj.",
                "The total cost incurred by all jobs due to an ordering σ can be written in two ways: (i) by summing the cost incurred by every job and (ii) by summing the costs inflicted by a job on other jobs with their own processing cost.",
                "C(N, σ) =   i∈N ci(σ) =   i∈N piθi +   i∈N ¡θi   j∈Pi(σ) pj¢. =   i∈N piθi +   i∈N ¡pi   j∈Fi(σ) θj¢.",
                "An efficient ordering σ∗ is the one which minimizes the total cost incurred by all jobs.",
                "So, C(N, σ∗ ) ≤ C(N, σ) ∀ σ ∈ Σ.",
                "To achieve notational simplicity, we will write the total cost in an efficient ordering of jobs from N as C(N) whenever it is not confusing.",
                "Sometimes, we will deal with only a subset of jobs S ⊆ N. The ordering σ will then be defined on jobs in S only and we will write the total cost from an efficient ordering of jobs in S as C(S).",
                "The following lemma shows that jobs are ordered in decreasing γ in an efficient ordering.",
                "This is also known as the weighted shortest processing time rule, first introduced by Smith [26].",
                "Lemma 1.",
                "For any S ⊆ N, let σ∗ be an efficient ordering of jobs in S. For every i = j, i, j ∈ S, if σ∗ i > σ∗ j , then γi ≤ γj.",
                "Proof.",
                "Assume for contradiction that the statment of the lemma is not true.",
                "This means, we can find two consecutive jobs i, j ∈ S (σ∗ i = σ∗ j + 1) such that γi > γj.",
                "Define a new ordering σ by interchanging i and j in σ∗ .",
                "The costs to jobs in S \\ {i, j} is not changed from σ∗ to σ.",
                "The difference between total costs in σ∗ and σ is given by, C(S, σ) − C(S, σ∗ ) = θjpi − θipj.",
                "From efficiency we get θjpi − θipj ≥ 0.",
                "This gives us γj ≥ γi, which is a contradiction.",
                "An allocation for q = (N, p, θ) ∈ Q has two components: an ordering σ and a transfer ti for every job i ∈ N. ti denotes the payment received by job i.",
                "Given a transfer ti and an ordering σ, the cost share of job i is defined as, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. 233 An allocation (σ, t) is efficient for q = (N, p, θ) whenever σ is an efficient ordering and £i∈N ti = 0.",
                "The set of efficient orderings of q is denoted as Σ∗ (q) and σ∗ (q) will be used to refer to a typical element of the set.",
                "The following straightforward lemma says that for two different efficient orderings, the cost share in one efficient allocation is possible to achieve in the other by appropriately modifying the transfers.",
                "Lemma 2.",
                "Let (σ, t) be an efficient allocation and π be the vector of cost shares of jobs from this allocation.",
                "If σ∗ = σ be an efficient ordering and t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, then (σ∗ , t∗ ) is also an efficient allocation.",
                "Proof.",
                "Since (σ, t) is efficient, £i∈N ti = 0.",
                "This gives £i∈N πi = C(N).",
                "Since σ∗ is an efficient ordering, £i∈N ci(σ∗ ) = C(N).",
                "This means, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0.",
                "So, (σ∗ , t∗ ) is an efficient allocation.",
                "Depending on the transfers, the cost shares in different efficient allocations may differ.",
                "An allocation rule ψ associates with every q ∈ Q a non-empty subset ψ(q) of allocations. 3.",
                "COST SHARING USING THE SHAPLEY VALUE In this section, we define the coalitional cost of this game and analyze the solution proposed by the Shapley value.",
                "Given a queue q ∈ Q, the cost of a coalition of S ⊆ N jobs in the queue is defined as the cost incurred by jobs in S if these are the only jobs served in the queue using an efficient ordering.",
                "Formally, the cost of a coalition S ⊆ N is, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, where σ∗ = σ∗ (S) is an efficient ordering considering jobs from S only.",
                "The worth of a coalition of S jobs is just −C(S).",
                "Maniquet [15] observes another equivalent way to define the worth of a coalition is using the dual function of the cost function C(·).",
                "Other interesting ways to define the worth of a coalition in such games is discussed by Chun [1], who assume that a coalition of jobs are served after the jobs not in the coalition are served.",
                "The Shapley value (or cost share) of a job i is defined as, SVi =   S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) The Shapley value allocation rule says that jobs are ordered using an efficient ordering and transfers are assigned to jobs such that the cost share of job i is given by Equation 1.",
                "Lemma 3.",
                "Let σ∗ be an efficient ordering of jobs in set N. For all i ∈ N, the Shapley value is given by, SVi = piθi + 1 2 ¡Li + Ri¢, where Li = θi £j∈Pi(σ∗) pj and Ri = pi £j∈Fi(σ∗) θj.",
                "Proof.",
                "Another way to write the Shapley value formula is the following [10], SVi =   S⊆N:i∈S ∆(S) |S| , where ∆(S) = C(S) if |S| = 1 and ∆(S) = C(S)−£T S ∆(T).",
                "This gives ∆({i}) = C({i}) = piθi ∀i ∈ N. For any i, j ∈ N with i = j, we have ∆({i, j}) = C({i, j}) − C({i}) − C({j}) = min(piθi + pjθj + pjθi, piθi + pjθj + piθj) − piθi − pjθj = min(pjθi, piθj).",
                "We will show by induction that ∆(S) = 0 if |S| > 2.",
                "For |S| = 3, let S = {i, j, k}.",
                "Without loss of generality, assume θi pi ≥ θj pj ≥ θk pk .",
                "So, ∆(S) = C(S) − ∆({i, j}) − ∆({j, k}) − ∆({i, k})−∆({i})−∆({j})−∆({k}) = C(S)−piθj −pjθk − piθk − piθi − pjθj − pkθk = C(S) − C(S) = 0.",
                "Now, assume for T S, ∆(T) = 0 if |T| > 2.",
                "Without loss of generality assume that σ to be the identity mapping.",
                "Now, ∆(S) = C(S) −   T S ∆(T) = C(S) −   i∈S   j∈S:j<i ∆({i, j}) −   i∈S ∆({i}) = C(S) −   i∈S   j∈S:j<i pjθi −   i∈S piθi = C(S) − C(S) = 0.",
                "This proves that ∆(S) = 0 if |S| > 2.",
                "Using the Shapley value formula now, SVi =   S⊆N:i∈S ∆(S) |S| = ∆({i}) + 1 2   j∈N:j=i ∆({i, j}) = piθi + 1 2 ¡  j<i ∆({i, j}) +   j>i ∆({i, j})¢ = piθi + 1 2 ¡  j<i pjθi +   j>i piθj¢= piθi + 1 2 ¡Li + Ri¢. 4.",
                "AXIOMATICCHARACTERIZATIONOF THE SHAPLEY VALUE In this section, we will define serveral axioms on fairness and characterize the Shapley value using them.",
                "For a given q ∈ Q, we will denote ψ(q) as the set of allocations from allocation rule ψ.",
                "Also, we will denote the cost share vector associated with an allocation rule (σ, t) as π and that with allocation rule (σ , t ) as π etc. 4.1 The Fairness Axioms We will define three types of fairness axioms: (i) related to efficiency, (ii) related to equity, and (iii) related to independence.",
                "Efficiency Axioms We define two types of efficiency axioms.",
                "One related to efficiency which states that an efficient ordering should be selected and the transfers of jobs should add up to zero (budget balance).",
                "Definition 1.",
                "An allocation rule ψ satisfies efficiency if for every q ∈ Q and (σ, t) ∈ ψ(q), (σ, t) is an efficient allocation. 234 The second axiom related to efficiency says that the allocation rule should not discriminate between two allocations which are equivalent to each other in terms of cost shares of jobs.",
                "Definition 2.",
                "An allocation rule ψ satisfies Pareto indifference if for every q ∈ Q, (σ, t) ∈ ψ(q), and (σ , t ) ∈ Σ(q), we have ¡πi = πi ∀ i ∈ N¢⇒ ¡(σ , t ) ∈ ψ(q)¢.",
                "An implication of Pareto indifference axiom and Lemma 2 is that for every efficient ordering there is some set of transfers of jobs such that it is part of an efficient rule and the cost share of a job in all these allocations are same.",
                "Equity Axioms How should the cost be shared between two jobs if the jobs have some kind of similarity between them?",
                "Equity axioms provide us with fairness properties which help us answer this question.",
                "We provide five such axioms.",
                "Some of these axioms (for example anonymity, equal treatment of equals) are standard in the literature, while some are new.",
                "We start with a well known equity axiom called anonymity.",
                "Denote ρ : N → N as a permutation of elements in N. Let ρ(σ, t) denote the allocation obtained by permuting elements in σ and t according to ρ.",
                "Similarly, let ρ(p, θ) denote the new list of (p, θ) obtained by permuting elements of p and θ according to ρ.",
                "Our first equity axiom states that allocation rules should be immune to such permutation of data.",
                "Definition 3.",
                "An allocation rule ψ satisfies anonymity if for all q ∈ Q, (σ, t) ∈ ψ(q) and every permutation ρ, we then ρ(σ, t) ∈ ψ(N, ρ(q)).",
                "The next equity axiom is classical in literature and says that two similar jobs should be compensated such that their cost shares are equal.",
                "This implies that if all the jobs are of same type, then jobs should equally share the total system cost.",
                "Definition 4.",
                "An allocation rule ψ satisfies equal treatment of equals (ETE) if for all q ∈ Q, (σ, t) ∈ ψ(q), i, j ∈ N, then ¡pi = pj; θi = θj¢⇒ ¡πi = πj¢.",
                "ETE directs us to share costs equally between jobs if they are of the same per unit waiting cost and processing time.",
                "But it is silent about the cost shares of two jobs i and j which satisfy θi pi = θj pj .",
                "We introduce a new axiom for this.",
                "If an efficient rule chooses σ such that σi < σj for some i, j ∈ N, then job i is inflicting a cost of piθj on job j and job j is inflicting zero cost on job i.",
                "Define for some γ ≥ 0, S(γ) = {i ∈ N : γi = γ}.",
                "In an efficient rule, the elements in S(γ) can be ordered in any manner (in |S(γ)|! ways).",
                "If i, j ∈ S(γ) then we have pjθi = piθj.",
                "Probability of σi < σj is 1 2 and so is the probability of σi > σj.",
                "The expected cost i inflicts on j is 1 2 piθj and j inflicts on i is 1 2 pjθi.",
                "Our next <br>fairness axiom</br> says that i and j should each be responsible for their own processing cost and this expected cost they inflict on each other.",
                "Arguing for every pair of jobs i, j ∈ S(γ), we establish a bound on the cost share of jobs in S(γ).",
                "We impose this as an equity axiom below.",
                "Definition 5.",
                "An allocation rule satisfies expected cost bound (ECB) if for all q ∈ Q, (σ, t) ∈ ψ(q) with π being the resulting cost share, for any γ ≥ 0, and for every i ∈ S(γ), we have πi ≥ piθi + 1 2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢.",
                "The central idea behind this axiom is that of expected cost inflicted.",
                "If an allocation rule chooses multiple allocations, we can assign equal probabilities of selecting one of the allocations.",
                "In that case, the expected cost inflicted by a job i on another job j in the allocation rule can be calculated.",
                "Our axiom says that the cost share of a job should be at least its own processing cost and the total expected cost it inflicts on others.",
                "Note that the above bound poses no constraints on how the costs are shared among different groups.",
                "Also observe that if S(γ) contains just one job, ECB says that job should at least bear its own processing cost.",
                "A direct consequence of ECB is the following lemma.",
                "Lemma 4.",
                "Let ψ be an efficient rule which satisfies ECB.",
                "For a q ∈ Q if S(γ) = N, then for any (σ, t) ∈ ψ(q) which gives a cost share of π, πi = piθi + 1 2 ¡Li + Ri¢∀ i ∈ N. Proof.",
                "From ECB, we get πi ≥ piθi+1 2 ¡Li+Ri¢∀ i ∈ N. Assume for contradiction that there exists j ∈ N such that πj > pjθj + 1 2 ¡Li + Ri¢.",
                "Using efficiency and the fact that £i∈N Li = £i∈N Ri, we get £i∈N πi = C(N) > £i∈N piθi + 1 2 £i∈N ¡Li + Ri¢ = C(N).",
                "This gives us a contradiction.",
                "Next, we introduce an axiom about sharing the transfer of a job between a set of jobs.",
                "In particular, if the last job quits the system, then the ordering need not change.",
                "But the transfer to the last job needs to be shared between the other jobs.",
                "This should be done in proportion to their processing times because every job influenced the last job based on its processing time.",
                "Definition 6.",
                "An allocation rule ψ satisfies proportionate responsibility of p (PRp) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = |N|, q = (N \\ {k}, p , θ ) ∈ Q, such that for all i ∈ N\\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk pi £j=k pj .",
                "An analogous <br>fairness axiom</br> results if we remove the job from the beginning of the queue.",
                "Since the presence of the first job influenced each job depending on their θ values, its transfer needs to be shared in proportion to θ values.",
                "Definition 7.",
                "An allocation rule ψ satisfies proportionate responsibility of θ (PRθ) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = 1, q = (N \\{k}, p , θ ) ∈ Q, such that for all i ∈ N \\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk θi £j=k θj .",
                "The proportionate responsibility axioms are generalizations of equal responsibility axioms introduced by Maniquet [15]. 235 Independence Axioms The waiting cost of a job does not depend on the per unit waiting cost of its preceding jobs.",
                "Similarly, the waiting cost inflicted by a job to its following jobs is independent of the processing times of the following jobs.",
                "These independence properties should be carried over to the cost sharing rules.",
                "This gives us two independence axioms.",
                "Definition 8.",
                "An allocation rule ψ satisfies independence of preceding jobs θ (IPJθ) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk < γk, pk = pk, then for all j ∈ N such that σj > σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ).",
                "Definition 9.",
                "An allocation rule ψ satisfies independence of following jobs p (IFJp) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk > γk, θk = θk, then for all j ∈ N such that σj < σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ). 4.2 The Characterization Results Having stated the fairness axioms, we propose three different ways to characterize the Shapley value rule using these axioms.",
                "All our characterizations involve efficiency and ECB.",
                "But if we have IPJθ, we either need IFJp or PRp.",
                "Similarly if we have IFJp, we either need IPJθ or PRθ.",
                "Proposition 1.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and IFJp is a rule implied by the Shapley value rule.",
                "Proof.",
                "Define for any i, j ∈ N, θi j = γipj and pi j = θj γi .",
                "Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider the following q = (N, p , θ ) corresponding to job i with pj = pj if j ≤ i and pj = pi j if j > i, θj = θi j if j < i and θj = θj if j ≥ i.",
                "Observe that all jobs have the same γ: γi.",
                "By Lemma 2 and efficiency, (σ, t ) ∈ ψ(q ) for some set of transfers t .",
                "Using Lemma 4, we get cost share of i from (σ, t ) as πi = piθi + 1 2 ¡Li + Ri¢.",
                "Now, for any j < i, if we change θj to θj without changing processing time, the new γ of j is γj ≥ γi.",
                "Applying IPJθ, the cost share of job i should not change.",
                "Similarly, for any job j > i, if we change pj to pj without changing θj, the new γ of j is γj ≤ γi.",
                "Applying IFJp, the cost share of job i should not change.",
                "Applying this procedure for every j < i with IPJθ and for every j > i with IFJp, we reach q = (N, p, θ) and the payoff of i does not change from πi.",
                "Using this argument for every i ∈ N and using the expression for the Shapley value in Lemma 3, we get the Shapley value rule.",
                "It is possible to replace one of the independence axioms with an equity axiom on sharing the transfer of a job.",
                "This is shown in Propositions 2 and 3.",
                "Proposition 2.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and PRp is a rule implied by the Shapley value rule.",
                "Proof.",
                "As in the proof of Proposition 1, define θi j = γipj ∀ i, j ∈ N. Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider a queue with jobs in set K = {1, . . . , i, i + 1}, where i < n. Define q = (K, p, θ ), where θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ is an efficient ordering for q .",
                "By ECB and Lemma 4 the cost share of job i + 1 in any allocation rule in ψ must be πi+1 = pi+1θi+1 + 1 2 ¡£j<i+1 pjθi+1¢.",
                "Now, consider q = (K, p, θ ) such that θj = θi j ∀ j ≤ i and θi+1 = θi+1. σ remains an efficient ordering in q and by IPJθ the cost share of i + 1 remains πi+1.",
                "In q = (K \\ {i + 1}, p, θ ), we can calculate the cost share of job i using ECB and Lemma 4 as πi = piθi + 1 2 £j<i pjθi.",
                "So, using PRp we get the new cost share of job i in q as πi = πi + ti+1 pi j<i+1 pj = piθi + 1 2 ¡£j<i pjθi + piθi+1¢.",
                "Now, we can set K = K ∪ {i + 2}.",
                "As before, we can find cost share of i + 2 in this queue as πi+2 = pi+2θi+2 + 1 2 ¡£j<i+2 pjθi+2¢.",
                "Using PRp we get the new cost share of job i in the new queue as πi = piθi + 1 2 ¡£j<i pjθi + piθi+1 + piθi+2¢.",
                "This process can be repeated till we add job n at which point cost share of i is piθi + 1 2 ¡£j<i pjθi + £j>i piθj¢.",
                "Then, we can adjust the θ of preceding jobs of i to their original value and applying IPJθ, the payoffs of jobs i through n will not change.",
                "This gives us the Shapley values of jobs i through n. Setting i = 1, we get cost shares of all the jobs from ψ as the Shapley value.",
                "Proposition 3.",
                "Any efficient rule ψ that satisfies ECB, IFJp, and PRθ is a rule implied by the Shapley value rule.",
                "Proof.",
                "The proof mirrors the proof of Proposition 2.",
                "We provide a short sketch.",
                "Analogous to the proof of Proposition 2, θs are kept equal to original data and processing times are initialized to pi+1 j .",
                "This allows us to use IFJp.",
                "Also, contrast to Proposition 2, we consider K = {i, i + 1, . . . , n} and repeatedly add jobs to the beginning of the queue maintaining the same efficient ordering.",
                "So, we add the cost components of preceding jobs to the cost share of jobs in each iteration and converge to the Shapley value rule.",
                "The next proposition shows that the Shapley value rule satisfies all the fairness axioms discussed.",
                "Proposition 4.",
                "The Shapley value rule satisfies efficiency, pareto indifference, anonymity, ETE, ECB, IPJθ, IFJp, PRp, and PRθ.",
                "Proof.",
                "The Shapley value rule chooses an efficient ordering and by definition the payments add upto zero.",
                "So, it satisfies efficiency.",
                "The Shapley value assigns same cost share to a job irrespective of the efficient ordering chosen.",
                "So, it is pareto indifferent.",
                "The Shapley value is anonymous because the particular index of a job does not effect his ordering or cost share.",
                "For ETE, consider two jobs i, j ∈ N such that pi = pj and θi = θj.",
                "Without loss of generality assume the efficient ordering to be 1, . . . , i, . . . , j, . . . , n. Now, the Shapley value of job i is 236 SVi = piθi + 1 2 ¡Li + Ri¢(From Lemma 3) = pjθj + 1 2 ¡Lj + Rj¢− 1 2 ¡Li − Lj + Ri − Rj¢ = SVj − 1 2 ¡   i<k≤j piθk −   i≤k<j pkθi¢ = SVj − 1 2   i<k≤j (piθk − pkθi) (Using pi = pj and θi = θj) = SVj (Using θk pk = θi pi for all i ≤ k ≤ j).",
                "The Shapley value satisfies ECB by its expression in Lemma 3.",
                "Consider any job i, in an efficient ordering σ, if we increase the value of γj for some j = i such that σj > σi, then the set Pi ( preceding jobs) does not change in the new efficient ordering.",
                "If γj is changed such that pj remains the same, then the expression £j∈Pi θipj is unchanged.",
                "If (p, θ) values of no other jobs are changed, then the Shapley value is unchanged by increasing γj for some j ∈ Pi while keeping pj unchanged.",
                "Thus, the Shapley value rule satisfies IPJθ.",
                "An analogous argument shows that the Shapley value rule satisfies IFJp.",
                "For PRp, assume without loss of generality that jobs are ordered 1, . . . , n in an efficient ordering.",
                "Denote the transfer of job i = n due to the Shapley value with set of jobs N and set of jobs N \\ {n} as ti and ti respectively.",
                "Transfer of last job is tn = 1 2 θn £j<n pj.",
                "Now, ti = 1 2 ¡θi   j<i pj − pi   j>i θj¢ = 1 2 ¡θi   j<i pj − pi   j>i:j=n θj¢− 1 2 piθn = ti − 1 2 θn   j<n pj pi £j<n pj = ti − tn pi £j<n pj .",
                "A similar argument shows that the Shapley value rule satisfies PRθ.",
                "These series of propositions lead us to our main result.",
                "Theorem 1.",
                "Let ψ be an allocation rule.",
                "The following statements are equivalent: 1) For each q ∈ Q, ψ(q) selects all the allocation assigning jobs cost shares implied by the Shapley value. 2) ψ satisfies efficiency, ECB, IFJp, and IPJθ. 3) ψ satisfies efficiency, ECB, IFJp, and PRθ. 4) ψ satisfies efficiency, ECB, PRp, and IPJθ.",
                "Proof.",
                "The proof follows from Propositions 1, 2, 3, and 4. 5.",
                "DISCUSSIONS 5.1 A Reasonable Class of Cost Sharing Mechanisms In this section, we will define a reasonable class of cost sharing mechanisms.",
                "We will show how these reasonable mechanisms lead to the Shapley value mechanism.",
                "Definition 10.",
                "An allocation rule ψ is reasonable if for all q ∈ Q and (σ, t) ∈ ψ(q) we have for all i ∈ N, ti = α ¡θi   j∈Pi(σ) pj − pi   j∈Fi(σ) θj¢∀ i ∈ N, where 0 ≤ α ≤ 1.",
                "The reasonable cost sharing mechanism says that every job should be paid a constant fraction of the difference between the waiting cost he incurs and the waiting cost he inflicts on other jobs.",
                "If α = 0, then every job bears its own cost.",
                "If α = 1, then every job gets compensated for its waiting cost but compensates others for the cost he inflicts on others.",
                "The Shapley value rule comes as a result of ETE as shown in the following proposition.",
                "Proposition 5.",
                "Any efficient and reasonable allocation rule ψ that satisfies ETE is a rule implied by the Shapley value rule.",
                "Proof.",
                "Consider a q ∈ Q in which pi = pj and θi = θj.",
                "Let (σ, t) ∈ ψ(q) and π be the resulting cost shares.",
                "From ETE, we get, πi = πj ⇒ ci(σ) − ti = cj(σ) − tj ⇒ piθi + (1 − α)Li + αRi = pjθj + (1 − α)Lj + αRj (Since ψ is efficient and reasonable) ⇒ (1 − α)(Li − Lj) = α(Rj − Ri) (Using pi = pj, θi = θj) ⇒ 1 − α = α (Using Li − Lj = Rj − Ri = 0) ⇒ α = 1 2 .",
                "This gives us the Shapley value rule by Lemma 3. 5.2 Results on Envy Chun [2] discusses a fariness condition called no-envy for the case when processing times of all jobs are unity.",
                "Definition 11.",
                "An allocation rule satisfies no-envy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tj, where π is the cost share from allocation rule (σ, t) and σij is the ordering obtaining by swapping i and j.",
                "From the result in [2], the Shapley value rule does not satisfy no-envy in our model also.",
                "To overcome this, Chun [2] introduces the notion of adjusted no-envy, which he shows is satisfied in the Shapley value rule when processing times of all jobs are unity.",
                "Here, we show that adjusted envy continues to hold in the Shapley value rule in our model (when processing times need not be unity).",
                "As before denote σij be an ordering where the position of i and j is swapped from an ordering σ.",
                "For adjusted noenvy, if (σ, t) is an allocation for some q ∈ Q, let tij be the 237 transfer of job i when the transfer of i is calculated with respect to ordering σij .",
                "Observe that an allocation may not allow for calculation of tij .",
                "For example, if ψ is efficient, then tij cannot be calculated if σij is also not efficient.",
                "For simplicity, we state the definition of adjusted no-envy to apply to all such rules.",
                "Definition 12.",
                "An allocation rule satisfies adjusted noenvy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tij i .",
                "Proposition 6.",
                "The Shapley value rule satisfies adjusted no-envy.",
                "Proof.",
                "Without loss of generality, assume efficient ordering of jobs is: 1, . . . , n. Consider two jobs i and i + k. From Lemma 3, SVi = piθi + 1 2 ¡  j<i θipj +   j>i θjpi¢.",
                "Let ˆπi be the cost share of i due to adjusted transfer tii+k i in the ordering σii+k . ˆπi = ci(σii+k ) − tii+k i = piθi + 1 2 ¡  j<i θipj + θipi+k +   i<j<i+k θipj +   j>i θjpi − θi+kpi −   i<j<i+k θjpi¢ = SVi + 1 2   i<j≤i+k ¡θipj − θjpi¢ ≥ SVi (Using the fact that θi pi ≥ θj pj for i < j). 6.",
                "CONCLUSION We studied the problem of sharing costs for a job scheduling problem on a single server, when jobs have processing times and unit time waiting costs.",
                "We took a cooperative game theory approach and show that the famous the Shapley value rule satisfies many nice fairness properties.",
                "We characterized the Shapley value rule using different intuitive fairness axioms.",
                "In future, we plan to further simplify some of the fairness axioms.",
                "Some initial simplifications already appear in [16], where we provide an alternative axiom to ECB and also discuss the implication of transfers between jobs (in stead of transfers from jobs to a central server).",
                "We also plan to look at cost sharing mechanisms other than the Shapley value.",
                "Investigating the strategic power of jobs in such mechanisms is another line of future research. 7.",
                "REFERENCES [1] Youngsub Chun.",
                "A Note on Maniquets Characterization of the Shapley Value in Queueing Problems.",
                "Working Paper, Rochester University, 2004. [2] Youngsub Chun.",
                "No-envy in Queuing Problems.",
                "Working Paper, Rochester University, 2004. [3] Imma Curiel, Herbert Hamers, and Flip Klijn.",
                "Sequencing Games: A Survey.",
                "In Peter Borm and Hans Peters, editors, Chapter in Game Theory.",
                "Theory and Decision Library, Kulwer Academic Publishers, 2002. [4] Imma Curiel, Giorgio Pederzoli, and Stef Tijs.",
                "Sequencing Games.",
                "European Journal of Operational Research, 40:344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs, and Bart Veltman.",
                "Sequencing and Cooperation.",
                "Operations Research, 42(3):566-568, May-June 1994. [6] Nikhil R. Devanur, Milena Mihail, and Vijay V. Vazirani.",
                "Strategyproof Cost-sharing Mechanisms for Set Cover and Facility Location Games.",
                "In Proceedings of Fourth Annual ACM Conferece on Electronic Commerce, 2003. [7] Robert J. Dolan.",
                "Incentive Mechanisms for Priority Queueing Problems.",
                "Bell Journal of Economics, 9:421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou, and Scott Shenker.",
                "Sharing the Cost of Multicast Transmissions.",
                "In Proceedings of Thirty-Second Annual ACM Symposium on Theory of Computing, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs, and Peter Borm.",
                "The Split Core for Sequencing Games.",
                "Games and Economic Behavior, 15:165-176, 1996. [10] John C. Harsanyi.",
                "Contributions to Theory of Games IV, chapter A Bargaining Model for Cooperative n-person Games.",
                "Princeton University Press, 1959.",
                "Editors: A. W. Tucker, R. D. Luce. [11] Kamal Jain and Vijay Vazirani.",
                "Applications of Approximate Algorithms to Cooperative Games.",
                "In Proceedings of 33rd Symposium on Theory of Computing (STOC 01), 2001. [12] Kamal Jain and Vijay Vazirani.",
                "Equitable Cost Allocations via Primal-Dual Type Algorithms.",
                "In Proceedings of 34th Symposium on Theory of Computing (STOC 02), 2002. [13] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without a Completely Specified Initial Order.",
                "Report in Statistics and Operations Research, pages 1-17, 2002.",
                "Report 02-04. [14] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without Initial Order.",
                "Working Paper, Universitat Aut´onoma de Barcelona, July 2004. [15] Franois Maniquet.",
                "A Characterization of the Shapley Value in Queueing Problems.",
                "Journal of Economic Theory, 109:90-103, 2003. [16] Debasis Mishra and Bharath Rangarajan.",
                "Cost sharing in a job scheduling problem.",
                "Working Paper, CORE, 2005. [17] Manipushpak Mitra.",
                "Essays on First Best Implementable Incentive Problems.",
                "Ph.D. Thesis, Indian Statistical Institute, New Delhi, 2000. [18] Manipushpak Mitra.",
                "Mechanism design in queueing problems.",
                "Economic Theory, 17(2):277-305, 2001. [19] Manipushpak Mitra.",
                "Achieving the first best in sequencing problems.",
                "Review of Economic Design, 7:75-91, 2002. [20] Herv´e Moulin.",
                "Handbook of Social Choice and Welfare, chapter Axiomatic Cost and Surplus Sharing.",
                "North-Holland, 2002.",
                "Publishers: Arrow, Sen, Suzumura. [21] Herv´e Moulin.",
                "On Scheduling Fees to Prevent 238 Merging, Splitting and Transferring of Jobs.",
                "Working Paper, Rice University, 2004. [22] Herv´e Moulin.",
                "Split-proof Probabilistic Scheduling.",
                "Working Paper, Rice University, 2004. [23] Herv´e Moulin and Rakesh Vohra.",
                "Characterization of Additive Cost Sharing Methods.",
                "Economic Letters, 80:399-407, 2003. [24] Martin P´al and ´Eva Tardos.",
                "Group Strategyproof Mechanisms via Primal-Dual Algorithms.",
                "In Proceedings of the 44th Annual IEEE Symposium on the Foundations of Computer Science (FOCS 03), 2003. [25] Lloyd S. Shapley.",
                "Contributions to the Theory of Games II, chapter A Value for n-person Games, pages 307-317.",
                "Annals of Mathematics Studies, 1953.",
                "Ediors: H. W. Kuhn, A. W. Tucker. [26] Wayne E. Smith.",
                "Various Optimizers for Single-Stage Production.",
                "Naval Research Logistics Quarterly, 3:59-66, 1956. [27] Jeroen Suijs.",
                "On incentive compatibility and budget balancedness in public decision making.",
                "Economic Design, 2, 2002. 239"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Nuestro \"axioma de equidad\" dice que cada trabajo debería al menos tener tales costos esperados.",
                "Nuestro próximo \"axioma de equidad\" dice que yo y J deberían ser responsables de su propio costo de procesamiento y este costo esperado se infligen el uno al otro.",
                "Un resultado análogo de \"axioma de justicia\" si eliminamos el trabajo del comienzo de la cola."
            ],
            "translated_text": "",
            "candidates": [
                "axioma de justicia",
                "axioma de equidad",
                "axioma de justicia",
                "axioma de equidad",
                "axioma de justicia",
                "axioma de justicia"
            ],
            "error": []
        },
        "queueing problem": {
            "translated_key": "problema de colas",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Cost Sharing in a Job Scheduling Problem Using the Shapley Value Debasis Mishra Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium mishra@core.ucl.ac.be Bharath Rangarajan Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium rangarajan@core.ucl.ac.be ABSTRACT A set of jobs need to be served by a single server which can serve only one job at a time.",
                "Jobs have processing times and incur waiting costs (linear in their waiting time).",
                "The jobs share their costs through compensation using monetary transfers.",
                "We characterize the Shapley value rule for this model using fairness axioms.",
                "Our axioms include a bound on the cost share of jobs in a group, efficiency, and some independence properties on the the cost share of a job.",
                "Categories and Subject Descriptors J.4 [Social and Behaviorial Sciences]: Economics General Terms Economics, Theory 1.",
                "INTRODUCTION A set of jobs need to be served by a server.",
                "The server can process only one job at a time.",
                "Each job has a finite processing time and a per unit time waiting cost.",
                "Efficient ordering of this queue directs us to serve the jobs in increasing order of the ratio of per unit time waiting cost and processing time.",
                "To compensate for waiting by jobs, monetary transfers to jobs are allowed.",
                "How should the jobs share the cost equitably amongst themselves (through transfers)?",
                "The problem of fair division of costs among agents in a queue has many practical applications.",
                "For example, computer programs are regularly scheduled on servers, data are scheduled to be transmitted over networks, jobs are scheduled in shop-floor on machines, and queues appear in many public services (post offices, banks).",
                "Study of queueing problems has attracted economists for a long time [7, 17].",
                "Cost sharing is a fundamental problem in many settings on the Internet.",
                "Internet can be seen as a common resource shared by many users and the cost incured by using the resource needs to be shared in an equitable manner.",
                "The current surge in cost sharing literature from computer scientists validate this claim [8, 11, 12, 6, 24].",
                "Internet has many settings in which our model of job scheduling appears and the agents waiting in a queue incur costs (jobs scheduled on servers, queries answered from a database, data scheduled to be transmitted over a fixed bandwidth network etc.).",
                "We hope that our analysis will give new insights on cost sharing problems of this nature.",
                "Recently, there has been increased interest in cost sharing methods with submodular cost functions [11, 12, 6, 24].",
                "While many settings do have submodular cost functions (for example, multi-cast transmission games [8]), while the cost function of our game is supermodular.",
                "Also, such literature typically does not assume budget-balance (transfers adding up to zero), while it is an inherent feature of our model.",
                "A recent paper by Maniquet [15] is the closest to our model and is the motivation behind our work 1 .",
                "Maniquet [15] studies a model where he assumes all processing times are unity.",
                "For such a model, he characterizes the Shapley value rule using classical fairness axioms.",
                "Chun [1] interprets the worth of a coalition of jobs in a different manner for the same model and derives a reverse rule.",
                "Chun characterizes this rule using similar fairness axioms.",
                "Chun [2] also studies the envy properties of these rules.",
                "Moulin [22, 21] studies the <br>queueing problem</br> from a strategic point view when per unit waiting costs are unity.",
                "Moulin introduces new concepts in the queueing settings such as splitting and merging of jobs, and ways to prevent them.",
                "Another stream of literature is on sequencing games, first introduced by Curiel et al. [4].",
                "For a detailed survey, refer to Curiel et al. [3].",
                "Curiel et al. [4] defined sequencing games similar to our model, but in which an initial ordering of jobs is given.",
                "Besides, their notion of worth of a coalition is very different from the notions studied in Maniquet [15] and Chun [1] (these are the notions used in our work too).",
                "The particular notion of the worth of a coalition makes the sequencing game of Curiel et al. [4] convex, whereas our game is not convex and does not assume the presence of any initial order.",
                "In summary, the focus of this stream of 1 The authors thank Fran¸cois Maniquet for several fruitful discussions. 232 research is how to share the savings in costs from the initial ordering to the optimal ordering amongst jobs (also see Hamers et al. [9], Curiel et al. [5]).",
                "Recently, Klijn and S´anchez [13, 14] considered sequencing games without any initial ordering of jobs.",
                "They take two approaches to define the worth of coalitions.",
                "One of their approaches, called the tail game, is related to the reverse rule of Chun [1].",
                "In the tail game, jobs in a coalition are served after the jobs not in the coalition are served.",
                "Klijn and S´anchez [14] showed that the tail game is balanced.",
                "Further, they provide expressions for the Shapley value in tail game in terms of marginal vectors and reversed marginal vectors.",
                "We provide a simpler expression of the Shapley value in the tail game, generalizing the result in Chun [1].",
                "Klijn and S´anchez [13] study the core of this game in detail.",
                "Strategic aspects of queueing problems have also been researched.",
                "Mitra [19] studies the first best implementation in queueing models with generic cost functions.",
                "First best implementation means that there exists an efficient mechanism in which jobs in the queue have a dominant strategy to reveal their true types and their transfers add up to zero.",
                "Suijs [27] shows that if waiting costs of jobs are linear then first best implementation is possible.",
                "Mitra [19] shows that among a more general class of queueing problems first best implementation is possible if and only if the cost is linear.",
                "For another queueing model, Mitra [18] shows that first best implementation is possible if and only if the cost function satisfies a combinatorial property and an independence property.",
                "Moulin [22, 21] studies strategic concepts such as splitting and merging in queueing problems with unit per unit waiting costs.",
                "The general cost sharing literature is vast and has a long history.",
                "For a good survey, we refer to [20].",
                "From the seminal work of Shapley [25] to recent works on cost sharing in multi-cast transmission and optimization problems [8, 6, 23] this area has attracted economists, computer scientists, and operations researchers. 1.1 Our Contribution Ours is the first model which considers cost sharing when both processing time and per unit waiting cost of jobs are present.",
                "We take a cooperative game theory approach and apply the classical Shapley value rule to the problem.",
                "We show that the Shapley value rule satisfies many intuitive fairness axioms.",
                "Due to two dimensional nature of our model and one dimensional nature of Maniquets model [15], his axioms are insufficient to characterize the Shapley value in our setting.",
                "We introduce axioms such as independece of preceding jobs unit waiting cost and independence of following jobs processing time.",
                "A key axiom that we introduce gives us a bound on cost share of a job in a group of jobs which have the same ratio of unit time waiting cost and processing time (these jobs can be ordered in any manner between themseleves in an efficient ordering).",
                "If such a group consists of just one job, then the axiom says that such a job should at least pay his own processing cost (i.e., the cost it would have incurred if it was the only job in the queue).",
                "If there are multiple jobs in such a group, the probability of any two jobs from such a group inflicting costs on each other is same (1 2 ) in an efficient ordering.",
                "Depending on the ordering selected, one job inflicts cost on the other.",
                "Our fairness axiom says that each job should at least bear such expected costs.",
                "We characterize the Shapley value rule using these fairness axioms.",
                "We also extend the envy results in [2] to our setting and discuss a class of reasonable cost sharing mechanisms. 2.",
                "THE MODEL There are n jobs that need to be served by one server which can process only one job at a time.",
                "The set of jobs are denoted as N = {1, . . . , n}. σ : N → N is an ordering of jobs in N and σi denotes the position of job i in the ordering σ.",
                "Given an ordering σ, define Fi(σ) = {j ∈ N : σi < σj} and Pi(σ) = {j ∈ N : σi > σj}.",
                "Every job i is identified by two parameters: (pi, θi). pi is the processing time and θi is the cost per unit waiting time of job i.",
                "Thus, a <br>queueing problem</br> is defined by a list q = (N, p, θ) ∈ Q, where Q is the set of all possible lists.",
                "We will denote γi = θi pi .",
                "Given an ordering of jobs σ, the cost incurred by job i is given by ci(σ) = piθi + θi   j∈Pi(σ) pj.",
                "The total cost incurred by all jobs due to an ordering σ can be written in two ways: (i) by summing the cost incurred by every job and (ii) by summing the costs inflicted by a job on other jobs with their own processing cost.",
                "C(N, σ) =   i∈N ci(σ) =   i∈N piθi +   i∈N ¡θi   j∈Pi(σ) pj¢. =   i∈N piθi +   i∈N ¡pi   j∈Fi(σ) θj¢.",
                "An efficient ordering σ∗ is the one which minimizes the total cost incurred by all jobs.",
                "So, C(N, σ∗ ) ≤ C(N, σ) ∀ σ ∈ Σ.",
                "To achieve notational simplicity, we will write the total cost in an efficient ordering of jobs from N as C(N) whenever it is not confusing.",
                "Sometimes, we will deal with only a subset of jobs S ⊆ N. The ordering σ will then be defined on jobs in S only and we will write the total cost from an efficient ordering of jobs in S as C(S).",
                "The following lemma shows that jobs are ordered in decreasing γ in an efficient ordering.",
                "This is also known as the weighted shortest processing time rule, first introduced by Smith [26].",
                "Lemma 1.",
                "For any S ⊆ N, let σ∗ be an efficient ordering of jobs in S. For every i = j, i, j ∈ S, if σ∗ i > σ∗ j , then γi ≤ γj.",
                "Proof.",
                "Assume for contradiction that the statment of the lemma is not true.",
                "This means, we can find two consecutive jobs i, j ∈ S (σ∗ i = σ∗ j + 1) such that γi > γj.",
                "Define a new ordering σ by interchanging i and j in σ∗ .",
                "The costs to jobs in S \\ {i, j} is not changed from σ∗ to σ.",
                "The difference between total costs in σ∗ and σ is given by, C(S, σ) − C(S, σ∗ ) = θjpi − θipj.",
                "From efficiency we get θjpi − θipj ≥ 0.",
                "This gives us γj ≥ γi, which is a contradiction.",
                "An allocation for q = (N, p, θ) ∈ Q has two components: an ordering σ and a transfer ti for every job i ∈ N. ti denotes the payment received by job i.",
                "Given a transfer ti and an ordering σ, the cost share of job i is defined as, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. 233 An allocation (σ, t) is efficient for q = (N, p, θ) whenever σ is an efficient ordering and £i∈N ti = 0.",
                "The set of efficient orderings of q is denoted as Σ∗ (q) and σ∗ (q) will be used to refer to a typical element of the set.",
                "The following straightforward lemma says that for two different efficient orderings, the cost share in one efficient allocation is possible to achieve in the other by appropriately modifying the transfers.",
                "Lemma 2.",
                "Let (σ, t) be an efficient allocation and π be the vector of cost shares of jobs from this allocation.",
                "If σ∗ = σ be an efficient ordering and t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, then (σ∗ , t∗ ) is also an efficient allocation.",
                "Proof.",
                "Since (σ, t) is efficient, £i∈N ti = 0.",
                "This gives £i∈N πi = C(N).",
                "Since σ∗ is an efficient ordering, £i∈N ci(σ∗ ) = C(N).",
                "This means, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0.",
                "So, (σ∗ , t∗ ) is an efficient allocation.",
                "Depending on the transfers, the cost shares in different efficient allocations may differ.",
                "An allocation rule ψ associates with every q ∈ Q a non-empty subset ψ(q) of allocations. 3.",
                "COST SHARING USING THE SHAPLEY VALUE In this section, we define the coalitional cost of this game and analyze the solution proposed by the Shapley value.",
                "Given a queue q ∈ Q, the cost of a coalition of S ⊆ N jobs in the queue is defined as the cost incurred by jobs in S if these are the only jobs served in the queue using an efficient ordering.",
                "Formally, the cost of a coalition S ⊆ N is, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, where σ∗ = σ∗ (S) is an efficient ordering considering jobs from S only.",
                "The worth of a coalition of S jobs is just −C(S).",
                "Maniquet [15] observes another equivalent way to define the worth of a coalition is using the dual function of the cost function C(·).",
                "Other interesting ways to define the worth of a coalition in such games is discussed by Chun [1], who assume that a coalition of jobs are served after the jobs not in the coalition are served.",
                "The Shapley value (or cost share) of a job i is defined as, SVi =   S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) The Shapley value allocation rule says that jobs are ordered using an efficient ordering and transfers are assigned to jobs such that the cost share of job i is given by Equation 1.",
                "Lemma 3.",
                "Let σ∗ be an efficient ordering of jobs in set N. For all i ∈ N, the Shapley value is given by, SVi = piθi + 1 2 ¡Li + Ri¢, where Li = θi £j∈Pi(σ∗) pj and Ri = pi £j∈Fi(σ∗) θj.",
                "Proof.",
                "Another way to write the Shapley value formula is the following [10], SVi =   S⊆N:i∈S ∆(S) |S| , where ∆(S) = C(S) if |S| = 1 and ∆(S) = C(S)−£T S ∆(T).",
                "This gives ∆({i}) = C({i}) = piθi ∀i ∈ N. For any i, j ∈ N with i = j, we have ∆({i, j}) = C({i, j}) − C({i}) − C({j}) = min(piθi + pjθj + pjθi, piθi + pjθj + piθj) − piθi − pjθj = min(pjθi, piθj).",
                "We will show by induction that ∆(S) = 0 if |S| > 2.",
                "For |S| = 3, let S = {i, j, k}.",
                "Without loss of generality, assume θi pi ≥ θj pj ≥ θk pk .",
                "So, ∆(S) = C(S) − ∆({i, j}) − ∆({j, k}) − ∆({i, k})−∆({i})−∆({j})−∆({k}) = C(S)−piθj −pjθk − piθk − piθi − pjθj − pkθk = C(S) − C(S) = 0.",
                "Now, assume for T S, ∆(T) = 0 if |T| > 2.",
                "Without loss of generality assume that σ to be the identity mapping.",
                "Now, ∆(S) = C(S) −   T S ∆(T) = C(S) −   i∈S   j∈S:j<i ∆({i, j}) −   i∈S ∆({i}) = C(S) −   i∈S   j∈S:j<i pjθi −   i∈S piθi = C(S) − C(S) = 0.",
                "This proves that ∆(S) = 0 if |S| > 2.",
                "Using the Shapley value formula now, SVi =   S⊆N:i∈S ∆(S) |S| = ∆({i}) + 1 2   j∈N:j=i ∆({i, j}) = piθi + 1 2 ¡  j<i ∆({i, j}) +   j>i ∆({i, j})¢ = piθi + 1 2 ¡  j<i pjθi +   j>i piθj¢= piθi + 1 2 ¡Li + Ri¢. 4.",
                "AXIOMATICCHARACTERIZATIONOF THE SHAPLEY VALUE In this section, we will define serveral axioms on fairness and characterize the Shapley value using them.",
                "For a given q ∈ Q, we will denote ψ(q) as the set of allocations from allocation rule ψ.",
                "Also, we will denote the cost share vector associated with an allocation rule (σ, t) as π and that with allocation rule (σ , t ) as π etc. 4.1 The Fairness Axioms We will define three types of fairness axioms: (i) related to efficiency, (ii) related to equity, and (iii) related to independence.",
                "Efficiency Axioms We define two types of efficiency axioms.",
                "One related to efficiency which states that an efficient ordering should be selected and the transfers of jobs should add up to zero (budget balance).",
                "Definition 1.",
                "An allocation rule ψ satisfies efficiency if for every q ∈ Q and (σ, t) ∈ ψ(q), (σ, t) is an efficient allocation. 234 The second axiom related to efficiency says that the allocation rule should not discriminate between two allocations which are equivalent to each other in terms of cost shares of jobs.",
                "Definition 2.",
                "An allocation rule ψ satisfies Pareto indifference if for every q ∈ Q, (σ, t) ∈ ψ(q), and (σ , t ) ∈ Σ(q), we have ¡πi = πi ∀ i ∈ N¢⇒ ¡(σ , t ) ∈ ψ(q)¢.",
                "An implication of Pareto indifference axiom and Lemma 2 is that for every efficient ordering there is some set of transfers of jobs such that it is part of an efficient rule and the cost share of a job in all these allocations are same.",
                "Equity Axioms How should the cost be shared between two jobs if the jobs have some kind of similarity between them?",
                "Equity axioms provide us with fairness properties which help us answer this question.",
                "We provide five such axioms.",
                "Some of these axioms (for example anonymity, equal treatment of equals) are standard in the literature, while some are new.",
                "We start with a well known equity axiom called anonymity.",
                "Denote ρ : N → N as a permutation of elements in N. Let ρ(σ, t) denote the allocation obtained by permuting elements in σ and t according to ρ.",
                "Similarly, let ρ(p, θ) denote the new list of (p, θ) obtained by permuting elements of p and θ according to ρ.",
                "Our first equity axiom states that allocation rules should be immune to such permutation of data.",
                "Definition 3.",
                "An allocation rule ψ satisfies anonymity if for all q ∈ Q, (σ, t) ∈ ψ(q) and every permutation ρ, we then ρ(σ, t) ∈ ψ(N, ρ(q)).",
                "The next equity axiom is classical in literature and says that two similar jobs should be compensated such that their cost shares are equal.",
                "This implies that if all the jobs are of same type, then jobs should equally share the total system cost.",
                "Definition 4.",
                "An allocation rule ψ satisfies equal treatment of equals (ETE) if for all q ∈ Q, (σ, t) ∈ ψ(q), i, j ∈ N, then ¡pi = pj; θi = θj¢⇒ ¡πi = πj¢.",
                "ETE directs us to share costs equally between jobs if they are of the same per unit waiting cost and processing time.",
                "But it is silent about the cost shares of two jobs i and j which satisfy θi pi = θj pj .",
                "We introduce a new axiom for this.",
                "If an efficient rule chooses σ such that σi < σj for some i, j ∈ N, then job i is inflicting a cost of piθj on job j and job j is inflicting zero cost on job i.",
                "Define for some γ ≥ 0, S(γ) = {i ∈ N : γi = γ}.",
                "In an efficient rule, the elements in S(γ) can be ordered in any manner (in |S(γ)|! ways).",
                "If i, j ∈ S(γ) then we have pjθi = piθj.",
                "Probability of σi < σj is 1 2 and so is the probability of σi > σj.",
                "The expected cost i inflicts on j is 1 2 piθj and j inflicts on i is 1 2 pjθi.",
                "Our next fairness axiom says that i and j should each be responsible for their own processing cost and this expected cost they inflict on each other.",
                "Arguing for every pair of jobs i, j ∈ S(γ), we establish a bound on the cost share of jobs in S(γ).",
                "We impose this as an equity axiom below.",
                "Definition 5.",
                "An allocation rule satisfies expected cost bound (ECB) if for all q ∈ Q, (σ, t) ∈ ψ(q) with π being the resulting cost share, for any γ ≥ 0, and for every i ∈ S(γ), we have πi ≥ piθi + 1 2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢.",
                "The central idea behind this axiom is that of expected cost inflicted.",
                "If an allocation rule chooses multiple allocations, we can assign equal probabilities of selecting one of the allocations.",
                "In that case, the expected cost inflicted by a job i on another job j in the allocation rule can be calculated.",
                "Our axiom says that the cost share of a job should be at least its own processing cost and the total expected cost it inflicts on others.",
                "Note that the above bound poses no constraints on how the costs are shared among different groups.",
                "Also observe that if S(γ) contains just one job, ECB says that job should at least bear its own processing cost.",
                "A direct consequence of ECB is the following lemma.",
                "Lemma 4.",
                "Let ψ be an efficient rule which satisfies ECB.",
                "For a q ∈ Q if S(γ) = N, then for any (σ, t) ∈ ψ(q) which gives a cost share of π, πi = piθi + 1 2 ¡Li + Ri¢∀ i ∈ N. Proof.",
                "From ECB, we get πi ≥ piθi+1 2 ¡Li+Ri¢∀ i ∈ N. Assume for contradiction that there exists j ∈ N such that πj > pjθj + 1 2 ¡Li + Ri¢.",
                "Using efficiency and the fact that £i∈N Li = £i∈N Ri, we get £i∈N πi = C(N) > £i∈N piθi + 1 2 £i∈N ¡Li + Ri¢ = C(N).",
                "This gives us a contradiction.",
                "Next, we introduce an axiom about sharing the transfer of a job between a set of jobs.",
                "In particular, if the last job quits the system, then the ordering need not change.",
                "But the transfer to the last job needs to be shared between the other jobs.",
                "This should be done in proportion to their processing times because every job influenced the last job based on its processing time.",
                "Definition 6.",
                "An allocation rule ψ satisfies proportionate responsibility of p (PRp) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = |N|, q = (N \\ {k}, p , θ ) ∈ Q, such that for all i ∈ N\\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk pi £j=k pj .",
                "An analogous fairness axiom results if we remove the job from the beginning of the queue.",
                "Since the presence of the first job influenced each job depending on their θ values, its transfer needs to be shared in proportion to θ values.",
                "Definition 7.",
                "An allocation rule ψ satisfies proportionate responsibility of θ (PRθ) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = 1, q = (N \\{k}, p , θ ) ∈ Q, such that for all i ∈ N \\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk θi £j=k θj .",
                "The proportionate responsibility axioms are generalizations of equal responsibility axioms introduced by Maniquet [15]. 235 Independence Axioms The waiting cost of a job does not depend on the per unit waiting cost of its preceding jobs.",
                "Similarly, the waiting cost inflicted by a job to its following jobs is independent of the processing times of the following jobs.",
                "These independence properties should be carried over to the cost sharing rules.",
                "This gives us two independence axioms.",
                "Definition 8.",
                "An allocation rule ψ satisfies independence of preceding jobs θ (IPJθ) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk < γk, pk = pk, then for all j ∈ N such that σj > σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ).",
                "Definition 9.",
                "An allocation rule ψ satisfies independence of following jobs p (IFJp) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk > γk, θk = θk, then for all j ∈ N such that σj < σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ). 4.2 The Characterization Results Having stated the fairness axioms, we propose three different ways to characterize the Shapley value rule using these axioms.",
                "All our characterizations involve efficiency and ECB.",
                "But if we have IPJθ, we either need IFJp or PRp.",
                "Similarly if we have IFJp, we either need IPJθ or PRθ.",
                "Proposition 1.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and IFJp is a rule implied by the Shapley value rule.",
                "Proof.",
                "Define for any i, j ∈ N, θi j = γipj and pi j = θj γi .",
                "Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider the following q = (N, p , θ ) corresponding to job i with pj = pj if j ≤ i and pj = pi j if j > i, θj = θi j if j < i and θj = θj if j ≥ i.",
                "Observe that all jobs have the same γ: γi.",
                "By Lemma 2 and efficiency, (σ, t ) ∈ ψ(q ) for some set of transfers t .",
                "Using Lemma 4, we get cost share of i from (σ, t ) as πi = piθi + 1 2 ¡Li + Ri¢.",
                "Now, for any j < i, if we change θj to θj without changing processing time, the new γ of j is γj ≥ γi.",
                "Applying IPJθ, the cost share of job i should not change.",
                "Similarly, for any job j > i, if we change pj to pj without changing θj, the new γ of j is γj ≤ γi.",
                "Applying IFJp, the cost share of job i should not change.",
                "Applying this procedure for every j < i with IPJθ and for every j > i with IFJp, we reach q = (N, p, θ) and the payoff of i does not change from πi.",
                "Using this argument for every i ∈ N and using the expression for the Shapley value in Lemma 3, we get the Shapley value rule.",
                "It is possible to replace one of the independence axioms with an equity axiom on sharing the transfer of a job.",
                "This is shown in Propositions 2 and 3.",
                "Proposition 2.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and PRp is a rule implied by the Shapley value rule.",
                "Proof.",
                "As in the proof of Proposition 1, define θi j = γipj ∀ i, j ∈ N. Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider a queue with jobs in set K = {1, . . . , i, i + 1}, where i < n. Define q = (K, p, θ ), where θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ is an efficient ordering for q .",
                "By ECB and Lemma 4 the cost share of job i + 1 in any allocation rule in ψ must be πi+1 = pi+1θi+1 + 1 2 ¡£j<i+1 pjθi+1¢.",
                "Now, consider q = (K, p, θ ) such that θj = θi j ∀ j ≤ i and θi+1 = θi+1. σ remains an efficient ordering in q and by IPJθ the cost share of i + 1 remains πi+1.",
                "In q = (K \\ {i + 1}, p, θ ), we can calculate the cost share of job i using ECB and Lemma 4 as πi = piθi + 1 2 £j<i pjθi.",
                "So, using PRp we get the new cost share of job i in q as πi = πi + ti+1 pi j<i+1 pj = piθi + 1 2 ¡£j<i pjθi + piθi+1¢.",
                "Now, we can set K = K ∪ {i + 2}.",
                "As before, we can find cost share of i + 2 in this queue as πi+2 = pi+2θi+2 + 1 2 ¡£j<i+2 pjθi+2¢.",
                "Using PRp we get the new cost share of job i in the new queue as πi = piθi + 1 2 ¡£j<i pjθi + piθi+1 + piθi+2¢.",
                "This process can be repeated till we add job n at which point cost share of i is piθi + 1 2 ¡£j<i pjθi + £j>i piθj¢.",
                "Then, we can adjust the θ of preceding jobs of i to their original value and applying IPJθ, the payoffs of jobs i through n will not change.",
                "This gives us the Shapley values of jobs i through n. Setting i = 1, we get cost shares of all the jobs from ψ as the Shapley value.",
                "Proposition 3.",
                "Any efficient rule ψ that satisfies ECB, IFJp, and PRθ is a rule implied by the Shapley value rule.",
                "Proof.",
                "The proof mirrors the proof of Proposition 2.",
                "We provide a short sketch.",
                "Analogous to the proof of Proposition 2, θs are kept equal to original data and processing times are initialized to pi+1 j .",
                "This allows us to use IFJp.",
                "Also, contrast to Proposition 2, we consider K = {i, i + 1, . . . , n} and repeatedly add jobs to the beginning of the queue maintaining the same efficient ordering.",
                "So, we add the cost components of preceding jobs to the cost share of jobs in each iteration and converge to the Shapley value rule.",
                "The next proposition shows that the Shapley value rule satisfies all the fairness axioms discussed.",
                "Proposition 4.",
                "The Shapley value rule satisfies efficiency, pareto indifference, anonymity, ETE, ECB, IPJθ, IFJp, PRp, and PRθ.",
                "Proof.",
                "The Shapley value rule chooses an efficient ordering and by definition the payments add upto zero.",
                "So, it satisfies efficiency.",
                "The Shapley value assigns same cost share to a job irrespective of the efficient ordering chosen.",
                "So, it is pareto indifferent.",
                "The Shapley value is anonymous because the particular index of a job does not effect his ordering or cost share.",
                "For ETE, consider two jobs i, j ∈ N such that pi = pj and θi = θj.",
                "Without loss of generality assume the efficient ordering to be 1, . . . , i, . . . , j, . . . , n. Now, the Shapley value of job i is 236 SVi = piθi + 1 2 ¡Li + Ri¢(From Lemma 3) = pjθj + 1 2 ¡Lj + Rj¢− 1 2 ¡Li − Lj + Ri − Rj¢ = SVj − 1 2 ¡   i<k≤j piθk −   i≤k<j pkθi¢ = SVj − 1 2   i<k≤j (piθk − pkθi) (Using pi = pj and θi = θj) = SVj (Using θk pk = θi pi for all i ≤ k ≤ j).",
                "The Shapley value satisfies ECB by its expression in Lemma 3.",
                "Consider any job i, in an efficient ordering σ, if we increase the value of γj for some j = i such that σj > σi, then the set Pi ( preceding jobs) does not change in the new efficient ordering.",
                "If γj is changed such that pj remains the same, then the expression £j∈Pi θipj is unchanged.",
                "If (p, θ) values of no other jobs are changed, then the Shapley value is unchanged by increasing γj for some j ∈ Pi while keeping pj unchanged.",
                "Thus, the Shapley value rule satisfies IPJθ.",
                "An analogous argument shows that the Shapley value rule satisfies IFJp.",
                "For PRp, assume without loss of generality that jobs are ordered 1, . . . , n in an efficient ordering.",
                "Denote the transfer of job i = n due to the Shapley value with set of jobs N and set of jobs N \\ {n} as ti and ti respectively.",
                "Transfer of last job is tn = 1 2 θn £j<n pj.",
                "Now, ti = 1 2 ¡θi   j<i pj − pi   j>i θj¢ = 1 2 ¡θi   j<i pj − pi   j>i:j=n θj¢− 1 2 piθn = ti − 1 2 θn   j<n pj pi £j<n pj = ti − tn pi £j<n pj .",
                "A similar argument shows that the Shapley value rule satisfies PRθ.",
                "These series of propositions lead us to our main result.",
                "Theorem 1.",
                "Let ψ be an allocation rule.",
                "The following statements are equivalent: 1) For each q ∈ Q, ψ(q) selects all the allocation assigning jobs cost shares implied by the Shapley value. 2) ψ satisfies efficiency, ECB, IFJp, and IPJθ. 3) ψ satisfies efficiency, ECB, IFJp, and PRθ. 4) ψ satisfies efficiency, ECB, PRp, and IPJθ.",
                "Proof.",
                "The proof follows from Propositions 1, 2, 3, and 4. 5.",
                "DISCUSSIONS 5.1 A Reasonable Class of Cost Sharing Mechanisms In this section, we will define a reasonable class of cost sharing mechanisms.",
                "We will show how these reasonable mechanisms lead to the Shapley value mechanism.",
                "Definition 10.",
                "An allocation rule ψ is reasonable if for all q ∈ Q and (σ, t) ∈ ψ(q) we have for all i ∈ N, ti = α ¡θi   j∈Pi(σ) pj − pi   j∈Fi(σ) θj¢∀ i ∈ N, where 0 ≤ α ≤ 1.",
                "The reasonable cost sharing mechanism says that every job should be paid a constant fraction of the difference between the waiting cost he incurs and the waiting cost he inflicts on other jobs.",
                "If α = 0, then every job bears its own cost.",
                "If α = 1, then every job gets compensated for its waiting cost but compensates others for the cost he inflicts on others.",
                "The Shapley value rule comes as a result of ETE as shown in the following proposition.",
                "Proposition 5.",
                "Any efficient and reasonable allocation rule ψ that satisfies ETE is a rule implied by the Shapley value rule.",
                "Proof.",
                "Consider a q ∈ Q in which pi = pj and θi = θj.",
                "Let (σ, t) ∈ ψ(q) and π be the resulting cost shares.",
                "From ETE, we get, πi = πj ⇒ ci(σ) − ti = cj(σ) − tj ⇒ piθi + (1 − α)Li + αRi = pjθj + (1 − α)Lj + αRj (Since ψ is efficient and reasonable) ⇒ (1 − α)(Li − Lj) = α(Rj − Ri) (Using pi = pj, θi = θj) ⇒ 1 − α = α (Using Li − Lj = Rj − Ri = 0) ⇒ α = 1 2 .",
                "This gives us the Shapley value rule by Lemma 3. 5.2 Results on Envy Chun [2] discusses a fariness condition called no-envy for the case when processing times of all jobs are unity.",
                "Definition 11.",
                "An allocation rule satisfies no-envy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tj, where π is the cost share from allocation rule (σ, t) and σij is the ordering obtaining by swapping i and j.",
                "From the result in [2], the Shapley value rule does not satisfy no-envy in our model also.",
                "To overcome this, Chun [2] introduces the notion of adjusted no-envy, which he shows is satisfied in the Shapley value rule when processing times of all jobs are unity.",
                "Here, we show that adjusted envy continues to hold in the Shapley value rule in our model (when processing times need not be unity).",
                "As before denote σij be an ordering where the position of i and j is swapped from an ordering σ.",
                "For adjusted noenvy, if (σ, t) is an allocation for some q ∈ Q, let tij be the 237 transfer of job i when the transfer of i is calculated with respect to ordering σij .",
                "Observe that an allocation may not allow for calculation of tij .",
                "For example, if ψ is efficient, then tij cannot be calculated if σij is also not efficient.",
                "For simplicity, we state the definition of adjusted no-envy to apply to all such rules.",
                "Definition 12.",
                "An allocation rule satisfies adjusted noenvy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tij i .",
                "Proposition 6.",
                "The Shapley value rule satisfies adjusted no-envy.",
                "Proof.",
                "Without loss of generality, assume efficient ordering of jobs is: 1, . . . , n. Consider two jobs i and i + k. From Lemma 3, SVi = piθi + 1 2 ¡  j<i θipj +   j>i θjpi¢.",
                "Let ˆπi be the cost share of i due to adjusted transfer tii+k i in the ordering σii+k . ˆπi = ci(σii+k ) − tii+k i = piθi + 1 2 ¡  j<i θipj + θipi+k +   i<j<i+k θipj +   j>i θjpi − θi+kpi −   i<j<i+k θjpi¢ = SVi + 1 2   i<j≤i+k ¡θipj − θjpi¢ ≥ SVi (Using the fact that θi pi ≥ θj pj for i < j). 6.",
                "CONCLUSION We studied the problem of sharing costs for a job scheduling problem on a single server, when jobs have processing times and unit time waiting costs.",
                "We took a cooperative game theory approach and show that the famous the Shapley value rule satisfies many nice fairness properties.",
                "We characterized the Shapley value rule using different intuitive fairness axioms.",
                "In future, we plan to further simplify some of the fairness axioms.",
                "Some initial simplifications already appear in [16], where we provide an alternative axiom to ECB and also discuss the implication of transfers between jobs (in stead of transfers from jobs to a central server).",
                "We also plan to look at cost sharing mechanisms other than the Shapley value.",
                "Investigating the strategic power of jobs in such mechanisms is another line of future research. 7.",
                "REFERENCES [1] Youngsub Chun.",
                "A Note on Maniquets Characterization of the Shapley Value in Queueing Problems.",
                "Working Paper, Rochester University, 2004. [2] Youngsub Chun.",
                "No-envy in Queuing Problems.",
                "Working Paper, Rochester University, 2004. [3] Imma Curiel, Herbert Hamers, and Flip Klijn.",
                "Sequencing Games: A Survey.",
                "In Peter Borm and Hans Peters, editors, Chapter in Game Theory.",
                "Theory and Decision Library, Kulwer Academic Publishers, 2002. [4] Imma Curiel, Giorgio Pederzoli, and Stef Tijs.",
                "Sequencing Games.",
                "European Journal of Operational Research, 40:344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs, and Bart Veltman.",
                "Sequencing and Cooperation.",
                "Operations Research, 42(3):566-568, May-June 1994. [6] Nikhil R. Devanur, Milena Mihail, and Vijay V. Vazirani.",
                "Strategyproof Cost-sharing Mechanisms for Set Cover and Facility Location Games.",
                "In Proceedings of Fourth Annual ACM Conferece on Electronic Commerce, 2003. [7] Robert J. Dolan.",
                "Incentive Mechanisms for Priority Queueing Problems.",
                "Bell Journal of Economics, 9:421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou, and Scott Shenker.",
                "Sharing the Cost of Multicast Transmissions.",
                "In Proceedings of Thirty-Second Annual ACM Symposium on Theory of Computing, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs, and Peter Borm.",
                "The Split Core for Sequencing Games.",
                "Games and Economic Behavior, 15:165-176, 1996. [10] John C. Harsanyi.",
                "Contributions to Theory of Games IV, chapter A Bargaining Model for Cooperative n-person Games.",
                "Princeton University Press, 1959.",
                "Editors: A. W. Tucker, R. D. Luce. [11] Kamal Jain and Vijay Vazirani.",
                "Applications of Approximate Algorithms to Cooperative Games.",
                "In Proceedings of 33rd Symposium on Theory of Computing (STOC 01), 2001. [12] Kamal Jain and Vijay Vazirani.",
                "Equitable Cost Allocations via Primal-Dual Type Algorithms.",
                "In Proceedings of 34th Symposium on Theory of Computing (STOC 02), 2002. [13] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without a Completely Specified Initial Order.",
                "Report in Statistics and Operations Research, pages 1-17, 2002.",
                "Report 02-04. [14] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without Initial Order.",
                "Working Paper, Universitat Aut´onoma de Barcelona, July 2004. [15] Franois Maniquet.",
                "A Characterization of the Shapley Value in Queueing Problems.",
                "Journal of Economic Theory, 109:90-103, 2003. [16] Debasis Mishra and Bharath Rangarajan.",
                "Cost sharing in a job scheduling problem.",
                "Working Paper, CORE, 2005. [17] Manipushpak Mitra.",
                "Essays on First Best Implementable Incentive Problems.",
                "Ph.D. Thesis, Indian Statistical Institute, New Delhi, 2000. [18] Manipushpak Mitra.",
                "Mechanism design in queueing problems.",
                "Economic Theory, 17(2):277-305, 2001. [19] Manipushpak Mitra.",
                "Achieving the first best in sequencing problems.",
                "Review of Economic Design, 7:75-91, 2002. [20] Herv´e Moulin.",
                "Handbook of Social Choice and Welfare, chapter Axiomatic Cost and Surplus Sharing.",
                "North-Holland, 2002.",
                "Publishers: Arrow, Sen, Suzumura. [21] Herv´e Moulin.",
                "On Scheduling Fees to Prevent 238 Merging, Splitting and Transferring of Jobs.",
                "Working Paper, Rice University, 2004. [22] Herv´e Moulin.",
                "Split-proof Probabilistic Scheduling.",
                "Working Paper, Rice University, 2004. [23] Herv´e Moulin and Rakesh Vohra.",
                "Characterization of Additive Cost Sharing Methods.",
                "Economic Letters, 80:399-407, 2003. [24] Martin P´al and ´Eva Tardos.",
                "Group Strategyproof Mechanisms via Primal-Dual Algorithms.",
                "In Proceedings of the 44th Annual IEEE Symposium on the Foundations of Computer Science (FOCS 03), 2003. [25] Lloyd S. Shapley.",
                "Contributions to the Theory of Games II, chapter A Value for n-person Games, pages 307-317.",
                "Annals of Mathematics Studies, 1953.",
                "Ediors: H. W. Kuhn, A. W. Tucker. [26] Wayne E. Smith.",
                "Various Optimizers for Single-Stage Production.",
                "Naval Research Logistics Quarterly, 3:59-66, 1956. [27] Jeroen Suijs.",
                "On incentive compatibility and budget balancedness in public decision making.",
                "Economic Design, 2, 2002. 239"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Moulin [22, 21] estudia el \"problema de cola\" desde una vista de punto estratégico cuando los costos de espera por unidad son la unidad.",
                "Por lo tanto, un \"problema de cola\" se define mediante una lista q = (n, p, θ) ∈ Q, donde Q es el conjunto de todas las listas posibles."
            ],
            "translated_text": "",
            "candidates": [
                "problema de colas",
                "problema de cola",
                "problema de colas",
                "problema de cola"
            ],
            "error": []
        },
        "agent": {
            "translated_key": "agente",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Cost Sharing in a Job Scheduling Problem Using the Shapley Value Debasis Mishra Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium mishra@core.ucl.ac.be Bharath Rangarajan Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium rangarajan@core.ucl.ac.be ABSTRACT A set of jobs need to be served by a single server which can serve only one job at a time.",
                "Jobs have processing times and incur waiting costs (linear in their waiting time).",
                "The jobs share their costs through compensation using monetary transfers.",
                "We characterize the Shapley value rule for this model using fairness axioms.",
                "Our axioms include a bound on the cost share of jobs in a group, efficiency, and some independence properties on the the cost share of a job.",
                "Categories and Subject Descriptors J.4 [Social and Behaviorial Sciences]: Economics General Terms Economics, Theory 1.",
                "INTRODUCTION A set of jobs need to be served by a server.",
                "The server can process only one job at a time.",
                "Each job has a finite processing time and a per unit time waiting cost.",
                "Efficient ordering of this queue directs us to serve the jobs in increasing order of the ratio of per unit time waiting cost and processing time.",
                "To compensate for waiting by jobs, monetary transfers to jobs are allowed.",
                "How should the jobs share the cost equitably amongst themselves (through transfers)?",
                "The problem of fair division of costs among <br>agent</br>s in a queue has many practical applications.",
                "For example, computer programs are regularly scheduled on servers, data are scheduled to be transmitted over networks, jobs are scheduled in shop-floor on machines, and queues appear in many public services (post offices, banks).",
                "Study of queueing problems has attracted economists for a long time [7, 17].",
                "Cost sharing is a fundamental problem in many settings on the Internet.",
                "Internet can be seen as a common resource shared by many users and the cost incured by using the resource needs to be shared in an equitable manner.",
                "The current surge in cost sharing literature from computer scientists validate this claim [8, 11, 12, 6, 24].",
                "Internet has many settings in which our model of job scheduling appears and the <br>agent</br>s waiting in a queue incur costs (jobs scheduled on servers, queries answered from a database, data scheduled to be transmitted over a fixed bandwidth network etc.).",
                "We hope that our analysis will give new insights on cost sharing problems of this nature.",
                "Recently, there has been increased interest in cost sharing methods with submodular cost functions [11, 12, 6, 24].",
                "While many settings do have submodular cost functions (for example, multi-cast transmission games [8]), while the cost function of our game is supermodular.",
                "Also, such literature typically does not assume budget-balance (transfers adding up to zero), while it is an inherent feature of our model.",
                "A recent paper by Maniquet [15] is the closest to our model and is the motivation behind our work 1 .",
                "Maniquet [15] studies a model where he assumes all processing times are unity.",
                "For such a model, he characterizes the Shapley value rule using classical fairness axioms.",
                "Chun [1] interprets the worth of a coalition of jobs in a different manner for the same model and derives a reverse rule.",
                "Chun characterizes this rule using similar fairness axioms.",
                "Chun [2] also studies the envy properties of these rules.",
                "Moulin [22, 21] studies the queueing problem from a strategic point view when per unit waiting costs are unity.",
                "Moulin introduces new concepts in the queueing settings such as splitting and merging of jobs, and ways to prevent them.",
                "Another stream of literature is on sequencing games, first introduced by Curiel et al. [4].",
                "For a detailed survey, refer to Curiel et al. [3].",
                "Curiel et al. [4] defined sequencing games similar to our model, but in which an initial ordering of jobs is given.",
                "Besides, their notion of worth of a coalition is very different from the notions studied in Maniquet [15] and Chun [1] (these are the notions used in our work too).",
                "The particular notion of the worth of a coalition makes the sequencing game of Curiel et al. [4] convex, whereas our game is not convex and does not assume the presence of any initial order.",
                "In summary, the focus of this stream of 1 The authors thank Fran¸cois Maniquet for several fruitful discussions. 232 research is how to share the savings in costs from the initial ordering to the optimal ordering amongst jobs (also see Hamers et al. [9], Curiel et al. [5]).",
                "Recently, Klijn and S´anchez [13, 14] considered sequencing games without any initial ordering of jobs.",
                "They take two approaches to define the worth of coalitions.",
                "One of their approaches, called the tail game, is related to the reverse rule of Chun [1].",
                "In the tail game, jobs in a coalition are served after the jobs not in the coalition are served.",
                "Klijn and S´anchez [14] showed that the tail game is balanced.",
                "Further, they provide expressions for the Shapley value in tail game in terms of marginal vectors and reversed marginal vectors.",
                "We provide a simpler expression of the Shapley value in the tail game, generalizing the result in Chun [1].",
                "Klijn and S´anchez [13] study the core of this game in detail.",
                "Strategic aspects of queueing problems have also been researched.",
                "Mitra [19] studies the first best implementation in queueing models with generic cost functions.",
                "First best implementation means that there exists an efficient mechanism in which jobs in the queue have a dominant strategy to reveal their true types and their transfers add up to zero.",
                "Suijs [27] shows that if waiting costs of jobs are linear then first best implementation is possible.",
                "Mitra [19] shows that among a more general class of queueing problems first best implementation is possible if and only if the cost is linear.",
                "For another queueing model, Mitra [18] shows that first best implementation is possible if and only if the cost function satisfies a combinatorial property and an independence property.",
                "Moulin [22, 21] studies strategic concepts such as splitting and merging in queueing problems with unit per unit waiting costs.",
                "The general cost sharing literature is vast and has a long history.",
                "For a good survey, we refer to [20].",
                "From the seminal work of Shapley [25] to recent works on cost sharing in multi-cast transmission and optimization problems [8, 6, 23] this area has attracted economists, computer scientists, and operations researchers. 1.1 Our Contribution Ours is the first model which considers cost sharing when both processing time and per unit waiting cost of jobs are present.",
                "We take a cooperative game theory approach and apply the classical Shapley value rule to the problem.",
                "We show that the Shapley value rule satisfies many intuitive fairness axioms.",
                "Due to two dimensional nature of our model and one dimensional nature of Maniquets model [15], his axioms are insufficient to characterize the Shapley value in our setting.",
                "We introduce axioms such as independece of preceding jobs unit waiting cost and independence of following jobs processing time.",
                "A key axiom that we introduce gives us a bound on cost share of a job in a group of jobs which have the same ratio of unit time waiting cost and processing time (these jobs can be ordered in any manner between themseleves in an efficient ordering).",
                "If such a group consists of just one job, then the axiom says that such a job should at least pay his own processing cost (i.e., the cost it would have incurred if it was the only job in the queue).",
                "If there are multiple jobs in such a group, the probability of any two jobs from such a group inflicting costs on each other is same (1 2 ) in an efficient ordering.",
                "Depending on the ordering selected, one job inflicts cost on the other.",
                "Our fairness axiom says that each job should at least bear such expected costs.",
                "We characterize the Shapley value rule using these fairness axioms.",
                "We also extend the envy results in [2] to our setting and discuss a class of reasonable cost sharing mechanisms. 2.",
                "THE MODEL There are n jobs that need to be served by one server which can process only one job at a time.",
                "The set of jobs are denoted as N = {1, . . . , n}. σ : N → N is an ordering of jobs in N and σi denotes the position of job i in the ordering σ.",
                "Given an ordering σ, define Fi(σ) = {j ∈ N : σi < σj} and Pi(σ) = {j ∈ N : σi > σj}.",
                "Every job i is identified by two parameters: (pi, θi). pi is the processing time and θi is the cost per unit waiting time of job i.",
                "Thus, a queueing problem is defined by a list q = (N, p, θ) ∈ Q, where Q is the set of all possible lists.",
                "We will denote γi = θi pi .",
                "Given an ordering of jobs σ, the cost incurred by job i is given by ci(σ) = piθi + θi   j∈Pi(σ) pj.",
                "The total cost incurred by all jobs due to an ordering σ can be written in two ways: (i) by summing the cost incurred by every job and (ii) by summing the costs inflicted by a job on other jobs with their own processing cost.",
                "C(N, σ) =   i∈N ci(σ) =   i∈N piθi +   i∈N ¡θi   j∈Pi(σ) pj¢. =   i∈N piθi +   i∈N ¡pi   j∈Fi(σ) θj¢.",
                "An efficient ordering σ∗ is the one which minimizes the total cost incurred by all jobs.",
                "So, C(N, σ∗ ) ≤ C(N, σ) ∀ σ ∈ Σ.",
                "To achieve notational simplicity, we will write the total cost in an efficient ordering of jobs from N as C(N) whenever it is not confusing.",
                "Sometimes, we will deal with only a subset of jobs S ⊆ N. The ordering σ will then be defined on jobs in S only and we will write the total cost from an efficient ordering of jobs in S as C(S).",
                "The following lemma shows that jobs are ordered in decreasing γ in an efficient ordering.",
                "This is also known as the weighted shortest processing time rule, first introduced by Smith [26].",
                "Lemma 1.",
                "For any S ⊆ N, let σ∗ be an efficient ordering of jobs in S. For every i = j, i, j ∈ S, if σ∗ i > σ∗ j , then γi ≤ γj.",
                "Proof.",
                "Assume for contradiction that the statment of the lemma is not true.",
                "This means, we can find two consecutive jobs i, j ∈ S (σ∗ i = σ∗ j + 1) such that γi > γj.",
                "Define a new ordering σ by interchanging i and j in σ∗ .",
                "The costs to jobs in S \\ {i, j} is not changed from σ∗ to σ.",
                "The difference between total costs in σ∗ and σ is given by, C(S, σ) − C(S, σ∗ ) = θjpi − θipj.",
                "From efficiency we get θjpi − θipj ≥ 0.",
                "This gives us γj ≥ γi, which is a contradiction.",
                "An allocation for q = (N, p, θ) ∈ Q has two components: an ordering σ and a transfer ti for every job i ∈ N. ti denotes the payment received by job i.",
                "Given a transfer ti and an ordering σ, the cost share of job i is defined as, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. 233 An allocation (σ, t) is efficient for q = (N, p, θ) whenever σ is an efficient ordering and £i∈N ti = 0.",
                "The set of efficient orderings of q is denoted as Σ∗ (q) and σ∗ (q) will be used to refer to a typical element of the set.",
                "The following straightforward lemma says that for two different efficient orderings, the cost share in one efficient allocation is possible to achieve in the other by appropriately modifying the transfers.",
                "Lemma 2.",
                "Let (σ, t) be an efficient allocation and π be the vector of cost shares of jobs from this allocation.",
                "If σ∗ = σ be an efficient ordering and t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, then (σ∗ , t∗ ) is also an efficient allocation.",
                "Proof.",
                "Since (σ, t) is efficient, £i∈N ti = 0.",
                "This gives £i∈N πi = C(N).",
                "Since σ∗ is an efficient ordering, £i∈N ci(σ∗ ) = C(N).",
                "This means, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0.",
                "So, (σ∗ , t∗ ) is an efficient allocation.",
                "Depending on the transfers, the cost shares in different efficient allocations may differ.",
                "An allocation rule ψ associates with every q ∈ Q a non-empty subset ψ(q) of allocations. 3.",
                "COST SHARING USING THE SHAPLEY VALUE In this section, we define the coalitional cost of this game and analyze the solution proposed by the Shapley value.",
                "Given a queue q ∈ Q, the cost of a coalition of S ⊆ N jobs in the queue is defined as the cost incurred by jobs in S if these are the only jobs served in the queue using an efficient ordering.",
                "Formally, the cost of a coalition S ⊆ N is, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, where σ∗ = σ∗ (S) is an efficient ordering considering jobs from S only.",
                "The worth of a coalition of S jobs is just −C(S).",
                "Maniquet [15] observes another equivalent way to define the worth of a coalition is using the dual function of the cost function C(·).",
                "Other interesting ways to define the worth of a coalition in such games is discussed by Chun [1], who assume that a coalition of jobs are served after the jobs not in the coalition are served.",
                "The Shapley value (or cost share) of a job i is defined as, SVi =   S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) The Shapley value allocation rule says that jobs are ordered using an efficient ordering and transfers are assigned to jobs such that the cost share of job i is given by Equation 1.",
                "Lemma 3.",
                "Let σ∗ be an efficient ordering of jobs in set N. For all i ∈ N, the Shapley value is given by, SVi = piθi + 1 2 ¡Li + Ri¢, where Li = θi £j∈Pi(σ∗) pj and Ri = pi £j∈Fi(σ∗) θj.",
                "Proof.",
                "Another way to write the Shapley value formula is the following [10], SVi =   S⊆N:i∈S ∆(S) |S| , where ∆(S) = C(S) if |S| = 1 and ∆(S) = C(S)−£T S ∆(T).",
                "This gives ∆({i}) = C({i}) = piθi ∀i ∈ N. For any i, j ∈ N with i = j, we have ∆({i, j}) = C({i, j}) − C({i}) − C({j}) = min(piθi + pjθj + pjθi, piθi + pjθj + piθj) − piθi − pjθj = min(pjθi, piθj).",
                "We will show by induction that ∆(S) = 0 if |S| > 2.",
                "For |S| = 3, let S = {i, j, k}.",
                "Without loss of generality, assume θi pi ≥ θj pj ≥ θk pk .",
                "So, ∆(S) = C(S) − ∆({i, j}) − ∆({j, k}) − ∆({i, k})−∆({i})−∆({j})−∆({k}) = C(S)−piθj −pjθk − piθk − piθi − pjθj − pkθk = C(S) − C(S) = 0.",
                "Now, assume for T S, ∆(T) = 0 if |T| > 2.",
                "Without loss of generality assume that σ to be the identity mapping.",
                "Now, ∆(S) = C(S) −   T S ∆(T) = C(S) −   i∈S   j∈S:j<i ∆({i, j}) −   i∈S ∆({i}) = C(S) −   i∈S   j∈S:j<i pjθi −   i∈S piθi = C(S) − C(S) = 0.",
                "This proves that ∆(S) = 0 if |S| > 2.",
                "Using the Shapley value formula now, SVi =   S⊆N:i∈S ∆(S) |S| = ∆({i}) + 1 2   j∈N:j=i ∆({i, j}) = piθi + 1 2 ¡  j<i ∆({i, j}) +   j>i ∆({i, j})¢ = piθi + 1 2 ¡  j<i pjθi +   j>i piθj¢= piθi + 1 2 ¡Li + Ri¢. 4.",
                "AXIOMATICCHARACTERIZATIONOF THE SHAPLEY VALUE In this section, we will define serveral axioms on fairness and characterize the Shapley value using them.",
                "For a given q ∈ Q, we will denote ψ(q) as the set of allocations from allocation rule ψ.",
                "Also, we will denote the cost share vector associated with an allocation rule (σ, t) as π and that with allocation rule (σ , t ) as π etc. 4.1 The Fairness Axioms We will define three types of fairness axioms: (i) related to efficiency, (ii) related to equity, and (iii) related to independence.",
                "Efficiency Axioms We define two types of efficiency axioms.",
                "One related to efficiency which states that an efficient ordering should be selected and the transfers of jobs should add up to zero (budget balance).",
                "Definition 1.",
                "An allocation rule ψ satisfies efficiency if for every q ∈ Q and (σ, t) ∈ ψ(q), (σ, t) is an efficient allocation. 234 The second axiom related to efficiency says that the allocation rule should not discriminate between two allocations which are equivalent to each other in terms of cost shares of jobs.",
                "Definition 2.",
                "An allocation rule ψ satisfies Pareto indifference if for every q ∈ Q, (σ, t) ∈ ψ(q), and (σ , t ) ∈ Σ(q), we have ¡πi = πi ∀ i ∈ N¢⇒ ¡(σ , t ) ∈ ψ(q)¢.",
                "An implication of Pareto indifference axiom and Lemma 2 is that for every efficient ordering there is some set of transfers of jobs such that it is part of an efficient rule and the cost share of a job in all these allocations are same.",
                "Equity Axioms How should the cost be shared between two jobs if the jobs have some kind of similarity between them?",
                "Equity axioms provide us with fairness properties which help us answer this question.",
                "We provide five such axioms.",
                "Some of these axioms (for example anonymity, equal treatment of equals) are standard in the literature, while some are new.",
                "We start with a well known equity axiom called anonymity.",
                "Denote ρ : N → N as a permutation of elements in N. Let ρ(σ, t) denote the allocation obtained by permuting elements in σ and t according to ρ.",
                "Similarly, let ρ(p, θ) denote the new list of (p, θ) obtained by permuting elements of p and θ according to ρ.",
                "Our first equity axiom states that allocation rules should be immune to such permutation of data.",
                "Definition 3.",
                "An allocation rule ψ satisfies anonymity if for all q ∈ Q, (σ, t) ∈ ψ(q) and every permutation ρ, we then ρ(σ, t) ∈ ψ(N, ρ(q)).",
                "The next equity axiom is classical in literature and says that two similar jobs should be compensated such that their cost shares are equal.",
                "This implies that if all the jobs are of same type, then jobs should equally share the total system cost.",
                "Definition 4.",
                "An allocation rule ψ satisfies equal treatment of equals (ETE) if for all q ∈ Q, (σ, t) ∈ ψ(q), i, j ∈ N, then ¡pi = pj; θi = θj¢⇒ ¡πi = πj¢.",
                "ETE directs us to share costs equally between jobs if they are of the same per unit waiting cost and processing time.",
                "But it is silent about the cost shares of two jobs i and j which satisfy θi pi = θj pj .",
                "We introduce a new axiom for this.",
                "If an efficient rule chooses σ such that σi < σj for some i, j ∈ N, then job i is inflicting a cost of piθj on job j and job j is inflicting zero cost on job i.",
                "Define for some γ ≥ 0, S(γ) = {i ∈ N : γi = γ}.",
                "In an efficient rule, the elements in S(γ) can be ordered in any manner (in |S(γ)|! ways).",
                "If i, j ∈ S(γ) then we have pjθi = piθj.",
                "Probability of σi < σj is 1 2 and so is the probability of σi > σj.",
                "The expected cost i inflicts on j is 1 2 piθj and j inflicts on i is 1 2 pjθi.",
                "Our next fairness axiom says that i and j should each be responsible for their own processing cost and this expected cost they inflict on each other.",
                "Arguing for every pair of jobs i, j ∈ S(γ), we establish a bound on the cost share of jobs in S(γ).",
                "We impose this as an equity axiom below.",
                "Definition 5.",
                "An allocation rule satisfies expected cost bound (ECB) if for all q ∈ Q, (σ, t) ∈ ψ(q) with π being the resulting cost share, for any γ ≥ 0, and for every i ∈ S(γ), we have πi ≥ piθi + 1 2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢.",
                "The central idea behind this axiom is that of expected cost inflicted.",
                "If an allocation rule chooses multiple allocations, we can assign equal probabilities of selecting one of the allocations.",
                "In that case, the expected cost inflicted by a job i on another job j in the allocation rule can be calculated.",
                "Our axiom says that the cost share of a job should be at least its own processing cost and the total expected cost it inflicts on others.",
                "Note that the above bound poses no constraints on how the costs are shared among different groups.",
                "Also observe that if S(γ) contains just one job, ECB says that job should at least bear its own processing cost.",
                "A direct consequence of ECB is the following lemma.",
                "Lemma 4.",
                "Let ψ be an efficient rule which satisfies ECB.",
                "For a q ∈ Q if S(γ) = N, then for any (σ, t) ∈ ψ(q) which gives a cost share of π, πi = piθi + 1 2 ¡Li + Ri¢∀ i ∈ N. Proof.",
                "From ECB, we get πi ≥ piθi+1 2 ¡Li+Ri¢∀ i ∈ N. Assume for contradiction that there exists j ∈ N such that πj > pjθj + 1 2 ¡Li + Ri¢.",
                "Using efficiency and the fact that £i∈N Li = £i∈N Ri, we get £i∈N πi = C(N) > £i∈N piθi + 1 2 £i∈N ¡Li + Ri¢ = C(N).",
                "This gives us a contradiction.",
                "Next, we introduce an axiom about sharing the transfer of a job between a set of jobs.",
                "In particular, if the last job quits the system, then the ordering need not change.",
                "But the transfer to the last job needs to be shared between the other jobs.",
                "This should be done in proportion to their processing times because every job influenced the last job based on its processing time.",
                "Definition 6.",
                "An allocation rule ψ satisfies proportionate responsibility of p (PRp) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = |N|, q = (N \\ {k}, p , θ ) ∈ Q, such that for all i ∈ N\\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk pi £j=k pj .",
                "An analogous fairness axiom results if we remove the job from the beginning of the queue.",
                "Since the presence of the first job influenced each job depending on their θ values, its transfer needs to be shared in proportion to θ values.",
                "Definition 7.",
                "An allocation rule ψ satisfies proportionate responsibility of θ (PRθ) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = 1, q = (N \\{k}, p , θ ) ∈ Q, such that for all i ∈ N \\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk θi £j=k θj .",
                "The proportionate responsibility axioms are generalizations of equal responsibility axioms introduced by Maniquet [15]. 235 Independence Axioms The waiting cost of a job does not depend on the per unit waiting cost of its preceding jobs.",
                "Similarly, the waiting cost inflicted by a job to its following jobs is independent of the processing times of the following jobs.",
                "These independence properties should be carried over to the cost sharing rules.",
                "This gives us two independence axioms.",
                "Definition 8.",
                "An allocation rule ψ satisfies independence of preceding jobs θ (IPJθ) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk < γk, pk = pk, then for all j ∈ N such that σj > σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ).",
                "Definition 9.",
                "An allocation rule ψ satisfies independence of following jobs p (IFJp) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk > γk, θk = θk, then for all j ∈ N such that σj < σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ). 4.2 The Characterization Results Having stated the fairness axioms, we propose three different ways to characterize the Shapley value rule using these axioms.",
                "All our characterizations involve efficiency and ECB.",
                "But if we have IPJθ, we either need IFJp or PRp.",
                "Similarly if we have IFJp, we either need IPJθ or PRθ.",
                "Proposition 1.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and IFJp is a rule implied by the Shapley value rule.",
                "Proof.",
                "Define for any i, j ∈ N, θi j = γipj and pi j = θj γi .",
                "Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider the following q = (N, p , θ ) corresponding to job i with pj = pj if j ≤ i and pj = pi j if j > i, θj = θi j if j < i and θj = θj if j ≥ i.",
                "Observe that all jobs have the same γ: γi.",
                "By Lemma 2 and efficiency, (σ, t ) ∈ ψ(q ) for some set of transfers t .",
                "Using Lemma 4, we get cost share of i from (σ, t ) as πi = piθi + 1 2 ¡Li + Ri¢.",
                "Now, for any j < i, if we change θj to θj without changing processing time, the new γ of j is γj ≥ γi.",
                "Applying IPJθ, the cost share of job i should not change.",
                "Similarly, for any job j > i, if we change pj to pj without changing θj, the new γ of j is γj ≤ γi.",
                "Applying IFJp, the cost share of job i should not change.",
                "Applying this procedure for every j < i with IPJθ and for every j > i with IFJp, we reach q = (N, p, θ) and the payoff of i does not change from πi.",
                "Using this argument for every i ∈ N and using the expression for the Shapley value in Lemma 3, we get the Shapley value rule.",
                "It is possible to replace one of the independence axioms with an equity axiom on sharing the transfer of a job.",
                "This is shown in Propositions 2 and 3.",
                "Proposition 2.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and PRp is a rule implied by the Shapley value rule.",
                "Proof.",
                "As in the proof of Proposition 1, define θi j = γipj ∀ i, j ∈ N. Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider a queue with jobs in set K = {1, . . . , i, i + 1}, where i < n. Define q = (K, p, θ ), where θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ is an efficient ordering for q .",
                "By ECB and Lemma 4 the cost share of job i + 1 in any allocation rule in ψ must be πi+1 = pi+1θi+1 + 1 2 ¡£j<i+1 pjθi+1¢.",
                "Now, consider q = (K, p, θ ) such that θj = θi j ∀ j ≤ i and θi+1 = θi+1. σ remains an efficient ordering in q and by IPJθ the cost share of i + 1 remains πi+1.",
                "In q = (K \\ {i + 1}, p, θ ), we can calculate the cost share of job i using ECB and Lemma 4 as πi = piθi + 1 2 £j<i pjθi.",
                "So, using PRp we get the new cost share of job i in q as πi = πi + ti+1 pi j<i+1 pj = piθi + 1 2 ¡£j<i pjθi + piθi+1¢.",
                "Now, we can set K = K ∪ {i + 2}.",
                "As before, we can find cost share of i + 2 in this queue as πi+2 = pi+2θi+2 + 1 2 ¡£j<i+2 pjθi+2¢.",
                "Using PRp we get the new cost share of job i in the new queue as πi = piθi + 1 2 ¡£j<i pjθi + piθi+1 + piθi+2¢.",
                "This process can be repeated till we add job n at which point cost share of i is piθi + 1 2 ¡£j<i pjθi + £j>i piθj¢.",
                "Then, we can adjust the θ of preceding jobs of i to their original value and applying IPJθ, the payoffs of jobs i through n will not change.",
                "This gives us the Shapley values of jobs i through n. Setting i = 1, we get cost shares of all the jobs from ψ as the Shapley value.",
                "Proposition 3.",
                "Any efficient rule ψ that satisfies ECB, IFJp, and PRθ is a rule implied by the Shapley value rule.",
                "Proof.",
                "The proof mirrors the proof of Proposition 2.",
                "We provide a short sketch.",
                "Analogous to the proof of Proposition 2, θs are kept equal to original data and processing times are initialized to pi+1 j .",
                "This allows us to use IFJp.",
                "Also, contrast to Proposition 2, we consider K = {i, i + 1, . . . , n} and repeatedly add jobs to the beginning of the queue maintaining the same efficient ordering.",
                "So, we add the cost components of preceding jobs to the cost share of jobs in each iteration and converge to the Shapley value rule.",
                "The next proposition shows that the Shapley value rule satisfies all the fairness axioms discussed.",
                "Proposition 4.",
                "The Shapley value rule satisfies efficiency, pareto indifference, anonymity, ETE, ECB, IPJθ, IFJp, PRp, and PRθ.",
                "Proof.",
                "The Shapley value rule chooses an efficient ordering and by definition the payments add upto zero.",
                "So, it satisfies efficiency.",
                "The Shapley value assigns same cost share to a job irrespective of the efficient ordering chosen.",
                "So, it is pareto indifferent.",
                "The Shapley value is anonymous because the particular index of a job does not effect his ordering or cost share.",
                "For ETE, consider two jobs i, j ∈ N such that pi = pj and θi = θj.",
                "Without loss of generality assume the efficient ordering to be 1, . . . , i, . . . , j, . . . , n. Now, the Shapley value of job i is 236 SVi = piθi + 1 2 ¡Li + Ri¢(From Lemma 3) = pjθj + 1 2 ¡Lj + Rj¢− 1 2 ¡Li − Lj + Ri − Rj¢ = SVj − 1 2 ¡   i<k≤j piθk −   i≤k<j pkθi¢ = SVj − 1 2   i<k≤j (piθk − pkθi) (Using pi = pj and θi = θj) = SVj (Using θk pk = θi pi for all i ≤ k ≤ j).",
                "The Shapley value satisfies ECB by its expression in Lemma 3.",
                "Consider any job i, in an efficient ordering σ, if we increase the value of γj for some j = i such that σj > σi, then the set Pi ( preceding jobs) does not change in the new efficient ordering.",
                "If γj is changed such that pj remains the same, then the expression £j∈Pi θipj is unchanged.",
                "If (p, θ) values of no other jobs are changed, then the Shapley value is unchanged by increasing γj for some j ∈ Pi while keeping pj unchanged.",
                "Thus, the Shapley value rule satisfies IPJθ.",
                "An analogous argument shows that the Shapley value rule satisfies IFJp.",
                "For PRp, assume without loss of generality that jobs are ordered 1, . . . , n in an efficient ordering.",
                "Denote the transfer of job i = n due to the Shapley value with set of jobs N and set of jobs N \\ {n} as ti and ti respectively.",
                "Transfer of last job is tn = 1 2 θn £j<n pj.",
                "Now, ti = 1 2 ¡θi   j<i pj − pi   j>i θj¢ = 1 2 ¡θi   j<i pj − pi   j>i:j=n θj¢− 1 2 piθn = ti − 1 2 θn   j<n pj pi £j<n pj = ti − tn pi £j<n pj .",
                "A similar argument shows that the Shapley value rule satisfies PRθ.",
                "These series of propositions lead us to our main result.",
                "Theorem 1.",
                "Let ψ be an allocation rule.",
                "The following statements are equivalent: 1) For each q ∈ Q, ψ(q) selects all the allocation assigning jobs cost shares implied by the Shapley value. 2) ψ satisfies efficiency, ECB, IFJp, and IPJθ. 3) ψ satisfies efficiency, ECB, IFJp, and PRθ. 4) ψ satisfies efficiency, ECB, PRp, and IPJθ.",
                "Proof.",
                "The proof follows from Propositions 1, 2, 3, and 4. 5.",
                "DISCUSSIONS 5.1 A Reasonable Class of Cost Sharing Mechanisms In this section, we will define a reasonable class of cost sharing mechanisms.",
                "We will show how these reasonable mechanisms lead to the Shapley value mechanism.",
                "Definition 10.",
                "An allocation rule ψ is reasonable if for all q ∈ Q and (σ, t) ∈ ψ(q) we have for all i ∈ N, ti = α ¡θi   j∈Pi(σ) pj − pi   j∈Fi(σ) θj¢∀ i ∈ N, where 0 ≤ α ≤ 1.",
                "The reasonable cost sharing mechanism says that every job should be paid a constant fraction of the difference between the waiting cost he incurs and the waiting cost he inflicts on other jobs.",
                "If α = 0, then every job bears its own cost.",
                "If α = 1, then every job gets compensated for its waiting cost but compensates others for the cost he inflicts on others.",
                "The Shapley value rule comes as a result of ETE as shown in the following proposition.",
                "Proposition 5.",
                "Any efficient and reasonable allocation rule ψ that satisfies ETE is a rule implied by the Shapley value rule.",
                "Proof.",
                "Consider a q ∈ Q in which pi = pj and θi = θj.",
                "Let (σ, t) ∈ ψ(q) and π be the resulting cost shares.",
                "From ETE, we get, πi = πj ⇒ ci(σ) − ti = cj(σ) − tj ⇒ piθi + (1 − α)Li + αRi = pjθj + (1 − α)Lj + αRj (Since ψ is efficient and reasonable) ⇒ (1 − α)(Li − Lj) = α(Rj − Ri) (Using pi = pj, θi = θj) ⇒ 1 − α = α (Using Li − Lj = Rj − Ri = 0) ⇒ α = 1 2 .",
                "This gives us the Shapley value rule by Lemma 3. 5.2 Results on Envy Chun [2] discusses a fariness condition called no-envy for the case when processing times of all jobs are unity.",
                "Definition 11.",
                "An allocation rule satisfies no-envy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tj, where π is the cost share from allocation rule (σ, t) and σij is the ordering obtaining by swapping i and j.",
                "From the result in [2], the Shapley value rule does not satisfy no-envy in our model also.",
                "To overcome this, Chun [2] introduces the notion of adjusted no-envy, which he shows is satisfied in the Shapley value rule when processing times of all jobs are unity.",
                "Here, we show that adjusted envy continues to hold in the Shapley value rule in our model (when processing times need not be unity).",
                "As before denote σij be an ordering where the position of i and j is swapped from an ordering σ.",
                "For adjusted noenvy, if (σ, t) is an allocation for some q ∈ Q, let tij be the 237 transfer of job i when the transfer of i is calculated with respect to ordering σij .",
                "Observe that an allocation may not allow for calculation of tij .",
                "For example, if ψ is efficient, then tij cannot be calculated if σij is also not efficient.",
                "For simplicity, we state the definition of adjusted no-envy to apply to all such rules.",
                "Definition 12.",
                "An allocation rule satisfies adjusted noenvy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tij i .",
                "Proposition 6.",
                "The Shapley value rule satisfies adjusted no-envy.",
                "Proof.",
                "Without loss of generality, assume efficient ordering of jobs is: 1, . . . , n. Consider two jobs i and i + k. From Lemma 3, SVi = piθi + 1 2 ¡  j<i θipj +   j>i θjpi¢.",
                "Let ˆπi be the cost share of i due to adjusted transfer tii+k i in the ordering σii+k . ˆπi = ci(σii+k ) − tii+k i = piθi + 1 2 ¡  j<i θipj + θipi+k +   i<j<i+k θipj +   j>i θjpi − θi+kpi −   i<j<i+k θjpi¢ = SVi + 1 2   i<j≤i+k ¡θipj − θjpi¢ ≥ SVi (Using the fact that θi pi ≥ θj pj for i < j). 6.",
                "CONCLUSION We studied the problem of sharing costs for a job scheduling problem on a single server, when jobs have processing times and unit time waiting costs.",
                "We took a cooperative game theory approach and show that the famous the Shapley value rule satisfies many nice fairness properties.",
                "We characterized the Shapley value rule using different intuitive fairness axioms.",
                "In future, we plan to further simplify some of the fairness axioms.",
                "Some initial simplifications already appear in [16], where we provide an alternative axiom to ECB and also discuss the implication of transfers between jobs (in stead of transfers from jobs to a central server).",
                "We also plan to look at cost sharing mechanisms other than the Shapley value.",
                "Investigating the strategic power of jobs in such mechanisms is another line of future research. 7.",
                "REFERENCES [1] Youngsub Chun.",
                "A Note on Maniquets Characterization of the Shapley Value in Queueing Problems.",
                "Working Paper, Rochester University, 2004. [2] Youngsub Chun.",
                "No-envy in Queuing Problems.",
                "Working Paper, Rochester University, 2004. [3] Imma Curiel, Herbert Hamers, and Flip Klijn.",
                "Sequencing Games: A Survey.",
                "In Peter Borm and Hans Peters, editors, Chapter in Game Theory.",
                "Theory and Decision Library, Kulwer Academic Publishers, 2002. [4] Imma Curiel, Giorgio Pederzoli, and Stef Tijs.",
                "Sequencing Games.",
                "European Journal of Operational Research, 40:344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs, and Bart Veltman.",
                "Sequencing and Cooperation.",
                "Operations Research, 42(3):566-568, May-June 1994. [6] Nikhil R. Devanur, Milena Mihail, and Vijay V. Vazirani.",
                "Strategyproof Cost-sharing Mechanisms for Set Cover and Facility Location Games.",
                "In Proceedings of Fourth Annual ACM Conferece on Electronic Commerce, 2003. [7] Robert J. Dolan.",
                "Incentive Mechanisms for Priority Queueing Problems.",
                "Bell Journal of Economics, 9:421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou, and Scott Shenker.",
                "Sharing the Cost of Multicast Transmissions.",
                "In Proceedings of Thirty-Second Annual ACM Symposium on Theory of Computing, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs, and Peter Borm.",
                "The Split Core for Sequencing Games.",
                "Games and Economic Behavior, 15:165-176, 1996. [10] John C. Harsanyi.",
                "Contributions to Theory of Games IV, chapter A Bargaining Model for Cooperative n-person Games.",
                "Princeton University Press, 1959.",
                "Editors: A. W. Tucker, R. D. Luce. [11] Kamal Jain and Vijay Vazirani.",
                "Applications of Approximate Algorithms to Cooperative Games.",
                "In Proceedings of 33rd Symposium on Theory of Computing (STOC 01), 2001. [12] Kamal Jain and Vijay Vazirani.",
                "Equitable Cost Allocations via Primal-Dual Type Algorithms.",
                "In Proceedings of 34th Symposium on Theory of Computing (STOC 02), 2002. [13] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without a Completely Specified Initial Order.",
                "Report in Statistics and Operations Research, pages 1-17, 2002.",
                "Report 02-04. [14] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without Initial Order.",
                "Working Paper, Universitat Aut´onoma de Barcelona, July 2004. [15] Franois Maniquet.",
                "A Characterization of the Shapley Value in Queueing Problems.",
                "Journal of Economic Theory, 109:90-103, 2003. [16] Debasis Mishra and Bharath Rangarajan.",
                "Cost sharing in a job scheduling problem.",
                "Working Paper, CORE, 2005. [17] Manipushpak Mitra.",
                "Essays on First Best Implementable Incentive Problems.",
                "Ph.D. Thesis, Indian Statistical Institute, New Delhi, 2000. [18] Manipushpak Mitra.",
                "Mechanism design in queueing problems.",
                "Economic Theory, 17(2):277-305, 2001. [19] Manipushpak Mitra.",
                "Achieving the first best in sequencing problems.",
                "Review of Economic Design, 7:75-91, 2002. [20] Herv´e Moulin.",
                "Handbook of Social Choice and Welfare, chapter Axiomatic Cost and Surplus Sharing.",
                "North-Holland, 2002.",
                "Publishers: Arrow, Sen, Suzumura. [21] Herv´e Moulin.",
                "On Scheduling Fees to Prevent 238 Merging, Splitting and Transferring of Jobs.",
                "Working Paper, Rice University, 2004. [22] Herv´e Moulin.",
                "Split-proof Probabilistic Scheduling.",
                "Working Paper, Rice University, 2004. [23] Herv´e Moulin and Rakesh Vohra.",
                "Characterization of Additive Cost Sharing Methods.",
                "Economic Letters, 80:399-407, 2003. [24] Martin P´al and ´Eva Tardos.",
                "Group Strategyproof Mechanisms via Primal-Dual Algorithms.",
                "In Proceedings of the 44th Annual IEEE Symposium on the Foundations of Computer Science (FOCS 03), 2003. [25] Lloyd S. Shapley.",
                "Contributions to the Theory of Games II, chapter A Value for n-person Games, pages 307-317.",
                "Annals of Mathematics Studies, 1953.",
                "Ediors: H. W. Kuhn, A. W. Tucker. [26] Wayne E. Smith.",
                "Various Optimizers for Single-Stage Production.",
                "Naval Research Logistics Quarterly, 3:59-66, 1956. [27] Jeroen Suijs.",
                "On incentive compatibility and budget balancedness in public decision making.",
                "Economic Design, 2, 2002. 239"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "El problema de la división justa de costos entre los \"agentes\" en una cola tiene muchas aplicaciones prácticas.",
                "Internet tiene muchas configuraciones en las que aparece nuestro modelo de programación de empleo y el \"agente\" que espera en una cola incurre en costos (trabajos programados en servidores, consultas respondidas desde una base de datos, datos programados para transmitirse a través de una red de ancho de banda fija, etc.)."
            ],
            "translated_text": "",
            "candidates": [
                "agente",
                "agentes",
                "agente",
                "agente"
            ],
            "error": []
        },
        "cooperative game theory approach": {
            "translated_key": "enfoque de teoría de juegos cooperativo",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Cost Sharing in a Job Scheduling Problem Using the Shapley Value Debasis Mishra Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium mishra@core.ucl.ac.be Bharath Rangarajan Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium rangarajan@core.ucl.ac.be ABSTRACT A set of jobs need to be served by a single server which can serve only one job at a time.",
                "Jobs have processing times and incur waiting costs (linear in their waiting time).",
                "The jobs share their costs through compensation using monetary transfers.",
                "We characterize the Shapley value rule for this model using fairness axioms.",
                "Our axioms include a bound on the cost share of jobs in a group, efficiency, and some independence properties on the the cost share of a job.",
                "Categories and Subject Descriptors J.4 [Social and Behaviorial Sciences]: Economics General Terms Economics, Theory 1.",
                "INTRODUCTION A set of jobs need to be served by a server.",
                "The server can process only one job at a time.",
                "Each job has a finite processing time and a per unit time waiting cost.",
                "Efficient ordering of this queue directs us to serve the jobs in increasing order of the ratio of per unit time waiting cost and processing time.",
                "To compensate for waiting by jobs, monetary transfers to jobs are allowed.",
                "How should the jobs share the cost equitably amongst themselves (through transfers)?",
                "The problem of fair division of costs among agents in a queue has many practical applications.",
                "For example, computer programs are regularly scheduled on servers, data are scheduled to be transmitted over networks, jobs are scheduled in shop-floor on machines, and queues appear in many public services (post offices, banks).",
                "Study of queueing problems has attracted economists for a long time [7, 17].",
                "Cost sharing is a fundamental problem in many settings on the Internet.",
                "Internet can be seen as a common resource shared by many users and the cost incured by using the resource needs to be shared in an equitable manner.",
                "The current surge in cost sharing literature from computer scientists validate this claim [8, 11, 12, 6, 24].",
                "Internet has many settings in which our model of job scheduling appears and the agents waiting in a queue incur costs (jobs scheduled on servers, queries answered from a database, data scheduled to be transmitted over a fixed bandwidth network etc.).",
                "We hope that our analysis will give new insights on cost sharing problems of this nature.",
                "Recently, there has been increased interest in cost sharing methods with submodular cost functions [11, 12, 6, 24].",
                "While many settings do have submodular cost functions (for example, multi-cast transmission games [8]), while the cost function of our game is supermodular.",
                "Also, such literature typically does not assume budget-balance (transfers adding up to zero), while it is an inherent feature of our model.",
                "A recent paper by Maniquet [15] is the closest to our model and is the motivation behind our work 1 .",
                "Maniquet [15] studies a model where he assumes all processing times are unity.",
                "For such a model, he characterizes the Shapley value rule using classical fairness axioms.",
                "Chun [1] interprets the worth of a coalition of jobs in a different manner for the same model and derives a reverse rule.",
                "Chun characterizes this rule using similar fairness axioms.",
                "Chun [2] also studies the envy properties of these rules.",
                "Moulin [22, 21] studies the queueing problem from a strategic point view when per unit waiting costs are unity.",
                "Moulin introduces new concepts in the queueing settings such as splitting and merging of jobs, and ways to prevent them.",
                "Another stream of literature is on sequencing games, first introduced by Curiel et al. [4].",
                "For a detailed survey, refer to Curiel et al. [3].",
                "Curiel et al. [4] defined sequencing games similar to our model, but in which an initial ordering of jobs is given.",
                "Besides, their notion of worth of a coalition is very different from the notions studied in Maniquet [15] and Chun [1] (these are the notions used in our work too).",
                "The particular notion of the worth of a coalition makes the sequencing game of Curiel et al. [4] convex, whereas our game is not convex and does not assume the presence of any initial order.",
                "In summary, the focus of this stream of 1 The authors thank Fran¸cois Maniquet for several fruitful discussions. 232 research is how to share the savings in costs from the initial ordering to the optimal ordering amongst jobs (also see Hamers et al. [9], Curiel et al. [5]).",
                "Recently, Klijn and S´anchez [13, 14] considered sequencing games without any initial ordering of jobs.",
                "They take two approaches to define the worth of coalitions.",
                "One of their approaches, called the tail game, is related to the reverse rule of Chun [1].",
                "In the tail game, jobs in a coalition are served after the jobs not in the coalition are served.",
                "Klijn and S´anchez [14] showed that the tail game is balanced.",
                "Further, they provide expressions for the Shapley value in tail game in terms of marginal vectors and reversed marginal vectors.",
                "We provide a simpler expression of the Shapley value in the tail game, generalizing the result in Chun [1].",
                "Klijn and S´anchez [13] study the core of this game in detail.",
                "Strategic aspects of queueing problems have also been researched.",
                "Mitra [19] studies the first best implementation in queueing models with generic cost functions.",
                "First best implementation means that there exists an efficient mechanism in which jobs in the queue have a dominant strategy to reveal their true types and their transfers add up to zero.",
                "Suijs [27] shows that if waiting costs of jobs are linear then first best implementation is possible.",
                "Mitra [19] shows that among a more general class of queueing problems first best implementation is possible if and only if the cost is linear.",
                "For another queueing model, Mitra [18] shows that first best implementation is possible if and only if the cost function satisfies a combinatorial property and an independence property.",
                "Moulin [22, 21] studies strategic concepts such as splitting and merging in queueing problems with unit per unit waiting costs.",
                "The general cost sharing literature is vast and has a long history.",
                "For a good survey, we refer to [20].",
                "From the seminal work of Shapley [25] to recent works on cost sharing in multi-cast transmission and optimization problems [8, 6, 23] this area has attracted economists, computer scientists, and operations researchers. 1.1 Our Contribution Ours is the first model which considers cost sharing when both processing time and per unit waiting cost of jobs are present.",
                "We take a <br>cooperative game theory approach</br> and apply the classical Shapley value rule to the problem.",
                "We show that the Shapley value rule satisfies many intuitive fairness axioms.",
                "Due to two dimensional nature of our model and one dimensional nature of Maniquets model [15], his axioms are insufficient to characterize the Shapley value in our setting.",
                "We introduce axioms such as independece of preceding jobs unit waiting cost and independence of following jobs processing time.",
                "A key axiom that we introduce gives us a bound on cost share of a job in a group of jobs which have the same ratio of unit time waiting cost and processing time (these jobs can be ordered in any manner between themseleves in an efficient ordering).",
                "If such a group consists of just one job, then the axiom says that such a job should at least pay his own processing cost (i.e., the cost it would have incurred if it was the only job in the queue).",
                "If there are multiple jobs in such a group, the probability of any two jobs from such a group inflicting costs on each other is same (1 2 ) in an efficient ordering.",
                "Depending on the ordering selected, one job inflicts cost on the other.",
                "Our fairness axiom says that each job should at least bear such expected costs.",
                "We characterize the Shapley value rule using these fairness axioms.",
                "We also extend the envy results in [2] to our setting and discuss a class of reasonable cost sharing mechanisms. 2.",
                "THE MODEL There are n jobs that need to be served by one server which can process only one job at a time.",
                "The set of jobs are denoted as N = {1, . . . , n}. σ : N → N is an ordering of jobs in N and σi denotes the position of job i in the ordering σ.",
                "Given an ordering σ, define Fi(σ) = {j ∈ N : σi < σj} and Pi(σ) = {j ∈ N : σi > σj}.",
                "Every job i is identified by two parameters: (pi, θi). pi is the processing time and θi is the cost per unit waiting time of job i.",
                "Thus, a queueing problem is defined by a list q = (N, p, θ) ∈ Q, where Q is the set of all possible lists.",
                "We will denote γi = θi pi .",
                "Given an ordering of jobs σ, the cost incurred by job i is given by ci(σ) = piθi + θi   j∈Pi(σ) pj.",
                "The total cost incurred by all jobs due to an ordering σ can be written in two ways: (i) by summing the cost incurred by every job and (ii) by summing the costs inflicted by a job on other jobs with their own processing cost.",
                "C(N, σ) =   i∈N ci(σ) =   i∈N piθi +   i∈N ¡θi   j∈Pi(σ) pj¢. =   i∈N piθi +   i∈N ¡pi   j∈Fi(σ) θj¢.",
                "An efficient ordering σ∗ is the one which minimizes the total cost incurred by all jobs.",
                "So, C(N, σ∗ ) ≤ C(N, σ) ∀ σ ∈ Σ.",
                "To achieve notational simplicity, we will write the total cost in an efficient ordering of jobs from N as C(N) whenever it is not confusing.",
                "Sometimes, we will deal with only a subset of jobs S ⊆ N. The ordering σ will then be defined on jobs in S only and we will write the total cost from an efficient ordering of jobs in S as C(S).",
                "The following lemma shows that jobs are ordered in decreasing γ in an efficient ordering.",
                "This is also known as the weighted shortest processing time rule, first introduced by Smith [26].",
                "Lemma 1.",
                "For any S ⊆ N, let σ∗ be an efficient ordering of jobs in S. For every i = j, i, j ∈ S, if σ∗ i > σ∗ j , then γi ≤ γj.",
                "Proof.",
                "Assume for contradiction that the statment of the lemma is not true.",
                "This means, we can find two consecutive jobs i, j ∈ S (σ∗ i = σ∗ j + 1) such that γi > γj.",
                "Define a new ordering σ by interchanging i and j in σ∗ .",
                "The costs to jobs in S \\ {i, j} is not changed from σ∗ to σ.",
                "The difference between total costs in σ∗ and σ is given by, C(S, σ) − C(S, σ∗ ) = θjpi − θipj.",
                "From efficiency we get θjpi − θipj ≥ 0.",
                "This gives us γj ≥ γi, which is a contradiction.",
                "An allocation for q = (N, p, θ) ∈ Q has two components: an ordering σ and a transfer ti for every job i ∈ N. ti denotes the payment received by job i.",
                "Given a transfer ti and an ordering σ, the cost share of job i is defined as, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. 233 An allocation (σ, t) is efficient for q = (N, p, θ) whenever σ is an efficient ordering and £i∈N ti = 0.",
                "The set of efficient orderings of q is denoted as Σ∗ (q) and σ∗ (q) will be used to refer to a typical element of the set.",
                "The following straightforward lemma says that for two different efficient orderings, the cost share in one efficient allocation is possible to achieve in the other by appropriately modifying the transfers.",
                "Lemma 2.",
                "Let (σ, t) be an efficient allocation and π be the vector of cost shares of jobs from this allocation.",
                "If σ∗ = σ be an efficient ordering and t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, then (σ∗ , t∗ ) is also an efficient allocation.",
                "Proof.",
                "Since (σ, t) is efficient, £i∈N ti = 0.",
                "This gives £i∈N πi = C(N).",
                "Since σ∗ is an efficient ordering, £i∈N ci(σ∗ ) = C(N).",
                "This means, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0.",
                "So, (σ∗ , t∗ ) is an efficient allocation.",
                "Depending on the transfers, the cost shares in different efficient allocations may differ.",
                "An allocation rule ψ associates with every q ∈ Q a non-empty subset ψ(q) of allocations. 3.",
                "COST SHARING USING THE SHAPLEY VALUE In this section, we define the coalitional cost of this game and analyze the solution proposed by the Shapley value.",
                "Given a queue q ∈ Q, the cost of a coalition of S ⊆ N jobs in the queue is defined as the cost incurred by jobs in S if these are the only jobs served in the queue using an efficient ordering.",
                "Formally, the cost of a coalition S ⊆ N is, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, where σ∗ = σ∗ (S) is an efficient ordering considering jobs from S only.",
                "The worth of a coalition of S jobs is just −C(S).",
                "Maniquet [15] observes another equivalent way to define the worth of a coalition is using the dual function of the cost function C(·).",
                "Other interesting ways to define the worth of a coalition in such games is discussed by Chun [1], who assume that a coalition of jobs are served after the jobs not in the coalition are served.",
                "The Shapley value (or cost share) of a job i is defined as, SVi =   S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) The Shapley value allocation rule says that jobs are ordered using an efficient ordering and transfers are assigned to jobs such that the cost share of job i is given by Equation 1.",
                "Lemma 3.",
                "Let σ∗ be an efficient ordering of jobs in set N. For all i ∈ N, the Shapley value is given by, SVi = piθi + 1 2 ¡Li + Ri¢, where Li = θi £j∈Pi(σ∗) pj and Ri = pi £j∈Fi(σ∗) θj.",
                "Proof.",
                "Another way to write the Shapley value formula is the following [10], SVi =   S⊆N:i∈S ∆(S) |S| , where ∆(S) = C(S) if |S| = 1 and ∆(S) = C(S)−£T S ∆(T).",
                "This gives ∆({i}) = C({i}) = piθi ∀i ∈ N. For any i, j ∈ N with i = j, we have ∆({i, j}) = C({i, j}) − C({i}) − C({j}) = min(piθi + pjθj + pjθi, piθi + pjθj + piθj) − piθi − pjθj = min(pjθi, piθj).",
                "We will show by induction that ∆(S) = 0 if |S| > 2.",
                "For |S| = 3, let S = {i, j, k}.",
                "Without loss of generality, assume θi pi ≥ θj pj ≥ θk pk .",
                "So, ∆(S) = C(S) − ∆({i, j}) − ∆({j, k}) − ∆({i, k})−∆({i})−∆({j})−∆({k}) = C(S)−piθj −pjθk − piθk − piθi − pjθj − pkθk = C(S) − C(S) = 0.",
                "Now, assume for T S, ∆(T) = 0 if |T| > 2.",
                "Without loss of generality assume that σ to be the identity mapping.",
                "Now, ∆(S) = C(S) −   T S ∆(T) = C(S) −   i∈S   j∈S:j<i ∆({i, j}) −   i∈S ∆({i}) = C(S) −   i∈S   j∈S:j<i pjθi −   i∈S piθi = C(S) − C(S) = 0.",
                "This proves that ∆(S) = 0 if |S| > 2.",
                "Using the Shapley value formula now, SVi =   S⊆N:i∈S ∆(S) |S| = ∆({i}) + 1 2   j∈N:j=i ∆({i, j}) = piθi + 1 2 ¡  j<i ∆({i, j}) +   j>i ∆({i, j})¢ = piθi + 1 2 ¡  j<i pjθi +   j>i piθj¢= piθi + 1 2 ¡Li + Ri¢. 4.",
                "AXIOMATICCHARACTERIZATIONOF THE SHAPLEY VALUE In this section, we will define serveral axioms on fairness and characterize the Shapley value using them.",
                "For a given q ∈ Q, we will denote ψ(q) as the set of allocations from allocation rule ψ.",
                "Also, we will denote the cost share vector associated with an allocation rule (σ, t) as π and that with allocation rule (σ , t ) as π etc. 4.1 The Fairness Axioms We will define three types of fairness axioms: (i) related to efficiency, (ii) related to equity, and (iii) related to independence.",
                "Efficiency Axioms We define two types of efficiency axioms.",
                "One related to efficiency which states that an efficient ordering should be selected and the transfers of jobs should add up to zero (budget balance).",
                "Definition 1.",
                "An allocation rule ψ satisfies efficiency if for every q ∈ Q and (σ, t) ∈ ψ(q), (σ, t) is an efficient allocation. 234 The second axiom related to efficiency says that the allocation rule should not discriminate between two allocations which are equivalent to each other in terms of cost shares of jobs.",
                "Definition 2.",
                "An allocation rule ψ satisfies Pareto indifference if for every q ∈ Q, (σ, t) ∈ ψ(q), and (σ , t ) ∈ Σ(q), we have ¡πi = πi ∀ i ∈ N¢⇒ ¡(σ , t ) ∈ ψ(q)¢.",
                "An implication of Pareto indifference axiom and Lemma 2 is that for every efficient ordering there is some set of transfers of jobs such that it is part of an efficient rule and the cost share of a job in all these allocations are same.",
                "Equity Axioms How should the cost be shared between two jobs if the jobs have some kind of similarity between them?",
                "Equity axioms provide us with fairness properties which help us answer this question.",
                "We provide five such axioms.",
                "Some of these axioms (for example anonymity, equal treatment of equals) are standard in the literature, while some are new.",
                "We start with a well known equity axiom called anonymity.",
                "Denote ρ : N → N as a permutation of elements in N. Let ρ(σ, t) denote the allocation obtained by permuting elements in σ and t according to ρ.",
                "Similarly, let ρ(p, θ) denote the new list of (p, θ) obtained by permuting elements of p and θ according to ρ.",
                "Our first equity axiom states that allocation rules should be immune to such permutation of data.",
                "Definition 3.",
                "An allocation rule ψ satisfies anonymity if for all q ∈ Q, (σ, t) ∈ ψ(q) and every permutation ρ, we then ρ(σ, t) ∈ ψ(N, ρ(q)).",
                "The next equity axiom is classical in literature and says that two similar jobs should be compensated such that their cost shares are equal.",
                "This implies that if all the jobs are of same type, then jobs should equally share the total system cost.",
                "Definition 4.",
                "An allocation rule ψ satisfies equal treatment of equals (ETE) if for all q ∈ Q, (σ, t) ∈ ψ(q), i, j ∈ N, then ¡pi = pj; θi = θj¢⇒ ¡πi = πj¢.",
                "ETE directs us to share costs equally between jobs if they are of the same per unit waiting cost and processing time.",
                "But it is silent about the cost shares of two jobs i and j which satisfy θi pi = θj pj .",
                "We introduce a new axiom for this.",
                "If an efficient rule chooses σ such that σi < σj for some i, j ∈ N, then job i is inflicting a cost of piθj on job j and job j is inflicting zero cost on job i.",
                "Define for some γ ≥ 0, S(γ) = {i ∈ N : γi = γ}.",
                "In an efficient rule, the elements in S(γ) can be ordered in any manner (in |S(γ)|! ways).",
                "If i, j ∈ S(γ) then we have pjθi = piθj.",
                "Probability of σi < σj is 1 2 and so is the probability of σi > σj.",
                "The expected cost i inflicts on j is 1 2 piθj and j inflicts on i is 1 2 pjθi.",
                "Our next fairness axiom says that i and j should each be responsible for their own processing cost and this expected cost they inflict on each other.",
                "Arguing for every pair of jobs i, j ∈ S(γ), we establish a bound on the cost share of jobs in S(γ).",
                "We impose this as an equity axiom below.",
                "Definition 5.",
                "An allocation rule satisfies expected cost bound (ECB) if for all q ∈ Q, (σ, t) ∈ ψ(q) with π being the resulting cost share, for any γ ≥ 0, and for every i ∈ S(γ), we have πi ≥ piθi + 1 2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢.",
                "The central idea behind this axiom is that of expected cost inflicted.",
                "If an allocation rule chooses multiple allocations, we can assign equal probabilities of selecting one of the allocations.",
                "In that case, the expected cost inflicted by a job i on another job j in the allocation rule can be calculated.",
                "Our axiom says that the cost share of a job should be at least its own processing cost and the total expected cost it inflicts on others.",
                "Note that the above bound poses no constraints on how the costs are shared among different groups.",
                "Also observe that if S(γ) contains just one job, ECB says that job should at least bear its own processing cost.",
                "A direct consequence of ECB is the following lemma.",
                "Lemma 4.",
                "Let ψ be an efficient rule which satisfies ECB.",
                "For a q ∈ Q if S(γ) = N, then for any (σ, t) ∈ ψ(q) which gives a cost share of π, πi = piθi + 1 2 ¡Li + Ri¢∀ i ∈ N. Proof.",
                "From ECB, we get πi ≥ piθi+1 2 ¡Li+Ri¢∀ i ∈ N. Assume for contradiction that there exists j ∈ N such that πj > pjθj + 1 2 ¡Li + Ri¢.",
                "Using efficiency and the fact that £i∈N Li = £i∈N Ri, we get £i∈N πi = C(N) > £i∈N piθi + 1 2 £i∈N ¡Li + Ri¢ = C(N).",
                "This gives us a contradiction.",
                "Next, we introduce an axiom about sharing the transfer of a job between a set of jobs.",
                "In particular, if the last job quits the system, then the ordering need not change.",
                "But the transfer to the last job needs to be shared between the other jobs.",
                "This should be done in proportion to their processing times because every job influenced the last job based on its processing time.",
                "Definition 6.",
                "An allocation rule ψ satisfies proportionate responsibility of p (PRp) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = |N|, q = (N \\ {k}, p , θ ) ∈ Q, such that for all i ∈ N\\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk pi £j=k pj .",
                "An analogous fairness axiom results if we remove the job from the beginning of the queue.",
                "Since the presence of the first job influenced each job depending on their θ values, its transfer needs to be shared in proportion to θ values.",
                "Definition 7.",
                "An allocation rule ψ satisfies proportionate responsibility of θ (PRθ) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = 1, q = (N \\{k}, p , θ ) ∈ Q, such that for all i ∈ N \\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk θi £j=k θj .",
                "The proportionate responsibility axioms are generalizations of equal responsibility axioms introduced by Maniquet [15]. 235 Independence Axioms The waiting cost of a job does not depend on the per unit waiting cost of its preceding jobs.",
                "Similarly, the waiting cost inflicted by a job to its following jobs is independent of the processing times of the following jobs.",
                "These independence properties should be carried over to the cost sharing rules.",
                "This gives us two independence axioms.",
                "Definition 8.",
                "An allocation rule ψ satisfies independence of preceding jobs θ (IPJθ) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk < γk, pk = pk, then for all j ∈ N such that σj > σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ).",
                "Definition 9.",
                "An allocation rule ψ satisfies independence of following jobs p (IFJp) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk > γk, θk = θk, then for all j ∈ N such that σj < σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ). 4.2 The Characterization Results Having stated the fairness axioms, we propose three different ways to characterize the Shapley value rule using these axioms.",
                "All our characterizations involve efficiency and ECB.",
                "But if we have IPJθ, we either need IFJp or PRp.",
                "Similarly if we have IFJp, we either need IPJθ or PRθ.",
                "Proposition 1.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and IFJp is a rule implied by the Shapley value rule.",
                "Proof.",
                "Define for any i, j ∈ N, θi j = γipj and pi j = θj γi .",
                "Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider the following q = (N, p , θ ) corresponding to job i with pj = pj if j ≤ i and pj = pi j if j > i, θj = θi j if j < i and θj = θj if j ≥ i.",
                "Observe that all jobs have the same γ: γi.",
                "By Lemma 2 and efficiency, (σ, t ) ∈ ψ(q ) for some set of transfers t .",
                "Using Lemma 4, we get cost share of i from (σ, t ) as πi = piθi + 1 2 ¡Li + Ri¢.",
                "Now, for any j < i, if we change θj to θj without changing processing time, the new γ of j is γj ≥ γi.",
                "Applying IPJθ, the cost share of job i should not change.",
                "Similarly, for any job j > i, if we change pj to pj without changing θj, the new γ of j is γj ≤ γi.",
                "Applying IFJp, the cost share of job i should not change.",
                "Applying this procedure for every j < i with IPJθ and for every j > i with IFJp, we reach q = (N, p, θ) and the payoff of i does not change from πi.",
                "Using this argument for every i ∈ N and using the expression for the Shapley value in Lemma 3, we get the Shapley value rule.",
                "It is possible to replace one of the independence axioms with an equity axiom on sharing the transfer of a job.",
                "This is shown in Propositions 2 and 3.",
                "Proposition 2.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and PRp is a rule implied by the Shapley value rule.",
                "Proof.",
                "As in the proof of Proposition 1, define θi j = γipj ∀ i, j ∈ N. Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider a queue with jobs in set K = {1, . . . , i, i + 1}, where i < n. Define q = (K, p, θ ), where θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ is an efficient ordering for q .",
                "By ECB and Lemma 4 the cost share of job i + 1 in any allocation rule in ψ must be πi+1 = pi+1θi+1 + 1 2 ¡£j<i+1 pjθi+1¢.",
                "Now, consider q = (K, p, θ ) such that θj = θi j ∀ j ≤ i and θi+1 = θi+1. σ remains an efficient ordering in q and by IPJθ the cost share of i + 1 remains πi+1.",
                "In q = (K \\ {i + 1}, p, θ ), we can calculate the cost share of job i using ECB and Lemma 4 as πi = piθi + 1 2 £j<i pjθi.",
                "So, using PRp we get the new cost share of job i in q as πi = πi + ti+1 pi j<i+1 pj = piθi + 1 2 ¡£j<i pjθi + piθi+1¢.",
                "Now, we can set K = K ∪ {i + 2}.",
                "As before, we can find cost share of i + 2 in this queue as πi+2 = pi+2θi+2 + 1 2 ¡£j<i+2 pjθi+2¢.",
                "Using PRp we get the new cost share of job i in the new queue as πi = piθi + 1 2 ¡£j<i pjθi + piθi+1 + piθi+2¢.",
                "This process can be repeated till we add job n at which point cost share of i is piθi + 1 2 ¡£j<i pjθi + £j>i piθj¢.",
                "Then, we can adjust the θ of preceding jobs of i to their original value and applying IPJθ, the payoffs of jobs i through n will not change.",
                "This gives us the Shapley values of jobs i through n. Setting i = 1, we get cost shares of all the jobs from ψ as the Shapley value.",
                "Proposition 3.",
                "Any efficient rule ψ that satisfies ECB, IFJp, and PRθ is a rule implied by the Shapley value rule.",
                "Proof.",
                "The proof mirrors the proof of Proposition 2.",
                "We provide a short sketch.",
                "Analogous to the proof of Proposition 2, θs are kept equal to original data and processing times are initialized to pi+1 j .",
                "This allows us to use IFJp.",
                "Also, contrast to Proposition 2, we consider K = {i, i + 1, . . . , n} and repeatedly add jobs to the beginning of the queue maintaining the same efficient ordering.",
                "So, we add the cost components of preceding jobs to the cost share of jobs in each iteration and converge to the Shapley value rule.",
                "The next proposition shows that the Shapley value rule satisfies all the fairness axioms discussed.",
                "Proposition 4.",
                "The Shapley value rule satisfies efficiency, pareto indifference, anonymity, ETE, ECB, IPJθ, IFJp, PRp, and PRθ.",
                "Proof.",
                "The Shapley value rule chooses an efficient ordering and by definition the payments add upto zero.",
                "So, it satisfies efficiency.",
                "The Shapley value assigns same cost share to a job irrespective of the efficient ordering chosen.",
                "So, it is pareto indifferent.",
                "The Shapley value is anonymous because the particular index of a job does not effect his ordering or cost share.",
                "For ETE, consider two jobs i, j ∈ N such that pi = pj and θi = θj.",
                "Without loss of generality assume the efficient ordering to be 1, . . . , i, . . . , j, . . . , n. Now, the Shapley value of job i is 236 SVi = piθi + 1 2 ¡Li + Ri¢(From Lemma 3) = pjθj + 1 2 ¡Lj + Rj¢− 1 2 ¡Li − Lj + Ri − Rj¢ = SVj − 1 2 ¡   i<k≤j piθk −   i≤k<j pkθi¢ = SVj − 1 2   i<k≤j (piθk − pkθi) (Using pi = pj and θi = θj) = SVj (Using θk pk = θi pi for all i ≤ k ≤ j).",
                "The Shapley value satisfies ECB by its expression in Lemma 3.",
                "Consider any job i, in an efficient ordering σ, if we increase the value of γj for some j = i such that σj > σi, then the set Pi ( preceding jobs) does not change in the new efficient ordering.",
                "If γj is changed such that pj remains the same, then the expression £j∈Pi θipj is unchanged.",
                "If (p, θ) values of no other jobs are changed, then the Shapley value is unchanged by increasing γj for some j ∈ Pi while keeping pj unchanged.",
                "Thus, the Shapley value rule satisfies IPJθ.",
                "An analogous argument shows that the Shapley value rule satisfies IFJp.",
                "For PRp, assume without loss of generality that jobs are ordered 1, . . . , n in an efficient ordering.",
                "Denote the transfer of job i = n due to the Shapley value with set of jobs N and set of jobs N \\ {n} as ti and ti respectively.",
                "Transfer of last job is tn = 1 2 θn £j<n pj.",
                "Now, ti = 1 2 ¡θi   j<i pj − pi   j>i θj¢ = 1 2 ¡θi   j<i pj − pi   j>i:j=n θj¢− 1 2 piθn = ti − 1 2 θn   j<n pj pi £j<n pj = ti − tn pi £j<n pj .",
                "A similar argument shows that the Shapley value rule satisfies PRθ.",
                "These series of propositions lead us to our main result.",
                "Theorem 1.",
                "Let ψ be an allocation rule.",
                "The following statements are equivalent: 1) For each q ∈ Q, ψ(q) selects all the allocation assigning jobs cost shares implied by the Shapley value. 2) ψ satisfies efficiency, ECB, IFJp, and IPJθ. 3) ψ satisfies efficiency, ECB, IFJp, and PRθ. 4) ψ satisfies efficiency, ECB, PRp, and IPJθ.",
                "Proof.",
                "The proof follows from Propositions 1, 2, 3, and 4. 5.",
                "DISCUSSIONS 5.1 A Reasonable Class of Cost Sharing Mechanisms In this section, we will define a reasonable class of cost sharing mechanisms.",
                "We will show how these reasonable mechanisms lead to the Shapley value mechanism.",
                "Definition 10.",
                "An allocation rule ψ is reasonable if for all q ∈ Q and (σ, t) ∈ ψ(q) we have for all i ∈ N, ti = α ¡θi   j∈Pi(σ) pj − pi   j∈Fi(σ) θj¢∀ i ∈ N, where 0 ≤ α ≤ 1.",
                "The reasonable cost sharing mechanism says that every job should be paid a constant fraction of the difference between the waiting cost he incurs and the waiting cost he inflicts on other jobs.",
                "If α = 0, then every job bears its own cost.",
                "If α = 1, then every job gets compensated for its waiting cost but compensates others for the cost he inflicts on others.",
                "The Shapley value rule comes as a result of ETE as shown in the following proposition.",
                "Proposition 5.",
                "Any efficient and reasonable allocation rule ψ that satisfies ETE is a rule implied by the Shapley value rule.",
                "Proof.",
                "Consider a q ∈ Q in which pi = pj and θi = θj.",
                "Let (σ, t) ∈ ψ(q) and π be the resulting cost shares.",
                "From ETE, we get, πi = πj ⇒ ci(σ) − ti = cj(σ) − tj ⇒ piθi + (1 − α)Li + αRi = pjθj + (1 − α)Lj + αRj (Since ψ is efficient and reasonable) ⇒ (1 − α)(Li − Lj) = α(Rj − Ri) (Using pi = pj, θi = θj) ⇒ 1 − α = α (Using Li − Lj = Rj − Ri = 0) ⇒ α = 1 2 .",
                "This gives us the Shapley value rule by Lemma 3. 5.2 Results on Envy Chun [2] discusses a fariness condition called no-envy for the case when processing times of all jobs are unity.",
                "Definition 11.",
                "An allocation rule satisfies no-envy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tj, where π is the cost share from allocation rule (σ, t) and σij is the ordering obtaining by swapping i and j.",
                "From the result in [2], the Shapley value rule does not satisfy no-envy in our model also.",
                "To overcome this, Chun [2] introduces the notion of adjusted no-envy, which he shows is satisfied in the Shapley value rule when processing times of all jobs are unity.",
                "Here, we show that adjusted envy continues to hold in the Shapley value rule in our model (when processing times need not be unity).",
                "As before denote σij be an ordering where the position of i and j is swapped from an ordering σ.",
                "For adjusted noenvy, if (σ, t) is an allocation for some q ∈ Q, let tij be the 237 transfer of job i when the transfer of i is calculated with respect to ordering σij .",
                "Observe that an allocation may not allow for calculation of tij .",
                "For example, if ψ is efficient, then tij cannot be calculated if σij is also not efficient.",
                "For simplicity, we state the definition of adjusted no-envy to apply to all such rules.",
                "Definition 12.",
                "An allocation rule satisfies adjusted noenvy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tij i .",
                "Proposition 6.",
                "The Shapley value rule satisfies adjusted no-envy.",
                "Proof.",
                "Without loss of generality, assume efficient ordering of jobs is: 1, . . . , n. Consider two jobs i and i + k. From Lemma 3, SVi = piθi + 1 2 ¡  j<i θipj +   j>i θjpi¢.",
                "Let ˆπi be the cost share of i due to adjusted transfer tii+k i in the ordering σii+k . ˆπi = ci(σii+k ) − tii+k i = piθi + 1 2 ¡  j<i θipj + θipi+k +   i<j<i+k θipj +   j>i θjpi − θi+kpi −   i<j<i+k θjpi¢ = SVi + 1 2   i<j≤i+k ¡θipj − θjpi¢ ≥ SVi (Using the fact that θi pi ≥ θj pj for i < j). 6.",
                "CONCLUSION We studied the problem of sharing costs for a job scheduling problem on a single server, when jobs have processing times and unit time waiting costs.",
                "We took a <br>cooperative game theory approach</br> and show that the famous the Shapley value rule satisfies many nice fairness properties.",
                "We characterized the Shapley value rule using different intuitive fairness axioms.",
                "In future, we plan to further simplify some of the fairness axioms.",
                "Some initial simplifications already appear in [16], where we provide an alternative axiom to ECB and also discuss the implication of transfers between jobs (in stead of transfers from jobs to a central server).",
                "We also plan to look at cost sharing mechanisms other than the Shapley value.",
                "Investigating the strategic power of jobs in such mechanisms is another line of future research. 7.",
                "REFERENCES [1] Youngsub Chun.",
                "A Note on Maniquets Characterization of the Shapley Value in Queueing Problems.",
                "Working Paper, Rochester University, 2004. [2] Youngsub Chun.",
                "No-envy in Queuing Problems.",
                "Working Paper, Rochester University, 2004. [3] Imma Curiel, Herbert Hamers, and Flip Klijn.",
                "Sequencing Games: A Survey.",
                "In Peter Borm and Hans Peters, editors, Chapter in Game Theory.",
                "Theory and Decision Library, Kulwer Academic Publishers, 2002. [4] Imma Curiel, Giorgio Pederzoli, and Stef Tijs.",
                "Sequencing Games.",
                "European Journal of Operational Research, 40:344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs, and Bart Veltman.",
                "Sequencing and Cooperation.",
                "Operations Research, 42(3):566-568, May-June 1994. [6] Nikhil R. Devanur, Milena Mihail, and Vijay V. Vazirani.",
                "Strategyproof Cost-sharing Mechanisms for Set Cover and Facility Location Games.",
                "In Proceedings of Fourth Annual ACM Conferece on Electronic Commerce, 2003. [7] Robert J. Dolan.",
                "Incentive Mechanisms for Priority Queueing Problems.",
                "Bell Journal of Economics, 9:421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou, and Scott Shenker.",
                "Sharing the Cost of Multicast Transmissions.",
                "In Proceedings of Thirty-Second Annual ACM Symposium on Theory of Computing, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs, and Peter Borm.",
                "The Split Core for Sequencing Games.",
                "Games and Economic Behavior, 15:165-176, 1996. [10] John C. Harsanyi.",
                "Contributions to Theory of Games IV, chapter A Bargaining Model for Cooperative n-person Games.",
                "Princeton University Press, 1959.",
                "Editors: A. W. Tucker, R. D. Luce. [11] Kamal Jain and Vijay Vazirani.",
                "Applications of Approximate Algorithms to Cooperative Games.",
                "In Proceedings of 33rd Symposium on Theory of Computing (STOC 01), 2001. [12] Kamal Jain and Vijay Vazirani.",
                "Equitable Cost Allocations via Primal-Dual Type Algorithms.",
                "In Proceedings of 34th Symposium on Theory of Computing (STOC 02), 2002. [13] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without a Completely Specified Initial Order.",
                "Report in Statistics and Operations Research, pages 1-17, 2002.",
                "Report 02-04. [14] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without Initial Order.",
                "Working Paper, Universitat Aut´onoma de Barcelona, July 2004. [15] Franois Maniquet.",
                "A Characterization of the Shapley Value in Queueing Problems.",
                "Journal of Economic Theory, 109:90-103, 2003. [16] Debasis Mishra and Bharath Rangarajan.",
                "Cost sharing in a job scheduling problem.",
                "Working Paper, CORE, 2005. [17] Manipushpak Mitra.",
                "Essays on First Best Implementable Incentive Problems.",
                "Ph.D. Thesis, Indian Statistical Institute, New Delhi, 2000. [18] Manipushpak Mitra.",
                "Mechanism design in queueing problems.",
                "Economic Theory, 17(2):277-305, 2001. [19] Manipushpak Mitra.",
                "Achieving the first best in sequencing problems.",
                "Review of Economic Design, 7:75-91, 2002. [20] Herv´e Moulin.",
                "Handbook of Social Choice and Welfare, chapter Axiomatic Cost and Surplus Sharing.",
                "North-Holland, 2002.",
                "Publishers: Arrow, Sen, Suzumura. [21] Herv´e Moulin.",
                "On Scheduling Fees to Prevent 238 Merging, Splitting and Transferring of Jobs.",
                "Working Paper, Rice University, 2004. [22] Herv´e Moulin.",
                "Split-proof Probabilistic Scheduling.",
                "Working Paper, Rice University, 2004. [23] Herv´e Moulin and Rakesh Vohra.",
                "Characterization of Additive Cost Sharing Methods.",
                "Economic Letters, 80:399-407, 2003. [24] Martin P´al and ´Eva Tardos.",
                "Group Strategyproof Mechanisms via Primal-Dual Algorithms.",
                "In Proceedings of the 44th Annual IEEE Symposium on the Foundations of Computer Science (FOCS 03), 2003. [25] Lloyd S. Shapley.",
                "Contributions to the Theory of Games II, chapter A Value for n-person Games, pages 307-317.",
                "Annals of Mathematics Studies, 1953.",
                "Ediors: H. W. Kuhn, A. W. Tucker. [26] Wayne E. Smith.",
                "Various Optimizers for Single-Stage Production.",
                "Naval Research Logistics Quarterly, 3:59-66, 1956. [27] Jeroen Suijs.",
                "On incentive compatibility and budget balancedness in public decision making.",
                "Economic Design, 2, 2002. 239"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Tomamos un \"enfoque de teoría de juegos cooperativo\" y aplicamos la regla de valor de Shapley clásico al problema.",
                "Tomamos un \"enfoque de teoría de juegos cooperativo\" y mostramos que la famosa regla del valor de Shapley satisface muchas propiedades de justicia."
            ],
            "translated_text": "",
            "candidates": [
                "enfoque de teoría de juegos cooperativo",
                "enfoque de teoría de juegos cooperativo",
                "enfoque de teoría de juegos cooperativo",
                "enfoque de teoría de juegos cooperativo"
            ],
            "error": []
        },
        "unit waiting cost": {
            "translated_key": "costo de espera de la unidad",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Cost Sharing in a Job Scheduling Problem Using the Shapley Value Debasis Mishra Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium mishra@core.ucl.ac.be Bharath Rangarajan Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium rangarajan@core.ucl.ac.be ABSTRACT A set of jobs need to be served by a single server which can serve only one job at a time.",
                "Jobs have processing times and incur waiting costs (linear in their waiting time).",
                "The jobs share their costs through compensation using monetary transfers.",
                "We characterize the Shapley value rule for this model using fairness axioms.",
                "Our axioms include a bound on the cost share of jobs in a group, efficiency, and some independence properties on the the cost share of a job.",
                "Categories and Subject Descriptors J.4 [Social and Behaviorial Sciences]: Economics General Terms Economics, Theory 1.",
                "INTRODUCTION A set of jobs need to be served by a server.",
                "The server can process only one job at a time.",
                "Each job has a finite processing time and a per unit time waiting cost.",
                "Efficient ordering of this queue directs us to serve the jobs in increasing order of the ratio of per unit time waiting cost and processing time.",
                "To compensate for waiting by jobs, monetary transfers to jobs are allowed.",
                "How should the jobs share the cost equitably amongst themselves (through transfers)?",
                "The problem of fair division of costs among agents in a queue has many practical applications.",
                "For example, computer programs are regularly scheduled on servers, data are scheduled to be transmitted over networks, jobs are scheduled in shop-floor on machines, and queues appear in many public services (post offices, banks).",
                "Study of queueing problems has attracted economists for a long time [7, 17].",
                "Cost sharing is a fundamental problem in many settings on the Internet.",
                "Internet can be seen as a common resource shared by many users and the cost incured by using the resource needs to be shared in an equitable manner.",
                "The current surge in cost sharing literature from computer scientists validate this claim [8, 11, 12, 6, 24].",
                "Internet has many settings in which our model of job scheduling appears and the agents waiting in a queue incur costs (jobs scheduled on servers, queries answered from a database, data scheduled to be transmitted over a fixed bandwidth network etc.).",
                "We hope that our analysis will give new insights on cost sharing problems of this nature.",
                "Recently, there has been increased interest in cost sharing methods with submodular cost functions [11, 12, 6, 24].",
                "While many settings do have submodular cost functions (for example, multi-cast transmission games [8]), while the cost function of our game is supermodular.",
                "Also, such literature typically does not assume budget-balance (transfers adding up to zero), while it is an inherent feature of our model.",
                "A recent paper by Maniquet [15] is the closest to our model and is the motivation behind our work 1 .",
                "Maniquet [15] studies a model where he assumes all processing times are unity.",
                "For such a model, he characterizes the Shapley value rule using classical fairness axioms.",
                "Chun [1] interprets the worth of a coalition of jobs in a different manner for the same model and derives a reverse rule.",
                "Chun characterizes this rule using similar fairness axioms.",
                "Chun [2] also studies the envy properties of these rules.",
                "Moulin [22, 21] studies the queueing problem from a strategic point view when per unit waiting costs are unity.",
                "Moulin introduces new concepts in the queueing settings such as splitting and merging of jobs, and ways to prevent them.",
                "Another stream of literature is on sequencing games, first introduced by Curiel et al. [4].",
                "For a detailed survey, refer to Curiel et al. [3].",
                "Curiel et al. [4] defined sequencing games similar to our model, but in which an initial ordering of jobs is given.",
                "Besides, their notion of worth of a coalition is very different from the notions studied in Maniquet [15] and Chun [1] (these are the notions used in our work too).",
                "The particular notion of the worth of a coalition makes the sequencing game of Curiel et al. [4] convex, whereas our game is not convex and does not assume the presence of any initial order.",
                "In summary, the focus of this stream of 1 The authors thank Fran¸cois Maniquet for several fruitful discussions. 232 research is how to share the savings in costs from the initial ordering to the optimal ordering amongst jobs (also see Hamers et al. [9], Curiel et al. [5]).",
                "Recently, Klijn and S´anchez [13, 14] considered sequencing games without any initial ordering of jobs.",
                "They take two approaches to define the worth of coalitions.",
                "One of their approaches, called the tail game, is related to the reverse rule of Chun [1].",
                "In the tail game, jobs in a coalition are served after the jobs not in the coalition are served.",
                "Klijn and S´anchez [14] showed that the tail game is balanced.",
                "Further, they provide expressions for the Shapley value in tail game in terms of marginal vectors and reversed marginal vectors.",
                "We provide a simpler expression of the Shapley value in the tail game, generalizing the result in Chun [1].",
                "Klijn and S´anchez [13] study the core of this game in detail.",
                "Strategic aspects of queueing problems have also been researched.",
                "Mitra [19] studies the first best implementation in queueing models with generic cost functions.",
                "First best implementation means that there exists an efficient mechanism in which jobs in the queue have a dominant strategy to reveal their true types and their transfers add up to zero.",
                "Suijs [27] shows that if waiting costs of jobs are linear then first best implementation is possible.",
                "Mitra [19] shows that among a more general class of queueing problems first best implementation is possible if and only if the cost is linear.",
                "For another queueing model, Mitra [18] shows that first best implementation is possible if and only if the cost function satisfies a combinatorial property and an independence property.",
                "Moulin [22, 21] studies strategic concepts such as splitting and merging in queueing problems with unit per unit waiting costs.",
                "The general cost sharing literature is vast and has a long history.",
                "For a good survey, we refer to [20].",
                "From the seminal work of Shapley [25] to recent works on cost sharing in multi-cast transmission and optimization problems [8, 6, 23] this area has attracted economists, computer scientists, and operations researchers. 1.1 Our Contribution Ours is the first model which considers cost sharing when both processing time and per <br>unit waiting cost</br> of jobs are present.",
                "We take a cooperative game theory approach and apply the classical Shapley value rule to the problem.",
                "We show that the Shapley value rule satisfies many intuitive fairness axioms.",
                "Due to two dimensional nature of our model and one dimensional nature of Maniquets model [15], his axioms are insufficient to characterize the Shapley value in our setting.",
                "We introduce axioms such as independece of preceding jobs <br>unit waiting cost</br> and independence of following jobs processing time.",
                "A key axiom that we introduce gives us a bound on cost share of a job in a group of jobs which have the same ratio of unit time waiting cost and processing time (these jobs can be ordered in any manner between themseleves in an efficient ordering).",
                "If such a group consists of just one job, then the axiom says that such a job should at least pay his own processing cost (i.e., the cost it would have incurred if it was the only job in the queue).",
                "If there are multiple jobs in such a group, the probability of any two jobs from such a group inflicting costs on each other is same (1 2 ) in an efficient ordering.",
                "Depending on the ordering selected, one job inflicts cost on the other.",
                "Our fairness axiom says that each job should at least bear such expected costs.",
                "We characterize the Shapley value rule using these fairness axioms.",
                "We also extend the envy results in [2] to our setting and discuss a class of reasonable cost sharing mechanisms. 2.",
                "THE MODEL There are n jobs that need to be served by one server which can process only one job at a time.",
                "The set of jobs are denoted as N = {1, . . . , n}. σ : N → N is an ordering of jobs in N and σi denotes the position of job i in the ordering σ.",
                "Given an ordering σ, define Fi(σ) = {j ∈ N : σi < σj} and Pi(σ) = {j ∈ N : σi > σj}.",
                "Every job i is identified by two parameters: (pi, θi). pi is the processing time and θi is the cost per unit waiting time of job i.",
                "Thus, a queueing problem is defined by a list q = (N, p, θ) ∈ Q, where Q is the set of all possible lists.",
                "We will denote γi = θi pi .",
                "Given an ordering of jobs σ, the cost incurred by job i is given by ci(σ) = piθi + θi   j∈Pi(σ) pj.",
                "The total cost incurred by all jobs due to an ordering σ can be written in two ways: (i) by summing the cost incurred by every job and (ii) by summing the costs inflicted by a job on other jobs with their own processing cost.",
                "C(N, σ) =   i∈N ci(σ) =   i∈N piθi +   i∈N ¡θi   j∈Pi(σ) pj¢. =   i∈N piθi +   i∈N ¡pi   j∈Fi(σ) θj¢.",
                "An efficient ordering σ∗ is the one which minimizes the total cost incurred by all jobs.",
                "So, C(N, σ∗ ) ≤ C(N, σ) ∀ σ ∈ Σ.",
                "To achieve notational simplicity, we will write the total cost in an efficient ordering of jobs from N as C(N) whenever it is not confusing.",
                "Sometimes, we will deal with only a subset of jobs S ⊆ N. The ordering σ will then be defined on jobs in S only and we will write the total cost from an efficient ordering of jobs in S as C(S).",
                "The following lemma shows that jobs are ordered in decreasing γ in an efficient ordering.",
                "This is also known as the weighted shortest processing time rule, first introduced by Smith [26].",
                "Lemma 1.",
                "For any S ⊆ N, let σ∗ be an efficient ordering of jobs in S. For every i = j, i, j ∈ S, if σ∗ i > σ∗ j , then γi ≤ γj.",
                "Proof.",
                "Assume for contradiction that the statment of the lemma is not true.",
                "This means, we can find two consecutive jobs i, j ∈ S (σ∗ i = σ∗ j + 1) such that γi > γj.",
                "Define a new ordering σ by interchanging i and j in σ∗ .",
                "The costs to jobs in S \\ {i, j} is not changed from σ∗ to σ.",
                "The difference between total costs in σ∗ and σ is given by, C(S, σ) − C(S, σ∗ ) = θjpi − θipj.",
                "From efficiency we get θjpi − θipj ≥ 0.",
                "This gives us γj ≥ γi, which is a contradiction.",
                "An allocation for q = (N, p, θ) ∈ Q has two components: an ordering σ and a transfer ti for every job i ∈ N. ti denotes the payment received by job i.",
                "Given a transfer ti and an ordering σ, the cost share of job i is defined as, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. 233 An allocation (σ, t) is efficient for q = (N, p, θ) whenever σ is an efficient ordering and £i∈N ti = 0.",
                "The set of efficient orderings of q is denoted as Σ∗ (q) and σ∗ (q) will be used to refer to a typical element of the set.",
                "The following straightforward lemma says that for two different efficient orderings, the cost share in one efficient allocation is possible to achieve in the other by appropriately modifying the transfers.",
                "Lemma 2.",
                "Let (σ, t) be an efficient allocation and π be the vector of cost shares of jobs from this allocation.",
                "If σ∗ = σ be an efficient ordering and t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, then (σ∗ , t∗ ) is also an efficient allocation.",
                "Proof.",
                "Since (σ, t) is efficient, £i∈N ti = 0.",
                "This gives £i∈N πi = C(N).",
                "Since σ∗ is an efficient ordering, £i∈N ci(σ∗ ) = C(N).",
                "This means, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0.",
                "So, (σ∗ , t∗ ) is an efficient allocation.",
                "Depending on the transfers, the cost shares in different efficient allocations may differ.",
                "An allocation rule ψ associates with every q ∈ Q a non-empty subset ψ(q) of allocations. 3.",
                "COST SHARING USING THE SHAPLEY VALUE In this section, we define the coalitional cost of this game and analyze the solution proposed by the Shapley value.",
                "Given a queue q ∈ Q, the cost of a coalition of S ⊆ N jobs in the queue is defined as the cost incurred by jobs in S if these are the only jobs served in the queue using an efficient ordering.",
                "Formally, the cost of a coalition S ⊆ N is, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, where σ∗ = σ∗ (S) is an efficient ordering considering jobs from S only.",
                "The worth of a coalition of S jobs is just −C(S).",
                "Maniquet [15] observes another equivalent way to define the worth of a coalition is using the dual function of the cost function C(·).",
                "Other interesting ways to define the worth of a coalition in such games is discussed by Chun [1], who assume that a coalition of jobs are served after the jobs not in the coalition are served.",
                "The Shapley value (or cost share) of a job i is defined as, SVi =   S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) The Shapley value allocation rule says that jobs are ordered using an efficient ordering and transfers are assigned to jobs such that the cost share of job i is given by Equation 1.",
                "Lemma 3.",
                "Let σ∗ be an efficient ordering of jobs in set N. For all i ∈ N, the Shapley value is given by, SVi = piθi + 1 2 ¡Li + Ri¢, where Li = θi £j∈Pi(σ∗) pj and Ri = pi £j∈Fi(σ∗) θj.",
                "Proof.",
                "Another way to write the Shapley value formula is the following [10], SVi =   S⊆N:i∈S ∆(S) |S| , where ∆(S) = C(S) if |S| = 1 and ∆(S) = C(S)−£T S ∆(T).",
                "This gives ∆({i}) = C({i}) = piθi ∀i ∈ N. For any i, j ∈ N with i = j, we have ∆({i, j}) = C({i, j}) − C({i}) − C({j}) = min(piθi + pjθj + pjθi, piθi + pjθj + piθj) − piθi − pjθj = min(pjθi, piθj).",
                "We will show by induction that ∆(S) = 0 if |S| > 2.",
                "For |S| = 3, let S = {i, j, k}.",
                "Without loss of generality, assume θi pi ≥ θj pj ≥ θk pk .",
                "So, ∆(S) = C(S) − ∆({i, j}) − ∆({j, k}) − ∆({i, k})−∆({i})−∆({j})−∆({k}) = C(S)−piθj −pjθk − piθk − piθi − pjθj − pkθk = C(S) − C(S) = 0.",
                "Now, assume for T S, ∆(T) = 0 if |T| > 2.",
                "Without loss of generality assume that σ to be the identity mapping.",
                "Now, ∆(S) = C(S) −   T S ∆(T) = C(S) −   i∈S   j∈S:j<i ∆({i, j}) −   i∈S ∆({i}) = C(S) −   i∈S   j∈S:j<i pjθi −   i∈S piθi = C(S) − C(S) = 0.",
                "This proves that ∆(S) = 0 if |S| > 2.",
                "Using the Shapley value formula now, SVi =   S⊆N:i∈S ∆(S) |S| = ∆({i}) + 1 2   j∈N:j=i ∆({i, j}) = piθi + 1 2 ¡  j<i ∆({i, j}) +   j>i ∆({i, j})¢ = piθi + 1 2 ¡  j<i pjθi +   j>i piθj¢= piθi + 1 2 ¡Li + Ri¢. 4.",
                "AXIOMATICCHARACTERIZATIONOF THE SHAPLEY VALUE In this section, we will define serveral axioms on fairness and characterize the Shapley value using them.",
                "For a given q ∈ Q, we will denote ψ(q) as the set of allocations from allocation rule ψ.",
                "Also, we will denote the cost share vector associated with an allocation rule (σ, t) as π and that with allocation rule (σ , t ) as π etc. 4.1 The Fairness Axioms We will define three types of fairness axioms: (i) related to efficiency, (ii) related to equity, and (iii) related to independence.",
                "Efficiency Axioms We define two types of efficiency axioms.",
                "One related to efficiency which states that an efficient ordering should be selected and the transfers of jobs should add up to zero (budget balance).",
                "Definition 1.",
                "An allocation rule ψ satisfies efficiency if for every q ∈ Q and (σ, t) ∈ ψ(q), (σ, t) is an efficient allocation. 234 The second axiom related to efficiency says that the allocation rule should not discriminate between two allocations which are equivalent to each other in terms of cost shares of jobs.",
                "Definition 2.",
                "An allocation rule ψ satisfies Pareto indifference if for every q ∈ Q, (σ, t) ∈ ψ(q), and (σ , t ) ∈ Σ(q), we have ¡πi = πi ∀ i ∈ N¢⇒ ¡(σ , t ) ∈ ψ(q)¢.",
                "An implication of Pareto indifference axiom and Lemma 2 is that for every efficient ordering there is some set of transfers of jobs such that it is part of an efficient rule and the cost share of a job in all these allocations are same.",
                "Equity Axioms How should the cost be shared between two jobs if the jobs have some kind of similarity between them?",
                "Equity axioms provide us with fairness properties which help us answer this question.",
                "We provide five such axioms.",
                "Some of these axioms (for example anonymity, equal treatment of equals) are standard in the literature, while some are new.",
                "We start with a well known equity axiom called anonymity.",
                "Denote ρ : N → N as a permutation of elements in N. Let ρ(σ, t) denote the allocation obtained by permuting elements in σ and t according to ρ.",
                "Similarly, let ρ(p, θ) denote the new list of (p, θ) obtained by permuting elements of p and θ according to ρ.",
                "Our first equity axiom states that allocation rules should be immune to such permutation of data.",
                "Definition 3.",
                "An allocation rule ψ satisfies anonymity if for all q ∈ Q, (σ, t) ∈ ψ(q) and every permutation ρ, we then ρ(σ, t) ∈ ψ(N, ρ(q)).",
                "The next equity axiom is classical in literature and says that two similar jobs should be compensated such that their cost shares are equal.",
                "This implies that if all the jobs are of same type, then jobs should equally share the total system cost.",
                "Definition 4.",
                "An allocation rule ψ satisfies equal treatment of equals (ETE) if for all q ∈ Q, (σ, t) ∈ ψ(q), i, j ∈ N, then ¡pi = pj; θi = θj¢⇒ ¡πi = πj¢.",
                "ETE directs us to share costs equally between jobs if they are of the same per <br>unit waiting cost</br> and processing time.",
                "But it is silent about the cost shares of two jobs i and j which satisfy θi pi = θj pj .",
                "We introduce a new axiom for this.",
                "If an efficient rule chooses σ such that σi < σj for some i, j ∈ N, then job i is inflicting a cost of piθj on job j and job j is inflicting zero cost on job i.",
                "Define for some γ ≥ 0, S(γ) = {i ∈ N : γi = γ}.",
                "In an efficient rule, the elements in S(γ) can be ordered in any manner (in |S(γ)|! ways).",
                "If i, j ∈ S(γ) then we have pjθi = piθj.",
                "Probability of σi < σj is 1 2 and so is the probability of σi > σj.",
                "The expected cost i inflicts on j is 1 2 piθj and j inflicts on i is 1 2 pjθi.",
                "Our next fairness axiom says that i and j should each be responsible for their own processing cost and this expected cost they inflict on each other.",
                "Arguing for every pair of jobs i, j ∈ S(γ), we establish a bound on the cost share of jobs in S(γ).",
                "We impose this as an equity axiom below.",
                "Definition 5.",
                "An allocation rule satisfies expected cost bound (ECB) if for all q ∈ Q, (σ, t) ∈ ψ(q) with π being the resulting cost share, for any γ ≥ 0, and for every i ∈ S(γ), we have πi ≥ piθi + 1 2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢.",
                "The central idea behind this axiom is that of expected cost inflicted.",
                "If an allocation rule chooses multiple allocations, we can assign equal probabilities of selecting one of the allocations.",
                "In that case, the expected cost inflicted by a job i on another job j in the allocation rule can be calculated.",
                "Our axiom says that the cost share of a job should be at least its own processing cost and the total expected cost it inflicts on others.",
                "Note that the above bound poses no constraints on how the costs are shared among different groups.",
                "Also observe that if S(γ) contains just one job, ECB says that job should at least bear its own processing cost.",
                "A direct consequence of ECB is the following lemma.",
                "Lemma 4.",
                "Let ψ be an efficient rule which satisfies ECB.",
                "For a q ∈ Q if S(γ) = N, then for any (σ, t) ∈ ψ(q) which gives a cost share of π, πi = piθi + 1 2 ¡Li + Ri¢∀ i ∈ N. Proof.",
                "From ECB, we get πi ≥ piθi+1 2 ¡Li+Ri¢∀ i ∈ N. Assume for contradiction that there exists j ∈ N such that πj > pjθj + 1 2 ¡Li + Ri¢.",
                "Using efficiency and the fact that £i∈N Li = £i∈N Ri, we get £i∈N πi = C(N) > £i∈N piθi + 1 2 £i∈N ¡Li + Ri¢ = C(N).",
                "This gives us a contradiction.",
                "Next, we introduce an axiom about sharing the transfer of a job between a set of jobs.",
                "In particular, if the last job quits the system, then the ordering need not change.",
                "But the transfer to the last job needs to be shared between the other jobs.",
                "This should be done in proportion to their processing times because every job influenced the last job based on its processing time.",
                "Definition 6.",
                "An allocation rule ψ satisfies proportionate responsibility of p (PRp) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = |N|, q = (N \\ {k}, p , θ ) ∈ Q, such that for all i ∈ N\\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk pi £j=k pj .",
                "An analogous fairness axiom results if we remove the job from the beginning of the queue.",
                "Since the presence of the first job influenced each job depending on their θ values, its transfer needs to be shared in proportion to θ values.",
                "Definition 7.",
                "An allocation rule ψ satisfies proportionate responsibility of θ (PRθ) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = 1, q = (N \\{k}, p , θ ) ∈ Q, such that for all i ∈ N \\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk θi £j=k θj .",
                "The proportionate responsibility axioms are generalizations of equal responsibility axioms introduced by Maniquet [15]. 235 Independence Axioms The waiting cost of a job does not depend on the per <br>unit waiting cost</br> of its preceding jobs.",
                "Similarly, the waiting cost inflicted by a job to its following jobs is independent of the processing times of the following jobs.",
                "These independence properties should be carried over to the cost sharing rules.",
                "This gives us two independence axioms.",
                "Definition 8.",
                "An allocation rule ψ satisfies independence of preceding jobs θ (IPJθ) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk < γk, pk = pk, then for all j ∈ N such that σj > σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ).",
                "Definition 9.",
                "An allocation rule ψ satisfies independence of following jobs p (IFJp) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk > γk, θk = θk, then for all j ∈ N such that σj < σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ). 4.2 The Characterization Results Having stated the fairness axioms, we propose three different ways to characterize the Shapley value rule using these axioms.",
                "All our characterizations involve efficiency and ECB.",
                "But if we have IPJθ, we either need IFJp or PRp.",
                "Similarly if we have IFJp, we either need IPJθ or PRθ.",
                "Proposition 1.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and IFJp is a rule implied by the Shapley value rule.",
                "Proof.",
                "Define for any i, j ∈ N, θi j = γipj and pi j = θj γi .",
                "Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider the following q = (N, p , θ ) corresponding to job i with pj = pj if j ≤ i and pj = pi j if j > i, θj = θi j if j < i and θj = θj if j ≥ i.",
                "Observe that all jobs have the same γ: γi.",
                "By Lemma 2 and efficiency, (σ, t ) ∈ ψ(q ) for some set of transfers t .",
                "Using Lemma 4, we get cost share of i from (σ, t ) as πi = piθi + 1 2 ¡Li + Ri¢.",
                "Now, for any j < i, if we change θj to θj without changing processing time, the new γ of j is γj ≥ γi.",
                "Applying IPJθ, the cost share of job i should not change.",
                "Similarly, for any job j > i, if we change pj to pj without changing θj, the new γ of j is γj ≤ γi.",
                "Applying IFJp, the cost share of job i should not change.",
                "Applying this procedure for every j < i with IPJθ and for every j > i with IFJp, we reach q = (N, p, θ) and the payoff of i does not change from πi.",
                "Using this argument for every i ∈ N and using the expression for the Shapley value in Lemma 3, we get the Shapley value rule.",
                "It is possible to replace one of the independence axioms with an equity axiom on sharing the transfer of a job.",
                "This is shown in Propositions 2 and 3.",
                "Proposition 2.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and PRp is a rule implied by the Shapley value rule.",
                "Proof.",
                "As in the proof of Proposition 1, define θi j = γipj ∀ i, j ∈ N. Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider a queue with jobs in set K = {1, . . . , i, i + 1}, where i < n. Define q = (K, p, θ ), where θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ is an efficient ordering for q .",
                "By ECB and Lemma 4 the cost share of job i + 1 in any allocation rule in ψ must be πi+1 = pi+1θi+1 + 1 2 ¡£j<i+1 pjθi+1¢.",
                "Now, consider q = (K, p, θ ) such that θj = θi j ∀ j ≤ i and θi+1 = θi+1. σ remains an efficient ordering in q and by IPJθ the cost share of i + 1 remains πi+1.",
                "In q = (K \\ {i + 1}, p, θ ), we can calculate the cost share of job i using ECB and Lemma 4 as πi = piθi + 1 2 £j<i pjθi.",
                "So, using PRp we get the new cost share of job i in q as πi = πi + ti+1 pi j<i+1 pj = piθi + 1 2 ¡£j<i pjθi + piθi+1¢.",
                "Now, we can set K = K ∪ {i + 2}.",
                "As before, we can find cost share of i + 2 in this queue as πi+2 = pi+2θi+2 + 1 2 ¡£j<i+2 pjθi+2¢.",
                "Using PRp we get the new cost share of job i in the new queue as πi = piθi + 1 2 ¡£j<i pjθi + piθi+1 + piθi+2¢.",
                "This process can be repeated till we add job n at which point cost share of i is piθi + 1 2 ¡£j<i pjθi + £j>i piθj¢.",
                "Then, we can adjust the θ of preceding jobs of i to their original value and applying IPJθ, the payoffs of jobs i through n will not change.",
                "This gives us the Shapley values of jobs i through n. Setting i = 1, we get cost shares of all the jobs from ψ as the Shapley value.",
                "Proposition 3.",
                "Any efficient rule ψ that satisfies ECB, IFJp, and PRθ is a rule implied by the Shapley value rule.",
                "Proof.",
                "The proof mirrors the proof of Proposition 2.",
                "We provide a short sketch.",
                "Analogous to the proof of Proposition 2, θs are kept equal to original data and processing times are initialized to pi+1 j .",
                "This allows us to use IFJp.",
                "Also, contrast to Proposition 2, we consider K = {i, i + 1, . . . , n} and repeatedly add jobs to the beginning of the queue maintaining the same efficient ordering.",
                "So, we add the cost components of preceding jobs to the cost share of jobs in each iteration and converge to the Shapley value rule.",
                "The next proposition shows that the Shapley value rule satisfies all the fairness axioms discussed.",
                "Proposition 4.",
                "The Shapley value rule satisfies efficiency, pareto indifference, anonymity, ETE, ECB, IPJθ, IFJp, PRp, and PRθ.",
                "Proof.",
                "The Shapley value rule chooses an efficient ordering and by definition the payments add upto zero.",
                "So, it satisfies efficiency.",
                "The Shapley value assigns same cost share to a job irrespective of the efficient ordering chosen.",
                "So, it is pareto indifferent.",
                "The Shapley value is anonymous because the particular index of a job does not effect his ordering or cost share.",
                "For ETE, consider two jobs i, j ∈ N such that pi = pj and θi = θj.",
                "Without loss of generality assume the efficient ordering to be 1, . . . , i, . . . , j, . . . , n. Now, the Shapley value of job i is 236 SVi = piθi + 1 2 ¡Li + Ri¢(From Lemma 3) = pjθj + 1 2 ¡Lj + Rj¢− 1 2 ¡Li − Lj + Ri − Rj¢ = SVj − 1 2 ¡   i<k≤j piθk −   i≤k<j pkθi¢ = SVj − 1 2   i<k≤j (piθk − pkθi) (Using pi = pj and θi = θj) = SVj (Using θk pk = θi pi for all i ≤ k ≤ j).",
                "The Shapley value satisfies ECB by its expression in Lemma 3.",
                "Consider any job i, in an efficient ordering σ, if we increase the value of γj for some j = i such that σj > σi, then the set Pi ( preceding jobs) does not change in the new efficient ordering.",
                "If γj is changed such that pj remains the same, then the expression £j∈Pi θipj is unchanged.",
                "If (p, θ) values of no other jobs are changed, then the Shapley value is unchanged by increasing γj for some j ∈ Pi while keeping pj unchanged.",
                "Thus, the Shapley value rule satisfies IPJθ.",
                "An analogous argument shows that the Shapley value rule satisfies IFJp.",
                "For PRp, assume without loss of generality that jobs are ordered 1, . . . , n in an efficient ordering.",
                "Denote the transfer of job i = n due to the Shapley value with set of jobs N and set of jobs N \\ {n} as ti and ti respectively.",
                "Transfer of last job is tn = 1 2 θn £j<n pj.",
                "Now, ti = 1 2 ¡θi   j<i pj − pi   j>i θj¢ = 1 2 ¡θi   j<i pj − pi   j>i:j=n θj¢− 1 2 piθn = ti − 1 2 θn   j<n pj pi £j<n pj = ti − tn pi £j<n pj .",
                "A similar argument shows that the Shapley value rule satisfies PRθ.",
                "These series of propositions lead us to our main result.",
                "Theorem 1.",
                "Let ψ be an allocation rule.",
                "The following statements are equivalent: 1) For each q ∈ Q, ψ(q) selects all the allocation assigning jobs cost shares implied by the Shapley value. 2) ψ satisfies efficiency, ECB, IFJp, and IPJθ. 3) ψ satisfies efficiency, ECB, IFJp, and PRθ. 4) ψ satisfies efficiency, ECB, PRp, and IPJθ.",
                "Proof.",
                "The proof follows from Propositions 1, 2, 3, and 4. 5.",
                "DISCUSSIONS 5.1 A Reasonable Class of Cost Sharing Mechanisms In this section, we will define a reasonable class of cost sharing mechanisms.",
                "We will show how these reasonable mechanisms lead to the Shapley value mechanism.",
                "Definition 10.",
                "An allocation rule ψ is reasonable if for all q ∈ Q and (σ, t) ∈ ψ(q) we have for all i ∈ N, ti = α ¡θi   j∈Pi(σ) pj − pi   j∈Fi(σ) θj¢∀ i ∈ N, where 0 ≤ α ≤ 1.",
                "The reasonable cost sharing mechanism says that every job should be paid a constant fraction of the difference between the waiting cost he incurs and the waiting cost he inflicts on other jobs.",
                "If α = 0, then every job bears its own cost.",
                "If α = 1, then every job gets compensated for its waiting cost but compensates others for the cost he inflicts on others.",
                "The Shapley value rule comes as a result of ETE as shown in the following proposition.",
                "Proposition 5.",
                "Any efficient and reasonable allocation rule ψ that satisfies ETE is a rule implied by the Shapley value rule.",
                "Proof.",
                "Consider a q ∈ Q in which pi = pj and θi = θj.",
                "Let (σ, t) ∈ ψ(q) and π be the resulting cost shares.",
                "From ETE, we get, πi = πj ⇒ ci(σ) − ti = cj(σ) − tj ⇒ piθi + (1 − α)Li + αRi = pjθj + (1 − α)Lj + αRj (Since ψ is efficient and reasonable) ⇒ (1 − α)(Li − Lj) = α(Rj − Ri) (Using pi = pj, θi = θj) ⇒ 1 − α = α (Using Li − Lj = Rj − Ri = 0) ⇒ α = 1 2 .",
                "This gives us the Shapley value rule by Lemma 3. 5.2 Results on Envy Chun [2] discusses a fariness condition called no-envy for the case when processing times of all jobs are unity.",
                "Definition 11.",
                "An allocation rule satisfies no-envy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tj, where π is the cost share from allocation rule (σ, t) and σij is the ordering obtaining by swapping i and j.",
                "From the result in [2], the Shapley value rule does not satisfy no-envy in our model also.",
                "To overcome this, Chun [2] introduces the notion of adjusted no-envy, which he shows is satisfied in the Shapley value rule when processing times of all jobs are unity.",
                "Here, we show that adjusted envy continues to hold in the Shapley value rule in our model (when processing times need not be unity).",
                "As before denote σij be an ordering where the position of i and j is swapped from an ordering σ.",
                "For adjusted noenvy, if (σ, t) is an allocation for some q ∈ Q, let tij be the 237 transfer of job i when the transfer of i is calculated with respect to ordering σij .",
                "Observe that an allocation may not allow for calculation of tij .",
                "For example, if ψ is efficient, then tij cannot be calculated if σij is also not efficient.",
                "For simplicity, we state the definition of adjusted no-envy to apply to all such rules.",
                "Definition 12.",
                "An allocation rule satisfies adjusted noenvy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tij i .",
                "Proposition 6.",
                "The Shapley value rule satisfies adjusted no-envy.",
                "Proof.",
                "Without loss of generality, assume efficient ordering of jobs is: 1, . . . , n. Consider two jobs i and i + k. From Lemma 3, SVi = piθi + 1 2 ¡  j<i θipj +   j>i θjpi¢.",
                "Let ˆπi be the cost share of i due to adjusted transfer tii+k i in the ordering σii+k . ˆπi = ci(σii+k ) − tii+k i = piθi + 1 2 ¡  j<i θipj + θipi+k +   i<j<i+k θipj +   j>i θjpi − θi+kpi −   i<j<i+k θjpi¢ = SVi + 1 2   i<j≤i+k ¡θipj − θjpi¢ ≥ SVi (Using the fact that θi pi ≥ θj pj for i < j). 6.",
                "CONCLUSION We studied the problem of sharing costs for a job scheduling problem on a single server, when jobs have processing times and unit time waiting costs.",
                "We took a cooperative game theory approach and show that the famous the Shapley value rule satisfies many nice fairness properties.",
                "We characterized the Shapley value rule using different intuitive fairness axioms.",
                "In future, we plan to further simplify some of the fairness axioms.",
                "Some initial simplifications already appear in [16], where we provide an alternative axiom to ECB and also discuss the implication of transfers between jobs (in stead of transfers from jobs to a central server).",
                "We also plan to look at cost sharing mechanisms other than the Shapley value.",
                "Investigating the strategic power of jobs in such mechanisms is another line of future research. 7.",
                "REFERENCES [1] Youngsub Chun.",
                "A Note on Maniquets Characterization of the Shapley Value in Queueing Problems.",
                "Working Paper, Rochester University, 2004. [2] Youngsub Chun.",
                "No-envy in Queuing Problems.",
                "Working Paper, Rochester University, 2004. [3] Imma Curiel, Herbert Hamers, and Flip Klijn.",
                "Sequencing Games: A Survey.",
                "In Peter Borm and Hans Peters, editors, Chapter in Game Theory.",
                "Theory and Decision Library, Kulwer Academic Publishers, 2002. [4] Imma Curiel, Giorgio Pederzoli, and Stef Tijs.",
                "Sequencing Games.",
                "European Journal of Operational Research, 40:344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs, and Bart Veltman.",
                "Sequencing and Cooperation.",
                "Operations Research, 42(3):566-568, May-June 1994. [6] Nikhil R. Devanur, Milena Mihail, and Vijay V. Vazirani.",
                "Strategyproof Cost-sharing Mechanisms for Set Cover and Facility Location Games.",
                "In Proceedings of Fourth Annual ACM Conferece on Electronic Commerce, 2003. [7] Robert J. Dolan.",
                "Incentive Mechanisms for Priority Queueing Problems.",
                "Bell Journal of Economics, 9:421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou, and Scott Shenker.",
                "Sharing the Cost of Multicast Transmissions.",
                "In Proceedings of Thirty-Second Annual ACM Symposium on Theory of Computing, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs, and Peter Borm.",
                "The Split Core for Sequencing Games.",
                "Games and Economic Behavior, 15:165-176, 1996. [10] John C. Harsanyi.",
                "Contributions to Theory of Games IV, chapter A Bargaining Model for Cooperative n-person Games.",
                "Princeton University Press, 1959.",
                "Editors: A. W. Tucker, R. D. Luce. [11] Kamal Jain and Vijay Vazirani.",
                "Applications of Approximate Algorithms to Cooperative Games.",
                "In Proceedings of 33rd Symposium on Theory of Computing (STOC 01), 2001. [12] Kamal Jain and Vijay Vazirani.",
                "Equitable Cost Allocations via Primal-Dual Type Algorithms.",
                "In Proceedings of 34th Symposium on Theory of Computing (STOC 02), 2002. [13] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without a Completely Specified Initial Order.",
                "Report in Statistics and Operations Research, pages 1-17, 2002.",
                "Report 02-04. [14] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without Initial Order.",
                "Working Paper, Universitat Aut´onoma de Barcelona, July 2004. [15] Franois Maniquet.",
                "A Characterization of the Shapley Value in Queueing Problems.",
                "Journal of Economic Theory, 109:90-103, 2003. [16] Debasis Mishra and Bharath Rangarajan.",
                "Cost sharing in a job scheduling problem.",
                "Working Paper, CORE, 2005. [17] Manipushpak Mitra.",
                "Essays on First Best Implementable Incentive Problems.",
                "Ph.D. Thesis, Indian Statistical Institute, New Delhi, 2000. [18] Manipushpak Mitra.",
                "Mechanism design in queueing problems.",
                "Economic Theory, 17(2):277-305, 2001. [19] Manipushpak Mitra.",
                "Achieving the first best in sequencing problems.",
                "Review of Economic Design, 7:75-91, 2002. [20] Herv´e Moulin.",
                "Handbook of Social Choice and Welfare, chapter Axiomatic Cost and Surplus Sharing.",
                "North-Holland, 2002.",
                "Publishers: Arrow, Sen, Suzumura. [21] Herv´e Moulin.",
                "On Scheduling Fees to Prevent 238 Merging, Splitting and Transferring of Jobs.",
                "Working Paper, Rice University, 2004. [22] Herv´e Moulin.",
                "Split-proof Probabilistic Scheduling.",
                "Working Paper, Rice University, 2004. [23] Herv´e Moulin and Rakesh Vohra.",
                "Characterization of Additive Cost Sharing Methods.",
                "Economic Letters, 80:399-407, 2003. [24] Martin P´al and ´Eva Tardos.",
                "Group Strategyproof Mechanisms via Primal-Dual Algorithms.",
                "In Proceedings of the 44th Annual IEEE Symposium on the Foundations of Computer Science (FOCS 03), 2003. [25] Lloyd S. Shapley.",
                "Contributions to the Theory of Games II, chapter A Value for n-person Games, pages 307-317.",
                "Annals of Mathematics Studies, 1953.",
                "Ediors: H. W. Kuhn, A. W. Tucker. [26] Wayne E. Smith.",
                "Various Optimizers for Single-Stage Production.",
                "Naval Research Logistics Quarterly, 3:59-66, 1956. [27] Jeroen Suijs.",
                "On incentive compatibility and budget balancedness in public decision making.",
                "Economic Design, 2, 2002. 239"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Desde el trabajo seminal de Shapley [25] hasta trabajos recientes sobre costos compartidos en problemas de transmisión y optimización de varios casos [8, 6, 23] Esta área ha atraído a economistas, informáticos e investigadores de operaciones.1.1 Nuestra contribución es el primer modelo que considera el costo compartido cuando el tiempo de procesamiento y el \"costo de espera de la unidad\" de los trabajos están presentes.",
                "Introducimos axiomas como Independece de los trabajos anteriores \"costo de espera de la unidad\" e independencia del seguimiento del tiempo de procesamiento de empleos.",
                "ETE nos dirige a compartir los costos por igual entre los trabajos si son del mismo por \"costo de espera de la unidad\" y tiempo de procesamiento.",
                "Los axiomas de responsabilidad proporcional son las generalizaciones de igual responsabilidad axiomas introducidos por Maniquet [15].235 Axiomas de independencia El costo de espera de un trabajo no depende del \"costo de espera de la unidad\" de sus trabajos anteriores."
            ],
            "translated_text": "",
            "candidates": [
                "Costo de espera de unidad",
                "costo de espera de la unidad",
                "Costo de espera de unidad",
                "costo de espera de la unidad",
                "Costo de espera de unidad",
                "costo de espera de la unidad",
                "Costo de espera de unidad",
                "costo de espera de la unidad"
            ],
            "error": []
        },
        "processing time": {
            "translated_key": "Tiempo de procesamiento",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Cost Sharing in a Job Scheduling Problem Using the Shapley Value Debasis Mishra Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium mishra@core.ucl.ac.be Bharath Rangarajan Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium rangarajan@core.ucl.ac.be ABSTRACT A set of jobs need to be served by a single server which can serve only one job at a time.",
                "Jobs have processing times and incur waiting costs (linear in their waiting time).",
                "The jobs share their costs through compensation using monetary transfers.",
                "We characterize the Shapley value rule for this model using fairness axioms.",
                "Our axioms include a bound on the cost share of jobs in a group, efficiency, and some independence properties on the the cost share of a job.",
                "Categories and Subject Descriptors J.4 [Social and Behaviorial Sciences]: Economics General Terms Economics, Theory 1.",
                "INTRODUCTION A set of jobs need to be served by a server.",
                "The server can process only one job at a time.",
                "Each job has a finite <br>processing time</br> and a per unit time waiting cost.",
                "Efficient ordering of this queue directs us to serve the jobs in increasing order of the ratio of per unit time waiting cost and <br>processing time</br>.",
                "To compensate for waiting by jobs, monetary transfers to jobs are allowed.",
                "How should the jobs share the cost equitably amongst themselves (through transfers)?",
                "The problem of fair division of costs among agents in a queue has many practical applications.",
                "For example, computer programs are regularly scheduled on servers, data are scheduled to be transmitted over networks, jobs are scheduled in shop-floor on machines, and queues appear in many public services (post offices, banks).",
                "Study of queueing problems has attracted economists for a long time [7, 17].",
                "Cost sharing is a fundamental problem in many settings on the Internet.",
                "Internet can be seen as a common resource shared by many users and the cost incured by using the resource needs to be shared in an equitable manner.",
                "The current surge in cost sharing literature from computer scientists validate this claim [8, 11, 12, 6, 24].",
                "Internet has many settings in which our model of job scheduling appears and the agents waiting in a queue incur costs (jobs scheduled on servers, queries answered from a database, data scheduled to be transmitted over a fixed bandwidth network etc.).",
                "We hope that our analysis will give new insights on cost sharing problems of this nature.",
                "Recently, there has been increased interest in cost sharing methods with submodular cost functions [11, 12, 6, 24].",
                "While many settings do have submodular cost functions (for example, multi-cast transmission games [8]), while the cost function of our game is supermodular.",
                "Also, such literature typically does not assume budget-balance (transfers adding up to zero), while it is an inherent feature of our model.",
                "A recent paper by Maniquet [15] is the closest to our model and is the motivation behind our work 1 .",
                "Maniquet [15] studies a model where he assumes all processing times are unity.",
                "For such a model, he characterizes the Shapley value rule using classical fairness axioms.",
                "Chun [1] interprets the worth of a coalition of jobs in a different manner for the same model and derives a reverse rule.",
                "Chun characterizes this rule using similar fairness axioms.",
                "Chun [2] also studies the envy properties of these rules.",
                "Moulin [22, 21] studies the queueing problem from a strategic point view when per unit waiting costs are unity.",
                "Moulin introduces new concepts in the queueing settings such as splitting and merging of jobs, and ways to prevent them.",
                "Another stream of literature is on sequencing games, first introduced by Curiel et al. [4].",
                "For a detailed survey, refer to Curiel et al. [3].",
                "Curiel et al. [4] defined sequencing games similar to our model, but in which an initial ordering of jobs is given.",
                "Besides, their notion of worth of a coalition is very different from the notions studied in Maniquet [15] and Chun [1] (these are the notions used in our work too).",
                "The particular notion of the worth of a coalition makes the sequencing game of Curiel et al. [4] convex, whereas our game is not convex and does not assume the presence of any initial order.",
                "In summary, the focus of this stream of 1 The authors thank Fran¸cois Maniquet for several fruitful discussions. 232 research is how to share the savings in costs from the initial ordering to the optimal ordering amongst jobs (also see Hamers et al. [9], Curiel et al. [5]).",
                "Recently, Klijn and S´anchez [13, 14] considered sequencing games without any initial ordering of jobs.",
                "They take two approaches to define the worth of coalitions.",
                "One of their approaches, called the tail game, is related to the reverse rule of Chun [1].",
                "In the tail game, jobs in a coalition are served after the jobs not in the coalition are served.",
                "Klijn and S´anchez [14] showed that the tail game is balanced.",
                "Further, they provide expressions for the Shapley value in tail game in terms of marginal vectors and reversed marginal vectors.",
                "We provide a simpler expression of the Shapley value in the tail game, generalizing the result in Chun [1].",
                "Klijn and S´anchez [13] study the core of this game in detail.",
                "Strategic aspects of queueing problems have also been researched.",
                "Mitra [19] studies the first best implementation in queueing models with generic cost functions.",
                "First best implementation means that there exists an efficient mechanism in which jobs in the queue have a dominant strategy to reveal their true types and their transfers add up to zero.",
                "Suijs [27] shows that if waiting costs of jobs are linear then first best implementation is possible.",
                "Mitra [19] shows that among a more general class of queueing problems first best implementation is possible if and only if the cost is linear.",
                "For another queueing model, Mitra [18] shows that first best implementation is possible if and only if the cost function satisfies a combinatorial property and an independence property.",
                "Moulin [22, 21] studies strategic concepts such as splitting and merging in queueing problems with unit per unit waiting costs.",
                "The general cost sharing literature is vast and has a long history.",
                "For a good survey, we refer to [20].",
                "From the seminal work of Shapley [25] to recent works on cost sharing in multi-cast transmission and optimization problems [8, 6, 23] this area has attracted economists, computer scientists, and operations researchers. 1.1 Our Contribution Ours is the first model which considers cost sharing when both <br>processing time</br> and per unit waiting cost of jobs are present.",
                "We take a cooperative game theory approach and apply the classical Shapley value rule to the problem.",
                "We show that the Shapley value rule satisfies many intuitive fairness axioms.",
                "Due to two dimensional nature of our model and one dimensional nature of Maniquets model [15], his axioms are insufficient to characterize the Shapley value in our setting.",
                "We introduce axioms such as independece of preceding jobs unit waiting cost and independence of following jobs <br>processing time</br>.",
                "A key axiom that we introduce gives us a bound on cost share of a job in a group of jobs which have the same ratio of unit time waiting cost and <br>processing time</br> (these jobs can be ordered in any manner between themseleves in an efficient ordering).",
                "If such a group consists of just one job, then the axiom says that such a job should at least pay his own processing cost (i.e., the cost it would have incurred if it was the only job in the queue).",
                "If there are multiple jobs in such a group, the probability of any two jobs from such a group inflicting costs on each other is same (1 2 ) in an efficient ordering.",
                "Depending on the ordering selected, one job inflicts cost on the other.",
                "Our fairness axiom says that each job should at least bear such expected costs.",
                "We characterize the Shapley value rule using these fairness axioms.",
                "We also extend the envy results in [2] to our setting and discuss a class of reasonable cost sharing mechanisms. 2.",
                "THE MODEL There are n jobs that need to be served by one server which can process only one job at a time.",
                "The set of jobs are denoted as N = {1, . . . , n}. σ : N → N is an ordering of jobs in N and σi denotes the position of job i in the ordering σ.",
                "Given an ordering σ, define Fi(σ) = {j ∈ N : σi < σj} and Pi(σ) = {j ∈ N : σi > σj}.",
                "Every job i is identified by two parameters: (pi, θi). pi is the <br>processing time</br> and θi is the cost per unit waiting time of job i.",
                "Thus, a queueing problem is defined by a list q = (N, p, θ) ∈ Q, where Q is the set of all possible lists.",
                "We will denote γi = θi pi .",
                "Given an ordering of jobs σ, the cost incurred by job i is given by ci(σ) = piθi + θi   j∈Pi(σ) pj.",
                "The total cost incurred by all jobs due to an ordering σ can be written in two ways: (i) by summing the cost incurred by every job and (ii) by summing the costs inflicted by a job on other jobs with their own processing cost.",
                "C(N, σ) =   i∈N ci(σ) =   i∈N piθi +   i∈N ¡θi   j∈Pi(σ) pj¢. =   i∈N piθi +   i∈N ¡pi   j∈Fi(σ) θj¢.",
                "An efficient ordering σ∗ is the one which minimizes the total cost incurred by all jobs.",
                "So, C(N, σ∗ ) ≤ C(N, σ) ∀ σ ∈ Σ.",
                "To achieve notational simplicity, we will write the total cost in an efficient ordering of jobs from N as C(N) whenever it is not confusing.",
                "Sometimes, we will deal with only a subset of jobs S ⊆ N. The ordering σ will then be defined on jobs in S only and we will write the total cost from an efficient ordering of jobs in S as C(S).",
                "The following lemma shows that jobs are ordered in decreasing γ in an efficient ordering.",
                "This is also known as the weighted shortest <br>processing time</br> rule, first introduced by Smith [26].",
                "Lemma 1.",
                "For any S ⊆ N, let σ∗ be an efficient ordering of jobs in S. For every i = j, i, j ∈ S, if σ∗ i > σ∗ j , then γi ≤ γj.",
                "Proof.",
                "Assume for contradiction that the statment of the lemma is not true.",
                "This means, we can find two consecutive jobs i, j ∈ S (σ∗ i = σ∗ j + 1) such that γi > γj.",
                "Define a new ordering σ by interchanging i and j in σ∗ .",
                "The costs to jobs in S \\ {i, j} is not changed from σ∗ to σ.",
                "The difference between total costs in σ∗ and σ is given by, C(S, σ) − C(S, σ∗ ) = θjpi − θipj.",
                "From efficiency we get θjpi − θipj ≥ 0.",
                "This gives us γj ≥ γi, which is a contradiction.",
                "An allocation for q = (N, p, θ) ∈ Q has two components: an ordering σ and a transfer ti for every job i ∈ N. ti denotes the payment received by job i.",
                "Given a transfer ti and an ordering σ, the cost share of job i is defined as, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. 233 An allocation (σ, t) is efficient for q = (N, p, θ) whenever σ is an efficient ordering and £i∈N ti = 0.",
                "The set of efficient orderings of q is denoted as Σ∗ (q) and σ∗ (q) will be used to refer to a typical element of the set.",
                "The following straightforward lemma says that for two different efficient orderings, the cost share in one efficient allocation is possible to achieve in the other by appropriately modifying the transfers.",
                "Lemma 2.",
                "Let (σ, t) be an efficient allocation and π be the vector of cost shares of jobs from this allocation.",
                "If σ∗ = σ be an efficient ordering and t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, then (σ∗ , t∗ ) is also an efficient allocation.",
                "Proof.",
                "Since (σ, t) is efficient, £i∈N ti = 0.",
                "This gives £i∈N πi = C(N).",
                "Since σ∗ is an efficient ordering, £i∈N ci(σ∗ ) = C(N).",
                "This means, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0.",
                "So, (σ∗ , t∗ ) is an efficient allocation.",
                "Depending on the transfers, the cost shares in different efficient allocations may differ.",
                "An allocation rule ψ associates with every q ∈ Q a non-empty subset ψ(q) of allocations. 3.",
                "COST SHARING USING THE SHAPLEY VALUE In this section, we define the coalitional cost of this game and analyze the solution proposed by the Shapley value.",
                "Given a queue q ∈ Q, the cost of a coalition of S ⊆ N jobs in the queue is defined as the cost incurred by jobs in S if these are the only jobs served in the queue using an efficient ordering.",
                "Formally, the cost of a coalition S ⊆ N is, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, where σ∗ = σ∗ (S) is an efficient ordering considering jobs from S only.",
                "The worth of a coalition of S jobs is just −C(S).",
                "Maniquet [15] observes another equivalent way to define the worth of a coalition is using the dual function of the cost function C(·).",
                "Other interesting ways to define the worth of a coalition in such games is discussed by Chun [1], who assume that a coalition of jobs are served after the jobs not in the coalition are served.",
                "The Shapley value (or cost share) of a job i is defined as, SVi =   S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) The Shapley value allocation rule says that jobs are ordered using an efficient ordering and transfers are assigned to jobs such that the cost share of job i is given by Equation 1.",
                "Lemma 3.",
                "Let σ∗ be an efficient ordering of jobs in set N. For all i ∈ N, the Shapley value is given by, SVi = piθi + 1 2 ¡Li + Ri¢, where Li = θi £j∈Pi(σ∗) pj and Ri = pi £j∈Fi(σ∗) θj.",
                "Proof.",
                "Another way to write the Shapley value formula is the following [10], SVi =   S⊆N:i∈S ∆(S) |S| , where ∆(S) = C(S) if |S| = 1 and ∆(S) = C(S)−£T S ∆(T).",
                "This gives ∆({i}) = C({i}) = piθi ∀i ∈ N. For any i, j ∈ N with i = j, we have ∆({i, j}) = C({i, j}) − C({i}) − C({j}) = min(piθi + pjθj + pjθi, piθi + pjθj + piθj) − piθi − pjθj = min(pjθi, piθj).",
                "We will show by induction that ∆(S) = 0 if |S| > 2.",
                "For |S| = 3, let S = {i, j, k}.",
                "Without loss of generality, assume θi pi ≥ θj pj ≥ θk pk .",
                "So, ∆(S) = C(S) − ∆({i, j}) − ∆({j, k}) − ∆({i, k})−∆({i})−∆({j})−∆({k}) = C(S)−piθj −pjθk − piθk − piθi − pjθj − pkθk = C(S) − C(S) = 0.",
                "Now, assume for T S, ∆(T) = 0 if |T| > 2.",
                "Without loss of generality assume that σ to be the identity mapping.",
                "Now, ∆(S) = C(S) −   T S ∆(T) = C(S) −   i∈S   j∈S:j<i ∆({i, j}) −   i∈S ∆({i}) = C(S) −   i∈S   j∈S:j<i pjθi −   i∈S piθi = C(S) − C(S) = 0.",
                "This proves that ∆(S) = 0 if |S| > 2.",
                "Using the Shapley value formula now, SVi =   S⊆N:i∈S ∆(S) |S| = ∆({i}) + 1 2   j∈N:j=i ∆({i, j}) = piθi + 1 2 ¡  j<i ∆({i, j}) +   j>i ∆({i, j})¢ = piθi + 1 2 ¡  j<i pjθi +   j>i piθj¢= piθi + 1 2 ¡Li + Ri¢. 4.",
                "AXIOMATICCHARACTERIZATIONOF THE SHAPLEY VALUE In this section, we will define serveral axioms on fairness and characterize the Shapley value using them.",
                "For a given q ∈ Q, we will denote ψ(q) as the set of allocations from allocation rule ψ.",
                "Also, we will denote the cost share vector associated with an allocation rule (σ, t) as π and that with allocation rule (σ , t ) as π etc. 4.1 The Fairness Axioms We will define three types of fairness axioms: (i) related to efficiency, (ii) related to equity, and (iii) related to independence.",
                "Efficiency Axioms We define two types of efficiency axioms.",
                "One related to efficiency which states that an efficient ordering should be selected and the transfers of jobs should add up to zero (budget balance).",
                "Definition 1.",
                "An allocation rule ψ satisfies efficiency if for every q ∈ Q and (σ, t) ∈ ψ(q), (σ, t) is an efficient allocation. 234 The second axiom related to efficiency says that the allocation rule should not discriminate between two allocations which are equivalent to each other in terms of cost shares of jobs.",
                "Definition 2.",
                "An allocation rule ψ satisfies Pareto indifference if for every q ∈ Q, (σ, t) ∈ ψ(q), and (σ , t ) ∈ Σ(q), we have ¡πi = πi ∀ i ∈ N¢⇒ ¡(σ , t ) ∈ ψ(q)¢.",
                "An implication of Pareto indifference axiom and Lemma 2 is that for every efficient ordering there is some set of transfers of jobs such that it is part of an efficient rule and the cost share of a job in all these allocations are same.",
                "Equity Axioms How should the cost be shared between two jobs if the jobs have some kind of similarity between them?",
                "Equity axioms provide us with fairness properties which help us answer this question.",
                "We provide five such axioms.",
                "Some of these axioms (for example anonymity, equal treatment of equals) are standard in the literature, while some are new.",
                "We start with a well known equity axiom called anonymity.",
                "Denote ρ : N → N as a permutation of elements in N. Let ρ(σ, t) denote the allocation obtained by permuting elements in σ and t according to ρ.",
                "Similarly, let ρ(p, θ) denote the new list of (p, θ) obtained by permuting elements of p and θ according to ρ.",
                "Our first equity axiom states that allocation rules should be immune to such permutation of data.",
                "Definition 3.",
                "An allocation rule ψ satisfies anonymity if for all q ∈ Q, (σ, t) ∈ ψ(q) and every permutation ρ, we then ρ(σ, t) ∈ ψ(N, ρ(q)).",
                "The next equity axiom is classical in literature and says that two similar jobs should be compensated such that their cost shares are equal.",
                "This implies that if all the jobs are of same type, then jobs should equally share the total system cost.",
                "Definition 4.",
                "An allocation rule ψ satisfies equal treatment of equals (ETE) if for all q ∈ Q, (σ, t) ∈ ψ(q), i, j ∈ N, then ¡pi = pj; θi = θj¢⇒ ¡πi = πj¢.",
                "ETE directs us to share costs equally between jobs if they are of the same per unit waiting cost and <br>processing time</br>.",
                "But it is silent about the cost shares of two jobs i and j which satisfy θi pi = θj pj .",
                "We introduce a new axiom for this.",
                "If an efficient rule chooses σ such that σi < σj for some i, j ∈ N, then job i is inflicting a cost of piθj on job j and job j is inflicting zero cost on job i.",
                "Define for some γ ≥ 0, S(γ) = {i ∈ N : γi = γ}.",
                "In an efficient rule, the elements in S(γ) can be ordered in any manner (in |S(γ)|! ways).",
                "If i, j ∈ S(γ) then we have pjθi = piθj.",
                "Probability of σi < σj is 1 2 and so is the probability of σi > σj.",
                "The expected cost i inflicts on j is 1 2 piθj and j inflicts on i is 1 2 pjθi.",
                "Our next fairness axiom says that i and j should each be responsible for their own processing cost and this expected cost they inflict on each other.",
                "Arguing for every pair of jobs i, j ∈ S(γ), we establish a bound on the cost share of jobs in S(γ).",
                "We impose this as an equity axiom below.",
                "Definition 5.",
                "An allocation rule satisfies expected cost bound (ECB) if for all q ∈ Q, (σ, t) ∈ ψ(q) with π being the resulting cost share, for any γ ≥ 0, and for every i ∈ S(γ), we have πi ≥ piθi + 1 2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢.",
                "The central idea behind this axiom is that of expected cost inflicted.",
                "If an allocation rule chooses multiple allocations, we can assign equal probabilities of selecting one of the allocations.",
                "In that case, the expected cost inflicted by a job i on another job j in the allocation rule can be calculated.",
                "Our axiom says that the cost share of a job should be at least its own processing cost and the total expected cost it inflicts on others.",
                "Note that the above bound poses no constraints on how the costs are shared among different groups.",
                "Also observe that if S(γ) contains just one job, ECB says that job should at least bear its own processing cost.",
                "A direct consequence of ECB is the following lemma.",
                "Lemma 4.",
                "Let ψ be an efficient rule which satisfies ECB.",
                "For a q ∈ Q if S(γ) = N, then for any (σ, t) ∈ ψ(q) which gives a cost share of π, πi = piθi + 1 2 ¡Li + Ri¢∀ i ∈ N. Proof.",
                "From ECB, we get πi ≥ piθi+1 2 ¡Li+Ri¢∀ i ∈ N. Assume for contradiction that there exists j ∈ N such that πj > pjθj + 1 2 ¡Li + Ri¢.",
                "Using efficiency and the fact that £i∈N Li = £i∈N Ri, we get £i∈N πi = C(N) > £i∈N piθi + 1 2 £i∈N ¡Li + Ri¢ = C(N).",
                "This gives us a contradiction.",
                "Next, we introduce an axiom about sharing the transfer of a job between a set of jobs.",
                "In particular, if the last job quits the system, then the ordering need not change.",
                "But the transfer to the last job needs to be shared between the other jobs.",
                "This should be done in proportion to their processing times because every job influenced the last job based on its <br>processing time</br>.",
                "Definition 6.",
                "An allocation rule ψ satisfies proportionate responsibility of p (PRp) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = |N|, q = (N \\ {k}, p , θ ) ∈ Q, such that for all i ∈ N\\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk pi £j=k pj .",
                "An analogous fairness axiom results if we remove the job from the beginning of the queue.",
                "Since the presence of the first job influenced each job depending on their θ values, its transfer needs to be shared in proportion to θ values.",
                "Definition 7.",
                "An allocation rule ψ satisfies proportionate responsibility of θ (PRθ) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = 1, q = (N \\{k}, p , θ ) ∈ Q, such that for all i ∈ N \\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk θi £j=k θj .",
                "The proportionate responsibility axioms are generalizations of equal responsibility axioms introduced by Maniquet [15]. 235 Independence Axioms The waiting cost of a job does not depend on the per unit waiting cost of its preceding jobs.",
                "Similarly, the waiting cost inflicted by a job to its following jobs is independent of the processing times of the following jobs.",
                "These independence properties should be carried over to the cost sharing rules.",
                "This gives us two independence axioms.",
                "Definition 8.",
                "An allocation rule ψ satisfies independence of preceding jobs θ (IPJθ) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk < γk, pk = pk, then for all j ∈ N such that σj > σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ).",
                "Definition 9.",
                "An allocation rule ψ satisfies independence of following jobs p (IFJp) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk > γk, θk = θk, then for all j ∈ N such that σj < σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ). 4.2 The Characterization Results Having stated the fairness axioms, we propose three different ways to characterize the Shapley value rule using these axioms.",
                "All our characterizations involve efficiency and ECB.",
                "But if we have IPJθ, we either need IFJp or PRp.",
                "Similarly if we have IFJp, we either need IPJθ or PRθ.",
                "Proposition 1.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and IFJp is a rule implied by the Shapley value rule.",
                "Proof.",
                "Define for any i, j ∈ N, θi j = γipj and pi j = θj γi .",
                "Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider the following q = (N, p , θ ) corresponding to job i with pj = pj if j ≤ i and pj = pi j if j > i, θj = θi j if j < i and θj = θj if j ≥ i.",
                "Observe that all jobs have the same γ: γi.",
                "By Lemma 2 and efficiency, (σ, t ) ∈ ψ(q ) for some set of transfers t .",
                "Using Lemma 4, we get cost share of i from (σ, t ) as πi = piθi + 1 2 ¡Li + Ri¢.",
                "Now, for any j < i, if we change θj to θj without changing <br>processing time</br>, the new γ of j is γj ≥ γi.",
                "Applying IPJθ, the cost share of job i should not change.",
                "Similarly, for any job j > i, if we change pj to pj without changing θj, the new γ of j is γj ≤ γi.",
                "Applying IFJp, the cost share of job i should not change.",
                "Applying this procedure for every j < i with IPJθ and for every j > i with IFJp, we reach q = (N, p, θ) and the payoff of i does not change from πi.",
                "Using this argument for every i ∈ N and using the expression for the Shapley value in Lemma 3, we get the Shapley value rule.",
                "It is possible to replace one of the independence axioms with an equity axiom on sharing the transfer of a job.",
                "This is shown in Propositions 2 and 3.",
                "Proposition 2.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and PRp is a rule implied by the Shapley value rule.",
                "Proof.",
                "As in the proof of Proposition 1, define θi j = γipj ∀ i, j ∈ N. Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider a queue with jobs in set K = {1, . . . , i, i + 1}, where i < n. Define q = (K, p, θ ), where θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ is an efficient ordering for q .",
                "By ECB and Lemma 4 the cost share of job i + 1 in any allocation rule in ψ must be πi+1 = pi+1θi+1 + 1 2 ¡£j<i+1 pjθi+1¢.",
                "Now, consider q = (K, p, θ ) such that θj = θi j ∀ j ≤ i and θi+1 = θi+1. σ remains an efficient ordering in q and by IPJθ the cost share of i + 1 remains πi+1.",
                "In q = (K \\ {i + 1}, p, θ ), we can calculate the cost share of job i using ECB and Lemma 4 as πi = piθi + 1 2 £j<i pjθi.",
                "So, using PRp we get the new cost share of job i in q as πi = πi + ti+1 pi j<i+1 pj = piθi + 1 2 ¡£j<i pjθi + piθi+1¢.",
                "Now, we can set K = K ∪ {i + 2}.",
                "As before, we can find cost share of i + 2 in this queue as πi+2 = pi+2θi+2 + 1 2 ¡£j<i+2 pjθi+2¢.",
                "Using PRp we get the new cost share of job i in the new queue as πi = piθi + 1 2 ¡£j<i pjθi + piθi+1 + piθi+2¢.",
                "This process can be repeated till we add job n at which point cost share of i is piθi + 1 2 ¡£j<i pjθi + £j>i piθj¢.",
                "Then, we can adjust the θ of preceding jobs of i to their original value and applying IPJθ, the payoffs of jobs i through n will not change.",
                "This gives us the Shapley values of jobs i through n. Setting i = 1, we get cost shares of all the jobs from ψ as the Shapley value.",
                "Proposition 3.",
                "Any efficient rule ψ that satisfies ECB, IFJp, and PRθ is a rule implied by the Shapley value rule.",
                "Proof.",
                "The proof mirrors the proof of Proposition 2.",
                "We provide a short sketch.",
                "Analogous to the proof of Proposition 2, θs are kept equal to original data and processing times are initialized to pi+1 j .",
                "This allows us to use IFJp.",
                "Also, contrast to Proposition 2, we consider K = {i, i + 1, . . . , n} and repeatedly add jobs to the beginning of the queue maintaining the same efficient ordering.",
                "So, we add the cost components of preceding jobs to the cost share of jobs in each iteration and converge to the Shapley value rule.",
                "The next proposition shows that the Shapley value rule satisfies all the fairness axioms discussed.",
                "Proposition 4.",
                "The Shapley value rule satisfies efficiency, pareto indifference, anonymity, ETE, ECB, IPJθ, IFJp, PRp, and PRθ.",
                "Proof.",
                "The Shapley value rule chooses an efficient ordering and by definition the payments add upto zero.",
                "So, it satisfies efficiency.",
                "The Shapley value assigns same cost share to a job irrespective of the efficient ordering chosen.",
                "So, it is pareto indifferent.",
                "The Shapley value is anonymous because the particular index of a job does not effect his ordering or cost share.",
                "For ETE, consider two jobs i, j ∈ N such that pi = pj and θi = θj.",
                "Without loss of generality assume the efficient ordering to be 1, . . . , i, . . . , j, . . . , n. Now, the Shapley value of job i is 236 SVi = piθi + 1 2 ¡Li + Ri¢(From Lemma 3) = pjθj + 1 2 ¡Lj + Rj¢− 1 2 ¡Li − Lj + Ri − Rj¢ = SVj − 1 2 ¡   i<k≤j piθk −   i≤k<j pkθi¢ = SVj − 1 2   i<k≤j (piθk − pkθi) (Using pi = pj and θi = θj) = SVj (Using θk pk = θi pi for all i ≤ k ≤ j).",
                "The Shapley value satisfies ECB by its expression in Lemma 3.",
                "Consider any job i, in an efficient ordering σ, if we increase the value of γj for some j = i such that σj > σi, then the set Pi ( preceding jobs) does not change in the new efficient ordering.",
                "If γj is changed such that pj remains the same, then the expression £j∈Pi θipj is unchanged.",
                "If (p, θ) values of no other jobs are changed, then the Shapley value is unchanged by increasing γj for some j ∈ Pi while keeping pj unchanged.",
                "Thus, the Shapley value rule satisfies IPJθ.",
                "An analogous argument shows that the Shapley value rule satisfies IFJp.",
                "For PRp, assume without loss of generality that jobs are ordered 1, . . . , n in an efficient ordering.",
                "Denote the transfer of job i = n due to the Shapley value with set of jobs N and set of jobs N \\ {n} as ti and ti respectively.",
                "Transfer of last job is tn = 1 2 θn £j<n pj.",
                "Now, ti = 1 2 ¡θi   j<i pj − pi   j>i θj¢ = 1 2 ¡θi   j<i pj − pi   j>i:j=n θj¢− 1 2 piθn = ti − 1 2 θn   j<n pj pi £j<n pj = ti − tn pi £j<n pj .",
                "A similar argument shows that the Shapley value rule satisfies PRθ.",
                "These series of propositions lead us to our main result.",
                "Theorem 1.",
                "Let ψ be an allocation rule.",
                "The following statements are equivalent: 1) For each q ∈ Q, ψ(q) selects all the allocation assigning jobs cost shares implied by the Shapley value. 2) ψ satisfies efficiency, ECB, IFJp, and IPJθ. 3) ψ satisfies efficiency, ECB, IFJp, and PRθ. 4) ψ satisfies efficiency, ECB, PRp, and IPJθ.",
                "Proof.",
                "The proof follows from Propositions 1, 2, 3, and 4. 5.",
                "DISCUSSIONS 5.1 A Reasonable Class of Cost Sharing Mechanisms In this section, we will define a reasonable class of cost sharing mechanisms.",
                "We will show how these reasonable mechanisms lead to the Shapley value mechanism.",
                "Definition 10.",
                "An allocation rule ψ is reasonable if for all q ∈ Q and (σ, t) ∈ ψ(q) we have for all i ∈ N, ti = α ¡θi   j∈Pi(σ) pj − pi   j∈Fi(σ) θj¢∀ i ∈ N, where 0 ≤ α ≤ 1.",
                "The reasonable cost sharing mechanism says that every job should be paid a constant fraction of the difference between the waiting cost he incurs and the waiting cost he inflicts on other jobs.",
                "If α = 0, then every job bears its own cost.",
                "If α = 1, then every job gets compensated for its waiting cost but compensates others for the cost he inflicts on others.",
                "The Shapley value rule comes as a result of ETE as shown in the following proposition.",
                "Proposition 5.",
                "Any efficient and reasonable allocation rule ψ that satisfies ETE is a rule implied by the Shapley value rule.",
                "Proof.",
                "Consider a q ∈ Q in which pi = pj and θi = θj.",
                "Let (σ, t) ∈ ψ(q) and π be the resulting cost shares.",
                "From ETE, we get, πi = πj ⇒ ci(σ) − ti = cj(σ) − tj ⇒ piθi + (1 − α)Li + αRi = pjθj + (1 − α)Lj + αRj (Since ψ is efficient and reasonable) ⇒ (1 − α)(Li − Lj) = α(Rj − Ri) (Using pi = pj, θi = θj) ⇒ 1 − α = α (Using Li − Lj = Rj − Ri = 0) ⇒ α = 1 2 .",
                "This gives us the Shapley value rule by Lemma 3. 5.2 Results on Envy Chun [2] discusses a fariness condition called no-envy for the case when processing times of all jobs are unity.",
                "Definition 11.",
                "An allocation rule satisfies no-envy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tj, where π is the cost share from allocation rule (σ, t) and σij is the ordering obtaining by swapping i and j.",
                "From the result in [2], the Shapley value rule does not satisfy no-envy in our model also.",
                "To overcome this, Chun [2] introduces the notion of adjusted no-envy, which he shows is satisfied in the Shapley value rule when processing times of all jobs are unity.",
                "Here, we show that adjusted envy continues to hold in the Shapley value rule in our model (when processing times need not be unity).",
                "As before denote σij be an ordering where the position of i and j is swapped from an ordering σ.",
                "For adjusted noenvy, if (σ, t) is an allocation for some q ∈ Q, let tij be the 237 transfer of job i when the transfer of i is calculated with respect to ordering σij .",
                "Observe that an allocation may not allow for calculation of tij .",
                "For example, if ψ is efficient, then tij cannot be calculated if σij is also not efficient.",
                "For simplicity, we state the definition of adjusted no-envy to apply to all such rules.",
                "Definition 12.",
                "An allocation rule satisfies adjusted noenvy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tij i .",
                "Proposition 6.",
                "The Shapley value rule satisfies adjusted no-envy.",
                "Proof.",
                "Without loss of generality, assume efficient ordering of jobs is: 1, . . . , n. Consider two jobs i and i + k. From Lemma 3, SVi = piθi + 1 2 ¡  j<i θipj +   j>i θjpi¢.",
                "Let ˆπi be the cost share of i due to adjusted transfer tii+k i in the ordering σii+k . ˆπi = ci(σii+k ) − tii+k i = piθi + 1 2 ¡  j<i θipj + θipi+k +   i<j<i+k θipj +   j>i θjpi − θi+kpi −   i<j<i+k θjpi¢ = SVi + 1 2   i<j≤i+k ¡θipj − θjpi¢ ≥ SVi (Using the fact that θi pi ≥ θj pj for i < j). 6.",
                "CONCLUSION We studied the problem of sharing costs for a job scheduling problem on a single server, when jobs have processing times and unit time waiting costs.",
                "We took a cooperative game theory approach and show that the famous the Shapley value rule satisfies many nice fairness properties.",
                "We characterized the Shapley value rule using different intuitive fairness axioms.",
                "In future, we plan to further simplify some of the fairness axioms.",
                "Some initial simplifications already appear in [16], where we provide an alternative axiom to ECB and also discuss the implication of transfers between jobs (in stead of transfers from jobs to a central server).",
                "We also plan to look at cost sharing mechanisms other than the Shapley value.",
                "Investigating the strategic power of jobs in such mechanisms is another line of future research. 7.",
                "REFERENCES [1] Youngsub Chun.",
                "A Note on Maniquets Characterization of the Shapley Value in Queueing Problems.",
                "Working Paper, Rochester University, 2004. [2] Youngsub Chun.",
                "No-envy in Queuing Problems.",
                "Working Paper, Rochester University, 2004. [3] Imma Curiel, Herbert Hamers, and Flip Klijn.",
                "Sequencing Games: A Survey.",
                "In Peter Borm and Hans Peters, editors, Chapter in Game Theory.",
                "Theory and Decision Library, Kulwer Academic Publishers, 2002. [4] Imma Curiel, Giorgio Pederzoli, and Stef Tijs.",
                "Sequencing Games.",
                "European Journal of Operational Research, 40:344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs, and Bart Veltman.",
                "Sequencing and Cooperation.",
                "Operations Research, 42(3):566-568, May-June 1994. [6] Nikhil R. Devanur, Milena Mihail, and Vijay V. Vazirani.",
                "Strategyproof Cost-sharing Mechanisms for Set Cover and Facility Location Games.",
                "In Proceedings of Fourth Annual ACM Conferece on Electronic Commerce, 2003. [7] Robert J. Dolan.",
                "Incentive Mechanisms for Priority Queueing Problems.",
                "Bell Journal of Economics, 9:421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou, and Scott Shenker.",
                "Sharing the Cost of Multicast Transmissions.",
                "In Proceedings of Thirty-Second Annual ACM Symposium on Theory of Computing, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs, and Peter Borm.",
                "The Split Core for Sequencing Games.",
                "Games and Economic Behavior, 15:165-176, 1996. [10] John C. Harsanyi.",
                "Contributions to Theory of Games IV, chapter A Bargaining Model for Cooperative n-person Games.",
                "Princeton University Press, 1959.",
                "Editors: A. W. Tucker, R. D. Luce. [11] Kamal Jain and Vijay Vazirani.",
                "Applications of Approximate Algorithms to Cooperative Games.",
                "In Proceedings of 33rd Symposium on Theory of Computing (STOC 01), 2001. [12] Kamal Jain and Vijay Vazirani.",
                "Equitable Cost Allocations via Primal-Dual Type Algorithms.",
                "In Proceedings of 34th Symposium on Theory of Computing (STOC 02), 2002. [13] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without a Completely Specified Initial Order.",
                "Report in Statistics and Operations Research, pages 1-17, 2002.",
                "Report 02-04. [14] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without Initial Order.",
                "Working Paper, Universitat Aut´onoma de Barcelona, July 2004. [15] Franois Maniquet.",
                "A Characterization of the Shapley Value in Queueing Problems.",
                "Journal of Economic Theory, 109:90-103, 2003. [16] Debasis Mishra and Bharath Rangarajan.",
                "Cost sharing in a job scheduling problem.",
                "Working Paper, CORE, 2005. [17] Manipushpak Mitra.",
                "Essays on First Best Implementable Incentive Problems.",
                "Ph.D. Thesis, Indian Statistical Institute, New Delhi, 2000. [18] Manipushpak Mitra.",
                "Mechanism design in queueing problems.",
                "Economic Theory, 17(2):277-305, 2001. [19] Manipushpak Mitra.",
                "Achieving the first best in sequencing problems.",
                "Review of Economic Design, 7:75-91, 2002. [20] Herv´e Moulin.",
                "Handbook of Social Choice and Welfare, chapter Axiomatic Cost and Surplus Sharing.",
                "North-Holland, 2002.",
                "Publishers: Arrow, Sen, Suzumura. [21] Herv´e Moulin.",
                "On Scheduling Fees to Prevent 238 Merging, Splitting and Transferring of Jobs.",
                "Working Paper, Rice University, 2004. [22] Herv´e Moulin.",
                "Split-proof Probabilistic Scheduling.",
                "Working Paper, Rice University, 2004. [23] Herv´e Moulin and Rakesh Vohra.",
                "Characterization of Additive Cost Sharing Methods.",
                "Economic Letters, 80:399-407, 2003. [24] Martin P´al and ´Eva Tardos.",
                "Group Strategyproof Mechanisms via Primal-Dual Algorithms.",
                "In Proceedings of the 44th Annual IEEE Symposium on the Foundations of Computer Science (FOCS 03), 2003. [25] Lloyd S. Shapley.",
                "Contributions to the Theory of Games II, chapter A Value for n-person Games, pages 307-317.",
                "Annals of Mathematics Studies, 1953.",
                "Ediors: H. W. Kuhn, A. W. Tucker. [26] Wayne E. Smith.",
                "Various Optimizers for Single-Stage Production.",
                "Naval Research Logistics Quarterly, 3:59-66, 1956. [27] Jeroen Suijs.",
                "On incentive compatibility and budget balancedness in public decision making.",
                "Economic Design, 2, 2002. 239"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Cada trabajo tiene un \"tiempo de procesamiento\" finito y un costo de espera por unidad de tiempo.",
                "El pedido eficiente de esta cola nos dirige a servir a los trabajos en el orden creciente de la relación de costo de espera por unidad de tiempo y \"tiempo de procesamiento\".",
                "Desde el trabajo seminal de Shapley [25] hasta trabajos recientes sobre costos compartidos en problemas de transmisión y optimización de varios casos [8, 6, 23] Esta área ha atraído a economistas, informáticos e investigadores de operaciones.1.1 Nuestra contribución es el primer modelo que considera el costo compartido cuando tanto el \"tiempo de procesamiento\" como por unidad de costo de espera de los trabajos están presentes.",
                "Introducimos axiomas como Independece de la unidad de empleos anterior a los costos de espera y la independencia del siguiente \"tiempo de procesamiento\" de trabajos.",
                "Un axioma clave que presentamos nos da un límite en la parte de los costos de un trabajo en un grupo de trabajos que tienen la misma relación de tiempo de espera de tiempo de unidad y \"tiempo de procesamiento\" (estos trabajos se pueden ordenar de cualquier manera entre ellos en una eficiencia eficienteordenar).",
                "Cada trabajo I es identificado por dos parámetros: (PI, θi).Pi es el \"tiempo de procesamiento\" y θi es el costo por unidad de tiempo de espera del trabajo i.",
                "Esto también se conoce como la regla de \"tiempo de procesamiento\" más corta ponderada, introducida por primera vez por Smith [26].",
                "ETE nos dirige a compartir los costos por igual entre trabajos si son del mismo costo de espera por unidad y \"tiempo de procesamiento\".",
                "Esto debe hacerse en proporción a sus tiempos de procesamiento porque cada trabajo influyó en el último trabajo en función de su \"tiempo de procesamiento\".",
                "Ahora, para cualquier j <i, si cambiamos θj a θj sin cambiar el \"tiempo de procesamiento\", el nuevo γ de J es γj ≥ γi."
            ],
            "translated_text": "",
            "candidates": [
                "Tiempo de procesamiento",
                "tiempo de procesamiento",
                "Tiempo de procesamiento",
                "tiempo de procesamiento",
                "Tiempo de procesamiento",
                "tiempo de procesamiento",
                "Tiempo de procesamiento",
                "tiempo de procesamiento",
                "Tiempo de procesamiento",
                "tiempo de procesamiento",
                "Tiempo de procesamiento",
                "tiempo de procesamiento",
                "Tiempo de procesamiento",
                "tiempo de procesamiento",
                "Tiempo de procesamiento",
                "tiempo de procesamiento",
                "Tiempo de procesamiento",
                "tiempo de procesamiento",
                "Tiempo de procesamiento",
                "tiempo de procesamiento"
            ],
            "error": []
        },
        "allocation rule": {
            "translated_key": "Regla de asignación",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Cost Sharing in a Job Scheduling Problem Using the Shapley Value Debasis Mishra Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium mishra@core.ucl.ac.be Bharath Rangarajan Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium rangarajan@core.ucl.ac.be ABSTRACT A set of jobs need to be served by a single server which can serve only one job at a time.",
                "Jobs have processing times and incur waiting costs (linear in their waiting time).",
                "The jobs share their costs through compensation using monetary transfers.",
                "We characterize the Shapley value rule for this model using fairness axioms.",
                "Our axioms include a bound on the cost share of jobs in a group, efficiency, and some independence properties on the the cost share of a job.",
                "Categories and Subject Descriptors J.4 [Social and Behaviorial Sciences]: Economics General Terms Economics, Theory 1.",
                "INTRODUCTION A set of jobs need to be served by a server.",
                "The server can process only one job at a time.",
                "Each job has a finite processing time and a per unit time waiting cost.",
                "Efficient ordering of this queue directs us to serve the jobs in increasing order of the ratio of per unit time waiting cost and processing time.",
                "To compensate for waiting by jobs, monetary transfers to jobs are allowed.",
                "How should the jobs share the cost equitably amongst themselves (through transfers)?",
                "The problem of fair division of costs among agents in a queue has many practical applications.",
                "For example, computer programs are regularly scheduled on servers, data are scheduled to be transmitted over networks, jobs are scheduled in shop-floor on machines, and queues appear in many public services (post offices, banks).",
                "Study of queueing problems has attracted economists for a long time [7, 17].",
                "Cost sharing is a fundamental problem in many settings on the Internet.",
                "Internet can be seen as a common resource shared by many users and the cost incured by using the resource needs to be shared in an equitable manner.",
                "The current surge in cost sharing literature from computer scientists validate this claim [8, 11, 12, 6, 24].",
                "Internet has many settings in which our model of job scheduling appears and the agents waiting in a queue incur costs (jobs scheduled on servers, queries answered from a database, data scheduled to be transmitted over a fixed bandwidth network etc.).",
                "We hope that our analysis will give new insights on cost sharing problems of this nature.",
                "Recently, there has been increased interest in cost sharing methods with submodular cost functions [11, 12, 6, 24].",
                "While many settings do have submodular cost functions (for example, multi-cast transmission games [8]), while the cost function of our game is supermodular.",
                "Also, such literature typically does not assume budget-balance (transfers adding up to zero), while it is an inherent feature of our model.",
                "A recent paper by Maniquet [15] is the closest to our model and is the motivation behind our work 1 .",
                "Maniquet [15] studies a model where he assumes all processing times are unity.",
                "For such a model, he characterizes the Shapley value rule using classical fairness axioms.",
                "Chun [1] interprets the worth of a coalition of jobs in a different manner for the same model and derives a reverse rule.",
                "Chun characterizes this rule using similar fairness axioms.",
                "Chun [2] also studies the envy properties of these rules.",
                "Moulin [22, 21] studies the queueing problem from a strategic point view when per unit waiting costs are unity.",
                "Moulin introduces new concepts in the queueing settings such as splitting and merging of jobs, and ways to prevent them.",
                "Another stream of literature is on sequencing games, first introduced by Curiel et al. [4].",
                "For a detailed survey, refer to Curiel et al. [3].",
                "Curiel et al. [4] defined sequencing games similar to our model, but in which an initial ordering of jobs is given.",
                "Besides, their notion of worth of a coalition is very different from the notions studied in Maniquet [15] and Chun [1] (these are the notions used in our work too).",
                "The particular notion of the worth of a coalition makes the sequencing game of Curiel et al. [4] convex, whereas our game is not convex and does not assume the presence of any initial order.",
                "In summary, the focus of this stream of 1 The authors thank Fran¸cois Maniquet for several fruitful discussions. 232 research is how to share the savings in costs from the initial ordering to the optimal ordering amongst jobs (also see Hamers et al. [9], Curiel et al. [5]).",
                "Recently, Klijn and S´anchez [13, 14] considered sequencing games without any initial ordering of jobs.",
                "They take two approaches to define the worth of coalitions.",
                "One of their approaches, called the tail game, is related to the reverse rule of Chun [1].",
                "In the tail game, jobs in a coalition are served after the jobs not in the coalition are served.",
                "Klijn and S´anchez [14] showed that the tail game is balanced.",
                "Further, they provide expressions for the Shapley value in tail game in terms of marginal vectors and reversed marginal vectors.",
                "We provide a simpler expression of the Shapley value in the tail game, generalizing the result in Chun [1].",
                "Klijn and S´anchez [13] study the core of this game in detail.",
                "Strategic aspects of queueing problems have also been researched.",
                "Mitra [19] studies the first best implementation in queueing models with generic cost functions.",
                "First best implementation means that there exists an efficient mechanism in which jobs in the queue have a dominant strategy to reveal their true types and their transfers add up to zero.",
                "Suijs [27] shows that if waiting costs of jobs are linear then first best implementation is possible.",
                "Mitra [19] shows that among a more general class of queueing problems first best implementation is possible if and only if the cost is linear.",
                "For another queueing model, Mitra [18] shows that first best implementation is possible if and only if the cost function satisfies a combinatorial property and an independence property.",
                "Moulin [22, 21] studies strategic concepts such as splitting and merging in queueing problems with unit per unit waiting costs.",
                "The general cost sharing literature is vast and has a long history.",
                "For a good survey, we refer to [20].",
                "From the seminal work of Shapley [25] to recent works on cost sharing in multi-cast transmission and optimization problems [8, 6, 23] this area has attracted economists, computer scientists, and operations researchers. 1.1 Our Contribution Ours is the first model which considers cost sharing when both processing time and per unit waiting cost of jobs are present.",
                "We take a cooperative game theory approach and apply the classical Shapley value rule to the problem.",
                "We show that the Shapley value rule satisfies many intuitive fairness axioms.",
                "Due to two dimensional nature of our model and one dimensional nature of Maniquets model [15], his axioms are insufficient to characterize the Shapley value in our setting.",
                "We introduce axioms such as independece of preceding jobs unit waiting cost and independence of following jobs processing time.",
                "A key axiom that we introduce gives us a bound on cost share of a job in a group of jobs which have the same ratio of unit time waiting cost and processing time (these jobs can be ordered in any manner between themseleves in an efficient ordering).",
                "If such a group consists of just one job, then the axiom says that such a job should at least pay his own processing cost (i.e., the cost it would have incurred if it was the only job in the queue).",
                "If there are multiple jobs in such a group, the probability of any two jobs from such a group inflicting costs on each other is same (1 2 ) in an efficient ordering.",
                "Depending on the ordering selected, one job inflicts cost on the other.",
                "Our fairness axiom says that each job should at least bear such expected costs.",
                "We characterize the Shapley value rule using these fairness axioms.",
                "We also extend the envy results in [2] to our setting and discuss a class of reasonable cost sharing mechanisms. 2.",
                "THE MODEL There are n jobs that need to be served by one server which can process only one job at a time.",
                "The set of jobs are denoted as N = {1, . . . , n}. σ : N → N is an ordering of jobs in N and σi denotes the position of job i in the ordering σ.",
                "Given an ordering σ, define Fi(σ) = {j ∈ N : σi < σj} and Pi(σ) = {j ∈ N : σi > σj}.",
                "Every job i is identified by two parameters: (pi, θi). pi is the processing time and θi is the cost per unit waiting time of job i.",
                "Thus, a queueing problem is defined by a list q = (N, p, θ) ∈ Q, where Q is the set of all possible lists.",
                "We will denote γi = θi pi .",
                "Given an ordering of jobs σ, the cost incurred by job i is given by ci(σ) = piθi + θi   j∈Pi(σ) pj.",
                "The total cost incurred by all jobs due to an ordering σ can be written in two ways: (i) by summing the cost incurred by every job and (ii) by summing the costs inflicted by a job on other jobs with their own processing cost.",
                "C(N, σ) =   i∈N ci(σ) =   i∈N piθi +   i∈N ¡θi   j∈Pi(σ) pj¢. =   i∈N piθi +   i∈N ¡pi   j∈Fi(σ) θj¢.",
                "An efficient ordering σ∗ is the one which minimizes the total cost incurred by all jobs.",
                "So, C(N, σ∗ ) ≤ C(N, σ) ∀ σ ∈ Σ.",
                "To achieve notational simplicity, we will write the total cost in an efficient ordering of jobs from N as C(N) whenever it is not confusing.",
                "Sometimes, we will deal with only a subset of jobs S ⊆ N. The ordering σ will then be defined on jobs in S only and we will write the total cost from an efficient ordering of jobs in S as C(S).",
                "The following lemma shows that jobs are ordered in decreasing γ in an efficient ordering.",
                "This is also known as the weighted shortest processing time rule, first introduced by Smith [26].",
                "Lemma 1.",
                "For any S ⊆ N, let σ∗ be an efficient ordering of jobs in S. For every i = j, i, j ∈ S, if σ∗ i > σ∗ j , then γi ≤ γj.",
                "Proof.",
                "Assume for contradiction that the statment of the lemma is not true.",
                "This means, we can find two consecutive jobs i, j ∈ S (σ∗ i = σ∗ j + 1) such that γi > γj.",
                "Define a new ordering σ by interchanging i and j in σ∗ .",
                "The costs to jobs in S \\ {i, j} is not changed from σ∗ to σ.",
                "The difference between total costs in σ∗ and σ is given by, C(S, σ) − C(S, σ∗ ) = θjpi − θipj.",
                "From efficiency we get θjpi − θipj ≥ 0.",
                "This gives us γj ≥ γi, which is a contradiction.",
                "An allocation for q = (N, p, θ) ∈ Q has two components: an ordering σ and a transfer ti for every job i ∈ N. ti denotes the payment received by job i.",
                "Given a transfer ti and an ordering σ, the cost share of job i is defined as, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. 233 An allocation (σ, t) is efficient for q = (N, p, θ) whenever σ is an efficient ordering and £i∈N ti = 0.",
                "The set of efficient orderings of q is denoted as Σ∗ (q) and σ∗ (q) will be used to refer to a typical element of the set.",
                "The following straightforward lemma says that for two different efficient orderings, the cost share in one efficient allocation is possible to achieve in the other by appropriately modifying the transfers.",
                "Lemma 2.",
                "Let (σ, t) be an efficient allocation and π be the vector of cost shares of jobs from this allocation.",
                "If σ∗ = σ be an efficient ordering and t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, then (σ∗ , t∗ ) is also an efficient allocation.",
                "Proof.",
                "Since (σ, t) is efficient, £i∈N ti = 0.",
                "This gives £i∈N πi = C(N).",
                "Since σ∗ is an efficient ordering, £i∈N ci(σ∗ ) = C(N).",
                "This means, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0.",
                "So, (σ∗ , t∗ ) is an efficient allocation.",
                "Depending on the transfers, the cost shares in different efficient allocations may differ.",
                "An <br>allocation rule</br> ψ associates with every q ∈ Q a non-empty subset ψ(q) of allocations. 3.",
                "COST SHARING USING THE SHAPLEY VALUE In this section, we define the coalitional cost of this game and analyze the solution proposed by the Shapley value.",
                "Given a queue q ∈ Q, the cost of a coalition of S ⊆ N jobs in the queue is defined as the cost incurred by jobs in S if these are the only jobs served in the queue using an efficient ordering.",
                "Formally, the cost of a coalition S ⊆ N is, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, where σ∗ = σ∗ (S) is an efficient ordering considering jobs from S only.",
                "The worth of a coalition of S jobs is just −C(S).",
                "Maniquet [15] observes another equivalent way to define the worth of a coalition is using the dual function of the cost function C(·).",
                "Other interesting ways to define the worth of a coalition in such games is discussed by Chun [1], who assume that a coalition of jobs are served after the jobs not in the coalition are served.",
                "The Shapley value (or cost share) of a job i is defined as, SVi =   S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) The Shapley value <br>allocation rule</br> says that jobs are ordered using an efficient ordering and transfers are assigned to jobs such that the cost share of job i is given by Equation 1.",
                "Lemma 3.",
                "Let σ∗ be an efficient ordering of jobs in set N. For all i ∈ N, the Shapley value is given by, SVi = piθi + 1 2 ¡Li + Ri¢, where Li = θi £j∈Pi(σ∗) pj and Ri = pi £j∈Fi(σ∗) θj.",
                "Proof.",
                "Another way to write the Shapley value formula is the following [10], SVi =   S⊆N:i∈S ∆(S) |S| , where ∆(S) = C(S) if |S| = 1 and ∆(S) = C(S)−£T S ∆(T).",
                "This gives ∆({i}) = C({i}) = piθi ∀i ∈ N. For any i, j ∈ N with i = j, we have ∆({i, j}) = C({i, j}) − C({i}) − C({j}) = min(piθi + pjθj + pjθi, piθi + pjθj + piθj) − piθi − pjθj = min(pjθi, piθj).",
                "We will show by induction that ∆(S) = 0 if |S| > 2.",
                "For |S| = 3, let S = {i, j, k}.",
                "Without loss of generality, assume θi pi ≥ θj pj ≥ θk pk .",
                "So, ∆(S) = C(S) − ∆({i, j}) − ∆({j, k}) − ∆({i, k})−∆({i})−∆({j})−∆({k}) = C(S)−piθj −pjθk − piθk − piθi − pjθj − pkθk = C(S) − C(S) = 0.",
                "Now, assume for T S, ∆(T) = 0 if |T| > 2.",
                "Without loss of generality assume that σ to be the identity mapping.",
                "Now, ∆(S) = C(S) −   T S ∆(T) = C(S) −   i∈S   j∈S:j<i ∆({i, j}) −   i∈S ∆({i}) = C(S) −   i∈S   j∈S:j<i pjθi −   i∈S piθi = C(S) − C(S) = 0.",
                "This proves that ∆(S) = 0 if |S| > 2.",
                "Using the Shapley value formula now, SVi =   S⊆N:i∈S ∆(S) |S| = ∆({i}) + 1 2   j∈N:j=i ∆({i, j}) = piθi + 1 2 ¡  j<i ∆({i, j}) +   j>i ∆({i, j})¢ = piθi + 1 2 ¡  j<i pjθi +   j>i piθj¢= piθi + 1 2 ¡Li + Ri¢. 4.",
                "AXIOMATICCHARACTERIZATIONOF THE SHAPLEY VALUE In this section, we will define serveral axioms on fairness and characterize the Shapley value using them.",
                "For a given q ∈ Q, we will denote ψ(q) as the set of allocations from <br>allocation rule</br> ψ.",
                "Also, we will denote the cost share vector associated with an <br>allocation rule</br> (σ, t) as π and that with <br>allocation rule</br> (σ , t ) as π etc. 4.1 The Fairness Axioms We will define three types of fairness axioms: (i) related to efficiency, (ii) related to equity, and (iii) related to independence.",
                "Efficiency Axioms We define two types of efficiency axioms.",
                "One related to efficiency which states that an efficient ordering should be selected and the transfers of jobs should add up to zero (budget balance).",
                "Definition 1.",
                "An <br>allocation rule</br> ψ satisfies efficiency if for every q ∈ Q and (σ, t) ∈ ψ(q), (σ, t) is an efficient allocation. 234 The second axiom related to efficiency says that the <br>allocation rule</br> should not discriminate between two allocations which are equivalent to each other in terms of cost shares of jobs.",
                "Definition 2.",
                "An <br>allocation rule</br> ψ satisfies Pareto indifference if for every q ∈ Q, (σ, t) ∈ ψ(q), and (σ , t ) ∈ Σ(q), we have ¡πi = πi ∀ i ∈ N¢⇒ ¡(σ , t ) ∈ ψ(q)¢.",
                "An implication of Pareto indifference axiom and Lemma 2 is that for every efficient ordering there is some set of transfers of jobs such that it is part of an efficient rule and the cost share of a job in all these allocations are same.",
                "Equity Axioms How should the cost be shared between two jobs if the jobs have some kind of similarity between them?",
                "Equity axioms provide us with fairness properties which help us answer this question.",
                "We provide five such axioms.",
                "Some of these axioms (for example anonymity, equal treatment of equals) are standard in the literature, while some are new.",
                "We start with a well known equity axiom called anonymity.",
                "Denote ρ : N → N as a permutation of elements in N. Let ρ(σ, t) denote the allocation obtained by permuting elements in σ and t according to ρ.",
                "Similarly, let ρ(p, θ) denote the new list of (p, θ) obtained by permuting elements of p and θ according to ρ.",
                "Our first equity axiom states that allocation rules should be immune to such permutation of data.",
                "Definition 3.",
                "An <br>allocation rule</br> ψ satisfies anonymity if for all q ∈ Q, (σ, t) ∈ ψ(q) and every permutation ρ, we then ρ(σ, t) ∈ ψ(N, ρ(q)).",
                "The next equity axiom is classical in literature and says that two similar jobs should be compensated such that their cost shares are equal.",
                "This implies that if all the jobs are of same type, then jobs should equally share the total system cost.",
                "Definition 4.",
                "An <br>allocation rule</br> ψ satisfies equal treatment of equals (ETE) if for all q ∈ Q, (σ, t) ∈ ψ(q), i, j ∈ N, then ¡pi = pj; θi = θj¢⇒ ¡πi = πj¢.",
                "ETE directs us to share costs equally between jobs if they are of the same per unit waiting cost and processing time.",
                "But it is silent about the cost shares of two jobs i and j which satisfy θi pi = θj pj .",
                "We introduce a new axiom for this.",
                "If an efficient rule chooses σ such that σi < σj for some i, j ∈ N, then job i is inflicting a cost of piθj on job j and job j is inflicting zero cost on job i.",
                "Define for some γ ≥ 0, S(γ) = {i ∈ N : γi = γ}.",
                "In an efficient rule, the elements in S(γ) can be ordered in any manner (in |S(γ)|! ways).",
                "If i, j ∈ S(γ) then we have pjθi = piθj.",
                "Probability of σi < σj is 1 2 and so is the probability of σi > σj.",
                "The expected cost i inflicts on j is 1 2 piθj and j inflicts on i is 1 2 pjθi.",
                "Our next fairness axiom says that i and j should each be responsible for their own processing cost and this expected cost they inflict on each other.",
                "Arguing for every pair of jobs i, j ∈ S(γ), we establish a bound on the cost share of jobs in S(γ).",
                "We impose this as an equity axiom below.",
                "Definition 5.",
                "An <br>allocation rule</br> satisfies expected cost bound (ECB) if for all q ∈ Q, (σ, t) ∈ ψ(q) with π being the resulting cost share, for any γ ≥ 0, and for every i ∈ S(γ), we have πi ≥ piθi + 1 2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢.",
                "The central idea behind this axiom is that of expected cost inflicted.",
                "If an <br>allocation rule</br> chooses multiple allocations, we can assign equal probabilities of selecting one of the allocations.",
                "In that case, the expected cost inflicted by a job i on another job j in the <br>allocation rule</br> can be calculated.",
                "Our axiom says that the cost share of a job should be at least its own processing cost and the total expected cost it inflicts on others.",
                "Note that the above bound poses no constraints on how the costs are shared among different groups.",
                "Also observe that if S(γ) contains just one job, ECB says that job should at least bear its own processing cost.",
                "A direct consequence of ECB is the following lemma.",
                "Lemma 4.",
                "Let ψ be an efficient rule which satisfies ECB.",
                "For a q ∈ Q if S(γ) = N, then for any (σ, t) ∈ ψ(q) which gives a cost share of π, πi = piθi + 1 2 ¡Li + Ri¢∀ i ∈ N. Proof.",
                "From ECB, we get πi ≥ piθi+1 2 ¡Li+Ri¢∀ i ∈ N. Assume for contradiction that there exists j ∈ N such that πj > pjθj + 1 2 ¡Li + Ri¢.",
                "Using efficiency and the fact that £i∈N Li = £i∈N Ri, we get £i∈N πi = C(N) > £i∈N piθi + 1 2 £i∈N ¡Li + Ri¢ = C(N).",
                "This gives us a contradiction.",
                "Next, we introduce an axiom about sharing the transfer of a job between a set of jobs.",
                "In particular, if the last job quits the system, then the ordering need not change.",
                "But the transfer to the last job needs to be shared between the other jobs.",
                "This should be done in proportion to their processing times because every job influenced the last job based on its processing time.",
                "Definition 6.",
                "An <br>allocation rule</br> ψ satisfies proportionate responsibility of p (PRp) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = |N|, q = (N \\ {k}, p , θ ) ∈ Q, such that for all i ∈ N\\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk pi £j=k pj .",
                "An analogous fairness axiom results if we remove the job from the beginning of the queue.",
                "Since the presence of the first job influenced each job depending on their θ values, its transfer needs to be shared in proportion to θ values.",
                "Definition 7.",
                "An <br>allocation rule</br> ψ satisfies proportionate responsibility of θ (PRθ) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = 1, q = (N \\{k}, p , θ ) ∈ Q, such that for all i ∈ N \\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk θi £j=k θj .",
                "The proportionate responsibility axioms are generalizations of equal responsibility axioms introduced by Maniquet [15]. 235 Independence Axioms The waiting cost of a job does not depend on the per unit waiting cost of its preceding jobs.",
                "Similarly, the waiting cost inflicted by a job to its following jobs is independent of the processing times of the following jobs.",
                "These independence properties should be carried over to the cost sharing rules.",
                "This gives us two independence axioms.",
                "Definition 8.",
                "An <br>allocation rule</br> ψ satisfies independence of preceding jobs θ (IPJθ) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk < γk, pk = pk, then for all j ∈ N such that σj > σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ).",
                "Definition 9.",
                "An <br>allocation rule</br> ψ satisfies independence of following jobs p (IFJp) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk > γk, θk = θk, then for all j ∈ N such that σj < σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ). 4.2 The Characterization Results Having stated the fairness axioms, we propose three different ways to characterize the Shapley value rule using these axioms.",
                "All our characterizations involve efficiency and ECB.",
                "But if we have IPJθ, we either need IFJp or PRp.",
                "Similarly if we have IFJp, we either need IPJθ or PRθ.",
                "Proposition 1.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and IFJp is a rule implied by the Shapley value rule.",
                "Proof.",
                "Define for any i, j ∈ N, θi j = γipj and pi j = θj γi .",
                "Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider the following q = (N, p , θ ) corresponding to job i with pj = pj if j ≤ i and pj = pi j if j > i, θj = θi j if j < i and θj = θj if j ≥ i.",
                "Observe that all jobs have the same γ: γi.",
                "By Lemma 2 and efficiency, (σ, t ) ∈ ψ(q ) for some set of transfers t .",
                "Using Lemma 4, we get cost share of i from (σ, t ) as πi = piθi + 1 2 ¡Li + Ri¢.",
                "Now, for any j < i, if we change θj to θj without changing processing time, the new γ of j is γj ≥ γi.",
                "Applying IPJθ, the cost share of job i should not change.",
                "Similarly, for any job j > i, if we change pj to pj without changing θj, the new γ of j is γj ≤ γi.",
                "Applying IFJp, the cost share of job i should not change.",
                "Applying this procedure for every j < i with IPJθ and for every j > i with IFJp, we reach q = (N, p, θ) and the payoff of i does not change from πi.",
                "Using this argument for every i ∈ N and using the expression for the Shapley value in Lemma 3, we get the Shapley value rule.",
                "It is possible to replace one of the independence axioms with an equity axiom on sharing the transfer of a job.",
                "This is shown in Propositions 2 and 3.",
                "Proposition 2.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and PRp is a rule implied by the Shapley value rule.",
                "Proof.",
                "As in the proof of Proposition 1, define θi j = γipj ∀ i, j ∈ N. Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider a queue with jobs in set K = {1, . . . , i, i + 1}, where i < n. Define q = (K, p, θ ), where θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ is an efficient ordering for q .",
                "By ECB and Lemma 4 the cost share of job i + 1 in any <br>allocation rule</br> in ψ must be πi+1 = pi+1θi+1 + 1 2 ¡£j<i+1 pjθi+1¢.",
                "Now, consider q = (K, p, θ ) such that θj = θi j ∀ j ≤ i and θi+1 = θi+1. σ remains an efficient ordering in q and by IPJθ the cost share of i + 1 remains πi+1.",
                "In q = (K \\ {i + 1}, p, θ ), we can calculate the cost share of job i using ECB and Lemma 4 as πi = piθi + 1 2 £j<i pjθi.",
                "So, using PRp we get the new cost share of job i in q as πi = πi + ti+1 pi j<i+1 pj = piθi + 1 2 ¡£j<i pjθi + piθi+1¢.",
                "Now, we can set K = K ∪ {i + 2}.",
                "As before, we can find cost share of i + 2 in this queue as πi+2 = pi+2θi+2 + 1 2 ¡£j<i+2 pjθi+2¢.",
                "Using PRp we get the new cost share of job i in the new queue as πi = piθi + 1 2 ¡£j<i pjθi + piθi+1 + piθi+2¢.",
                "This process can be repeated till we add job n at which point cost share of i is piθi + 1 2 ¡£j<i pjθi + £j>i piθj¢.",
                "Then, we can adjust the θ of preceding jobs of i to their original value and applying IPJθ, the payoffs of jobs i through n will not change.",
                "This gives us the Shapley values of jobs i through n. Setting i = 1, we get cost shares of all the jobs from ψ as the Shapley value.",
                "Proposition 3.",
                "Any efficient rule ψ that satisfies ECB, IFJp, and PRθ is a rule implied by the Shapley value rule.",
                "Proof.",
                "The proof mirrors the proof of Proposition 2.",
                "We provide a short sketch.",
                "Analogous to the proof of Proposition 2, θs are kept equal to original data and processing times are initialized to pi+1 j .",
                "This allows us to use IFJp.",
                "Also, contrast to Proposition 2, we consider K = {i, i + 1, . . . , n} and repeatedly add jobs to the beginning of the queue maintaining the same efficient ordering.",
                "So, we add the cost components of preceding jobs to the cost share of jobs in each iteration and converge to the Shapley value rule.",
                "The next proposition shows that the Shapley value rule satisfies all the fairness axioms discussed.",
                "Proposition 4.",
                "The Shapley value rule satisfies efficiency, pareto indifference, anonymity, ETE, ECB, IPJθ, IFJp, PRp, and PRθ.",
                "Proof.",
                "The Shapley value rule chooses an efficient ordering and by definition the payments add upto zero.",
                "So, it satisfies efficiency.",
                "The Shapley value assigns same cost share to a job irrespective of the efficient ordering chosen.",
                "So, it is pareto indifferent.",
                "The Shapley value is anonymous because the particular index of a job does not effect his ordering or cost share.",
                "For ETE, consider two jobs i, j ∈ N such that pi = pj and θi = θj.",
                "Without loss of generality assume the efficient ordering to be 1, . . . , i, . . . , j, . . . , n. Now, the Shapley value of job i is 236 SVi = piθi + 1 2 ¡Li + Ri¢(From Lemma 3) = pjθj + 1 2 ¡Lj + Rj¢− 1 2 ¡Li − Lj + Ri − Rj¢ = SVj − 1 2 ¡   i<k≤j piθk −   i≤k<j pkθi¢ = SVj − 1 2   i<k≤j (piθk − pkθi) (Using pi = pj and θi = θj) = SVj (Using θk pk = θi pi for all i ≤ k ≤ j).",
                "The Shapley value satisfies ECB by its expression in Lemma 3.",
                "Consider any job i, in an efficient ordering σ, if we increase the value of γj for some j = i such that σj > σi, then the set Pi ( preceding jobs) does not change in the new efficient ordering.",
                "If γj is changed such that pj remains the same, then the expression £j∈Pi θipj is unchanged.",
                "If (p, θ) values of no other jobs are changed, then the Shapley value is unchanged by increasing γj for some j ∈ Pi while keeping pj unchanged.",
                "Thus, the Shapley value rule satisfies IPJθ.",
                "An analogous argument shows that the Shapley value rule satisfies IFJp.",
                "For PRp, assume without loss of generality that jobs are ordered 1, . . . , n in an efficient ordering.",
                "Denote the transfer of job i = n due to the Shapley value with set of jobs N and set of jobs N \\ {n} as ti and ti respectively.",
                "Transfer of last job is tn = 1 2 θn £j<n pj.",
                "Now, ti = 1 2 ¡θi   j<i pj − pi   j>i θj¢ = 1 2 ¡θi   j<i pj − pi   j>i:j=n θj¢− 1 2 piθn = ti − 1 2 θn   j<n pj pi £j<n pj = ti − tn pi £j<n pj .",
                "A similar argument shows that the Shapley value rule satisfies PRθ.",
                "These series of propositions lead us to our main result.",
                "Theorem 1.",
                "Let ψ be an <br>allocation rule</br>.",
                "The following statements are equivalent: 1) For each q ∈ Q, ψ(q) selects all the allocation assigning jobs cost shares implied by the Shapley value. 2) ψ satisfies efficiency, ECB, IFJp, and IPJθ. 3) ψ satisfies efficiency, ECB, IFJp, and PRθ. 4) ψ satisfies efficiency, ECB, PRp, and IPJθ.",
                "Proof.",
                "The proof follows from Propositions 1, 2, 3, and 4. 5.",
                "DISCUSSIONS 5.1 A Reasonable Class of Cost Sharing Mechanisms In this section, we will define a reasonable class of cost sharing mechanisms.",
                "We will show how these reasonable mechanisms lead to the Shapley value mechanism.",
                "Definition 10.",
                "An <br>allocation rule</br> ψ is reasonable if for all q ∈ Q and (σ, t) ∈ ψ(q) we have for all i ∈ N, ti = α ¡θi   j∈Pi(σ) pj − pi   j∈Fi(σ) θj¢∀ i ∈ N, where 0 ≤ α ≤ 1.",
                "The reasonable cost sharing mechanism says that every job should be paid a constant fraction of the difference between the waiting cost he incurs and the waiting cost he inflicts on other jobs.",
                "If α = 0, then every job bears its own cost.",
                "If α = 1, then every job gets compensated for its waiting cost but compensates others for the cost he inflicts on others.",
                "The Shapley value rule comes as a result of ETE as shown in the following proposition.",
                "Proposition 5.",
                "Any efficient and reasonable <br>allocation rule</br> ψ that satisfies ETE is a rule implied by the Shapley value rule.",
                "Proof.",
                "Consider a q ∈ Q in which pi = pj and θi = θj.",
                "Let (σ, t) ∈ ψ(q) and π be the resulting cost shares.",
                "From ETE, we get, πi = πj ⇒ ci(σ) − ti = cj(σ) − tj ⇒ piθi + (1 − α)Li + αRi = pjθj + (1 − α)Lj + αRj (Since ψ is efficient and reasonable) ⇒ (1 − α)(Li − Lj) = α(Rj − Ri) (Using pi = pj, θi = θj) ⇒ 1 − α = α (Using Li − Lj = Rj − Ri = 0) ⇒ α = 1 2 .",
                "This gives us the Shapley value rule by Lemma 3. 5.2 Results on Envy Chun [2] discusses a fariness condition called no-envy for the case when processing times of all jobs are unity.",
                "Definition 11.",
                "An <br>allocation rule</br> satisfies no-envy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tj, where π is the cost share from <br>allocation rule</br> (σ, t) and σij is the ordering obtaining by swapping i and j.",
                "From the result in [2], the Shapley value rule does not satisfy no-envy in our model also.",
                "To overcome this, Chun [2] introduces the notion of adjusted no-envy, which he shows is satisfied in the Shapley value rule when processing times of all jobs are unity.",
                "Here, we show that adjusted envy continues to hold in the Shapley value rule in our model (when processing times need not be unity).",
                "As before denote σij be an ordering where the position of i and j is swapped from an ordering σ.",
                "For adjusted noenvy, if (σ, t) is an allocation for some q ∈ Q, let tij be the 237 transfer of job i when the transfer of i is calculated with respect to ordering σij .",
                "Observe that an allocation may not allow for calculation of tij .",
                "For example, if ψ is efficient, then tij cannot be calculated if σij is also not efficient.",
                "For simplicity, we state the definition of adjusted no-envy to apply to all such rules.",
                "Definition 12.",
                "An <br>allocation rule</br> satisfies adjusted noenvy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tij i .",
                "Proposition 6.",
                "The Shapley value rule satisfies adjusted no-envy.",
                "Proof.",
                "Without loss of generality, assume efficient ordering of jobs is: 1, . . . , n. Consider two jobs i and i + k. From Lemma 3, SVi = piθi + 1 2 ¡  j<i θipj +   j>i θjpi¢.",
                "Let ˆπi be the cost share of i due to adjusted transfer tii+k i in the ordering σii+k . ˆπi = ci(σii+k ) − tii+k i = piθi + 1 2 ¡  j<i θipj + θipi+k +   i<j<i+k θipj +   j>i θjpi − θi+kpi −   i<j<i+k θjpi¢ = SVi + 1 2   i<j≤i+k ¡θipj − θjpi¢ ≥ SVi (Using the fact that θi pi ≥ θj pj for i < j). 6.",
                "CONCLUSION We studied the problem of sharing costs for a job scheduling problem on a single server, when jobs have processing times and unit time waiting costs.",
                "We took a cooperative game theory approach and show that the famous the Shapley value rule satisfies many nice fairness properties.",
                "We characterized the Shapley value rule using different intuitive fairness axioms.",
                "In future, we plan to further simplify some of the fairness axioms.",
                "Some initial simplifications already appear in [16], where we provide an alternative axiom to ECB and also discuss the implication of transfers between jobs (in stead of transfers from jobs to a central server).",
                "We also plan to look at cost sharing mechanisms other than the Shapley value.",
                "Investigating the strategic power of jobs in such mechanisms is another line of future research. 7.",
                "REFERENCES [1] Youngsub Chun.",
                "A Note on Maniquets Characterization of the Shapley Value in Queueing Problems.",
                "Working Paper, Rochester University, 2004. [2] Youngsub Chun.",
                "No-envy in Queuing Problems.",
                "Working Paper, Rochester University, 2004. [3] Imma Curiel, Herbert Hamers, and Flip Klijn.",
                "Sequencing Games: A Survey.",
                "In Peter Borm and Hans Peters, editors, Chapter in Game Theory.",
                "Theory and Decision Library, Kulwer Academic Publishers, 2002. [4] Imma Curiel, Giorgio Pederzoli, and Stef Tijs.",
                "Sequencing Games.",
                "European Journal of Operational Research, 40:344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs, and Bart Veltman.",
                "Sequencing and Cooperation.",
                "Operations Research, 42(3):566-568, May-June 1994. [6] Nikhil R. Devanur, Milena Mihail, and Vijay V. Vazirani.",
                "Strategyproof Cost-sharing Mechanisms for Set Cover and Facility Location Games.",
                "In Proceedings of Fourth Annual ACM Conferece on Electronic Commerce, 2003. [7] Robert J. Dolan.",
                "Incentive Mechanisms for Priority Queueing Problems.",
                "Bell Journal of Economics, 9:421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou, and Scott Shenker.",
                "Sharing the Cost of Multicast Transmissions.",
                "In Proceedings of Thirty-Second Annual ACM Symposium on Theory of Computing, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs, and Peter Borm.",
                "The Split Core for Sequencing Games.",
                "Games and Economic Behavior, 15:165-176, 1996. [10] John C. Harsanyi.",
                "Contributions to Theory of Games IV, chapter A Bargaining Model for Cooperative n-person Games.",
                "Princeton University Press, 1959.",
                "Editors: A. W. Tucker, R. D. Luce. [11] Kamal Jain and Vijay Vazirani.",
                "Applications of Approximate Algorithms to Cooperative Games.",
                "In Proceedings of 33rd Symposium on Theory of Computing (STOC 01), 2001. [12] Kamal Jain and Vijay Vazirani.",
                "Equitable Cost Allocations via Primal-Dual Type Algorithms.",
                "In Proceedings of 34th Symposium on Theory of Computing (STOC 02), 2002. [13] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without a Completely Specified Initial Order.",
                "Report in Statistics and Operations Research, pages 1-17, 2002.",
                "Report 02-04. [14] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without Initial Order.",
                "Working Paper, Universitat Aut´onoma de Barcelona, July 2004. [15] Franois Maniquet.",
                "A Characterization of the Shapley Value in Queueing Problems.",
                "Journal of Economic Theory, 109:90-103, 2003. [16] Debasis Mishra and Bharath Rangarajan.",
                "Cost sharing in a job scheduling problem.",
                "Working Paper, CORE, 2005. [17] Manipushpak Mitra.",
                "Essays on First Best Implementable Incentive Problems.",
                "Ph.D. Thesis, Indian Statistical Institute, New Delhi, 2000. [18] Manipushpak Mitra.",
                "Mechanism design in queueing problems.",
                "Economic Theory, 17(2):277-305, 2001. [19] Manipushpak Mitra.",
                "Achieving the first best in sequencing problems.",
                "Review of Economic Design, 7:75-91, 2002. [20] Herv´e Moulin.",
                "Handbook of Social Choice and Welfare, chapter Axiomatic Cost and Surplus Sharing.",
                "North-Holland, 2002.",
                "Publishers: Arrow, Sen, Suzumura. [21] Herv´e Moulin.",
                "On Scheduling Fees to Prevent 238 Merging, Splitting and Transferring of Jobs.",
                "Working Paper, Rice University, 2004. [22] Herv´e Moulin.",
                "Split-proof Probabilistic Scheduling.",
                "Working Paper, Rice University, 2004. [23] Herv´e Moulin and Rakesh Vohra.",
                "Characterization of Additive Cost Sharing Methods.",
                "Economic Letters, 80:399-407, 2003. [24] Martin P´al and ´Eva Tardos.",
                "Group Strategyproof Mechanisms via Primal-Dual Algorithms.",
                "In Proceedings of the 44th Annual IEEE Symposium on the Foundations of Computer Science (FOCS 03), 2003. [25] Lloyd S. Shapley.",
                "Contributions to the Theory of Games II, chapter A Value for n-person Games, pages 307-317.",
                "Annals of Mathematics Studies, 1953.",
                "Ediors: H. W. Kuhn, A. W. Tucker. [26] Wayne E. Smith.",
                "Various Optimizers for Single-Stage Production.",
                "Naval Research Logistics Quarterly, 3:59-66, 1956. [27] Jeroen Suijs.",
                "On incentive compatibility and budget balancedness in public decision making.",
                "Economic Design, 2, 2002. 239"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Una \"regla de asignación\" ψ se asocia con cada q ∈ Q un subconjunto no vacío ψ (q) de asignaciones.3.",
                "El valor de Shapley (o los costos compartidos) de un trabajo I se define como, svi = s⊆n \\ {i} | s |!(| N | - | s | - 1)!| N |!¡C (S∪ {i}) - C (s) ¢.(1) La \"regla de asignación\" de valor de Shapley dice que los trabajos se ordenan utilizando un pedido eficiente y las transferencias se asignan a trabajos de manera que la participación de costos del trabajo I esté dada por la ecuación 1.",
                "Para un q ∈ Q dado, denotaremos ψ (q) como el conjunto de asignaciones de la \"regla de asignación\" ψ.",
                "Además, denotaremos el vector de costo compartido asociado con una \"regla de asignación\" (σ, t) como π y que con \"regla de asignación\" (σ, t) como π etc. 4.1 Los axiomas de equidad definiremos tres tipos de justiciaAxiomas: (i) relacionados con la eficiencia, (ii) relacionado con la equidad y (iii) relacionado con la independencia.",
                "Una \"regla de asignación\" ψ satisface la eficiencia si para cada q ∈ Q y (σ, t) ∈ ψ (q), (σ, t) es una asignación eficiente.234 El segundo axioma relacionado con la eficiencia dice que la \"regla de asignación\" no debería discriminar entre dos asignaciones que son equivalentes entre sí en términos de acciones de empleos.",
                "Una \"regla de asignación\" ψ satisface la indiferencia de Pareto si para cada q ∈ Q, (σ, t) ∈ ψ (q) y (σ, t) ∈ σ (q), tenemos ¡πi = πi ∀ i ∈ N ¢⇒ ¡(σ, t) ∈ ψ (q) ¢.",
                "Una \"regla de asignación\" ψ satisface el anonimato si para todas q ∈ Q, (σ, t) ∈ ψ (q) y cada permutación ρ, entonces ρ (σ, t) ∈ ψ (n, ρ (q)).",
                "Una \"regla de asignación\" ψ satisface el trato igual de iguales (ete) si para todas q ∈ Q, (σ, t) ∈ ψ (q), i, j ∈ N, entonces ¡Pi = pj;θi = θj ¢ ⇒ ok πi = πj ¢.",
                "Una \"regla de asignación\" satisface el costo esperado (ECB) si para todas las q ∈ Q, (σ, t) ∈ ψ (q) con π es el costo resultante compartido, para cualquier γ ≥ 0, y para cada i ∈ S ((γ), tenemos πi ≥ Piθi + 1 2 ¡j∈S (γ): σj <σi pjθi + j∈S (γ): σj> σi piθj ¢.",
                "Si una \"regla de asignación\" elige múltiples asignaciones, podemos asignar probabilidades iguales de seleccionar una de las asignaciones.",
                "En ese caso, se puede calcular el costo esperado infligido por un trabajo I en otro trabajo j en la \"regla de asignación\".",
                "Una \"regla de asignación\" ψ satisface la responsabilidad proporcional de P (PRP) si para todos Q ∈ Q, para todos (σ, t) ∈ ψ (q), k ∈ N tal que σk = | n |, q = (n \\ \\ (n \\{k}, p, θ) ∈ Q, de modo que para todos los i ∈ N \\ {k}: θi = θi, pi = pi, existe (σ, t) ∈ ψ (q) tales para todo i ∈ N\\ {k}: σi = σi y ti = ti + tk pi £ j = k pj.",
                "Una \"regla de asignación\" ψ satisface la responsabilidad proporcional de θ (prθ) si para todas q ∈ Q, para todos (σ, t) ∈ ψ (q), k ∈ N tal que σk = 1, q = (n \\ {k}, p, θ) ∈ Q, de modo que para todos los i ∈ N \\ {k}: θi = θi, pi = pi, existe (σ, t) ∈ ψ (q) tal que para todos los i ∈ N \\ {k}: σi = σi y ti = ti + tk θi £ j = k θj.",
                "Una \"regla de asignación\" ψ satisface la independencia de los trabajos anteriores θ (ipjθ) si para todos q = (n, p, θ), q = (n, p, θ) ∈ Q, (σ, t) ∈ ψ (q), (σ, t) ∈ ψ (q), si para todo i ∈ N \\ {k}: θi = θi, pi = pi y γk <γk, pk = pk, entonces para todo j ∈ N tal que σj> σk: πj = πj, donde π es el costo compartido en (σ, t) y π es el costo compartido en (σ, t).",
                "Una \"regla de asignación\" ψ satisface la independencia de los siguientes trabajos P (ifjp) si para todos q = (n, p, θ), q = (n, p, θ) ∈ Q, (σ, t) ∈ ψ (q), (σ, t) ∈ ψ (q), si para todo i ∈ N \\ {k}: θi = θi, pi = pi y γk> γk, θk = θk, entonces para todo j ∈ N tal que σj <σk: πj = πj, donde π es el costo compartido en (σ, t) y π es el costo compartido en (σ, t).4.2 Los resultados de la caracterización han declarado los axiomas de equidad, proponemos tres formas diferentes de caracterizar la regla de valor de Shapley usando estos axiomas.",
                "Por ECB y Lemma 4 El costo compartido del trabajo i+1 en cualquier \"regla de asignación\" en ψ debe ser πi+1 = pi+1θi+1+1 2 ¡£ j <i+1 pjθi+1 ¢.",
                "Sea ψ una \"regla de asignación\".",
                "Una \"regla de asignación\" ψ es razonable si para todas q ∈ Q y (σ, t) ∈ ψ (q) tenemos para todos los i ∈ N, ti = α ¡θi j∈Pi (σ) pj - pi j∈Fi(σ) θj ¢ ∀ i ∈ N, donde 0 ≤ α ≤ 1.",
                "Cualquier \"regla de asignación\" eficiente y razonable que cumpla con ETE es una regla implícita por la regla de valor de Shapley.",
                "Una \"regla de asignación\" satisface sin modificación si para todas q ∈ Q q, (σ, t) ∈ ψ (q), e i, j ∈ N, tenemos πi ≤ ci (σij)-tj, donde π es el costoCompartir desde la \"regla de asignación\" (σ, t) y σij es el ordenamiento que obtiene intercambiando i y j.",
                "Una \"regla de asignación\" satisface el noenvio ajustado si para todas q ∈ Q, (σ, t) ∈ ψ (q), y i, j ∈ N, tenemos πi ≤ ci (σij) - tij i."
            ],
            "translated_text": "",
            "candidates": [
                "Regla de asignación",
                "regla de asignación",
                "Regla de asignación",
                "regla de asignación",
                "regla de asignación",
                "regla de asignación",
                "regla de asignación",
                "regla de asignación",
                "regla de asignación",
                "regla de asignación",
                "regla de asignación",
                "regla de asignación",
                "regla de asignación",
                "regla de asignación",
                "regla de asignación",
                "regla de asignación",
                "regla de asignación",
                "regla de asignación",
                "regla de asignación",
                "regla de asignación",
                "regla de asignación",
                "regla de asignación",
                "regla de asignación",
                "regla de asignación",
                "regla de asignación",
                "regla de asignación",
                "regla de asignación",
                "regla de asignación",
                "regla de asignación",
                "regla de asignación",
                "regla de asignación",
                "regla de asignación",
                "regla de asignación",
                "regla de asignación",
                "regla de asignación",
                "regla de asignación",
                "Regla de asignación",
                "regla de asignación",
                "regla de asignación",
                "regla de asignación",
                "regla de asignación",
                "regla de asignación",
                "regla de asignación",
                "regla de asignación",
                "regla de asignación"
            ],
            "error": []
        },
        "expected cost bound": {
            "translated_key": "Costo esperado Límite",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Cost Sharing in a Job Scheduling Problem Using the Shapley Value Debasis Mishra Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium mishra@core.ucl.ac.be Bharath Rangarajan Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium rangarajan@core.ucl.ac.be ABSTRACT A set of jobs need to be served by a single server which can serve only one job at a time.",
                "Jobs have processing times and incur waiting costs (linear in their waiting time).",
                "The jobs share their costs through compensation using monetary transfers.",
                "We characterize the Shapley value rule for this model using fairness axioms.",
                "Our axioms include a bound on the cost share of jobs in a group, efficiency, and some independence properties on the the cost share of a job.",
                "Categories and Subject Descriptors J.4 [Social and Behaviorial Sciences]: Economics General Terms Economics, Theory 1.",
                "INTRODUCTION A set of jobs need to be served by a server.",
                "The server can process only one job at a time.",
                "Each job has a finite processing time and a per unit time waiting cost.",
                "Efficient ordering of this queue directs us to serve the jobs in increasing order of the ratio of per unit time waiting cost and processing time.",
                "To compensate for waiting by jobs, monetary transfers to jobs are allowed.",
                "How should the jobs share the cost equitably amongst themselves (through transfers)?",
                "The problem of fair division of costs among agents in a queue has many practical applications.",
                "For example, computer programs are regularly scheduled on servers, data are scheduled to be transmitted over networks, jobs are scheduled in shop-floor on machines, and queues appear in many public services (post offices, banks).",
                "Study of queueing problems has attracted economists for a long time [7, 17].",
                "Cost sharing is a fundamental problem in many settings on the Internet.",
                "Internet can be seen as a common resource shared by many users and the cost incured by using the resource needs to be shared in an equitable manner.",
                "The current surge in cost sharing literature from computer scientists validate this claim [8, 11, 12, 6, 24].",
                "Internet has many settings in which our model of job scheduling appears and the agents waiting in a queue incur costs (jobs scheduled on servers, queries answered from a database, data scheduled to be transmitted over a fixed bandwidth network etc.).",
                "We hope that our analysis will give new insights on cost sharing problems of this nature.",
                "Recently, there has been increased interest in cost sharing methods with submodular cost functions [11, 12, 6, 24].",
                "While many settings do have submodular cost functions (for example, multi-cast transmission games [8]), while the cost function of our game is supermodular.",
                "Also, such literature typically does not assume budget-balance (transfers adding up to zero), while it is an inherent feature of our model.",
                "A recent paper by Maniquet [15] is the closest to our model and is the motivation behind our work 1 .",
                "Maniquet [15] studies a model where he assumes all processing times are unity.",
                "For such a model, he characterizes the Shapley value rule using classical fairness axioms.",
                "Chun [1] interprets the worth of a coalition of jobs in a different manner for the same model and derives a reverse rule.",
                "Chun characterizes this rule using similar fairness axioms.",
                "Chun [2] also studies the envy properties of these rules.",
                "Moulin [22, 21] studies the queueing problem from a strategic point view when per unit waiting costs are unity.",
                "Moulin introduces new concepts in the queueing settings such as splitting and merging of jobs, and ways to prevent them.",
                "Another stream of literature is on sequencing games, first introduced by Curiel et al. [4].",
                "For a detailed survey, refer to Curiel et al. [3].",
                "Curiel et al. [4] defined sequencing games similar to our model, but in which an initial ordering of jobs is given.",
                "Besides, their notion of worth of a coalition is very different from the notions studied in Maniquet [15] and Chun [1] (these are the notions used in our work too).",
                "The particular notion of the worth of a coalition makes the sequencing game of Curiel et al. [4] convex, whereas our game is not convex and does not assume the presence of any initial order.",
                "In summary, the focus of this stream of 1 The authors thank Fran¸cois Maniquet for several fruitful discussions. 232 research is how to share the savings in costs from the initial ordering to the optimal ordering amongst jobs (also see Hamers et al. [9], Curiel et al. [5]).",
                "Recently, Klijn and S´anchez [13, 14] considered sequencing games without any initial ordering of jobs.",
                "They take two approaches to define the worth of coalitions.",
                "One of their approaches, called the tail game, is related to the reverse rule of Chun [1].",
                "In the tail game, jobs in a coalition are served after the jobs not in the coalition are served.",
                "Klijn and S´anchez [14] showed that the tail game is balanced.",
                "Further, they provide expressions for the Shapley value in tail game in terms of marginal vectors and reversed marginal vectors.",
                "We provide a simpler expression of the Shapley value in the tail game, generalizing the result in Chun [1].",
                "Klijn and S´anchez [13] study the core of this game in detail.",
                "Strategic aspects of queueing problems have also been researched.",
                "Mitra [19] studies the first best implementation in queueing models with generic cost functions.",
                "First best implementation means that there exists an efficient mechanism in which jobs in the queue have a dominant strategy to reveal their true types and their transfers add up to zero.",
                "Suijs [27] shows that if waiting costs of jobs are linear then first best implementation is possible.",
                "Mitra [19] shows that among a more general class of queueing problems first best implementation is possible if and only if the cost is linear.",
                "For another queueing model, Mitra [18] shows that first best implementation is possible if and only if the cost function satisfies a combinatorial property and an independence property.",
                "Moulin [22, 21] studies strategic concepts such as splitting and merging in queueing problems with unit per unit waiting costs.",
                "The general cost sharing literature is vast and has a long history.",
                "For a good survey, we refer to [20].",
                "From the seminal work of Shapley [25] to recent works on cost sharing in multi-cast transmission and optimization problems [8, 6, 23] this area has attracted economists, computer scientists, and operations researchers. 1.1 Our Contribution Ours is the first model which considers cost sharing when both processing time and per unit waiting cost of jobs are present.",
                "We take a cooperative game theory approach and apply the classical Shapley value rule to the problem.",
                "We show that the Shapley value rule satisfies many intuitive fairness axioms.",
                "Due to two dimensional nature of our model and one dimensional nature of Maniquets model [15], his axioms are insufficient to characterize the Shapley value in our setting.",
                "We introduce axioms such as independece of preceding jobs unit waiting cost and independence of following jobs processing time.",
                "A key axiom that we introduce gives us a bound on cost share of a job in a group of jobs which have the same ratio of unit time waiting cost and processing time (these jobs can be ordered in any manner between themseleves in an efficient ordering).",
                "If such a group consists of just one job, then the axiom says that such a job should at least pay his own processing cost (i.e., the cost it would have incurred if it was the only job in the queue).",
                "If there are multiple jobs in such a group, the probability of any two jobs from such a group inflicting costs on each other is same (1 2 ) in an efficient ordering.",
                "Depending on the ordering selected, one job inflicts cost on the other.",
                "Our fairness axiom says that each job should at least bear such expected costs.",
                "We characterize the Shapley value rule using these fairness axioms.",
                "We also extend the envy results in [2] to our setting and discuss a class of reasonable cost sharing mechanisms. 2.",
                "THE MODEL There are n jobs that need to be served by one server which can process only one job at a time.",
                "The set of jobs are denoted as N = {1, . . . , n}. σ : N → N is an ordering of jobs in N and σi denotes the position of job i in the ordering σ.",
                "Given an ordering σ, define Fi(σ) = {j ∈ N : σi < σj} and Pi(σ) = {j ∈ N : σi > σj}.",
                "Every job i is identified by two parameters: (pi, θi). pi is the processing time and θi is the cost per unit waiting time of job i.",
                "Thus, a queueing problem is defined by a list q = (N, p, θ) ∈ Q, where Q is the set of all possible lists.",
                "We will denote γi = θi pi .",
                "Given an ordering of jobs σ, the cost incurred by job i is given by ci(σ) = piθi + θi   j∈Pi(σ) pj.",
                "The total cost incurred by all jobs due to an ordering σ can be written in two ways: (i) by summing the cost incurred by every job and (ii) by summing the costs inflicted by a job on other jobs with their own processing cost.",
                "C(N, σ) =   i∈N ci(σ) =   i∈N piθi +   i∈N ¡θi   j∈Pi(σ) pj¢. =   i∈N piθi +   i∈N ¡pi   j∈Fi(σ) θj¢.",
                "An efficient ordering σ∗ is the one which minimizes the total cost incurred by all jobs.",
                "So, C(N, σ∗ ) ≤ C(N, σ) ∀ σ ∈ Σ.",
                "To achieve notational simplicity, we will write the total cost in an efficient ordering of jobs from N as C(N) whenever it is not confusing.",
                "Sometimes, we will deal with only a subset of jobs S ⊆ N. The ordering σ will then be defined on jobs in S only and we will write the total cost from an efficient ordering of jobs in S as C(S).",
                "The following lemma shows that jobs are ordered in decreasing γ in an efficient ordering.",
                "This is also known as the weighted shortest processing time rule, first introduced by Smith [26].",
                "Lemma 1.",
                "For any S ⊆ N, let σ∗ be an efficient ordering of jobs in S. For every i = j, i, j ∈ S, if σ∗ i > σ∗ j , then γi ≤ γj.",
                "Proof.",
                "Assume for contradiction that the statment of the lemma is not true.",
                "This means, we can find two consecutive jobs i, j ∈ S (σ∗ i = σ∗ j + 1) such that γi > γj.",
                "Define a new ordering σ by interchanging i and j in σ∗ .",
                "The costs to jobs in S \\ {i, j} is not changed from σ∗ to σ.",
                "The difference between total costs in σ∗ and σ is given by, C(S, σ) − C(S, σ∗ ) = θjpi − θipj.",
                "From efficiency we get θjpi − θipj ≥ 0.",
                "This gives us γj ≥ γi, which is a contradiction.",
                "An allocation for q = (N, p, θ) ∈ Q has two components: an ordering σ and a transfer ti for every job i ∈ N. ti denotes the payment received by job i.",
                "Given a transfer ti and an ordering σ, the cost share of job i is defined as, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. 233 An allocation (σ, t) is efficient for q = (N, p, θ) whenever σ is an efficient ordering and £i∈N ti = 0.",
                "The set of efficient orderings of q is denoted as Σ∗ (q) and σ∗ (q) will be used to refer to a typical element of the set.",
                "The following straightforward lemma says that for two different efficient orderings, the cost share in one efficient allocation is possible to achieve in the other by appropriately modifying the transfers.",
                "Lemma 2.",
                "Let (σ, t) be an efficient allocation and π be the vector of cost shares of jobs from this allocation.",
                "If σ∗ = σ be an efficient ordering and t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, then (σ∗ , t∗ ) is also an efficient allocation.",
                "Proof.",
                "Since (σ, t) is efficient, £i∈N ti = 0.",
                "This gives £i∈N πi = C(N).",
                "Since σ∗ is an efficient ordering, £i∈N ci(σ∗ ) = C(N).",
                "This means, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0.",
                "So, (σ∗ , t∗ ) is an efficient allocation.",
                "Depending on the transfers, the cost shares in different efficient allocations may differ.",
                "An allocation rule ψ associates with every q ∈ Q a non-empty subset ψ(q) of allocations. 3.",
                "COST SHARING USING THE SHAPLEY VALUE In this section, we define the coalitional cost of this game and analyze the solution proposed by the Shapley value.",
                "Given a queue q ∈ Q, the cost of a coalition of S ⊆ N jobs in the queue is defined as the cost incurred by jobs in S if these are the only jobs served in the queue using an efficient ordering.",
                "Formally, the cost of a coalition S ⊆ N is, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, where σ∗ = σ∗ (S) is an efficient ordering considering jobs from S only.",
                "The worth of a coalition of S jobs is just −C(S).",
                "Maniquet [15] observes another equivalent way to define the worth of a coalition is using the dual function of the cost function C(·).",
                "Other interesting ways to define the worth of a coalition in such games is discussed by Chun [1], who assume that a coalition of jobs are served after the jobs not in the coalition are served.",
                "The Shapley value (or cost share) of a job i is defined as, SVi =   S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) The Shapley value allocation rule says that jobs are ordered using an efficient ordering and transfers are assigned to jobs such that the cost share of job i is given by Equation 1.",
                "Lemma 3.",
                "Let σ∗ be an efficient ordering of jobs in set N. For all i ∈ N, the Shapley value is given by, SVi = piθi + 1 2 ¡Li + Ri¢, where Li = θi £j∈Pi(σ∗) pj and Ri = pi £j∈Fi(σ∗) θj.",
                "Proof.",
                "Another way to write the Shapley value formula is the following [10], SVi =   S⊆N:i∈S ∆(S) |S| , where ∆(S) = C(S) if |S| = 1 and ∆(S) = C(S)−£T S ∆(T).",
                "This gives ∆({i}) = C({i}) = piθi ∀i ∈ N. For any i, j ∈ N with i = j, we have ∆({i, j}) = C({i, j}) − C({i}) − C({j}) = min(piθi + pjθj + pjθi, piθi + pjθj + piθj) − piθi − pjθj = min(pjθi, piθj).",
                "We will show by induction that ∆(S) = 0 if |S| > 2.",
                "For |S| = 3, let S = {i, j, k}.",
                "Without loss of generality, assume θi pi ≥ θj pj ≥ θk pk .",
                "So, ∆(S) = C(S) − ∆({i, j}) − ∆({j, k}) − ∆({i, k})−∆({i})−∆({j})−∆({k}) = C(S)−piθj −pjθk − piθk − piθi − pjθj − pkθk = C(S) − C(S) = 0.",
                "Now, assume for T S, ∆(T) = 0 if |T| > 2.",
                "Without loss of generality assume that σ to be the identity mapping.",
                "Now, ∆(S) = C(S) −   T S ∆(T) = C(S) −   i∈S   j∈S:j<i ∆({i, j}) −   i∈S ∆({i}) = C(S) −   i∈S   j∈S:j<i pjθi −   i∈S piθi = C(S) − C(S) = 0.",
                "This proves that ∆(S) = 0 if |S| > 2.",
                "Using the Shapley value formula now, SVi =   S⊆N:i∈S ∆(S) |S| = ∆({i}) + 1 2   j∈N:j=i ∆({i, j}) = piθi + 1 2 ¡  j<i ∆({i, j}) +   j>i ∆({i, j})¢ = piθi + 1 2 ¡  j<i pjθi +   j>i piθj¢= piθi + 1 2 ¡Li + Ri¢. 4.",
                "AXIOMATICCHARACTERIZATIONOF THE SHAPLEY VALUE In this section, we will define serveral axioms on fairness and characterize the Shapley value using them.",
                "For a given q ∈ Q, we will denote ψ(q) as the set of allocations from allocation rule ψ.",
                "Also, we will denote the cost share vector associated with an allocation rule (σ, t) as π and that with allocation rule (σ , t ) as π etc. 4.1 The Fairness Axioms We will define three types of fairness axioms: (i) related to efficiency, (ii) related to equity, and (iii) related to independence.",
                "Efficiency Axioms We define two types of efficiency axioms.",
                "One related to efficiency which states that an efficient ordering should be selected and the transfers of jobs should add up to zero (budget balance).",
                "Definition 1.",
                "An allocation rule ψ satisfies efficiency if for every q ∈ Q and (σ, t) ∈ ψ(q), (σ, t) is an efficient allocation. 234 The second axiom related to efficiency says that the allocation rule should not discriminate between two allocations which are equivalent to each other in terms of cost shares of jobs.",
                "Definition 2.",
                "An allocation rule ψ satisfies Pareto indifference if for every q ∈ Q, (σ, t) ∈ ψ(q), and (σ , t ) ∈ Σ(q), we have ¡πi = πi ∀ i ∈ N¢⇒ ¡(σ , t ) ∈ ψ(q)¢.",
                "An implication of Pareto indifference axiom and Lemma 2 is that for every efficient ordering there is some set of transfers of jobs such that it is part of an efficient rule and the cost share of a job in all these allocations are same.",
                "Equity Axioms How should the cost be shared between two jobs if the jobs have some kind of similarity between them?",
                "Equity axioms provide us with fairness properties which help us answer this question.",
                "We provide five such axioms.",
                "Some of these axioms (for example anonymity, equal treatment of equals) are standard in the literature, while some are new.",
                "We start with a well known equity axiom called anonymity.",
                "Denote ρ : N → N as a permutation of elements in N. Let ρ(σ, t) denote the allocation obtained by permuting elements in σ and t according to ρ.",
                "Similarly, let ρ(p, θ) denote the new list of (p, θ) obtained by permuting elements of p and θ according to ρ.",
                "Our first equity axiom states that allocation rules should be immune to such permutation of data.",
                "Definition 3.",
                "An allocation rule ψ satisfies anonymity if for all q ∈ Q, (σ, t) ∈ ψ(q) and every permutation ρ, we then ρ(σ, t) ∈ ψ(N, ρ(q)).",
                "The next equity axiom is classical in literature and says that two similar jobs should be compensated such that their cost shares are equal.",
                "This implies that if all the jobs are of same type, then jobs should equally share the total system cost.",
                "Definition 4.",
                "An allocation rule ψ satisfies equal treatment of equals (ETE) if for all q ∈ Q, (σ, t) ∈ ψ(q), i, j ∈ N, then ¡pi = pj; θi = θj¢⇒ ¡πi = πj¢.",
                "ETE directs us to share costs equally between jobs if they are of the same per unit waiting cost and processing time.",
                "But it is silent about the cost shares of two jobs i and j which satisfy θi pi = θj pj .",
                "We introduce a new axiom for this.",
                "If an efficient rule chooses σ such that σi < σj for some i, j ∈ N, then job i is inflicting a cost of piθj on job j and job j is inflicting zero cost on job i.",
                "Define for some γ ≥ 0, S(γ) = {i ∈ N : γi = γ}.",
                "In an efficient rule, the elements in S(γ) can be ordered in any manner (in |S(γ)|! ways).",
                "If i, j ∈ S(γ) then we have pjθi = piθj.",
                "Probability of σi < σj is 1 2 and so is the probability of σi > σj.",
                "The expected cost i inflicts on j is 1 2 piθj and j inflicts on i is 1 2 pjθi.",
                "Our next fairness axiom says that i and j should each be responsible for their own processing cost and this expected cost they inflict on each other.",
                "Arguing for every pair of jobs i, j ∈ S(γ), we establish a bound on the cost share of jobs in S(γ).",
                "We impose this as an equity axiom below.",
                "Definition 5.",
                "An allocation rule satisfies <br>expected cost bound</br> (ECB) if for all q ∈ Q, (σ, t) ∈ ψ(q) with π being the resulting cost share, for any γ ≥ 0, and for every i ∈ S(γ), we have πi ≥ piθi + 1 2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢.",
                "The central idea behind this axiom is that of expected cost inflicted.",
                "If an allocation rule chooses multiple allocations, we can assign equal probabilities of selecting one of the allocations.",
                "In that case, the expected cost inflicted by a job i on another job j in the allocation rule can be calculated.",
                "Our axiom says that the cost share of a job should be at least its own processing cost and the total expected cost it inflicts on others.",
                "Note that the above bound poses no constraints on how the costs are shared among different groups.",
                "Also observe that if S(γ) contains just one job, ECB says that job should at least bear its own processing cost.",
                "A direct consequence of ECB is the following lemma.",
                "Lemma 4.",
                "Let ψ be an efficient rule which satisfies ECB.",
                "For a q ∈ Q if S(γ) = N, then for any (σ, t) ∈ ψ(q) which gives a cost share of π, πi = piθi + 1 2 ¡Li + Ri¢∀ i ∈ N. Proof.",
                "From ECB, we get πi ≥ piθi+1 2 ¡Li+Ri¢∀ i ∈ N. Assume for contradiction that there exists j ∈ N such that πj > pjθj + 1 2 ¡Li + Ri¢.",
                "Using efficiency and the fact that £i∈N Li = £i∈N Ri, we get £i∈N πi = C(N) > £i∈N piθi + 1 2 £i∈N ¡Li + Ri¢ = C(N).",
                "This gives us a contradiction.",
                "Next, we introduce an axiom about sharing the transfer of a job between a set of jobs.",
                "In particular, if the last job quits the system, then the ordering need not change.",
                "But the transfer to the last job needs to be shared between the other jobs.",
                "This should be done in proportion to their processing times because every job influenced the last job based on its processing time.",
                "Definition 6.",
                "An allocation rule ψ satisfies proportionate responsibility of p (PRp) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = |N|, q = (N \\ {k}, p , θ ) ∈ Q, such that for all i ∈ N\\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk pi £j=k pj .",
                "An analogous fairness axiom results if we remove the job from the beginning of the queue.",
                "Since the presence of the first job influenced each job depending on their θ values, its transfer needs to be shared in proportion to θ values.",
                "Definition 7.",
                "An allocation rule ψ satisfies proportionate responsibility of θ (PRθ) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = 1, q = (N \\{k}, p , θ ) ∈ Q, such that for all i ∈ N \\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk θi £j=k θj .",
                "The proportionate responsibility axioms are generalizations of equal responsibility axioms introduced by Maniquet [15]. 235 Independence Axioms The waiting cost of a job does not depend on the per unit waiting cost of its preceding jobs.",
                "Similarly, the waiting cost inflicted by a job to its following jobs is independent of the processing times of the following jobs.",
                "These independence properties should be carried over to the cost sharing rules.",
                "This gives us two independence axioms.",
                "Definition 8.",
                "An allocation rule ψ satisfies independence of preceding jobs θ (IPJθ) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk < γk, pk = pk, then for all j ∈ N such that σj > σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ).",
                "Definition 9.",
                "An allocation rule ψ satisfies independence of following jobs p (IFJp) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk > γk, θk = θk, then for all j ∈ N such that σj < σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ). 4.2 The Characterization Results Having stated the fairness axioms, we propose three different ways to characterize the Shapley value rule using these axioms.",
                "All our characterizations involve efficiency and ECB.",
                "But if we have IPJθ, we either need IFJp or PRp.",
                "Similarly if we have IFJp, we either need IPJθ or PRθ.",
                "Proposition 1.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and IFJp is a rule implied by the Shapley value rule.",
                "Proof.",
                "Define for any i, j ∈ N, θi j = γipj and pi j = θj γi .",
                "Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider the following q = (N, p , θ ) corresponding to job i with pj = pj if j ≤ i and pj = pi j if j > i, θj = θi j if j < i and θj = θj if j ≥ i.",
                "Observe that all jobs have the same γ: γi.",
                "By Lemma 2 and efficiency, (σ, t ) ∈ ψ(q ) for some set of transfers t .",
                "Using Lemma 4, we get cost share of i from (σ, t ) as πi = piθi + 1 2 ¡Li + Ri¢.",
                "Now, for any j < i, if we change θj to θj without changing processing time, the new γ of j is γj ≥ γi.",
                "Applying IPJθ, the cost share of job i should not change.",
                "Similarly, for any job j > i, if we change pj to pj without changing θj, the new γ of j is γj ≤ γi.",
                "Applying IFJp, the cost share of job i should not change.",
                "Applying this procedure for every j < i with IPJθ and for every j > i with IFJp, we reach q = (N, p, θ) and the payoff of i does not change from πi.",
                "Using this argument for every i ∈ N and using the expression for the Shapley value in Lemma 3, we get the Shapley value rule.",
                "It is possible to replace one of the independence axioms with an equity axiom on sharing the transfer of a job.",
                "This is shown in Propositions 2 and 3.",
                "Proposition 2.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and PRp is a rule implied by the Shapley value rule.",
                "Proof.",
                "As in the proof of Proposition 1, define θi j = γipj ∀ i, j ∈ N. Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider a queue with jobs in set K = {1, . . . , i, i + 1}, where i < n. Define q = (K, p, θ ), where θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ is an efficient ordering for q .",
                "By ECB and Lemma 4 the cost share of job i + 1 in any allocation rule in ψ must be πi+1 = pi+1θi+1 + 1 2 ¡£j<i+1 pjθi+1¢.",
                "Now, consider q = (K, p, θ ) such that θj = θi j ∀ j ≤ i and θi+1 = θi+1. σ remains an efficient ordering in q and by IPJθ the cost share of i + 1 remains πi+1.",
                "In q = (K \\ {i + 1}, p, θ ), we can calculate the cost share of job i using ECB and Lemma 4 as πi = piθi + 1 2 £j<i pjθi.",
                "So, using PRp we get the new cost share of job i in q as πi = πi + ti+1 pi j<i+1 pj = piθi + 1 2 ¡£j<i pjθi + piθi+1¢.",
                "Now, we can set K = K ∪ {i + 2}.",
                "As before, we can find cost share of i + 2 in this queue as πi+2 = pi+2θi+2 + 1 2 ¡£j<i+2 pjθi+2¢.",
                "Using PRp we get the new cost share of job i in the new queue as πi = piθi + 1 2 ¡£j<i pjθi + piθi+1 + piθi+2¢.",
                "This process can be repeated till we add job n at which point cost share of i is piθi + 1 2 ¡£j<i pjθi + £j>i piθj¢.",
                "Then, we can adjust the θ of preceding jobs of i to their original value and applying IPJθ, the payoffs of jobs i through n will not change.",
                "This gives us the Shapley values of jobs i through n. Setting i = 1, we get cost shares of all the jobs from ψ as the Shapley value.",
                "Proposition 3.",
                "Any efficient rule ψ that satisfies ECB, IFJp, and PRθ is a rule implied by the Shapley value rule.",
                "Proof.",
                "The proof mirrors the proof of Proposition 2.",
                "We provide a short sketch.",
                "Analogous to the proof of Proposition 2, θs are kept equal to original data and processing times are initialized to pi+1 j .",
                "This allows us to use IFJp.",
                "Also, contrast to Proposition 2, we consider K = {i, i + 1, . . . , n} and repeatedly add jobs to the beginning of the queue maintaining the same efficient ordering.",
                "So, we add the cost components of preceding jobs to the cost share of jobs in each iteration and converge to the Shapley value rule.",
                "The next proposition shows that the Shapley value rule satisfies all the fairness axioms discussed.",
                "Proposition 4.",
                "The Shapley value rule satisfies efficiency, pareto indifference, anonymity, ETE, ECB, IPJθ, IFJp, PRp, and PRθ.",
                "Proof.",
                "The Shapley value rule chooses an efficient ordering and by definition the payments add upto zero.",
                "So, it satisfies efficiency.",
                "The Shapley value assigns same cost share to a job irrespective of the efficient ordering chosen.",
                "So, it is pareto indifferent.",
                "The Shapley value is anonymous because the particular index of a job does not effect his ordering or cost share.",
                "For ETE, consider two jobs i, j ∈ N such that pi = pj and θi = θj.",
                "Without loss of generality assume the efficient ordering to be 1, . . . , i, . . . , j, . . . , n. Now, the Shapley value of job i is 236 SVi = piθi + 1 2 ¡Li + Ri¢(From Lemma 3) = pjθj + 1 2 ¡Lj + Rj¢− 1 2 ¡Li − Lj + Ri − Rj¢ = SVj − 1 2 ¡   i<k≤j piθk −   i≤k<j pkθi¢ = SVj − 1 2   i<k≤j (piθk − pkθi) (Using pi = pj and θi = θj) = SVj (Using θk pk = θi pi for all i ≤ k ≤ j).",
                "The Shapley value satisfies ECB by its expression in Lemma 3.",
                "Consider any job i, in an efficient ordering σ, if we increase the value of γj for some j = i such that σj > σi, then the set Pi ( preceding jobs) does not change in the new efficient ordering.",
                "If γj is changed such that pj remains the same, then the expression £j∈Pi θipj is unchanged.",
                "If (p, θ) values of no other jobs are changed, then the Shapley value is unchanged by increasing γj for some j ∈ Pi while keeping pj unchanged.",
                "Thus, the Shapley value rule satisfies IPJθ.",
                "An analogous argument shows that the Shapley value rule satisfies IFJp.",
                "For PRp, assume without loss of generality that jobs are ordered 1, . . . , n in an efficient ordering.",
                "Denote the transfer of job i = n due to the Shapley value with set of jobs N and set of jobs N \\ {n} as ti and ti respectively.",
                "Transfer of last job is tn = 1 2 θn £j<n pj.",
                "Now, ti = 1 2 ¡θi   j<i pj − pi   j>i θj¢ = 1 2 ¡θi   j<i pj − pi   j>i:j=n θj¢− 1 2 piθn = ti − 1 2 θn   j<n pj pi £j<n pj = ti − tn pi £j<n pj .",
                "A similar argument shows that the Shapley value rule satisfies PRθ.",
                "These series of propositions lead us to our main result.",
                "Theorem 1.",
                "Let ψ be an allocation rule.",
                "The following statements are equivalent: 1) For each q ∈ Q, ψ(q) selects all the allocation assigning jobs cost shares implied by the Shapley value. 2) ψ satisfies efficiency, ECB, IFJp, and IPJθ. 3) ψ satisfies efficiency, ECB, IFJp, and PRθ. 4) ψ satisfies efficiency, ECB, PRp, and IPJθ.",
                "Proof.",
                "The proof follows from Propositions 1, 2, 3, and 4. 5.",
                "DISCUSSIONS 5.1 A Reasonable Class of Cost Sharing Mechanisms In this section, we will define a reasonable class of cost sharing mechanisms.",
                "We will show how these reasonable mechanisms lead to the Shapley value mechanism.",
                "Definition 10.",
                "An allocation rule ψ is reasonable if for all q ∈ Q and (σ, t) ∈ ψ(q) we have for all i ∈ N, ti = α ¡θi   j∈Pi(σ) pj − pi   j∈Fi(σ) θj¢∀ i ∈ N, where 0 ≤ α ≤ 1.",
                "The reasonable cost sharing mechanism says that every job should be paid a constant fraction of the difference between the waiting cost he incurs and the waiting cost he inflicts on other jobs.",
                "If α = 0, then every job bears its own cost.",
                "If α = 1, then every job gets compensated for its waiting cost but compensates others for the cost he inflicts on others.",
                "The Shapley value rule comes as a result of ETE as shown in the following proposition.",
                "Proposition 5.",
                "Any efficient and reasonable allocation rule ψ that satisfies ETE is a rule implied by the Shapley value rule.",
                "Proof.",
                "Consider a q ∈ Q in which pi = pj and θi = θj.",
                "Let (σ, t) ∈ ψ(q) and π be the resulting cost shares.",
                "From ETE, we get, πi = πj ⇒ ci(σ) − ti = cj(σ) − tj ⇒ piθi + (1 − α)Li + αRi = pjθj + (1 − α)Lj + αRj (Since ψ is efficient and reasonable) ⇒ (1 − α)(Li − Lj) = α(Rj − Ri) (Using pi = pj, θi = θj) ⇒ 1 − α = α (Using Li − Lj = Rj − Ri = 0) ⇒ α = 1 2 .",
                "This gives us the Shapley value rule by Lemma 3. 5.2 Results on Envy Chun [2] discusses a fariness condition called no-envy for the case when processing times of all jobs are unity.",
                "Definition 11.",
                "An allocation rule satisfies no-envy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tj, where π is the cost share from allocation rule (σ, t) and σij is the ordering obtaining by swapping i and j.",
                "From the result in [2], the Shapley value rule does not satisfy no-envy in our model also.",
                "To overcome this, Chun [2] introduces the notion of adjusted no-envy, which he shows is satisfied in the Shapley value rule when processing times of all jobs are unity.",
                "Here, we show that adjusted envy continues to hold in the Shapley value rule in our model (when processing times need not be unity).",
                "As before denote σij be an ordering where the position of i and j is swapped from an ordering σ.",
                "For adjusted noenvy, if (σ, t) is an allocation for some q ∈ Q, let tij be the 237 transfer of job i when the transfer of i is calculated with respect to ordering σij .",
                "Observe that an allocation may not allow for calculation of tij .",
                "For example, if ψ is efficient, then tij cannot be calculated if σij is also not efficient.",
                "For simplicity, we state the definition of adjusted no-envy to apply to all such rules.",
                "Definition 12.",
                "An allocation rule satisfies adjusted noenvy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tij i .",
                "Proposition 6.",
                "The Shapley value rule satisfies adjusted no-envy.",
                "Proof.",
                "Without loss of generality, assume efficient ordering of jobs is: 1, . . . , n. Consider two jobs i and i + k. From Lemma 3, SVi = piθi + 1 2 ¡  j<i θipj +   j>i θjpi¢.",
                "Let ˆπi be the cost share of i due to adjusted transfer tii+k i in the ordering σii+k . ˆπi = ci(σii+k ) − tii+k i = piθi + 1 2 ¡  j<i θipj + θipi+k +   i<j<i+k θipj +   j>i θjpi − θi+kpi −   i<j<i+k θjpi¢ = SVi + 1 2   i<j≤i+k ¡θipj − θjpi¢ ≥ SVi (Using the fact that θi pi ≥ θj pj for i < j). 6.",
                "CONCLUSION We studied the problem of sharing costs for a job scheduling problem on a single server, when jobs have processing times and unit time waiting costs.",
                "We took a cooperative game theory approach and show that the famous the Shapley value rule satisfies many nice fairness properties.",
                "We characterized the Shapley value rule using different intuitive fairness axioms.",
                "In future, we plan to further simplify some of the fairness axioms.",
                "Some initial simplifications already appear in [16], where we provide an alternative axiom to ECB and also discuss the implication of transfers between jobs (in stead of transfers from jobs to a central server).",
                "We also plan to look at cost sharing mechanisms other than the Shapley value.",
                "Investigating the strategic power of jobs in such mechanisms is another line of future research. 7.",
                "REFERENCES [1] Youngsub Chun.",
                "A Note on Maniquets Characterization of the Shapley Value in Queueing Problems.",
                "Working Paper, Rochester University, 2004. [2] Youngsub Chun.",
                "No-envy in Queuing Problems.",
                "Working Paper, Rochester University, 2004. [3] Imma Curiel, Herbert Hamers, and Flip Klijn.",
                "Sequencing Games: A Survey.",
                "In Peter Borm and Hans Peters, editors, Chapter in Game Theory.",
                "Theory and Decision Library, Kulwer Academic Publishers, 2002. [4] Imma Curiel, Giorgio Pederzoli, and Stef Tijs.",
                "Sequencing Games.",
                "European Journal of Operational Research, 40:344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs, and Bart Veltman.",
                "Sequencing and Cooperation.",
                "Operations Research, 42(3):566-568, May-June 1994. [6] Nikhil R. Devanur, Milena Mihail, and Vijay V. Vazirani.",
                "Strategyproof Cost-sharing Mechanisms for Set Cover and Facility Location Games.",
                "In Proceedings of Fourth Annual ACM Conferece on Electronic Commerce, 2003. [7] Robert J. Dolan.",
                "Incentive Mechanisms for Priority Queueing Problems.",
                "Bell Journal of Economics, 9:421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou, and Scott Shenker.",
                "Sharing the Cost of Multicast Transmissions.",
                "In Proceedings of Thirty-Second Annual ACM Symposium on Theory of Computing, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs, and Peter Borm.",
                "The Split Core for Sequencing Games.",
                "Games and Economic Behavior, 15:165-176, 1996. [10] John C. Harsanyi.",
                "Contributions to Theory of Games IV, chapter A Bargaining Model for Cooperative n-person Games.",
                "Princeton University Press, 1959.",
                "Editors: A. W. Tucker, R. D. Luce. [11] Kamal Jain and Vijay Vazirani.",
                "Applications of Approximate Algorithms to Cooperative Games.",
                "In Proceedings of 33rd Symposium on Theory of Computing (STOC 01), 2001. [12] Kamal Jain and Vijay Vazirani.",
                "Equitable Cost Allocations via Primal-Dual Type Algorithms.",
                "In Proceedings of 34th Symposium on Theory of Computing (STOC 02), 2002. [13] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without a Completely Specified Initial Order.",
                "Report in Statistics and Operations Research, pages 1-17, 2002.",
                "Report 02-04. [14] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without Initial Order.",
                "Working Paper, Universitat Aut´onoma de Barcelona, July 2004. [15] Franois Maniquet.",
                "A Characterization of the Shapley Value in Queueing Problems.",
                "Journal of Economic Theory, 109:90-103, 2003. [16] Debasis Mishra and Bharath Rangarajan.",
                "Cost sharing in a job scheduling problem.",
                "Working Paper, CORE, 2005. [17] Manipushpak Mitra.",
                "Essays on First Best Implementable Incentive Problems.",
                "Ph.D. Thesis, Indian Statistical Institute, New Delhi, 2000. [18] Manipushpak Mitra.",
                "Mechanism design in queueing problems.",
                "Economic Theory, 17(2):277-305, 2001. [19] Manipushpak Mitra.",
                "Achieving the first best in sequencing problems.",
                "Review of Economic Design, 7:75-91, 2002. [20] Herv´e Moulin.",
                "Handbook of Social Choice and Welfare, chapter Axiomatic Cost and Surplus Sharing.",
                "North-Holland, 2002.",
                "Publishers: Arrow, Sen, Suzumura. [21] Herv´e Moulin.",
                "On Scheduling Fees to Prevent 238 Merging, Splitting and Transferring of Jobs.",
                "Working Paper, Rice University, 2004. [22] Herv´e Moulin.",
                "Split-proof Probabilistic Scheduling.",
                "Working Paper, Rice University, 2004. [23] Herv´e Moulin and Rakesh Vohra.",
                "Characterization of Additive Cost Sharing Methods.",
                "Economic Letters, 80:399-407, 2003. [24] Martin P´al and ´Eva Tardos.",
                "Group Strategyproof Mechanisms via Primal-Dual Algorithms.",
                "In Proceedings of the 44th Annual IEEE Symposium on the Foundations of Computer Science (FOCS 03), 2003. [25] Lloyd S. Shapley.",
                "Contributions to the Theory of Games II, chapter A Value for n-person Games, pages 307-317.",
                "Annals of Mathematics Studies, 1953.",
                "Ediors: H. W. Kuhn, A. W. Tucker. [26] Wayne E. Smith.",
                "Various Optimizers for Single-Stage Production.",
                "Naval Research Logistics Quarterly, 3:59-66, 1956. [27] Jeroen Suijs.",
                "On incentive compatibility and budget balancedness in public decision making.",
                "Economic Design, 2, 2002. 239"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Una regla de asignación satisface el \"costo esperado\" (ECB) si para todas las q ∈ Q, (σ, t) ∈ ψ (q) con π es el costo resultante compartido, para cualquier γ ≥ 0, y para cada i ∈ S ((γ), tenemos πi ≥ Piθi + 1 2 ¡j∈S (γ): σj <σi pjθi + j∈S (γ): σj> σi piθj ¢."
            ],
            "translated_text": "",
            "candidates": [
                "Costo esperado Límite",
                "costo esperado"
            ],
            "error": []
        },
        "queue problem": {
            "translated_key": "problema de la cola",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Cost Sharing in a Job Scheduling Problem Using the Shapley Value Debasis Mishra Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium mishra@core.ucl.ac.be Bharath Rangarajan Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium rangarajan@core.ucl.ac.be ABSTRACT A set of jobs need to be served by a single server which can serve only one job at a time.",
                "Jobs have processing times and incur waiting costs (linear in their waiting time).",
                "The jobs share their costs through compensation using monetary transfers.",
                "We characterize the Shapley value rule for this model using fairness axioms.",
                "Our axioms include a bound on the cost share of jobs in a group, efficiency, and some independence properties on the the cost share of a job.",
                "Categories and Subject Descriptors J.4 [Social and Behaviorial Sciences]: Economics General Terms Economics, Theory 1.",
                "INTRODUCTION A set of jobs need to be served by a server.",
                "The server can process only one job at a time.",
                "Each job has a finite processing time and a per unit time waiting cost.",
                "Efficient ordering of this queue directs us to serve the jobs in increasing order of the ratio of per unit time waiting cost and processing time.",
                "To compensate for waiting by jobs, monetary transfers to jobs are allowed.",
                "How should the jobs share the cost equitably amongst themselves (through transfers)?",
                "The problem of fair division of costs among agents in a queue has many practical applications.",
                "For example, computer programs are regularly scheduled on servers, data are scheduled to be transmitted over networks, jobs are scheduled in shop-floor on machines, and queues appear in many public services (post offices, banks).",
                "Study of queueing problems has attracted economists for a long time [7, 17].",
                "Cost sharing is a fundamental problem in many settings on the Internet.",
                "Internet can be seen as a common resource shared by many users and the cost incured by using the resource needs to be shared in an equitable manner.",
                "The current surge in cost sharing literature from computer scientists validate this claim [8, 11, 12, 6, 24].",
                "Internet has many settings in which our model of job scheduling appears and the agents waiting in a queue incur costs (jobs scheduled on servers, queries answered from a database, data scheduled to be transmitted over a fixed bandwidth network etc.).",
                "We hope that our analysis will give new insights on cost sharing problems of this nature.",
                "Recently, there has been increased interest in cost sharing methods with submodular cost functions [11, 12, 6, 24].",
                "While many settings do have submodular cost functions (for example, multi-cast transmission games [8]), while the cost function of our game is supermodular.",
                "Also, such literature typically does not assume budget-balance (transfers adding up to zero), while it is an inherent feature of our model.",
                "A recent paper by Maniquet [15] is the closest to our model and is the motivation behind our work 1 .",
                "Maniquet [15] studies a model where he assumes all processing times are unity.",
                "For such a model, he characterizes the Shapley value rule using classical fairness axioms.",
                "Chun [1] interprets the worth of a coalition of jobs in a different manner for the same model and derives a reverse rule.",
                "Chun characterizes this rule using similar fairness axioms.",
                "Chun [2] also studies the envy properties of these rules.",
                "Moulin [22, 21] studies the queueing problem from a strategic point view when per unit waiting costs are unity.",
                "Moulin introduces new concepts in the queueing settings such as splitting and merging of jobs, and ways to prevent them.",
                "Another stream of literature is on sequencing games, first introduced by Curiel et al. [4].",
                "For a detailed survey, refer to Curiel et al. [3].",
                "Curiel et al. [4] defined sequencing games similar to our model, but in which an initial ordering of jobs is given.",
                "Besides, their notion of worth of a coalition is very different from the notions studied in Maniquet [15] and Chun [1] (these are the notions used in our work too).",
                "The particular notion of the worth of a coalition makes the sequencing game of Curiel et al. [4] convex, whereas our game is not convex and does not assume the presence of any initial order.",
                "In summary, the focus of this stream of 1 The authors thank Fran¸cois Maniquet for several fruitful discussions. 232 research is how to share the savings in costs from the initial ordering to the optimal ordering amongst jobs (also see Hamers et al. [9], Curiel et al. [5]).",
                "Recently, Klijn and S´anchez [13, 14] considered sequencing games without any initial ordering of jobs.",
                "They take two approaches to define the worth of coalitions.",
                "One of their approaches, called the tail game, is related to the reverse rule of Chun [1].",
                "In the tail game, jobs in a coalition are served after the jobs not in the coalition are served.",
                "Klijn and S´anchez [14] showed that the tail game is balanced.",
                "Further, they provide expressions for the Shapley value in tail game in terms of marginal vectors and reversed marginal vectors.",
                "We provide a simpler expression of the Shapley value in the tail game, generalizing the result in Chun [1].",
                "Klijn and S´anchez [13] study the core of this game in detail.",
                "Strategic aspects of queueing problems have also been researched.",
                "Mitra [19] studies the first best implementation in queueing models with generic cost functions.",
                "First best implementation means that there exists an efficient mechanism in which jobs in the queue have a dominant strategy to reveal their true types and their transfers add up to zero.",
                "Suijs [27] shows that if waiting costs of jobs are linear then first best implementation is possible.",
                "Mitra [19] shows that among a more general class of queueing problems first best implementation is possible if and only if the cost is linear.",
                "For another queueing model, Mitra [18] shows that first best implementation is possible if and only if the cost function satisfies a combinatorial property and an independence property.",
                "Moulin [22, 21] studies strategic concepts such as splitting and merging in queueing problems with unit per unit waiting costs.",
                "The general cost sharing literature is vast and has a long history.",
                "For a good survey, we refer to [20].",
                "From the seminal work of Shapley [25] to recent works on cost sharing in multi-cast transmission and optimization problems [8, 6, 23] this area has attracted economists, computer scientists, and operations researchers. 1.1 Our Contribution Ours is the first model which considers cost sharing when both processing time and per unit waiting cost of jobs are present.",
                "We take a cooperative game theory approach and apply the classical Shapley value rule to the problem.",
                "We show that the Shapley value rule satisfies many intuitive fairness axioms.",
                "Due to two dimensional nature of our model and one dimensional nature of Maniquets model [15], his axioms are insufficient to characterize the Shapley value in our setting.",
                "We introduce axioms such as independece of preceding jobs unit waiting cost and independence of following jobs processing time.",
                "A key axiom that we introduce gives us a bound on cost share of a job in a group of jobs which have the same ratio of unit time waiting cost and processing time (these jobs can be ordered in any manner between themseleves in an efficient ordering).",
                "If such a group consists of just one job, then the axiom says that such a job should at least pay his own processing cost (i.e., the cost it would have incurred if it was the only job in the queue).",
                "If there are multiple jobs in such a group, the probability of any two jobs from such a group inflicting costs on each other is same (1 2 ) in an efficient ordering.",
                "Depending on the ordering selected, one job inflicts cost on the other.",
                "Our fairness axiom says that each job should at least bear such expected costs.",
                "We characterize the Shapley value rule using these fairness axioms.",
                "We also extend the envy results in [2] to our setting and discuss a class of reasonable cost sharing mechanisms. 2.",
                "THE MODEL There are n jobs that need to be served by one server which can process only one job at a time.",
                "The set of jobs are denoted as N = {1, . . . , n}. σ : N → N is an ordering of jobs in N and σi denotes the position of job i in the ordering σ.",
                "Given an ordering σ, define Fi(σ) = {j ∈ N : σi < σj} and Pi(σ) = {j ∈ N : σi > σj}.",
                "Every job i is identified by two parameters: (pi, θi). pi is the processing time and θi is the cost per unit waiting time of job i.",
                "Thus, a queueing problem is defined by a list q = (N, p, θ) ∈ Q, where Q is the set of all possible lists.",
                "We will denote γi = θi pi .",
                "Given an ordering of jobs σ, the cost incurred by job i is given by ci(σ) = piθi + θi   j∈Pi(σ) pj.",
                "The total cost incurred by all jobs due to an ordering σ can be written in two ways: (i) by summing the cost incurred by every job and (ii) by summing the costs inflicted by a job on other jobs with their own processing cost.",
                "C(N, σ) =   i∈N ci(σ) =   i∈N piθi +   i∈N ¡θi   j∈Pi(σ) pj¢. =   i∈N piθi +   i∈N ¡pi   j∈Fi(σ) θj¢.",
                "An efficient ordering σ∗ is the one which minimizes the total cost incurred by all jobs.",
                "So, C(N, σ∗ ) ≤ C(N, σ) ∀ σ ∈ Σ.",
                "To achieve notational simplicity, we will write the total cost in an efficient ordering of jobs from N as C(N) whenever it is not confusing.",
                "Sometimes, we will deal with only a subset of jobs S ⊆ N. The ordering σ will then be defined on jobs in S only and we will write the total cost from an efficient ordering of jobs in S as C(S).",
                "The following lemma shows that jobs are ordered in decreasing γ in an efficient ordering.",
                "This is also known as the weighted shortest processing time rule, first introduced by Smith [26].",
                "Lemma 1.",
                "For any S ⊆ N, let σ∗ be an efficient ordering of jobs in S. For every i = j, i, j ∈ S, if σ∗ i > σ∗ j , then γi ≤ γj.",
                "Proof.",
                "Assume for contradiction that the statment of the lemma is not true.",
                "This means, we can find two consecutive jobs i, j ∈ S (σ∗ i = σ∗ j + 1) such that γi > γj.",
                "Define a new ordering σ by interchanging i and j in σ∗ .",
                "The costs to jobs in S \\ {i, j} is not changed from σ∗ to σ.",
                "The difference between total costs in σ∗ and σ is given by, C(S, σ) − C(S, σ∗ ) = θjpi − θipj.",
                "From efficiency we get θjpi − θipj ≥ 0.",
                "This gives us γj ≥ γi, which is a contradiction.",
                "An allocation for q = (N, p, θ) ∈ Q has two components: an ordering σ and a transfer ti for every job i ∈ N. ti denotes the payment received by job i.",
                "Given a transfer ti and an ordering σ, the cost share of job i is defined as, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. 233 An allocation (σ, t) is efficient for q = (N, p, θ) whenever σ is an efficient ordering and £i∈N ti = 0.",
                "The set of efficient orderings of q is denoted as Σ∗ (q) and σ∗ (q) will be used to refer to a typical element of the set.",
                "The following straightforward lemma says that for two different efficient orderings, the cost share in one efficient allocation is possible to achieve in the other by appropriately modifying the transfers.",
                "Lemma 2.",
                "Let (σ, t) be an efficient allocation and π be the vector of cost shares of jobs from this allocation.",
                "If σ∗ = σ be an efficient ordering and t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, then (σ∗ , t∗ ) is also an efficient allocation.",
                "Proof.",
                "Since (σ, t) is efficient, £i∈N ti = 0.",
                "This gives £i∈N πi = C(N).",
                "Since σ∗ is an efficient ordering, £i∈N ci(σ∗ ) = C(N).",
                "This means, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0.",
                "So, (σ∗ , t∗ ) is an efficient allocation.",
                "Depending on the transfers, the cost shares in different efficient allocations may differ.",
                "An allocation rule ψ associates with every q ∈ Q a non-empty subset ψ(q) of allocations. 3.",
                "COST SHARING USING THE SHAPLEY VALUE In this section, we define the coalitional cost of this game and analyze the solution proposed by the Shapley value.",
                "Given a queue q ∈ Q, the cost of a coalition of S ⊆ N jobs in the queue is defined as the cost incurred by jobs in S if these are the only jobs served in the queue using an efficient ordering.",
                "Formally, the cost of a coalition S ⊆ N is, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, where σ∗ = σ∗ (S) is an efficient ordering considering jobs from S only.",
                "The worth of a coalition of S jobs is just −C(S).",
                "Maniquet [15] observes another equivalent way to define the worth of a coalition is using the dual function of the cost function C(·).",
                "Other interesting ways to define the worth of a coalition in such games is discussed by Chun [1], who assume that a coalition of jobs are served after the jobs not in the coalition are served.",
                "The Shapley value (or cost share) of a job i is defined as, SVi =   S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) The Shapley value allocation rule says that jobs are ordered using an efficient ordering and transfers are assigned to jobs such that the cost share of job i is given by Equation 1.",
                "Lemma 3.",
                "Let σ∗ be an efficient ordering of jobs in set N. For all i ∈ N, the Shapley value is given by, SVi = piθi + 1 2 ¡Li + Ri¢, where Li = θi £j∈Pi(σ∗) pj and Ri = pi £j∈Fi(σ∗) θj.",
                "Proof.",
                "Another way to write the Shapley value formula is the following [10], SVi =   S⊆N:i∈S ∆(S) |S| , where ∆(S) = C(S) if |S| = 1 and ∆(S) = C(S)−£T S ∆(T).",
                "This gives ∆({i}) = C({i}) = piθi ∀i ∈ N. For any i, j ∈ N with i = j, we have ∆({i, j}) = C({i, j}) − C({i}) − C({j}) = min(piθi + pjθj + pjθi, piθi + pjθj + piθj) − piθi − pjθj = min(pjθi, piθj).",
                "We will show by induction that ∆(S) = 0 if |S| > 2.",
                "For |S| = 3, let S = {i, j, k}.",
                "Without loss of generality, assume θi pi ≥ θj pj ≥ θk pk .",
                "So, ∆(S) = C(S) − ∆({i, j}) − ∆({j, k}) − ∆({i, k})−∆({i})−∆({j})−∆({k}) = C(S)−piθj −pjθk − piθk − piθi − pjθj − pkθk = C(S) − C(S) = 0.",
                "Now, assume for T S, ∆(T) = 0 if |T| > 2.",
                "Without loss of generality assume that σ to be the identity mapping.",
                "Now, ∆(S) = C(S) −   T S ∆(T) = C(S) −   i∈S   j∈S:j<i ∆({i, j}) −   i∈S ∆({i}) = C(S) −   i∈S   j∈S:j<i pjθi −   i∈S piθi = C(S) − C(S) = 0.",
                "This proves that ∆(S) = 0 if |S| > 2.",
                "Using the Shapley value formula now, SVi =   S⊆N:i∈S ∆(S) |S| = ∆({i}) + 1 2   j∈N:j=i ∆({i, j}) = piθi + 1 2 ¡  j<i ∆({i, j}) +   j>i ∆({i, j})¢ = piθi + 1 2 ¡  j<i pjθi +   j>i piθj¢= piθi + 1 2 ¡Li + Ri¢. 4.",
                "AXIOMATICCHARACTERIZATIONOF THE SHAPLEY VALUE In this section, we will define serveral axioms on fairness and characterize the Shapley value using them.",
                "For a given q ∈ Q, we will denote ψ(q) as the set of allocations from allocation rule ψ.",
                "Also, we will denote the cost share vector associated with an allocation rule (σ, t) as π and that with allocation rule (σ , t ) as π etc. 4.1 The Fairness Axioms We will define three types of fairness axioms: (i) related to efficiency, (ii) related to equity, and (iii) related to independence.",
                "Efficiency Axioms We define two types of efficiency axioms.",
                "One related to efficiency which states that an efficient ordering should be selected and the transfers of jobs should add up to zero (budget balance).",
                "Definition 1.",
                "An allocation rule ψ satisfies efficiency if for every q ∈ Q and (σ, t) ∈ ψ(q), (σ, t) is an efficient allocation. 234 The second axiom related to efficiency says that the allocation rule should not discriminate between two allocations which are equivalent to each other in terms of cost shares of jobs.",
                "Definition 2.",
                "An allocation rule ψ satisfies Pareto indifference if for every q ∈ Q, (σ, t) ∈ ψ(q), and (σ , t ) ∈ Σ(q), we have ¡πi = πi ∀ i ∈ N¢⇒ ¡(σ , t ) ∈ ψ(q)¢.",
                "An implication of Pareto indifference axiom and Lemma 2 is that for every efficient ordering there is some set of transfers of jobs such that it is part of an efficient rule and the cost share of a job in all these allocations are same.",
                "Equity Axioms How should the cost be shared between two jobs if the jobs have some kind of similarity between them?",
                "Equity axioms provide us with fairness properties which help us answer this question.",
                "We provide five such axioms.",
                "Some of these axioms (for example anonymity, equal treatment of equals) are standard in the literature, while some are new.",
                "We start with a well known equity axiom called anonymity.",
                "Denote ρ : N → N as a permutation of elements in N. Let ρ(σ, t) denote the allocation obtained by permuting elements in σ and t according to ρ.",
                "Similarly, let ρ(p, θ) denote the new list of (p, θ) obtained by permuting elements of p and θ according to ρ.",
                "Our first equity axiom states that allocation rules should be immune to such permutation of data.",
                "Definition 3.",
                "An allocation rule ψ satisfies anonymity if for all q ∈ Q, (σ, t) ∈ ψ(q) and every permutation ρ, we then ρ(σ, t) ∈ ψ(N, ρ(q)).",
                "The next equity axiom is classical in literature and says that two similar jobs should be compensated such that their cost shares are equal.",
                "This implies that if all the jobs are of same type, then jobs should equally share the total system cost.",
                "Definition 4.",
                "An allocation rule ψ satisfies equal treatment of equals (ETE) if for all q ∈ Q, (σ, t) ∈ ψ(q), i, j ∈ N, then ¡pi = pj; θi = θj¢⇒ ¡πi = πj¢.",
                "ETE directs us to share costs equally between jobs if they are of the same per unit waiting cost and processing time.",
                "But it is silent about the cost shares of two jobs i and j which satisfy θi pi = θj pj .",
                "We introduce a new axiom for this.",
                "If an efficient rule chooses σ such that σi < σj for some i, j ∈ N, then job i is inflicting a cost of piθj on job j and job j is inflicting zero cost on job i.",
                "Define for some γ ≥ 0, S(γ) = {i ∈ N : γi = γ}.",
                "In an efficient rule, the elements in S(γ) can be ordered in any manner (in |S(γ)|! ways).",
                "If i, j ∈ S(γ) then we have pjθi = piθj.",
                "Probability of σi < σj is 1 2 and so is the probability of σi > σj.",
                "The expected cost i inflicts on j is 1 2 piθj and j inflicts on i is 1 2 pjθi.",
                "Our next fairness axiom says that i and j should each be responsible for their own processing cost and this expected cost they inflict on each other.",
                "Arguing for every pair of jobs i, j ∈ S(γ), we establish a bound on the cost share of jobs in S(γ).",
                "We impose this as an equity axiom below.",
                "Definition 5.",
                "An allocation rule satisfies expected cost bound (ECB) if for all q ∈ Q, (σ, t) ∈ ψ(q) with π being the resulting cost share, for any γ ≥ 0, and for every i ∈ S(γ), we have πi ≥ piθi + 1 2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢.",
                "The central idea behind this axiom is that of expected cost inflicted.",
                "If an allocation rule chooses multiple allocations, we can assign equal probabilities of selecting one of the allocations.",
                "In that case, the expected cost inflicted by a job i on another job j in the allocation rule can be calculated.",
                "Our axiom says that the cost share of a job should be at least its own processing cost and the total expected cost it inflicts on others.",
                "Note that the above bound poses no constraints on how the costs are shared among different groups.",
                "Also observe that if S(γ) contains just one job, ECB says that job should at least bear its own processing cost.",
                "A direct consequence of ECB is the following lemma.",
                "Lemma 4.",
                "Let ψ be an efficient rule which satisfies ECB.",
                "For a q ∈ Q if S(γ) = N, then for any (σ, t) ∈ ψ(q) which gives a cost share of π, πi = piθi + 1 2 ¡Li + Ri¢∀ i ∈ N. Proof.",
                "From ECB, we get πi ≥ piθi+1 2 ¡Li+Ri¢∀ i ∈ N. Assume for contradiction that there exists j ∈ N such that πj > pjθj + 1 2 ¡Li + Ri¢.",
                "Using efficiency and the fact that £i∈N Li = £i∈N Ri, we get £i∈N πi = C(N) > £i∈N piθi + 1 2 £i∈N ¡Li + Ri¢ = C(N).",
                "This gives us a contradiction.",
                "Next, we introduce an axiom about sharing the transfer of a job between a set of jobs.",
                "In particular, if the last job quits the system, then the ordering need not change.",
                "But the transfer to the last job needs to be shared between the other jobs.",
                "This should be done in proportion to their processing times because every job influenced the last job based on its processing time.",
                "Definition 6.",
                "An allocation rule ψ satisfies proportionate responsibility of p (PRp) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = |N|, q = (N \\ {k}, p , θ ) ∈ Q, such that for all i ∈ N\\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk pi £j=k pj .",
                "An analogous fairness axiom results if we remove the job from the beginning of the queue.",
                "Since the presence of the first job influenced each job depending on their θ values, its transfer needs to be shared in proportion to θ values.",
                "Definition 7.",
                "An allocation rule ψ satisfies proportionate responsibility of θ (PRθ) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = 1, q = (N \\{k}, p , θ ) ∈ Q, such that for all i ∈ N \\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk θi £j=k θj .",
                "The proportionate responsibility axioms are generalizations of equal responsibility axioms introduced by Maniquet [15]. 235 Independence Axioms The waiting cost of a job does not depend on the per unit waiting cost of its preceding jobs.",
                "Similarly, the waiting cost inflicted by a job to its following jobs is independent of the processing times of the following jobs.",
                "These independence properties should be carried over to the cost sharing rules.",
                "This gives us two independence axioms.",
                "Definition 8.",
                "An allocation rule ψ satisfies independence of preceding jobs θ (IPJθ) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk < γk, pk = pk, then for all j ∈ N such that σj > σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ).",
                "Definition 9.",
                "An allocation rule ψ satisfies independence of following jobs p (IFJp) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk > γk, θk = θk, then for all j ∈ N such that σj < σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ). 4.2 The Characterization Results Having stated the fairness axioms, we propose three different ways to characterize the Shapley value rule using these axioms.",
                "All our characterizations involve efficiency and ECB.",
                "But if we have IPJθ, we either need IFJp or PRp.",
                "Similarly if we have IFJp, we either need IPJθ or PRθ.",
                "Proposition 1.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and IFJp is a rule implied by the Shapley value rule.",
                "Proof.",
                "Define for any i, j ∈ N, θi j = γipj and pi j = θj γi .",
                "Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider the following q = (N, p , θ ) corresponding to job i with pj = pj if j ≤ i and pj = pi j if j > i, θj = θi j if j < i and θj = θj if j ≥ i.",
                "Observe that all jobs have the same γ: γi.",
                "By Lemma 2 and efficiency, (σ, t ) ∈ ψ(q ) for some set of transfers t .",
                "Using Lemma 4, we get cost share of i from (σ, t ) as πi = piθi + 1 2 ¡Li + Ri¢.",
                "Now, for any j < i, if we change θj to θj without changing processing time, the new γ of j is γj ≥ γi.",
                "Applying IPJθ, the cost share of job i should not change.",
                "Similarly, for any job j > i, if we change pj to pj without changing θj, the new γ of j is γj ≤ γi.",
                "Applying IFJp, the cost share of job i should not change.",
                "Applying this procedure for every j < i with IPJθ and for every j > i with IFJp, we reach q = (N, p, θ) and the payoff of i does not change from πi.",
                "Using this argument for every i ∈ N and using the expression for the Shapley value in Lemma 3, we get the Shapley value rule.",
                "It is possible to replace one of the independence axioms with an equity axiom on sharing the transfer of a job.",
                "This is shown in Propositions 2 and 3.",
                "Proposition 2.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and PRp is a rule implied by the Shapley value rule.",
                "Proof.",
                "As in the proof of Proposition 1, define θi j = γipj ∀ i, j ∈ N. Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider a queue with jobs in set K = {1, . . . , i, i + 1}, where i < n. Define q = (K, p, θ ), where θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ is an efficient ordering for q .",
                "By ECB and Lemma 4 the cost share of job i + 1 in any allocation rule in ψ must be πi+1 = pi+1θi+1 + 1 2 ¡£j<i+1 pjθi+1¢.",
                "Now, consider q = (K, p, θ ) such that θj = θi j ∀ j ≤ i and θi+1 = θi+1. σ remains an efficient ordering in q and by IPJθ the cost share of i + 1 remains πi+1.",
                "In q = (K \\ {i + 1}, p, θ ), we can calculate the cost share of job i using ECB and Lemma 4 as πi = piθi + 1 2 £j<i pjθi.",
                "So, using PRp we get the new cost share of job i in q as πi = πi + ti+1 pi j<i+1 pj = piθi + 1 2 ¡£j<i pjθi + piθi+1¢.",
                "Now, we can set K = K ∪ {i + 2}.",
                "As before, we can find cost share of i + 2 in this queue as πi+2 = pi+2θi+2 + 1 2 ¡£j<i+2 pjθi+2¢.",
                "Using PRp we get the new cost share of job i in the new queue as πi = piθi + 1 2 ¡£j<i pjθi + piθi+1 + piθi+2¢.",
                "This process can be repeated till we add job n at which point cost share of i is piθi + 1 2 ¡£j<i pjθi + £j>i piθj¢.",
                "Then, we can adjust the θ of preceding jobs of i to their original value and applying IPJθ, the payoffs of jobs i through n will not change.",
                "This gives us the Shapley values of jobs i through n. Setting i = 1, we get cost shares of all the jobs from ψ as the Shapley value.",
                "Proposition 3.",
                "Any efficient rule ψ that satisfies ECB, IFJp, and PRθ is a rule implied by the Shapley value rule.",
                "Proof.",
                "The proof mirrors the proof of Proposition 2.",
                "We provide a short sketch.",
                "Analogous to the proof of Proposition 2, θs are kept equal to original data and processing times are initialized to pi+1 j .",
                "This allows us to use IFJp.",
                "Also, contrast to Proposition 2, we consider K = {i, i + 1, . . . , n} and repeatedly add jobs to the beginning of the queue maintaining the same efficient ordering.",
                "So, we add the cost components of preceding jobs to the cost share of jobs in each iteration and converge to the Shapley value rule.",
                "The next proposition shows that the Shapley value rule satisfies all the fairness axioms discussed.",
                "Proposition 4.",
                "The Shapley value rule satisfies efficiency, pareto indifference, anonymity, ETE, ECB, IPJθ, IFJp, PRp, and PRθ.",
                "Proof.",
                "The Shapley value rule chooses an efficient ordering and by definition the payments add upto zero.",
                "So, it satisfies efficiency.",
                "The Shapley value assigns same cost share to a job irrespective of the efficient ordering chosen.",
                "So, it is pareto indifferent.",
                "The Shapley value is anonymous because the particular index of a job does not effect his ordering or cost share.",
                "For ETE, consider two jobs i, j ∈ N such that pi = pj and θi = θj.",
                "Without loss of generality assume the efficient ordering to be 1, . . . , i, . . . , j, . . . , n. Now, the Shapley value of job i is 236 SVi = piθi + 1 2 ¡Li + Ri¢(From Lemma 3) = pjθj + 1 2 ¡Lj + Rj¢− 1 2 ¡Li − Lj + Ri − Rj¢ = SVj − 1 2 ¡   i<k≤j piθk −   i≤k<j pkθi¢ = SVj − 1 2   i<k≤j (piθk − pkθi) (Using pi = pj and θi = θj) = SVj (Using θk pk = θi pi for all i ≤ k ≤ j).",
                "The Shapley value satisfies ECB by its expression in Lemma 3.",
                "Consider any job i, in an efficient ordering σ, if we increase the value of γj for some j = i such that σj > σi, then the set Pi ( preceding jobs) does not change in the new efficient ordering.",
                "If γj is changed such that pj remains the same, then the expression £j∈Pi θipj is unchanged.",
                "If (p, θ) values of no other jobs are changed, then the Shapley value is unchanged by increasing γj for some j ∈ Pi while keeping pj unchanged.",
                "Thus, the Shapley value rule satisfies IPJθ.",
                "An analogous argument shows that the Shapley value rule satisfies IFJp.",
                "For PRp, assume without loss of generality that jobs are ordered 1, . . . , n in an efficient ordering.",
                "Denote the transfer of job i = n due to the Shapley value with set of jobs N and set of jobs N \\ {n} as ti and ti respectively.",
                "Transfer of last job is tn = 1 2 θn £j<n pj.",
                "Now, ti = 1 2 ¡θi   j<i pj − pi   j>i θj¢ = 1 2 ¡θi   j<i pj − pi   j>i:j=n θj¢− 1 2 piθn = ti − 1 2 θn   j<n pj pi £j<n pj = ti − tn pi £j<n pj .",
                "A similar argument shows that the Shapley value rule satisfies PRθ.",
                "These series of propositions lead us to our main result.",
                "Theorem 1.",
                "Let ψ be an allocation rule.",
                "The following statements are equivalent: 1) For each q ∈ Q, ψ(q) selects all the allocation assigning jobs cost shares implied by the Shapley value. 2) ψ satisfies efficiency, ECB, IFJp, and IPJθ. 3) ψ satisfies efficiency, ECB, IFJp, and PRθ. 4) ψ satisfies efficiency, ECB, PRp, and IPJθ.",
                "Proof.",
                "The proof follows from Propositions 1, 2, 3, and 4. 5.",
                "DISCUSSIONS 5.1 A Reasonable Class of Cost Sharing Mechanisms In this section, we will define a reasonable class of cost sharing mechanisms.",
                "We will show how these reasonable mechanisms lead to the Shapley value mechanism.",
                "Definition 10.",
                "An allocation rule ψ is reasonable if for all q ∈ Q and (σ, t) ∈ ψ(q) we have for all i ∈ N, ti = α ¡θi   j∈Pi(σ) pj − pi   j∈Fi(σ) θj¢∀ i ∈ N, where 0 ≤ α ≤ 1.",
                "The reasonable cost sharing mechanism says that every job should be paid a constant fraction of the difference between the waiting cost he incurs and the waiting cost he inflicts on other jobs.",
                "If α = 0, then every job bears its own cost.",
                "If α = 1, then every job gets compensated for its waiting cost but compensates others for the cost he inflicts on others.",
                "The Shapley value rule comes as a result of ETE as shown in the following proposition.",
                "Proposition 5.",
                "Any efficient and reasonable allocation rule ψ that satisfies ETE is a rule implied by the Shapley value rule.",
                "Proof.",
                "Consider a q ∈ Q in which pi = pj and θi = θj.",
                "Let (σ, t) ∈ ψ(q) and π be the resulting cost shares.",
                "From ETE, we get, πi = πj ⇒ ci(σ) − ti = cj(σ) − tj ⇒ piθi + (1 − α)Li + αRi = pjθj + (1 − α)Lj + αRj (Since ψ is efficient and reasonable) ⇒ (1 − α)(Li − Lj) = α(Rj − Ri) (Using pi = pj, θi = θj) ⇒ 1 − α = α (Using Li − Lj = Rj − Ri = 0) ⇒ α = 1 2 .",
                "This gives us the Shapley value rule by Lemma 3. 5.2 Results on Envy Chun [2] discusses a fariness condition called no-envy for the case when processing times of all jobs are unity.",
                "Definition 11.",
                "An allocation rule satisfies no-envy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tj, where π is the cost share from allocation rule (σ, t) and σij is the ordering obtaining by swapping i and j.",
                "From the result in [2], the Shapley value rule does not satisfy no-envy in our model also.",
                "To overcome this, Chun [2] introduces the notion of adjusted no-envy, which he shows is satisfied in the Shapley value rule when processing times of all jobs are unity.",
                "Here, we show that adjusted envy continues to hold in the Shapley value rule in our model (when processing times need not be unity).",
                "As before denote σij be an ordering where the position of i and j is swapped from an ordering σ.",
                "For adjusted noenvy, if (σ, t) is an allocation for some q ∈ Q, let tij be the 237 transfer of job i when the transfer of i is calculated with respect to ordering σij .",
                "Observe that an allocation may not allow for calculation of tij .",
                "For example, if ψ is efficient, then tij cannot be calculated if σij is also not efficient.",
                "For simplicity, we state the definition of adjusted no-envy to apply to all such rules.",
                "Definition 12.",
                "An allocation rule satisfies adjusted noenvy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tij i .",
                "Proposition 6.",
                "The Shapley value rule satisfies adjusted no-envy.",
                "Proof.",
                "Without loss of generality, assume efficient ordering of jobs is: 1, . . . , n. Consider two jobs i and i + k. From Lemma 3, SVi = piθi + 1 2 ¡  j<i θipj +   j>i θjpi¢.",
                "Let ˆπi be the cost share of i due to adjusted transfer tii+k i in the ordering σii+k . ˆπi = ci(σii+k ) − tii+k i = piθi + 1 2 ¡  j<i θipj + θipi+k +   i<j<i+k θipj +   j>i θjpi − θi+kpi −   i<j<i+k θjpi¢ = SVi + 1 2   i<j≤i+k ¡θipj − θjpi¢ ≥ SVi (Using the fact that θi pi ≥ θj pj for i < j). 6.",
                "CONCLUSION We studied the problem of sharing costs for a job scheduling problem on a single server, when jobs have processing times and unit time waiting costs.",
                "We took a cooperative game theory approach and show that the famous the Shapley value rule satisfies many nice fairness properties.",
                "We characterized the Shapley value rule using different intuitive fairness axioms.",
                "In future, we plan to further simplify some of the fairness axioms.",
                "Some initial simplifications already appear in [16], where we provide an alternative axiom to ECB and also discuss the implication of transfers between jobs (in stead of transfers from jobs to a central server).",
                "We also plan to look at cost sharing mechanisms other than the Shapley value.",
                "Investigating the strategic power of jobs in such mechanisms is another line of future research. 7.",
                "REFERENCES [1] Youngsub Chun.",
                "A Note on Maniquets Characterization of the Shapley Value in Queueing Problems.",
                "Working Paper, Rochester University, 2004. [2] Youngsub Chun.",
                "No-envy in Queuing Problems.",
                "Working Paper, Rochester University, 2004. [3] Imma Curiel, Herbert Hamers, and Flip Klijn.",
                "Sequencing Games: A Survey.",
                "In Peter Borm and Hans Peters, editors, Chapter in Game Theory.",
                "Theory and Decision Library, Kulwer Academic Publishers, 2002. [4] Imma Curiel, Giorgio Pederzoli, and Stef Tijs.",
                "Sequencing Games.",
                "European Journal of Operational Research, 40:344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs, and Bart Veltman.",
                "Sequencing and Cooperation.",
                "Operations Research, 42(3):566-568, May-June 1994. [6] Nikhil R. Devanur, Milena Mihail, and Vijay V. Vazirani.",
                "Strategyproof Cost-sharing Mechanisms for Set Cover and Facility Location Games.",
                "In Proceedings of Fourth Annual ACM Conferece on Electronic Commerce, 2003. [7] Robert J. Dolan.",
                "Incentive Mechanisms for Priority Queueing Problems.",
                "Bell Journal of Economics, 9:421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou, and Scott Shenker.",
                "Sharing the Cost of Multicast Transmissions.",
                "In Proceedings of Thirty-Second Annual ACM Symposium on Theory of Computing, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs, and Peter Borm.",
                "The Split Core for Sequencing Games.",
                "Games and Economic Behavior, 15:165-176, 1996. [10] John C. Harsanyi.",
                "Contributions to Theory of Games IV, chapter A Bargaining Model for Cooperative n-person Games.",
                "Princeton University Press, 1959.",
                "Editors: A. W. Tucker, R. D. Luce. [11] Kamal Jain and Vijay Vazirani.",
                "Applications of Approximate Algorithms to Cooperative Games.",
                "In Proceedings of 33rd Symposium on Theory of Computing (STOC 01), 2001. [12] Kamal Jain and Vijay Vazirani.",
                "Equitable Cost Allocations via Primal-Dual Type Algorithms.",
                "In Proceedings of 34th Symposium on Theory of Computing (STOC 02), 2002. [13] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without a Completely Specified Initial Order.",
                "Report in Statistics and Operations Research, pages 1-17, 2002.",
                "Report 02-04. [14] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without Initial Order.",
                "Working Paper, Universitat Aut´onoma de Barcelona, July 2004. [15] Franois Maniquet.",
                "A Characterization of the Shapley Value in Queueing Problems.",
                "Journal of Economic Theory, 109:90-103, 2003. [16] Debasis Mishra and Bharath Rangarajan.",
                "Cost sharing in a job scheduling problem.",
                "Working Paper, CORE, 2005. [17] Manipushpak Mitra.",
                "Essays on First Best Implementable Incentive Problems.",
                "Ph.D. Thesis, Indian Statistical Institute, New Delhi, 2000. [18] Manipushpak Mitra.",
                "Mechanism design in queueing problems.",
                "Economic Theory, 17(2):277-305, 2001. [19] Manipushpak Mitra.",
                "Achieving the first best in sequencing problems.",
                "Review of Economic Design, 7:75-91, 2002. [20] Herv´e Moulin.",
                "Handbook of Social Choice and Welfare, chapter Axiomatic Cost and Surplus Sharing.",
                "North-Holland, 2002.",
                "Publishers: Arrow, Sen, Suzumura. [21] Herv´e Moulin.",
                "On Scheduling Fees to Prevent 238 Merging, Splitting and Transferring of Jobs.",
                "Working Paper, Rice University, 2004. [22] Herv´e Moulin.",
                "Split-proof Probabilistic Scheduling.",
                "Working Paper, Rice University, 2004. [23] Herv´e Moulin and Rakesh Vohra.",
                "Characterization of Additive Cost Sharing Methods.",
                "Economic Letters, 80:399-407, 2003. [24] Martin P´al and ´Eva Tardos.",
                "Group Strategyproof Mechanisms via Primal-Dual Algorithms.",
                "In Proceedings of the 44th Annual IEEE Symposium on the Foundations of Computer Science (FOCS 03), 2003. [25] Lloyd S. Shapley.",
                "Contributions to the Theory of Games II, chapter A Value for n-person Games, pages 307-317.",
                "Annals of Mathematics Studies, 1953.",
                "Ediors: H. W. Kuhn, A. W. Tucker. [26] Wayne E. Smith.",
                "Various Optimizers for Single-Stage Production.",
                "Naval Research Logistics Quarterly, 3:59-66, 1956. [27] Jeroen Suijs.",
                "On incentive compatibility and budget balancedness in public decision making.",
                "Economic Design, 2, 2002. 239"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "cost share": {
            "translated_key": "costo compartido",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Cost Sharing in a Job Scheduling Problem Using the Shapley Value Debasis Mishra Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium mishra@core.ucl.ac.be Bharath Rangarajan Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium rangarajan@core.ucl.ac.be ABSTRACT A set of jobs need to be served by a single server which can serve only one job at a time.",
                "Jobs have processing times and incur waiting costs (linear in their waiting time).",
                "The jobs share their costs through compensation using monetary transfers.",
                "We characterize the Shapley value rule for this model using fairness axioms.",
                "Our axioms include a bound on the <br>cost share</br> of jobs in a group, efficiency, and some independence properties on the the <br>cost share</br> of a job.",
                "Categories and Subject Descriptors J.4 [Social and Behaviorial Sciences]: Economics General Terms Economics, Theory 1.",
                "INTRODUCTION A set of jobs need to be served by a server.",
                "The server can process only one job at a time.",
                "Each job has a finite processing time and a per unit time waiting cost.",
                "Efficient ordering of this queue directs us to serve the jobs in increasing order of the ratio of per unit time waiting cost and processing time.",
                "To compensate for waiting by jobs, monetary transfers to jobs are allowed.",
                "How should the jobs share the cost equitably amongst themselves (through transfers)?",
                "The problem of fair division of costs among agents in a queue has many practical applications.",
                "For example, computer programs are regularly scheduled on servers, data are scheduled to be transmitted over networks, jobs are scheduled in shop-floor on machines, and queues appear in many public services (post offices, banks).",
                "Study of queueing problems has attracted economists for a long time [7, 17].",
                "Cost sharing is a fundamental problem in many settings on the Internet.",
                "Internet can be seen as a common resource shared by many users and the cost incured by using the resource needs to be shared in an equitable manner.",
                "The current surge in cost sharing literature from computer scientists validate this claim [8, 11, 12, 6, 24].",
                "Internet has many settings in which our model of job scheduling appears and the agents waiting in a queue incur costs (jobs scheduled on servers, queries answered from a database, data scheduled to be transmitted over a fixed bandwidth network etc.).",
                "We hope that our analysis will give new insights on cost sharing problems of this nature.",
                "Recently, there has been increased interest in cost sharing methods with submodular cost functions [11, 12, 6, 24].",
                "While many settings do have submodular cost functions (for example, multi-cast transmission games [8]), while the cost function of our game is supermodular.",
                "Also, such literature typically does not assume budget-balance (transfers adding up to zero), while it is an inherent feature of our model.",
                "A recent paper by Maniquet [15] is the closest to our model and is the motivation behind our work 1 .",
                "Maniquet [15] studies a model where he assumes all processing times are unity.",
                "For such a model, he characterizes the Shapley value rule using classical fairness axioms.",
                "Chun [1] interprets the worth of a coalition of jobs in a different manner for the same model and derives a reverse rule.",
                "Chun characterizes this rule using similar fairness axioms.",
                "Chun [2] also studies the envy properties of these rules.",
                "Moulin [22, 21] studies the queueing problem from a strategic point view when per unit waiting costs are unity.",
                "Moulin introduces new concepts in the queueing settings such as splitting and merging of jobs, and ways to prevent them.",
                "Another stream of literature is on sequencing games, first introduced by Curiel et al. [4].",
                "For a detailed survey, refer to Curiel et al. [3].",
                "Curiel et al. [4] defined sequencing games similar to our model, but in which an initial ordering of jobs is given.",
                "Besides, their notion of worth of a coalition is very different from the notions studied in Maniquet [15] and Chun [1] (these are the notions used in our work too).",
                "The particular notion of the worth of a coalition makes the sequencing game of Curiel et al. [4] convex, whereas our game is not convex and does not assume the presence of any initial order.",
                "In summary, the focus of this stream of 1 The authors thank Fran¸cois Maniquet for several fruitful discussions. 232 research is how to share the savings in costs from the initial ordering to the optimal ordering amongst jobs (also see Hamers et al. [9], Curiel et al. [5]).",
                "Recently, Klijn and S´anchez [13, 14] considered sequencing games without any initial ordering of jobs.",
                "They take two approaches to define the worth of coalitions.",
                "One of their approaches, called the tail game, is related to the reverse rule of Chun [1].",
                "In the tail game, jobs in a coalition are served after the jobs not in the coalition are served.",
                "Klijn and S´anchez [14] showed that the tail game is balanced.",
                "Further, they provide expressions for the Shapley value in tail game in terms of marginal vectors and reversed marginal vectors.",
                "We provide a simpler expression of the Shapley value in the tail game, generalizing the result in Chun [1].",
                "Klijn and S´anchez [13] study the core of this game in detail.",
                "Strategic aspects of queueing problems have also been researched.",
                "Mitra [19] studies the first best implementation in queueing models with generic cost functions.",
                "First best implementation means that there exists an efficient mechanism in which jobs in the queue have a dominant strategy to reveal their true types and their transfers add up to zero.",
                "Suijs [27] shows that if waiting costs of jobs are linear then first best implementation is possible.",
                "Mitra [19] shows that among a more general class of queueing problems first best implementation is possible if and only if the cost is linear.",
                "For another queueing model, Mitra [18] shows that first best implementation is possible if and only if the cost function satisfies a combinatorial property and an independence property.",
                "Moulin [22, 21] studies strategic concepts such as splitting and merging in queueing problems with unit per unit waiting costs.",
                "The general cost sharing literature is vast and has a long history.",
                "For a good survey, we refer to [20].",
                "From the seminal work of Shapley [25] to recent works on cost sharing in multi-cast transmission and optimization problems [8, 6, 23] this area has attracted economists, computer scientists, and operations researchers. 1.1 Our Contribution Ours is the first model which considers cost sharing when both processing time and per unit waiting cost of jobs are present.",
                "We take a cooperative game theory approach and apply the classical Shapley value rule to the problem.",
                "We show that the Shapley value rule satisfies many intuitive fairness axioms.",
                "Due to two dimensional nature of our model and one dimensional nature of Maniquets model [15], his axioms are insufficient to characterize the Shapley value in our setting.",
                "We introduce axioms such as independece of preceding jobs unit waiting cost and independence of following jobs processing time.",
                "A key axiom that we introduce gives us a bound on <br>cost share</br> of a job in a group of jobs which have the same ratio of unit time waiting cost and processing time (these jobs can be ordered in any manner between themseleves in an efficient ordering).",
                "If such a group consists of just one job, then the axiom says that such a job should at least pay his own processing cost (i.e., the cost it would have incurred if it was the only job in the queue).",
                "If there are multiple jobs in such a group, the probability of any two jobs from such a group inflicting costs on each other is same (1 2 ) in an efficient ordering.",
                "Depending on the ordering selected, one job inflicts cost on the other.",
                "Our fairness axiom says that each job should at least bear such expected costs.",
                "We characterize the Shapley value rule using these fairness axioms.",
                "We also extend the envy results in [2] to our setting and discuss a class of reasonable cost sharing mechanisms. 2.",
                "THE MODEL There are n jobs that need to be served by one server which can process only one job at a time.",
                "The set of jobs are denoted as N = {1, . . . , n}. σ : N → N is an ordering of jobs in N and σi denotes the position of job i in the ordering σ.",
                "Given an ordering σ, define Fi(σ) = {j ∈ N : σi < σj} and Pi(σ) = {j ∈ N : σi > σj}.",
                "Every job i is identified by two parameters: (pi, θi). pi is the processing time and θi is the cost per unit waiting time of job i.",
                "Thus, a queueing problem is defined by a list q = (N, p, θ) ∈ Q, where Q is the set of all possible lists.",
                "We will denote γi = θi pi .",
                "Given an ordering of jobs σ, the cost incurred by job i is given by ci(σ) = piθi + θi   j∈Pi(σ) pj.",
                "The total cost incurred by all jobs due to an ordering σ can be written in two ways: (i) by summing the cost incurred by every job and (ii) by summing the costs inflicted by a job on other jobs with their own processing cost.",
                "C(N, σ) =   i∈N ci(σ) =   i∈N piθi +   i∈N ¡θi   j∈Pi(σ) pj¢. =   i∈N piθi +   i∈N ¡pi   j∈Fi(σ) θj¢.",
                "An efficient ordering σ∗ is the one which minimizes the total cost incurred by all jobs.",
                "So, C(N, σ∗ ) ≤ C(N, σ) ∀ σ ∈ Σ.",
                "To achieve notational simplicity, we will write the total cost in an efficient ordering of jobs from N as C(N) whenever it is not confusing.",
                "Sometimes, we will deal with only a subset of jobs S ⊆ N. The ordering σ will then be defined on jobs in S only and we will write the total cost from an efficient ordering of jobs in S as C(S).",
                "The following lemma shows that jobs are ordered in decreasing γ in an efficient ordering.",
                "This is also known as the weighted shortest processing time rule, first introduced by Smith [26].",
                "Lemma 1.",
                "For any S ⊆ N, let σ∗ be an efficient ordering of jobs in S. For every i = j, i, j ∈ S, if σ∗ i > σ∗ j , then γi ≤ γj.",
                "Proof.",
                "Assume for contradiction that the statment of the lemma is not true.",
                "This means, we can find two consecutive jobs i, j ∈ S (σ∗ i = σ∗ j + 1) such that γi > γj.",
                "Define a new ordering σ by interchanging i and j in σ∗ .",
                "The costs to jobs in S \\ {i, j} is not changed from σ∗ to σ.",
                "The difference between total costs in σ∗ and σ is given by, C(S, σ) − C(S, σ∗ ) = θjpi − θipj.",
                "From efficiency we get θjpi − θipj ≥ 0.",
                "This gives us γj ≥ γi, which is a contradiction.",
                "An allocation for q = (N, p, θ) ∈ Q has two components: an ordering σ and a transfer ti for every job i ∈ N. ti denotes the payment received by job i.",
                "Given a transfer ti and an ordering σ, the <br>cost share</br> of job i is defined as, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. 233 An allocation (σ, t) is efficient for q = (N, p, θ) whenever σ is an efficient ordering and £i∈N ti = 0.",
                "The set of efficient orderings of q is denoted as Σ∗ (q) and σ∗ (q) will be used to refer to a typical element of the set.",
                "The following straightforward lemma says that for two different efficient orderings, the <br>cost share</br> in one efficient allocation is possible to achieve in the other by appropriately modifying the transfers.",
                "Lemma 2.",
                "Let (σ, t) be an efficient allocation and π be the vector of cost shares of jobs from this allocation.",
                "If σ∗ = σ be an efficient ordering and t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, then (σ∗ , t∗ ) is also an efficient allocation.",
                "Proof.",
                "Since (σ, t) is efficient, £i∈N ti = 0.",
                "This gives £i∈N πi = C(N).",
                "Since σ∗ is an efficient ordering, £i∈N ci(σ∗ ) = C(N).",
                "This means, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0.",
                "So, (σ∗ , t∗ ) is an efficient allocation.",
                "Depending on the transfers, the cost shares in different efficient allocations may differ.",
                "An allocation rule ψ associates with every q ∈ Q a non-empty subset ψ(q) of allocations. 3.",
                "COST SHARING USING THE SHAPLEY VALUE In this section, we define the coalitional cost of this game and analyze the solution proposed by the Shapley value.",
                "Given a queue q ∈ Q, the cost of a coalition of S ⊆ N jobs in the queue is defined as the cost incurred by jobs in S if these are the only jobs served in the queue using an efficient ordering.",
                "Formally, the cost of a coalition S ⊆ N is, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, where σ∗ = σ∗ (S) is an efficient ordering considering jobs from S only.",
                "The worth of a coalition of S jobs is just −C(S).",
                "Maniquet [15] observes another equivalent way to define the worth of a coalition is using the dual function of the cost function C(·).",
                "Other interesting ways to define the worth of a coalition in such games is discussed by Chun [1], who assume that a coalition of jobs are served after the jobs not in the coalition are served.",
                "The Shapley value (or <br>cost share</br>) of a job i is defined as, SVi =   S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) The Shapley value allocation rule says that jobs are ordered using an efficient ordering and transfers are assigned to jobs such that the <br>cost share</br> of job i is given by Equation 1.",
                "Lemma 3.",
                "Let σ∗ be an efficient ordering of jobs in set N. For all i ∈ N, the Shapley value is given by, SVi = piθi + 1 2 ¡Li + Ri¢, where Li = θi £j∈Pi(σ∗) pj and Ri = pi £j∈Fi(σ∗) θj.",
                "Proof.",
                "Another way to write the Shapley value formula is the following [10], SVi =   S⊆N:i∈S ∆(S) |S| , where ∆(S) = C(S) if |S| = 1 and ∆(S) = C(S)−£T S ∆(T).",
                "This gives ∆({i}) = C({i}) = piθi ∀i ∈ N. For any i, j ∈ N with i = j, we have ∆({i, j}) = C({i, j}) − C({i}) − C({j}) = min(piθi + pjθj + pjθi, piθi + pjθj + piθj) − piθi − pjθj = min(pjθi, piθj).",
                "We will show by induction that ∆(S) = 0 if |S| > 2.",
                "For |S| = 3, let S = {i, j, k}.",
                "Without loss of generality, assume θi pi ≥ θj pj ≥ θk pk .",
                "So, ∆(S) = C(S) − ∆({i, j}) − ∆({j, k}) − ∆({i, k})−∆({i})−∆({j})−∆({k}) = C(S)−piθj −pjθk − piθk − piθi − pjθj − pkθk = C(S) − C(S) = 0.",
                "Now, assume for T S, ∆(T) = 0 if |T| > 2.",
                "Without loss of generality assume that σ to be the identity mapping.",
                "Now, ∆(S) = C(S) −   T S ∆(T) = C(S) −   i∈S   j∈S:j<i ∆({i, j}) −   i∈S ∆({i}) = C(S) −   i∈S   j∈S:j<i pjθi −   i∈S piθi = C(S) − C(S) = 0.",
                "This proves that ∆(S) = 0 if |S| > 2.",
                "Using the Shapley value formula now, SVi =   S⊆N:i∈S ∆(S) |S| = ∆({i}) + 1 2   j∈N:j=i ∆({i, j}) = piθi + 1 2 ¡  j<i ∆({i, j}) +   j>i ∆({i, j})¢ = piθi + 1 2 ¡  j<i pjθi +   j>i piθj¢= piθi + 1 2 ¡Li + Ri¢. 4.",
                "AXIOMATICCHARACTERIZATIONOF THE SHAPLEY VALUE In this section, we will define serveral axioms on fairness and characterize the Shapley value using them.",
                "For a given q ∈ Q, we will denote ψ(q) as the set of allocations from allocation rule ψ.",
                "Also, we will denote the <br>cost share</br> vector associated with an allocation rule (σ, t) as π and that with allocation rule (σ , t ) as π etc. 4.1 The Fairness Axioms We will define three types of fairness axioms: (i) related to efficiency, (ii) related to equity, and (iii) related to independence.",
                "Efficiency Axioms We define two types of efficiency axioms.",
                "One related to efficiency which states that an efficient ordering should be selected and the transfers of jobs should add up to zero (budget balance).",
                "Definition 1.",
                "An allocation rule ψ satisfies efficiency if for every q ∈ Q and (σ, t) ∈ ψ(q), (σ, t) is an efficient allocation. 234 The second axiom related to efficiency says that the allocation rule should not discriminate between two allocations which are equivalent to each other in terms of cost shares of jobs.",
                "Definition 2.",
                "An allocation rule ψ satisfies Pareto indifference if for every q ∈ Q, (σ, t) ∈ ψ(q), and (σ , t ) ∈ Σ(q), we have ¡πi = πi ∀ i ∈ N¢⇒ ¡(σ , t ) ∈ ψ(q)¢.",
                "An implication of Pareto indifference axiom and Lemma 2 is that for every efficient ordering there is some set of transfers of jobs such that it is part of an efficient rule and the <br>cost share</br> of a job in all these allocations are same.",
                "Equity Axioms How should the cost be shared between two jobs if the jobs have some kind of similarity between them?",
                "Equity axioms provide us with fairness properties which help us answer this question.",
                "We provide five such axioms.",
                "Some of these axioms (for example anonymity, equal treatment of equals) are standard in the literature, while some are new.",
                "We start with a well known equity axiom called anonymity.",
                "Denote ρ : N → N as a permutation of elements in N. Let ρ(σ, t) denote the allocation obtained by permuting elements in σ and t according to ρ.",
                "Similarly, let ρ(p, θ) denote the new list of (p, θ) obtained by permuting elements of p and θ according to ρ.",
                "Our first equity axiom states that allocation rules should be immune to such permutation of data.",
                "Definition 3.",
                "An allocation rule ψ satisfies anonymity if for all q ∈ Q, (σ, t) ∈ ψ(q) and every permutation ρ, we then ρ(σ, t) ∈ ψ(N, ρ(q)).",
                "The next equity axiom is classical in literature and says that two similar jobs should be compensated such that their cost shares are equal.",
                "This implies that if all the jobs are of same type, then jobs should equally share the total system cost.",
                "Definition 4.",
                "An allocation rule ψ satisfies equal treatment of equals (ETE) if for all q ∈ Q, (σ, t) ∈ ψ(q), i, j ∈ N, then ¡pi = pj; θi = θj¢⇒ ¡πi = πj¢.",
                "ETE directs us to share costs equally between jobs if they are of the same per unit waiting cost and processing time.",
                "But it is silent about the cost shares of two jobs i and j which satisfy θi pi = θj pj .",
                "We introduce a new axiom for this.",
                "If an efficient rule chooses σ such that σi < σj for some i, j ∈ N, then job i is inflicting a cost of piθj on job j and job j is inflicting zero cost on job i.",
                "Define for some γ ≥ 0, S(γ) = {i ∈ N : γi = γ}.",
                "In an efficient rule, the elements in S(γ) can be ordered in any manner (in |S(γ)|! ways).",
                "If i, j ∈ S(γ) then we have pjθi = piθj.",
                "Probability of σi < σj is 1 2 and so is the probability of σi > σj.",
                "The expected cost i inflicts on j is 1 2 piθj and j inflicts on i is 1 2 pjθi.",
                "Our next fairness axiom says that i and j should each be responsible for their own processing cost and this expected cost they inflict on each other.",
                "Arguing for every pair of jobs i, j ∈ S(γ), we establish a bound on the <br>cost share</br> of jobs in S(γ).",
                "We impose this as an equity axiom below.",
                "Definition 5.",
                "An allocation rule satisfies expected cost bound (ECB) if for all q ∈ Q, (σ, t) ∈ ψ(q) with π being the resulting <br>cost share</br>, for any γ ≥ 0, and for every i ∈ S(γ), we have πi ≥ piθi + 1 2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢.",
                "The central idea behind this axiom is that of expected cost inflicted.",
                "If an allocation rule chooses multiple allocations, we can assign equal probabilities of selecting one of the allocations.",
                "In that case, the expected cost inflicted by a job i on another job j in the allocation rule can be calculated.",
                "Our axiom says that the <br>cost share</br> of a job should be at least its own processing cost and the total expected cost it inflicts on others.",
                "Note that the above bound poses no constraints on how the costs are shared among different groups.",
                "Also observe that if S(γ) contains just one job, ECB says that job should at least bear its own processing cost.",
                "A direct consequence of ECB is the following lemma.",
                "Lemma 4.",
                "Let ψ be an efficient rule which satisfies ECB.",
                "For a q ∈ Q if S(γ) = N, then for any (σ, t) ∈ ψ(q) which gives a <br>cost share</br> of π, πi = piθi + 1 2 ¡Li + Ri¢∀ i ∈ N. Proof.",
                "From ECB, we get πi ≥ piθi+1 2 ¡Li+Ri¢∀ i ∈ N. Assume for contradiction that there exists j ∈ N such that πj > pjθj + 1 2 ¡Li + Ri¢.",
                "Using efficiency and the fact that £i∈N Li = £i∈N Ri, we get £i∈N πi = C(N) > £i∈N piθi + 1 2 £i∈N ¡Li + Ri¢ = C(N).",
                "This gives us a contradiction.",
                "Next, we introduce an axiom about sharing the transfer of a job between a set of jobs.",
                "In particular, if the last job quits the system, then the ordering need not change.",
                "But the transfer to the last job needs to be shared between the other jobs.",
                "This should be done in proportion to their processing times because every job influenced the last job based on its processing time.",
                "Definition 6.",
                "An allocation rule ψ satisfies proportionate responsibility of p (PRp) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = |N|, q = (N \\ {k}, p , θ ) ∈ Q, such that for all i ∈ N\\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk pi £j=k pj .",
                "An analogous fairness axiom results if we remove the job from the beginning of the queue.",
                "Since the presence of the first job influenced each job depending on their θ values, its transfer needs to be shared in proportion to θ values.",
                "Definition 7.",
                "An allocation rule ψ satisfies proportionate responsibility of θ (PRθ) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = 1, q = (N \\{k}, p , θ ) ∈ Q, such that for all i ∈ N \\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk θi £j=k θj .",
                "The proportionate responsibility axioms are generalizations of equal responsibility axioms introduced by Maniquet [15]. 235 Independence Axioms The waiting cost of a job does not depend on the per unit waiting cost of its preceding jobs.",
                "Similarly, the waiting cost inflicted by a job to its following jobs is independent of the processing times of the following jobs.",
                "These independence properties should be carried over to the cost sharing rules.",
                "This gives us two independence axioms.",
                "Definition 8.",
                "An allocation rule ψ satisfies independence of preceding jobs θ (IPJθ) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk < γk, pk = pk, then for all j ∈ N such that σj > σk: πj = πj, where π is the <br>cost share</br> in (σ, t) and π is the <br>cost share</br> in (σ , t ).",
                "Definition 9.",
                "An allocation rule ψ satisfies independence of following jobs p (IFJp) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk > γk, θk = θk, then for all j ∈ N such that σj < σk: πj = πj, where π is the <br>cost share</br> in (σ, t) and π is the <br>cost share</br> in (σ , t ). 4.2 The Characterization Results Having stated the fairness axioms, we propose three different ways to characterize the Shapley value rule using these axioms.",
                "All our characterizations involve efficiency and ECB.",
                "But if we have IPJθ, we either need IFJp or PRp.",
                "Similarly if we have IFJp, we either need IPJθ or PRθ.",
                "Proposition 1.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and IFJp is a rule implied by the Shapley value rule.",
                "Proof.",
                "Define for any i, j ∈ N, θi j = γipj and pi j = θj γi .",
                "Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider the following q = (N, p , θ ) corresponding to job i with pj = pj if j ≤ i and pj = pi j if j > i, θj = θi j if j < i and θj = θj if j ≥ i.",
                "Observe that all jobs have the same γ: γi.",
                "By Lemma 2 and efficiency, (σ, t ) ∈ ψ(q ) for some set of transfers t .",
                "Using Lemma 4, we get <br>cost share</br> of i from (σ, t ) as πi = piθi + 1 2 ¡Li + Ri¢.",
                "Now, for any j < i, if we change θj to θj without changing processing time, the new γ of j is γj ≥ γi.",
                "Applying IPJθ, the <br>cost share</br> of job i should not change.",
                "Similarly, for any job j > i, if we change pj to pj without changing θj, the new γ of j is γj ≤ γi.",
                "Applying IFJp, the <br>cost share</br> of job i should not change.",
                "Applying this procedure for every j < i with IPJθ and for every j > i with IFJp, we reach q = (N, p, θ) and the payoff of i does not change from πi.",
                "Using this argument for every i ∈ N and using the expression for the Shapley value in Lemma 3, we get the Shapley value rule.",
                "It is possible to replace one of the independence axioms with an equity axiom on sharing the transfer of a job.",
                "This is shown in Propositions 2 and 3.",
                "Proposition 2.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and PRp is a rule implied by the Shapley value rule.",
                "Proof.",
                "As in the proof of Proposition 1, define θi j = γipj ∀ i, j ∈ N. Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider a queue with jobs in set K = {1, . . . , i, i + 1}, where i < n. Define q = (K, p, θ ), where θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ is an efficient ordering for q .",
                "By ECB and Lemma 4 the <br>cost share</br> of job i + 1 in any allocation rule in ψ must be πi+1 = pi+1θi+1 + 1 2 ¡£j<i+1 pjθi+1¢.",
                "Now, consider q = (K, p, θ ) such that θj = θi j ∀ j ≤ i and θi+1 = θi+1. σ remains an efficient ordering in q and by IPJθ the <br>cost share</br> of i + 1 remains πi+1.",
                "In q = (K \\ {i + 1}, p, θ ), we can calculate the <br>cost share</br> of job i using ECB and Lemma 4 as πi = piθi + 1 2 £j<i pjθi.",
                "So, using PRp we get the new <br>cost share</br> of job i in q as πi = πi + ti+1 pi j<i+1 pj = piθi + 1 2 ¡£j<i pjθi + piθi+1¢.",
                "Now, we can set K = K ∪ {i + 2}.",
                "As before, we can find <br>cost share</br> of i + 2 in this queue as πi+2 = pi+2θi+2 + 1 2 ¡£j<i+2 pjθi+2¢.",
                "Using PRp we get the new <br>cost share</br> of job i in the new queue as πi = piθi + 1 2 ¡£j<i pjθi + piθi+1 + piθi+2¢.",
                "This process can be repeated till we add job n at which point <br>cost share</br> of i is piθi + 1 2 ¡£j<i pjθi + £j>i piθj¢.",
                "Then, we can adjust the θ of preceding jobs of i to their original value and applying IPJθ, the payoffs of jobs i through n will not change.",
                "This gives us the Shapley values of jobs i through n. Setting i = 1, we get cost shares of all the jobs from ψ as the Shapley value.",
                "Proposition 3.",
                "Any efficient rule ψ that satisfies ECB, IFJp, and PRθ is a rule implied by the Shapley value rule.",
                "Proof.",
                "The proof mirrors the proof of Proposition 2.",
                "We provide a short sketch.",
                "Analogous to the proof of Proposition 2, θs are kept equal to original data and processing times are initialized to pi+1 j .",
                "This allows us to use IFJp.",
                "Also, contrast to Proposition 2, we consider K = {i, i + 1, . . . , n} and repeatedly add jobs to the beginning of the queue maintaining the same efficient ordering.",
                "So, we add the cost components of preceding jobs to the <br>cost share</br> of jobs in each iteration and converge to the Shapley value rule.",
                "The next proposition shows that the Shapley value rule satisfies all the fairness axioms discussed.",
                "Proposition 4.",
                "The Shapley value rule satisfies efficiency, pareto indifference, anonymity, ETE, ECB, IPJθ, IFJp, PRp, and PRθ.",
                "Proof.",
                "The Shapley value rule chooses an efficient ordering and by definition the payments add upto zero.",
                "So, it satisfies efficiency.",
                "The Shapley value assigns same <br>cost share</br> to a job irrespective of the efficient ordering chosen.",
                "So, it is pareto indifferent.",
                "The Shapley value is anonymous because the particular index of a job does not effect his ordering or <br>cost share</br>.",
                "For ETE, consider two jobs i, j ∈ N such that pi = pj and θi = θj.",
                "Without loss of generality assume the efficient ordering to be 1, . . . , i, . . . , j, . . . , n. Now, the Shapley value of job i is 236 SVi = piθi + 1 2 ¡Li + Ri¢(From Lemma 3) = pjθj + 1 2 ¡Lj + Rj¢− 1 2 ¡Li − Lj + Ri − Rj¢ = SVj − 1 2 ¡   i<k≤j piθk −   i≤k<j pkθi¢ = SVj − 1 2   i<k≤j (piθk − pkθi) (Using pi = pj and θi = θj) = SVj (Using θk pk = θi pi for all i ≤ k ≤ j).",
                "The Shapley value satisfies ECB by its expression in Lemma 3.",
                "Consider any job i, in an efficient ordering σ, if we increase the value of γj for some j = i such that σj > σi, then the set Pi ( preceding jobs) does not change in the new efficient ordering.",
                "If γj is changed such that pj remains the same, then the expression £j∈Pi θipj is unchanged.",
                "If (p, θ) values of no other jobs are changed, then the Shapley value is unchanged by increasing γj for some j ∈ Pi while keeping pj unchanged.",
                "Thus, the Shapley value rule satisfies IPJθ.",
                "An analogous argument shows that the Shapley value rule satisfies IFJp.",
                "For PRp, assume without loss of generality that jobs are ordered 1, . . . , n in an efficient ordering.",
                "Denote the transfer of job i = n due to the Shapley value with set of jobs N and set of jobs N \\ {n} as ti and ti respectively.",
                "Transfer of last job is tn = 1 2 θn £j<n pj.",
                "Now, ti = 1 2 ¡θi   j<i pj − pi   j>i θj¢ = 1 2 ¡θi   j<i pj − pi   j>i:j=n θj¢− 1 2 piθn = ti − 1 2 θn   j<n pj pi £j<n pj = ti − tn pi £j<n pj .",
                "A similar argument shows that the Shapley value rule satisfies PRθ.",
                "These series of propositions lead us to our main result.",
                "Theorem 1.",
                "Let ψ be an allocation rule.",
                "The following statements are equivalent: 1) For each q ∈ Q, ψ(q) selects all the allocation assigning jobs cost shares implied by the Shapley value. 2) ψ satisfies efficiency, ECB, IFJp, and IPJθ. 3) ψ satisfies efficiency, ECB, IFJp, and PRθ. 4) ψ satisfies efficiency, ECB, PRp, and IPJθ.",
                "Proof.",
                "The proof follows from Propositions 1, 2, 3, and 4. 5.",
                "DISCUSSIONS 5.1 A Reasonable Class of Cost Sharing Mechanisms In this section, we will define a reasonable class of cost sharing mechanisms.",
                "We will show how these reasonable mechanisms lead to the Shapley value mechanism.",
                "Definition 10.",
                "An allocation rule ψ is reasonable if for all q ∈ Q and (σ, t) ∈ ψ(q) we have for all i ∈ N, ti = α ¡θi   j∈Pi(σ) pj − pi   j∈Fi(σ) θj¢∀ i ∈ N, where 0 ≤ α ≤ 1.",
                "The reasonable cost sharing mechanism says that every job should be paid a constant fraction of the difference between the waiting cost he incurs and the waiting cost he inflicts on other jobs.",
                "If α = 0, then every job bears its own cost.",
                "If α = 1, then every job gets compensated for its waiting cost but compensates others for the cost he inflicts on others.",
                "The Shapley value rule comes as a result of ETE as shown in the following proposition.",
                "Proposition 5.",
                "Any efficient and reasonable allocation rule ψ that satisfies ETE is a rule implied by the Shapley value rule.",
                "Proof.",
                "Consider a q ∈ Q in which pi = pj and θi = θj.",
                "Let (σ, t) ∈ ψ(q) and π be the resulting cost shares.",
                "From ETE, we get, πi = πj ⇒ ci(σ) − ti = cj(σ) − tj ⇒ piθi + (1 − α)Li + αRi = pjθj + (1 − α)Lj + αRj (Since ψ is efficient and reasonable) ⇒ (1 − α)(Li − Lj) = α(Rj − Ri) (Using pi = pj, θi = θj) ⇒ 1 − α = α (Using Li − Lj = Rj − Ri = 0) ⇒ α = 1 2 .",
                "This gives us the Shapley value rule by Lemma 3. 5.2 Results on Envy Chun [2] discusses a fariness condition called no-envy for the case when processing times of all jobs are unity.",
                "Definition 11.",
                "An allocation rule satisfies no-envy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tj, where π is the <br>cost share</br> from allocation rule (σ, t) and σij is the ordering obtaining by swapping i and j.",
                "From the result in [2], the Shapley value rule does not satisfy no-envy in our model also.",
                "To overcome this, Chun [2] introduces the notion of adjusted no-envy, which he shows is satisfied in the Shapley value rule when processing times of all jobs are unity.",
                "Here, we show that adjusted envy continues to hold in the Shapley value rule in our model (when processing times need not be unity).",
                "As before denote σij be an ordering where the position of i and j is swapped from an ordering σ.",
                "For adjusted noenvy, if (σ, t) is an allocation for some q ∈ Q, let tij be the 237 transfer of job i when the transfer of i is calculated with respect to ordering σij .",
                "Observe that an allocation may not allow for calculation of tij .",
                "For example, if ψ is efficient, then tij cannot be calculated if σij is also not efficient.",
                "For simplicity, we state the definition of adjusted no-envy to apply to all such rules.",
                "Definition 12.",
                "An allocation rule satisfies adjusted noenvy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tij i .",
                "Proposition 6.",
                "The Shapley value rule satisfies adjusted no-envy.",
                "Proof.",
                "Without loss of generality, assume efficient ordering of jobs is: 1, . . . , n. Consider two jobs i and i + k. From Lemma 3, SVi = piθi + 1 2 ¡  j<i θipj +   j>i θjpi¢.",
                "Let ˆπi be the <br>cost share</br> of i due to adjusted transfer tii+k i in the ordering σii+k . ˆπi = ci(σii+k ) − tii+k i = piθi + 1 2 ¡  j<i θipj + θipi+k +   i<j<i+k θipj +   j>i θjpi − θi+kpi −   i<j<i+k θjpi¢ = SVi + 1 2   i<j≤i+k ¡θipj − θjpi¢ ≥ SVi (Using the fact that θi pi ≥ θj pj for i < j). 6.",
                "CONCLUSION We studied the problem of sharing costs for a job scheduling problem on a single server, when jobs have processing times and unit time waiting costs.",
                "We took a cooperative game theory approach and show that the famous the Shapley value rule satisfies many nice fairness properties.",
                "We characterized the Shapley value rule using different intuitive fairness axioms.",
                "In future, we plan to further simplify some of the fairness axioms.",
                "Some initial simplifications already appear in [16], where we provide an alternative axiom to ECB and also discuss the implication of transfers between jobs (in stead of transfers from jobs to a central server).",
                "We also plan to look at cost sharing mechanisms other than the Shapley value.",
                "Investigating the strategic power of jobs in such mechanisms is another line of future research. 7.",
                "REFERENCES [1] Youngsub Chun.",
                "A Note on Maniquets Characterization of the Shapley Value in Queueing Problems.",
                "Working Paper, Rochester University, 2004. [2] Youngsub Chun.",
                "No-envy in Queuing Problems.",
                "Working Paper, Rochester University, 2004. [3] Imma Curiel, Herbert Hamers, and Flip Klijn.",
                "Sequencing Games: A Survey.",
                "In Peter Borm and Hans Peters, editors, Chapter in Game Theory.",
                "Theory and Decision Library, Kulwer Academic Publishers, 2002. [4] Imma Curiel, Giorgio Pederzoli, and Stef Tijs.",
                "Sequencing Games.",
                "European Journal of Operational Research, 40:344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs, and Bart Veltman.",
                "Sequencing and Cooperation.",
                "Operations Research, 42(3):566-568, May-June 1994. [6] Nikhil R. Devanur, Milena Mihail, and Vijay V. Vazirani.",
                "Strategyproof Cost-sharing Mechanisms for Set Cover and Facility Location Games.",
                "In Proceedings of Fourth Annual ACM Conferece on Electronic Commerce, 2003. [7] Robert J. Dolan.",
                "Incentive Mechanisms for Priority Queueing Problems.",
                "Bell Journal of Economics, 9:421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou, and Scott Shenker.",
                "Sharing the Cost of Multicast Transmissions.",
                "In Proceedings of Thirty-Second Annual ACM Symposium on Theory of Computing, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs, and Peter Borm.",
                "The Split Core for Sequencing Games.",
                "Games and Economic Behavior, 15:165-176, 1996. [10] John C. Harsanyi.",
                "Contributions to Theory of Games IV, chapter A Bargaining Model for Cooperative n-person Games.",
                "Princeton University Press, 1959.",
                "Editors: A. W. Tucker, R. D. Luce. [11] Kamal Jain and Vijay Vazirani.",
                "Applications of Approximate Algorithms to Cooperative Games.",
                "In Proceedings of 33rd Symposium on Theory of Computing (STOC 01), 2001. [12] Kamal Jain and Vijay Vazirani.",
                "Equitable Cost Allocations via Primal-Dual Type Algorithms.",
                "In Proceedings of 34th Symposium on Theory of Computing (STOC 02), 2002. [13] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without a Completely Specified Initial Order.",
                "Report in Statistics and Operations Research, pages 1-17, 2002.",
                "Report 02-04. [14] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without Initial Order.",
                "Working Paper, Universitat Aut´onoma de Barcelona, July 2004. [15] Franois Maniquet.",
                "A Characterization of the Shapley Value in Queueing Problems.",
                "Journal of Economic Theory, 109:90-103, 2003. [16] Debasis Mishra and Bharath Rangarajan.",
                "Cost sharing in a job scheduling problem.",
                "Working Paper, CORE, 2005. [17] Manipushpak Mitra.",
                "Essays on First Best Implementable Incentive Problems.",
                "Ph.D. Thesis, Indian Statistical Institute, New Delhi, 2000. [18] Manipushpak Mitra.",
                "Mechanism design in queueing problems.",
                "Economic Theory, 17(2):277-305, 2001. [19] Manipushpak Mitra.",
                "Achieving the first best in sequencing problems.",
                "Review of Economic Design, 7:75-91, 2002. [20] Herv´e Moulin.",
                "Handbook of Social Choice and Welfare, chapter Axiomatic Cost and Surplus Sharing.",
                "North-Holland, 2002.",
                "Publishers: Arrow, Sen, Suzumura. [21] Herv´e Moulin.",
                "On Scheduling Fees to Prevent 238 Merging, Splitting and Transferring of Jobs.",
                "Working Paper, Rice University, 2004. [22] Herv´e Moulin.",
                "Split-proof Probabilistic Scheduling.",
                "Working Paper, Rice University, 2004. [23] Herv´e Moulin and Rakesh Vohra.",
                "Characterization of Additive Cost Sharing Methods.",
                "Economic Letters, 80:399-407, 2003. [24] Martin P´al and ´Eva Tardos.",
                "Group Strategyproof Mechanisms via Primal-Dual Algorithms.",
                "In Proceedings of the 44th Annual IEEE Symposium on the Foundations of Computer Science (FOCS 03), 2003. [25] Lloyd S. Shapley.",
                "Contributions to the Theory of Games II, chapter A Value for n-person Games, pages 307-317.",
                "Annals of Mathematics Studies, 1953.",
                "Ediors: H. W. Kuhn, A. W. Tucker. [26] Wayne E. Smith.",
                "Various Optimizers for Single-Stage Production.",
                "Naval Research Logistics Quarterly, 3:59-66, 1956. [27] Jeroen Suijs.",
                "On incentive compatibility and budget balancedness in public decision making.",
                "Economic Design, 2, 2002. 239"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Nuestros axiomas incluyen un límite en el \"costo compartido\" de los trabajos en un grupo, eficiencia y algunas propiedades de independencia en el \"costo compartido\" de un trabajo.",
                "Un axioma clave que presentamos nos da un límite en el \"costo compartido\" de un trabajo en un grupo de trabajos que tienen la misma relación de tiempo de espera de tiempo de espera y tiempo de procesamiento (estos trabajos se pueden ordenar de cualquier manera entre ellos en una eficiencia eficienteordenar).",
                "Dada una transferencia Ti y un orden σ, el \"costo compartido\" del trabajo I se define como, πi = ci (σ) - ti = θi j∈N: σj ≤σi pj - ti.233 Una asignación (σ, t) es eficiente para Q = (n, p, θ) siempre que σ sea un orden eficiente y £ i∈N ti = 0.",
                "El siguiente lema directo dice que para dos pedidos eficientes diferentes, el \"costo compartido\" en una asignación eficiente es posible lograr en el otro modificando adecuadamente las transferencias.",
                "",
                "Además, denotaremos el vector de \"costo compartido\" asociado con una regla de asignación (σ, t) como π y que con la regla de asignación (σ, t) como π etc. 4.1 Los axiomas de equidad definiremos tres tipos de axiomas de equidad:(i) relacionado con la eficiencia, (ii) relacionado con la equidad y (iii) relacionado con la independencia.",
                "Una implicación del axioma y el lema 2 de la indiferencia Pareto es que para cada orden eficiente hay un conjunto de transferencias de trabajos, de modo que es parte de una regla eficiente y la \"participación de costos\" de un trabajo en todas estas asignaciones es la misma.",
                "Argumentando por cada par de trabajos I, j ∈ S (γ), establecemos un límite en el \"costo compartido\" de los trabajos en S (γ).",
                "Una regla de asignación satisface el costo esperado (ECB) si para todas las q ∈ Q, (σ, t) ∈ ψ (Q) con π es el \"costo compartido\" resultante, para cualquier γ ≥ 0, y para cada i ∈ S ((γ), tenemos πi ≥ Piθi + 1 2 ¡j∈S (γ): σj <σi pjθi + j∈S (γ): σj> σi piθj ¢.",
                "Nuestro axioma dice que el \"costo compartido\" de un trabajo debería ser al menos su propio costo de procesamiento y el costo total esperado que inflige a los demás.",
                "Para un q ∈ Q if s (γ) = n, entonces para cualquier (σ, t) ∈ ψ (q) que da un \"costo compartido\" de π, πi = piθi + 1 2 ¡li + ri ¢ ¢ i ∈ N. Prueba.",
                "Una regla de asignación ψ satisface la independencia de los trabajos anteriores θ (ipjθ) si para todos q = (n, p, θ), q = (n, p, θ) ∈ Q, (σ, t) ∈ ψ (q), (((σ, t) ∈ ψ (q), si para todo i ∈ N \\ {k}: θi = θi, pi = pi y γk <γk, pk = pk, entonces para todos j ∈ N tal que σj> σk: πj= πj, donde π es el \"costo compartido\" en (σ, t) y π es el \"costo compartido\" en (σ, t).",
                "Una regla de asignación ψ satisface la independencia de los siguientes trabajos p (ifjp) si para todos q = (n, p, θ), q = (n, p, θ) ∈ Q, (σ, t) ∈ ψ (q), (((σ, t) ∈ ψ (q), si para todo i ∈ N \\ {k}: θi = θi, pi = pi y γk> γk, θk = θk, entonces para todos j ∈ N tal que σj <σk: πj= πj, donde π es el \"costo compartido\" en (σ, t) y π es el \"costo compartido\" en (σ, t).4.2 Los resultados de la caracterización han declarado los axiomas de equidad, proponemos tres formas diferentes de caracterizar la regla de valor de Shapley usando estos axiomas.",
                "Usando Lemma 4, obtenemos \"costos compartidos\" de I de (σ, t) como πi = piθi + 1 2 ¡li + ri ¢.",
                "Aplicando IPJθ, el \"costo compartido\" del trabajo no debería cambiar.",
                "Aplicando IFJP, el \"costo compartido\" del trabajo no debería cambiar.",
                "Por BCB y Lemma 4 El \"costo compartido\" del trabajo i+1 en cualquier regla de asignación en ψ debe ser πi+1 = pi+1θi+1+1 2 ¡£ j <i+1 pjθi+1 ¢.",
                "Ahora, considere q = (k, p, θ) de modo que θj = θi j ∀ j ≤ i y θi+1 = θi+1.σ sigue siendo un orden eficiente en q y por IPJθ el \"costo compartido\" de i + 1 permanece πi + 1.",
                "En q = (k \\ {i + 1}, p, θ), podemos calcular el \"costo compartido\" del trabajo I usando el ECB y el lemma 4 como πi = piθi + 1 2 £ j <i pjθi.",
                "Entonces, usando PRP obtenemos el nuevo \"Costo compartido\" del trabajo I en Q como πi = πi + ti + 1 pi j <i + 1 pj = piθi + 1 2 ¡£ j <i pjθi + piθi + 1 ¢.",
                "Como antes, podemos encontrar el \"costo compartido\" de i+2 en esta cola como πi+2 = pi+2θi+2+1 2 ¡£ j <i+2 pjθi+2 ¢.",
                "Usando PRP obtenemos el nuevo \"costo compartido\" del trabajo I en la nueva cola como πi = piθi + 1 2 ¡£ j <i pjθi + piθi + 1 + piθi + 2 ¢.",
                "Este proceso se puede repetir hasta que agregamos trabajo n en el que \"costo compartido\" de i es piθi + 1 2 ¡£ j <i pjθi + £ j> i piθj ¢.",
                "Por lo tanto, agregamos los componentes de costo de los trabajos anteriores a la \"participación de costos\" de los trabajos en cada iteración y convergimos a la regla de valor de Shapley.",
                "El valor de Shapley asigna el mismo \"costo compartido\" a un trabajo independientemente del orden eficiente elegido.",
                "El valor de Shapley es anónimo porque el índice particular de un trabajo no afecta su pedido o \"compartir la participación\".",
                "Una regla de asignación satisface sin modificación si para todas q ∈ Q, (σ, t) ∈ ψ (q), e i, j ∈ N, tenemos πi ≤ ci (σij)-tj, donde π es el \"costo compartido\"De la regla de asignación (σ, t) y σij es el orden que se obtiene al intercambiar i y j.",
                "Sea ˆπi el \"costo compartido\" de I debido a la transferencia ajustada tii+k i en el orden σii+k.ˆΠi = ci (σii+k) - tii+k i = piθi+1 2 ¡j <i θipj+θipi+k+i <j <i+k θipj+j> i θjpi - θi+kpi - i <j <i+k θjpi ¢ = svi +1 2 i <j≤i +k ¡θipj - θjpi ¢ ≥ svi (usando el hecho de que θi pi ≥ θj pj para i <j).6."
            ],
            "translated_text": "",
            "candidates": [
                "repartición de costos",
                "costo compartido",
                "costo compartido",
                "repartición de costos",
                "costo compartido",
                "Costo compartido",
                "costo compartido",
                "repartición de costos",
                "costo compartido",
                "",
                "costo compartido",
                "costo compartido",
                "repartición de costos",
                "costo compartido",
                "repartición de costos",
                "participación de costos",
                "repartición de costos",
                "costo compartido",
                "repartición de costos",
                "costo compartido",
                "repartición de costos",
                "costo compartido",
                "repartición de costos",
                "costo compartido",
                "repartición de costos",
                "costo compartido",
                "costo compartido",
                "repartición de costos",
                "costo compartido",
                "costo compartido",
                "repartición de costos",
                "costos compartidos",
                "repartición de costos",
                "costo compartido",
                "repartición de costos",
                "costo compartido",
                "repartición de costos",
                "costo compartido",
                "repartición de costos",
                "costo compartido",
                "repartición de costos",
                "costo compartido",
                "repartición de costos",
                "Costo compartido",
                "repartición de costos",
                "costo compartido",
                "repartición de costos",
                "costo compartido",
                "repartición de costos",
                "costo compartido",
                "repartición de costos",
                "participación de costos",
                "repartición de costos",
                "costo compartido",
                "repartición de costos",
                "compartir la participación",
                "repartición de costos",
                "costo compartido",
                "Participación de costos",
                "costo compartido"
            ],
            "error": []
        },
        "job schedule": {
            "translated_key": "horario de trabajo",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Cost Sharing in a Job Scheduling Problem Using the Shapley Value Debasis Mishra Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium mishra@core.ucl.ac.be Bharath Rangarajan Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium rangarajan@core.ucl.ac.be ABSTRACT A set of jobs need to be served by a single server which can serve only one job at a time.",
                "Jobs have processing times and incur waiting costs (linear in their waiting time).",
                "The jobs share their costs through compensation using monetary transfers.",
                "We characterize the Shapley value rule for this model using fairness axioms.",
                "Our axioms include a bound on the cost share of jobs in a group, efficiency, and some independence properties on the the cost share of a job.",
                "Categories and Subject Descriptors J.4 [Social and Behaviorial Sciences]: Economics General Terms Economics, Theory 1.",
                "INTRODUCTION A set of jobs need to be served by a server.",
                "The server can process only one job at a time.",
                "Each job has a finite processing time and a per unit time waiting cost.",
                "Efficient ordering of this queue directs us to serve the jobs in increasing order of the ratio of per unit time waiting cost and processing time.",
                "To compensate for waiting by jobs, monetary transfers to jobs are allowed.",
                "How should the jobs share the cost equitably amongst themselves (through transfers)?",
                "The problem of fair division of costs among agents in a queue has many practical applications.",
                "For example, computer programs are regularly scheduled on servers, data are scheduled to be transmitted over networks, jobs are scheduled in shop-floor on machines, and queues appear in many public services (post offices, banks).",
                "Study of queueing problems has attracted economists for a long time [7, 17].",
                "Cost sharing is a fundamental problem in many settings on the Internet.",
                "Internet can be seen as a common resource shared by many users and the cost incured by using the resource needs to be shared in an equitable manner.",
                "The current surge in cost sharing literature from computer scientists validate this claim [8, 11, 12, 6, 24].",
                "Internet has many settings in which our model of job scheduling appears and the agents waiting in a queue incur costs (jobs scheduled on servers, queries answered from a database, data scheduled to be transmitted over a fixed bandwidth network etc.).",
                "We hope that our analysis will give new insights on cost sharing problems of this nature.",
                "Recently, there has been increased interest in cost sharing methods with submodular cost functions [11, 12, 6, 24].",
                "While many settings do have submodular cost functions (for example, multi-cast transmission games [8]), while the cost function of our game is supermodular.",
                "Also, such literature typically does not assume budget-balance (transfers adding up to zero), while it is an inherent feature of our model.",
                "A recent paper by Maniquet [15] is the closest to our model and is the motivation behind our work 1 .",
                "Maniquet [15] studies a model where he assumes all processing times are unity.",
                "For such a model, he characterizes the Shapley value rule using classical fairness axioms.",
                "Chun [1] interprets the worth of a coalition of jobs in a different manner for the same model and derives a reverse rule.",
                "Chun characterizes this rule using similar fairness axioms.",
                "Chun [2] also studies the envy properties of these rules.",
                "Moulin [22, 21] studies the queueing problem from a strategic point view when per unit waiting costs are unity.",
                "Moulin introduces new concepts in the queueing settings such as splitting and merging of jobs, and ways to prevent them.",
                "Another stream of literature is on sequencing games, first introduced by Curiel et al. [4].",
                "For a detailed survey, refer to Curiel et al. [3].",
                "Curiel et al. [4] defined sequencing games similar to our model, but in which an initial ordering of jobs is given.",
                "Besides, their notion of worth of a coalition is very different from the notions studied in Maniquet [15] and Chun [1] (these are the notions used in our work too).",
                "The particular notion of the worth of a coalition makes the sequencing game of Curiel et al. [4] convex, whereas our game is not convex and does not assume the presence of any initial order.",
                "In summary, the focus of this stream of 1 The authors thank Fran¸cois Maniquet for several fruitful discussions. 232 research is how to share the savings in costs from the initial ordering to the optimal ordering amongst jobs (also see Hamers et al. [9], Curiel et al. [5]).",
                "Recently, Klijn and S´anchez [13, 14] considered sequencing games without any initial ordering of jobs.",
                "They take two approaches to define the worth of coalitions.",
                "One of their approaches, called the tail game, is related to the reverse rule of Chun [1].",
                "In the tail game, jobs in a coalition are served after the jobs not in the coalition are served.",
                "Klijn and S´anchez [14] showed that the tail game is balanced.",
                "Further, they provide expressions for the Shapley value in tail game in terms of marginal vectors and reversed marginal vectors.",
                "We provide a simpler expression of the Shapley value in the tail game, generalizing the result in Chun [1].",
                "Klijn and S´anchez [13] study the core of this game in detail.",
                "Strategic aspects of queueing problems have also been researched.",
                "Mitra [19] studies the first best implementation in queueing models with generic cost functions.",
                "First best implementation means that there exists an efficient mechanism in which jobs in the queue have a dominant strategy to reveal their true types and their transfers add up to zero.",
                "Suijs [27] shows that if waiting costs of jobs are linear then first best implementation is possible.",
                "Mitra [19] shows that among a more general class of queueing problems first best implementation is possible if and only if the cost is linear.",
                "For another queueing model, Mitra [18] shows that first best implementation is possible if and only if the cost function satisfies a combinatorial property and an independence property.",
                "Moulin [22, 21] studies strategic concepts such as splitting and merging in queueing problems with unit per unit waiting costs.",
                "The general cost sharing literature is vast and has a long history.",
                "For a good survey, we refer to [20].",
                "From the seminal work of Shapley [25] to recent works on cost sharing in multi-cast transmission and optimization problems [8, 6, 23] this area has attracted economists, computer scientists, and operations researchers. 1.1 Our Contribution Ours is the first model which considers cost sharing when both processing time and per unit waiting cost of jobs are present.",
                "We take a cooperative game theory approach and apply the classical Shapley value rule to the problem.",
                "We show that the Shapley value rule satisfies many intuitive fairness axioms.",
                "Due to two dimensional nature of our model and one dimensional nature of Maniquets model [15], his axioms are insufficient to characterize the Shapley value in our setting.",
                "We introduce axioms such as independece of preceding jobs unit waiting cost and independence of following jobs processing time.",
                "A key axiom that we introduce gives us a bound on cost share of a job in a group of jobs which have the same ratio of unit time waiting cost and processing time (these jobs can be ordered in any manner between themseleves in an efficient ordering).",
                "If such a group consists of just one job, then the axiom says that such a job should at least pay his own processing cost (i.e., the cost it would have incurred if it was the only job in the queue).",
                "If there are multiple jobs in such a group, the probability of any two jobs from such a group inflicting costs on each other is same (1 2 ) in an efficient ordering.",
                "Depending on the ordering selected, one job inflicts cost on the other.",
                "Our fairness axiom says that each job should at least bear such expected costs.",
                "We characterize the Shapley value rule using these fairness axioms.",
                "We also extend the envy results in [2] to our setting and discuss a class of reasonable cost sharing mechanisms. 2.",
                "THE MODEL There are n jobs that need to be served by one server which can process only one job at a time.",
                "The set of jobs are denoted as N = {1, . . . , n}. σ : N → N is an ordering of jobs in N and σi denotes the position of job i in the ordering σ.",
                "Given an ordering σ, define Fi(σ) = {j ∈ N : σi < σj} and Pi(σ) = {j ∈ N : σi > σj}.",
                "Every job i is identified by two parameters: (pi, θi). pi is the processing time and θi is the cost per unit waiting time of job i.",
                "Thus, a queueing problem is defined by a list q = (N, p, θ) ∈ Q, where Q is the set of all possible lists.",
                "We will denote γi = θi pi .",
                "Given an ordering of jobs σ, the cost incurred by job i is given by ci(σ) = piθi + θi   j∈Pi(σ) pj.",
                "The total cost incurred by all jobs due to an ordering σ can be written in two ways: (i) by summing the cost incurred by every job and (ii) by summing the costs inflicted by a job on other jobs with their own processing cost.",
                "C(N, σ) =   i∈N ci(σ) =   i∈N piθi +   i∈N ¡θi   j∈Pi(σ) pj¢. =   i∈N piθi +   i∈N ¡pi   j∈Fi(σ) θj¢.",
                "An efficient ordering σ∗ is the one which minimizes the total cost incurred by all jobs.",
                "So, C(N, σ∗ ) ≤ C(N, σ) ∀ σ ∈ Σ.",
                "To achieve notational simplicity, we will write the total cost in an efficient ordering of jobs from N as C(N) whenever it is not confusing.",
                "Sometimes, we will deal with only a subset of jobs S ⊆ N. The ordering σ will then be defined on jobs in S only and we will write the total cost from an efficient ordering of jobs in S as C(S).",
                "The following lemma shows that jobs are ordered in decreasing γ in an efficient ordering.",
                "This is also known as the weighted shortest processing time rule, first introduced by Smith [26].",
                "Lemma 1.",
                "For any S ⊆ N, let σ∗ be an efficient ordering of jobs in S. For every i = j, i, j ∈ S, if σ∗ i > σ∗ j , then γi ≤ γj.",
                "Proof.",
                "Assume for contradiction that the statment of the lemma is not true.",
                "This means, we can find two consecutive jobs i, j ∈ S (σ∗ i = σ∗ j + 1) such that γi > γj.",
                "Define a new ordering σ by interchanging i and j in σ∗ .",
                "The costs to jobs in S \\ {i, j} is not changed from σ∗ to σ.",
                "The difference between total costs in σ∗ and σ is given by, C(S, σ) − C(S, σ∗ ) = θjpi − θipj.",
                "From efficiency we get θjpi − θipj ≥ 0.",
                "This gives us γj ≥ γi, which is a contradiction.",
                "An allocation for q = (N, p, θ) ∈ Q has two components: an ordering σ and a transfer ti for every job i ∈ N. ti denotes the payment received by job i.",
                "Given a transfer ti and an ordering σ, the cost share of job i is defined as, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. 233 An allocation (σ, t) is efficient for q = (N, p, θ) whenever σ is an efficient ordering and £i∈N ti = 0.",
                "The set of efficient orderings of q is denoted as Σ∗ (q) and σ∗ (q) will be used to refer to a typical element of the set.",
                "The following straightforward lemma says that for two different efficient orderings, the cost share in one efficient allocation is possible to achieve in the other by appropriately modifying the transfers.",
                "Lemma 2.",
                "Let (σ, t) be an efficient allocation and π be the vector of cost shares of jobs from this allocation.",
                "If σ∗ = σ be an efficient ordering and t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, then (σ∗ , t∗ ) is also an efficient allocation.",
                "Proof.",
                "Since (σ, t) is efficient, £i∈N ti = 0.",
                "This gives £i∈N πi = C(N).",
                "Since σ∗ is an efficient ordering, £i∈N ci(σ∗ ) = C(N).",
                "This means, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0.",
                "So, (σ∗ , t∗ ) is an efficient allocation.",
                "Depending on the transfers, the cost shares in different efficient allocations may differ.",
                "An allocation rule ψ associates with every q ∈ Q a non-empty subset ψ(q) of allocations. 3.",
                "COST SHARING USING THE SHAPLEY VALUE In this section, we define the coalitional cost of this game and analyze the solution proposed by the Shapley value.",
                "Given a queue q ∈ Q, the cost of a coalition of S ⊆ N jobs in the queue is defined as the cost incurred by jobs in S if these are the only jobs served in the queue using an efficient ordering.",
                "Formally, the cost of a coalition S ⊆ N is, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, where σ∗ = σ∗ (S) is an efficient ordering considering jobs from S only.",
                "The worth of a coalition of S jobs is just −C(S).",
                "Maniquet [15] observes another equivalent way to define the worth of a coalition is using the dual function of the cost function C(·).",
                "Other interesting ways to define the worth of a coalition in such games is discussed by Chun [1], who assume that a coalition of jobs are served after the jobs not in the coalition are served.",
                "The Shapley value (or cost share) of a job i is defined as, SVi =   S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) The Shapley value allocation rule says that jobs are ordered using an efficient ordering and transfers are assigned to jobs such that the cost share of job i is given by Equation 1.",
                "Lemma 3.",
                "Let σ∗ be an efficient ordering of jobs in set N. For all i ∈ N, the Shapley value is given by, SVi = piθi + 1 2 ¡Li + Ri¢, where Li = θi £j∈Pi(σ∗) pj and Ri = pi £j∈Fi(σ∗) θj.",
                "Proof.",
                "Another way to write the Shapley value formula is the following [10], SVi =   S⊆N:i∈S ∆(S) |S| , where ∆(S) = C(S) if |S| = 1 and ∆(S) = C(S)−£T S ∆(T).",
                "This gives ∆({i}) = C({i}) = piθi ∀i ∈ N. For any i, j ∈ N with i = j, we have ∆({i, j}) = C({i, j}) − C({i}) − C({j}) = min(piθi + pjθj + pjθi, piθi + pjθj + piθj) − piθi − pjθj = min(pjθi, piθj).",
                "We will show by induction that ∆(S) = 0 if |S| > 2.",
                "For |S| = 3, let S = {i, j, k}.",
                "Without loss of generality, assume θi pi ≥ θj pj ≥ θk pk .",
                "So, ∆(S) = C(S) − ∆({i, j}) − ∆({j, k}) − ∆({i, k})−∆({i})−∆({j})−∆({k}) = C(S)−piθj −pjθk − piθk − piθi − pjθj − pkθk = C(S) − C(S) = 0.",
                "Now, assume for T S, ∆(T) = 0 if |T| > 2.",
                "Without loss of generality assume that σ to be the identity mapping.",
                "Now, ∆(S) = C(S) −   T S ∆(T) = C(S) −   i∈S   j∈S:j<i ∆({i, j}) −   i∈S ∆({i}) = C(S) −   i∈S   j∈S:j<i pjθi −   i∈S piθi = C(S) − C(S) = 0.",
                "This proves that ∆(S) = 0 if |S| > 2.",
                "Using the Shapley value formula now, SVi =   S⊆N:i∈S ∆(S) |S| = ∆({i}) + 1 2   j∈N:j=i ∆({i, j}) = piθi + 1 2 ¡  j<i ∆({i, j}) +   j>i ∆({i, j})¢ = piθi + 1 2 ¡  j<i pjθi +   j>i piθj¢= piθi + 1 2 ¡Li + Ri¢. 4.",
                "AXIOMATICCHARACTERIZATIONOF THE SHAPLEY VALUE In this section, we will define serveral axioms on fairness and characterize the Shapley value using them.",
                "For a given q ∈ Q, we will denote ψ(q) as the set of allocations from allocation rule ψ.",
                "Also, we will denote the cost share vector associated with an allocation rule (σ, t) as π and that with allocation rule (σ , t ) as π etc. 4.1 The Fairness Axioms We will define three types of fairness axioms: (i) related to efficiency, (ii) related to equity, and (iii) related to independence.",
                "Efficiency Axioms We define two types of efficiency axioms.",
                "One related to efficiency which states that an efficient ordering should be selected and the transfers of jobs should add up to zero (budget balance).",
                "Definition 1.",
                "An allocation rule ψ satisfies efficiency if for every q ∈ Q and (σ, t) ∈ ψ(q), (σ, t) is an efficient allocation. 234 The second axiom related to efficiency says that the allocation rule should not discriminate between two allocations which are equivalent to each other in terms of cost shares of jobs.",
                "Definition 2.",
                "An allocation rule ψ satisfies Pareto indifference if for every q ∈ Q, (σ, t) ∈ ψ(q), and (σ , t ) ∈ Σ(q), we have ¡πi = πi ∀ i ∈ N¢⇒ ¡(σ , t ) ∈ ψ(q)¢.",
                "An implication of Pareto indifference axiom and Lemma 2 is that for every efficient ordering there is some set of transfers of jobs such that it is part of an efficient rule and the cost share of a job in all these allocations are same.",
                "Equity Axioms How should the cost be shared between two jobs if the jobs have some kind of similarity between them?",
                "Equity axioms provide us with fairness properties which help us answer this question.",
                "We provide five such axioms.",
                "Some of these axioms (for example anonymity, equal treatment of equals) are standard in the literature, while some are new.",
                "We start with a well known equity axiom called anonymity.",
                "Denote ρ : N → N as a permutation of elements in N. Let ρ(σ, t) denote the allocation obtained by permuting elements in σ and t according to ρ.",
                "Similarly, let ρ(p, θ) denote the new list of (p, θ) obtained by permuting elements of p and θ according to ρ.",
                "Our first equity axiom states that allocation rules should be immune to such permutation of data.",
                "Definition 3.",
                "An allocation rule ψ satisfies anonymity if for all q ∈ Q, (σ, t) ∈ ψ(q) and every permutation ρ, we then ρ(σ, t) ∈ ψ(N, ρ(q)).",
                "The next equity axiom is classical in literature and says that two similar jobs should be compensated such that their cost shares are equal.",
                "This implies that if all the jobs are of same type, then jobs should equally share the total system cost.",
                "Definition 4.",
                "An allocation rule ψ satisfies equal treatment of equals (ETE) if for all q ∈ Q, (σ, t) ∈ ψ(q), i, j ∈ N, then ¡pi = pj; θi = θj¢⇒ ¡πi = πj¢.",
                "ETE directs us to share costs equally between jobs if they are of the same per unit waiting cost and processing time.",
                "But it is silent about the cost shares of two jobs i and j which satisfy θi pi = θj pj .",
                "We introduce a new axiom for this.",
                "If an efficient rule chooses σ such that σi < σj for some i, j ∈ N, then job i is inflicting a cost of piθj on job j and job j is inflicting zero cost on job i.",
                "Define for some γ ≥ 0, S(γ) = {i ∈ N : γi = γ}.",
                "In an efficient rule, the elements in S(γ) can be ordered in any manner (in |S(γ)|! ways).",
                "If i, j ∈ S(γ) then we have pjθi = piθj.",
                "Probability of σi < σj is 1 2 and so is the probability of σi > σj.",
                "The expected cost i inflicts on j is 1 2 piθj and j inflicts on i is 1 2 pjθi.",
                "Our next fairness axiom says that i and j should each be responsible for their own processing cost and this expected cost they inflict on each other.",
                "Arguing for every pair of jobs i, j ∈ S(γ), we establish a bound on the cost share of jobs in S(γ).",
                "We impose this as an equity axiom below.",
                "Definition 5.",
                "An allocation rule satisfies expected cost bound (ECB) if for all q ∈ Q, (σ, t) ∈ ψ(q) with π being the resulting cost share, for any γ ≥ 0, and for every i ∈ S(γ), we have πi ≥ piθi + 1 2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢.",
                "The central idea behind this axiom is that of expected cost inflicted.",
                "If an allocation rule chooses multiple allocations, we can assign equal probabilities of selecting one of the allocations.",
                "In that case, the expected cost inflicted by a job i on another job j in the allocation rule can be calculated.",
                "Our axiom says that the cost share of a job should be at least its own processing cost and the total expected cost it inflicts on others.",
                "Note that the above bound poses no constraints on how the costs are shared among different groups.",
                "Also observe that if S(γ) contains just one job, ECB says that job should at least bear its own processing cost.",
                "A direct consequence of ECB is the following lemma.",
                "Lemma 4.",
                "Let ψ be an efficient rule which satisfies ECB.",
                "For a q ∈ Q if S(γ) = N, then for any (σ, t) ∈ ψ(q) which gives a cost share of π, πi = piθi + 1 2 ¡Li + Ri¢∀ i ∈ N. Proof.",
                "From ECB, we get πi ≥ piθi+1 2 ¡Li+Ri¢∀ i ∈ N. Assume for contradiction that there exists j ∈ N such that πj > pjθj + 1 2 ¡Li + Ri¢.",
                "Using efficiency and the fact that £i∈N Li = £i∈N Ri, we get £i∈N πi = C(N) > £i∈N piθi + 1 2 £i∈N ¡Li + Ri¢ = C(N).",
                "This gives us a contradiction.",
                "Next, we introduce an axiom about sharing the transfer of a job between a set of jobs.",
                "In particular, if the last job quits the system, then the ordering need not change.",
                "But the transfer to the last job needs to be shared between the other jobs.",
                "This should be done in proportion to their processing times because every job influenced the last job based on its processing time.",
                "Definition 6.",
                "An allocation rule ψ satisfies proportionate responsibility of p (PRp) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = |N|, q = (N \\ {k}, p , θ ) ∈ Q, such that for all i ∈ N\\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk pi £j=k pj .",
                "An analogous fairness axiom results if we remove the job from the beginning of the queue.",
                "Since the presence of the first job influenced each job depending on their θ values, its transfer needs to be shared in proportion to θ values.",
                "Definition 7.",
                "An allocation rule ψ satisfies proportionate responsibility of θ (PRθ) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = 1, q = (N \\{k}, p , θ ) ∈ Q, such that for all i ∈ N \\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk θi £j=k θj .",
                "The proportionate responsibility axioms are generalizations of equal responsibility axioms introduced by Maniquet [15]. 235 Independence Axioms The waiting cost of a job does not depend on the per unit waiting cost of its preceding jobs.",
                "Similarly, the waiting cost inflicted by a job to its following jobs is independent of the processing times of the following jobs.",
                "These independence properties should be carried over to the cost sharing rules.",
                "This gives us two independence axioms.",
                "Definition 8.",
                "An allocation rule ψ satisfies independence of preceding jobs θ (IPJθ) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk < γk, pk = pk, then for all j ∈ N such that σj > σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ).",
                "Definition 9.",
                "An allocation rule ψ satisfies independence of following jobs p (IFJp) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk > γk, θk = θk, then for all j ∈ N such that σj < σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ). 4.2 The Characterization Results Having stated the fairness axioms, we propose three different ways to characterize the Shapley value rule using these axioms.",
                "All our characterizations involve efficiency and ECB.",
                "But if we have IPJθ, we either need IFJp or PRp.",
                "Similarly if we have IFJp, we either need IPJθ or PRθ.",
                "Proposition 1.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and IFJp is a rule implied by the Shapley value rule.",
                "Proof.",
                "Define for any i, j ∈ N, θi j = γipj and pi j = θj γi .",
                "Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider the following q = (N, p , θ ) corresponding to job i with pj = pj if j ≤ i and pj = pi j if j > i, θj = θi j if j < i and θj = θj if j ≥ i.",
                "Observe that all jobs have the same γ: γi.",
                "By Lemma 2 and efficiency, (σ, t ) ∈ ψ(q ) for some set of transfers t .",
                "Using Lemma 4, we get cost share of i from (σ, t ) as πi = piθi + 1 2 ¡Li + Ri¢.",
                "Now, for any j < i, if we change θj to θj without changing processing time, the new γ of j is γj ≥ γi.",
                "Applying IPJθ, the cost share of job i should not change.",
                "Similarly, for any job j > i, if we change pj to pj without changing θj, the new γ of j is γj ≤ γi.",
                "Applying IFJp, the cost share of job i should not change.",
                "Applying this procedure for every j < i with IPJθ and for every j > i with IFJp, we reach q = (N, p, θ) and the payoff of i does not change from πi.",
                "Using this argument for every i ∈ N and using the expression for the Shapley value in Lemma 3, we get the Shapley value rule.",
                "It is possible to replace one of the independence axioms with an equity axiom on sharing the transfer of a job.",
                "This is shown in Propositions 2 and 3.",
                "Proposition 2.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and PRp is a rule implied by the Shapley value rule.",
                "Proof.",
                "As in the proof of Proposition 1, define θi j = γipj ∀ i, j ∈ N. Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider a queue with jobs in set K = {1, . . . , i, i + 1}, where i < n. Define q = (K, p, θ ), where θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ is an efficient ordering for q .",
                "By ECB and Lemma 4 the cost share of job i + 1 in any allocation rule in ψ must be πi+1 = pi+1θi+1 + 1 2 ¡£j<i+1 pjθi+1¢.",
                "Now, consider q = (K, p, θ ) such that θj = θi j ∀ j ≤ i and θi+1 = θi+1. σ remains an efficient ordering in q and by IPJθ the cost share of i + 1 remains πi+1.",
                "In q = (K \\ {i + 1}, p, θ ), we can calculate the cost share of job i using ECB and Lemma 4 as πi = piθi + 1 2 £j<i pjθi.",
                "So, using PRp we get the new cost share of job i in q as πi = πi + ti+1 pi j<i+1 pj = piθi + 1 2 ¡£j<i pjθi + piθi+1¢.",
                "Now, we can set K = K ∪ {i + 2}.",
                "As before, we can find cost share of i + 2 in this queue as πi+2 = pi+2θi+2 + 1 2 ¡£j<i+2 pjθi+2¢.",
                "Using PRp we get the new cost share of job i in the new queue as πi = piθi + 1 2 ¡£j<i pjθi + piθi+1 + piθi+2¢.",
                "This process can be repeated till we add job n at which point cost share of i is piθi + 1 2 ¡£j<i pjθi + £j>i piθj¢.",
                "Then, we can adjust the θ of preceding jobs of i to their original value and applying IPJθ, the payoffs of jobs i through n will not change.",
                "This gives us the Shapley values of jobs i through n. Setting i = 1, we get cost shares of all the jobs from ψ as the Shapley value.",
                "Proposition 3.",
                "Any efficient rule ψ that satisfies ECB, IFJp, and PRθ is a rule implied by the Shapley value rule.",
                "Proof.",
                "The proof mirrors the proof of Proposition 2.",
                "We provide a short sketch.",
                "Analogous to the proof of Proposition 2, θs are kept equal to original data and processing times are initialized to pi+1 j .",
                "This allows us to use IFJp.",
                "Also, contrast to Proposition 2, we consider K = {i, i + 1, . . . , n} and repeatedly add jobs to the beginning of the queue maintaining the same efficient ordering.",
                "So, we add the cost components of preceding jobs to the cost share of jobs in each iteration and converge to the Shapley value rule.",
                "The next proposition shows that the Shapley value rule satisfies all the fairness axioms discussed.",
                "Proposition 4.",
                "The Shapley value rule satisfies efficiency, pareto indifference, anonymity, ETE, ECB, IPJθ, IFJp, PRp, and PRθ.",
                "Proof.",
                "The Shapley value rule chooses an efficient ordering and by definition the payments add upto zero.",
                "So, it satisfies efficiency.",
                "The Shapley value assigns same cost share to a job irrespective of the efficient ordering chosen.",
                "So, it is pareto indifferent.",
                "The Shapley value is anonymous because the particular index of a job does not effect his ordering or cost share.",
                "For ETE, consider two jobs i, j ∈ N such that pi = pj and θi = θj.",
                "Without loss of generality assume the efficient ordering to be 1, . . . , i, . . . , j, . . . , n. Now, the Shapley value of job i is 236 SVi = piθi + 1 2 ¡Li + Ri¢(From Lemma 3) = pjθj + 1 2 ¡Lj + Rj¢− 1 2 ¡Li − Lj + Ri − Rj¢ = SVj − 1 2 ¡   i<k≤j piθk −   i≤k<j pkθi¢ = SVj − 1 2   i<k≤j (piθk − pkθi) (Using pi = pj and θi = θj) = SVj (Using θk pk = θi pi for all i ≤ k ≤ j).",
                "The Shapley value satisfies ECB by its expression in Lemma 3.",
                "Consider any job i, in an efficient ordering σ, if we increase the value of γj for some j = i such that σj > σi, then the set Pi ( preceding jobs) does not change in the new efficient ordering.",
                "If γj is changed such that pj remains the same, then the expression £j∈Pi θipj is unchanged.",
                "If (p, θ) values of no other jobs are changed, then the Shapley value is unchanged by increasing γj for some j ∈ Pi while keeping pj unchanged.",
                "Thus, the Shapley value rule satisfies IPJθ.",
                "An analogous argument shows that the Shapley value rule satisfies IFJp.",
                "For PRp, assume without loss of generality that jobs are ordered 1, . . . , n in an efficient ordering.",
                "Denote the transfer of job i = n due to the Shapley value with set of jobs N and set of jobs N \\ {n} as ti and ti respectively.",
                "Transfer of last job is tn = 1 2 θn £j<n pj.",
                "Now, ti = 1 2 ¡θi   j<i pj − pi   j>i θj¢ = 1 2 ¡θi   j<i pj − pi   j>i:j=n θj¢− 1 2 piθn = ti − 1 2 θn   j<n pj pi £j<n pj = ti − tn pi £j<n pj .",
                "A similar argument shows that the Shapley value rule satisfies PRθ.",
                "These series of propositions lead us to our main result.",
                "Theorem 1.",
                "Let ψ be an allocation rule.",
                "The following statements are equivalent: 1) For each q ∈ Q, ψ(q) selects all the allocation assigning jobs cost shares implied by the Shapley value. 2) ψ satisfies efficiency, ECB, IFJp, and IPJθ. 3) ψ satisfies efficiency, ECB, IFJp, and PRθ. 4) ψ satisfies efficiency, ECB, PRp, and IPJθ.",
                "Proof.",
                "The proof follows from Propositions 1, 2, 3, and 4. 5.",
                "DISCUSSIONS 5.1 A Reasonable Class of Cost Sharing Mechanisms In this section, we will define a reasonable class of cost sharing mechanisms.",
                "We will show how these reasonable mechanisms lead to the Shapley value mechanism.",
                "Definition 10.",
                "An allocation rule ψ is reasonable if for all q ∈ Q and (σ, t) ∈ ψ(q) we have for all i ∈ N, ti = α ¡θi   j∈Pi(σ) pj − pi   j∈Fi(σ) θj¢∀ i ∈ N, where 0 ≤ α ≤ 1.",
                "The reasonable cost sharing mechanism says that every job should be paid a constant fraction of the difference between the waiting cost he incurs and the waiting cost he inflicts on other jobs.",
                "If α = 0, then every job bears its own cost.",
                "If α = 1, then every job gets compensated for its waiting cost but compensates others for the cost he inflicts on others.",
                "The Shapley value rule comes as a result of ETE as shown in the following proposition.",
                "Proposition 5.",
                "Any efficient and reasonable allocation rule ψ that satisfies ETE is a rule implied by the Shapley value rule.",
                "Proof.",
                "Consider a q ∈ Q in which pi = pj and θi = θj.",
                "Let (σ, t) ∈ ψ(q) and π be the resulting cost shares.",
                "From ETE, we get, πi = πj ⇒ ci(σ) − ti = cj(σ) − tj ⇒ piθi + (1 − α)Li + αRi = pjθj + (1 − α)Lj + αRj (Since ψ is efficient and reasonable) ⇒ (1 − α)(Li − Lj) = α(Rj − Ri) (Using pi = pj, θi = θj) ⇒ 1 − α = α (Using Li − Lj = Rj − Ri = 0) ⇒ α = 1 2 .",
                "This gives us the Shapley value rule by Lemma 3. 5.2 Results on Envy Chun [2] discusses a fariness condition called no-envy for the case when processing times of all jobs are unity.",
                "Definition 11.",
                "An allocation rule satisfies no-envy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tj, where π is the cost share from allocation rule (σ, t) and σij is the ordering obtaining by swapping i and j.",
                "From the result in [2], the Shapley value rule does not satisfy no-envy in our model also.",
                "To overcome this, Chun [2] introduces the notion of adjusted no-envy, which he shows is satisfied in the Shapley value rule when processing times of all jobs are unity.",
                "Here, we show that adjusted envy continues to hold in the Shapley value rule in our model (when processing times need not be unity).",
                "As before denote σij be an ordering where the position of i and j is swapped from an ordering σ.",
                "For adjusted noenvy, if (σ, t) is an allocation for some q ∈ Q, let tij be the 237 transfer of job i when the transfer of i is calculated with respect to ordering σij .",
                "Observe that an allocation may not allow for calculation of tij .",
                "For example, if ψ is efficient, then tij cannot be calculated if σij is also not efficient.",
                "For simplicity, we state the definition of adjusted no-envy to apply to all such rules.",
                "Definition 12.",
                "An allocation rule satisfies adjusted noenvy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tij i .",
                "Proposition 6.",
                "The Shapley value rule satisfies adjusted no-envy.",
                "Proof.",
                "Without loss of generality, assume efficient ordering of jobs is: 1, . . . , n. Consider two jobs i and i + k. From Lemma 3, SVi = piθi + 1 2 ¡  j<i θipj +   j>i θjpi¢.",
                "Let ˆπi be the cost share of i due to adjusted transfer tii+k i in the ordering σii+k . ˆπi = ci(σii+k ) − tii+k i = piθi + 1 2 ¡  j<i θipj + θipi+k +   i<j<i+k θipj +   j>i θjpi − θi+kpi −   i<j<i+k θjpi¢ = SVi + 1 2   i<j≤i+k ¡θipj − θjpi¢ ≥ SVi (Using the fact that θi pi ≥ θj pj for i < j). 6.",
                "CONCLUSION We studied the problem of sharing costs for a job scheduling problem on a single server, when jobs have processing times and unit time waiting costs.",
                "We took a cooperative game theory approach and show that the famous the Shapley value rule satisfies many nice fairness properties.",
                "We characterized the Shapley value rule using different intuitive fairness axioms.",
                "In future, we plan to further simplify some of the fairness axioms.",
                "Some initial simplifications already appear in [16], where we provide an alternative axiom to ECB and also discuss the implication of transfers between jobs (in stead of transfers from jobs to a central server).",
                "We also plan to look at cost sharing mechanisms other than the Shapley value.",
                "Investigating the strategic power of jobs in such mechanisms is another line of future research. 7.",
                "REFERENCES [1] Youngsub Chun.",
                "A Note on Maniquets Characterization of the Shapley Value in Queueing Problems.",
                "Working Paper, Rochester University, 2004. [2] Youngsub Chun.",
                "No-envy in Queuing Problems.",
                "Working Paper, Rochester University, 2004. [3] Imma Curiel, Herbert Hamers, and Flip Klijn.",
                "Sequencing Games: A Survey.",
                "In Peter Borm and Hans Peters, editors, Chapter in Game Theory.",
                "Theory and Decision Library, Kulwer Academic Publishers, 2002. [4] Imma Curiel, Giorgio Pederzoli, and Stef Tijs.",
                "Sequencing Games.",
                "European Journal of Operational Research, 40:344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs, and Bart Veltman.",
                "Sequencing and Cooperation.",
                "Operations Research, 42(3):566-568, May-June 1994. [6] Nikhil R. Devanur, Milena Mihail, and Vijay V. Vazirani.",
                "Strategyproof Cost-sharing Mechanisms for Set Cover and Facility Location Games.",
                "In Proceedings of Fourth Annual ACM Conferece on Electronic Commerce, 2003. [7] Robert J. Dolan.",
                "Incentive Mechanisms for Priority Queueing Problems.",
                "Bell Journal of Economics, 9:421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou, and Scott Shenker.",
                "Sharing the Cost of Multicast Transmissions.",
                "In Proceedings of Thirty-Second Annual ACM Symposium on Theory of Computing, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs, and Peter Borm.",
                "The Split Core for Sequencing Games.",
                "Games and Economic Behavior, 15:165-176, 1996. [10] John C. Harsanyi.",
                "Contributions to Theory of Games IV, chapter A Bargaining Model for Cooperative n-person Games.",
                "Princeton University Press, 1959.",
                "Editors: A. W. Tucker, R. D. Luce. [11] Kamal Jain and Vijay Vazirani.",
                "Applications of Approximate Algorithms to Cooperative Games.",
                "In Proceedings of 33rd Symposium on Theory of Computing (STOC 01), 2001. [12] Kamal Jain and Vijay Vazirani.",
                "Equitable Cost Allocations via Primal-Dual Type Algorithms.",
                "In Proceedings of 34th Symposium on Theory of Computing (STOC 02), 2002. [13] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without a Completely Specified Initial Order.",
                "Report in Statistics and Operations Research, pages 1-17, 2002.",
                "Report 02-04. [14] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without Initial Order.",
                "Working Paper, Universitat Aut´onoma de Barcelona, July 2004. [15] Franois Maniquet.",
                "A Characterization of the Shapley Value in Queueing Problems.",
                "Journal of Economic Theory, 109:90-103, 2003. [16] Debasis Mishra and Bharath Rangarajan.",
                "Cost sharing in a job scheduling problem.",
                "Working Paper, CORE, 2005. [17] Manipushpak Mitra.",
                "Essays on First Best Implementable Incentive Problems.",
                "Ph.D. Thesis, Indian Statistical Institute, New Delhi, 2000. [18] Manipushpak Mitra.",
                "Mechanism design in queueing problems.",
                "Economic Theory, 17(2):277-305, 2001. [19] Manipushpak Mitra.",
                "Achieving the first best in sequencing problems.",
                "Review of Economic Design, 7:75-91, 2002. [20] Herv´e Moulin.",
                "Handbook of Social Choice and Welfare, chapter Axiomatic Cost and Surplus Sharing.",
                "North-Holland, 2002.",
                "Publishers: Arrow, Sen, Suzumura. [21] Herv´e Moulin.",
                "On Scheduling Fees to Prevent 238 Merging, Splitting and Transferring of Jobs.",
                "Working Paper, Rice University, 2004. [22] Herv´e Moulin.",
                "Split-proof Probabilistic Scheduling.",
                "Working Paper, Rice University, 2004. [23] Herv´e Moulin and Rakesh Vohra.",
                "Characterization of Additive Cost Sharing Methods.",
                "Economic Letters, 80:399-407, 2003. [24] Martin P´al and ´Eva Tardos.",
                "Group Strategyproof Mechanisms via Primal-Dual Algorithms.",
                "In Proceedings of the 44th Annual IEEE Symposium on the Foundations of Computer Science (FOCS 03), 2003. [25] Lloyd S. Shapley.",
                "Contributions to the Theory of Games II, chapter A Value for n-person Games, pages 307-317.",
                "Annals of Mathematics Studies, 1953.",
                "Ediors: H. W. Kuhn, A. W. Tucker. [26] Wayne E. Smith.",
                "Various Optimizers for Single-Stage Production.",
                "Naval Research Logistics Quarterly, 3:59-66, 1956. [27] Jeroen Suijs.",
                "On incentive compatibility and budget balancedness in public decision making.",
                "Economic Design, 2, 2002. 239"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        }
    }
}