{
    "id": "J-51",
    "original_text": "Complexity of (Iterated) Dominance∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT We study various computational aspects of solving games using dominance and iterated dominance. We first study both strict and weak dominance (not iterated), and show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve. We then move on to iterated dominance. We show that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance. This allows us to also show that determining whether there is a path that leads to a unique solution is NP-complete. Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].) Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time. We then study what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies. First, we show that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak dominance). Then, we show that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3). Finally, we study Bayesian games. We show that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak ∗ This material is based upon work supported by the National Science Foundation under ITR grants IIS-0121678 and IIS-0427858, and a Sloan Fellowship. dominance). Finally, we show that iterated dominance using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak dominance). Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1. INTRODUCTION In multiagent systems with self-interested agents, the optimal action for one agent may depend on the actions taken by other agents. In such settings, the agents require tools from game theory to rationally decide on an action. Game theory offers various formal models of strategic settings-the best-known of which is a game in normal (or matrix) form, specifying a utility (payoff) for each agent for each combination of strategies that the agents choose-as well as solution concepts, which, given a game, specify which outcomes are reasonable (under various assumptions of rationality and common knowledge). Probably the best-known (and certainly the most-studied) solution concept is that of Nash equilibrium. A Nash equilibrium specifies a strategy for each player, in such a way that no player has an incentive to (unilaterally) deviate from the prescribed strategy. Recently, numerous papers have studied computing Nash equilibria in various settings [9, 4, 12, 3, 13, 14], and the complexity of constructing a Nash equilibrium in normal form games has been labeled one of the two most important open problems on the boundary of P today [20]. The problem of computing solutions according to the perhaps more elementary solution concepts of dominance and iterated dominance has received much less attention. (After an early short paper on an easy case [11], the main computational study of these concepts has actually taken place in a paper in the game theory community [7].1 ) A strategy strictly dominates another strategy if it performs strictly 1 This is not to say that computer scientists have ignored 88 better against all vectors of opponent strategies, and weakly dominates it if it performs at least as well against all vectors of opponent strategies, and strictly better against at least one. The idea is that dominated strategies can be eliminated from consideration. In iterated dominance, the elimination proceeds in rounds, and becomes easier as more strategies are eliminated: in any given round, the dominating strategy no longer needs to perform better than or as well as the dominated strategy against opponent strategies that were eliminated in earlier rounds. Computing solutions according to (iterated) dominance is important for at least the following reasons: 1) it can be computationally easier than computing (for instance) a Nash equilibrium (and therefore it can be useful as a preprocessing step in computing a Nash equilibrium), and 2) (iterated) dominance requires a weaker rationality assumption on the players than (for instance) Nash equilibrium, and therefore solutions derived according to it are more likely to occur. In this paper, we study some fundamental computational questions concerning dominance and iterated dominance, including how hard it is to check whether a given strategy can be eliminated by each of the variants of these notions. The rest of the paper is organized as follows. In Section 2, we briefly review definitions and basic properties of normal form games, strict and weak dominance, and iterated strict and weak dominance. In the remaining sections, we study computational aspects of dominance and iterated dominance. In Section 3, we study one-shot (not iterated) dominance. In Section 4, we study iterated dominance. In Section 5, we study dominance and iterated dominance when the dominating strategy can only place probability on a few pure strategies. Finally, in Section 6, we study dominance and iterated dominance in Bayesian games. 2. DEFINITIONS AND BASIC PROPERTIES In this section, we briefly review normal form games, as well as dominance and iterated dominance (both strict and weak). An n-player normal form game is defined as follows. Definition 1. A normal form game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of pure strategies Σi and a utility function ui : Σ1 × Σ2 × . . . × Σn → R (where ui(σ1, σ2, . . . , σn) denotes player is utility when each player j plays action σj). The two main notions of dominance are defined as follows. Definition 2. Player is strategy σi is said to be strictly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i). Player is strategy σi is said to be weakly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) ≥ ui(σi, σ−i), and for at least one vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i). In this definition, it is sometimes allowed for the dominating strategy σi to be a mixed strategy, that is, a probability distribution over pure strategies. In this case, the utilities in dominance altogether. For example, simple dominance checks are sometimes used as a subroutine in searching for Nash equilibria [21]. the definition are the expected utilities.2 There are other notions of dominance, such as very weak dominance (in which no strict inequality is required, so two strategies can dominate each other), but we will not study them here. When we are looking at the dominance relations for player i, the other players (−i) can be thought of as a single player.3 Therefore, in the rest of the paper, when we study one-shot (not iterated) dominance, we will focus without loss of generality on two-player games.4 In two-player games, we will generally refer to the players as r (row) and c (column) rather than 1 and 2. In iterated dominance, dominated strategies are removed from the game, and no longer have any effect on future dominance relations. Iterated dominance can eliminate more strategies than dominance, as follows. σr may originally not dominate σr because the latter performs better against σc; but then, once σc is removed because it is dominated by σc, σr dominates σr, and the latter can be removed. For example, in the following game, R can be removed first, after which D is dominated. L R U 1, 1 0, 0 D 0, 1 1, 0 Either strict or weak dominance can be used in the definition of iterated dominance. We note that the process of iterated dominance is never helped by removing a dominated mixed strategy, for the following reason. If σi gives player i a higher utility than σi against mixed strategy σj for player j = i (and strategies σ−{i,j} for the other players), then for at least one pure strategy σj that σj places positive probability on, σi must perform better than σi against σj (and strategies σ−{i,j} for the other players). Thus, removing the mixed strategy σj does not introduce any new dominances. More detailed discussions and examples can be found in standard texts on microeconomics or game theory [17, 5]. We are now ready to move on to the core of this paper. 3. DOMINANCE (NOT ITERATED) In this section, we study the notion of one-shot (not iterated) dominance. As a first observation, checking whether a given strategy is strictly (weakly) dominated by some pure strategy is straightforward, by checking, for every pure strategy for that player, whether the latter strategy performs strictly better against all the opponents strategies (at least as well against all the opponents strategies, and strictly 2 The dominated strategy σi is, of course, also allowed to be mixed, but this has no technical implications for the paper: when we study one-shot dominance, we ask whether a given strategy is dominated, and it does not matter whether the given strategy is pure or mixed; when we study iterated dominance, there is no use in eliminating mixed strategies, as we will see shortly. 3 This player may have a very large strategy space (one pure strategy for every vector of pure strategies for the players that are being replaced). Nevertheless, this will not result in an increase in our representation size, because the original representation already had to specify utilities for each of these vectors. 4 We note that a restriction to two-player games would not be without loss of generality for iterated dominance. This is because for iterated dominance, we need to look at the dominated strategies of each individual player, so we cannot merge any players. 89 better against at least one).5 Next, we show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time by solving a single linear program. (Similar linear programs have been given before [18]; we present the result here for completeness, and because we will build on the linear programs given below in Theorem 6.) Proposition 1. Given the row players utilities, a subset Dr of the row players pure strategies Σr, and a distinguished strategy σ∗ r for the row player, we can check in time polynomial in the size of the game (by solving a single linear program of polynomial size) whether there exists some mixed strategy σr, that places positive probability only on strategies in Dr and dominates σ∗ r , both for strict and for weak dominance. Proof. Let pdr be the probability that σr places on dr ∈ Dr. We will solve a single linear program in each of our algorithms; linear programs can be solved in polynomial time [10]. For strict dominance, the question is whether the pdr can be set so that for every pure strategy for the column player σc ∈ Σc, dr∈Dr pdr ur(dr, σc) > ur(σ∗ r , σc). Because the inequality must be strict, we cannot solve this directly by linear programming. We proceed as follows. Because the game is finite, we may assume without loss of generality that all utilities are positive (if not, simply add a constant to all utilities.) Solve the following linear program: minimize dr∈Dr pdr such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc). If σ∗ r is strictly dominated by some mixed strategy, this linear program has a solution with objective value < 1. (The dominating strategy is a feasible solution with objective value exactly 1. Because no constraint is binding for this solution, we can reduce one of the probabilities slightly without affecting feasibility, thereby obtaining a solution with objective value < 1.) Moreover, if this linear program has a solution with objective value < 1, there is a mixed strategy strictly dominating σ∗ r , which can be obtained by taking the LP solution and adding the remaining probability to any strategy (because all the utilities are positive, this will add to the left side of any inequality, so all inequalities will become strict). For weak dominance, we can solve the following linear program: maximize σc∈Σc (( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc)) such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc); dr∈Dr pdr = 1. If σ∗ r is weakly dominated by some mixed strategy, then that mixed strategy is a feasible solution to this program with objective value > 0, because for at least one strategy σc ∈ Σc we have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0. On the other hand, if this program has a solution with objective value > 0, then for at least one strategy σc ∈ Σc we 5 Recall that the assumption of a single opponent (that is, the assumption of two players) is without loss of generality for one-shot dominance. must have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0, and thus the linear programs solution is a weakly dominating mixed strategy. 4. ITERATED DOMINANCE We now move on to iterated dominance. It is well-known that iterated strict dominance is path-independent [6, 19]that is, if we remove dominated strategies until no more dominated strategies remain, in the end the remaining strategies for each player will be the same, regardless of the order in which strategies are removed. Because of this, to see whether a given strategy can be eliminated by iterated strict dominance, all that needs to be done is to repeatedly remove strategies that are strictly dominated, until no more dominated strategies remain. Because we can check in polynomial time whether any given strategy is dominated (whether or not dominance by mixed strategies is allowed, as described in Section 3), this whole procedure takes only polynomial time. In the case of iterated dominance by pure strategies with two players, Knuth et al. [11] slightly improve on (speed up) the straightforward implementation of this procedure by keeping track of, for each ordered pair of strategies for a player, the number of opponent strategies that prevent the first strategy from dominating the second. Hereby the runtime for an m × n game is reduced from O((m + n)4 ) to O((m + n)3 ). (Actually, they only study very weak dominance (for which no strict inequalities are required), but the approach is easily extended.) In contrast, iterated weak dominance is known to be pathdependent.6 For example, in the following game, using iterated weak dominance we can eliminate M first, and then D, or R first, and then U. L M R U 1, 1 0, 0 1, 0 D 1, 1 1, 0 0, 0 Therefore, while the procedure of removing weakly dominated strategies until no more weakly dominated strategies remain can certainly be executed in polynomial time, which strategies survive in the end depends on the order in which we remove the dominated strategies. We will investigate two questions for iterated weak dominance: whether a given strategy is eliminated in some path, and whether there is a path to a unique solution (one pure strategy left per player). We will show that both of these problems are computationally hard. Definition 3. Given a game in normal form and a distinguished strategy σ∗ , IWD-STRATEGY-ELIMINATION asks whether there is some path of iterated weak dominance that eliminates σ∗ . Given a game in normal form, IWDUNIQUE-SOLUTION asks whether there is some path of iterated weak dominance that leads to a unique solution (one strategy left per player). The following lemma shows a special case of normal form games in which allowing for weak dominance by mixed strategies (in addition to weak dominance by pure strategies) does 6 There is, however, a restriction of weak dominance called nice weak dominance which is path-independent [15, 16]. For an overview of path-independence results, see Apt [1]. 90 not help. We will prove the hardness results in this setting, so that they will hold whether or not dominance by mixed strategies is allowed. Lemma 1. Suppose that all the utilities in a game are in {0, 1}. Then every pure strategy that is weakly dominated by a mixed strategy is also weakly dominated by a pure strategy. Proof. Suppose pure strategy σ is weakly dominated by mixed strategy σ∗ . If σ gets a utility of 1 against some opponent strategy (or vector of opponent strategies if there are more than 2 players), then all the pure strategies that σ∗ places positive probability on must also get a utility of 1 against that opponent strategy (or else the expected utility would be smaller than 1). Moreover, at least one of the pure strategies that σ∗ places positive probability on must get a utility of 1 against an opponent strategy that σ gets 0 against (or else the inequality would never be strict). It follows that this pure strategy weakly dominates σ. We are now ready to prove the main results of this section. Theorem 1. IWD-STRATEGY-ELIMINATION is NPcomplete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed. Proof. The problem is in NP because given a sequence of strategies to be eliminated, we can easily check whether this is a valid sequence of eliminations (even when dominance by mixed strategies is allowed, using Proposition 1). To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following IWD-STRATEGY-ELIMINATION instance. (In this instance, we will specify that certain strategies are uneliminable. A strategy σr can be made uneliminable, even when 0 and 1 are the only allowed utilities, by adding another strategy σr and another opponent strategy σc, so that: 1. σr and σr are the only strategies that give the row player a utility of 1 against σc. 2. σr and σr always give the row player the same utility. 3. σc is the only strategy that gives the column player a utility of 1 against σr, but otherwise σc always gives the column player utility 0. This makes it impossible to eliminate any of these three strategies. We will not explicitly specify the additional strategies to make the proof more legible.) In this proof, we will denote row player strategies by s, and column player strategies by t, to improve legibility. Let the row players pure strategy set be given as follows. For every variable v ∈ V , the row player has corresponding strategies s1 +v, s2 +v, s1 −v, s2 −v. Additionally, the row player has the following 2 strategies: s1 0 and s2 0, where s2 0 = σ∗ r (that is, it is the strategy we seek to eliminate). Finally, for every clause c ∈ C, the row player has corresponding strategies s1 c (uneliminable) and s2 c. Let the column players pure strategy set be given as follows. For every variable v ∈ V , the column player has a corresponding strategy tv. For every clause c ∈ C, the column player has a corresponding strategy tc, and additionally, for every literal l ∈ L that occurs in c, a strategy tc,l. For every variable v ∈ V , the column player has corresponding strategies t+v, t−v (both uneliminable). Finally, the column player has three additional strategies: t1 0 (uneliminable), t2 0, and t1. The utility function for the row player is given as follows: • ur(s1 +v, tv) = 0 for all v ∈ V ; • ur(s2 +v, tv) = 1 for all v ∈ V ; • ur(s1 −v, tv) = 1 for all v ∈ V ; • ur(s2 −v, tv) = 0 for all v ∈ V ; • ur(s1 +v, t1) = 1 for all v ∈ V ; • ur(s2 +v, t1) = 0 for all v ∈ V ; • ur(s1 −v, t1) = 0 for all v ∈ V ; • ur(s2 −v, t1) = 1 for all v ∈ V ; • ur(sb +v, t+v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sb −v, t−v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sl, t) = 0 otherwise for all l ∈ L and t ∈ S2; • ur(s1 0, tc) = 0 for all c ∈ C; • ur(s2 0, tc) = 1 for all c ∈ C; • ur(sb 0, t1 0) = 1 for all b ∈ {1, 2}; • ur(s1 0, t2 0) = 1; • ur(s2 0, t2 0) = 0; • ur(sb 0, t) = 0 otherwise for all b ∈ {1, 2} and t ∈ S2; • ur(sb c, t) = 0 otherwise for all c ∈ C and b ∈ {1, 2}; and the row players utility is 0 in every other case. The utility function for the column player is given as follows: • uc(s, tv) = 0 for all v ∈ V and s ∈ S1; • uc(s, t1) = 0 for all s ∈ S1; • uc(s2 l , tc) = 1 for all c ∈ C and l ∈ L where l ∈ c (literal l occurs in clause c); • uc(s2 l2 , tc,l1 ) = 1 for all c ∈ C and l1, l2 ∈ L, l1 = l2 where l2 ∈ c; • uc(s1 c, tc) = 1 for all c ∈ C; • uc(s2 c, tc) = 0 for all c ∈ C; • uc(sb c, tc,l) = 1 for all c ∈ C, l ∈ L, and b ∈ {1, 2}; • uc(s2, tc) = uc(s2, tc,l) = 0 otherwise for all c ∈ C and l ∈ L; and the column players utility is 0 in every other case. We now show that the two instances are equivalent. First, suppose there is a solution to the satisfiability instance: that is, a truth-value assignment to the variables in V such that all clauses are satisfied. Then, consider the following sequence of eliminations in our game: 1. For every variable v that is set to true in the assignment, eliminate tv (which gives the column player utility 0 everywhere). 2. Then, for every variable v that is set to true in the assignment, eliminate s2 +v using s1 +v (which is possible because tv has been eliminated, and because t1 has not been eliminated (yet)). 3. Now eliminate t1 (which gives the column player utility 0 everywhere). 4. Next, for every variable v that is set to false in the assignment, eliminate s2 −v using s1 −v (which is possible because t1 has been eliminated, and because tv has not been eliminated (yet)). 5. For every clause c which has the variable corresponding to one of its positive literals l = +v set to true in the assignment, eliminate tc using tc,l (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 6. For every clause c which has the variable corresponding to one of its negative literals l = −v set to false in the assignment, eliminate tc using tc,l 91 (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 7. Because the assignment satisfied the formula, all the tc have now been eliminated. Thus, we can eliminate s2 0 = σ∗ r using s1 0. It follows that there is a solution to the IWD-STRATEGY-ELIMINATION instance. Now suppose there is a solution to the IWD-STRATEGYELIMINATION instance. By Lemma 1, we can assume that all the dominances are by pure strategies. We first observe that only s1 0 can eliminate s2 0 = σ∗ r , because it is the only other strategy that gets the row player a utility of 1 against t1 0, and t1 0 is uneliminable. However, because s2 0 performs better than s1 0 against the tc strategies, it follows that all of the tc strategies must be eliminated. For each c ∈ C, the strategy tc can only be eliminated by one of the strategies tc,l (with the same c), because these are the only other strategies that get the column player a utility of 1 against s1 c, and s1 c is uneliminable. But, in order for some tc,l to eliminate tc, s2 l must be eliminated first. Only s1 l can eliminate s2 l , because it is the only other strategy that gets the row player a utility of 1 against tl, and tl is uneliminable. We next show that for every v ∈ V only one of s2 +v, s2 −v can be eliminated. This is because in order for s1 +v to eliminate s2 +v, tv needs to have been eliminated and t1, not (so tv must be eliminated before t1); but in order for s1 −v to eliminate s2 −v, t1 needs to have been eliminated and tv, not (so t1 must be eliminated before tv). So, set v to true if s2 +v is eliminated, and to false otherwise Because by the above, for every clause c, one of the s2 l with l ∈ c must be eliminated, it follows that this is a satisfying assignment to the satisfiability instance. Using Theorem 1, it is now (relatively) easy to show that IWD-UNIQUE-SOLUTION is also NP-complete under the same restrictions. Theorem 2. IWD-UNIQUE-SOLUTION is NP-complete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed. Proof. Again, the problem is in NP because we can nondeterministically choose the sequence of eliminations and verify whether it is correct. To show NP-hardness, we reduce an arbitrary IWD-STRATEGY-ELIMINATION instance to the following IWD-UNIQUE-SOLUTION instance. Let all the strategies for each player from the original instance remain part of the new instance, and let the utilities resulting from the players playing a pair of these strategies be the same. We add three additional strategies σ1 r , σ2 r , σ3 r for the row player, and three additional strategies σ1 c , σ2 c , σ3 c for the column player. Let the additional utilities be as follows: • ur(σr, σj c) = 1 for all σr /∈ {σ1 r , σ2 r , σ3 r } and j ∈ {2, 3}; • ur(σi r, σc) = 1 for all i ∈ {1, 2, 3} and σc /∈ {σ2 c , σ3 c }; • ur(σi r, σ2 c ) = 1 for all i ∈ {2, 3}; • ur(σ1 r , σ3 c ) = 1; • and the row players utility is 0 in all other cases involving a new strategy. • uc(σ3 r , σc) = 1 for all σc /∈ {σ1 c , σ2 c , σ3 c }; • uc(σ∗ r , σj c) = 1 for all j ∈ {2, 3} (σ∗ r is the strategy to be eliminated in the original instance); • uc(σi r, σ1 c ) = 1 for all i ∈ {1, 2}; • ur(σ1 r , σ2 c ) = 1; • ur(σ2 r , σ3 c ) = 1; • and the column players utility is 0 in all other cases involving a new strategy. We proceed to show that the two instances are equivalent. First suppose there exists a solution to the original IWDSTRATEGY-ELIMINATION instance. Then, perform the same sequence of eliminations to eliminate σ∗ r in the new IWD-UNIQUE-SOLUTION instance. (This is possible because at any stage, any weak dominance for the row player in the original instance is still a weak dominance in the new instance, because the two strategies utilities for the row player are the same when the column player plays one of the new strategies; and the same is true for the column player.) Once σ∗ r is eliminated, let σ1 c eliminate σ2 c . (It performs better against σ2 r .) Then, let σ1 r eliminate all the other remaining strategies for the row player. (It always performs better against either σ1 c or σ3 c .) Finally, σ1 c is the unique best response against σ1 r among the column players remaining strategies, so let it eliminate all the other remaining strategies for the column player. Thus, there exists a solution to the IWD-UNIQUE-SOLUTION instance. Now suppose there exists a solution to the IWD-UNIQUESOLUTION instance. By Lemma 1, we can assume that all the dominances are by pure strategies. We will show that none of the new strategies (σ1 r , σ2 r , σ3 r , σ1 c , σ2 c , σ3 c ) can either eliminate another strategy, or be eliminated before σ∗ r is eliminated. Thus, there must be a sequence of eliminations ending in the elimination of σ∗ r , which does not involve any of the new strategies, and is therefore a valid sequence of eliminations in the original game (because all original strategies perform the same against each new strategy). We now show that this is true by exhausting all possibilities for the first elimination before σ∗ r is eliminated that involves a new strategy. None of the σi r can be eliminated by a σr /∈ {σ1 r , σ2 r , σ3 r }, because the σi r perform better against σ1 c . σ1 r cannot eliminate any other strategy, because it always performs poorer against σ2 c . σ2 r and σ3 r are equivalent from the row players perspective (and thus cannot eliminate each other), and cannot eliminate any other strategy because they always perform poorer against σ3 c . None of the σj c can be eliminated by a σc /∈ {σ1 c , σ2 c , σ3 c }, because the σj c always perform better against either σ1 r or σ2 r . σ1 c cannot eliminate any other strategy, because it always performs poorer against either σ∗ r or σ3 r . σ2 c cannot eliminate any other strategy, because it always performs poorer against σ2 r or σ3 r . σ3 c cannot eliminate any other strategy, because it always performs poorer against σ1 r or σ3 r . Thus, there exists a solution to the IWDSTRATEGY-ELIMINATION instance. A slightly weaker version of the part of Theorem 2 concerning dominance by pure strategies only is the main result of Gilboa et al. [7]. (Besides not proving the result for dominance by mixed strategies, the original result was weaker because it required utilities {0, 1, 2, 3, 4, 5, 6, 7, 8} rather than just {0, 1} (and because of this, our Lemma 1 cannot be applied to it to get the result for mixed strategies).) 5. (ITERATED) DOMINANCE USING MIXED STRATEGIES WITH SMALL SUPPORTS When showing that a strategy is dominated by a mixed strategy, there are several reasons to prefer exhibiting a 92 dominating strategy that places positive probability on as few pure strategies as possible. First, this will reduce the number of bits required to specify the dominating strategy (and thus the proof of dominance can be communicated quicker): if the dominating mixed strategy places positive probability on only k strategies, then it can be specified using k real numbers for the probabilities, plus k log m (where m is the number of strategies for the player under consideration) bits to indicate which strategies are used. Second, the proof of dominance will be cleaner: for a dominating mixed strategy, it is typically (always in the case of strict dominance) possible to spread some of the probability onto any unused pure strategy and still have a dominating strategy, but this obscures which pure strategies are the ones that are key in making the mixed strategy dominating. Third, because (by the previous) the argument for eliminating the dominated strategy is simpler and easier to understand, it is more likely to be accepted. Fourth, the level of risk neutrality required for the argument to work is reduced, at least in the extreme case where dominance by a single pure strategy can be exhibited (no risk neutrality is required here). This motivates the following problem. Definition 4 (MINIMUM-DOMINATING-SET). We are given the row players utilities of a game in normal form, a distinguished strategy σ∗ for the row player, a specification of whether the dominance should be strict or weak, and a number k. We are asked whether there exists a mixed strategy σ for the row player that places positive probability on at most k pure strategies, and dominates σ∗ in the required sense. Unfortunately, this problem is NP-complete. Theorem 3. MINIMUM-DOMINATING-SET is NPcomplete, both for strict and for weak dominance. Proof. The problem is in NP because we can nondeterministically choose a set of at most k strategies to give positive probability, and decide whether we can dominate σ∗ with these k strategies as described in Proposition 1. To show NP-hardness, we reduce an arbitrary SET-COVER instance (given a set S, subsets S1, S2, . . . , Sr, and a number t, can all of S be covered by at most t of the subsets?) to the following MINIMUM-DOMINATING-SET instance. For every element s ∈ S, there is a pure strategy σs for the column player. For every subset Si, there is a pure strategy σSi for the row player. Finally, there is the distinguished pure strategy σ∗ for the row player. The row players utilities are as follows: ur(σSi , σs) = t + 1 if s ∈ Si; ur(σSi , σs) = 0 if s /∈ Si; ur(σ∗ , σs) = 1 for all s ∈ S. Finally, we let k = t. We now proceed to show that the two instances are equivalent. First suppose there exists a solution to the SET-COVER instance. Without loss of generality, we can assume that there are exactly k subsets in the cover. Then, for every Si that is in the cover, let the dominating strategy σ place exactly 1 k probability on the corresponding pure strategy σSi . Now, if we let n(s) be the number of subsets in the cover containing s (we observe that that n(s) ≥ 1), then for every strategy σs for the column player, the row players expected utility for playing σ when the column player is playing σs is u(σ, σs) = n(s) k (k + 1) ≥ k+1 k > 1 = u(σ∗ , σs). So σ strictly (and thus also weakly) dominates σ∗ , and there exists a solution to the MINIMUM-DOMINATING-SET instance. Now suppose there exists a solution to the MINIMUMDOMINATING-SET instance. Consider the (at most k) pure strategies of the form σSi on which the dominating mixed strategy σ places positive probability, and let T be the collection of the corresponding subsets Si. We claim that T is a cover. For suppose there is some s ∈ S that is not in any of the subsets in T . Then, if the column player plays σs, the row player (when playing σ) will always receive utility 0-as opposed to the utility of 1 the row player would receive for playing σ∗ , contradicting the fact that σ dominates σ∗ (whether this dominance is weak or strict). It follows that there exists a solution to the SET-COVER instance. On the other hand, if we require that the dominating strategy only places positive probability on a very small number of pure strategies, then it once again becomes easy to check whether a strategy is dominated. Specifically, to find out whether player is strategy σ∗ is dominated by a strategy that places positive probability on only k pure strategies, we can simply check, for every subset of k of player is pure strategies, whether there is a strategy that places positive probability only on these k strategies and dominates σ∗ , using Proposition 1. This requires only O(|Σi|k ) such checks. Thus, if k is a constant, this constitutes a polynomial-time algorithm. A natural question to ask next is whether iterated strict dominance remains computationally easy when dominating strategies are required to place positive probability on at most k pure strategies, where k is a small constant. (We have already shown in Section 4 that iterated weak dominance is hard even when k = 1, that is, only dominance by pure strategies is allowed.) Of course, if iterated strict dominance were path-independent under this restriction, computational easiness would follow as it did in Section 4. However, it turns out that this is not the case. Observation 1. If we restrict the dominating strategies to place positive probability on at most two pure strategies, iterated strict dominance becomes path-dependent. Proof. Consider the following game: 7, 1 0, 0 0, 0 0, 0 7, 1 0, 0 3, 0 3, 0 0, 0 0, 0 0, 0 3, 1 1, 0 1, 0 1, 0 Let (i, j) denote the outcome in which the row player plays the ith row and the column player plays the jth column. Because (1, 1), (2, 2), and (4, 3) are all Nash equilibria, none of the column players pure strategies will ever be eliminated, and neither will rows 1, 2, and 4. We now observe that randomizing uniformly over rows 1 and 2 dominates row 3, and randomizing uniformly over rows 3 and 4 dominates row 5. However, if we eliminate row 3 first, it becomes impossible to dominate row 5 without randomizing over at least 3 pure strategies. Indeed, iterated strict dominance turns out to be hard even when k = 3. Theorem 4. If we restrict the dominating strategies to place positive probability on at most three pure strategies, it becomes NP-complete to decide whether a given strategy can be eliminated using iterated strict dominance. 93 Proof. The problem is in NP because given a sequence of strategies to be eliminated, we can check in polynomial time whether this is a valid sequence of eliminations (for any strategy to be eliminated, we can check, for every subset of three other strategies, whether there is a strategy placing positive probability on only these three strategies that dominates the strategy to be eliminated, using Proposition 1). To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following two-player game. For every variable v ∈ V , the row player has strategies s+v, s−v, s1 v, s2 v, s3 v, s4 v, and the column player has strategies t1 v, t2 v, t3 v, t4 v. For every clause c ∈ C, the row player has a strategy sc, and the column player has a strategy tc, as well as, for every literal l occurring in c, an additional strategy tl c. The row player has two additional strategies s1 and s2. (s2 is the strategy that we are seeking to eliminate.) Finally, the column player has one additional strategy t1. The utility function for the row player is given as follows (where is some sufficiently small number): • ur(s+v, tj v) = 4 if j ∈ {1, 2}, for all v ∈ V ; • ur(s+v, tj v) = 1 if j ∈ {3, 4}, for all v ∈ V ; • ur(s−v, tj v) = 1 if j ∈ {1, 2}, for all v ∈ V ; • ur(s−v, tj v) = 4 if j ∈ {3, 4}, for all v ∈ V ; • ur(s+v, t) = ur(s−v, t) = 0 for all v ∈ V and t /∈ {t1 v, t2 v, t3 v, t4 v}; • ur(si v, ti v) = 13 for all v ∈ V and i ∈ {1, 2, 3, 4}; • ur(si v, t) = for all v ∈ V , i ∈ {1, 2, 3, 4}, and t = ti v; • ur(sc, tc) = 2 for all c ∈ C; • ur(sc, t) = 0 for all c ∈ C and t = tc; • ur(s1, t1) = 1 + ; • ur(s1, t) = for all t = t1; • ur(s2, t1) = 1; • ur(s2, tc) = 1 for all c ∈ C; • ur(s2, t) = 0 for all t /∈ {t1} ∪ {tc : c ∈ C}. The utility function for the column player is given as follows: • uc(si v, ti v) = 1 for all v ∈ V and i ∈ {1, 2, 3, 4}; • uc(s, ti v) = 0 for all v ∈ V , i ∈ {1, 2, 3, 4}, and s = si v; • uc(sc, tc) = 1 for all c ∈ C; • uc(sl, tc) = 1 for all c ∈ C and l ∈ L occurring in c; • uc(s, tc) = 0 for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c}; • uc(sc, tl c) = 1 + for all c ∈ C; • uc(sl , tl c) = 1 + for all c ∈ C and l = l occurring in c; • uc(s, tl c) = for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c, l = l }; • uc(s2, t1) = 1; • uc(s, t1) = 0 for all s = s2. We now show that the two instances are equivalent. First, suppose that there is a solution to the satisfiability instance. Then, consider the following sequence of eliminations in our game: 1. For every variable v that is set to true in the satisfying assignment, eliminate s+v with the mixed strategy σr that places probability 1/3 on s−v, probability 1/3 on s1 v, and probability 1/3 on s2 v. (The expected utility of playing σr against t1 v or t2 v is 14/3 > 4; against t3 v or t4 v, it is 4/3 > 1; and against anything else it is 2 /3 > 0. Hence the dominance is valid.) 2. Similarly, for every variable v that is set to false in the satisfying assignment, eliminate s−v with the mixed strategy σr that places probability 1/3 on s+v, probability 1/3 on s3 v, and probability 1/3 on s4 v. (The expected utility of playing σr against t1 v or t2 v is 4/3 > 1; against t3 v or t4 v, it is 14/3 > 4; and against anything else it is 2 /3 > 0. Hence the dominance is valid.) 3. For every c ∈ C, eliminate tc with any tl c for which l was set to true in the satisfying assignment. (This is a valid dominance because tl c performs better than tc against any strategy other than sl, and we eliminated sl in step 1 or in step 2.) 4. Finally, eliminate s2 with s1. (This is a valid dominance because s1 performs better than s2 against any strategy other than those in {tc : c ∈ C}, which we eliminated in step 3.) Hence, there is an elimination path that eliminates s2. Now, suppose that there is an elimination path that eliminates s2. The strategy that eventually dominates s2 must place most of its probability on s1, because s1 is the only other strategy that performs well against t1, which cannot be eliminated before s2. But, s1 performs significantly worse than s2 against any strategy tc with c ∈ C, so it follows that all these strategies must be eliminated first. Each strategy tc can only be eliminated by a strategy that places most of its weight on the corresponding strategies tl c with l ∈ c, because they are the only other strategies that perform well against sc, which cannot be eliminated before tc. But, each strategy tl c performs significantly worse than tc against sl, so it follows that for every clause c, for one of the literals l occurring in it, sl must be eliminated first. Now, strategies of the form tj v will never be eliminated because they are the unique best responses to the corresponding strategies sj v (which are, in turn, the best responses to the corresponding tj v). As a result, if strategy s+v (respectively, s−v) is eliminated, then its opposite strategy s−v (respectively, s+v) can no longer be eliminated, for the following reason. There is no other pure strategy remaining that gets a significant utility against more than one of the strategies t1 v, t2 v, t3 v, t4 v, but s−v (respectively, s+v) gets significant utility against all 4, and therefore cannot be dominated by a mixed strategy placing positive probability on at most 3 strategies. It follows that for each v ∈ V , at most one of the strategies s+v, s−v is eliminated, in such a way that for every clause c, for one of the literals l occurring in it, sl must be eliminated. But then setting all the literals l such that sl is eliminated to true constitutes a solution to the satisfiability instance. In the next section, we return to the setting where there is no restriction on the number of pure strategies on which a dominating mixed strategy can place positive probability. 6. (ITERATED) DOMINANCE IN BAYESIAN GAMES So far, we have focused on normal form games that are flatly represented (that is, every matrix entry is given ex94 plicitly). However, for many games, the flat representation is too large to write down explicitly, and instead, some representation that exploits the structure of the game needs to be used. Bayesian games, besides being of interest in their own right, can be thought of as a useful structured representation of normal form games, and we will study them in this section. In a Bayesian game, each player first receives privately held preference information (the players type) from a distribution, which determines the utility that that player receives for every outcome of (that is, vector of actions played in) the game. After receiving this type, the player plays an action based on it.7 Definition 5. A Bayesian game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of actions Ai, a (finite) type space Θi with a probability distribution πi over it, and a utility function ui : Θi × A1 × A2 × . . . × An → R (where ui(θi, a1, a2, . . . , an) denotes player is utility when is type is θi and each player j plays action aj). A pure strategy in a Bayesian game is a mapping from types to actions, σi : Θi → Ai, where σi(θi) denotes the action that player i plays for type θi. Any vector of pure strategies in a Bayesian game defines an (expected) utility for each player, and therefore we can translate a Bayesian game into a normal form game. In this normal form game, the notions of dominance and iterated dominance are defined as before. However, the normal form representation of the game is exponentially larger than the Bayesian representation, because each player i has |Ai||Θi| distinct pure strategies. Thus, any algorithm for Bayesian games that relies on expanding the game to its normal form will require exponential time. Specifically, our easiness results for normal form games do not directly transfer to this setting. In fact, it turns out that checking whether a strategy is dominated by a pure strategy is hard in Bayesian games. Theorem 5. In a Bayesian game, it is NP-complete to decide whether a given pure strategy σr : Θr → Ar is dominated by some other pure strategy (both for strict and weak dominance), even when the row players distribution over types is uniform. Proof. The problem is in NP because it is easy to verify whether a candidate dominating strategy is indeed a dominating strategy. To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a set of clauses C using variables from V ) to the following Bayesian game. Let the row players action set be Ar = {t, f, 0} and let the column players action set be Ac = {ac : c ∈ C}. Let the row players type set be Θr = {θv : v ∈ V }, with a distribution πr that is uniform. Let the row players utility function be as follows: • ur(θv, 0, ac) = 0 for all v ∈ V and c ∈ C; • ur(θv, b, ac) = |V | for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b satisfies c; • ur(θv, b, ac) = −1 for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b does not satisfy c. 7 In general, a player can also receive a signal about the other players preferences, but we will not concern ourselves with that here. Let the pure strategy to be dominated be the one that plays 0 for every type. We show that the strategy is dominated by a pure strategy if and only if there is a solution to the satisfiability instance. First, suppose there is a solution to the satisfiability instance. Then, let σd r be given by: σd r (θv) = t if v is set to true in the solution to the satisfiability instance, and σd r (θv) = f otherwise. Then, against any action ac by the column player, there is at least one type θv such that either +v ∈ c and σd r (θv) = t, or −v ∈ c and σd r (θv) = f. Thus, the row players expected utility against action ac is at least |V | |V | − |V |−1 |V | = 1 |V | > 0. So, σd r is a dominating strategy. Now, suppose there is a dominating pure strategy σd r . This dominating strategy must play t or f for at least one type. Thus, against any ac by the column player, there must at least be some type θv for which ur(θv, σd r (θv), ac) > 0. That is, there must be at least one variable v such that setting v to σd r (θv) satifies c. But then, setting each v to σd r (θv) must satisfy all the clauses. So a satisfying assignment exists. However, it turns out that we can modify the linear programs from Proposition 1 to obtain a polynomial time algorithm for checking whether a strategy is dominated by a mixed strategy in Bayesian games. Theorem 6. In a Bayesian game, it can be decided in polynomial time whether a given (possibly mixed) strategy σr is dominated by some other mixed strategy, using linear programming (both for strict and weak dominance). Proof. We can modify the linear programs presented in Proposition 1 as follows. For strict dominance, again assuming without loss of generality that all the utilities in the game are positive, use the following linear program (in which pσr r (θr, ar) is the probability that σr, the strategy to be dominated, places on ar for type θr): minimize θr∈Θr ar∈Ar pr(ar) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) ≤ 1. Assuming that π(θr) > 0 for all θr ∈ Θr, this program will return an objective value smaller than |Θr| if and only if σr is strictly dominated, by reasoning similar to that done in Proposition 1. For weak dominance, use the following linear program: maximize ac∈Ac ( θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar)− θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar)) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) = 1. This program will return an objective value greater than 0 if and only if σr is weakly dominated, by reasoning similar to that done in Proposition 1. We now turn to iterated dominance in Bayesian games. Na¨ıvely, one might argue that iterated dominance in Bayesian 95 games always requires an exponential number of steps when a significant fraction of the games pure strategies can be eliminated, because there are exponentially many pure strategies. However, this is not a very strong argument because oftentimes we can eliminate exponentially many pure strategies in one step. For example, if for some type θr ∈ Θr we have, for all ac ∈ Ac, that u(θr, a1 r, ac) > u(θr, a2 r, ac), then any pure strategy for the row player which plays action a2 r for type θr is dominated (by the strategy that plays action a1 r for type θr instead)-and there are exponentially many (|Ar||Θr|−1 ) such strategies. It is therefore conceivable that we need only polynomially many eliminations of collections of a players strategies. However, the following theorem shows that this is not the case, by giving an example where an exponential number of iterations (that is, alternations between the players in eliminating strategies) is required. (We emphasize that this is not a result about computational complexity.) Theorem 7. Even in symmetric 3-player Bayesian games, iterated dominance by pure strategies can require an exponential number of iterations (both for strict and weak dominance), even with only three actions per player. Proof. Let each player i ∈ {1, 2, 3} have n + 1 types θ1 i , θ2 i , . . . , θn+1 i . Let each player i have 3 actions ai, bi, ci, and let the utility function of each player be defined as follows. (In the below, i + 1 and i + 2 are shorthand for i + 1(mod 3) and i + 2(mod 3) when used as player indices. Also, −∞ can be replaced by a sufficiently negative number. Finally, δ and should be chosen to be very small (even compared to 2−(n+1) ), and should be more than twice as large as δ.) • ui(θ1 i ; ai, ci+1, ci+2) = −1; • ui(θ1 i ; ai, si+1, si+2) = 0 for si+1 = ci+1 or si+2 = ci+2; • ui(θ1 i ; bi, si+1, si+2) = − for si+1 = ai+1 and si+2 = ai+2; • ui(θ1 i ; bi, si+1, si+2) = −∞ for si+1 = ai+1 or si+2 = ai+2; • ui(θ1 i ; ci, si+1, si+2) = −∞ for all si+1, si+2; • ui(θj i ; ai, si+1, si+2) = −∞ for all si+1, si+2 when j > 1; • ui(θj i ; bi, si+1, si+2) = − for all si+1, si+2 when j > 1; • ui(θj i ; ci, si+1, ci+2) = δ − − 1/2 for all si+1 when j > 1; • ui(θj i ; ci, si+1, si+2) = δ− for all si+1 and si+2 = ci+2 when j > 1. Let the distribution over each players types be given by p(θj i ) = 2−j (with the exception that p(θ2 i ) = 2−2 +2−(n+1) ). We will be interested in eliminating strategies of the following form: play bi for type θ1 i , and play one of bi or ci otherwise. Because the utility function is the same for any type θj i with j > 1, these strategies are effectively defined by the total probability that they place on ci,8 which is t2 i (2−2 + 2−(n+1) ) + n+1 j=3 tj i 2−j where tj i = 1 if player i 8 Note that the strategies are still pure strategies; the probability placed on an action by a strategy here is simply the sum of the probabilities of the types for which the strategy chooses that action. plays ci for type θj i , and 0 otherwise. This probability is different for any two different strategies of the given form, and we have exponentially many different strategies of the given form. For any probability q which can be expressed as t2(2−2 + 2−(n+1) ) + n+1 j=3 tj2−j (with all tj ∈ {0, 1}), let σi(q) denote the (unique) strategy of the given form for player i which places a total probability of q on ci. Any strategy that plays ci for type θ1 i or ai for some type θj i with j > 1 can immediately be eliminated. We will show that, after that, we must eliminate the strategies σi(q) with high q first, slowly working down to those with lower q. Claim 1: If σi+1(q ) and σi+2(q ) have not yet been eliminated, and q < q , then σi(q) cannot yet be eliminated. Proof: First, we show that no strategy σi(q ) can eliminate σi(q). Against σi+1(q ), σi+2(q ), the utility of playing σi(p) is − + p · δ − p · q /2. Thus, when q = 0, it is best to set p as high as possible (and we note that σi+1(0) and σi+2(0) have not been eliminated), but when q > 0, it is best to set p as low as possible because δ < q /2. Thus, whether q > q or q < q , σi(q) will always do strictly better than σi(q ) against some remaining opponent strategies. Hence, no strategy σi(q ) can eliminate σi(q). The only other pure strategies that could dominate σi(q) are strategies that play ai for type θ1 i , and bi or ci for all other types. Let us take such a strategy and suppose that it plays c with probability p. Against σi+1(q ), σi+2(q ) (which have not yet been eliminated), the utility of playing this strategy is −(q )2 /2 − /2 + p · δ − p · q /2. On the other hand, playing σi(q) gives − + q · δ − q · q /2. Because q > q, we have −(q )2 /2 < −q · q /2, and because δ and are small, it follows that σi(q) receives a higher utility. Therefore, no strategy dominates σi(q), proving the claim. Claim 2: If for all q > q, σi+1(q ) and σi+2(q ) have been eliminated, then σi(q) can be eliminated. Proof: Consider the strategy for player i that plays ai for type θ1 i , and bi for all other types (call this strategy σi); we claim σi dominates σi(q). First, if either of the other players k plays ak for θ1 k, then σi performs better than σi(q) (which receives −∞ in some cases). Because the strategies for player k that play ck for type θ1 k, or ak for some type θj k with j > 1, have already been eliminated, all that remains to check is that σi performs better than σi(q) whenever both of the other two players play strategies of the following form: play bk for type θ1 k, and play one of bk or ck otherwise. We note that among these strategies, there are none left that place probability greater than q on ck. Letting qk denote the probability with which player k plays ck, the expected utility of playing σi is −qi+1 · qi+2/2 − /2. On the other hand, the utility of playing σi(q) is − + q · δ − q · qi+2/2. Because qi+1 ≤ q, the difference between these two expressions is at least /2 − δ, which is positive. It follows that σi dominates σi(q). From Claim 2, it follows that all strategies of the form σi(q) will eventually be eliminated. However, Claim 1 shows that we cannot go ahead and eliminate multiple such strategies for one player, unless at least one other player simultaneously keeps up in the eliminated strategies: every time a σi(q) is eliminated such that σi+1(q) and σi+2(q) have not yet been eliminated, we need to eliminate one of the latter two strategies before any σi(q ) with q > q can be eliminated-that is, we need to alternate between players. Because there are exponentially many strategies of the form σi(q), it follows that iterated elimination will require exponentially many iterations to complete. 96 It follows that an efficient algorithm for iterated dominance (strict or weak) by pure strategies in Bayesian games, if it exists, must somehow be able to perform (at least part of) many iterations in a single step of the algorithm (because if each step only performed a single iteration, we would need exponentially many steps). Interestingly, Knuth et al. [11] argue that iterated dominance appears to be an inherently sequential problem (in light of their result that iterated very weak dominance is P-complete, that is, apparently not efficiently parallelizable), suggesting that aggregating many iterations may be difficult. 7. CONCLUSIONS While the Nash equilibrium solution concept is studied more and more intensely in our community, the perhaps more elementary concept of (iterated) dominance has received much less attention. In this paper we studied various computational aspects of this concept. We first studied both strict and weak dominance (not iterated), and showed that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve. We then moved on to iterated dominance. We showed that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance. This allowed us to also show that determining whether there is a path that leads to a unique solution is NP-complete. Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].) Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time. We then studied what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies. First, we showed that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak dominance). Then, we showed that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3). Finally, we studied dominance and iterated dominance in Bayesian games, as an example of a concise representation language for normal form games that is interesting in its own right. We showed that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak dominance). Finally, we showed that iterated dominance using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak dominance). There are various avenues for future research. First, there is the open question of whether it is possible to complete iterated dominance in Bayesian games in polynomial time (even though we showed that an exponential number of alternations between the players in eliminating strategies is sometimes required). Second, we can study computational aspects of (iterated) dominance in concise representations of normal form games other than Bayesian games-for example, in graphical games [9] or local-effect/action graph games [12, 2]. (How to efficiently perform iterated very weak dominance has already been studied for partially observable stochastic games [8].) Finally, we can ask whether some of the algorithms we described (such as the one for iterated strict dominance with mixed strategies) can be made faster. 8. REFERENCES [1] Krzysztof R. Apt. Uniform proofs of order independence for various strategy elimination procedures. Contributions to Theoretical Economics, 4(1), 2004. [2] Nivan A. R. Bhat and Kevin Leyton-Brown. Computing Nash equilibria of action-graph games. In UAI, 2004. [3] Ben Blum, Christian R. Shelton, and Daphne Koller. A continuation method for Nash equilibria in structured games. In IJCAI, 2003. [4] Vincent Conitzer and Tuomas Sandholm. Complexity results about Nash equilibria. In IJCAI, pages 765-771, 2003. [5] Drew Fudenberg and Jean Tirole. Game Theory. MIT Press, 1991. [6] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel. On the order of eliminating dominated strategies. Operations Research Letters, 9:85-89, 1990. [7] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel. The complexity of eliminating dominated strategies. Mathematics of Operation Research, 18:553-565, 1993. [8] Eric A. Hansen, Daniel S. Bernstein, and Shlomo Zilberstein. Dynamic programming for partially observable stochastic games. In AAAI, pages 709-715, 2004. [9] Michael Kearns, Michael Littman, and Satinder Singh. Graphical models for game theory. In UAI, 2001. [10] Leonid Khachiyan. A polynomial algorithm in linear programming. Soviet Math. Doklady, 20:191-194, 1979. [11] Donald E. Knuth, Christos H. Papadimitriou, and John N Tsitsiklis. A note on strategy elimination in bimatrix games. Operations Research Letters, 7(3):103-107, 1988. [12] Kevin Leyton-Brown and Moshe Tennenholtz. Local-effect games. In IJCAI, 2003. [13] Richard Lipton, Evangelos Markakis, and Aranyak Mehta. Playing large games using simple strategies. In ACM-EC, pages 36-41, 2003. [14] Michael Littman and Peter Stone. A polynomial-time Nash equilibrium algorithm for repeated games. In ACM-EC, pages 48-54, 2003. [15] Leslie M. Marx and Jeroen M. Swinkels. Order independence for iterated weak dominance. Games and Economic Behavior, 18:219-245, 1997. [16] Leslie M. Marx and Jeroen M. Swinkels. Corrigendum, order independence for iterated weak dominance. Games and Economic Behavior, 31:324-329, 2000. [17] Andreu Mas-Colell, Michael Whinston, and Jerry R. Green. Microeconomic Theory. Oxford University Press, 1995. [18] Roger Myerson. Game Theory: Analysis of Conflict. Harvard University Press, Cambridge, 1991. [19] Martin J Osborne and Ariel Rubinstein. A Course in Game Theory. MIT Press, 1994. [20] Christos Papadimitriou. Algorithms, games and the Internet. In STOC, pages 749-753, 2001. [21] Ryan Porter, Eugene Nudelman, and Yoav Shoham. Simple search methods for finding a Nash equilibrium. In AAAI, pages 664-669, 2004. 97",
    "original_translation": "Complejidad de (iterado) Dominio ∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, EE. UU. Conitzer@cs.cmu.edu tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA Sandholm@cs.cmu.Estudiamos varios aspectos computacionales de la resolución de juegos utilizando dominio y dominio iterado. Primero estudiamos el dominio estricto y débil (no iterado), y mostramos que verificar si una estrategia dada está dominada por alguna estrategia mixta se puede hacer en tiempo polinomial utilizando un solo programa lineal. Luego pasamos al dominio iterado. Mostramos que determinar si hay algún camino que elimine una estrategia dada es completar NP con el dominio débil iterado. Esto nos permite también mostrar que determinar si hay una ruta que conduce a una solución única es NP-Complete. Ambos resultados se mantienen con y sin dominio por estrategias mixtas.(Ya se conocía una versión más débil del segundo resultado (solo sin dominio por estrategias mixtas) [7]). El dominio estricto iterado, por otro lado, es independiente de la ruta (con y sin dominio por estrategias mixtas) y, por lo tanto, se puede hacer en tiempo polinomial. Luego estudiamos lo que sucede cuando la estrategia dominante puede imponer una probabilidad positiva en solo unas pocas estrategias puras. Primero, mostramos que encontrar la estrategia dominante con un tamaño mínimo de soporte es NP-completado (tanto para dominio estricto como débil). Luego, mostramos que el dominio estricto se depende de la ruta cuando hay un límite en el tamaño de soporte de las estrategias dominantes, y que decidir si una estrategia determinada puede ser eliminada por el dominio estricto iterado bajo esta restricción es NP complete (incluso cuando cuandoEl límite en el tamaño de soporte es 3). Finalmente, estudiamos juegos bayesianos. Mostramos que, a diferencia de los juegos de forma normal, decidir si una estrategia pura dada está dominada por otra estrategia pura en un juego bayesiano es NP-completado (tanto con dominio estricto como débil);Sin embargo, decidir si una estrategia está dominada por alguna estrategia mixta aún se puede hacer en tiempo polinómico con un solo programa lineal resuelve (tanto con estricto como débil ∗ Este material se basa en el trabajo apoyado por la National Science Foundation bajo las subvenciones ITR IIS-0121678e IIS-0427858, y una beca Sloan. Dominio). Finalmente, mostramos que el dominio iterado utilizando estrategias puras puede requerir un número exponencial de iteraciones en un juego bayesiano (tanto con dominio estricto como débil). Categorías y descriptores de sujetos F.2 [Teoría de la computación]: Análisis de algoritmos y complejidad del problema;J.4 [Aplicaciones informáticas]: Ciencias sociales y conductuales-economía Algoritmos de términos generales, Economía, Teoría 1. Introducción En sistemas multiagentes con agentes egoístas, la acción óptima para un agente puede depender de las acciones tomadas por otros agentes. En tales entornos, los agentes requieren herramientas de la teoría de juegos para decidir racionalmente sobre una acción. La teoría de juegos ofrece varios modelos formales de entornos estratégicos, el más conocido de los cuales es un juego en forma normal (o matriz), especificando una utilidad (pago) para cada agente para cada combinación de estrategias que los agentes eligen, así como una solución.conceptos, que, dado un juego, especifican qué resultados son razonables (bajo diversos supuestos de racionalidad y conocimiento común). Probablemente el concepto de solución más conocido (y ciertamente más estudiado) es el de equilibrio de Nash. Un equilibrio de Nash especifica una estrategia para cada jugador, de tal manera que ningún jugador tiene un incentivo para que (unilateralmente) se desvíe de la estrategia prescrita. Recientemente, numerosos artículos han estudiado el equilibrio de los equilibrios de Nash en varios entornos [9, 4, 12, 3, 13, 14], y la complejidad de construir un equilibrio NASH en juegos de forma normal se ha etiquetado como uno de los dos problemas abiertos más importantes deEl límite de P hoy [20]. El problema de las soluciones informáticas de acuerdo con los conceptos de solución quizás más elementales de dominio y dominio iterado ha recibido mucha menos atención.(Después de un artículo breve temprano sobre un caso fácil [11], el principal estudio computacional de estos conceptos ha tenido lugar en un documento en la comunidad de teoría de juegos [7] .1) Una estrategia domina estrictamente otra estrategia si funciona estrictamente 1Esto no quiere decir que los científicos informáticos hayan ignorado 88 mejor contra todos los vectores de estrategias oponentes, y lo domina débilmente si funciona al menos contra todos los vectores de estrategias oponentes, y estrictamente mejor contra al menos uno. La idea es que las estrategias dominadas se pueden eliminar de la consideración. En el dominio iterado, la eliminación se realiza en las rondas y se vuelve más fácil a medida que se eliminan más estrategias: en cualquier ronda dada, la estrategia dominante ya no necesita funcionar mejor que o la estrategia dominada contra las estrategias oponentes que se eliminaron en rondas anteriores. Las soluciones de computación de acuerdo con el dominio (iterado) es importante por al menos las siguientes razones: 1) Puede ser computacionalmente más fácil que calcular (por ejemplo) un equilibrio Nash (y, por lo tanto, puede ser útil como un paso de preprocesamiento para calcular un equilibrio NASH), y 2) el dominio (iterado) requiere una suposición de racionalidad más débil sobre los jugadores que (por ejemplo) el equilibrio de Nash y, por lo tanto, es más probable que ocurran las soluciones derivadas de acuerdo con él. En este documento, estudiamos algunas preguntas computacionales fundamentales sobre el dominio y el dominio iterado, incluida lo difícil que es verificar si una estrategia dada puede ser eliminada por cada una de las variantes de estas nociones. El resto del documento está organizado de la siguiente manera. En la Sección 2, revisamos brevemente las definiciones y las propiedades básicas de los juegos normales de forma, dominio estricto y débil, y iteramos un dominio estricto y débil. En las secciones restantes, estudiamos aspectos computacionales del dominio y el dominio iterado. En la Sección 3, estudiamos el dominio único (no iterado). En la Sección 4, estudiamos el dominio iterado. En la Sección 5, estudiamos el dominio y el dominio iterado cuando la estrategia dominante solo puede imponer probabilidad en algunas estrategias puras. Finalmente, en la Sección 6, estudiamos el dominio y iteramos el dominio en los Juegos Bayesianos.2. Definiciones y propiedades básicas En esta sección, revisamos brevemente los juegos de formularios normales, así como el dominio de dominio y el dominio iterado (tanto estricto como débil). Un juego de forma normal del jugador N se define de la siguiente manera. Definición 1. Un juego de forma normal está dado por un conjunto de jugadores {1, 2 ,..., n};y, para cada jugador I, un conjunto (finito) de estrategias puras σi y una función de utilidad UI: σ1 × σ2 ×...× σn → R (donde ui (σ1, σ2, ..., σn) denota el jugador es la utilidad cuando cada jugador J juega acción σj). Las dos nociones principales de dominio se definen de la siguiente manera. Definición 2. El jugador es la estrategia σi se dice que está estrictamente dominado por el jugador es la estrategia σi si para cualquier vector de estrategias σ - I para los otros jugadores, UI (σi, σ - i)> ui (σi, σ - i). El jugador es la estrategia σi se dice que está débilmente dominado por el jugador es la estrategia σi si para cualquier vector de estrategias σ - I para los otros jugadores, ui (σi, σ - i) ≥ ui (σi, σ - i), y para AT ATal menos un vector de estrategias σ - I para los otros jugadores, ui (σi, σ - i)> ui (σi, σ - i). En esta definición, a veces se permite que la estrategia dominante σi sea una estrategia mixta, es decir, una distribución de probabilidad sobre estrategias puras. En este caso, las utilidades en dominio por completo. Por ejemplo, las verificaciones de dominio simples a veces se usan como subrutina en la búsqueda de equilibrios NASH [21].la definición son las utilidades esperadas.2 Hay otras nociones de dominio, como el dominio muy débil (en el que no se requiere una desigualdad estricta, por lo que dos estrategias pueden dominar entre sí), pero no las estudiaremos aquí. Cuando estamos mirando las relaciones de dominio para el jugador I, los otros jugadores (−i) pueden considerarse como un jugador solo.3 Por lo tanto, en el resto del documento, cuando estudiamos un dominio de una sola vez (no iterada),Nos centraremos sin pérdida de generalidad en los juegos de dos jugadores.4 En los juegos de dos jugadores, generalmente nos referiremos a los jugadores como R (fila) y C (columna) en lugar de 1 y 2. En el dominio iterado, las estrategias dominadas se eliminan del juego y ya no tienen ningún efecto en las relaciones futuras de dominio. El dominio iterado puede eliminar más estrategias que el dominio, como sigue.σr originalmente no puede dominar σr porque este último funciona mejor contra σc;Pero luego, una vez que se elimina σc porque está dominado por σc, σr domina σr, y este último puede eliminarse. Por ejemplo, en el siguiente juego, R se puede eliminar primero, después de lo cual D está dominado. L r u 1, 1 0, 0 d 0, 1 1, 0, ya sea que se puede usar dominio estricto o débil en la definición de dominio iterado. Observamos que el proceso de dominio iterado nunca se ayuda al eliminar una estrategia mixta dominada, por la siguiente razón. Si σi le da al jugador I una utilidad más alta que σi contra la estrategia mixta σj para el jugador j = i (y estrategias σ− {i, j} para los otros jugadores), entonces para al menos una estrategia pura σj que σj pone probabilidad positiva, σi, σidebe funcionar mejor que σi contra σj (y estrategias σ− {i, j} para los otros jugadores). Por lo tanto, eliminar la estrategia mixta σj no introduce ningún dominio nuevo. Se pueden encontrar discusiones y ejemplos más detallados en textos estándar sobre microeconomía o teoría de juegos [17, 5]. Ahora estamos listos para pasar al núcleo de este documento.3. Dominio (no iterado) En esta sección, estudiamos la noción de dominio único (no iterado). Como primera observación, verificar si una estrategia dada está estrictamente (débilmente) dominada por alguna estrategia pura es sencillo, al verificar, cada estrategia pura para ese jugador, si la última estrategia funciona estrictamente mejor contra todas las estrategias de los oponentes (al menos al menosBueno, contra todas las estrategias de los oponentes, y estrictamente 2 la estrategia dominada σi, por supuesto, también se permite ser mixta, pero esto no tiene implicaciones técnicas para el documento: cuando estudiamos el dominio de un solo disparo, preguntamos si una estrategia dada esdominado, y no importa si la estrategia dada es pura o mixta; cuando estudiamos el dominio iterado, no sirve de nada para eliminar estrategias mixtas, como veremos en breve. 3 Este jugador puede tener un espacio de estrategia muy grande (uno puroEstrategia para cada vector de estrategias puras para los jugadores que están siendo reemplazados). Sin embargo, esto no dará como resultado un aumento en nuestro tamaño de representación, porque la representación original ya tenía que especificar utilidades para cada uno de estos vectores.4 Observamos que una restricción a los juegos de dos jugadores no estaría sin pérdida de generalidad para el dominio iterado. Esto se debe a que para el dominio iterado, debemos analizar las estrategias dominadas de cada jugador individual, por lo que no podemos fusionar ningún jugador.89 mejor contra al menos uno) .5 A continuación, mostramos que verificar si una estrategia dada está dominada por alguna estrategia mixta se puede hacer en el tiempo polinomial resolviendo un solo programa lineal.(Se han dado programas lineales similares antes [18]; presentamos el resultado aquí para completar, y debido a que construiremos los programas lineales que se detallan a continuación en el Teorema 6.) Proposición 1. Dadas las utilidades de los jugadores de fila, un subconjunto DR de los jugadores de fila Pure Strategies σr y una estrategia distinguida σ ∗ R para el jugador de fila, podemos verificar en el tiempo polinomio en el tamaño del juego (resolviendo un solo programa lineal de polinomioTamaño) Si existe alguna estrategia mixta σr, que coloca una probabilidad positiva solo en las estrategias en DR y domina σ ∗ R, tanto para dominio estricto como débil. Prueba. Deje que PDR sea la probabilidad de que σr coloque en dr ∈ Dr. resolveremos un solo programa lineal en cada uno de nuestros algoritmos;Los programas lineales se pueden resolver en el tiempo polinomial [10]. Para el dominio estricto, la pregunta es si el PDR se puede establecer de modo que para cada estrategia pura para el reproductor de columna σc ∈ σc, dr∈Dr pdr ur (dr, σc)> ur (σ ∗ r, σc). Debido a que la desigualdad debe ser estricta, no podemos resolver esto directamente mediante programación lineal. Procedemos de la siguiente manera. Debido a que el juego es finito, podemos suponer sin pérdida de generalidad que todas las utilidades son positivas (si no, simplemente agregue una constante a todas las utilidades). Resuelva el siguiente programa lineal: Minimice Dr∈DR PDR de tal manera que para cualquier σc ∈ σc, Dr∈Dr Pdr Ur (DR, σc) ≥ Ur (σ ∗ R, σc). Si σ ∗ r está estrictamente dominado por alguna estrategia mixta, este programa lineal tiene una solución con valor objetivo <1. (La estrategia dominante es una solución factible con un valor objetivo exactamente 1. Debido a que ninguna restricción es vinculante para esta solución, podemos reducir una de las probabilidades ligeramente sin afectar la viabilidad, obteniendo así una solución con el valor objetivo <1.) Además, si este programa lineal tiene una solución con el valor objetivo <1, existe una estrategia mixta estrictamente dominando σ ∗ r, que se puede obtener tomando la solución LP y agregando la probabilidad restante a cualquier estrategia (porque todas las utilidades son positivas, esto se sumará al lado izquierdo de cualquier desigualdad, por lo que todas las desigualdades se volverán estrictas). Para un dominio débil, podemos resolver el siguiente programa lineal: maximizar σc∈σc ((dr∈Dr pdr ur (dr, σc)) - ur (σ ∗ r, σc)) tal que para cualquier σc ∈ σc, dr∈Drpdr ur (dr, σc) ≥ ur (σ ∗ r, σc);dr∈Dr pdr = 1. Si σ ∗ r está débilmente dominado por alguna estrategia mixta, entonces esa estrategia mixta es una solución factible para este programa con valor objetivo> 0, porque para al menos una estrategia σc ∈ σc tenemos (Dr∈Dr PDR UR (DR, σc, σc)) - ur (σ ∗ r, σc)> 0. Por otro lado, si este programa tiene una solución con valor objetivo> 0, entonces para al menos una estrategia σc ∈ σc, 5 recordamos que la suposición de un solo oponente (es decir, la suposición de dos jugadores) es sin pérdida deGeneralidad para el dominio único.Debe tener (Dr∈Dr Pdr Ur (DR, σc)) - Ur (σ ∗ r, σc)> 0, y por lo tanto la solución de programas lineales es una estrategia mixta débilmente dominante.4. Dominio iterado Ahora pasamos al dominio iterado. Es bien sabido que el dominio estricto estricto es independiente de la ruta [6, 19] es decir, si eliminamos estrategias dominadas hasta que no queden estrategias más dominadas, al final las estrategias restantes para cada jugador serán las mismas, independientemente de lasorden en el que se eliminan las estrategias. Debido a esto, para ver si una estrategia dada puede ser eliminada por un dominio estricto iterado, todo lo que debe hacerse es eliminar repetidamente estrategias que están estrictamente dominadas, hasta que no quedan estrategias más dominadas. Debido a que podemos verificar en el tiempo polinomial si cualquier estrategia dada está dominada (si las estrategias mixtas se permiten o no, como se describe en la Sección 3), este procedimiento completo lleva solo tiempo polinómico. En el caso del dominio iterado por estrategias puras con dos jugadores, Knuth et al.[11] Mejora ligeramente (acelera) la implementación directa de este procedimiento realizando un seguimiento de cada par de estrategias ordenadas para un jugador, el número de estrategias oponentes que impiden que la primera estrategia domine la segunda. Por la presente, el tiempo de ejecución de un juego M × N se reduce de O ((M + N) 4) a O ((M + N) 3).(En realidad, solo estudian un dominio muy débil (para el cual no se requieren desigualdades estrictas), pero el enfoque se extiende fácilmente). Por el contrario, se sabe que el dominio débil iterado es dependiente de la ruta.6 Por ejemplo, en el siguiente juego, usando el dominio débil iterado, podemos eliminar M primero, y luego d, o r primero, y luego U. l m r u 1, 1 0, 0, 01, 0 d 1, 1 1, 0 0, 0 Por lo tanto, mientras que el procedimiento de eliminar estrategias débilmente dominadas hasta que no quedan estrategias más débilmente dominadas se pueden ejecutar en tiempo polinómico, que las estrategias sobreviven al final depende del orden en queEliminamos las estrategias dominadas. Investigaremos dos preguntas para el dominio débil iterado: si una estrategia dada se elimina en algún camino y si hay un camino hacia una solución única (una estrategia pura que queda por jugador). Mostraremos que ambos problemas son computacionalmente difíciles. Definición 3. Dado un juego en forma normal y una estrategia distinguida σ ∗, la eliminación de estrategia IWD pregunta si hay algún camino de dominio débil iterado que elimina σ ∗. Dado un juego en forma normal, Iwdunique-Solution pregunta si hay algún camino de dominio débil iterado que conduce a una solución única (una estrategia que queda por jugador). El siguiente lema muestra un caso especial de juegos de forma normal en los que permite un dominio débil por estrategias mixtas (además del dominio débil por estrategias puras) hace 6, sin embargo, una restricción de dominio débil llamado buen dominio débil que es un caminoindependiente [15, 16]. Para una visión general de los resultados de la independencia de la ruta, ver Apt [1].90 no ayuda. Probaremos que la dureza da como resultado este entorno, para que sostengan si se permite o no el dominio por estrategias mixtas. Lema 1. Supongamos que todas las utilidades en un juego están en {0, 1}. Entonces, cada estrategia pura que está débilmente dominada por una estrategia mixta también está débilmente dominada por una estrategia pura. Prueba. Supongamos que la estrategia pura σ está débilmente dominada por la estrategia mixta σ ∗. Si σ obtiene una utilidad de 1 contra alguna estrategia oponente (o vector de estrategias oponentes si hay más de 2 jugadores), entonces todas las estrategias puras que σ ∗ colocan la probabilidad positiva de la que también deben obtener una utilidad de 1 contra esa estrategia oponente (o de lo contrario la utilidad esperada sería menor que 1). Además, al menos una de las estrategias puras en las que σ ∗ coloca una probabilidad positiva debe obtener una utilidad de 1 contra una estrategia oponente con la que σ entra 0 (o de lo contrario la desigualdad nunca sería estricta). Se deduce que esta estrategia pura domina débilmente σ. Ahora estamos listos para demostrar los principales resultados de esta sección. Teorema 1. La eliminación de la estrategia IWD es NPCompleta, incluso con 2 jugadores, y con 0 y 1 siendo las únicas utilidades que ocurren en la matriz, ya sea el dominio o no por estrategias mixtas. Prueba. El problema está en NP porque dada una secuencia de estrategias para ser eliminadas, podemos verificar fácilmente si esta es una secuencia válida de eliminaciones (incluso cuando se permite el dominio por estrategias mixtas, utilizando la Propuesta 1). Para mostrar que el problema es NP-Hard, reducimos una instancia de satisfiabilidad arbitraria (dado por un conjunto no vacío de cláusulas C sobre un conjunto de variables no vacío V, con literales correspondientes l = {+V: V ∈ V} ∪ {−v: v ∈ V}) a la siguiente instancia de eliminación de estrategia IWD.(En este caso, especificaremos que ciertas estrategias son ineludibles. Una estrategia σr se puede hacer imperdible, incluso cuando 0 y 1 son las únicas utilidades permitidas, agregando otra estrategia σr y otra estrategia de oponente σc, de modo que: 1. σr y σr son las únicas estrategias que le dan al jugador de fila una utilidad de1 contra σc.2. σr y σr siempre le dan al reproductor de filas la misma utilidad.3. σc es la única estrategia que le da al reproductor de columna una utilidad de 1 contra σr, pero por lo demás σc siempre le da a la utilidad del reproductor de columna 0. Esto hace que sea imposible eliminar cualquiera de estas tres estrategias. No especificaremos explícitamente las estrategias adicionales para hacer que la prueba sea más legible). En esta prueba, denotaremos estrategias de jugadores de fila por S y estrategias de jugadores de columna de T, para mejorar la legibilidad. Deje que los jugadores de fila se sometan a la estrategia pura de la siguiente manera. Para cada variable v ∈ V, el reproductor de filas tiene estrategias correspondientes S1 +V, S2 +V, S1 −v, S2 −v. Además, el reproductor de filas tiene las siguientes 2 estrategias: S1 0 y S2 0, donde S2 0 = σ ∗ R (es decir, es la estrategia que buscamos eliminar). Finalmente, para cada cláusula c ∈ C, el reproductor de filas tiene estrategias correspondientes S1 C (no deliminables) y S2 c.Deje que los reproductores de columna se establezcan la estrategia pura de la siguiente manera. Para cada variable v ∈ V, el reproductor de columna tiene una estrategia de TV correspondiente. Para cada cláusula c ∈ C, el reproductor de columna tiene una estrategia correspondiente TC, y además, para cada l ∈ L literal que ocurre en C, una estrategia TC, l. Para cada variable v ∈ V, el reproductor de columna tiene estrategias correspondientes T+V, T - V (ambas no deliminables). Finalmente, el reproductor de columna tiene tres estrategias adicionales: T1 0 (no deliminable), T2 0 y T1. La función de utilidad para el reproductor de fila se da de la siguiente manera: • Ur (S1 +V, TV) = 0 para todos v ∈ V;• Ur (S2 +V, TV) = 1 para todos v ∈ V;• Ur (S1 −v, TV) = 1 para todos v ∈ V;• Ur (S2 −v, TV) = 0 para todos v ∈ V;• Ur (S1 +V, T1) = 1 para todos v ∈ V;• Ur (S2 +V, T1) = 0 para todos v ∈ V;• Ur (s1 −v, t1) = 0 para todos v ∈ V;• Ur (S2 −v, t1) = 1 para todos v ∈ V;• Ur (sb +v, t +v) = 1 para todos v ∈ V y b ∈ {1, 2};• Ur (sb −v, t - v) = 1 para todos v ∈ V y b ∈ {1, 2};• ur (sl, t) = 0 de lo contrario para todos l ∈ L y t ∈ S2;• Ur (S1 0, TC) = 0 para todos c ∈ C;• Ur (S2 0, TC) = 1 para todos c ∈ C;• Ur (SB 0, T1 0) = 1 para todos b ∈ {1, 2};• Ur (S1 0, T2 0) = 1;• Ur (S2 0, T2 0) = 0;• ur (sb 0, t) = 0 en lo contrario para todos b ∈ {1, 2} y t ∈ S2;• ur (sb c, t) = 0 en lo contrario para todos c ∈ C y b ∈ {1, 2};Y la utilidad de los jugadores de fila es 0 en cualquier otro caso. La función de utilidad para el reproductor de columna se da de la siguiente manera: • UC (S, TV) = 0 para todos los v ∈ V y S ∈ S1;• UC (s, t1) = 0 para todos s ∈ S1;• UC (S2 L, TC) = 1 para todos c ∈ C y L ∈ L donde l ∈ C (L literal L ocurre en la cláusula C);• UC (S2 L2, TC, L1) = 1 para todos C ∈ C y L1, L2 ∈ L, L1 = L2 donde L2 ∈ C;• UC (S1 C, TC) = 1 para todos c ∈ C;• UC (S2 C, TC) = 0 para todos c ∈ C;• UC (SB C, TC, L) = 1 para todos C ∈ C, L ∈ L, y B ∈ {1, 2};• UC (S2, TC) = UC (S2, TC, L) = 0 en lo contrario para todos C ∈ C y L ∈ L;y la utilidad de los jugadores de columna es 0 en cualquier otro caso. Ahora mostramos que las dos instancias son equivalentes. Primero, supongamos que hay una solución a la instancia de satisfacción: es decir, una asignación de valor de la verdad a las variables en V de modo que todas las cláusulas estén satisfechas. Luego, considere la siguiente secuencia de eliminaciones en nuestro juego: 1. Para cada variable V que se establece en verdadero en la asignación, elimine la televisión (que le da a la utilidad del reproductor de columna 0 en todas partes).2. Luego, para cada variable V que se establece en verdadero en la asignación, elimine S2 +V usando S1 +V (lo cual es posible porque la televisión ha sido eliminada y porque T1 no se ha eliminado (todavía)).3. Ahora elimine T1 (que le da a la utilidad del reproductor de columna 0 en todas partes).4. A continuación, para cada variable V que se establece en falso en la asignación, elimine S2 −V usando S1 −V (lo cual es posible porque T1 ha sido eliminado y porque la televisión no se ha eliminado (todavía)).5. Para cada cláusula C que tiene la variable correspondiente a uno de sus literales positivos l = +V establecido en verdadero en la asignación, elimine TC usando TC, L (lo cual es posible porque S2 L ha sido eliminado y S2 C no se ha eliminado(todavía)).6. Para cada cláusula C que tiene la variable correspondiente a uno de sus literales negativos l = −V establecido en falso en la asignación, elimine TC usando TC, L 91 (lo cual es posible porque S2 L se ha eliminado, y S2 C no se ha sidoeliminado (todavía)).7. Debido a que la tarea satisfizo la fórmula, todos los TC han sido eliminados. Por lo tanto, podemos eliminar S2 0 = σ ∗ R usando S1 0. Se deduce que hay una solución a la instancia de eliminación de estrategia IWD. Ahora suponga que hay una solución a la instancia de estrategiaeliminación IWD. Por Lemma 1, podemos suponer que todos los dominios son por estrategias puras. Primero observamos que solo S1 0 puede eliminar S2 0 = σ ∗ R, porque es la única otra estrategia que hace que el jugador de fila sea una utilidad de 1 contra T1 0, y T1 0 no es eliminable. Sin embargo, debido a que S2 0 funciona mejor que S1 0 contra las estrategias TC, se deduce que todas las estrategias de TC deben ser eliminadas. Para cada c ∈ C, la estrategia TC solo puede ser eliminada por una de las estrategias TC, L (con la misma C), porque estas son las únicas otras estrategias que hacen que el reproductor de columnas sea una utilidad de 1 contra S1 C y S1C es inelimitable. Pero, para que algún TC, L elimine TC, S2 L debe eliminarse primero. Solo S1 L puede eliminar S2 L, porque es la única otra estrategia que hace que el jugador de fila sea una utilidad de 1 contra TL, y TL es ineludible. Luego mostramos que para cada v ∈ V solo uno de S2 +V, se puede eliminar S2 −V. Esto se debe a que para que S1 +V elimine S2 +V, la televisión debe haber sido eliminada y T1, no (por lo que la televisión debe eliminarse antes de T1);Pero para que S1 −V elimine S2 −V, T1 debe haber sido eliminado y TV, no (por lo que T1 debe eliminarse antes de la televisión). Entonces, establezca V en verdadero si se elimina S2 +V, y a False de otra manera porque, por lo anterior, para cada Cláusula C, uno de los S2 L con L ∈ C debe eliminarse, se deduce que esta es una tarea satisfactoria a laSatisfiabilidad. Usando el Teorema 1, ahora es (relativamente) fácil de demostrar que la solución IWD-Unique también es NP complete bajo las mismas restricciones. Teorema 2. La solución de IWD-Unique es NP-COMPLETA, incluso con 2 jugadores, y con 0 y 1 son las únicas utilidades que ocurren en la matriz, ya sea que se permita el dominio por estrategias mixtas. Prueba. Una vez más, el problema está en NP porque podemos elegir de manera no determinista la secuencia de eliminaciones y verificar si es correcto. Para mostrar NP-Hardness, reducimos una instancia arbitraria de eliminación de estrategia IWD a la siguiente instancia de solución de IWD-Unique. Deje que todas las estrategias para cada jugador de la instancia original sigan siendo parte de la nueva instancia, y deje que las utilidades resultantes de los jugadores que juegan un par de estas estrategias sean las mismas. Agregamos tres estrategias adicionales σ1 R, σ2 R, σ3 R para el reproductor de filas y tres estrategias adicionales σ1 C, σ2 C, σ3 C para el reproductor de columna. Deje que las utilidades adicionales sean las siguientes: • ur (σr, σj c) = 1 para todos σr /∈ {σ1 r, σ2 r, σ3 r} y j ∈ {2, 3};• Ur (σi r, σc) = 1 para todos los i ∈ {1, 2, 3} y σc /∈ {σ2 c, σ3 c};• Ur (σi r, σ2 c) = 1 para todo i ∈ {2, 3};• Ur (σ1 r, σ3 c) = 1;• Y la utilidad de los jugadores de fila es 0 en todos los demás casos que involucran una nueva estrategia.• UC (σ3 r, σc) = 1 para todos σc /∈ {σ1 c, σ2 c, σ3 c};• UC (σ ∗ R, σj c) = 1 para todos J ∈ {2, 3} (σ ∗ R es la estrategia que se eliminará en la instancia original);• UC (σi R, σ1 c) = 1 para todos i ∈ {1, 2};• Ur (σ1 r, σ2 c) = 1;• Ur (σ2 r, σ3 c) = 1;• Y la utilidad de los jugadores de columna es 0 en todos los demás casos que involucran una nueva estrategia. Procedemos a mostrar que las dos instancias son equivalentes. Primero suponga que existe una solución a la instancia original de eliminación de iWDstrategy. Luego, realice la misma secuencia de eliminaciones para eliminar σ ∗ r en la nueva instancia de solución de la unique IWD.(Esto es posible porque en cualquier etapa, cualquier dominio débil para el reproductor de filas en la instancia original sigue siendo un dominio débil en la nueva instancia, porque las dos estrategias utilidades para el reproductor de filas son las mismas cuando el reproductor de columna juega uno de losnuevas estrategias; y lo mismo es cierto para el reproductor de columnas). Una vez que se elimina σ ∗ r, deje que σ1 c elimine σ2 c.(Funciona mejor contra σ2 r.) Luego, deje que σ1 R elimine todas las otras estrategias restantes para el jugador de filas.(Siempre funciona mejor contra σ1 C o σ3 c.) Finalmente, σ1 C es la mejor respuesta única contra σ1 R entre las estrategias restantes de los reproductores de columnas, así que deje que elimine todas las otras estrategias restantes para el reproductor de columnas. Por lo tanto, existe una solución a la instancia de la solución de IWD-Unique. Ahora suponga que existe una solución a la instancia de IWD-Uniquesolution. Por Lemma 1, podemos suponer que todos los dominios son por estrategias puras. Mostraremos que ninguna de las nuevas estrategias (σ1 R, σ2 r, σ3 r, σ1 c, σ2 c, σ3 c) puede eliminar otra estrategia o eliminarse antes de que se elimine σ ∗ r. Por lo tanto, debe haber una secuencia de eliminaciones que terminan en la eliminación de σ ∗ r, que no involucra ninguna de las nuevas estrategias y, por lo tanto, es una secuencia válida de eliminaciones en el juego original (porque todas las estrategias originales funcionan lo mismo contra cada unanueva estrategia). Ahora mostramos que esto es cierto al agotar todas las posibilidades para la primera eliminación antes de que se elimine σ ∗ r que implica una nueva estrategia. Ninguno de los σi r puede eliminarse mediante un σr /∈ {σ1 r, σ2 r, σ3 r}, porque el σi r funciona mejor contra σ1 c.σ1 r no puede eliminar ninguna otra estrategia, porque siempre funciona más pobre contra σ2 c.σ2 r y σ3 r son equivalentes desde la perspectiva de los jugadores de la fila (y por lo tanto no pueden eliminarse entre sí), y no pueden eliminar ninguna otra estrategia porque siempre funcionan más pobres contra σ3 c. Ninguno de los σj c puede eliminarse por un σc /∈ {σ1 c, σ2 c, σ3 c}, porque el σj c siempre funciona mejor contra σ1 r o σ2 r.σ1 c no puede eliminar ninguna otra estrategia, porque siempre funciona más pobre contra σ ∗ r o σ3 r.σ2 c no puede eliminar ninguna otra estrategia, porque siempre funciona más pobre contra σ2 r o σ3 r.σ3 c no puede eliminar ninguna otra estrategia, porque siempre funciona más pobre contra σ1 r o σ3 r. Por lo tanto, existe una solución a la instancia de eliminación de IWDStrategy. Una versión ligeramente más débil de la parte del Teorema 2 sobre el dominio solo por estrategias puras es el resultado principal de Gilboa et al.[7].(Además de no probar el resultado para el dominio por estrategias mixtas, el resultado original fue más débil porque requería utilidades {0, 1, 2, 3, 4, 5, 6, 7, 8} en lugar de solo {0, 1} (yDebido a esto, nuestro Lema 1 no se puede aplicar a él para obtener el resultado para estrategias mixtas).) 5. (iterado) Dominio utilizando estrategias mixtas con pequeños apoyos al mostrar que una estrategia está dominada por una estrategia mixta, hay varias razones.Preferir exhibir una estrategia dominante 92 que impone una probabilidad positiva de la menor cantidad de estrategias puras como sea posible. Primero, esto reducirá el número de bits necesarios para especificar la estrategia dominante (y, por lo tanto, la prueba de dominio se puede comunicar más rápido): si la estrategia mixta dominante impone una probabilidad positiva en solo k estrategias, entonces se puede especificar usando k números realesPara las probabilidades, más K log m (donde M es el número de estrategias para el jugador bajo consideración) bits para indicar qué estrategias se utilizan. En segundo lugar, la prueba de dominio será más limpia: para una estrategia mixta dominante, es típicamente (siempre en el caso del dominio estricto) posible propagar parte de la probabilidad de cualquier estrategia pura no utilizada y aún tiene una estrategia dominante, pero esto oscurece¿Qué estrategias puras son las que son clave para hacer que la estrategia mixta domine? Tercero, porque (por el anterior) el argumento para eliminar la estrategia dominada es más simple y más fácil de entender, es más probable que sea aceptado. Cuarto, se reduce el nivel de neutralidad de riesgo requerida para que el argumento funcione, al menos en el caso extremo donde se puede exhibir el dominio por una sola estrategia pura (no se requiere neutralidad de riesgo aquí). Esto motiva el siguiente problema. Definición 4 (conjunto mínimo de dominio). Se nos da las utilidades de los jugadores de fila de un juego en forma normal, una estrategia distinguida σ ∗ para el reproductor de filas, una especificación de si el dominio debe ser estricto o débil, y un número k.Se nos pregunta si existe una estrategia mixta σ para el jugador de filas que impone una probabilidad positiva en la mayoría de las estrategias pues k, y domina σ ∗ en el sentido necesario. Desafortunadamente, este problema es NP-Completo. Teorema 3. El conjunto mínimo de dominio es NPComplete, tanto para el dominio estricto como para el dominio débil. Prueba. El problema está en NP porque podemos elegir de manera no determinista un conjunto de estrategias en la mayoría de K para dar una probabilidad positiva, y decidir si podemos dominar σ ∗ con estas estrategias K como se describe en la Proposición 1. Para mostrar np-dardness, reducimos una instancia arbitraria de la cubierta del conjunto (dado un conjunto S, subconjuntos S1, S2, ..., Sr y un número T, ¿pueden todos estar cubiertos por la mayoría de los subconjuntos?) a la siguiente instancia de conjunto mínimo de dominio. Para cada elemento S ∈ S, hay una estrategia pura σs para el reproductor de columna. Para cada subset SI, hay una estrategia pura σsi para el reproductor de filas. Finalmente, está la estrategia pura distinguida σ ∗ para el reproductor de filas. Las utilidades de los jugadores de fila son las siguientes: Ur (σsi, σs) = t + 1 if s ∈ Si;Ur (σsi, σs) = 0 si s /∈ Si;Ur (σ ∗, σs) = 1 para todos s ∈ S. Finalmente, dejamos k = t.Ahora procedemos a mostrar que las dos instancias son equivalentes. Primero suponga que existe una solución a la instancia de la cobertura del conjunto. Sin pérdida de generalidad, podemos suponer que hay exactamente k subconjuntos en la portada. Luego, para cada SI que está en la cubierta, deje que la estrategia dominante σ coloque exactamente 1 k probabilidad en la estrategia pura σsi correspondiente. Ahora, si dejamos que N (s) sea el número de subconjuntos en la cubierta que contiene S (observamos que n (s) ≥ 1), entonces para cada estrategia σs para el reproductor de columnas, los jugadores de fila esperaban utilidad para jugar σCuando el reproductor de columna está jugando σs es u (σ, σs) = n (s) k (k + 1) ≥ k + 1 k> 1 = u (σ ∗, σs). Entonces, σ estrictamente (y por lo tanto también débil) domina σ ∗, y existe una solución a la instancia de conjunto mínimo de dominio. Ahora suponga que existe una solución a la instancia de set de mínimo. Considere las estrategias (como máximo k) puras de la forma σsi en la que la estrategia mixta dominante σ impone una probabilidad positiva, y deje que T sea la recolección de los subconjuntos correspondientes si. Afirmamos que T es una portada. Para suponer, hay algunos s ∈ S que no se encuentra en ninguno de los subconjuntos en t. Entonces, si el reproductor de columna juega σs, el reproductor de filas (cuando juegue σ) siempre recibirá utilidad 0-en lugar de la utilidad de 1, el reproductor de fila recibiría para jugar σ ∗, contradiciendo el hecho de que σ domina σ ∗ (siEste dominio es débil o estricto). Se deduce que existe una solución a la instancia de la cobertura del conjunto. Por otro lado, si requerimos que la estrategia dominante solo impone una probabilidad positiva en un número muy pequeño de estrategias puras, entonces una vez más se vuelve fácil verificar si una estrategia está dominada. Específicamente, para averiguar si el jugador es la estrategia σ ∗ está dominado por una estrategia que impone una probabilidad positiva en solo k estrategias puras, simplemente podemos verificar, ya que cada subconjunto de k de jugador es puro estrategias, si existe una estrategia que coloca positivaprobabilidad solo en estas k estrategias y domina σ ∗, usando la Propuesta 1. Esto requiere solo o (| σi | k) tales verificaciones. Por lo tanto, si K es una constante, esto constituye un algoritmo de tiempo polinomial. Una pregunta natural para hacer a continuación es si el dominio estricto iterado sigue siendo computacionalmente fácil cuando se requieren estrategias dominantes para imponer una probabilidad positiva en la mayoría de las estrategias de K puras, donde K es una pequeña constante.(Ya hemos demostrado en la Sección 4 que el dominio débil iterado es difícil incluso cuando K = 1, es decir, solo se permite el dominio de las estrategias puras). Por supuesto, si el dominio estricto iterado fuera independiente de la ruta bajo esta restricción, la facilidad computacional seguiría como lo hizo en la Sección 4. Sin embargo, resulta que este no es el caso. Observación 1. Si restringimos las estrategias dominantes para imponer una probabilidad positiva en la mayoría de las dos estrategias puras, la estricta dominio se vuelve dependiente del camino. Prueba. Considere el siguiente juego: 7, 1 0, 0 0, 0 0, 0 7, 1 0, 0 3, 0 3, 0 0, 0 0, 0 0, 0 3, 1 1, 0 1, 0 1, 0Sea (i, j) denotar el resultado en el que el reproductor de fila juega la fila ésima y el reproductor de columna juega la columna JTH. Porque (1, 1), (2, 2) y (4, 3) son todos los equilibrios de Nash, ninguno de los jugadores de columnas pura estrategias serán eliminadas, y tampoco las filas 1, 2 y 4. Ahora observamos que la aleatorización uniformemente sobre las filas 1 y 2 domina la fila 3, y el azar de manera uniforme sobre las filas 3 y 4 domina la fila 5. Sin embargo, si eliminamos primero la fila 3, se vuelve imposible dominar la fila 5 sin aleatorizar en al menos 3 estrategias puras. De hecho, el dominio estricto iterado resulta difícil incluso cuando K = 3. Teorema 4. Si restringimos las estrategias dominantes para imponer una probabilidad positiva en la mayoría de las tres estrategias puras, se convierte en NP-complete decidir si una estrategia dada puede eliminarse utilizando un dominio estricto iterado.93 Prueba. El problema está en NP porque dada una secuencia de estrategias para ser eliminadas, podemos verificar en el tiempo polinomial si esta es una secuencia válida de eliminaciones (para que se elimine cualquier estrategia, podemos verificar, para cada subconjunto de otras tres estrategias, ya seaExiste una estrategia que pone una probabilidad positiva en solo estas tres estrategias que dominan la estrategia que se eliminará, utilizando la Proposición 1). Para mostrar que el problema es NP-Hard, reducimos una instancia de satisfiabilidad arbitraria (dado por un conjunto no vacío de cláusulas C sobre un conjunto de variables no vacío V, con literales correspondientes l = {+V: V ∈ V} ∪ {−v: v ∈ V}) al siguiente juego de dos jugadores. Para cada variable v ∈ V, el reproductor de filas tiene estrategias S+V, S - V, S1 V, S2 V, S3 V, S4 V, y el reproductor de columna tiene estrategias T1 V, T2 V, T3 V, T4 V.Para cada cláusula c ∈ C, el reproductor de filas tiene una estrategia SC, y el reproductor de columna tiene una estrategia TC, así como, para cada L literal que ocurra en C, una estrategia adicional tl c.El jugador de filas tiene dos estrategias adicionales S1 y S2.(S2 es la estrategia que buscamos eliminar). Finalmente, el reproductor de columna tiene una estrategia adicional T1. La función de utilidad para el reproductor de fila se da de la siguiente manera (donde es un número suficientemente pequeño): • ur (s+v, tj v) = 4 si j ∈ {1, 2}, para todos v ∈ V;• Ur (s+v, tj v) = 1 si j ∈ {3, 4}, para todos v ∈ V;• Ur (s - v, tj v) = 1 si j ∈ {1, 2}, para todos v ∈ V;• Ur (S - V, Tj V) = 4 si J ∈ {3, 4}, para todos v ∈ V;• ur (s+v, t) = ur (s - v, t) = 0 para todos v ∈ V y t /∈ {T1 V, T2 V, T3 V, T4 V};• Ur (Si V, Ti V) = 13 para todos V ∈ V e I ∈ {1, 2, 3, 4};• ur (si v, t) = para todos v ∈ V, i ∈ {1, 2, 3, 4} y t = ti V;• ur (sc, tc) = 2 para todos c ∈ C;• ur (sc, t) = 0 para todos c ∈ C y t = tc;• Ur (S1, T1) = 1 +;• Ur (S1, t) = para todos t = t1;• Ur (S2, T1) = 1;• Ur (S2, TC) = 1 para todos c ∈ C;• ur (s2, t) = 0 para todos t /∈ {t1} ∪ {tc: c ∈ C}. La función de utilidad para el reproductor de columna se da de la siguiente manera: • Uc (Si V, ti V) = 1 para todos v ∈ V e I ∈ {1, 2, 3, 4};• Uc (s, ti v) = 0 para todos v ∈ V, i ∈ {1, 2, 3, 4} y S = si V;• UC (SC, TC) = 1 para todos c ∈ C;• UC (SL, TC) = 1 para todos los c ∈ C y L ∈ L que ocurre en C;• Uc (s, tc) = 0 para todos c ∈ C y s /∈ {sc} ∪ {sl: l ∈ C};• UC (sc, tl c) = 1 + para todos c ∈ C;• UC (SL, TL C) = 1 + para todos C ∈ C y L = L que ocurre en C;• Uc (s, tl c) = para todos c ∈ C y s /∈ {sc} ∪ {sl: l ∈ C, l = l};• UC (S2, T1) = 1;• UC (S, T1) = 0 para todos S = S2. Ahora mostramos que las dos instancias son equivalentes. Primero, supongamos que hay una solución a la instancia de satisfacción. Luego, considere la siguiente secuencia de eliminaciones en nuestro juego: 1. Para cada variable V que se establece en verdadero en la tarea satisfactoria, elimine S+V con la estrategia mixta σr que coloca la probabilidad 1/3 en S - V, probabilidad 1/3 en S1 V y probabilidad 1/3 en S2 V. (La utilidad esperada de jugar σr contra T1 V o T2 V es 14/3> 4; contra T3 V o T4 V, es 4/3> 1; y contra cualquier otra cosa es 2/3> 0. Por lo tanto, el dominio es válido.) 2. Del mismo modo, para cada variable V que se establece en falso en la asignación satisfactoria, elimine S - V con la estrategia mixta σr que coloca la probabilidad 1/3 en S+V, probabilidad 1/3 en S3 V y probabilidad 1/3 enS4 v. (La utilidad esperada de jugar σr contra T1 V o T2 V es 4/3> 1; contra T3 V o T4 V, es 14/3> 4; y contra cualquier otra cosa es 2/3> 0. Por lo tanto, el dominio es válido.) 3. Para cada c ∈ C, elimine TC con cualquier tl c para el cual L se estableció en verdadero en la tarea satisfactoria.(Este es un dominio válido porque TL C funciona mejor que TC en cualquier estrategia que no sea SL, y eliminamos SL en el Paso 1 o en el Paso 2.) 4. Finalmente, elimine S2 con S1.(Este es un dominio válido porque S1 funciona mejor que S2 contra cualquier estrategia que no sea la de {tc: c ∈ C}, que eliminamos en el paso 3) Por lo tanto, hay una ruta de eliminación que elimina S2. Ahora, suponga que hay una ruta de eliminación que elimina S2. La estrategia que eventualmente domina S2 debe imponer la mayor parte de su probabilidad en S1, porque S1 es la única otra estrategia que funciona bien contra T1, que no se puede eliminar antes de S2. Pero, S1 funciona significativamente peor que S2 en cualquier estrategia TC con c ∈ C, por lo que se deduce que todas estas estrategias deben eliminarse primero. Cada estrategia TC solo puede ser eliminada por una estrategia que coloca la mayor parte de su peso en las estrategias correspondientes TL C con L ∈ C, porque son las únicas otras estrategias que funcionan bien contra SC, que no pueden eliminarse antes de TC. Pero, cada estrategia TL C funciona significativamente peor que TC contra SL, por lo que se deduce que para cada cláusula C, para uno de los literales que ocurre en él, SL debe eliminarse primero. Ahora, las estrategias de la forma TJ V nunca serán eliminadas porque son las mejores respuestas únicas a las estrategias correspondientes SJ V (que son, a su vez, las mejores respuestas al TJ V correspondiente). Como resultado, si la estrategia S+V (respectivamente, S - V) se elimina, entonces su estrategia opuesta S - V (respectivamente, S+V) ya no puede eliminarse, por la siguiente razón. No queda otra estrategia pura que obtenga una utilidad significativa contra más de una de las estrategias T1 V, T2 V, T3 V, T4 V, pero S - V (respectivamente, S+V) obtiene una utilidad significativa contra los 4, yPor lo tanto, no puede ser dominado por una estrategia mixta que impone una probabilidad positiva en la mayoría de las 3 estrategias. Se deduce que para cada v ∈ V, como máximo una de las estrategias S+V, se elimina S - V, de tal manera que para cada cláusula C, para uno de los literales que ocurra en él, SL debe eliminarse. Pero luego establecer todos los literales l de tal manera que SL se elimine a verdadero constituye una solución a la instancia de satisfacción. En la siguiente sección, volvemos a la configuración donde no hay restricción en el número de estrategias puras en las que una estrategia mixta dominante puede imponer una probabilidad positiva.6. (iterado) Dominio en los juegos bayesianos Hasta ahora, nos hemos centrado en los juegos de forma normales que se representan rotundamente (es decir, cada entrada de matriz se administra ex94 plícitamente). Sin embargo, para muchos juegos, la representación plana es demasiado grande para escribir explícitamente y, en cambio, se debe utilizar alguna representación que explota la estructura del juego. Los juegos bayesianos, además de ser de interés por derecho propio, pueden considerarse una representación estructurada útil de los juegos de forma normales, y los estudiaremos en esta sección. En un juego bayesiano, cada jugador primero recibe información de preferencia privada (el tipo de jugadores) de una distribución, lo que determina la utilidad que el jugador recibe para cada resultado de (es decir, vector de acciones jugadas en) el juego. Después de recibir este tipo, el jugador juega una acción basada en él.7 Definición 5. Un juego bayesiano es dado por un conjunto de jugadores {1, 2 ,..., n};y, para cada jugador I, un conjunto (finito) de acciones ai, un espacio de tipo (finito) θi con una distribución de probabilidad πi sobre él, y una función de utilidad UI: θi × A1 × A2 ×...× an → r (donde ui (θi, a1, a2, ..., an) denota el jugador es utilidad cuando el tipo es θi y cada jugador J juega acción AJ). Una estrategia pura en un juego bayesiano es un mapeo de los tipos a las acciones, σi: θi → ai, donde σi (θi) denota la acción que el jugador que juega para el tipo θi. Cualquier vector de estrategias puras en un juego bayesiano define una utilidad (esperada) para cada jugador y, por lo tanto, podemos traducir un juego bayesiano en un juego de forma normal. En este juego de forma normal, las nociones de dominio y dominio iterado se definen como antes. Sin embargo, la representación de forma normal del juego es exponencialmente más grande que la representación bayesiana, porque cada jugador I tiene | ai || θi |Distintas estrategias puras. Por lo tanto, cualquier algoritmo para los juegos bayesianos que se basa en expandir el juego a su forma normal requerirá un tiempo exponencial. Específicamente, nuestros resultados de facilidad para los juegos de forma normal no se transfieren directamente a esta configuración. De hecho, resulta que verificar si una estrategia está dominada por una estrategia pura es difícil en los juegos bayesianos. Teorema 5. En un juego bayesiano, es NP completo decidir si una estrategia pura dada σr: θr → Ar está dominada por alguna otra estrategia pura (tanto para dominio estricto como débil), incluso cuando la distribución de los jugadores de filas sobre los tipos es uniforme. Prueba. El problema está en NP porque es fácil verificar si una estrategia dominante candidata es una estrategia dominante. Para demostrar que el problema es NP-Hard, reducimos una instancia de satisfacción arbitraria (dado por un conjunto de cláusulas C usando variables de V) al siguiente juego bayesiano. Deje que la acción de los jugadores de fila sea ar = {t, f, 0} y deje que el conjunto de acción de los reproductores de columna sea ac = {ac: c ∈ C}. Deje que el tipo de jugadores de fila sea θr = {θv: v ∈ V}, con una distribución πr que es uniforme. Deje que la función de utilidad de los jugadores de fila sea la siguiente: • ur (θv, 0, ac) = 0 para todos v ∈ V y c ∈ C;• Ur (θv, b, ac) = | v |para todos v ∈ V, c ∈ C, y b ∈ {t, f} de modo que la configuración v a b satisface c;• ur (θv, b, ac) = −1 para todos v ∈ V, c ∈ C, y b ∈ {t, f} tal que la configuración V a B no satisface c.7 En general, un jugador también puede recibir una señal sobre las preferencias de los otros jugadores, pero no nos preocuparemos por eso aquí. Deje que la estrategia pura sea dominada sea la que juega 0 para cada tipo. Mostramos que la estrategia está dominada por una estrategia pura si y solo si hay una solución a la instancia de satisfacción. Primero, supongamos que hay una solución a la instancia de satisfacción. Entonces, deje que σd r se diera por: σd r (θv) = t si v se establece en verdadero en la solución a la instancia de satisfacción, y σd r (θv) = f de lo contrario. Luego, contra cualquier acción AC por el reproductor de columna, hay al menos un tipo θv tal que +v ∈ C y σd r (θv) = t, o −v ∈ C y σd r (θv) = f.Por lo tanto, los jugadores de fila esperaban la utilidad contra la acción AC al menos | V || V |- | V | −1 | V |= 1 | V |> 0. Entonces, σd R es una estrategia dominante. Ahora, supongamos que hay una estrategia pura dominante σd r. Esta estrategia dominante debe jugar T o F para al menos un tipo. Por lo tanto, contra cualquier AC por el reproductor de columna, al menos debe haber algún tipo θv para el cual UR (θv, σd R (θv), AC)> 0. Es decir, debe haber al menos una variable V tal que la configuración v a σd r (θv) satifica c.Pero luego, establecer cada V a σd R (θv) debe satisfacer todas las cláusulas. Entonces existe una tarea satisfactoria. Sin embargo, resulta que podemos modificar los programas lineales de la Propuesta 1 para obtener un algoritmo de tiempo polinomial para verificar si una estrategia está dominada por una estrategia mixta en los juegos bayesianos. Teorema 6. En un juego bayesiano, se puede decidir en tiempo polinomial si una estrategia dada (posiblemente mixta) σr está dominada por alguna otra estrategia mixta, utilizando programación lineal (tanto para dominio estricto como débil). Prueba. Podemos modificar los programas lineales presentados en la Proposición 1 de la siguiente manera. Para un dominio estricto, nuevamente suponiendo sin pérdida de generalidad de que todas las utilidades en el juego son positivas, use el siguiente programa lineal (en el que Pσr R (θr, AR) es la probabilidad de que σr, la estrategia se domine, coloque en ARpara el tipo θr): minimice θr∈θr ar∈AR pr (ar) de tal manera que para cualquier ac ∈ Ac, θr∈θr ar∈AR π (θr) ur (θr, ar, ac) pr (θr, ar) ≥ θr∈θr ar∈AR π (θr) ur (θr, ar, ac) pσr r (θr, ar);Para cualquier θr ∈ θr, ar∈AR pr (θr, ar) ≤ 1. Suponiendo que π (θr)> 0 para todos θr ∈ θr, este programa devolverá un valor objetivo más pequeño que | θr |si y solo si σr está estrictamente dominado, razonando similar al hecho en la Propuesta 1. Para el dominio débil, use el siguiente programa lineal: Maximice AC∈C (θr∈θr ar∈AR π (θr) Ur (θr, Ar, Ac) PR (θr, Ar) - θr∈θr ar∈AR π (θr)Ur (θr, ar, ac) pσr r (θr, ar)) tal que para cualquier ac ∈ Ac, θr∈θr ar∈AR π (θr) ur (θr, ar, ac) pr (θr, ar) ≥ θr∈θr ar∈AR π (θr) ur (θr, ar, ac) pσr r (θr, ar);Para cualquier θr ∈ θr, ar∈AR pr (θr, ar) = 1. Este programa devolverá un valor objetivo mayor que 0 si y solo si σr está débilmente dominado, razonando similar al hecho en la Proposición 1. Ahora recurrimos al dominio iterado en los Juegos Bayesianos. Na¨ıvely, se podría argumentar que el dominio iterado en los juegos bayesianos 95 siempre requiere un número exponencial de pasos cuando se puede eliminar una fracción significativa de las estrategias puras de los Juegos, porque hay exponencialmente muchas estrategias puras. Sin embargo, este no es un argumento muy fuerte debido a las veces, podemos eliminar exponencialmente muchas estrategias puras en un solo paso. Por ejemplo, si para algún tipo θr ∈ θr tenemos, para todos los ac ∈ Ac, que u (θr, a1 r, ac)> u (θr, a2 r, ac), entonces cualquier estrategia pura para el reproductor de fila que juegaLa acción a2 r para el tipo θr está dominada (por la estrategia que reproduce la acción a1 r para el tipo θr en su lugar), y hay exponencialmente muchas (| ar || θr | −1) tales estrategias. Por lo tanto, es concebible que solo necesitemos muchas eliminaciones de colecciones de colecciones de estrategias de jugadores. Sin embargo, el siguiente teorema muestra que este no es el caso, al dar un ejemplo en el que se requiere un número exponencial de iteraciones (es decir, alternaciones entre los jugadores en las estrategias de eliminación).(Hacemos hincapié en que esto no es un resultado sobre la complejidad computacional). Teorema 7. Incluso en los juegos bayesianos simétricos de 3 jugadores, el dominio iterado por estrategias puras puede requerir un número exponencial de iteraciones (tanto para dominio estricto como débil), incluso con solo tres acciones por jugador. Prueba. Deje que cada jugador i ∈ {1, 2, 3} tenga n + 1 tipos θ1 i, θ2 i ,..., θn+1 i. Deje que cada jugador tenga 3 acciones ai, bi, ci y deje que la función de utilidad de cada jugador se define de la siguiente manera.(En el siguiente, i + 1 e i + 2 son taquigrafía para i + 1 (mod 3) e i + 2 (mod 3) cuando se usan como índices de jugador. Además, −∞ puede ser reemplazado por un número suficientemente negativo. Finalmente, δ y debe elegirse para que sea muy pequeño (incluso en comparación con 2− (n+1)), y debe ser más del doble de grande que Δ.) • Ui (θ1 i; ai, ci+1, ci+2) = −1;• ui (θ1 i; ai, si+1, si+2) = 0 para Si+1 = Ci+1 o Si+2 = Ci+2;• ui (θ1 i; bi, si+1, Si+2) = - para Si+1 = Ai+1 y Si+2 = Ai+2;• ui (θ1 i; bi, si+1, si+2) = −∞ para Si+1 = ai+1 o si+2 = ai+2;• ui (θ1 i; ci, Si+1, Si+2) = −∞ para todos Si+1, Si+2;• ui (θj i; ai, si+1, si+2) = −∞ para todos Si+1, Si+2 cuando J> 1;• ui (θj i; bi, si+1, si+2) = - para todos Si+1, Si+2 cuando J> 1;• ui (θj i; ci, si+1, ci+2) = δ - - 1/2 para todos Si+1 cuando J> 1;• ui (θj i; ci, Si+1, Si+2) = Δ− para todos Si+1 y Si+2 = Ci+2 cuando J> 1. Deje que la distribución sobre cada tipos de jugadores sea dada por P (θj I) = 2 - J (con la excepción de que P (θ2 I) = 2−2 +2− (n +1)). Estaremos interesados en eliminar las estrategias de la siguiente forma: jugar BI para el tipo θ1 I y jugar uno de BI o CI de lo contrario. Debido a que la función de utilidad es la misma para cualquier tipo θj I con J> 1, estas estrategias se definen efectivamente por la probabilidad total de que colocen en CI, 8 que es T2 I (2−2 + 2− (n + 1))+ n+ 1 j = 3 tj i 2 - j donde tj i = 1 si el jugador i 8 señala que las estrategias siguen siendo estrategias puras;La probabilidad realizada en una acción por una estrategia aquí es simplemente la suma de las probabilidades de los tipos para los cuales la estrategia elige esa acción.Juega CI para el tipo θj I, y 0 de lo contrario. Esta probabilidad es diferente para cualquiera de las dos estrategias diferentes de la forma dada, y tenemos exponencialmente muchas estrategias diferentes de la forma dada. Para cualquier probabilidad Q que se pueda expresar como T2 (2−2 + 2− (n + 1)) + N + 1 J = 3 TJ2 - J (con todos tj ∈ {0, 1}), Let σi (Q)denota la estrategia (única) de la forma dada para el jugador I que coloca una probabilidad total de Q en CI. Cualquier estrategia que juegue CI para el tipo θ1 I o AI para algún tipo θj I con J> 1 puede eliminarse inmediatamente. Mostraremos que, después de eso, debemos eliminar las estrategias σi (Q) con la alta Q primero, trabajando lentamente hasta aquellos con Q más bajo. Reclamación 1: Si σi+1 (q) y σi+2 (q) aún no se han eliminado, y q <q, entonces σi (q) aún no se puede eliminar. Prueba: Primero, mostramos que ninguna estrategia σi (Q) puede eliminar σi (Q). Contra σi+1 (q), σi+2 (q), la utilidad de jugar σi (p) es -+p · δ - p · q /2. Por lo tanto, cuando q = 0, es mejor establecer P lo más alto posible (y observamos que σi+1 (0) y σi+2 (0) no se han eliminado), pero cuando q> 0, es mejorestablecer P lo más bajo posible porque Δ <q /2. Por lo tanto, si q> q o q <q, σi (q) siempre funcionará estrictamente mejor que σi (q) contra algunas estrategias oponentes restantes. Por lo tanto, ninguna estrategia σi (Q) puede eliminar σi (Q). Las únicas otras estrategias puras que podrían dominar σi (Q) son las estrategias que juegan AI para el tipo θ1 I, y BI o CI para todos los demás tipos. Tomemos tal estrategia y supongamos que juega C con probabilidad p.Contra σi+1 (q), σi+2 (q) (que aún no se han eliminado), la utilidad de jugar esta estrategia es - (q) 2 /2 - /2+p · δ - p · q /2. Por otro lado, jugar σi (q) da - + q · δ - q · q /2. Debido a Q> Q, tenemos - (Q) 2 /2 <−q · Q /2, y porque δ y son pequeños, se deduce que σi (Q) recibe una utilidad más alta. Por lo tanto, ninguna estrategia domina σi (Q), demostrando la afirmación. Reclamación 2: si para todas las q> q, σi+1 (q) y σi+2 (q) se han eliminado, entonces σi (q) puede ser eliminado. Prueba: considere la estrategia para el jugador I que juega AI para el tipo θ1 I y BI para todos los demás tipos (llame a esta estrategia σi);Afirmamos que σi domina σi (Q). Primero, si cualquiera de los otros jugadores K juega AK para θ1 K, entonces σi funciona mejor que σi (Q) (que recibe −∞ en algunos casos). Debido a que las estrategias para el jugador k que juegan CK para el tipo θ1 k, o AK para algún tipo θj k con j> 1, ya se han eliminado, todo lo que queda por verificar es que σi funciona mejor que σi (q) siempre que ambos de los dosOtros dos jugadores juegan estrategias de la siguiente forma: Juega BK para el tipo θ1 K y jueguen una de BK o CK de lo contrario. Observamos que entre estas estrategias, no quedan ninguna de esa probabilidad mayor que Q en CK. Permitir QK denota la probabilidad con la que el jugador K juega CK, la utilidad esperada de jugar σi es − Qi+1 · Qi+2 /2 - /2. Por otro lado, la utilidad de jugar σi (q) es - + q · δ - q · qi + 2/2. Debido a que qi+1 ≤ q, la diferencia entre estas dos expresiones es al menos /2 - δ, lo cual es positivo. Se deduce que σi domina σi (q). De la reclamación 2, se deduce que todas las estrategias de la forma σi (q) eventualmente serán eliminadas. Sin embargo, la reclamación 1 muestra que no podemos continuar y eliminar múltiples estrategias de este tipo para un jugador, a menos que al menos otro jugador se mantenga simultáneamente en las estrategias eliminadas: cada vez que se elimina un σi (q) tal que σi+1 (q)y σi+2 (q) aún no se han eliminado, necesitamos eliminar una de las dos últimas estrategias antes de que cualquier σi (q) con q> q pueda eliminarse, es decir, necesitamos alternar entre jugadores. Debido a que hay exponencialmente muchas estrategias de la forma σi (Q), se deduce que la eliminación iterada requerirá exponencialmente muchas iteraciones para completar.96 Se deduce que un algoritmo eficiente para el dominio iterado (estricto o débil) por estrategias puras en los juegos bayesianos, si existe, de alguna manera debe realizar (al menos parte de) muchas iteraciones en un solo paso del algoritmo (porque si esCada paso solo realizó una sola iteración, necesitaríamos exponencialmente muchos pasos). Curiosamente, Knuth et al.[11] argumentan que el dominio iterado parece ser un problema inherentemente secuencial (a la luz de su resultado de que el dominio iterado muy débil es completado P, es decir, aparentemente no es eficientemente paralelizado), lo que sugiere que la agregación de muchas iteraciones puede ser difícil.7. Conclusiones Si bien el concepto de solución de equilibrio NASH se estudia cada vez más intensamente en nuestra comunidad, el concepto quizás más elemental del dominio (iterado) ha recibido mucha menos atención. En este artículo estudiamos varios aspectos computacionales de este concepto. Primero estudiamos el dominio estricto y débil (no iterado), y demostramos que verificar si una estrategia dada está dominada por una estrategia mixta se puede hacer en tiempo polinomial utilizando un solo programa lineal. Luego pasamos al dominio iterado. Demostramos que determinar si hay algún camino que elimine una estrategia dada es completar NP con el dominio débil iterado. Esto nos permitió también mostrar que determinar si hay una ruta que conduce a una solución única es NP-Complete. Ambos resultados se mantienen con y sin dominio por estrategias mixtas.(Ya se conocía una versión más débil del segundo resultado (solo sin dominio por estrategias mixtas) [7]). El dominio estricto iterado, por otro lado, es independiente de la ruta (con y sin dominio por estrategias mixtas) y, por lo tanto, se puede hacer en tiempo polinomial. Luego estudiamos lo que sucede cuando la estrategia dominante puede imponer una probabilidad positiva en solo unas pocas estrategias puras. Primero, demostramos que encontrar la estrategia dominante con un tamaño de soporte mínimo es NP-completado (tanto para dominio estricto como débil). Luego, demostramos que el dominio estricto iterado depende de la ruta cuando hay un límite en el tamaño de soporte de las estrategias dominantes, y que decidir si una estrategia determinada puede ser eliminada por el dominio estricto iterado bajo esta restricción es NP complete (incluso cuando cuandoEl límite en el tamaño de soporte es 3). Finalmente, estudiamos el dominio e iteramos el dominio en los juegos bayesianos, como un ejemplo de un lenguaje de representación conciso para juegos de forma normal que es interesante por derecho propio. Mostramos que, a diferencia de los juegos de forma normal, decidir si una estrategia pura dada está dominada por otra estrategia pura en un juego bayesiano es NP-completado (tanto con dominio estricto como débil);Sin embargo, decidir si una estrategia está dominada por alguna estrategia mixta aún se puede hacer en tiempo polinómico con una sola resolución de programa lineal (tanto con dominio estricto como débil). Finalmente, demostramos que el dominio iterado utilizando estrategias puras puede requerir un número exponencial de iteraciones en un juego bayesiano (tanto con dominio estricto como débil). Hay varias vías para futuras investigaciones. Primero, existe la pregunta abierta de si es posible completar el dominio iterado en los juegos bayesianos en tiempo polinomial (aunque demostramos que a veces se requiere un número exponencial de alternancias entre los jugadores para eliminar estrategias). En segundo lugar, podemos estudiar aspectos computacionales del dominio (iterado) en representaciones concisas de juegos de forma normales que no sean los juegos bayesianos, por ejemplo, en juegos gráficos [9] o juegos de gráficos de efectos locales/de acción [12, 2].(La forma de realizar un dominio muy débil iterado ya se ha estudiado para juegos estocásticos parcialmente observables [8]. Finalmente, podemos preguntarnos si algunos de los algoritmos que describimos (como el del dominio estricto iterado con estrategias mixtas) se pueden hacer más rápido.8. Referencias [1] Krzysztof R. Apt. Pruebas uniformes de independencia de orden para diversos procedimientos de eliminación de estrategia. Contribuciones a la economía teórica, 4 (1), 2004. [2] Nivan A. R. Bhat y Kevin Leyton-Brown. Computación de equilibrios Nash de los juegos de acción de acción. En UAI, 2004. [3] Ben Blum, Christian R. Shelton y Daphne Koller. Un método de continuación para los equilibrios NASH en juegos estructurados. En Ijcai, 2003. [4] Vincent Conitzer y Tuomas Sandholm. Resultados de complejidad sobre los equilibrios de Nash. En IJCAI, páginas 765-771, 2003. [5] Drew Fudenberg y Jean Tirole. Teoría de juego. MIT Press, 1991. [6] Itzhak Gilboa, Ehud Kalai y Eitan Zemel. Por orden de eliminar estrategias dominadas. Operations Research Letters, 9: 85-89, 1990. [7] Itzhak Gilboa, Ehud Kalai y Eitan Zemel. La complejidad de eliminar estrategias dominadas. Matemáticas de Operation Research, 18: 553-565, 1993. [8] Eric A. Hansen, Daniel S. Bernstein y Shlomo Zilberstein. Programación dinámica para juegos estocásticos parcialmente observables. En AAAI, páginas 709-715, 2004. [9] Michael Kearns, Michael Littman y Satinder Singh. Modelos gráficos para la teoría de juegos. En UAI, 2001. [10] Leonid Khachiyan. Un algoritmo polinomial en la programación lineal. Matemáticas soviéticas. Doklady, 20: 191-194, 1979. [11] Donald E. Knuth, Christos H. Papadimitriou y John N Tsitsiklis. Una nota sobre la eliminación de la estrategia en los juegos de Bimatrix. Cartas de investigación de operaciones, 7 (3): 103-107, 1988. [12] Kevin Leyton-Brown y Moshe Tennenholtz. Juegos de efectos locales. En Ijcai, 2003. [13] Richard Lipton, Evangelos Markakis y Aranyak Mehta. Jugando juegos grandes usando estrategias simples. En ACM-EC, páginas 36-41, 2003. [14] Michael Littman y Peter Stone. Un algoritmo de equilibrio NASH en tiempo polinómico para juegos repetidos. En ACM-EC, páginas 48-54, 2003. [15] Leslie M. Marx y Jeroen M. Swinkels. Ordene la independencia para el dominio débil iterado. Juegos y comportamiento económico, 18: 219-245, 1997. [16] Leslie M. Marx y Jeroen M. Swinkels. Corrigendum, Orden Independence para el dominio débil iterado. Juegos y comportamiento económico, 31: 324-329, 2000. [17] Andreu Mas-Colell, Michael Whinston y Jerry R. Green. Teoría microeconómica. Oxford University Press, 1995. [18] Roger Myerson. Teoría del juego: análisis del conflicto. Harvard University Press, Cambridge, 1991. [19] Martin J Osborne y Ariel Rubinstein. Un curso de teoría de juegos. MIT Press, 1994. [20] Christos Papadimitriou. Algoritmos, juegos e Internet. En Stoc, páginas 749-753, 2001. [21] Ryan Porter, Eugene Nudelman y Yoav Shoham. Métodos de búsqueda simples para encontrar un equilibrio de Nash. En AAAI, páginas 664-669, 2004. 97",
    "original_sentences": [
        "Complexity of (Iterated) Dominance∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT We study various computational aspects of solving games using dominance and iterated dominance.",
        "We first study both strict and weak dominance (not iterated), and show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve.",
        "We then move on to iterated dominance.",
        "We show that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance.",
        "This allows us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
        "Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].)",
        "Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time.",
        "We then study what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies.",
        "First, we show that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak dominance).",
        "Then, we show that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3).",
        "Finally, we study Bayesian games.",
        "We show that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak ∗ This material is based upon work supported by the National Science Foundation under ITR grants IIS-0121678 and IIS-0427858, and a Sloan Fellowship. dominance).",
        "Finally, we show that iterated dominance using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak dominance).",
        "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
        "INTRODUCTION In multiagent systems with self-interested agents, the optimal action for one agent may depend on the actions taken by other agents.",
        "In such settings, the agents require tools from game theory to rationally decide on an action.",
        "Game theory offers various formal models of strategic settings-the best-known of which is a game in normal (or matrix) form, specifying a utility (payoff) for each agent for each combination of strategies that the agents choose-as well as solution concepts, which, given a game, specify which outcomes are reasonable (under various assumptions of rationality and common knowledge).",
        "Probably the best-known (and certainly the most-studied) solution concept is that of Nash equilibrium.",
        "A Nash equilibrium specifies a strategy for each player, in such a way that no player has an incentive to (unilaterally) deviate from the prescribed strategy.",
        "Recently, numerous papers have studied computing Nash equilibria in various settings [9, 4, 12, 3, 13, 14], and the complexity of constructing a Nash equilibrium in normal form games has been labeled one of the two most important open problems on the boundary of P today [20].",
        "The problem of computing solutions according to the perhaps more elementary solution concepts of dominance and iterated dominance has received much less attention. (After an early short paper on an easy case [11], the main computational study of these concepts has actually taken place in a paper in the game theory community [7].1 ) A strategy strictly dominates another strategy if it performs strictly 1 This is not to say that computer scientists have ignored 88 better against all vectors of opponent strategies, and weakly dominates it if it performs at least as well against all vectors of opponent strategies, and strictly better against at least one.",
        "The idea is that dominated strategies can be eliminated from consideration.",
        "In iterated dominance, the elimination proceeds in rounds, and becomes easier as more strategies are eliminated: in any given round, the dominating strategy no longer needs to perform better than or as well as the dominated strategy against opponent strategies that were eliminated in earlier rounds.",
        "Computing solutions according to (iterated) dominance is important for at least the following reasons: 1) it can be computationally easier than computing (for instance) a Nash equilibrium (and therefore it can be useful as a preprocessing step in computing a Nash equilibrium), and 2) (iterated) dominance requires a weaker rationality assumption on the players than (for instance) Nash equilibrium, and therefore solutions derived according to it are more likely to occur.",
        "In this paper, we study some fundamental computational questions concerning dominance and iterated dominance, including how hard it is to check whether a given strategy can be eliminated by each of the variants of these notions.",
        "The rest of the paper is organized as follows.",
        "In Section 2, we briefly review definitions and basic properties of normal form games, strict and weak dominance, and iterated strict and weak dominance.",
        "In the remaining sections, we study computational aspects of dominance and iterated dominance.",
        "In Section 3, we study one-shot (not iterated) dominance.",
        "In Section 4, we study iterated dominance.",
        "In Section 5, we study dominance and iterated dominance when the dominating strategy can only place probability on a few pure strategies.",
        "Finally, in Section 6, we study dominance and iterated dominance in Bayesian games. 2.",
        "DEFINITIONS AND BASIC PROPERTIES In this section, we briefly review normal form games, as well as dominance and iterated dominance (both strict and weak).",
        "An n-player normal form game is defined as follows.",
        "Definition 1.",
        "A normal form game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of pure strategies Σi and a utility function ui : Σ1 × Σ2 × . . . × Σn → R (where ui(σ1, σ2, . . . , σn) denotes player is utility when each player j plays action σj).",
        "The two main notions of dominance are defined as follows.",
        "Definition 2.",
        "Player is strategy σi is said to be strictly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
        "Player is strategy σi is said to be weakly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) ≥ ui(σi, σ−i), and for at least one vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
        "In this definition, it is sometimes allowed for the dominating strategy σi to be a mixed strategy, that is, a probability distribution over pure strategies.",
        "In this case, the utilities in dominance altogether.",
        "For example, simple dominance checks are sometimes used as a subroutine in searching for Nash equilibria [21]. the definition are the expected utilities.2 There are other notions of dominance, such as very weak dominance (in which no strict inequality is required, so two strategies can dominate each other), but we will not study them here.",
        "When we are looking at the dominance relations for player i, the other players (−i) can be thought of as a single player.3 Therefore, in the rest of the paper, when we study one-shot (not iterated) dominance, we will focus without loss of generality on two-player games.4 In two-player games, we will generally refer to the players as r (row) and c (column) rather than 1 and 2.",
        "In iterated dominance, dominated strategies are removed from the game, and no longer have any effect on future dominance relations.",
        "Iterated dominance can eliminate more strategies than dominance, as follows. σr may originally not dominate σr because the latter performs better against σc; but then, once σc is removed because it is dominated by σc, σr dominates σr, and the latter can be removed.",
        "For example, in the following game, R can be removed first, after which D is dominated.",
        "L R U 1, 1 0, 0 D 0, 1 1, 0 Either strict or weak dominance can be used in the definition of iterated dominance.",
        "We note that the process of iterated dominance is never helped by removing a dominated mixed strategy, for the following reason.",
        "If σi gives player i a higher utility than σi against mixed strategy σj for player j = i (and strategies σ−{i,j} for the other players), then for at least one pure strategy σj that σj places positive probability on, σi must perform better than σi against σj (and strategies σ−{i,j} for the other players).",
        "Thus, removing the mixed strategy σj does not introduce any new dominances.",
        "More detailed discussions and examples can be found in standard texts on microeconomics or game theory [17, 5].",
        "We are now ready to move on to the core of this paper. 3.",
        "DOMINANCE (NOT ITERATED) In this section, we study the notion of one-shot (not iterated) dominance.",
        "As a first observation, checking whether a given strategy is strictly (weakly) dominated by some pure strategy is straightforward, by checking, for every pure strategy for that player, whether the latter strategy performs strictly better against all the opponents strategies (at least as well against all the opponents strategies, and strictly 2 The dominated strategy σi is, of course, also allowed to be mixed, but this has no technical implications for the paper: when we study one-shot dominance, we ask whether a given strategy is dominated, and it does not matter whether the given strategy is pure or mixed; when we study iterated dominance, there is no use in eliminating mixed strategies, as we will see shortly. 3 This player may have a very large strategy space (one pure strategy for every vector of pure strategies for the players that are being replaced).",
        "Nevertheless, this will not result in an increase in our representation size, because the original representation already had to specify utilities for each of these vectors. 4 We note that a restriction to two-player games would not be without loss of generality for iterated dominance.",
        "This is because for iterated dominance, we need to look at the dominated strategies of each individual player, so we cannot merge any players. 89 better against at least one).5 Next, we show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time by solving a single linear program. (Similar linear programs have been given before [18]; we present the result here for completeness, and because we will build on the linear programs given below in Theorem 6.)",
        "Proposition 1.",
        "Given the row players utilities, a subset Dr of the row players pure strategies Σr, and a distinguished strategy σ∗ r for the row player, we can check in time polynomial in the size of the game (by solving a single linear program of polynomial size) whether there exists some mixed strategy σr, that places positive probability only on strategies in Dr and dominates σ∗ r , both for strict and for weak dominance.",
        "Proof.",
        "Let pdr be the probability that σr places on dr ∈ Dr. We will solve a single linear program in each of our algorithms; linear programs can be solved in polynomial time [10].",
        "For strict dominance, the question is whether the pdr can be set so that for every pure strategy for the column player σc ∈ Σc, dr∈Dr pdr ur(dr, σc) > ur(σ∗ r , σc).",
        "Because the inequality must be strict, we cannot solve this directly by linear programming.",
        "We proceed as follows.",
        "Because the game is finite, we may assume without loss of generality that all utilities are positive (if not, simply add a constant to all utilities.)",
        "Solve the following linear program: minimize dr∈Dr pdr such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc).",
        "If σ∗ r is strictly dominated by some mixed strategy, this linear program has a solution with objective value < 1. (The dominating strategy is a feasible solution with objective value exactly 1.",
        "Because no constraint is binding for this solution, we can reduce one of the probabilities slightly without affecting feasibility, thereby obtaining a solution with objective value < 1.)",
        "Moreover, if this linear program has a solution with objective value < 1, there is a mixed strategy strictly dominating σ∗ r , which can be obtained by taking the LP solution and adding the remaining probability to any strategy (because all the utilities are positive, this will add to the left side of any inequality, so all inequalities will become strict).",
        "For weak dominance, we can solve the following linear program: maximize σc∈Σc (( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc)) such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc); dr∈Dr pdr = 1.",
        "If σ∗ r is weakly dominated by some mixed strategy, then that mixed strategy is a feasible solution to this program with objective value > 0, because for at least one strategy σc ∈ Σc we have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0.",
        "On the other hand, if this program has a solution with objective value > 0, then for at least one strategy σc ∈ Σc we 5 Recall that the assumption of a single opponent (that is, the assumption of two players) is without loss of generality for one-shot dominance. must have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0, and thus the linear programs solution is a weakly dominating mixed strategy. 4.",
        "ITERATED DOMINANCE We now move on to iterated dominance.",
        "It is well-known that iterated strict dominance is path-independent [6, 19]that is, if we remove dominated strategies until no more dominated strategies remain, in the end the remaining strategies for each player will be the same, regardless of the order in which strategies are removed.",
        "Because of this, to see whether a given strategy can be eliminated by iterated strict dominance, all that needs to be done is to repeatedly remove strategies that are strictly dominated, until no more dominated strategies remain.",
        "Because we can check in polynomial time whether any given strategy is dominated (whether or not dominance by mixed strategies is allowed, as described in Section 3), this whole procedure takes only polynomial time.",
        "In the case of iterated dominance by pure strategies with two players, Knuth et al. [11] slightly improve on (speed up) the straightforward implementation of this procedure by keeping track of, for each ordered pair of strategies for a player, the number of opponent strategies that prevent the first strategy from dominating the second.",
        "Hereby the runtime for an m × n game is reduced from O((m + n)4 ) to O((m + n)3 ). (Actually, they only study very weak dominance (for which no strict inequalities are required), but the approach is easily extended.)",
        "In contrast, iterated weak dominance is known to be pathdependent.6 For example, in the following game, using iterated weak dominance we can eliminate M first, and then D, or R first, and then U. L M R U 1, 1 0, 0 1, 0 D 1, 1 1, 0 0, 0 Therefore, while the procedure of removing weakly dominated strategies until no more weakly dominated strategies remain can certainly be executed in polynomial time, which strategies survive in the end depends on the order in which we remove the dominated strategies.",
        "We will investigate two questions for iterated weak dominance: whether a given strategy is eliminated in some path, and whether there is a path to a unique solution (one pure strategy left per player).",
        "We will show that both of these problems are computationally hard.",
        "Definition 3.",
        "Given a game in normal form and a distinguished strategy σ∗ , IWD-STRATEGY-ELIMINATION asks whether there is some path of iterated weak dominance that eliminates σ∗ .",
        "Given a game in normal form, IWDUNIQUE-SOLUTION asks whether there is some path of iterated weak dominance that leads to a unique solution (one strategy left per player).",
        "The following lemma shows a special case of normal form games in which allowing for weak dominance by mixed strategies (in addition to weak dominance by pure strategies) does 6 There is, however, a restriction of weak dominance called nice weak dominance which is path-independent [15, 16].",
        "For an overview of path-independence results, see Apt [1]. 90 not help.",
        "We will prove the hardness results in this setting, so that they will hold whether or not dominance by mixed strategies is allowed.",
        "Lemma 1.",
        "Suppose that all the utilities in a game are in {0, 1}.",
        "Then every pure strategy that is weakly dominated by a mixed strategy is also weakly dominated by a pure strategy.",
        "Proof.",
        "Suppose pure strategy σ is weakly dominated by mixed strategy σ∗ .",
        "If σ gets a utility of 1 against some opponent strategy (or vector of opponent strategies if there are more than 2 players), then all the pure strategies that σ∗ places positive probability on must also get a utility of 1 against that opponent strategy (or else the expected utility would be smaller than 1).",
        "Moreover, at least one of the pure strategies that σ∗ places positive probability on must get a utility of 1 against an opponent strategy that σ gets 0 against (or else the inequality would never be strict).",
        "It follows that this pure strategy weakly dominates σ.",
        "We are now ready to prove the main results of this section.",
        "Theorem 1.",
        "IWD-STRATEGY-ELIMINATION is NPcomplete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed.",
        "Proof.",
        "The problem is in NP because given a sequence of strategies to be eliminated, we can easily check whether this is a valid sequence of eliminations (even when dominance by mixed strategies is allowed, using Proposition 1).",
        "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following IWD-STRATEGY-ELIMINATION instance. (In this instance, we will specify that certain strategies are uneliminable.",
        "A strategy σr can be made uneliminable, even when 0 and 1 are the only allowed utilities, by adding another strategy σr and another opponent strategy σc, so that: 1. σr and σr are the only strategies that give the row player a utility of 1 against σc. 2. σr and σr always give the row player the same utility. 3. σc is the only strategy that gives the column player a utility of 1 against σr, but otherwise σc always gives the column player utility 0.",
        "This makes it impossible to eliminate any of these three strategies.",
        "We will not explicitly specify the additional strategies to make the proof more legible.)",
        "In this proof, we will denote row player strategies by s, and column player strategies by t, to improve legibility.",
        "Let the row players pure strategy set be given as follows.",
        "For every variable v ∈ V , the row player has corresponding strategies s1 +v, s2 +v, s1 −v, s2 −v.",
        "Additionally, the row player has the following 2 strategies: s1 0 and s2 0, where s2 0 = σ∗ r (that is, it is the strategy we seek to eliminate).",
        "Finally, for every clause c ∈ C, the row player has corresponding strategies s1 c (uneliminable) and s2 c. Let the column players pure strategy set be given as follows.",
        "For every variable v ∈ V , the column player has a corresponding strategy tv.",
        "For every clause c ∈ C, the column player has a corresponding strategy tc, and additionally, for every literal l ∈ L that occurs in c, a strategy tc,l.",
        "For every variable v ∈ V , the column player has corresponding strategies t+v, t−v (both uneliminable).",
        "Finally, the column player has three additional strategies: t1 0 (uneliminable), t2 0, and t1.",
        "The utility function for the row player is given as follows: • ur(s1 +v, tv) = 0 for all v ∈ V ; • ur(s2 +v, tv) = 1 for all v ∈ V ; • ur(s1 −v, tv) = 1 for all v ∈ V ; • ur(s2 −v, tv) = 0 for all v ∈ V ; • ur(s1 +v, t1) = 1 for all v ∈ V ; • ur(s2 +v, t1) = 0 for all v ∈ V ; • ur(s1 −v, t1) = 0 for all v ∈ V ; • ur(s2 −v, t1) = 1 for all v ∈ V ; • ur(sb +v, t+v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sb −v, t−v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sl, t) = 0 otherwise for all l ∈ L and t ∈ S2; • ur(s1 0, tc) = 0 for all c ∈ C; • ur(s2 0, tc) = 1 for all c ∈ C; • ur(sb 0, t1 0) = 1 for all b ∈ {1, 2}; • ur(s1 0, t2 0) = 1; • ur(s2 0, t2 0) = 0; • ur(sb 0, t) = 0 otherwise for all b ∈ {1, 2} and t ∈ S2; • ur(sb c, t) = 0 otherwise for all c ∈ C and b ∈ {1, 2}; and the row players utility is 0 in every other case.",
        "The utility function for the column player is given as follows: • uc(s, tv) = 0 for all v ∈ V and s ∈ S1; • uc(s, t1) = 0 for all s ∈ S1; • uc(s2 l , tc) = 1 for all c ∈ C and l ∈ L where l ∈ c (literal l occurs in clause c); • uc(s2 l2 , tc,l1 ) = 1 for all c ∈ C and l1, l2 ∈ L, l1 = l2 where l2 ∈ c; • uc(s1 c, tc) = 1 for all c ∈ C; • uc(s2 c, tc) = 0 for all c ∈ C; • uc(sb c, tc,l) = 1 for all c ∈ C, l ∈ L, and b ∈ {1, 2}; • uc(s2, tc) = uc(s2, tc,l) = 0 otherwise for all c ∈ C and l ∈ L; and the column players utility is 0 in every other case.",
        "We now show that the two instances are equivalent.",
        "First, suppose there is a solution to the satisfiability instance: that is, a truth-value assignment to the variables in V such that all clauses are satisfied.",
        "Then, consider the following sequence of eliminations in our game: 1.",
        "For every variable v that is set to true in the assignment, eliminate tv (which gives the column player utility 0 everywhere). 2.",
        "Then, for every variable v that is set to true in the assignment, eliminate s2 +v using s1 +v (which is possible because tv has been eliminated, and because t1 has not been eliminated (yet)). 3.",
        "Now eliminate t1 (which gives the column player utility 0 everywhere). 4.",
        "Next, for every variable v that is set to false in the assignment, eliminate s2 −v using s1 −v (which is possible because t1 has been eliminated, and because tv has not been eliminated (yet)). 5.",
        "For every clause c which has the variable corresponding to one of its positive literals l = +v set to true in the assignment, eliminate tc using tc,l (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 6.",
        "For every clause c which has the variable corresponding to one of its negative literals l = −v set to false in the assignment, eliminate tc using tc,l 91 (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 7.",
        "Because the assignment satisfied the formula, all the tc have now been eliminated.",
        "Thus, we can eliminate s2 0 = σ∗ r using s1 0.",
        "It follows that there is a solution to the IWD-STRATEGY-ELIMINATION instance.",
        "Now suppose there is a solution to the IWD-STRATEGYELIMINATION instance.",
        "By Lemma 1, we can assume that all the dominances are by pure strategies.",
        "We first observe that only s1 0 can eliminate s2 0 = σ∗ r , because it is the only other strategy that gets the row player a utility of 1 against t1 0, and t1 0 is uneliminable.",
        "However, because s2 0 performs better than s1 0 against the tc strategies, it follows that all of the tc strategies must be eliminated.",
        "For each c ∈ C, the strategy tc can only be eliminated by one of the strategies tc,l (with the same c), because these are the only other strategies that get the column player a utility of 1 against s1 c, and s1 c is uneliminable.",
        "But, in order for some tc,l to eliminate tc, s2 l must be eliminated first.",
        "Only s1 l can eliminate s2 l , because it is the only other strategy that gets the row player a utility of 1 against tl, and tl is uneliminable.",
        "We next show that for every v ∈ V only one of s2 +v, s2 −v can be eliminated.",
        "This is because in order for s1 +v to eliminate s2 +v, tv needs to have been eliminated and t1, not (so tv must be eliminated before t1); but in order for s1 −v to eliminate s2 −v, t1 needs to have been eliminated and tv, not (so t1 must be eliminated before tv).",
        "So, set v to true if s2 +v is eliminated, and to false otherwise Because by the above, for every clause c, one of the s2 l with l ∈ c must be eliminated, it follows that this is a satisfying assignment to the satisfiability instance.",
        "Using Theorem 1, it is now (relatively) easy to show that IWD-UNIQUE-SOLUTION is also NP-complete under the same restrictions.",
        "Theorem 2.",
        "IWD-UNIQUE-SOLUTION is NP-complete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed.",
        "Proof.",
        "Again, the problem is in NP because we can nondeterministically choose the sequence of eliminations and verify whether it is correct.",
        "To show NP-hardness, we reduce an arbitrary IWD-STRATEGY-ELIMINATION instance to the following IWD-UNIQUE-SOLUTION instance.",
        "Let all the strategies for each player from the original instance remain part of the new instance, and let the utilities resulting from the players playing a pair of these strategies be the same.",
        "We add three additional strategies σ1 r , σ2 r , σ3 r for the row player, and three additional strategies σ1 c , σ2 c , σ3 c for the column player.",
        "Let the additional utilities be as follows: • ur(σr, σj c) = 1 for all σr /∈ {σ1 r , σ2 r , σ3 r } and j ∈ {2, 3}; • ur(σi r, σc) = 1 for all i ∈ {1, 2, 3} and σc /∈ {σ2 c , σ3 c }; • ur(σi r, σ2 c ) = 1 for all i ∈ {2, 3}; • ur(σ1 r , σ3 c ) = 1; • and the row players utility is 0 in all other cases involving a new strategy. • uc(σ3 r , σc) = 1 for all σc /∈ {σ1 c , σ2 c , σ3 c }; • uc(σ∗ r , σj c) = 1 for all j ∈ {2, 3} (σ∗ r is the strategy to be eliminated in the original instance); • uc(σi r, σ1 c ) = 1 for all i ∈ {1, 2}; • ur(σ1 r , σ2 c ) = 1; • ur(σ2 r , σ3 c ) = 1; • and the column players utility is 0 in all other cases involving a new strategy.",
        "We proceed to show that the two instances are equivalent.",
        "First suppose there exists a solution to the original IWDSTRATEGY-ELIMINATION instance.",
        "Then, perform the same sequence of eliminations to eliminate σ∗ r in the new IWD-UNIQUE-SOLUTION instance. (This is possible because at any stage, any weak dominance for the row player in the original instance is still a weak dominance in the new instance, because the two strategies utilities for the row player are the same when the column player plays one of the new strategies; and the same is true for the column player.)",
        "Once σ∗ r is eliminated, let σ1 c eliminate σ2 c . (It performs better against σ2 r .)",
        "Then, let σ1 r eliminate all the other remaining strategies for the row player. (It always performs better against either σ1 c or σ3 c .)",
        "Finally, σ1 c is the unique best response against σ1 r among the column players remaining strategies, so let it eliminate all the other remaining strategies for the column player.",
        "Thus, there exists a solution to the IWD-UNIQUE-SOLUTION instance.",
        "Now suppose there exists a solution to the IWD-UNIQUESOLUTION instance.",
        "By Lemma 1, we can assume that all the dominances are by pure strategies.",
        "We will show that none of the new strategies (σ1 r , σ2 r , σ3 r , σ1 c , σ2 c , σ3 c ) can either eliminate another strategy, or be eliminated before σ∗ r is eliminated.",
        "Thus, there must be a sequence of eliminations ending in the elimination of σ∗ r , which does not involve any of the new strategies, and is therefore a valid sequence of eliminations in the original game (because all original strategies perform the same against each new strategy).",
        "We now show that this is true by exhausting all possibilities for the first elimination before σ∗ r is eliminated that involves a new strategy.",
        "None of the σi r can be eliminated by a σr /∈ {σ1 r , σ2 r , σ3 r }, because the σi r perform better against σ1 c . σ1 r cannot eliminate any other strategy, because it always performs poorer against σ2 c . σ2 r and σ3 r are equivalent from the row players perspective (and thus cannot eliminate each other), and cannot eliminate any other strategy because they always perform poorer against σ3 c .",
        "None of the σj c can be eliminated by a σc /∈ {σ1 c , σ2 c , σ3 c }, because the σj c always perform better against either σ1 r or σ2 r . σ1 c cannot eliminate any other strategy, because it always performs poorer against either σ∗ r or σ3 r . σ2 c cannot eliminate any other strategy, because it always performs poorer against σ2 r or σ3 r . σ3 c cannot eliminate any other strategy, because it always performs poorer against σ1 r or σ3 r .",
        "Thus, there exists a solution to the IWDSTRATEGY-ELIMINATION instance.",
        "A slightly weaker version of the part of Theorem 2 concerning dominance by pure strategies only is the main result of Gilboa et al. [7]. (Besides not proving the result for dominance by mixed strategies, the original result was weaker because it required utilities {0, 1, 2, 3, 4, 5, 6, 7, 8} rather than just {0, 1} (and because of this, our Lemma 1 cannot be applied to it to get the result for mixed strategies).) 5. (ITERATED) DOMINANCE USING MIXED STRATEGIES WITH SMALL SUPPORTS When showing that a strategy is dominated by a mixed strategy, there are several reasons to prefer exhibiting a 92 dominating strategy that places positive probability on as few pure strategies as possible.",
        "First, this will reduce the number of bits required to specify the dominating strategy (and thus the proof of dominance can be communicated quicker): if the dominating mixed strategy places positive probability on only k strategies, then it can be specified using k real numbers for the probabilities, plus k log m (where m is the number of strategies for the player under consideration) bits to indicate which strategies are used.",
        "Second, the proof of dominance will be cleaner: for a dominating mixed strategy, it is typically (always in the case of strict dominance) possible to spread some of the probability onto any unused pure strategy and still have a dominating strategy, but this obscures which pure strategies are the ones that are key in making the mixed strategy dominating.",
        "Third, because (by the previous) the argument for eliminating the dominated strategy is simpler and easier to understand, it is more likely to be accepted.",
        "Fourth, the level of risk neutrality required for the argument to work is reduced, at least in the extreme case where dominance by a single pure strategy can be exhibited (no risk neutrality is required here).",
        "This motivates the following problem.",
        "Definition 4 (MINIMUM-DOMINATING-SET).",
        "We are given the row players utilities of a game in normal form, a distinguished strategy σ∗ for the row player, a specification of whether the dominance should be strict or weak, and a number k. We are asked whether there exists a mixed strategy σ for the row player that places positive probability on at most k pure strategies, and dominates σ∗ in the required sense.",
        "Unfortunately, this problem is NP-complete.",
        "Theorem 3.",
        "MINIMUM-DOMINATING-SET is NPcomplete, both for strict and for weak dominance.",
        "Proof.",
        "The problem is in NP because we can nondeterministically choose a set of at most k strategies to give positive probability, and decide whether we can dominate σ∗ with these k strategies as described in Proposition 1.",
        "To show NP-hardness, we reduce an arbitrary SET-COVER instance (given a set S, subsets S1, S2, . . . , Sr, and a number t, can all of S be covered by at most t of the subsets?) to the following MINIMUM-DOMINATING-SET instance.",
        "For every element s ∈ S, there is a pure strategy σs for the column player.",
        "For every subset Si, there is a pure strategy σSi for the row player.",
        "Finally, there is the distinguished pure strategy σ∗ for the row player.",
        "The row players utilities are as follows: ur(σSi , σs) = t + 1 if s ∈ Si; ur(σSi , σs) = 0 if s /∈ Si; ur(σ∗ , σs) = 1 for all s ∈ S. Finally, we let k = t. We now proceed to show that the two instances are equivalent.",
        "First suppose there exists a solution to the SET-COVER instance.",
        "Without loss of generality, we can assume that there are exactly k subsets in the cover.",
        "Then, for every Si that is in the cover, let the dominating strategy σ place exactly 1 k probability on the corresponding pure strategy σSi .",
        "Now, if we let n(s) be the number of subsets in the cover containing s (we observe that that n(s) ≥ 1), then for every strategy σs for the column player, the row players expected utility for playing σ when the column player is playing σs is u(σ, σs) = n(s) k (k + 1) ≥ k+1 k > 1 = u(σ∗ , σs).",
        "So σ strictly (and thus also weakly) dominates σ∗ , and there exists a solution to the MINIMUM-DOMINATING-SET instance.",
        "Now suppose there exists a solution to the MINIMUMDOMINATING-SET instance.",
        "Consider the (at most k) pure strategies of the form σSi on which the dominating mixed strategy σ places positive probability, and let T be the collection of the corresponding subsets Si.",
        "We claim that T is a cover.",
        "For suppose there is some s ∈ S that is not in any of the subsets in T .",
        "Then, if the column player plays σs, the row player (when playing σ) will always receive utility 0-as opposed to the utility of 1 the row player would receive for playing σ∗ , contradicting the fact that σ dominates σ∗ (whether this dominance is weak or strict).",
        "It follows that there exists a solution to the SET-COVER instance.",
        "On the other hand, if we require that the dominating strategy only places positive probability on a very small number of pure strategies, then it once again becomes easy to check whether a strategy is dominated.",
        "Specifically, to find out whether player is strategy σ∗ is dominated by a strategy that places positive probability on only k pure strategies, we can simply check, for every subset of k of player is pure strategies, whether there is a strategy that places positive probability only on these k strategies and dominates σ∗ , using Proposition 1.",
        "This requires only O(|Σi|k ) such checks.",
        "Thus, if k is a constant, this constitutes a polynomial-time algorithm.",
        "A natural question to ask next is whether iterated strict dominance remains computationally easy when dominating strategies are required to place positive probability on at most k pure strategies, where k is a small constant. (We have already shown in Section 4 that iterated weak dominance is hard even when k = 1, that is, only dominance by pure strategies is allowed.)",
        "Of course, if iterated strict dominance were path-independent under this restriction, computational easiness would follow as it did in Section 4.",
        "However, it turns out that this is not the case.",
        "Observation 1.",
        "If we restrict the dominating strategies to place positive probability on at most two pure strategies, iterated strict dominance becomes path-dependent.",
        "Proof.",
        "Consider the following game: 7, 1 0, 0 0, 0 0, 0 7, 1 0, 0 3, 0 3, 0 0, 0 0, 0 0, 0 3, 1 1, 0 1, 0 1, 0 Let (i, j) denote the outcome in which the row player plays the ith row and the column player plays the jth column.",
        "Because (1, 1), (2, 2), and (4, 3) are all Nash equilibria, none of the column players pure strategies will ever be eliminated, and neither will rows 1, 2, and 4.",
        "We now observe that randomizing uniformly over rows 1 and 2 dominates row 3, and randomizing uniformly over rows 3 and 4 dominates row 5.",
        "However, if we eliminate row 3 first, it becomes impossible to dominate row 5 without randomizing over at least 3 pure strategies.",
        "Indeed, iterated strict dominance turns out to be hard even when k = 3.",
        "Theorem 4.",
        "If we restrict the dominating strategies to place positive probability on at most three pure strategies, it becomes NP-complete to decide whether a given strategy can be eliminated using iterated strict dominance. 93 Proof.",
        "The problem is in NP because given a sequence of strategies to be eliminated, we can check in polynomial time whether this is a valid sequence of eliminations (for any strategy to be eliminated, we can check, for every subset of three other strategies, whether there is a strategy placing positive probability on only these three strategies that dominates the strategy to be eliminated, using Proposition 1).",
        "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following two-player game.",
        "For every variable v ∈ V , the row player has strategies s+v, s−v, s1 v, s2 v, s3 v, s4 v, and the column player has strategies t1 v, t2 v, t3 v, t4 v. For every clause c ∈ C, the row player has a strategy sc, and the column player has a strategy tc, as well as, for every literal l occurring in c, an additional strategy tl c. The row player has two additional strategies s1 and s2. (s2 is the strategy that we are seeking to eliminate.)",
        "Finally, the column player has one additional strategy t1.",
        "The utility function for the row player is given as follows (where is some sufficiently small number): • ur(s+v, tj v) = 4 if j ∈ {1, 2}, for all v ∈ V ; • ur(s+v, tj v) = 1 if j ∈ {3, 4}, for all v ∈ V ; • ur(s−v, tj v) = 1 if j ∈ {1, 2}, for all v ∈ V ; • ur(s−v, tj v) = 4 if j ∈ {3, 4}, for all v ∈ V ; • ur(s+v, t) = ur(s−v, t) = 0 for all v ∈ V and t /∈ {t1 v, t2 v, t3 v, t4 v}; • ur(si v, ti v) = 13 for all v ∈ V and i ∈ {1, 2, 3, 4}; • ur(si v, t) = for all v ∈ V , i ∈ {1, 2, 3, 4}, and t = ti v; • ur(sc, tc) = 2 for all c ∈ C; • ur(sc, t) = 0 for all c ∈ C and t = tc; • ur(s1, t1) = 1 + ; • ur(s1, t) = for all t = t1; • ur(s2, t1) = 1; • ur(s2, tc) = 1 for all c ∈ C; • ur(s2, t) = 0 for all t /∈ {t1} ∪ {tc : c ∈ C}.",
        "The utility function for the column player is given as follows: • uc(si v, ti v) = 1 for all v ∈ V and i ∈ {1, 2, 3, 4}; • uc(s, ti v) = 0 for all v ∈ V , i ∈ {1, 2, 3, 4}, and s = si v; • uc(sc, tc) = 1 for all c ∈ C; • uc(sl, tc) = 1 for all c ∈ C and l ∈ L occurring in c; • uc(s, tc) = 0 for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c}; • uc(sc, tl c) = 1 + for all c ∈ C; • uc(sl , tl c) = 1 + for all c ∈ C and l = l occurring in c; • uc(s, tl c) = for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c, l = l }; • uc(s2, t1) = 1; • uc(s, t1) = 0 for all s = s2.",
        "We now show that the two instances are equivalent.",
        "First, suppose that there is a solution to the satisfiability instance.",
        "Then, consider the following sequence of eliminations in our game: 1.",
        "For every variable v that is set to true in the satisfying assignment, eliminate s+v with the mixed strategy σr that places probability 1/3 on s−v, probability 1/3 on s1 v, and probability 1/3 on s2 v. (The expected utility of playing σr against t1 v or t2 v is 14/3 > 4; against t3 v or t4 v, it is 4/3 > 1; and against anything else it is 2 /3 > 0.",
        "Hence the dominance is valid.) 2.",
        "Similarly, for every variable v that is set to false in the satisfying assignment, eliminate s−v with the mixed strategy σr that places probability 1/3 on s+v, probability 1/3 on s3 v, and probability 1/3 on s4 v. (The expected utility of playing σr against t1 v or t2 v is 4/3 > 1; against t3 v or t4 v, it is 14/3 > 4; and against anything else it is 2 /3 > 0.",
        "Hence the dominance is valid.) 3.",
        "For every c ∈ C, eliminate tc with any tl c for which l was set to true in the satisfying assignment. (This is a valid dominance because tl c performs better than tc against any strategy other than sl, and we eliminated sl in step 1 or in step 2.) 4.",
        "Finally, eliminate s2 with s1. (This is a valid dominance because s1 performs better than s2 against any strategy other than those in {tc : c ∈ C}, which we eliminated in step 3.)",
        "Hence, there is an elimination path that eliminates s2.",
        "Now, suppose that there is an elimination path that eliminates s2.",
        "The strategy that eventually dominates s2 must place most of its probability on s1, because s1 is the only other strategy that performs well against t1, which cannot be eliminated before s2.",
        "But, s1 performs significantly worse than s2 against any strategy tc with c ∈ C, so it follows that all these strategies must be eliminated first.",
        "Each strategy tc can only be eliminated by a strategy that places most of its weight on the corresponding strategies tl c with l ∈ c, because they are the only other strategies that perform well against sc, which cannot be eliminated before tc.",
        "But, each strategy tl c performs significantly worse than tc against sl, so it follows that for every clause c, for one of the literals l occurring in it, sl must be eliminated first.",
        "Now, strategies of the form tj v will never be eliminated because they are the unique best responses to the corresponding strategies sj v (which are, in turn, the best responses to the corresponding tj v).",
        "As a result, if strategy s+v (respectively, s−v) is eliminated, then its opposite strategy s−v (respectively, s+v) can no longer be eliminated, for the following reason.",
        "There is no other pure strategy remaining that gets a significant utility against more than one of the strategies t1 v, t2 v, t3 v, t4 v, but s−v (respectively, s+v) gets significant utility against all 4, and therefore cannot be dominated by a mixed strategy placing positive probability on at most 3 strategies.",
        "It follows that for each v ∈ V , at most one of the strategies s+v, s−v is eliminated, in such a way that for every clause c, for one of the literals l occurring in it, sl must be eliminated.",
        "But then setting all the literals l such that sl is eliminated to true constitutes a solution to the satisfiability instance.",
        "In the next section, we return to the setting where there is no restriction on the number of pure strategies on which a dominating mixed strategy can place positive probability. 6. (ITERATED) DOMINANCE IN BAYESIAN GAMES So far, we have focused on normal form games that are flatly represented (that is, every matrix entry is given ex94 plicitly).",
        "However, for many games, the flat representation is too large to write down explicitly, and instead, some representation that exploits the structure of the game needs to be used.",
        "Bayesian games, besides being of interest in their own right, can be thought of as a useful structured representation of normal form games, and we will study them in this section.",
        "In a Bayesian game, each player first receives privately held preference information (the players type) from a distribution, which determines the utility that that player receives for every outcome of (that is, vector of actions played in) the game.",
        "After receiving this type, the player plays an action based on it.7 Definition 5.",
        "A Bayesian game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of actions Ai, a (finite) type space Θi with a probability distribution πi over it, and a utility function ui : Θi × A1 × A2 × . . . × An → R (where ui(θi, a1, a2, . . . , an) denotes player is utility when is type is θi and each player j plays action aj).",
        "A pure strategy in a Bayesian game is a mapping from types to actions, σi : Θi → Ai, where σi(θi) denotes the action that player i plays for type θi.",
        "Any vector of pure strategies in a Bayesian game defines an (expected) utility for each player, and therefore we can translate a Bayesian game into a normal form game.",
        "In this normal form game, the notions of dominance and iterated dominance are defined as before.",
        "However, the normal form representation of the game is exponentially larger than the Bayesian representation, because each player i has |Ai||Θi| distinct pure strategies.",
        "Thus, any algorithm for Bayesian games that relies on expanding the game to its normal form will require exponential time.",
        "Specifically, our easiness results for normal form games do not directly transfer to this setting.",
        "In fact, it turns out that checking whether a strategy is dominated by a pure strategy is hard in Bayesian games.",
        "Theorem 5.",
        "In a Bayesian game, it is NP-complete to decide whether a given pure strategy σr : Θr → Ar is dominated by some other pure strategy (both for strict and weak dominance), even when the row players distribution over types is uniform.",
        "Proof.",
        "The problem is in NP because it is easy to verify whether a candidate dominating strategy is indeed a dominating strategy.",
        "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a set of clauses C using variables from V ) to the following Bayesian game.",
        "Let the row players action set be Ar = {t, f, 0} and let the column players action set be Ac = {ac : c ∈ C}.",
        "Let the row players type set be Θr = {θv : v ∈ V }, with a distribution πr that is uniform.",
        "Let the row players utility function be as follows: • ur(θv, 0, ac) = 0 for all v ∈ V and c ∈ C; • ur(θv, b, ac) = |V | for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b satisfies c; • ur(θv, b, ac) = −1 for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b does not satisfy c. 7 In general, a player can also receive a signal about the other players preferences, but we will not concern ourselves with that here.",
        "Let the pure strategy to be dominated be the one that plays 0 for every type.",
        "We show that the strategy is dominated by a pure strategy if and only if there is a solution to the satisfiability instance.",
        "First, suppose there is a solution to the satisfiability instance.",
        "Then, let σd r be given by: σd r (θv) = t if v is set to true in the solution to the satisfiability instance, and σd r (θv) = f otherwise.",
        "Then, against any action ac by the column player, there is at least one type θv such that either +v ∈ c and σd r (θv) = t, or −v ∈ c and σd r (θv) = f. Thus, the row players expected utility against action ac is at least |V | |V | − |V |−1 |V | = 1 |V | > 0.",
        "So, σd r is a dominating strategy.",
        "Now, suppose there is a dominating pure strategy σd r .",
        "This dominating strategy must play t or f for at least one type.",
        "Thus, against any ac by the column player, there must at least be some type θv for which ur(θv, σd r (θv), ac) > 0.",
        "That is, there must be at least one variable v such that setting v to σd r (θv) satifies c. But then, setting each v to σd r (θv) must satisfy all the clauses.",
        "So a satisfying assignment exists.",
        "However, it turns out that we can modify the linear programs from Proposition 1 to obtain a polynomial time algorithm for checking whether a strategy is dominated by a mixed strategy in Bayesian games.",
        "Theorem 6.",
        "In a Bayesian game, it can be decided in polynomial time whether a given (possibly mixed) strategy σr is dominated by some other mixed strategy, using linear programming (both for strict and weak dominance).",
        "Proof.",
        "We can modify the linear programs presented in Proposition 1 as follows.",
        "For strict dominance, again assuming without loss of generality that all the utilities in the game are positive, use the following linear program (in which pσr r (θr, ar) is the probability that σr, the strategy to be dominated, places on ar for type θr): minimize θr∈Θr ar∈Ar pr(ar) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) ≤ 1.",
        "Assuming that π(θr) > 0 for all θr ∈ Θr, this program will return an objective value smaller than |Θr| if and only if σr is strictly dominated, by reasoning similar to that done in Proposition 1.",
        "For weak dominance, use the following linear program: maximize ac∈Ac ( θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar)− θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar)) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) = 1.",
        "This program will return an objective value greater than 0 if and only if σr is weakly dominated, by reasoning similar to that done in Proposition 1.",
        "We now turn to iterated dominance in Bayesian games.",
        "Na¨ıvely, one might argue that iterated dominance in Bayesian 95 games always requires an exponential number of steps when a significant fraction of the games pure strategies can be eliminated, because there are exponentially many pure strategies.",
        "However, this is not a very strong argument because oftentimes we can eliminate exponentially many pure strategies in one step.",
        "For example, if for some type θr ∈ Θr we have, for all ac ∈ Ac, that u(θr, a1 r, ac) > u(θr, a2 r, ac), then any pure strategy for the row player which plays action a2 r for type θr is dominated (by the strategy that plays action a1 r for type θr instead)-and there are exponentially many (|Ar||Θr|−1 ) such strategies.",
        "It is therefore conceivable that we need only polynomially many eliminations of collections of a players strategies.",
        "However, the following theorem shows that this is not the case, by giving an example where an exponential number of iterations (that is, alternations between the players in eliminating strategies) is required. (We emphasize that this is not a result about computational complexity.)",
        "Theorem 7.",
        "Even in symmetric 3-player Bayesian games, iterated dominance by pure strategies can require an exponential number of iterations (both for strict and weak dominance), even with only three actions per player.",
        "Proof.",
        "Let each player i ∈ {1, 2, 3} have n + 1 types θ1 i , θ2 i , . . . , θn+1 i .",
        "Let each player i have 3 actions ai, bi, ci, and let the utility function of each player be defined as follows. (In the below, i + 1 and i + 2 are shorthand for i + 1(mod 3) and i + 2(mod 3) when used as player indices.",
        "Also, −∞ can be replaced by a sufficiently negative number.",
        "Finally, δ and should be chosen to be very small (even compared to 2−(n+1) ), and should be more than twice as large as δ.) • ui(θ1 i ; ai, ci+1, ci+2) = −1; • ui(θ1 i ; ai, si+1, si+2) = 0 for si+1 = ci+1 or si+2 = ci+2; • ui(θ1 i ; bi, si+1, si+2) = − for si+1 = ai+1 and si+2 = ai+2; • ui(θ1 i ; bi, si+1, si+2) = −∞ for si+1 = ai+1 or si+2 = ai+2; • ui(θ1 i ; ci, si+1, si+2) = −∞ for all si+1, si+2; • ui(θj i ; ai, si+1, si+2) = −∞ for all si+1, si+2 when j > 1; • ui(θj i ; bi, si+1, si+2) = − for all si+1, si+2 when j > 1; • ui(θj i ; ci, si+1, ci+2) = δ − − 1/2 for all si+1 when j > 1; • ui(θj i ; ci, si+1, si+2) = δ− for all si+1 and si+2 = ci+2 when j > 1.",
        "Let the distribution over each players types be given by p(θj i ) = 2−j (with the exception that p(θ2 i ) = 2−2 +2−(n+1) ).",
        "We will be interested in eliminating strategies of the following form: play bi for type θ1 i , and play one of bi or ci otherwise.",
        "Because the utility function is the same for any type θj i with j > 1, these strategies are effectively defined by the total probability that they place on ci,8 which is t2 i (2−2 + 2−(n+1) ) + n+1 j=3 tj i 2−j where tj i = 1 if player i 8 Note that the strategies are still pure strategies; the probability placed on an action by a strategy here is simply the sum of the probabilities of the types for which the strategy chooses that action. plays ci for type θj i , and 0 otherwise.",
        "This probability is different for any two different strategies of the given form, and we have exponentially many different strategies of the given form.",
        "For any probability q which can be expressed as t2(2−2 + 2−(n+1) ) + n+1 j=3 tj2−j (with all tj ∈ {0, 1}), let σi(q) denote the (unique) strategy of the given form for player i which places a total probability of q on ci.",
        "Any strategy that plays ci for type θ1 i or ai for some type θj i with j > 1 can immediately be eliminated.",
        "We will show that, after that, we must eliminate the strategies σi(q) with high q first, slowly working down to those with lower q.",
        "Claim 1: If σi+1(q ) and σi+2(q ) have not yet been eliminated, and q < q , then σi(q) cannot yet be eliminated.",
        "Proof: First, we show that no strategy σi(q ) can eliminate σi(q).",
        "Against σi+1(q ), σi+2(q ), the utility of playing σi(p) is − + p · δ − p · q /2.",
        "Thus, when q = 0, it is best to set p as high as possible (and we note that σi+1(0) and σi+2(0) have not been eliminated), but when q > 0, it is best to set p as low as possible because δ < q /2.",
        "Thus, whether q > q or q < q , σi(q) will always do strictly better than σi(q ) against some remaining opponent strategies.",
        "Hence, no strategy σi(q ) can eliminate σi(q).",
        "The only other pure strategies that could dominate σi(q) are strategies that play ai for type θ1 i , and bi or ci for all other types.",
        "Let us take such a strategy and suppose that it plays c with probability p. Against σi+1(q ), σi+2(q ) (which have not yet been eliminated), the utility of playing this strategy is −(q )2 /2 − /2 + p · δ − p · q /2.",
        "On the other hand, playing σi(q) gives − + q · δ − q · q /2.",
        "Because q > q, we have −(q )2 /2 < −q · q /2, and because δ and are small, it follows that σi(q) receives a higher utility.",
        "Therefore, no strategy dominates σi(q), proving the claim.",
        "Claim 2: If for all q > q, σi+1(q ) and σi+2(q ) have been eliminated, then σi(q) can be eliminated.",
        "Proof: Consider the strategy for player i that plays ai for type θ1 i , and bi for all other types (call this strategy σi); we claim σi dominates σi(q).",
        "First, if either of the other players k plays ak for θ1 k, then σi performs better than σi(q) (which receives −∞ in some cases).",
        "Because the strategies for player k that play ck for type θ1 k, or ak for some type θj k with j > 1, have already been eliminated, all that remains to check is that σi performs better than σi(q) whenever both of the other two players play strategies of the following form: play bk for type θ1 k, and play one of bk or ck otherwise.",
        "We note that among these strategies, there are none left that place probability greater than q on ck.",
        "Letting qk denote the probability with which player k plays ck, the expected utility of playing σi is −qi+1 · qi+2/2 − /2.",
        "On the other hand, the utility of playing σi(q) is − + q · δ − q · qi+2/2.",
        "Because qi+1 ≤ q, the difference between these two expressions is at least /2 − δ, which is positive.",
        "It follows that σi dominates σi(q).",
        "From Claim 2, it follows that all strategies of the form σi(q) will eventually be eliminated.",
        "However, Claim 1 shows that we cannot go ahead and eliminate multiple such strategies for one player, unless at least one other player simultaneously keeps up in the eliminated strategies: every time a σi(q) is eliminated such that σi+1(q) and σi+2(q) have not yet been eliminated, we need to eliminate one of the latter two strategies before any σi(q ) with q > q can be eliminated-that is, we need to alternate between players.",
        "Because there are exponentially many strategies of the form σi(q), it follows that iterated elimination will require exponentially many iterations to complete. 96 It follows that an efficient algorithm for iterated dominance (strict or weak) by pure strategies in Bayesian games, if it exists, must somehow be able to perform (at least part of) many iterations in a single step of the algorithm (because if each step only performed a single iteration, we would need exponentially many steps).",
        "Interestingly, Knuth et al. [11] argue that iterated dominance appears to be an inherently sequential problem (in light of their result that iterated very weak dominance is P-complete, that is, apparently not efficiently parallelizable), suggesting that aggregating many iterations may be difficult. 7.",
        "CONCLUSIONS While the Nash equilibrium solution concept is studied more and more intensely in our community, the perhaps more elementary concept of (iterated) dominance has received much less attention.",
        "In this paper we studied various computational aspects of this concept.",
        "We first studied both strict and weak dominance (not iterated), and showed that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve.",
        "We then moved on to iterated dominance.",
        "We showed that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance.",
        "This allowed us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
        "Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].)",
        "Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time.",
        "We then studied what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies.",
        "First, we showed that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak dominance).",
        "Then, we showed that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3).",
        "Finally, we studied dominance and iterated dominance in Bayesian games, as an example of a concise representation language for normal form games that is interesting in its own right.",
        "We showed that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak dominance).",
        "Finally, we showed that iterated dominance using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak dominance).",
        "There are various avenues for future research.",
        "First, there is the open question of whether it is possible to complete iterated dominance in Bayesian games in polynomial time (even though we showed that an exponential number of alternations between the players in eliminating strategies is sometimes required).",
        "Second, we can study computational aspects of (iterated) dominance in concise representations of normal form games other than Bayesian games-for example, in graphical games [9] or local-effect/action graph games [12, 2]. (How to efficiently perform iterated very weak dominance has already been studied for partially observable stochastic games [8].)",
        "Finally, we can ask whether some of the algorithms we described (such as the one for iterated strict dominance with mixed strategies) can be made faster. 8.",
        "REFERENCES [1] Krzysztof R. Apt.",
        "Uniform proofs of order independence for various strategy elimination procedures.",
        "Contributions to Theoretical Economics, 4(1), 2004. [2] Nivan A. R. Bhat and Kevin Leyton-Brown.",
        "Computing Nash equilibria of action-graph games.",
        "In UAI, 2004. [3] Ben Blum, Christian R. Shelton, and Daphne Koller.",
        "A continuation method for Nash equilibria in structured games.",
        "In IJCAI, 2003. [4] Vincent Conitzer and Tuomas Sandholm.",
        "Complexity results about Nash equilibria.",
        "In IJCAI, pages 765-771, 2003. [5] Drew Fudenberg and Jean Tirole.",
        "Game Theory.",
        "MIT Press, 1991. [6] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
        "On the order of eliminating dominated strategies.",
        "Operations Research Letters, 9:85-89, 1990. [7] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
        "The complexity of eliminating dominated strategies.",
        "Mathematics of Operation Research, 18:553-565, 1993. [8] Eric A. Hansen, Daniel S. Bernstein, and Shlomo Zilberstein.",
        "Dynamic programming for partially observable stochastic games.",
        "In AAAI, pages 709-715, 2004. [9] Michael Kearns, Michael Littman, and Satinder Singh.",
        "Graphical models for game theory.",
        "In UAI, 2001. [10] Leonid Khachiyan.",
        "A polynomial algorithm in linear programming.",
        "Soviet Math.",
        "Doklady, 20:191-194, 1979. [11] Donald E. Knuth, Christos H. Papadimitriou, and John N Tsitsiklis.",
        "A note on strategy elimination in bimatrix games.",
        "Operations Research Letters, 7(3):103-107, 1988. [12] Kevin Leyton-Brown and Moshe Tennenholtz.",
        "Local-effect games.",
        "In IJCAI, 2003. [13] Richard Lipton, Evangelos Markakis, and Aranyak Mehta.",
        "Playing large games using simple strategies.",
        "In ACM-EC, pages 36-41, 2003. [14] Michael Littman and Peter Stone.",
        "A polynomial-time Nash equilibrium algorithm for repeated games.",
        "In ACM-EC, pages 48-54, 2003. [15] Leslie M. Marx and Jeroen M. Swinkels.",
        "Order independence for iterated weak dominance.",
        "Games and Economic Behavior, 18:219-245, 1997. [16] Leslie M. Marx and Jeroen M. Swinkels.",
        "Corrigendum, order independence for iterated weak dominance.",
        "Games and Economic Behavior, 31:324-329, 2000. [17] Andreu Mas-Colell, Michael Whinston, and Jerry R. Green.",
        "Microeconomic Theory.",
        "Oxford University Press, 1995. [18] Roger Myerson.",
        "Game Theory: Analysis of Conflict.",
        "Harvard University Press, Cambridge, 1991. [19] Martin J Osborne and Ariel Rubinstein.",
        "A Course in Game Theory.",
        "MIT Press, 1994. [20] Christos Papadimitriou.",
        "Algorithms, games and the Internet.",
        "In STOC, pages 749-753, 2001. [21] Ryan Porter, Eugene Nudelman, and Yoav Shoham.",
        "Simple search methods for finding a Nash equilibrium.",
        "In AAAI, pages 664-669, 2004. 97"
    ],
    "error_count": 0,
    "keys": {
        "multiagent system": {
            "translated_key": "sistema multiagente",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Complexity of (Iterated) Dominance∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT We study various computational aspects of solving games using dominance and iterated dominance.",
                "We first study both strict and weak dominance (not iterated), and show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve.",
                "We then move on to iterated dominance.",
                "We show that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance.",
                "This allows us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
                "Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].)",
                "Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time.",
                "We then study what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies.",
                "First, we show that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak dominance).",
                "Then, we show that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3).",
                "Finally, we study Bayesian games.",
                "We show that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak ∗ This material is based upon work supported by the National Science Foundation under ITR grants IIS-0121678 and IIS-0427858, and a Sloan Fellowship. dominance).",
                "Finally, we show that iterated dominance using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak dominance).",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In <br>multiagent system</br>s with self-interested agents, the optimal action for one agent may depend on the actions taken by other agents.",
                "In such settings, the agents require tools from game theory to rationally decide on an action.",
                "Game theory offers various formal models of strategic settings-the best-known of which is a game in normal (or matrix) form, specifying a utility (payoff) for each agent for each combination of strategies that the agents choose-as well as solution concepts, which, given a game, specify which outcomes are reasonable (under various assumptions of rationality and common knowledge).",
                "Probably the best-known (and certainly the most-studied) solution concept is that of Nash equilibrium.",
                "A Nash equilibrium specifies a strategy for each player, in such a way that no player has an incentive to (unilaterally) deviate from the prescribed strategy.",
                "Recently, numerous papers have studied computing Nash equilibria in various settings [9, 4, 12, 3, 13, 14], and the complexity of constructing a Nash equilibrium in normal form games has been labeled one of the two most important open problems on the boundary of P today [20].",
                "The problem of computing solutions according to the perhaps more elementary solution concepts of dominance and iterated dominance has received much less attention. (After an early short paper on an easy case [11], the main computational study of these concepts has actually taken place in a paper in the game theory community [7].1 ) A strategy strictly dominates another strategy if it performs strictly 1 This is not to say that computer scientists have ignored 88 better against all vectors of opponent strategies, and weakly dominates it if it performs at least as well against all vectors of opponent strategies, and strictly better against at least one.",
                "The idea is that dominated strategies can be eliminated from consideration.",
                "In iterated dominance, the elimination proceeds in rounds, and becomes easier as more strategies are eliminated: in any given round, the dominating strategy no longer needs to perform better than or as well as the dominated strategy against opponent strategies that were eliminated in earlier rounds.",
                "Computing solutions according to (iterated) dominance is important for at least the following reasons: 1) it can be computationally easier than computing (for instance) a Nash equilibrium (and therefore it can be useful as a preprocessing step in computing a Nash equilibrium), and 2) (iterated) dominance requires a weaker rationality assumption on the players than (for instance) Nash equilibrium, and therefore solutions derived according to it are more likely to occur.",
                "In this paper, we study some fundamental computational questions concerning dominance and iterated dominance, including how hard it is to check whether a given strategy can be eliminated by each of the variants of these notions.",
                "The rest of the paper is organized as follows.",
                "In Section 2, we briefly review definitions and basic properties of normal form games, strict and weak dominance, and iterated strict and weak dominance.",
                "In the remaining sections, we study computational aspects of dominance and iterated dominance.",
                "In Section 3, we study one-shot (not iterated) dominance.",
                "In Section 4, we study iterated dominance.",
                "In Section 5, we study dominance and iterated dominance when the dominating strategy can only place probability on a few pure strategies.",
                "Finally, in Section 6, we study dominance and iterated dominance in Bayesian games. 2.",
                "DEFINITIONS AND BASIC PROPERTIES In this section, we briefly review normal form games, as well as dominance and iterated dominance (both strict and weak).",
                "An n-player normal form game is defined as follows.",
                "Definition 1.",
                "A normal form game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of pure strategies Σi and a utility function ui : Σ1 × Σ2 × . . . × Σn → R (where ui(σ1, σ2, . . . , σn) denotes player is utility when each player j plays action σj).",
                "The two main notions of dominance are defined as follows.",
                "Definition 2.",
                "Player is strategy σi is said to be strictly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
                "Player is strategy σi is said to be weakly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) ≥ ui(σi, σ−i), and for at least one vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
                "In this definition, it is sometimes allowed for the dominating strategy σi to be a mixed strategy, that is, a probability distribution over pure strategies.",
                "In this case, the utilities in dominance altogether.",
                "For example, simple dominance checks are sometimes used as a subroutine in searching for Nash equilibria [21]. the definition are the expected utilities.2 There are other notions of dominance, such as very weak dominance (in which no strict inequality is required, so two strategies can dominate each other), but we will not study them here.",
                "When we are looking at the dominance relations for player i, the other players (−i) can be thought of as a single player.3 Therefore, in the rest of the paper, when we study one-shot (not iterated) dominance, we will focus without loss of generality on two-player games.4 In two-player games, we will generally refer to the players as r (row) and c (column) rather than 1 and 2.",
                "In iterated dominance, dominated strategies are removed from the game, and no longer have any effect on future dominance relations.",
                "Iterated dominance can eliminate more strategies than dominance, as follows. σr may originally not dominate σr because the latter performs better against σc; but then, once σc is removed because it is dominated by σc, σr dominates σr, and the latter can be removed.",
                "For example, in the following game, R can be removed first, after which D is dominated.",
                "L R U 1, 1 0, 0 D 0, 1 1, 0 Either strict or weak dominance can be used in the definition of iterated dominance.",
                "We note that the process of iterated dominance is never helped by removing a dominated mixed strategy, for the following reason.",
                "If σi gives player i a higher utility than σi against mixed strategy σj for player j = i (and strategies σ−{i,j} for the other players), then for at least one pure strategy σj that σj places positive probability on, σi must perform better than σi against σj (and strategies σ−{i,j} for the other players).",
                "Thus, removing the mixed strategy σj does not introduce any new dominances.",
                "More detailed discussions and examples can be found in standard texts on microeconomics or game theory [17, 5].",
                "We are now ready to move on to the core of this paper. 3.",
                "DOMINANCE (NOT ITERATED) In this section, we study the notion of one-shot (not iterated) dominance.",
                "As a first observation, checking whether a given strategy is strictly (weakly) dominated by some pure strategy is straightforward, by checking, for every pure strategy for that player, whether the latter strategy performs strictly better against all the opponents strategies (at least as well against all the opponents strategies, and strictly 2 The dominated strategy σi is, of course, also allowed to be mixed, but this has no technical implications for the paper: when we study one-shot dominance, we ask whether a given strategy is dominated, and it does not matter whether the given strategy is pure or mixed; when we study iterated dominance, there is no use in eliminating mixed strategies, as we will see shortly. 3 This player may have a very large strategy space (one pure strategy for every vector of pure strategies for the players that are being replaced).",
                "Nevertheless, this will not result in an increase in our representation size, because the original representation already had to specify utilities for each of these vectors. 4 We note that a restriction to two-player games would not be without loss of generality for iterated dominance.",
                "This is because for iterated dominance, we need to look at the dominated strategies of each individual player, so we cannot merge any players. 89 better against at least one).5 Next, we show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time by solving a single linear program. (Similar linear programs have been given before [18]; we present the result here for completeness, and because we will build on the linear programs given below in Theorem 6.)",
                "Proposition 1.",
                "Given the row players utilities, a subset Dr of the row players pure strategies Σr, and a distinguished strategy σ∗ r for the row player, we can check in time polynomial in the size of the game (by solving a single linear program of polynomial size) whether there exists some mixed strategy σr, that places positive probability only on strategies in Dr and dominates σ∗ r , both for strict and for weak dominance.",
                "Proof.",
                "Let pdr be the probability that σr places on dr ∈ Dr. We will solve a single linear program in each of our algorithms; linear programs can be solved in polynomial time [10].",
                "For strict dominance, the question is whether the pdr can be set so that for every pure strategy for the column player σc ∈ Σc, dr∈Dr pdr ur(dr, σc) > ur(σ∗ r , σc).",
                "Because the inequality must be strict, we cannot solve this directly by linear programming.",
                "We proceed as follows.",
                "Because the game is finite, we may assume without loss of generality that all utilities are positive (if not, simply add a constant to all utilities.)",
                "Solve the following linear program: minimize dr∈Dr pdr such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc).",
                "If σ∗ r is strictly dominated by some mixed strategy, this linear program has a solution with objective value < 1. (The dominating strategy is a feasible solution with objective value exactly 1.",
                "Because no constraint is binding for this solution, we can reduce one of the probabilities slightly without affecting feasibility, thereby obtaining a solution with objective value < 1.)",
                "Moreover, if this linear program has a solution with objective value < 1, there is a mixed strategy strictly dominating σ∗ r , which can be obtained by taking the LP solution and adding the remaining probability to any strategy (because all the utilities are positive, this will add to the left side of any inequality, so all inequalities will become strict).",
                "For weak dominance, we can solve the following linear program: maximize σc∈Σc (( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc)) such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc); dr∈Dr pdr = 1.",
                "If σ∗ r is weakly dominated by some mixed strategy, then that mixed strategy is a feasible solution to this program with objective value > 0, because for at least one strategy σc ∈ Σc we have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0.",
                "On the other hand, if this program has a solution with objective value > 0, then for at least one strategy σc ∈ Σc we 5 Recall that the assumption of a single opponent (that is, the assumption of two players) is without loss of generality for one-shot dominance. must have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0, and thus the linear programs solution is a weakly dominating mixed strategy. 4.",
                "ITERATED DOMINANCE We now move on to iterated dominance.",
                "It is well-known that iterated strict dominance is path-independent [6, 19]that is, if we remove dominated strategies until no more dominated strategies remain, in the end the remaining strategies for each player will be the same, regardless of the order in which strategies are removed.",
                "Because of this, to see whether a given strategy can be eliminated by iterated strict dominance, all that needs to be done is to repeatedly remove strategies that are strictly dominated, until no more dominated strategies remain.",
                "Because we can check in polynomial time whether any given strategy is dominated (whether or not dominance by mixed strategies is allowed, as described in Section 3), this whole procedure takes only polynomial time.",
                "In the case of iterated dominance by pure strategies with two players, Knuth et al. [11] slightly improve on (speed up) the straightforward implementation of this procedure by keeping track of, for each ordered pair of strategies for a player, the number of opponent strategies that prevent the first strategy from dominating the second.",
                "Hereby the runtime for an m × n game is reduced from O((m + n)4 ) to O((m + n)3 ). (Actually, they only study very weak dominance (for which no strict inequalities are required), but the approach is easily extended.)",
                "In contrast, iterated weak dominance is known to be pathdependent.6 For example, in the following game, using iterated weak dominance we can eliminate M first, and then D, or R first, and then U. L M R U 1, 1 0, 0 1, 0 D 1, 1 1, 0 0, 0 Therefore, while the procedure of removing weakly dominated strategies until no more weakly dominated strategies remain can certainly be executed in polynomial time, which strategies survive in the end depends on the order in which we remove the dominated strategies.",
                "We will investigate two questions for iterated weak dominance: whether a given strategy is eliminated in some path, and whether there is a path to a unique solution (one pure strategy left per player).",
                "We will show that both of these problems are computationally hard.",
                "Definition 3.",
                "Given a game in normal form and a distinguished strategy σ∗ , IWD-STRATEGY-ELIMINATION asks whether there is some path of iterated weak dominance that eliminates σ∗ .",
                "Given a game in normal form, IWDUNIQUE-SOLUTION asks whether there is some path of iterated weak dominance that leads to a unique solution (one strategy left per player).",
                "The following lemma shows a special case of normal form games in which allowing for weak dominance by mixed strategies (in addition to weak dominance by pure strategies) does 6 There is, however, a restriction of weak dominance called nice weak dominance which is path-independent [15, 16].",
                "For an overview of path-independence results, see Apt [1]. 90 not help.",
                "We will prove the hardness results in this setting, so that they will hold whether or not dominance by mixed strategies is allowed.",
                "Lemma 1.",
                "Suppose that all the utilities in a game are in {0, 1}.",
                "Then every pure strategy that is weakly dominated by a mixed strategy is also weakly dominated by a pure strategy.",
                "Proof.",
                "Suppose pure strategy σ is weakly dominated by mixed strategy σ∗ .",
                "If σ gets a utility of 1 against some opponent strategy (or vector of opponent strategies if there are more than 2 players), then all the pure strategies that σ∗ places positive probability on must also get a utility of 1 against that opponent strategy (or else the expected utility would be smaller than 1).",
                "Moreover, at least one of the pure strategies that σ∗ places positive probability on must get a utility of 1 against an opponent strategy that σ gets 0 against (or else the inequality would never be strict).",
                "It follows that this pure strategy weakly dominates σ.",
                "We are now ready to prove the main results of this section.",
                "Theorem 1.",
                "IWD-STRATEGY-ELIMINATION is NPcomplete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed.",
                "Proof.",
                "The problem is in NP because given a sequence of strategies to be eliminated, we can easily check whether this is a valid sequence of eliminations (even when dominance by mixed strategies is allowed, using Proposition 1).",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following IWD-STRATEGY-ELIMINATION instance. (In this instance, we will specify that certain strategies are uneliminable.",
                "A strategy σr can be made uneliminable, even when 0 and 1 are the only allowed utilities, by adding another strategy σr and another opponent strategy σc, so that: 1. σr and σr are the only strategies that give the row player a utility of 1 against σc. 2. σr and σr always give the row player the same utility. 3. σc is the only strategy that gives the column player a utility of 1 against σr, but otherwise σc always gives the column player utility 0.",
                "This makes it impossible to eliminate any of these three strategies.",
                "We will not explicitly specify the additional strategies to make the proof more legible.)",
                "In this proof, we will denote row player strategies by s, and column player strategies by t, to improve legibility.",
                "Let the row players pure strategy set be given as follows.",
                "For every variable v ∈ V , the row player has corresponding strategies s1 +v, s2 +v, s1 −v, s2 −v.",
                "Additionally, the row player has the following 2 strategies: s1 0 and s2 0, where s2 0 = σ∗ r (that is, it is the strategy we seek to eliminate).",
                "Finally, for every clause c ∈ C, the row player has corresponding strategies s1 c (uneliminable) and s2 c. Let the column players pure strategy set be given as follows.",
                "For every variable v ∈ V , the column player has a corresponding strategy tv.",
                "For every clause c ∈ C, the column player has a corresponding strategy tc, and additionally, for every literal l ∈ L that occurs in c, a strategy tc,l.",
                "For every variable v ∈ V , the column player has corresponding strategies t+v, t−v (both uneliminable).",
                "Finally, the column player has three additional strategies: t1 0 (uneliminable), t2 0, and t1.",
                "The utility function for the row player is given as follows: • ur(s1 +v, tv) = 0 for all v ∈ V ; • ur(s2 +v, tv) = 1 for all v ∈ V ; • ur(s1 −v, tv) = 1 for all v ∈ V ; • ur(s2 −v, tv) = 0 for all v ∈ V ; • ur(s1 +v, t1) = 1 for all v ∈ V ; • ur(s2 +v, t1) = 0 for all v ∈ V ; • ur(s1 −v, t1) = 0 for all v ∈ V ; • ur(s2 −v, t1) = 1 for all v ∈ V ; • ur(sb +v, t+v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sb −v, t−v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sl, t) = 0 otherwise for all l ∈ L and t ∈ S2; • ur(s1 0, tc) = 0 for all c ∈ C; • ur(s2 0, tc) = 1 for all c ∈ C; • ur(sb 0, t1 0) = 1 for all b ∈ {1, 2}; • ur(s1 0, t2 0) = 1; • ur(s2 0, t2 0) = 0; • ur(sb 0, t) = 0 otherwise for all b ∈ {1, 2} and t ∈ S2; • ur(sb c, t) = 0 otherwise for all c ∈ C and b ∈ {1, 2}; and the row players utility is 0 in every other case.",
                "The utility function for the column player is given as follows: • uc(s, tv) = 0 for all v ∈ V and s ∈ S1; • uc(s, t1) = 0 for all s ∈ S1; • uc(s2 l , tc) = 1 for all c ∈ C and l ∈ L where l ∈ c (literal l occurs in clause c); • uc(s2 l2 , tc,l1 ) = 1 for all c ∈ C and l1, l2 ∈ L, l1 = l2 where l2 ∈ c; • uc(s1 c, tc) = 1 for all c ∈ C; • uc(s2 c, tc) = 0 for all c ∈ C; • uc(sb c, tc,l) = 1 for all c ∈ C, l ∈ L, and b ∈ {1, 2}; • uc(s2, tc) = uc(s2, tc,l) = 0 otherwise for all c ∈ C and l ∈ L; and the column players utility is 0 in every other case.",
                "We now show that the two instances are equivalent.",
                "First, suppose there is a solution to the satisfiability instance: that is, a truth-value assignment to the variables in V such that all clauses are satisfied.",
                "Then, consider the following sequence of eliminations in our game: 1.",
                "For every variable v that is set to true in the assignment, eliminate tv (which gives the column player utility 0 everywhere). 2.",
                "Then, for every variable v that is set to true in the assignment, eliminate s2 +v using s1 +v (which is possible because tv has been eliminated, and because t1 has not been eliminated (yet)). 3.",
                "Now eliminate t1 (which gives the column player utility 0 everywhere). 4.",
                "Next, for every variable v that is set to false in the assignment, eliminate s2 −v using s1 −v (which is possible because t1 has been eliminated, and because tv has not been eliminated (yet)). 5.",
                "For every clause c which has the variable corresponding to one of its positive literals l = +v set to true in the assignment, eliminate tc using tc,l (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 6.",
                "For every clause c which has the variable corresponding to one of its negative literals l = −v set to false in the assignment, eliminate tc using tc,l 91 (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 7.",
                "Because the assignment satisfied the formula, all the tc have now been eliminated.",
                "Thus, we can eliminate s2 0 = σ∗ r using s1 0.",
                "It follows that there is a solution to the IWD-STRATEGY-ELIMINATION instance.",
                "Now suppose there is a solution to the IWD-STRATEGYELIMINATION instance.",
                "By Lemma 1, we can assume that all the dominances are by pure strategies.",
                "We first observe that only s1 0 can eliminate s2 0 = σ∗ r , because it is the only other strategy that gets the row player a utility of 1 against t1 0, and t1 0 is uneliminable.",
                "However, because s2 0 performs better than s1 0 against the tc strategies, it follows that all of the tc strategies must be eliminated.",
                "For each c ∈ C, the strategy tc can only be eliminated by one of the strategies tc,l (with the same c), because these are the only other strategies that get the column player a utility of 1 against s1 c, and s1 c is uneliminable.",
                "But, in order for some tc,l to eliminate tc, s2 l must be eliminated first.",
                "Only s1 l can eliminate s2 l , because it is the only other strategy that gets the row player a utility of 1 against tl, and tl is uneliminable.",
                "We next show that for every v ∈ V only one of s2 +v, s2 −v can be eliminated.",
                "This is because in order for s1 +v to eliminate s2 +v, tv needs to have been eliminated and t1, not (so tv must be eliminated before t1); but in order for s1 −v to eliminate s2 −v, t1 needs to have been eliminated and tv, not (so t1 must be eliminated before tv).",
                "So, set v to true if s2 +v is eliminated, and to false otherwise Because by the above, for every clause c, one of the s2 l with l ∈ c must be eliminated, it follows that this is a satisfying assignment to the satisfiability instance.",
                "Using Theorem 1, it is now (relatively) easy to show that IWD-UNIQUE-SOLUTION is also NP-complete under the same restrictions.",
                "Theorem 2.",
                "IWD-UNIQUE-SOLUTION is NP-complete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed.",
                "Proof.",
                "Again, the problem is in NP because we can nondeterministically choose the sequence of eliminations and verify whether it is correct.",
                "To show NP-hardness, we reduce an arbitrary IWD-STRATEGY-ELIMINATION instance to the following IWD-UNIQUE-SOLUTION instance.",
                "Let all the strategies for each player from the original instance remain part of the new instance, and let the utilities resulting from the players playing a pair of these strategies be the same.",
                "We add three additional strategies σ1 r , σ2 r , σ3 r for the row player, and three additional strategies σ1 c , σ2 c , σ3 c for the column player.",
                "Let the additional utilities be as follows: • ur(σr, σj c) = 1 for all σr /∈ {σ1 r , σ2 r , σ3 r } and j ∈ {2, 3}; • ur(σi r, σc) = 1 for all i ∈ {1, 2, 3} and σc /∈ {σ2 c , σ3 c }; • ur(σi r, σ2 c ) = 1 for all i ∈ {2, 3}; • ur(σ1 r , σ3 c ) = 1; • and the row players utility is 0 in all other cases involving a new strategy. • uc(σ3 r , σc) = 1 for all σc /∈ {σ1 c , σ2 c , σ3 c }; • uc(σ∗ r , σj c) = 1 for all j ∈ {2, 3} (σ∗ r is the strategy to be eliminated in the original instance); • uc(σi r, σ1 c ) = 1 for all i ∈ {1, 2}; • ur(σ1 r , σ2 c ) = 1; • ur(σ2 r , σ3 c ) = 1; • and the column players utility is 0 in all other cases involving a new strategy.",
                "We proceed to show that the two instances are equivalent.",
                "First suppose there exists a solution to the original IWDSTRATEGY-ELIMINATION instance.",
                "Then, perform the same sequence of eliminations to eliminate σ∗ r in the new IWD-UNIQUE-SOLUTION instance. (This is possible because at any stage, any weak dominance for the row player in the original instance is still a weak dominance in the new instance, because the two strategies utilities for the row player are the same when the column player plays one of the new strategies; and the same is true for the column player.)",
                "Once σ∗ r is eliminated, let σ1 c eliminate σ2 c . (It performs better against σ2 r .)",
                "Then, let σ1 r eliminate all the other remaining strategies for the row player. (It always performs better against either σ1 c or σ3 c .)",
                "Finally, σ1 c is the unique best response against σ1 r among the column players remaining strategies, so let it eliminate all the other remaining strategies for the column player.",
                "Thus, there exists a solution to the IWD-UNIQUE-SOLUTION instance.",
                "Now suppose there exists a solution to the IWD-UNIQUESOLUTION instance.",
                "By Lemma 1, we can assume that all the dominances are by pure strategies.",
                "We will show that none of the new strategies (σ1 r , σ2 r , σ3 r , σ1 c , σ2 c , σ3 c ) can either eliminate another strategy, or be eliminated before σ∗ r is eliminated.",
                "Thus, there must be a sequence of eliminations ending in the elimination of σ∗ r , which does not involve any of the new strategies, and is therefore a valid sequence of eliminations in the original game (because all original strategies perform the same against each new strategy).",
                "We now show that this is true by exhausting all possibilities for the first elimination before σ∗ r is eliminated that involves a new strategy.",
                "None of the σi r can be eliminated by a σr /∈ {σ1 r , σ2 r , σ3 r }, because the σi r perform better against σ1 c . σ1 r cannot eliminate any other strategy, because it always performs poorer against σ2 c . σ2 r and σ3 r are equivalent from the row players perspective (and thus cannot eliminate each other), and cannot eliminate any other strategy because they always perform poorer against σ3 c .",
                "None of the σj c can be eliminated by a σc /∈ {σ1 c , σ2 c , σ3 c }, because the σj c always perform better against either σ1 r or σ2 r . σ1 c cannot eliminate any other strategy, because it always performs poorer against either σ∗ r or σ3 r . σ2 c cannot eliminate any other strategy, because it always performs poorer against σ2 r or σ3 r . σ3 c cannot eliminate any other strategy, because it always performs poorer against σ1 r or σ3 r .",
                "Thus, there exists a solution to the IWDSTRATEGY-ELIMINATION instance.",
                "A slightly weaker version of the part of Theorem 2 concerning dominance by pure strategies only is the main result of Gilboa et al. [7]. (Besides not proving the result for dominance by mixed strategies, the original result was weaker because it required utilities {0, 1, 2, 3, 4, 5, 6, 7, 8} rather than just {0, 1} (and because of this, our Lemma 1 cannot be applied to it to get the result for mixed strategies).) 5. (ITERATED) DOMINANCE USING MIXED STRATEGIES WITH SMALL SUPPORTS When showing that a strategy is dominated by a mixed strategy, there are several reasons to prefer exhibiting a 92 dominating strategy that places positive probability on as few pure strategies as possible.",
                "First, this will reduce the number of bits required to specify the dominating strategy (and thus the proof of dominance can be communicated quicker): if the dominating mixed strategy places positive probability on only k strategies, then it can be specified using k real numbers for the probabilities, plus k log m (where m is the number of strategies for the player under consideration) bits to indicate which strategies are used.",
                "Second, the proof of dominance will be cleaner: for a dominating mixed strategy, it is typically (always in the case of strict dominance) possible to spread some of the probability onto any unused pure strategy and still have a dominating strategy, but this obscures which pure strategies are the ones that are key in making the mixed strategy dominating.",
                "Third, because (by the previous) the argument for eliminating the dominated strategy is simpler and easier to understand, it is more likely to be accepted.",
                "Fourth, the level of risk neutrality required for the argument to work is reduced, at least in the extreme case where dominance by a single pure strategy can be exhibited (no risk neutrality is required here).",
                "This motivates the following problem.",
                "Definition 4 (MINIMUM-DOMINATING-SET).",
                "We are given the row players utilities of a game in normal form, a distinguished strategy σ∗ for the row player, a specification of whether the dominance should be strict or weak, and a number k. We are asked whether there exists a mixed strategy σ for the row player that places positive probability on at most k pure strategies, and dominates σ∗ in the required sense.",
                "Unfortunately, this problem is NP-complete.",
                "Theorem 3.",
                "MINIMUM-DOMINATING-SET is NPcomplete, both for strict and for weak dominance.",
                "Proof.",
                "The problem is in NP because we can nondeterministically choose a set of at most k strategies to give positive probability, and decide whether we can dominate σ∗ with these k strategies as described in Proposition 1.",
                "To show NP-hardness, we reduce an arbitrary SET-COVER instance (given a set S, subsets S1, S2, . . . , Sr, and a number t, can all of S be covered by at most t of the subsets?) to the following MINIMUM-DOMINATING-SET instance.",
                "For every element s ∈ S, there is a pure strategy σs for the column player.",
                "For every subset Si, there is a pure strategy σSi for the row player.",
                "Finally, there is the distinguished pure strategy σ∗ for the row player.",
                "The row players utilities are as follows: ur(σSi , σs) = t + 1 if s ∈ Si; ur(σSi , σs) = 0 if s /∈ Si; ur(σ∗ , σs) = 1 for all s ∈ S. Finally, we let k = t. We now proceed to show that the two instances are equivalent.",
                "First suppose there exists a solution to the SET-COVER instance.",
                "Without loss of generality, we can assume that there are exactly k subsets in the cover.",
                "Then, for every Si that is in the cover, let the dominating strategy σ place exactly 1 k probability on the corresponding pure strategy σSi .",
                "Now, if we let n(s) be the number of subsets in the cover containing s (we observe that that n(s) ≥ 1), then for every strategy σs for the column player, the row players expected utility for playing σ when the column player is playing σs is u(σ, σs) = n(s) k (k + 1) ≥ k+1 k > 1 = u(σ∗ , σs).",
                "So σ strictly (and thus also weakly) dominates σ∗ , and there exists a solution to the MINIMUM-DOMINATING-SET instance.",
                "Now suppose there exists a solution to the MINIMUMDOMINATING-SET instance.",
                "Consider the (at most k) pure strategies of the form σSi on which the dominating mixed strategy σ places positive probability, and let T be the collection of the corresponding subsets Si.",
                "We claim that T is a cover.",
                "For suppose there is some s ∈ S that is not in any of the subsets in T .",
                "Then, if the column player plays σs, the row player (when playing σ) will always receive utility 0-as opposed to the utility of 1 the row player would receive for playing σ∗ , contradicting the fact that σ dominates σ∗ (whether this dominance is weak or strict).",
                "It follows that there exists a solution to the SET-COVER instance.",
                "On the other hand, if we require that the dominating strategy only places positive probability on a very small number of pure strategies, then it once again becomes easy to check whether a strategy is dominated.",
                "Specifically, to find out whether player is strategy σ∗ is dominated by a strategy that places positive probability on only k pure strategies, we can simply check, for every subset of k of player is pure strategies, whether there is a strategy that places positive probability only on these k strategies and dominates σ∗ , using Proposition 1.",
                "This requires only O(|Σi|k ) such checks.",
                "Thus, if k is a constant, this constitutes a polynomial-time algorithm.",
                "A natural question to ask next is whether iterated strict dominance remains computationally easy when dominating strategies are required to place positive probability on at most k pure strategies, where k is a small constant. (We have already shown in Section 4 that iterated weak dominance is hard even when k = 1, that is, only dominance by pure strategies is allowed.)",
                "Of course, if iterated strict dominance were path-independent under this restriction, computational easiness would follow as it did in Section 4.",
                "However, it turns out that this is not the case.",
                "Observation 1.",
                "If we restrict the dominating strategies to place positive probability on at most two pure strategies, iterated strict dominance becomes path-dependent.",
                "Proof.",
                "Consider the following game: 7, 1 0, 0 0, 0 0, 0 7, 1 0, 0 3, 0 3, 0 0, 0 0, 0 0, 0 3, 1 1, 0 1, 0 1, 0 Let (i, j) denote the outcome in which the row player plays the ith row and the column player plays the jth column.",
                "Because (1, 1), (2, 2), and (4, 3) are all Nash equilibria, none of the column players pure strategies will ever be eliminated, and neither will rows 1, 2, and 4.",
                "We now observe that randomizing uniformly over rows 1 and 2 dominates row 3, and randomizing uniformly over rows 3 and 4 dominates row 5.",
                "However, if we eliminate row 3 first, it becomes impossible to dominate row 5 without randomizing over at least 3 pure strategies.",
                "Indeed, iterated strict dominance turns out to be hard even when k = 3.",
                "Theorem 4.",
                "If we restrict the dominating strategies to place positive probability on at most three pure strategies, it becomes NP-complete to decide whether a given strategy can be eliminated using iterated strict dominance. 93 Proof.",
                "The problem is in NP because given a sequence of strategies to be eliminated, we can check in polynomial time whether this is a valid sequence of eliminations (for any strategy to be eliminated, we can check, for every subset of three other strategies, whether there is a strategy placing positive probability on only these three strategies that dominates the strategy to be eliminated, using Proposition 1).",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following two-player game.",
                "For every variable v ∈ V , the row player has strategies s+v, s−v, s1 v, s2 v, s3 v, s4 v, and the column player has strategies t1 v, t2 v, t3 v, t4 v. For every clause c ∈ C, the row player has a strategy sc, and the column player has a strategy tc, as well as, for every literal l occurring in c, an additional strategy tl c. The row player has two additional strategies s1 and s2. (s2 is the strategy that we are seeking to eliminate.)",
                "Finally, the column player has one additional strategy t1.",
                "The utility function for the row player is given as follows (where is some sufficiently small number): • ur(s+v, tj v) = 4 if j ∈ {1, 2}, for all v ∈ V ; • ur(s+v, tj v) = 1 if j ∈ {3, 4}, for all v ∈ V ; • ur(s−v, tj v) = 1 if j ∈ {1, 2}, for all v ∈ V ; • ur(s−v, tj v) = 4 if j ∈ {3, 4}, for all v ∈ V ; • ur(s+v, t) = ur(s−v, t) = 0 for all v ∈ V and t /∈ {t1 v, t2 v, t3 v, t4 v}; • ur(si v, ti v) = 13 for all v ∈ V and i ∈ {1, 2, 3, 4}; • ur(si v, t) = for all v ∈ V , i ∈ {1, 2, 3, 4}, and t = ti v; • ur(sc, tc) = 2 for all c ∈ C; • ur(sc, t) = 0 for all c ∈ C and t = tc; • ur(s1, t1) = 1 + ; • ur(s1, t) = for all t = t1; • ur(s2, t1) = 1; • ur(s2, tc) = 1 for all c ∈ C; • ur(s2, t) = 0 for all t /∈ {t1} ∪ {tc : c ∈ C}.",
                "The utility function for the column player is given as follows: • uc(si v, ti v) = 1 for all v ∈ V and i ∈ {1, 2, 3, 4}; • uc(s, ti v) = 0 for all v ∈ V , i ∈ {1, 2, 3, 4}, and s = si v; • uc(sc, tc) = 1 for all c ∈ C; • uc(sl, tc) = 1 for all c ∈ C and l ∈ L occurring in c; • uc(s, tc) = 0 for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c}; • uc(sc, tl c) = 1 + for all c ∈ C; • uc(sl , tl c) = 1 + for all c ∈ C and l = l occurring in c; • uc(s, tl c) = for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c, l = l }; • uc(s2, t1) = 1; • uc(s, t1) = 0 for all s = s2.",
                "We now show that the two instances are equivalent.",
                "First, suppose that there is a solution to the satisfiability instance.",
                "Then, consider the following sequence of eliminations in our game: 1.",
                "For every variable v that is set to true in the satisfying assignment, eliminate s+v with the mixed strategy σr that places probability 1/3 on s−v, probability 1/3 on s1 v, and probability 1/3 on s2 v. (The expected utility of playing σr against t1 v or t2 v is 14/3 > 4; against t3 v or t4 v, it is 4/3 > 1; and against anything else it is 2 /3 > 0.",
                "Hence the dominance is valid.) 2.",
                "Similarly, for every variable v that is set to false in the satisfying assignment, eliminate s−v with the mixed strategy σr that places probability 1/3 on s+v, probability 1/3 on s3 v, and probability 1/3 on s4 v. (The expected utility of playing σr against t1 v or t2 v is 4/3 > 1; against t3 v or t4 v, it is 14/3 > 4; and against anything else it is 2 /3 > 0.",
                "Hence the dominance is valid.) 3.",
                "For every c ∈ C, eliminate tc with any tl c for which l was set to true in the satisfying assignment. (This is a valid dominance because tl c performs better than tc against any strategy other than sl, and we eliminated sl in step 1 or in step 2.) 4.",
                "Finally, eliminate s2 with s1. (This is a valid dominance because s1 performs better than s2 against any strategy other than those in {tc : c ∈ C}, which we eliminated in step 3.)",
                "Hence, there is an elimination path that eliminates s2.",
                "Now, suppose that there is an elimination path that eliminates s2.",
                "The strategy that eventually dominates s2 must place most of its probability on s1, because s1 is the only other strategy that performs well against t1, which cannot be eliminated before s2.",
                "But, s1 performs significantly worse than s2 against any strategy tc with c ∈ C, so it follows that all these strategies must be eliminated first.",
                "Each strategy tc can only be eliminated by a strategy that places most of its weight on the corresponding strategies tl c with l ∈ c, because they are the only other strategies that perform well against sc, which cannot be eliminated before tc.",
                "But, each strategy tl c performs significantly worse than tc against sl, so it follows that for every clause c, for one of the literals l occurring in it, sl must be eliminated first.",
                "Now, strategies of the form tj v will never be eliminated because they are the unique best responses to the corresponding strategies sj v (which are, in turn, the best responses to the corresponding tj v).",
                "As a result, if strategy s+v (respectively, s−v) is eliminated, then its opposite strategy s−v (respectively, s+v) can no longer be eliminated, for the following reason.",
                "There is no other pure strategy remaining that gets a significant utility against more than one of the strategies t1 v, t2 v, t3 v, t4 v, but s−v (respectively, s+v) gets significant utility against all 4, and therefore cannot be dominated by a mixed strategy placing positive probability on at most 3 strategies.",
                "It follows that for each v ∈ V , at most one of the strategies s+v, s−v is eliminated, in such a way that for every clause c, for one of the literals l occurring in it, sl must be eliminated.",
                "But then setting all the literals l such that sl is eliminated to true constitutes a solution to the satisfiability instance.",
                "In the next section, we return to the setting where there is no restriction on the number of pure strategies on which a dominating mixed strategy can place positive probability. 6. (ITERATED) DOMINANCE IN BAYESIAN GAMES So far, we have focused on normal form games that are flatly represented (that is, every matrix entry is given ex94 plicitly).",
                "However, for many games, the flat representation is too large to write down explicitly, and instead, some representation that exploits the structure of the game needs to be used.",
                "Bayesian games, besides being of interest in their own right, can be thought of as a useful structured representation of normal form games, and we will study them in this section.",
                "In a Bayesian game, each player first receives privately held preference information (the players type) from a distribution, which determines the utility that that player receives for every outcome of (that is, vector of actions played in) the game.",
                "After receiving this type, the player plays an action based on it.7 Definition 5.",
                "A Bayesian game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of actions Ai, a (finite) type space Θi with a probability distribution πi over it, and a utility function ui : Θi × A1 × A2 × . . . × An → R (where ui(θi, a1, a2, . . . , an) denotes player is utility when is type is θi and each player j plays action aj).",
                "A pure strategy in a Bayesian game is a mapping from types to actions, σi : Θi → Ai, where σi(θi) denotes the action that player i plays for type θi.",
                "Any vector of pure strategies in a Bayesian game defines an (expected) utility for each player, and therefore we can translate a Bayesian game into a normal form game.",
                "In this normal form game, the notions of dominance and iterated dominance are defined as before.",
                "However, the normal form representation of the game is exponentially larger than the Bayesian representation, because each player i has |Ai||Θi| distinct pure strategies.",
                "Thus, any algorithm for Bayesian games that relies on expanding the game to its normal form will require exponential time.",
                "Specifically, our easiness results for normal form games do not directly transfer to this setting.",
                "In fact, it turns out that checking whether a strategy is dominated by a pure strategy is hard in Bayesian games.",
                "Theorem 5.",
                "In a Bayesian game, it is NP-complete to decide whether a given pure strategy σr : Θr → Ar is dominated by some other pure strategy (both for strict and weak dominance), even when the row players distribution over types is uniform.",
                "Proof.",
                "The problem is in NP because it is easy to verify whether a candidate dominating strategy is indeed a dominating strategy.",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a set of clauses C using variables from V ) to the following Bayesian game.",
                "Let the row players action set be Ar = {t, f, 0} and let the column players action set be Ac = {ac : c ∈ C}.",
                "Let the row players type set be Θr = {θv : v ∈ V }, with a distribution πr that is uniform.",
                "Let the row players utility function be as follows: • ur(θv, 0, ac) = 0 for all v ∈ V and c ∈ C; • ur(θv, b, ac) = |V | for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b satisfies c; • ur(θv, b, ac) = −1 for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b does not satisfy c. 7 In general, a player can also receive a signal about the other players preferences, but we will not concern ourselves with that here.",
                "Let the pure strategy to be dominated be the one that plays 0 for every type.",
                "We show that the strategy is dominated by a pure strategy if and only if there is a solution to the satisfiability instance.",
                "First, suppose there is a solution to the satisfiability instance.",
                "Then, let σd r be given by: σd r (θv) = t if v is set to true in the solution to the satisfiability instance, and σd r (θv) = f otherwise.",
                "Then, against any action ac by the column player, there is at least one type θv such that either +v ∈ c and σd r (θv) = t, or −v ∈ c and σd r (θv) = f. Thus, the row players expected utility against action ac is at least |V | |V | − |V |−1 |V | = 1 |V | > 0.",
                "So, σd r is a dominating strategy.",
                "Now, suppose there is a dominating pure strategy σd r .",
                "This dominating strategy must play t or f for at least one type.",
                "Thus, against any ac by the column player, there must at least be some type θv for which ur(θv, σd r (θv), ac) > 0.",
                "That is, there must be at least one variable v such that setting v to σd r (θv) satifies c. But then, setting each v to σd r (θv) must satisfy all the clauses.",
                "So a satisfying assignment exists.",
                "However, it turns out that we can modify the linear programs from Proposition 1 to obtain a polynomial time algorithm for checking whether a strategy is dominated by a mixed strategy in Bayesian games.",
                "Theorem 6.",
                "In a Bayesian game, it can be decided in polynomial time whether a given (possibly mixed) strategy σr is dominated by some other mixed strategy, using linear programming (both for strict and weak dominance).",
                "Proof.",
                "We can modify the linear programs presented in Proposition 1 as follows.",
                "For strict dominance, again assuming without loss of generality that all the utilities in the game are positive, use the following linear program (in which pσr r (θr, ar) is the probability that σr, the strategy to be dominated, places on ar for type θr): minimize θr∈Θr ar∈Ar pr(ar) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) ≤ 1.",
                "Assuming that π(θr) > 0 for all θr ∈ Θr, this program will return an objective value smaller than |Θr| if and only if σr is strictly dominated, by reasoning similar to that done in Proposition 1.",
                "For weak dominance, use the following linear program: maximize ac∈Ac ( θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar)− θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar)) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) = 1.",
                "This program will return an objective value greater than 0 if and only if σr is weakly dominated, by reasoning similar to that done in Proposition 1.",
                "We now turn to iterated dominance in Bayesian games.",
                "Na¨ıvely, one might argue that iterated dominance in Bayesian 95 games always requires an exponential number of steps when a significant fraction of the games pure strategies can be eliminated, because there are exponentially many pure strategies.",
                "However, this is not a very strong argument because oftentimes we can eliminate exponentially many pure strategies in one step.",
                "For example, if for some type θr ∈ Θr we have, for all ac ∈ Ac, that u(θr, a1 r, ac) > u(θr, a2 r, ac), then any pure strategy for the row player which plays action a2 r for type θr is dominated (by the strategy that plays action a1 r for type θr instead)-and there are exponentially many (|Ar||Θr|−1 ) such strategies.",
                "It is therefore conceivable that we need only polynomially many eliminations of collections of a players strategies.",
                "However, the following theorem shows that this is not the case, by giving an example where an exponential number of iterations (that is, alternations between the players in eliminating strategies) is required. (We emphasize that this is not a result about computational complexity.)",
                "Theorem 7.",
                "Even in symmetric 3-player Bayesian games, iterated dominance by pure strategies can require an exponential number of iterations (both for strict and weak dominance), even with only three actions per player.",
                "Proof.",
                "Let each player i ∈ {1, 2, 3} have n + 1 types θ1 i , θ2 i , . . . , θn+1 i .",
                "Let each player i have 3 actions ai, bi, ci, and let the utility function of each player be defined as follows. (In the below, i + 1 and i + 2 are shorthand for i + 1(mod 3) and i + 2(mod 3) when used as player indices.",
                "Also, −∞ can be replaced by a sufficiently negative number.",
                "Finally, δ and should be chosen to be very small (even compared to 2−(n+1) ), and should be more than twice as large as δ.) • ui(θ1 i ; ai, ci+1, ci+2) = −1; • ui(θ1 i ; ai, si+1, si+2) = 0 for si+1 = ci+1 or si+2 = ci+2; • ui(θ1 i ; bi, si+1, si+2) = − for si+1 = ai+1 and si+2 = ai+2; • ui(θ1 i ; bi, si+1, si+2) = −∞ for si+1 = ai+1 or si+2 = ai+2; • ui(θ1 i ; ci, si+1, si+2) = −∞ for all si+1, si+2; • ui(θj i ; ai, si+1, si+2) = −∞ for all si+1, si+2 when j > 1; • ui(θj i ; bi, si+1, si+2) = − for all si+1, si+2 when j > 1; • ui(θj i ; ci, si+1, ci+2) = δ − − 1/2 for all si+1 when j > 1; • ui(θj i ; ci, si+1, si+2) = δ− for all si+1 and si+2 = ci+2 when j > 1.",
                "Let the distribution over each players types be given by p(θj i ) = 2−j (with the exception that p(θ2 i ) = 2−2 +2−(n+1) ).",
                "We will be interested in eliminating strategies of the following form: play bi for type θ1 i , and play one of bi or ci otherwise.",
                "Because the utility function is the same for any type θj i with j > 1, these strategies are effectively defined by the total probability that they place on ci,8 which is t2 i (2−2 + 2−(n+1) ) + n+1 j=3 tj i 2−j where tj i = 1 if player i 8 Note that the strategies are still pure strategies; the probability placed on an action by a strategy here is simply the sum of the probabilities of the types for which the strategy chooses that action. plays ci for type θj i , and 0 otherwise.",
                "This probability is different for any two different strategies of the given form, and we have exponentially many different strategies of the given form.",
                "For any probability q which can be expressed as t2(2−2 + 2−(n+1) ) + n+1 j=3 tj2−j (with all tj ∈ {0, 1}), let σi(q) denote the (unique) strategy of the given form for player i which places a total probability of q on ci.",
                "Any strategy that plays ci for type θ1 i or ai for some type θj i with j > 1 can immediately be eliminated.",
                "We will show that, after that, we must eliminate the strategies σi(q) with high q first, slowly working down to those with lower q.",
                "Claim 1: If σi+1(q ) and σi+2(q ) have not yet been eliminated, and q < q , then σi(q) cannot yet be eliminated.",
                "Proof: First, we show that no strategy σi(q ) can eliminate σi(q).",
                "Against σi+1(q ), σi+2(q ), the utility of playing σi(p) is − + p · δ − p · q /2.",
                "Thus, when q = 0, it is best to set p as high as possible (and we note that σi+1(0) and σi+2(0) have not been eliminated), but when q > 0, it is best to set p as low as possible because δ < q /2.",
                "Thus, whether q > q or q < q , σi(q) will always do strictly better than σi(q ) against some remaining opponent strategies.",
                "Hence, no strategy σi(q ) can eliminate σi(q).",
                "The only other pure strategies that could dominate σi(q) are strategies that play ai for type θ1 i , and bi or ci for all other types.",
                "Let us take such a strategy and suppose that it plays c with probability p. Against σi+1(q ), σi+2(q ) (which have not yet been eliminated), the utility of playing this strategy is −(q )2 /2 − /2 + p · δ − p · q /2.",
                "On the other hand, playing σi(q) gives − + q · δ − q · q /2.",
                "Because q > q, we have −(q )2 /2 < −q · q /2, and because δ and are small, it follows that σi(q) receives a higher utility.",
                "Therefore, no strategy dominates σi(q), proving the claim.",
                "Claim 2: If for all q > q, σi+1(q ) and σi+2(q ) have been eliminated, then σi(q) can be eliminated.",
                "Proof: Consider the strategy for player i that plays ai for type θ1 i , and bi for all other types (call this strategy σi); we claim σi dominates σi(q).",
                "First, if either of the other players k plays ak for θ1 k, then σi performs better than σi(q) (which receives −∞ in some cases).",
                "Because the strategies for player k that play ck for type θ1 k, or ak for some type θj k with j > 1, have already been eliminated, all that remains to check is that σi performs better than σi(q) whenever both of the other two players play strategies of the following form: play bk for type θ1 k, and play one of bk or ck otherwise.",
                "We note that among these strategies, there are none left that place probability greater than q on ck.",
                "Letting qk denote the probability with which player k plays ck, the expected utility of playing σi is −qi+1 · qi+2/2 − /2.",
                "On the other hand, the utility of playing σi(q) is − + q · δ − q · qi+2/2.",
                "Because qi+1 ≤ q, the difference between these two expressions is at least /2 − δ, which is positive.",
                "It follows that σi dominates σi(q).",
                "From Claim 2, it follows that all strategies of the form σi(q) will eventually be eliminated.",
                "However, Claim 1 shows that we cannot go ahead and eliminate multiple such strategies for one player, unless at least one other player simultaneously keeps up in the eliminated strategies: every time a σi(q) is eliminated such that σi+1(q) and σi+2(q) have not yet been eliminated, we need to eliminate one of the latter two strategies before any σi(q ) with q > q can be eliminated-that is, we need to alternate between players.",
                "Because there are exponentially many strategies of the form σi(q), it follows that iterated elimination will require exponentially many iterations to complete. 96 It follows that an efficient algorithm for iterated dominance (strict or weak) by pure strategies in Bayesian games, if it exists, must somehow be able to perform (at least part of) many iterations in a single step of the algorithm (because if each step only performed a single iteration, we would need exponentially many steps).",
                "Interestingly, Knuth et al. [11] argue that iterated dominance appears to be an inherently sequential problem (in light of their result that iterated very weak dominance is P-complete, that is, apparently not efficiently parallelizable), suggesting that aggregating many iterations may be difficult. 7.",
                "CONCLUSIONS While the Nash equilibrium solution concept is studied more and more intensely in our community, the perhaps more elementary concept of (iterated) dominance has received much less attention.",
                "In this paper we studied various computational aspects of this concept.",
                "We first studied both strict and weak dominance (not iterated), and showed that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve.",
                "We then moved on to iterated dominance.",
                "We showed that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance.",
                "This allowed us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
                "Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].)",
                "Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time.",
                "We then studied what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies.",
                "First, we showed that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak dominance).",
                "Then, we showed that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3).",
                "Finally, we studied dominance and iterated dominance in Bayesian games, as an example of a concise representation language for normal form games that is interesting in its own right.",
                "We showed that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak dominance).",
                "Finally, we showed that iterated dominance using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak dominance).",
                "There are various avenues for future research.",
                "First, there is the open question of whether it is possible to complete iterated dominance in Bayesian games in polynomial time (even though we showed that an exponential number of alternations between the players in eliminating strategies is sometimes required).",
                "Second, we can study computational aspects of (iterated) dominance in concise representations of normal form games other than Bayesian games-for example, in graphical games [9] or local-effect/action graph games [12, 2]. (How to efficiently perform iterated very weak dominance has already been studied for partially observable stochastic games [8].)",
                "Finally, we can ask whether some of the algorithms we described (such as the one for iterated strict dominance with mixed strategies) can be made faster. 8.",
                "REFERENCES [1] Krzysztof R. Apt.",
                "Uniform proofs of order independence for various strategy elimination procedures.",
                "Contributions to Theoretical Economics, 4(1), 2004. [2] Nivan A. R. Bhat and Kevin Leyton-Brown.",
                "Computing Nash equilibria of action-graph games.",
                "In UAI, 2004. [3] Ben Blum, Christian R. Shelton, and Daphne Koller.",
                "A continuation method for Nash equilibria in structured games.",
                "In IJCAI, 2003. [4] Vincent Conitzer and Tuomas Sandholm.",
                "Complexity results about Nash equilibria.",
                "In IJCAI, pages 765-771, 2003. [5] Drew Fudenberg and Jean Tirole.",
                "Game Theory.",
                "MIT Press, 1991. [6] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
                "On the order of eliminating dominated strategies.",
                "Operations Research Letters, 9:85-89, 1990. [7] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
                "The complexity of eliminating dominated strategies.",
                "Mathematics of Operation Research, 18:553-565, 1993. [8] Eric A. Hansen, Daniel S. Bernstein, and Shlomo Zilberstein.",
                "Dynamic programming for partially observable stochastic games.",
                "In AAAI, pages 709-715, 2004. [9] Michael Kearns, Michael Littman, and Satinder Singh.",
                "Graphical models for game theory.",
                "In UAI, 2001. [10] Leonid Khachiyan.",
                "A polynomial algorithm in linear programming.",
                "Soviet Math.",
                "Doklady, 20:191-194, 1979. [11] Donald E. Knuth, Christos H. Papadimitriou, and John N Tsitsiklis.",
                "A note on strategy elimination in bimatrix games.",
                "Operations Research Letters, 7(3):103-107, 1988. [12] Kevin Leyton-Brown and Moshe Tennenholtz.",
                "Local-effect games.",
                "In IJCAI, 2003. [13] Richard Lipton, Evangelos Markakis, and Aranyak Mehta.",
                "Playing large games using simple strategies.",
                "In ACM-EC, pages 36-41, 2003. [14] Michael Littman and Peter Stone.",
                "A polynomial-time Nash equilibrium algorithm for repeated games.",
                "In ACM-EC, pages 48-54, 2003. [15] Leslie M. Marx and Jeroen M. Swinkels.",
                "Order independence for iterated weak dominance.",
                "Games and Economic Behavior, 18:219-245, 1997. [16] Leslie M. Marx and Jeroen M. Swinkels.",
                "Corrigendum, order independence for iterated weak dominance.",
                "Games and Economic Behavior, 31:324-329, 2000. [17] Andreu Mas-Colell, Michael Whinston, and Jerry R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [18] Roger Myerson.",
                "Game Theory: Analysis of Conflict.",
                "Harvard University Press, Cambridge, 1991. [19] Martin J Osborne and Ariel Rubinstein.",
                "A Course in Game Theory.",
                "MIT Press, 1994. [20] Christos Papadimitriou.",
                "Algorithms, games and the Internet.",
                "In STOC, pages 749-753, 2001. [21] Ryan Porter, Eugene Nudelman, and Yoav Shoham.",
                "Simple search methods for finding a Nash equilibrium.",
                "In AAAI, pages 664-669, 2004. 97"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Introducción En el \"sistema multiagente\" con agentes interestimales, la acción óptima para un agente puede depender de las acciones tomadas por otros agentes."
            ],
            "translated_text": "",
            "candidates": [
                "sistema multiagente",
                "sistema multiagente"
            ],
            "error": []
        },
        "self-interested agent": {
            "translated_key": "agente egoísta",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Complexity of (Iterated) Dominance∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT We study various computational aspects of solving games using dominance and iterated dominance.",
                "We first study both strict and weak dominance (not iterated), and show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve.",
                "We then move on to iterated dominance.",
                "We show that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance.",
                "This allows us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
                "Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].)",
                "Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time.",
                "We then study what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies.",
                "First, we show that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak dominance).",
                "Then, we show that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3).",
                "Finally, we study Bayesian games.",
                "We show that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak ∗ This material is based upon work supported by the National Science Foundation under ITR grants IIS-0121678 and IIS-0427858, and a Sloan Fellowship. dominance).",
                "Finally, we show that iterated dominance using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak dominance).",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In multiagent systems with <br>self-interested agent</br>s, the optimal action for one agent may depend on the actions taken by other agents.",
                "In such settings, the agents require tools from game theory to rationally decide on an action.",
                "Game theory offers various formal models of strategic settings-the best-known of which is a game in normal (or matrix) form, specifying a utility (payoff) for each agent for each combination of strategies that the agents choose-as well as solution concepts, which, given a game, specify which outcomes are reasonable (under various assumptions of rationality and common knowledge).",
                "Probably the best-known (and certainly the most-studied) solution concept is that of Nash equilibrium.",
                "A Nash equilibrium specifies a strategy for each player, in such a way that no player has an incentive to (unilaterally) deviate from the prescribed strategy.",
                "Recently, numerous papers have studied computing Nash equilibria in various settings [9, 4, 12, 3, 13, 14], and the complexity of constructing a Nash equilibrium in normal form games has been labeled one of the two most important open problems on the boundary of P today [20].",
                "The problem of computing solutions according to the perhaps more elementary solution concepts of dominance and iterated dominance has received much less attention. (After an early short paper on an easy case [11], the main computational study of these concepts has actually taken place in a paper in the game theory community [7].1 ) A strategy strictly dominates another strategy if it performs strictly 1 This is not to say that computer scientists have ignored 88 better against all vectors of opponent strategies, and weakly dominates it if it performs at least as well against all vectors of opponent strategies, and strictly better against at least one.",
                "The idea is that dominated strategies can be eliminated from consideration.",
                "In iterated dominance, the elimination proceeds in rounds, and becomes easier as more strategies are eliminated: in any given round, the dominating strategy no longer needs to perform better than or as well as the dominated strategy against opponent strategies that were eliminated in earlier rounds.",
                "Computing solutions according to (iterated) dominance is important for at least the following reasons: 1) it can be computationally easier than computing (for instance) a Nash equilibrium (and therefore it can be useful as a preprocessing step in computing a Nash equilibrium), and 2) (iterated) dominance requires a weaker rationality assumption on the players than (for instance) Nash equilibrium, and therefore solutions derived according to it are more likely to occur.",
                "In this paper, we study some fundamental computational questions concerning dominance and iterated dominance, including how hard it is to check whether a given strategy can be eliminated by each of the variants of these notions.",
                "The rest of the paper is organized as follows.",
                "In Section 2, we briefly review definitions and basic properties of normal form games, strict and weak dominance, and iterated strict and weak dominance.",
                "In the remaining sections, we study computational aspects of dominance and iterated dominance.",
                "In Section 3, we study one-shot (not iterated) dominance.",
                "In Section 4, we study iterated dominance.",
                "In Section 5, we study dominance and iterated dominance when the dominating strategy can only place probability on a few pure strategies.",
                "Finally, in Section 6, we study dominance and iterated dominance in Bayesian games. 2.",
                "DEFINITIONS AND BASIC PROPERTIES In this section, we briefly review normal form games, as well as dominance and iterated dominance (both strict and weak).",
                "An n-player normal form game is defined as follows.",
                "Definition 1.",
                "A normal form game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of pure strategies Σi and a utility function ui : Σ1 × Σ2 × . . . × Σn → R (where ui(σ1, σ2, . . . , σn) denotes player is utility when each player j plays action σj).",
                "The two main notions of dominance are defined as follows.",
                "Definition 2.",
                "Player is strategy σi is said to be strictly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
                "Player is strategy σi is said to be weakly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) ≥ ui(σi, σ−i), and for at least one vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
                "In this definition, it is sometimes allowed for the dominating strategy σi to be a mixed strategy, that is, a probability distribution over pure strategies.",
                "In this case, the utilities in dominance altogether.",
                "For example, simple dominance checks are sometimes used as a subroutine in searching for Nash equilibria [21]. the definition are the expected utilities.2 There are other notions of dominance, such as very weak dominance (in which no strict inequality is required, so two strategies can dominate each other), but we will not study them here.",
                "When we are looking at the dominance relations for player i, the other players (−i) can be thought of as a single player.3 Therefore, in the rest of the paper, when we study one-shot (not iterated) dominance, we will focus without loss of generality on two-player games.4 In two-player games, we will generally refer to the players as r (row) and c (column) rather than 1 and 2.",
                "In iterated dominance, dominated strategies are removed from the game, and no longer have any effect on future dominance relations.",
                "Iterated dominance can eliminate more strategies than dominance, as follows. σr may originally not dominate σr because the latter performs better against σc; but then, once σc is removed because it is dominated by σc, σr dominates σr, and the latter can be removed.",
                "For example, in the following game, R can be removed first, after which D is dominated.",
                "L R U 1, 1 0, 0 D 0, 1 1, 0 Either strict or weak dominance can be used in the definition of iterated dominance.",
                "We note that the process of iterated dominance is never helped by removing a dominated mixed strategy, for the following reason.",
                "If σi gives player i a higher utility than σi against mixed strategy σj for player j = i (and strategies σ−{i,j} for the other players), then for at least one pure strategy σj that σj places positive probability on, σi must perform better than σi against σj (and strategies σ−{i,j} for the other players).",
                "Thus, removing the mixed strategy σj does not introduce any new dominances.",
                "More detailed discussions and examples can be found in standard texts on microeconomics or game theory [17, 5].",
                "We are now ready to move on to the core of this paper. 3.",
                "DOMINANCE (NOT ITERATED) In this section, we study the notion of one-shot (not iterated) dominance.",
                "As a first observation, checking whether a given strategy is strictly (weakly) dominated by some pure strategy is straightforward, by checking, for every pure strategy for that player, whether the latter strategy performs strictly better against all the opponents strategies (at least as well against all the opponents strategies, and strictly 2 The dominated strategy σi is, of course, also allowed to be mixed, but this has no technical implications for the paper: when we study one-shot dominance, we ask whether a given strategy is dominated, and it does not matter whether the given strategy is pure or mixed; when we study iterated dominance, there is no use in eliminating mixed strategies, as we will see shortly. 3 This player may have a very large strategy space (one pure strategy for every vector of pure strategies for the players that are being replaced).",
                "Nevertheless, this will not result in an increase in our representation size, because the original representation already had to specify utilities for each of these vectors. 4 We note that a restriction to two-player games would not be without loss of generality for iterated dominance.",
                "This is because for iterated dominance, we need to look at the dominated strategies of each individual player, so we cannot merge any players. 89 better against at least one).5 Next, we show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time by solving a single linear program. (Similar linear programs have been given before [18]; we present the result here for completeness, and because we will build on the linear programs given below in Theorem 6.)",
                "Proposition 1.",
                "Given the row players utilities, a subset Dr of the row players pure strategies Σr, and a distinguished strategy σ∗ r for the row player, we can check in time polynomial in the size of the game (by solving a single linear program of polynomial size) whether there exists some mixed strategy σr, that places positive probability only on strategies in Dr and dominates σ∗ r , both for strict and for weak dominance.",
                "Proof.",
                "Let pdr be the probability that σr places on dr ∈ Dr. We will solve a single linear program in each of our algorithms; linear programs can be solved in polynomial time [10].",
                "For strict dominance, the question is whether the pdr can be set so that for every pure strategy for the column player σc ∈ Σc, dr∈Dr pdr ur(dr, σc) > ur(σ∗ r , σc).",
                "Because the inequality must be strict, we cannot solve this directly by linear programming.",
                "We proceed as follows.",
                "Because the game is finite, we may assume without loss of generality that all utilities are positive (if not, simply add a constant to all utilities.)",
                "Solve the following linear program: minimize dr∈Dr pdr such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc).",
                "If σ∗ r is strictly dominated by some mixed strategy, this linear program has a solution with objective value < 1. (The dominating strategy is a feasible solution with objective value exactly 1.",
                "Because no constraint is binding for this solution, we can reduce one of the probabilities slightly without affecting feasibility, thereby obtaining a solution with objective value < 1.)",
                "Moreover, if this linear program has a solution with objective value < 1, there is a mixed strategy strictly dominating σ∗ r , which can be obtained by taking the LP solution and adding the remaining probability to any strategy (because all the utilities are positive, this will add to the left side of any inequality, so all inequalities will become strict).",
                "For weak dominance, we can solve the following linear program: maximize σc∈Σc (( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc)) such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc); dr∈Dr pdr = 1.",
                "If σ∗ r is weakly dominated by some mixed strategy, then that mixed strategy is a feasible solution to this program with objective value > 0, because for at least one strategy σc ∈ Σc we have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0.",
                "On the other hand, if this program has a solution with objective value > 0, then for at least one strategy σc ∈ Σc we 5 Recall that the assumption of a single opponent (that is, the assumption of two players) is without loss of generality for one-shot dominance. must have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0, and thus the linear programs solution is a weakly dominating mixed strategy. 4.",
                "ITERATED DOMINANCE We now move on to iterated dominance.",
                "It is well-known that iterated strict dominance is path-independent [6, 19]that is, if we remove dominated strategies until no more dominated strategies remain, in the end the remaining strategies for each player will be the same, regardless of the order in which strategies are removed.",
                "Because of this, to see whether a given strategy can be eliminated by iterated strict dominance, all that needs to be done is to repeatedly remove strategies that are strictly dominated, until no more dominated strategies remain.",
                "Because we can check in polynomial time whether any given strategy is dominated (whether or not dominance by mixed strategies is allowed, as described in Section 3), this whole procedure takes only polynomial time.",
                "In the case of iterated dominance by pure strategies with two players, Knuth et al. [11] slightly improve on (speed up) the straightforward implementation of this procedure by keeping track of, for each ordered pair of strategies for a player, the number of opponent strategies that prevent the first strategy from dominating the second.",
                "Hereby the runtime for an m × n game is reduced from O((m + n)4 ) to O((m + n)3 ). (Actually, they only study very weak dominance (for which no strict inequalities are required), but the approach is easily extended.)",
                "In contrast, iterated weak dominance is known to be pathdependent.6 For example, in the following game, using iterated weak dominance we can eliminate M first, and then D, or R first, and then U. L M R U 1, 1 0, 0 1, 0 D 1, 1 1, 0 0, 0 Therefore, while the procedure of removing weakly dominated strategies until no more weakly dominated strategies remain can certainly be executed in polynomial time, which strategies survive in the end depends on the order in which we remove the dominated strategies.",
                "We will investigate two questions for iterated weak dominance: whether a given strategy is eliminated in some path, and whether there is a path to a unique solution (one pure strategy left per player).",
                "We will show that both of these problems are computationally hard.",
                "Definition 3.",
                "Given a game in normal form and a distinguished strategy σ∗ , IWD-STRATEGY-ELIMINATION asks whether there is some path of iterated weak dominance that eliminates σ∗ .",
                "Given a game in normal form, IWDUNIQUE-SOLUTION asks whether there is some path of iterated weak dominance that leads to a unique solution (one strategy left per player).",
                "The following lemma shows a special case of normal form games in which allowing for weak dominance by mixed strategies (in addition to weak dominance by pure strategies) does 6 There is, however, a restriction of weak dominance called nice weak dominance which is path-independent [15, 16].",
                "For an overview of path-independence results, see Apt [1]. 90 not help.",
                "We will prove the hardness results in this setting, so that they will hold whether or not dominance by mixed strategies is allowed.",
                "Lemma 1.",
                "Suppose that all the utilities in a game are in {0, 1}.",
                "Then every pure strategy that is weakly dominated by a mixed strategy is also weakly dominated by a pure strategy.",
                "Proof.",
                "Suppose pure strategy σ is weakly dominated by mixed strategy σ∗ .",
                "If σ gets a utility of 1 against some opponent strategy (or vector of opponent strategies if there are more than 2 players), then all the pure strategies that σ∗ places positive probability on must also get a utility of 1 against that opponent strategy (or else the expected utility would be smaller than 1).",
                "Moreover, at least one of the pure strategies that σ∗ places positive probability on must get a utility of 1 against an opponent strategy that σ gets 0 against (or else the inequality would never be strict).",
                "It follows that this pure strategy weakly dominates σ.",
                "We are now ready to prove the main results of this section.",
                "Theorem 1.",
                "IWD-STRATEGY-ELIMINATION is NPcomplete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed.",
                "Proof.",
                "The problem is in NP because given a sequence of strategies to be eliminated, we can easily check whether this is a valid sequence of eliminations (even when dominance by mixed strategies is allowed, using Proposition 1).",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following IWD-STRATEGY-ELIMINATION instance. (In this instance, we will specify that certain strategies are uneliminable.",
                "A strategy σr can be made uneliminable, even when 0 and 1 are the only allowed utilities, by adding another strategy σr and another opponent strategy σc, so that: 1. σr and σr are the only strategies that give the row player a utility of 1 against σc. 2. σr and σr always give the row player the same utility. 3. σc is the only strategy that gives the column player a utility of 1 against σr, but otherwise σc always gives the column player utility 0.",
                "This makes it impossible to eliminate any of these three strategies.",
                "We will not explicitly specify the additional strategies to make the proof more legible.)",
                "In this proof, we will denote row player strategies by s, and column player strategies by t, to improve legibility.",
                "Let the row players pure strategy set be given as follows.",
                "For every variable v ∈ V , the row player has corresponding strategies s1 +v, s2 +v, s1 −v, s2 −v.",
                "Additionally, the row player has the following 2 strategies: s1 0 and s2 0, where s2 0 = σ∗ r (that is, it is the strategy we seek to eliminate).",
                "Finally, for every clause c ∈ C, the row player has corresponding strategies s1 c (uneliminable) and s2 c. Let the column players pure strategy set be given as follows.",
                "For every variable v ∈ V , the column player has a corresponding strategy tv.",
                "For every clause c ∈ C, the column player has a corresponding strategy tc, and additionally, for every literal l ∈ L that occurs in c, a strategy tc,l.",
                "For every variable v ∈ V , the column player has corresponding strategies t+v, t−v (both uneliminable).",
                "Finally, the column player has three additional strategies: t1 0 (uneliminable), t2 0, and t1.",
                "The utility function for the row player is given as follows: • ur(s1 +v, tv) = 0 for all v ∈ V ; • ur(s2 +v, tv) = 1 for all v ∈ V ; • ur(s1 −v, tv) = 1 for all v ∈ V ; • ur(s2 −v, tv) = 0 for all v ∈ V ; • ur(s1 +v, t1) = 1 for all v ∈ V ; • ur(s2 +v, t1) = 0 for all v ∈ V ; • ur(s1 −v, t1) = 0 for all v ∈ V ; • ur(s2 −v, t1) = 1 for all v ∈ V ; • ur(sb +v, t+v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sb −v, t−v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sl, t) = 0 otherwise for all l ∈ L and t ∈ S2; • ur(s1 0, tc) = 0 for all c ∈ C; • ur(s2 0, tc) = 1 for all c ∈ C; • ur(sb 0, t1 0) = 1 for all b ∈ {1, 2}; • ur(s1 0, t2 0) = 1; • ur(s2 0, t2 0) = 0; • ur(sb 0, t) = 0 otherwise for all b ∈ {1, 2} and t ∈ S2; • ur(sb c, t) = 0 otherwise for all c ∈ C and b ∈ {1, 2}; and the row players utility is 0 in every other case.",
                "The utility function for the column player is given as follows: • uc(s, tv) = 0 for all v ∈ V and s ∈ S1; • uc(s, t1) = 0 for all s ∈ S1; • uc(s2 l , tc) = 1 for all c ∈ C and l ∈ L where l ∈ c (literal l occurs in clause c); • uc(s2 l2 , tc,l1 ) = 1 for all c ∈ C and l1, l2 ∈ L, l1 = l2 where l2 ∈ c; • uc(s1 c, tc) = 1 for all c ∈ C; • uc(s2 c, tc) = 0 for all c ∈ C; • uc(sb c, tc,l) = 1 for all c ∈ C, l ∈ L, and b ∈ {1, 2}; • uc(s2, tc) = uc(s2, tc,l) = 0 otherwise for all c ∈ C and l ∈ L; and the column players utility is 0 in every other case.",
                "We now show that the two instances are equivalent.",
                "First, suppose there is a solution to the satisfiability instance: that is, a truth-value assignment to the variables in V such that all clauses are satisfied.",
                "Then, consider the following sequence of eliminations in our game: 1.",
                "For every variable v that is set to true in the assignment, eliminate tv (which gives the column player utility 0 everywhere). 2.",
                "Then, for every variable v that is set to true in the assignment, eliminate s2 +v using s1 +v (which is possible because tv has been eliminated, and because t1 has not been eliminated (yet)). 3.",
                "Now eliminate t1 (which gives the column player utility 0 everywhere). 4.",
                "Next, for every variable v that is set to false in the assignment, eliminate s2 −v using s1 −v (which is possible because t1 has been eliminated, and because tv has not been eliminated (yet)). 5.",
                "For every clause c which has the variable corresponding to one of its positive literals l = +v set to true in the assignment, eliminate tc using tc,l (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 6.",
                "For every clause c which has the variable corresponding to one of its negative literals l = −v set to false in the assignment, eliminate tc using tc,l 91 (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 7.",
                "Because the assignment satisfied the formula, all the tc have now been eliminated.",
                "Thus, we can eliminate s2 0 = σ∗ r using s1 0.",
                "It follows that there is a solution to the IWD-STRATEGY-ELIMINATION instance.",
                "Now suppose there is a solution to the IWD-STRATEGYELIMINATION instance.",
                "By Lemma 1, we can assume that all the dominances are by pure strategies.",
                "We first observe that only s1 0 can eliminate s2 0 = σ∗ r , because it is the only other strategy that gets the row player a utility of 1 against t1 0, and t1 0 is uneliminable.",
                "However, because s2 0 performs better than s1 0 against the tc strategies, it follows that all of the tc strategies must be eliminated.",
                "For each c ∈ C, the strategy tc can only be eliminated by one of the strategies tc,l (with the same c), because these are the only other strategies that get the column player a utility of 1 against s1 c, and s1 c is uneliminable.",
                "But, in order for some tc,l to eliminate tc, s2 l must be eliminated first.",
                "Only s1 l can eliminate s2 l , because it is the only other strategy that gets the row player a utility of 1 against tl, and tl is uneliminable.",
                "We next show that for every v ∈ V only one of s2 +v, s2 −v can be eliminated.",
                "This is because in order for s1 +v to eliminate s2 +v, tv needs to have been eliminated and t1, not (so tv must be eliminated before t1); but in order for s1 −v to eliminate s2 −v, t1 needs to have been eliminated and tv, not (so t1 must be eliminated before tv).",
                "So, set v to true if s2 +v is eliminated, and to false otherwise Because by the above, for every clause c, one of the s2 l with l ∈ c must be eliminated, it follows that this is a satisfying assignment to the satisfiability instance.",
                "Using Theorem 1, it is now (relatively) easy to show that IWD-UNIQUE-SOLUTION is also NP-complete under the same restrictions.",
                "Theorem 2.",
                "IWD-UNIQUE-SOLUTION is NP-complete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed.",
                "Proof.",
                "Again, the problem is in NP because we can nondeterministically choose the sequence of eliminations and verify whether it is correct.",
                "To show NP-hardness, we reduce an arbitrary IWD-STRATEGY-ELIMINATION instance to the following IWD-UNIQUE-SOLUTION instance.",
                "Let all the strategies for each player from the original instance remain part of the new instance, and let the utilities resulting from the players playing a pair of these strategies be the same.",
                "We add three additional strategies σ1 r , σ2 r , σ3 r for the row player, and three additional strategies σ1 c , σ2 c , σ3 c for the column player.",
                "Let the additional utilities be as follows: • ur(σr, σj c) = 1 for all σr /∈ {σ1 r , σ2 r , σ3 r } and j ∈ {2, 3}; • ur(σi r, σc) = 1 for all i ∈ {1, 2, 3} and σc /∈ {σ2 c , σ3 c }; • ur(σi r, σ2 c ) = 1 for all i ∈ {2, 3}; • ur(σ1 r , σ3 c ) = 1; • and the row players utility is 0 in all other cases involving a new strategy. • uc(σ3 r , σc) = 1 for all σc /∈ {σ1 c , σ2 c , σ3 c }; • uc(σ∗ r , σj c) = 1 for all j ∈ {2, 3} (σ∗ r is the strategy to be eliminated in the original instance); • uc(σi r, σ1 c ) = 1 for all i ∈ {1, 2}; • ur(σ1 r , σ2 c ) = 1; • ur(σ2 r , σ3 c ) = 1; • and the column players utility is 0 in all other cases involving a new strategy.",
                "We proceed to show that the two instances are equivalent.",
                "First suppose there exists a solution to the original IWDSTRATEGY-ELIMINATION instance.",
                "Then, perform the same sequence of eliminations to eliminate σ∗ r in the new IWD-UNIQUE-SOLUTION instance. (This is possible because at any stage, any weak dominance for the row player in the original instance is still a weak dominance in the new instance, because the two strategies utilities for the row player are the same when the column player plays one of the new strategies; and the same is true for the column player.)",
                "Once σ∗ r is eliminated, let σ1 c eliminate σ2 c . (It performs better against σ2 r .)",
                "Then, let σ1 r eliminate all the other remaining strategies for the row player. (It always performs better against either σ1 c or σ3 c .)",
                "Finally, σ1 c is the unique best response against σ1 r among the column players remaining strategies, so let it eliminate all the other remaining strategies for the column player.",
                "Thus, there exists a solution to the IWD-UNIQUE-SOLUTION instance.",
                "Now suppose there exists a solution to the IWD-UNIQUESOLUTION instance.",
                "By Lemma 1, we can assume that all the dominances are by pure strategies.",
                "We will show that none of the new strategies (σ1 r , σ2 r , σ3 r , σ1 c , σ2 c , σ3 c ) can either eliminate another strategy, or be eliminated before σ∗ r is eliminated.",
                "Thus, there must be a sequence of eliminations ending in the elimination of σ∗ r , which does not involve any of the new strategies, and is therefore a valid sequence of eliminations in the original game (because all original strategies perform the same against each new strategy).",
                "We now show that this is true by exhausting all possibilities for the first elimination before σ∗ r is eliminated that involves a new strategy.",
                "None of the σi r can be eliminated by a σr /∈ {σ1 r , σ2 r , σ3 r }, because the σi r perform better against σ1 c . σ1 r cannot eliminate any other strategy, because it always performs poorer against σ2 c . σ2 r and σ3 r are equivalent from the row players perspective (and thus cannot eliminate each other), and cannot eliminate any other strategy because they always perform poorer against σ3 c .",
                "None of the σj c can be eliminated by a σc /∈ {σ1 c , σ2 c , σ3 c }, because the σj c always perform better against either σ1 r or σ2 r . σ1 c cannot eliminate any other strategy, because it always performs poorer against either σ∗ r or σ3 r . σ2 c cannot eliminate any other strategy, because it always performs poorer against σ2 r or σ3 r . σ3 c cannot eliminate any other strategy, because it always performs poorer against σ1 r or σ3 r .",
                "Thus, there exists a solution to the IWDSTRATEGY-ELIMINATION instance.",
                "A slightly weaker version of the part of Theorem 2 concerning dominance by pure strategies only is the main result of Gilboa et al. [7]. (Besides not proving the result for dominance by mixed strategies, the original result was weaker because it required utilities {0, 1, 2, 3, 4, 5, 6, 7, 8} rather than just {0, 1} (and because of this, our Lemma 1 cannot be applied to it to get the result for mixed strategies).) 5. (ITERATED) DOMINANCE USING MIXED STRATEGIES WITH SMALL SUPPORTS When showing that a strategy is dominated by a mixed strategy, there are several reasons to prefer exhibiting a 92 dominating strategy that places positive probability on as few pure strategies as possible.",
                "First, this will reduce the number of bits required to specify the dominating strategy (and thus the proof of dominance can be communicated quicker): if the dominating mixed strategy places positive probability on only k strategies, then it can be specified using k real numbers for the probabilities, plus k log m (where m is the number of strategies for the player under consideration) bits to indicate which strategies are used.",
                "Second, the proof of dominance will be cleaner: for a dominating mixed strategy, it is typically (always in the case of strict dominance) possible to spread some of the probability onto any unused pure strategy and still have a dominating strategy, but this obscures which pure strategies are the ones that are key in making the mixed strategy dominating.",
                "Third, because (by the previous) the argument for eliminating the dominated strategy is simpler and easier to understand, it is more likely to be accepted.",
                "Fourth, the level of risk neutrality required for the argument to work is reduced, at least in the extreme case where dominance by a single pure strategy can be exhibited (no risk neutrality is required here).",
                "This motivates the following problem.",
                "Definition 4 (MINIMUM-DOMINATING-SET).",
                "We are given the row players utilities of a game in normal form, a distinguished strategy σ∗ for the row player, a specification of whether the dominance should be strict or weak, and a number k. We are asked whether there exists a mixed strategy σ for the row player that places positive probability on at most k pure strategies, and dominates σ∗ in the required sense.",
                "Unfortunately, this problem is NP-complete.",
                "Theorem 3.",
                "MINIMUM-DOMINATING-SET is NPcomplete, both for strict and for weak dominance.",
                "Proof.",
                "The problem is in NP because we can nondeterministically choose a set of at most k strategies to give positive probability, and decide whether we can dominate σ∗ with these k strategies as described in Proposition 1.",
                "To show NP-hardness, we reduce an arbitrary SET-COVER instance (given a set S, subsets S1, S2, . . . , Sr, and a number t, can all of S be covered by at most t of the subsets?) to the following MINIMUM-DOMINATING-SET instance.",
                "For every element s ∈ S, there is a pure strategy σs for the column player.",
                "For every subset Si, there is a pure strategy σSi for the row player.",
                "Finally, there is the distinguished pure strategy σ∗ for the row player.",
                "The row players utilities are as follows: ur(σSi , σs) = t + 1 if s ∈ Si; ur(σSi , σs) = 0 if s /∈ Si; ur(σ∗ , σs) = 1 for all s ∈ S. Finally, we let k = t. We now proceed to show that the two instances are equivalent.",
                "First suppose there exists a solution to the SET-COVER instance.",
                "Without loss of generality, we can assume that there are exactly k subsets in the cover.",
                "Then, for every Si that is in the cover, let the dominating strategy σ place exactly 1 k probability on the corresponding pure strategy σSi .",
                "Now, if we let n(s) be the number of subsets in the cover containing s (we observe that that n(s) ≥ 1), then for every strategy σs for the column player, the row players expected utility for playing σ when the column player is playing σs is u(σ, σs) = n(s) k (k + 1) ≥ k+1 k > 1 = u(σ∗ , σs).",
                "So σ strictly (and thus also weakly) dominates σ∗ , and there exists a solution to the MINIMUM-DOMINATING-SET instance.",
                "Now suppose there exists a solution to the MINIMUMDOMINATING-SET instance.",
                "Consider the (at most k) pure strategies of the form σSi on which the dominating mixed strategy σ places positive probability, and let T be the collection of the corresponding subsets Si.",
                "We claim that T is a cover.",
                "For suppose there is some s ∈ S that is not in any of the subsets in T .",
                "Then, if the column player plays σs, the row player (when playing σ) will always receive utility 0-as opposed to the utility of 1 the row player would receive for playing σ∗ , contradicting the fact that σ dominates σ∗ (whether this dominance is weak or strict).",
                "It follows that there exists a solution to the SET-COVER instance.",
                "On the other hand, if we require that the dominating strategy only places positive probability on a very small number of pure strategies, then it once again becomes easy to check whether a strategy is dominated.",
                "Specifically, to find out whether player is strategy σ∗ is dominated by a strategy that places positive probability on only k pure strategies, we can simply check, for every subset of k of player is pure strategies, whether there is a strategy that places positive probability only on these k strategies and dominates σ∗ , using Proposition 1.",
                "This requires only O(|Σi|k ) such checks.",
                "Thus, if k is a constant, this constitutes a polynomial-time algorithm.",
                "A natural question to ask next is whether iterated strict dominance remains computationally easy when dominating strategies are required to place positive probability on at most k pure strategies, where k is a small constant. (We have already shown in Section 4 that iterated weak dominance is hard even when k = 1, that is, only dominance by pure strategies is allowed.)",
                "Of course, if iterated strict dominance were path-independent under this restriction, computational easiness would follow as it did in Section 4.",
                "However, it turns out that this is not the case.",
                "Observation 1.",
                "If we restrict the dominating strategies to place positive probability on at most two pure strategies, iterated strict dominance becomes path-dependent.",
                "Proof.",
                "Consider the following game: 7, 1 0, 0 0, 0 0, 0 7, 1 0, 0 3, 0 3, 0 0, 0 0, 0 0, 0 3, 1 1, 0 1, 0 1, 0 Let (i, j) denote the outcome in which the row player plays the ith row and the column player plays the jth column.",
                "Because (1, 1), (2, 2), and (4, 3) are all Nash equilibria, none of the column players pure strategies will ever be eliminated, and neither will rows 1, 2, and 4.",
                "We now observe that randomizing uniformly over rows 1 and 2 dominates row 3, and randomizing uniformly over rows 3 and 4 dominates row 5.",
                "However, if we eliminate row 3 first, it becomes impossible to dominate row 5 without randomizing over at least 3 pure strategies.",
                "Indeed, iterated strict dominance turns out to be hard even when k = 3.",
                "Theorem 4.",
                "If we restrict the dominating strategies to place positive probability on at most three pure strategies, it becomes NP-complete to decide whether a given strategy can be eliminated using iterated strict dominance. 93 Proof.",
                "The problem is in NP because given a sequence of strategies to be eliminated, we can check in polynomial time whether this is a valid sequence of eliminations (for any strategy to be eliminated, we can check, for every subset of three other strategies, whether there is a strategy placing positive probability on only these three strategies that dominates the strategy to be eliminated, using Proposition 1).",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following two-player game.",
                "For every variable v ∈ V , the row player has strategies s+v, s−v, s1 v, s2 v, s3 v, s4 v, and the column player has strategies t1 v, t2 v, t3 v, t4 v. For every clause c ∈ C, the row player has a strategy sc, and the column player has a strategy tc, as well as, for every literal l occurring in c, an additional strategy tl c. The row player has two additional strategies s1 and s2. (s2 is the strategy that we are seeking to eliminate.)",
                "Finally, the column player has one additional strategy t1.",
                "The utility function for the row player is given as follows (where is some sufficiently small number): • ur(s+v, tj v) = 4 if j ∈ {1, 2}, for all v ∈ V ; • ur(s+v, tj v) = 1 if j ∈ {3, 4}, for all v ∈ V ; • ur(s−v, tj v) = 1 if j ∈ {1, 2}, for all v ∈ V ; • ur(s−v, tj v) = 4 if j ∈ {3, 4}, for all v ∈ V ; • ur(s+v, t) = ur(s−v, t) = 0 for all v ∈ V and t /∈ {t1 v, t2 v, t3 v, t4 v}; • ur(si v, ti v) = 13 for all v ∈ V and i ∈ {1, 2, 3, 4}; • ur(si v, t) = for all v ∈ V , i ∈ {1, 2, 3, 4}, and t = ti v; • ur(sc, tc) = 2 for all c ∈ C; • ur(sc, t) = 0 for all c ∈ C and t = tc; • ur(s1, t1) = 1 + ; • ur(s1, t) = for all t = t1; • ur(s2, t1) = 1; • ur(s2, tc) = 1 for all c ∈ C; • ur(s2, t) = 0 for all t /∈ {t1} ∪ {tc : c ∈ C}.",
                "The utility function for the column player is given as follows: • uc(si v, ti v) = 1 for all v ∈ V and i ∈ {1, 2, 3, 4}; • uc(s, ti v) = 0 for all v ∈ V , i ∈ {1, 2, 3, 4}, and s = si v; • uc(sc, tc) = 1 for all c ∈ C; • uc(sl, tc) = 1 for all c ∈ C and l ∈ L occurring in c; • uc(s, tc) = 0 for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c}; • uc(sc, tl c) = 1 + for all c ∈ C; • uc(sl , tl c) = 1 + for all c ∈ C and l = l occurring in c; • uc(s, tl c) = for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c, l = l }; • uc(s2, t1) = 1; • uc(s, t1) = 0 for all s = s2.",
                "We now show that the two instances are equivalent.",
                "First, suppose that there is a solution to the satisfiability instance.",
                "Then, consider the following sequence of eliminations in our game: 1.",
                "For every variable v that is set to true in the satisfying assignment, eliminate s+v with the mixed strategy σr that places probability 1/3 on s−v, probability 1/3 on s1 v, and probability 1/3 on s2 v. (The expected utility of playing σr against t1 v or t2 v is 14/3 > 4; against t3 v or t4 v, it is 4/3 > 1; and against anything else it is 2 /3 > 0.",
                "Hence the dominance is valid.) 2.",
                "Similarly, for every variable v that is set to false in the satisfying assignment, eliminate s−v with the mixed strategy σr that places probability 1/3 on s+v, probability 1/3 on s3 v, and probability 1/3 on s4 v. (The expected utility of playing σr against t1 v or t2 v is 4/3 > 1; against t3 v or t4 v, it is 14/3 > 4; and against anything else it is 2 /3 > 0.",
                "Hence the dominance is valid.) 3.",
                "For every c ∈ C, eliminate tc with any tl c for which l was set to true in the satisfying assignment. (This is a valid dominance because tl c performs better than tc against any strategy other than sl, and we eliminated sl in step 1 or in step 2.) 4.",
                "Finally, eliminate s2 with s1. (This is a valid dominance because s1 performs better than s2 against any strategy other than those in {tc : c ∈ C}, which we eliminated in step 3.)",
                "Hence, there is an elimination path that eliminates s2.",
                "Now, suppose that there is an elimination path that eliminates s2.",
                "The strategy that eventually dominates s2 must place most of its probability on s1, because s1 is the only other strategy that performs well against t1, which cannot be eliminated before s2.",
                "But, s1 performs significantly worse than s2 against any strategy tc with c ∈ C, so it follows that all these strategies must be eliminated first.",
                "Each strategy tc can only be eliminated by a strategy that places most of its weight on the corresponding strategies tl c with l ∈ c, because they are the only other strategies that perform well against sc, which cannot be eliminated before tc.",
                "But, each strategy tl c performs significantly worse than tc against sl, so it follows that for every clause c, for one of the literals l occurring in it, sl must be eliminated first.",
                "Now, strategies of the form tj v will never be eliminated because they are the unique best responses to the corresponding strategies sj v (which are, in turn, the best responses to the corresponding tj v).",
                "As a result, if strategy s+v (respectively, s−v) is eliminated, then its opposite strategy s−v (respectively, s+v) can no longer be eliminated, for the following reason.",
                "There is no other pure strategy remaining that gets a significant utility against more than one of the strategies t1 v, t2 v, t3 v, t4 v, but s−v (respectively, s+v) gets significant utility against all 4, and therefore cannot be dominated by a mixed strategy placing positive probability on at most 3 strategies.",
                "It follows that for each v ∈ V , at most one of the strategies s+v, s−v is eliminated, in such a way that for every clause c, for one of the literals l occurring in it, sl must be eliminated.",
                "But then setting all the literals l such that sl is eliminated to true constitutes a solution to the satisfiability instance.",
                "In the next section, we return to the setting where there is no restriction on the number of pure strategies on which a dominating mixed strategy can place positive probability. 6. (ITERATED) DOMINANCE IN BAYESIAN GAMES So far, we have focused on normal form games that are flatly represented (that is, every matrix entry is given ex94 plicitly).",
                "However, for many games, the flat representation is too large to write down explicitly, and instead, some representation that exploits the structure of the game needs to be used.",
                "Bayesian games, besides being of interest in their own right, can be thought of as a useful structured representation of normal form games, and we will study them in this section.",
                "In a Bayesian game, each player first receives privately held preference information (the players type) from a distribution, which determines the utility that that player receives for every outcome of (that is, vector of actions played in) the game.",
                "After receiving this type, the player plays an action based on it.7 Definition 5.",
                "A Bayesian game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of actions Ai, a (finite) type space Θi with a probability distribution πi over it, and a utility function ui : Θi × A1 × A2 × . . . × An → R (where ui(θi, a1, a2, . . . , an) denotes player is utility when is type is θi and each player j plays action aj).",
                "A pure strategy in a Bayesian game is a mapping from types to actions, σi : Θi → Ai, where σi(θi) denotes the action that player i plays for type θi.",
                "Any vector of pure strategies in a Bayesian game defines an (expected) utility for each player, and therefore we can translate a Bayesian game into a normal form game.",
                "In this normal form game, the notions of dominance and iterated dominance are defined as before.",
                "However, the normal form representation of the game is exponentially larger than the Bayesian representation, because each player i has |Ai||Θi| distinct pure strategies.",
                "Thus, any algorithm for Bayesian games that relies on expanding the game to its normal form will require exponential time.",
                "Specifically, our easiness results for normal form games do not directly transfer to this setting.",
                "In fact, it turns out that checking whether a strategy is dominated by a pure strategy is hard in Bayesian games.",
                "Theorem 5.",
                "In a Bayesian game, it is NP-complete to decide whether a given pure strategy σr : Θr → Ar is dominated by some other pure strategy (both for strict and weak dominance), even when the row players distribution over types is uniform.",
                "Proof.",
                "The problem is in NP because it is easy to verify whether a candidate dominating strategy is indeed a dominating strategy.",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a set of clauses C using variables from V ) to the following Bayesian game.",
                "Let the row players action set be Ar = {t, f, 0} and let the column players action set be Ac = {ac : c ∈ C}.",
                "Let the row players type set be Θr = {θv : v ∈ V }, with a distribution πr that is uniform.",
                "Let the row players utility function be as follows: • ur(θv, 0, ac) = 0 for all v ∈ V and c ∈ C; • ur(θv, b, ac) = |V | for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b satisfies c; • ur(θv, b, ac) = −1 for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b does not satisfy c. 7 In general, a player can also receive a signal about the other players preferences, but we will not concern ourselves with that here.",
                "Let the pure strategy to be dominated be the one that plays 0 for every type.",
                "We show that the strategy is dominated by a pure strategy if and only if there is a solution to the satisfiability instance.",
                "First, suppose there is a solution to the satisfiability instance.",
                "Then, let σd r be given by: σd r (θv) = t if v is set to true in the solution to the satisfiability instance, and σd r (θv) = f otherwise.",
                "Then, against any action ac by the column player, there is at least one type θv such that either +v ∈ c and σd r (θv) = t, or −v ∈ c and σd r (θv) = f. Thus, the row players expected utility against action ac is at least |V | |V | − |V |−1 |V | = 1 |V | > 0.",
                "So, σd r is a dominating strategy.",
                "Now, suppose there is a dominating pure strategy σd r .",
                "This dominating strategy must play t or f for at least one type.",
                "Thus, against any ac by the column player, there must at least be some type θv for which ur(θv, σd r (θv), ac) > 0.",
                "That is, there must be at least one variable v such that setting v to σd r (θv) satifies c. But then, setting each v to σd r (θv) must satisfy all the clauses.",
                "So a satisfying assignment exists.",
                "However, it turns out that we can modify the linear programs from Proposition 1 to obtain a polynomial time algorithm for checking whether a strategy is dominated by a mixed strategy in Bayesian games.",
                "Theorem 6.",
                "In a Bayesian game, it can be decided in polynomial time whether a given (possibly mixed) strategy σr is dominated by some other mixed strategy, using linear programming (both for strict and weak dominance).",
                "Proof.",
                "We can modify the linear programs presented in Proposition 1 as follows.",
                "For strict dominance, again assuming without loss of generality that all the utilities in the game are positive, use the following linear program (in which pσr r (θr, ar) is the probability that σr, the strategy to be dominated, places on ar for type θr): minimize θr∈Θr ar∈Ar pr(ar) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) ≤ 1.",
                "Assuming that π(θr) > 0 for all θr ∈ Θr, this program will return an objective value smaller than |Θr| if and only if σr is strictly dominated, by reasoning similar to that done in Proposition 1.",
                "For weak dominance, use the following linear program: maximize ac∈Ac ( θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar)− θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar)) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) = 1.",
                "This program will return an objective value greater than 0 if and only if σr is weakly dominated, by reasoning similar to that done in Proposition 1.",
                "We now turn to iterated dominance in Bayesian games.",
                "Na¨ıvely, one might argue that iterated dominance in Bayesian 95 games always requires an exponential number of steps when a significant fraction of the games pure strategies can be eliminated, because there are exponentially many pure strategies.",
                "However, this is not a very strong argument because oftentimes we can eliminate exponentially many pure strategies in one step.",
                "For example, if for some type θr ∈ Θr we have, for all ac ∈ Ac, that u(θr, a1 r, ac) > u(θr, a2 r, ac), then any pure strategy for the row player which plays action a2 r for type θr is dominated (by the strategy that plays action a1 r for type θr instead)-and there are exponentially many (|Ar||Θr|−1 ) such strategies.",
                "It is therefore conceivable that we need only polynomially many eliminations of collections of a players strategies.",
                "However, the following theorem shows that this is not the case, by giving an example where an exponential number of iterations (that is, alternations between the players in eliminating strategies) is required. (We emphasize that this is not a result about computational complexity.)",
                "Theorem 7.",
                "Even in symmetric 3-player Bayesian games, iterated dominance by pure strategies can require an exponential number of iterations (both for strict and weak dominance), even with only three actions per player.",
                "Proof.",
                "Let each player i ∈ {1, 2, 3} have n + 1 types θ1 i , θ2 i , . . . , θn+1 i .",
                "Let each player i have 3 actions ai, bi, ci, and let the utility function of each player be defined as follows. (In the below, i + 1 and i + 2 are shorthand for i + 1(mod 3) and i + 2(mod 3) when used as player indices.",
                "Also, −∞ can be replaced by a sufficiently negative number.",
                "Finally, δ and should be chosen to be very small (even compared to 2−(n+1) ), and should be more than twice as large as δ.) • ui(θ1 i ; ai, ci+1, ci+2) = −1; • ui(θ1 i ; ai, si+1, si+2) = 0 for si+1 = ci+1 or si+2 = ci+2; • ui(θ1 i ; bi, si+1, si+2) = − for si+1 = ai+1 and si+2 = ai+2; • ui(θ1 i ; bi, si+1, si+2) = −∞ for si+1 = ai+1 or si+2 = ai+2; • ui(θ1 i ; ci, si+1, si+2) = −∞ for all si+1, si+2; • ui(θj i ; ai, si+1, si+2) = −∞ for all si+1, si+2 when j > 1; • ui(θj i ; bi, si+1, si+2) = − for all si+1, si+2 when j > 1; • ui(θj i ; ci, si+1, ci+2) = δ − − 1/2 for all si+1 when j > 1; • ui(θj i ; ci, si+1, si+2) = δ− for all si+1 and si+2 = ci+2 when j > 1.",
                "Let the distribution over each players types be given by p(θj i ) = 2−j (with the exception that p(θ2 i ) = 2−2 +2−(n+1) ).",
                "We will be interested in eliminating strategies of the following form: play bi for type θ1 i , and play one of bi or ci otherwise.",
                "Because the utility function is the same for any type θj i with j > 1, these strategies are effectively defined by the total probability that they place on ci,8 which is t2 i (2−2 + 2−(n+1) ) + n+1 j=3 tj i 2−j where tj i = 1 if player i 8 Note that the strategies are still pure strategies; the probability placed on an action by a strategy here is simply the sum of the probabilities of the types for which the strategy chooses that action. plays ci for type θj i , and 0 otherwise.",
                "This probability is different for any two different strategies of the given form, and we have exponentially many different strategies of the given form.",
                "For any probability q which can be expressed as t2(2−2 + 2−(n+1) ) + n+1 j=3 tj2−j (with all tj ∈ {0, 1}), let σi(q) denote the (unique) strategy of the given form for player i which places a total probability of q on ci.",
                "Any strategy that plays ci for type θ1 i or ai for some type θj i with j > 1 can immediately be eliminated.",
                "We will show that, after that, we must eliminate the strategies σi(q) with high q first, slowly working down to those with lower q.",
                "Claim 1: If σi+1(q ) and σi+2(q ) have not yet been eliminated, and q < q , then σi(q) cannot yet be eliminated.",
                "Proof: First, we show that no strategy σi(q ) can eliminate σi(q).",
                "Against σi+1(q ), σi+2(q ), the utility of playing σi(p) is − + p · δ − p · q /2.",
                "Thus, when q = 0, it is best to set p as high as possible (and we note that σi+1(0) and σi+2(0) have not been eliminated), but when q > 0, it is best to set p as low as possible because δ < q /2.",
                "Thus, whether q > q or q < q , σi(q) will always do strictly better than σi(q ) against some remaining opponent strategies.",
                "Hence, no strategy σi(q ) can eliminate σi(q).",
                "The only other pure strategies that could dominate σi(q) are strategies that play ai for type θ1 i , and bi or ci for all other types.",
                "Let us take such a strategy and suppose that it plays c with probability p. Against σi+1(q ), σi+2(q ) (which have not yet been eliminated), the utility of playing this strategy is −(q )2 /2 − /2 + p · δ − p · q /2.",
                "On the other hand, playing σi(q) gives − + q · δ − q · q /2.",
                "Because q > q, we have −(q )2 /2 < −q · q /2, and because δ and are small, it follows that σi(q) receives a higher utility.",
                "Therefore, no strategy dominates σi(q), proving the claim.",
                "Claim 2: If for all q > q, σi+1(q ) and σi+2(q ) have been eliminated, then σi(q) can be eliminated.",
                "Proof: Consider the strategy for player i that plays ai for type θ1 i , and bi for all other types (call this strategy σi); we claim σi dominates σi(q).",
                "First, if either of the other players k plays ak for θ1 k, then σi performs better than σi(q) (which receives −∞ in some cases).",
                "Because the strategies for player k that play ck for type θ1 k, or ak for some type θj k with j > 1, have already been eliminated, all that remains to check is that σi performs better than σi(q) whenever both of the other two players play strategies of the following form: play bk for type θ1 k, and play one of bk or ck otherwise.",
                "We note that among these strategies, there are none left that place probability greater than q on ck.",
                "Letting qk denote the probability with which player k plays ck, the expected utility of playing σi is −qi+1 · qi+2/2 − /2.",
                "On the other hand, the utility of playing σi(q) is − + q · δ − q · qi+2/2.",
                "Because qi+1 ≤ q, the difference between these two expressions is at least /2 − δ, which is positive.",
                "It follows that σi dominates σi(q).",
                "From Claim 2, it follows that all strategies of the form σi(q) will eventually be eliminated.",
                "However, Claim 1 shows that we cannot go ahead and eliminate multiple such strategies for one player, unless at least one other player simultaneously keeps up in the eliminated strategies: every time a σi(q) is eliminated such that σi+1(q) and σi+2(q) have not yet been eliminated, we need to eliminate one of the latter two strategies before any σi(q ) with q > q can be eliminated-that is, we need to alternate between players.",
                "Because there are exponentially many strategies of the form σi(q), it follows that iterated elimination will require exponentially many iterations to complete. 96 It follows that an efficient algorithm for iterated dominance (strict or weak) by pure strategies in Bayesian games, if it exists, must somehow be able to perform (at least part of) many iterations in a single step of the algorithm (because if each step only performed a single iteration, we would need exponentially many steps).",
                "Interestingly, Knuth et al. [11] argue that iterated dominance appears to be an inherently sequential problem (in light of their result that iterated very weak dominance is P-complete, that is, apparently not efficiently parallelizable), suggesting that aggregating many iterations may be difficult. 7.",
                "CONCLUSIONS While the Nash equilibrium solution concept is studied more and more intensely in our community, the perhaps more elementary concept of (iterated) dominance has received much less attention.",
                "In this paper we studied various computational aspects of this concept.",
                "We first studied both strict and weak dominance (not iterated), and showed that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve.",
                "We then moved on to iterated dominance.",
                "We showed that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance.",
                "This allowed us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
                "Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].)",
                "Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time.",
                "We then studied what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies.",
                "First, we showed that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak dominance).",
                "Then, we showed that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3).",
                "Finally, we studied dominance and iterated dominance in Bayesian games, as an example of a concise representation language for normal form games that is interesting in its own right.",
                "We showed that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak dominance).",
                "Finally, we showed that iterated dominance using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak dominance).",
                "There are various avenues for future research.",
                "First, there is the open question of whether it is possible to complete iterated dominance in Bayesian games in polynomial time (even though we showed that an exponential number of alternations between the players in eliminating strategies is sometimes required).",
                "Second, we can study computational aspects of (iterated) dominance in concise representations of normal form games other than Bayesian games-for example, in graphical games [9] or local-effect/action graph games [12, 2]. (How to efficiently perform iterated very weak dominance has already been studied for partially observable stochastic games [8].)",
                "Finally, we can ask whether some of the algorithms we described (such as the one for iterated strict dominance with mixed strategies) can be made faster. 8.",
                "REFERENCES [1] Krzysztof R. Apt.",
                "Uniform proofs of order independence for various strategy elimination procedures.",
                "Contributions to Theoretical Economics, 4(1), 2004. [2] Nivan A. R. Bhat and Kevin Leyton-Brown.",
                "Computing Nash equilibria of action-graph games.",
                "In UAI, 2004. [3] Ben Blum, Christian R. Shelton, and Daphne Koller.",
                "A continuation method for Nash equilibria in structured games.",
                "In IJCAI, 2003. [4] Vincent Conitzer and Tuomas Sandholm.",
                "Complexity results about Nash equilibria.",
                "In IJCAI, pages 765-771, 2003. [5] Drew Fudenberg and Jean Tirole.",
                "Game Theory.",
                "MIT Press, 1991. [6] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
                "On the order of eliminating dominated strategies.",
                "Operations Research Letters, 9:85-89, 1990. [7] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
                "The complexity of eliminating dominated strategies.",
                "Mathematics of Operation Research, 18:553-565, 1993. [8] Eric A. Hansen, Daniel S. Bernstein, and Shlomo Zilberstein.",
                "Dynamic programming for partially observable stochastic games.",
                "In AAAI, pages 709-715, 2004. [9] Michael Kearns, Michael Littman, and Satinder Singh.",
                "Graphical models for game theory.",
                "In UAI, 2001. [10] Leonid Khachiyan.",
                "A polynomial algorithm in linear programming.",
                "Soviet Math.",
                "Doklady, 20:191-194, 1979. [11] Donald E. Knuth, Christos H. Papadimitriou, and John N Tsitsiklis.",
                "A note on strategy elimination in bimatrix games.",
                "Operations Research Letters, 7(3):103-107, 1988. [12] Kevin Leyton-Brown and Moshe Tennenholtz.",
                "Local-effect games.",
                "In IJCAI, 2003. [13] Richard Lipton, Evangelos Markakis, and Aranyak Mehta.",
                "Playing large games using simple strategies.",
                "In ACM-EC, pages 36-41, 2003. [14] Michael Littman and Peter Stone.",
                "A polynomial-time Nash equilibrium algorithm for repeated games.",
                "In ACM-EC, pages 48-54, 2003. [15] Leslie M. Marx and Jeroen M. Swinkels.",
                "Order independence for iterated weak dominance.",
                "Games and Economic Behavior, 18:219-245, 1997. [16] Leslie M. Marx and Jeroen M. Swinkels.",
                "Corrigendum, order independence for iterated weak dominance.",
                "Games and Economic Behavior, 31:324-329, 2000. [17] Andreu Mas-Colell, Michael Whinston, and Jerry R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [18] Roger Myerson.",
                "Game Theory: Analysis of Conflict.",
                "Harvard University Press, Cambridge, 1991. [19] Martin J Osborne and Ariel Rubinstein.",
                "A Course in Game Theory.",
                "MIT Press, 1994. [20] Christos Papadimitriou.",
                "Algorithms, games and the Internet.",
                "In STOC, pages 749-753, 2001. [21] Ryan Porter, Eugene Nudelman, and Yoav Shoham.",
                "Simple search methods for finding a Nash equilibrium.",
                "In AAAI, pages 664-669, 2004. 97"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Introducción En sistemas multiagentes con \"agentes egoístas\", la acción óptima para un agente puede depender de las acciones tomadas por otros agentes."
            ],
            "translated_text": "",
            "candidates": [
                "agente egoísta",
                "agentes egoístas"
            ],
            "error": []
        },
        "optimal action": {
            "translated_key": "acción óptima",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Complexity of (Iterated) Dominance∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT We study various computational aspects of solving games using dominance and iterated dominance.",
                "We first study both strict and weak dominance (not iterated), and show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve.",
                "We then move on to iterated dominance.",
                "We show that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance.",
                "This allows us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
                "Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].)",
                "Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time.",
                "We then study what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies.",
                "First, we show that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak dominance).",
                "Then, we show that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3).",
                "Finally, we study Bayesian games.",
                "We show that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak ∗ This material is based upon work supported by the National Science Foundation under ITR grants IIS-0121678 and IIS-0427858, and a Sloan Fellowship. dominance).",
                "Finally, we show that iterated dominance using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak dominance).",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In multiagent systems with self-interested agents, the <br>optimal action</br> for one agent may depend on the actions taken by other agents.",
                "In such settings, the agents require tools from game theory to rationally decide on an action.",
                "Game theory offers various formal models of strategic settings-the best-known of which is a game in normal (or matrix) form, specifying a utility (payoff) for each agent for each combination of strategies that the agents choose-as well as solution concepts, which, given a game, specify which outcomes are reasonable (under various assumptions of rationality and common knowledge).",
                "Probably the best-known (and certainly the most-studied) solution concept is that of Nash equilibrium.",
                "A Nash equilibrium specifies a strategy for each player, in such a way that no player has an incentive to (unilaterally) deviate from the prescribed strategy.",
                "Recently, numerous papers have studied computing Nash equilibria in various settings [9, 4, 12, 3, 13, 14], and the complexity of constructing a Nash equilibrium in normal form games has been labeled one of the two most important open problems on the boundary of P today [20].",
                "The problem of computing solutions according to the perhaps more elementary solution concepts of dominance and iterated dominance has received much less attention. (After an early short paper on an easy case [11], the main computational study of these concepts has actually taken place in a paper in the game theory community [7].1 ) A strategy strictly dominates another strategy if it performs strictly 1 This is not to say that computer scientists have ignored 88 better against all vectors of opponent strategies, and weakly dominates it if it performs at least as well against all vectors of opponent strategies, and strictly better against at least one.",
                "The idea is that dominated strategies can be eliminated from consideration.",
                "In iterated dominance, the elimination proceeds in rounds, and becomes easier as more strategies are eliminated: in any given round, the dominating strategy no longer needs to perform better than or as well as the dominated strategy against opponent strategies that were eliminated in earlier rounds.",
                "Computing solutions according to (iterated) dominance is important for at least the following reasons: 1) it can be computationally easier than computing (for instance) a Nash equilibrium (and therefore it can be useful as a preprocessing step in computing a Nash equilibrium), and 2) (iterated) dominance requires a weaker rationality assumption on the players than (for instance) Nash equilibrium, and therefore solutions derived according to it are more likely to occur.",
                "In this paper, we study some fundamental computational questions concerning dominance and iterated dominance, including how hard it is to check whether a given strategy can be eliminated by each of the variants of these notions.",
                "The rest of the paper is organized as follows.",
                "In Section 2, we briefly review definitions and basic properties of normal form games, strict and weak dominance, and iterated strict and weak dominance.",
                "In the remaining sections, we study computational aspects of dominance and iterated dominance.",
                "In Section 3, we study one-shot (not iterated) dominance.",
                "In Section 4, we study iterated dominance.",
                "In Section 5, we study dominance and iterated dominance when the dominating strategy can only place probability on a few pure strategies.",
                "Finally, in Section 6, we study dominance and iterated dominance in Bayesian games. 2.",
                "DEFINITIONS AND BASIC PROPERTIES In this section, we briefly review normal form games, as well as dominance and iterated dominance (both strict and weak).",
                "An n-player normal form game is defined as follows.",
                "Definition 1.",
                "A normal form game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of pure strategies Σi and a utility function ui : Σ1 × Σ2 × . . . × Σn → R (where ui(σ1, σ2, . . . , σn) denotes player is utility when each player j plays action σj).",
                "The two main notions of dominance are defined as follows.",
                "Definition 2.",
                "Player is strategy σi is said to be strictly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
                "Player is strategy σi is said to be weakly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) ≥ ui(σi, σ−i), and for at least one vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
                "In this definition, it is sometimes allowed for the dominating strategy σi to be a mixed strategy, that is, a probability distribution over pure strategies.",
                "In this case, the utilities in dominance altogether.",
                "For example, simple dominance checks are sometimes used as a subroutine in searching for Nash equilibria [21]. the definition are the expected utilities.2 There are other notions of dominance, such as very weak dominance (in which no strict inequality is required, so two strategies can dominate each other), but we will not study them here.",
                "When we are looking at the dominance relations for player i, the other players (−i) can be thought of as a single player.3 Therefore, in the rest of the paper, when we study one-shot (not iterated) dominance, we will focus without loss of generality on two-player games.4 In two-player games, we will generally refer to the players as r (row) and c (column) rather than 1 and 2.",
                "In iterated dominance, dominated strategies are removed from the game, and no longer have any effect on future dominance relations.",
                "Iterated dominance can eliminate more strategies than dominance, as follows. σr may originally not dominate σr because the latter performs better against σc; but then, once σc is removed because it is dominated by σc, σr dominates σr, and the latter can be removed.",
                "For example, in the following game, R can be removed first, after which D is dominated.",
                "L R U 1, 1 0, 0 D 0, 1 1, 0 Either strict or weak dominance can be used in the definition of iterated dominance.",
                "We note that the process of iterated dominance is never helped by removing a dominated mixed strategy, for the following reason.",
                "If σi gives player i a higher utility than σi against mixed strategy σj for player j = i (and strategies σ−{i,j} for the other players), then for at least one pure strategy σj that σj places positive probability on, σi must perform better than σi against σj (and strategies σ−{i,j} for the other players).",
                "Thus, removing the mixed strategy σj does not introduce any new dominances.",
                "More detailed discussions and examples can be found in standard texts on microeconomics or game theory [17, 5].",
                "We are now ready to move on to the core of this paper. 3.",
                "DOMINANCE (NOT ITERATED) In this section, we study the notion of one-shot (not iterated) dominance.",
                "As a first observation, checking whether a given strategy is strictly (weakly) dominated by some pure strategy is straightforward, by checking, for every pure strategy for that player, whether the latter strategy performs strictly better against all the opponents strategies (at least as well against all the opponents strategies, and strictly 2 The dominated strategy σi is, of course, also allowed to be mixed, but this has no technical implications for the paper: when we study one-shot dominance, we ask whether a given strategy is dominated, and it does not matter whether the given strategy is pure or mixed; when we study iterated dominance, there is no use in eliminating mixed strategies, as we will see shortly. 3 This player may have a very large strategy space (one pure strategy for every vector of pure strategies for the players that are being replaced).",
                "Nevertheless, this will not result in an increase in our representation size, because the original representation already had to specify utilities for each of these vectors. 4 We note that a restriction to two-player games would not be without loss of generality for iterated dominance.",
                "This is because for iterated dominance, we need to look at the dominated strategies of each individual player, so we cannot merge any players. 89 better against at least one).5 Next, we show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time by solving a single linear program. (Similar linear programs have been given before [18]; we present the result here for completeness, and because we will build on the linear programs given below in Theorem 6.)",
                "Proposition 1.",
                "Given the row players utilities, a subset Dr of the row players pure strategies Σr, and a distinguished strategy σ∗ r for the row player, we can check in time polynomial in the size of the game (by solving a single linear program of polynomial size) whether there exists some mixed strategy σr, that places positive probability only on strategies in Dr and dominates σ∗ r , both for strict and for weak dominance.",
                "Proof.",
                "Let pdr be the probability that σr places on dr ∈ Dr. We will solve a single linear program in each of our algorithms; linear programs can be solved in polynomial time [10].",
                "For strict dominance, the question is whether the pdr can be set so that for every pure strategy for the column player σc ∈ Σc, dr∈Dr pdr ur(dr, σc) > ur(σ∗ r , σc).",
                "Because the inequality must be strict, we cannot solve this directly by linear programming.",
                "We proceed as follows.",
                "Because the game is finite, we may assume without loss of generality that all utilities are positive (if not, simply add a constant to all utilities.)",
                "Solve the following linear program: minimize dr∈Dr pdr such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc).",
                "If σ∗ r is strictly dominated by some mixed strategy, this linear program has a solution with objective value < 1. (The dominating strategy is a feasible solution with objective value exactly 1.",
                "Because no constraint is binding for this solution, we can reduce one of the probabilities slightly without affecting feasibility, thereby obtaining a solution with objective value < 1.)",
                "Moreover, if this linear program has a solution with objective value < 1, there is a mixed strategy strictly dominating σ∗ r , which can be obtained by taking the LP solution and adding the remaining probability to any strategy (because all the utilities are positive, this will add to the left side of any inequality, so all inequalities will become strict).",
                "For weak dominance, we can solve the following linear program: maximize σc∈Σc (( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc)) such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc); dr∈Dr pdr = 1.",
                "If σ∗ r is weakly dominated by some mixed strategy, then that mixed strategy is a feasible solution to this program with objective value > 0, because for at least one strategy σc ∈ Σc we have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0.",
                "On the other hand, if this program has a solution with objective value > 0, then for at least one strategy σc ∈ Σc we 5 Recall that the assumption of a single opponent (that is, the assumption of two players) is without loss of generality for one-shot dominance. must have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0, and thus the linear programs solution is a weakly dominating mixed strategy. 4.",
                "ITERATED DOMINANCE We now move on to iterated dominance.",
                "It is well-known that iterated strict dominance is path-independent [6, 19]that is, if we remove dominated strategies until no more dominated strategies remain, in the end the remaining strategies for each player will be the same, regardless of the order in which strategies are removed.",
                "Because of this, to see whether a given strategy can be eliminated by iterated strict dominance, all that needs to be done is to repeatedly remove strategies that are strictly dominated, until no more dominated strategies remain.",
                "Because we can check in polynomial time whether any given strategy is dominated (whether or not dominance by mixed strategies is allowed, as described in Section 3), this whole procedure takes only polynomial time.",
                "In the case of iterated dominance by pure strategies with two players, Knuth et al. [11] slightly improve on (speed up) the straightforward implementation of this procedure by keeping track of, for each ordered pair of strategies for a player, the number of opponent strategies that prevent the first strategy from dominating the second.",
                "Hereby the runtime for an m × n game is reduced from O((m + n)4 ) to O((m + n)3 ). (Actually, they only study very weak dominance (for which no strict inequalities are required), but the approach is easily extended.)",
                "In contrast, iterated weak dominance is known to be pathdependent.6 For example, in the following game, using iterated weak dominance we can eliminate M first, and then D, or R first, and then U. L M R U 1, 1 0, 0 1, 0 D 1, 1 1, 0 0, 0 Therefore, while the procedure of removing weakly dominated strategies until no more weakly dominated strategies remain can certainly be executed in polynomial time, which strategies survive in the end depends on the order in which we remove the dominated strategies.",
                "We will investigate two questions for iterated weak dominance: whether a given strategy is eliminated in some path, and whether there is a path to a unique solution (one pure strategy left per player).",
                "We will show that both of these problems are computationally hard.",
                "Definition 3.",
                "Given a game in normal form and a distinguished strategy σ∗ , IWD-STRATEGY-ELIMINATION asks whether there is some path of iterated weak dominance that eliminates σ∗ .",
                "Given a game in normal form, IWDUNIQUE-SOLUTION asks whether there is some path of iterated weak dominance that leads to a unique solution (one strategy left per player).",
                "The following lemma shows a special case of normal form games in which allowing for weak dominance by mixed strategies (in addition to weak dominance by pure strategies) does 6 There is, however, a restriction of weak dominance called nice weak dominance which is path-independent [15, 16].",
                "For an overview of path-independence results, see Apt [1]. 90 not help.",
                "We will prove the hardness results in this setting, so that they will hold whether or not dominance by mixed strategies is allowed.",
                "Lemma 1.",
                "Suppose that all the utilities in a game are in {0, 1}.",
                "Then every pure strategy that is weakly dominated by a mixed strategy is also weakly dominated by a pure strategy.",
                "Proof.",
                "Suppose pure strategy σ is weakly dominated by mixed strategy σ∗ .",
                "If σ gets a utility of 1 against some opponent strategy (or vector of opponent strategies if there are more than 2 players), then all the pure strategies that σ∗ places positive probability on must also get a utility of 1 against that opponent strategy (or else the expected utility would be smaller than 1).",
                "Moreover, at least one of the pure strategies that σ∗ places positive probability on must get a utility of 1 against an opponent strategy that σ gets 0 against (or else the inequality would never be strict).",
                "It follows that this pure strategy weakly dominates σ.",
                "We are now ready to prove the main results of this section.",
                "Theorem 1.",
                "IWD-STRATEGY-ELIMINATION is NPcomplete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed.",
                "Proof.",
                "The problem is in NP because given a sequence of strategies to be eliminated, we can easily check whether this is a valid sequence of eliminations (even when dominance by mixed strategies is allowed, using Proposition 1).",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following IWD-STRATEGY-ELIMINATION instance. (In this instance, we will specify that certain strategies are uneliminable.",
                "A strategy σr can be made uneliminable, even when 0 and 1 are the only allowed utilities, by adding another strategy σr and another opponent strategy σc, so that: 1. σr and σr are the only strategies that give the row player a utility of 1 against σc. 2. σr and σr always give the row player the same utility. 3. σc is the only strategy that gives the column player a utility of 1 against σr, but otherwise σc always gives the column player utility 0.",
                "This makes it impossible to eliminate any of these three strategies.",
                "We will not explicitly specify the additional strategies to make the proof more legible.)",
                "In this proof, we will denote row player strategies by s, and column player strategies by t, to improve legibility.",
                "Let the row players pure strategy set be given as follows.",
                "For every variable v ∈ V , the row player has corresponding strategies s1 +v, s2 +v, s1 −v, s2 −v.",
                "Additionally, the row player has the following 2 strategies: s1 0 and s2 0, where s2 0 = σ∗ r (that is, it is the strategy we seek to eliminate).",
                "Finally, for every clause c ∈ C, the row player has corresponding strategies s1 c (uneliminable) and s2 c. Let the column players pure strategy set be given as follows.",
                "For every variable v ∈ V , the column player has a corresponding strategy tv.",
                "For every clause c ∈ C, the column player has a corresponding strategy tc, and additionally, for every literal l ∈ L that occurs in c, a strategy tc,l.",
                "For every variable v ∈ V , the column player has corresponding strategies t+v, t−v (both uneliminable).",
                "Finally, the column player has three additional strategies: t1 0 (uneliminable), t2 0, and t1.",
                "The utility function for the row player is given as follows: • ur(s1 +v, tv) = 0 for all v ∈ V ; • ur(s2 +v, tv) = 1 for all v ∈ V ; • ur(s1 −v, tv) = 1 for all v ∈ V ; • ur(s2 −v, tv) = 0 for all v ∈ V ; • ur(s1 +v, t1) = 1 for all v ∈ V ; • ur(s2 +v, t1) = 0 for all v ∈ V ; • ur(s1 −v, t1) = 0 for all v ∈ V ; • ur(s2 −v, t1) = 1 for all v ∈ V ; • ur(sb +v, t+v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sb −v, t−v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sl, t) = 0 otherwise for all l ∈ L and t ∈ S2; • ur(s1 0, tc) = 0 for all c ∈ C; • ur(s2 0, tc) = 1 for all c ∈ C; • ur(sb 0, t1 0) = 1 for all b ∈ {1, 2}; • ur(s1 0, t2 0) = 1; • ur(s2 0, t2 0) = 0; • ur(sb 0, t) = 0 otherwise for all b ∈ {1, 2} and t ∈ S2; • ur(sb c, t) = 0 otherwise for all c ∈ C and b ∈ {1, 2}; and the row players utility is 0 in every other case.",
                "The utility function for the column player is given as follows: • uc(s, tv) = 0 for all v ∈ V and s ∈ S1; • uc(s, t1) = 0 for all s ∈ S1; • uc(s2 l , tc) = 1 for all c ∈ C and l ∈ L where l ∈ c (literal l occurs in clause c); • uc(s2 l2 , tc,l1 ) = 1 for all c ∈ C and l1, l2 ∈ L, l1 = l2 where l2 ∈ c; • uc(s1 c, tc) = 1 for all c ∈ C; • uc(s2 c, tc) = 0 for all c ∈ C; • uc(sb c, tc,l) = 1 for all c ∈ C, l ∈ L, and b ∈ {1, 2}; • uc(s2, tc) = uc(s2, tc,l) = 0 otherwise for all c ∈ C and l ∈ L; and the column players utility is 0 in every other case.",
                "We now show that the two instances are equivalent.",
                "First, suppose there is a solution to the satisfiability instance: that is, a truth-value assignment to the variables in V such that all clauses are satisfied.",
                "Then, consider the following sequence of eliminations in our game: 1.",
                "For every variable v that is set to true in the assignment, eliminate tv (which gives the column player utility 0 everywhere). 2.",
                "Then, for every variable v that is set to true in the assignment, eliminate s2 +v using s1 +v (which is possible because tv has been eliminated, and because t1 has not been eliminated (yet)). 3.",
                "Now eliminate t1 (which gives the column player utility 0 everywhere). 4.",
                "Next, for every variable v that is set to false in the assignment, eliminate s2 −v using s1 −v (which is possible because t1 has been eliminated, and because tv has not been eliminated (yet)). 5.",
                "For every clause c which has the variable corresponding to one of its positive literals l = +v set to true in the assignment, eliminate tc using tc,l (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 6.",
                "For every clause c which has the variable corresponding to one of its negative literals l = −v set to false in the assignment, eliminate tc using tc,l 91 (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 7.",
                "Because the assignment satisfied the formula, all the tc have now been eliminated.",
                "Thus, we can eliminate s2 0 = σ∗ r using s1 0.",
                "It follows that there is a solution to the IWD-STRATEGY-ELIMINATION instance.",
                "Now suppose there is a solution to the IWD-STRATEGYELIMINATION instance.",
                "By Lemma 1, we can assume that all the dominances are by pure strategies.",
                "We first observe that only s1 0 can eliminate s2 0 = σ∗ r , because it is the only other strategy that gets the row player a utility of 1 against t1 0, and t1 0 is uneliminable.",
                "However, because s2 0 performs better than s1 0 against the tc strategies, it follows that all of the tc strategies must be eliminated.",
                "For each c ∈ C, the strategy tc can only be eliminated by one of the strategies tc,l (with the same c), because these are the only other strategies that get the column player a utility of 1 against s1 c, and s1 c is uneliminable.",
                "But, in order for some tc,l to eliminate tc, s2 l must be eliminated first.",
                "Only s1 l can eliminate s2 l , because it is the only other strategy that gets the row player a utility of 1 against tl, and tl is uneliminable.",
                "We next show that for every v ∈ V only one of s2 +v, s2 −v can be eliminated.",
                "This is because in order for s1 +v to eliminate s2 +v, tv needs to have been eliminated and t1, not (so tv must be eliminated before t1); but in order for s1 −v to eliminate s2 −v, t1 needs to have been eliminated and tv, not (so t1 must be eliminated before tv).",
                "So, set v to true if s2 +v is eliminated, and to false otherwise Because by the above, for every clause c, one of the s2 l with l ∈ c must be eliminated, it follows that this is a satisfying assignment to the satisfiability instance.",
                "Using Theorem 1, it is now (relatively) easy to show that IWD-UNIQUE-SOLUTION is also NP-complete under the same restrictions.",
                "Theorem 2.",
                "IWD-UNIQUE-SOLUTION is NP-complete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed.",
                "Proof.",
                "Again, the problem is in NP because we can nondeterministically choose the sequence of eliminations and verify whether it is correct.",
                "To show NP-hardness, we reduce an arbitrary IWD-STRATEGY-ELIMINATION instance to the following IWD-UNIQUE-SOLUTION instance.",
                "Let all the strategies for each player from the original instance remain part of the new instance, and let the utilities resulting from the players playing a pair of these strategies be the same.",
                "We add three additional strategies σ1 r , σ2 r , σ3 r for the row player, and three additional strategies σ1 c , σ2 c , σ3 c for the column player.",
                "Let the additional utilities be as follows: • ur(σr, σj c) = 1 for all σr /∈ {σ1 r , σ2 r , σ3 r } and j ∈ {2, 3}; • ur(σi r, σc) = 1 for all i ∈ {1, 2, 3} and σc /∈ {σ2 c , σ3 c }; • ur(σi r, σ2 c ) = 1 for all i ∈ {2, 3}; • ur(σ1 r , σ3 c ) = 1; • and the row players utility is 0 in all other cases involving a new strategy. • uc(σ3 r , σc) = 1 for all σc /∈ {σ1 c , σ2 c , σ3 c }; • uc(σ∗ r , σj c) = 1 for all j ∈ {2, 3} (σ∗ r is the strategy to be eliminated in the original instance); • uc(σi r, σ1 c ) = 1 for all i ∈ {1, 2}; • ur(σ1 r , σ2 c ) = 1; • ur(σ2 r , σ3 c ) = 1; • and the column players utility is 0 in all other cases involving a new strategy.",
                "We proceed to show that the two instances are equivalent.",
                "First suppose there exists a solution to the original IWDSTRATEGY-ELIMINATION instance.",
                "Then, perform the same sequence of eliminations to eliminate σ∗ r in the new IWD-UNIQUE-SOLUTION instance. (This is possible because at any stage, any weak dominance for the row player in the original instance is still a weak dominance in the new instance, because the two strategies utilities for the row player are the same when the column player plays one of the new strategies; and the same is true for the column player.)",
                "Once σ∗ r is eliminated, let σ1 c eliminate σ2 c . (It performs better against σ2 r .)",
                "Then, let σ1 r eliminate all the other remaining strategies for the row player. (It always performs better against either σ1 c or σ3 c .)",
                "Finally, σ1 c is the unique best response against σ1 r among the column players remaining strategies, so let it eliminate all the other remaining strategies for the column player.",
                "Thus, there exists a solution to the IWD-UNIQUE-SOLUTION instance.",
                "Now suppose there exists a solution to the IWD-UNIQUESOLUTION instance.",
                "By Lemma 1, we can assume that all the dominances are by pure strategies.",
                "We will show that none of the new strategies (σ1 r , σ2 r , σ3 r , σ1 c , σ2 c , σ3 c ) can either eliminate another strategy, or be eliminated before σ∗ r is eliminated.",
                "Thus, there must be a sequence of eliminations ending in the elimination of σ∗ r , which does not involve any of the new strategies, and is therefore a valid sequence of eliminations in the original game (because all original strategies perform the same against each new strategy).",
                "We now show that this is true by exhausting all possibilities for the first elimination before σ∗ r is eliminated that involves a new strategy.",
                "None of the σi r can be eliminated by a σr /∈ {σ1 r , σ2 r , σ3 r }, because the σi r perform better against σ1 c . σ1 r cannot eliminate any other strategy, because it always performs poorer against σ2 c . σ2 r and σ3 r are equivalent from the row players perspective (and thus cannot eliminate each other), and cannot eliminate any other strategy because they always perform poorer against σ3 c .",
                "None of the σj c can be eliminated by a σc /∈ {σ1 c , σ2 c , σ3 c }, because the σj c always perform better against either σ1 r or σ2 r . σ1 c cannot eliminate any other strategy, because it always performs poorer against either σ∗ r or σ3 r . σ2 c cannot eliminate any other strategy, because it always performs poorer against σ2 r or σ3 r . σ3 c cannot eliminate any other strategy, because it always performs poorer against σ1 r or σ3 r .",
                "Thus, there exists a solution to the IWDSTRATEGY-ELIMINATION instance.",
                "A slightly weaker version of the part of Theorem 2 concerning dominance by pure strategies only is the main result of Gilboa et al. [7]. (Besides not proving the result for dominance by mixed strategies, the original result was weaker because it required utilities {0, 1, 2, 3, 4, 5, 6, 7, 8} rather than just {0, 1} (and because of this, our Lemma 1 cannot be applied to it to get the result for mixed strategies).) 5. (ITERATED) DOMINANCE USING MIXED STRATEGIES WITH SMALL SUPPORTS When showing that a strategy is dominated by a mixed strategy, there are several reasons to prefer exhibiting a 92 dominating strategy that places positive probability on as few pure strategies as possible.",
                "First, this will reduce the number of bits required to specify the dominating strategy (and thus the proof of dominance can be communicated quicker): if the dominating mixed strategy places positive probability on only k strategies, then it can be specified using k real numbers for the probabilities, plus k log m (where m is the number of strategies for the player under consideration) bits to indicate which strategies are used.",
                "Second, the proof of dominance will be cleaner: for a dominating mixed strategy, it is typically (always in the case of strict dominance) possible to spread some of the probability onto any unused pure strategy and still have a dominating strategy, but this obscures which pure strategies are the ones that are key in making the mixed strategy dominating.",
                "Third, because (by the previous) the argument for eliminating the dominated strategy is simpler and easier to understand, it is more likely to be accepted.",
                "Fourth, the level of risk neutrality required for the argument to work is reduced, at least in the extreme case where dominance by a single pure strategy can be exhibited (no risk neutrality is required here).",
                "This motivates the following problem.",
                "Definition 4 (MINIMUM-DOMINATING-SET).",
                "We are given the row players utilities of a game in normal form, a distinguished strategy σ∗ for the row player, a specification of whether the dominance should be strict or weak, and a number k. We are asked whether there exists a mixed strategy σ for the row player that places positive probability on at most k pure strategies, and dominates σ∗ in the required sense.",
                "Unfortunately, this problem is NP-complete.",
                "Theorem 3.",
                "MINIMUM-DOMINATING-SET is NPcomplete, both for strict and for weak dominance.",
                "Proof.",
                "The problem is in NP because we can nondeterministically choose a set of at most k strategies to give positive probability, and decide whether we can dominate σ∗ with these k strategies as described in Proposition 1.",
                "To show NP-hardness, we reduce an arbitrary SET-COVER instance (given a set S, subsets S1, S2, . . . , Sr, and a number t, can all of S be covered by at most t of the subsets?) to the following MINIMUM-DOMINATING-SET instance.",
                "For every element s ∈ S, there is a pure strategy σs for the column player.",
                "For every subset Si, there is a pure strategy σSi for the row player.",
                "Finally, there is the distinguished pure strategy σ∗ for the row player.",
                "The row players utilities are as follows: ur(σSi , σs) = t + 1 if s ∈ Si; ur(σSi , σs) = 0 if s /∈ Si; ur(σ∗ , σs) = 1 for all s ∈ S. Finally, we let k = t. We now proceed to show that the two instances are equivalent.",
                "First suppose there exists a solution to the SET-COVER instance.",
                "Without loss of generality, we can assume that there are exactly k subsets in the cover.",
                "Then, for every Si that is in the cover, let the dominating strategy σ place exactly 1 k probability on the corresponding pure strategy σSi .",
                "Now, if we let n(s) be the number of subsets in the cover containing s (we observe that that n(s) ≥ 1), then for every strategy σs for the column player, the row players expected utility for playing σ when the column player is playing σs is u(σ, σs) = n(s) k (k + 1) ≥ k+1 k > 1 = u(σ∗ , σs).",
                "So σ strictly (and thus also weakly) dominates σ∗ , and there exists a solution to the MINIMUM-DOMINATING-SET instance.",
                "Now suppose there exists a solution to the MINIMUMDOMINATING-SET instance.",
                "Consider the (at most k) pure strategies of the form σSi on which the dominating mixed strategy σ places positive probability, and let T be the collection of the corresponding subsets Si.",
                "We claim that T is a cover.",
                "For suppose there is some s ∈ S that is not in any of the subsets in T .",
                "Then, if the column player plays σs, the row player (when playing σ) will always receive utility 0-as opposed to the utility of 1 the row player would receive for playing σ∗ , contradicting the fact that σ dominates σ∗ (whether this dominance is weak or strict).",
                "It follows that there exists a solution to the SET-COVER instance.",
                "On the other hand, if we require that the dominating strategy only places positive probability on a very small number of pure strategies, then it once again becomes easy to check whether a strategy is dominated.",
                "Specifically, to find out whether player is strategy σ∗ is dominated by a strategy that places positive probability on only k pure strategies, we can simply check, for every subset of k of player is pure strategies, whether there is a strategy that places positive probability only on these k strategies and dominates σ∗ , using Proposition 1.",
                "This requires only O(|Σi|k ) such checks.",
                "Thus, if k is a constant, this constitutes a polynomial-time algorithm.",
                "A natural question to ask next is whether iterated strict dominance remains computationally easy when dominating strategies are required to place positive probability on at most k pure strategies, where k is a small constant. (We have already shown in Section 4 that iterated weak dominance is hard even when k = 1, that is, only dominance by pure strategies is allowed.)",
                "Of course, if iterated strict dominance were path-independent under this restriction, computational easiness would follow as it did in Section 4.",
                "However, it turns out that this is not the case.",
                "Observation 1.",
                "If we restrict the dominating strategies to place positive probability on at most two pure strategies, iterated strict dominance becomes path-dependent.",
                "Proof.",
                "Consider the following game: 7, 1 0, 0 0, 0 0, 0 7, 1 0, 0 3, 0 3, 0 0, 0 0, 0 0, 0 3, 1 1, 0 1, 0 1, 0 Let (i, j) denote the outcome in which the row player plays the ith row and the column player plays the jth column.",
                "Because (1, 1), (2, 2), and (4, 3) are all Nash equilibria, none of the column players pure strategies will ever be eliminated, and neither will rows 1, 2, and 4.",
                "We now observe that randomizing uniformly over rows 1 and 2 dominates row 3, and randomizing uniformly over rows 3 and 4 dominates row 5.",
                "However, if we eliminate row 3 first, it becomes impossible to dominate row 5 without randomizing over at least 3 pure strategies.",
                "Indeed, iterated strict dominance turns out to be hard even when k = 3.",
                "Theorem 4.",
                "If we restrict the dominating strategies to place positive probability on at most three pure strategies, it becomes NP-complete to decide whether a given strategy can be eliminated using iterated strict dominance. 93 Proof.",
                "The problem is in NP because given a sequence of strategies to be eliminated, we can check in polynomial time whether this is a valid sequence of eliminations (for any strategy to be eliminated, we can check, for every subset of three other strategies, whether there is a strategy placing positive probability on only these three strategies that dominates the strategy to be eliminated, using Proposition 1).",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following two-player game.",
                "For every variable v ∈ V , the row player has strategies s+v, s−v, s1 v, s2 v, s3 v, s4 v, and the column player has strategies t1 v, t2 v, t3 v, t4 v. For every clause c ∈ C, the row player has a strategy sc, and the column player has a strategy tc, as well as, for every literal l occurring in c, an additional strategy tl c. The row player has two additional strategies s1 and s2. (s2 is the strategy that we are seeking to eliminate.)",
                "Finally, the column player has one additional strategy t1.",
                "The utility function for the row player is given as follows (where is some sufficiently small number): • ur(s+v, tj v) = 4 if j ∈ {1, 2}, for all v ∈ V ; • ur(s+v, tj v) = 1 if j ∈ {3, 4}, for all v ∈ V ; • ur(s−v, tj v) = 1 if j ∈ {1, 2}, for all v ∈ V ; • ur(s−v, tj v) = 4 if j ∈ {3, 4}, for all v ∈ V ; • ur(s+v, t) = ur(s−v, t) = 0 for all v ∈ V and t /∈ {t1 v, t2 v, t3 v, t4 v}; • ur(si v, ti v) = 13 for all v ∈ V and i ∈ {1, 2, 3, 4}; • ur(si v, t) = for all v ∈ V , i ∈ {1, 2, 3, 4}, and t = ti v; • ur(sc, tc) = 2 for all c ∈ C; • ur(sc, t) = 0 for all c ∈ C and t = tc; • ur(s1, t1) = 1 + ; • ur(s1, t) = for all t = t1; • ur(s2, t1) = 1; • ur(s2, tc) = 1 for all c ∈ C; • ur(s2, t) = 0 for all t /∈ {t1} ∪ {tc : c ∈ C}.",
                "The utility function for the column player is given as follows: • uc(si v, ti v) = 1 for all v ∈ V and i ∈ {1, 2, 3, 4}; • uc(s, ti v) = 0 for all v ∈ V , i ∈ {1, 2, 3, 4}, and s = si v; • uc(sc, tc) = 1 for all c ∈ C; • uc(sl, tc) = 1 for all c ∈ C and l ∈ L occurring in c; • uc(s, tc) = 0 for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c}; • uc(sc, tl c) = 1 + for all c ∈ C; • uc(sl , tl c) = 1 + for all c ∈ C and l = l occurring in c; • uc(s, tl c) = for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c, l = l }; • uc(s2, t1) = 1; • uc(s, t1) = 0 for all s = s2.",
                "We now show that the two instances are equivalent.",
                "First, suppose that there is a solution to the satisfiability instance.",
                "Then, consider the following sequence of eliminations in our game: 1.",
                "For every variable v that is set to true in the satisfying assignment, eliminate s+v with the mixed strategy σr that places probability 1/3 on s−v, probability 1/3 on s1 v, and probability 1/3 on s2 v. (The expected utility of playing σr against t1 v or t2 v is 14/3 > 4; against t3 v or t4 v, it is 4/3 > 1; and against anything else it is 2 /3 > 0.",
                "Hence the dominance is valid.) 2.",
                "Similarly, for every variable v that is set to false in the satisfying assignment, eliminate s−v with the mixed strategy σr that places probability 1/3 on s+v, probability 1/3 on s3 v, and probability 1/3 on s4 v. (The expected utility of playing σr against t1 v or t2 v is 4/3 > 1; against t3 v or t4 v, it is 14/3 > 4; and against anything else it is 2 /3 > 0.",
                "Hence the dominance is valid.) 3.",
                "For every c ∈ C, eliminate tc with any tl c for which l was set to true in the satisfying assignment. (This is a valid dominance because tl c performs better than tc against any strategy other than sl, and we eliminated sl in step 1 or in step 2.) 4.",
                "Finally, eliminate s2 with s1. (This is a valid dominance because s1 performs better than s2 against any strategy other than those in {tc : c ∈ C}, which we eliminated in step 3.)",
                "Hence, there is an elimination path that eliminates s2.",
                "Now, suppose that there is an elimination path that eliminates s2.",
                "The strategy that eventually dominates s2 must place most of its probability on s1, because s1 is the only other strategy that performs well against t1, which cannot be eliminated before s2.",
                "But, s1 performs significantly worse than s2 against any strategy tc with c ∈ C, so it follows that all these strategies must be eliminated first.",
                "Each strategy tc can only be eliminated by a strategy that places most of its weight on the corresponding strategies tl c with l ∈ c, because they are the only other strategies that perform well against sc, which cannot be eliminated before tc.",
                "But, each strategy tl c performs significantly worse than tc against sl, so it follows that for every clause c, for one of the literals l occurring in it, sl must be eliminated first.",
                "Now, strategies of the form tj v will never be eliminated because they are the unique best responses to the corresponding strategies sj v (which are, in turn, the best responses to the corresponding tj v).",
                "As a result, if strategy s+v (respectively, s−v) is eliminated, then its opposite strategy s−v (respectively, s+v) can no longer be eliminated, for the following reason.",
                "There is no other pure strategy remaining that gets a significant utility against more than one of the strategies t1 v, t2 v, t3 v, t4 v, but s−v (respectively, s+v) gets significant utility against all 4, and therefore cannot be dominated by a mixed strategy placing positive probability on at most 3 strategies.",
                "It follows that for each v ∈ V , at most one of the strategies s+v, s−v is eliminated, in such a way that for every clause c, for one of the literals l occurring in it, sl must be eliminated.",
                "But then setting all the literals l such that sl is eliminated to true constitutes a solution to the satisfiability instance.",
                "In the next section, we return to the setting where there is no restriction on the number of pure strategies on which a dominating mixed strategy can place positive probability. 6. (ITERATED) DOMINANCE IN BAYESIAN GAMES So far, we have focused on normal form games that are flatly represented (that is, every matrix entry is given ex94 plicitly).",
                "However, for many games, the flat representation is too large to write down explicitly, and instead, some representation that exploits the structure of the game needs to be used.",
                "Bayesian games, besides being of interest in their own right, can be thought of as a useful structured representation of normal form games, and we will study them in this section.",
                "In a Bayesian game, each player first receives privately held preference information (the players type) from a distribution, which determines the utility that that player receives for every outcome of (that is, vector of actions played in) the game.",
                "After receiving this type, the player plays an action based on it.7 Definition 5.",
                "A Bayesian game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of actions Ai, a (finite) type space Θi with a probability distribution πi over it, and a utility function ui : Θi × A1 × A2 × . . . × An → R (where ui(θi, a1, a2, . . . , an) denotes player is utility when is type is θi and each player j plays action aj).",
                "A pure strategy in a Bayesian game is a mapping from types to actions, σi : Θi → Ai, where σi(θi) denotes the action that player i plays for type θi.",
                "Any vector of pure strategies in a Bayesian game defines an (expected) utility for each player, and therefore we can translate a Bayesian game into a normal form game.",
                "In this normal form game, the notions of dominance and iterated dominance are defined as before.",
                "However, the normal form representation of the game is exponentially larger than the Bayesian representation, because each player i has |Ai||Θi| distinct pure strategies.",
                "Thus, any algorithm for Bayesian games that relies on expanding the game to its normal form will require exponential time.",
                "Specifically, our easiness results for normal form games do not directly transfer to this setting.",
                "In fact, it turns out that checking whether a strategy is dominated by a pure strategy is hard in Bayesian games.",
                "Theorem 5.",
                "In a Bayesian game, it is NP-complete to decide whether a given pure strategy σr : Θr → Ar is dominated by some other pure strategy (both for strict and weak dominance), even when the row players distribution over types is uniform.",
                "Proof.",
                "The problem is in NP because it is easy to verify whether a candidate dominating strategy is indeed a dominating strategy.",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a set of clauses C using variables from V ) to the following Bayesian game.",
                "Let the row players action set be Ar = {t, f, 0} and let the column players action set be Ac = {ac : c ∈ C}.",
                "Let the row players type set be Θr = {θv : v ∈ V }, with a distribution πr that is uniform.",
                "Let the row players utility function be as follows: • ur(θv, 0, ac) = 0 for all v ∈ V and c ∈ C; • ur(θv, b, ac) = |V | for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b satisfies c; • ur(θv, b, ac) = −1 for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b does not satisfy c. 7 In general, a player can also receive a signal about the other players preferences, but we will not concern ourselves with that here.",
                "Let the pure strategy to be dominated be the one that plays 0 for every type.",
                "We show that the strategy is dominated by a pure strategy if and only if there is a solution to the satisfiability instance.",
                "First, suppose there is a solution to the satisfiability instance.",
                "Then, let σd r be given by: σd r (θv) = t if v is set to true in the solution to the satisfiability instance, and σd r (θv) = f otherwise.",
                "Then, against any action ac by the column player, there is at least one type θv such that either +v ∈ c and σd r (θv) = t, or −v ∈ c and σd r (θv) = f. Thus, the row players expected utility against action ac is at least |V | |V | − |V |−1 |V | = 1 |V | > 0.",
                "So, σd r is a dominating strategy.",
                "Now, suppose there is a dominating pure strategy σd r .",
                "This dominating strategy must play t or f for at least one type.",
                "Thus, against any ac by the column player, there must at least be some type θv for which ur(θv, σd r (θv), ac) > 0.",
                "That is, there must be at least one variable v such that setting v to σd r (θv) satifies c. But then, setting each v to σd r (θv) must satisfy all the clauses.",
                "So a satisfying assignment exists.",
                "However, it turns out that we can modify the linear programs from Proposition 1 to obtain a polynomial time algorithm for checking whether a strategy is dominated by a mixed strategy in Bayesian games.",
                "Theorem 6.",
                "In a Bayesian game, it can be decided in polynomial time whether a given (possibly mixed) strategy σr is dominated by some other mixed strategy, using linear programming (both for strict and weak dominance).",
                "Proof.",
                "We can modify the linear programs presented in Proposition 1 as follows.",
                "For strict dominance, again assuming without loss of generality that all the utilities in the game are positive, use the following linear program (in which pσr r (θr, ar) is the probability that σr, the strategy to be dominated, places on ar for type θr): minimize θr∈Θr ar∈Ar pr(ar) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) ≤ 1.",
                "Assuming that π(θr) > 0 for all θr ∈ Θr, this program will return an objective value smaller than |Θr| if and only if σr is strictly dominated, by reasoning similar to that done in Proposition 1.",
                "For weak dominance, use the following linear program: maximize ac∈Ac ( θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar)− θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar)) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) = 1.",
                "This program will return an objective value greater than 0 if and only if σr is weakly dominated, by reasoning similar to that done in Proposition 1.",
                "We now turn to iterated dominance in Bayesian games.",
                "Na¨ıvely, one might argue that iterated dominance in Bayesian 95 games always requires an exponential number of steps when a significant fraction of the games pure strategies can be eliminated, because there are exponentially many pure strategies.",
                "However, this is not a very strong argument because oftentimes we can eliminate exponentially many pure strategies in one step.",
                "For example, if for some type θr ∈ Θr we have, for all ac ∈ Ac, that u(θr, a1 r, ac) > u(θr, a2 r, ac), then any pure strategy for the row player which plays action a2 r for type θr is dominated (by the strategy that plays action a1 r for type θr instead)-and there are exponentially many (|Ar||Θr|−1 ) such strategies.",
                "It is therefore conceivable that we need only polynomially many eliminations of collections of a players strategies.",
                "However, the following theorem shows that this is not the case, by giving an example where an exponential number of iterations (that is, alternations between the players in eliminating strategies) is required. (We emphasize that this is not a result about computational complexity.)",
                "Theorem 7.",
                "Even in symmetric 3-player Bayesian games, iterated dominance by pure strategies can require an exponential number of iterations (both for strict and weak dominance), even with only three actions per player.",
                "Proof.",
                "Let each player i ∈ {1, 2, 3} have n + 1 types θ1 i , θ2 i , . . . , θn+1 i .",
                "Let each player i have 3 actions ai, bi, ci, and let the utility function of each player be defined as follows. (In the below, i + 1 and i + 2 are shorthand for i + 1(mod 3) and i + 2(mod 3) when used as player indices.",
                "Also, −∞ can be replaced by a sufficiently negative number.",
                "Finally, δ and should be chosen to be very small (even compared to 2−(n+1) ), and should be more than twice as large as δ.) • ui(θ1 i ; ai, ci+1, ci+2) = −1; • ui(θ1 i ; ai, si+1, si+2) = 0 for si+1 = ci+1 or si+2 = ci+2; • ui(θ1 i ; bi, si+1, si+2) = − for si+1 = ai+1 and si+2 = ai+2; • ui(θ1 i ; bi, si+1, si+2) = −∞ for si+1 = ai+1 or si+2 = ai+2; • ui(θ1 i ; ci, si+1, si+2) = −∞ for all si+1, si+2; • ui(θj i ; ai, si+1, si+2) = −∞ for all si+1, si+2 when j > 1; • ui(θj i ; bi, si+1, si+2) = − for all si+1, si+2 when j > 1; • ui(θj i ; ci, si+1, ci+2) = δ − − 1/2 for all si+1 when j > 1; • ui(θj i ; ci, si+1, si+2) = δ− for all si+1 and si+2 = ci+2 when j > 1.",
                "Let the distribution over each players types be given by p(θj i ) = 2−j (with the exception that p(θ2 i ) = 2−2 +2−(n+1) ).",
                "We will be interested in eliminating strategies of the following form: play bi for type θ1 i , and play one of bi or ci otherwise.",
                "Because the utility function is the same for any type θj i with j > 1, these strategies are effectively defined by the total probability that they place on ci,8 which is t2 i (2−2 + 2−(n+1) ) + n+1 j=3 tj i 2−j where tj i = 1 if player i 8 Note that the strategies are still pure strategies; the probability placed on an action by a strategy here is simply the sum of the probabilities of the types for which the strategy chooses that action. plays ci for type θj i , and 0 otherwise.",
                "This probability is different for any two different strategies of the given form, and we have exponentially many different strategies of the given form.",
                "For any probability q which can be expressed as t2(2−2 + 2−(n+1) ) + n+1 j=3 tj2−j (with all tj ∈ {0, 1}), let σi(q) denote the (unique) strategy of the given form for player i which places a total probability of q on ci.",
                "Any strategy that plays ci for type θ1 i or ai for some type θj i with j > 1 can immediately be eliminated.",
                "We will show that, after that, we must eliminate the strategies σi(q) with high q first, slowly working down to those with lower q.",
                "Claim 1: If σi+1(q ) and σi+2(q ) have not yet been eliminated, and q < q , then σi(q) cannot yet be eliminated.",
                "Proof: First, we show that no strategy σi(q ) can eliminate σi(q).",
                "Against σi+1(q ), σi+2(q ), the utility of playing σi(p) is − + p · δ − p · q /2.",
                "Thus, when q = 0, it is best to set p as high as possible (and we note that σi+1(0) and σi+2(0) have not been eliminated), but when q > 0, it is best to set p as low as possible because δ < q /2.",
                "Thus, whether q > q or q < q , σi(q) will always do strictly better than σi(q ) against some remaining opponent strategies.",
                "Hence, no strategy σi(q ) can eliminate σi(q).",
                "The only other pure strategies that could dominate σi(q) are strategies that play ai for type θ1 i , and bi or ci for all other types.",
                "Let us take such a strategy and suppose that it plays c with probability p. Against σi+1(q ), σi+2(q ) (which have not yet been eliminated), the utility of playing this strategy is −(q )2 /2 − /2 + p · δ − p · q /2.",
                "On the other hand, playing σi(q) gives − + q · δ − q · q /2.",
                "Because q > q, we have −(q )2 /2 < −q · q /2, and because δ and are small, it follows that σi(q) receives a higher utility.",
                "Therefore, no strategy dominates σi(q), proving the claim.",
                "Claim 2: If for all q > q, σi+1(q ) and σi+2(q ) have been eliminated, then σi(q) can be eliminated.",
                "Proof: Consider the strategy for player i that plays ai for type θ1 i , and bi for all other types (call this strategy σi); we claim σi dominates σi(q).",
                "First, if either of the other players k plays ak for θ1 k, then σi performs better than σi(q) (which receives −∞ in some cases).",
                "Because the strategies for player k that play ck for type θ1 k, or ak for some type θj k with j > 1, have already been eliminated, all that remains to check is that σi performs better than σi(q) whenever both of the other two players play strategies of the following form: play bk for type θ1 k, and play one of bk or ck otherwise.",
                "We note that among these strategies, there are none left that place probability greater than q on ck.",
                "Letting qk denote the probability with which player k plays ck, the expected utility of playing σi is −qi+1 · qi+2/2 − /2.",
                "On the other hand, the utility of playing σi(q) is − + q · δ − q · qi+2/2.",
                "Because qi+1 ≤ q, the difference between these two expressions is at least /2 − δ, which is positive.",
                "It follows that σi dominates σi(q).",
                "From Claim 2, it follows that all strategies of the form σi(q) will eventually be eliminated.",
                "However, Claim 1 shows that we cannot go ahead and eliminate multiple such strategies for one player, unless at least one other player simultaneously keeps up in the eliminated strategies: every time a σi(q) is eliminated such that σi+1(q) and σi+2(q) have not yet been eliminated, we need to eliminate one of the latter two strategies before any σi(q ) with q > q can be eliminated-that is, we need to alternate between players.",
                "Because there are exponentially many strategies of the form σi(q), it follows that iterated elimination will require exponentially many iterations to complete. 96 It follows that an efficient algorithm for iterated dominance (strict or weak) by pure strategies in Bayesian games, if it exists, must somehow be able to perform (at least part of) many iterations in a single step of the algorithm (because if each step only performed a single iteration, we would need exponentially many steps).",
                "Interestingly, Knuth et al. [11] argue that iterated dominance appears to be an inherently sequential problem (in light of their result that iterated very weak dominance is P-complete, that is, apparently not efficiently parallelizable), suggesting that aggregating many iterations may be difficult. 7.",
                "CONCLUSIONS While the Nash equilibrium solution concept is studied more and more intensely in our community, the perhaps more elementary concept of (iterated) dominance has received much less attention.",
                "In this paper we studied various computational aspects of this concept.",
                "We first studied both strict and weak dominance (not iterated), and showed that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve.",
                "We then moved on to iterated dominance.",
                "We showed that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance.",
                "This allowed us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
                "Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].)",
                "Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time.",
                "We then studied what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies.",
                "First, we showed that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak dominance).",
                "Then, we showed that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3).",
                "Finally, we studied dominance and iterated dominance in Bayesian games, as an example of a concise representation language for normal form games that is interesting in its own right.",
                "We showed that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak dominance).",
                "Finally, we showed that iterated dominance using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak dominance).",
                "There are various avenues for future research.",
                "First, there is the open question of whether it is possible to complete iterated dominance in Bayesian games in polynomial time (even though we showed that an exponential number of alternations between the players in eliminating strategies is sometimes required).",
                "Second, we can study computational aspects of (iterated) dominance in concise representations of normal form games other than Bayesian games-for example, in graphical games [9] or local-effect/action graph games [12, 2]. (How to efficiently perform iterated very weak dominance has already been studied for partially observable stochastic games [8].)",
                "Finally, we can ask whether some of the algorithms we described (such as the one for iterated strict dominance with mixed strategies) can be made faster. 8.",
                "REFERENCES [1] Krzysztof R. Apt.",
                "Uniform proofs of order independence for various strategy elimination procedures.",
                "Contributions to Theoretical Economics, 4(1), 2004. [2] Nivan A. R. Bhat and Kevin Leyton-Brown.",
                "Computing Nash equilibria of action-graph games.",
                "In UAI, 2004. [3] Ben Blum, Christian R. Shelton, and Daphne Koller.",
                "A continuation method for Nash equilibria in structured games.",
                "In IJCAI, 2003. [4] Vincent Conitzer and Tuomas Sandholm.",
                "Complexity results about Nash equilibria.",
                "In IJCAI, pages 765-771, 2003. [5] Drew Fudenberg and Jean Tirole.",
                "Game Theory.",
                "MIT Press, 1991. [6] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
                "On the order of eliminating dominated strategies.",
                "Operations Research Letters, 9:85-89, 1990. [7] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
                "The complexity of eliminating dominated strategies.",
                "Mathematics of Operation Research, 18:553-565, 1993. [8] Eric A. Hansen, Daniel S. Bernstein, and Shlomo Zilberstein.",
                "Dynamic programming for partially observable stochastic games.",
                "In AAAI, pages 709-715, 2004. [9] Michael Kearns, Michael Littman, and Satinder Singh.",
                "Graphical models for game theory.",
                "In UAI, 2001. [10] Leonid Khachiyan.",
                "A polynomial algorithm in linear programming.",
                "Soviet Math.",
                "Doklady, 20:191-194, 1979. [11] Donald E. Knuth, Christos H. Papadimitriou, and John N Tsitsiklis.",
                "A note on strategy elimination in bimatrix games.",
                "Operations Research Letters, 7(3):103-107, 1988. [12] Kevin Leyton-Brown and Moshe Tennenholtz.",
                "Local-effect games.",
                "In IJCAI, 2003. [13] Richard Lipton, Evangelos Markakis, and Aranyak Mehta.",
                "Playing large games using simple strategies.",
                "In ACM-EC, pages 36-41, 2003. [14] Michael Littman and Peter Stone.",
                "A polynomial-time Nash equilibrium algorithm for repeated games.",
                "In ACM-EC, pages 48-54, 2003. [15] Leslie M. Marx and Jeroen M. Swinkels.",
                "Order independence for iterated weak dominance.",
                "Games and Economic Behavior, 18:219-245, 1997. [16] Leslie M. Marx and Jeroen M. Swinkels.",
                "Corrigendum, order independence for iterated weak dominance.",
                "Games and Economic Behavior, 31:324-329, 2000. [17] Andreu Mas-Colell, Michael Whinston, and Jerry R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [18] Roger Myerson.",
                "Game Theory: Analysis of Conflict.",
                "Harvard University Press, Cambridge, 1991. [19] Martin J Osborne and Ariel Rubinstein.",
                "A Course in Game Theory.",
                "MIT Press, 1994. [20] Christos Papadimitriou.",
                "Algorithms, games and the Internet.",
                "In STOC, pages 749-753, 2001. [21] Ryan Porter, Eugene Nudelman, and Yoav Shoham.",
                "Simple search methods for finding a Nash equilibrium.",
                "In AAAI, pages 664-669, 2004. 97"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Introducción En sistemas multiagente con agentes egoístas, la \"acción óptima\" para un agente puede depender de las acciones tomadas por otros agentes."
            ],
            "translated_text": "",
            "candidates": [
                "acción óptima",
                "acción óptima"
            ],
            "error": []
        },
        "game theory": {
            "translated_key": "teoría del juego",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Complexity of (Iterated) Dominance∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT We study various computational aspects of solving games using dominance and iterated dominance.",
                "We first study both strict and weak dominance (not iterated), and show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve.",
                "We then move on to iterated dominance.",
                "We show that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance.",
                "This allows us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
                "Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].)",
                "Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time.",
                "We then study what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies.",
                "First, we show that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak dominance).",
                "Then, we show that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3).",
                "Finally, we study Bayesian games.",
                "We show that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak ∗ This material is based upon work supported by the National Science Foundation under ITR grants IIS-0121678 and IIS-0427858, and a Sloan Fellowship. dominance).",
                "Finally, we show that iterated dominance using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak dominance).",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In multiagent systems with self-interested agents, the optimal action for one agent may depend on the actions taken by other agents.",
                "In such settings, the agents require tools from <br>game theory</br> to rationally decide on an action.",
                "<br>game theory</br> offers various formal models of strategic settings-the best-known of which is a game in normal (or matrix) form, specifying a utility (payoff) for each agent for each combination of strategies that the agents choose-as well as solution concepts, which, given a game, specify which outcomes are reasonable (under various assumptions of rationality and common knowledge).",
                "Probably the best-known (and certainly the most-studied) solution concept is that of Nash equilibrium.",
                "A Nash equilibrium specifies a strategy for each player, in such a way that no player has an incentive to (unilaterally) deviate from the prescribed strategy.",
                "Recently, numerous papers have studied computing Nash equilibria in various settings [9, 4, 12, 3, 13, 14], and the complexity of constructing a Nash equilibrium in normal form games has been labeled one of the two most important open problems on the boundary of P today [20].",
                "The problem of computing solutions according to the perhaps more elementary solution concepts of dominance and iterated dominance has received much less attention. (After an early short paper on an easy case [11], the main computational study of these concepts has actually taken place in a paper in the <br>game theory</br> community [7].1 ) A strategy strictly dominates another strategy if it performs strictly 1 This is not to say that computer scientists have ignored 88 better against all vectors of opponent strategies, and weakly dominates it if it performs at least as well against all vectors of opponent strategies, and strictly better against at least one.",
                "The idea is that dominated strategies can be eliminated from consideration.",
                "In iterated dominance, the elimination proceeds in rounds, and becomes easier as more strategies are eliminated: in any given round, the dominating strategy no longer needs to perform better than or as well as the dominated strategy against opponent strategies that were eliminated in earlier rounds.",
                "Computing solutions according to (iterated) dominance is important for at least the following reasons: 1) it can be computationally easier than computing (for instance) a Nash equilibrium (and therefore it can be useful as a preprocessing step in computing a Nash equilibrium), and 2) (iterated) dominance requires a weaker rationality assumption on the players than (for instance) Nash equilibrium, and therefore solutions derived according to it are more likely to occur.",
                "In this paper, we study some fundamental computational questions concerning dominance and iterated dominance, including how hard it is to check whether a given strategy can be eliminated by each of the variants of these notions.",
                "The rest of the paper is organized as follows.",
                "In Section 2, we briefly review definitions and basic properties of normal form games, strict and weak dominance, and iterated strict and weak dominance.",
                "In the remaining sections, we study computational aspects of dominance and iterated dominance.",
                "In Section 3, we study one-shot (not iterated) dominance.",
                "In Section 4, we study iterated dominance.",
                "In Section 5, we study dominance and iterated dominance when the dominating strategy can only place probability on a few pure strategies.",
                "Finally, in Section 6, we study dominance and iterated dominance in Bayesian games. 2.",
                "DEFINITIONS AND BASIC PROPERTIES In this section, we briefly review normal form games, as well as dominance and iterated dominance (both strict and weak).",
                "An n-player normal form game is defined as follows.",
                "Definition 1.",
                "A normal form game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of pure strategies Σi and a utility function ui : Σ1 × Σ2 × . . . × Σn → R (where ui(σ1, σ2, . . . , σn) denotes player is utility when each player j plays action σj).",
                "The two main notions of dominance are defined as follows.",
                "Definition 2.",
                "Player is strategy σi is said to be strictly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
                "Player is strategy σi is said to be weakly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) ≥ ui(σi, σ−i), and for at least one vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
                "In this definition, it is sometimes allowed for the dominating strategy σi to be a mixed strategy, that is, a probability distribution over pure strategies.",
                "In this case, the utilities in dominance altogether.",
                "For example, simple dominance checks are sometimes used as a subroutine in searching for Nash equilibria [21]. the definition are the expected utilities.2 There are other notions of dominance, such as very weak dominance (in which no strict inequality is required, so two strategies can dominate each other), but we will not study them here.",
                "When we are looking at the dominance relations for player i, the other players (−i) can be thought of as a single player.3 Therefore, in the rest of the paper, when we study one-shot (not iterated) dominance, we will focus without loss of generality on two-player games.4 In two-player games, we will generally refer to the players as r (row) and c (column) rather than 1 and 2.",
                "In iterated dominance, dominated strategies are removed from the game, and no longer have any effect on future dominance relations.",
                "Iterated dominance can eliminate more strategies than dominance, as follows. σr may originally not dominate σr because the latter performs better against σc; but then, once σc is removed because it is dominated by σc, σr dominates σr, and the latter can be removed.",
                "For example, in the following game, R can be removed first, after which D is dominated.",
                "L R U 1, 1 0, 0 D 0, 1 1, 0 Either strict or weak dominance can be used in the definition of iterated dominance.",
                "We note that the process of iterated dominance is never helped by removing a dominated mixed strategy, for the following reason.",
                "If σi gives player i a higher utility than σi against mixed strategy σj for player j = i (and strategies σ−{i,j} for the other players), then for at least one pure strategy σj that σj places positive probability on, σi must perform better than σi against σj (and strategies σ−{i,j} for the other players).",
                "Thus, removing the mixed strategy σj does not introduce any new dominances.",
                "More detailed discussions and examples can be found in standard texts on microeconomics or <br>game theory</br> [17, 5].",
                "We are now ready to move on to the core of this paper. 3.",
                "DOMINANCE (NOT ITERATED) In this section, we study the notion of one-shot (not iterated) dominance.",
                "As a first observation, checking whether a given strategy is strictly (weakly) dominated by some pure strategy is straightforward, by checking, for every pure strategy for that player, whether the latter strategy performs strictly better against all the opponents strategies (at least as well against all the opponents strategies, and strictly 2 The dominated strategy σi is, of course, also allowed to be mixed, but this has no technical implications for the paper: when we study one-shot dominance, we ask whether a given strategy is dominated, and it does not matter whether the given strategy is pure or mixed; when we study iterated dominance, there is no use in eliminating mixed strategies, as we will see shortly. 3 This player may have a very large strategy space (one pure strategy for every vector of pure strategies for the players that are being replaced).",
                "Nevertheless, this will not result in an increase in our representation size, because the original representation already had to specify utilities for each of these vectors. 4 We note that a restriction to two-player games would not be without loss of generality for iterated dominance.",
                "This is because for iterated dominance, we need to look at the dominated strategies of each individual player, so we cannot merge any players. 89 better against at least one).5 Next, we show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time by solving a single linear program. (Similar linear programs have been given before [18]; we present the result here for completeness, and because we will build on the linear programs given below in Theorem 6.)",
                "Proposition 1.",
                "Given the row players utilities, a subset Dr of the row players pure strategies Σr, and a distinguished strategy σ∗ r for the row player, we can check in time polynomial in the size of the game (by solving a single linear program of polynomial size) whether there exists some mixed strategy σr, that places positive probability only on strategies in Dr and dominates σ∗ r , both for strict and for weak dominance.",
                "Proof.",
                "Let pdr be the probability that σr places on dr ∈ Dr. We will solve a single linear program in each of our algorithms; linear programs can be solved in polynomial time [10].",
                "For strict dominance, the question is whether the pdr can be set so that for every pure strategy for the column player σc ∈ Σc, dr∈Dr pdr ur(dr, σc) > ur(σ∗ r , σc).",
                "Because the inequality must be strict, we cannot solve this directly by linear programming.",
                "We proceed as follows.",
                "Because the game is finite, we may assume without loss of generality that all utilities are positive (if not, simply add a constant to all utilities.)",
                "Solve the following linear program: minimize dr∈Dr pdr such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc).",
                "If σ∗ r is strictly dominated by some mixed strategy, this linear program has a solution with objective value < 1. (The dominating strategy is a feasible solution with objective value exactly 1.",
                "Because no constraint is binding for this solution, we can reduce one of the probabilities slightly without affecting feasibility, thereby obtaining a solution with objective value < 1.)",
                "Moreover, if this linear program has a solution with objective value < 1, there is a mixed strategy strictly dominating σ∗ r , which can be obtained by taking the LP solution and adding the remaining probability to any strategy (because all the utilities are positive, this will add to the left side of any inequality, so all inequalities will become strict).",
                "For weak dominance, we can solve the following linear program: maximize σc∈Σc (( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc)) such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc); dr∈Dr pdr = 1.",
                "If σ∗ r is weakly dominated by some mixed strategy, then that mixed strategy is a feasible solution to this program with objective value > 0, because for at least one strategy σc ∈ Σc we have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0.",
                "On the other hand, if this program has a solution with objective value > 0, then for at least one strategy σc ∈ Σc we 5 Recall that the assumption of a single opponent (that is, the assumption of two players) is without loss of generality for one-shot dominance. must have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0, and thus the linear programs solution is a weakly dominating mixed strategy. 4.",
                "ITERATED DOMINANCE We now move on to iterated dominance.",
                "It is well-known that iterated strict dominance is path-independent [6, 19]that is, if we remove dominated strategies until no more dominated strategies remain, in the end the remaining strategies for each player will be the same, regardless of the order in which strategies are removed.",
                "Because of this, to see whether a given strategy can be eliminated by iterated strict dominance, all that needs to be done is to repeatedly remove strategies that are strictly dominated, until no more dominated strategies remain.",
                "Because we can check in polynomial time whether any given strategy is dominated (whether or not dominance by mixed strategies is allowed, as described in Section 3), this whole procedure takes only polynomial time.",
                "In the case of iterated dominance by pure strategies with two players, Knuth et al. [11] slightly improve on (speed up) the straightforward implementation of this procedure by keeping track of, for each ordered pair of strategies for a player, the number of opponent strategies that prevent the first strategy from dominating the second.",
                "Hereby the runtime for an m × n game is reduced from O((m + n)4 ) to O((m + n)3 ). (Actually, they only study very weak dominance (for which no strict inequalities are required), but the approach is easily extended.)",
                "In contrast, iterated weak dominance is known to be pathdependent.6 For example, in the following game, using iterated weak dominance we can eliminate M first, and then D, or R first, and then U. L M R U 1, 1 0, 0 1, 0 D 1, 1 1, 0 0, 0 Therefore, while the procedure of removing weakly dominated strategies until no more weakly dominated strategies remain can certainly be executed in polynomial time, which strategies survive in the end depends on the order in which we remove the dominated strategies.",
                "We will investigate two questions for iterated weak dominance: whether a given strategy is eliminated in some path, and whether there is a path to a unique solution (one pure strategy left per player).",
                "We will show that both of these problems are computationally hard.",
                "Definition 3.",
                "Given a game in normal form and a distinguished strategy σ∗ , IWD-STRATEGY-ELIMINATION asks whether there is some path of iterated weak dominance that eliminates σ∗ .",
                "Given a game in normal form, IWDUNIQUE-SOLUTION asks whether there is some path of iterated weak dominance that leads to a unique solution (one strategy left per player).",
                "The following lemma shows a special case of normal form games in which allowing for weak dominance by mixed strategies (in addition to weak dominance by pure strategies) does 6 There is, however, a restriction of weak dominance called nice weak dominance which is path-independent [15, 16].",
                "For an overview of path-independence results, see Apt [1]. 90 not help.",
                "We will prove the hardness results in this setting, so that they will hold whether or not dominance by mixed strategies is allowed.",
                "Lemma 1.",
                "Suppose that all the utilities in a game are in {0, 1}.",
                "Then every pure strategy that is weakly dominated by a mixed strategy is also weakly dominated by a pure strategy.",
                "Proof.",
                "Suppose pure strategy σ is weakly dominated by mixed strategy σ∗ .",
                "If σ gets a utility of 1 against some opponent strategy (or vector of opponent strategies if there are more than 2 players), then all the pure strategies that σ∗ places positive probability on must also get a utility of 1 against that opponent strategy (or else the expected utility would be smaller than 1).",
                "Moreover, at least one of the pure strategies that σ∗ places positive probability on must get a utility of 1 against an opponent strategy that σ gets 0 against (or else the inequality would never be strict).",
                "It follows that this pure strategy weakly dominates σ.",
                "We are now ready to prove the main results of this section.",
                "Theorem 1.",
                "IWD-STRATEGY-ELIMINATION is NPcomplete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed.",
                "Proof.",
                "The problem is in NP because given a sequence of strategies to be eliminated, we can easily check whether this is a valid sequence of eliminations (even when dominance by mixed strategies is allowed, using Proposition 1).",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following IWD-STRATEGY-ELIMINATION instance. (In this instance, we will specify that certain strategies are uneliminable.",
                "A strategy σr can be made uneliminable, even when 0 and 1 are the only allowed utilities, by adding another strategy σr and another opponent strategy σc, so that: 1. σr and σr are the only strategies that give the row player a utility of 1 against σc. 2. σr and σr always give the row player the same utility. 3. σc is the only strategy that gives the column player a utility of 1 against σr, but otherwise σc always gives the column player utility 0.",
                "This makes it impossible to eliminate any of these three strategies.",
                "We will not explicitly specify the additional strategies to make the proof more legible.)",
                "In this proof, we will denote row player strategies by s, and column player strategies by t, to improve legibility.",
                "Let the row players pure strategy set be given as follows.",
                "For every variable v ∈ V , the row player has corresponding strategies s1 +v, s2 +v, s1 −v, s2 −v.",
                "Additionally, the row player has the following 2 strategies: s1 0 and s2 0, where s2 0 = σ∗ r (that is, it is the strategy we seek to eliminate).",
                "Finally, for every clause c ∈ C, the row player has corresponding strategies s1 c (uneliminable) and s2 c. Let the column players pure strategy set be given as follows.",
                "For every variable v ∈ V , the column player has a corresponding strategy tv.",
                "For every clause c ∈ C, the column player has a corresponding strategy tc, and additionally, for every literal l ∈ L that occurs in c, a strategy tc,l.",
                "For every variable v ∈ V , the column player has corresponding strategies t+v, t−v (both uneliminable).",
                "Finally, the column player has three additional strategies: t1 0 (uneliminable), t2 0, and t1.",
                "The utility function for the row player is given as follows: • ur(s1 +v, tv) = 0 for all v ∈ V ; • ur(s2 +v, tv) = 1 for all v ∈ V ; • ur(s1 −v, tv) = 1 for all v ∈ V ; • ur(s2 −v, tv) = 0 for all v ∈ V ; • ur(s1 +v, t1) = 1 for all v ∈ V ; • ur(s2 +v, t1) = 0 for all v ∈ V ; • ur(s1 −v, t1) = 0 for all v ∈ V ; • ur(s2 −v, t1) = 1 for all v ∈ V ; • ur(sb +v, t+v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sb −v, t−v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sl, t) = 0 otherwise for all l ∈ L and t ∈ S2; • ur(s1 0, tc) = 0 for all c ∈ C; • ur(s2 0, tc) = 1 for all c ∈ C; • ur(sb 0, t1 0) = 1 for all b ∈ {1, 2}; • ur(s1 0, t2 0) = 1; • ur(s2 0, t2 0) = 0; • ur(sb 0, t) = 0 otherwise for all b ∈ {1, 2} and t ∈ S2; • ur(sb c, t) = 0 otherwise for all c ∈ C and b ∈ {1, 2}; and the row players utility is 0 in every other case.",
                "The utility function for the column player is given as follows: • uc(s, tv) = 0 for all v ∈ V and s ∈ S1; • uc(s, t1) = 0 for all s ∈ S1; • uc(s2 l , tc) = 1 for all c ∈ C and l ∈ L where l ∈ c (literal l occurs in clause c); • uc(s2 l2 , tc,l1 ) = 1 for all c ∈ C and l1, l2 ∈ L, l1 = l2 where l2 ∈ c; • uc(s1 c, tc) = 1 for all c ∈ C; • uc(s2 c, tc) = 0 for all c ∈ C; • uc(sb c, tc,l) = 1 for all c ∈ C, l ∈ L, and b ∈ {1, 2}; • uc(s2, tc) = uc(s2, tc,l) = 0 otherwise for all c ∈ C and l ∈ L; and the column players utility is 0 in every other case.",
                "We now show that the two instances are equivalent.",
                "First, suppose there is a solution to the satisfiability instance: that is, a truth-value assignment to the variables in V such that all clauses are satisfied.",
                "Then, consider the following sequence of eliminations in our game: 1.",
                "For every variable v that is set to true in the assignment, eliminate tv (which gives the column player utility 0 everywhere). 2.",
                "Then, for every variable v that is set to true in the assignment, eliminate s2 +v using s1 +v (which is possible because tv has been eliminated, and because t1 has not been eliminated (yet)). 3.",
                "Now eliminate t1 (which gives the column player utility 0 everywhere). 4.",
                "Next, for every variable v that is set to false in the assignment, eliminate s2 −v using s1 −v (which is possible because t1 has been eliminated, and because tv has not been eliminated (yet)). 5.",
                "For every clause c which has the variable corresponding to one of its positive literals l = +v set to true in the assignment, eliminate tc using tc,l (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 6.",
                "For every clause c which has the variable corresponding to one of its negative literals l = −v set to false in the assignment, eliminate tc using tc,l 91 (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 7.",
                "Because the assignment satisfied the formula, all the tc have now been eliminated.",
                "Thus, we can eliminate s2 0 = σ∗ r using s1 0.",
                "It follows that there is a solution to the IWD-STRATEGY-ELIMINATION instance.",
                "Now suppose there is a solution to the IWD-STRATEGYELIMINATION instance.",
                "By Lemma 1, we can assume that all the dominances are by pure strategies.",
                "We first observe that only s1 0 can eliminate s2 0 = σ∗ r , because it is the only other strategy that gets the row player a utility of 1 against t1 0, and t1 0 is uneliminable.",
                "However, because s2 0 performs better than s1 0 against the tc strategies, it follows that all of the tc strategies must be eliminated.",
                "For each c ∈ C, the strategy tc can only be eliminated by one of the strategies tc,l (with the same c), because these are the only other strategies that get the column player a utility of 1 against s1 c, and s1 c is uneliminable.",
                "But, in order for some tc,l to eliminate tc, s2 l must be eliminated first.",
                "Only s1 l can eliminate s2 l , because it is the only other strategy that gets the row player a utility of 1 against tl, and tl is uneliminable.",
                "We next show that for every v ∈ V only one of s2 +v, s2 −v can be eliminated.",
                "This is because in order for s1 +v to eliminate s2 +v, tv needs to have been eliminated and t1, not (so tv must be eliminated before t1); but in order for s1 −v to eliminate s2 −v, t1 needs to have been eliminated and tv, not (so t1 must be eliminated before tv).",
                "So, set v to true if s2 +v is eliminated, and to false otherwise Because by the above, for every clause c, one of the s2 l with l ∈ c must be eliminated, it follows that this is a satisfying assignment to the satisfiability instance.",
                "Using Theorem 1, it is now (relatively) easy to show that IWD-UNIQUE-SOLUTION is also NP-complete under the same restrictions.",
                "Theorem 2.",
                "IWD-UNIQUE-SOLUTION is NP-complete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed.",
                "Proof.",
                "Again, the problem is in NP because we can nondeterministically choose the sequence of eliminations and verify whether it is correct.",
                "To show NP-hardness, we reduce an arbitrary IWD-STRATEGY-ELIMINATION instance to the following IWD-UNIQUE-SOLUTION instance.",
                "Let all the strategies for each player from the original instance remain part of the new instance, and let the utilities resulting from the players playing a pair of these strategies be the same.",
                "We add three additional strategies σ1 r , σ2 r , σ3 r for the row player, and three additional strategies σ1 c , σ2 c , σ3 c for the column player.",
                "Let the additional utilities be as follows: • ur(σr, σj c) = 1 for all σr /∈ {σ1 r , σ2 r , σ3 r } and j ∈ {2, 3}; • ur(σi r, σc) = 1 for all i ∈ {1, 2, 3} and σc /∈ {σ2 c , σ3 c }; • ur(σi r, σ2 c ) = 1 for all i ∈ {2, 3}; • ur(σ1 r , σ3 c ) = 1; • and the row players utility is 0 in all other cases involving a new strategy. • uc(σ3 r , σc) = 1 for all σc /∈ {σ1 c , σ2 c , σ3 c }; • uc(σ∗ r , σj c) = 1 for all j ∈ {2, 3} (σ∗ r is the strategy to be eliminated in the original instance); • uc(σi r, σ1 c ) = 1 for all i ∈ {1, 2}; • ur(σ1 r , σ2 c ) = 1; • ur(σ2 r , σ3 c ) = 1; • and the column players utility is 0 in all other cases involving a new strategy.",
                "We proceed to show that the two instances are equivalent.",
                "First suppose there exists a solution to the original IWDSTRATEGY-ELIMINATION instance.",
                "Then, perform the same sequence of eliminations to eliminate σ∗ r in the new IWD-UNIQUE-SOLUTION instance. (This is possible because at any stage, any weak dominance for the row player in the original instance is still a weak dominance in the new instance, because the two strategies utilities for the row player are the same when the column player plays one of the new strategies; and the same is true for the column player.)",
                "Once σ∗ r is eliminated, let σ1 c eliminate σ2 c . (It performs better against σ2 r .)",
                "Then, let σ1 r eliminate all the other remaining strategies for the row player. (It always performs better against either σ1 c or σ3 c .)",
                "Finally, σ1 c is the unique best response against σ1 r among the column players remaining strategies, so let it eliminate all the other remaining strategies for the column player.",
                "Thus, there exists a solution to the IWD-UNIQUE-SOLUTION instance.",
                "Now suppose there exists a solution to the IWD-UNIQUESOLUTION instance.",
                "By Lemma 1, we can assume that all the dominances are by pure strategies.",
                "We will show that none of the new strategies (σ1 r , σ2 r , σ3 r , σ1 c , σ2 c , σ3 c ) can either eliminate another strategy, or be eliminated before σ∗ r is eliminated.",
                "Thus, there must be a sequence of eliminations ending in the elimination of σ∗ r , which does not involve any of the new strategies, and is therefore a valid sequence of eliminations in the original game (because all original strategies perform the same against each new strategy).",
                "We now show that this is true by exhausting all possibilities for the first elimination before σ∗ r is eliminated that involves a new strategy.",
                "None of the σi r can be eliminated by a σr /∈ {σ1 r , σ2 r , σ3 r }, because the σi r perform better against σ1 c . σ1 r cannot eliminate any other strategy, because it always performs poorer against σ2 c . σ2 r and σ3 r are equivalent from the row players perspective (and thus cannot eliminate each other), and cannot eliminate any other strategy because they always perform poorer against σ3 c .",
                "None of the σj c can be eliminated by a σc /∈ {σ1 c , σ2 c , σ3 c }, because the σj c always perform better against either σ1 r or σ2 r . σ1 c cannot eliminate any other strategy, because it always performs poorer against either σ∗ r or σ3 r . σ2 c cannot eliminate any other strategy, because it always performs poorer against σ2 r or σ3 r . σ3 c cannot eliminate any other strategy, because it always performs poorer against σ1 r or σ3 r .",
                "Thus, there exists a solution to the IWDSTRATEGY-ELIMINATION instance.",
                "A slightly weaker version of the part of Theorem 2 concerning dominance by pure strategies only is the main result of Gilboa et al. [7]. (Besides not proving the result for dominance by mixed strategies, the original result was weaker because it required utilities {0, 1, 2, 3, 4, 5, 6, 7, 8} rather than just {0, 1} (and because of this, our Lemma 1 cannot be applied to it to get the result for mixed strategies).) 5. (ITERATED) DOMINANCE USING MIXED STRATEGIES WITH SMALL SUPPORTS When showing that a strategy is dominated by a mixed strategy, there are several reasons to prefer exhibiting a 92 dominating strategy that places positive probability on as few pure strategies as possible.",
                "First, this will reduce the number of bits required to specify the dominating strategy (and thus the proof of dominance can be communicated quicker): if the dominating mixed strategy places positive probability on only k strategies, then it can be specified using k real numbers for the probabilities, plus k log m (where m is the number of strategies for the player under consideration) bits to indicate which strategies are used.",
                "Second, the proof of dominance will be cleaner: for a dominating mixed strategy, it is typically (always in the case of strict dominance) possible to spread some of the probability onto any unused pure strategy and still have a dominating strategy, but this obscures which pure strategies are the ones that are key in making the mixed strategy dominating.",
                "Third, because (by the previous) the argument for eliminating the dominated strategy is simpler and easier to understand, it is more likely to be accepted.",
                "Fourth, the level of risk neutrality required for the argument to work is reduced, at least in the extreme case where dominance by a single pure strategy can be exhibited (no risk neutrality is required here).",
                "This motivates the following problem.",
                "Definition 4 (MINIMUM-DOMINATING-SET).",
                "We are given the row players utilities of a game in normal form, a distinguished strategy σ∗ for the row player, a specification of whether the dominance should be strict or weak, and a number k. We are asked whether there exists a mixed strategy σ for the row player that places positive probability on at most k pure strategies, and dominates σ∗ in the required sense.",
                "Unfortunately, this problem is NP-complete.",
                "Theorem 3.",
                "MINIMUM-DOMINATING-SET is NPcomplete, both for strict and for weak dominance.",
                "Proof.",
                "The problem is in NP because we can nondeterministically choose a set of at most k strategies to give positive probability, and decide whether we can dominate σ∗ with these k strategies as described in Proposition 1.",
                "To show NP-hardness, we reduce an arbitrary SET-COVER instance (given a set S, subsets S1, S2, . . . , Sr, and a number t, can all of S be covered by at most t of the subsets?) to the following MINIMUM-DOMINATING-SET instance.",
                "For every element s ∈ S, there is a pure strategy σs for the column player.",
                "For every subset Si, there is a pure strategy σSi for the row player.",
                "Finally, there is the distinguished pure strategy σ∗ for the row player.",
                "The row players utilities are as follows: ur(σSi , σs) = t + 1 if s ∈ Si; ur(σSi , σs) = 0 if s /∈ Si; ur(σ∗ , σs) = 1 for all s ∈ S. Finally, we let k = t. We now proceed to show that the two instances are equivalent.",
                "First suppose there exists a solution to the SET-COVER instance.",
                "Without loss of generality, we can assume that there are exactly k subsets in the cover.",
                "Then, for every Si that is in the cover, let the dominating strategy σ place exactly 1 k probability on the corresponding pure strategy σSi .",
                "Now, if we let n(s) be the number of subsets in the cover containing s (we observe that that n(s) ≥ 1), then for every strategy σs for the column player, the row players expected utility for playing σ when the column player is playing σs is u(σ, σs) = n(s) k (k + 1) ≥ k+1 k > 1 = u(σ∗ , σs).",
                "So σ strictly (and thus also weakly) dominates σ∗ , and there exists a solution to the MINIMUM-DOMINATING-SET instance.",
                "Now suppose there exists a solution to the MINIMUMDOMINATING-SET instance.",
                "Consider the (at most k) pure strategies of the form σSi on which the dominating mixed strategy σ places positive probability, and let T be the collection of the corresponding subsets Si.",
                "We claim that T is a cover.",
                "For suppose there is some s ∈ S that is not in any of the subsets in T .",
                "Then, if the column player plays σs, the row player (when playing σ) will always receive utility 0-as opposed to the utility of 1 the row player would receive for playing σ∗ , contradicting the fact that σ dominates σ∗ (whether this dominance is weak or strict).",
                "It follows that there exists a solution to the SET-COVER instance.",
                "On the other hand, if we require that the dominating strategy only places positive probability on a very small number of pure strategies, then it once again becomes easy to check whether a strategy is dominated.",
                "Specifically, to find out whether player is strategy σ∗ is dominated by a strategy that places positive probability on only k pure strategies, we can simply check, for every subset of k of player is pure strategies, whether there is a strategy that places positive probability only on these k strategies and dominates σ∗ , using Proposition 1.",
                "This requires only O(|Σi|k ) such checks.",
                "Thus, if k is a constant, this constitutes a polynomial-time algorithm.",
                "A natural question to ask next is whether iterated strict dominance remains computationally easy when dominating strategies are required to place positive probability on at most k pure strategies, where k is a small constant. (We have already shown in Section 4 that iterated weak dominance is hard even when k = 1, that is, only dominance by pure strategies is allowed.)",
                "Of course, if iterated strict dominance were path-independent under this restriction, computational easiness would follow as it did in Section 4.",
                "However, it turns out that this is not the case.",
                "Observation 1.",
                "If we restrict the dominating strategies to place positive probability on at most two pure strategies, iterated strict dominance becomes path-dependent.",
                "Proof.",
                "Consider the following game: 7, 1 0, 0 0, 0 0, 0 7, 1 0, 0 3, 0 3, 0 0, 0 0, 0 0, 0 3, 1 1, 0 1, 0 1, 0 Let (i, j) denote the outcome in which the row player plays the ith row and the column player plays the jth column.",
                "Because (1, 1), (2, 2), and (4, 3) are all Nash equilibria, none of the column players pure strategies will ever be eliminated, and neither will rows 1, 2, and 4.",
                "We now observe that randomizing uniformly over rows 1 and 2 dominates row 3, and randomizing uniformly over rows 3 and 4 dominates row 5.",
                "However, if we eliminate row 3 first, it becomes impossible to dominate row 5 without randomizing over at least 3 pure strategies.",
                "Indeed, iterated strict dominance turns out to be hard even when k = 3.",
                "Theorem 4.",
                "If we restrict the dominating strategies to place positive probability on at most three pure strategies, it becomes NP-complete to decide whether a given strategy can be eliminated using iterated strict dominance. 93 Proof.",
                "The problem is in NP because given a sequence of strategies to be eliminated, we can check in polynomial time whether this is a valid sequence of eliminations (for any strategy to be eliminated, we can check, for every subset of three other strategies, whether there is a strategy placing positive probability on only these three strategies that dominates the strategy to be eliminated, using Proposition 1).",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following two-player game.",
                "For every variable v ∈ V , the row player has strategies s+v, s−v, s1 v, s2 v, s3 v, s4 v, and the column player has strategies t1 v, t2 v, t3 v, t4 v. For every clause c ∈ C, the row player has a strategy sc, and the column player has a strategy tc, as well as, for every literal l occurring in c, an additional strategy tl c. The row player has two additional strategies s1 and s2. (s2 is the strategy that we are seeking to eliminate.)",
                "Finally, the column player has one additional strategy t1.",
                "The utility function for the row player is given as follows (where is some sufficiently small number): • ur(s+v, tj v) = 4 if j ∈ {1, 2}, for all v ∈ V ; • ur(s+v, tj v) = 1 if j ∈ {3, 4}, for all v ∈ V ; • ur(s−v, tj v) = 1 if j ∈ {1, 2}, for all v ∈ V ; • ur(s−v, tj v) = 4 if j ∈ {3, 4}, for all v ∈ V ; • ur(s+v, t) = ur(s−v, t) = 0 for all v ∈ V and t /∈ {t1 v, t2 v, t3 v, t4 v}; • ur(si v, ti v) = 13 for all v ∈ V and i ∈ {1, 2, 3, 4}; • ur(si v, t) = for all v ∈ V , i ∈ {1, 2, 3, 4}, and t = ti v; • ur(sc, tc) = 2 for all c ∈ C; • ur(sc, t) = 0 for all c ∈ C and t = tc; • ur(s1, t1) = 1 + ; • ur(s1, t) = for all t = t1; • ur(s2, t1) = 1; • ur(s2, tc) = 1 for all c ∈ C; • ur(s2, t) = 0 for all t /∈ {t1} ∪ {tc : c ∈ C}.",
                "The utility function for the column player is given as follows: • uc(si v, ti v) = 1 for all v ∈ V and i ∈ {1, 2, 3, 4}; • uc(s, ti v) = 0 for all v ∈ V , i ∈ {1, 2, 3, 4}, and s = si v; • uc(sc, tc) = 1 for all c ∈ C; • uc(sl, tc) = 1 for all c ∈ C and l ∈ L occurring in c; • uc(s, tc) = 0 for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c}; • uc(sc, tl c) = 1 + for all c ∈ C; • uc(sl , tl c) = 1 + for all c ∈ C and l = l occurring in c; • uc(s, tl c) = for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c, l = l }; • uc(s2, t1) = 1; • uc(s, t1) = 0 for all s = s2.",
                "We now show that the two instances are equivalent.",
                "First, suppose that there is a solution to the satisfiability instance.",
                "Then, consider the following sequence of eliminations in our game: 1.",
                "For every variable v that is set to true in the satisfying assignment, eliminate s+v with the mixed strategy σr that places probability 1/3 on s−v, probability 1/3 on s1 v, and probability 1/3 on s2 v. (The expected utility of playing σr against t1 v or t2 v is 14/3 > 4; against t3 v or t4 v, it is 4/3 > 1; and against anything else it is 2 /3 > 0.",
                "Hence the dominance is valid.) 2.",
                "Similarly, for every variable v that is set to false in the satisfying assignment, eliminate s−v with the mixed strategy σr that places probability 1/3 on s+v, probability 1/3 on s3 v, and probability 1/3 on s4 v. (The expected utility of playing σr against t1 v or t2 v is 4/3 > 1; against t3 v or t4 v, it is 14/3 > 4; and against anything else it is 2 /3 > 0.",
                "Hence the dominance is valid.) 3.",
                "For every c ∈ C, eliminate tc with any tl c for which l was set to true in the satisfying assignment. (This is a valid dominance because tl c performs better than tc against any strategy other than sl, and we eliminated sl in step 1 or in step 2.) 4.",
                "Finally, eliminate s2 with s1. (This is a valid dominance because s1 performs better than s2 against any strategy other than those in {tc : c ∈ C}, which we eliminated in step 3.)",
                "Hence, there is an elimination path that eliminates s2.",
                "Now, suppose that there is an elimination path that eliminates s2.",
                "The strategy that eventually dominates s2 must place most of its probability on s1, because s1 is the only other strategy that performs well against t1, which cannot be eliminated before s2.",
                "But, s1 performs significantly worse than s2 against any strategy tc with c ∈ C, so it follows that all these strategies must be eliminated first.",
                "Each strategy tc can only be eliminated by a strategy that places most of its weight on the corresponding strategies tl c with l ∈ c, because they are the only other strategies that perform well against sc, which cannot be eliminated before tc.",
                "But, each strategy tl c performs significantly worse than tc against sl, so it follows that for every clause c, for one of the literals l occurring in it, sl must be eliminated first.",
                "Now, strategies of the form tj v will never be eliminated because they are the unique best responses to the corresponding strategies sj v (which are, in turn, the best responses to the corresponding tj v).",
                "As a result, if strategy s+v (respectively, s−v) is eliminated, then its opposite strategy s−v (respectively, s+v) can no longer be eliminated, for the following reason.",
                "There is no other pure strategy remaining that gets a significant utility against more than one of the strategies t1 v, t2 v, t3 v, t4 v, but s−v (respectively, s+v) gets significant utility against all 4, and therefore cannot be dominated by a mixed strategy placing positive probability on at most 3 strategies.",
                "It follows that for each v ∈ V , at most one of the strategies s+v, s−v is eliminated, in such a way that for every clause c, for one of the literals l occurring in it, sl must be eliminated.",
                "But then setting all the literals l such that sl is eliminated to true constitutes a solution to the satisfiability instance.",
                "In the next section, we return to the setting where there is no restriction on the number of pure strategies on which a dominating mixed strategy can place positive probability. 6. (ITERATED) DOMINANCE IN BAYESIAN GAMES So far, we have focused on normal form games that are flatly represented (that is, every matrix entry is given ex94 plicitly).",
                "However, for many games, the flat representation is too large to write down explicitly, and instead, some representation that exploits the structure of the game needs to be used.",
                "Bayesian games, besides being of interest in their own right, can be thought of as a useful structured representation of normal form games, and we will study them in this section.",
                "In a Bayesian game, each player first receives privately held preference information (the players type) from a distribution, which determines the utility that that player receives for every outcome of (that is, vector of actions played in) the game.",
                "After receiving this type, the player plays an action based on it.7 Definition 5.",
                "A Bayesian game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of actions Ai, a (finite) type space Θi with a probability distribution πi over it, and a utility function ui : Θi × A1 × A2 × . . . × An → R (where ui(θi, a1, a2, . . . , an) denotes player is utility when is type is θi and each player j plays action aj).",
                "A pure strategy in a Bayesian game is a mapping from types to actions, σi : Θi → Ai, where σi(θi) denotes the action that player i plays for type θi.",
                "Any vector of pure strategies in a Bayesian game defines an (expected) utility for each player, and therefore we can translate a Bayesian game into a normal form game.",
                "In this normal form game, the notions of dominance and iterated dominance are defined as before.",
                "However, the normal form representation of the game is exponentially larger than the Bayesian representation, because each player i has |Ai||Θi| distinct pure strategies.",
                "Thus, any algorithm for Bayesian games that relies on expanding the game to its normal form will require exponential time.",
                "Specifically, our easiness results for normal form games do not directly transfer to this setting.",
                "In fact, it turns out that checking whether a strategy is dominated by a pure strategy is hard in Bayesian games.",
                "Theorem 5.",
                "In a Bayesian game, it is NP-complete to decide whether a given pure strategy σr : Θr → Ar is dominated by some other pure strategy (both for strict and weak dominance), even when the row players distribution over types is uniform.",
                "Proof.",
                "The problem is in NP because it is easy to verify whether a candidate dominating strategy is indeed a dominating strategy.",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a set of clauses C using variables from V ) to the following Bayesian game.",
                "Let the row players action set be Ar = {t, f, 0} and let the column players action set be Ac = {ac : c ∈ C}.",
                "Let the row players type set be Θr = {θv : v ∈ V }, with a distribution πr that is uniform.",
                "Let the row players utility function be as follows: • ur(θv, 0, ac) = 0 for all v ∈ V and c ∈ C; • ur(θv, b, ac) = |V | for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b satisfies c; • ur(θv, b, ac) = −1 for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b does not satisfy c. 7 In general, a player can also receive a signal about the other players preferences, but we will not concern ourselves with that here.",
                "Let the pure strategy to be dominated be the one that plays 0 for every type.",
                "We show that the strategy is dominated by a pure strategy if and only if there is a solution to the satisfiability instance.",
                "First, suppose there is a solution to the satisfiability instance.",
                "Then, let σd r be given by: σd r (θv) = t if v is set to true in the solution to the satisfiability instance, and σd r (θv) = f otherwise.",
                "Then, against any action ac by the column player, there is at least one type θv such that either +v ∈ c and σd r (θv) = t, or −v ∈ c and σd r (θv) = f. Thus, the row players expected utility against action ac is at least |V | |V | − |V |−1 |V | = 1 |V | > 0.",
                "So, σd r is a dominating strategy.",
                "Now, suppose there is a dominating pure strategy σd r .",
                "This dominating strategy must play t or f for at least one type.",
                "Thus, against any ac by the column player, there must at least be some type θv for which ur(θv, σd r (θv), ac) > 0.",
                "That is, there must be at least one variable v such that setting v to σd r (θv) satifies c. But then, setting each v to σd r (θv) must satisfy all the clauses.",
                "So a satisfying assignment exists.",
                "However, it turns out that we can modify the linear programs from Proposition 1 to obtain a polynomial time algorithm for checking whether a strategy is dominated by a mixed strategy in Bayesian games.",
                "Theorem 6.",
                "In a Bayesian game, it can be decided in polynomial time whether a given (possibly mixed) strategy σr is dominated by some other mixed strategy, using linear programming (both for strict and weak dominance).",
                "Proof.",
                "We can modify the linear programs presented in Proposition 1 as follows.",
                "For strict dominance, again assuming without loss of generality that all the utilities in the game are positive, use the following linear program (in which pσr r (θr, ar) is the probability that σr, the strategy to be dominated, places on ar for type θr): minimize θr∈Θr ar∈Ar pr(ar) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) ≤ 1.",
                "Assuming that π(θr) > 0 for all θr ∈ Θr, this program will return an objective value smaller than |Θr| if and only if σr is strictly dominated, by reasoning similar to that done in Proposition 1.",
                "For weak dominance, use the following linear program: maximize ac∈Ac ( θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar)− θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar)) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) = 1.",
                "This program will return an objective value greater than 0 if and only if σr is weakly dominated, by reasoning similar to that done in Proposition 1.",
                "We now turn to iterated dominance in Bayesian games.",
                "Na¨ıvely, one might argue that iterated dominance in Bayesian 95 games always requires an exponential number of steps when a significant fraction of the games pure strategies can be eliminated, because there are exponentially many pure strategies.",
                "However, this is not a very strong argument because oftentimes we can eliminate exponentially many pure strategies in one step.",
                "For example, if for some type θr ∈ Θr we have, for all ac ∈ Ac, that u(θr, a1 r, ac) > u(θr, a2 r, ac), then any pure strategy for the row player which plays action a2 r for type θr is dominated (by the strategy that plays action a1 r for type θr instead)-and there are exponentially many (|Ar||Θr|−1 ) such strategies.",
                "It is therefore conceivable that we need only polynomially many eliminations of collections of a players strategies.",
                "However, the following theorem shows that this is not the case, by giving an example where an exponential number of iterations (that is, alternations between the players in eliminating strategies) is required. (We emphasize that this is not a result about computational complexity.)",
                "Theorem 7.",
                "Even in symmetric 3-player Bayesian games, iterated dominance by pure strategies can require an exponential number of iterations (both for strict and weak dominance), even with only three actions per player.",
                "Proof.",
                "Let each player i ∈ {1, 2, 3} have n + 1 types θ1 i , θ2 i , . . . , θn+1 i .",
                "Let each player i have 3 actions ai, bi, ci, and let the utility function of each player be defined as follows. (In the below, i + 1 and i + 2 are shorthand for i + 1(mod 3) and i + 2(mod 3) when used as player indices.",
                "Also, −∞ can be replaced by a sufficiently negative number.",
                "Finally, δ and should be chosen to be very small (even compared to 2−(n+1) ), and should be more than twice as large as δ.) • ui(θ1 i ; ai, ci+1, ci+2) = −1; • ui(θ1 i ; ai, si+1, si+2) = 0 for si+1 = ci+1 or si+2 = ci+2; • ui(θ1 i ; bi, si+1, si+2) = − for si+1 = ai+1 and si+2 = ai+2; • ui(θ1 i ; bi, si+1, si+2) = −∞ for si+1 = ai+1 or si+2 = ai+2; • ui(θ1 i ; ci, si+1, si+2) = −∞ for all si+1, si+2; • ui(θj i ; ai, si+1, si+2) = −∞ for all si+1, si+2 when j > 1; • ui(θj i ; bi, si+1, si+2) = − for all si+1, si+2 when j > 1; • ui(θj i ; ci, si+1, ci+2) = δ − − 1/2 for all si+1 when j > 1; • ui(θj i ; ci, si+1, si+2) = δ− for all si+1 and si+2 = ci+2 when j > 1.",
                "Let the distribution over each players types be given by p(θj i ) = 2−j (with the exception that p(θ2 i ) = 2−2 +2−(n+1) ).",
                "We will be interested in eliminating strategies of the following form: play bi for type θ1 i , and play one of bi or ci otherwise.",
                "Because the utility function is the same for any type θj i with j > 1, these strategies are effectively defined by the total probability that they place on ci,8 which is t2 i (2−2 + 2−(n+1) ) + n+1 j=3 tj i 2−j where tj i = 1 if player i 8 Note that the strategies are still pure strategies; the probability placed on an action by a strategy here is simply the sum of the probabilities of the types for which the strategy chooses that action. plays ci for type θj i , and 0 otherwise.",
                "This probability is different for any two different strategies of the given form, and we have exponentially many different strategies of the given form.",
                "For any probability q which can be expressed as t2(2−2 + 2−(n+1) ) + n+1 j=3 tj2−j (with all tj ∈ {0, 1}), let σi(q) denote the (unique) strategy of the given form for player i which places a total probability of q on ci.",
                "Any strategy that plays ci for type θ1 i or ai for some type θj i with j > 1 can immediately be eliminated.",
                "We will show that, after that, we must eliminate the strategies σi(q) with high q first, slowly working down to those with lower q.",
                "Claim 1: If σi+1(q ) and σi+2(q ) have not yet been eliminated, and q < q , then σi(q) cannot yet be eliminated.",
                "Proof: First, we show that no strategy σi(q ) can eliminate σi(q).",
                "Against σi+1(q ), σi+2(q ), the utility of playing σi(p) is − + p · δ − p · q /2.",
                "Thus, when q = 0, it is best to set p as high as possible (and we note that σi+1(0) and σi+2(0) have not been eliminated), but when q > 0, it is best to set p as low as possible because δ < q /2.",
                "Thus, whether q > q or q < q , σi(q) will always do strictly better than σi(q ) against some remaining opponent strategies.",
                "Hence, no strategy σi(q ) can eliminate σi(q).",
                "The only other pure strategies that could dominate σi(q) are strategies that play ai for type θ1 i , and bi or ci for all other types.",
                "Let us take such a strategy and suppose that it plays c with probability p. Against σi+1(q ), σi+2(q ) (which have not yet been eliminated), the utility of playing this strategy is −(q )2 /2 − /2 + p · δ − p · q /2.",
                "On the other hand, playing σi(q) gives − + q · δ − q · q /2.",
                "Because q > q, we have −(q )2 /2 < −q · q /2, and because δ and are small, it follows that σi(q) receives a higher utility.",
                "Therefore, no strategy dominates σi(q), proving the claim.",
                "Claim 2: If for all q > q, σi+1(q ) and σi+2(q ) have been eliminated, then σi(q) can be eliminated.",
                "Proof: Consider the strategy for player i that plays ai for type θ1 i , and bi for all other types (call this strategy σi); we claim σi dominates σi(q).",
                "First, if either of the other players k plays ak for θ1 k, then σi performs better than σi(q) (which receives −∞ in some cases).",
                "Because the strategies for player k that play ck for type θ1 k, or ak for some type θj k with j > 1, have already been eliminated, all that remains to check is that σi performs better than σi(q) whenever both of the other two players play strategies of the following form: play bk for type θ1 k, and play one of bk or ck otherwise.",
                "We note that among these strategies, there are none left that place probability greater than q on ck.",
                "Letting qk denote the probability with which player k plays ck, the expected utility of playing σi is −qi+1 · qi+2/2 − /2.",
                "On the other hand, the utility of playing σi(q) is − + q · δ − q · qi+2/2.",
                "Because qi+1 ≤ q, the difference between these two expressions is at least /2 − δ, which is positive.",
                "It follows that σi dominates σi(q).",
                "From Claim 2, it follows that all strategies of the form σi(q) will eventually be eliminated.",
                "However, Claim 1 shows that we cannot go ahead and eliminate multiple such strategies for one player, unless at least one other player simultaneously keeps up in the eliminated strategies: every time a σi(q) is eliminated such that σi+1(q) and σi+2(q) have not yet been eliminated, we need to eliminate one of the latter two strategies before any σi(q ) with q > q can be eliminated-that is, we need to alternate between players.",
                "Because there are exponentially many strategies of the form σi(q), it follows that iterated elimination will require exponentially many iterations to complete. 96 It follows that an efficient algorithm for iterated dominance (strict or weak) by pure strategies in Bayesian games, if it exists, must somehow be able to perform (at least part of) many iterations in a single step of the algorithm (because if each step only performed a single iteration, we would need exponentially many steps).",
                "Interestingly, Knuth et al. [11] argue that iterated dominance appears to be an inherently sequential problem (in light of their result that iterated very weak dominance is P-complete, that is, apparently not efficiently parallelizable), suggesting that aggregating many iterations may be difficult. 7.",
                "CONCLUSIONS While the Nash equilibrium solution concept is studied more and more intensely in our community, the perhaps more elementary concept of (iterated) dominance has received much less attention.",
                "In this paper we studied various computational aspects of this concept.",
                "We first studied both strict and weak dominance (not iterated), and showed that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve.",
                "We then moved on to iterated dominance.",
                "We showed that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance.",
                "This allowed us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
                "Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].)",
                "Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time.",
                "We then studied what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies.",
                "First, we showed that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak dominance).",
                "Then, we showed that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3).",
                "Finally, we studied dominance and iterated dominance in Bayesian games, as an example of a concise representation language for normal form games that is interesting in its own right.",
                "We showed that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak dominance).",
                "Finally, we showed that iterated dominance using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak dominance).",
                "There are various avenues for future research.",
                "First, there is the open question of whether it is possible to complete iterated dominance in Bayesian games in polynomial time (even though we showed that an exponential number of alternations between the players in eliminating strategies is sometimes required).",
                "Second, we can study computational aspects of (iterated) dominance in concise representations of normal form games other than Bayesian games-for example, in graphical games [9] or local-effect/action graph games [12, 2]. (How to efficiently perform iterated very weak dominance has already been studied for partially observable stochastic games [8].)",
                "Finally, we can ask whether some of the algorithms we described (such as the one for iterated strict dominance with mixed strategies) can be made faster. 8.",
                "REFERENCES [1] Krzysztof R. Apt.",
                "Uniform proofs of order independence for various strategy elimination procedures.",
                "Contributions to Theoretical Economics, 4(1), 2004. [2] Nivan A. R. Bhat and Kevin Leyton-Brown.",
                "Computing Nash equilibria of action-graph games.",
                "In UAI, 2004. [3] Ben Blum, Christian R. Shelton, and Daphne Koller.",
                "A continuation method for Nash equilibria in structured games.",
                "In IJCAI, 2003. [4] Vincent Conitzer and Tuomas Sandholm.",
                "Complexity results about Nash equilibria.",
                "In IJCAI, pages 765-771, 2003. [5] Drew Fudenberg and Jean Tirole.",
                "<br>game theory</br>.",
                "MIT Press, 1991. [6] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
                "On the order of eliminating dominated strategies.",
                "Operations Research Letters, 9:85-89, 1990. [7] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
                "The complexity of eliminating dominated strategies.",
                "Mathematics of Operation Research, 18:553-565, 1993. [8] Eric A. Hansen, Daniel S. Bernstein, and Shlomo Zilberstein.",
                "Dynamic programming for partially observable stochastic games.",
                "In AAAI, pages 709-715, 2004. [9] Michael Kearns, Michael Littman, and Satinder Singh.",
                "Graphical models for <br>game theory</br>.",
                "In UAI, 2001. [10] Leonid Khachiyan.",
                "A polynomial algorithm in linear programming.",
                "Soviet Math.",
                "Doklady, 20:191-194, 1979. [11] Donald E. Knuth, Christos H. Papadimitriou, and John N Tsitsiklis.",
                "A note on strategy elimination in bimatrix games.",
                "Operations Research Letters, 7(3):103-107, 1988. [12] Kevin Leyton-Brown and Moshe Tennenholtz.",
                "Local-effect games.",
                "In IJCAI, 2003. [13] Richard Lipton, Evangelos Markakis, and Aranyak Mehta.",
                "Playing large games using simple strategies.",
                "In ACM-EC, pages 36-41, 2003. [14] Michael Littman and Peter Stone.",
                "A polynomial-time Nash equilibrium algorithm for repeated games.",
                "In ACM-EC, pages 48-54, 2003. [15] Leslie M. Marx and Jeroen M. Swinkels.",
                "Order independence for iterated weak dominance.",
                "Games and Economic Behavior, 18:219-245, 1997. [16] Leslie M. Marx and Jeroen M. Swinkels.",
                "Corrigendum, order independence for iterated weak dominance.",
                "Games and Economic Behavior, 31:324-329, 2000. [17] Andreu Mas-Colell, Michael Whinston, and Jerry R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [18] Roger Myerson.",
                "<br>game theory</br>: Analysis of Conflict.",
                "Harvard University Press, Cambridge, 1991. [19] Martin J Osborne and Ariel Rubinstein.",
                "A Course in <br>game theory</br>.",
                "MIT Press, 1994. [20] Christos Papadimitriou.",
                "Algorithms, games and the Internet.",
                "In STOC, pages 749-753, 2001. [21] Ryan Porter, Eugene Nudelman, and Yoav Shoham.",
                "Simple search methods for finding a Nash equilibrium.",
                "In AAAI, pages 664-669, 2004. 97"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "En tales entornos, los agentes requieren herramientas de la \"teoría del juego\" para decidir racionalmente una acción.",
                "\"Game Theory\" ofrece varios modelos formales de entornos estratégicos: el más conocido de los cuales es un juego en forma normal (o matriz), especificando una utilidad (pago) para cada agente para cada combinación de estrategias que los agentes eligen bien, asícomo conceptos de solución, que, dado un juego, especifican qué resultados son razonables (bajo diversos supuestos de racionalidad y conocimiento común).",
                "El problema de las soluciones informáticas de acuerdo con los conceptos de solución quizás más elementales de dominio y dominio iterado ha recibido mucha menos atención.(Después de un documento corto temprano sobre un caso fácil [11], el principal estudio computacional de estos conceptos ha tenido lugar en un artículo en la comunidad de \"teoría de juegos\" [7] .1) Una estrategia domina estrictamente otra estrategia si funcionaestrictamente 1 Esto no quiere decir que los científicos informáticos hayan ignorado 88 mejor contra todos los vectores de estrategias oponentes, y lo domine débilmente si funciona al menos contra todos los vectores de estrategias oponentes, y estrictamente mejor contra al menos uno.",
                "Se pueden encontrar discusiones y ejemplos más detallados en textos estándar sobre microeconomía o \"teoría de juegos\" [17, 5].",
                "\"teoría de juego\".",
                "Modelos gráficos para \"teoría de juegos\".",
                "\"Teoría del juego\": Análisis del conflicto.",
                "Un curso en \"Teoría del juego\"."
            ],
            "translated_text": "",
            "candidates": [
                "teoría de juego",
                "teoría del juego",
                "teoría de juego",
                "Game Theory",
                "teoría de juego",
                "teoría de juegos",
                "teoría de juego",
                "teoría de juegos",
                "teoría de juego",
                "teoría de juego",
                "teoría de juego",
                "teoría de juegos",
                "teoría de juego",
                "Teoría del juego",
                "teoría de juego",
                "Teoría del juego"
            ],
            "error": []
        },
        "normal form game": {
            "translated_key": "Juego de forma normal",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Complexity of (Iterated) Dominance∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT We study various computational aspects of solving games using dominance and iterated dominance.",
                "We first study both strict and weak dominance (not iterated), and show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve.",
                "We then move on to iterated dominance.",
                "We show that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance.",
                "This allows us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
                "Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].)",
                "Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time.",
                "We then study what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies.",
                "First, we show that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak dominance).",
                "Then, we show that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3).",
                "Finally, we study Bayesian games.",
                "We show that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak ∗ This material is based upon work supported by the National Science Foundation under ITR grants IIS-0121678 and IIS-0427858, and a Sloan Fellowship. dominance).",
                "Finally, we show that iterated dominance using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak dominance).",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In multiagent systems with self-interested agents, the optimal action for one agent may depend on the actions taken by other agents.",
                "In such settings, the agents require tools from game theory to rationally decide on an action.",
                "Game theory offers various formal models of strategic settings-the best-known of which is a game in normal (or matrix) form, specifying a utility (payoff) for each agent for each combination of strategies that the agents choose-as well as solution concepts, which, given a game, specify which outcomes are reasonable (under various assumptions of rationality and common knowledge).",
                "Probably the best-known (and certainly the most-studied) solution concept is that of Nash equilibrium.",
                "A Nash equilibrium specifies a strategy for each player, in such a way that no player has an incentive to (unilaterally) deviate from the prescribed strategy.",
                "Recently, numerous papers have studied computing Nash equilibria in various settings [9, 4, 12, 3, 13, 14], and the complexity of constructing a Nash equilibrium in normal form games has been labeled one of the two most important open problems on the boundary of P today [20].",
                "The problem of computing solutions according to the perhaps more elementary solution concepts of dominance and iterated dominance has received much less attention. (After an early short paper on an easy case [11], the main computational study of these concepts has actually taken place in a paper in the game theory community [7].1 ) A strategy strictly dominates another strategy if it performs strictly 1 This is not to say that computer scientists have ignored 88 better against all vectors of opponent strategies, and weakly dominates it if it performs at least as well against all vectors of opponent strategies, and strictly better against at least one.",
                "The idea is that dominated strategies can be eliminated from consideration.",
                "In iterated dominance, the elimination proceeds in rounds, and becomes easier as more strategies are eliminated: in any given round, the dominating strategy no longer needs to perform better than or as well as the dominated strategy against opponent strategies that were eliminated in earlier rounds.",
                "Computing solutions according to (iterated) dominance is important for at least the following reasons: 1) it can be computationally easier than computing (for instance) a Nash equilibrium (and therefore it can be useful as a preprocessing step in computing a Nash equilibrium), and 2) (iterated) dominance requires a weaker rationality assumption on the players than (for instance) Nash equilibrium, and therefore solutions derived according to it are more likely to occur.",
                "In this paper, we study some fundamental computational questions concerning dominance and iterated dominance, including how hard it is to check whether a given strategy can be eliminated by each of the variants of these notions.",
                "The rest of the paper is organized as follows.",
                "In Section 2, we briefly review definitions and basic properties of normal form games, strict and weak dominance, and iterated strict and weak dominance.",
                "In the remaining sections, we study computational aspects of dominance and iterated dominance.",
                "In Section 3, we study one-shot (not iterated) dominance.",
                "In Section 4, we study iterated dominance.",
                "In Section 5, we study dominance and iterated dominance when the dominating strategy can only place probability on a few pure strategies.",
                "Finally, in Section 6, we study dominance and iterated dominance in Bayesian games. 2.",
                "DEFINITIONS AND BASIC PROPERTIES In this section, we briefly review normal form games, as well as dominance and iterated dominance (both strict and weak).",
                "An n-player <br>normal form game</br> is defined as follows.",
                "Definition 1.",
                "A <br>normal form game</br> is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of pure strategies Σi and a utility function ui : Σ1 × Σ2 × . . . × Σn → R (where ui(σ1, σ2, . . . , σn) denotes player is utility when each player j plays action σj).",
                "The two main notions of dominance are defined as follows.",
                "Definition 2.",
                "Player is strategy σi is said to be strictly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
                "Player is strategy σi is said to be weakly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) ≥ ui(σi, σ−i), and for at least one vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
                "In this definition, it is sometimes allowed for the dominating strategy σi to be a mixed strategy, that is, a probability distribution over pure strategies.",
                "In this case, the utilities in dominance altogether.",
                "For example, simple dominance checks are sometimes used as a subroutine in searching for Nash equilibria [21]. the definition are the expected utilities.2 There are other notions of dominance, such as very weak dominance (in which no strict inequality is required, so two strategies can dominate each other), but we will not study them here.",
                "When we are looking at the dominance relations for player i, the other players (−i) can be thought of as a single player.3 Therefore, in the rest of the paper, when we study one-shot (not iterated) dominance, we will focus without loss of generality on two-player games.4 In two-player games, we will generally refer to the players as r (row) and c (column) rather than 1 and 2.",
                "In iterated dominance, dominated strategies are removed from the game, and no longer have any effect on future dominance relations.",
                "Iterated dominance can eliminate more strategies than dominance, as follows. σr may originally not dominate σr because the latter performs better against σc; but then, once σc is removed because it is dominated by σc, σr dominates σr, and the latter can be removed.",
                "For example, in the following game, R can be removed first, after which D is dominated.",
                "L R U 1, 1 0, 0 D 0, 1 1, 0 Either strict or weak dominance can be used in the definition of iterated dominance.",
                "We note that the process of iterated dominance is never helped by removing a dominated mixed strategy, for the following reason.",
                "If σi gives player i a higher utility than σi against mixed strategy σj for player j = i (and strategies σ−{i,j} for the other players), then for at least one pure strategy σj that σj places positive probability on, σi must perform better than σi against σj (and strategies σ−{i,j} for the other players).",
                "Thus, removing the mixed strategy σj does not introduce any new dominances.",
                "More detailed discussions and examples can be found in standard texts on microeconomics or game theory [17, 5].",
                "We are now ready to move on to the core of this paper. 3.",
                "DOMINANCE (NOT ITERATED) In this section, we study the notion of one-shot (not iterated) dominance.",
                "As a first observation, checking whether a given strategy is strictly (weakly) dominated by some pure strategy is straightforward, by checking, for every pure strategy for that player, whether the latter strategy performs strictly better against all the opponents strategies (at least as well against all the opponents strategies, and strictly 2 The dominated strategy σi is, of course, also allowed to be mixed, but this has no technical implications for the paper: when we study one-shot dominance, we ask whether a given strategy is dominated, and it does not matter whether the given strategy is pure or mixed; when we study iterated dominance, there is no use in eliminating mixed strategies, as we will see shortly. 3 This player may have a very large strategy space (one pure strategy for every vector of pure strategies for the players that are being replaced).",
                "Nevertheless, this will not result in an increase in our representation size, because the original representation already had to specify utilities for each of these vectors. 4 We note that a restriction to two-player games would not be without loss of generality for iterated dominance.",
                "This is because for iterated dominance, we need to look at the dominated strategies of each individual player, so we cannot merge any players. 89 better against at least one).5 Next, we show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time by solving a single linear program. (Similar linear programs have been given before [18]; we present the result here for completeness, and because we will build on the linear programs given below in Theorem 6.)",
                "Proposition 1.",
                "Given the row players utilities, a subset Dr of the row players pure strategies Σr, and a distinguished strategy σ∗ r for the row player, we can check in time polynomial in the size of the game (by solving a single linear program of polynomial size) whether there exists some mixed strategy σr, that places positive probability only on strategies in Dr and dominates σ∗ r , both for strict and for weak dominance.",
                "Proof.",
                "Let pdr be the probability that σr places on dr ∈ Dr. We will solve a single linear program in each of our algorithms; linear programs can be solved in polynomial time [10].",
                "For strict dominance, the question is whether the pdr can be set so that for every pure strategy for the column player σc ∈ Σc, dr∈Dr pdr ur(dr, σc) > ur(σ∗ r , σc).",
                "Because the inequality must be strict, we cannot solve this directly by linear programming.",
                "We proceed as follows.",
                "Because the game is finite, we may assume without loss of generality that all utilities are positive (if not, simply add a constant to all utilities.)",
                "Solve the following linear program: minimize dr∈Dr pdr such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc).",
                "If σ∗ r is strictly dominated by some mixed strategy, this linear program has a solution with objective value < 1. (The dominating strategy is a feasible solution with objective value exactly 1.",
                "Because no constraint is binding for this solution, we can reduce one of the probabilities slightly without affecting feasibility, thereby obtaining a solution with objective value < 1.)",
                "Moreover, if this linear program has a solution with objective value < 1, there is a mixed strategy strictly dominating σ∗ r , which can be obtained by taking the LP solution and adding the remaining probability to any strategy (because all the utilities are positive, this will add to the left side of any inequality, so all inequalities will become strict).",
                "For weak dominance, we can solve the following linear program: maximize σc∈Σc (( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc)) such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc); dr∈Dr pdr = 1.",
                "If σ∗ r is weakly dominated by some mixed strategy, then that mixed strategy is a feasible solution to this program with objective value > 0, because for at least one strategy σc ∈ Σc we have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0.",
                "On the other hand, if this program has a solution with objective value > 0, then for at least one strategy σc ∈ Σc we 5 Recall that the assumption of a single opponent (that is, the assumption of two players) is without loss of generality for one-shot dominance. must have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0, and thus the linear programs solution is a weakly dominating mixed strategy. 4.",
                "ITERATED DOMINANCE We now move on to iterated dominance.",
                "It is well-known that iterated strict dominance is path-independent [6, 19]that is, if we remove dominated strategies until no more dominated strategies remain, in the end the remaining strategies for each player will be the same, regardless of the order in which strategies are removed.",
                "Because of this, to see whether a given strategy can be eliminated by iterated strict dominance, all that needs to be done is to repeatedly remove strategies that are strictly dominated, until no more dominated strategies remain.",
                "Because we can check in polynomial time whether any given strategy is dominated (whether or not dominance by mixed strategies is allowed, as described in Section 3), this whole procedure takes only polynomial time.",
                "In the case of iterated dominance by pure strategies with two players, Knuth et al. [11] slightly improve on (speed up) the straightforward implementation of this procedure by keeping track of, for each ordered pair of strategies for a player, the number of opponent strategies that prevent the first strategy from dominating the second.",
                "Hereby the runtime for an m × n game is reduced from O((m + n)4 ) to O((m + n)3 ). (Actually, they only study very weak dominance (for which no strict inequalities are required), but the approach is easily extended.)",
                "In contrast, iterated weak dominance is known to be pathdependent.6 For example, in the following game, using iterated weak dominance we can eliminate M first, and then D, or R first, and then U. L M R U 1, 1 0, 0 1, 0 D 1, 1 1, 0 0, 0 Therefore, while the procedure of removing weakly dominated strategies until no more weakly dominated strategies remain can certainly be executed in polynomial time, which strategies survive in the end depends on the order in which we remove the dominated strategies.",
                "We will investigate two questions for iterated weak dominance: whether a given strategy is eliminated in some path, and whether there is a path to a unique solution (one pure strategy left per player).",
                "We will show that both of these problems are computationally hard.",
                "Definition 3.",
                "Given a game in normal form and a distinguished strategy σ∗ , IWD-STRATEGY-ELIMINATION asks whether there is some path of iterated weak dominance that eliminates σ∗ .",
                "Given a game in normal form, IWDUNIQUE-SOLUTION asks whether there is some path of iterated weak dominance that leads to a unique solution (one strategy left per player).",
                "The following lemma shows a special case of normal form games in which allowing for weak dominance by mixed strategies (in addition to weak dominance by pure strategies) does 6 There is, however, a restriction of weak dominance called nice weak dominance which is path-independent [15, 16].",
                "For an overview of path-independence results, see Apt [1]. 90 not help.",
                "We will prove the hardness results in this setting, so that they will hold whether or not dominance by mixed strategies is allowed.",
                "Lemma 1.",
                "Suppose that all the utilities in a game are in {0, 1}.",
                "Then every pure strategy that is weakly dominated by a mixed strategy is also weakly dominated by a pure strategy.",
                "Proof.",
                "Suppose pure strategy σ is weakly dominated by mixed strategy σ∗ .",
                "If σ gets a utility of 1 against some opponent strategy (or vector of opponent strategies if there are more than 2 players), then all the pure strategies that σ∗ places positive probability on must also get a utility of 1 against that opponent strategy (or else the expected utility would be smaller than 1).",
                "Moreover, at least one of the pure strategies that σ∗ places positive probability on must get a utility of 1 against an opponent strategy that σ gets 0 against (or else the inequality would never be strict).",
                "It follows that this pure strategy weakly dominates σ.",
                "We are now ready to prove the main results of this section.",
                "Theorem 1.",
                "IWD-STRATEGY-ELIMINATION is NPcomplete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed.",
                "Proof.",
                "The problem is in NP because given a sequence of strategies to be eliminated, we can easily check whether this is a valid sequence of eliminations (even when dominance by mixed strategies is allowed, using Proposition 1).",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following IWD-STRATEGY-ELIMINATION instance. (In this instance, we will specify that certain strategies are uneliminable.",
                "A strategy σr can be made uneliminable, even when 0 and 1 are the only allowed utilities, by adding another strategy σr and another opponent strategy σc, so that: 1. σr and σr are the only strategies that give the row player a utility of 1 against σc. 2. σr and σr always give the row player the same utility. 3. σc is the only strategy that gives the column player a utility of 1 against σr, but otherwise σc always gives the column player utility 0.",
                "This makes it impossible to eliminate any of these three strategies.",
                "We will not explicitly specify the additional strategies to make the proof more legible.)",
                "In this proof, we will denote row player strategies by s, and column player strategies by t, to improve legibility.",
                "Let the row players pure strategy set be given as follows.",
                "For every variable v ∈ V , the row player has corresponding strategies s1 +v, s2 +v, s1 −v, s2 −v.",
                "Additionally, the row player has the following 2 strategies: s1 0 and s2 0, where s2 0 = σ∗ r (that is, it is the strategy we seek to eliminate).",
                "Finally, for every clause c ∈ C, the row player has corresponding strategies s1 c (uneliminable) and s2 c. Let the column players pure strategy set be given as follows.",
                "For every variable v ∈ V , the column player has a corresponding strategy tv.",
                "For every clause c ∈ C, the column player has a corresponding strategy tc, and additionally, for every literal l ∈ L that occurs in c, a strategy tc,l.",
                "For every variable v ∈ V , the column player has corresponding strategies t+v, t−v (both uneliminable).",
                "Finally, the column player has three additional strategies: t1 0 (uneliminable), t2 0, and t1.",
                "The utility function for the row player is given as follows: • ur(s1 +v, tv) = 0 for all v ∈ V ; • ur(s2 +v, tv) = 1 for all v ∈ V ; • ur(s1 −v, tv) = 1 for all v ∈ V ; • ur(s2 −v, tv) = 0 for all v ∈ V ; • ur(s1 +v, t1) = 1 for all v ∈ V ; • ur(s2 +v, t1) = 0 for all v ∈ V ; • ur(s1 −v, t1) = 0 for all v ∈ V ; • ur(s2 −v, t1) = 1 for all v ∈ V ; • ur(sb +v, t+v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sb −v, t−v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sl, t) = 0 otherwise for all l ∈ L and t ∈ S2; • ur(s1 0, tc) = 0 for all c ∈ C; • ur(s2 0, tc) = 1 for all c ∈ C; • ur(sb 0, t1 0) = 1 for all b ∈ {1, 2}; • ur(s1 0, t2 0) = 1; • ur(s2 0, t2 0) = 0; • ur(sb 0, t) = 0 otherwise for all b ∈ {1, 2} and t ∈ S2; • ur(sb c, t) = 0 otherwise for all c ∈ C and b ∈ {1, 2}; and the row players utility is 0 in every other case.",
                "The utility function for the column player is given as follows: • uc(s, tv) = 0 for all v ∈ V and s ∈ S1; • uc(s, t1) = 0 for all s ∈ S1; • uc(s2 l , tc) = 1 for all c ∈ C and l ∈ L where l ∈ c (literal l occurs in clause c); • uc(s2 l2 , tc,l1 ) = 1 for all c ∈ C and l1, l2 ∈ L, l1 = l2 where l2 ∈ c; • uc(s1 c, tc) = 1 for all c ∈ C; • uc(s2 c, tc) = 0 for all c ∈ C; • uc(sb c, tc,l) = 1 for all c ∈ C, l ∈ L, and b ∈ {1, 2}; • uc(s2, tc) = uc(s2, tc,l) = 0 otherwise for all c ∈ C and l ∈ L; and the column players utility is 0 in every other case.",
                "We now show that the two instances are equivalent.",
                "First, suppose there is a solution to the satisfiability instance: that is, a truth-value assignment to the variables in V such that all clauses are satisfied.",
                "Then, consider the following sequence of eliminations in our game: 1.",
                "For every variable v that is set to true in the assignment, eliminate tv (which gives the column player utility 0 everywhere). 2.",
                "Then, for every variable v that is set to true in the assignment, eliminate s2 +v using s1 +v (which is possible because tv has been eliminated, and because t1 has not been eliminated (yet)). 3.",
                "Now eliminate t1 (which gives the column player utility 0 everywhere). 4.",
                "Next, for every variable v that is set to false in the assignment, eliminate s2 −v using s1 −v (which is possible because t1 has been eliminated, and because tv has not been eliminated (yet)). 5.",
                "For every clause c which has the variable corresponding to one of its positive literals l = +v set to true in the assignment, eliminate tc using tc,l (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 6.",
                "For every clause c which has the variable corresponding to one of its negative literals l = −v set to false in the assignment, eliminate tc using tc,l 91 (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 7.",
                "Because the assignment satisfied the formula, all the tc have now been eliminated.",
                "Thus, we can eliminate s2 0 = σ∗ r using s1 0.",
                "It follows that there is a solution to the IWD-STRATEGY-ELIMINATION instance.",
                "Now suppose there is a solution to the IWD-STRATEGYELIMINATION instance.",
                "By Lemma 1, we can assume that all the dominances are by pure strategies.",
                "We first observe that only s1 0 can eliminate s2 0 = σ∗ r , because it is the only other strategy that gets the row player a utility of 1 against t1 0, and t1 0 is uneliminable.",
                "However, because s2 0 performs better than s1 0 against the tc strategies, it follows that all of the tc strategies must be eliminated.",
                "For each c ∈ C, the strategy tc can only be eliminated by one of the strategies tc,l (with the same c), because these are the only other strategies that get the column player a utility of 1 against s1 c, and s1 c is uneliminable.",
                "But, in order for some tc,l to eliminate tc, s2 l must be eliminated first.",
                "Only s1 l can eliminate s2 l , because it is the only other strategy that gets the row player a utility of 1 against tl, and tl is uneliminable.",
                "We next show that for every v ∈ V only one of s2 +v, s2 −v can be eliminated.",
                "This is because in order for s1 +v to eliminate s2 +v, tv needs to have been eliminated and t1, not (so tv must be eliminated before t1); but in order for s1 −v to eliminate s2 −v, t1 needs to have been eliminated and tv, not (so t1 must be eliminated before tv).",
                "So, set v to true if s2 +v is eliminated, and to false otherwise Because by the above, for every clause c, one of the s2 l with l ∈ c must be eliminated, it follows that this is a satisfying assignment to the satisfiability instance.",
                "Using Theorem 1, it is now (relatively) easy to show that IWD-UNIQUE-SOLUTION is also NP-complete under the same restrictions.",
                "Theorem 2.",
                "IWD-UNIQUE-SOLUTION is NP-complete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed.",
                "Proof.",
                "Again, the problem is in NP because we can nondeterministically choose the sequence of eliminations and verify whether it is correct.",
                "To show NP-hardness, we reduce an arbitrary IWD-STRATEGY-ELIMINATION instance to the following IWD-UNIQUE-SOLUTION instance.",
                "Let all the strategies for each player from the original instance remain part of the new instance, and let the utilities resulting from the players playing a pair of these strategies be the same.",
                "We add three additional strategies σ1 r , σ2 r , σ3 r for the row player, and three additional strategies σ1 c , σ2 c , σ3 c for the column player.",
                "Let the additional utilities be as follows: • ur(σr, σj c) = 1 for all σr /∈ {σ1 r , σ2 r , σ3 r } and j ∈ {2, 3}; • ur(σi r, σc) = 1 for all i ∈ {1, 2, 3} and σc /∈ {σ2 c , σ3 c }; • ur(σi r, σ2 c ) = 1 for all i ∈ {2, 3}; • ur(σ1 r , σ3 c ) = 1; • and the row players utility is 0 in all other cases involving a new strategy. • uc(σ3 r , σc) = 1 for all σc /∈ {σ1 c , σ2 c , σ3 c }; • uc(σ∗ r , σj c) = 1 for all j ∈ {2, 3} (σ∗ r is the strategy to be eliminated in the original instance); • uc(σi r, σ1 c ) = 1 for all i ∈ {1, 2}; • ur(σ1 r , σ2 c ) = 1; • ur(σ2 r , σ3 c ) = 1; • and the column players utility is 0 in all other cases involving a new strategy.",
                "We proceed to show that the two instances are equivalent.",
                "First suppose there exists a solution to the original IWDSTRATEGY-ELIMINATION instance.",
                "Then, perform the same sequence of eliminations to eliminate σ∗ r in the new IWD-UNIQUE-SOLUTION instance. (This is possible because at any stage, any weak dominance for the row player in the original instance is still a weak dominance in the new instance, because the two strategies utilities for the row player are the same when the column player plays one of the new strategies; and the same is true for the column player.)",
                "Once σ∗ r is eliminated, let σ1 c eliminate σ2 c . (It performs better against σ2 r .)",
                "Then, let σ1 r eliminate all the other remaining strategies for the row player. (It always performs better against either σ1 c or σ3 c .)",
                "Finally, σ1 c is the unique best response against σ1 r among the column players remaining strategies, so let it eliminate all the other remaining strategies for the column player.",
                "Thus, there exists a solution to the IWD-UNIQUE-SOLUTION instance.",
                "Now suppose there exists a solution to the IWD-UNIQUESOLUTION instance.",
                "By Lemma 1, we can assume that all the dominances are by pure strategies.",
                "We will show that none of the new strategies (σ1 r , σ2 r , σ3 r , σ1 c , σ2 c , σ3 c ) can either eliminate another strategy, or be eliminated before σ∗ r is eliminated.",
                "Thus, there must be a sequence of eliminations ending in the elimination of σ∗ r , which does not involve any of the new strategies, and is therefore a valid sequence of eliminations in the original game (because all original strategies perform the same against each new strategy).",
                "We now show that this is true by exhausting all possibilities for the first elimination before σ∗ r is eliminated that involves a new strategy.",
                "None of the σi r can be eliminated by a σr /∈ {σ1 r , σ2 r , σ3 r }, because the σi r perform better against σ1 c . σ1 r cannot eliminate any other strategy, because it always performs poorer against σ2 c . σ2 r and σ3 r are equivalent from the row players perspective (and thus cannot eliminate each other), and cannot eliminate any other strategy because they always perform poorer against σ3 c .",
                "None of the σj c can be eliminated by a σc /∈ {σ1 c , σ2 c , σ3 c }, because the σj c always perform better against either σ1 r or σ2 r . σ1 c cannot eliminate any other strategy, because it always performs poorer against either σ∗ r or σ3 r . σ2 c cannot eliminate any other strategy, because it always performs poorer against σ2 r or σ3 r . σ3 c cannot eliminate any other strategy, because it always performs poorer against σ1 r or σ3 r .",
                "Thus, there exists a solution to the IWDSTRATEGY-ELIMINATION instance.",
                "A slightly weaker version of the part of Theorem 2 concerning dominance by pure strategies only is the main result of Gilboa et al. [7]. (Besides not proving the result for dominance by mixed strategies, the original result was weaker because it required utilities {0, 1, 2, 3, 4, 5, 6, 7, 8} rather than just {0, 1} (and because of this, our Lemma 1 cannot be applied to it to get the result for mixed strategies).) 5. (ITERATED) DOMINANCE USING MIXED STRATEGIES WITH SMALL SUPPORTS When showing that a strategy is dominated by a mixed strategy, there are several reasons to prefer exhibiting a 92 dominating strategy that places positive probability on as few pure strategies as possible.",
                "First, this will reduce the number of bits required to specify the dominating strategy (and thus the proof of dominance can be communicated quicker): if the dominating mixed strategy places positive probability on only k strategies, then it can be specified using k real numbers for the probabilities, plus k log m (where m is the number of strategies for the player under consideration) bits to indicate which strategies are used.",
                "Second, the proof of dominance will be cleaner: for a dominating mixed strategy, it is typically (always in the case of strict dominance) possible to spread some of the probability onto any unused pure strategy and still have a dominating strategy, but this obscures which pure strategies are the ones that are key in making the mixed strategy dominating.",
                "Third, because (by the previous) the argument for eliminating the dominated strategy is simpler and easier to understand, it is more likely to be accepted.",
                "Fourth, the level of risk neutrality required for the argument to work is reduced, at least in the extreme case where dominance by a single pure strategy can be exhibited (no risk neutrality is required here).",
                "This motivates the following problem.",
                "Definition 4 (MINIMUM-DOMINATING-SET).",
                "We are given the row players utilities of a game in normal form, a distinguished strategy σ∗ for the row player, a specification of whether the dominance should be strict or weak, and a number k. We are asked whether there exists a mixed strategy σ for the row player that places positive probability on at most k pure strategies, and dominates σ∗ in the required sense.",
                "Unfortunately, this problem is NP-complete.",
                "Theorem 3.",
                "MINIMUM-DOMINATING-SET is NPcomplete, both for strict and for weak dominance.",
                "Proof.",
                "The problem is in NP because we can nondeterministically choose a set of at most k strategies to give positive probability, and decide whether we can dominate σ∗ with these k strategies as described in Proposition 1.",
                "To show NP-hardness, we reduce an arbitrary SET-COVER instance (given a set S, subsets S1, S2, . . . , Sr, and a number t, can all of S be covered by at most t of the subsets?) to the following MINIMUM-DOMINATING-SET instance.",
                "For every element s ∈ S, there is a pure strategy σs for the column player.",
                "For every subset Si, there is a pure strategy σSi for the row player.",
                "Finally, there is the distinguished pure strategy σ∗ for the row player.",
                "The row players utilities are as follows: ur(σSi , σs) = t + 1 if s ∈ Si; ur(σSi , σs) = 0 if s /∈ Si; ur(σ∗ , σs) = 1 for all s ∈ S. Finally, we let k = t. We now proceed to show that the two instances are equivalent.",
                "First suppose there exists a solution to the SET-COVER instance.",
                "Without loss of generality, we can assume that there are exactly k subsets in the cover.",
                "Then, for every Si that is in the cover, let the dominating strategy σ place exactly 1 k probability on the corresponding pure strategy σSi .",
                "Now, if we let n(s) be the number of subsets in the cover containing s (we observe that that n(s) ≥ 1), then for every strategy σs for the column player, the row players expected utility for playing σ when the column player is playing σs is u(σ, σs) = n(s) k (k + 1) ≥ k+1 k > 1 = u(σ∗ , σs).",
                "So σ strictly (and thus also weakly) dominates σ∗ , and there exists a solution to the MINIMUM-DOMINATING-SET instance.",
                "Now suppose there exists a solution to the MINIMUMDOMINATING-SET instance.",
                "Consider the (at most k) pure strategies of the form σSi on which the dominating mixed strategy σ places positive probability, and let T be the collection of the corresponding subsets Si.",
                "We claim that T is a cover.",
                "For suppose there is some s ∈ S that is not in any of the subsets in T .",
                "Then, if the column player plays σs, the row player (when playing σ) will always receive utility 0-as opposed to the utility of 1 the row player would receive for playing σ∗ , contradicting the fact that σ dominates σ∗ (whether this dominance is weak or strict).",
                "It follows that there exists a solution to the SET-COVER instance.",
                "On the other hand, if we require that the dominating strategy only places positive probability on a very small number of pure strategies, then it once again becomes easy to check whether a strategy is dominated.",
                "Specifically, to find out whether player is strategy σ∗ is dominated by a strategy that places positive probability on only k pure strategies, we can simply check, for every subset of k of player is pure strategies, whether there is a strategy that places positive probability only on these k strategies and dominates σ∗ , using Proposition 1.",
                "This requires only O(|Σi|k ) such checks.",
                "Thus, if k is a constant, this constitutes a polynomial-time algorithm.",
                "A natural question to ask next is whether iterated strict dominance remains computationally easy when dominating strategies are required to place positive probability on at most k pure strategies, where k is a small constant. (We have already shown in Section 4 that iterated weak dominance is hard even when k = 1, that is, only dominance by pure strategies is allowed.)",
                "Of course, if iterated strict dominance were path-independent under this restriction, computational easiness would follow as it did in Section 4.",
                "However, it turns out that this is not the case.",
                "Observation 1.",
                "If we restrict the dominating strategies to place positive probability on at most two pure strategies, iterated strict dominance becomes path-dependent.",
                "Proof.",
                "Consider the following game: 7, 1 0, 0 0, 0 0, 0 7, 1 0, 0 3, 0 3, 0 0, 0 0, 0 0, 0 3, 1 1, 0 1, 0 1, 0 Let (i, j) denote the outcome in which the row player plays the ith row and the column player plays the jth column.",
                "Because (1, 1), (2, 2), and (4, 3) are all Nash equilibria, none of the column players pure strategies will ever be eliminated, and neither will rows 1, 2, and 4.",
                "We now observe that randomizing uniformly over rows 1 and 2 dominates row 3, and randomizing uniformly over rows 3 and 4 dominates row 5.",
                "However, if we eliminate row 3 first, it becomes impossible to dominate row 5 without randomizing over at least 3 pure strategies.",
                "Indeed, iterated strict dominance turns out to be hard even when k = 3.",
                "Theorem 4.",
                "If we restrict the dominating strategies to place positive probability on at most three pure strategies, it becomes NP-complete to decide whether a given strategy can be eliminated using iterated strict dominance. 93 Proof.",
                "The problem is in NP because given a sequence of strategies to be eliminated, we can check in polynomial time whether this is a valid sequence of eliminations (for any strategy to be eliminated, we can check, for every subset of three other strategies, whether there is a strategy placing positive probability on only these three strategies that dominates the strategy to be eliminated, using Proposition 1).",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following two-player game.",
                "For every variable v ∈ V , the row player has strategies s+v, s−v, s1 v, s2 v, s3 v, s4 v, and the column player has strategies t1 v, t2 v, t3 v, t4 v. For every clause c ∈ C, the row player has a strategy sc, and the column player has a strategy tc, as well as, for every literal l occurring in c, an additional strategy tl c. The row player has two additional strategies s1 and s2. (s2 is the strategy that we are seeking to eliminate.)",
                "Finally, the column player has one additional strategy t1.",
                "The utility function for the row player is given as follows (where is some sufficiently small number): • ur(s+v, tj v) = 4 if j ∈ {1, 2}, for all v ∈ V ; • ur(s+v, tj v) = 1 if j ∈ {3, 4}, for all v ∈ V ; • ur(s−v, tj v) = 1 if j ∈ {1, 2}, for all v ∈ V ; • ur(s−v, tj v) = 4 if j ∈ {3, 4}, for all v ∈ V ; • ur(s+v, t) = ur(s−v, t) = 0 for all v ∈ V and t /∈ {t1 v, t2 v, t3 v, t4 v}; • ur(si v, ti v) = 13 for all v ∈ V and i ∈ {1, 2, 3, 4}; • ur(si v, t) = for all v ∈ V , i ∈ {1, 2, 3, 4}, and t = ti v; • ur(sc, tc) = 2 for all c ∈ C; • ur(sc, t) = 0 for all c ∈ C and t = tc; • ur(s1, t1) = 1 + ; • ur(s1, t) = for all t = t1; • ur(s2, t1) = 1; • ur(s2, tc) = 1 for all c ∈ C; • ur(s2, t) = 0 for all t /∈ {t1} ∪ {tc : c ∈ C}.",
                "The utility function for the column player is given as follows: • uc(si v, ti v) = 1 for all v ∈ V and i ∈ {1, 2, 3, 4}; • uc(s, ti v) = 0 for all v ∈ V , i ∈ {1, 2, 3, 4}, and s = si v; • uc(sc, tc) = 1 for all c ∈ C; • uc(sl, tc) = 1 for all c ∈ C and l ∈ L occurring in c; • uc(s, tc) = 0 for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c}; • uc(sc, tl c) = 1 + for all c ∈ C; • uc(sl , tl c) = 1 + for all c ∈ C and l = l occurring in c; • uc(s, tl c) = for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c, l = l }; • uc(s2, t1) = 1; • uc(s, t1) = 0 for all s = s2.",
                "We now show that the two instances are equivalent.",
                "First, suppose that there is a solution to the satisfiability instance.",
                "Then, consider the following sequence of eliminations in our game: 1.",
                "For every variable v that is set to true in the satisfying assignment, eliminate s+v with the mixed strategy σr that places probability 1/3 on s−v, probability 1/3 on s1 v, and probability 1/3 on s2 v. (The expected utility of playing σr against t1 v or t2 v is 14/3 > 4; against t3 v or t4 v, it is 4/3 > 1; and against anything else it is 2 /3 > 0.",
                "Hence the dominance is valid.) 2.",
                "Similarly, for every variable v that is set to false in the satisfying assignment, eliminate s−v with the mixed strategy σr that places probability 1/3 on s+v, probability 1/3 on s3 v, and probability 1/3 on s4 v. (The expected utility of playing σr against t1 v or t2 v is 4/3 > 1; against t3 v or t4 v, it is 14/3 > 4; and against anything else it is 2 /3 > 0.",
                "Hence the dominance is valid.) 3.",
                "For every c ∈ C, eliminate tc with any tl c for which l was set to true in the satisfying assignment. (This is a valid dominance because tl c performs better than tc against any strategy other than sl, and we eliminated sl in step 1 or in step 2.) 4.",
                "Finally, eliminate s2 with s1. (This is a valid dominance because s1 performs better than s2 against any strategy other than those in {tc : c ∈ C}, which we eliminated in step 3.)",
                "Hence, there is an elimination path that eliminates s2.",
                "Now, suppose that there is an elimination path that eliminates s2.",
                "The strategy that eventually dominates s2 must place most of its probability on s1, because s1 is the only other strategy that performs well against t1, which cannot be eliminated before s2.",
                "But, s1 performs significantly worse than s2 against any strategy tc with c ∈ C, so it follows that all these strategies must be eliminated first.",
                "Each strategy tc can only be eliminated by a strategy that places most of its weight on the corresponding strategies tl c with l ∈ c, because they are the only other strategies that perform well against sc, which cannot be eliminated before tc.",
                "But, each strategy tl c performs significantly worse than tc against sl, so it follows that for every clause c, for one of the literals l occurring in it, sl must be eliminated first.",
                "Now, strategies of the form tj v will never be eliminated because they are the unique best responses to the corresponding strategies sj v (which are, in turn, the best responses to the corresponding tj v).",
                "As a result, if strategy s+v (respectively, s−v) is eliminated, then its opposite strategy s−v (respectively, s+v) can no longer be eliminated, for the following reason.",
                "There is no other pure strategy remaining that gets a significant utility against more than one of the strategies t1 v, t2 v, t3 v, t4 v, but s−v (respectively, s+v) gets significant utility against all 4, and therefore cannot be dominated by a mixed strategy placing positive probability on at most 3 strategies.",
                "It follows that for each v ∈ V , at most one of the strategies s+v, s−v is eliminated, in such a way that for every clause c, for one of the literals l occurring in it, sl must be eliminated.",
                "But then setting all the literals l such that sl is eliminated to true constitutes a solution to the satisfiability instance.",
                "In the next section, we return to the setting where there is no restriction on the number of pure strategies on which a dominating mixed strategy can place positive probability. 6. (ITERATED) DOMINANCE IN BAYESIAN GAMES So far, we have focused on normal form games that are flatly represented (that is, every matrix entry is given ex94 plicitly).",
                "However, for many games, the flat representation is too large to write down explicitly, and instead, some representation that exploits the structure of the game needs to be used.",
                "Bayesian games, besides being of interest in their own right, can be thought of as a useful structured representation of normal form games, and we will study them in this section.",
                "In a Bayesian game, each player first receives privately held preference information (the players type) from a distribution, which determines the utility that that player receives for every outcome of (that is, vector of actions played in) the game.",
                "After receiving this type, the player plays an action based on it.7 Definition 5.",
                "A Bayesian game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of actions Ai, a (finite) type space Θi with a probability distribution πi over it, and a utility function ui : Θi × A1 × A2 × . . . × An → R (where ui(θi, a1, a2, . . . , an) denotes player is utility when is type is θi and each player j plays action aj).",
                "A pure strategy in a Bayesian game is a mapping from types to actions, σi : Θi → Ai, where σi(θi) denotes the action that player i plays for type θi.",
                "Any vector of pure strategies in a Bayesian game defines an (expected) utility for each player, and therefore we can translate a Bayesian game into a <br>normal form game</br>.",
                "In this <br>normal form game</br>, the notions of dominance and iterated dominance are defined as before.",
                "However, the normal form representation of the game is exponentially larger than the Bayesian representation, because each player i has |Ai||Θi| distinct pure strategies.",
                "Thus, any algorithm for Bayesian games that relies on expanding the game to its normal form will require exponential time.",
                "Specifically, our easiness results for normal form games do not directly transfer to this setting.",
                "In fact, it turns out that checking whether a strategy is dominated by a pure strategy is hard in Bayesian games.",
                "Theorem 5.",
                "In a Bayesian game, it is NP-complete to decide whether a given pure strategy σr : Θr → Ar is dominated by some other pure strategy (both for strict and weak dominance), even when the row players distribution over types is uniform.",
                "Proof.",
                "The problem is in NP because it is easy to verify whether a candidate dominating strategy is indeed a dominating strategy.",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a set of clauses C using variables from V ) to the following Bayesian game.",
                "Let the row players action set be Ar = {t, f, 0} and let the column players action set be Ac = {ac : c ∈ C}.",
                "Let the row players type set be Θr = {θv : v ∈ V }, with a distribution πr that is uniform.",
                "Let the row players utility function be as follows: • ur(θv, 0, ac) = 0 for all v ∈ V and c ∈ C; • ur(θv, b, ac) = |V | for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b satisfies c; • ur(θv, b, ac) = −1 for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b does not satisfy c. 7 In general, a player can also receive a signal about the other players preferences, but we will not concern ourselves with that here.",
                "Let the pure strategy to be dominated be the one that plays 0 for every type.",
                "We show that the strategy is dominated by a pure strategy if and only if there is a solution to the satisfiability instance.",
                "First, suppose there is a solution to the satisfiability instance.",
                "Then, let σd r be given by: σd r (θv) = t if v is set to true in the solution to the satisfiability instance, and σd r (θv) = f otherwise.",
                "Then, against any action ac by the column player, there is at least one type θv such that either +v ∈ c and σd r (θv) = t, or −v ∈ c and σd r (θv) = f. Thus, the row players expected utility against action ac is at least |V | |V | − |V |−1 |V | = 1 |V | > 0.",
                "So, σd r is a dominating strategy.",
                "Now, suppose there is a dominating pure strategy σd r .",
                "This dominating strategy must play t or f for at least one type.",
                "Thus, against any ac by the column player, there must at least be some type θv for which ur(θv, σd r (θv), ac) > 0.",
                "That is, there must be at least one variable v such that setting v to σd r (θv) satifies c. But then, setting each v to σd r (θv) must satisfy all the clauses.",
                "So a satisfying assignment exists.",
                "However, it turns out that we can modify the linear programs from Proposition 1 to obtain a polynomial time algorithm for checking whether a strategy is dominated by a mixed strategy in Bayesian games.",
                "Theorem 6.",
                "In a Bayesian game, it can be decided in polynomial time whether a given (possibly mixed) strategy σr is dominated by some other mixed strategy, using linear programming (both for strict and weak dominance).",
                "Proof.",
                "We can modify the linear programs presented in Proposition 1 as follows.",
                "For strict dominance, again assuming without loss of generality that all the utilities in the game are positive, use the following linear program (in which pσr r (θr, ar) is the probability that σr, the strategy to be dominated, places on ar for type θr): minimize θr∈Θr ar∈Ar pr(ar) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) ≤ 1.",
                "Assuming that π(θr) > 0 for all θr ∈ Θr, this program will return an objective value smaller than |Θr| if and only if σr is strictly dominated, by reasoning similar to that done in Proposition 1.",
                "For weak dominance, use the following linear program: maximize ac∈Ac ( θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar)− θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar)) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) = 1.",
                "This program will return an objective value greater than 0 if and only if σr is weakly dominated, by reasoning similar to that done in Proposition 1.",
                "We now turn to iterated dominance in Bayesian games.",
                "Na¨ıvely, one might argue that iterated dominance in Bayesian 95 games always requires an exponential number of steps when a significant fraction of the games pure strategies can be eliminated, because there are exponentially many pure strategies.",
                "However, this is not a very strong argument because oftentimes we can eliminate exponentially many pure strategies in one step.",
                "For example, if for some type θr ∈ Θr we have, for all ac ∈ Ac, that u(θr, a1 r, ac) > u(θr, a2 r, ac), then any pure strategy for the row player which plays action a2 r for type θr is dominated (by the strategy that plays action a1 r for type θr instead)-and there are exponentially many (|Ar||Θr|−1 ) such strategies.",
                "It is therefore conceivable that we need only polynomially many eliminations of collections of a players strategies.",
                "However, the following theorem shows that this is not the case, by giving an example where an exponential number of iterations (that is, alternations between the players in eliminating strategies) is required. (We emphasize that this is not a result about computational complexity.)",
                "Theorem 7.",
                "Even in symmetric 3-player Bayesian games, iterated dominance by pure strategies can require an exponential number of iterations (both for strict and weak dominance), even with only three actions per player.",
                "Proof.",
                "Let each player i ∈ {1, 2, 3} have n + 1 types θ1 i , θ2 i , . . . , θn+1 i .",
                "Let each player i have 3 actions ai, bi, ci, and let the utility function of each player be defined as follows. (In the below, i + 1 and i + 2 are shorthand for i + 1(mod 3) and i + 2(mod 3) when used as player indices.",
                "Also, −∞ can be replaced by a sufficiently negative number.",
                "Finally, δ and should be chosen to be very small (even compared to 2−(n+1) ), and should be more than twice as large as δ.) • ui(θ1 i ; ai, ci+1, ci+2) = −1; • ui(θ1 i ; ai, si+1, si+2) = 0 for si+1 = ci+1 or si+2 = ci+2; • ui(θ1 i ; bi, si+1, si+2) = − for si+1 = ai+1 and si+2 = ai+2; • ui(θ1 i ; bi, si+1, si+2) = −∞ for si+1 = ai+1 or si+2 = ai+2; • ui(θ1 i ; ci, si+1, si+2) = −∞ for all si+1, si+2; • ui(θj i ; ai, si+1, si+2) = −∞ for all si+1, si+2 when j > 1; • ui(θj i ; bi, si+1, si+2) = − for all si+1, si+2 when j > 1; • ui(θj i ; ci, si+1, ci+2) = δ − − 1/2 for all si+1 when j > 1; • ui(θj i ; ci, si+1, si+2) = δ− for all si+1 and si+2 = ci+2 when j > 1.",
                "Let the distribution over each players types be given by p(θj i ) = 2−j (with the exception that p(θ2 i ) = 2−2 +2−(n+1) ).",
                "We will be interested in eliminating strategies of the following form: play bi for type θ1 i , and play one of bi or ci otherwise.",
                "Because the utility function is the same for any type θj i with j > 1, these strategies are effectively defined by the total probability that they place on ci,8 which is t2 i (2−2 + 2−(n+1) ) + n+1 j=3 tj i 2−j where tj i = 1 if player i 8 Note that the strategies are still pure strategies; the probability placed on an action by a strategy here is simply the sum of the probabilities of the types for which the strategy chooses that action. plays ci for type θj i , and 0 otherwise.",
                "This probability is different for any two different strategies of the given form, and we have exponentially many different strategies of the given form.",
                "For any probability q which can be expressed as t2(2−2 + 2−(n+1) ) + n+1 j=3 tj2−j (with all tj ∈ {0, 1}), let σi(q) denote the (unique) strategy of the given form for player i which places a total probability of q on ci.",
                "Any strategy that plays ci for type θ1 i or ai for some type θj i with j > 1 can immediately be eliminated.",
                "We will show that, after that, we must eliminate the strategies σi(q) with high q first, slowly working down to those with lower q.",
                "Claim 1: If σi+1(q ) and σi+2(q ) have not yet been eliminated, and q < q , then σi(q) cannot yet be eliminated.",
                "Proof: First, we show that no strategy σi(q ) can eliminate σi(q).",
                "Against σi+1(q ), σi+2(q ), the utility of playing σi(p) is − + p · δ − p · q /2.",
                "Thus, when q = 0, it is best to set p as high as possible (and we note that σi+1(0) and σi+2(0) have not been eliminated), but when q > 0, it is best to set p as low as possible because δ < q /2.",
                "Thus, whether q > q or q < q , σi(q) will always do strictly better than σi(q ) against some remaining opponent strategies.",
                "Hence, no strategy σi(q ) can eliminate σi(q).",
                "The only other pure strategies that could dominate σi(q) are strategies that play ai for type θ1 i , and bi or ci for all other types.",
                "Let us take such a strategy and suppose that it plays c with probability p. Against σi+1(q ), σi+2(q ) (which have not yet been eliminated), the utility of playing this strategy is −(q )2 /2 − /2 + p · δ − p · q /2.",
                "On the other hand, playing σi(q) gives − + q · δ − q · q /2.",
                "Because q > q, we have −(q )2 /2 < −q · q /2, and because δ and are small, it follows that σi(q) receives a higher utility.",
                "Therefore, no strategy dominates σi(q), proving the claim.",
                "Claim 2: If for all q > q, σi+1(q ) and σi+2(q ) have been eliminated, then σi(q) can be eliminated.",
                "Proof: Consider the strategy for player i that plays ai for type θ1 i , and bi for all other types (call this strategy σi); we claim σi dominates σi(q).",
                "First, if either of the other players k plays ak for θ1 k, then σi performs better than σi(q) (which receives −∞ in some cases).",
                "Because the strategies for player k that play ck for type θ1 k, or ak for some type θj k with j > 1, have already been eliminated, all that remains to check is that σi performs better than σi(q) whenever both of the other two players play strategies of the following form: play bk for type θ1 k, and play one of bk or ck otherwise.",
                "We note that among these strategies, there are none left that place probability greater than q on ck.",
                "Letting qk denote the probability with which player k plays ck, the expected utility of playing σi is −qi+1 · qi+2/2 − /2.",
                "On the other hand, the utility of playing σi(q) is − + q · δ − q · qi+2/2.",
                "Because qi+1 ≤ q, the difference between these two expressions is at least /2 − δ, which is positive.",
                "It follows that σi dominates σi(q).",
                "From Claim 2, it follows that all strategies of the form σi(q) will eventually be eliminated.",
                "However, Claim 1 shows that we cannot go ahead and eliminate multiple such strategies for one player, unless at least one other player simultaneously keeps up in the eliminated strategies: every time a σi(q) is eliminated such that σi+1(q) and σi+2(q) have not yet been eliminated, we need to eliminate one of the latter two strategies before any σi(q ) with q > q can be eliminated-that is, we need to alternate between players.",
                "Because there are exponentially many strategies of the form σi(q), it follows that iterated elimination will require exponentially many iterations to complete. 96 It follows that an efficient algorithm for iterated dominance (strict or weak) by pure strategies in Bayesian games, if it exists, must somehow be able to perform (at least part of) many iterations in a single step of the algorithm (because if each step only performed a single iteration, we would need exponentially many steps).",
                "Interestingly, Knuth et al. [11] argue that iterated dominance appears to be an inherently sequential problem (in light of their result that iterated very weak dominance is P-complete, that is, apparently not efficiently parallelizable), suggesting that aggregating many iterations may be difficult. 7.",
                "CONCLUSIONS While the Nash equilibrium solution concept is studied more and more intensely in our community, the perhaps more elementary concept of (iterated) dominance has received much less attention.",
                "In this paper we studied various computational aspects of this concept.",
                "We first studied both strict and weak dominance (not iterated), and showed that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve.",
                "We then moved on to iterated dominance.",
                "We showed that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance.",
                "This allowed us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
                "Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].)",
                "Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time.",
                "We then studied what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies.",
                "First, we showed that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak dominance).",
                "Then, we showed that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3).",
                "Finally, we studied dominance and iterated dominance in Bayesian games, as an example of a concise representation language for normal form games that is interesting in its own right.",
                "We showed that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak dominance).",
                "Finally, we showed that iterated dominance using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak dominance).",
                "There are various avenues for future research.",
                "First, there is the open question of whether it is possible to complete iterated dominance in Bayesian games in polynomial time (even though we showed that an exponential number of alternations between the players in eliminating strategies is sometimes required).",
                "Second, we can study computational aspects of (iterated) dominance in concise representations of normal form games other than Bayesian games-for example, in graphical games [9] or local-effect/action graph games [12, 2]. (How to efficiently perform iterated very weak dominance has already been studied for partially observable stochastic games [8].)",
                "Finally, we can ask whether some of the algorithms we described (such as the one for iterated strict dominance with mixed strategies) can be made faster. 8.",
                "REFERENCES [1] Krzysztof R. Apt.",
                "Uniform proofs of order independence for various strategy elimination procedures.",
                "Contributions to Theoretical Economics, 4(1), 2004. [2] Nivan A. R. Bhat and Kevin Leyton-Brown.",
                "Computing Nash equilibria of action-graph games.",
                "In UAI, 2004. [3] Ben Blum, Christian R. Shelton, and Daphne Koller.",
                "A continuation method for Nash equilibria in structured games.",
                "In IJCAI, 2003. [4] Vincent Conitzer and Tuomas Sandholm.",
                "Complexity results about Nash equilibria.",
                "In IJCAI, pages 765-771, 2003. [5] Drew Fudenberg and Jean Tirole.",
                "Game Theory.",
                "MIT Press, 1991. [6] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
                "On the order of eliminating dominated strategies.",
                "Operations Research Letters, 9:85-89, 1990. [7] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
                "The complexity of eliminating dominated strategies.",
                "Mathematics of Operation Research, 18:553-565, 1993. [8] Eric A. Hansen, Daniel S. Bernstein, and Shlomo Zilberstein.",
                "Dynamic programming for partially observable stochastic games.",
                "In AAAI, pages 709-715, 2004. [9] Michael Kearns, Michael Littman, and Satinder Singh.",
                "Graphical models for game theory.",
                "In UAI, 2001. [10] Leonid Khachiyan.",
                "A polynomial algorithm in linear programming.",
                "Soviet Math.",
                "Doklady, 20:191-194, 1979. [11] Donald E. Knuth, Christos H. Papadimitriou, and John N Tsitsiklis.",
                "A note on strategy elimination in bimatrix games.",
                "Operations Research Letters, 7(3):103-107, 1988. [12] Kevin Leyton-Brown and Moshe Tennenholtz.",
                "Local-effect games.",
                "In IJCAI, 2003. [13] Richard Lipton, Evangelos Markakis, and Aranyak Mehta.",
                "Playing large games using simple strategies.",
                "In ACM-EC, pages 36-41, 2003. [14] Michael Littman and Peter Stone.",
                "A polynomial-time Nash equilibrium algorithm for repeated games.",
                "In ACM-EC, pages 48-54, 2003. [15] Leslie M. Marx and Jeroen M. Swinkels.",
                "Order independence for iterated weak dominance.",
                "Games and Economic Behavior, 18:219-245, 1997. [16] Leslie M. Marx and Jeroen M. Swinkels.",
                "Corrigendum, order independence for iterated weak dominance.",
                "Games and Economic Behavior, 31:324-329, 2000. [17] Andreu Mas-Colell, Michael Whinston, and Jerry R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [18] Roger Myerson.",
                "Game Theory: Analysis of Conflict.",
                "Harvard University Press, Cambridge, 1991. [19] Martin J Osborne and Ariel Rubinstein.",
                "A Course in Game Theory.",
                "MIT Press, 1994. [20] Christos Papadimitriou.",
                "Algorithms, games and the Internet.",
                "In STOC, pages 749-753, 2001. [21] Ryan Porter, Eugene Nudelman, and Yoav Shoham.",
                "Simple search methods for finding a Nash equilibrium.",
                "In AAAI, pages 664-669, 2004. 97"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Un \"juego de forma normal\" de N-jugador se define de la siguiente manera.",
                "Un \"juego de forma normal\" es dado por un conjunto de jugadores {1, 2 ,..., n};y, para cada jugador I, un conjunto (finito) de estrategias puras σi y una función de utilidad UI: σ1 × σ2 ×...× σn → R (donde ui (σ1, σ2, ..., σn) denota el jugador es la utilidad cuando cada jugador J juega acción σj).",
                "Cualquier vector de estrategias puras en un juego bayesiano define una utilidad (esperada) para cada jugador y, por lo tanto, podemos traducir un juego bayesiano en un \"juego de forma normal\".",
                "En este \"juego de forma normal\", las nociones de dominio y dominio iterado se definen como antes."
            ],
            "translated_text": "",
            "candidates": [
                "Juego de forma normal",
                "juego de forma normal",
                "Juego de forma normal",
                "juego de forma normal",
                "Juego de forma normal",
                "juego de forma normal",
                "Juego de forma normal",
                "juego de forma normal"
            ],
            "error": []
        },
        "nash equilibrium": {
            "translated_key": "equilibrio de Nash",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Complexity of (Iterated) Dominance∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT We study various computational aspects of solving games using dominance and iterated dominance.",
                "We first study both strict and weak dominance (not iterated), and show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve.",
                "We then move on to iterated dominance.",
                "We show that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance.",
                "This allows us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
                "Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].)",
                "Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time.",
                "We then study what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies.",
                "First, we show that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak dominance).",
                "Then, we show that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3).",
                "Finally, we study Bayesian games.",
                "We show that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak ∗ This material is based upon work supported by the National Science Foundation under ITR grants IIS-0121678 and IIS-0427858, and a Sloan Fellowship. dominance).",
                "Finally, we show that iterated dominance using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak dominance).",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In multiagent systems with self-interested agents, the optimal action for one agent may depend on the actions taken by other agents.",
                "In such settings, the agents require tools from game theory to rationally decide on an action.",
                "Game theory offers various formal models of strategic settings-the best-known of which is a game in normal (or matrix) form, specifying a utility (payoff) for each agent for each combination of strategies that the agents choose-as well as solution concepts, which, given a game, specify which outcomes are reasonable (under various assumptions of rationality and common knowledge).",
                "Probably the best-known (and certainly the most-studied) solution concept is that of <br>nash equilibrium</br>.",
                "A <br>nash equilibrium</br> specifies a strategy for each player, in such a way that no player has an incentive to (unilaterally) deviate from the prescribed strategy.",
                "Recently, numerous papers have studied computing Nash equilibria in various settings [9, 4, 12, 3, 13, 14], and the complexity of constructing a <br>nash equilibrium</br> in normal form games has been labeled one of the two most important open problems on the boundary of P today [20].",
                "The problem of computing solutions according to the perhaps more elementary solution concepts of dominance and iterated dominance has received much less attention. (After an early short paper on an easy case [11], the main computational study of these concepts has actually taken place in a paper in the game theory community [7].1 ) A strategy strictly dominates another strategy if it performs strictly 1 This is not to say that computer scientists have ignored 88 better against all vectors of opponent strategies, and weakly dominates it if it performs at least as well against all vectors of opponent strategies, and strictly better against at least one.",
                "The idea is that dominated strategies can be eliminated from consideration.",
                "In iterated dominance, the elimination proceeds in rounds, and becomes easier as more strategies are eliminated: in any given round, the dominating strategy no longer needs to perform better than or as well as the dominated strategy against opponent strategies that were eliminated in earlier rounds.",
                "Computing solutions according to (iterated) dominance is important for at least the following reasons: 1) it can be computationally easier than computing (for instance) a <br>nash equilibrium</br> (and therefore it can be useful as a preprocessing step in computing a <br>nash equilibrium</br>), and 2) (iterated) dominance requires a weaker rationality assumption on the players than (for instance) Nash equilibrium, and therefore solutions derived according to it are more likely to occur.",
                "In this paper, we study some fundamental computational questions concerning dominance and iterated dominance, including how hard it is to check whether a given strategy can be eliminated by each of the variants of these notions.",
                "The rest of the paper is organized as follows.",
                "In Section 2, we briefly review definitions and basic properties of normal form games, strict and weak dominance, and iterated strict and weak dominance.",
                "In the remaining sections, we study computational aspects of dominance and iterated dominance.",
                "In Section 3, we study one-shot (not iterated) dominance.",
                "In Section 4, we study iterated dominance.",
                "In Section 5, we study dominance and iterated dominance when the dominating strategy can only place probability on a few pure strategies.",
                "Finally, in Section 6, we study dominance and iterated dominance in Bayesian games. 2.",
                "DEFINITIONS AND BASIC PROPERTIES In this section, we briefly review normal form games, as well as dominance and iterated dominance (both strict and weak).",
                "An n-player normal form game is defined as follows.",
                "Definition 1.",
                "A normal form game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of pure strategies Σi and a utility function ui : Σ1 × Σ2 × . . . × Σn → R (where ui(σ1, σ2, . . . , σn) denotes player is utility when each player j plays action σj).",
                "The two main notions of dominance are defined as follows.",
                "Definition 2.",
                "Player is strategy σi is said to be strictly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
                "Player is strategy σi is said to be weakly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) ≥ ui(σi, σ−i), and for at least one vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
                "In this definition, it is sometimes allowed for the dominating strategy σi to be a mixed strategy, that is, a probability distribution over pure strategies.",
                "In this case, the utilities in dominance altogether.",
                "For example, simple dominance checks are sometimes used as a subroutine in searching for Nash equilibria [21]. the definition are the expected utilities.2 There are other notions of dominance, such as very weak dominance (in which no strict inequality is required, so two strategies can dominate each other), but we will not study them here.",
                "When we are looking at the dominance relations for player i, the other players (−i) can be thought of as a single player.3 Therefore, in the rest of the paper, when we study one-shot (not iterated) dominance, we will focus without loss of generality on two-player games.4 In two-player games, we will generally refer to the players as r (row) and c (column) rather than 1 and 2.",
                "In iterated dominance, dominated strategies are removed from the game, and no longer have any effect on future dominance relations.",
                "Iterated dominance can eliminate more strategies than dominance, as follows. σr may originally not dominate σr because the latter performs better against σc; but then, once σc is removed because it is dominated by σc, σr dominates σr, and the latter can be removed.",
                "For example, in the following game, R can be removed first, after which D is dominated.",
                "L R U 1, 1 0, 0 D 0, 1 1, 0 Either strict or weak dominance can be used in the definition of iterated dominance.",
                "We note that the process of iterated dominance is never helped by removing a dominated mixed strategy, for the following reason.",
                "If σi gives player i a higher utility than σi against mixed strategy σj for player j = i (and strategies σ−{i,j} for the other players), then for at least one pure strategy σj that σj places positive probability on, σi must perform better than σi against σj (and strategies σ−{i,j} for the other players).",
                "Thus, removing the mixed strategy σj does not introduce any new dominances.",
                "More detailed discussions and examples can be found in standard texts on microeconomics or game theory [17, 5].",
                "We are now ready to move on to the core of this paper. 3.",
                "DOMINANCE (NOT ITERATED) In this section, we study the notion of one-shot (not iterated) dominance.",
                "As a first observation, checking whether a given strategy is strictly (weakly) dominated by some pure strategy is straightforward, by checking, for every pure strategy for that player, whether the latter strategy performs strictly better against all the opponents strategies (at least as well against all the opponents strategies, and strictly 2 The dominated strategy σi is, of course, also allowed to be mixed, but this has no technical implications for the paper: when we study one-shot dominance, we ask whether a given strategy is dominated, and it does not matter whether the given strategy is pure or mixed; when we study iterated dominance, there is no use in eliminating mixed strategies, as we will see shortly. 3 This player may have a very large strategy space (one pure strategy for every vector of pure strategies for the players that are being replaced).",
                "Nevertheless, this will not result in an increase in our representation size, because the original representation already had to specify utilities for each of these vectors. 4 We note that a restriction to two-player games would not be without loss of generality for iterated dominance.",
                "This is because for iterated dominance, we need to look at the dominated strategies of each individual player, so we cannot merge any players. 89 better against at least one).5 Next, we show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time by solving a single linear program. (Similar linear programs have been given before [18]; we present the result here for completeness, and because we will build on the linear programs given below in Theorem 6.)",
                "Proposition 1.",
                "Given the row players utilities, a subset Dr of the row players pure strategies Σr, and a distinguished strategy σ∗ r for the row player, we can check in time polynomial in the size of the game (by solving a single linear program of polynomial size) whether there exists some mixed strategy σr, that places positive probability only on strategies in Dr and dominates σ∗ r , both for strict and for weak dominance.",
                "Proof.",
                "Let pdr be the probability that σr places on dr ∈ Dr. We will solve a single linear program in each of our algorithms; linear programs can be solved in polynomial time [10].",
                "For strict dominance, the question is whether the pdr can be set so that for every pure strategy for the column player σc ∈ Σc, dr∈Dr pdr ur(dr, σc) > ur(σ∗ r , σc).",
                "Because the inequality must be strict, we cannot solve this directly by linear programming.",
                "We proceed as follows.",
                "Because the game is finite, we may assume without loss of generality that all utilities are positive (if not, simply add a constant to all utilities.)",
                "Solve the following linear program: minimize dr∈Dr pdr such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc).",
                "If σ∗ r is strictly dominated by some mixed strategy, this linear program has a solution with objective value < 1. (The dominating strategy is a feasible solution with objective value exactly 1.",
                "Because no constraint is binding for this solution, we can reduce one of the probabilities slightly without affecting feasibility, thereby obtaining a solution with objective value < 1.)",
                "Moreover, if this linear program has a solution with objective value < 1, there is a mixed strategy strictly dominating σ∗ r , which can be obtained by taking the LP solution and adding the remaining probability to any strategy (because all the utilities are positive, this will add to the left side of any inequality, so all inequalities will become strict).",
                "For weak dominance, we can solve the following linear program: maximize σc∈Σc (( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc)) such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc); dr∈Dr pdr = 1.",
                "If σ∗ r is weakly dominated by some mixed strategy, then that mixed strategy is a feasible solution to this program with objective value > 0, because for at least one strategy σc ∈ Σc we have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0.",
                "On the other hand, if this program has a solution with objective value > 0, then for at least one strategy σc ∈ Σc we 5 Recall that the assumption of a single opponent (that is, the assumption of two players) is without loss of generality for one-shot dominance. must have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0, and thus the linear programs solution is a weakly dominating mixed strategy. 4.",
                "ITERATED DOMINANCE We now move on to iterated dominance.",
                "It is well-known that iterated strict dominance is path-independent [6, 19]that is, if we remove dominated strategies until no more dominated strategies remain, in the end the remaining strategies for each player will be the same, regardless of the order in which strategies are removed.",
                "Because of this, to see whether a given strategy can be eliminated by iterated strict dominance, all that needs to be done is to repeatedly remove strategies that are strictly dominated, until no more dominated strategies remain.",
                "Because we can check in polynomial time whether any given strategy is dominated (whether or not dominance by mixed strategies is allowed, as described in Section 3), this whole procedure takes only polynomial time.",
                "In the case of iterated dominance by pure strategies with two players, Knuth et al. [11] slightly improve on (speed up) the straightforward implementation of this procedure by keeping track of, for each ordered pair of strategies for a player, the number of opponent strategies that prevent the first strategy from dominating the second.",
                "Hereby the runtime for an m × n game is reduced from O((m + n)4 ) to O((m + n)3 ). (Actually, they only study very weak dominance (for which no strict inequalities are required), but the approach is easily extended.)",
                "In contrast, iterated weak dominance is known to be pathdependent.6 For example, in the following game, using iterated weak dominance we can eliminate M first, and then D, or R first, and then U. L M R U 1, 1 0, 0 1, 0 D 1, 1 1, 0 0, 0 Therefore, while the procedure of removing weakly dominated strategies until no more weakly dominated strategies remain can certainly be executed in polynomial time, which strategies survive in the end depends on the order in which we remove the dominated strategies.",
                "We will investigate two questions for iterated weak dominance: whether a given strategy is eliminated in some path, and whether there is a path to a unique solution (one pure strategy left per player).",
                "We will show that both of these problems are computationally hard.",
                "Definition 3.",
                "Given a game in normal form and a distinguished strategy σ∗ , IWD-STRATEGY-ELIMINATION asks whether there is some path of iterated weak dominance that eliminates σ∗ .",
                "Given a game in normal form, IWDUNIQUE-SOLUTION asks whether there is some path of iterated weak dominance that leads to a unique solution (one strategy left per player).",
                "The following lemma shows a special case of normal form games in which allowing for weak dominance by mixed strategies (in addition to weak dominance by pure strategies) does 6 There is, however, a restriction of weak dominance called nice weak dominance which is path-independent [15, 16].",
                "For an overview of path-independence results, see Apt [1]. 90 not help.",
                "We will prove the hardness results in this setting, so that they will hold whether or not dominance by mixed strategies is allowed.",
                "Lemma 1.",
                "Suppose that all the utilities in a game are in {0, 1}.",
                "Then every pure strategy that is weakly dominated by a mixed strategy is also weakly dominated by a pure strategy.",
                "Proof.",
                "Suppose pure strategy σ is weakly dominated by mixed strategy σ∗ .",
                "If σ gets a utility of 1 against some opponent strategy (or vector of opponent strategies if there are more than 2 players), then all the pure strategies that σ∗ places positive probability on must also get a utility of 1 against that opponent strategy (or else the expected utility would be smaller than 1).",
                "Moreover, at least one of the pure strategies that σ∗ places positive probability on must get a utility of 1 against an opponent strategy that σ gets 0 against (or else the inequality would never be strict).",
                "It follows that this pure strategy weakly dominates σ.",
                "We are now ready to prove the main results of this section.",
                "Theorem 1.",
                "IWD-STRATEGY-ELIMINATION is NPcomplete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed.",
                "Proof.",
                "The problem is in NP because given a sequence of strategies to be eliminated, we can easily check whether this is a valid sequence of eliminations (even when dominance by mixed strategies is allowed, using Proposition 1).",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following IWD-STRATEGY-ELIMINATION instance. (In this instance, we will specify that certain strategies are uneliminable.",
                "A strategy σr can be made uneliminable, even when 0 and 1 are the only allowed utilities, by adding another strategy σr and another opponent strategy σc, so that: 1. σr and σr are the only strategies that give the row player a utility of 1 against σc. 2. σr and σr always give the row player the same utility. 3. σc is the only strategy that gives the column player a utility of 1 against σr, but otherwise σc always gives the column player utility 0.",
                "This makes it impossible to eliminate any of these three strategies.",
                "We will not explicitly specify the additional strategies to make the proof more legible.)",
                "In this proof, we will denote row player strategies by s, and column player strategies by t, to improve legibility.",
                "Let the row players pure strategy set be given as follows.",
                "For every variable v ∈ V , the row player has corresponding strategies s1 +v, s2 +v, s1 −v, s2 −v.",
                "Additionally, the row player has the following 2 strategies: s1 0 and s2 0, where s2 0 = σ∗ r (that is, it is the strategy we seek to eliminate).",
                "Finally, for every clause c ∈ C, the row player has corresponding strategies s1 c (uneliminable) and s2 c. Let the column players pure strategy set be given as follows.",
                "For every variable v ∈ V , the column player has a corresponding strategy tv.",
                "For every clause c ∈ C, the column player has a corresponding strategy tc, and additionally, for every literal l ∈ L that occurs in c, a strategy tc,l.",
                "For every variable v ∈ V , the column player has corresponding strategies t+v, t−v (both uneliminable).",
                "Finally, the column player has three additional strategies: t1 0 (uneliminable), t2 0, and t1.",
                "The utility function for the row player is given as follows: • ur(s1 +v, tv) = 0 for all v ∈ V ; • ur(s2 +v, tv) = 1 for all v ∈ V ; • ur(s1 −v, tv) = 1 for all v ∈ V ; • ur(s2 −v, tv) = 0 for all v ∈ V ; • ur(s1 +v, t1) = 1 for all v ∈ V ; • ur(s2 +v, t1) = 0 for all v ∈ V ; • ur(s1 −v, t1) = 0 for all v ∈ V ; • ur(s2 −v, t1) = 1 for all v ∈ V ; • ur(sb +v, t+v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sb −v, t−v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sl, t) = 0 otherwise for all l ∈ L and t ∈ S2; • ur(s1 0, tc) = 0 for all c ∈ C; • ur(s2 0, tc) = 1 for all c ∈ C; • ur(sb 0, t1 0) = 1 for all b ∈ {1, 2}; • ur(s1 0, t2 0) = 1; • ur(s2 0, t2 0) = 0; • ur(sb 0, t) = 0 otherwise for all b ∈ {1, 2} and t ∈ S2; • ur(sb c, t) = 0 otherwise for all c ∈ C and b ∈ {1, 2}; and the row players utility is 0 in every other case.",
                "The utility function for the column player is given as follows: • uc(s, tv) = 0 for all v ∈ V and s ∈ S1; • uc(s, t1) = 0 for all s ∈ S1; • uc(s2 l , tc) = 1 for all c ∈ C and l ∈ L where l ∈ c (literal l occurs in clause c); • uc(s2 l2 , tc,l1 ) = 1 for all c ∈ C and l1, l2 ∈ L, l1 = l2 where l2 ∈ c; • uc(s1 c, tc) = 1 for all c ∈ C; • uc(s2 c, tc) = 0 for all c ∈ C; • uc(sb c, tc,l) = 1 for all c ∈ C, l ∈ L, and b ∈ {1, 2}; • uc(s2, tc) = uc(s2, tc,l) = 0 otherwise for all c ∈ C and l ∈ L; and the column players utility is 0 in every other case.",
                "We now show that the two instances are equivalent.",
                "First, suppose there is a solution to the satisfiability instance: that is, a truth-value assignment to the variables in V such that all clauses are satisfied.",
                "Then, consider the following sequence of eliminations in our game: 1.",
                "For every variable v that is set to true in the assignment, eliminate tv (which gives the column player utility 0 everywhere). 2.",
                "Then, for every variable v that is set to true in the assignment, eliminate s2 +v using s1 +v (which is possible because tv has been eliminated, and because t1 has not been eliminated (yet)). 3.",
                "Now eliminate t1 (which gives the column player utility 0 everywhere). 4.",
                "Next, for every variable v that is set to false in the assignment, eliminate s2 −v using s1 −v (which is possible because t1 has been eliminated, and because tv has not been eliminated (yet)). 5.",
                "For every clause c which has the variable corresponding to one of its positive literals l = +v set to true in the assignment, eliminate tc using tc,l (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 6.",
                "For every clause c which has the variable corresponding to one of its negative literals l = −v set to false in the assignment, eliminate tc using tc,l 91 (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 7.",
                "Because the assignment satisfied the formula, all the tc have now been eliminated.",
                "Thus, we can eliminate s2 0 = σ∗ r using s1 0.",
                "It follows that there is a solution to the IWD-STRATEGY-ELIMINATION instance.",
                "Now suppose there is a solution to the IWD-STRATEGYELIMINATION instance.",
                "By Lemma 1, we can assume that all the dominances are by pure strategies.",
                "We first observe that only s1 0 can eliminate s2 0 = σ∗ r , because it is the only other strategy that gets the row player a utility of 1 against t1 0, and t1 0 is uneliminable.",
                "However, because s2 0 performs better than s1 0 against the tc strategies, it follows that all of the tc strategies must be eliminated.",
                "For each c ∈ C, the strategy tc can only be eliminated by one of the strategies tc,l (with the same c), because these are the only other strategies that get the column player a utility of 1 against s1 c, and s1 c is uneliminable.",
                "But, in order for some tc,l to eliminate tc, s2 l must be eliminated first.",
                "Only s1 l can eliminate s2 l , because it is the only other strategy that gets the row player a utility of 1 against tl, and tl is uneliminable.",
                "We next show that for every v ∈ V only one of s2 +v, s2 −v can be eliminated.",
                "This is because in order for s1 +v to eliminate s2 +v, tv needs to have been eliminated and t1, not (so tv must be eliminated before t1); but in order for s1 −v to eliminate s2 −v, t1 needs to have been eliminated and tv, not (so t1 must be eliminated before tv).",
                "So, set v to true if s2 +v is eliminated, and to false otherwise Because by the above, for every clause c, one of the s2 l with l ∈ c must be eliminated, it follows that this is a satisfying assignment to the satisfiability instance.",
                "Using Theorem 1, it is now (relatively) easy to show that IWD-UNIQUE-SOLUTION is also NP-complete under the same restrictions.",
                "Theorem 2.",
                "IWD-UNIQUE-SOLUTION is NP-complete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed.",
                "Proof.",
                "Again, the problem is in NP because we can nondeterministically choose the sequence of eliminations and verify whether it is correct.",
                "To show NP-hardness, we reduce an arbitrary IWD-STRATEGY-ELIMINATION instance to the following IWD-UNIQUE-SOLUTION instance.",
                "Let all the strategies for each player from the original instance remain part of the new instance, and let the utilities resulting from the players playing a pair of these strategies be the same.",
                "We add three additional strategies σ1 r , σ2 r , σ3 r for the row player, and three additional strategies σ1 c , σ2 c , σ3 c for the column player.",
                "Let the additional utilities be as follows: • ur(σr, σj c) = 1 for all σr /∈ {σ1 r , σ2 r , σ3 r } and j ∈ {2, 3}; • ur(σi r, σc) = 1 for all i ∈ {1, 2, 3} and σc /∈ {σ2 c , σ3 c }; • ur(σi r, σ2 c ) = 1 for all i ∈ {2, 3}; • ur(σ1 r , σ3 c ) = 1; • and the row players utility is 0 in all other cases involving a new strategy. • uc(σ3 r , σc) = 1 for all σc /∈ {σ1 c , σ2 c , σ3 c }; • uc(σ∗ r , σj c) = 1 for all j ∈ {2, 3} (σ∗ r is the strategy to be eliminated in the original instance); • uc(σi r, σ1 c ) = 1 for all i ∈ {1, 2}; • ur(σ1 r , σ2 c ) = 1; • ur(σ2 r , σ3 c ) = 1; • and the column players utility is 0 in all other cases involving a new strategy.",
                "We proceed to show that the two instances are equivalent.",
                "First suppose there exists a solution to the original IWDSTRATEGY-ELIMINATION instance.",
                "Then, perform the same sequence of eliminations to eliminate σ∗ r in the new IWD-UNIQUE-SOLUTION instance. (This is possible because at any stage, any weak dominance for the row player in the original instance is still a weak dominance in the new instance, because the two strategies utilities for the row player are the same when the column player plays one of the new strategies; and the same is true for the column player.)",
                "Once σ∗ r is eliminated, let σ1 c eliminate σ2 c . (It performs better against σ2 r .)",
                "Then, let σ1 r eliminate all the other remaining strategies for the row player. (It always performs better against either σ1 c or σ3 c .)",
                "Finally, σ1 c is the unique best response against σ1 r among the column players remaining strategies, so let it eliminate all the other remaining strategies for the column player.",
                "Thus, there exists a solution to the IWD-UNIQUE-SOLUTION instance.",
                "Now suppose there exists a solution to the IWD-UNIQUESOLUTION instance.",
                "By Lemma 1, we can assume that all the dominances are by pure strategies.",
                "We will show that none of the new strategies (σ1 r , σ2 r , σ3 r , σ1 c , σ2 c , σ3 c ) can either eliminate another strategy, or be eliminated before σ∗ r is eliminated.",
                "Thus, there must be a sequence of eliminations ending in the elimination of σ∗ r , which does not involve any of the new strategies, and is therefore a valid sequence of eliminations in the original game (because all original strategies perform the same against each new strategy).",
                "We now show that this is true by exhausting all possibilities for the first elimination before σ∗ r is eliminated that involves a new strategy.",
                "None of the σi r can be eliminated by a σr /∈ {σ1 r , σ2 r , σ3 r }, because the σi r perform better against σ1 c . σ1 r cannot eliminate any other strategy, because it always performs poorer against σ2 c . σ2 r and σ3 r are equivalent from the row players perspective (and thus cannot eliminate each other), and cannot eliminate any other strategy because they always perform poorer against σ3 c .",
                "None of the σj c can be eliminated by a σc /∈ {σ1 c , σ2 c , σ3 c }, because the σj c always perform better against either σ1 r or σ2 r . σ1 c cannot eliminate any other strategy, because it always performs poorer against either σ∗ r or σ3 r . σ2 c cannot eliminate any other strategy, because it always performs poorer against σ2 r or σ3 r . σ3 c cannot eliminate any other strategy, because it always performs poorer against σ1 r or σ3 r .",
                "Thus, there exists a solution to the IWDSTRATEGY-ELIMINATION instance.",
                "A slightly weaker version of the part of Theorem 2 concerning dominance by pure strategies only is the main result of Gilboa et al. [7]. (Besides not proving the result for dominance by mixed strategies, the original result was weaker because it required utilities {0, 1, 2, 3, 4, 5, 6, 7, 8} rather than just {0, 1} (and because of this, our Lemma 1 cannot be applied to it to get the result for mixed strategies).) 5. (ITERATED) DOMINANCE USING MIXED STRATEGIES WITH SMALL SUPPORTS When showing that a strategy is dominated by a mixed strategy, there are several reasons to prefer exhibiting a 92 dominating strategy that places positive probability on as few pure strategies as possible.",
                "First, this will reduce the number of bits required to specify the dominating strategy (and thus the proof of dominance can be communicated quicker): if the dominating mixed strategy places positive probability on only k strategies, then it can be specified using k real numbers for the probabilities, plus k log m (where m is the number of strategies for the player under consideration) bits to indicate which strategies are used.",
                "Second, the proof of dominance will be cleaner: for a dominating mixed strategy, it is typically (always in the case of strict dominance) possible to spread some of the probability onto any unused pure strategy and still have a dominating strategy, but this obscures which pure strategies are the ones that are key in making the mixed strategy dominating.",
                "Third, because (by the previous) the argument for eliminating the dominated strategy is simpler and easier to understand, it is more likely to be accepted.",
                "Fourth, the level of risk neutrality required for the argument to work is reduced, at least in the extreme case where dominance by a single pure strategy can be exhibited (no risk neutrality is required here).",
                "This motivates the following problem.",
                "Definition 4 (MINIMUM-DOMINATING-SET).",
                "We are given the row players utilities of a game in normal form, a distinguished strategy σ∗ for the row player, a specification of whether the dominance should be strict or weak, and a number k. We are asked whether there exists a mixed strategy σ for the row player that places positive probability on at most k pure strategies, and dominates σ∗ in the required sense.",
                "Unfortunately, this problem is NP-complete.",
                "Theorem 3.",
                "MINIMUM-DOMINATING-SET is NPcomplete, both for strict and for weak dominance.",
                "Proof.",
                "The problem is in NP because we can nondeterministically choose a set of at most k strategies to give positive probability, and decide whether we can dominate σ∗ with these k strategies as described in Proposition 1.",
                "To show NP-hardness, we reduce an arbitrary SET-COVER instance (given a set S, subsets S1, S2, . . . , Sr, and a number t, can all of S be covered by at most t of the subsets?) to the following MINIMUM-DOMINATING-SET instance.",
                "For every element s ∈ S, there is a pure strategy σs for the column player.",
                "For every subset Si, there is a pure strategy σSi for the row player.",
                "Finally, there is the distinguished pure strategy σ∗ for the row player.",
                "The row players utilities are as follows: ur(σSi , σs) = t + 1 if s ∈ Si; ur(σSi , σs) = 0 if s /∈ Si; ur(σ∗ , σs) = 1 for all s ∈ S. Finally, we let k = t. We now proceed to show that the two instances are equivalent.",
                "First suppose there exists a solution to the SET-COVER instance.",
                "Without loss of generality, we can assume that there are exactly k subsets in the cover.",
                "Then, for every Si that is in the cover, let the dominating strategy σ place exactly 1 k probability on the corresponding pure strategy σSi .",
                "Now, if we let n(s) be the number of subsets in the cover containing s (we observe that that n(s) ≥ 1), then for every strategy σs for the column player, the row players expected utility for playing σ when the column player is playing σs is u(σ, σs) = n(s) k (k + 1) ≥ k+1 k > 1 = u(σ∗ , σs).",
                "So σ strictly (and thus also weakly) dominates σ∗ , and there exists a solution to the MINIMUM-DOMINATING-SET instance.",
                "Now suppose there exists a solution to the MINIMUMDOMINATING-SET instance.",
                "Consider the (at most k) pure strategies of the form σSi on which the dominating mixed strategy σ places positive probability, and let T be the collection of the corresponding subsets Si.",
                "We claim that T is a cover.",
                "For suppose there is some s ∈ S that is not in any of the subsets in T .",
                "Then, if the column player plays σs, the row player (when playing σ) will always receive utility 0-as opposed to the utility of 1 the row player would receive for playing σ∗ , contradicting the fact that σ dominates σ∗ (whether this dominance is weak or strict).",
                "It follows that there exists a solution to the SET-COVER instance.",
                "On the other hand, if we require that the dominating strategy only places positive probability on a very small number of pure strategies, then it once again becomes easy to check whether a strategy is dominated.",
                "Specifically, to find out whether player is strategy σ∗ is dominated by a strategy that places positive probability on only k pure strategies, we can simply check, for every subset of k of player is pure strategies, whether there is a strategy that places positive probability only on these k strategies and dominates σ∗ , using Proposition 1.",
                "This requires only O(|Σi|k ) such checks.",
                "Thus, if k is a constant, this constitutes a polynomial-time algorithm.",
                "A natural question to ask next is whether iterated strict dominance remains computationally easy when dominating strategies are required to place positive probability on at most k pure strategies, where k is a small constant. (We have already shown in Section 4 that iterated weak dominance is hard even when k = 1, that is, only dominance by pure strategies is allowed.)",
                "Of course, if iterated strict dominance were path-independent under this restriction, computational easiness would follow as it did in Section 4.",
                "However, it turns out that this is not the case.",
                "Observation 1.",
                "If we restrict the dominating strategies to place positive probability on at most two pure strategies, iterated strict dominance becomes path-dependent.",
                "Proof.",
                "Consider the following game: 7, 1 0, 0 0, 0 0, 0 7, 1 0, 0 3, 0 3, 0 0, 0 0, 0 0, 0 3, 1 1, 0 1, 0 1, 0 Let (i, j) denote the outcome in which the row player plays the ith row and the column player plays the jth column.",
                "Because (1, 1), (2, 2), and (4, 3) are all Nash equilibria, none of the column players pure strategies will ever be eliminated, and neither will rows 1, 2, and 4.",
                "We now observe that randomizing uniformly over rows 1 and 2 dominates row 3, and randomizing uniformly over rows 3 and 4 dominates row 5.",
                "However, if we eliminate row 3 first, it becomes impossible to dominate row 5 without randomizing over at least 3 pure strategies.",
                "Indeed, iterated strict dominance turns out to be hard even when k = 3.",
                "Theorem 4.",
                "If we restrict the dominating strategies to place positive probability on at most three pure strategies, it becomes NP-complete to decide whether a given strategy can be eliminated using iterated strict dominance. 93 Proof.",
                "The problem is in NP because given a sequence of strategies to be eliminated, we can check in polynomial time whether this is a valid sequence of eliminations (for any strategy to be eliminated, we can check, for every subset of three other strategies, whether there is a strategy placing positive probability on only these three strategies that dominates the strategy to be eliminated, using Proposition 1).",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following two-player game.",
                "For every variable v ∈ V , the row player has strategies s+v, s−v, s1 v, s2 v, s3 v, s4 v, and the column player has strategies t1 v, t2 v, t3 v, t4 v. For every clause c ∈ C, the row player has a strategy sc, and the column player has a strategy tc, as well as, for every literal l occurring in c, an additional strategy tl c. The row player has two additional strategies s1 and s2. (s2 is the strategy that we are seeking to eliminate.)",
                "Finally, the column player has one additional strategy t1.",
                "The utility function for the row player is given as follows (where is some sufficiently small number): • ur(s+v, tj v) = 4 if j ∈ {1, 2}, for all v ∈ V ; • ur(s+v, tj v) = 1 if j ∈ {3, 4}, for all v ∈ V ; • ur(s−v, tj v) = 1 if j ∈ {1, 2}, for all v ∈ V ; • ur(s−v, tj v) = 4 if j ∈ {3, 4}, for all v ∈ V ; • ur(s+v, t) = ur(s−v, t) = 0 for all v ∈ V and t /∈ {t1 v, t2 v, t3 v, t4 v}; • ur(si v, ti v) = 13 for all v ∈ V and i ∈ {1, 2, 3, 4}; • ur(si v, t) = for all v ∈ V , i ∈ {1, 2, 3, 4}, and t = ti v; • ur(sc, tc) = 2 for all c ∈ C; • ur(sc, t) = 0 for all c ∈ C and t = tc; • ur(s1, t1) = 1 + ; • ur(s1, t) = for all t = t1; • ur(s2, t1) = 1; • ur(s2, tc) = 1 for all c ∈ C; • ur(s2, t) = 0 for all t /∈ {t1} ∪ {tc : c ∈ C}.",
                "The utility function for the column player is given as follows: • uc(si v, ti v) = 1 for all v ∈ V and i ∈ {1, 2, 3, 4}; • uc(s, ti v) = 0 for all v ∈ V , i ∈ {1, 2, 3, 4}, and s = si v; • uc(sc, tc) = 1 for all c ∈ C; • uc(sl, tc) = 1 for all c ∈ C and l ∈ L occurring in c; • uc(s, tc) = 0 for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c}; • uc(sc, tl c) = 1 + for all c ∈ C; • uc(sl , tl c) = 1 + for all c ∈ C and l = l occurring in c; • uc(s, tl c) = for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c, l = l }; • uc(s2, t1) = 1; • uc(s, t1) = 0 for all s = s2.",
                "We now show that the two instances are equivalent.",
                "First, suppose that there is a solution to the satisfiability instance.",
                "Then, consider the following sequence of eliminations in our game: 1.",
                "For every variable v that is set to true in the satisfying assignment, eliminate s+v with the mixed strategy σr that places probability 1/3 on s−v, probability 1/3 on s1 v, and probability 1/3 on s2 v. (The expected utility of playing σr against t1 v or t2 v is 14/3 > 4; against t3 v or t4 v, it is 4/3 > 1; and against anything else it is 2 /3 > 0.",
                "Hence the dominance is valid.) 2.",
                "Similarly, for every variable v that is set to false in the satisfying assignment, eliminate s−v with the mixed strategy σr that places probability 1/3 on s+v, probability 1/3 on s3 v, and probability 1/3 on s4 v. (The expected utility of playing σr against t1 v or t2 v is 4/3 > 1; against t3 v or t4 v, it is 14/3 > 4; and against anything else it is 2 /3 > 0.",
                "Hence the dominance is valid.) 3.",
                "For every c ∈ C, eliminate tc with any tl c for which l was set to true in the satisfying assignment. (This is a valid dominance because tl c performs better than tc against any strategy other than sl, and we eliminated sl in step 1 or in step 2.) 4.",
                "Finally, eliminate s2 with s1. (This is a valid dominance because s1 performs better than s2 against any strategy other than those in {tc : c ∈ C}, which we eliminated in step 3.)",
                "Hence, there is an elimination path that eliminates s2.",
                "Now, suppose that there is an elimination path that eliminates s2.",
                "The strategy that eventually dominates s2 must place most of its probability on s1, because s1 is the only other strategy that performs well against t1, which cannot be eliminated before s2.",
                "But, s1 performs significantly worse than s2 against any strategy tc with c ∈ C, so it follows that all these strategies must be eliminated first.",
                "Each strategy tc can only be eliminated by a strategy that places most of its weight on the corresponding strategies tl c with l ∈ c, because they are the only other strategies that perform well against sc, which cannot be eliminated before tc.",
                "But, each strategy tl c performs significantly worse than tc against sl, so it follows that for every clause c, for one of the literals l occurring in it, sl must be eliminated first.",
                "Now, strategies of the form tj v will never be eliminated because they are the unique best responses to the corresponding strategies sj v (which are, in turn, the best responses to the corresponding tj v).",
                "As a result, if strategy s+v (respectively, s−v) is eliminated, then its opposite strategy s−v (respectively, s+v) can no longer be eliminated, for the following reason.",
                "There is no other pure strategy remaining that gets a significant utility against more than one of the strategies t1 v, t2 v, t3 v, t4 v, but s−v (respectively, s+v) gets significant utility against all 4, and therefore cannot be dominated by a mixed strategy placing positive probability on at most 3 strategies.",
                "It follows that for each v ∈ V , at most one of the strategies s+v, s−v is eliminated, in such a way that for every clause c, for one of the literals l occurring in it, sl must be eliminated.",
                "But then setting all the literals l such that sl is eliminated to true constitutes a solution to the satisfiability instance.",
                "In the next section, we return to the setting where there is no restriction on the number of pure strategies on which a dominating mixed strategy can place positive probability. 6. (ITERATED) DOMINANCE IN BAYESIAN GAMES So far, we have focused on normal form games that are flatly represented (that is, every matrix entry is given ex94 plicitly).",
                "However, for many games, the flat representation is too large to write down explicitly, and instead, some representation that exploits the structure of the game needs to be used.",
                "Bayesian games, besides being of interest in their own right, can be thought of as a useful structured representation of normal form games, and we will study them in this section.",
                "In a Bayesian game, each player first receives privately held preference information (the players type) from a distribution, which determines the utility that that player receives for every outcome of (that is, vector of actions played in) the game.",
                "After receiving this type, the player plays an action based on it.7 Definition 5.",
                "A Bayesian game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of actions Ai, a (finite) type space Θi with a probability distribution πi over it, and a utility function ui : Θi × A1 × A2 × . . . × An → R (where ui(θi, a1, a2, . . . , an) denotes player is utility when is type is θi and each player j plays action aj).",
                "A pure strategy in a Bayesian game is a mapping from types to actions, σi : Θi → Ai, where σi(θi) denotes the action that player i plays for type θi.",
                "Any vector of pure strategies in a Bayesian game defines an (expected) utility for each player, and therefore we can translate a Bayesian game into a normal form game.",
                "In this normal form game, the notions of dominance and iterated dominance are defined as before.",
                "However, the normal form representation of the game is exponentially larger than the Bayesian representation, because each player i has |Ai||Θi| distinct pure strategies.",
                "Thus, any algorithm for Bayesian games that relies on expanding the game to its normal form will require exponential time.",
                "Specifically, our easiness results for normal form games do not directly transfer to this setting.",
                "In fact, it turns out that checking whether a strategy is dominated by a pure strategy is hard in Bayesian games.",
                "Theorem 5.",
                "In a Bayesian game, it is NP-complete to decide whether a given pure strategy σr : Θr → Ar is dominated by some other pure strategy (both for strict and weak dominance), even when the row players distribution over types is uniform.",
                "Proof.",
                "The problem is in NP because it is easy to verify whether a candidate dominating strategy is indeed a dominating strategy.",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a set of clauses C using variables from V ) to the following Bayesian game.",
                "Let the row players action set be Ar = {t, f, 0} and let the column players action set be Ac = {ac : c ∈ C}.",
                "Let the row players type set be Θr = {θv : v ∈ V }, with a distribution πr that is uniform.",
                "Let the row players utility function be as follows: • ur(θv, 0, ac) = 0 for all v ∈ V and c ∈ C; • ur(θv, b, ac) = |V | for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b satisfies c; • ur(θv, b, ac) = −1 for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b does not satisfy c. 7 In general, a player can also receive a signal about the other players preferences, but we will not concern ourselves with that here.",
                "Let the pure strategy to be dominated be the one that plays 0 for every type.",
                "We show that the strategy is dominated by a pure strategy if and only if there is a solution to the satisfiability instance.",
                "First, suppose there is a solution to the satisfiability instance.",
                "Then, let σd r be given by: σd r (θv) = t if v is set to true in the solution to the satisfiability instance, and σd r (θv) = f otherwise.",
                "Then, against any action ac by the column player, there is at least one type θv such that either +v ∈ c and σd r (θv) = t, or −v ∈ c and σd r (θv) = f. Thus, the row players expected utility against action ac is at least |V | |V | − |V |−1 |V | = 1 |V | > 0.",
                "So, σd r is a dominating strategy.",
                "Now, suppose there is a dominating pure strategy σd r .",
                "This dominating strategy must play t or f for at least one type.",
                "Thus, against any ac by the column player, there must at least be some type θv for which ur(θv, σd r (θv), ac) > 0.",
                "That is, there must be at least one variable v such that setting v to σd r (θv) satifies c. But then, setting each v to σd r (θv) must satisfy all the clauses.",
                "So a satisfying assignment exists.",
                "However, it turns out that we can modify the linear programs from Proposition 1 to obtain a polynomial time algorithm for checking whether a strategy is dominated by a mixed strategy in Bayesian games.",
                "Theorem 6.",
                "In a Bayesian game, it can be decided in polynomial time whether a given (possibly mixed) strategy σr is dominated by some other mixed strategy, using linear programming (both for strict and weak dominance).",
                "Proof.",
                "We can modify the linear programs presented in Proposition 1 as follows.",
                "For strict dominance, again assuming without loss of generality that all the utilities in the game are positive, use the following linear program (in which pσr r (θr, ar) is the probability that σr, the strategy to be dominated, places on ar for type θr): minimize θr∈Θr ar∈Ar pr(ar) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) ≤ 1.",
                "Assuming that π(θr) > 0 for all θr ∈ Θr, this program will return an objective value smaller than |Θr| if and only if σr is strictly dominated, by reasoning similar to that done in Proposition 1.",
                "For weak dominance, use the following linear program: maximize ac∈Ac ( θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar)− θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar)) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) = 1.",
                "This program will return an objective value greater than 0 if and only if σr is weakly dominated, by reasoning similar to that done in Proposition 1.",
                "We now turn to iterated dominance in Bayesian games.",
                "Na¨ıvely, one might argue that iterated dominance in Bayesian 95 games always requires an exponential number of steps when a significant fraction of the games pure strategies can be eliminated, because there are exponentially many pure strategies.",
                "However, this is not a very strong argument because oftentimes we can eliminate exponentially many pure strategies in one step.",
                "For example, if for some type θr ∈ Θr we have, for all ac ∈ Ac, that u(θr, a1 r, ac) > u(θr, a2 r, ac), then any pure strategy for the row player which plays action a2 r for type θr is dominated (by the strategy that plays action a1 r for type θr instead)-and there are exponentially many (|Ar||Θr|−1 ) such strategies.",
                "It is therefore conceivable that we need only polynomially many eliminations of collections of a players strategies.",
                "However, the following theorem shows that this is not the case, by giving an example where an exponential number of iterations (that is, alternations between the players in eliminating strategies) is required. (We emphasize that this is not a result about computational complexity.)",
                "Theorem 7.",
                "Even in symmetric 3-player Bayesian games, iterated dominance by pure strategies can require an exponential number of iterations (both for strict and weak dominance), even with only three actions per player.",
                "Proof.",
                "Let each player i ∈ {1, 2, 3} have n + 1 types θ1 i , θ2 i , . . . , θn+1 i .",
                "Let each player i have 3 actions ai, bi, ci, and let the utility function of each player be defined as follows. (In the below, i + 1 and i + 2 are shorthand for i + 1(mod 3) and i + 2(mod 3) when used as player indices.",
                "Also, −∞ can be replaced by a sufficiently negative number.",
                "Finally, δ and should be chosen to be very small (even compared to 2−(n+1) ), and should be more than twice as large as δ.) • ui(θ1 i ; ai, ci+1, ci+2) = −1; • ui(θ1 i ; ai, si+1, si+2) = 0 for si+1 = ci+1 or si+2 = ci+2; • ui(θ1 i ; bi, si+1, si+2) = − for si+1 = ai+1 and si+2 = ai+2; • ui(θ1 i ; bi, si+1, si+2) = −∞ for si+1 = ai+1 or si+2 = ai+2; • ui(θ1 i ; ci, si+1, si+2) = −∞ for all si+1, si+2; • ui(θj i ; ai, si+1, si+2) = −∞ for all si+1, si+2 when j > 1; • ui(θj i ; bi, si+1, si+2) = − for all si+1, si+2 when j > 1; • ui(θj i ; ci, si+1, ci+2) = δ − − 1/2 for all si+1 when j > 1; • ui(θj i ; ci, si+1, si+2) = δ− for all si+1 and si+2 = ci+2 when j > 1.",
                "Let the distribution over each players types be given by p(θj i ) = 2−j (with the exception that p(θ2 i ) = 2−2 +2−(n+1) ).",
                "We will be interested in eliminating strategies of the following form: play bi for type θ1 i , and play one of bi or ci otherwise.",
                "Because the utility function is the same for any type θj i with j > 1, these strategies are effectively defined by the total probability that they place on ci,8 which is t2 i (2−2 + 2−(n+1) ) + n+1 j=3 tj i 2−j where tj i = 1 if player i 8 Note that the strategies are still pure strategies; the probability placed on an action by a strategy here is simply the sum of the probabilities of the types for which the strategy chooses that action. plays ci for type θj i , and 0 otherwise.",
                "This probability is different for any two different strategies of the given form, and we have exponentially many different strategies of the given form.",
                "For any probability q which can be expressed as t2(2−2 + 2−(n+1) ) + n+1 j=3 tj2−j (with all tj ∈ {0, 1}), let σi(q) denote the (unique) strategy of the given form for player i which places a total probability of q on ci.",
                "Any strategy that plays ci for type θ1 i or ai for some type θj i with j > 1 can immediately be eliminated.",
                "We will show that, after that, we must eliminate the strategies σi(q) with high q first, slowly working down to those with lower q.",
                "Claim 1: If σi+1(q ) and σi+2(q ) have not yet been eliminated, and q < q , then σi(q) cannot yet be eliminated.",
                "Proof: First, we show that no strategy σi(q ) can eliminate σi(q).",
                "Against σi+1(q ), σi+2(q ), the utility of playing σi(p) is − + p · δ − p · q /2.",
                "Thus, when q = 0, it is best to set p as high as possible (and we note that σi+1(0) and σi+2(0) have not been eliminated), but when q > 0, it is best to set p as low as possible because δ < q /2.",
                "Thus, whether q > q or q < q , σi(q) will always do strictly better than σi(q ) against some remaining opponent strategies.",
                "Hence, no strategy σi(q ) can eliminate σi(q).",
                "The only other pure strategies that could dominate σi(q) are strategies that play ai for type θ1 i , and bi or ci for all other types.",
                "Let us take such a strategy and suppose that it plays c with probability p. Against σi+1(q ), σi+2(q ) (which have not yet been eliminated), the utility of playing this strategy is −(q )2 /2 − /2 + p · δ − p · q /2.",
                "On the other hand, playing σi(q) gives − + q · δ − q · q /2.",
                "Because q > q, we have −(q )2 /2 < −q · q /2, and because δ and are small, it follows that σi(q) receives a higher utility.",
                "Therefore, no strategy dominates σi(q), proving the claim.",
                "Claim 2: If for all q > q, σi+1(q ) and σi+2(q ) have been eliminated, then σi(q) can be eliminated.",
                "Proof: Consider the strategy for player i that plays ai for type θ1 i , and bi for all other types (call this strategy σi); we claim σi dominates σi(q).",
                "First, if either of the other players k plays ak for θ1 k, then σi performs better than σi(q) (which receives −∞ in some cases).",
                "Because the strategies for player k that play ck for type θ1 k, or ak for some type θj k with j > 1, have already been eliminated, all that remains to check is that σi performs better than σi(q) whenever both of the other two players play strategies of the following form: play bk for type θ1 k, and play one of bk or ck otherwise.",
                "We note that among these strategies, there are none left that place probability greater than q on ck.",
                "Letting qk denote the probability with which player k plays ck, the expected utility of playing σi is −qi+1 · qi+2/2 − /2.",
                "On the other hand, the utility of playing σi(q) is − + q · δ − q · qi+2/2.",
                "Because qi+1 ≤ q, the difference between these two expressions is at least /2 − δ, which is positive.",
                "It follows that σi dominates σi(q).",
                "From Claim 2, it follows that all strategies of the form σi(q) will eventually be eliminated.",
                "However, Claim 1 shows that we cannot go ahead and eliminate multiple such strategies for one player, unless at least one other player simultaneously keeps up in the eliminated strategies: every time a σi(q) is eliminated such that σi+1(q) and σi+2(q) have not yet been eliminated, we need to eliminate one of the latter two strategies before any σi(q ) with q > q can be eliminated-that is, we need to alternate between players.",
                "Because there are exponentially many strategies of the form σi(q), it follows that iterated elimination will require exponentially many iterations to complete. 96 It follows that an efficient algorithm for iterated dominance (strict or weak) by pure strategies in Bayesian games, if it exists, must somehow be able to perform (at least part of) many iterations in a single step of the algorithm (because if each step only performed a single iteration, we would need exponentially many steps).",
                "Interestingly, Knuth et al. [11] argue that iterated dominance appears to be an inherently sequential problem (in light of their result that iterated very weak dominance is P-complete, that is, apparently not efficiently parallelizable), suggesting that aggregating many iterations may be difficult. 7.",
                "CONCLUSIONS While the <br>nash equilibrium</br> solution concept is studied more and more intensely in our community, the perhaps more elementary concept of (iterated) dominance has received much less attention.",
                "In this paper we studied various computational aspects of this concept.",
                "We first studied both strict and weak dominance (not iterated), and showed that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve.",
                "We then moved on to iterated dominance.",
                "We showed that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance.",
                "This allowed us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
                "Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].)",
                "Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time.",
                "We then studied what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies.",
                "First, we showed that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak dominance).",
                "Then, we showed that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3).",
                "Finally, we studied dominance and iterated dominance in Bayesian games, as an example of a concise representation language for normal form games that is interesting in its own right.",
                "We showed that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak dominance).",
                "Finally, we showed that iterated dominance using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak dominance).",
                "There are various avenues for future research.",
                "First, there is the open question of whether it is possible to complete iterated dominance in Bayesian games in polynomial time (even though we showed that an exponential number of alternations between the players in eliminating strategies is sometimes required).",
                "Second, we can study computational aspects of (iterated) dominance in concise representations of normal form games other than Bayesian games-for example, in graphical games [9] or local-effect/action graph games [12, 2]. (How to efficiently perform iterated very weak dominance has already been studied for partially observable stochastic games [8].)",
                "Finally, we can ask whether some of the algorithms we described (such as the one for iterated strict dominance with mixed strategies) can be made faster. 8.",
                "REFERENCES [1] Krzysztof R. Apt.",
                "Uniform proofs of order independence for various strategy elimination procedures.",
                "Contributions to Theoretical Economics, 4(1), 2004. [2] Nivan A. R. Bhat and Kevin Leyton-Brown.",
                "Computing Nash equilibria of action-graph games.",
                "In UAI, 2004. [3] Ben Blum, Christian R. Shelton, and Daphne Koller.",
                "A continuation method for Nash equilibria in structured games.",
                "In IJCAI, 2003. [4] Vincent Conitzer and Tuomas Sandholm.",
                "Complexity results about Nash equilibria.",
                "In IJCAI, pages 765-771, 2003. [5] Drew Fudenberg and Jean Tirole.",
                "Game Theory.",
                "MIT Press, 1991. [6] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
                "On the order of eliminating dominated strategies.",
                "Operations Research Letters, 9:85-89, 1990. [7] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
                "The complexity of eliminating dominated strategies.",
                "Mathematics of Operation Research, 18:553-565, 1993. [8] Eric A. Hansen, Daniel S. Bernstein, and Shlomo Zilberstein.",
                "Dynamic programming for partially observable stochastic games.",
                "In AAAI, pages 709-715, 2004. [9] Michael Kearns, Michael Littman, and Satinder Singh.",
                "Graphical models for game theory.",
                "In UAI, 2001. [10] Leonid Khachiyan.",
                "A polynomial algorithm in linear programming.",
                "Soviet Math.",
                "Doklady, 20:191-194, 1979. [11] Donald E. Knuth, Christos H. Papadimitriou, and John N Tsitsiklis.",
                "A note on strategy elimination in bimatrix games.",
                "Operations Research Letters, 7(3):103-107, 1988. [12] Kevin Leyton-Brown and Moshe Tennenholtz.",
                "Local-effect games.",
                "In IJCAI, 2003. [13] Richard Lipton, Evangelos Markakis, and Aranyak Mehta.",
                "Playing large games using simple strategies.",
                "In ACM-EC, pages 36-41, 2003. [14] Michael Littman and Peter Stone.",
                "A polynomial-time <br>nash equilibrium</br> algorithm for repeated games.",
                "In ACM-EC, pages 48-54, 2003. [15] Leslie M. Marx and Jeroen M. Swinkels.",
                "Order independence for iterated weak dominance.",
                "Games and Economic Behavior, 18:219-245, 1997. [16] Leslie M. Marx and Jeroen M. Swinkels.",
                "Corrigendum, order independence for iterated weak dominance.",
                "Games and Economic Behavior, 31:324-329, 2000. [17] Andreu Mas-Colell, Michael Whinston, and Jerry R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [18] Roger Myerson.",
                "Game Theory: Analysis of Conflict.",
                "Harvard University Press, Cambridge, 1991. [19] Martin J Osborne and Ariel Rubinstein.",
                "A Course in Game Theory.",
                "MIT Press, 1994. [20] Christos Papadimitriou.",
                "Algorithms, games and the Internet.",
                "In STOC, pages 749-753, 2001. [21] Ryan Porter, Eugene Nudelman, and Yoav Shoham.",
                "Simple search methods for finding a <br>nash equilibrium</br>.",
                "In AAAI, pages 664-669, 2004. 97"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Probablemente el concepto de solución más conocido (y ciertamente más estudiado) es el del \"equilibrio Nash\".",
                "Un \"equilibrio de Nash\" especifica una estrategia para cada jugador, de tal manera que ningún jugador tiene un incentivo para que (unilateralmente) se desvíe de la estrategia prescrita.",
                "Recientemente, numerosos documentos han estudiado el equilibrio de la NASH de computación en varios entornos [9, 4, 12, 3, 13, 14], y la complejidad de construir un \"equilibrio NASH\" en juegos de forma normal se ha etiquetado como uno de los dos abiertos más importantes.Problemas en el límite de P hoy [20].",
                "Las soluciones de computación de acuerdo con el dominio (iterado) es importante por al menos las siguientes razones: 1) Puede ser computacionalmente más fácil que calcular (por ejemplo) un \"equilibrio NASH\" (y, por lo tanto, puede ser útil como un paso de preprocesamiento para calcular A \"Equilibrio de Nash \"), y 2) (iterado) El dominio requiere una suposición de racionalidad más débil sobre los jugadores que (por ejemplo) el equilibrio de Nash, y por lo tanto, es más probable que las soluciones derivadas de acuerdo con él ocurran.",
                "Conclusiones Si bien el concepto de solución de \"equilibrio de Nash\" se estudia cada vez más intensamente en nuestra comunidad, el concepto quizás más elemental del dominio (iterado) ha recibido mucha menos atención.",
                "Un algoritmo de \"equilibrio NASH\" en tiempo polinomial para juegos repetidos.",
                "Métodos de búsqueda simples para encontrar un \"equilibrio de Nash\"."
            ],
            "translated_text": "",
            "candidates": [
                "equilibrio de Nash",
                "equilibrio Nash",
                "equilibrio de Nash",
                "equilibrio de Nash",
                "equilibrio de Nash",
                "equilibrio NASH",
                "equilibrio de Nash",
                "equilibrio NASH",
                "Equilibrio de Nash ",
                "equilibrio de Nash",
                "equilibrio de Nash",
                "equilibrio de Nash",
                "equilibrio NASH",
                "equilibrio de Nash",
                "equilibrio de Nash"
            ],
            "error": []
        },
        "dominance": {
            "translated_key": "dominio",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Complexity of (Iterated) <br>dominance</br>∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT We study various computational aspects of solving games using <br>dominance</br> and iterated dominance.",
                "We first study both strict and weak <br>dominance</br> (not iterated), and show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve.",
                "We then move on to iterated <br>dominance</br>.",
                "We show that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak <br>dominance</br>.",
                "This allows us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
                "Both of these results hold both with and without <br>dominance</br> by mixed strategies. (A weaker version of the second result (only without <br>dominance</br> by mixed strategies) was already known [7].)",
                "Iterated strict <br>dominance</br>, on the other hand, is path-independent (both with and without <br>dominance</br> by mixed strategies) and can therefore be done in polynomial time.",
                "We then study what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies.",
                "First, we show that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak <br>dominance</br>).",
                "Then, we show that iterated strict <br>dominance</br> becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict <br>dominance</br> under this restriction is NP-complete (even when the limit on the support size is 3).",
                "Finally, we study Bayesian games.",
                "We show that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete (both with strict and weak <br>dominance</br>); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak ∗ This material is based upon work supported by the National Science Foundation under ITR grants IIS-0121678 and IIS-0427858, and a Sloan Fellowship. <br>dominance</br>).",
                "Finally, we show that iterated <br>dominance</br> using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak <br>dominance</br>).",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In multiagent systems with self-interested agents, the optimal action for one agent may depend on the actions taken by other agents.",
                "In such settings, the agents require tools from game theory to rationally decide on an action.",
                "Game theory offers various formal models of strategic settings-the best-known of which is a game in normal (or matrix) form, specifying a utility (payoff) for each agent for each combination of strategies that the agents choose-as well as solution concepts, which, given a game, specify which outcomes are reasonable (under various assumptions of rationality and common knowledge).",
                "Probably the best-known (and certainly the most-studied) solution concept is that of Nash equilibrium.",
                "A Nash equilibrium specifies a strategy for each player, in such a way that no player has an incentive to (unilaterally) deviate from the prescribed strategy.",
                "Recently, numerous papers have studied computing Nash equilibria in various settings [9, 4, 12, 3, 13, 14], and the complexity of constructing a Nash equilibrium in normal form games has been labeled one of the two most important open problems on the boundary of P today [20].",
                "The problem of computing solutions according to the perhaps more elementary solution concepts of <br>dominance</br> and iterated <br>dominance</br> has received much less attention. (After an early short paper on an easy case [11], the main computational study of these concepts has actually taken place in a paper in the game theory community [7].1 ) A strategy strictly dominates another strategy if it performs strictly 1 This is not to say that computer scientists have ignored 88 better against all vectors of opponent strategies, and weakly dominates it if it performs at least as well against all vectors of opponent strategies, and strictly better against at least one.",
                "The idea is that dominated strategies can be eliminated from consideration.",
                "In iterated <br>dominance</br>, the elimination proceeds in rounds, and becomes easier as more strategies are eliminated: in any given round, the dominating strategy no longer needs to perform better than or as well as the dominated strategy against opponent strategies that were eliminated in earlier rounds.",
                "Computing solutions according to (iterated) <br>dominance</br> is important for at least the following reasons: 1) it can be computationally easier than computing (for instance) a Nash equilibrium (and therefore it can be useful as a preprocessing step in computing a Nash equilibrium), and 2) (iterated) <br>dominance</br> requires a weaker rationality assumption on the players than (for instance) Nash equilibrium, and therefore solutions derived according to it are more likely to occur.",
                "In this paper, we study some fundamental computational questions concerning <br>dominance</br> and iterated <br>dominance</br>, including how hard it is to check whether a given strategy can be eliminated by each of the variants of these notions.",
                "The rest of the paper is organized as follows.",
                "In Section 2, we briefly review definitions and basic properties of normal form games, strict and weak <br>dominance</br>, and iterated strict and weak <br>dominance</br>.",
                "In the remaining sections, we study computational aspects of <br>dominance</br> and iterated <br>dominance</br>.",
                "In Section 3, we study one-shot (not iterated) <br>dominance</br>.",
                "In Section 4, we study iterated <br>dominance</br>.",
                "In Section 5, we study <br>dominance</br> and iterated <br>dominance</br> when the dominating strategy can only place probability on a few pure strategies.",
                "Finally, in Section 6, we study <br>dominance</br> and iterated <br>dominance</br> in Bayesian games. 2.",
                "DEFINITIONS AND BASIC PROPERTIES In this section, we briefly review normal form games, as well as <br>dominance</br> and iterated <br>dominance</br> (both strict and weak).",
                "An n-player normal form game is defined as follows.",
                "Definition 1.",
                "A normal form game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of pure strategies Σi and a utility function ui : Σ1 × Σ2 × . . . × Σn → R (where ui(σ1, σ2, . . . , σn) denotes player is utility when each player j plays action σj).",
                "The two main notions of <br>dominance</br> are defined as follows.",
                "Definition 2.",
                "Player is strategy σi is said to be strictly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
                "Player is strategy σi is said to be weakly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) ≥ ui(σi, σ−i), and for at least one vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
                "In this definition, it is sometimes allowed for the dominating strategy σi to be a mixed strategy, that is, a probability distribution over pure strategies.",
                "In this case, the utilities in <br>dominance</br> altogether.",
                "For example, simple <br>dominance</br> checks are sometimes used as a subroutine in searching for Nash equilibria [21]. the definition are the expected utilities.2 There are other notions of <br>dominance</br>, such as very weak dominance (in which no strict inequality is required, so two strategies can dominate each other), but we will not study them here.",
                "When we are looking at the <br>dominance</br> relations for player i, the other players (−i) can be thought of as a single player.3 Therefore, in the rest of the paper, when we study one-shot (not iterated) <br>dominance</br>, we will focus without loss of generality on two-player games.4 In two-player games, we will generally refer to the players as r (row) and c (column) rather than 1 and 2.",
                "In iterated <br>dominance</br>, dominated strategies are removed from the game, and no longer have any effect on future <br>dominance</br> relations.",
                "Iterated <br>dominance</br> can eliminate more strategies than <br>dominance</br>, as follows. σr may originally not dominate σr because the latter performs better against σc; but then, once σc is removed because it is dominated by σc, σr dominates σr, and the latter can be removed.",
                "For example, in the following game, R can be removed first, after which D is dominated.",
                "L R U 1, 1 0, 0 D 0, 1 1, 0 Either strict or weak <br>dominance</br> can be used in the definition of iterated <br>dominance</br>.",
                "We note that the process of iterated <br>dominance</br> is never helped by removing a dominated mixed strategy, for the following reason.",
                "If σi gives player i a higher utility than σi against mixed strategy σj for player j = i (and strategies σ−{i,j} for the other players), then for at least one pure strategy σj that σj places positive probability on, σi must perform better than σi against σj (and strategies σ−{i,j} for the other players).",
                "Thus, removing the mixed strategy σj does not introduce any new dominances.",
                "More detailed discussions and examples can be found in standard texts on microeconomics or game theory [17, 5].",
                "We are now ready to move on to the core of this paper. 3.",
                "<br>dominance</br> (NOT ITERATED) In this section, we study the notion of one-shot (not iterated) <br>dominance</br>.",
                "As a first observation, checking whether a given strategy is strictly (weakly) dominated by some pure strategy is straightforward, by checking, for every pure strategy for that player, whether the latter strategy performs strictly better against all the opponents strategies (at least as well against all the opponents strategies, and strictly 2 The dominated strategy σi is, of course, also allowed to be mixed, but this has no technical implications for the paper: when we study one-shot <br>dominance</br>, we ask whether a given strategy is dominated, and it does not matter whether the given strategy is pure or mixed; when we study iterated <br>dominance</br>, there is no use in eliminating mixed strategies, as we will see shortly. 3 This player may have a very large strategy space (one pure strategy for every vector of pure strategies for the players that are being replaced).",
                "Nevertheless, this will not result in an increase in our representation size, because the original representation already had to specify utilities for each of these vectors. 4 We note that a restriction to two-player games would not be without loss of generality for iterated <br>dominance</br>.",
                "This is because for iterated <br>dominance</br>, we need to look at the dominated strategies of each individual player, so we cannot merge any players. 89 better against at least one).5 Next, we show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time by solving a single linear program. (Similar linear programs have been given before [18]; we present the result here for completeness, and because we will build on the linear programs given below in Theorem 6.)",
                "Proposition 1.",
                "Given the row players utilities, a subset Dr of the row players pure strategies Σr, and a distinguished strategy σ∗ r for the row player, we can check in time polynomial in the size of the game (by solving a single linear program of polynomial size) whether there exists some mixed strategy σr, that places positive probability only on strategies in Dr and dominates σ∗ r , both for strict and for weak <br>dominance</br>.",
                "Proof.",
                "Let pdr be the probability that σr places on dr ∈ Dr. We will solve a single linear program in each of our algorithms; linear programs can be solved in polynomial time [10].",
                "For strict <br>dominance</br>, the question is whether the pdr can be set so that for every pure strategy for the column player σc ∈ Σc, dr∈Dr pdr ur(dr, σc) > ur(σ∗ r , σc).",
                "Because the inequality must be strict, we cannot solve this directly by linear programming.",
                "We proceed as follows.",
                "Because the game is finite, we may assume without loss of generality that all utilities are positive (if not, simply add a constant to all utilities.)",
                "Solve the following linear program: minimize dr∈Dr pdr such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc).",
                "If σ∗ r is strictly dominated by some mixed strategy, this linear program has a solution with objective value < 1. (The dominating strategy is a feasible solution with objective value exactly 1.",
                "Because no constraint is binding for this solution, we can reduce one of the probabilities slightly without affecting feasibility, thereby obtaining a solution with objective value < 1.)",
                "Moreover, if this linear program has a solution with objective value < 1, there is a mixed strategy strictly dominating σ∗ r , which can be obtained by taking the LP solution and adding the remaining probability to any strategy (because all the utilities are positive, this will add to the left side of any inequality, so all inequalities will become strict).",
                "For weak <br>dominance</br>, we can solve the following linear program: maximize σc∈Σc (( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc)) such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc); dr∈Dr pdr = 1.",
                "If σ∗ r is weakly dominated by some mixed strategy, then that mixed strategy is a feasible solution to this program with objective value > 0, because for at least one strategy σc ∈ Σc we have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0.",
                "On the other hand, if this program has a solution with objective value > 0, then for at least one strategy σc ∈ Σc we 5 Recall that the assumption of a single opponent (that is, the assumption of two players) is without loss of generality for one-shot <br>dominance</br>. must have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0, and thus the linear programs solution is a weakly dominating mixed strategy. 4.",
                "ITERATED <br>dominance</br> We now move on to iterated <br>dominance</br>.",
                "It is well-known that iterated strict <br>dominance</br> is path-independent [6, 19]that is, if we remove dominated strategies until no more dominated strategies remain, in the end the remaining strategies for each player will be the same, regardless of the order in which strategies are removed.",
                "Because of this, to see whether a given strategy can be eliminated by iterated strict <br>dominance</br>, all that needs to be done is to repeatedly remove strategies that are strictly dominated, until no more dominated strategies remain.",
                "Because we can check in polynomial time whether any given strategy is dominated (whether or not <br>dominance</br> by mixed strategies is allowed, as described in Section 3), this whole procedure takes only polynomial time.",
                "In the case of iterated <br>dominance</br> by pure strategies with two players, Knuth et al. [11] slightly improve on (speed up) the straightforward implementation of this procedure by keeping track of, for each ordered pair of strategies for a player, the number of opponent strategies that prevent the first strategy from dominating the second.",
                "Hereby the runtime for an m × n game is reduced from O((m + n)4 ) to O((m + n)3 ). (Actually, they only study very weak <br>dominance</br> (for which no strict inequalities are required), but the approach is easily extended.)",
                "In contrast, iterated weak <br>dominance</br> is known to be pathdependent.6 For example, in the following game, using iterated weak <br>dominance</br> we can eliminate M first, and then D, or R first, and then U. L M R U 1, 1 0, 0 1, 0 D 1, 1 1, 0 0, 0 Therefore, while the procedure of removing weakly dominated strategies until no more weakly dominated strategies remain can certainly be executed in polynomial time, which strategies survive in the end depends on the order in which we remove the dominated strategies.",
                "We will investigate two questions for iterated weak <br>dominance</br>: whether a given strategy is eliminated in some path, and whether there is a path to a unique solution (one pure strategy left per player).",
                "We will show that both of these problems are computationally hard.",
                "Definition 3.",
                "Given a game in normal form and a distinguished strategy σ∗ , IWD-STRATEGY-ELIMINATION asks whether there is some path of iterated weak <br>dominance</br> that eliminates σ∗ .",
                "Given a game in normal form, IWDUNIQUE-SOLUTION asks whether there is some path of iterated weak <br>dominance</br> that leads to a unique solution (one strategy left per player).",
                "The following lemma shows a special case of normal form games in which allowing for weak <br>dominance</br> by mixed strategies (in addition to weak <br>dominance</br> by pure strategies) does 6 There is, however, a restriction of weak dominance called nice weak dominance which is path-independent [15, 16].",
                "For an overview of path-independence results, see Apt [1]. 90 not help.",
                "We will prove the hardness results in this setting, so that they will hold whether or not <br>dominance</br> by mixed strategies is allowed.",
                "Lemma 1.",
                "Suppose that all the utilities in a game are in {0, 1}.",
                "Then every pure strategy that is weakly dominated by a mixed strategy is also weakly dominated by a pure strategy.",
                "Proof.",
                "Suppose pure strategy σ is weakly dominated by mixed strategy σ∗ .",
                "If σ gets a utility of 1 against some opponent strategy (or vector of opponent strategies if there are more than 2 players), then all the pure strategies that σ∗ places positive probability on must also get a utility of 1 against that opponent strategy (or else the expected utility would be smaller than 1).",
                "Moreover, at least one of the pure strategies that σ∗ places positive probability on must get a utility of 1 against an opponent strategy that σ gets 0 against (or else the inequality would never be strict).",
                "It follows that this pure strategy weakly dominates σ.",
                "We are now ready to prove the main results of this section.",
                "Theorem 1.",
                "IWD-STRATEGY-ELIMINATION is NPcomplete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not <br>dominance</br> by mixed strategies is allowed.",
                "Proof.",
                "The problem is in NP because given a sequence of strategies to be eliminated, we can easily check whether this is a valid sequence of eliminations (even when <br>dominance</br> by mixed strategies is allowed, using Proposition 1).",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following IWD-STRATEGY-ELIMINATION instance. (In this instance, we will specify that certain strategies are uneliminable.",
                "A strategy σr can be made uneliminable, even when 0 and 1 are the only allowed utilities, by adding another strategy σr and another opponent strategy σc, so that: 1. σr and σr are the only strategies that give the row player a utility of 1 against σc. 2. σr and σr always give the row player the same utility. 3. σc is the only strategy that gives the column player a utility of 1 against σr, but otherwise σc always gives the column player utility 0.",
                "This makes it impossible to eliminate any of these three strategies.",
                "We will not explicitly specify the additional strategies to make the proof more legible.)",
                "In this proof, we will denote row player strategies by s, and column player strategies by t, to improve legibility.",
                "Let the row players pure strategy set be given as follows.",
                "For every variable v ∈ V , the row player has corresponding strategies s1 +v, s2 +v, s1 −v, s2 −v.",
                "Additionally, the row player has the following 2 strategies: s1 0 and s2 0, where s2 0 = σ∗ r (that is, it is the strategy we seek to eliminate).",
                "Finally, for every clause c ∈ C, the row player has corresponding strategies s1 c (uneliminable) and s2 c. Let the column players pure strategy set be given as follows.",
                "For every variable v ∈ V , the column player has a corresponding strategy tv.",
                "For every clause c ∈ C, the column player has a corresponding strategy tc, and additionally, for every literal l ∈ L that occurs in c, a strategy tc,l.",
                "For every variable v ∈ V , the column player has corresponding strategies t+v, t−v (both uneliminable).",
                "Finally, the column player has three additional strategies: t1 0 (uneliminable), t2 0, and t1.",
                "The utility function for the row player is given as follows: • ur(s1 +v, tv) = 0 for all v ∈ V ; • ur(s2 +v, tv) = 1 for all v ∈ V ; • ur(s1 −v, tv) = 1 for all v ∈ V ; • ur(s2 −v, tv) = 0 for all v ∈ V ; • ur(s1 +v, t1) = 1 for all v ∈ V ; • ur(s2 +v, t1) = 0 for all v ∈ V ; • ur(s1 −v, t1) = 0 for all v ∈ V ; • ur(s2 −v, t1) = 1 for all v ∈ V ; • ur(sb +v, t+v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sb −v, t−v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sl, t) = 0 otherwise for all l ∈ L and t ∈ S2; • ur(s1 0, tc) = 0 for all c ∈ C; • ur(s2 0, tc) = 1 for all c ∈ C; • ur(sb 0, t1 0) = 1 for all b ∈ {1, 2}; • ur(s1 0, t2 0) = 1; • ur(s2 0, t2 0) = 0; • ur(sb 0, t) = 0 otherwise for all b ∈ {1, 2} and t ∈ S2; • ur(sb c, t) = 0 otherwise for all c ∈ C and b ∈ {1, 2}; and the row players utility is 0 in every other case.",
                "The utility function for the column player is given as follows: • uc(s, tv) = 0 for all v ∈ V and s ∈ S1; • uc(s, t1) = 0 for all s ∈ S1; • uc(s2 l , tc) = 1 for all c ∈ C and l ∈ L where l ∈ c (literal l occurs in clause c); • uc(s2 l2 , tc,l1 ) = 1 for all c ∈ C and l1, l2 ∈ L, l1 = l2 where l2 ∈ c; • uc(s1 c, tc) = 1 for all c ∈ C; • uc(s2 c, tc) = 0 for all c ∈ C; • uc(sb c, tc,l) = 1 for all c ∈ C, l ∈ L, and b ∈ {1, 2}; • uc(s2, tc) = uc(s2, tc,l) = 0 otherwise for all c ∈ C and l ∈ L; and the column players utility is 0 in every other case.",
                "We now show that the two instances are equivalent.",
                "First, suppose there is a solution to the satisfiability instance: that is, a truth-value assignment to the variables in V such that all clauses are satisfied.",
                "Then, consider the following sequence of eliminations in our game: 1.",
                "For every variable v that is set to true in the assignment, eliminate tv (which gives the column player utility 0 everywhere). 2.",
                "Then, for every variable v that is set to true in the assignment, eliminate s2 +v using s1 +v (which is possible because tv has been eliminated, and because t1 has not been eliminated (yet)). 3.",
                "Now eliminate t1 (which gives the column player utility 0 everywhere). 4.",
                "Next, for every variable v that is set to false in the assignment, eliminate s2 −v using s1 −v (which is possible because t1 has been eliminated, and because tv has not been eliminated (yet)). 5.",
                "For every clause c which has the variable corresponding to one of its positive literals l = +v set to true in the assignment, eliminate tc using tc,l (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 6.",
                "For every clause c which has the variable corresponding to one of its negative literals l = −v set to false in the assignment, eliminate tc using tc,l 91 (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 7.",
                "Because the assignment satisfied the formula, all the tc have now been eliminated.",
                "Thus, we can eliminate s2 0 = σ∗ r using s1 0.",
                "It follows that there is a solution to the IWD-STRATEGY-ELIMINATION instance.",
                "Now suppose there is a solution to the IWD-STRATEGYELIMINATION instance.",
                "By Lemma 1, we can assume that all the dominances are by pure strategies.",
                "We first observe that only s1 0 can eliminate s2 0 = σ∗ r , because it is the only other strategy that gets the row player a utility of 1 against t1 0, and t1 0 is uneliminable.",
                "However, because s2 0 performs better than s1 0 against the tc strategies, it follows that all of the tc strategies must be eliminated.",
                "For each c ∈ C, the strategy tc can only be eliminated by one of the strategies tc,l (with the same c), because these are the only other strategies that get the column player a utility of 1 against s1 c, and s1 c is uneliminable.",
                "But, in order for some tc,l to eliminate tc, s2 l must be eliminated first.",
                "Only s1 l can eliminate s2 l , because it is the only other strategy that gets the row player a utility of 1 against tl, and tl is uneliminable.",
                "We next show that for every v ∈ V only one of s2 +v, s2 −v can be eliminated.",
                "This is because in order for s1 +v to eliminate s2 +v, tv needs to have been eliminated and t1, not (so tv must be eliminated before t1); but in order for s1 −v to eliminate s2 −v, t1 needs to have been eliminated and tv, not (so t1 must be eliminated before tv).",
                "So, set v to true if s2 +v is eliminated, and to false otherwise Because by the above, for every clause c, one of the s2 l with l ∈ c must be eliminated, it follows that this is a satisfying assignment to the satisfiability instance.",
                "Using Theorem 1, it is now (relatively) easy to show that IWD-UNIQUE-SOLUTION is also NP-complete under the same restrictions.",
                "Theorem 2.",
                "IWD-UNIQUE-SOLUTION is NP-complete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not <br>dominance</br> by mixed strategies is allowed.",
                "Proof.",
                "Again, the problem is in NP because we can nondeterministically choose the sequence of eliminations and verify whether it is correct.",
                "To show NP-hardness, we reduce an arbitrary IWD-STRATEGY-ELIMINATION instance to the following IWD-UNIQUE-SOLUTION instance.",
                "Let all the strategies for each player from the original instance remain part of the new instance, and let the utilities resulting from the players playing a pair of these strategies be the same.",
                "We add three additional strategies σ1 r , σ2 r , σ3 r for the row player, and three additional strategies σ1 c , σ2 c , σ3 c for the column player.",
                "Let the additional utilities be as follows: • ur(σr, σj c) = 1 for all σr /∈ {σ1 r , σ2 r , σ3 r } and j ∈ {2, 3}; • ur(σi r, σc) = 1 for all i ∈ {1, 2, 3} and σc /∈ {σ2 c , σ3 c }; • ur(σi r, σ2 c ) = 1 for all i ∈ {2, 3}; • ur(σ1 r , σ3 c ) = 1; • and the row players utility is 0 in all other cases involving a new strategy. • uc(σ3 r , σc) = 1 for all σc /∈ {σ1 c , σ2 c , σ3 c }; • uc(σ∗ r , σj c) = 1 for all j ∈ {2, 3} (σ∗ r is the strategy to be eliminated in the original instance); • uc(σi r, σ1 c ) = 1 for all i ∈ {1, 2}; • ur(σ1 r , σ2 c ) = 1; • ur(σ2 r , σ3 c ) = 1; • and the column players utility is 0 in all other cases involving a new strategy.",
                "We proceed to show that the two instances are equivalent.",
                "First suppose there exists a solution to the original IWDSTRATEGY-ELIMINATION instance.",
                "Then, perform the same sequence of eliminations to eliminate σ∗ r in the new IWD-UNIQUE-SOLUTION instance. (This is possible because at any stage, any weak <br>dominance</br> for the row player in the original instance is still a weak <br>dominance</br> in the new instance, because the two strategies utilities for the row player are the same when the column player plays one of the new strategies; and the same is true for the column player.)",
                "Once σ∗ r is eliminated, let σ1 c eliminate σ2 c . (It performs better against σ2 r .)",
                "Then, let σ1 r eliminate all the other remaining strategies for the row player. (It always performs better against either σ1 c or σ3 c .)",
                "Finally, σ1 c is the unique best response against σ1 r among the column players remaining strategies, so let it eliminate all the other remaining strategies for the column player.",
                "Thus, there exists a solution to the IWD-UNIQUE-SOLUTION instance.",
                "Now suppose there exists a solution to the IWD-UNIQUESOLUTION instance.",
                "By Lemma 1, we can assume that all the dominances are by pure strategies.",
                "We will show that none of the new strategies (σ1 r , σ2 r , σ3 r , σ1 c , σ2 c , σ3 c ) can either eliminate another strategy, or be eliminated before σ∗ r is eliminated.",
                "Thus, there must be a sequence of eliminations ending in the elimination of σ∗ r , which does not involve any of the new strategies, and is therefore a valid sequence of eliminations in the original game (because all original strategies perform the same against each new strategy).",
                "We now show that this is true by exhausting all possibilities for the first elimination before σ∗ r is eliminated that involves a new strategy.",
                "None of the σi r can be eliminated by a σr /∈ {σ1 r , σ2 r , σ3 r }, because the σi r perform better against σ1 c . σ1 r cannot eliminate any other strategy, because it always performs poorer against σ2 c . σ2 r and σ3 r are equivalent from the row players perspective (and thus cannot eliminate each other), and cannot eliminate any other strategy because they always perform poorer against σ3 c .",
                "None of the σj c can be eliminated by a σc /∈ {σ1 c , σ2 c , σ3 c }, because the σj c always perform better against either σ1 r or σ2 r . σ1 c cannot eliminate any other strategy, because it always performs poorer against either σ∗ r or σ3 r . σ2 c cannot eliminate any other strategy, because it always performs poorer against σ2 r or σ3 r . σ3 c cannot eliminate any other strategy, because it always performs poorer against σ1 r or σ3 r .",
                "Thus, there exists a solution to the IWDSTRATEGY-ELIMINATION instance.",
                "A slightly weaker version of the part of Theorem 2 concerning <br>dominance</br> by pure strategies only is the main result of Gilboa et al. [7]. (Besides not proving the result for <br>dominance</br> by mixed strategies, the original result was weaker because it required utilities {0, 1, 2, 3, 4, 5, 6, 7, 8} rather than just {0, 1} (and because of this, our Lemma 1 cannot be applied to it to get the result for mixed strategies).) 5. (ITERATED) DOMINANCE USING MIXED STRATEGIES WITH SMALL SUPPORTS When showing that a strategy is dominated by a mixed strategy, there are several reasons to prefer exhibiting a 92 dominating strategy that places positive probability on as few pure strategies as possible.",
                "First, this will reduce the number of bits required to specify the dominating strategy (and thus the proof of <br>dominance</br> can be communicated quicker): if the dominating mixed strategy places positive probability on only k strategies, then it can be specified using k real numbers for the probabilities, plus k log m (where m is the number of strategies for the player under consideration) bits to indicate which strategies are used.",
                "Second, the proof of <br>dominance</br> will be cleaner: for a dominating mixed strategy, it is typically (always in the case of strict <br>dominance</br>) possible to spread some of the probability onto any unused pure strategy and still have a dominating strategy, but this obscures which pure strategies are the ones that are key in making the mixed strategy dominating.",
                "Third, because (by the previous) the argument for eliminating the dominated strategy is simpler and easier to understand, it is more likely to be accepted.",
                "Fourth, the level of risk neutrality required for the argument to work is reduced, at least in the extreme case where <br>dominance</br> by a single pure strategy can be exhibited (no risk neutrality is required here).",
                "This motivates the following problem.",
                "Definition 4 (MINIMUM-DOMINATING-SET).",
                "We are given the row players utilities of a game in normal form, a distinguished strategy σ∗ for the row player, a specification of whether the <br>dominance</br> should be strict or weak, and a number k. We are asked whether there exists a mixed strategy σ for the row player that places positive probability on at most k pure strategies, and dominates σ∗ in the required sense.",
                "Unfortunately, this problem is NP-complete.",
                "Theorem 3.",
                "MINIMUM-DOMINATING-SET is NPcomplete, both for strict and for weak <br>dominance</br>.",
                "Proof.",
                "The problem is in NP because we can nondeterministically choose a set of at most k strategies to give positive probability, and decide whether we can dominate σ∗ with these k strategies as described in Proposition 1.",
                "To show NP-hardness, we reduce an arbitrary SET-COVER instance (given a set S, subsets S1, S2, . . . , Sr, and a number t, can all of S be covered by at most t of the subsets?) to the following MINIMUM-DOMINATING-SET instance.",
                "For every element s ∈ S, there is a pure strategy σs for the column player.",
                "For every subset Si, there is a pure strategy σSi for the row player.",
                "Finally, there is the distinguished pure strategy σ∗ for the row player.",
                "The row players utilities are as follows: ur(σSi , σs) = t + 1 if s ∈ Si; ur(σSi , σs) = 0 if s /∈ Si; ur(σ∗ , σs) = 1 for all s ∈ S. Finally, we let k = t. We now proceed to show that the two instances are equivalent.",
                "First suppose there exists a solution to the SET-COVER instance.",
                "Without loss of generality, we can assume that there are exactly k subsets in the cover.",
                "Then, for every Si that is in the cover, let the dominating strategy σ place exactly 1 k probability on the corresponding pure strategy σSi .",
                "Now, if we let n(s) be the number of subsets in the cover containing s (we observe that that n(s) ≥ 1), then for every strategy σs for the column player, the row players expected utility for playing σ when the column player is playing σs is u(σ, σs) = n(s) k (k + 1) ≥ k+1 k > 1 = u(σ∗ , σs).",
                "So σ strictly (and thus also weakly) dominates σ∗ , and there exists a solution to the MINIMUM-DOMINATING-SET instance.",
                "Now suppose there exists a solution to the MINIMUMDOMINATING-SET instance.",
                "Consider the (at most k) pure strategies of the form σSi on which the dominating mixed strategy σ places positive probability, and let T be the collection of the corresponding subsets Si.",
                "We claim that T is a cover.",
                "For suppose there is some s ∈ S that is not in any of the subsets in T .",
                "Then, if the column player plays σs, the row player (when playing σ) will always receive utility 0-as opposed to the utility of 1 the row player would receive for playing σ∗ , contradicting the fact that σ dominates σ∗ (whether this <br>dominance</br> is weak or strict).",
                "It follows that there exists a solution to the SET-COVER instance.",
                "On the other hand, if we require that the dominating strategy only places positive probability on a very small number of pure strategies, then it once again becomes easy to check whether a strategy is dominated.",
                "Specifically, to find out whether player is strategy σ∗ is dominated by a strategy that places positive probability on only k pure strategies, we can simply check, for every subset of k of player is pure strategies, whether there is a strategy that places positive probability only on these k strategies and dominates σ∗ , using Proposition 1.",
                "This requires only O(|Σi|k ) such checks.",
                "Thus, if k is a constant, this constitutes a polynomial-time algorithm.",
                "A natural question to ask next is whether iterated strict <br>dominance</br> remains computationally easy when dominating strategies are required to place positive probability on at most k pure strategies, where k is a small constant. (We have already shown in Section 4 that iterated weak <br>dominance</br> is hard even when k = 1, that is, only dominance by pure strategies is allowed.)",
                "Of course, if iterated strict <br>dominance</br> were path-independent under this restriction, computational easiness would follow as it did in Section 4.",
                "However, it turns out that this is not the case.",
                "Observation 1.",
                "If we restrict the dominating strategies to place positive probability on at most two pure strategies, iterated strict <br>dominance</br> becomes path-dependent.",
                "Proof.",
                "Consider the following game: 7, 1 0, 0 0, 0 0, 0 7, 1 0, 0 3, 0 3, 0 0, 0 0, 0 0, 0 3, 1 1, 0 1, 0 1, 0 Let (i, j) denote the outcome in which the row player plays the ith row and the column player plays the jth column.",
                "Because (1, 1), (2, 2), and (4, 3) are all Nash equilibria, none of the column players pure strategies will ever be eliminated, and neither will rows 1, 2, and 4.",
                "We now observe that randomizing uniformly over rows 1 and 2 dominates row 3, and randomizing uniformly over rows 3 and 4 dominates row 5.",
                "However, if we eliminate row 3 first, it becomes impossible to dominate row 5 without randomizing over at least 3 pure strategies.",
                "Indeed, iterated strict <br>dominance</br> turns out to be hard even when k = 3.",
                "Theorem 4.",
                "If we restrict the dominating strategies to place positive probability on at most three pure strategies, it becomes NP-complete to decide whether a given strategy can be eliminated using iterated strict <br>dominance</br>. 93 Proof.",
                "The problem is in NP because given a sequence of strategies to be eliminated, we can check in polynomial time whether this is a valid sequence of eliminations (for any strategy to be eliminated, we can check, for every subset of three other strategies, whether there is a strategy placing positive probability on only these three strategies that dominates the strategy to be eliminated, using Proposition 1).",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following two-player game.",
                "For every variable v ∈ V , the row player has strategies s+v, s−v, s1 v, s2 v, s3 v, s4 v, and the column player has strategies t1 v, t2 v, t3 v, t4 v. For every clause c ∈ C, the row player has a strategy sc, and the column player has a strategy tc, as well as, for every literal l occurring in c, an additional strategy tl c. The row player has two additional strategies s1 and s2. (s2 is the strategy that we are seeking to eliminate.)",
                "Finally, the column player has one additional strategy t1.",
                "The utility function for the row player is given as follows (where is some sufficiently small number): • ur(s+v, tj v) = 4 if j ∈ {1, 2}, for all v ∈ V ; • ur(s+v, tj v) = 1 if j ∈ {3, 4}, for all v ∈ V ; • ur(s−v, tj v) = 1 if j ∈ {1, 2}, for all v ∈ V ; • ur(s−v, tj v) = 4 if j ∈ {3, 4}, for all v ∈ V ; • ur(s+v, t) = ur(s−v, t) = 0 for all v ∈ V and t /∈ {t1 v, t2 v, t3 v, t4 v}; • ur(si v, ti v) = 13 for all v ∈ V and i ∈ {1, 2, 3, 4}; • ur(si v, t) = for all v ∈ V , i ∈ {1, 2, 3, 4}, and t = ti v; • ur(sc, tc) = 2 for all c ∈ C; • ur(sc, t) = 0 for all c ∈ C and t = tc; • ur(s1, t1) = 1 + ; • ur(s1, t) = for all t = t1; • ur(s2, t1) = 1; • ur(s2, tc) = 1 for all c ∈ C; • ur(s2, t) = 0 for all t /∈ {t1} ∪ {tc : c ∈ C}.",
                "The utility function for the column player is given as follows: • uc(si v, ti v) = 1 for all v ∈ V and i ∈ {1, 2, 3, 4}; • uc(s, ti v) = 0 for all v ∈ V , i ∈ {1, 2, 3, 4}, and s = si v; • uc(sc, tc) = 1 for all c ∈ C; • uc(sl, tc) = 1 for all c ∈ C and l ∈ L occurring in c; • uc(s, tc) = 0 for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c}; • uc(sc, tl c) = 1 + for all c ∈ C; • uc(sl , tl c) = 1 + for all c ∈ C and l = l occurring in c; • uc(s, tl c) = for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c, l = l }; • uc(s2, t1) = 1; • uc(s, t1) = 0 for all s = s2.",
                "We now show that the two instances are equivalent.",
                "First, suppose that there is a solution to the satisfiability instance.",
                "Then, consider the following sequence of eliminations in our game: 1.",
                "For every variable v that is set to true in the satisfying assignment, eliminate s+v with the mixed strategy σr that places probability 1/3 on s−v, probability 1/3 on s1 v, and probability 1/3 on s2 v. (The expected utility of playing σr against t1 v or t2 v is 14/3 > 4; against t3 v or t4 v, it is 4/3 > 1; and against anything else it is 2 /3 > 0.",
                "Hence the <br>dominance</br> is valid.) 2.",
                "Similarly, for every variable v that is set to false in the satisfying assignment, eliminate s−v with the mixed strategy σr that places probability 1/3 on s+v, probability 1/3 on s3 v, and probability 1/3 on s4 v. (The expected utility of playing σr against t1 v or t2 v is 4/3 > 1; against t3 v or t4 v, it is 14/3 > 4; and against anything else it is 2 /3 > 0.",
                "Hence the <br>dominance</br> is valid.) 3.",
                "For every c ∈ C, eliminate tc with any tl c for which l was set to true in the satisfying assignment. (This is a valid <br>dominance</br> because tl c performs better than tc against any strategy other than sl, and we eliminated sl in step 1 or in step 2.) 4.",
                "Finally, eliminate s2 with s1. (This is a valid <br>dominance</br> because s1 performs better than s2 against any strategy other than those in {tc : c ∈ C}, which we eliminated in step 3.)",
                "Hence, there is an elimination path that eliminates s2.",
                "Now, suppose that there is an elimination path that eliminates s2.",
                "The strategy that eventually dominates s2 must place most of its probability on s1, because s1 is the only other strategy that performs well against t1, which cannot be eliminated before s2.",
                "But, s1 performs significantly worse than s2 against any strategy tc with c ∈ C, so it follows that all these strategies must be eliminated first.",
                "Each strategy tc can only be eliminated by a strategy that places most of its weight on the corresponding strategies tl c with l ∈ c, because they are the only other strategies that perform well against sc, which cannot be eliminated before tc.",
                "But, each strategy tl c performs significantly worse than tc against sl, so it follows that for every clause c, for one of the literals l occurring in it, sl must be eliminated first.",
                "Now, strategies of the form tj v will never be eliminated because they are the unique best responses to the corresponding strategies sj v (which are, in turn, the best responses to the corresponding tj v).",
                "As a result, if strategy s+v (respectively, s−v) is eliminated, then its opposite strategy s−v (respectively, s+v) can no longer be eliminated, for the following reason.",
                "There is no other pure strategy remaining that gets a significant utility against more than one of the strategies t1 v, t2 v, t3 v, t4 v, but s−v (respectively, s+v) gets significant utility against all 4, and therefore cannot be dominated by a mixed strategy placing positive probability on at most 3 strategies.",
                "It follows that for each v ∈ V , at most one of the strategies s+v, s−v is eliminated, in such a way that for every clause c, for one of the literals l occurring in it, sl must be eliminated.",
                "But then setting all the literals l such that sl is eliminated to true constitutes a solution to the satisfiability instance.",
                "In the next section, we return to the setting where there is no restriction on the number of pure strategies on which a dominating mixed strategy can place positive probability. 6. (ITERATED) <br>dominance</br> IN BAYESIAN GAMES So far, we have focused on normal form games that are flatly represented (that is, every matrix entry is given ex94 plicitly).",
                "However, for many games, the flat representation is too large to write down explicitly, and instead, some representation that exploits the structure of the game needs to be used.",
                "Bayesian games, besides being of interest in their own right, can be thought of as a useful structured representation of normal form games, and we will study them in this section.",
                "In a Bayesian game, each player first receives privately held preference information (the players type) from a distribution, which determines the utility that that player receives for every outcome of (that is, vector of actions played in) the game.",
                "After receiving this type, the player plays an action based on it.7 Definition 5.",
                "A Bayesian game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of actions Ai, a (finite) type space Θi with a probability distribution πi over it, and a utility function ui : Θi × A1 × A2 × . . . × An → R (where ui(θi, a1, a2, . . . , an) denotes player is utility when is type is θi and each player j plays action aj).",
                "A pure strategy in a Bayesian game is a mapping from types to actions, σi : Θi → Ai, where σi(θi) denotes the action that player i plays for type θi.",
                "Any vector of pure strategies in a Bayesian game defines an (expected) utility for each player, and therefore we can translate a Bayesian game into a normal form game.",
                "In this normal form game, the notions of <br>dominance</br> and iterated <br>dominance</br> are defined as before.",
                "However, the normal form representation of the game is exponentially larger than the Bayesian representation, because each player i has |Ai||Θi| distinct pure strategies.",
                "Thus, any algorithm for Bayesian games that relies on expanding the game to its normal form will require exponential time.",
                "Specifically, our easiness results for normal form games do not directly transfer to this setting.",
                "In fact, it turns out that checking whether a strategy is dominated by a pure strategy is hard in Bayesian games.",
                "Theorem 5.",
                "In a Bayesian game, it is NP-complete to decide whether a given pure strategy σr : Θr → Ar is dominated by some other pure strategy (both for strict and weak <br>dominance</br>), even when the row players distribution over types is uniform.",
                "Proof.",
                "The problem is in NP because it is easy to verify whether a candidate dominating strategy is indeed a dominating strategy.",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a set of clauses C using variables from V ) to the following Bayesian game.",
                "Let the row players action set be Ar = {t, f, 0} and let the column players action set be Ac = {ac : c ∈ C}.",
                "Let the row players type set be Θr = {θv : v ∈ V }, with a distribution πr that is uniform.",
                "Let the row players utility function be as follows: • ur(θv, 0, ac) = 0 for all v ∈ V and c ∈ C; • ur(θv, b, ac) = |V | for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b satisfies c; • ur(θv, b, ac) = −1 for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b does not satisfy c. 7 In general, a player can also receive a signal about the other players preferences, but we will not concern ourselves with that here.",
                "Let the pure strategy to be dominated be the one that plays 0 for every type.",
                "We show that the strategy is dominated by a pure strategy if and only if there is a solution to the satisfiability instance.",
                "First, suppose there is a solution to the satisfiability instance.",
                "Then, let σd r be given by: σd r (θv) = t if v is set to true in the solution to the satisfiability instance, and σd r (θv) = f otherwise.",
                "Then, against any action ac by the column player, there is at least one type θv such that either +v ∈ c and σd r (θv) = t, or −v ∈ c and σd r (θv) = f. Thus, the row players expected utility against action ac is at least |V | |V | − |V |−1 |V | = 1 |V | > 0.",
                "So, σd r is a dominating strategy.",
                "Now, suppose there is a dominating pure strategy σd r .",
                "This dominating strategy must play t or f for at least one type.",
                "Thus, against any ac by the column player, there must at least be some type θv for which ur(θv, σd r (θv), ac) > 0.",
                "That is, there must be at least one variable v such that setting v to σd r (θv) satifies c. But then, setting each v to σd r (θv) must satisfy all the clauses.",
                "So a satisfying assignment exists.",
                "However, it turns out that we can modify the linear programs from Proposition 1 to obtain a polynomial time algorithm for checking whether a strategy is dominated by a mixed strategy in Bayesian games.",
                "Theorem 6.",
                "In a Bayesian game, it can be decided in polynomial time whether a given (possibly mixed) strategy σr is dominated by some other mixed strategy, using linear programming (both for strict and weak <br>dominance</br>).",
                "Proof.",
                "We can modify the linear programs presented in Proposition 1 as follows.",
                "For strict <br>dominance</br>, again assuming without loss of generality that all the utilities in the game are positive, use the following linear program (in which pσr r (θr, ar) is the probability that σr, the strategy to be dominated, places on ar for type θr): minimize θr∈Θr ar∈Ar pr(ar) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) ≤ 1.",
                "Assuming that π(θr) > 0 for all θr ∈ Θr, this program will return an objective value smaller than |Θr| if and only if σr is strictly dominated, by reasoning similar to that done in Proposition 1.",
                "For weak <br>dominance</br>, use the following linear program: maximize ac∈Ac ( θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar)− θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar)) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) = 1.",
                "This program will return an objective value greater than 0 if and only if σr is weakly dominated, by reasoning similar to that done in Proposition 1.",
                "We now turn to iterated <br>dominance</br> in Bayesian games.",
                "Na¨ıvely, one might argue that iterated <br>dominance</br> in Bayesian 95 games always requires an exponential number of steps when a significant fraction of the games pure strategies can be eliminated, because there are exponentially many pure strategies.",
                "However, this is not a very strong argument because oftentimes we can eliminate exponentially many pure strategies in one step.",
                "For example, if for some type θr ∈ Θr we have, for all ac ∈ Ac, that u(θr, a1 r, ac) > u(θr, a2 r, ac), then any pure strategy for the row player which plays action a2 r for type θr is dominated (by the strategy that plays action a1 r for type θr instead)-and there are exponentially many (|Ar||Θr|−1 ) such strategies.",
                "It is therefore conceivable that we need only polynomially many eliminations of collections of a players strategies.",
                "However, the following theorem shows that this is not the case, by giving an example where an exponential number of iterations (that is, alternations between the players in eliminating strategies) is required. (We emphasize that this is not a result about computational complexity.)",
                "Theorem 7.",
                "Even in symmetric 3-player Bayesian games, iterated <br>dominance</br> by pure strategies can require an exponential number of iterations (both for strict and weak <br>dominance</br>), even with only three actions per player.",
                "Proof.",
                "Let each player i ∈ {1, 2, 3} have n + 1 types θ1 i , θ2 i , . . . , θn+1 i .",
                "Let each player i have 3 actions ai, bi, ci, and let the utility function of each player be defined as follows. (In the below, i + 1 and i + 2 are shorthand for i + 1(mod 3) and i + 2(mod 3) when used as player indices.",
                "Also, −∞ can be replaced by a sufficiently negative number.",
                "Finally, δ and should be chosen to be very small (even compared to 2−(n+1) ), and should be more than twice as large as δ.) • ui(θ1 i ; ai, ci+1, ci+2) = −1; • ui(θ1 i ; ai, si+1, si+2) = 0 for si+1 = ci+1 or si+2 = ci+2; • ui(θ1 i ; bi, si+1, si+2) = − for si+1 = ai+1 and si+2 = ai+2; • ui(θ1 i ; bi, si+1, si+2) = −∞ for si+1 = ai+1 or si+2 = ai+2; • ui(θ1 i ; ci, si+1, si+2) = −∞ for all si+1, si+2; • ui(θj i ; ai, si+1, si+2) = −∞ for all si+1, si+2 when j > 1; • ui(θj i ; bi, si+1, si+2) = − for all si+1, si+2 when j > 1; • ui(θj i ; ci, si+1, ci+2) = δ − − 1/2 for all si+1 when j > 1; • ui(θj i ; ci, si+1, si+2) = δ− for all si+1 and si+2 = ci+2 when j > 1.",
                "Let the distribution over each players types be given by p(θj i ) = 2−j (with the exception that p(θ2 i ) = 2−2 +2−(n+1) ).",
                "We will be interested in eliminating strategies of the following form: play bi for type θ1 i , and play one of bi or ci otherwise.",
                "Because the utility function is the same for any type θj i with j > 1, these strategies are effectively defined by the total probability that they place on ci,8 which is t2 i (2−2 + 2−(n+1) ) + n+1 j=3 tj i 2−j where tj i = 1 if player i 8 Note that the strategies are still pure strategies; the probability placed on an action by a strategy here is simply the sum of the probabilities of the types for which the strategy chooses that action. plays ci for type θj i , and 0 otherwise.",
                "This probability is different for any two different strategies of the given form, and we have exponentially many different strategies of the given form.",
                "For any probability q which can be expressed as t2(2−2 + 2−(n+1) ) + n+1 j=3 tj2−j (with all tj ∈ {0, 1}), let σi(q) denote the (unique) strategy of the given form for player i which places a total probability of q on ci.",
                "Any strategy that plays ci for type θ1 i or ai for some type θj i with j > 1 can immediately be eliminated.",
                "We will show that, after that, we must eliminate the strategies σi(q) with high q first, slowly working down to those with lower q.",
                "Claim 1: If σi+1(q ) and σi+2(q ) have not yet been eliminated, and q < q , then σi(q) cannot yet be eliminated.",
                "Proof: First, we show that no strategy σi(q ) can eliminate σi(q).",
                "Against σi+1(q ), σi+2(q ), the utility of playing σi(p) is − + p · δ − p · q /2.",
                "Thus, when q = 0, it is best to set p as high as possible (and we note that σi+1(0) and σi+2(0) have not been eliminated), but when q > 0, it is best to set p as low as possible because δ < q /2.",
                "Thus, whether q > q or q < q , σi(q) will always do strictly better than σi(q ) against some remaining opponent strategies.",
                "Hence, no strategy σi(q ) can eliminate σi(q).",
                "The only other pure strategies that could dominate σi(q) are strategies that play ai for type θ1 i , and bi or ci for all other types.",
                "Let us take such a strategy and suppose that it plays c with probability p. Against σi+1(q ), σi+2(q ) (which have not yet been eliminated), the utility of playing this strategy is −(q )2 /2 − /2 + p · δ − p · q /2.",
                "On the other hand, playing σi(q) gives − + q · δ − q · q /2.",
                "Because q > q, we have −(q )2 /2 < −q · q /2, and because δ and are small, it follows that σi(q) receives a higher utility.",
                "Therefore, no strategy dominates σi(q), proving the claim.",
                "Claim 2: If for all q > q, σi+1(q ) and σi+2(q ) have been eliminated, then σi(q) can be eliminated.",
                "Proof: Consider the strategy for player i that plays ai for type θ1 i , and bi for all other types (call this strategy σi); we claim σi dominates σi(q).",
                "First, if either of the other players k plays ak for θ1 k, then σi performs better than σi(q) (which receives −∞ in some cases).",
                "Because the strategies for player k that play ck for type θ1 k, or ak for some type θj k with j > 1, have already been eliminated, all that remains to check is that σi performs better than σi(q) whenever both of the other two players play strategies of the following form: play bk for type θ1 k, and play one of bk or ck otherwise.",
                "We note that among these strategies, there are none left that place probability greater than q on ck.",
                "Letting qk denote the probability with which player k plays ck, the expected utility of playing σi is −qi+1 · qi+2/2 − /2.",
                "On the other hand, the utility of playing σi(q) is − + q · δ − q · qi+2/2.",
                "Because qi+1 ≤ q, the difference between these two expressions is at least /2 − δ, which is positive.",
                "It follows that σi dominates σi(q).",
                "From Claim 2, it follows that all strategies of the form σi(q) will eventually be eliminated.",
                "However, Claim 1 shows that we cannot go ahead and eliminate multiple such strategies for one player, unless at least one other player simultaneously keeps up in the eliminated strategies: every time a σi(q) is eliminated such that σi+1(q) and σi+2(q) have not yet been eliminated, we need to eliminate one of the latter two strategies before any σi(q ) with q > q can be eliminated-that is, we need to alternate between players.",
                "Because there are exponentially many strategies of the form σi(q), it follows that iterated elimination will require exponentially many iterations to complete. 96 It follows that an efficient algorithm for iterated <br>dominance</br> (strict or weak) by pure strategies in Bayesian games, if it exists, must somehow be able to perform (at least part of) many iterations in a single step of the algorithm (because if each step only performed a single iteration, we would need exponentially many steps).",
                "Interestingly, Knuth et al. [11] argue that iterated <br>dominance</br> appears to be an inherently sequential problem (in light of their result that iterated very weak <br>dominance</br> is P-complete, that is, apparently not efficiently parallelizable), suggesting that aggregating many iterations may be difficult. 7.",
                "CONCLUSIONS While the Nash equilibrium solution concept is studied more and more intensely in our community, the perhaps more elementary concept of (iterated) <br>dominance</br> has received much less attention.",
                "In this paper we studied various computational aspects of this concept.",
                "We first studied both strict and weak <br>dominance</br> (not iterated), and showed that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve.",
                "We then moved on to iterated <br>dominance</br>.",
                "We showed that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak <br>dominance</br>.",
                "This allowed us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
                "Both of these results hold both with and without <br>dominance</br> by mixed strategies. (A weaker version of the second result (only without <br>dominance</br> by mixed strategies) was already known [7].)",
                "Iterated strict <br>dominance</br>, on the other hand, is path-independent (both with and without <br>dominance</br> by mixed strategies) and can therefore be done in polynomial time.",
                "We then studied what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies.",
                "First, we showed that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak <br>dominance</br>).",
                "Then, we showed that iterated strict <br>dominance</br> becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict <br>dominance</br> under this restriction is NP-complete (even when the limit on the support size is 3).",
                "Finally, we studied <br>dominance</br> and iterated <br>dominance</br> in Bayesian games, as an example of a concise representation language for normal form games that is interesting in its own right.",
                "We showed that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete (both with strict and weak <br>dominance</br>); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak <br>dominance</br>).",
                "Finally, we showed that iterated <br>dominance</br> using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak <br>dominance</br>).",
                "There are various avenues for future research.",
                "First, there is the open question of whether it is possible to complete iterated <br>dominance</br> in Bayesian games in polynomial time (even though we showed that an exponential number of alternations between the players in eliminating strategies is sometimes required).",
                "Second, we can study computational aspects of (iterated) <br>dominance</br> in concise representations of normal form games other than Bayesian games-for example, in graphical games [9] or local-effect/action graph games [12, 2]. (How to efficiently perform iterated very weak <br>dominance</br> has already been studied for partially observable stochastic games [8].)",
                "Finally, we can ask whether some of the algorithms we described (such as the one for iterated strict <br>dominance</br> with mixed strategies) can be made faster. 8.",
                "REFERENCES [1] Krzysztof R. Apt.",
                "Uniform proofs of order independence for various strategy elimination procedures.",
                "Contributions to Theoretical Economics, 4(1), 2004. [2] Nivan A. R. Bhat and Kevin Leyton-Brown.",
                "Computing Nash equilibria of action-graph games.",
                "In UAI, 2004. [3] Ben Blum, Christian R. Shelton, and Daphne Koller.",
                "A continuation method for Nash equilibria in structured games.",
                "In IJCAI, 2003. [4] Vincent Conitzer and Tuomas Sandholm.",
                "Complexity results about Nash equilibria.",
                "In IJCAI, pages 765-771, 2003. [5] Drew Fudenberg and Jean Tirole.",
                "Game Theory.",
                "MIT Press, 1991. [6] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
                "On the order of eliminating dominated strategies.",
                "Operations Research Letters, 9:85-89, 1990. [7] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
                "The complexity of eliminating dominated strategies.",
                "Mathematics of Operation Research, 18:553-565, 1993. [8] Eric A. Hansen, Daniel S. Bernstein, and Shlomo Zilberstein.",
                "Dynamic programming for partially observable stochastic games.",
                "In AAAI, pages 709-715, 2004. [9] Michael Kearns, Michael Littman, and Satinder Singh.",
                "Graphical models for game theory.",
                "In UAI, 2001. [10] Leonid Khachiyan.",
                "A polynomial algorithm in linear programming.",
                "Soviet Math.",
                "Doklady, 20:191-194, 1979. [11] Donald E. Knuth, Christos H. Papadimitriou, and John N Tsitsiklis.",
                "A note on strategy elimination in bimatrix games.",
                "Operations Research Letters, 7(3):103-107, 1988. [12] Kevin Leyton-Brown and Moshe Tennenholtz.",
                "Local-effect games.",
                "In IJCAI, 2003. [13] Richard Lipton, Evangelos Markakis, and Aranyak Mehta.",
                "Playing large games using simple strategies.",
                "In ACM-EC, pages 36-41, 2003. [14] Michael Littman and Peter Stone.",
                "A polynomial-time Nash equilibrium algorithm for repeated games.",
                "In ACM-EC, pages 48-54, 2003. [15] Leslie M. Marx and Jeroen M. Swinkels.",
                "Order independence for iterated weak <br>dominance</br>.",
                "Games and Economic Behavior, 18:219-245, 1997. [16] Leslie M. Marx and Jeroen M. Swinkels.",
                "Corrigendum, order independence for iterated weak <br>dominance</br>.",
                "Games and Economic Behavior, 31:324-329, 2000. [17] Andreu Mas-Colell, Michael Whinston, and Jerry R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [18] Roger Myerson.",
                "Game Theory: Analysis of Conflict.",
                "Harvard University Press, Cambridge, 1991. [19] Martin J Osborne and Ariel Rubinstein.",
                "A Course in Game Theory.",
                "MIT Press, 1994. [20] Christos Papadimitriou.",
                "Algorithms, games and the Internet.",
                "In STOC, pages 749-753, 2001. [21] Ryan Porter, Eugene Nudelman, and Yoav Shoham.",
                "Simple search methods for finding a Nash equilibrium.",
                "In AAAI, pages 664-669, 2004. 97"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Complejidad de (iterado) \"Dominio\" ∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, EE. UU. Conitzer@cs.cmu.edu tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, EE. UU.Resumen EDU Estudiamos varios aspectos computacionales de la resolución de juegos utilizando \"dominio\" y dominio iterado.",
                "Primero estudiamos tanto \"dominio\" estricto y débil (no iterado), y mostramos que verificar si una estrategia dada está dominada por alguna estrategia mixta se puede hacer en tiempo polinomial utilizando un solo programa lineal.",
                "Luego pasamos al \"dominio\" iterado.",
                "Mostramos que determinar si hay algún camino que elimine una estrategia dada es completar NP con el \"dominio\" débil iterado.",
                "",
                "El \"dominio\" estricto, por otro lado, es independiente de la ruta (con y sin \"dominio\" por estrategias mixtas) y, por lo tanto, se puede hacer en tiempo polinómico.",
                "Primero, mostramos que encontrar la estrategia dominante con un tamaño de soporte mínimo es NP-completado (tanto para \"dominio\" estricto como débil).",
                "Luego, mostramos que la \"dominancia\" estricta se vuelve dependiente de la ruta cuando hay un límite en el tamaño de soporte de las estrategias dominantes, y que decidir si una estrategia dada puede ser eliminada por una \"dominancia\" estricta iterada bajo esta restricción es NP-Complete (incluso cuando el límite del tamaño de soporte es 3).",
                "Mostramos que, a diferencia de los juegos normales de forma, decidir si una estrategia pura dada está dominada por otra estrategia pura en un juego bayesiano es NP complete (tanto con \"dominio\" estricto y débil);Sin embargo, decidir si una estrategia está dominada por alguna estrategia mixta aún se puede hacer en tiempo polinómico con un solo programa lineal resuelve (tanto con estricto como débil ∗ Este material se basa en el trabajo apoyado por la National Science Foundation bajo las subvenciones ITR IIS-0121678e IIS-0427858, y una comunión Sloan. \"Dominio\").",
                "Finalmente, mostramos que el \"dominio\" iterado que usa estrategias puras puede requerir un número exponencial de iteraciones en un juego bayesiano (tanto con \"dominio\" estricto y débil)."
            ],
            "translated_text": "",
            "candidates": [
                "dominio",
                "Dominio",
                "dominio",
                "dominio",
                "dominio",
                "dominio",
                "dominio",
                "dominio",
                "dominio",
                "",
                "dominio",
                "dominio",
                "dominio",
                "dominio",
                "dominio",
                "dominio",
                "dominio",
                "dominio",
                "dominancia",
                "dominancia",
                "dominio",
                "dominio",
                "Dominio",
                "dominio",
                "dominio",
                "dominio"
            ],
            "error": []
        },
        "elimination": {
            "translated_key": "eliminación",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Complexity of (Iterated) Dominance∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT We study various computational aspects of solving games using dominance and iterated dominance.",
                "We first study both strict and weak dominance (not iterated), and show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve.",
                "We then move on to iterated dominance.",
                "We show that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance.",
                "This allows us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
                "Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].)",
                "Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time.",
                "We then study what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies.",
                "First, we show that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak dominance).",
                "Then, we show that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3).",
                "Finally, we study Bayesian games.",
                "We show that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak ∗ This material is based upon work supported by the National Science Foundation under ITR grants IIS-0121678 and IIS-0427858, and a Sloan Fellowship. dominance).",
                "Finally, we show that iterated dominance using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak dominance).",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In multiagent systems with self-interested agents, the optimal action for one agent may depend on the actions taken by other agents.",
                "In such settings, the agents require tools from game theory to rationally decide on an action.",
                "Game theory offers various formal models of strategic settings-the best-known of which is a game in normal (or matrix) form, specifying a utility (payoff) for each agent for each combination of strategies that the agents choose-as well as solution concepts, which, given a game, specify which outcomes are reasonable (under various assumptions of rationality and common knowledge).",
                "Probably the best-known (and certainly the most-studied) solution concept is that of Nash equilibrium.",
                "A Nash equilibrium specifies a strategy for each player, in such a way that no player has an incentive to (unilaterally) deviate from the prescribed strategy.",
                "Recently, numerous papers have studied computing Nash equilibria in various settings [9, 4, 12, 3, 13, 14], and the complexity of constructing a Nash equilibrium in normal form games has been labeled one of the two most important open problems on the boundary of P today [20].",
                "The problem of computing solutions according to the perhaps more elementary solution concepts of dominance and iterated dominance has received much less attention. (After an early short paper on an easy case [11], the main computational study of these concepts has actually taken place in a paper in the game theory community [7].1 ) A strategy strictly dominates another strategy if it performs strictly 1 This is not to say that computer scientists have ignored 88 better against all vectors of opponent strategies, and weakly dominates it if it performs at least as well against all vectors of opponent strategies, and strictly better against at least one.",
                "The idea is that dominated strategies can be eliminated from consideration.",
                "In iterated dominance, the <br>elimination</br> proceeds in rounds, and becomes easier as more strategies are eliminated: in any given round, the dominating strategy no longer needs to perform better than or as well as the dominated strategy against opponent strategies that were eliminated in earlier rounds.",
                "Computing solutions according to (iterated) dominance is important for at least the following reasons: 1) it can be computationally easier than computing (for instance) a Nash equilibrium (and therefore it can be useful as a preprocessing step in computing a Nash equilibrium), and 2) (iterated) dominance requires a weaker rationality assumption on the players than (for instance) Nash equilibrium, and therefore solutions derived according to it are more likely to occur.",
                "In this paper, we study some fundamental computational questions concerning dominance and iterated dominance, including how hard it is to check whether a given strategy can be eliminated by each of the variants of these notions.",
                "The rest of the paper is organized as follows.",
                "In Section 2, we briefly review definitions and basic properties of normal form games, strict and weak dominance, and iterated strict and weak dominance.",
                "In the remaining sections, we study computational aspects of dominance and iterated dominance.",
                "In Section 3, we study one-shot (not iterated) dominance.",
                "In Section 4, we study iterated dominance.",
                "In Section 5, we study dominance and iterated dominance when the dominating strategy can only place probability on a few pure strategies.",
                "Finally, in Section 6, we study dominance and iterated dominance in Bayesian games. 2.",
                "DEFINITIONS AND BASIC PROPERTIES In this section, we briefly review normal form games, as well as dominance and iterated dominance (both strict and weak).",
                "An n-player normal form game is defined as follows.",
                "Definition 1.",
                "A normal form game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of pure strategies Σi and a utility function ui : Σ1 × Σ2 × . . . × Σn → R (where ui(σ1, σ2, . . . , σn) denotes player is utility when each player j plays action σj).",
                "The two main notions of dominance are defined as follows.",
                "Definition 2.",
                "Player is strategy σi is said to be strictly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
                "Player is strategy σi is said to be weakly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) ≥ ui(σi, σ−i), and for at least one vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
                "In this definition, it is sometimes allowed for the dominating strategy σi to be a mixed strategy, that is, a probability distribution over pure strategies.",
                "In this case, the utilities in dominance altogether.",
                "For example, simple dominance checks are sometimes used as a subroutine in searching for Nash equilibria [21]. the definition are the expected utilities.2 There are other notions of dominance, such as very weak dominance (in which no strict inequality is required, so two strategies can dominate each other), but we will not study them here.",
                "When we are looking at the dominance relations for player i, the other players (−i) can be thought of as a single player.3 Therefore, in the rest of the paper, when we study one-shot (not iterated) dominance, we will focus without loss of generality on two-player games.4 In two-player games, we will generally refer to the players as r (row) and c (column) rather than 1 and 2.",
                "In iterated dominance, dominated strategies are removed from the game, and no longer have any effect on future dominance relations.",
                "Iterated dominance can eliminate more strategies than dominance, as follows. σr may originally not dominate σr because the latter performs better against σc; but then, once σc is removed because it is dominated by σc, σr dominates σr, and the latter can be removed.",
                "For example, in the following game, R can be removed first, after which D is dominated.",
                "L R U 1, 1 0, 0 D 0, 1 1, 0 Either strict or weak dominance can be used in the definition of iterated dominance.",
                "We note that the process of iterated dominance is never helped by removing a dominated mixed strategy, for the following reason.",
                "If σi gives player i a higher utility than σi against mixed strategy σj for player j = i (and strategies σ−{i,j} for the other players), then for at least one pure strategy σj that σj places positive probability on, σi must perform better than σi against σj (and strategies σ−{i,j} for the other players).",
                "Thus, removing the mixed strategy σj does not introduce any new dominances.",
                "More detailed discussions and examples can be found in standard texts on microeconomics or game theory [17, 5].",
                "We are now ready to move on to the core of this paper. 3.",
                "DOMINANCE (NOT ITERATED) In this section, we study the notion of one-shot (not iterated) dominance.",
                "As a first observation, checking whether a given strategy is strictly (weakly) dominated by some pure strategy is straightforward, by checking, for every pure strategy for that player, whether the latter strategy performs strictly better against all the opponents strategies (at least as well against all the opponents strategies, and strictly 2 The dominated strategy σi is, of course, also allowed to be mixed, but this has no technical implications for the paper: when we study one-shot dominance, we ask whether a given strategy is dominated, and it does not matter whether the given strategy is pure or mixed; when we study iterated dominance, there is no use in eliminating mixed strategies, as we will see shortly. 3 This player may have a very large strategy space (one pure strategy for every vector of pure strategies for the players that are being replaced).",
                "Nevertheless, this will not result in an increase in our representation size, because the original representation already had to specify utilities for each of these vectors. 4 We note that a restriction to two-player games would not be without loss of generality for iterated dominance.",
                "This is because for iterated dominance, we need to look at the dominated strategies of each individual player, so we cannot merge any players. 89 better against at least one).5 Next, we show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time by solving a single linear program. (Similar linear programs have been given before [18]; we present the result here for completeness, and because we will build on the linear programs given below in Theorem 6.)",
                "Proposition 1.",
                "Given the row players utilities, a subset Dr of the row players pure strategies Σr, and a distinguished strategy σ∗ r for the row player, we can check in time polynomial in the size of the game (by solving a single linear program of polynomial size) whether there exists some mixed strategy σr, that places positive probability only on strategies in Dr and dominates σ∗ r , both for strict and for weak dominance.",
                "Proof.",
                "Let pdr be the probability that σr places on dr ∈ Dr. We will solve a single linear program in each of our algorithms; linear programs can be solved in polynomial time [10].",
                "For strict dominance, the question is whether the pdr can be set so that for every pure strategy for the column player σc ∈ Σc, dr∈Dr pdr ur(dr, σc) > ur(σ∗ r , σc).",
                "Because the inequality must be strict, we cannot solve this directly by linear programming.",
                "We proceed as follows.",
                "Because the game is finite, we may assume without loss of generality that all utilities are positive (if not, simply add a constant to all utilities.)",
                "Solve the following linear program: minimize dr∈Dr pdr such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc).",
                "If σ∗ r is strictly dominated by some mixed strategy, this linear program has a solution with objective value < 1. (The dominating strategy is a feasible solution with objective value exactly 1.",
                "Because no constraint is binding for this solution, we can reduce one of the probabilities slightly without affecting feasibility, thereby obtaining a solution with objective value < 1.)",
                "Moreover, if this linear program has a solution with objective value < 1, there is a mixed strategy strictly dominating σ∗ r , which can be obtained by taking the LP solution and adding the remaining probability to any strategy (because all the utilities are positive, this will add to the left side of any inequality, so all inequalities will become strict).",
                "For weak dominance, we can solve the following linear program: maximize σc∈Σc (( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc)) such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc); dr∈Dr pdr = 1.",
                "If σ∗ r is weakly dominated by some mixed strategy, then that mixed strategy is a feasible solution to this program with objective value > 0, because for at least one strategy σc ∈ Σc we have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0.",
                "On the other hand, if this program has a solution with objective value > 0, then for at least one strategy σc ∈ Σc we 5 Recall that the assumption of a single opponent (that is, the assumption of two players) is without loss of generality for one-shot dominance. must have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0, and thus the linear programs solution is a weakly dominating mixed strategy. 4.",
                "ITERATED DOMINANCE We now move on to iterated dominance.",
                "It is well-known that iterated strict dominance is path-independent [6, 19]that is, if we remove dominated strategies until no more dominated strategies remain, in the end the remaining strategies for each player will be the same, regardless of the order in which strategies are removed.",
                "Because of this, to see whether a given strategy can be eliminated by iterated strict dominance, all that needs to be done is to repeatedly remove strategies that are strictly dominated, until no more dominated strategies remain.",
                "Because we can check in polynomial time whether any given strategy is dominated (whether or not dominance by mixed strategies is allowed, as described in Section 3), this whole procedure takes only polynomial time.",
                "In the case of iterated dominance by pure strategies with two players, Knuth et al. [11] slightly improve on (speed up) the straightforward implementation of this procedure by keeping track of, for each ordered pair of strategies for a player, the number of opponent strategies that prevent the first strategy from dominating the second.",
                "Hereby the runtime for an m × n game is reduced from O((m + n)4 ) to O((m + n)3 ). (Actually, they only study very weak dominance (for which no strict inequalities are required), but the approach is easily extended.)",
                "In contrast, iterated weak dominance is known to be pathdependent.6 For example, in the following game, using iterated weak dominance we can eliminate M first, and then D, or R first, and then U. L M R U 1, 1 0, 0 1, 0 D 1, 1 1, 0 0, 0 Therefore, while the procedure of removing weakly dominated strategies until no more weakly dominated strategies remain can certainly be executed in polynomial time, which strategies survive in the end depends on the order in which we remove the dominated strategies.",
                "We will investigate two questions for iterated weak dominance: whether a given strategy is eliminated in some path, and whether there is a path to a unique solution (one pure strategy left per player).",
                "We will show that both of these problems are computationally hard.",
                "Definition 3.",
                "Given a game in normal form and a distinguished strategy σ∗ , IWD-STRATEGY-<br>elimination</br> asks whether there is some path of iterated weak dominance that eliminates σ∗ .",
                "Given a game in normal form, IWDUNIQUE-SOLUTION asks whether there is some path of iterated weak dominance that leads to a unique solution (one strategy left per player).",
                "The following lemma shows a special case of normal form games in which allowing for weak dominance by mixed strategies (in addition to weak dominance by pure strategies) does 6 There is, however, a restriction of weak dominance called nice weak dominance which is path-independent [15, 16].",
                "For an overview of path-independence results, see Apt [1]. 90 not help.",
                "We will prove the hardness results in this setting, so that they will hold whether or not dominance by mixed strategies is allowed.",
                "Lemma 1.",
                "Suppose that all the utilities in a game are in {0, 1}.",
                "Then every pure strategy that is weakly dominated by a mixed strategy is also weakly dominated by a pure strategy.",
                "Proof.",
                "Suppose pure strategy σ is weakly dominated by mixed strategy σ∗ .",
                "If σ gets a utility of 1 against some opponent strategy (or vector of opponent strategies if there are more than 2 players), then all the pure strategies that σ∗ places positive probability on must also get a utility of 1 against that opponent strategy (or else the expected utility would be smaller than 1).",
                "Moreover, at least one of the pure strategies that σ∗ places positive probability on must get a utility of 1 against an opponent strategy that σ gets 0 against (or else the inequality would never be strict).",
                "It follows that this pure strategy weakly dominates σ.",
                "We are now ready to prove the main results of this section.",
                "Theorem 1.",
                "IWD-STRATEGY-<br>elimination</br> is NPcomplete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed.",
                "Proof.",
                "The problem is in NP because given a sequence of strategies to be eliminated, we can easily check whether this is a valid sequence of eliminations (even when dominance by mixed strategies is allowed, using Proposition 1).",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following IWD-STRATEGY-<br>elimination</br> instance. (In this instance, we will specify that certain strategies are uneliminable.",
                "A strategy σr can be made uneliminable, even when 0 and 1 are the only allowed utilities, by adding another strategy σr and another opponent strategy σc, so that: 1. σr and σr are the only strategies that give the row player a utility of 1 against σc. 2. σr and σr always give the row player the same utility. 3. σc is the only strategy that gives the column player a utility of 1 against σr, but otherwise σc always gives the column player utility 0.",
                "This makes it impossible to eliminate any of these three strategies.",
                "We will not explicitly specify the additional strategies to make the proof more legible.)",
                "In this proof, we will denote row player strategies by s, and column player strategies by t, to improve legibility.",
                "Let the row players pure strategy set be given as follows.",
                "For every variable v ∈ V , the row player has corresponding strategies s1 +v, s2 +v, s1 −v, s2 −v.",
                "Additionally, the row player has the following 2 strategies: s1 0 and s2 0, where s2 0 = σ∗ r (that is, it is the strategy we seek to eliminate).",
                "Finally, for every clause c ∈ C, the row player has corresponding strategies s1 c (uneliminable) and s2 c. Let the column players pure strategy set be given as follows.",
                "For every variable v ∈ V , the column player has a corresponding strategy tv.",
                "For every clause c ∈ C, the column player has a corresponding strategy tc, and additionally, for every literal l ∈ L that occurs in c, a strategy tc,l.",
                "For every variable v ∈ V , the column player has corresponding strategies t+v, t−v (both uneliminable).",
                "Finally, the column player has three additional strategies: t1 0 (uneliminable), t2 0, and t1.",
                "The utility function for the row player is given as follows: • ur(s1 +v, tv) = 0 for all v ∈ V ; • ur(s2 +v, tv) = 1 for all v ∈ V ; • ur(s1 −v, tv) = 1 for all v ∈ V ; • ur(s2 −v, tv) = 0 for all v ∈ V ; • ur(s1 +v, t1) = 1 for all v ∈ V ; • ur(s2 +v, t1) = 0 for all v ∈ V ; • ur(s1 −v, t1) = 0 for all v ∈ V ; • ur(s2 −v, t1) = 1 for all v ∈ V ; • ur(sb +v, t+v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sb −v, t−v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sl, t) = 0 otherwise for all l ∈ L and t ∈ S2; • ur(s1 0, tc) = 0 for all c ∈ C; • ur(s2 0, tc) = 1 for all c ∈ C; • ur(sb 0, t1 0) = 1 for all b ∈ {1, 2}; • ur(s1 0, t2 0) = 1; • ur(s2 0, t2 0) = 0; • ur(sb 0, t) = 0 otherwise for all b ∈ {1, 2} and t ∈ S2; • ur(sb c, t) = 0 otherwise for all c ∈ C and b ∈ {1, 2}; and the row players utility is 0 in every other case.",
                "The utility function for the column player is given as follows: • uc(s, tv) = 0 for all v ∈ V and s ∈ S1; • uc(s, t1) = 0 for all s ∈ S1; • uc(s2 l , tc) = 1 for all c ∈ C and l ∈ L where l ∈ c (literal l occurs in clause c); • uc(s2 l2 , tc,l1 ) = 1 for all c ∈ C and l1, l2 ∈ L, l1 = l2 where l2 ∈ c; • uc(s1 c, tc) = 1 for all c ∈ C; • uc(s2 c, tc) = 0 for all c ∈ C; • uc(sb c, tc,l) = 1 for all c ∈ C, l ∈ L, and b ∈ {1, 2}; • uc(s2, tc) = uc(s2, tc,l) = 0 otherwise for all c ∈ C and l ∈ L; and the column players utility is 0 in every other case.",
                "We now show that the two instances are equivalent.",
                "First, suppose there is a solution to the satisfiability instance: that is, a truth-value assignment to the variables in V such that all clauses are satisfied.",
                "Then, consider the following sequence of eliminations in our game: 1.",
                "For every variable v that is set to true in the assignment, eliminate tv (which gives the column player utility 0 everywhere). 2.",
                "Then, for every variable v that is set to true in the assignment, eliminate s2 +v using s1 +v (which is possible because tv has been eliminated, and because t1 has not been eliminated (yet)). 3.",
                "Now eliminate t1 (which gives the column player utility 0 everywhere). 4.",
                "Next, for every variable v that is set to false in the assignment, eliminate s2 −v using s1 −v (which is possible because t1 has been eliminated, and because tv has not been eliminated (yet)). 5.",
                "For every clause c which has the variable corresponding to one of its positive literals l = +v set to true in the assignment, eliminate tc using tc,l (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 6.",
                "For every clause c which has the variable corresponding to one of its negative literals l = −v set to false in the assignment, eliminate tc using tc,l 91 (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 7.",
                "Because the assignment satisfied the formula, all the tc have now been eliminated.",
                "Thus, we can eliminate s2 0 = σ∗ r using s1 0.",
                "It follows that there is a solution to the IWD-STRATEGY-<br>elimination</br> instance.",
                "Now suppose there is a solution to the IWD-STRATEGYELIMINATION instance.",
                "By Lemma 1, we can assume that all the dominances are by pure strategies.",
                "We first observe that only s1 0 can eliminate s2 0 = σ∗ r , because it is the only other strategy that gets the row player a utility of 1 against t1 0, and t1 0 is uneliminable.",
                "However, because s2 0 performs better than s1 0 against the tc strategies, it follows that all of the tc strategies must be eliminated.",
                "For each c ∈ C, the strategy tc can only be eliminated by one of the strategies tc,l (with the same c), because these are the only other strategies that get the column player a utility of 1 against s1 c, and s1 c is uneliminable.",
                "But, in order for some tc,l to eliminate tc, s2 l must be eliminated first.",
                "Only s1 l can eliminate s2 l , because it is the only other strategy that gets the row player a utility of 1 against tl, and tl is uneliminable.",
                "We next show that for every v ∈ V only one of s2 +v, s2 −v can be eliminated.",
                "This is because in order for s1 +v to eliminate s2 +v, tv needs to have been eliminated and t1, not (so tv must be eliminated before t1); but in order for s1 −v to eliminate s2 −v, t1 needs to have been eliminated and tv, not (so t1 must be eliminated before tv).",
                "So, set v to true if s2 +v is eliminated, and to false otherwise Because by the above, for every clause c, one of the s2 l with l ∈ c must be eliminated, it follows that this is a satisfying assignment to the satisfiability instance.",
                "Using Theorem 1, it is now (relatively) easy to show that IWD-UNIQUE-SOLUTION is also NP-complete under the same restrictions.",
                "Theorem 2.",
                "IWD-UNIQUE-SOLUTION is NP-complete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed.",
                "Proof.",
                "Again, the problem is in NP because we can nondeterministically choose the sequence of eliminations and verify whether it is correct.",
                "To show NP-hardness, we reduce an arbitrary IWD-STRATEGY-<br>elimination</br> instance to the following IWD-UNIQUE-SOLUTION instance.",
                "Let all the strategies for each player from the original instance remain part of the new instance, and let the utilities resulting from the players playing a pair of these strategies be the same.",
                "We add three additional strategies σ1 r , σ2 r , σ3 r for the row player, and three additional strategies σ1 c , σ2 c , σ3 c for the column player.",
                "Let the additional utilities be as follows: • ur(σr, σj c) = 1 for all σr /∈ {σ1 r , σ2 r , σ3 r } and j ∈ {2, 3}; • ur(σi r, σc) = 1 for all i ∈ {1, 2, 3} and σc /∈ {σ2 c , σ3 c }; • ur(σi r, σ2 c ) = 1 for all i ∈ {2, 3}; • ur(σ1 r , σ3 c ) = 1; • and the row players utility is 0 in all other cases involving a new strategy. • uc(σ3 r , σc) = 1 for all σc /∈ {σ1 c , σ2 c , σ3 c }; • uc(σ∗ r , σj c) = 1 for all j ∈ {2, 3} (σ∗ r is the strategy to be eliminated in the original instance); • uc(σi r, σ1 c ) = 1 for all i ∈ {1, 2}; • ur(σ1 r , σ2 c ) = 1; • ur(σ2 r , σ3 c ) = 1; • and the column players utility is 0 in all other cases involving a new strategy.",
                "We proceed to show that the two instances are equivalent.",
                "First suppose there exists a solution to the original IWDSTRATEGY-<br>elimination</br> instance.",
                "Then, perform the same sequence of eliminations to eliminate σ∗ r in the new IWD-UNIQUE-SOLUTION instance. (This is possible because at any stage, any weak dominance for the row player in the original instance is still a weak dominance in the new instance, because the two strategies utilities for the row player are the same when the column player plays one of the new strategies; and the same is true for the column player.)",
                "Once σ∗ r is eliminated, let σ1 c eliminate σ2 c . (It performs better against σ2 r .)",
                "Then, let σ1 r eliminate all the other remaining strategies for the row player. (It always performs better against either σ1 c or σ3 c .)",
                "Finally, σ1 c is the unique best response against σ1 r among the column players remaining strategies, so let it eliminate all the other remaining strategies for the column player.",
                "Thus, there exists a solution to the IWD-UNIQUE-SOLUTION instance.",
                "Now suppose there exists a solution to the IWD-UNIQUESOLUTION instance.",
                "By Lemma 1, we can assume that all the dominances are by pure strategies.",
                "We will show that none of the new strategies (σ1 r , σ2 r , σ3 r , σ1 c , σ2 c , σ3 c ) can either eliminate another strategy, or be eliminated before σ∗ r is eliminated.",
                "Thus, there must be a sequence of eliminations ending in the <br>elimination</br> of σ∗ r , which does not involve any of the new strategies, and is therefore a valid sequence of eliminations in the original game (because all original strategies perform the same against each new strategy).",
                "We now show that this is true by exhausting all possibilities for the first <br>elimination</br> before σ∗ r is eliminated that involves a new strategy.",
                "None of the σi r can be eliminated by a σr /∈ {σ1 r , σ2 r , σ3 r }, because the σi r perform better against σ1 c . σ1 r cannot eliminate any other strategy, because it always performs poorer against σ2 c . σ2 r and σ3 r are equivalent from the row players perspective (and thus cannot eliminate each other), and cannot eliminate any other strategy because they always perform poorer against σ3 c .",
                "None of the σj c can be eliminated by a σc /∈ {σ1 c , σ2 c , σ3 c }, because the σj c always perform better against either σ1 r or σ2 r . σ1 c cannot eliminate any other strategy, because it always performs poorer against either σ∗ r or σ3 r . σ2 c cannot eliminate any other strategy, because it always performs poorer against σ2 r or σ3 r . σ3 c cannot eliminate any other strategy, because it always performs poorer against σ1 r or σ3 r .",
                "Thus, there exists a solution to the IWDSTRATEGY-<br>elimination</br> instance.",
                "A slightly weaker version of the part of Theorem 2 concerning dominance by pure strategies only is the main result of Gilboa et al. [7]. (Besides not proving the result for dominance by mixed strategies, the original result was weaker because it required utilities {0, 1, 2, 3, 4, 5, 6, 7, 8} rather than just {0, 1} (and because of this, our Lemma 1 cannot be applied to it to get the result for mixed strategies).) 5. (ITERATED) DOMINANCE USING MIXED STRATEGIES WITH SMALL SUPPORTS When showing that a strategy is dominated by a mixed strategy, there are several reasons to prefer exhibiting a 92 dominating strategy that places positive probability on as few pure strategies as possible.",
                "First, this will reduce the number of bits required to specify the dominating strategy (and thus the proof of dominance can be communicated quicker): if the dominating mixed strategy places positive probability on only k strategies, then it can be specified using k real numbers for the probabilities, plus k log m (where m is the number of strategies for the player under consideration) bits to indicate which strategies are used.",
                "Second, the proof of dominance will be cleaner: for a dominating mixed strategy, it is typically (always in the case of strict dominance) possible to spread some of the probability onto any unused pure strategy and still have a dominating strategy, but this obscures which pure strategies are the ones that are key in making the mixed strategy dominating.",
                "Third, because (by the previous) the argument for eliminating the dominated strategy is simpler and easier to understand, it is more likely to be accepted.",
                "Fourth, the level of risk neutrality required for the argument to work is reduced, at least in the extreme case where dominance by a single pure strategy can be exhibited (no risk neutrality is required here).",
                "This motivates the following problem.",
                "Definition 4 (MINIMUM-DOMINATING-SET).",
                "We are given the row players utilities of a game in normal form, a distinguished strategy σ∗ for the row player, a specification of whether the dominance should be strict or weak, and a number k. We are asked whether there exists a mixed strategy σ for the row player that places positive probability on at most k pure strategies, and dominates σ∗ in the required sense.",
                "Unfortunately, this problem is NP-complete.",
                "Theorem 3.",
                "MINIMUM-DOMINATING-SET is NPcomplete, both for strict and for weak dominance.",
                "Proof.",
                "The problem is in NP because we can nondeterministically choose a set of at most k strategies to give positive probability, and decide whether we can dominate σ∗ with these k strategies as described in Proposition 1.",
                "To show NP-hardness, we reduce an arbitrary SET-COVER instance (given a set S, subsets S1, S2, . . . , Sr, and a number t, can all of S be covered by at most t of the subsets?) to the following MINIMUM-DOMINATING-SET instance.",
                "For every element s ∈ S, there is a pure strategy σs for the column player.",
                "For every subset Si, there is a pure strategy σSi for the row player.",
                "Finally, there is the distinguished pure strategy σ∗ for the row player.",
                "The row players utilities are as follows: ur(σSi , σs) = t + 1 if s ∈ Si; ur(σSi , σs) = 0 if s /∈ Si; ur(σ∗ , σs) = 1 for all s ∈ S. Finally, we let k = t. We now proceed to show that the two instances are equivalent.",
                "First suppose there exists a solution to the SET-COVER instance.",
                "Without loss of generality, we can assume that there are exactly k subsets in the cover.",
                "Then, for every Si that is in the cover, let the dominating strategy σ place exactly 1 k probability on the corresponding pure strategy σSi .",
                "Now, if we let n(s) be the number of subsets in the cover containing s (we observe that that n(s) ≥ 1), then for every strategy σs for the column player, the row players expected utility for playing σ when the column player is playing σs is u(σ, σs) = n(s) k (k + 1) ≥ k+1 k > 1 = u(σ∗ , σs).",
                "So σ strictly (and thus also weakly) dominates σ∗ , and there exists a solution to the MINIMUM-DOMINATING-SET instance.",
                "Now suppose there exists a solution to the MINIMUMDOMINATING-SET instance.",
                "Consider the (at most k) pure strategies of the form σSi on which the dominating mixed strategy σ places positive probability, and let T be the collection of the corresponding subsets Si.",
                "We claim that T is a cover.",
                "For suppose there is some s ∈ S that is not in any of the subsets in T .",
                "Then, if the column player plays σs, the row player (when playing σ) will always receive utility 0-as opposed to the utility of 1 the row player would receive for playing σ∗ , contradicting the fact that σ dominates σ∗ (whether this dominance is weak or strict).",
                "It follows that there exists a solution to the SET-COVER instance.",
                "On the other hand, if we require that the dominating strategy only places positive probability on a very small number of pure strategies, then it once again becomes easy to check whether a strategy is dominated.",
                "Specifically, to find out whether player is strategy σ∗ is dominated by a strategy that places positive probability on only k pure strategies, we can simply check, for every subset of k of player is pure strategies, whether there is a strategy that places positive probability only on these k strategies and dominates σ∗ , using Proposition 1.",
                "This requires only O(|Σi|k ) such checks.",
                "Thus, if k is a constant, this constitutes a polynomial-time algorithm.",
                "A natural question to ask next is whether iterated strict dominance remains computationally easy when dominating strategies are required to place positive probability on at most k pure strategies, where k is a small constant. (We have already shown in Section 4 that iterated weak dominance is hard even when k = 1, that is, only dominance by pure strategies is allowed.)",
                "Of course, if iterated strict dominance were path-independent under this restriction, computational easiness would follow as it did in Section 4.",
                "However, it turns out that this is not the case.",
                "Observation 1.",
                "If we restrict the dominating strategies to place positive probability on at most two pure strategies, iterated strict dominance becomes path-dependent.",
                "Proof.",
                "Consider the following game: 7, 1 0, 0 0, 0 0, 0 7, 1 0, 0 3, 0 3, 0 0, 0 0, 0 0, 0 3, 1 1, 0 1, 0 1, 0 Let (i, j) denote the outcome in which the row player plays the ith row and the column player plays the jth column.",
                "Because (1, 1), (2, 2), and (4, 3) are all Nash equilibria, none of the column players pure strategies will ever be eliminated, and neither will rows 1, 2, and 4.",
                "We now observe that randomizing uniformly over rows 1 and 2 dominates row 3, and randomizing uniformly over rows 3 and 4 dominates row 5.",
                "However, if we eliminate row 3 first, it becomes impossible to dominate row 5 without randomizing over at least 3 pure strategies.",
                "Indeed, iterated strict dominance turns out to be hard even when k = 3.",
                "Theorem 4.",
                "If we restrict the dominating strategies to place positive probability on at most three pure strategies, it becomes NP-complete to decide whether a given strategy can be eliminated using iterated strict dominance. 93 Proof.",
                "The problem is in NP because given a sequence of strategies to be eliminated, we can check in polynomial time whether this is a valid sequence of eliminations (for any strategy to be eliminated, we can check, for every subset of three other strategies, whether there is a strategy placing positive probability on only these three strategies that dominates the strategy to be eliminated, using Proposition 1).",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following two-player game.",
                "For every variable v ∈ V , the row player has strategies s+v, s−v, s1 v, s2 v, s3 v, s4 v, and the column player has strategies t1 v, t2 v, t3 v, t4 v. For every clause c ∈ C, the row player has a strategy sc, and the column player has a strategy tc, as well as, for every literal l occurring in c, an additional strategy tl c. The row player has two additional strategies s1 and s2. (s2 is the strategy that we are seeking to eliminate.)",
                "Finally, the column player has one additional strategy t1.",
                "The utility function for the row player is given as follows (where is some sufficiently small number): • ur(s+v, tj v) = 4 if j ∈ {1, 2}, for all v ∈ V ; • ur(s+v, tj v) = 1 if j ∈ {3, 4}, for all v ∈ V ; • ur(s−v, tj v) = 1 if j ∈ {1, 2}, for all v ∈ V ; • ur(s−v, tj v) = 4 if j ∈ {3, 4}, for all v ∈ V ; • ur(s+v, t) = ur(s−v, t) = 0 for all v ∈ V and t /∈ {t1 v, t2 v, t3 v, t4 v}; • ur(si v, ti v) = 13 for all v ∈ V and i ∈ {1, 2, 3, 4}; • ur(si v, t) = for all v ∈ V , i ∈ {1, 2, 3, 4}, and t = ti v; • ur(sc, tc) = 2 for all c ∈ C; • ur(sc, t) = 0 for all c ∈ C and t = tc; • ur(s1, t1) = 1 + ; • ur(s1, t) = for all t = t1; • ur(s2, t1) = 1; • ur(s2, tc) = 1 for all c ∈ C; • ur(s2, t) = 0 for all t /∈ {t1} ∪ {tc : c ∈ C}.",
                "The utility function for the column player is given as follows: • uc(si v, ti v) = 1 for all v ∈ V and i ∈ {1, 2, 3, 4}; • uc(s, ti v) = 0 for all v ∈ V , i ∈ {1, 2, 3, 4}, and s = si v; • uc(sc, tc) = 1 for all c ∈ C; • uc(sl, tc) = 1 for all c ∈ C and l ∈ L occurring in c; • uc(s, tc) = 0 for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c}; • uc(sc, tl c) = 1 + for all c ∈ C; • uc(sl , tl c) = 1 + for all c ∈ C and l = l occurring in c; • uc(s, tl c) = for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c, l = l }; • uc(s2, t1) = 1; • uc(s, t1) = 0 for all s = s2.",
                "We now show that the two instances are equivalent.",
                "First, suppose that there is a solution to the satisfiability instance.",
                "Then, consider the following sequence of eliminations in our game: 1.",
                "For every variable v that is set to true in the satisfying assignment, eliminate s+v with the mixed strategy σr that places probability 1/3 on s−v, probability 1/3 on s1 v, and probability 1/3 on s2 v. (The expected utility of playing σr against t1 v or t2 v is 14/3 > 4; against t3 v or t4 v, it is 4/3 > 1; and against anything else it is 2 /3 > 0.",
                "Hence the dominance is valid.) 2.",
                "Similarly, for every variable v that is set to false in the satisfying assignment, eliminate s−v with the mixed strategy σr that places probability 1/3 on s+v, probability 1/3 on s3 v, and probability 1/3 on s4 v. (The expected utility of playing σr against t1 v or t2 v is 4/3 > 1; against t3 v or t4 v, it is 14/3 > 4; and against anything else it is 2 /3 > 0.",
                "Hence the dominance is valid.) 3.",
                "For every c ∈ C, eliminate tc with any tl c for which l was set to true in the satisfying assignment. (This is a valid dominance because tl c performs better than tc against any strategy other than sl, and we eliminated sl in step 1 or in step 2.) 4.",
                "Finally, eliminate s2 with s1. (This is a valid dominance because s1 performs better than s2 against any strategy other than those in {tc : c ∈ C}, which we eliminated in step 3.)",
                "Hence, there is an <br>elimination</br> path that eliminates s2.",
                "Now, suppose that there is an <br>elimination</br> path that eliminates s2.",
                "The strategy that eventually dominates s2 must place most of its probability on s1, because s1 is the only other strategy that performs well against t1, which cannot be eliminated before s2.",
                "But, s1 performs significantly worse than s2 against any strategy tc with c ∈ C, so it follows that all these strategies must be eliminated first.",
                "Each strategy tc can only be eliminated by a strategy that places most of its weight on the corresponding strategies tl c with l ∈ c, because they are the only other strategies that perform well against sc, which cannot be eliminated before tc.",
                "But, each strategy tl c performs significantly worse than tc against sl, so it follows that for every clause c, for one of the literals l occurring in it, sl must be eliminated first.",
                "Now, strategies of the form tj v will never be eliminated because they are the unique best responses to the corresponding strategies sj v (which are, in turn, the best responses to the corresponding tj v).",
                "As a result, if strategy s+v (respectively, s−v) is eliminated, then its opposite strategy s−v (respectively, s+v) can no longer be eliminated, for the following reason.",
                "There is no other pure strategy remaining that gets a significant utility against more than one of the strategies t1 v, t2 v, t3 v, t4 v, but s−v (respectively, s+v) gets significant utility against all 4, and therefore cannot be dominated by a mixed strategy placing positive probability on at most 3 strategies.",
                "It follows that for each v ∈ V , at most one of the strategies s+v, s−v is eliminated, in such a way that for every clause c, for one of the literals l occurring in it, sl must be eliminated.",
                "But then setting all the literals l such that sl is eliminated to true constitutes a solution to the satisfiability instance.",
                "In the next section, we return to the setting where there is no restriction on the number of pure strategies on which a dominating mixed strategy can place positive probability. 6. (ITERATED) DOMINANCE IN BAYESIAN GAMES So far, we have focused on normal form games that are flatly represented (that is, every matrix entry is given ex94 plicitly).",
                "However, for many games, the flat representation is too large to write down explicitly, and instead, some representation that exploits the structure of the game needs to be used.",
                "Bayesian games, besides being of interest in their own right, can be thought of as a useful structured representation of normal form games, and we will study them in this section.",
                "In a Bayesian game, each player first receives privately held preference information (the players type) from a distribution, which determines the utility that that player receives for every outcome of (that is, vector of actions played in) the game.",
                "After receiving this type, the player plays an action based on it.7 Definition 5.",
                "A Bayesian game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of actions Ai, a (finite) type space Θi with a probability distribution πi over it, and a utility function ui : Θi × A1 × A2 × . . . × An → R (where ui(θi, a1, a2, . . . , an) denotes player is utility when is type is θi and each player j plays action aj).",
                "A pure strategy in a Bayesian game is a mapping from types to actions, σi : Θi → Ai, where σi(θi) denotes the action that player i plays for type θi.",
                "Any vector of pure strategies in a Bayesian game defines an (expected) utility for each player, and therefore we can translate a Bayesian game into a normal form game.",
                "In this normal form game, the notions of dominance and iterated dominance are defined as before.",
                "However, the normal form representation of the game is exponentially larger than the Bayesian representation, because each player i has |Ai||Θi| distinct pure strategies.",
                "Thus, any algorithm for Bayesian games that relies on expanding the game to its normal form will require exponential time.",
                "Specifically, our easiness results for normal form games do not directly transfer to this setting.",
                "In fact, it turns out that checking whether a strategy is dominated by a pure strategy is hard in Bayesian games.",
                "Theorem 5.",
                "In a Bayesian game, it is NP-complete to decide whether a given pure strategy σr : Θr → Ar is dominated by some other pure strategy (both for strict and weak dominance), even when the row players distribution over types is uniform.",
                "Proof.",
                "The problem is in NP because it is easy to verify whether a candidate dominating strategy is indeed a dominating strategy.",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a set of clauses C using variables from V ) to the following Bayesian game.",
                "Let the row players action set be Ar = {t, f, 0} and let the column players action set be Ac = {ac : c ∈ C}.",
                "Let the row players type set be Θr = {θv : v ∈ V }, with a distribution πr that is uniform.",
                "Let the row players utility function be as follows: • ur(θv, 0, ac) = 0 for all v ∈ V and c ∈ C; • ur(θv, b, ac) = |V | for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b satisfies c; • ur(θv, b, ac) = −1 for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b does not satisfy c. 7 In general, a player can also receive a signal about the other players preferences, but we will not concern ourselves with that here.",
                "Let the pure strategy to be dominated be the one that plays 0 for every type.",
                "We show that the strategy is dominated by a pure strategy if and only if there is a solution to the satisfiability instance.",
                "First, suppose there is a solution to the satisfiability instance.",
                "Then, let σd r be given by: σd r (θv) = t if v is set to true in the solution to the satisfiability instance, and σd r (θv) = f otherwise.",
                "Then, against any action ac by the column player, there is at least one type θv such that either +v ∈ c and σd r (θv) = t, or −v ∈ c and σd r (θv) = f. Thus, the row players expected utility against action ac is at least |V | |V | − |V |−1 |V | = 1 |V | > 0.",
                "So, σd r is a dominating strategy.",
                "Now, suppose there is a dominating pure strategy σd r .",
                "This dominating strategy must play t or f for at least one type.",
                "Thus, against any ac by the column player, there must at least be some type θv for which ur(θv, σd r (θv), ac) > 0.",
                "That is, there must be at least one variable v such that setting v to σd r (θv) satifies c. But then, setting each v to σd r (θv) must satisfy all the clauses.",
                "So a satisfying assignment exists.",
                "However, it turns out that we can modify the linear programs from Proposition 1 to obtain a polynomial time algorithm for checking whether a strategy is dominated by a mixed strategy in Bayesian games.",
                "Theorem 6.",
                "In a Bayesian game, it can be decided in polynomial time whether a given (possibly mixed) strategy σr is dominated by some other mixed strategy, using linear programming (both for strict and weak dominance).",
                "Proof.",
                "We can modify the linear programs presented in Proposition 1 as follows.",
                "For strict dominance, again assuming without loss of generality that all the utilities in the game are positive, use the following linear program (in which pσr r (θr, ar) is the probability that σr, the strategy to be dominated, places on ar for type θr): minimize θr∈Θr ar∈Ar pr(ar) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) ≤ 1.",
                "Assuming that π(θr) > 0 for all θr ∈ Θr, this program will return an objective value smaller than |Θr| if and only if σr is strictly dominated, by reasoning similar to that done in Proposition 1.",
                "For weak dominance, use the following linear program: maximize ac∈Ac ( θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar)− θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar)) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) = 1.",
                "This program will return an objective value greater than 0 if and only if σr is weakly dominated, by reasoning similar to that done in Proposition 1.",
                "We now turn to iterated dominance in Bayesian games.",
                "Na¨ıvely, one might argue that iterated dominance in Bayesian 95 games always requires an exponential number of steps when a significant fraction of the games pure strategies can be eliminated, because there are exponentially many pure strategies.",
                "However, this is not a very strong argument because oftentimes we can eliminate exponentially many pure strategies in one step.",
                "For example, if for some type θr ∈ Θr we have, for all ac ∈ Ac, that u(θr, a1 r, ac) > u(θr, a2 r, ac), then any pure strategy for the row player which plays action a2 r for type θr is dominated (by the strategy that plays action a1 r for type θr instead)-and there are exponentially many (|Ar||Θr|−1 ) such strategies.",
                "It is therefore conceivable that we need only polynomially many eliminations of collections of a players strategies.",
                "However, the following theorem shows that this is not the case, by giving an example where an exponential number of iterations (that is, alternations between the players in eliminating strategies) is required. (We emphasize that this is not a result about computational complexity.)",
                "Theorem 7.",
                "Even in symmetric 3-player Bayesian games, iterated dominance by pure strategies can require an exponential number of iterations (both for strict and weak dominance), even with only three actions per player.",
                "Proof.",
                "Let each player i ∈ {1, 2, 3} have n + 1 types θ1 i , θ2 i , . . . , θn+1 i .",
                "Let each player i have 3 actions ai, bi, ci, and let the utility function of each player be defined as follows. (In the below, i + 1 and i + 2 are shorthand for i + 1(mod 3) and i + 2(mod 3) when used as player indices.",
                "Also, −∞ can be replaced by a sufficiently negative number.",
                "Finally, δ and should be chosen to be very small (even compared to 2−(n+1) ), and should be more than twice as large as δ.) • ui(θ1 i ; ai, ci+1, ci+2) = −1; • ui(θ1 i ; ai, si+1, si+2) = 0 for si+1 = ci+1 or si+2 = ci+2; • ui(θ1 i ; bi, si+1, si+2) = − for si+1 = ai+1 and si+2 = ai+2; • ui(θ1 i ; bi, si+1, si+2) = −∞ for si+1 = ai+1 or si+2 = ai+2; • ui(θ1 i ; ci, si+1, si+2) = −∞ for all si+1, si+2; • ui(θj i ; ai, si+1, si+2) = −∞ for all si+1, si+2 when j > 1; • ui(θj i ; bi, si+1, si+2) = − for all si+1, si+2 when j > 1; • ui(θj i ; ci, si+1, ci+2) = δ − − 1/2 for all si+1 when j > 1; • ui(θj i ; ci, si+1, si+2) = δ− for all si+1 and si+2 = ci+2 when j > 1.",
                "Let the distribution over each players types be given by p(θj i ) = 2−j (with the exception that p(θ2 i ) = 2−2 +2−(n+1) ).",
                "We will be interested in eliminating strategies of the following form: play bi for type θ1 i , and play one of bi or ci otherwise.",
                "Because the utility function is the same for any type θj i with j > 1, these strategies are effectively defined by the total probability that they place on ci,8 which is t2 i (2−2 + 2−(n+1) ) + n+1 j=3 tj i 2−j where tj i = 1 if player i 8 Note that the strategies are still pure strategies; the probability placed on an action by a strategy here is simply the sum of the probabilities of the types for which the strategy chooses that action. plays ci for type θj i , and 0 otherwise.",
                "This probability is different for any two different strategies of the given form, and we have exponentially many different strategies of the given form.",
                "For any probability q which can be expressed as t2(2−2 + 2−(n+1) ) + n+1 j=3 tj2−j (with all tj ∈ {0, 1}), let σi(q) denote the (unique) strategy of the given form for player i which places a total probability of q on ci.",
                "Any strategy that plays ci for type θ1 i or ai for some type θj i with j > 1 can immediately be eliminated.",
                "We will show that, after that, we must eliminate the strategies σi(q) with high q first, slowly working down to those with lower q.",
                "Claim 1: If σi+1(q ) and σi+2(q ) have not yet been eliminated, and q < q , then σi(q) cannot yet be eliminated.",
                "Proof: First, we show that no strategy σi(q ) can eliminate σi(q).",
                "Against σi+1(q ), σi+2(q ), the utility of playing σi(p) is − + p · δ − p · q /2.",
                "Thus, when q = 0, it is best to set p as high as possible (and we note that σi+1(0) and σi+2(0) have not been eliminated), but when q > 0, it is best to set p as low as possible because δ < q /2.",
                "Thus, whether q > q or q < q , σi(q) will always do strictly better than σi(q ) against some remaining opponent strategies.",
                "Hence, no strategy σi(q ) can eliminate σi(q).",
                "The only other pure strategies that could dominate σi(q) are strategies that play ai for type θ1 i , and bi or ci for all other types.",
                "Let us take such a strategy and suppose that it plays c with probability p. Against σi+1(q ), σi+2(q ) (which have not yet been eliminated), the utility of playing this strategy is −(q )2 /2 − /2 + p · δ − p · q /2.",
                "On the other hand, playing σi(q) gives − + q · δ − q · q /2.",
                "Because q > q, we have −(q )2 /2 < −q · q /2, and because δ and are small, it follows that σi(q) receives a higher utility.",
                "Therefore, no strategy dominates σi(q), proving the claim.",
                "Claim 2: If for all q > q, σi+1(q ) and σi+2(q ) have been eliminated, then σi(q) can be eliminated.",
                "Proof: Consider the strategy for player i that plays ai for type θ1 i , and bi for all other types (call this strategy σi); we claim σi dominates σi(q).",
                "First, if either of the other players k plays ak for θ1 k, then σi performs better than σi(q) (which receives −∞ in some cases).",
                "Because the strategies for player k that play ck for type θ1 k, or ak for some type θj k with j > 1, have already been eliminated, all that remains to check is that σi performs better than σi(q) whenever both of the other two players play strategies of the following form: play bk for type θ1 k, and play one of bk or ck otherwise.",
                "We note that among these strategies, there are none left that place probability greater than q on ck.",
                "Letting qk denote the probability with which player k plays ck, the expected utility of playing σi is −qi+1 · qi+2/2 − /2.",
                "On the other hand, the utility of playing σi(q) is − + q · δ − q · qi+2/2.",
                "Because qi+1 ≤ q, the difference between these two expressions is at least /2 − δ, which is positive.",
                "It follows that σi dominates σi(q).",
                "From Claim 2, it follows that all strategies of the form σi(q) will eventually be eliminated.",
                "However, Claim 1 shows that we cannot go ahead and eliminate multiple such strategies for one player, unless at least one other player simultaneously keeps up in the eliminated strategies: every time a σi(q) is eliminated such that σi+1(q) and σi+2(q) have not yet been eliminated, we need to eliminate one of the latter two strategies before any σi(q ) with q > q can be eliminated-that is, we need to alternate between players.",
                "Because there are exponentially many strategies of the form σi(q), it follows that iterated <br>elimination</br> will require exponentially many iterations to complete. 96 It follows that an efficient algorithm for iterated dominance (strict or weak) by pure strategies in Bayesian games, if it exists, must somehow be able to perform (at least part of) many iterations in a single step of the algorithm (because if each step only performed a single iteration, we would need exponentially many steps).",
                "Interestingly, Knuth et al. [11] argue that iterated dominance appears to be an inherently sequential problem (in light of their result that iterated very weak dominance is P-complete, that is, apparently not efficiently parallelizable), suggesting that aggregating many iterations may be difficult. 7.",
                "CONCLUSIONS While the Nash equilibrium solution concept is studied more and more intensely in our community, the perhaps more elementary concept of (iterated) dominance has received much less attention.",
                "In this paper we studied various computational aspects of this concept.",
                "We first studied both strict and weak dominance (not iterated), and showed that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve.",
                "We then moved on to iterated dominance.",
                "We showed that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance.",
                "This allowed us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
                "Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].)",
                "Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time.",
                "We then studied what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies.",
                "First, we showed that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak dominance).",
                "Then, we showed that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3).",
                "Finally, we studied dominance and iterated dominance in Bayesian games, as an example of a concise representation language for normal form games that is interesting in its own right.",
                "We showed that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak dominance).",
                "Finally, we showed that iterated dominance using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak dominance).",
                "There are various avenues for future research.",
                "First, there is the open question of whether it is possible to complete iterated dominance in Bayesian games in polynomial time (even though we showed that an exponential number of alternations between the players in eliminating strategies is sometimes required).",
                "Second, we can study computational aspects of (iterated) dominance in concise representations of normal form games other than Bayesian games-for example, in graphical games [9] or local-effect/action graph games [12, 2]. (How to efficiently perform iterated very weak dominance has already been studied for partially observable stochastic games [8].)",
                "Finally, we can ask whether some of the algorithms we described (such as the one for iterated strict dominance with mixed strategies) can be made faster. 8.",
                "REFERENCES [1] Krzysztof R. Apt.",
                "Uniform proofs of order independence for various strategy <br>elimination</br> procedures.",
                "Contributions to Theoretical Economics, 4(1), 2004. [2] Nivan A. R. Bhat and Kevin Leyton-Brown.",
                "Computing Nash equilibria of action-graph games.",
                "In UAI, 2004. [3] Ben Blum, Christian R. Shelton, and Daphne Koller.",
                "A continuation method for Nash equilibria in structured games.",
                "In IJCAI, 2003. [4] Vincent Conitzer and Tuomas Sandholm.",
                "Complexity results about Nash equilibria.",
                "In IJCAI, pages 765-771, 2003. [5] Drew Fudenberg and Jean Tirole.",
                "Game Theory.",
                "MIT Press, 1991. [6] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
                "On the order of eliminating dominated strategies.",
                "Operations Research Letters, 9:85-89, 1990. [7] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
                "The complexity of eliminating dominated strategies.",
                "Mathematics of Operation Research, 18:553-565, 1993. [8] Eric A. Hansen, Daniel S. Bernstein, and Shlomo Zilberstein.",
                "Dynamic programming for partially observable stochastic games.",
                "In AAAI, pages 709-715, 2004. [9] Michael Kearns, Michael Littman, and Satinder Singh.",
                "Graphical models for game theory.",
                "In UAI, 2001. [10] Leonid Khachiyan.",
                "A polynomial algorithm in linear programming.",
                "Soviet Math.",
                "Doklady, 20:191-194, 1979. [11] Donald E. Knuth, Christos H. Papadimitriou, and John N Tsitsiklis.",
                "A note on strategy <br>elimination</br> in bimatrix games.",
                "Operations Research Letters, 7(3):103-107, 1988. [12] Kevin Leyton-Brown and Moshe Tennenholtz.",
                "Local-effect games.",
                "In IJCAI, 2003. [13] Richard Lipton, Evangelos Markakis, and Aranyak Mehta.",
                "Playing large games using simple strategies.",
                "In ACM-EC, pages 36-41, 2003. [14] Michael Littman and Peter Stone.",
                "A polynomial-time Nash equilibrium algorithm for repeated games.",
                "In ACM-EC, pages 48-54, 2003. [15] Leslie M. Marx and Jeroen M. Swinkels.",
                "Order independence for iterated weak dominance.",
                "Games and Economic Behavior, 18:219-245, 1997. [16] Leslie M. Marx and Jeroen M. Swinkels.",
                "Corrigendum, order independence for iterated weak dominance.",
                "Games and Economic Behavior, 31:324-329, 2000. [17] Andreu Mas-Colell, Michael Whinston, and Jerry R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [18] Roger Myerson.",
                "Game Theory: Analysis of Conflict.",
                "Harvard University Press, Cambridge, 1991. [19] Martin J Osborne and Ariel Rubinstein.",
                "A Course in Game Theory.",
                "MIT Press, 1994. [20] Christos Papadimitriou.",
                "Algorithms, games and the Internet.",
                "In STOC, pages 749-753, 2001. [21] Ryan Porter, Eugene Nudelman, and Yoav Shoham.",
                "Simple search methods for finding a Nash equilibrium.",
                "In AAAI, pages 664-669, 2004. 97"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "En el dominio iterado, la \"eliminación\" avanza en las rondas, y se vuelve más fácil a medida que se eliminan más estrategias: en cualquier ronda dada, la estrategia dominante ya no necesita funcionar mejor que o la estrategia dominada contra las estrategias oponentes que se eliminaronrondas anteriores.",
                "Dado un juego en forma normal y una estrategia distinguida σ ∗, la estrategia IWD- \"eliminación\" pregunta si hay algún camino de dominio débil iterado que elimina σ ∗.",
                "IWD-Strategy- \"Eliminación\" es NPComplete, incluso con 2 jugadores, y con 0 y 1 es la única utilidades que ocurren en la matriz, ya sea por estrategias mixtas o no.",
                "Para mostrar que el problema es NP-Hard, reducimos una instancia de satisfiabilidad arbitraria (dado por un conjunto no vacío de cláusulas C sobre un conjunto de variables no vacío V, con literales correspondientes l = {+V: V ∈ V} ∪ {−v: v ∈ V}) a la siguiente instancia de estrategia IWD- \"eliminación\".(En este caso, especificaremos que ciertas estrategias son ineludibles.",
                "Se deduce que hay una solución a la instancia de \"eliminación\" de IWD-Strategy.",
                "Para mostrar np-hardness, reducimos una instancia arbitraria de estrategia IWD- \"eliminación\" a la siguiente instancia de solución de IWD-Unique.",
                "Primero suponga que existe una solución a la instancia original de \"eliminación\" IWDStrategy- \".",
                "Por lo tanto, debe haber una secuencia de eliminaciones que terminan en la \"eliminación\" de σ ∗ r, que no involucra ninguna de las nuevas estrategias y, por lo tanto, es una secuencia válida de eliminaciones en el juego original (porque todas las estrategias originales realizan las mismas la mismacontra cada nueva estrategia).",
                "Ahora mostramos que esto es cierto al agotar todas las posibilidades para la primera \"eliminación\" antes de que se elimine σ ∗ r que implica una nueva estrategia.",
                "Por lo tanto, existe una solución a la instancia de \"eliminación\" de IWDStrategy."
            ],
            "translated_text": "",
            "candidates": [
                "eliminación",
                "eliminación",
                "eliminación",
                "eliminación",
                "eliminación",
                "Eliminación",
                "Eliminación",
                "eliminación",
                "eliminación",
                "eliminación",
                "eliminación",
                "eliminación",
                "eliminación",
                "eliminación",
                "eliminación",
                "eliminación",
                "eliminación",
                "eliminación",
                "eliminación",
                "eliminación"
            ],
            "error": []
        },
        "strategy": {
            "translated_key": "estrategia",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Complexity of (Iterated) Dominance∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT We study various computational aspects of solving games using dominance and iterated dominance.",
                "We first study both strict and weak dominance (not iterated), and show that checking whether a given <br>strategy</br> is dominated by some mixed <br>strategy</br> can be done in polynomial time using a single linear program solve.",
                "We then move on to iterated dominance.",
                "We show that determining whether there is some path that eliminates a given <br>strategy</br> is NP-complete with iterated weak dominance.",
                "This allows us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
                "Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].)",
                "Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time.",
                "We then study what happens when the dominating <br>strategy</br> is allowed to place positive probability on only a few pure strategies.",
                "First, we show that finding the dominating <br>strategy</br> with minimum support size is NP-complete (both for strict and weak dominance).",
                "Then, we show that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given <br>strategy</br> can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3).",
                "Finally, we study Bayesian games.",
                "We show that, unlike in normal form games, deciding whether a given pure <br>strategy</br> is dominated by another pure <br>strategy</br> in a Bayesian game is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak ∗ This material is based upon work supported by the National Science Foundation under ITR grants IIS-0121678 and IIS-0427858, and a Sloan Fellowship. dominance).",
                "Finally, we show that iterated dominance using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak dominance).",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In multiagent systems with self-interested agents, the optimal action for one agent may depend on the actions taken by other agents.",
                "In such settings, the agents require tools from game theory to rationally decide on an action.",
                "Game theory offers various formal models of strategic settings-the best-known of which is a game in normal (or matrix) form, specifying a utility (payoff) for each agent for each combination of strategies that the agents choose-as well as solution concepts, which, given a game, specify which outcomes are reasonable (under various assumptions of rationality and common knowledge).",
                "Probably the best-known (and certainly the most-studied) solution concept is that of Nash equilibrium.",
                "A Nash equilibrium specifies a <br>strategy</br> for each player, in such a way that no player has an incentive to (unilaterally) deviate from the prescribed <br>strategy</br>.",
                "Recently, numerous papers have studied computing Nash equilibria in various settings [9, 4, 12, 3, 13, 14], and the complexity of constructing a Nash equilibrium in normal form games has been labeled one of the two most important open problems on the boundary of P today [20].",
                "The problem of computing solutions according to the perhaps more elementary solution concepts of dominance and iterated dominance has received much less attention. (After an early short paper on an easy case [11], the main computational study of these concepts has actually taken place in a paper in the game theory community [7].1 ) A <br>strategy</br> strictly dominates another <br>strategy</br> if it performs strictly 1 This is not to say that computer scientists have ignored 88 better against all vectors of opponent strategies, and weakly dominates it if it performs at least as well against all vectors of opponent strategies, and strictly better against at least one.",
                "The idea is that dominated strategies can be eliminated from consideration.",
                "In iterated dominance, the elimination proceeds in rounds, and becomes easier as more strategies are eliminated: in any given round, the dominating <br>strategy</br> no longer needs to perform better than or as well as the dominated <br>strategy</br> against opponent strategies that were eliminated in earlier rounds.",
                "Computing solutions according to (iterated) dominance is important for at least the following reasons: 1) it can be computationally easier than computing (for instance) a Nash equilibrium (and therefore it can be useful as a preprocessing step in computing a Nash equilibrium), and 2) (iterated) dominance requires a weaker rationality assumption on the players than (for instance) Nash equilibrium, and therefore solutions derived according to it are more likely to occur.",
                "In this paper, we study some fundamental computational questions concerning dominance and iterated dominance, including how hard it is to check whether a given <br>strategy</br> can be eliminated by each of the variants of these notions.",
                "The rest of the paper is organized as follows.",
                "In Section 2, we briefly review definitions and basic properties of normal form games, strict and weak dominance, and iterated strict and weak dominance.",
                "In the remaining sections, we study computational aspects of dominance and iterated dominance.",
                "In Section 3, we study one-shot (not iterated) dominance.",
                "In Section 4, we study iterated dominance.",
                "In Section 5, we study dominance and iterated dominance when the dominating <br>strategy</br> can only place probability on a few pure strategies.",
                "Finally, in Section 6, we study dominance and iterated dominance in Bayesian games. 2.",
                "DEFINITIONS AND BASIC PROPERTIES In this section, we briefly review normal form games, as well as dominance and iterated dominance (both strict and weak).",
                "An n-player normal form game is defined as follows.",
                "Definition 1.",
                "A normal form game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of pure strategies Σi and a utility function ui : Σ1 × Σ2 × . . . × Σn → R (where ui(σ1, σ2, . . . , σn) denotes player is utility when each player j plays action σj).",
                "The two main notions of dominance are defined as follows.",
                "Definition 2.",
                "Player is <br>strategy</br> σi is said to be strictly dominated by player is <br>strategy</br> σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
                "Player is <br>strategy</br> σi is said to be weakly dominated by player is <br>strategy</br> σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) ≥ ui(σi, σ−i), and for at least one vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
                "In this definition, it is sometimes allowed for the dominating <br>strategy</br> σi to be a mixed <br>strategy</br>, that is, a probability distribution over pure strategies.",
                "In this case, the utilities in dominance altogether.",
                "For example, simple dominance checks are sometimes used as a subroutine in searching for Nash equilibria [21]. the definition are the expected utilities.2 There are other notions of dominance, such as very weak dominance (in which no strict inequality is required, so two strategies can dominate each other), but we will not study them here.",
                "When we are looking at the dominance relations for player i, the other players (−i) can be thought of as a single player.3 Therefore, in the rest of the paper, when we study one-shot (not iterated) dominance, we will focus without loss of generality on two-player games.4 In two-player games, we will generally refer to the players as r (row) and c (column) rather than 1 and 2.",
                "In iterated dominance, dominated strategies are removed from the game, and no longer have any effect on future dominance relations.",
                "Iterated dominance can eliminate more strategies than dominance, as follows. σr may originally not dominate σr because the latter performs better against σc; but then, once σc is removed because it is dominated by σc, σr dominates σr, and the latter can be removed.",
                "For example, in the following game, R can be removed first, after which D is dominated.",
                "L R U 1, 1 0, 0 D 0, 1 1, 0 Either strict or weak dominance can be used in the definition of iterated dominance.",
                "We note that the process of iterated dominance is never helped by removing a dominated mixed <br>strategy</br>, for the following reason.",
                "If σi gives player i a higher utility than σi against mixed <br>strategy</br> σj for player j = i (and strategies σ−{i,j} for the other players), then for at least one pure <br>strategy</br> σj that σj places positive probability on, σi must perform better than σi against σj (and strategies σ−{i,j} for the other players).",
                "Thus, removing the mixed <br>strategy</br> σj does not introduce any new dominances.",
                "More detailed discussions and examples can be found in standard texts on microeconomics or game theory [17, 5].",
                "We are now ready to move on to the core of this paper. 3.",
                "DOMINANCE (NOT ITERATED) In this section, we study the notion of one-shot (not iterated) dominance.",
                "As a first observation, checking whether a given <br>strategy</br> is strictly (weakly) dominated by some pure <br>strategy</br> is straightforward, by checking, for every pure strategy for that player, whether the latter strategy performs strictly better against all the opponents strategies (at least as well against all the opponents strategies, and strictly 2 The dominated strategy σi is, of course, also allowed to be mixed, but this has no technical implications for the paper: when we study one-shot dominance, we ask whether a given strategy is dominated, and it does not matter whether the given strategy is pure or mixed; when we study iterated dominance, there is no use in eliminating mixed strategies, as we will see shortly. 3 This player may have a very large strategy space (one pure strategy for every vector of pure strategies for the players that are being replaced).",
                "Nevertheless, this will not result in an increase in our representation size, because the original representation already had to specify utilities for each of these vectors. 4 We note that a restriction to two-player games would not be without loss of generality for iterated dominance.",
                "This is because for iterated dominance, we need to look at the dominated strategies of each individual player, so we cannot merge any players. 89 better against at least one).5 Next, we show that checking whether a given <br>strategy</br> is dominated by some mixed <br>strategy</br> can be done in polynomial time by solving a single linear program. (Similar linear programs have been given before [18]; we present the result here for completeness, and because we will build on the linear programs given below in Theorem 6.)",
                "Proposition 1.",
                "Given the row players utilities, a subset Dr of the row players pure strategies Σr, and a distinguished <br>strategy</br> σ∗ r for the row player, we can check in time polynomial in the size of the game (by solving a single linear program of polynomial size) whether there exists some mixed <br>strategy</br> σr, that places positive probability only on strategies in Dr and dominates σ∗ r , both for strict and for weak dominance.",
                "Proof.",
                "Let pdr be the probability that σr places on dr ∈ Dr. We will solve a single linear program in each of our algorithms; linear programs can be solved in polynomial time [10].",
                "For strict dominance, the question is whether the pdr can be set so that for every pure <br>strategy</br> for the column player σc ∈ Σc, dr∈Dr pdr ur(dr, σc) > ur(σ∗ r , σc).",
                "Because the inequality must be strict, we cannot solve this directly by linear programming.",
                "We proceed as follows.",
                "Because the game is finite, we may assume without loss of generality that all utilities are positive (if not, simply add a constant to all utilities.)",
                "Solve the following linear program: minimize dr∈Dr pdr such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc).",
                "If σ∗ r is strictly dominated by some mixed <br>strategy</br>, this linear program has a solution with objective value < 1. (The dominating <br>strategy</br> is a feasible solution with objective value exactly 1.",
                "Because no constraint is binding for this solution, we can reduce one of the probabilities slightly without affecting feasibility, thereby obtaining a solution with objective value < 1.)",
                "Moreover, if this linear program has a solution with objective value < 1, there is a mixed <br>strategy</br> strictly dominating σ∗ r , which can be obtained by taking the LP solution and adding the remaining probability to any <br>strategy</br> (because all the utilities are positive, this will add to the left side of any inequality, so all inequalities will become strict).",
                "For weak dominance, we can solve the following linear program: maximize σc∈Σc (( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc)) such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc); dr∈Dr pdr = 1.",
                "If σ∗ r is weakly dominated by some mixed <br>strategy</br>, then that mixed <br>strategy</br> is a feasible solution to this program with objective value > 0, because for at least one strategy σc ∈ Σc we have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0.",
                "On the other hand, if this program has a solution with objective value > 0, then for at least one <br>strategy</br> σc ∈ Σc we 5 Recall that the assumption of a single opponent (that is, the assumption of two players) is without loss of generality for one-shot dominance. must have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0, and thus the linear programs solution is a weakly dominating mixed <br>strategy</br>. 4.",
                "ITERATED DOMINANCE We now move on to iterated dominance.",
                "It is well-known that iterated strict dominance is path-independent [6, 19]that is, if we remove dominated strategies until no more dominated strategies remain, in the end the remaining strategies for each player will be the same, regardless of the order in which strategies are removed.",
                "Because of this, to see whether a given <br>strategy</br> can be eliminated by iterated strict dominance, all that needs to be done is to repeatedly remove strategies that are strictly dominated, until no more dominated strategies remain.",
                "Because we can check in polynomial time whether any given <br>strategy</br> is dominated (whether or not dominance by mixed strategies is allowed, as described in Section 3), this whole procedure takes only polynomial time.",
                "In the case of iterated dominance by pure strategies with two players, Knuth et al. [11] slightly improve on (speed up) the straightforward implementation of this procedure by keeping track of, for each ordered pair of strategies for a player, the number of opponent strategies that prevent the first <br>strategy</br> from dominating the second.",
                "Hereby the runtime for an m × n game is reduced from O((m + n)4 ) to O((m + n)3 ). (Actually, they only study very weak dominance (for which no strict inequalities are required), but the approach is easily extended.)",
                "In contrast, iterated weak dominance is known to be pathdependent.6 For example, in the following game, using iterated weak dominance we can eliminate M first, and then D, or R first, and then U. L M R U 1, 1 0, 0 1, 0 D 1, 1 1, 0 0, 0 Therefore, while the procedure of removing weakly dominated strategies until no more weakly dominated strategies remain can certainly be executed in polynomial time, which strategies survive in the end depends on the order in which we remove the dominated strategies.",
                "We will investigate two questions for iterated weak dominance: whether a given <br>strategy</br> is eliminated in some path, and whether there is a path to a unique solution (one pure <br>strategy</br> left per player).",
                "We will show that both of these problems are computationally hard.",
                "Definition 3.",
                "Given a game in normal form and a distinguished <br>strategy</br> σ∗ , IWD-<br>strategy</br>-ELIMINATION asks whether there is some path of iterated weak dominance that eliminates σ∗ .",
                "Given a game in normal form, IWDUNIQUE-SOLUTION asks whether there is some path of iterated weak dominance that leads to a unique solution (one <br>strategy</br> left per player).",
                "The following lemma shows a special case of normal form games in which allowing for weak dominance by mixed strategies (in addition to weak dominance by pure strategies) does 6 There is, however, a restriction of weak dominance called nice weak dominance which is path-independent [15, 16].",
                "For an overview of path-independence results, see Apt [1]. 90 not help.",
                "We will prove the hardness results in this setting, so that they will hold whether or not dominance by mixed strategies is allowed.",
                "Lemma 1.",
                "Suppose that all the utilities in a game are in {0, 1}.",
                "Then every pure <br>strategy</br> that is weakly dominated by a mixed <br>strategy</br> is also weakly dominated by a pure strategy.",
                "Proof.",
                "Suppose pure <br>strategy</br> σ is weakly dominated by mixed <br>strategy</br> σ∗ .",
                "If σ gets a utility of 1 against some opponent <br>strategy</br> (or vector of opponent strategies if there are more than 2 players), then all the pure strategies that σ∗ places positive probability on must also get a utility of 1 against that opponent <br>strategy</br> (or else the expected utility would be smaller than 1).",
                "Moreover, at least one of the pure strategies that σ∗ places positive probability on must get a utility of 1 against an opponent <br>strategy</br> that σ gets 0 against (or else the inequality would never be strict).",
                "It follows that this pure <br>strategy</br> weakly dominates σ.",
                "We are now ready to prove the main results of this section.",
                "Theorem 1.",
                "IWD-<br>strategy</br>-ELIMINATION is NPcomplete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed.",
                "Proof.",
                "The problem is in NP because given a sequence of strategies to be eliminated, we can easily check whether this is a valid sequence of eliminations (even when dominance by mixed strategies is allowed, using Proposition 1).",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following IWD-<br>strategy</br>-ELIMINATION instance. (In this instance, we will specify that certain strategies are uneliminable.",
                "A <br>strategy</br> σr can be made uneliminable, even when 0 and 1 are the only allowed utilities, by adding another <br>strategy</br> σr and another opponent strategy σc, so that: 1. σr and σr are the only strategies that give the row player a utility of 1 against σc. 2. σr and σr always give the row player the same utility. 3. σc is the only strategy that gives the column player a utility of 1 against σr, but otherwise σc always gives the column player utility 0.",
                "This makes it impossible to eliminate any of these three strategies.",
                "We will not explicitly specify the additional strategies to make the proof more legible.)",
                "In this proof, we will denote row player strategies by s, and column player strategies by t, to improve legibility.",
                "Let the row players pure <br>strategy</br> set be given as follows.",
                "For every variable v ∈ V , the row player has corresponding strategies s1 +v, s2 +v, s1 −v, s2 −v.",
                "Additionally, the row player has the following 2 strategies: s1 0 and s2 0, where s2 0 = σ∗ r (that is, it is the <br>strategy</br> we seek to eliminate).",
                "Finally, for every clause c ∈ C, the row player has corresponding strategies s1 c (uneliminable) and s2 c. Let the column players pure <br>strategy</br> set be given as follows.",
                "For every variable v ∈ V , the column player has a corresponding <br>strategy</br> tv.",
                "For every clause c ∈ C, the column player has a corresponding <br>strategy</br> tc, and additionally, for every literal l ∈ L that occurs in c, a <br>strategy</br> tc,l.",
                "For every variable v ∈ V , the column player has corresponding strategies t+v, t−v (both uneliminable).",
                "Finally, the column player has three additional strategies: t1 0 (uneliminable), t2 0, and t1.",
                "The utility function for the row player is given as follows: • ur(s1 +v, tv) = 0 for all v ∈ V ; • ur(s2 +v, tv) = 1 for all v ∈ V ; • ur(s1 −v, tv) = 1 for all v ∈ V ; • ur(s2 −v, tv) = 0 for all v ∈ V ; • ur(s1 +v, t1) = 1 for all v ∈ V ; • ur(s2 +v, t1) = 0 for all v ∈ V ; • ur(s1 −v, t1) = 0 for all v ∈ V ; • ur(s2 −v, t1) = 1 for all v ∈ V ; • ur(sb +v, t+v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sb −v, t−v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sl, t) = 0 otherwise for all l ∈ L and t ∈ S2; • ur(s1 0, tc) = 0 for all c ∈ C; • ur(s2 0, tc) = 1 for all c ∈ C; • ur(sb 0, t1 0) = 1 for all b ∈ {1, 2}; • ur(s1 0, t2 0) = 1; • ur(s2 0, t2 0) = 0; • ur(sb 0, t) = 0 otherwise for all b ∈ {1, 2} and t ∈ S2; • ur(sb c, t) = 0 otherwise for all c ∈ C and b ∈ {1, 2}; and the row players utility is 0 in every other case.",
                "The utility function for the column player is given as follows: • uc(s, tv) = 0 for all v ∈ V and s ∈ S1; • uc(s, t1) = 0 for all s ∈ S1; • uc(s2 l , tc) = 1 for all c ∈ C and l ∈ L where l ∈ c (literal l occurs in clause c); • uc(s2 l2 , tc,l1 ) = 1 for all c ∈ C and l1, l2 ∈ L, l1 = l2 where l2 ∈ c; • uc(s1 c, tc) = 1 for all c ∈ C; • uc(s2 c, tc) = 0 for all c ∈ C; • uc(sb c, tc,l) = 1 for all c ∈ C, l ∈ L, and b ∈ {1, 2}; • uc(s2, tc) = uc(s2, tc,l) = 0 otherwise for all c ∈ C and l ∈ L; and the column players utility is 0 in every other case.",
                "We now show that the two instances are equivalent.",
                "First, suppose there is a solution to the satisfiability instance: that is, a truth-value assignment to the variables in V such that all clauses are satisfied.",
                "Then, consider the following sequence of eliminations in our game: 1.",
                "For every variable v that is set to true in the assignment, eliminate tv (which gives the column player utility 0 everywhere). 2.",
                "Then, for every variable v that is set to true in the assignment, eliminate s2 +v using s1 +v (which is possible because tv has been eliminated, and because t1 has not been eliminated (yet)). 3.",
                "Now eliminate t1 (which gives the column player utility 0 everywhere). 4.",
                "Next, for every variable v that is set to false in the assignment, eliminate s2 −v using s1 −v (which is possible because t1 has been eliminated, and because tv has not been eliminated (yet)). 5.",
                "For every clause c which has the variable corresponding to one of its positive literals l = +v set to true in the assignment, eliminate tc using tc,l (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 6.",
                "For every clause c which has the variable corresponding to one of its negative literals l = −v set to false in the assignment, eliminate tc using tc,l 91 (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 7.",
                "Because the assignment satisfied the formula, all the tc have now been eliminated.",
                "Thus, we can eliminate s2 0 = σ∗ r using s1 0.",
                "It follows that there is a solution to the IWD-<br>strategy</br>-ELIMINATION instance.",
                "Now suppose there is a solution to the IWD-STRATEGYELIMINATION instance.",
                "By Lemma 1, we can assume that all the dominances are by pure strategies.",
                "We first observe that only s1 0 can eliminate s2 0 = σ∗ r , because it is the only other <br>strategy</br> that gets the row player a utility of 1 against t1 0, and t1 0 is uneliminable.",
                "However, because s2 0 performs better than s1 0 against the tc strategies, it follows that all of the tc strategies must be eliminated.",
                "For each c ∈ C, the <br>strategy</br> tc can only be eliminated by one of the strategies tc,l (with the same c), because these are the only other strategies that get the column player a utility of 1 against s1 c, and s1 c is uneliminable.",
                "But, in order for some tc,l to eliminate tc, s2 l must be eliminated first.",
                "Only s1 l can eliminate s2 l , because it is the only other <br>strategy</br> that gets the row player a utility of 1 against tl, and tl is uneliminable.",
                "We next show that for every v ∈ V only one of s2 +v, s2 −v can be eliminated.",
                "This is because in order for s1 +v to eliminate s2 +v, tv needs to have been eliminated and t1, not (so tv must be eliminated before t1); but in order for s1 −v to eliminate s2 −v, t1 needs to have been eliminated and tv, not (so t1 must be eliminated before tv).",
                "So, set v to true if s2 +v is eliminated, and to false otherwise Because by the above, for every clause c, one of the s2 l with l ∈ c must be eliminated, it follows that this is a satisfying assignment to the satisfiability instance.",
                "Using Theorem 1, it is now (relatively) easy to show that IWD-UNIQUE-SOLUTION is also NP-complete under the same restrictions.",
                "Theorem 2.",
                "IWD-UNIQUE-SOLUTION is NP-complete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed.",
                "Proof.",
                "Again, the problem is in NP because we can nondeterministically choose the sequence of eliminations and verify whether it is correct.",
                "To show NP-hardness, we reduce an arbitrary IWD-<br>strategy</br>-ELIMINATION instance to the following IWD-UNIQUE-SOLUTION instance.",
                "Let all the strategies for each player from the original instance remain part of the new instance, and let the utilities resulting from the players playing a pair of these strategies be the same.",
                "We add three additional strategies σ1 r , σ2 r , σ3 r for the row player, and three additional strategies σ1 c , σ2 c , σ3 c for the column player.",
                "Let the additional utilities be as follows: • ur(σr, σj c) = 1 for all σr /∈ {σ1 r , σ2 r , σ3 r } and j ∈ {2, 3}; • ur(σi r, σc) = 1 for all i ∈ {1, 2, 3} and σc /∈ {σ2 c , σ3 c }; • ur(σi r, σ2 c ) = 1 for all i ∈ {2, 3}; • ur(σ1 r , σ3 c ) = 1; • and the row players utility is 0 in all other cases involving a new <br>strategy</br>. • uc(σ3 r , σc) = 1 for all σc /∈ {σ1 c , σ2 c , σ3 c }; • uc(σ∗ r , σj c) = 1 for all j ∈ {2, 3} (σ∗ r is the <br>strategy</br> to be eliminated in the original instance); • uc(σi r, σ1 c ) = 1 for all i ∈ {1, 2}; • ur(σ1 r , σ2 c ) = 1; • ur(σ2 r , σ3 c ) = 1; • and the column players utility is 0 in all other cases involving a new strategy.",
                "We proceed to show that the two instances are equivalent.",
                "First suppose there exists a solution to the original IWDSTRATEGY-ELIMINATION instance.",
                "Then, perform the same sequence of eliminations to eliminate σ∗ r in the new IWD-UNIQUE-SOLUTION instance. (This is possible because at any stage, any weak dominance for the row player in the original instance is still a weak dominance in the new instance, because the two strategies utilities for the row player are the same when the column player plays one of the new strategies; and the same is true for the column player.)",
                "Once σ∗ r is eliminated, let σ1 c eliminate σ2 c . (It performs better against σ2 r .)",
                "Then, let σ1 r eliminate all the other remaining strategies for the row player. (It always performs better against either σ1 c or σ3 c .)",
                "Finally, σ1 c is the unique best response against σ1 r among the column players remaining strategies, so let it eliminate all the other remaining strategies for the column player.",
                "Thus, there exists a solution to the IWD-UNIQUE-SOLUTION instance.",
                "Now suppose there exists a solution to the IWD-UNIQUESOLUTION instance.",
                "By Lemma 1, we can assume that all the dominances are by pure strategies.",
                "We will show that none of the new strategies (σ1 r , σ2 r , σ3 r , σ1 c , σ2 c , σ3 c ) can either eliminate another <br>strategy</br>, or be eliminated before σ∗ r is eliminated.",
                "Thus, there must be a sequence of eliminations ending in the elimination of σ∗ r , which does not involve any of the new strategies, and is therefore a valid sequence of eliminations in the original game (because all original strategies perform the same against each new <br>strategy</br>).",
                "We now show that this is true by exhausting all possibilities for the first elimination before σ∗ r is eliminated that involves a new <br>strategy</br>.",
                "None of the σi r can be eliminated by a σr /∈ {σ1 r , σ2 r , σ3 r }, because the σi r perform better against σ1 c . σ1 r cannot eliminate any other <br>strategy</br>, because it always performs poorer against σ2 c . σ2 r and σ3 r are equivalent from the row players perspective (and thus cannot eliminate each other), and cannot eliminate any other <br>strategy</br> because they always perform poorer against σ3 c .",
                "None of the σj c can be eliminated by a σc /∈ {σ1 c , σ2 c , σ3 c }, because the σj c always perform better against either σ1 r or σ2 r . σ1 c cannot eliminate any other <br>strategy</br>, because it always performs poorer against either σ∗ r or σ3 r . σ2 c cannot eliminate any other <br>strategy</br>, because it always performs poorer against σ2 r or σ3 r . σ3 c cannot eliminate any other strategy, because it always performs poorer against σ1 r or σ3 r .",
                "Thus, there exists a solution to the IWDSTRATEGY-ELIMINATION instance.",
                "A slightly weaker version of the part of Theorem 2 concerning dominance by pure strategies only is the main result of Gilboa et al. [7]. (Besides not proving the result for dominance by mixed strategies, the original result was weaker because it required utilities {0, 1, 2, 3, 4, 5, 6, 7, 8} rather than just {0, 1} (and because of this, our Lemma 1 cannot be applied to it to get the result for mixed strategies).) 5. (ITERATED) DOMINANCE USING MIXED STRATEGIES WITH SMALL SUPPORTS When showing that a <br>strategy</br> is dominated by a mixed <br>strategy</br>, there are several reasons to prefer exhibiting a 92 dominating strategy that places positive probability on as few pure strategies as possible.",
                "First, this will reduce the number of bits required to specify the dominating <br>strategy</br> (and thus the proof of dominance can be communicated quicker): if the dominating mixed <br>strategy</br> places positive probability on only k strategies, then it can be specified using k real numbers for the probabilities, plus k log m (where m is the number of strategies for the player under consideration) bits to indicate which strategies are used.",
                "Second, the proof of dominance will be cleaner: for a dominating mixed <br>strategy</br>, it is typically (always in the case of strict dominance) possible to spread some of the probability onto any unused pure <br>strategy</br> and still have a dominating strategy, but this obscures which pure strategies are the ones that are key in making the mixed strategy dominating.",
                "Third, because (by the previous) the argument for eliminating the dominated <br>strategy</br> is simpler and easier to understand, it is more likely to be accepted.",
                "Fourth, the level of risk neutrality required for the argument to work is reduced, at least in the extreme case where dominance by a single pure <br>strategy</br> can be exhibited (no risk neutrality is required here).",
                "This motivates the following problem.",
                "Definition 4 (MINIMUM-DOMINATING-SET).",
                "We are given the row players utilities of a game in normal form, a distinguished <br>strategy</br> σ∗ for the row player, a specification of whether the dominance should be strict or weak, and a number k. We are asked whether there exists a mixed <br>strategy</br> σ for the row player that places positive probability on at most k pure strategies, and dominates σ∗ in the required sense.",
                "Unfortunately, this problem is NP-complete.",
                "Theorem 3.",
                "MINIMUM-DOMINATING-SET is NPcomplete, both for strict and for weak dominance.",
                "Proof.",
                "The problem is in NP because we can nondeterministically choose a set of at most k strategies to give positive probability, and decide whether we can dominate σ∗ with these k strategies as described in Proposition 1.",
                "To show NP-hardness, we reduce an arbitrary SET-COVER instance (given a set S, subsets S1, S2, . . . , Sr, and a number t, can all of S be covered by at most t of the subsets?) to the following MINIMUM-DOMINATING-SET instance.",
                "For every element s ∈ S, there is a pure <br>strategy</br> σs for the column player.",
                "For every subset Si, there is a pure <br>strategy</br> σSi for the row player.",
                "Finally, there is the distinguished pure <br>strategy</br> σ∗ for the row player.",
                "The row players utilities are as follows: ur(σSi , σs) = t + 1 if s ∈ Si; ur(σSi , σs) = 0 if s /∈ Si; ur(σ∗ , σs) = 1 for all s ∈ S. Finally, we let k = t. We now proceed to show that the two instances are equivalent.",
                "First suppose there exists a solution to the SET-COVER instance.",
                "Without loss of generality, we can assume that there are exactly k subsets in the cover.",
                "Then, for every Si that is in the cover, let the dominating <br>strategy</br> σ place exactly 1 k probability on the corresponding pure <br>strategy</br> σSi .",
                "Now, if we let n(s) be the number of subsets in the cover containing s (we observe that that n(s) ≥ 1), then for every <br>strategy</br> σs for the column player, the row players expected utility for playing σ when the column player is playing σs is u(σ, σs) = n(s) k (k + 1) ≥ k+1 k > 1 = u(σ∗ , σs).",
                "So σ strictly (and thus also weakly) dominates σ∗ , and there exists a solution to the MINIMUM-DOMINATING-SET instance.",
                "Now suppose there exists a solution to the MINIMUMDOMINATING-SET instance.",
                "Consider the (at most k) pure strategies of the form σSi on which the dominating mixed <br>strategy</br> σ places positive probability, and let T be the collection of the corresponding subsets Si.",
                "We claim that T is a cover.",
                "For suppose there is some s ∈ S that is not in any of the subsets in T .",
                "Then, if the column player plays σs, the row player (when playing σ) will always receive utility 0-as opposed to the utility of 1 the row player would receive for playing σ∗ , contradicting the fact that σ dominates σ∗ (whether this dominance is weak or strict).",
                "It follows that there exists a solution to the SET-COVER instance.",
                "On the other hand, if we require that the dominating <br>strategy</br> only places positive probability on a very small number of pure strategies, then it once again becomes easy to check whether a <br>strategy</br> is dominated.",
                "Specifically, to find out whether player is <br>strategy</br> σ∗ is dominated by a <br>strategy</br> that places positive probability on only k pure strategies, we can simply check, for every subset of k of player is pure strategies, whether there is a strategy that places positive probability only on these k strategies and dominates σ∗ , using Proposition 1.",
                "This requires only O(|Σi|k ) such checks.",
                "Thus, if k is a constant, this constitutes a polynomial-time algorithm.",
                "A natural question to ask next is whether iterated strict dominance remains computationally easy when dominating strategies are required to place positive probability on at most k pure strategies, where k is a small constant. (We have already shown in Section 4 that iterated weak dominance is hard even when k = 1, that is, only dominance by pure strategies is allowed.)",
                "Of course, if iterated strict dominance were path-independent under this restriction, computational easiness would follow as it did in Section 4.",
                "However, it turns out that this is not the case.",
                "Observation 1.",
                "If we restrict the dominating strategies to place positive probability on at most two pure strategies, iterated strict dominance becomes path-dependent.",
                "Proof.",
                "Consider the following game: 7, 1 0, 0 0, 0 0, 0 7, 1 0, 0 3, 0 3, 0 0, 0 0, 0 0, 0 3, 1 1, 0 1, 0 1, 0 Let (i, j) denote the outcome in which the row player plays the ith row and the column player plays the jth column.",
                "Because (1, 1), (2, 2), and (4, 3) are all Nash equilibria, none of the column players pure strategies will ever be eliminated, and neither will rows 1, 2, and 4.",
                "We now observe that randomizing uniformly over rows 1 and 2 dominates row 3, and randomizing uniformly over rows 3 and 4 dominates row 5.",
                "However, if we eliminate row 3 first, it becomes impossible to dominate row 5 without randomizing over at least 3 pure strategies.",
                "Indeed, iterated strict dominance turns out to be hard even when k = 3.",
                "Theorem 4.",
                "If we restrict the dominating strategies to place positive probability on at most three pure strategies, it becomes NP-complete to decide whether a given <br>strategy</br> can be eliminated using iterated strict dominance. 93 Proof.",
                "The problem is in NP because given a sequence of strategies to be eliminated, we can check in polynomial time whether this is a valid sequence of eliminations (for any <br>strategy</br> to be eliminated, we can check, for every subset of three other strategies, whether there is a <br>strategy</br> placing positive probability on only these three strategies that dominates the strategy to be eliminated, using Proposition 1).",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following two-player game.",
                "For every variable v ∈ V , the row player has strategies s+v, s−v, s1 v, s2 v, s3 v, s4 v, and the column player has strategies t1 v, t2 v, t3 v, t4 v. For every clause c ∈ C, the row player has a <br>strategy</br> sc, and the column player has a <br>strategy</br> tc, as well as, for every literal l occurring in c, an additional strategy tl c. The row player has two additional strategies s1 and s2. (s2 is the strategy that we are seeking to eliminate.)",
                "Finally, the column player has one additional <br>strategy</br> t1.",
                "The utility function for the row player is given as follows (where is some sufficiently small number): • ur(s+v, tj v) = 4 if j ∈ {1, 2}, for all v ∈ V ; • ur(s+v, tj v) = 1 if j ∈ {3, 4}, for all v ∈ V ; • ur(s−v, tj v) = 1 if j ∈ {1, 2}, for all v ∈ V ; • ur(s−v, tj v) = 4 if j ∈ {3, 4}, for all v ∈ V ; • ur(s+v, t) = ur(s−v, t) = 0 for all v ∈ V and t /∈ {t1 v, t2 v, t3 v, t4 v}; • ur(si v, ti v) = 13 for all v ∈ V and i ∈ {1, 2, 3, 4}; • ur(si v, t) = for all v ∈ V , i ∈ {1, 2, 3, 4}, and t = ti v; • ur(sc, tc) = 2 for all c ∈ C; • ur(sc, t) = 0 for all c ∈ C and t = tc; • ur(s1, t1) = 1 + ; • ur(s1, t) = for all t = t1; • ur(s2, t1) = 1; • ur(s2, tc) = 1 for all c ∈ C; • ur(s2, t) = 0 for all t /∈ {t1} ∪ {tc : c ∈ C}.",
                "The utility function for the column player is given as follows: • uc(si v, ti v) = 1 for all v ∈ V and i ∈ {1, 2, 3, 4}; • uc(s, ti v) = 0 for all v ∈ V , i ∈ {1, 2, 3, 4}, and s = si v; • uc(sc, tc) = 1 for all c ∈ C; • uc(sl, tc) = 1 for all c ∈ C and l ∈ L occurring in c; • uc(s, tc) = 0 for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c}; • uc(sc, tl c) = 1 + for all c ∈ C; • uc(sl , tl c) = 1 + for all c ∈ C and l = l occurring in c; • uc(s, tl c) = for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c, l = l }; • uc(s2, t1) = 1; • uc(s, t1) = 0 for all s = s2.",
                "We now show that the two instances are equivalent.",
                "First, suppose that there is a solution to the satisfiability instance.",
                "Then, consider the following sequence of eliminations in our game: 1.",
                "For every variable v that is set to true in the satisfying assignment, eliminate s+v with the mixed <br>strategy</br> σr that places probability 1/3 on s−v, probability 1/3 on s1 v, and probability 1/3 on s2 v. (The expected utility of playing σr against t1 v or t2 v is 14/3 > 4; against t3 v or t4 v, it is 4/3 > 1; and against anything else it is 2 /3 > 0.",
                "Hence the dominance is valid.) 2.",
                "Similarly, for every variable v that is set to false in the satisfying assignment, eliminate s−v with the mixed <br>strategy</br> σr that places probability 1/3 on s+v, probability 1/3 on s3 v, and probability 1/3 on s4 v. (The expected utility of playing σr against t1 v or t2 v is 4/3 > 1; against t3 v or t4 v, it is 14/3 > 4; and against anything else it is 2 /3 > 0.",
                "Hence the dominance is valid.) 3.",
                "For every c ∈ C, eliminate tc with any tl c for which l was set to true in the satisfying assignment. (This is a valid dominance because tl c performs better than tc against any <br>strategy</br> other than sl, and we eliminated sl in step 1 or in step 2.) 4.",
                "Finally, eliminate s2 with s1. (This is a valid dominance because s1 performs better than s2 against any <br>strategy</br> other than those in {tc : c ∈ C}, which we eliminated in step 3.)",
                "Hence, there is an elimination path that eliminates s2.",
                "Now, suppose that there is an elimination path that eliminates s2.",
                "The <br>strategy</br> that eventually dominates s2 must place most of its probability on s1, because s1 is the only other <br>strategy</br> that performs well against t1, which cannot be eliminated before s2.",
                "But, s1 performs significantly worse than s2 against any <br>strategy</br> tc with c ∈ C, so it follows that all these strategies must be eliminated first.",
                "Each <br>strategy</br> tc can only be eliminated by a <br>strategy</br> that places most of its weight on the corresponding strategies tl c with l ∈ c, because they are the only other strategies that perform well against sc, which cannot be eliminated before tc.",
                "But, each <br>strategy</br> tl c performs significantly worse than tc against sl, so it follows that for every clause c, for one of the literals l occurring in it, sl must be eliminated first.",
                "Now, strategies of the form tj v will never be eliminated because they are the unique best responses to the corresponding strategies sj v (which are, in turn, the best responses to the corresponding tj v).",
                "As a result, if <br>strategy</br> s+v (respectively, s−v) is eliminated, then its opposite <br>strategy</br> s−v (respectively, s+v) can no longer be eliminated, for the following reason.",
                "There is no other pure <br>strategy</br> remaining that gets a significant utility against more than one of the strategies t1 v, t2 v, t3 v, t4 v, but s−v (respectively, s+v) gets significant utility against all 4, and therefore cannot be dominated by a mixed <br>strategy</br> placing positive probability on at most 3 strategies.",
                "It follows that for each v ∈ V , at most one of the strategies s+v, s−v is eliminated, in such a way that for every clause c, for one of the literals l occurring in it, sl must be eliminated.",
                "But then setting all the literals l such that sl is eliminated to true constitutes a solution to the satisfiability instance.",
                "In the next section, we return to the setting where there is no restriction on the number of pure strategies on which a dominating mixed <br>strategy</br> can place positive probability. 6. (ITERATED) DOMINANCE IN BAYESIAN GAMES So far, we have focused on normal form games that are flatly represented (that is, every matrix entry is given ex94 plicitly).",
                "However, for many games, the flat representation is too large to write down explicitly, and instead, some representation that exploits the structure of the game needs to be used.",
                "Bayesian games, besides being of interest in their own right, can be thought of as a useful structured representation of normal form games, and we will study them in this section.",
                "In a Bayesian game, each player first receives privately held preference information (the players type) from a distribution, which determines the utility that that player receives for every outcome of (that is, vector of actions played in) the game.",
                "After receiving this type, the player plays an action based on it.7 Definition 5.",
                "A Bayesian game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of actions Ai, a (finite) type space Θi with a probability distribution πi over it, and a utility function ui : Θi × A1 × A2 × . . . × An → R (where ui(θi, a1, a2, . . . , an) denotes player is utility when is type is θi and each player j plays action aj).",
                "A pure <br>strategy</br> in a Bayesian game is a mapping from types to actions, σi : Θi → Ai, where σi(θi) denotes the action that player i plays for type θi.",
                "Any vector of pure strategies in a Bayesian game defines an (expected) utility for each player, and therefore we can translate a Bayesian game into a normal form game.",
                "In this normal form game, the notions of dominance and iterated dominance are defined as before.",
                "However, the normal form representation of the game is exponentially larger than the Bayesian representation, because each player i has |Ai||Θi| distinct pure strategies.",
                "Thus, any algorithm for Bayesian games that relies on expanding the game to its normal form will require exponential time.",
                "Specifically, our easiness results for normal form games do not directly transfer to this setting.",
                "In fact, it turns out that checking whether a <br>strategy</br> is dominated by a pure <br>strategy</br> is hard in Bayesian games.",
                "Theorem 5.",
                "In a Bayesian game, it is NP-complete to decide whether a given pure <br>strategy</br> σr : Θr → Ar is dominated by some other pure <br>strategy</br> (both for strict and weak dominance), even when the row players distribution over types is uniform.",
                "Proof.",
                "The problem is in NP because it is easy to verify whether a candidate dominating <br>strategy</br> is indeed a dominating <br>strategy</br>.",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a set of clauses C using variables from V ) to the following Bayesian game.",
                "Let the row players action set be Ar = {t, f, 0} and let the column players action set be Ac = {ac : c ∈ C}.",
                "Let the row players type set be Θr = {θv : v ∈ V }, with a distribution πr that is uniform.",
                "Let the row players utility function be as follows: • ur(θv, 0, ac) = 0 for all v ∈ V and c ∈ C; • ur(θv, b, ac) = |V | for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b satisfies c; • ur(θv, b, ac) = −1 for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b does not satisfy c. 7 In general, a player can also receive a signal about the other players preferences, but we will not concern ourselves with that here.",
                "Let the pure <br>strategy</br> to be dominated be the one that plays 0 for every type.",
                "We show that the <br>strategy</br> is dominated by a pure <br>strategy</br> if and only if there is a solution to the satisfiability instance.",
                "First, suppose there is a solution to the satisfiability instance.",
                "Then, let σd r be given by: σd r (θv) = t if v is set to true in the solution to the satisfiability instance, and σd r (θv) = f otherwise.",
                "Then, against any action ac by the column player, there is at least one type θv such that either +v ∈ c and σd r (θv) = t, or −v ∈ c and σd r (θv) = f. Thus, the row players expected utility against action ac is at least |V | |V | − |V |−1 |V | = 1 |V | > 0.",
                "So, σd r is a dominating <br>strategy</br>.",
                "Now, suppose there is a dominating pure <br>strategy</br> σd r .",
                "This dominating <br>strategy</br> must play t or f for at least one type.",
                "Thus, against any ac by the column player, there must at least be some type θv for which ur(θv, σd r (θv), ac) > 0.",
                "That is, there must be at least one variable v such that setting v to σd r (θv) satifies c. But then, setting each v to σd r (θv) must satisfy all the clauses.",
                "So a satisfying assignment exists.",
                "However, it turns out that we can modify the linear programs from Proposition 1 to obtain a polynomial time algorithm for checking whether a <br>strategy</br> is dominated by a mixed <br>strategy</br> in Bayesian games.",
                "Theorem 6.",
                "In a Bayesian game, it can be decided in polynomial time whether a given (possibly mixed) <br>strategy</br> σr is dominated by some other mixed <br>strategy</br>, using linear programming (both for strict and weak dominance).",
                "Proof.",
                "We can modify the linear programs presented in Proposition 1 as follows.",
                "For strict dominance, again assuming without loss of generality that all the utilities in the game are positive, use the following linear program (in which pσr r (θr, ar) is the probability that σr, the <br>strategy</br> to be dominated, places on ar for type θr): minimize θr∈Θr ar∈Ar pr(ar) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) ≤ 1.",
                "Assuming that π(θr) > 0 for all θr ∈ Θr, this program will return an objective value smaller than |Θr| if and only if σr is strictly dominated, by reasoning similar to that done in Proposition 1.",
                "For weak dominance, use the following linear program: maximize ac∈Ac ( θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar)− θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar)) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) = 1.",
                "This program will return an objective value greater than 0 if and only if σr is weakly dominated, by reasoning similar to that done in Proposition 1.",
                "We now turn to iterated dominance in Bayesian games.",
                "Na¨ıvely, one might argue that iterated dominance in Bayesian 95 games always requires an exponential number of steps when a significant fraction of the games pure strategies can be eliminated, because there are exponentially many pure strategies.",
                "However, this is not a very strong argument because oftentimes we can eliminate exponentially many pure strategies in one step.",
                "For example, if for some type θr ∈ Θr we have, for all ac ∈ Ac, that u(θr, a1 r, ac) > u(θr, a2 r, ac), then any pure <br>strategy</br> for the row player which plays action a2 r for type θr is dominated (by the <br>strategy</br> that plays action a1 r for type θr instead)-and there are exponentially many (|Ar||Θr|−1 ) such strategies.",
                "It is therefore conceivable that we need only polynomially many eliminations of collections of a players strategies.",
                "However, the following theorem shows that this is not the case, by giving an example where an exponential number of iterations (that is, alternations between the players in eliminating strategies) is required. (We emphasize that this is not a result about computational complexity.)",
                "Theorem 7.",
                "Even in symmetric 3-player Bayesian games, iterated dominance by pure strategies can require an exponential number of iterations (both for strict and weak dominance), even with only three actions per player.",
                "Proof.",
                "Let each player i ∈ {1, 2, 3} have n + 1 types θ1 i , θ2 i , . . . , θn+1 i .",
                "Let each player i have 3 actions ai, bi, ci, and let the utility function of each player be defined as follows. (In the below, i + 1 and i + 2 are shorthand for i + 1(mod 3) and i + 2(mod 3) when used as player indices.",
                "Also, −∞ can be replaced by a sufficiently negative number.",
                "Finally, δ and should be chosen to be very small (even compared to 2−(n+1) ), and should be more than twice as large as δ.) • ui(θ1 i ; ai, ci+1, ci+2) = −1; • ui(θ1 i ; ai, si+1, si+2) = 0 for si+1 = ci+1 or si+2 = ci+2; • ui(θ1 i ; bi, si+1, si+2) = − for si+1 = ai+1 and si+2 = ai+2; • ui(θ1 i ; bi, si+1, si+2) = −∞ for si+1 = ai+1 or si+2 = ai+2; • ui(θ1 i ; ci, si+1, si+2) = −∞ for all si+1, si+2; • ui(θj i ; ai, si+1, si+2) = −∞ for all si+1, si+2 when j > 1; • ui(θj i ; bi, si+1, si+2) = − for all si+1, si+2 when j > 1; • ui(θj i ; ci, si+1, ci+2) = δ − − 1/2 for all si+1 when j > 1; • ui(θj i ; ci, si+1, si+2) = δ− for all si+1 and si+2 = ci+2 when j > 1.",
                "Let the distribution over each players types be given by p(θj i ) = 2−j (with the exception that p(θ2 i ) = 2−2 +2−(n+1) ).",
                "We will be interested in eliminating strategies of the following form: play bi for type θ1 i , and play one of bi or ci otherwise.",
                "Because the utility function is the same for any type θj i with j > 1, these strategies are effectively defined by the total probability that they place on ci,8 which is t2 i (2−2 + 2−(n+1) ) + n+1 j=3 tj i 2−j where tj i = 1 if player i 8 Note that the strategies are still pure strategies; the probability placed on an action by a <br>strategy</br> here is simply the sum of the probabilities of the types for which the <br>strategy</br> chooses that action. plays ci for type θj i , and 0 otherwise.",
                "This probability is different for any two different strategies of the given form, and we have exponentially many different strategies of the given form.",
                "For any probability q which can be expressed as t2(2−2 + 2−(n+1) ) + n+1 j=3 tj2−j (with all tj ∈ {0, 1}), let σi(q) denote the (unique) <br>strategy</br> of the given form for player i which places a total probability of q on ci.",
                "Any <br>strategy</br> that plays ci for type θ1 i or ai for some type θj i with j > 1 can immediately be eliminated.",
                "We will show that, after that, we must eliminate the strategies σi(q) with high q first, slowly working down to those with lower q.",
                "Claim 1: If σi+1(q ) and σi+2(q ) have not yet been eliminated, and q < q , then σi(q) cannot yet be eliminated.",
                "Proof: First, we show that no <br>strategy</br> σi(q ) can eliminate σi(q).",
                "Against σi+1(q ), σi+2(q ), the utility of playing σi(p) is − + p · δ − p · q /2.",
                "Thus, when q = 0, it is best to set p as high as possible (and we note that σi+1(0) and σi+2(0) have not been eliminated), but when q > 0, it is best to set p as low as possible because δ < q /2.",
                "Thus, whether q > q or q < q , σi(q) will always do strictly better than σi(q ) against some remaining opponent strategies.",
                "Hence, no <br>strategy</br> σi(q ) can eliminate σi(q).",
                "The only other pure strategies that could dominate σi(q) are strategies that play ai for type θ1 i , and bi or ci for all other types.",
                "Let us take such a <br>strategy</br> and suppose that it plays c with probability p. Against σi+1(q ), σi+2(q ) (which have not yet been eliminated), the utility of playing this <br>strategy</br> is −(q )2 /2 − /2 + p · δ − p · q /2.",
                "On the other hand, playing σi(q) gives − + q · δ − q · q /2.",
                "Because q > q, we have −(q )2 /2 < −q · q /2, and because δ and are small, it follows that σi(q) receives a higher utility.",
                "Therefore, no <br>strategy</br> dominates σi(q), proving the claim.",
                "Claim 2: If for all q > q, σi+1(q ) and σi+2(q ) have been eliminated, then σi(q) can be eliminated.",
                "Proof: Consider the <br>strategy</br> for player i that plays ai for type θ1 i , and bi for all other types (call this <br>strategy</br> σi); we claim σi dominates σi(q).",
                "First, if either of the other players k plays ak for θ1 k, then σi performs better than σi(q) (which receives −∞ in some cases).",
                "Because the strategies for player k that play ck for type θ1 k, or ak for some type θj k with j > 1, have already been eliminated, all that remains to check is that σi performs better than σi(q) whenever both of the other two players play strategies of the following form: play bk for type θ1 k, and play one of bk or ck otherwise.",
                "We note that among these strategies, there are none left that place probability greater than q on ck.",
                "Letting qk denote the probability with which player k plays ck, the expected utility of playing σi is −qi+1 · qi+2/2 − /2.",
                "On the other hand, the utility of playing σi(q) is − + q · δ − q · qi+2/2.",
                "Because qi+1 ≤ q, the difference between these two expressions is at least /2 − δ, which is positive.",
                "It follows that σi dominates σi(q).",
                "From Claim 2, it follows that all strategies of the form σi(q) will eventually be eliminated.",
                "However, Claim 1 shows that we cannot go ahead and eliminate multiple such strategies for one player, unless at least one other player simultaneously keeps up in the eliminated strategies: every time a σi(q) is eliminated such that σi+1(q) and σi+2(q) have not yet been eliminated, we need to eliminate one of the latter two strategies before any σi(q ) with q > q can be eliminated-that is, we need to alternate between players.",
                "Because there are exponentially many strategies of the form σi(q), it follows that iterated elimination will require exponentially many iterations to complete. 96 It follows that an efficient algorithm for iterated dominance (strict or weak) by pure strategies in Bayesian games, if it exists, must somehow be able to perform (at least part of) many iterations in a single step of the algorithm (because if each step only performed a single iteration, we would need exponentially many steps).",
                "Interestingly, Knuth et al. [11] argue that iterated dominance appears to be an inherently sequential problem (in light of their result that iterated very weak dominance is P-complete, that is, apparently not efficiently parallelizable), suggesting that aggregating many iterations may be difficult. 7.",
                "CONCLUSIONS While the Nash equilibrium solution concept is studied more and more intensely in our community, the perhaps more elementary concept of (iterated) dominance has received much less attention.",
                "In this paper we studied various computational aspects of this concept.",
                "We first studied both strict and weak dominance (not iterated), and showed that checking whether a given <br>strategy</br> is dominated by some mixed <br>strategy</br> can be done in polynomial time using a single linear program solve.",
                "We then moved on to iterated dominance.",
                "We showed that determining whether there is some path that eliminates a given <br>strategy</br> is NP-complete with iterated weak dominance.",
                "This allowed us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
                "Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].)",
                "Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time.",
                "We then studied what happens when the dominating <br>strategy</br> is allowed to place positive probability on only a few pure strategies.",
                "First, we showed that finding the dominating <br>strategy</br> with minimum support size is NP-complete (both for strict and weak dominance).",
                "Then, we showed that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given <br>strategy</br> can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3).",
                "Finally, we studied dominance and iterated dominance in Bayesian games, as an example of a concise representation language for normal form games that is interesting in its own right.",
                "We showed that, unlike in normal form games, deciding whether a given pure <br>strategy</br> is dominated by another pure <br>strategy</br> in a Bayesian game is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak dominance).",
                "Finally, we showed that iterated dominance using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak dominance).",
                "There are various avenues for future research.",
                "First, there is the open question of whether it is possible to complete iterated dominance in Bayesian games in polynomial time (even though we showed that an exponential number of alternations between the players in eliminating strategies is sometimes required).",
                "Second, we can study computational aspects of (iterated) dominance in concise representations of normal form games other than Bayesian games-for example, in graphical games [9] or local-effect/action graph games [12, 2]. (How to efficiently perform iterated very weak dominance has already been studied for partially observable stochastic games [8].)",
                "Finally, we can ask whether some of the algorithms we described (such as the one for iterated strict dominance with mixed strategies) can be made faster. 8.",
                "REFERENCES [1] Krzysztof R. Apt.",
                "Uniform proofs of order independence for various <br>strategy</br> elimination procedures.",
                "Contributions to Theoretical Economics, 4(1), 2004. [2] Nivan A. R. Bhat and Kevin Leyton-Brown.",
                "Computing Nash equilibria of action-graph games.",
                "In UAI, 2004. [3] Ben Blum, Christian R. Shelton, and Daphne Koller.",
                "A continuation method for Nash equilibria in structured games.",
                "In IJCAI, 2003. [4] Vincent Conitzer and Tuomas Sandholm.",
                "Complexity results about Nash equilibria.",
                "In IJCAI, pages 765-771, 2003. [5] Drew Fudenberg and Jean Tirole.",
                "Game Theory.",
                "MIT Press, 1991. [6] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
                "On the order of eliminating dominated strategies.",
                "Operations Research Letters, 9:85-89, 1990. [7] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
                "The complexity of eliminating dominated strategies.",
                "Mathematics of Operation Research, 18:553-565, 1993. [8] Eric A. Hansen, Daniel S. Bernstein, and Shlomo Zilberstein.",
                "Dynamic programming for partially observable stochastic games.",
                "In AAAI, pages 709-715, 2004. [9] Michael Kearns, Michael Littman, and Satinder Singh.",
                "Graphical models for game theory.",
                "In UAI, 2001. [10] Leonid Khachiyan.",
                "A polynomial algorithm in linear programming.",
                "Soviet Math.",
                "Doklady, 20:191-194, 1979. [11] Donald E. Knuth, Christos H. Papadimitriou, and John N Tsitsiklis.",
                "A note on <br>strategy</br> elimination in bimatrix games.",
                "Operations Research Letters, 7(3):103-107, 1988. [12] Kevin Leyton-Brown and Moshe Tennenholtz.",
                "Local-effect games.",
                "In IJCAI, 2003. [13] Richard Lipton, Evangelos Markakis, and Aranyak Mehta.",
                "Playing large games using simple strategies.",
                "In ACM-EC, pages 36-41, 2003. [14] Michael Littman and Peter Stone.",
                "A polynomial-time Nash equilibrium algorithm for repeated games.",
                "In ACM-EC, pages 48-54, 2003. [15] Leslie M. Marx and Jeroen M. Swinkels.",
                "Order independence for iterated weak dominance.",
                "Games and Economic Behavior, 18:219-245, 1997. [16] Leslie M. Marx and Jeroen M. Swinkels.",
                "Corrigendum, order independence for iterated weak dominance.",
                "Games and Economic Behavior, 31:324-329, 2000. [17] Andreu Mas-Colell, Michael Whinston, and Jerry R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [18] Roger Myerson.",
                "Game Theory: Analysis of Conflict.",
                "Harvard University Press, Cambridge, 1991. [19] Martin J Osborne and Ariel Rubinstein.",
                "A Course in Game Theory.",
                "MIT Press, 1994. [20] Christos Papadimitriou.",
                "Algorithms, games and the Internet.",
                "In STOC, pages 749-753, 2001. [21] Ryan Porter, Eugene Nudelman, and Yoav Shoham.",
                "Simple search methods for finding a Nash equilibrium.",
                "In AAAI, pages 664-669, 2004. 97"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Primero estudiamos el dominio estricto y débil (no iterado), y mostramos que verificar si una \"estrategia\" dada está dominada por alguna \"estrategia\" mixta se puede hacer en tiempo polinómico utilizando una sola resolución de programa lineal único.",
                "Mostramos que determinar si hay algún camino que elimine una \"estrategia\" dada es completar NP con el dominio débil iterado.",
                "Luego estudiamos lo que sucede cuando la \"estrategia\" dominante puede imponer una probabilidad positiva en solo unas pocas estrategias puras.",
                "Primero, mostramos que encontrar la \"estrategia\" dominante con un tamaño de soporte mínimo es NP-completado (tanto para dominio estricto como débil).",
                "Luego, mostramos que el dominio estricto se depende de la ruta cuando hay un límite en el tamaño de soporte de las estrategias dominantes, y que decidir si una \"estrategia\" dada puede ser eliminada por el dominio estricto iterado bajo esta restricción es NP-Completo (incluso cuando el límite en el tamaño de soporte es 3).",
                "Mostramos que, a diferencia de los juegos de forma normal, decidir si una \"estrategia\" pura dada está dominada por otra \"estrategia\" pura en un juego bayesiano es NP-completado (tanto con dominio estricto como débil);Sin embargo, decidir si una estrategia está dominada por alguna estrategia mixta aún se puede hacer en tiempo polinómico con un solo programa lineal resuelve (tanto con estricto como débil ∗ Este material se basa en el trabajo apoyado por la National Science Foundation bajo las subvenciones ITR IIS-0121678e IIS-0427858, y una beca Sloan. Dominio).",
                "Un equilibrio de Nash especifica una \"estrategia\" para cada jugador, de tal manera que ningún jugador tiene un incentivo para (unilateralmente) desviarse de la \"estrategia\" prescrita.",
                "El problema de las soluciones informáticas de acuerdo con los conceptos de solución quizás más elementales de dominio y dominio iterado ha recibido mucha menos atención.(Después de un documento corto temprano sobre un caso fácil [11], el principal estudio computacional de estos conceptos ha tenido lugar en un documento en la comunidad de teoría de juegos [7] .1) Una \"estrategia\" domina estrictamente otra \"estrategia\" siSe realiza estrictamente 1 Esto no quiere decir que los científicos informáticos hayan ignorado a 88 mejor contra todos los vectores de estrategias oponentes, y lo domine débilmente si funciona al menos contra todos los vectores de estrategias oponentes, y estrictamente mejor contra al menos uno.",
                "En el dominio iterado, la eliminación se realiza en rondas, y se vuelve más fácil a medida que se eliminan más estrategias: en cualquier ronda dada, la \"estrategia\" dominante ya no necesita funcionar mejor que o la \"estrategia\" dominada contra las estrategias oponentes que eraneliminado en rondas anteriores.",
                "En este documento, estudiamos algunas preguntas computacionales fundamentales sobre el dominio y el dominio iterado, incluida lo difícil que es verificar si una \"estrategia\" dada puede ser eliminada por cada una de las variantes de estas nociones."
            ],
            "translated_text": "",
            "candidates": [
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia"
            ],
            "error": []
        },
        "bayesian game": {
            "translated_key": "juego bayesiano",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Complexity of (Iterated) Dominance∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT We study various computational aspects of solving games using dominance and iterated dominance.",
                "We first study both strict and weak dominance (not iterated), and show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve.",
                "We then move on to iterated dominance.",
                "We show that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance.",
                "This allows us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
                "Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].)",
                "Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time.",
                "We then study what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies.",
                "First, we show that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak dominance).",
                "Then, we show that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3).",
                "Finally, we study Bayesian games.",
                "We show that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a <br>bayesian game</br> is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak ∗ This material is based upon work supported by the National Science Foundation under ITR grants IIS-0121678 and IIS-0427858, and a Sloan Fellowship. dominance).",
                "Finally, we show that iterated dominance using pure strategies can require an exponential number of iterations in a <br>bayesian game</br> (both with strict and weak dominance).",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In multiagent systems with self-interested agents, the optimal action for one agent may depend on the actions taken by other agents.",
                "In such settings, the agents require tools from game theory to rationally decide on an action.",
                "Game theory offers various formal models of strategic settings-the best-known of which is a game in normal (or matrix) form, specifying a utility (payoff) for each agent for each combination of strategies that the agents choose-as well as solution concepts, which, given a game, specify which outcomes are reasonable (under various assumptions of rationality and common knowledge).",
                "Probably the best-known (and certainly the most-studied) solution concept is that of Nash equilibrium.",
                "A Nash equilibrium specifies a strategy for each player, in such a way that no player has an incentive to (unilaterally) deviate from the prescribed strategy.",
                "Recently, numerous papers have studied computing Nash equilibria in various settings [9, 4, 12, 3, 13, 14], and the complexity of constructing a Nash equilibrium in normal form games has been labeled one of the two most important open problems on the boundary of P today [20].",
                "The problem of computing solutions according to the perhaps more elementary solution concepts of dominance and iterated dominance has received much less attention. (After an early short paper on an easy case [11], the main computational study of these concepts has actually taken place in a paper in the game theory community [7].1 ) A strategy strictly dominates another strategy if it performs strictly 1 This is not to say that computer scientists have ignored 88 better against all vectors of opponent strategies, and weakly dominates it if it performs at least as well against all vectors of opponent strategies, and strictly better against at least one.",
                "The idea is that dominated strategies can be eliminated from consideration.",
                "In iterated dominance, the elimination proceeds in rounds, and becomes easier as more strategies are eliminated: in any given round, the dominating strategy no longer needs to perform better than or as well as the dominated strategy against opponent strategies that were eliminated in earlier rounds.",
                "Computing solutions according to (iterated) dominance is important for at least the following reasons: 1) it can be computationally easier than computing (for instance) a Nash equilibrium (and therefore it can be useful as a preprocessing step in computing a Nash equilibrium), and 2) (iterated) dominance requires a weaker rationality assumption on the players than (for instance) Nash equilibrium, and therefore solutions derived according to it are more likely to occur.",
                "In this paper, we study some fundamental computational questions concerning dominance and iterated dominance, including how hard it is to check whether a given strategy can be eliminated by each of the variants of these notions.",
                "The rest of the paper is organized as follows.",
                "In Section 2, we briefly review definitions and basic properties of normal form games, strict and weak dominance, and iterated strict and weak dominance.",
                "In the remaining sections, we study computational aspects of dominance and iterated dominance.",
                "In Section 3, we study one-shot (not iterated) dominance.",
                "In Section 4, we study iterated dominance.",
                "In Section 5, we study dominance and iterated dominance when the dominating strategy can only place probability on a few pure strategies.",
                "Finally, in Section 6, we study dominance and iterated dominance in Bayesian games. 2.",
                "DEFINITIONS AND BASIC PROPERTIES In this section, we briefly review normal form games, as well as dominance and iterated dominance (both strict and weak).",
                "An n-player normal form game is defined as follows.",
                "Definition 1.",
                "A normal form game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of pure strategies Σi and a utility function ui : Σ1 × Σ2 × . . . × Σn → R (where ui(σ1, σ2, . . . , σn) denotes player is utility when each player j plays action σj).",
                "The two main notions of dominance are defined as follows.",
                "Definition 2.",
                "Player is strategy σi is said to be strictly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
                "Player is strategy σi is said to be weakly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) ≥ ui(σi, σ−i), and for at least one vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
                "In this definition, it is sometimes allowed for the dominating strategy σi to be a mixed strategy, that is, a probability distribution over pure strategies.",
                "In this case, the utilities in dominance altogether.",
                "For example, simple dominance checks are sometimes used as a subroutine in searching for Nash equilibria [21]. the definition are the expected utilities.2 There are other notions of dominance, such as very weak dominance (in which no strict inequality is required, so two strategies can dominate each other), but we will not study them here.",
                "When we are looking at the dominance relations for player i, the other players (−i) can be thought of as a single player.3 Therefore, in the rest of the paper, when we study one-shot (not iterated) dominance, we will focus without loss of generality on two-player games.4 In two-player games, we will generally refer to the players as r (row) and c (column) rather than 1 and 2.",
                "In iterated dominance, dominated strategies are removed from the game, and no longer have any effect on future dominance relations.",
                "Iterated dominance can eliminate more strategies than dominance, as follows. σr may originally not dominate σr because the latter performs better against σc; but then, once σc is removed because it is dominated by σc, σr dominates σr, and the latter can be removed.",
                "For example, in the following game, R can be removed first, after which D is dominated.",
                "L R U 1, 1 0, 0 D 0, 1 1, 0 Either strict or weak dominance can be used in the definition of iterated dominance.",
                "We note that the process of iterated dominance is never helped by removing a dominated mixed strategy, for the following reason.",
                "If σi gives player i a higher utility than σi against mixed strategy σj for player j = i (and strategies σ−{i,j} for the other players), then for at least one pure strategy σj that σj places positive probability on, σi must perform better than σi against σj (and strategies σ−{i,j} for the other players).",
                "Thus, removing the mixed strategy σj does not introduce any new dominances.",
                "More detailed discussions and examples can be found in standard texts on microeconomics or game theory [17, 5].",
                "We are now ready to move on to the core of this paper. 3.",
                "DOMINANCE (NOT ITERATED) In this section, we study the notion of one-shot (not iterated) dominance.",
                "As a first observation, checking whether a given strategy is strictly (weakly) dominated by some pure strategy is straightforward, by checking, for every pure strategy for that player, whether the latter strategy performs strictly better against all the opponents strategies (at least as well against all the opponents strategies, and strictly 2 The dominated strategy σi is, of course, also allowed to be mixed, but this has no technical implications for the paper: when we study one-shot dominance, we ask whether a given strategy is dominated, and it does not matter whether the given strategy is pure or mixed; when we study iterated dominance, there is no use in eliminating mixed strategies, as we will see shortly. 3 This player may have a very large strategy space (one pure strategy for every vector of pure strategies for the players that are being replaced).",
                "Nevertheless, this will not result in an increase in our representation size, because the original representation already had to specify utilities for each of these vectors. 4 We note that a restriction to two-player games would not be without loss of generality for iterated dominance.",
                "This is because for iterated dominance, we need to look at the dominated strategies of each individual player, so we cannot merge any players. 89 better against at least one).5 Next, we show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time by solving a single linear program. (Similar linear programs have been given before [18]; we present the result here for completeness, and because we will build on the linear programs given below in Theorem 6.)",
                "Proposition 1.",
                "Given the row players utilities, a subset Dr of the row players pure strategies Σr, and a distinguished strategy σ∗ r for the row player, we can check in time polynomial in the size of the game (by solving a single linear program of polynomial size) whether there exists some mixed strategy σr, that places positive probability only on strategies in Dr and dominates σ∗ r , both for strict and for weak dominance.",
                "Proof.",
                "Let pdr be the probability that σr places on dr ∈ Dr. We will solve a single linear program in each of our algorithms; linear programs can be solved in polynomial time [10].",
                "For strict dominance, the question is whether the pdr can be set so that for every pure strategy for the column player σc ∈ Σc, dr∈Dr pdr ur(dr, σc) > ur(σ∗ r , σc).",
                "Because the inequality must be strict, we cannot solve this directly by linear programming.",
                "We proceed as follows.",
                "Because the game is finite, we may assume without loss of generality that all utilities are positive (if not, simply add a constant to all utilities.)",
                "Solve the following linear program: minimize dr∈Dr pdr such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc).",
                "If σ∗ r is strictly dominated by some mixed strategy, this linear program has a solution with objective value < 1. (The dominating strategy is a feasible solution with objective value exactly 1.",
                "Because no constraint is binding for this solution, we can reduce one of the probabilities slightly without affecting feasibility, thereby obtaining a solution with objective value < 1.)",
                "Moreover, if this linear program has a solution with objective value < 1, there is a mixed strategy strictly dominating σ∗ r , which can be obtained by taking the LP solution and adding the remaining probability to any strategy (because all the utilities are positive, this will add to the left side of any inequality, so all inequalities will become strict).",
                "For weak dominance, we can solve the following linear program: maximize σc∈Σc (( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc)) such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc); dr∈Dr pdr = 1.",
                "If σ∗ r is weakly dominated by some mixed strategy, then that mixed strategy is a feasible solution to this program with objective value > 0, because for at least one strategy σc ∈ Σc we have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0.",
                "On the other hand, if this program has a solution with objective value > 0, then for at least one strategy σc ∈ Σc we 5 Recall that the assumption of a single opponent (that is, the assumption of two players) is without loss of generality for one-shot dominance. must have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0, and thus the linear programs solution is a weakly dominating mixed strategy. 4.",
                "ITERATED DOMINANCE We now move on to iterated dominance.",
                "It is well-known that iterated strict dominance is path-independent [6, 19]that is, if we remove dominated strategies until no more dominated strategies remain, in the end the remaining strategies for each player will be the same, regardless of the order in which strategies are removed.",
                "Because of this, to see whether a given strategy can be eliminated by iterated strict dominance, all that needs to be done is to repeatedly remove strategies that are strictly dominated, until no more dominated strategies remain.",
                "Because we can check in polynomial time whether any given strategy is dominated (whether or not dominance by mixed strategies is allowed, as described in Section 3), this whole procedure takes only polynomial time.",
                "In the case of iterated dominance by pure strategies with two players, Knuth et al. [11] slightly improve on (speed up) the straightforward implementation of this procedure by keeping track of, for each ordered pair of strategies for a player, the number of opponent strategies that prevent the first strategy from dominating the second.",
                "Hereby the runtime for an m × n game is reduced from O((m + n)4 ) to O((m + n)3 ). (Actually, they only study very weak dominance (for which no strict inequalities are required), but the approach is easily extended.)",
                "In contrast, iterated weak dominance is known to be pathdependent.6 For example, in the following game, using iterated weak dominance we can eliminate M first, and then D, or R first, and then U. L M R U 1, 1 0, 0 1, 0 D 1, 1 1, 0 0, 0 Therefore, while the procedure of removing weakly dominated strategies until no more weakly dominated strategies remain can certainly be executed in polynomial time, which strategies survive in the end depends on the order in which we remove the dominated strategies.",
                "We will investigate two questions for iterated weak dominance: whether a given strategy is eliminated in some path, and whether there is a path to a unique solution (one pure strategy left per player).",
                "We will show that both of these problems are computationally hard.",
                "Definition 3.",
                "Given a game in normal form and a distinguished strategy σ∗ , IWD-STRATEGY-ELIMINATION asks whether there is some path of iterated weak dominance that eliminates σ∗ .",
                "Given a game in normal form, IWDUNIQUE-SOLUTION asks whether there is some path of iterated weak dominance that leads to a unique solution (one strategy left per player).",
                "The following lemma shows a special case of normal form games in which allowing for weak dominance by mixed strategies (in addition to weak dominance by pure strategies) does 6 There is, however, a restriction of weak dominance called nice weak dominance which is path-independent [15, 16].",
                "For an overview of path-independence results, see Apt [1]. 90 not help.",
                "We will prove the hardness results in this setting, so that they will hold whether or not dominance by mixed strategies is allowed.",
                "Lemma 1.",
                "Suppose that all the utilities in a game are in {0, 1}.",
                "Then every pure strategy that is weakly dominated by a mixed strategy is also weakly dominated by a pure strategy.",
                "Proof.",
                "Suppose pure strategy σ is weakly dominated by mixed strategy σ∗ .",
                "If σ gets a utility of 1 against some opponent strategy (or vector of opponent strategies if there are more than 2 players), then all the pure strategies that σ∗ places positive probability on must also get a utility of 1 against that opponent strategy (or else the expected utility would be smaller than 1).",
                "Moreover, at least one of the pure strategies that σ∗ places positive probability on must get a utility of 1 against an opponent strategy that σ gets 0 against (or else the inequality would never be strict).",
                "It follows that this pure strategy weakly dominates σ.",
                "We are now ready to prove the main results of this section.",
                "Theorem 1.",
                "IWD-STRATEGY-ELIMINATION is NPcomplete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed.",
                "Proof.",
                "The problem is in NP because given a sequence of strategies to be eliminated, we can easily check whether this is a valid sequence of eliminations (even when dominance by mixed strategies is allowed, using Proposition 1).",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following IWD-STRATEGY-ELIMINATION instance. (In this instance, we will specify that certain strategies are uneliminable.",
                "A strategy σr can be made uneliminable, even when 0 and 1 are the only allowed utilities, by adding another strategy σr and another opponent strategy σc, so that: 1. σr and σr are the only strategies that give the row player a utility of 1 against σc. 2. σr and σr always give the row player the same utility. 3. σc is the only strategy that gives the column player a utility of 1 against σr, but otherwise σc always gives the column player utility 0.",
                "This makes it impossible to eliminate any of these three strategies.",
                "We will not explicitly specify the additional strategies to make the proof more legible.)",
                "In this proof, we will denote row player strategies by s, and column player strategies by t, to improve legibility.",
                "Let the row players pure strategy set be given as follows.",
                "For every variable v ∈ V , the row player has corresponding strategies s1 +v, s2 +v, s1 −v, s2 −v.",
                "Additionally, the row player has the following 2 strategies: s1 0 and s2 0, where s2 0 = σ∗ r (that is, it is the strategy we seek to eliminate).",
                "Finally, for every clause c ∈ C, the row player has corresponding strategies s1 c (uneliminable) and s2 c. Let the column players pure strategy set be given as follows.",
                "For every variable v ∈ V , the column player has a corresponding strategy tv.",
                "For every clause c ∈ C, the column player has a corresponding strategy tc, and additionally, for every literal l ∈ L that occurs in c, a strategy tc,l.",
                "For every variable v ∈ V , the column player has corresponding strategies t+v, t−v (both uneliminable).",
                "Finally, the column player has three additional strategies: t1 0 (uneliminable), t2 0, and t1.",
                "The utility function for the row player is given as follows: • ur(s1 +v, tv) = 0 for all v ∈ V ; • ur(s2 +v, tv) = 1 for all v ∈ V ; • ur(s1 −v, tv) = 1 for all v ∈ V ; • ur(s2 −v, tv) = 0 for all v ∈ V ; • ur(s1 +v, t1) = 1 for all v ∈ V ; • ur(s2 +v, t1) = 0 for all v ∈ V ; • ur(s1 −v, t1) = 0 for all v ∈ V ; • ur(s2 −v, t1) = 1 for all v ∈ V ; • ur(sb +v, t+v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sb −v, t−v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sl, t) = 0 otherwise for all l ∈ L and t ∈ S2; • ur(s1 0, tc) = 0 for all c ∈ C; • ur(s2 0, tc) = 1 for all c ∈ C; • ur(sb 0, t1 0) = 1 for all b ∈ {1, 2}; • ur(s1 0, t2 0) = 1; • ur(s2 0, t2 0) = 0; • ur(sb 0, t) = 0 otherwise for all b ∈ {1, 2} and t ∈ S2; • ur(sb c, t) = 0 otherwise for all c ∈ C and b ∈ {1, 2}; and the row players utility is 0 in every other case.",
                "The utility function for the column player is given as follows: • uc(s, tv) = 0 for all v ∈ V and s ∈ S1; • uc(s, t1) = 0 for all s ∈ S1; • uc(s2 l , tc) = 1 for all c ∈ C and l ∈ L where l ∈ c (literal l occurs in clause c); • uc(s2 l2 , tc,l1 ) = 1 for all c ∈ C and l1, l2 ∈ L, l1 = l2 where l2 ∈ c; • uc(s1 c, tc) = 1 for all c ∈ C; • uc(s2 c, tc) = 0 for all c ∈ C; • uc(sb c, tc,l) = 1 for all c ∈ C, l ∈ L, and b ∈ {1, 2}; • uc(s2, tc) = uc(s2, tc,l) = 0 otherwise for all c ∈ C and l ∈ L; and the column players utility is 0 in every other case.",
                "We now show that the two instances are equivalent.",
                "First, suppose there is a solution to the satisfiability instance: that is, a truth-value assignment to the variables in V such that all clauses are satisfied.",
                "Then, consider the following sequence of eliminations in our game: 1.",
                "For every variable v that is set to true in the assignment, eliminate tv (which gives the column player utility 0 everywhere). 2.",
                "Then, for every variable v that is set to true in the assignment, eliminate s2 +v using s1 +v (which is possible because tv has been eliminated, and because t1 has not been eliminated (yet)). 3.",
                "Now eliminate t1 (which gives the column player utility 0 everywhere). 4.",
                "Next, for every variable v that is set to false in the assignment, eliminate s2 −v using s1 −v (which is possible because t1 has been eliminated, and because tv has not been eliminated (yet)). 5.",
                "For every clause c which has the variable corresponding to one of its positive literals l = +v set to true in the assignment, eliminate tc using tc,l (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 6.",
                "For every clause c which has the variable corresponding to one of its negative literals l = −v set to false in the assignment, eliminate tc using tc,l 91 (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 7.",
                "Because the assignment satisfied the formula, all the tc have now been eliminated.",
                "Thus, we can eliminate s2 0 = σ∗ r using s1 0.",
                "It follows that there is a solution to the IWD-STRATEGY-ELIMINATION instance.",
                "Now suppose there is a solution to the IWD-STRATEGYELIMINATION instance.",
                "By Lemma 1, we can assume that all the dominances are by pure strategies.",
                "We first observe that only s1 0 can eliminate s2 0 = σ∗ r , because it is the only other strategy that gets the row player a utility of 1 against t1 0, and t1 0 is uneliminable.",
                "However, because s2 0 performs better than s1 0 against the tc strategies, it follows that all of the tc strategies must be eliminated.",
                "For each c ∈ C, the strategy tc can only be eliminated by one of the strategies tc,l (with the same c), because these are the only other strategies that get the column player a utility of 1 against s1 c, and s1 c is uneliminable.",
                "But, in order for some tc,l to eliminate tc, s2 l must be eliminated first.",
                "Only s1 l can eliminate s2 l , because it is the only other strategy that gets the row player a utility of 1 against tl, and tl is uneliminable.",
                "We next show that for every v ∈ V only one of s2 +v, s2 −v can be eliminated.",
                "This is because in order for s1 +v to eliminate s2 +v, tv needs to have been eliminated and t1, not (so tv must be eliminated before t1); but in order for s1 −v to eliminate s2 −v, t1 needs to have been eliminated and tv, not (so t1 must be eliminated before tv).",
                "So, set v to true if s2 +v is eliminated, and to false otherwise Because by the above, for every clause c, one of the s2 l with l ∈ c must be eliminated, it follows that this is a satisfying assignment to the satisfiability instance.",
                "Using Theorem 1, it is now (relatively) easy to show that IWD-UNIQUE-SOLUTION is also NP-complete under the same restrictions.",
                "Theorem 2.",
                "IWD-UNIQUE-SOLUTION is NP-complete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed.",
                "Proof.",
                "Again, the problem is in NP because we can nondeterministically choose the sequence of eliminations and verify whether it is correct.",
                "To show NP-hardness, we reduce an arbitrary IWD-STRATEGY-ELIMINATION instance to the following IWD-UNIQUE-SOLUTION instance.",
                "Let all the strategies for each player from the original instance remain part of the new instance, and let the utilities resulting from the players playing a pair of these strategies be the same.",
                "We add three additional strategies σ1 r , σ2 r , σ3 r for the row player, and three additional strategies σ1 c , σ2 c , σ3 c for the column player.",
                "Let the additional utilities be as follows: • ur(σr, σj c) = 1 for all σr /∈ {σ1 r , σ2 r , σ3 r } and j ∈ {2, 3}; • ur(σi r, σc) = 1 for all i ∈ {1, 2, 3} and σc /∈ {σ2 c , σ3 c }; • ur(σi r, σ2 c ) = 1 for all i ∈ {2, 3}; • ur(σ1 r , σ3 c ) = 1; • and the row players utility is 0 in all other cases involving a new strategy. • uc(σ3 r , σc) = 1 for all σc /∈ {σ1 c , σ2 c , σ3 c }; • uc(σ∗ r , σj c) = 1 for all j ∈ {2, 3} (σ∗ r is the strategy to be eliminated in the original instance); • uc(σi r, σ1 c ) = 1 for all i ∈ {1, 2}; • ur(σ1 r , σ2 c ) = 1; • ur(σ2 r , σ3 c ) = 1; • and the column players utility is 0 in all other cases involving a new strategy.",
                "We proceed to show that the two instances are equivalent.",
                "First suppose there exists a solution to the original IWDSTRATEGY-ELIMINATION instance.",
                "Then, perform the same sequence of eliminations to eliminate σ∗ r in the new IWD-UNIQUE-SOLUTION instance. (This is possible because at any stage, any weak dominance for the row player in the original instance is still a weak dominance in the new instance, because the two strategies utilities for the row player are the same when the column player plays one of the new strategies; and the same is true for the column player.)",
                "Once σ∗ r is eliminated, let σ1 c eliminate σ2 c . (It performs better against σ2 r .)",
                "Then, let σ1 r eliminate all the other remaining strategies for the row player. (It always performs better against either σ1 c or σ3 c .)",
                "Finally, σ1 c is the unique best response against σ1 r among the column players remaining strategies, so let it eliminate all the other remaining strategies for the column player.",
                "Thus, there exists a solution to the IWD-UNIQUE-SOLUTION instance.",
                "Now suppose there exists a solution to the IWD-UNIQUESOLUTION instance.",
                "By Lemma 1, we can assume that all the dominances are by pure strategies.",
                "We will show that none of the new strategies (σ1 r , σ2 r , σ3 r , σ1 c , σ2 c , σ3 c ) can either eliminate another strategy, or be eliminated before σ∗ r is eliminated.",
                "Thus, there must be a sequence of eliminations ending in the elimination of σ∗ r , which does not involve any of the new strategies, and is therefore a valid sequence of eliminations in the original game (because all original strategies perform the same against each new strategy).",
                "We now show that this is true by exhausting all possibilities for the first elimination before σ∗ r is eliminated that involves a new strategy.",
                "None of the σi r can be eliminated by a σr /∈ {σ1 r , σ2 r , σ3 r }, because the σi r perform better against σ1 c . σ1 r cannot eliminate any other strategy, because it always performs poorer against σ2 c . σ2 r and σ3 r are equivalent from the row players perspective (and thus cannot eliminate each other), and cannot eliminate any other strategy because they always perform poorer against σ3 c .",
                "None of the σj c can be eliminated by a σc /∈ {σ1 c , σ2 c , σ3 c }, because the σj c always perform better against either σ1 r or σ2 r . σ1 c cannot eliminate any other strategy, because it always performs poorer against either σ∗ r or σ3 r . σ2 c cannot eliminate any other strategy, because it always performs poorer against σ2 r or σ3 r . σ3 c cannot eliminate any other strategy, because it always performs poorer against σ1 r or σ3 r .",
                "Thus, there exists a solution to the IWDSTRATEGY-ELIMINATION instance.",
                "A slightly weaker version of the part of Theorem 2 concerning dominance by pure strategies only is the main result of Gilboa et al. [7]. (Besides not proving the result for dominance by mixed strategies, the original result was weaker because it required utilities {0, 1, 2, 3, 4, 5, 6, 7, 8} rather than just {0, 1} (and because of this, our Lemma 1 cannot be applied to it to get the result for mixed strategies).) 5. (ITERATED) DOMINANCE USING MIXED STRATEGIES WITH SMALL SUPPORTS When showing that a strategy is dominated by a mixed strategy, there are several reasons to prefer exhibiting a 92 dominating strategy that places positive probability on as few pure strategies as possible.",
                "First, this will reduce the number of bits required to specify the dominating strategy (and thus the proof of dominance can be communicated quicker): if the dominating mixed strategy places positive probability on only k strategies, then it can be specified using k real numbers for the probabilities, plus k log m (where m is the number of strategies for the player under consideration) bits to indicate which strategies are used.",
                "Second, the proof of dominance will be cleaner: for a dominating mixed strategy, it is typically (always in the case of strict dominance) possible to spread some of the probability onto any unused pure strategy and still have a dominating strategy, but this obscures which pure strategies are the ones that are key in making the mixed strategy dominating.",
                "Third, because (by the previous) the argument for eliminating the dominated strategy is simpler and easier to understand, it is more likely to be accepted.",
                "Fourth, the level of risk neutrality required for the argument to work is reduced, at least in the extreme case where dominance by a single pure strategy can be exhibited (no risk neutrality is required here).",
                "This motivates the following problem.",
                "Definition 4 (MINIMUM-DOMINATING-SET).",
                "We are given the row players utilities of a game in normal form, a distinguished strategy σ∗ for the row player, a specification of whether the dominance should be strict or weak, and a number k. We are asked whether there exists a mixed strategy σ for the row player that places positive probability on at most k pure strategies, and dominates σ∗ in the required sense.",
                "Unfortunately, this problem is NP-complete.",
                "Theorem 3.",
                "MINIMUM-DOMINATING-SET is NPcomplete, both for strict and for weak dominance.",
                "Proof.",
                "The problem is in NP because we can nondeterministically choose a set of at most k strategies to give positive probability, and decide whether we can dominate σ∗ with these k strategies as described in Proposition 1.",
                "To show NP-hardness, we reduce an arbitrary SET-COVER instance (given a set S, subsets S1, S2, . . . , Sr, and a number t, can all of S be covered by at most t of the subsets?) to the following MINIMUM-DOMINATING-SET instance.",
                "For every element s ∈ S, there is a pure strategy σs for the column player.",
                "For every subset Si, there is a pure strategy σSi for the row player.",
                "Finally, there is the distinguished pure strategy σ∗ for the row player.",
                "The row players utilities are as follows: ur(σSi , σs) = t + 1 if s ∈ Si; ur(σSi , σs) = 0 if s /∈ Si; ur(σ∗ , σs) = 1 for all s ∈ S. Finally, we let k = t. We now proceed to show that the two instances are equivalent.",
                "First suppose there exists a solution to the SET-COVER instance.",
                "Without loss of generality, we can assume that there are exactly k subsets in the cover.",
                "Then, for every Si that is in the cover, let the dominating strategy σ place exactly 1 k probability on the corresponding pure strategy σSi .",
                "Now, if we let n(s) be the number of subsets in the cover containing s (we observe that that n(s) ≥ 1), then for every strategy σs for the column player, the row players expected utility for playing σ when the column player is playing σs is u(σ, σs) = n(s) k (k + 1) ≥ k+1 k > 1 = u(σ∗ , σs).",
                "So σ strictly (and thus also weakly) dominates σ∗ , and there exists a solution to the MINIMUM-DOMINATING-SET instance.",
                "Now suppose there exists a solution to the MINIMUMDOMINATING-SET instance.",
                "Consider the (at most k) pure strategies of the form σSi on which the dominating mixed strategy σ places positive probability, and let T be the collection of the corresponding subsets Si.",
                "We claim that T is a cover.",
                "For suppose there is some s ∈ S that is not in any of the subsets in T .",
                "Then, if the column player plays σs, the row player (when playing σ) will always receive utility 0-as opposed to the utility of 1 the row player would receive for playing σ∗ , contradicting the fact that σ dominates σ∗ (whether this dominance is weak or strict).",
                "It follows that there exists a solution to the SET-COVER instance.",
                "On the other hand, if we require that the dominating strategy only places positive probability on a very small number of pure strategies, then it once again becomes easy to check whether a strategy is dominated.",
                "Specifically, to find out whether player is strategy σ∗ is dominated by a strategy that places positive probability on only k pure strategies, we can simply check, for every subset of k of player is pure strategies, whether there is a strategy that places positive probability only on these k strategies and dominates σ∗ , using Proposition 1.",
                "This requires only O(|Σi|k ) such checks.",
                "Thus, if k is a constant, this constitutes a polynomial-time algorithm.",
                "A natural question to ask next is whether iterated strict dominance remains computationally easy when dominating strategies are required to place positive probability on at most k pure strategies, where k is a small constant. (We have already shown in Section 4 that iterated weak dominance is hard even when k = 1, that is, only dominance by pure strategies is allowed.)",
                "Of course, if iterated strict dominance were path-independent under this restriction, computational easiness would follow as it did in Section 4.",
                "However, it turns out that this is not the case.",
                "Observation 1.",
                "If we restrict the dominating strategies to place positive probability on at most two pure strategies, iterated strict dominance becomes path-dependent.",
                "Proof.",
                "Consider the following game: 7, 1 0, 0 0, 0 0, 0 7, 1 0, 0 3, 0 3, 0 0, 0 0, 0 0, 0 3, 1 1, 0 1, 0 1, 0 Let (i, j) denote the outcome in which the row player plays the ith row and the column player plays the jth column.",
                "Because (1, 1), (2, 2), and (4, 3) are all Nash equilibria, none of the column players pure strategies will ever be eliminated, and neither will rows 1, 2, and 4.",
                "We now observe that randomizing uniformly over rows 1 and 2 dominates row 3, and randomizing uniformly over rows 3 and 4 dominates row 5.",
                "However, if we eliminate row 3 first, it becomes impossible to dominate row 5 without randomizing over at least 3 pure strategies.",
                "Indeed, iterated strict dominance turns out to be hard even when k = 3.",
                "Theorem 4.",
                "If we restrict the dominating strategies to place positive probability on at most three pure strategies, it becomes NP-complete to decide whether a given strategy can be eliminated using iterated strict dominance. 93 Proof.",
                "The problem is in NP because given a sequence of strategies to be eliminated, we can check in polynomial time whether this is a valid sequence of eliminations (for any strategy to be eliminated, we can check, for every subset of three other strategies, whether there is a strategy placing positive probability on only these three strategies that dominates the strategy to be eliminated, using Proposition 1).",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following two-player game.",
                "For every variable v ∈ V , the row player has strategies s+v, s−v, s1 v, s2 v, s3 v, s4 v, and the column player has strategies t1 v, t2 v, t3 v, t4 v. For every clause c ∈ C, the row player has a strategy sc, and the column player has a strategy tc, as well as, for every literal l occurring in c, an additional strategy tl c. The row player has two additional strategies s1 and s2. (s2 is the strategy that we are seeking to eliminate.)",
                "Finally, the column player has one additional strategy t1.",
                "The utility function for the row player is given as follows (where is some sufficiently small number): • ur(s+v, tj v) = 4 if j ∈ {1, 2}, for all v ∈ V ; • ur(s+v, tj v) = 1 if j ∈ {3, 4}, for all v ∈ V ; • ur(s−v, tj v) = 1 if j ∈ {1, 2}, for all v ∈ V ; • ur(s−v, tj v) = 4 if j ∈ {3, 4}, for all v ∈ V ; • ur(s+v, t) = ur(s−v, t) = 0 for all v ∈ V and t /∈ {t1 v, t2 v, t3 v, t4 v}; • ur(si v, ti v) = 13 for all v ∈ V and i ∈ {1, 2, 3, 4}; • ur(si v, t) = for all v ∈ V , i ∈ {1, 2, 3, 4}, and t = ti v; • ur(sc, tc) = 2 for all c ∈ C; • ur(sc, t) = 0 for all c ∈ C and t = tc; • ur(s1, t1) = 1 + ; • ur(s1, t) = for all t = t1; • ur(s2, t1) = 1; • ur(s2, tc) = 1 for all c ∈ C; • ur(s2, t) = 0 for all t /∈ {t1} ∪ {tc : c ∈ C}.",
                "The utility function for the column player is given as follows: • uc(si v, ti v) = 1 for all v ∈ V and i ∈ {1, 2, 3, 4}; • uc(s, ti v) = 0 for all v ∈ V , i ∈ {1, 2, 3, 4}, and s = si v; • uc(sc, tc) = 1 for all c ∈ C; • uc(sl, tc) = 1 for all c ∈ C and l ∈ L occurring in c; • uc(s, tc) = 0 for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c}; • uc(sc, tl c) = 1 + for all c ∈ C; • uc(sl , tl c) = 1 + for all c ∈ C and l = l occurring in c; • uc(s, tl c) = for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c, l = l }; • uc(s2, t1) = 1; • uc(s, t1) = 0 for all s = s2.",
                "We now show that the two instances are equivalent.",
                "First, suppose that there is a solution to the satisfiability instance.",
                "Then, consider the following sequence of eliminations in our game: 1.",
                "For every variable v that is set to true in the satisfying assignment, eliminate s+v with the mixed strategy σr that places probability 1/3 on s−v, probability 1/3 on s1 v, and probability 1/3 on s2 v. (The expected utility of playing σr against t1 v or t2 v is 14/3 > 4; against t3 v or t4 v, it is 4/3 > 1; and against anything else it is 2 /3 > 0.",
                "Hence the dominance is valid.) 2.",
                "Similarly, for every variable v that is set to false in the satisfying assignment, eliminate s−v with the mixed strategy σr that places probability 1/3 on s+v, probability 1/3 on s3 v, and probability 1/3 on s4 v. (The expected utility of playing σr against t1 v or t2 v is 4/3 > 1; against t3 v or t4 v, it is 14/3 > 4; and against anything else it is 2 /3 > 0.",
                "Hence the dominance is valid.) 3.",
                "For every c ∈ C, eliminate tc with any tl c for which l was set to true in the satisfying assignment. (This is a valid dominance because tl c performs better than tc against any strategy other than sl, and we eliminated sl in step 1 or in step 2.) 4.",
                "Finally, eliminate s2 with s1. (This is a valid dominance because s1 performs better than s2 against any strategy other than those in {tc : c ∈ C}, which we eliminated in step 3.)",
                "Hence, there is an elimination path that eliminates s2.",
                "Now, suppose that there is an elimination path that eliminates s2.",
                "The strategy that eventually dominates s2 must place most of its probability on s1, because s1 is the only other strategy that performs well against t1, which cannot be eliminated before s2.",
                "But, s1 performs significantly worse than s2 against any strategy tc with c ∈ C, so it follows that all these strategies must be eliminated first.",
                "Each strategy tc can only be eliminated by a strategy that places most of its weight on the corresponding strategies tl c with l ∈ c, because they are the only other strategies that perform well against sc, which cannot be eliminated before tc.",
                "But, each strategy tl c performs significantly worse than tc against sl, so it follows that for every clause c, for one of the literals l occurring in it, sl must be eliminated first.",
                "Now, strategies of the form tj v will never be eliminated because they are the unique best responses to the corresponding strategies sj v (which are, in turn, the best responses to the corresponding tj v).",
                "As a result, if strategy s+v (respectively, s−v) is eliminated, then its opposite strategy s−v (respectively, s+v) can no longer be eliminated, for the following reason.",
                "There is no other pure strategy remaining that gets a significant utility against more than one of the strategies t1 v, t2 v, t3 v, t4 v, but s−v (respectively, s+v) gets significant utility against all 4, and therefore cannot be dominated by a mixed strategy placing positive probability on at most 3 strategies.",
                "It follows that for each v ∈ V , at most one of the strategies s+v, s−v is eliminated, in such a way that for every clause c, for one of the literals l occurring in it, sl must be eliminated.",
                "But then setting all the literals l such that sl is eliminated to true constitutes a solution to the satisfiability instance.",
                "In the next section, we return to the setting where there is no restriction on the number of pure strategies on which a dominating mixed strategy can place positive probability. 6. (ITERATED) DOMINANCE IN BAYESIAN GAMES So far, we have focused on normal form games that are flatly represented (that is, every matrix entry is given ex94 plicitly).",
                "However, for many games, the flat representation is too large to write down explicitly, and instead, some representation that exploits the structure of the game needs to be used.",
                "Bayesian games, besides being of interest in their own right, can be thought of as a useful structured representation of normal form games, and we will study them in this section.",
                "In a <br>bayesian game</br>, each player first receives privately held preference information (the players type) from a distribution, which determines the utility that that player receives for every outcome of (that is, vector of actions played in) the game.",
                "After receiving this type, the player plays an action based on it.7 Definition 5.",
                "A <br>bayesian game</br> is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of actions Ai, a (finite) type space Θi with a probability distribution πi over it, and a utility function ui : Θi × A1 × A2 × . . . × An → R (where ui(θi, a1, a2, . . . , an) denotes player is utility when is type is θi and each player j plays action aj).",
                "A pure strategy in a <br>bayesian game</br> is a mapping from types to actions, σi : Θi → Ai, where σi(θi) denotes the action that player i plays for type θi.",
                "Any vector of pure strategies in a <br>bayesian game</br> defines an (expected) utility for each player, and therefore we can translate a <br>bayesian game</br> into a normal form game.",
                "In this normal form game, the notions of dominance and iterated dominance are defined as before.",
                "However, the normal form representation of the game is exponentially larger than the Bayesian representation, because each player i has |Ai||Θi| distinct pure strategies.",
                "Thus, any algorithm for Bayesian games that relies on expanding the game to its normal form will require exponential time.",
                "Specifically, our easiness results for normal form games do not directly transfer to this setting.",
                "In fact, it turns out that checking whether a strategy is dominated by a pure strategy is hard in Bayesian games.",
                "Theorem 5.",
                "In a <br>bayesian game</br>, it is NP-complete to decide whether a given pure strategy σr : Θr → Ar is dominated by some other pure strategy (both for strict and weak dominance), even when the row players distribution over types is uniform.",
                "Proof.",
                "The problem is in NP because it is easy to verify whether a candidate dominating strategy is indeed a dominating strategy.",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a set of clauses C using variables from V ) to the following <br>bayesian game</br>.",
                "Let the row players action set be Ar = {t, f, 0} and let the column players action set be Ac = {ac : c ∈ C}.",
                "Let the row players type set be Θr = {θv : v ∈ V }, with a distribution πr that is uniform.",
                "Let the row players utility function be as follows: • ur(θv, 0, ac) = 0 for all v ∈ V and c ∈ C; • ur(θv, b, ac) = |V | for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b satisfies c; • ur(θv, b, ac) = −1 for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b does not satisfy c. 7 In general, a player can also receive a signal about the other players preferences, but we will not concern ourselves with that here.",
                "Let the pure strategy to be dominated be the one that plays 0 for every type.",
                "We show that the strategy is dominated by a pure strategy if and only if there is a solution to the satisfiability instance.",
                "First, suppose there is a solution to the satisfiability instance.",
                "Then, let σd r be given by: σd r (θv) = t if v is set to true in the solution to the satisfiability instance, and σd r (θv) = f otherwise.",
                "Then, against any action ac by the column player, there is at least one type θv such that either +v ∈ c and σd r (θv) = t, or −v ∈ c and σd r (θv) = f. Thus, the row players expected utility against action ac is at least |V | |V | − |V |−1 |V | = 1 |V | > 0.",
                "So, σd r is a dominating strategy.",
                "Now, suppose there is a dominating pure strategy σd r .",
                "This dominating strategy must play t or f for at least one type.",
                "Thus, against any ac by the column player, there must at least be some type θv for which ur(θv, σd r (θv), ac) > 0.",
                "That is, there must be at least one variable v such that setting v to σd r (θv) satifies c. But then, setting each v to σd r (θv) must satisfy all the clauses.",
                "So a satisfying assignment exists.",
                "However, it turns out that we can modify the linear programs from Proposition 1 to obtain a polynomial time algorithm for checking whether a strategy is dominated by a mixed strategy in Bayesian games.",
                "Theorem 6.",
                "In a <br>bayesian game</br>, it can be decided in polynomial time whether a given (possibly mixed) strategy σr is dominated by some other mixed strategy, using linear programming (both for strict and weak dominance).",
                "Proof.",
                "We can modify the linear programs presented in Proposition 1 as follows.",
                "For strict dominance, again assuming without loss of generality that all the utilities in the game are positive, use the following linear program (in which pσr r (θr, ar) is the probability that σr, the strategy to be dominated, places on ar for type θr): minimize θr∈Θr ar∈Ar pr(ar) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) ≤ 1.",
                "Assuming that π(θr) > 0 for all θr ∈ Θr, this program will return an objective value smaller than |Θr| if and only if σr is strictly dominated, by reasoning similar to that done in Proposition 1.",
                "For weak dominance, use the following linear program: maximize ac∈Ac ( θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar)− θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar)) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) = 1.",
                "This program will return an objective value greater than 0 if and only if σr is weakly dominated, by reasoning similar to that done in Proposition 1.",
                "We now turn to iterated dominance in Bayesian games.",
                "Na¨ıvely, one might argue that iterated dominance in Bayesian 95 games always requires an exponential number of steps when a significant fraction of the games pure strategies can be eliminated, because there are exponentially many pure strategies.",
                "However, this is not a very strong argument because oftentimes we can eliminate exponentially many pure strategies in one step.",
                "For example, if for some type θr ∈ Θr we have, for all ac ∈ Ac, that u(θr, a1 r, ac) > u(θr, a2 r, ac), then any pure strategy for the row player which plays action a2 r for type θr is dominated (by the strategy that plays action a1 r for type θr instead)-and there are exponentially many (|Ar||Θr|−1 ) such strategies.",
                "It is therefore conceivable that we need only polynomially many eliminations of collections of a players strategies.",
                "However, the following theorem shows that this is not the case, by giving an example where an exponential number of iterations (that is, alternations between the players in eliminating strategies) is required. (We emphasize that this is not a result about computational complexity.)",
                "Theorem 7.",
                "Even in symmetric 3-player Bayesian games, iterated dominance by pure strategies can require an exponential number of iterations (both for strict and weak dominance), even with only three actions per player.",
                "Proof.",
                "Let each player i ∈ {1, 2, 3} have n + 1 types θ1 i , θ2 i , . . . , θn+1 i .",
                "Let each player i have 3 actions ai, bi, ci, and let the utility function of each player be defined as follows. (In the below, i + 1 and i + 2 are shorthand for i + 1(mod 3) and i + 2(mod 3) when used as player indices.",
                "Also, −∞ can be replaced by a sufficiently negative number.",
                "Finally, δ and should be chosen to be very small (even compared to 2−(n+1) ), and should be more than twice as large as δ.) • ui(θ1 i ; ai, ci+1, ci+2) = −1; • ui(θ1 i ; ai, si+1, si+2) = 0 for si+1 = ci+1 or si+2 = ci+2; • ui(θ1 i ; bi, si+1, si+2) = − for si+1 = ai+1 and si+2 = ai+2; • ui(θ1 i ; bi, si+1, si+2) = −∞ for si+1 = ai+1 or si+2 = ai+2; • ui(θ1 i ; ci, si+1, si+2) = −∞ for all si+1, si+2; • ui(θj i ; ai, si+1, si+2) = −∞ for all si+1, si+2 when j > 1; • ui(θj i ; bi, si+1, si+2) = − for all si+1, si+2 when j > 1; • ui(θj i ; ci, si+1, ci+2) = δ − − 1/2 for all si+1 when j > 1; • ui(θj i ; ci, si+1, si+2) = δ− for all si+1 and si+2 = ci+2 when j > 1.",
                "Let the distribution over each players types be given by p(θj i ) = 2−j (with the exception that p(θ2 i ) = 2−2 +2−(n+1) ).",
                "We will be interested in eliminating strategies of the following form: play bi for type θ1 i , and play one of bi or ci otherwise.",
                "Because the utility function is the same for any type θj i with j > 1, these strategies are effectively defined by the total probability that they place on ci,8 which is t2 i (2−2 + 2−(n+1) ) + n+1 j=3 tj i 2−j where tj i = 1 if player i 8 Note that the strategies are still pure strategies; the probability placed on an action by a strategy here is simply the sum of the probabilities of the types for which the strategy chooses that action. plays ci for type θj i , and 0 otherwise.",
                "This probability is different for any two different strategies of the given form, and we have exponentially many different strategies of the given form.",
                "For any probability q which can be expressed as t2(2−2 + 2−(n+1) ) + n+1 j=3 tj2−j (with all tj ∈ {0, 1}), let σi(q) denote the (unique) strategy of the given form for player i which places a total probability of q on ci.",
                "Any strategy that plays ci for type θ1 i or ai for some type θj i with j > 1 can immediately be eliminated.",
                "We will show that, after that, we must eliminate the strategies σi(q) with high q first, slowly working down to those with lower q.",
                "Claim 1: If σi+1(q ) and σi+2(q ) have not yet been eliminated, and q < q , then σi(q) cannot yet be eliminated.",
                "Proof: First, we show that no strategy σi(q ) can eliminate σi(q).",
                "Against σi+1(q ), σi+2(q ), the utility of playing σi(p) is − + p · δ − p · q /2.",
                "Thus, when q = 0, it is best to set p as high as possible (and we note that σi+1(0) and σi+2(0) have not been eliminated), but when q > 0, it is best to set p as low as possible because δ < q /2.",
                "Thus, whether q > q or q < q , σi(q) will always do strictly better than σi(q ) against some remaining opponent strategies.",
                "Hence, no strategy σi(q ) can eliminate σi(q).",
                "The only other pure strategies that could dominate σi(q) are strategies that play ai for type θ1 i , and bi or ci for all other types.",
                "Let us take such a strategy and suppose that it plays c with probability p. Against σi+1(q ), σi+2(q ) (which have not yet been eliminated), the utility of playing this strategy is −(q )2 /2 − /2 + p · δ − p · q /2.",
                "On the other hand, playing σi(q) gives − + q · δ − q · q /2.",
                "Because q > q, we have −(q )2 /2 < −q · q /2, and because δ and are small, it follows that σi(q) receives a higher utility.",
                "Therefore, no strategy dominates σi(q), proving the claim.",
                "Claim 2: If for all q > q, σi+1(q ) and σi+2(q ) have been eliminated, then σi(q) can be eliminated.",
                "Proof: Consider the strategy for player i that plays ai for type θ1 i , and bi for all other types (call this strategy σi); we claim σi dominates σi(q).",
                "First, if either of the other players k plays ak for θ1 k, then σi performs better than σi(q) (which receives −∞ in some cases).",
                "Because the strategies for player k that play ck for type θ1 k, or ak for some type θj k with j > 1, have already been eliminated, all that remains to check is that σi performs better than σi(q) whenever both of the other two players play strategies of the following form: play bk for type θ1 k, and play one of bk or ck otherwise.",
                "We note that among these strategies, there are none left that place probability greater than q on ck.",
                "Letting qk denote the probability with which player k plays ck, the expected utility of playing σi is −qi+1 · qi+2/2 − /2.",
                "On the other hand, the utility of playing σi(q) is − + q · δ − q · qi+2/2.",
                "Because qi+1 ≤ q, the difference between these two expressions is at least /2 − δ, which is positive.",
                "It follows that σi dominates σi(q).",
                "From Claim 2, it follows that all strategies of the form σi(q) will eventually be eliminated.",
                "However, Claim 1 shows that we cannot go ahead and eliminate multiple such strategies for one player, unless at least one other player simultaneously keeps up in the eliminated strategies: every time a σi(q) is eliminated such that σi+1(q) and σi+2(q) have not yet been eliminated, we need to eliminate one of the latter two strategies before any σi(q ) with q > q can be eliminated-that is, we need to alternate between players.",
                "Because there are exponentially many strategies of the form σi(q), it follows that iterated elimination will require exponentially many iterations to complete. 96 It follows that an efficient algorithm for iterated dominance (strict or weak) by pure strategies in Bayesian games, if it exists, must somehow be able to perform (at least part of) many iterations in a single step of the algorithm (because if each step only performed a single iteration, we would need exponentially many steps).",
                "Interestingly, Knuth et al. [11] argue that iterated dominance appears to be an inherently sequential problem (in light of their result that iterated very weak dominance is P-complete, that is, apparently not efficiently parallelizable), suggesting that aggregating many iterations may be difficult. 7.",
                "CONCLUSIONS While the Nash equilibrium solution concept is studied more and more intensely in our community, the perhaps more elementary concept of (iterated) dominance has received much less attention.",
                "In this paper we studied various computational aspects of this concept.",
                "We first studied both strict and weak dominance (not iterated), and showed that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve.",
                "We then moved on to iterated dominance.",
                "We showed that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance.",
                "This allowed us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
                "Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].)",
                "Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time.",
                "We then studied what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies.",
                "First, we showed that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak dominance).",
                "Then, we showed that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3).",
                "Finally, we studied dominance and iterated dominance in Bayesian games, as an example of a concise representation language for normal form games that is interesting in its own right.",
                "We showed that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a <br>bayesian game</br> is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak dominance).",
                "Finally, we showed that iterated dominance using pure strategies can require an exponential number of iterations in a <br>bayesian game</br> (both with strict and weak dominance).",
                "There are various avenues for future research.",
                "First, there is the open question of whether it is possible to complete iterated dominance in Bayesian games in polynomial time (even though we showed that an exponential number of alternations between the players in eliminating strategies is sometimes required).",
                "Second, we can study computational aspects of (iterated) dominance in concise representations of normal form games other than Bayesian games-for example, in graphical games [9] or local-effect/action graph games [12, 2]. (How to efficiently perform iterated very weak dominance has already been studied for partially observable stochastic games [8].)",
                "Finally, we can ask whether some of the algorithms we described (such as the one for iterated strict dominance with mixed strategies) can be made faster. 8.",
                "REFERENCES [1] Krzysztof R. Apt.",
                "Uniform proofs of order independence for various strategy elimination procedures.",
                "Contributions to Theoretical Economics, 4(1), 2004. [2] Nivan A. R. Bhat and Kevin Leyton-Brown.",
                "Computing Nash equilibria of action-graph games.",
                "In UAI, 2004. [3] Ben Blum, Christian R. Shelton, and Daphne Koller.",
                "A continuation method for Nash equilibria in structured games.",
                "In IJCAI, 2003. [4] Vincent Conitzer and Tuomas Sandholm.",
                "Complexity results about Nash equilibria.",
                "In IJCAI, pages 765-771, 2003. [5] Drew Fudenberg and Jean Tirole.",
                "Game Theory.",
                "MIT Press, 1991. [6] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
                "On the order of eliminating dominated strategies.",
                "Operations Research Letters, 9:85-89, 1990. [7] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
                "The complexity of eliminating dominated strategies.",
                "Mathematics of Operation Research, 18:553-565, 1993. [8] Eric A. Hansen, Daniel S. Bernstein, and Shlomo Zilberstein.",
                "Dynamic programming for partially observable stochastic games.",
                "In AAAI, pages 709-715, 2004. [9] Michael Kearns, Michael Littman, and Satinder Singh.",
                "Graphical models for game theory.",
                "In UAI, 2001. [10] Leonid Khachiyan.",
                "A polynomial algorithm in linear programming.",
                "Soviet Math.",
                "Doklady, 20:191-194, 1979. [11] Donald E. Knuth, Christos H. Papadimitriou, and John N Tsitsiklis.",
                "A note on strategy elimination in bimatrix games.",
                "Operations Research Letters, 7(3):103-107, 1988. [12] Kevin Leyton-Brown and Moshe Tennenholtz.",
                "Local-effect games.",
                "In IJCAI, 2003. [13] Richard Lipton, Evangelos Markakis, and Aranyak Mehta.",
                "Playing large games using simple strategies.",
                "In ACM-EC, pages 36-41, 2003. [14] Michael Littman and Peter Stone.",
                "A polynomial-time Nash equilibrium algorithm for repeated games.",
                "In ACM-EC, pages 48-54, 2003. [15] Leslie M. Marx and Jeroen M. Swinkels.",
                "Order independence for iterated weak dominance.",
                "Games and Economic Behavior, 18:219-245, 1997. [16] Leslie M. Marx and Jeroen M. Swinkels.",
                "Corrigendum, order independence for iterated weak dominance.",
                "Games and Economic Behavior, 31:324-329, 2000. [17] Andreu Mas-Colell, Michael Whinston, and Jerry R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [18] Roger Myerson.",
                "Game Theory: Analysis of Conflict.",
                "Harvard University Press, Cambridge, 1991. [19] Martin J Osborne and Ariel Rubinstein.",
                "A Course in Game Theory.",
                "MIT Press, 1994. [20] Christos Papadimitriou.",
                "Algorithms, games and the Internet.",
                "In STOC, pages 749-753, 2001. [21] Ryan Porter, Eugene Nudelman, and Yoav Shoham.",
                "Simple search methods for finding a Nash equilibrium.",
                "In AAAI, pages 664-669, 2004. 97"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Mostramos que, a diferencia de los juegos de forma normal, decidir si una estrategia pura dada está dominada por otra estrategia pura en un \"juego bayesiano\" es NP-completado (tanto con dominio estricto como débil);Sin embargo, decidir si una estrategia está dominada por alguna estrategia mixta aún se puede hacer en tiempo polinómico con un solo programa lineal resuelve (tanto con estricto como débil ∗ Este material se basa en el trabajo apoyado por la National Science Foundation bajo las subvenciones ITR IIS-0121678e IIS-0427858, y una beca Sloan. Dominio).",
                "Finalmente, mostramos que el dominio iterado utilizando estrategias puras puede requerir un número exponencial de iteraciones en un \"juego bayesiano\" (tanto con dominio estricto como débil).",
                "En un \"juego bayesiano\", cada jugador primero recibe información de preferencias privadas (el tipo de jugadores) de una distribución, que determina la utilidad que el jugador recibe para cada resultado de (es decir, vector de acciones jugadas en) el juego.",
                "Un \"juego bayesiano\" es dado por un conjunto de jugadores {1, 2 ,..., n};y, para cada jugador I, un conjunto (finito) de acciones ai, un espacio de tipo (finito) θi con una distribución de probabilidad πi sobre él, y una función de utilidad UI: θi × A1 × A2 ×...× an → r (donde ui (θi, a1, a2, ..., an) denota el jugador es utilidad cuando el tipo es θi y cada jugador J juega acción AJ).",
                "Una estrategia pura en un \"juego bayesiano\" es un mapeo de tipos a acciones, σi: θi → ai, donde σi (θi) denota la acción que el jugador que juega para el tipo θi.",
                "Cualquier vector de estrategias puras en un \"juego bayesiano\" define una utilidad (esperada) para cada jugador y, por lo tanto, podemos traducir un \"juego bayesiano\" en un juego de forma normal.",
                "En un \"juego bayesiano\", es completado NP decidir si una estrategia pura dada σr: θr → AR está dominada por alguna otra estrategia pura (tanto para dominio estricto como débil), incluso cuando la distribución de los jugadores de fila sobre los tipos es uniforme.",
                "Para demostrar que el problema es NP-Hard, reducimos un caso de satisfacción arbitraria (dado por un conjunto de cláusulas C usando variables de V) al siguiente \"juego bayesiano\".",
                "En un \"juego bayesiano\", se puede decidir en tiempo polinómico si una estrategia dada (posiblemente mixta) σr está dominada por alguna otra estrategia mixta, utilizando programación lineal (tanto para dominio estricto como débil).",
                "Mostramos que, a diferencia de los juegos de forma normal, decidir si una estrategia pura dada está dominada por otra estrategia pura en un \"juego bayesiano\" es NP-completado (tanto con dominio estricto como débil);Sin embargo, decidir si una estrategia está dominada por alguna estrategia mixta aún se puede hacer en tiempo polinómico con una sola resolución de programa lineal (tanto con dominio estricto como débil)."
            ],
            "translated_text": "",
            "candidates": [
                "juego bayesiano",
                "juego bayesiano",
                "juego bayesiano",
                "juego bayesiano",
                "juego bayesiano",
                "juego bayesiano",
                "juego bayesiano",
                "juego bayesiano",
                "juego bayesiano",
                "juego bayesiano",
                "juego bayesiano",
                "juego bayesiano",
                "juego bayesiano",
                "juego bayesiano",
                "juego bayesiano",
                "juego bayesiano",
                "juego bayesiano",
                "juego bayesiano",
                "juego bayesiano",
                "juego bayesiano",
                "juego bayesiano"
            ],
            "error": []
        },
        "iterated dominance": {
            "translated_key": "dominio iterado",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Complexity of (Iterated) Dominance∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT We study various computational aspects of solving games using dominance and <br>iterated dominance</br>.",
                "We first study both strict and weak dominance (not iterated), and show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve.",
                "We then move on to <br>iterated dominance</br>.",
                "We show that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance.",
                "This allows us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
                "Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].)",
                "Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time.",
                "We then study what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies.",
                "First, we show that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak dominance).",
                "Then, we show that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3).",
                "Finally, we study Bayesian games.",
                "We show that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak ∗ This material is based upon work supported by the National Science Foundation under ITR grants IIS-0121678 and IIS-0427858, and a Sloan Fellowship. dominance).",
                "Finally, we show that <br>iterated dominance</br> using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak dominance).",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In multiagent systems with self-interested agents, the optimal action for one agent may depend on the actions taken by other agents.",
                "In such settings, the agents require tools from game theory to rationally decide on an action.",
                "Game theory offers various formal models of strategic settings-the best-known of which is a game in normal (or matrix) form, specifying a utility (payoff) for each agent for each combination of strategies that the agents choose-as well as solution concepts, which, given a game, specify which outcomes are reasonable (under various assumptions of rationality and common knowledge).",
                "Probably the best-known (and certainly the most-studied) solution concept is that of Nash equilibrium.",
                "A Nash equilibrium specifies a strategy for each player, in such a way that no player has an incentive to (unilaterally) deviate from the prescribed strategy.",
                "Recently, numerous papers have studied computing Nash equilibria in various settings [9, 4, 12, 3, 13, 14], and the complexity of constructing a Nash equilibrium in normal form games has been labeled one of the two most important open problems on the boundary of P today [20].",
                "The problem of computing solutions according to the perhaps more elementary solution concepts of dominance and <br>iterated dominance</br> has received much less attention. (After an early short paper on an easy case [11], the main computational study of these concepts has actually taken place in a paper in the game theory community [7].1 ) A strategy strictly dominates another strategy if it performs strictly 1 This is not to say that computer scientists have ignored 88 better against all vectors of opponent strategies, and weakly dominates it if it performs at least as well against all vectors of opponent strategies, and strictly better against at least one.",
                "The idea is that dominated strategies can be eliminated from consideration.",
                "In <br>iterated dominance</br>, the elimination proceeds in rounds, and becomes easier as more strategies are eliminated: in any given round, the dominating strategy no longer needs to perform better than or as well as the dominated strategy against opponent strategies that were eliminated in earlier rounds.",
                "Computing solutions according to (iterated) dominance is important for at least the following reasons: 1) it can be computationally easier than computing (for instance) a Nash equilibrium (and therefore it can be useful as a preprocessing step in computing a Nash equilibrium), and 2) (iterated) dominance requires a weaker rationality assumption on the players than (for instance) Nash equilibrium, and therefore solutions derived according to it are more likely to occur.",
                "In this paper, we study some fundamental computational questions concerning dominance and <br>iterated dominance</br>, including how hard it is to check whether a given strategy can be eliminated by each of the variants of these notions.",
                "The rest of the paper is organized as follows.",
                "In Section 2, we briefly review definitions and basic properties of normal form games, strict and weak dominance, and iterated strict and weak dominance.",
                "In the remaining sections, we study computational aspects of dominance and <br>iterated dominance</br>.",
                "In Section 3, we study one-shot (not iterated) dominance.",
                "In Section 4, we study <br>iterated dominance</br>.",
                "In Section 5, we study dominance and <br>iterated dominance</br> when the dominating strategy can only place probability on a few pure strategies.",
                "Finally, in Section 6, we study dominance and <br>iterated dominance</br> in Bayesian games. 2.",
                "DEFINITIONS AND BASIC PROPERTIES In this section, we briefly review normal form games, as well as dominance and <br>iterated dominance</br> (both strict and weak).",
                "An n-player normal form game is defined as follows.",
                "Definition 1.",
                "A normal form game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of pure strategies Σi and a utility function ui : Σ1 × Σ2 × . . . × Σn → R (where ui(σ1, σ2, . . . , σn) denotes player is utility when each player j plays action σj).",
                "The two main notions of dominance are defined as follows.",
                "Definition 2.",
                "Player is strategy σi is said to be strictly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
                "Player is strategy σi is said to be weakly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) ≥ ui(σi, σ−i), and for at least one vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
                "In this definition, it is sometimes allowed for the dominating strategy σi to be a mixed strategy, that is, a probability distribution over pure strategies.",
                "In this case, the utilities in dominance altogether.",
                "For example, simple dominance checks are sometimes used as a subroutine in searching for Nash equilibria [21]. the definition are the expected utilities.2 There are other notions of dominance, such as very weak dominance (in which no strict inequality is required, so two strategies can dominate each other), but we will not study them here.",
                "When we are looking at the dominance relations for player i, the other players (−i) can be thought of as a single player.3 Therefore, in the rest of the paper, when we study one-shot (not iterated) dominance, we will focus without loss of generality on two-player games.4 In two-player games, we will generally refer to the players as r (row) and c (column) rather than 1 and 2.",
                "In <br>iterated dominance</br>, dominated strategies are removed from the game, and no longer have any effect on future dominance relations.",
                "<br>iterated dominance</br> can eliminate more strategies than dominance, as follows. σr may originally not dominate σr because the latter performs better against σc; but then, once σc is removed because it is dominated by σc, σr dominates σr, and the latter can be removed.",
                "For example, in the following game, R can be removed first, after which D is dominated.",
                "L R U 1, 1 0, 0 D 0, 1 1, 0 Either strict or weak dominance can be used in the definition of <br>iterated dominance</br>.",
                "We note that the process of <br>iterated dominance</br> is never helped by removing a dominated mixed strategy, for the following reason.",
                "If σi gives player i a higher utility than σi against mixed strategy σj for player j = i (and strategies σ−{i,j} for the other players), then for at least one pure strategy σj that σj places positive probability on, σi must perform better than σi against σj (and strategies σ−{i,j} for the other players).",
                "Thus, removing the mixed strategy σj does not introduce any new dominances.",
                "More detailed discussions and examples can be found in standard texts on microeconomics or game theory [17, 5].",
                "We are now ready to move on to the core of this paper. 3.",
                "DOMINANCE (NOT ITERATED) In this section, we study the notion of one-shot (not iterated) dominance.",
                "As a first observation, checking whether a given strategy is strictly (weakly) dominated by some pure strategy is straightforward, by checking, for every pure strategy for that player, whether the latter strategy performs strictly better against all the opponents strategies (at least as well against all the opponents strategies, and strictly 2 The dominated strategy σi is, of course, also allowed to be mixed, but this has no technical implications for the paper: when we study one-shot dominance, we ask whether a given strategy is dominated, and it does not matter whether the given strategy is pure or mixed; when we study <br>iterated dominance</br>, there is no use in eliminating mixed strategies, as we will see shortly. 3 This player may have a very large strategy space (one pure strategy for every vector of pure strategies for the players that are being replaced).",
                "Nevertheless, this will not result in an increase in our representation size, because the original representation already had to specify utilities for each of these vectors. 4 We note that a restriction to two-player games would not be without loss of generality for <br>iterated dominance</br>.",
                "This is because for <br>iterated dominance</br>, we need to look at the dominated strategies of each individual player, so we cannot merge any players. 89 better against at least one).5 Next, we show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time by solving a single linear program. (Similar linear programs have been given before [18]; we present the result here for completeness, and because we will build on the linear programs given below in Theorem 6.)",
                "Proposition 1.",
                "Given the row players utilities, a subset Dr of the row players pure strategies Σr, and a distinguished strategy σ∗ r for the row player, we can check in time polynomial in the size of the game (by solving a single linear program of polynomial size) whether there exists some mixed strategy σr, that places positive probability only on strategies in Dr and dominates σ∗ r , both for strict and for weak dominance.",
                "Proof.",
                "Let pdr be the probability that σr places on dr ∈ Dr. We will solve a single linear program in each of our algorithms; linear programs can be solved in polynomial time [10].",
                "For strict dominance, the question is whether the pdr can be set so that for every pure strategy for the column player σc ∈ Σc, dr∈Dr pdr ur(dr, σc) > ur(σ∗ r , σc).",
                "Because the inequality must be strict, we cannot solve this directly by linear programming.",
                "We proceed as follows.",
                "Because the game is finite, we may assume without loss of generality that all utilities are positive (if not, simply add a constant to all utilities.)",
                "Solve the following linear program: minimize dr∈Dr pdr such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc).",
                "If σ∗ r is strictly dominated by some mixed strategy, this linear program has a solution with objective value < 1. (The dominating strategy is a feasible solution with objective value exactly 1.",
                "Because no constraint is binding for this solution, we can reduce one of the probabilities slightly without affecting feasibility, thereby obtaining a solution with objective value < 1.)",
                "Moreover, if this linear program has a solution with objective value < 1, there is a mixed strategy strictly dominating σ∗ r , which can be obtained by taking the LP solution and adding the remaining probability to any strategy (because all the utilities are positive, this will add to the left side of any inequality, so all inequalities will become strict).",
                "For weak dominance, we can solve the following linear program: maximize σc∈Σc (( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc)) such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc); dr∈Dr pdr = 1.",
                "If σ∗ r is weakly dominated by some mixed strategy, then that mixed strategy is a feasible solution to this program with objective value > 0, because for at least one strategy σc ∈ Σc we have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0.",
                "On the other hand, if this program has a solution with objective value > 0, then for at least one strategy σc ∈ Σc we 5 Recall that the assumption of a single opponent (that is, the assumption of two players) is without loss of generality for one-shot dominance. must have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0, and thus the linear programs solution is a weakly dominating mixed strategy. 4.",
                "<br>iterated dominance</br> We now move on to <br>iterated dominance</br>.",
                "It is well-known that iterated strict dominance is path-independent [6, 19]that is, if we remove dominated strategies until no more dominated strategies remain, in the end the remaining strategies for each player will be the same, regardless of the order in which strategies are removed.",
                "Because of this, to see whether a given strategy can be eliminated by iterated strict dominance, all that needs to be done is to repeatedly remove strategies that are strictly dominated, until no more dominated strategies remain.",
                "Because we can check in polynomial time whether any given strategy is dominated (whether or not dominance by mixed strategies is allowed, as described in Section 3), this whole procedure takes only polynomial time.",
                "In the case of <br>iterated dominance</br> by pure strategies with two players, Knuth et al. [11] slightly improve on (speed up) the straightforward implementation of this procedure by keeping track of, for each ordered pair of strategies for a player, the number of opponent strategies that prevent the first strategy from dominating the second.",
                "Hereby the runtime for an m × n game is reduced from O((m + n)4 ) to O((m + n)3 ). (Actually, they only study very weak dominance (for which no strict inequalities are required), but the approach is easily extended.)",
                "In contrast, iterated weak dominance is known to be pathdependent.6 For example, in the following game, using iterated weak dominance we can eliminate M first, and then D, or R first, and then U. L M R U 1, 1 0, 0 1, 0 D 1, 1 1, 0 0, 0 Therefore, while the procedure of removing weakly dominated strategies until no more weakly dominated strategies remain can certainly be executed in polynomial time, which strategies survive in the end depends on the order in which we remove the dominated strategies.",
                "We will investigate two questions for iterated weak dominance: whether a given strategy is eliminated in some path, and whether there is a path to a unique solution (one pure strategy left per player).",
                "We will show that both of these problems are computationally hard.",
                "Definition 3.",
                "Given a game in normal form and a distinguished strategy σ∗ , IWD-STRATEGY-ELIMINATION asks whether there is some path of iterated weak dominance that eliminates σ∗ .",
                "Given a game in normal form, IWDUNIQUE-SOLUTION asks whether there is some path of iterated weak dominance that leads to a unique solution (one strategy left per player).",
                "The following lemma shows a special case of normal form games in which allowing for weak dominance by mixed strategies (in addition to weak dominance by pure strategies) does 6 There is, however, a restriction of weak dominance called nice weak dominance which is path-independent [15, 16].",
                "For an overview of path-independence results, see Apt [1]. 90 not help.",
                "We will prove the hardness results in this setting, so that they will hold whether or not dominance by mixed strategies is allowed.",
                "Lemma 1.",
                "Suppose that all the utilities in a game are in {0, 1}.",
                "Then every pure strategy that is weakly dominated by a mixed strategy is also weakly dominated by a pure strategy.",
                "Proof.",
                "Suppose pure strategy σ is weakly dominated by mixed strategy σ∗ .",
                "If σ gets a utility of 1 against some opponent strategy (or vector of opponent strategies if there are more than 2 players), then all the pure strategies that σ∗ places positive probability on must also get a utility of 1 against that opponent strategy (or else the expected utility would be smaller than 1).",
                "Moreover, at least one of the pure strategies that σ∗ places positive probability on must get a utility of 1 against an opponent strategy that σ gets 0 against (or else the inequality would never be strict).",
                "It follows that this pure strategy weakly dominates σ.",
                "We are now ready to prove the main results of this section.",
                "Theorem 1.",
                "IWD-STRATEGY-ELIMINATION is NPcomplete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed.",
                "Proof.",
                "The problem is in NP because given a sequence of strategies to be eliminated, we can easily check whether this is a valid sequence of eliminations (even when dominance by mixed strategies is allowed, using Proposition 1).",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following IWD-STRATEGY-ELIMINATION instance. (In this instance, we will specify that certain strategies are uneliminable.",
                "A strategy σr can be made uneliminable, even when 0 and 1 are the only allowed utilities, by adding another strategy σr and another opponent strategy σc, so that: 1. σr and σr are the only strategies that give the row player a utility of 1 against σc. 2. σr and σr always give the row player the same utility. 3. σc is the only strategy that gives the column player a utility of 1 against σr, but otherwise σc always gives the column player utility 0.",
                "This makes it impossible to eliminate any of these three strategies.",
                "We will not explicitly specify the additional strategies to make the proof more legible.)",
                "In this proof, we will denote row player strategies by s, and column player strategies by t, to improve legibility.",
                "Let the row players pure strategy set be given as follows.",
                "For every variable v ∈ V , the row player has corresponding strategies s1 +v, s2 +v, s1 −v, s2 −v.",
                "Additionally, the row player has the following 2 strategies: s1 0 and s2 0, where s2 0 = σ∗ r (that is, it is the strategy we seek to eliminate).",
                "Finally, for every clause c ∈ C, the row player has corresponding strategies s1 c (uneliminable) and s2 c. Let the column players pure strategy set be given as follows.",
                "For every variable v ∈ V , the column player has a corresponding strategy tv.",
                "For every clause c ∈ C, the column player has a corresponding strategy tc, and additionally, for every literal l ∈ L that occurs in c, a strategy tc,l.",
                "For every variable v ∈ V , the column player has corresponding strategies t+v, t−v (both uneliminable).",
                "Finally, the column player has three additional strategies: t1 0 (uneliminable), t2 0, and t1.",
                "The utility function for the row player is given as follows: • ur(s1 +v, tv) = 0 for all v ∈ V ; • ur(s2 +v, tv) = 1 for all v ∈ V ; • ur(s1 −v, tv) = 1 for all v ∈ V ; • ur(s2 −v, tv) = 0 for all v ∈ V ; • ur(s1 +v, t1) = 1 for all v ∈ V ; • ur(s2 +v, t1) = 0 for all v ∈ V ; • ur(s1 −v, t1) = 0 for all v ∈ V ; • ur(s2 −v, t1) = 1 for all v ∈ V ; • ur(sb +v, t+v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sb −v, t−v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sl, t) = 0 otherwise for all l ∈ L and t ∈ S2; • ur(s1 0, tc) = 0 for all c ∈ C; • ur(s2 0, tc) = 1 for all c ∈ C; • ur(sb 0, t1 0) = 1 for all b ∈ {1, 2}; • ur(s1 0, t2 0) = 1; • ur(s2 0, t2 0) = 0; • ur(sb 0, t) = 0 otherwise for all b ∈ {1, 2} and t ∈ S2; • ur(sb c, t) = 0 otherwise for all c ∈ C and b ∈ {1, 2}; and the row players utility is 0 in every other case.",
                "The utility function for the column player is given as follows: • uc(s, tv) = 0 for all v ∈ V and s ∈ S1; • uc(s, t1) = 0 for all s ∈ S1; • uc(s2 l , tc) = 1 for all c ∈ C and l ∈ L where l ∈ c (literal l occurs in clause c); • uc(s2 l2 , tc,l1 ) = 1 for all c ∈ C and l1, l2 ∈ L, l1 = l2 where l2 ∈ c; • uc(s1 c, tc) = 1 for all c ∈ C; • uc(s2 c, tc) = 0 for all c ∈ C; • uc(sb c, tc,l) = 1 for all c ∈ C, l ∈ L, and b ∈ {1, 2}; • uc(s2, tc) = uc(s2, tc,l) = 0 otherwise for all c ∈ C and l ∈ L; and the column players utility is 0 in every other case.",
                "We now show that the two instances are equivalent.",
                "First, suppose there is a solution to the satisfiability instance: that is, a truth-value assignment to the variables in V such that all clauses are satisfied.",
                "Then, consider the following sequence of eliminations in our game: 1.",
                "For every variable v that is set to true in the assignment, eliminate tv (which gives the column player utility 0 everywhere). 2.",
                "Then, for every variable v that is set to true in the assignment, eliminate s2 +v using s1 +v (which is possible because tv has been eliminated, and because t1 has not been eliminated (yet)). 3.",
                "Now eliminate t1 (which gives the column player utility 0 everywhere). 4.",
                "Next, for every variable v that is set to false in the assignment, eliminate s2 −v using s1 −v (which is possible because t1 has been eliminated, and because tv has not been eliminated (yet)). 5.",
                "For every clause c which has the variable corresponding to one of its positive literals l = +v set to true in the assignment, eliminate tc using tc,l (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 6.",
                "For every clause c which has the variable corresponding to one of its negative literals l = −v set to false in the assignment, eliminate tc using tc,l 91 (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 7.",
                "Because the assignment satisfied the formula, all the tc have now been eliminated.",
                "Thus, we can eliminate s2 0 = σ∗ r using s1 0.",
                "It follows that there is a solution to the IWD-STRATEGY-ELIMINATION instance.",
                "Now suppose there is a solution to the IWD-STRATEGYELIMINATION instance.",
                "By Lemma 1, we can assume that all the dominances are by pure strategies.",
                "We first observe that only s1 0 can eliminate s2 0 = σ∗ r , because it is the only other strategy that gets the row player a utility of 1 against t1 0, and t1 0 is uneliminable.",
                "However, because s2 0 performs better than s1 0 against the tc strategies, it follows that all of the tc strategies must be eliminated.",
                "For each c ∈ C, the strategy tc can only be eliminated by one of the strategies tc,l (with the same c), because these are the only other strategies that get the column player a utility of 1 against s1 c, and s1 c is uneliminable.",
                "But, in order for some tc,l to eliminate tc, s2 l must be eliminated first.",
                "Only s1 l can eliminate s2 l , because it is the only other strategy that gets the row player a utility of 1 against tl, and tl is uneliminable.",
                "We next show that for every v ∈ V only one of s2 +v, s2 −v can be eliminated.",
                "This is because in order for s1 +v to eliminate s2 +v, tv needs to have been eliminated and t1, not (so tv must be eliminated before t1); but in order for s1 −v to eliminate s2 −v, t1 needs to have been eliminated and tv, not (so t1 must be eliminated before tv).",
                "So, set v to true if s2 +v is eliminated, and to false otherwise Because by the above, for every clause c, one of the s2 l with l ∈ c must be eliminated, it follows that this is a satisfying assignment to the satisfiability instance.",
                "Using Theorem 1, it is now (relatively) easy to show that IWD-UNIQUE-SOLUTION is also NP-complete under the same restrictions.",
                "Theorem 2.",
                "IWD-UNIQUE-SOLUTION is NP-complete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed.",
                "Proof.",
                "Again, the problem is in NP because we can nondeterministically choose the sequence of eliminations and verify whether it is correct.",
                "To show NP-hardness, we reduce an arbitrary IWD-STRATEGY-ELIMINATION instance to the following IWD-UNIQUE-SOLUTION instance.",
                "Let all the strategies for each player from the original instance remain part of the new instance, and let the utilities resulting from the players playing a pair of these strategies be the same.",
                "We add three additional strategies σ1 r , σ2 r , σ3 r for the row player, and three additional strategies σ1 c , σ2 c , σ3 c for the column player.",
                "Let the additional utilities be as follows: • ur(σr, σj c) = 1 for all σr /∈ {σ1 r , σ2 r , σ3 r } and j ∈ {2, 3}; • ur(σi r, σc) = 1 for all i ∈ {1, 2, 3} and σc /∈ {σ2 c , σ3 c }; • ur(σi r, σ2 c ) = 1 for all i ∈ {2, 3}; • ur(σ1 r , σ3 c ) = 1; • and the row players utility is 0 in all other cases involving a new strategy. • uc(σ3 r , σc) = 1 for all σc /∈ {σ1 c , σ2 c , σ3 c }; • uc(σ∗ r , σj c) = 1 for all j ∈ {2, 3} (σ∗ r is the strategy to be eliminated in the original instance); • uc(σi r, σ1 c ) = 1 for all i ∈ {1, 2}; • ur(σ1 r , σ2 c ) = 1; • ur(σ2 r , σ3 c ) = 1; • and the column players utility is 0 in all other cases involving a new strategy.",
                "We proceed to show that the two instances are equivalent.",
                "First suppose there exists a solution to the original IWDSTRATEGY-ELIMINATION instance.",
                "Then, perform the same sequence of eliminations to eliminate σ∗ r in the new IWD-UNIQUE-SOLUTION instance. (This is possible because at any stage, any weak dominance for the row player in the original instance is still a weak dominance in the new instance, because the two strategies utilities for the row player are the same when the column player plays one of the new strategies; and the same is true for the column player.)",
                "Once σ∗ r is eliminated, let σ1 c eliminate σ2 c . (It performs better against σ2 r .)",
                "Then, let σ1 r eliminate all the other remaining strategies for the row player. (It always performs better against either σ1 c or σ3 c .)",
                "Finally, σ1 c is the unique best response against σ1 r among the column players remaining strategies, so let it eliminate all the other remaining strategies for the column player.",
                "Thus, there exists a solution to the IWD-UNIQUE-SOLUTION instance.",
                "Now suppose there exists a solution to the IWD-UNIQUESOLUTION instance.",
                "By Lemma 1, we can assume that all the dominances are by pure strategies.",
                "We will show that none of the new strategies (σ1 r , σ2 r , σ3 r , σ1 c , σ2 c , σ3 c ) can either eliminate another strategy, or be eliminated before σ∗ r is eliminated.",
                "Thus, there must be a sequence of eliminations ending in the elimination of σ∗ r , which does not involve any of the new strategies, and is therefore a valid sequence of eliminations in the original game (because all original strategies perform the same against each new strategy).",
                "We now show that this is true by exhausting all possibilities for the first elimination before σ∗ r is eliminated that involves a new strategy.",
                "None of the σi r can be eliminated by a σr /∈ {σ1 r , σ2 r , σ3 r }, because the σi r perform better against σ1 c . σ1 r cannot eliminate any other strategy, because it always performs poorer against σ2 c . σ2 r and σ3 r are equivalent from the row players perspective (and thus cannot eliminate each other), and cannot eliminate any other strategy because they always perform poorer against σ3 c .",
                "None of the σj c can be eliminated by a σc /∈ {σ1 c , σ2 c , σ3 c }, because the σj c always perform better against either σ1 r or σ2 r . σ1 c cannot eliminate any other strategy, because it always performs poorer against either σ∗ r or σ3 r . σ2 c cannot eliminate any other strategy, because it always performs poorer against σ2 r or σ3 r . σ3 c cannot eliminate any other strategy, because it always performs poorer against σ1 r or σ3 r .",
                "Thus, there exists a solution to the IWDSTRATEGY-ELIMINATION instance.",
                "A slightly weaker version of the part of Theorem 2 concerning dominance by pure strategies only is the main result of Gilboa et al. [7]. (Besides not proving the result for dominance by mixed strategies, the original result was weaker because it required utilities {0, 1, 2, 3, 4, 5, 6, 7, 8} rather than just {0, 1} (and because of this, our Lemma 1 cannot be applied to it to get the result for mixed strategies).) 5. (ITERATED) DOMINANCE USING MIXED STRATEGIES WITH SMALL SUPPORTS When showing that a strategy is dominated by a mixed strategy, there are several reasons to prefer exhibiting a 92 dominating strategy that places positive probability on as few pure strategies as possible.",
                "First, this will reduce the number of bits required to specify the dominating strategy (and thus the proof of dominance can be communicated quicker): if the dominating mixed strategy places positive probability on only k strategies, then it can be specified using k real numbers for the probabilities, plus k log m (where m is the number of strategies for the player under consideration) bits to indicate which strategies are used.",
                "Second, the proof of dominance will be cleaner: for a dominating mixed strategy, it is typically (always in the case of strict dominance) possible to spread some of the probability onto any unused pure strategy and still have a dominating strategy, but this obscures which pure strategies are the ones that are key in making the mixed strategy dominating.",
                "Third, because (by the previous) the argument for eliminating the dominated strategy is simpler and easier to understand, it is more likely to be accepted.",
                "Fourth, the level of risk neutrality required for the argument to work is reduced, at least in the extreme case where dominance by a single pure strategy can be exhibited (no risk neutrality is required here).",
                "This motivates the following problem.",
                "Definition 4 (MINIMUM-DOMINATING-SET).",
                "We are given the row players utilities of a game in normal form, a distinguished strategy σ∗ for the row player, a specification of whether the dominance should be strict or weak, and a number k. We are asked whether there exists a mixed strategy σ for the row player that places positive probability on at most k pure strategies, and dominates σ∗ in the required sense.",
                "Unfortunately, this problem is NP-complete.",
                "Theorem 3.",
                "MINIMUM-DOMINATING-SET is NPcomplete, both for strict and for weak dominance.",
                "Proof.",
                "The problem is in NP because we can nondeterministically choose a set of at most k strategies to give positive probability, and decide whether we can dominate σ∗ with these k strategies as described in Proposition 1.",
                "To show NP-hardness, we reduce an arbitrary SET-COVER instance (given a set S, subsets S1, S2, . . . , Sr, and a number t, can all of S be covered by at most t of the subsets?) to the following MINIMUM-DOMINATING-SET instance.",
                "For every element s ∈ S, there is a pure strategy σs for the column player.",
                "For every subset Si, there is a pure strategy σSi for the row player.",
                "Finally, there is the distinguished pure strategy σ∗ for the row player.",
                "The row players utilities are as follows: ur(σSi , σs) = t + 1 if s ∈ Si; ur(σSi , σs) = 0 if s /∈ Si; ur(σ∗ , σs) = 1 for all s ∈ S. Finally, we let k = t. We now proceed to show that the two instances are equivalent.",
                "First suppose there exists a solution to the SET-COVER instance.",
                "Without loss of generality, we can assume that there are exactly k subsets in the cover.",
                "Then, for every Si that is in the cover, let the dominating strategy σ place exactly 1 k probability on the corresponding pure strategy σSi .",
                "Now, if we let n(s) be the number of subsets in the cover containing s (we observe that that n(s) ≥ 1), then for every strategy σs for the column player, the row players expected utility for playing σ when the column player is playing σs is u(σ, σs) = n(s) k (k + 1) ≥ k+1 k > 1 = u(σ∗ , σs).",
                "So σ strictly (and thus also weakly) dominates σ∗ , and there exists a solution to the MINIMUM-DOMINATING-SET instance.",
                "Now suppose there exists a solution to the MINIMUMDOMINATING-SET instance.",
                "Consider the (at most k) pure strategies of the form σSi on which the dominating mixed strategy σ places positive probability, and let T be the collection of the corresponding subsets Si.",
                "We claim that T is a cover.",
                "For suppose there is some s ∈ S that is not in any of the subsets in T .",
                "Then, if the column player plays σs, the row player (when playing σ) will always receive utility 0-as opposed to the utility of 1 the row player would receive for playing σ∗ , contradicting the fact that σ dominates σ∗ (whether this dominance is weak or strict).",
                "It follows that there exists a solution to the SET-COVER instance.",
                "On the other hand, if we require that the dominating strategy only places positive probability on a very small number of pure strategies, then it once again becomes easy to check whether a strategy is dominated.",
                "Specifically, to find out whether player is strategy σ∗ is dominated by a strategy that places positive probability on only k pure strategies, we can simply check, for every subset of k of player is pure strategies, whether there is a strategy that places positive probability only on these k strategies and dominates σ∗ , using Proposition 1.",
                "This requires only O(|Σi|k ) such checks.",
                "Thus, if k is a constant, this constitutes a polynomial-time algorithm.",
                "A natural question to ask next is whether iterated strict dominance remains computationally easy when dominating strategies are required to place positive probability on at most k pure strategies, where k is a small constant. (We have already shown in Section 4 that iterated weak dominance is hard even when k = 1, that is, only dominance by pure strategies is allowed.)",
                "Of course, if iterated strict dominance were path-independent under this restriction, computational easiness would follow as it did in Section 4.",
                "However, it turns out that this is not the case.",
                "Observation 1.",
                "If we restrict the dominating strategies to place positive probability on at most two pure strategies, iterated strict dominance becomes path-dependent.",
                "Proof.",
                "Consider the following game: 7, 1 0, 0 0, 0 0, 0 7, 1 0, 0 3, 0 3, 0 0, 0 0, 0 0, 0 3, 1 1, 0 1, 0 1, 0 Let (i, j) denote the outcome in which the row player plays the ith row and the column player plays the jth column.",
                "Because (1, 1), (2, 2), and (4, 3) are all Nash equilibria, none of the column players pure strategies will ever be eliminated, and neither will rows 1, 2, and 4.",
                "We now observe that randomizing uniformly over rows 1 and 2 dominates row 3, and randomizing uniformly over rows 3 and 4 dominates row 5.",
                "However, if we eliminate row 3 first, it becomes impossible to dominate row 5 without randomizing over at least 3 pure strategies.",
                "Indeed, iterated strict dominance turns out to be hard even when k = 3.",
                "Theorem 4.",
                "If we restrict the dominating strategies to place positive probability on at most three pure strategies, it becomes NP-complete to decide whether a given strategy can be eliminated using iterated strict dominance. 93 Proof.",
                "The problem is in NP because given a sequence of strategies to be eliminated, we can check in polynomial time whether this is a valid sequence of eliminations (for any strategy to be eliminated, we can check, for every subset of three other strategies, whether there is a strategy placing positive probability on only these three strategies that dominates the strategy to be eliminated, using Proposition 1).",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following two-player game.",
                "For every variable v ∈ V , the row player has strategies s+v, s−v, s1 v, s2 v, s3 v, s4 v, and the column player has strategies t1 v, t2 v, t3 v, t4 v. For every clause c ∈ C, the row player has a strategy sc, and the column player has a strategy tc, as well as, for every literal l occurring in c, an additional strategy tl c. The row player has two additional strategies s1 and s2. (s2 is the strategy that we are seeking to eliminate.)",
                "Finally, the column player has one additional strategy t1.",
                "The utility function for the row player is given as follows (where is some sufficiently small number): • ur(s+v, tj v) = 4 if j ∈ {1, 2}, for all v ∈ V ; • ur(s+v, tj v) = 1 if j ∈ {3, 4}, for all v ∈ V ; • ur(s−v, tj v) = 1 if j ∈ {1, 2}, for all v ∈ V ; • ur(s−v, tj v) = 4 if j ∈ {3, 4}, for all v ∈ V ; • ur(s+v, t) = ur(s−v, t) = 0 for all v ∈ V and t /∈ {t1 v, t2 v, t3 v, t4 v}; • ur(si v, ti v) = 13 for all v ∈ V and i ∈ {1, 2, 3, 4}; • ur(si v, t) = for all v ∈ V , i ∈ {1, 2, 3, 4}, and t = ti v; • ur(sc, tc) = 2 for all c ∈ C; • ur(sc, t) = 0 for all c ∈ C and t = tc; • ur(s1, t1) = 1 + ; • ur(s1, t) = for all t = t1; • ur(s2, t1) = 1; • ur(s2, tc) = 1 for all c ∈ C; • ur(s2, t) = 0 for all t /∈ {t1} ∪ {tc : c ∈ C}.",
                "The utility function for the column player is given as follows: • uc(si v, ti v) = 1 for all v ∈ V and i ∈ {1, 2, 3, 4}; • uc(s, ti v) = 0 for all v ∈ V , i ∈ {1, 2, 3, 4}, and s = si v; • uc(sc, tc) = 1 for all c ∈ C; • uc(sl, tc) = 1 for all c ∈ C and l ∈ L occurring in c; • uc(s, tc) = 0 for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c}; • uc(sc, tl c) = 1 + for all c ∈ C; • uc(sl , tl c) = 1 + for all c ∈ C and l = l occurring in c; • uc(s, tl c) = for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c, l = l }; • uc(s2, t1) = 1; • uc(s, t1) = 0 for all s = s2.",
                "We now show that the two instances are equivalent.",
                "First, suppose that there is a solution to the satisfiability instance.",
                "Then, consider the following sequence of eliminations in our game: 1.",
                "For every variable v that is set to true in the satisfying assignment, eliminate s+v with the mixed strategy σr that places probability 1/3 on s−v, probability 1/3 on s1 v, and probability 1/3 on s2 v. (The expected utility of playing σr against t1 v or t2 v is 14/3 > 4; against t3 v or t4 v, it is 4/3 > 1; and against anything else it is 2 /3 > 0.",
                "Hence the dominance is valid.) 2.",
                "Similarly, for every variable v that is set to false in the satisfying assignment, eliminate s−v with the mixed strategy σr that places probability 1/3 on s+v, probability 1/3 on s3 v, and probability 1/3 on s4 v. (The expected utility of playing σr against t1 v or t2 v is 4/3 > 1; against t3 v or t4 v, it is 14/3 > 4; and against anything else it is 2 /3 > 0.",
                "Hence the dominance is valid.) 3.",
                "For every c ∈ C, eliminate tc with any tl c for which l was set to true in the satisfying assignment. (This is a valid dominance because tl c performs better than tc against any strategy other than sl, and we eliminated sl in step 1 or in step 2.) 4.",
                "Finally, eliminate s2 with s1. (This is a valid dominance because s1 performs better than s2 against any strategy other than those in {tc : c ∈ C}, which we eliminated in step 3.)",
                "Hence, there is an elimination path that eliminates s2.",
                "Now, suppose that there is an elimination path that eliminates s2.",
                "The strategy that eventually dominates s2 must place most of its probability on s1, because s1 is the only other strategy that performs well against t1, which cannot be eliminated before s2.",
                "But, s1 performs significantly worse than s2 against any strategy tc with c ∈ C, so it follows that all these strategies must be eliminated first.",
                "Each strategy tc can only be eliminated by a strategy that places most of its weight on the corresponding strategies tl c with l ∈ c, because they are the only other strategies that perform well against sc, which cannot be eliminated before tc.",
                "But, each strategy tl c performs significantly worse than tc against sl, so it follows that for every clause c, for one of the literals l occurring in it, sl must be eliminated first.",
                "Now, strategies of the form tj v will never be eliminated because they are the unique best responses to the corresponding strategies sj v (which are, in turn, the best responses to the corresponding tj v).",
                "As a result, if strategy s+v (respectively, s−v) is eliminated, then its opposite strategy s−v (respectively, s+v) can no longer be eliminated, for the following reason.",
                "There is no other pure strategy remaining that gets a significant utility against more than one of the strategies t1 v, t2 v, t3 v, t4 v, but s−v (respectively, s+v) gets significant utility against all 4, and therefore cannot be dominated by a mixed strategy placing positive probability on at most 3 strategies.",
                "It follows that for each v ∈ V , at most one of the strategies s+v, s−v is eliminated, in such a way that for every clause c, for one of the literals l occurring in it, sl must be eliminated.",
                "But then setting all the literals l such that sl is eliminated to true constitutes a solution to the satisfiability instance.",
                "In the next section, we return to the setting where there is no restriction on the number of pure strategies on which a dominating mixed strategy can place positive probability. 6. (ITERATED) DOMINANCE IN BAYESIAN GAMES So far, we have focused on normal form games that are flatly represented (that is, every matrix entry is given ex94 plicitly).",
                "However, for many games, the flat representation is too large to write down explicitly, and instead, some representation that exploits the structure of the game needs to be used.",
                "Bayesian games, besides being of interest in their own right, can be thought of as a useful structured representation of normal form games, and we will study them in this section.",
                "In a Bayesian game, each player first receives privately held preference information (the players type) from a distribution, which determines the utility that that player receives for every outcome of (that is, vector of actions played in) the game.",
                "After receiving this type, the player plays an action based on it.7 Definition 5.",
                "A Bayesian game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of actions Ai, a (finite) type space Θi with a probability distribution πi over it, and a utility function ui : Θi × A1 × A2 × . . . × An → R (where ui(θi, a1, a2, . . . , an) denotes player is utility when is type is θi and each player j plays action aj).",
                "A pure strategy in a Bayesian game is a mapping from types to actions, σi : Θi → Ai, where σi(θi) denotes the action that player i plays for type θi.",
                "Any vector of pure strategies in a Bayesian game defines an (expected) utility for each player, and therefore we can translate a Bayesian game into a normal form game.",
                "In this normal form game, the notions of dominance and <br>iterated dominance</br> are defined as before.",
                "However, the normal form representation of the game is exponentially larger than the Bayesian representation, because each player i has |Ai||Θi| distinct pure strategies.",
                "Thus, any algorithm for Bayesian games that relies on expanding the game to its normal form will require exponential time.",
                "Specifically, our easiness results for normal form games do not directly transfer to this setting.",
                "In fact, it turns out that checking whether a strategy is dominated by a pure strategy is hard in Bayesian games.",
                "Theorem 5.",
                "In a Bayesian game, it is NP-complete to decide whether a given pure strategy σr : Θr → Ar is dominated by some other pure strategy (both for strict and weak dominance), even when the row players distribution over types is uniform.",
                "Proof.",
                "The problem is in NP because it is easy to verify whether a candidate dominating strategy is indeed a dominating strategy.",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a set of clauses C using variables from V ) to the following Bayesian game.",
                "Let the row players action set be Ar = {t, f, 0} and let the column players action set be Ac = {ac : c ∈ C}.",
                "Let the row players type set be Θr = {θv : v ∈ V }, with a distribution πr that is uniform.",
                "Let the row players utility function be as follows: • ur(θv, 0, ac) = 0 for all v ∈ V and c ∈ C; • ur(θv, b, ac) = |V | for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b satisfies c; • ur(θv, b, ac) = −1 for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b does not satisfy c. 7 In general, a player can also receive a signal about the other players preferences, but we will not concern ourselves with that here.",
                "Let the pure strategy to be dominated be the one that plays 0 for every type.",
                "We show that the strategy is dominated by a pure strategy if and only if there is a solution to the satisfiability instance.",
                "First, suppose there is a solution to the satisfiability instance.",
                "Then, let σd r be given by: σd r (θv) = t if v is set to true in the solution to the satisfiability instance, and σd r (θv) = f otherwise.",
                "Then, against any action ac by the column player, there is at least one type θv such that either +v ∈ c and σd r (θv) = t, or −v ∈ c and σd r (θv) = f. Thus, the row players expected utility against action ac is at least |V | |V | − |V |−1 |V | = 1 |V | > 0.",
                "So, σd r is a dominating strategy.",
                "Now, suppose there is a dominating pure strategy σd r .",
                "This dominating strategy must play t or f for at least one type.",
                "Thus, against any ac by the column player, there must at least be some type θv for which ur(θv, σd r (θv), ac) > 0.",
                "That is, there must be at least one variable v such that setting v to σd r (θv) satifies c. But then, setting each v to σd r (θv) must satisfy all the clauses.",
                "So a satisfying assignment exists.",
                "However, it turns out that we can modify the linear programs from Proposition 1 to obtain a polynomial time algorithm for checking whether a strategy is dominated by a mixed strategy in Bayesian games.",
                "Theorem 6.",
                "In a Bayesian game, it can be decided in polynomial time whether a given (possibly mixed) strategy σr is dominated by some other mixed strategy, using linear programming (both for strict and weak dominance).",
                "Proof.",
                "We can modify the linear programs presented in Proposition 1 as follows.",
                "For strict dominance, again assuming without loss of generality that all the utilities in the game are positive, use the following linear program (in which pσr r (θr, ar) is the probability that σr, the strategy to be dominated, places on ar for type θr): minimize θr∈Θr ar∈Ar pr(ar) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) ≤ 1.",
                "Assuming that π(θr) > 0 for all θr ∈ Θr, this program will return an objective value smaller than |Θr| if and only if σr is strictly dominated, by reasoning similar to that done in Proposition 1.",
                "For weak dominance, use the following linear program: maximize ac∈Ac ( θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar)− θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar)) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) = 1.",
                "This program will return an objective value greater than 0 if and only if σr is weakly dominated, by reasoning similar to that done in Proposition 1.",
                "We now turn to <br>iterated dominance</br> in Bayesian games.",
                "Na¨ıvely, one might argue that <br>iterated dominance</br> in Bayesian 95 games always requires an exponential number of steps when a significant fraction of the games pure strategies can be eliminated, because there are exponentially many pure strategies.",
                "However, this is not a very strong argument because oftentimes we can eliminate exponentially many pure strategies in one step.",
                "For example, if for some type θr ∈ Θr we have, for all ac ∈ Ac, that u(θr, a1 r, ac) > u(θr, a2 r, ac), then any pure strategy for the row player which plays action a2 r for type θr is dominated (by the strategy that plays action a1 r for type θr instead)-and there are exponentially many (|Ar||Θr|−1 ) such strategies.",
                "It is therefore conceivable that we need only polynomially many eliminations of collections of a players strategies.",
                "However, the following theorem shows that this is not the case, by giving an example where an exponential number of iterations (that is, alternations between the players in eliminating strategies) is required. (We emphasize that this is not a result about computational complexity.)",
                "Theorem 7.",
                "Even in symmetric 3-player Bayesian games, <br>iterated dominance</br> by pure strategies can require an exponential number of iterations (both for strict and weak dominance), even with only three actions per player.",
                "Proof.",
                "Let each player i ∈ {1, 2, 3} have n + 1 types θ1 i , θ2 i , . . . , θn+1 i .",
                "Let each player i have 3 actions ai, bi, ci, and let the utility function of each player be defined as follows. (In the below, i + 1 and i + 2 are shorthand for i + 1(mod 3) and i + 2(mod 3) when used as player indices.",
                "Also, −∞ can be replaced by a sufficiently negative number.",
                "Finally, δ and should be chosen to be very small (even compared to 2−(n+1) ), and should be more than twice as large as δ.) • ui(θ1 i ; ai, ci+1, ci+2) = −1; • ui(θ1 i ; ai, si+1, si+2) = 0 for si+1 = ci+1 or si+2 = ci+2; • ui(θ1 i ; bi, si+1, si+2) = − for si+1 = ai+1 and si+2 = ai+2; • ui(θ1 i ; bi, si+1, si+2) = −∞ for si+1 = ai+1 or si+2 = ai+2; • ui(θ1 i ; ci, si+1, si+2) = −∞ for all si+1, si+2; • ui(θj i ; ai, si+1, si+2) = −∞ for all si+1, si+2 when j > 1; • ui(θj i ; bi, si+1, si+2) = − for all si+1, si+2 when j > 1; • ui(θj i ; ci, si+1, ci+2) = δ − − 1/2 for all si+1 when j > 1; • ui(θj i ; ci, si+1, si+2) = δ− for all si+1 and si+2 = ci+2 when j > 1.",
                "Let the distribution over each players types be given by p(θj i ) = 2−j (with the exception that p(θ2 i ) = 2−2 +2−(n+1) ).",
                "We will be interested in eliminating strategies of the following form: play bi for type θ1 i , and play one of bi or ci otherwise.",
                "Because the utility function is the same for any type θj i with j > 1, these strategies are effectively defined by the total probability that they place on ci,8 which is t2 i (2−2 + 2−(n+1) ) + n+1 j=3 tj i 2−j where tj i = 1 if player i 8 Note that the strategies are still pure strategies; the probability placed on an action by a strategy here is simply the sum of the probabilities of the types for which the strategy chooses that action. plays ci for type θj i , and 0 otherwise.",
                "This probability is different for any two different strategies of the given form, and we have exponentially many different strategies of the given form.",
                "For any probability q which can be expressed as t2(2−2 + 2−(n+1) ) + n+1 j=3 tj2−j (with all tj ∈ {0, 1}), let σi(q) denote the (unique) strategy of the given form for player i which places a total probability of q on ci.",
                "Any strategy that plays ci for type θ1 i or ai for some type θj i with j > 1 can immediately be eliminated.",
                "We will show that, after that, we must eliminate the strategies σi(q) with high q first, slowly working down to those with lower q.",
                "Claim 1: If σi+1(q ) and σi+2(q ) have not yet been eliminated, and q < q , then σi(q) cannot yet be eliminated.",
                "Proof: First, we show that no strategy σi(q ) can eliminate σi(q).",
                "Against σi+1(q ), σi+2(q ), the utility of playing σi(p) is − + p · δ − p · q /2.",
                "Thus, when q = 0, it is best to set p as high as possible (and we note that σi+1(0) and σi+2(0) have not been eliminated), but when q > 0, it is best to set p as low as possible because δ < q /2.",
                "Thus, whether q > q or q < q , σi(q) will always do strictly better than σi(q ) against some remaining opponent strategies.",
                "Hence, no strategy σi(q ) can eliminate σi(q).",
                "The only other pure strategies that could dominate σi(q) are strategies that play ai for type θ1 i , and bi or ci for all other types.",
                "Let us take such a strategy and suppose that it plays c with probability p. Against σi+1(q ), σi+2(q ) (which have not yet been eliminated), the utility of playing this strategy is −(q )2 /2 − /2 + p · δ − p · q /2.",
                "On the other hand, playing σi(q) gives − + q · δ − q · q /2.",
                "Because q > q, we have −(q )2 /2 < −q · q /2, and because δ and are small, it follows that σi(q) receives a higher utility.",
                "Therefore, no strategy dominates σi(q), proving the claim.",
                "Claim 2: If for all q > q, σi+1(q ) and σi+2(q ) have been eliminated, then σi(q) can be eliminated.",
                "Proof: Consider the strategy for player i that plays ai for type θ1 i , and bi for all other types (call this strategy σi); we claim σi dominates σi(q).",
                "First, if either of the other players k plays ak for θ1 k, then σi performs better than σi(q) (which receives −∞ in some cases).",
                "Because the strategies for player k that play ck for type θ1 k, or ak for some type θj k with j > 1, have already been eliminated, all that remains to check is that σi performs better than σi(q) whenever both of the other two players play strategies of the following form: play bk for type θ1 k, and play one of bk or ck otherwise.",
                "We note that among these strategies, there are none left that place probability greater than q on ck.",
                "Letting qk denote the probability with which player k plays ck, the expected utility of playing σi is −qi+1 · qi+2/2 − /2.",
                "On the other hand, the utility of playing σi(q) is − + q · δ − q · qi+2/2.",
                "Because qi+1 ≤ q, the difference between these two expressions is at least /2 − δ, which is positive.",
                "It follows that σi dominates σi(q).",
                "From Claim 2, it follows that all strategies of the form σi(q) will eventually be eliminated.",
                "However, Claim 1 shows that we cannot go ahead and eliminate multiple such strategies for one player, unless at least one other player simultaneously keeps up in the eliminated strategies: every time a σi(q) is eliminated such that σi+1(q) and σi+2(q) have not yet been eliminated, we need to eliminate one of the latter two strategies before any σi(q ) with q > q can be eliminated-that is, we need to alternate between players.",
                "Because there are exponentially many strategies of the form σi(q), it follows that iterated elimination will require exponentially many iterations to complete. 96 It follows that an efficient algorithm for <br>iterated dominance</br> (strict or weak) by pure strategies in Bayesian games, if it exists, must somehow be able to perform (at least part of) many iterations in a single step of the algorithm (because if each step only performed a single iteration, we would need exponentially many steps).",
                "Interestingly, Knuth et al. [11] argue that <br>iterated dominance</br> appears to be an inherently sequential problem (in light of their result that iterated very weak dominance is P-complete, that is, apparently not efficiently parallelizable), suggesting that aggregating many iterations may be difficult. 7.",
                "CONCLUSIONS While the Nash equilibrium solution concept is studied more and more intensely in our community, the perhaps more elementary concept of (iterated) dominance has received much less attention.",
                "In this paper we studied various computational aspects of this concept.",
                "We first studied both strict and weak dominance (not iterated), and showed that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve.",
                "We then moved on to <br>iterated dominance</br>.",
                "We showed that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance.",
                "This allowed us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
                "Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].)",
                "Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time.",
                "We then studied what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies.",
                "First, we showed that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak dominance).",
                "Then, we showed that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3).",
                "Finally, we studied dominance and <br>iterated dominance</br> in Bayesian games, as an example of a concise representation language for normal form games that is interesting in its own right.",
                "We showed that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak dominance).",
                "Finally, we showed that <br>iterated dominance</br> using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak dominance).",
                "There are various avenues for future research.",
                "First, there is the open question of whether it is possible to complete <br>iterated dominance</br> in Bayesian games in polynomial time (even though we showed that an exponential number of alternations between the players in eliminating strategies is sometimes required).",
                "Second, we can study computational aspects of (iterated) dominance in concise representations of normal form games other than Bayesian games-for example, in graphical games [9] or local-effect/action graph games [12, 2]. (How to efficiently perform iterated very weak dominance has already been studied for partially observable stochastic games [8].)",
                "Finally, we can ask whether some of the algorithms we described (such as the one for iterated strict dominance with mixed strategies) can be made faster. 8.",
                "REFERENCES [1] Krzysztof R. Apt.",
                "Uniform proofs of order independence for various strategy elimination procedures.",
                "Contributions to Theoretical Economics, 4(1), 2004. [2] Nivan A. R. Bhat and Kevin Leyton-Brown.",
                "Computing Nash equilibria of action-graph games.",
                "In UAI, 2004. [3] Ben Blum, Christian R. Shelton, and Daphne Koller.",
                "A continuation method for Nash equilibria in structured games.",
                "In IJCAI, 2003. [4] Vincent Conitzer and Tuomas Sandholm.",
                "Complexity results about Nash equilibria.",
                "In IJCAI, pages 765-771, 2003. [5] Drew Fudenberg and Jean Tirole.",
                "Game Theory.",
                "MIT Press, 1991. [6] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
                "On the order of eliminating dominated strategies.",
                "Operations Research Letters, 9:85-89, 1990. [7] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
                "The complexity of eliminating dominated strategies.",
                "Mathematics of Operation Research, 18:553-565, 1993. [8] Eric A. Hansen, Daniel S. Bernstein, and Shlomo Zilberstein.",
                "Dynamic programming for partially observable stochastic games.",
                "In AAAI, pages 709-715, 2004. [9] Michael Kearns, Michael Littman, and Satinder Singh.",
                "Graphical models for game theory.",
                "In UAI, 2001. [10] Leonid Khachiyan.",
                "A polynomial algorithm in linear programming.",
                "Soviet Math.",
                "Doklady, 20:191-194, 1979. [11] Donald E. Knuth, Christos H. Papadimitriou, and John N Tsitsiklis.",
                "A note on strategy elimination in bimatrix games.",
                "Operations Research Letters, 7(3):103-107, 1988. [12] Kevin Leyton-Brown and Moshe Tennenholtz.",
                "Local-effect games.",
                "In IJCAI, 2003. [13] Richard Lipton, Evangelos Markakis, and Aranyak Mehta.",
                "Playing large games using simple strategies.",
                "In ACM-EC, pages 36-41, 2003. [14] Michael Littman and Peter Stone.",
                "A polynomial-time Nash equilibrium algorithm for repeated games.",
                "In ACM-EC, pages 48-54, 2003. [15] Leslie M. Marx and Jeroen M. Swinkels.",
                "Order independence for iterated weak dominance.",
                "Games and Economic Behavior, 18:219-245, 1997. [16] Leslie M. Marx and Jeroen M. Swinkels.",
                "Corrigendum, order independence for iterated weak dominance.",
                "Games and Economic Behavior, 31:324-329, 2000. [17] Andreu Mas-Colell, Michael Whinston, and Jerry R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [18] Roger Myerson.",
                "Game Theory: Analysis of Conflict.",
                "Harvard University Press, Cambridge, 1991. [19] Martin J Osborne and Ariel Rubinstein.",
                "A Course in Game Theory.",
                "MIT Press, 1994. [20] Christos Papadimitriou.",
                "Algorithms, games and the Internet.",
                "In STOC, pages 749-753, 2001. [21] Ryan Porter, Eugene Nudelman, and Yoav Shoham.",
                "Simple search methods for finding a Nash equilibrium.",
                "In AAAI, pages 664-669, 2004. 97"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Complejidad de (iterado) Dominio ∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, EE. UU. Conitzer@cs.cmu.edu tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA Sandholm@cs.cmu.Estudiamos varios aspectos computacionales de resolver juegos utilizando dominio y \"dominio iterado\".",
                "Luego pasamos al \"dominio iterado\".",
                "Finalmente, mostramos que el \"dominio iterado\" utilizando estrategias puras puede requerir un número exponencial de iteraciones en un juego bayesiano (tanto con dominio estricto como débil).",
                "El problema de las soluciones informáticas de acuerdo con los conceptos de solución quizás más elementales de dominio y \"dominio iterado\" ha recibido mucha menos atención.(Después de un artículo breve temprano sobre un caso fácil [11], el principal estudio computacional de estos conceptos ha tenido lugar en un documento en la comunidad de teoría de juegos [7] .1) Una estrategia domina estrictamente otra estrategia si funciona estrictamente 1Esto no quiere decir que los científicos informáticos hayan ignorado 88 mejor contra todos los vectores de estrategias oponentes, y lo domina débilmente si funciona al menos contra todos los vectores de estrategias oponentes, y estrictamente mejor contra al menos uno.",
                "En \"dominio iterado\", la eliminación se realiza en las rondas, y se vuelve más fácil a medida que se eliminan más estrategias: en cualquier ronda dada, la estrategia dominante ya no necesita funcionar mejor que o la estrategia dominada contra las estrategias oponentes que se eliminaronrondas anteriores.",
                "En este documento, estudiamos algunas preguntas computacionales fundamentales sobre el dominio y el \"dominio iterado\", incluida lo difícil que es verificar si una estrategia dada puede ser eliminada por cada una de las variantes de estas nociones.",
                "En las secciones restantes, estudiamos aspectos computacionales del dominio y el \"dominio iterado\".",
                "En la Sección 4, estudiamos \"dominio iterado\".",
                "En la Sección 5, estudiamos el dominio y el \"dominio iterado\" cuando la estrategia dominante solo puede imponer probabilidad en algunas estrategias puras.",
                "Finalmente, en la Sección 6, estudiamos el dominio y el \"dominio iterado\" en los Juegos Bayesianos.2."
            ],
            "translated_text": "",
            "candidates": [
                "dominio iterado",
                "dominio iterado",
                "dominio iterado",
                "dominio iterado",
                "dominio iterado",
                "dominio iterado",
                "dominio iterado",
                "dominio iterado",
                "dominio iterado",
                "dominio iterado",
                "dominio iterado",
                "dominio iterado",
                "dominio iterado",
                "dominio iterado",
                "dominio iterado",
                "dominio iterado",
                "dominio iterado",
                "dominio iterado",
                "Dominio iterado",
                "dominio iterado"
            ],
            "error": []
        }
    }
}