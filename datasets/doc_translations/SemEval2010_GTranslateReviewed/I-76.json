{
    "id": "I-76",
    "original_text": "Negotiation by Abduction and Relaxation Chiaki Sakama Dept. Computer and Communication Sciences Wakayama University Sakaedani, Wakayama 640 8510, Japan sakama@sys.wakayama-u.ac.jp Katsumi Inoue National Institute of Informatics 2-1-2 Hitotsubashi, Chiyoda-ku Tokyo 101 8430, Japan ki@nii.ac.jp ABSTRACT This paper studies a logical framework for automated negotiation between two agents. We suppose an agent who has a knowledge base represented by a logic program. Then, we introduce methods of constructing counter-proposals in response to proposals made by an agent. To this end, we combine the techniques of extended abduction in artificial intelligence and relaxation in cooperative query answering for databases. These techniques are respectively used for producing conditional proposals and neighborhood proposals in the process of negotiation. We provide a negotiation protocol based on the exchange of these proposals and develop procedures for computing new proposals. Categories and Subject Descriptors F.4.1 [Mathematical Logic]: Logic and constraint programming;; I.2.11 [Distributed Artificial Intelligence]: Multiagent systems General Terms Theory 1. INTRODUCTION Automated negotiation has been received increasing attention in multi-agent systems, and a number of frameworks have been proposed in different contexts ([1, 2, 3, 5, 10, 11, 13, 14], for instance). Negotiation usually proceeds in a series of rounds and each agent makes a proposal at every round. An agent that received a proposal responds in two ways. One is a critique which is a remark as to whether or not (parts of) the proposal is accepted. The other is a counter-proposal which is an alternative proposal made in response to a previous proposal [13]. To see these proposals in one-to-one negotiation, suppose the following negotiation dialogue between a buyer agent B and a seller agent S. (Bi (or Si) represents an utterance of B (or S) in the i-th round.) B1: I want to buy a personal computer of the brand b1, with the specification of CPU:1GHz, Memory:512MB, HDD: 80GB, and a DVD-RW driver. I want to get it at the price under 1200 USD. S1: We can provide a PC with the requested specification if you pay for it by cash. In this case, however, service points are not added for this special discount. B2: I cannot pay it by cash. S2: In a normal price, the requested PC costs 1300 USD. B3: I cannot accept the price. My budget is under 1200 USD. S3: We can provide another computer with the requested specification, except that it is made by the brand b2. The price is exactly 1200 USD. B4: I do not want a PC of the brand b2. Instead, I can downgrade a driver from DVD-RW to CD-RW in my initial proposal. S4: Ok, I accept your offer. In this dialogue, in response to the opening proposal B1, the counter-proposal S1 is returned. In the rest of the dialogue, B2, B3, S4 are critiques, while S2, S3, B4 are counterproposals. Critiques are produced by evaluating a proposal in a knowledge base of an agent. In contrast, making counter-proposals involves generating an alternative proposal which is more favorable to the responding agent than the original one. It is known that there are two ways of producing counterproposals: extending the initial proposal or amending part of the initial proposal. According to [13], the first type appears in the dialogue: A: I propose that you provide me with service X. B: I propose that I provide you with service X if you provide me with service Z. The second type is in the dialogue: A: I propose that I provide you with service Y if you provide me with service X. B: I propose that I provide you with service X if you provide me with service Z. A negotiation proceeds by iterating such give-andtake dialogues until it reaches an agreement/disagreement. In those dialogues, agents generate (counter-)proposals by reasoning on their own goals or objectives. The objective of the agent A in the above dialogues is to obtain service X. The agent B proposes conditions to provide the service. In the process of negotiation, however, it may happen that agents are obliged to weaken or change their initial goals to reach a negotiated compromise. In the dialogue of 1022 978-81-904262-7-5 (RPS) c 2007 IFAAMAS a buyer agent and a seller agent presented above, a buyer agent changes its initial goal by downgrading a driver from DVD-RW to CD-RW. Such behavior is usually represented as specific meta-knowledge of an agent or specified as negotiation protocols in particular problems. Currently, there is no computational logic for automated negotiation which has general inference rules for producing (counter-)proposals. The purpose of this paper is to mechanize a process of building (counter-)proposals in one-to-one negotiation dialogues. We suppose an agent who has a knowledge base represented by a logic program. We then introduce methods for generating three different types of proposals. First, we use the technique of extended abduction in artificial intelligence [8, 15] to construct a conditional proposal as an extension of the original one. Second, we use the technique of relaxation in cooperative query answering for databases [4, 6] to construct a neighborhood proposal as an amendment of the original one. Third, combining extended abduction and relaxation, conditional neighborhood proposals are constructed as amended extensions of the original proposal. We develop a negotiation protocol between two agents based on the exchange of these counter-proposals and critiques. We also provide procedures for computing proposals in logic programming. This paper is organized as follows. Section 2 introduces a logical framework used in this paper. Section 3 presents methods for constructing proposals, and provides a negotiation protocol. Section 4 provides methods for computing proposals in logic programming. Section 5 discusses related works, and Section 6 concludes the paper. 2. PRELIMINARIES Logic programs considered in this paper are extended disjunctive programs (EDP) [7]. An EDP (or simply a program) is a set of rules of the form: L1 ; · · · ; Ll ← Ll+1 , . . . , Lm, not Lm+1 , . . . , not Ln (n ≥ m ≥ l ≥ 0) where each Li is a positive/negative literal, i.e., A or ¬A for an atom A, and not is negation as failure (NAF). not L is called an NAF-literal. The symbol ; represents disjunction. The left-hand side of the rule is the head, and the right-hand side is the body. For each rule r of the above form, head(r), body+ (r) and body− (r) denote the sets of literals {L1, . . . , Ll}, {Ll+1, . . . , Lm}, and {Lm+1, . . . , Ln}, respectively. Also, not body− (r) denotes the set of NAF-literals {not Lm+1, . . . , not Ln}. A disjunction of literals and a conjunction of (NAF-)literals in a rule are identified with its corresponding sets of literals. A rule r is often written as head(r) ← body+ (r), not body− (r) or head(r) ← body(r) where body(r) = body+ (r)∪not body− (r). A rule r is disjunctive if head(r) contains more than one literal. A rule r is an integrity constraint if head(r) = ∅; and r is a fact if body(r) = ∅. A program is NAF-free if no rule contains NAF-literals. Two rules/literals are identified with respect to variable renaming. A substitution is a mapping from variables to terms θ = {x1/t1, . . . , xn/tn}, where x1, . . . , xn are distinct variables and each ti is a term distinct from xi. Given a conjunction G of (NAF-)literals, Gθ denotes the conjunction obtained by applying θ to G. A program, rule, or literal is ground if it contains no variable. A program P with variables is a shorthand of its ground instantiation Ground(P), the set of ground rules obtained from P by substituting variables in P by elements of its Herbrand universe in every possible way. The semantics of an EDP is defined by the answer set semantics [7]. Let Lit be the set of all ground literals in the language of a program. Suppose a program P and a set of literals S(⊆ Lit). Then, the reduct P S is the program which contains the ground rule head(r) ← body+ (r) iff there is a rule r in Ground(P) such that body− (r)∩S = ∅. Given an NAF-free EDP P, Cn(P) denotes the smallest set of ground literals which is (i) closed under P, i.e., for every ground rule r in Ground(P), body(r) ⊆ Cn(P) implies head(r) ∩ Cn(P) = ∅; and (ii) logically closed, i.e., it is either consistent or equal to Lit. Given an EDP P and a set S of literals, S is an answer set of P if S = Cn(P S ). A program has none, one, or multiple answer sets in general. An answer set is consistent if it is not Lit. A program P is consistent if it has a consistent answer set; otherwise, P is inconsistent. Abductive logic programming [9] introduces a mechanism of hypothetical reasoning to logic programming. An abductive framework used in this paper is the extended abduction introduced by Inoue and Sakama [8, 15]. An abductive program is a pair P, H where P is an EDP and H is a set of literals called abducibles. When a literal L ∈ H contains variables, any instance of L is also an abducible. An abductive program P, H is consistent if P is consistent. Throughout the paper, abductive programs are assumed to be consistent unless stated otherwise. Let G = L1, . . . , Lm, not Lm+1, . . . , not Ln be a conjunction, where all variables in G are existentially quantified at the front and range-restricted, i.e., every variable in Lm+1, . . . , Ln appears in L1, . . . , Lm. A set S of ground literals satisfies the conjunction G if { L1θ, . . . , Lmθ } ⊆ S and { Lm+1θ, . . . , Lnθ }∩ S = ∅ for some ground instance Gθ with a substitution θ. Let P, H be an abductive program and G a conjunction as above. A pair (E, F) is an explanation of an observation G in P, H if1 1. (P \\ F) ∪ E has an answer set which satisfies G, 2. (P \\ F) ∪ E is consistent, 3. E and F are sets of ground literals such that E ⊆ H\\P and F ⊆ H ∩ P. When (P \\ F) ∪ E has an answer set S satisfying the above three conditions, S is called a belief set of an abductive program P, H satisfying G (with respect to (E, F)). Note that if P has a consistent answer set S satisfying G, S is also a belief set of P, H satisfying G with respect to (E, F) = (∅, ∅). Extended abduction introduces/removes hypotheses to/from a program to explain an observation. Note that normal abduction (as in [9]) considers only introducing hypotheses to explain an observation. An explanation (E, F) of an observation G is called minimal if for any explanation (E , F ) of G, E ⊆ E and F ⊆ F imply E = E and F = F. Example 2.1. Consider the abductive program P, H : P : flies(x) ← bird(x), not ab(x) , ab(x) ← broken-wing(x) , bird(tweety) ← , bird(opus) ← , broken-wing(tweety) ← . H : broken-wing(x) . The observation G = flies(tweety) has the minimal explanation (E, F) = (∅, {broken-wing(tweety)}). 1 This defines credulous explanations [15]. Skeptical explanations are used in [8]. The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1023 3. NEGOTIATION 3.1 Conditional Proposals by Abduction We suppose an agent who has a knowledge base represented by an abductive program P, H . A program P consists of two types of knowledge, belief B and desire D, where B represents objective knowledge of an agent, while D represents subjective knowledge in general. We define P = B ∪ D, but do not distinguish B and D if such distinction is not important in the context. In contrast, abducibles H are used for representing permissible conditions to make a compromise in the process of negotiation. Definition 3.1. A proposal G is a conjunction of literals and NAF-literals: L1, . . . , Lm, not Lm+1, . . . , not Ln where every variable in G is existentially quantified at the front and range-restricted. In particular, G is called a critique if G = accept or G = reject where accept and reject are the reserved propositions. A counter-proposal is a proposal made in response to a proposal. Definition 3.2. A proposal G is accepted in an abductive program P, H if P has an answer set satisfying G. When a proposal is not accepted, abduction is used for seeking conditions to make it acceptable. Definition 3.3. Let P, H be an abductive program and G a proposal. If (E, F) is a minimal explanation of Gθ for some substitution θ in P, H , the conjunction G : Gθ, E, not F is called a conditional proposal (for G), where E, not F represents the conjunction: A1, . . . , Ak, not Ak+1, . . . , not Al for E = {A1, . . . , Ak} and F = { Ak+1, . . . , Al }. Proposition 3.1. Let P, H be an abductive program and G a proposal. If G is a conditional proposal, there is a belief set S of P, H satisfying G . Proof. When G = Gθ, E, not F, (P \\ F) ∪ E has a consistent answer set S satisfying Gθ and E ∩ F = ∅. In this case, S satisfies Gθ, E, not F. A conditional proposal G provides a minimal requirement for accepting the proposal G. If Gθ has multiple minimal explanations, several conditional proposals exist accordingly. When (E, F) = (∅, ∅), a conditional proposal is used as a new proposal made in response to the proposal G. Example 3.1. An agent seeks a position of a research assistant at the computer department of a university with the condition that the salary is at least 50,000 USD per year. The agent makes his/her request as the proposal:2 G = assist(compt dept), salary(x), x ≥ 50, 000. The university has the abductive program P, H : P : salary(40, 000) ← assist(compt dept), not has PhD, salary(60, 000) ← assist(compt dept), has PhD, salary(50, 000) ← assist(math dept), salary(55, 000) ← system admin(compt dept), 2 For notational convenience, we often include mathematical (in)equations in proposals/programs. They are written by literals, for instance, x ≥ y by geq(x, y) with a suitable definition of the predicate geq. employee(x) ← assist(x), employee(x) ← system admin(x), assist(compt dept); assist(math dept) ; system admin(compt dept) ←, H : has PhD, where available positions are represented by disjunction. According to P, the base salary of a research assistant at the computer department is 40,000 USD, but if he/she has PhD, it is 60,000 USD. In this case, (E, F) = ({has PhD}, ∅) becomes the minimal explanation of Gθ = assist(compt dept), salary(60, 000) with θ = { x/60, 000 }. Then, the conditional proposal made by the university becomes assist(compt dept), salary(60, 000), has PhD . 3.2 Neighborhood Proposals by Relaxation When a proposal is unacceptable, an agent tries to construct a new counter-proposal by weakening constraints in the initial proposal. We use techniques of relaxation for this purpose. Relaxation is used as a technique of cooperative query answering in databases [4, 6]. When an original query fails in a database, relaxation expands the scope of the query by relaxing the constraints in the query. This allows the database to return neighborhood answers which are related to the original query. We use the technique for producing proposals in the process of negotiation. Definition 3.4. Let P, H be an abductive program and G a proposal. Then, G is relaxed to G in the following three ways: Anti-instantiation: Construct G such that G θ = G for some substitution θ. Dropping conditions: Construct G such that G ⊂ G. Goal replacement: If G is a conjunction G1, G2, where G1 and G2 are conjunctions, and there is a rule L ← G1 in P such that G1θ = G1 for some substitution θ, then build G as Lθ, G2. Here, Lθ is called a replaced literal. In each case, every variable in G is existentially quantified at the front and range-restricted. Anti-instantiation replaces constants (or terms) with fresh variables. Dropping conditions eliminates some conditions in a proposal. Goal replacement replaces the condition G1 in G with a literal Lθ in the presence of a rule L ← G1 in P under the condition G1θ = G1. All these operations generalize proposals in different ways. Each G obtained by these operations is called a relaxation of G. It is worth noting that these operations are also used in the context of inductive generalization [12]. The relaxed proposal can produce new offers which are neighbor to the original proposal. Definition 3.5. Let P, H be an abductive program and G a proposal. 1. Let G be a proposal obtained by anti-instantiation. If P has an answer set S which satisfies G θ for some substitution θ and G θ = G, G θ is called a neighborhood proposal by anti-instantiation. 2. Let G be a proposal obtained by dropping conditions. If P has an answer set S which satisfies G θ for some substitution θ, G θ is called a neighborhood proposal by dropping conditions. 1024 The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3. Let G be a proposal obtained by goal replacement. For a replaced literal L ∈ G and a rule H ← B in P such that L = Hσ and (G \\ {L}) ∪ Bσ = G for some substitution σ, put G = (G \\ {L}) ∪ Bσ. If P has an answer set S which satisfies G θ for some substitution θ, G θ is called a neighborhood proposal by goal replacement. Example 3.2. (cont. Example 3.1) Given the proposal G = assist(compt dept), salary(x), x ≥ 50, 000, • G1 = assist(w), salary(x), x ≥ 50, 000 is produced by substituting compt dept with a variable w. As G1θ1 = assist(math dept), salary(50, 000) with θ1 = { w/math dept } is satisfied by an answer set of P, G1θ1 becomes a neighborhood proposal by anti-instantiation. • G2 = assist(compt dept), salary(x) is produced by dropping the salary condition x ≥ 50, 000. As G2θ2 = assist(compt dept), salary(40, 000) with θ2 = { x/40, 000 } is satisfied by an answer set of P, G2θ2 becomes a neighborhood proposal by dropping conditions. • G3 = employee(compt dept), salary(x), x ≥ 50, 000 is produced by replacing assist(compt dept) with employee(compt dept) using the rule employee(x) ← assist(x) in P. By G3 and the rule employee(x) ← system admin(x) in P, G3 = sys admin(compt dept), salary(x), x ≥ 50, 000 is produced. As G3 θ3 = sys admin(compt dept), salary(55, 000) with θ3 = { x/55, 000 } is satisfied by an answer set of P, G3 θ3 becomes a neighborhood proposal by goal replacement. Finally, extended abduction and relaxation are combined to produce conditional neighborhood proposals. Definition 3.6. Let P, H be an abductive program and G a proposal. 1. Let G be a proposal obtained by either anti-instantiation or dropping conditions. If (E, F) is a minimal explanation of G θ(= G) for some substitution θ, the conjunction G θ, E, not F is called a conditional neighborhood proposal by anti-instantiation/dropping conditions. 2. Let G be a proposal obtained by goal replacement. Suppose G as in Definition 3.5(3). If (E, F) is a minimal explanation of G θ for some substitution θ, the conjunction G θ, E, not F is called a conditional neighborhood proposal by goal replacement. A conditional neighborhood proposal reduces to a neighborhood proposal when (E, F) = (∅, ∅). 3.3 Negotiation Protocol A negotiation protocol defines how to exchange proposals in the process of negotiation. This section presents a negotiation protocol in our framework. We suppose one-to-one negotiation between two agents who have a common ontology and the same language for successful communication. Definition 3.7. A proposal L1, ..., Lm, not Lm+1, ..., not Ln violates an integrity constraint ← body+ (r), not body− (r) if for any substitution θ, there is a substitution σ such that body+ (r)σ ⊆ { L1θ, . . . , Lmθ }, body− (r)σ∩{ L1θ, . . . , Lmθ } = ∅, and body− (r)σ ⊆ { Lm+1θ, . . . , Lnθ }. Integrity constraints are conditions which an agent should satisfy, so that they are used to explain why an agent does not accept a proposal. A negotiation proceeds in a series of rounds. Each i-th round (i ≥ 1) consists of a proposal Gi 1 made by one agent Ag1 and another proposal Gi 2 made by the other agent Ag2. Definition 3.8. Let P1, H1 be an abductive program of an agent Ag1 and Gi 2 a proposal made by Ag2 at the i-th round. A critique set of Ag1 (at the i-th round) is a set CSi 1(P1, Gj 2) = CSi−1 1 (P1, Gj−1 2 ) ∪ { r | r is an integrity constraint in P1 and Gj 2 violates r } where j = i − 1 or i, and CS0 1 (P1, G0 2) = CS1 1 (P1, G0 2) = ∅. A critique set of an agent Ag1 accumulates integrity constraints which are violated by proposals made by another agent Ag2. CSi 2(P2, Gj 1) is defined in the same manner. Definition 3.9. Let Pk, Hk be an abductive program of an agent Agk and Gj a proposal, which is not a critique, made by any agent at the j(≤ i)-th round. A negotiation set of Agk (at the i-th round) is a triple NSi k = (Si c, Si n, Si cn), where Si c is the set of conditional proposals, Si n is the set of neighborhood proposals, and Si cn is the set of conditional neighborhood proposals, produced by Gj and Pk, Hk . A negotiation set represents the space of possible proposals made by an agent. Si x (x ∈ {c, n, cn}) accumulates proposals produced by Gj (1 ≤ j ≤ i) according to Definitions 3.3, 3.5, and 3.6. Note that an agent can construct counter-proposals by modifying its own previous proposals or another agents proposals. An agent Agk accumulates proposals that are made by Agk but are rejected by another agent, in the failed proposal set FP i k (at the i-th round), where FP 0 k = ∅. Suppose two agents Ag1 and Ag2 who have abductive programs P1, H1 and P2, H2 , respectively. Given a proposal G1 1 which is satisfied by an answer set of P1, a negotiation starts. In response to the proposal Gi 1 made by Ag1 at the i-th round, Ag2 behaves as follows. 1. If Gi 1 = accept, an agreement is reached and negotiation ends in success. 2. Else if Gi 1 = reject, put FP i 2 = FPi−1 2 ∪{Gi−1 2 } where {G0 2} = ∅. Proceed to the step 4(b). 3. Else if P2 has an answer set satisfying Gi 1, Ag2 returns Gi 2 = accept to Ag1. Negotiation ends in success. 4. Otherwise, Ag2 behaves as follows. Put FP i 2 = FPi−1 2 . (a) If Gi 1 violates an integrity constraint in P2, return the critique Gi 2 = reject to Ag1, together with the critique set CSi 2(P2, Gi 1). (b) Otherwise, construct NSi 2 as follows. (i) Produce Si c. Let μ(Si c) = { p | p ∈ Si c \\ FPi 2 and p satisfies the constraints in CSi 1(P1, Gi−1 2 )}. If μ(Si c) = ∅, select one from μ(Si c) and propose it as Gi 2 to Ag1; otherwise, go to (ii). (ii) Produce Si n. If μ(Si n) = ∅, select one from μ(Si n) and propose it as Gi 2 to Ag1; otherwise, go to (iii). (iii) Produce Si cn. If μ(Si cn) = ∅, select one from μ(Si cn) and propose it as Gi 2 to Ag1; otherwise, negotiation ends in failure. This means that Ag2 can make no counter-proposal or every counterproposal made by Ag2 is rejected by Ag1. In the step 4(a), Ag2 rejects the proposal Gi 1 and returns the reason of rejection as a critique set. This helps for Ag1 The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1025 in preparing a next counter-proposal. In the step 4(b), Ag2 constructs a new proposal. In its construction, Ag2 should take care of the critique set CSi 1(P1, Gi−1 2 ), which represents integrity constraints, if any, accumulated in previous rounds, that Ag1 must satisfy. Also, FP i 2 is used for removing proposals which have been rejected. Construction of Si x (x ∈ {c, n, cn}) in NSi 2 is incrementally done by adding new counter-proposals produced by Gi 1 or Gi−1 2 to Si−1 x . For instance, Si n in NSi 2 is computed as Si n = Si−1 n ∪{ p | p is a neighborhood proposal made by Gi 1 } ∪ { p | p is a neighborhood proposal made by Gi−1 2 }, where S0 n = ∅. That is, Si n is constructed from Si−1 n by adding new proposals which are obtained by modifying the proposal Gi 1 made by Ag1 at the i-th round or modifying the proposal Gi−1 2 made by Ag2 at the (i − 1)-th round. Si c and Si cn are obtained as well. In the above protocol, an agent produces Si c at first, secondly Si n, and finally Si cn. This strategy seeks conditions which satisfy the given proposal, prior to neighborhood proposals which change the original one. Another strategy, which prefers neighborhood proposals to conditional ones, is also considered. Conditional neighborhood proposals are to be considered in the last place, since they differ from the original one to the maximal extent. The above protocol produces the candidate proposals in Si x for each x ∈ {c, n, cn} at once. We can consider a variant of the protocol in which each proposal in Si x is constructed one by one (see Example 3.3). The above protocol is repeatedly applied to each one of the two negotiating agents until a negotiation ends in success/failure. Formally, the above negotiation protocol has the following properties. Theorem 3.2. Let Ag1 and Ag2 be two agents having abductive programs P1, H1 and P2, H2 , respectively. 1. If P1, H1 and P2, H2 are function-free (i.e., both Pi and Hi contain no function symbol), any negotiation will terminate. 2. If a negotiation terminates with agreement on a proposal G, both P1, H1 and P2, H2 have belief sets satisfying G. Proof. 1. When an abductive program is function-free, abducibles and negotiation sets are both finite. Moreover, if a proposal is once rejected, it is not proposed again by the function μ. Thus, negotiation will terminate in finite steps. 2. When a proposal G is made by Ag1, P1, H1 has a belief set satisfying G. If the agent Ag2 accepts the proposal G, it is satisfied by an answer set of P2 which is also a belief set of P2, H2 . Example 3.3. Suppose a buying-selling situation in the introduction. A seller agent has the abductive program Ps, Hs in which Ps consists of belief Bs and desire Ds: Bs : pc(b1, 1G, 512M, 80G) ; pc(b2, 1G, 512M, 80G) ←,(1) dvd-rw ; cd-rw ←, (2) Ds : normal price(1300) ← pc(b1, 1G, 512M, 80G), dvd-rw, (3) normal price(1200) ← pc(b1, 1G, 512M, 80G), cd-rw, (4) normal price(1200) ← pc(b2, 1G, 512M, 80G), dvd-rw, (5) price(x) ← normal price(x), add point, (6) price(x ∗ 0.9) ← normal price(x), pay cash, not add point,(7) add point ←, (8) Hs : add point, pay cash. Here, (1) and (2) represent selection of products. The atom pc(b1, 1G, 512M, 80G) represents that the seller agent has a PC of the brand b1 such that CPU is 1GHz, memory is 512MB, and HDD is 80GB. Prices of products are represented as desire of the seller. The rules (3) - (5) are normal prices of products. A normal price is a selling price on the condition that service points are added (6). On the other hand, a discount price is applied if the paying method is cash and no service point is added (7). The fact (8) represents the addition of service points. This service would be withdrawn in case of discount prices, so add point is specified as an abducible. A buyer agent has the abductive program Pb, Hb in which Pb consists of belief Bb and desire Db: Bb : drive ← dvd-rw, (9) drive ← cd-rw, (10) price(x) ←, (11) Db : pc(b1, 1G, 512M, 80G) ←, (12) dvd-rw ←, (13) cd-rw ← not dvd-rw, (14) ← pay cash, (15) ← price(x), x > 1200, (16) Hb : dvd-rw. Rules (12) - (16) are the buyers desire. Among them, (15) and (16) impose constraints for buying a PC. A DVD-RW is specified as an abducible which is subject to concession. (1st round) First, the following proposal is given by the buyer agent: G1 b : pc(b1, 1G, 512M, 80G), dvd-rw, price(x), x ≤ 1200. As Ps has no answer set which satisfies G1 b , the seller agent cannot accept the proposal. The seller takes an action of making a counter-proposal and performs abduction. As a result, the seller finds the minimal explanation (E, F) = ({ pay cash }, { add point }) which explains G1 b θ1 with θ1 = { x/1170 }. The seller constructs the conditional proposal: G1 s : pc(b1, 1G, 512M, 80G), dvd-rw, price(1170), pay cash, not add point and offers it to the buyer. (2nd round) The buyer does not accept G1 s because he/she cannot pay it by cash (15). The buyer then returns the critique G2 b = reject to the seller, together with the critique set CS2 b (Pb, G1 s) = {(15)}. In response to this, the seller tries to make another proposal which satisfies the constraint in this critique set. As G1 s is stored in FP 2 s and no other conditional proposal satisfying the buyers requirement exists, the seller produces neighborhood proposals. He/she relaxes G1 b by dropping x ≤ 1200 in the condition, and produces pc(b1, 1G, 512M, 80G), dvd-rw, price(x). As Ps has an answer set which satisfies G2 s : pc(b1, 1G, 512M, 80G), dvd-rw, price(1300), 1026 The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) the seller offers G2 s as a new counter-proposal. (3rd round) The buyer does not accept G2 s because he/she cannot pay more than 1200USD (16). The buyer again returns the critique G3 b = reject to the seller, together with the critique set CS3 b (Pb, G2 s) = CS2 b (Pb, G1 s) ∪ {(16)}. The seller then considers another proposal by replacing b1 with a variable w, G1 b now becomes pc(w, 1G, 512M, 80G), dvd-rw, price(x), x ≤ 1200. As Ps has an answer set which satisfies G3 s : pc(b2, 1G, 512M, 80G), dvd-rw, price(1200), the seller offers G3 s as a new counter-proposal. (4th round) The buyer does not accept G3 s because a PC of the brand b2 is out of his/her interest and Pb has no answer set satisfying G3 s. Then, the buyer makes a concession by changing his/her original goal. The buyer relaxes G1 b by goal replacement using the rule (9) in Pb, and produces pc(b1, 1G, 512M, 80G), drive, price(x), x ≤ 1200. Using (10), the following proposal is produced: pc(b1, 1G, 512M, 80G), cd-rw, price(x), x ≤ 1200. As Pb \\ { dvd-rw } has a consistent answer set satisfying the above proposal, the buyer proposes the conditional neighborhood proposal G4 b : pc(b1, 1G, 512M, 80G), cd-rw, not dvd-rw, price(x), x ≤ 1200 to the seller agent. Since Ps also has an answer set satisfying G4 b , the seller accepts it and sends the message G4 s = accept to the buyer. Thus, the negotiation ends in success. 4. COMPUTATION In this section, we provide methods of computing proposals in terms of answer sets of programs. We first introduce some definitions from [15]. Definition 4.1. Given an abductive program P, H , the set UR of update rules is defined as: UR = { L ← not L, L ← not L | L ∈ H } ∪ { +L ← L | L ∈ H \\ P } ∪ { −L ← not L | L ∈ H ∩ P } , where L, +L, and −L are new atoms uniquely associated with every L ∈ H. The atoms +L and −L are called update atoms. By the definition, the atom L becomes true iff L is not true. The pair of rules L ← not L and L ← not L specify the situation that an abducible L is true or not. When p(x) ∈ H and p(a) ∈ P but p(t) ∈ P for t = a, the rule +L ← L precisely becomes +p(t) ← p(t) for any t = a. In this case, the rule is shortly written as +p(x) ← p(x), x = a. Generally, the rule becomes +p(x) ← p(x), x = t1, . . . , x = tn for n such instances. The rule +L ← L derives the atom +L if an abducible L which is not in P is to be true. In contrast, the rule −L ← not L derives the atom −L if an abducible L which is in P is not to be true. Thus, update atoms represent the change of truth values of abducibles in a program. That is, +L means the introduction of L, while −L means the deletion of L. When an abducible L contains variables, the associated update atom +L or −L is supposed to have exactly the same variables. In this case, an update atom is semantically identified with its ground instances. The set of all update atoms associated with the abducibles in H is denoted by UH, and UH = UH+ ∪ UH− where UH+ (resp. UH− ) is the set of update atoms of the form +L (resp. −L). Definition 4.2. Given an abductive program P, H , its update program UP is defined as the program UP = (P \\ H) ∪ UR . An answer set S of UP is called U-minimal if there is no answer set T of UP such that T ∩ UH ⊂ S ∩ UH. By the definition, U-minimal answer sets exist whenever UP has answer sets. Update programs are used for computing (minimal) explanations of an observation. Given an observation G as a conjunction of literals and NAF-literals possibly containing variables, we introduce a new ground literal O together with the rule O ← G. In this case, O has an explanation (E, F) iff G has the same explanation. With this replacement, an observation is assumed to be a ground literal without loss of generality. In what follows, E+ = { +L | L ∈ E } and F − = { −L | L ∈ F } for E ⊆ H and F ⊆ H. Proposition 4.1. ([15]) Let P, H be an abductive program, UP its update program, and G a ground literal representing an observation. Then, a pair (E, F) is an explanation of G iff UP ∪ { ← not G } has a consistent answer set S such that E+ = S ∩ UH+ and F− = S ∩ UH− . In particular, (E, F) is a minimal explanation iff S is a U-minimal answer set. Example 4.1. To explain the observation G = flies(t) in the program P of Example 2.1, first construct the update program UP of P:3 UP : flies(x) ← bird(x), not ab(x), ab(x) ← broken-wing(x) , bird(t) ← , bird(o) ← , broken-wing(x) ← not broken-wing(x), broken-wing(x) ← not broken-wing(x), +broken-wing(x) ← broken-wing(x), x = t , −broken-wing(t) ← not broken-wing(t) . Next, consider the program UP ∪ { ← not flies(t) }. It has the single U-minimal answer set: S = { bird(t), bird(o), flies(t), flies(o), broken-wing(t), broken-wing(o), −broken-wing(t) }. The unique minimal explanation (E, F) = (∅, {broken-wing(t)}) of G is expressed by the update atom −broken-wing(t) in S ∩ UH− . Proposition 4.2. Let P, H be an abductive program and G a ground literal representing an observation. If P ∪ { ← not G } has a consistent answer set S, G has the minimal explanation (E, F) = (∅, ∅) and S satisfies G. Now we provide methods for computing (counter-)proposals. First, conditional proposals are computed as follows. input : an abductive program P, H , a proposal G; output : a set Sc of proposals. If G is a ground literal, compute its minimal explanation (E, F) in P, H using the update program. Put G, E, not F in Sc. Else if G is a conjunction possibly containing variables, consider the abductive program 3 t represents tweety and o represents opus. The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1027 P ∪{ O ← G }, H with a ground literal O. Compute a minimal explanation of O in P ∪ { O ← G }, H using its update program. If O has a minimal explanation (E, F) with a substitution θ for variables in G, put Gθ, E, not F in Sc. Next, neighborhood proposals are computed as follows. input : an abductive program P, H , a proposal G; output : a set Sn of proposals. % neighborhood proposals by anti-instantiation; Construct G by anti-instantiation. For a ground literal O, if P ∪ { O ← G } ∪ { ← not O } has a consistent answer set satisfying G θ with a substitution θ and G θ = G, put G θ in Sn. % neighborhood proposals by dropping conditions; Construct G by dropping conditions. If G is a ground literal and the program P ∪ { ← not G } has a consistent answer set, put G in Sn. Else if G is a conjunction possibly containing variables, do the following. For a ground literal O, if P ∪{ O ← G }∪{ ← not O } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn. % neighborhood proposals by goal replacement; Construct G by goal replacement. If G is a ground literal and there is a rule H ← B in P such that G = Hσ and Bσ = G for some substitution σ, put G = Bσ. If P ∪ { ← not G } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn. Else if G is a conjunction possibly containing variables, do the following. For a replaced literal L ∈ G , if there is a rule H ← B in P such that L = Hσ and (G \\ {L}) ∪ Bσ = G for some substitution σ, put G = (G \\ {L}) ∪ Bσ. For a ground literal O, if P ∪ { O ← G } ∪ { ← not O } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn. Theorem 4.3. The set Sc (resp. Sn) computed above coincides with the set of conditional proposals (resp. neighborhood proposals). Proof. The result for Sc follows from Definition 3.3 and Proposition 4.1. The result for Sn follows from Definition 3.5 and Proposition 4.2. Conditional neighborhood proposals are computed by combining the above two procedures. Those proposals are computed at each round. Note that the procedure for computing Sn contains some nondeterministic choices. For instance, there are generally several candidates of literals to relax in a proposal. Also, there might be several rules in a program for the usage of goal replacement. In practice, an agent can prespecify literals in a proposal for possible relaxation or rules in a program for the usage of goal replacement. 5. RELATED WORK As there are a number of literature on automated negotiation, this section focuses on comparison with negotiation frameworks based on logic and argumentation. Sadri et al. [14] use abductive logic programming as a representation language of negotiating agents. Agents negotiate using common dialogue primitives, called dialogue moves. Each agent has an abductive logic program in which a sequence of dialogues are specified by a program, a dialogue protocol is specified as constraints, and dialogue moves are specified as abducibles. The behavior of agents is regulated by an observe-think-act cycle. Once a dialogue move is uttered by an agent, another agent that observed the utterance thinks and acts using a proof procedure. Their approach and ours both employ abductive logic programming as a platform of agent reasoning, but the use of it is quite different. First, they use abducibles to specify dialogue primitives of the form tell(utterer, receiver, subject, identifier, time), while we use abducibles to specify arbitrary permissible hypotheses to construct conditional proposals. Second, a program pre-specifies a plan to carry out in order to achieve a goal, together with available/missing resources in the context of resource-exchanging problems. This is in contrast with our method in which possible counter-proposals are newly constructed in response to a proposal made by an agent. Third, they specify a negotiation policy inside a program (as integrity constraints), while we give a protocol independent of individual agents. They provide an operational model that completely specifies the behavior of agents in terms of agent cycle. We do not provide such a complete specification of the behavior of agents. Our primary interest is to mechanize construction of proposals. Bracciali and Torroni [2] formulate abductive agents that have knowledge in abductive logic programs. To explain an observation, two agents communicate by exchanging integrity constraints. In the process of communication, an agent can revise its own integrity constraints according to the information provided by the other agent. A set IC of integrity constraints relaxes a set IC (or IC tightens IC ) if any observation that can be proved with respect to IC can also be proved with respect to IC . For instance, IC : ← a, b, c relaxes IC : ← a, b. Thus, they use relaxation for weakening the constraints in an abductive logic program. In contrast, we use relaxation for weakening proposals and three different relaxation methods, anti-instantiation, dropping conditions, and goal replacement, are considered. Their goal is to explain an observation by revising integrity constraints of an agent through communication, while we use integrity constraints for communication to explain critiques and help other agents in making counter-proposals. Meyer et al. [11] introduce a logical framework for negotiating agents. They introduce two different modes of negotiation: concession and adaptation. They provide rational postulates to characterize negotiated outcomes between two agents, and describe methods for constructing outcomes. They provide logical conditions for negotiated outcomes to satisfy, but they do not describe a process of negotiation nor negotiation protocols. Moreover, they represent agents by classical propositional theories, which is different from our abductive logic programming framework. Foo et al. [5] model one-to-one negotiation as a one-time encounter between two extended logic programs. An agent offers an answer set of its program, and their mutual deal is regarded as a trade on their answer sets. Starting from the initial agreement set S∩T for an answer set S of an agent and an answer set T of another agent, each agent extends this set to reflect its own demand while keeping consistency with demand of the other agent. Their algorithm returns new programs having answer sets which are consistent with each other and keep the agreement set. The work is extended to repeated encounters in [3]. In their framework, two agents exchange answer sets to produce a common belief set, which is different from our framework of exchanging proposals. There are a number of proposals for negotiation based 1028 The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) on argumentation. An advantage of argumentation-based negotiation is that it constructs a proposal with arguments supporting the proposal [1]. The existence of arguments is useful to convince other agents of reasons why an agent offers (counter-)proposals or returns critiques. Parsons et al. [13] develop a logic of argumentation-based negotiation among BDI agents. In one-to-one negotiation, an agent A generates a proposal together with its arguments, and passes it to another agent B. The proposal is evaluated by B which attempts to build arguments against it. If it conflicts with Bs interest, B informs A of its objection by sending back its attacking argument. In response to this, A tries to find an alternative way of achieving its original objective, or a way of persuading B to drop its objection. If either type of argument can be found, A will submit it to B. If B finds no reason to reject the new proposal, it will be accepted and the negotiation ends in success. Otherwise, the process is iterated. In this negotiation processes, the agent A never changes its original objective, so that negotiation ends in failure if A fails to find an alternative way of achieving the original objective. In our framework, when a proposal is rejected by another agent, an agent can weaken or change its objective by abduction and relaxation. Our framework does not have a mechanism of argumentation, but reasons for critiques can be informed by responding critique sets. Kakas and Moraitis [10] propose a negotiation protocol which integrates abduction within an argumentation framework. A proposal contains an offer corresponding to the negotiation object, together with supporting information representing conditions under which this offer is made. Supporting information is computed by abduction and is used for constructing conditional arguments during the process of negotiation. In their negotiation protocol, when an agent cannot satisfy its own goal, the agent considers the other agents goal and searches for conditions under which the goal is acceptable. Our present approach differs from theirs in the following points. First, they use abduction to seek conditions to support arguments, while we use abduction to seek conditions for proposals to accept. Second, in their negotiation protocol, counter-proposals are chosen among candidates based on preference knowledge of an agent at meta-level, which represents policy under which an agent uses its object-level decision rules according to situations. In our framework, counter-proposals are newly constructed using abduction and relaxation. The method of construction is independent of particular negotiation protocols. As [2, 10, 14], abduction or abductive logic programming used in negotiation is mostly based on normal abduction. In contrast, our approach is based on extended abduction which can not only introduce hypotheses but remove them from a program. This is another important difference. Relaxation and neighborhood query answering are devised to make databases cooperative with their users [4, 6]. In this sense, those techniques have the spirit similar to cooperative problem solving in multi-agent systems. As far as the authors know, however, there is no study which applies those technique to agent negotiation. 6. CONCLUSION In this paper we proposed a logical framework for negotiating agents. To construct proposals in the process of negotiation, we combined the techniques of extended abduction and relaxation. It was shown that these two operations are used for general inference rules in producing proposals. We developed a negotiation protocol between two agents based on exchange of proposals and critiques, and provided procedures for computing proposals in abductive logic programming. This enables us to realize automated negotiation on top of the existing answer set solvers. The present framework does not have a mechanism of selecting an optimal (counter-)proposal among different alternatives. To compare and evaluate proposals, an agent must have preference knowledge of candidate proposals. Further elaboration to maximize the utility of agents is left for future study. 7. REFERENCES [1] L. Amgoud, S. Parsons, and N. Maudet. Arguments, dialogue, and negotiation. In: Proc. ECAI-00, pp. 338-342, IOS Press, 2000. [2] A. Bracciali and P. Torroni. A new framework for knowledge revision of abductive agents through their interaction. In: Proc. CLIMA-IV, Computational Logic in Multi-Agent Systems, LNAI 3259, pp. 159-177, 2004. [3] W. Chen, M. Zhang, and N. Foo. Repeated negotiation of logic programs. In: Proc. 7th Workshop on Nonmonotonic Reasoning, Action and Change, 2006. [4] W. W. Chu, Q. Chen, and R.-C. Lee. Cooperative query answering via type abstraction hierarchy. In: Cooperating Knowledge Based Systems, S. M. Deen ed., pp. 271-290, Springer, 1990. [5] N. Foo, T. Meyer, Y. Zhang, and D. Zhang. Negotiating logic programs. In: Proc. 6th Workshop on Nonmonotonic Reasoning, Action and Change, 2005. [6] T. Gaasterland, P. Godfrey, and J. Minker. Relaxation as a platform for cooperative answering. Journal of Intelligence Information Systems 1(3/4):293-321, 1992. [7] M. Gelfond and V. Lifschitz. Classical negation in logic programs and disjunctive databases. New Generation Computing 9:365-385, 1991. [8] K. Inoue and C. Sakama. Abductive framework for nonmonotonic theory change. In: Proc. IJCAI-95, pp. 204-210, Morgan Kaufmann. [9] A. C. Kakas, R. A. Kowalski, and F. Toni, The role of abduction in logic programming. In: Handbook of Logic in AI and Logic Programming, D. M. Gabbay, et al. (eds), vol. 5, pp. 235-324, Oxford University Press, 1998. [10] A. C. Kakas and P. Moraitis. Adaptive agent negotiation via argumentation. In: Proc. AAMAS-06, pp. 384-391, ACM Press. [11] T. Meyer, N. Foo, R. Kwok, and D. Zhang. Logical foundation of negotiation: outcome, concession and adaptation. In: Proc. AAAI-04, pp. 293-298, MIT Press. [12] R. S. Michalski. A theory and methodology of inductive learning. In: Machine Learning: An Artificial Intelligence Approach, R. S. Michalski, et al. (eds), pp. 83-134, Morgan Kaufmann, 1983. [13] S. Parsons, C. Sierra and N. Jennings. Agents that reason and negotiate by arguing. Journal of Logic and Computation, 8(3):261-292, 1988. [14] F. Sadri, F. Toni, and P. Torroni, An abductive logic programming architecture for negotiating agents. In: Proc. 8th European Conf. on Logics in AI, LNAI 2424, pp. 419-431, Springer, 2002. [15] C. Sakama and K. Inoue. An abductive framework for computing knowledge base updates. Theory and Practice of Logic Programming 3(6):671-715, 2003. The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1029",
    "original_translation": "Negociación por secuestro y relajación Chiaki Sakama Departamento. Ciencias de la computadora y comunicación Wakayama University Sakaedani, Wakayama 640 8510, Japón sakama@sys.wakayama-u.ac.jp Katsumi Inoue Instituto Nacional de Informática 2-1-2 Hitotsubashi, Chiyoda-Ku Tokio 101 8430, Japón Ki@nii.ac.JP Resumen Este documento estudia un marco lógico para la negociación automatizada entre dos agentes. Suponemos que un agente que tiene una base de conocimiento representada por un programa lógico. Luego, introducimos métodos para construir contraproposios en respuesta a las propuestas hechas por un agente. Con este fin, combinamos las técnicas de abducción extendida de inteligencia artificial y relajación en la respuesta de consultas cooperativas para bases de datos. Estas técnicas se utilizan respectivamente para producir propuestas condicionales y propuestas de vecindad en el proceso de negociación. Proporcionamos un protocolo de negociación basado en el intercambio de estas propuestas y desarrollar procedimientos para calcular nuevas propuestas. Categorías y descriptores de asignaturas F.4.1 [Lógica matemática]: programación de lógica y restricción ;;I.2.11 [Inteligencia artificial distribuida]: Sistemas multiagentes Términos generales Teoría 1. Introducción La negociación automatizada se ha recibido una atención creciente en sistemas de múltiples agentes, y se han propuesto varios marcos en diferentes contextos ([1, 2, 3, 5, 10, 11, 13, 14], por ejemplo). La negociación generalmente procede en una serie de rondas y cada agente hace una propuesta en cada ronda. Un agente que recibió una propuesta responde de dos maneras. Uno es una crítica que es un comentario sobre si se acepta o no (partes de) la propuesta. El otro es una contrapropuesta, que es una propuesta alternativa realizada en respuesta a una propuesta anterior [13]. Para ver estas propuestas en la negociación individual, suponga que el siguiente diálogo de negociación entre un agente de compradores B y un agente vendedor S. (BI (o SI) representa una expresión de B (o S) en la ronda I-Th.) B1: Quiero comprar una computadora personal de la marca B1, con la especificación de CPU: 1GHz, memoria: 512Mb, HDD: 80GB y un controlador DVD-RW. Quiero obtenerlo al precio de menos de 1200 USD. S1: Podemos proporcionar a una PC la especificación solicitada si lo paga en efectivo. En este caso, sin embargo, los puntos de servicio no se agregan para este descuento especial. B2: No puedo pagarlo en efectivo. S2: En un precio normal, la PC solicitada cuesta 1300 USD. B3: No puedo aceptar el precio. Mi presupuesto es inferior a 1200 USD. S3: Podemos proporcionar a otra computadora la especificación solicitada, excepto que la marca B2 la hace. El precio es exactamente 1200 USD. B4: No quiero una PC de la marca B2. En cambio, puedo degradar un controlador de DVD-RW a CD-RW en mi propuesta inicial. S4: OK, acepto tu oferta. En este diálogo, en respuesta a la propuesta de apertura B1, se devuelve la contrapropuesta S1. En el resto del diálogo, B2, B3, S4 son críticas, mientras que S2, S3, B4 son contraprosales. Las críticas se producen evaluando una propuesta en una base de conocimiento de un agente. Por el contrario, hacer contrapropuestas implica generar una propuesta alternativa que sea más favorable para el agente que responde que el original. Se sabe que hay dos formas de producir contraproposales: extender la propuesta inicial o enmendar parte de la propuesta inicial. Según [13], el primer tipo aparece en el diálogo: A: Propongo que me proporcione el servicio X. B: Propongo que le proporciono el Servicio X si me proporciona el Servicio Z. El segundo tipo está en el diálogo: R: Propongo que le proporciono el servicio y si me proporciona el servicio X. B: Propongo que le proporciono el Servicio X si me proporciona el Servicio Z. Una negociación procede iterando tales diálogos de dar y atenta hasta que llega a un acuerdo/desacuerdo. En esos diálogos, los agentes generan (contra) propuestas razonando sobre sus propios objetivos u objetivos. El objetivo del agente A en los diálogos anteriores es obtener el servicio X. El agente B propone condiciones para proporcionar el servicio. Sin embargo, en el proceso de negociación, puede suceder que los agentes estén obligados a debilitar o cambiar sus objetivos iniciales para alcanzar un compromiso negociado. En el diálogo de 1022 978-81-904262-7-5 (RPS) c 2007 Ifaamas Un agente comprador y un agente vendedor presentado anteriormente, un agente del comprador cambia su objetivo inicial al degradar a un conductor de DVD-RW a CD-RW. Tal comportamiento generalmente se representa como meta-conocimiento específico de un agente o especificado como protocolos de negociación en problemas particulares. Actualmente, no existe una lógica computacional para la negociación automatizada que tenga reglas de inferencia general para producir (contra) propuestas. El propósito de este documento es mecanizar un proceso de construcción (contra) propuestas en diálogos de negociación uno a uno. Suponemos que un agente que tiene una base de conocimiento representada por un programa lógico. Luego presentamos métodos para generar tres tipos diferentes de propuestas. Primero, utilizamos la técnica de abducción extendida de inteligencia artificial [8, 15] para construir una propuesta condicional como una extensión del original. En segundo lugar, utilizamos la técnica de relajación en la respuesta de consultas cooperativas para bases de datos [4, 6] para construir una propuesta de vecindario como enmienda de la original. Tercero, combinando la abducción y relajación extendida, las propuestas condicionales del vecindario se construyen como extensiones modificadas de la propuesta original. Desarrollamos un protocolo de negociación entre dos agentes basado en el intercambio de estas contraproposiciones y críticas. También proporcionamos procedimientos para calcular propuestas en programación lógica. Este artículo está organizado de la siguiente forma: La Sección 2 presenta un marco lógico utilizado en este documento. La Sección 3 presenta métodos para construir propuestas y proporciona un protocolo de negociación. La Sección 4 proporciona métodos para calcular propuestas en la programación lógica. La Sección 5 discute obras relacionadas, y la Sección 6 concluye el documento.2. Los programas de lógica preliminares considerados en este documento son programas disyuntivos extendidos (EDP) [7]. Un EDP (o simplemente un programa) es un conjunto de reglas de la forma: L1;· · ·;Ll ← ll+1 ,..., Lm, no lm+1 ,..., no ln (n ≥ m ≥ l ≥ 0) donde cada li es un literal positivo/negativo, es decir, a o ¬A para un átomo A, y no es la negación como falla (NAF).no L se llama NAF-Literal. El símbolo ;representa la disyunción. El lado izquierdo de la regla es la cabeza, y el lado derecho es el cuerpo. Para cada regla R de la forma anterior, la cabeza (r), el cuerpo+ (r) y el cuerpo- (r) denotan los conjuntos de literales {l1 ,..., Ll}, {ll+1 ,..., Lm}, y {lm+1 ,..., Ln}, respectivamente. Además, no Body- (R) denota el conjunto de literales NAF {no lm+1 ,..., no ln}. Una disyunción de literales y una conjunción de (NAF) literales en una regla se identifican con sus conjuntos de literales correspondientes. Una regla R a menudo se escribe como cabeza (R) ← Cuerpo+ (R), no Body- (R) o Head (R) ← Cuerpo (R) donde Cuerpo (R) = Cuerpo+ (R) ∪NOT Body- (R). Una regla R es disyuntiva si la cabeza (R) contiene más de un literal. Una regla R es una restricción de integridad si la cabeza (r) = ∅;y r es un hecho si el cuerpo (r) = ∅. Un programa no tiene NAF si ninguna regla contiene NAF-Literales. Se identifican dos reglas/literales con respecto al cambio de nombre de la variable. Una sustitución es un mapeo de variables a términos θ = {x1/t1 ,..., xn/tn}, donde x1 ,..., xn son variables distintas y cada Ti es un término distinto de xi. Dada una conjunción G de (NAF) literales, Gθ denota la conjunción obtenida aplicando θ a G. Un programa, regla o literal es molido si no contiene ninguna variable. Un programa P con variables es una taquigrafía de su terreno de instanciación de tierra (P), el conjunto de reglas básicas obtenidas de P mediante la sustitución de las variables en P por elementos de su universo Herbrand en todas las formas posibles. La semántica de un EDP se define mediante la semántica del conjunto de respuestas [7]. Deje que Lit sea el conjunto de todos los literales terrestres en el lenguaje de un programa. Supongamos que un programa P y un conjunto de literales (⊆ iluminado). Luego, la reducción de P s es el programa que contiene el cabezal de la regla del suelo (r) ← Cuerpo+ (r) si hay una regla R en el suelo (p) tal que el cuerpo- (r) ∩s = ∅. Dado un EDP P, CN (P) sin NAF, denota el conjunto más pequeño de literales terrestres que está (i) cerrado bajo P, es decir, para cada regla de tierra R en tierra (P), cuerpo (R) ⊆ CN (P)implica cabeza (r) ∩ cn (p) = ∅;y (ii) lógicamente cerrado, es decir, es consistente o igual a Lit. Dado un EDP P y un conjunto de literales, S es un conjunto de respuestas de P si S = CN (P s). Un programa tiene ninguno, uno o múltiples conjuntos de respuestas en general. Un conjunto de respuestas es consistente si no está encendido. Un programa P es consistente si tiene un conjunto de respuestas consistente;De lo contrario, P es inconsistente. La programación de lógica abductiva [9] introduce un mecanismo de razonamiento hipotético para la programación lógica. Un marco abductivo utilizado en este documento es el secuestro extendido introducido por Inoue y Sakama [8, 15]. Un programa abductivo es un par P, H donde P es un EDP y H es un conjunto de literales llamados Abducibles. Cuando una l ∈ H literal contiene variables, cualquier instancia de L también es un abducible. Un programa abductivo P, H es consistente si P es consistente. A lo largo del documento, se supone que los programas abductores son consistentes a menos que se indique lo contrario. Sea G = L1 ,..., Lm, no lm+1 ,..., no es una conjunción, donde todas las variables en G se cuantifican existencialmente en el frente y restringen el rango, es decir, cada variable en LM+1 ,..., Ln aparece en L1 ,..., Lm. Un conjunto de literales terrestres satisface la conjunción g si {l1θ ,..., Lmθ} ⊆ sy {lm+1θ ,..., Lnθ} ∩ S = ∅ Para alguna instancia de tierra Gθ con una sustitución θ. Deje que P, H sea un programa abductivo y una conjunción G A como se indicó anteriormente. Un par (e, f) es una explicación de una observación g en p, h if1 1. (p \\ f) ∪ e tiene un conjunto de respuestas que satisface g, 2. (p \\ f) ∪ e es consistente, 3. E y F son conjuntos de literales terrestres de tal manera que E ⊆ H \\ P y F ⊆ H ∩ P. Cuando (p \\ f) ∪ e tiene un conjunto de respuestas que satisface las tres condiciones anteriores, S se llama un conjunto de creencias de un abductivoPrograma P, H Satisfacer G (con respecto a (E, F)). Tenga en cuenta que si P tiene un conjunto de respuestas consistente que se satisface G, S también es un conjunto de creencias de P, H que satisface G con respecto a (E, F) = (∅, ∅). La abducción extendida introduce/elimina hipótesis hacia/de un programa para explicar una observación. Tenga en cuenta que la abducción normal (como en [9]) considera solo la introducción de hipótesis para explicar una observación. Una explicación (e, f) de una observación g se llama mínima si para alguna explicación (e, f) de g, e ⊆ e y f ⊆ f implican e = e y f = f. Ejemplo 2.1. Considere el programa Abductive P, H: P: Flies (X) ← Bird (X), no AB (X), AB (X) ← Broken-Wing (X), Bird (Tweety) ←, Bird (Opus) ←,,ala rota (tweety) ←. H: ala rota (x). La observación g = moscas (tweety) tiene la explicación mínima (e, f) = (∅, {ala rota (tweety)}).1 Esto define explicaciones crédulos [15]. Las explicaciones escépticas se utilizan en [8]. El sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 1023 3. Negociación 3.1 Propuestas condicionales por secuestro Suponemos un agente que tiene una base de conocimiento representada por un programa abductivo P, h. Un programa P consta de dos tipos de conocimiento, creencia B y deseo D, donde B representa el conocimiento objetivo de un agente, mientras que D representa el conocimiento subjetivo en general. Definimos P = B ∪ D, pero no distinguimos B y D si dicha distinción no es importante en el contexto. En contraste, los abducibles H se utilizan para representar condiciones permitidas para hacer un compromiso en el proceso de negociación. Definición 3.1. Una propuesta G es una conjunción de literales y literales NAF: L1 ,..., Lm, no lm+1 ,..., no ln donde cada variable en g se cuantifica existencialmente en el frente y restringida a rango. En particular, G se llama una crítica si G = Aceptar o G = Rechazar donde acepte y rechazado son las proposiciones reservadas. Una contrapropuesta es una propuesta realizada en respuesta a una propuesta. Definición 3.2. Se acepta una propuesta G en un programa abductivo P, h Si P tiene un conjunto de respuestas que satisface a G. Cuando no se acepta una propuesta, la secuestro se usa para buscar condiciones para hacerlo aceptable. Definición 3.3. Sea P, H un programa abductivo y una propuesta. If (e, f) es una explicación mínima de gθ para alguna sustitución θ en p, h, la conjunción g: gθ, e, no F se llama propuesta condicional (para g), donde e, no f representa la conjunción:A1 ,..., AK, no AK+1 ,..., no Al para e = {a1 ,..., Ak} y f = {ak+1 ,..., Al}. Proposición 3.1. Sea P, H un programa abductivo y una propuesta. Si G es una propuesta condicional, hay un conjunto de creencias de P, H satisfacer g. Prueba. Cuando g = gθ, e, no f, (p \\ f) ∪ e tiene un conjunto de respuestas consistente s satisfactorio gθ y e ∩ f = ∅. En este caso, S satisface Gθ, E, no F. Una propuesta condicional G proporciona un requisito mínimo para aceptar la propuesta G. Si Gθ tiene múltiples explicaciones mínimas, existen varias propuestas condicionales en consecuencia. Cuando (e, f) = (∅, ∅), se usa una propuesta condicional como una nueva propuesta realizada en respuesta a la propuesta G. Ejemplo 3.1. Un agente busca un puesto de asistente de investigación en el departamento de informática de una universidad con la condición de que el salario sea de al menos 50,000 USD por año. El agente hace su solicitud como propuesta: 2 g = asistencia (departamento de compt), salario (x), x ≥ 50, 000. La universidad tiene el programa Abductive P, H: P: Salario (40, 000) ← Asistencia (Departamento de CompT), no tiene doctorado, salario (60, 000) ← Asistencia (departamento de compt), tiene doctorado, salario (50, 000) ← Assist (Departamento de Matemáticas), salario (55, 000) ← Administrador del sistema (Departamento de CompT), 2 Para conveniencia de notación, a menudo incluimos ecuaciones matemáticas (in) en propuestas/programas. Están escritos por literales, por ejemplo, x ≥ y por Geq (x, y) con una definición adecuada del predicado GEQ.Empleado (x) ← Assist (X), Empleado (X) ← Administrador del sistema (x), asistencia (departamento de compt);asistencia (departamento de matemáticas);System Admin (CompT Dept) ←, H: tiene PhD, donde las posiciones disponibles están representadas por disyunción. Según P, el salario base de un asistente de investigación en el departamento de computadoras es de 40,000 USD, pero si tiene un doctorado, es de 60,000 USD. En este caso, (e, f) = ({tiene PhD}, ∅) se convierte en la explicación mínima de gθ = asistencia (departamento de compt), salario (60, 000) con θ = {x/60, 000}. Luego, la propuesta condicional realizada por la Universidad se convierte en asistencia (departamento de compt), salario (60, 000), tiene doctorado.3.2 Propuestas del vecindario por relajación Cuando una propuesta es inaceptable, un agente intenta construir una nueva contrapropuesta al debilitar las limitaciones en la propuesta inicial. Utilizamos técnicas de relajación para este propósito. La relajación se utiliza como técnica de respuesta de consultas cooperativas en bases de datos [4, 6]. Cuando una consulta original falla en una base de datos, la relajación expande el alcance de la consulta relajando las limitaciones en la consulta. Esto permite que la base de datos devuelva las respuestas del vecindario que están relacionadas con la consulta original. Utilizamos la técnica para producir propuestas en el proceso de negociación. Definición 3.4. Sea P, H un programa abductivo y una propuesta. Luego, G está relajado a G de las siguientes tres maneras: anti-instanciación: construir G de tal manera que g θ = g para alguna sustitución θ. Condiciones de caída: construya G de tal manera que G. G. Reemplazo de objetivos: si G es una conjunción G1, G2, donde G1 y G2 son conjunciones, y hay una regla l ← G1 en P tal que G1θ = G1 para alguna sustitución θ,Luego construya G como Lθ, G2. Aquí, Lθ se llama literal reemplazado. En cada caso, cada variable en G se cuantifica existencialmente en la parte delantera y restringida a rango. La anti-instanciación reemplaza las constantes (o términos) con variables nuevas. Las condiciones de caída eliminan algunas condiciones en una propuesta. El reemplazo de objetivos reemplaza la condición G1 en G con un Lθ literal en presencia de una regla L ← G1 en P bajo la condición G1θ = G1. Todas estas operaciones generalizan propuestas de diferentes maneras. Cada G obtenida por estas operaciones se llama relajación de G. Vale la pena señalar que estas operaciones también se usan en el contexto de la generalización inductiva [12]. La propuesta relajada puede producir nuevas ofertas que sean vecinas de la propuesta original. Definición 3.5. Sea P, H un programa abductivo y una propuesta.1. Sea G una propuesta obtenida por anti-instanciación. Si P tiene un conjunto de respuestas que satisface G θ para alguna sustitución θ y g θ = g, g θ se denomina propuesta de vecindario por anti-instanciación.2. Sea G una propuesta obtenida por condiciones de caída. Si P tiene un conjunto de respuestas que satisface G θ para alguna sustitución θ, G θ se denomina propuesta de vecindario mediante condiciones de caída.1024 El sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 3. Sea G una propuesta obtenida por reemplazo de objetivos. Para una literal literal reemplazada y una regla h ← b en P tal que l = hσ y (g \\ {l}) ∪ bσ = g para alguna sustitución σ, pon g = (g \\ {l}) ∪ bσ. Si P tiene un conjunto de respuestas que satisface G θ para alguna sustitución θ, G θ se llama propuesta de vecindario por reemplazo de meta. Ejemplo 3.2.(cont. Ejemplo 3.1) Dada la propuesta g = asistencia (departamento de compt), salario (x), x ≥ 50, 000, • g1 = asistencia (w), salario (x), x ≥ 50, 000 se produce sustituyendo el departamento de CompT conuna variable w.Como g1θ1 = asistencia (departamento de matemáticas), salario (50, 000) con θ1 = {w/de departamento matemático} está satisfecho con un conjunto de respuestas de P, G1θ1 se convierte en una propuesta del vecindario por antiestenciación.• G2 = asistencia (departamento de compt), el salario (x) se produce dejando caer la condición salarial x ≥ 50, 000. Como g2θ2 = asistencia (departamento de compt), salario (40, 000) con θ2 = {x/40, 000} se satisface con un conjunto de respuestas de P, G2θ2 se convierte en una propuesta del vecindario mediante condiciones de caída.• G3 = empleado (departamento de compt), salario (x), x ≥ 50, 000 se produce reemplazando la asistencia (departamento de compt) con el empleado (departamento de compt) utilizando la regla del empleado (x) ← asistencia (x) en P. porG3 y el empleado de la regla (x) ← Administrador del sistema (x) en P, G3 = SYS Admin (departamento de compt), salario (x), x ≥ 50, 000 se produce. Como G3 θ3 = SYS Admin (departamento de compt), salario (55, 000) con θ3 = {x/55, 000} se satisface con un conjunto de respuestas de P, G3 θ3 se convierte en una propuesta del vecindario por reemplazo de objetivos. Finalmente, la secuestro y la relajación extendidas se combinan para producir propuestas condicionales del vecindario. Definición 3.6. Sea P, H un programa abductivo y una propuesta.1. Sea G una propuesta obtenida por condiciones anti-instanciación o caída. If (E, F) es una explicación mínima de G θ (= G) para alguna sustitución θ, la conjunción G θ, E, no F se llama propuesta de vecindad condicional por condiciones anti-instanciación/caída.2. Sea G una propuesta obtenida por reemplazo de objetivos. Supongamos que G como en la definición 3.5 (3). Si (E, F) es una explicación mínima de G θ para alguna sustitución θ, la conjunción G θ, E, no F se llama propuesta de vecindad condicional por reemplazo de objetivos. Una propuesta condicional del vecindario se reduce a una propuesta de vecindario cuando (e, f) = (∅, ∅).3.3 Protocolo de negociación Un protocolo de negociación define cómo intercambiar propuestas en el proceso de negociación. Esta sección presenta un protocolo de negociación en nuestro marco. Suponemos que la negociación individual entre dos agentes que tienen una ontología común y el mismo idioma para una comunicación exitosa. Definición 3.7. Una propuesta l1, ..., lm, no lm+ 1, ..., no LN viola una restricción de integridad ← Body+ (r), no cuerpo- (r) Si por alguna sustitución θ, hay una sustitución σ de tal manera quecuerpo+ (r) σ ⊆ {l1θ ,..., Lmθ}, cuerpo- (r) σ∩ {l1θ ,..., Lmθ} = ∅, y cuerpo− (r) σ ⊆ {lm+1θ ,..., Lnθ}. Las restricciones de integridad son condiciones que un agente debe satisfacer, de modo que se utilicen para explicar por qué un agente no acepta una propuesta. Una negociación procede en una serie de rondas. Cada ronda I-Th (I ≥ 1) consiste en una propuesta GI 1 hecha por un agente AG1 y otra propuesta GI 2 hecha por el otro agente AG2. Definición 3.8. Deje que P1, H1 sea un programa abductivo de un agente AG1 y GI 2, una propuesta hecha por AG2 en la ronda I-Th. Un conjunto de crítica de AG1 (en la ronda I-Th) es un conjunto CSI 1 (P1, GJ 2) = CSI-1 (P1, GJ-1 2) ∪ ∪ {R |R es una restricción de integridad en P1 y GJ 2 viola R} donde J = i - 1 o i, y CS0 1 (P1, G0 2) = CS1 1 (P1, G0 2) = ∅. Un conjunto de crítica de un agente AG1 acumula restricciones de integridad que son violadas por las propuestas hechas por otro agente AG2. CSI 2 (P2, GJ 1) se define de la misma manera. Definición 3.9. Sea PK, HK un programa abductivo de un agente AGK y GJ una propuesta, que no es una crítica, realizada por ningún agente en la ronda J (≤ I). Un conjunto de negociación de AGK (en la ronda en la I-Th) es un triple nsi k = (si c, si n, si cn), donde si c es el conjunto de propuestas condicionales, si n es el conjunto de propuestas de vecindario, ySI CN es el conjunto de propuestas condicionales del vecindario, producidas por GJ y PK, HK. Un conjunto de negociación representa el espacio de posibles propuestas hechas por un agente. Si x (x ∈ {c, n, cn}) acumula propuestas producidas por GJ (1 ≤ j ≤ i) según las definiciones 3.3, 3.5 y 3.6. Tenga en cuenta que un agente puede construir contraproposios modificando sus propias propuestas anteriores u otras propuestas de agentes. Un agente AGK acumula propuestas realizadas por AGK pero que son rechazadas por otro agente, en el conjunto de propuestas fallido FP I K (en la ronda I-Th), donde FP 0 K = ∅. Supongamos que dos agentes AG1 y AG2 tienen programas abductivos P1, H1 y P2, H2, respectivamente. Dada una propuesta G1 1 que está satisfecha con un conjunto de respuestas de P1, comienza una negociación. En respuesta a la propuesta GI 1 realizada por AG1 en la ronda I-Th, AG2 se comporta de la siguiente manera.1. Si GI 1 = acepta, se llega a un acuerdo y la negociación termina en el éxito.2. De lo contrario si gi 1 = rechazar, coloque fp i 2 = fpi - 1 2 ∪ {gi - 1 2} donde {g0 2} = ∅. Proceda al paso 4 (b).3. De lo contrario, si P2 tiene un conjunto de respuestas que satisface GI 1, AG2 devuelve GI 2 = Aceptar a AG1. La negociación termina en el éxito.4. De lo contrario, AG2 se comporta de la siguiente manera. Pon FP I 2 = FPI - 1 2.(a) Si GI 1 viola una restricción de integridad en P2, devuelva la crítica GI 2 = rechazar a AG1, junto con el conjunto de crítica CSI 2 (P2, GI 1).(b) De lo contrario, construya NSI 2 de la siguiente manera.(i) Producir si c.Sea μ (Si C) = {P |P ∈ Si C \\ fpi 2 y P satisfacen las restricciones en CSI 1 (P1, GI - 1 2)}. Si μ (Si C) = ∅, seleccione uno de μ (Si C) y proponga como GI 2 a Ag1;De lo contrario, vaya a (ii).(ii) producir si n.Si μ (Si N) = ∅, seleccione uno de μ (Si N) y proponga como GI 2 a Ag1;De lo contrario, vaya a (iii).(iii) Producir SI CN. Si μ (SI CN) = ∅, seleccione uno de μ (SI CN) y proponerlo como GI 2 a Ag1;De lo contrario, la negociación termina en el fracaso. Esto significa que AG2 no puede hacer contrapropuesta o cada contrapropuesta hecha por AG2 es rechazada por AG1. En el paso 4 (a), AG2 rechaza la propuesta GI 1 y devuelve el motivo del rechazo como un conjunto de crítica. Esto ayuda para AG1 el sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 1025 en la preparación de una próxima contrapropuesta. En el paso 4 (b), AG2 construye una nueva propuesta. En su construcción, AG2 debe encargarse del conjunto de crítica CSI 1 (P1, GI - 1 2), que representa restricciones de integridad, si las hay, acumuladas en rondas anteriores, que AG1 debe satisfacer. Además, FP I 2 se usa para eliminar propuestas que han sido rechazadas. La construcción de Si x (x ∈ {C, N, CN}) en NSI 2 se realiza incrementalmente agregando nuevas contrapropuestas producidas por GI 1 o GI-1 2 a Si-1 x. Por ejemplo, SI n en NSI 2 se calcula como Si N = Si - 1 N ∪ {P |P es una propuesta del vecindario hecha por GI 1} ∪ {P |P es una propuesta del vecindario hecha por GI - 1 2}, donde S0 n = ∅. Es decir, SI n se construye a partir de Si-1 n agregando nuevas propuestas que se obtienen modificando la propuesta GI 1 realizada por Ag1 en la ronda I-Th o modificando la propuesta Gi-1 2 hecha por Ag2 en (I--1) -Th ronda. SI C y SI CN también se obtienen. En el protocolo anterior, un agente produce Si C al principio, en segundo lugar, y finalmente SI CN. Esta estrategia busca condiciones que satisfagan la propuesta dada, antes de las propuestas del vecindario que cambian la original. También se considera otra estrategia, que prefiere las propuestas del vecindario a las condicionales. Las propuestas condicionales del vecindario deben considerarse en el último lugar, ya que difieren de la original hasta la medida máxima. El protocolo anterior produce las propuestas candidatas en Si x para cada x ∈ {c, n, cn} a la vez. Podemos considerar una variante del protocolo en el que cada propuesta en Si x se construye una por una (ver Ejemplo 3.3). El protocolo anterior se aplica repetidamente a cada uno de los dos agentes de negociación hasta que una negociación termina en éxito/fracaso. Formalmente, el protocolo de negociación anterior tiene las siguientes propiedades. Teorema 3.2. Deje que AG1 y AG2 sean dos agentes que tienen programas abductivos P1, H1 y P2, H2, respectivamente.1. Si P1, H1 y P2, H2 están libres de funciones (es decir, tanto PI como HI no contienen símbolo de función), cualquier negociación terminará.2. Si una negociación termina con un acuerdo sobre una propuesta G, tanto P1, H1 como P2, H2 tiene conjuntos de creencias que satisfacen la prueba de G.1. Cuando un programa abductivo está libre de funciones, los abducibles y los conjuntos de negociación son finitos. Además, si una propuesta se rechaza una vez, la función μ no la propone nuevamente. Por lo tanto, la negociación terminará en pasos finitos.2. Cuando AG1, P1, H1, H1, tiene un conjunto de creencias que satisface a G. Si el agente AG2 acepta la propuesta G, está satisfecho con un conjunto de respuestas de P2, que también es un conjunto de creencias de P2, H2. Ejemplo 3.3. Supongamos una situación de venta de compras en la introducción. Un agente de vendedores tiene el programa Abductive PS, HS en el que PS consiste en creencias BS y deseo DS: BS: PC (B1, 1G, 512M, 80G);PC (B2, 1G, 512M, 80G) ←, (1) DVD-RW;CD-RW ←, (2) DS: Precio normal (1300) ← PC (B1, 1G, 512m, 80G), DVD-RW, (3) Precio normal (1200) ← PC (B1, 1G, 512M, 80G), CD-RW, (4) Precio normal (1200) ← PC (B2, 1G, 512M, 80G), DVD-RW, (5) Precio (x) ← Precio normal (x), agregar punto, (6) precio(x ∗ 0.9) ← Precio normal (x), pagar en efectivo, no agregar punto, (7) Agregar punto ←, (8) HS: Agregar punto, pagar en efectivo. Aquí, (1) y (2) representan la selección de productos. La PC Atom (B1, 1G, 512m, 80G) representa que el agente del vendedor tiene una PC de la marca B1 de tal manera que la CPU es de 1 GHz, la memoria es de 512 MB y HDD es de 80 GB. Los precios de los productos se representan como el deseo del vendedor. Las reglas (3) - (5) son precios normales de los productos. Un precio normal es un precio de venta con la condición de que se agregan puntos de servicio (6). Por otro lado, se aplica un precio de descuento si el método de pago es efectivo y no se agrega ningún punto de servicio (7). El hecho (8) representa la adición de puntos de servicio. Este servicio se retiraría en caso de precios de descuento, por lo que ADD Point se especifica como un abducible. Un agente de compradores tiene el programa Abductive PB, HB en el que PB consiste en Creyel BB y Desire DB: BB: Drive ← DVD-RW, (9) Drive ← CD-RW, (10) Precio (X) ←, (11)DB: PC (B1, 1G, 512M, 80G) ←, (12) DVD-RW ←, (13) CD-RW ← No DVD-RW, (14) ← Paga en efectivo, (15) ← Precio (x),x> 1200, (16) HB: DVD-RW. Reglas (12) - (16) son los compradores deseados. Entre ellos, (15) y (16) imponen restricciones para comprar una PC. Un DVD-RW se especifica como un abducible que está sujeto a concesión.(Primera ronda) Primero, la siguiente propuesta viene dada por el agente del comprador: G1 B: PC (B1, 1G, 512m, 80G), DVD-RW, Precio (x), x ≤ 1200. Como PS no tiene un conjunto de respuestas que satisfaga G1 B, el agente del vendedor no puede aceptar la propuesta. El vendedor toma una acción de hacer una contrapropuesta y realiza un secuestro. Como resultado, el vendedor encuentra la explicación mínima (e, f) = ({pagar efectivo}, {agregar punto}) que explica G1 b θ1 con θ1 = {x/1170}. El vendedor construye la propuesta condicional: G1 S: PC (B1, 1G, 512m, 80G), DVD-RW, Price (1170), Pague Efect Cash, no agregue el punto y lo ofrece al comprador.(Segunda ronda) El comprador no acepta G1 S porque él/ella no puede pagarlo en efectivo (15). Luego, el comprador devuelve la crítica G2 b = rechazar al vendedor, junto con el conjunto de crítica CS2 B (Pb, G1 S) = {(15)}. En respuesta a esto, el vendedor intenta hacer otra propuesta que satisfaga la restricción en este conjunto de críticas. Como G1 s se almacena en FP 2 sy ninguna otra propuesta condicional que satisfaga el requisito de los compradores existe, el vendedor produce propuestas de vecindario. Él/ella relaja G1 B soltando x ≤ 1200 en la condición, y produce PC (B1, 1G, 512m, 80G), DVD-RW, precio (X). Como PS tiene un conjunto de respuestas que satisface G2 S: PC (B1, 1G, 512M, 80G), DVD-RW, Price (1300), 1026 el sexto intl. Conf.En agentes autónomos y sistemas de múltiples agentes (AAMAS 07), el vendedor ofrece G2 S como una nueva contrapropuesta.(Tercera ronda) El comprador no acepta G2 S porque él/ella no puede pagar más de 1200USD (16). El comprador nuevamente devuelve la crítica G3 B = rechazar al vendedor, junto con el conjunto de crítica CS3 B (Pb, G2 S) = CS2 B (Pb, G1 S) ∪ {(16)}. Luego, el vendedor considera otra propuesta reemplazando B1 con una variable W, G1 B ahora se convierte en PC (W, 1G, 512m, 80G), DVD-RW, precio (x), x ≤ 1200. Como PS tiene un conjunto de respuestas que satisface G3 S: PC (B2, 1G, 512M, 80G), DVD-RW, Price (1200), el vendedor ofrece G3 S como una nueva contrapropuesta.(4ª ronda) El comprador no acepta G3 S porque una PC de la marca B2 está fuera de su interés y PB no tiene un conjunto de respuestas que satisfaga los G3 S.Luego, el comprador hace una concesión cambiando su objetivo original. El comprador relaja G1 B por reemplazo de objetivos utilizando la regla (9) en Pb, y produce PC (B1, 1G, 512m, 80 g), unidad, precio (x), x ≤ 1200. Usando (10), se produce la siguiente propuesta: PC (B1, 1G, 512M, 80G), CD-RW, Precio (X), X ≤ 1200. Como PB \\ {DVD-RW} tiene un conjunto de respuestas consistente que satisface la propuesta anterior, el comprador propone la propuesta condicional del vecindario G4 B: PC (B1, 1G, 512M, 80G), CD-RW, no DVD-RW, precio (x), x ≤ 1200 al agente del vendedor. Dado que PS también tiene un conjunto de respuestas que satisface G4 B, el vendedor lo acepta y envía el mensaje G4 S = Aceptar al Comprador. Por lo tanto, la negociación termina en el éxito.4. Computación En esta sección, proporcionamos métodos para calcular propuestas en términos de conjuntos de respuestas de programas. Primero presentamos algunas definiciones de [15]. Definición 4.1. Dado un programa abductivo P, H, el conjunto UR de reglas de actualización se define como: ur = {l ← no l, l ← no l |L ∈ H} ∪ { +l ← L |L ∈ H \\ p} ∪ {−l ← no l |L ∈ H ∩ P}, donde L, +L y −l son átomos nuevos asociados de manera única con cada l ∈ H. Los átomos +L y −l se denominan átomos de actualización. Por la definición, el átomo L se vuelve verdadero Iff L no es verdadero. El par de reglas l ← no l y l ← No especifique la situación de que un abducible es verdadero o no. Cuando p (x) ∈ H y p (a) ∈ P pero p (t) ∈ P para t = a, la regla +l ← l se convierte precisamente en +p (t) ← P (t) para cualquier t = a. En este caso, la regla se escribe en breve como +P (x) ← P (x), x = a. En general, la regla se convierte en +P (x) ← P (x), x = t1 ,..., x = tn para n tales instancias. La regla +l ← L deriva el átomo +L si una L abducible que no está en P es verdad. Por el contrario, la regla −l ← no l deriva el átomo −l si una l abducible que está en P no es verdad. Por lo tanto, los átomos de actualización representan el cambio de los valores de verdad de los abducibles en un programa. Es decir, +L significa la introducción de L, mientras que −L significa la eliminación de L. Cuando una L abducible contiene variables, se supone que la actualización asociada Atom +L o −L tiene exactamente las mismas variables. En este caso, un átomo de actualización se identifica semánticamente con sus instancias terrestres. El conjunto de todos los átomos de actualización asociados con los abducibles en H se denota por UH, y uh = uh+ ∪ uh− donde uh+ (resp. Uh−) es el conjunto de átomos de actualización de la forma +L (resp. −l). Definición 4.2. Dado un programa abductivo P, H, su programa de actualización se define como el programa UP = (P \\ H) ∪ Ur. Un conjunto de respuestas de UP se llama U-Minimal si no hay una respuesta establecida de UP de tal manera que t ∩ uh ⊂ s ∩ uh. Según la definición, existen conjuntos de respuestas U-Minimal siempre que UP tenga conjuntos de respuestas. Los programas de actualización se utilizan para las explicaciones de computación (mínima) de una observación. Dada una observación G como una conjunción de literales y literales NAF que posiblemente contienen variables, introducimos un nuevo terreno literal o junto con la regla O ← G. En este caso, o tiene una explicación (e, f) si tiene el mismoexplicación. Con este reemplazo, se supone que una observación es un terreno literal sin pérdida de generalidad. En lo que sigue, e + = { + l |L ∈ E} y f - = {−l |L ∈ F} para E ⊆ H y F ⊆ H. Proposición 4.1.([15]) Sea P, H un programa abductivo, suba su programa de actualización y G un terreno literal que represente una observación. Entonces, un par (e, f) es una explicación de G iff up ∪ {← no g} tiene un conjunto de respuestas consistente S tal que e+ = s ∩ uh+ y f− = s ∩ uh−. En particular, (e, f) es una explicación mínima IFF S es un conjunto de respuestas U-Minimal. Ejemplo 4.1. Para explicar la observación g = moscas (t) en el programa p del ejemplo 2.1, primero construya el programa de actualización UP de P: 3 Up: Flies (x) ← Bird (X), no AB (X), AB (X)← Broken-Wing (x), Bird (t) ←, pájaro (o) ←, ala rota (x) ← no roto (x), ala rota (x) ← no roto (x),+ala rota (x) ← ala rota (x), x = t, − ala-rota (t) ← no roto (t). A continuación, considere el programa ∪ ∪ {← no moscas (t)}. Tiene el conjunto de respuestas de respuestas U-Minimal únicas: s = {pájaro (t), pájaro (o), moscas (t), moscas (o), ala rotura (t), ala rota (o),-caída-ala (t)}. La explicación mínima única (e, f) = (∅, {ala rota (t)}) de g se expresa mediante el átomo de actualización-ala-rota (t) en S ∩ uh−. Proposición 4.2. Sea P, H un programa abductivo y G un terreno literal que represente una observación. Si P ∪ {← no G} tiene un conjunto de respuestas consistente S, G tiene la explicación mínima (e, f) = (∅, ∅) y S satisface G. Ahora proporcionamos métodos para calcular (contra) propuestas. Primero, las propuestas condicionales se calculan de la siguiente manera.Entrada: un programa abductivo P, H, una propuesta G;Salida: un SC establecido de propuestas. Si G es un literal de tierra, calcule su explicación mínima (E, F) en P, H utilizando el programa de actualización. Pon G, E, no F en SC. De lo contrario, si G es una conjunción que posiblemente contiene variables, considere el programa abductivo 3 T representa Tweety y O representa Opus. El sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 1027 P ∪ {O ← G}, H con una O. Literal de tierra COMPUTA una explicación mínima de O en P ∪ {O ← G}, H usando su programa de actualización. Si O tiene una explicación mínima (E, F) con una sustitución θ por variables en G, ponga Gθ, E, no F en SC. A continuación, las propuestas del vecindario se calculan de la siguiente manera.Entrada: un programa abductivo P, H, una propuesta G;Salida: un SN establecido de propuestas.% propuestas del vecindario por anti-instanciación;Construir g por anti-instanciación. Para un terreno literal o, si p ∪ {o ← g} ∪ {← no o} tiene un conjunto de respuestas consistente que satisface g θ con una sustitución θ y g θ = g, coloque g θ en sn.% propuestas del vecindario mediante condiciones de caída;Construir g por condiciones de caída. Si G es un terreno literal y el programa p ∪ {← no G} tiene un conjunto de respuestas consistente, pon en S en Sn. De lo contrario, si G es una conjunción que posiblemente contiene variables, haga lo siguiente. Para un terreno literal o, si p ∪ {o ← g} ∪ {← no o} tiene un conjunto de respuestas consistente que satisface g θ con una sustitución θ, ponga g θ en sn.% Propuestas del vecindario por reemplazo de objetivos;Construir G por reemplazo de objetivos. Si G es un terreno literal y hay una regla H ← B en P tal que g = hσ y bσ = g para alguna sustitución σ, pon g = bσ. Si p ∪ {← no g} tiene un conjunto de respuestas consistente que satisface g θ con una sustitución θ, ponga g θ en sn. De lo contrario, si G es una conjunción que posiblemente contiene variables, haga lo siguiente. Para un literal literal reemplazado, si hay una regla h ← b en p tal que l = hσ y (g \\ {l}) ∪ bσ = g para alguna sustitución σ, pon g = (g \\ {l})∪ Bσ. Para un terreno literal o, si p ∪ {o ← g} ∪ {← no o} tiene un conjunto de respuestas consistente que satisface g θ con una sustitución θ, ponga g θ en sn. Teorema 4.3. El conjunto SC (resp. Sn) calculado anteriormente coincide con el conjunto de propuestas condicionales (propuestas de vecindad resp.). Prueba. El resultado para SC se deduce de la definición 3.3 y la Proposición 4.1. El resultado para SN se deduce de la definición 3.5 y la Proposición 4.2. Las propuestas condicionales del vecindario se calculan combinando los dos procedimientos anteriores. Esas propuestas se calculan en cada ronda. Tenga en cuenta que el procedimiento para calcular SN contiene algunas opciones no deterministas. Por ejemplo, generalmente hay varios candidatos de literales para relajarse en una propuesta. Además, puede haber varias reglas en un programa para el uso del reemplazo de objetivos. En la práctica, un agente puede prescribir literales en una propuesta de posible relajación o reglas en un programa para el uso del reemplazo de objetivos.5. Trabajo relacionado Como hay una serie de literatura sobre negociación automatizada, esta sección se centra en la comparación con los marcos de negociación basados en la lógica y la argumentación. Sadri et al.[14] Utilice la programación de lógica abductiva como lenguaje de representación de los agentes de negociación. Los agentes negocian utilizando primitivas de diálogo comunes, llamados movimientos de diálogo. Cada agente tiene un programa de lógica abductiva en el que un programa especifica una secuencia de diálogos, se especifica un protocolo de diálogo como restricciones, y los movimientos de diálogo se especifican como abducibles. El comportamiento de los agentes está regulado por un ciclo observador-pensamiento-acto. Una vez que un agente pronuncia un movimiento de diálogo, otro agente que observó el enunciado piensa y actúa utilizando un procedimiento de prueba. Su enfoque y el nuestro emplean la programación de lógica abductiva como una plataforma de razonamiento de agentes, pero el uso es bastante diferente. Primero, usan abducibles para especificar las primitivas de diálogo de la forma Tell (pronosticador, receptor, sujeto, identificador, tiempo), mientras que usamos abducibles para especificar hipótesis arbitrarias permitidas para construir propuestas condicionales. En segundo lugar, un programa prepecifica un plan para llevar a cabo para lograr un objetivo, junto con los recursos disponibles/faltantes en el contexto de problemas de cambio de recursos. Esto está en contraste con nuestro método en el que las posibles contrapropuestas se construyen recientemente en respuesta a una propuesta hecha por un agente. En tercer lugar, especifican una política de negociación dentro de un programa (como restricciones de integridad), mientras que damos un protocolo independiente de los agentes individuales. Proporcionan un modelo operativo que especifica completamente el comportamiento de los agentes en términos de ciclo de agente. No proporcionamos una especificación tan completa del comportamiento de los agentes. Nuestro interés principal es mecanizar la construcción de propuestas. Bracciali y Torroni [2] formulan agentes abductivos que tienen conocimiento en los programas de lógica abductiva. Para explicar una observación, dos agentes se comunican intercambiando restricciones de integridad. En el proceso de comunicación, un agente puede revisar sus propias limitaciones de integridad de acuerdo con la información proporcionada por el otro agente. Un conjunto de restricciones de integridad relaja un conjunto de IC (o IC aprieta IC) si alguna observación que se pueda probar con respecto a IC también se puede probar con respecto a IC. Por ejemplo, IC: ← A, B, C Relaja IC: ← A, b. Por lo tanto, usan la relajación para debilitar las limitaciones en un programa de lógica abductiva. Por el contrario, utilizamos la relajación para debilitar propuestas y tres métodos de relajación diferentes, anti-instanciación, condiciones de caída y reemplazo de objetivos. Su objetivo es explicar una observación revisando las limitaciones de integridad de un agente a través de la comunicación, mientras que utilizamos limitaciones de integridad para la comunicación para explicar las críticas y ayudar a otros agentes a hacer contrapropuestas. Meyer et al.[11] Introducir un marco lógico para negociar agentes. Introducen dos modos diferentes de negociación: concesión y adaptación. Proporcionan postulados racionales para caracterizar los resultados negociados entre dos agentes y describen métodos para construir resultados. Proporcionan condiciones lógicas para los resultados negociados para satisfacer, pero no describen un proceso de negociación ni protocolos de negociación. Además, representan a los agentes por teorías proposicionales clásicas, que es diferente de nuestro marco de programación de lógica abductiva. Foo et al.[5] Modelo de negociación individual como un encuentro único entre dos programas lógicos extendidos. Un agente ofrece un conjunto de respuestas de su programa, y su acuerdo mutuo se considera un comercio en sus conjuntos de respuestas. A partir del acuerdo inicial establecido S∩T para un conjunto de respuestas de un agente y un conjunto de respuestas T de otro agente, cada agente extiende este conjunto para reflejar su propia demanda mientras mantiene la consistencia con la demanda del otro agente. Su algoritmo devuelve nuevos programas que tienen conjuntos de respuestas que son consistentes entre sí y mantienen el acuerdo establecido. El trabajo se extiende a encuentros repetidos en [3]. En su marco, dos agentes intercambian conjuntos de respuestas para producir un conjunto de creencias común, que es diferente de nuestro marco de intercambiar propuestas. Hay una serie de propuestas para la negociación basadas en 1028 el sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07) en la argumentación. Una ventaja de la negociación basada en la argumentación es que construye una propuesta con argumentos que respalden la propuesta [1]. La existencia de argumentos es útil para convencer a otros agentes de las razones por las cuales un agente ofrece (contra) propuestas o devolver críticas. Parsons et al.[13] Desarrolle una lógica de negociación basada en la argumentación entre los agentes de BDI. En la negociación uno a uno, un agente A genera una propuesta junto con sus argumentos y la pasa a otro agente B. La propuesta es evaluada por B que intenta construir argumentos en su contra. Si entra en conflicto con los intereses de BS, B informa a A de su objeción enviando su argumento de ataque. En respuesta a esto, A intenta encontrar una forma alternativa de lograr su objetivo original, o una forma de persuadir a B para que elimine su objeción. Si se puede encontrar cualquier tipo de argumento, A lo enviará a B. Si B no encuentra razón para rechazar la nueva propuesta, será aceptada y la negociación termina con éxito. De lo contrario, el proceso se itera. En estos procesos de negociación, el agente A nunca cambia su objetivo original, de modo que la negociación termina en el fracaso si A no puede encontrar una forma alternativa de lograr el objetivo original. En nuestro marco, cuando otro agente rechaza una propuesta, un agente puede debilitar o cambiar su objetivo mediante secuestro y relajación. Nuestro marco no tiene un mecanismo de argumentación, pero las razones de las críticas pueden informarse al responder conjuntos de críticas. Kakas y Moraitis [10] proponen un protocolo de negociación que integra el secuestro dentro de un marco de argumentación. Una propuesta contiene una oferta correspondiente al objeto de negociación, junto con la información de apoyo que representa condiciones bajo las cuales se realiza esta oferta. La información de apoyo se calcula mediante secuestro y se utiliza para construir argumentos condicionales durante el proceso de negociación. En su protocolo de negociación, cuando un agente no puede satisfacer su propio objetivo, el agente considera el objetivo de otros agentes y busca condiciones bajo las cuales el objetivo es aceptable. Nuestro enfoque actual difiere del suyo en los siguientes puntos. Primero, usan el secuestro para buscar condiciones para apoyar los argumentos, mientras usamos el secuestro para buscar condiciones para que las propuestas acepten. En segundo lugar, en su protocolo de negociación, se eligen las contrapropuestas entre los candidatos basados en el conocimiento de preferencia de un agente a nivel meta, que representa la política bajo la cual un agente usa sus reglas de decisión a nivel de objeto de acuerdo con las situaciones. En nuestro marco, las contrapropuestas se construyen recientemente utilizando la secuestro y la relajación. El método de construcción es independiente de protocolos de negociación particulares. Como [2, 10, 14], la programación de abducción o lógica abductiva utilizada en la negociación se basa principalmente en el secuestro normal. Por el contrario, nuestro enfoque se basa en la abducción extendida que no solo puede introducir hipótesis sino eliminarlas de un programa. Esta es otra diferencia importante. La relajación y la respuesta de consultas del vecindario están diseñadas para hacer que las bases de datos cooperen con sus usuarios [4, 6]. En este sentido, esas técnicas tienen el espíritu similar a la resolución cooperativa de problemas en sistemas de múltiples agentes. Sin embargo, hasta donde saben los autores, no hay un estudio que aplique esas técnicas a la negociación de agentes.6. Conclusión En este documento propusimos un marco lógico para negociar agentes. Para construir propuestas en el proceso de negociación, combinamos las técnicas de abducción y relajación extendida. Se demostró que estas dos operaciones se utilizan para reglas de inferencia general en la producción de propuestas. Desarrollamos un protocolo de negociación entre dos agentes basados en el intercambio de propuestas y críticas, y proporcionamos procedimientos para calcular propuestas en la programación de lógica abductiva. Esto nos permite realizar una negociación automatizada en la parte superior de los solucionadores del conjunto de respuestas existentes. El marco actual no tiene un mecanismo de seleccionar una propuesta óptima (contra) entre diferentes alternativas. Para comparar y evaluar propuestas, un agente debe tener un conocimiento de preferencia de las propuestas de candidatos. Se deja una mayor elaboración para maximizar la utilidad de los agentes para futuros estudios.7. Referencias [1] L. Amgoud, S. Parsons y N. Maudet. Argumentos, diálogo y negociación. En: Proc. ECAI-00, pp. 338-342, iOS Press, 2000. [2] A. Bracciali y P. torroni. Un nuevo marco para la revisión del conocimiento de los agentes abductivos a través de su interacción. En: Proc. Clima-IV, Lógica computacional en sistemas de múltiples agentes, LNAi 3259, pp. 159-177, 2004. [3] W. Chen, M. Zhang y N. Foo. Negociación repetida de programas lógicos. En: Proc.7º taller sobre razonamiento, acción y cambio no monotónicos, 2006. [4] W. W. Chu, Q. Chen y R.-C.Sotavento. Respuesta de consulta cooperativa a través de la jerarquía de abstracción de tipo. En: Cooperating Knowledge Systems, S. M. Deen Ed., Pp. 271-290, Springer, 1990. [5] N. Foo, T. Meyer, Y. Zhang y D. Zhang. Negociación de programas lógicos. En: Proc.6º taller sobre razonamiento, acción y cambio no monotónicos, 2005. [6] T. Gaasterland, P. Godfrey y J. Minker. Relajación como plataforma para la respuesta cooperativa. Journal of Intelligence Information Systems 1 (3/4): 293-321, 1992. [7] M. Gelfond y V. Lifschitz. Negación clásica en programas lógicos y bases de datos disyuntivas. New Generation Computing 9: 365-385, 1991. [8] K. Inoue y C. Sakama. Marco abductivo para el cambio de teoría no monotónica. En: Proc. IJCAI-95, pp. 204-210, Morgan Kaufmann.[9] A. C. Kakas, R. A. Kowalski y F. Toni, El papel de la abducción en la programación lógica. En: Handbook of Logic in AI y Logic Programming, D. M. Gabbay, et al.(eds), vol.5, pp. 235-324, Oxford University Press, 1998. [10] A. C. Kakas y P. Moraitis. Negociación de agentes adaptativos a través de la argumentación. En: Proc. AAMAS-06, pp. 384-391, ACM Press.[11] T. Meyer, N. Foo, R. Kwok y D. Zhang. Fundación lógica de la negociación: resultado, concesión y adaptación. En: Proc. AAAI-04, pp. 293-298, MIT Press.[12] R. S. Michalski. Una teoría y metodología de aprendizaje inductivo. En: Aprendizaje automático: un enfoque de inteligencia artificial, R. S. Michalski, et al.(eds), pp. 83-134, Morgan Kaufmann, 1983. [13] S. Parsons, C. Sierra y N. Jennings. Agentes que razonan y negocian discutiendo. Journal of Logic and Computation, 8 (3): 261-292, 1988. [14] F. Sadri, F. Toni y P. torroni, una arquitectura de programación de lógica abductiva para los agentes negociadores. En: Proc.8º conf. Europeo.Sobre lógicos en AI, LNAi 2424, pp. 419-431, Springer, 2002. [15] C. Sakama y K. Inoue. Un marco abductivo para calcular actualizaciones de la base de conocimiento. Teoría y práctica de la programación lógica 3 (6): 671-715, 2003. El sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 1029",
    "original_sentences": [
        "Negotiation by Abduction and Relaxation Chiaki Sakama Dept.",
        "Computer and Communication Sciences Wakayama University Sakaedani, Wakayama 640 8510, Japan sakama@sys.wakayama-u.ac.jp Katsumi Inoue National Institute of Informatics 2-1-2 Hitotsubashi, Chiyoda-ku Tokyo 101 8430, Japan ki@nii.ac.jp ABSTRACT This paper studies a logical framework for automated negotiation between two agents.",
        "We suppose an agent who has a knowledge base represented by a logic program.",
        "Then, we introduce methods of constructing counter-proposals in response to proposals made by an agent.",
        "To this end, we combine the techniques of extended abduction in artificial intelligence and relaxation in cooperative query answering for databases.",
        "These techniques are respectively used for producing conditional proposals and neighborhood proposals in the process of negotiation.",
        "We provide a negotiation protocol based on the exchange of these proposals and develop procedures for computing new proposals.",
        "Categories and Subject Descriptors F.4.1 [Mathematical Logic]: Logic and constraint programming;; I.2.11 [Distributed Artificial Intelligence]: Multiagent systems General Terms Theory 1.",
        "INTRODUCTION Automated negotiation has been received increasing attention in multi-agent systems, and a number of frameworks have been proposed in different contexts ([1, 2, 3, 5, 10, 11, 13, 14], for instance).",
        "Negotiation usually proceeds in a series of rounds and each agent makes a proposal at every round.",
        "An agent that received a proposal responds in two ways.",
        "One is a critique which is a remark as to whether or not (parts of) the proposal is accepted.",
        "The other is a counter-proposal which is an alternative proposal made in response to a previous proposal [13].",
        "To see these proposals in one-to-one negotiation, suppose the following negotiation dialogue between a buyer agent B and a seller agent S. (Bi (or Si) represents an utterance of B (or S) in the i-th round.)",
        "B1: I want to buy a personal computer of the brand b1, with the specification of CPU:1GHz, Memory:512MB, HDD: 80GB, and a DVD-RW driver.",
        "I want to get it at the price under 1200 USD.",
        "S1: We can provide a PC with the requested specification if you pay for it by cash.",
        "In this case, however, service points are not added for this special discount.",
        "B2: I cannot pay it by cash.",
        "S2: In a normal price, the requested PC costs 1300 USD.",
        "B3: I cannot accept the price.",
        "My budget is under 1200 USD.",
        "S3: We can provide another computer with the requested specification, except that it is made by the brand b2.",
        "The price is exactly 1200 USD.",
        "B4: I do not want a PC of the brand b2.",
        "Instead, I can downgrade a driver from DVD-RW to CD-RW in my initial proposal.",
        "S4: Ok, I accept your offer.",
        "In this dialogue, in response to the opening proposal B1, the counter-proposal S1 is returned.",
        "In the rest of the dialogue, B2, B3, S4 are critiques, while S2, S3, B4 are counterproposals.",
        "Critiques are produced by evaluating a proposal in a knowledge base of an agent.",
        "In contrast, making counter-proposals involves generating an alternative proposal which is more favorable to the responding agent than the original one.",
        "It is known that there are two ways of producing counterproposals: extending the initial proposal or amending part of the initial proposal.",
        "According to [13], the first type appears in the dialogue: A: I propose that you provide me with service X.",
        "B: I propose that I provide you with service X if you provide me with service Z.",
        "The second type is in the dialogue: A: I propose that I provide you with service Y if you provide me with service X.",
        "B: I propose that I provide you with service X if you provide me with service Z.",
        "A negotiation proceeds by iterating such give-andtake dialogues until it reaches an agreement/disagreement.",
        "In those dialogues, agents generate (counter-)proposals by reasoning on their own goals or objectives.",
        "The objective of the agent A in the above dialogues is to obtain service X.",
        "The agent B proposes conditions to provide the service.",
        "In the process of negotiation, however, it may happen that agents are obliged to weaken or change their initial goals to reach a negotiated compromise.",
        "In the dialogue of 1022 978-81-904262-7-5 (RPS) c 2007 IFAAMAS a buyer agent and a seller agent presented above, a buyer agent changes its initial goal by downgrading a driver from DVD-RW to CD-RW.",
        "Such behavior is usually represented as specific meta-knowledge of an agent or specified as negotiation protocols in particular problems.",
        "Currently, there is no computational logic for automated negotiation which has general inference rules for producing (counter-)proposals.",
        "The purpose of this paper is to mechanize a process of building (counter-)proposals in one-to-one negotiation dialogues.",
        "We suppose an agent who has a knowledge base represented by a logic program.",
        "We then introduce methods for generating three different types of proposals.",
        "First, we use the technique of extended abduction in artificial intelligence [8, 15] to construct a conditional proposal as an extension of the original one.",
        "Second, we use the technique of relaxation in cooperative query answering for databases [4, 6] to construct a neighborhood proposal as an amendment of the original one.",
        "Third, combining extended abduction and relaxation, conditional neighborhood proposals are constructed as amended extensions of the original proposal.",
        "We develop a negotiation protocol between two agents based on the exchange of these counter-proposals and critiques.",
        "We also provide procedures for computing proposals in logic programming.",
        "This paper is organized as follows.",
        "Section 2 introduces a logical framework used in this paper.",
        "Section 3 presents methods for constructing proposals, and provides a negotiation protocol.",
        "Section 4 provides methods for computing proposals in logic programming.",
        "Section 5 discusses related works, and Section 6 concludes the paper. 2.",
        "PRELIMINARIES Logic programs considered in this paper are extended disjunctive programs (EDP) [7].",
        "An EDP (or simply a program) is a set of rules of the form: L1 ; · · · ; Ll ← Ll+1 , . . . , Lm, not Lm+1 , . . . , not Ln (n ≥ m ≥ l ≥ 0) where each Li is a positive/negative literal, i.e., A or ¬A for an atom A, and not is negation as failure (NAF). not L is called an NAF-literal.",
        "The symbol ; represents disjunction.",
        "The left-hand side of the rule is the head, and the right-hand side is the body.",
        "For each rule r of the above form, head(r), body+ (r) and body− (r) denote the sets of literals {L1, . . . , Ll}, {Ll+1, . . . , Lm}, and {Lm+1, . . . , Ln}, respectively.",
        "Also, not body− (r) denotes the set of NAF-literals {not Lm+1, . . . , not Ln}.",
        "A disjunction of literals and a conjunction of (NAF-)literals in a rule are identified with its corresponding sets of literals.",
        "A rule r is often written as head(r) ← body+ (r), not body− (r) or head(r) ← body(r) where body(r) = body+ (r)∪not body− (r).",
        "A rule r is disjunctive if head(r) contains more than one literal.",
        "A rule r is an integrity constraint if head(r) = ∅; and r is a fact if body(r) = ∅.",
        "A program is NAF-free if no rule contains NAF-literals.",
        "Two rules/literals are identified with respect to variable renaming.",
        "A substitution is a mapping from variables to terms θ = {x1/t1, . . . , xn/tn}, where x1, . . . , xn are distinct variables and each ti is a term distinct from xi.",
        "Given a conjunction G of (NAF-)literals, Gθ denotes the conjunction obtained by applying θ to G. A program, rule, or literal is ground if it contains no variable.",
        "A program P with variables is a shorthand of its ground instantiation Ground(P), the set of ground rules obtained from P by substituting variables in P by elements of its Herbrand universe in every possible way.",
        "The semantics of an EDP is defined by the answer set semantics [7].",
        "Let Lit be the set of all ground literals in the language of a program.",
        "Suppose a program P and a set of literals S(⊆ Lit).",
        "Then, the reduct P S is the program which contains the ground rule head(r) ← body+ (r) iff there is a rule r in Ground(P) such that body− (r)∩S = ∅.",
        "Given an NAF-free EDP P, Cn(P) denotes the smallest set of ground literals which is (i) closed under P, i.e., for every ground rule r in Ground(P), body(r) ⊆ Cn(P) implies head(r) ∩ Cn(P) = ∅; and (ii) logically closed, i.e., it is either consistent or equal to Lit.",
        "Given an EDP P and a set S of literals, S is an answer set of P if S = Cn(P S ).",
        "A program has none, one, or multiple answer sets in general.",
        "An answer set is consistent if it is not Lit.",
        "A program P is consistent if it has a consistent answer set; otherwise, P is inconsistent.",
        "Abductive logic programming [9] introduces a mechanism of hypothetical reasoning to logic programming.",
        "An abductive framework used in this paper is the extended abduction introduced by Inoue and Sakama [8, 15].",
        "An abductive program is a pair P, H where P is an EDP and H is a set of literals called abducibles.",
        "When a literal L ∈ H contains variables, any instance of L is also an abducible.",
        "An abductive program P, H is consistent if P is consistent.",
        "Throughout the paper, abductive programs are assumed to be consistent unless stated otherwise.",
        "Let G = L1, . . . , Lm, not Lm+1, . . . , not Ln be a conjunction, where all variables in G are existentially quantified at the front and range-restricted, i.e., every variable in Lm+1, . . . , Ln appears in L1, . . . , Lm.",
        "A set S of ground literals satisfies the conjunction G if { L1θ, . . . , Lmθ } ⊆ S and { Lm+1θ, . . . , Lnθ }∩ S = ∅ for some ground instance Gθ with a substitution θ.",
        "Let P, H be an abductive program and G a conjunction as above.",
        "A pair (E, F) is an explanation of an observation G in P, H if1 1. (P \\ F) ∪ E has an answer set which satisfies G, 2. (P \\ F) ∪ E is consistent, 3.",
        "E and F are sets of ground literals such that E ⊆ H\\P and F ⊆ H ∩ P. When (P \\ F) ∪ E has an answer set S satisfying the above three conditions, S is called a belief set of an abductive program P, H satisfying G (with respect to (E, F)).",
        "Note that if P has a consistent answer set S satisfying G, S is also a belief set of P, H satisfying G with respect to (E, F) = (∅, ∅).",
        "Extended abduction introduces/removes hypotheses to/from a program to explain an observation.",
        "Note that normal abduction (as in [9]) considers only introducing hypotheses to explain an observation.",
        "An explanation (E, F) of an observation G is called minimal if for any explanation (E , F ) of G, E ⊆ E and F ⊆ F imply E = E and F = F. Example 2.1.",
        "Consider the abductive program P, H : P : flies(x) ← bird(x), not ab(x) , ab(x) ← broken-wing(x) , bird(tweety) ← , bird(opus) ← , broken-wing(tweety) ← .",
        "H : broken-wing(x) .",
        "The observation G = flies(tweety) has the minimal explanation (E, F) = (∅, {broken-wing(tweety)}). 1 This defines credulous explanations [15].",
        "Skeptical explanations are used in [8].",
        "The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1023 3.",
        "NEGOTIATION 3.1 Conditional Proposals by Abduction We suppose an agent who has a knowledge base represented by an abductive program P, H .",
        "A program P consists of two types of knowledge, belief B and desire D, where B represents objective knowledge of an agent, while D represents subjective knowledge in general.",
        "We define P = B ∪ D, but do not distinguish B and D if such distinction is not important in the context.",
        "In contrast, abducibles H are used for representing permissible conditions to make a compromise in the process of negotiation.",
        "Definition 3.1.",
        "A proposal G is a conjunction of literals and NAF-literals: L1, . . . , Lm, not Lm+1, . . . , not Ln where every variable in G is existentially quantified at the front and range-restricted.",
        "In particular, G is called a critique if G = accept or G = reject where accept and reject are the reserved propositions.",
        "A counter-proposal is a proposal made in response to a proposal.",
        "Definition 3.2.",
        "A proposal G is accepted in an abductive program P, H if P has an answer set satisfying G. When a proposal is not accepted, abduction is used for seeking conditions to make it acceptable.",
        "Definition 3.3.",
        "Let P, H be an abductive program and G a proposal.",
        "If (E, F) is a minimal explanation of Gθ for some substitution θ in P, H , the conjunction G : Gθ, E, not F is called a conditional proposal (for G), where E, not F represents the conjunction: A1, . . . , Ak, not Ak+1, . . . , not Al for E = {A1, . . . , Ak} and F = { Ak+1, . . . , Al }.",
        "Proposition 3.1.",
        "Let P, H be an abductive program and G a proposal.",
        "If G is a conditional proposal, there is a belief set S of P, H satisfying G .",
        "Proof.",
        "When G = Gθ, E, not F, (P \\ F) ∪ E has a consistent answer set S satisfying Gθ and E ∩ F = ∅.",
        "In this case, S satisfies Gθ, E, not F. A conditional proposal G provides a minimal requirement for accepting the proposal G. If Gθ has multiple minimal explanations, several conditional proposals exist accordingly.",
        "When (E, F) = (∅, ∅), a conditional proposal is used as a new proposal made in response to the proposal G. Example 3.1.",
        "An agent seeks a position of a research assistant at the computer department of a university with the condition that the salary is at least 50,000 USD per year.",
        "The agent makes his/her request as the proposal:2 G = assist(compt dept), salary(x), x ≥ 50, 000.",
        "The university has the abductive program P, H : P : salary(40, 000) ← assist(compt dept), not has PhD, salary(60, 000) ← assist(compt dept), has PhD, salary(50, 000) ← assist(math dept), salary(55, 000) ← system admin(compt dept), 2 For notational convenience, we often include mathematical (in)equations in proposals/programs.",
        "They are written by literals, for instance, x ≥ y by geq(x, y) with a suitable definition of the predicate geq. employee(x) ← assist(x), employee(x) ← system admin(x), assist(compt dept); assist(math dept) ; system admin(compt dept) ←, H : has PhD, where available positions are represented by disjunction.",
        "According to P, the base salary of a research assistant at the computer department is 40,000 USD, but if he/she has PhD, it is 60,000 USD.",
        "In this case, (E, F) = ({has PhD}, ∅) becomes the minimal explanation of Gθ = assist(compt dept), salary(60, 000) with θ = { x/60, 000 }.",
        "Then, the conditional proposal made by the university becomes assist(compt dept), salary(60, 000), has PhD . 3.2 Neighborhood Proposals by Relaxation When a proposal is unacceptable, an agent tries to construct a new counter-proposal by weakening constraints in the initial proposal.",
        "We use techniques of relaxation for this purpose.",
        "Relaxation is used as a technique of cooperative query answering in databases [4, 6].",
        "When an original query fails in a database, relaxation expands the scope of the query by relaxing the constraints in the query.",
        "This allows the database to return neighborhood answers which are related to the original query.",
        "We use the technique for producing proposals in the process of negotiation.",
        "Definition 3.4.",
        "Let P, H be an abductive program and G a proposal.",
        "Then, G is relaxed to G in the following three ways: Anti-instantiation: Construct G such that G θ = G for some substitution θ.",
        "Dropping conditions: Construct G such that G ⊂ G. Goal replacement: If G is a conjunction G1, G2, where G1 and G2 are conjunctions, and there is a rule L ← G1 in P such that G1θ = G1 for some substitution θ, then build G as Lθ, G2.",
        "Here, Lθ is called a replaced literal.",
        "In each case, every variable in G is existentially quantified at the front and range-restricted.",
        "Anti-instantiation replaces constants (or terms) with fresh variables.",
        "Dropping conditions eliminates some conditions in a proposal.",
        "Goal replacement replaces the condition G1 in G with a literal Lθ in the presence of a rule L ← G1 in P under the condition G1θ = G1.",
        "All these operations generalize proposals in different ways.",
        "Each G obtained by these operations is called a relaxation of G. It is worth noting that these operations are also used in the context of inductive generalization [12].",
        "The relaxed proposal can produce new offers which are neighbor to the original proposal.",
        "Definition 3.5.",
        "Let P, H be an abductive program and G a proposal. 1.",
        "Let G be a proposal obtained by anti-instantiation.",
        "If P has an answer set S which satisfies G θ for some substitution θ and G θ = G, G θ is called a neighborhood proposal by anti-instantiation. 2.",
        "Let G be a proposal obtained by dropping conditions.",
        "If P has an answer set S which satisfies G θ for some substitution θ, G θ is called a neighborhood proposal by dropping conditions. 1024 The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.",
        "Let G be a proposal obtained by goal replacement.",
        "For a replaced literal L ∈ G and a rule H ← B in P such that L = Hσ and (G \\ {L}) ∪ Bσ = G for some substitution σ, put G = (G \\ {L}) ∪ Bσ.",
        "If P has an answer set S which satisfies G θ for some substitution θ, G θ is called a neighborhood proposal by goal replacement.",
        "Example 3.2. (cont.",
        "Example 3.1) Given the proposal G = assist(compt dept), salary(x), x ≥ 50, 000, • G1 = assist(w), salary(x), x ≥ 50, 000 is produced by substituting compt dept with a variable w. As G1θ1 = assist(math dept), salary(50, 000) with θ1 = { w/math dept } is satisfied by an answer set of P, G1θ1 becomes a neighborhood proposal by anti-instantiation. • G2 = assist(compt dept), salary(x) is produced by dropping the salary condition x ≥ 50, 000.",
        "As G2θ2 = assist(compt dept), salary(40, 000) with θ2 = { x/40, 000 } is satisfied by an answer set of P, G2θ2 becomes a neighborhood proposal by dropping conditions. • G3 = employee(compt dept), salary(x), x ≥ 50, 000 is produced by replacing assist(compt dept) with employee(compt dept) using the rule employee(x) ← assist(x) in P. By G3 and the rule employee(x) ← system admin(x) in P, G3 = sys admin(compt dept), salary(x), x ≥ 50, 000 is produced.",
        "As G3 θ3 = sys admin(compt dept), salary(55, 000) with θ3 = { x/55, 000 } is satisfied by an answer set of P, G3 θ3 becomes a neighborhood proposal by goal replacement.",
        "Finally, extended abduction and relaxation are combined to produce conditional neighborhood proposals.",
        "Definition 3.6.",
        "Let P, H be an abductive program and G a proposal. 1.",
        "Let G be a proposal obtained by either anti-instantiation or dropping conditions.",
        "If (E, F) is a minimal explanation of G θ(= G) for some substitution θ, the conjunction G θ, E, not F is called a conditional neighborhood proposal by anti-instantiation/dropping conditions. 2.",
        "Let G be a proposal obtained by goal replacement.",
        "Suppose G as in Definition 3.5(3).",
        "If (E, F) is a minimal explanation of G θ for some substitution θ, the conjunction G θ, E, not F is called a conditional neighborhood proposal by goal replacement.",
        "A conditional neighborhood proposal reduces to a neighborhood proposal when (E, F) = (∅, ∅). 3.3 Negotiation Protocol A negotiation protocol defines how to exchange proposals in the process of negotiation.",
        "This section presents a negotiation protocol in our framework.",
        "We suppose one-to-one negotiation between two agents who have a common ontology and the same language for successful communication.",
        "Definition 3.7.",
        "A proposal L1, ..., Lm, not Lm+1, ..., not Ln violates an integrity constraint ← body+ (r), not body− (r) if for any substitution θ, there is a substitution σ such that body+ (r)σ ⊆ { L1θ, . . . , Lmθ }, body− (r)σ∩{ L1θ, . . . , Lmθ } = ∅, and body− (r)σ ⊆ { Lm+1θ, . . . , Lnθ }.",
        "Integrity constraints are conditions which an agent should satisfy, so that they are used to explain why an agent does not accept a proposal.",
        "A negotiation proceeds in a series of rounds.",
        "Each i-th round (i ≥ 1) consists of a proposal Gi 1 made by one agent Ag1 and another proposal Gi 2 made by the other agent Ag2.",
        "Definition 3.8.",
        "Let P1, H1 be an abductive program of an agent Ag1 and Gi 2 a proposal made by Ag2 at the i-th round.",
        "A critique set of Ag1 (at the i-th round) is a set CSi 1(P1, Gj 2) = CSi−1 1 (P1, Gj−1 2 ) ∪ { r | r is an integrity constraint in P1 and Gj 2 violates r } where j = i − 1 or i, and CS0 1 (P1, G0 2) = CS1 1 (P1, G0 2) = ∅.",
        "A critique set of an agent Ag1 accumulates integrity constraints which are violated by proposals made by another agent Ag2.",
        "CSi 2(P2, Gj 1) is defined in the same manner.",
        "Definition 3.9.",
        "Let Pk, Hk be an abductive program of an agent Agk and Gj a proposal, which is not a critique, made by any agent at the j(≤ i)-th round.",
        "A negotiation set of Agk (at the i-th round) is a triple NSi k = (Si c, Si n, Si cn), where Si c is the set of conditional proposals, Si n is the set of neighborhood proposals, and Si cn is the set of conditional neighborhood proposals, produced by Gj and Pk, Hk .",
        "A negotiation set represents the space of possible proposals made by an agent.",
        "Si x (x ∈ {c, n, cn}) accumulates proposals produced by Gj (1 ≤ j ≤ i) according to Definitions 3.3, 3.5, and 3.6.",
        "Note that an agent can construct counter-proposals by modifying its own previous proposals or another agents proposals.",
        "An agent Agk accumulates proposals that are made by Agk but are rejected by another agent, in the failed proposal set FP i k (at the i-th round), where FP 0 k = ∅.",
        "Suppose two agents Ag1 and Ag2 who have abductive programs P1, H1 and P2, H2 , respectively.",
        "Given a proposal G1 1 which is satisfied by an answer set of P1, a negotiation starts.",
        "In response to the proposal Gi 1 made by Ag1 at the i-th round, Ag2 behaves as follows. 1.",
        "If Gi 1 = accept, an agreement is reached and negotiation ends in success. 2.",
        "Else if Gi 1 = reject, put FP i 2 = FPi−1 2 ∪{Gi−1 2 } where {G0 2} = ∅.",
        "Proceed to the step 4(b). 3.",
        "Else if P2 has an answer set satisfying Gi 1, Ag2 returns Gi 2 = accept to Ag1.",
        "Negotiation ends in success. 4.",
        "Otherwise, Ag2 behaves as follows.",
        "Put FP i 2 = FPi−1 2 . (a) If Gi 1 violates an integrity constraint in P2, return the critique Gi 2 = reject to Ag1, together with the critique set CSi 2(P2, Gi 1). (b) Otherwise, construct NSi 2 as follows. (i) Produce Si c. Let μ(Si c) = { p | p ∈ Si c \\ FPi 2 and p satisfies the constraints in CSi 1(P1, Gi−1 2 )}.",
        "If μ(Si c) = ∅, select one from μ(Si c) and propose it as Gi 2 to Ag1; otherwise, go to (ii). (ii) Produce Si n. If μ(Si n) = ∅, select one from μ(Si n) and propose it as Gi 2 to Ag1; otherwise, go to (iii). (iii) Produce Si cn.",
        "If μ(Si cn) = ∅, select one from μ(Si cn) and propose it as Gi 2 to Ag1; otherwise, negotiation ends in failure.",
        "This means that Ag2 can make no counter-proposal or every counterproposal made by Ag2 is rejected by Ag1.",
        "In the step 4(a), Ag2 rejects the proposal Gi 1 and returns the reason of rejection as a critique set.",
        "This helps for Ag1 The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1025 in preparing a next counter-proposal.",
        "In the step 4(b), Ag2 constructs a new proposal.",
        "In its construction, Ag2 should take care of the critique set CSi 1(P1, Gi−1 2 ), which represents integrity constraints, if any, accumulated in previous rounds, that Ag1 must satisfy.",
        "Also, FP i 2 is used for removing proposals which have been rejected.",
        "Construction of Si x (x ∈ {c, n, cn}) in NSi 2 is incrementally done by adding new counter-proposals produced by Gi 1 or Gi−1 2 to Si−1 x .",
        "For instance, Si n in NSi 2 is computed as Si n = Si−1 n ∪{ p | p is a neighborhood proposal made by Gi 1 } ∪ { p | p is a neighborhood proposal made by Gi−1 2 }, where S0 n = ∅.",
        "That is, Si n is constructed from Si−1 n by adding new proposals which are obtained by modifying the proposal Gi 1 made by Ag1 at the i-th round or modifying the proposal Gi−1 2 made by Ag2 at the (i − 1)-th round.",
        "Si c and Si cn are obtained as well.",
        "In the above protocol, an agent produces Si c at first, secondly Si n, and finally Si cn.",
        "This strategy seeks conditions which satisfy the given proposal, prior to neighborhood proposals which change the original one.",
        "Another strategy, which prefers neighborhood proposals to conditional ones, is also considered.",
        "Conditional neighborhood proposals are to be considered in the last place, since they differ from the original one to the maximal extent.",
        "The above protocol produces the candidate proposals in Si x for each x ∈ {c, n, cn} at once.",
        "We can consider a variant of the protocol in which each proposal in Si x is constructed one by one (see Example 3.3).",
        "The above protocol is repeatedly applied to each one of the two negotiating agents until a negotiation ends in success/failure.",
        "Formally, the above negotiation protocol has the following properties.",
        "Theorem 3.2.",
        "Let Ag1 and Ag2 be two agents having abductive programs P1, H1 and P2, H2 , respectively. 1.",
        "If P1, H1 and P2, H2 are function-free (i.e., both Pi and Hi contain no function symbol), any negotiation will terminate. 2.",
        "If a negotiation terminates with agreement on a proposal G, both P1, H1 and P2, H2 have belief sets satisfying G. Proof. 1.",
        "When an abductive program is function-free, abducibles and negotiation sets are both finite.",
        "Moreover, if a proposal is once rejected, it is not proposed again by the function μ.",
        "Thus, negotiation will terminate in finite steps. 2.",
        "When a proposal G is made by Ag1, P1, H1 has a belief set satisfying G. If the agent Ag2 accepts the proposal G, it is satisfied by an answer set of P2 which is also a belief set of P2, H2 .",
        "Example 3.3.",
        "Suppose a buying-selling situation in the introduction.",
        "A seller agent has the abductive program Ps, Hs in which Ps consists of belief Bs and desire Ds: Bs : pc(b1, 1G, 512M, 80G) ; pc(b2, 1G, 512M, 80G) ←,(1) dvd-rw ; cd-rw ←, (2) Ds : normal price(1300) ← pc(b1, 1G, 512M, 80G), dvd-rw, (3) normal price(1200) ← pc(b1, 1G, 512M, 80G), cd-rw, (4) normal price(1200) ← pc(b2, 1G, 512M, 80G), dvd-rw, (5) price(x) ← normal price(x), add point, (6) price(x ∗ 0.9) ← normal price(x), pay cash, not add point,(7) add point ←, (8) Hs : add point, pay cash.",
        "Here, (1) and (2) represent selection of products.",
        "The atom pc(b1, 1G, 512M, 80G) represents that the seller agent has a PC of the brand b1 such that CPU is 1GHz, memory is 512MB, and HDD is 80GB.",
        "Prices of products are represented as desire of the seller.",
        "The rules (3) - (5) are normal prices of products.",
        "A normal price is a selling price on the condition that service points are added (6).",
        "On the other hand, a discount price is applied if the paying method is cash and no service point is added (7).",
        "The fact (8) represents the addition of service points.",
        "This service would be withdrawn in case of discount prices, so add point is specified as an abducible.",
        "A buyer agent has the abductive program Pb, Hb in which Pb consists of belief Bb and desire Db: Bb : drive ← dvd-rw, (9) drive ← cd-rw, (10) price(x) ←, (11) Db : pc(b1, 1G, 512M, 80G) ←, (12) dvd-rw ←, (13) cd-rw ← not dvd-rw, (14) ← pay cash, (15) ← price(x), x > 1200, (16) Hb : dvd-rw.",
        "Rules (12) - (16) are the buyers desire.",
        "Among them, (15) and (16) impose constraints for buying a PC.",
        "A DVD-RW is specified as an abducible which is subject to concession. (1st round) First, the following proposal is given by the buyer agent: G1 b : pc(b1, 1G, 512M, 80G), dvd-rw, price(x), x ≤ 1200.",
        "As Ps has no answer set which satisfies G1 b , the seller agent cannot accept the proposal.",
        "The seller takes an action of making a counter-proposal and performs abduction.",
        "As a result, the seller finds the minimal explanation (E, F) = ({ pay cash }, { add point }) which explains G1 b θ1 with θ1 = { x/1170 }.",
        "The seller constructs the conditional proposal: G1 s : pc(b1, 1G, 512M, 80G), dvd-rw, price(1170), pay cash, not add point and offers it to the buyer. (2nd round) The buyer does not accept G1 s because he/she cannot pay it by cash (15).",
        "The buyer then returns the critique G2 b = reject to the seller, together with the critique set CS2 b (Pb, G1 s) = {(15)}.",
        "In response to this, the seller tries to make another proposal which satisfies the constraint in this critique set.",
        "As G1 s is stored in FP 2 s and no other conditional proposal satisfying the buyers requirement exists, the seller produces neighborhood proposals.",
        "He/she relaxes G1 b by dropping x ≤ 1200 in the condition, and produces pc(b1, 1G, 512M, 80G), dvd-rw, price(x).",
        "As Ps has an answer set which satisfies G2 s : pc(b1, 1G, 512M, 80G), dvd-rw, price(1300), 1026 The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) the seller offers G2 s as a new counter-proposal. (3rd round) The buyer does not accept G2 s because he/she cannot pay more than 1200USD (16).",
        "The buyer again returns the critique G3 b = reject to the seller, together with the critique set CS3 b (Pb, G2 s) = CS2 b (Pb, G1 s) ∪ {(16)}.",
        "The seller then considers another proposal by replacing b1 with a variable w, G1 b now becomes pc(w, 1G, 512M, 80G), dvd-rw, price(x), x ≤ 1200.",
        "As Ps has an answer set which satisfies G3 s : pc(b2, 1G, 512M, 80G), dvd-rw, price(1200), the seller offers G3 s as a new counter-proposal. (4th round) The buyer does not accept G3 s because a PC of the brand b2 is out of his/her interest and Pb has no answer set satisfying G3 s. Then, the buyer makes a concession by changing his/her original goal.",
        "The buyer relaxes G1 b by goal replacement using the rule (9) in Pb, and produces pc(b1, 1G, 512M, 80G), drive, price(x), x ≤ 1200.",
        "Using (10), the following proposal is produced: pc(b1, 1G, 512M, 80G), cd-rw, price(x), x ≤ 1200.",
        "As Pb \\ { dvd-rw } has a consistent answer set satisfying the above proposal, the buyer proposes the conditional neighborhood proposal G4 b : pc(b1, 1G, 512M, 80G), cd-rw, not dvd-rw, price(x), x ≤ 1200 to the seller agent.",
        "Since Ps also has an answer set satisfying G4 b , the seller accepts it and sends the message G4 s = accept to the buyer.",
        "Thus, the negotiation ends in success. 4.",
        "COMPUTATION In this section, we provide methods of computing proposals in terms of answer sets of programs.",
        "We first introduce some definitions from [15].",
        "Definition 4.1.",
        "Given an abductive program P, H , the set UR of update rules is defined as: UR = { L ← not L, L ← not L | L ∈ H } ∪ { +L ← L | L ∈ H \\ P } ∪ { −L ← not L | L ∈ H ∩ P } , where L, +L, and −L are new atoms uniquely associated with every L ∈ H. The atoms +L and −L are called update atoms.",
        "By the definition, the atom L becomes true iff L is not true.",
        "The pair of rules L ← not L and L ← not L specify the situation that an abducible L is true or not.",
        "When p(x) ∈ H and p(a) ∈ P but p(t) ∈ P for t = a, the rule +L ← L precisely becomes +p(t) ← p(t) for any t = a.",
        "In this case, the rule is shortly written as +p(x) ← p(x), x = a.",
        "Generally, the rule becomes +p(x) ← p(x), x = t1, . . . , x = tn for n such instances.",
        "The rule +L ← L derives the atom +L if an abducible L which is not in P is to be true.",
        "In contrast, the rule −L ← not L derives the atom −L if an abducible L which is in P is not to be true.",
        "Thus, update atoms represent the change of truth values of abducibles in a program.",
        "That is, +L means the introduction of L, while −L means the deletion of L. When an abducible L contains variables, the associated update atom +L or −L is supposed to have exactly the same variables.",
        "In this case, an update atom is semantically identified with its ground instances.",
        "The set of all update atoms associated with the abducibles in H is denoted by UH, and UH = UH+ ∪ UH− where UH+ (resp.",
        "UH− ) is the set of update atoms of the form +L (resp. −L).",
        "Definition 4.2.",
        "Given an abductive program P, H , its update program UP is defined as the program UP = (P \\ H) ∪ UR .",
        "An answer set S of UP is called U-minimal if there is no answer set T of UP such that T ∩ UH ⊂ S ∩ UH.",
        "By the definition, U-minimal answer sets exist whenever UP has answer sets.",
        "Update programs are used for computing (minimal) explanations of an observation.",
        "Given an observation G as a conjunction of literals and NAF-literals possibly containing variables, we introduce a new ground literal O together with the rule O ← G. In this case, O has an explanation (E, F) iff G has the same explanation.",
        "With this replacement, an observation is assumed to be a ground literal without loss of generality.",
        "In what follows, E+ = { +L | L ∈ E } and F − = { −L | L ∈ F } for E ⊆ H and F ⊆ H. Proposition 4.1. ([15]) Let P, H be an abductive program, UP its update program, and G a ground literal representing an observation.",
        "Then, a pair (E, F) is an explanation of G iff UP ∪ { ← not G } has a consistent answer set S such that E+ = S ∩ UH+ and F− = S ∩ UH− .",
        "In particular, (E, F) is a minimal explanation iff S is a U-minimal answer set.",
        "Example 4.1.",
        "To explain the observation G = flies(t) in the program P of Example 2.1, first construct the update program UP of P:3 UP : flies(x) ← bird(x), not ab(x), ab(x) ← broken-wing(x) , bird(t) ← , bird(o) ← , broken-wing(x) ← not broken-wing(x), broken-wing(x) ← not broken-wing(x), +broken-wing(x) ← broken-wing(x), x = t , −broken-wing(t) ← not broken-wing(t) .",
        "Next, consider the program UP ∪ { ← not flies(t) }.",
        "It has the single U-minimal answer set: S = { bird(t), bird(o), flies(t), flies(o), broken-wing(t), broken-wing(o), −broken-wing(t) }.",
        "The unique minimal explanation (E, F) = (∅, {broken-wing(t)}) of G is expressed by the update atom −broken-wing(t) in S ∩ UH− .",
        "Proposition 4.2.",
        "Let P, H be an abductive program and G a ground literal representing an observation.",
        "If P ∪ { ← not G } has a consistent answer set S, G has the minimal explanation (E, F) = (∅, ∅) and S satisfies G. Now we provide methods for computing (counter-)proposals.",
        "First, conditional proposals are computed as follows. input : an abductive program P, H , a proposal G; output : a set Sc of proposals.",
        "If G is a ground literal, compute its minimal explanation (E, F) in P, H using the update program.",
        "Put G, E, not F in Sc.",
        "Else if G is a conjunction possibly containing variables, consider the abductive program 3 t represents tweety and o represents opus.",
        "The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1027 P ∪{ O ← G }, H with a ground literal O. Compute a minimal explanation of O in P ∪ { O ← G }, H using its update program.",
        "If O has a minimal explanation (E, F) with a substitution θ for variables in G, put Gθ, E, not F in Sc.",
        "Next, neighborhood proposals are computed as follows. input : an abductive program P, H , a proposal G; output : a set Sn of proposals. % neighborhood proposals by anti-instantiation; Construct G by anti-instantiation.",
        "For a ground literal O, if P ∪ { O ← G } ∪ { ← not O } has a consistent answer set satisfying G θ with a substitution θ and G θ = G, put G θ in Sn. % neighborhood proposals by dropping conditions; Construct G by dropping conditions.",
        "If G is a ground literal and the program P ∪ { ← not G } has a consistent answer set, put G in Sn.",
        "Else if G is a conjunction possibly containing variables, do the following.",
        "For a ground literal O, if P ∪{ O ← G }∪{ ← not O } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn. % neighborhood proposals by goal replacement; Construct G by goal replacement.",
        "If G is a ground literal and there is a rule H ← B in P such that G = Hσ and Bσ = G for some substitution σ, put G = Bσ.",
        "If P ∪ { ← not G } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn.",
        "Else if G is a conjunction possibly containing variables, do the following.",
        "For a replaced literal L ∈ G , if there is a rule H ← B in P such that L = Hσ and (G \\ {L}) ∪ Bσ = G for some substitution σ, put G = (G \\ {L}) ∪ Bσ.",
        "For a ground literal O, if P ∪ { O ← G } ∪ { ← not O } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn.",
        "Theorem 4.3.",
        "The set Sc (resp.",
        "Sn) computed above coincides with the set of conditional proposals (resp. neighborhood proposals).",
        "Proof.",
        "The result for Sc follows from Definition 3.3 and Proposition 4.1.",
        "The result for Sn follows from Definition 3.5 and Proposition 4.2.",
        "Conditional neighborhood proposals are computed by combining the above two procedures.",
        "Those proposals are computed at each round.",
        "Note that the procedure for computing Sn contains some nondeterministic choices.",
        "For instance, there are generally several candidates of literals to relax in a proposal.",
        "Also, there might be several rules in a program for the usage of goal replacement.",
        "In practice, an agent can prespecify literals in a proposal for possible relaxation or rules in a program for the usage of goal replacement. 5.",
        "RELATED WORK As there are a number of literature on automated negotiation, this section focuses on comparison with negotiation frameworks based on logic and argumentation.",
        "Sadri et al. [14] use abductive logic programming as a representation language of negotiating agents.",
        "Agents negotiate using common dialogue primitives, called dialogue moves.",
        "Each agent has an abductive logic program in which a sequence of dialogues are specified by a program, a dialogue protocol is specified as constraints, and dialogue moves are specified as abducibles.",
        "The behavior of agents is regulated by an observe-think-act cycle.",
        "Once a dialogue move is uttered by an agent, another agent that observed the utterance thinks and acts using a proof procedure.",
        "Their approach and ours both employ abductive logic programming as a platform of agent reasoning, but the use of it is quite different.",
        "First, they use abducibles to specify dialogue primitives of the form tell(utterer, receiver, subject, identifier, time), while we use abducibles to specify arbitrary permissible hypotheses to construct conditional proposals.",
        "Second, a program pre-specifies a plan to carry out in order to achieve a goal, together with available/missing resources in the context of resource-exchanging problems.",
        "This is in contrast with our method in which possible counter-proposals are newly constructed in response to a proposal made by an agent.",
        "Third, they specify a negotiation policy inside a program (as integrity constraints), while we give a protocol independent of individual agents.",
        "They provide an operational model that completely specifies the behavior of agents in terms of agent cycle.",
        "We do not provide such a complete specification of the behavior of agents.",
        "Our primary interest is to mechanize construction of proposals.",
        "Bracciali and Torroni [2] formulate abductive agents that have knowledge in abductive logic programs.",
        "To explain an observation, two agents communicate by exchanging integrity constraints.",
        "In the process of communication, an agent can revise its own integrity constraints according to the information provided by the other agent.",
        "A set IC of integrity constraints relaxes a set IC (or IC tightens IC ) if any observation that can be proved with respect to IC can also be proved with respect to IC .",
        "For instance, IC : ← a, b, c relaxes IC : ← a, b.",
        "Thus, they use relaxation for weakening the constraints in an abductive logic program.",
        "In contrast, we use relaxation for weakening proposals and three different relaxation methods, anti-instantiation, dropping conditions, and goal replacement, are considered.",
        "Their goal is to explain an observation by revising integrity constraints of an agent through communication, while we use integrity constraints for communication to explain critiques and help other agents in making counter-proposals.",
        "Meyer et al. [11] introduce a logical framework for negotiating agents.",
        "They introduce two different modes of negotiation: concession and adaptation.",
        "They provide rational postulates to characterize negotiated outcomes between two agents, and describe methods for constructing outcomes.",
        "They provide logical conditions for negotiated outcomes to satisfy, but they do not describe a process of negotiation nor negotiation protocols.",
        "Moreover, they represent agents by classical propositional theories, which is different from our abductive logic programming framework.",
        "Foo et al. [5] model one-to-one negotiation as a one-time encounter between two extended logic programs.",
        "An agent offers an answer set of its program, and their mutual deal is regarded as a trade on their answer sets.",
        "Starting from the initial agreement set S∩T for an answer set S of an agent and an answer set T of another agent, each agent extends this set to reflect its own demand while keeping consistency with demand of the other agent.",
        "Their algorithm returns new programs having answer sets which are consistent with each other and keep the agreement set.",
        "The work is extended to repeated encounters in [3].",
        "In their framework, two agents exchange answer sets to produce a common belief set, which is different from our framework of exchanging proposals.",
        "There are a number of proposals for negotiation based 1028 The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) on argumentation.",
        "An advantage of argumentation-based negotiation is that it constructs a proposal with arguments supporting the proposal [1].",
        "The existence of arguments is useful to convince other agents of reasons why an agent offers (counter-)proposals or returns critiques.",
        "Parsons et al. [13] develop a logic of argumentation-based negotiation among BDI agents.",
        "In one-to-one negotiation, an agent A generates a proposal together with its arguments, and passes it to another agent B.",
        "The proposal is evaluated by B which attempts to build arguments against it.",
        "If it conflicts with Bs interest, B informs A of its objection by sending back its attacking argument.",
        "In response to this, A tries to find an alternative way of achieving its original objective, or a way of persuading B to drop its objection.",
        "If either type of argument can be found, A will submit it to B.",
        "If B finds no reason to reject the new proposal, it will be accepted and the negotiation ends in success.",
        "Otherwise, the process is iterated.",
        "In this negotiation processes, the agent A never changes its original objective, so that negotiation ends in failure if A fails to find an alternative way of achieving the original objective.",
        "In our framework, when a proposal is rejected by another agent, an agent can weaken or change its objective by abduction and relaxation.",
        "Our framework does not have a mechanism of argumentation, but reasons for critiques can be informed by responding critique sets.",
        "Kakas and Moraitis [10] propose a negotiation protocol which integrates abduction within an argumentation framework.",
        "A proposal contains an offer corresponding to the negotiation object, together with supporting information representing conditions under which this offer is made.",
        "Supporting information is computed by abduction and is used for constructing conditional arguments during the process of negotiation.",
        "In their negotiation protocol, when an agent cannot satisfy its own goal, the agent considers the other agents goal and searches for conditions under which the goal is acceptable.",
        "Our present approach differs from theirs in the following points.",
        "First, they use abduction to seek conditions to support arguments, while we use abduction to seek conditions for proposals to accept.",
        "Second, in their negotiation protocol, counter-proposals are chosen among candidates based on preference knowledge of an agent at meta-level, which represents policy under which an agent uses its object-level decision rules according to situations.",
        "In our framework, counter-proposals are newly constructed using abduction and relaxation.",
        "The method of construction is independent of particular negotiation protocols.",
        "As [2, 10, 14], abduction or abductive logic programming used in negotiation is mostly based on normal abduction.",
        "In contrast, our approach is based on extended abduction which can not only introduce hypotheses but remove them from a program.",
        "This is another important difference.",
        "Relaxation and neighborhood query answering are devised to make databases cooperative with their users [4, 6].",
        "In this sense, those techniques have the spirit similar to cooperative problem solving in multi-agent systems.",
        "As far as the authors know, however, there is no study which applies those technique to agent negotiation. 6.",
        "CONCLUSION In this paper we proposed a logical framework for negotiating agents.",
        "To construct proposals in the process of negotiation, we combined the techniques of extended abduction and relaxation.",
        "It was shown that these two operations are used for general inference rules in producing proposals.",
        "We developed a negotiation protocol between two agents based on exchange of proposals and critiques, and provided procedures for computing proposals in abductive logic programming.",
        "This enables us to realize automated negotiation on top of the existing answer set solvers.",
        "The present framework does not have a mechanism of selecting an optimal (counter-)proposal among different alternatives.",
        "To compare and evaluate proposals, an agent must have preference knowledge of candidate proposals.",
        "Further elaboration to maximize the utility of agents is left for future study. 7.",
        "REFERENCES [1] L. Amgoud, S. Parsons, and N. Maudet.",
        "Arguments, dialogue, and negotiation.",
        "In: Proc.",
        "ECAI-00, pp. 338-342, IOS Press, 2000. [2] A. Bracciali and P. Torroni.",
        "A new framework for knowledge revision of abductive agents through their interaction.",
        "In: Proc.",
        "CLIMA-IV, Computational Logic in Multi-Agent Systems, LNAI 3259, pp. 159-177, 2004. [3] W. Chen, M. Zhang, and N. Foo.",
        "Repeated negotiation of logic programs.",
        "In: Proc. 7th Workshop on Nonmonotonic Reasoning, Action and Change, 2006. [4] W. W. Chu, Q. Chen, and R.-C. Lee.",
        "Cooperative query answering via type abstraction hierarchy.",
        "In: Cooperating Knowledge Based Systems, S. M. Deen ed., pp. 271-290, Springer, 1990. [5] N. Foo, T. Meyer, Y. Zhang, and D. Zhang.",
        "Negotiating logic programs.",
        "In: Proc. 6th Workshop on Nonmonotonic Reasoning, Action and Change, 2005. [6] T. Gaasterland, P. Godfrey, and J. Minker.",
        "Relaxation as a platform for cooperative answering.",
        "Journal of Intelligence Information Systems 1(3/4):293-321, 1992. [7] M. Gelfond and V. Lifschitz.",
        "Classical negation in logic programs and disjunctive databases.",
        "New Generation Computing 9:365-385, 1991. [8] K. Inoue and C. Sakama.",
        "Abductive framework for nonmonotonic theory change.",
        "In: Proc.",
        "IJCAI-95, pp. 204-210, Morgan Kaufmann. [9] A. C. Kakas, R. A. Kowalski, and F. Toni, The role of abduction in logic programming.",
        "In: Handbook of Logic in AI and Logic Programming, D. M. Gabbay, et al. (eds), vol. 5, pp. 235-324, Oxford University Press, 1998. [10] A. C. Kakas and P. Moraitis.",
        "Adaptive agent negotiation via argumentation.",
        "In: Proc.",
        "AAMAS-06, pp. 384-391, ACM Press. [11] T. Meyer, N. Foo, R. Kwok, and D. Zhang.",
        "Logical foundation of negotiation: outcome, concession and adaptation.",
        "In: Proc.",
        "AAAI-04, pp. 293-298, MIT Press. [12] R. S. Michalski.",
        "A theory and methodology of inductive learning.",
        "In: Machine Learning: An Artificial Intelligence Approach, R. S. Michalski, et al. (eds), pp. 83-134, Morgan Kaufmann, 1983. [13] S. Parsons, C. Sierra and N. Jennings.",
        "Agents that reason and negotiate by arguing.",
        "Journal of Logic and Computation, 8(3):261-292, 1988. [14] F. Sadri, F. Toni, and P. Torroni, An abductive logic programming architecture for negotiating agents.",
        "In: Proc. 8th European Conf. on Logics in AI, LNAI 2424, pp. 419-431, Springer, 2002. [15] C. Sakama and K. Inoue.",
        "An abductive framework for computing knowledge base updates.",
        "Theory and Practice of Logic Programming 3(6):671-715, 2003.",
        "The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1029"
    ],
    "error_count": 0,
    "keys": {
        "automated negotiation": {
            "translated_key": "negociación automatizada",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Negotiation by Abduction and Relaxation Chiaki Sakama Dept.",
                "Computer and Communication Sciences Wakayama University Sakaedani, Wakayama 640 8510, Japan sakama@sys.wakayama-u.ac.jp Katsumi Inoue National Institute of Informatics 2-1-2 Hitotsubashi, Chiyoda-ku Tokyo 101 8430, Japan ki@nii.ac.jp ABSTRACT This paper studies a logical framework for <br>automated negotiation</br> between two agents.",
                "We suppose an agent who has a knowledge base represented by a logic program.",
                "Then, we introduce methods of constructing counter-proposals in response to proposals made by an agent.",
                "To this end, we combine the techniques of extended abduction in artificial intelligence and relaxation in cooperative query answering for databases.",
                "These techniques are respectively used for producing conditional proposals and neighborhood proposals in the process of negotiation.",
                "We provide a negotiation protocol based on the exchange of these proposals and develop procedures for computing new proposals.",
                "Categories and Subject Descriptors F.4.1 [Mathematical Logic]: Logic and constraint programming;; I.2.11 [Distributed Artificial Intelligence]: Multiagent systems General Terms Theory 1.",
                "INTRODUCTION <br>automated negotiation</br> has been received increasing attention in multi-agent systems, and a number of frameworks have been proposed in different contexts ([1, 2, 3, 5, 10, 11, 13, 14], for instance).",
                "Negotiation usually proceeds in a series of rounds and each agent makes a proposal at every round.",
                "An agent that received a proposal responds in two ways.",
                "One is a critique which is a remark as to whether or not (parts of) the proposal is accepted.",
                "The other is a counter-proposal which is an alternative proposal made in response to a previous proposal [13].",
                "To see these proposals in one-to-one negotiation, suppose the following negotiation dialogue between a buyer agent B and a seller agent S. (Bi (or Si) represents an utterance of B (or S) in the i-th round.)",
                "B1: I want to buy a personal computer of the brand b1, with the specification of CPU:1GHz, Memory:512MB, HDD: 80GB, and a DVD-RW driver.",
                "I want to get it at the price under 1200 USD.",
                "S1: We can provide a PC with the requested specification if you pay for it by cash.",
                "In this case, however, service points are not added for this special discount.",
                "B2: I cannot pay it by cash.",
                "S2: In a normal price, the requested PC costs 1300 USD.",
                "B3: I cannot accept the price.",
                "My budget is under 1200 USD.",
                "S3: We can provide another computer with the requested specification, except that it is made by the brand b2.",
                "The price is exactly 1200 USD.",
                "B4: I do not want a PC of the brand b2.",
                "Instead, I can downgrade a driver from DVD-RW to CD-RW in my initial proposal.",
                "S4: Ok, I accept your offer.",
                "In this dialogue, in response to the opening proposal B1, the counter-proposal S1 is returned.",
                "In the rest of the dialogue, B2, B3, S4 are critiques, while S2, S3, B4 are counterproposals.",
                "Critiques are produced by evaluating a proposal in a knowledge base of an agent.",
                "In contrast, making counter-proposals involves generating an alternative proposal which is more favorable to the responding agent than the original one.",
                "It is known that there are two ways of producing counterproposals: extending the initial proposal or amending part of the initial proposal.",
                "According to [13], the first type appears in the dialogue: A: I propose that you provide me with service X.",
                "B: I propose that I provide you with service X if you provide me with service Z.",
                "The second type is in the dialogue: A: I propose that I provide you with service Y if you provide me with service X.",
                "B: I propose that I provide you with service X if you provide me with service Z.",
                "A negotiation proceeds by iterating such give-andtake dialogues until it reaches an agreement/disagreement.",
                "In those dialogues, agents generate (counter-)proposals by reasoning on their own goals or objectives.",
                "The objective of the agent A in the above dialogues is to obtain service X.",
                "The agent B proposes conditions to provide the service.",
                "In the process of negotiation, however, it may happen that agents are obliged to weaken or change their initial goals to reach a negotiated compromise.",
                "In the dialogue of 1022 978-81-904262-7-5 (RPS) c 2007 IFAAMAS a buyer agent and a seller agent presented above, a buyer agent changes its initial goal by downgrading a driver from DVD-RW to CD-RW.",
                "Such behavior is usually represented as specific meta-knowledge of an agent or specified as negotiation protocols in particular problems.",
                "Currently, there is no computational logic for <br>automated negotiation</br> which has general inference rules for producing (counter-)proposals.",
                "The purpose of this paper is to mechanize a process of building (counter-)proposals in one-to-one negotiation dialogues.",
                "We suppose an agent who has a knowledge base represented by a logic program.",
                "We then introduce methods for generating three different types of proposals.",
                "First, we use the technique of extended abduction in artificial intelligence [8, 15] to construct a conditional proposal as an extension of the original one.",
                "Second, we use the technique of relaxation in cooperative query answering for databases [4, 6] to construct a neighborhood proposal as an amendment of the original one.",
                "Third, combining extended abduction and relaxation, conditional neighborhood proposals are constructed as amended extensions of the original proposal.",
                "We develop a negotiation protocol between two agents based on the exchange of these counter-proposals and critiques.",
                "We also provide procedures for computing proposals in logic programming.",
                "This paper is organized as follows.",
                "Section 2 introduces a logical framework used in this paper.",
                "Section 3 presents methods for constructing proposals, and provides a negotiation protocol.",
                "Section 4 provides methods for computing proposals in logic programming.",
                "Section 5 discusses related works, and Section 6 concludes the paper. 2.",
                "PRELIMINARIES Logic programs considered in this paper are extended disjunctive programs (EDP) [7].",
                "An EDP (or simply a program) is a set of rules of the form: L1 ; · · · ; Ll ← Ll+1 , . . . , Lm, not Lm+1 , . . . , not Ln (n ≥ m ≥ l ≥ 0) where each Li is a positive/negative literal, i.e., A or ¬A for an atom A, and not is negation as failure (NAF). not L is called an NAF-literal.",
                "The symbol ; represents disjunction.",
                "The left-hand side of the rule is the head, and the right-hand side is the body.",
                "For each rule r of the above form, head(r), body+ (r) and body− (r) denote the sets of literals {L1, . . . , Ll}, {Ll+1, . . . , Lm}, and {Lm+1, . . . , Ln}, respectively.",
                "Also, not body− (r) denotes the set of NAF-literals {not Lm+1, . . . , not Ln}.",
                "A disjunction of literals and a conjunction of (NAF-)literals in a rule are identified with its corresponding sets of literals.",
                "A rule r is often written as head(r) ← body+ (r), not body− (r) or head(r) ← body(r) where body(r) = body+ (r)∪not body− (r).",
                "A rule r is disjunctive if head(r) contains more than one literal.",
                "A rule r is an integrity constraint if head(r) = ∅; and r is a fact if body(r) = ∅.",
                "A program is NAF-free if no rule contains NAF-literals.",
                "Two rules/literals are identified with respect to variable renaming.",
                "A substitution is a mapping from variables to terms θ = {x1/t1, . . . , xn/tn}, where x1, . . . , xn are distinct variables and each ti is a term distinct from xi.",
                "Given a conjunction G of (NAF-)literals, Gθ denotes the conjunction obtained by applying θ to G. A program, rule, or literal is ground if it contains no variable.",
                "A program P with variables is a shorthand of its ground instantiation Ground(P), the set of ground rules obtained from P by substituting variables in P by elements of its Herbrand universe in every possible way.",
                "The semantics of an EDP is defined by the answer set semantics [7].",
                "Let Lit be the set of all ground literals in the language of a program.",
                "Suppose a program P and a set of literals S(⊆ Lit).",
                "Then, the reduct P S is the program which contains the ground rule head(r) ← body+ (r) iff there is a rule r in Ground(P) such that body− (r)∩S = ∅.",
                "Given an NAF-free EDP P, Cn(P) denotes the smallest set of ground literals which is (i) closed under P, i.e., for every ground rule r in Ground(P), body(r) ⊆ Cn(P) implies head(r) ∩ Cn(P) = ∅; and (ii) logically closed, i.e., it is either consistent or equal to Lit.",
                "Given an EDP P and a set S of literals, S is an answer set of P if S = Cn(P S ).",
                "A program has none, one, or multiple answer sets in general.",
                "An answer set is consistent if it is not Lit.",
                "A program P is consistent if it has a consistent answer set; otherwise, P is inconsistent.",
                "Abductive logic programming [9] introduces a mechanism of hypothetical reasoning to logic programming.",
                "An abductive framework used in this paper is the extended abduction introduced by Inoue and Sakama [8, 15].",
                "An abductive program is a pair P, H where P is an EDP and H is a set of literals called abducibles.",
                "When a literal L ∈ H contains variables, any instance of L is also an abducible.",
                "An abductive program P, H is consistent if P is consistent.",
                "Throughout the paper, abductive programs are assumed to be consistent unless stated otherwise.",
                "Let G = L1, . . . , Lm, not Lm+1, . . . , not Ln be a conjunction, where all variables in G are existentially quantified at the front and range-restricted, i.e., every variable in Lm+1, . . . , Ln appears in L1, . . . , Lm.",
                "A set S of ground literals satisfies the conjunction G if { L1θ, . . . , Lmθ } ⊆ S and { Lm+1θ, . . . , Lnθ }∩ S = ∅ for some ground instance Gθ with a substitution θ.",
                "Let P, H be an abductive program and G a conjunction as above.",
                "A pair (E, F) is an explanation of an observation G in P, H if1 1. (P \\ F) ∪ E has an answer set which satisfies G, 2. (P \\ F) ∪ E is consistent, 3.",
                "E and F are sets of ground literals such that E ⊆ H\\P and F ⊆ H ∩ P. When (P \\ F) ∪ E has an answer set S satisfying the above three conditions, S is called a belief set of an abductive program P, H satisfying G (with respect to (E, F)).",
                "Note that if P has a consistent answer set S satisfying G, S is also a belief set of P, H satisfying G with respect to (E, F) = (∅, ∅).",
                "Extended abduction introduces/removes hypotheses to/from a program to explain an observation.",
                "Note that normal abduction (as in [9]) considers only introducing hypotheses to explain an observation.",
                "An explanation (E, F) of an observation G is called minimal if for any explanation (E , F ) of G, E ⊆ E and F ⊆ F imply E = E and F = F. Example 2.1.",
                "Consider the abductive program P, H : P : flies(x) ← bird(x), not ab(x) , ab(x) ← broken-wing(x) , bird(tweety) ← , bird(opus) ← , broken-wing(tweety) ← .",
                "H : broken-wing(x) .",
                "The observation G = flies(tweety) has the minimal explanation (E, F) = (∅, {broken-wing(tweety)}). 1 This defines credulous explanations [15].",
                "Skeptical explanations are used in [8].",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1023 3.",
                "NEGOTIATION 3.1 Conditional Proposals by Abduction We suppose an agent who has a knowledge base represented by an abductive program P, H .",
                "A program P consists of two types of knowledge, belief B and desire D, where B represents objective knowledge of an agent, while D represents subjective knowledge in general.",
                "We define P = B ∪ D, but do not distinguish B and D if such distinction is not important in the context.",
                "In contrast, abducibles H are used for representing permissible conditions to make a compromise in the process of negotiation.",
                "Definition 3.1.",
                "A proposal G is a conjunction of literals and NAF-literals: L1, . . . , Lm, not Lm+1, . . . , not Ln where every variable in G is existentially quantified at the front and range-restricted.",
                "In particular, G is called a critique if G = accept or G = reject where accept and reject are the reserved propositions.",
                "A counter-proposal is a proposal made in response to a proposal.",
                "Definition 3.2.",
                "A proposal G is accepted in an abductive program P, H if P has an answer set satisfying G. When a proposal is not accepted, abduction is used for seeking conditions to make it acceptable.",
                "Definition 3.3.",
                "Let P, H be an abductive program and G a proposal.",
                "If (E, F) is a minimal explanation of Gθ for some substitution θ in P, H , the conjunction G : Gθ, E, not F is called a conditional proposal (for G), where E, not F represents the conjunction: A1, . . . , Ak, not Ak+1, . . . , not Al for E = {A1, . . . , Ak} and F = { Ak+1, . . . , Al }.",
                "Proposition 3.1.",
                "Let P, H be an abductive program and G a proposal.",
                "If G is a conditional proposal, there is a belief set S of P, H satisfying G .",
                "Proof.",
                "When G = Gθ, E, not F, (P \\ F) ∪ E has a consistent answer set S satisfying Gθ and E ∩ F = ∅.",
                "In this case, S satisfies Gθ, E, not F. A conditional proposal G provides a minimal requirement for accepting the proposal G. If Gθ has multiple minimal explanations, several conditional proposals exist accordingly.",
                "When (E, F) = (∅, ∅), a conditional proposal is used as a new proposal made in response to the proposal G. Example 3.1.",
                "An agent seeks a position of a research assistant at the computer department of a university with the condition that the salary is at least 50,000 USD per year.",
                "The agent makes his/her request as the proposal:2 G = assist(compt dept), salary(x), x ≥ 50, 000.",
                "The university has the abductive program P, H : P : salary(40, 000) ← assist(compt dept), not has PhD, salary(60, 000) ← assist(compt dept), has PhD, salary(50, 000) ← assist(math dept), salary(55, 000) ← system admin(compt dept), 2 For notational convenience, we often include mathematical (in)equations in proposals/programs.",
                "They are written by literals, for instance, x ≥ y by geq(x, y) with a suitable definition of the predicate geq. employee(x) ← assist(x), employee(x) ← system admin(x), assist(compt dept); assist(math dept) ; system admin(compt dept) ←, H : has PhD, where available positions are represented by disjunction.",
                "According to P, the base salary of a research assistant at the computer department is 40,000 USD, but if he/she has PhD, it is 60,000 USD.",
                "In this case, (E, F) = ({has PhD}, ∅) becomes the minimal explanation of Gθ = assist(compt dept), salary(60, 000) with θ = { x/60, 000 }.",
                "Then, the conditional proposal made by the university becomes assist(compt dept), salary(60, 000), has PhD . 3.2 Neighborhood Proposals by Relaxation When a proposal is unacceptable, an agent tries to construct a new counter-proposal by weakening constraints in the initial proposal.",
                "We use techniques of relaxation for this purpose.",
                "Relaxation is used as a technique of cooperative query answering in databases [4, 6].",
                "When an original query fails in a database, relaxation expands the scope of the query by relaxing the constraints in the query.",
                "This allows the database to return neighborhood answers which are related to the original query.",
                "We use the technique for producing proposals in the process of negotiation.",
                "Definition 3.4.",
                "Let P, H be an abductive program and G a proposal.",
                "Then, G is relaxed to G in the following three ways: Anti-instantiation: Construct G such that G θ = G for some substitution θ.",
                "Dropping conditions: Construct G such that G ⊂ G. Goal replacement: If G is a conjunction G1, G2, where G1 and G2 are conjunctions, and there is a rule L ← G1 in P such that G1θ = G1 for some substitution θ, then build G as Lθ, G2.",
                "Here, Lθ is called a replaced literal.",
                "In each case, every variable in G is existentially quantified at the front and range-restricted.",
                "Anti-instantiation replaces constants (or terms) with fresh variables.",
                "Dropping conditions eliminates some conditions in a proposal.",
                "Goal replacement replaces the condition G1 in G with a literal Lθ in the presence of a rule L ← G1 in P under the condition G1θ = G1.",
                "All these operations generalize proposals in different ways.",
                "Each G obtained by these operations is called a relaxation of G. It is worth noting that these operations are also used in the context of inductive generalization [12].",
                "The relaxed proposal can produce new offers which are neighbor to the original proposal.",
                "Definition 3.5.",
                "Let P, H be an abductive program and G a proposal. 1.",
                "Let G be a proposal obtained by anti-instantiation.",
                "If P has an answer set S which satisfies G θ for some substitution θ and G θ = G, G θ is called a neighborhood proposal by anti-instantiation. 2.",
                "Let G be a proposal obtained by dropping conditions.",
                "If P has an answer set S which satisfies G θ for some substitution θ, G θ is called a neighborhood proposal by dropping conditions. 1024 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.",
                "Let G be a proposal obtained by goal replacement.",
                "For a replaced literal L ∈ G and a rule H ← B in P such that L = Hσ and (G \\ {L}) ∪ Bσ = G for some substitution σ, put G = (G \\ {L}) ∪ Bσ.",
                "If P has an answer set S which satisfies G θ for some substitution θ, G θ is called a neighborhood proposal by goal replacement.",
                "Example 3.2. (cont.",
                "Example 3.1) Given the proposal G = assist(compt dept), salary(x), x ≥ 50, 000, • G1 = assist(w), salary(x), x ≥ 50, 000 is produced by substituting compt dept with a variable w. As G1θ1 = assist(math dept), salary(50, 000) with θ1 = { w/math dept } is satisfied by an answer set of P, G1θ1 becomes a neighborhood proposal by anti-instantiation. • G2 = assist(compt dept), salary(x) is produced by dropping the salary condition x ≥ 50, 000.",
                "As G2θ2 = assist(compt dept), salary(40, 000) with θ2 = { x/40, 000 } is satisfied by an answer set of P, G2θ2 becomes a neighborhood proposal by dropping conditions. • G3 = employee(compt dept), salary(x), x ≥ 50, 000 is produced by replacing assist(compt dept) with employee(compt dept) using the rule employee(x) ← assist(x) in P. By G3 and the rule employee(x) ← system admin(x) in P, G3 = sys admin(compt dept), salary(x), x ≥ 50, 000 is produced.",
                "As G3 θ3 = sys admin(compt dept), salary(55, 000) with θ3 = { x/55, 000 } is satisfied by an answer set of P, G3 θ3 becomes a neighborhood proposal by goal replacement.",
                "Finally, extended abduction and relaxation are combined to produce conditional neighborhood proposals.",
                "Definition 3.6.",
                "Let P, H be an abductive program and G a proposal. 1.",
                "Let G be a proposal obtained by either anti-instantiation or dropping conditions.",
                "If (E, F) is a minimal explanation of G θ(= G) for some substitution θ, the conjunction G θ, E, not F is called a conditional neighborhood proposal by anti-instantiation/dropping conditions. 2.",
                "Let G be a proposal obtained by goal replacement.",
                "Suppose G as in Definition 3.5(3).",
                "If (E, F) is a minimal explanation of G θ for some substitution θ, the conjunction G θ, E, not F is called a conditional neighborhood proposal by goal replacement.",
                "A conditional neighborhood proposal reduces to a neighborhood proposal when (E, F) = (∅, ∅). 3.3 Negotiation Protocol A negotiation protocol defines how to exchange proposals in the process of negotiation.",
                "This section presents a negotiation protocol in our framework.",
                "We suppose one-to-one negotiation between two agents who have a common ontology and the same language for successful communication.",
                "Definition 3.7.",
                "A proposal L1, ..., Lm, not Lm+1, ..., not Ln violates an integrity constraint ← body+ (r), not body− (r) if for any substitution θ, there is a substitution σ such that body+ (r)σ ⊆ { L1θ, . . . , Lmθ }, body− (r)σ∩{ L1θ, . . . , Lmθ } = ∅, and body− (r)σ ⊆ { Lm+1θ, . . . , Lnθ }.",
                "Integrity constraints are conditions which an agent should satisfy, so that they are used to explain why an agent does not accept a proposal.",
                "A negotiation proceeds in a series of rounds.",
                "Each i-th round (i ≥ 1) consists of a proposal Gi 1 made by one agent Ag1 and another proposal Gi 2 made by the other agent Ag2.",
                "Definition 3.8.",
                "Let P1, H1 be an abductive program of an agent Ag1 and Gi 2 a proposal made by Ag2 at the i-th round.",
                "A critique set of Ag1 (at the i-th round) is a set CSi 1(P1, Gj 2) = CSi−1 1 (P1, Gj−1 2 ) ∪ { r | r is an integrity constraint in P1 and Gj 2 violates r } where j = i − 1 or i, and CS0 1 (P1, G0 2) = CS1 1 (P1, G0 2) = ∅.",
                "A critique set of an agent Ag1 accumulates integrity constraints which are violated by proposals made by another agent Ag2.",
                "CSi 2(P2, Gj 1) is defined in the same manner.",
                "Definition 3.9.",
                "Let Pk, Hk be an abductive program of an agent Agk and Gj a proposal, which is not a critique, made by any agent at the j(≤ i)-th round.",
                "A negotiation set of Agk (at the i-th round) is a triple NSi k = (Si c, Si n, Si cn), where Si c is the set of conditional proposals, Si n is the set of neighborhood proposals, and Si cn is the set of conditional neighborhood proposals, produced by Gj and Pk, Hk .",
                "A negotiation set represents the space of possible proposals made by an agent.",
                "Si x (x ∈ {c, n, cn}) accumulates proposals produced by Gj (1 ≤ j ≤ i) according to Definitions 3.3, 3.5, and 3.6.",
                "Note that an agent can construct counter-proposals by modifying its own previous proposals or another agents proposals.",
                "An agent Agk accumulates proposals that are made by Agk but are rejected by another agent, in the failed proposal set FP i k (at the i-th round), where FP 0 k = ∅.",
                "Suppose two agents Ag1 and Ag2 who have abductive programs P1, H1 and P2, H2 , respectively.",
                "Given a proposal G1 1 which is satisfied by an answer set of P1, a negotiation starts.",
                "In response to the proposal Gi 1 made by Ag1 at the i-th round, Ag2 behaves as follows. 1.",
                "If Gi 1 = accept, an agreement is reached and negotiation ends in success. 2.",
                "Else if Gi 1 = reject, put FP i 2 = FPi−1 2 ∪{Gi−1 2 } where {G0 2} = ∅.",
                "Proceed to the step 4(b). 3.",
                "Else if P2 has an answer set satisfying Gi 1, Ag2 returns Gi 2 = accept to Ag1.",
                "Negotiation ends in success. 4.",
                "Otherwise, Ag2 behaves as follows.",
                "Put FP i 2 = FPi−1 2 . (a) If Gi 1 violates an integrity constraint in P2, return the critique Gi 2 = reject to Ag1, together with the critique set CSi 2(P2, Gi 1). (b) Otherwise, construct NSi 2 as follows. (i) Produce Si c. Let μ(Si c) = { p | p ∈ Si c \\ FPi 2 and p satisfies the constraints in CSi 1(P1, Gi−1 2 )}.",
                "If μ(Si c) = ∅, select one from μ(Si c) and propose it as Gi 2 to Ag1; otherwise, go to (ii). (ii) Produce Si n. If μ(Si n) = ∅, select one from μ(Si n) and propose it as Gi 2 to Ag1; otherwise, go to (iii). (iii) Produce Si cn.",
                "If μ(Si cn) = ∅, select one from μ(Si cn) and propose it as Gi 2 to Ag1; otherwise, negotiation ends in failure.",
                "This means that Ag2 can make no counter-proposal or every counterproposal made by Ag2 is rejected by Ag1.",
                "In the step 4(a), Ag2 rejects the proposal Gi 1 and returns the reason of rejection as a critique set.",
                "This helps for Ag1 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1025 in preparing a next counter-proposal.",
                "In the step 4(b), Ag2 constructs a new proposal.",
                "In its construction, Ag2 should take care of the critique set CSi 1(P1, Gi−1 2 ), which represents integrity constraints, if any, accumulated in previous rounds, that Ag1 must satisfy.",
                "Also, FP i 2 is used for removing proposals which have been rejected.",
                "Construction of Si x (x ∈ {c, n, cn}) in NSi 2 is incrementally done by adding new counter-proposals produced by Gi 1 or Gi−1 2 to Si−1 x .",
                "For instance, Si n in NSi 2 is computed as Si n = Si−1 n ∪{ p | p is a neighborhood proposal made by Gi 1 } ∪ { p | p is a neighborhood proposal made by Gi−1 2 }, where S0 n = ∅.",
                "That is, Si n is constructed from Si−1 n by adding new proposals which are obtained by modifying the proposal Gi 1 made by Ag1 at the i-th round or modifying the proposal Gi−1 2 made by Ag2 at the (i − 1)-th round.",
                "Si c and Si cn are obtained as well.",
                "In the above protocol, an agent produces Si c at first, secondly Si n, and finally Si cn.",
                "This strategy seeks conditions which satisfy the given proposal, prior to neighborhood proposals which change the original one.",
                "Another strategy, which prefers neighborhood proposals to conditional ones, is also considered.",
                "Conditional neighborhood proposals are to be considered in the last place, since they differ from the original one to the maximal extent.",
                "The above protocol produces the candidate proposals in Si x for each x ∈ {c, n, cn} at once.",
                "We can consider a variant of the protocol in which each proposal in Si x is constructed one by one (see Example 3.3).",
                "The above protocol is repeatedly applied to each one of the two negotiating agents until a negotiation ends in success/failure.",
                "Formally, the above negotiation protocol has the following properties.",
                "Theorem 3.2.",
                "Let Ag1 and Ag2 be two agents having abductive programs P1, H1 and P2, H2 , respectively. 1.",
                "If P1, H1 and P2, H2 are function-free (i.e., both Pi and Hi contain no function symbol), any negotiation will terminate. 2.",
                "If a negotiation terminates with agreement on a proposal G, both P1, H1 and P2, H2 have belief sets satisfying G. Proof. 1.",
                "When an abductive program is function-free, abducibles and negotiation sets are both finite.",
                "Moreover, if a proposal is once rejected, it is not proposed again by the function μ.",
                "Thus, negotiation will terminate in finite steps. 2.",
                "When a proposal G is made by Ag1, P1, H1 has a belief set satisfying G. If the agent Ag2 accepts the proposal G, it is satisfied by an answer set of P2 which is also a belief set of P2, H2 .",
                "Example 3.3.",
                "Suppose a buying-selling situation in the introduction.",
                "A seller agent has the abductive program Ps, Hs in which Ps consists of belief Bs and desire Ds: Bs : pc(b1, 1G, 512M, 80G) ; pc(b2, 1G, 512M, 80G) ←,(1) dvd-rw ; cd-rw ←, (2) Ds : normal price(1300) ← pc(b1, 1G, 512M, 80G), dvd-rw, (3) normal price(1200) ← pc(b1, 1G, 512M, 80G), cd-rw, (4) normal price(1200) ← pc(b2, 1G, 512M, 80G), dvd-rw, (5) price(x) ← normal price(x), add point, (6) price(x ∗ 0.9) ← normal price(x), pay cash, not add point,(7) add point ←, (8) Hs : add point, pay cash.",
                "Here, (1) and (2) represent selection of products.",
                "The atom pc(b1, 1G, 512M, 80G) represents that the seller agent has a PC of the brand b1 such that CPU is 1GHz, memory is 512MB, and HDD is 80GB.",
                "Prices of products are represented as desire of the seller.",
                "The rules (3) - (5) are normal prices of products.",
                "A normal price is a selling price on the condition that service points are added (6).",
                "On the other hand, a discount price is applied if the paying method is cash and no service point is added (7).",
                "The fact (8) represents the addition of service points.",
                "This service would be withdrawn in case of discount prices, so add point is specified as an abducible.",
                "A buyer agent has the abductive program Pb, Hb in which Pb consists of belief Bb and desire Db: Bb : drive ← dvd-rw, (9) drive ← cd-rw, (10) price(x) ←, (11) Db : pc(b1, 1G, 512M, 80G) ←, (12) dvd-rw ←, (13) cd-rw ← not dvd-rw, (14) ← pay cash, (15) ← price(x), x > 1200, (16) Hb : dvd-rw.",
                "Rules (12) - (16) are the buyers desire.",
                "Among them, (15) and (16) impose constraints for buying a PC.",
                "A DVD-RW is specified as an abducible which is subject to concession. (1st round) First, the following proposal is given by the buyer agent: G1 b : pc(b1, 1G, 512M, 80G), dvd-rw, price(x), x ≤ 1200.",
                "As Ps has no answer set which satisfies G1 b , the seller agent cannot accept the proposal.",
                "The seller takes an action of making a counter-proposal and performs abduction.",
                "As a result, the seller finds the minimal explanation (E, F) = ({ pay cash }, { add point }) which explains G1 b θ1 with θ1 = { x/1170 }.",
                "The seller constructs the conditional proposal: G1 s : pc(b1, 1G, 512M, 80G), dvd-rw, price(1170), pay cash, not add point and offers it to the buyer. (2nd round) The buyer does not accept G1 s because he/she cannot pay it by cash (15).",
                "The buyer then returns the critique G2 b = reject to the seller, together with the critique set CS2 b (Pb, G1 s) = {(15)}.",
                "In response to this, the seller tries to make another proposal which satisfies the constraint in this critique set.",
                "As G1 s is stored in FP 2 s and no other conditional proposal satisfying the buyers requirement exists, the seller produces neighborhood proposals.",
                "He/she relaxes G1 b by dropping x ≤ 1200 in the condition, and produces pc(b1, 1G, 512M, 80G), dvd-rw, price(x).",
                "As Ps has an answer set which satisfies G2 s : pc(b1, 1G, 512M, 80G), dvd-rw, price(1300), 1026 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) the seller offers G2 s as a new counter-proposal. (3rd round) The buyer does not accept G2 s because he/she cannot pay more than 1200USD (16).",
                "The buyer again returns the critique G3 b = reject to the seller, together with the critique set CS3 b (Pb, G2 s) = CS2 b (Pb, G1 s) ∪ {(16)}.",
                "The seller then considers another proposal by replacing b1 with a variable w, G1 b now becomes pc(w, 1G, 512M, 80G), dvd-rw, price(x), x ≤ 1200.",
                "As Ps has an answer set which satisfies G3 s : pc(b2, 1G, 512M, 80G), dvd-rw, price(1200), the seller offers G3 s as a new counter-proposal. (4th round) The buyer does not accept G3 s because a PC of the brand b2 is out of his/her interest and Pb has no answer set satisfying G3 s. Then, the buyer makes a concession by changing his/her original goal.",
                "The buyer relaxes G1 b by goal replacement using the rule (9) in Pb, and produces pc(b1, 1G, 512M, 80G), drive, price(x), x ≤ 1200.",
                "Using (10), the following proposal is produced: pc(b1, 1G, 512M, 80G), cd-rw, price(x), x ≤ 1200.",
                "As Pb \\ { dvd-rw } has a consistent answer set satisfying the above proposal, the buyer proposes the conditional neighborhood proposal G4 b : pc(b1, 1G, 512M, 80G), cd-rw, not dvd-rw, price(x), x ≤ 1200 to the seller agent.",
                "Since Ps also has an answer set satisfying G4 b , the seller accepts it and sends the message G4 s = accept to the buyer.",
                "Thus, the negotiation ends in success. 4.",
                "COMPUTATION In this section, we provide methods of computing proposals in terms of answer sets of programs.",
                "We first introduce some definitions from [15].",
                "Definition 4.1.",
                "Given an abductive program P, H , the set UR of update rules is defined as: UR = { L ← not L, L ← not L | L ∈ H } ∪ { +L ← L | L ∈ H \\ P } ∪ { −L ← not L | L ∈ H ∩ P } , where L, +L, and −L are new atoms uniquely associated with every L ∈ H. The atoms +L and −L are called update atoms.",
                "By the definition, the atom L becomes true iff L is not true.",
                "The pair of rules L ← not L and L ← not L specify the situation that an abducible L is true or not.",
                "When p(x) ∈ H and p(a) ∈ P but p(t) ∈ P for t = a, the rule +L ← L precisely becomes +p(t) ← p(t) for any t = a.",
                "In this case, the rule is shortly written as +p(x) ← p(x), x = a.",
                "Generally, the rule becomes +p(x) ← p(x), x = t1, . . . , x = tn for n such instances.",
                "The rule +L ← L derives the atom +L if an abducible L which is not in P is to be true.",
                "In contrast, the rule −L ← not L derives the atom −L if an abducible L which is in P is not to be true.",
                "Thus, update atoms represent the change of truth values of abducibles in a program.",
                "That is, +L means the introduction of L, while −L means the deletion of L. When an abducible L contains variables, the associated update atom +L or −L is supposed to have exactly the same variables.",
                "In this case, an update atom is semantically identified with its ground instances.",
                "The set of all update atoms associated with the abducibles in H is denoted by UH, and UH = UH+ ∪ UH− where UH+ (resp.",
                "UH− ) is the set of update atoms of the form +L (resp. −L).",
                "Definition 4.2.",
                "Given an abductive program P, H , its update program UP is defined as the program UP = (P \\ H) ∪ UR .",
                "An answer set S of UP is called U-minimal if there is no answer set T of UP such that T ∩ UH ⊂ S ∩ UH.",
                "By the definition, U-minimal answer sets exist whenever UP has answer sets.",
                "Update programs are used for computing (minimal) explanations of an observation.",
                "Given an observation G as a conjunction of literals and NAF-literals possibly containing variables, we introduce a new ground literal O together with the rule O ← G. In this case, O has an explanation (E, F) iff G has the same explanation.",
                "With this replacement, an observation is assumed to be a ground literal without loss of generality.",
                "In what follows, E+ = { +L | L ∈ E } and F − = { −L | L ∈ F } for E ⊆ H and F ⊆ H. Proposition 4.1. ([15]) Let P, H be an abductive program, UP its update program, and G a ground literal representing an observation.",
                "Then, a pair (E, F) is an explanation of G iff UP ∪ { ← not G } has a consistent answer set S such that E+ = S ∩ UH+ and F− = S ∩ UH− .",
                "In particular, (E, F) is a minimal explanation iff S is a U-minimal answer set.",
                "Example 4.1.",
                "To explain the observation G = flies(t) in the program P of Example 2.1, first construct the update program UP of P:3 UP : flies(x) ← bird(x), not ab(x), ab(x) ← broken-wing(x) , bird(t) ← , bird(o) ← , broken-wing(x) ← not broken-wing(x), broken-wing(x) ← not broken-wing(x), +broken-wing(x) ← broken-wing(x), x = t , −broken-wing(t) ← not broken-wing(t) .",
                "Next, consider the program UP ∪ { ← not flies(t) }.",
                "It has the single U-minimal answer set: S = { bird(t), bird(o), flies(t), flies(o), broken-wing(t), broken-wing(o), −broken-wing(t) }.",
                "The unique minimal explanation (E, F) = (∅, {broken-wing(t)}) of G is expressed by the update atom −broken-wing(t) in S ∩ UH− .",
                "Proposition 4.2.",
                "Let P, H be an abductive program and G a ground literal representing an observation.",
                "If P ∪ { ← not G } has a consistent answer set S, G has the minimal explanation (E, F) = (∅, ∅) and S satisfies G. Now we provide methods for computing (counter-)proposals.",
                "First, conditional proposals are computed as follows. input : an abductive program P, H , a proposal G; output : a set Sc of proposals.",
                "If G is a ground literal, compute its minimal explanation (E, F) in P, H using the update program.",
                "Put G, E, not F in Sc.",
                "Else if G is a conjunction possibly containing variables, consider the abductive program 3 t represents tweety and o represents opus.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1027 P ∪{ O ← G }, H with a ground literal O. Compute a minimal explanation of O in P ∪ { O ← G }, H using its update program.",
                "If O has a minimal explanation (E, F) with a substitution θ for variables in G, put Gθ, E, not F in Sc.",
                "Next, neighborhood proposals are computed as follows. input : an abductive program P, H , a proposal G; output : a set Sn of proposals. % neighborhood proposals by anti-instantiation; Construct G by anti-instantiation.",
                "For a ground literal O, if P ∪ { O ← G } ∪ { ← not O } has a consistent answer set satisfying G θ with a substitution θ and G θ = G, put G θ in Sn. % neighborhood proposals by dropping conditions; Construct G by dropping conditions.",
                "If G is a ground literal and the program P ∪ { ← not G } has a consistent answer set, put G in Sn.",
                "Else if G is a conjunction possibly containing variables, do the following.",
                "For a ground literal O, if P ∪{ O ← G }∪{ ← not O } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn. % neighborhood proposals by goal replacement; Construct G by goal replacement.",
                "If G is a ground literal and there is a rule H ← B in P such that G = Hσ and Bσ = G for some substitution σ, put G = Bσ.",
                "If P ∪ { ← not G } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn.",
                "Else if G is a conjunction possibly containing variables, do the following.",
                "For a replaced literal L ∈ G , if there is a rule H ← B in P such that L = Hσ and (G \\ {L}) ∪ Bσ = G for some substitution σ, put G = (G \\ {L}) ∪ Bσ.",
                "For a ground literal O, if P ∪ { O ← G } ∪ { ← not O } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn.",
                "Theorem 4.3.",
                "The set Sc (resp.",
                "Sn) computed above coincides with the set of conditional proposals (resp. neighborhood proposals).",
                "Proof.",
                "The result for Sc follows from Definition 3.3 and Proposition 4.1.",
                "The result for Sn follows from Definition 3.5 and Proposition 4.2.",
                "Conditional neighborhood proposals are computed by combining the above two procedures.",
                "Those proposals are computed at each round.",
                "Note that the procedure for computing Sn contains some nondeterministic choices.",
                "For instance, there are generally several candidates of literals to relax in a proposal.",
                "Also, there might be several rules in a program for the usage of goal replacement.",
                "In practice, an agent can prespecify literals in a proposal for possible relaxation or rules in a program for the usage of goal replacement. 5.",
                "RELATED WORK As there are a number of literature on <br>automated negotiation</br>, this section focuses on comparison with negotiation frameworks based on logic and argumentation.",
                "Sadri et al. [14] use abductive logic programming as a representation language of negotiating agents.",
                "Agents negotiate using common dialogue primitives, called dialogue moves.",
                "Each agent has an abductive logic program in which a sequence of dialogues are specified by a program, a dialogue protocol is specified as constraints, and dialogue moves are specified as abducibles.",
                "The behavior of agents is regulated by an observe-think-act cycle.",
                "Once a dialogue move is uttered by an agent, another agent that observed the utterance thinks and acts using a proof procedure.",
                "Their approach and ours both employ abductive logic programming as a platform of agent reasoning, but the use of it is quite different.",
                "First, they use abducibles to specify dialogue primitives of the form tell(utterer, receiver, subject, identifier, time), while we use abducibles to specify arbitrary permissible hypotheses to construct conditional proposals.",
                "Second, a program pre-specifies a plan to carry out in order to achieve a goal, together with available/missing resources in the context of resource-exchanging problems.",
                "This is in contrast with our method in which possible counter-proposals are newly constructed in response to a proposal made by an agent.",
                "Third, they specify a negotiation policy inside a program (as integrity constraints), while we give a protocol independent of individual agents.",
                "They provide an operational model that completely specifies the behavior of agents in terms of agent cycle.",
                "We do not provide such a complete specification of the behavior of agents.",
                "Our primary interest is to mechanize construction of proposals.",
                "Bracciali and Torroni [2] formulate abductive agents that have knowledge in abductive logic programs.",
                "To explain an observation, two agents communicate by exchanging integrity constraints.",
                "In the process of communication, an agent can revise its own integrity constraints according to the information provided by the other agent.",
                "A set IC of integrity constraints relaxes a set IC (or IC tightens IC ) if any observation that can be proved with respect to IC can also be proved with respect to IC .",
                "For instance, IC : ← a, b, c relaxes IC : ← a, b.",
                "Thus, they use relaxation for weakening the constraints in an abductive logic program.",
                "In contrast, we use relaxation for weakening proposals and three different relaxation methods, anti-instantiation, dropping conditions, and goal replacement, are considered.",
                "Their goal is to explain an observation by revising integrity constraints of an agent through communication, while we use integrity constraints for communication to explain critiques and help other agents in making counter-proposals.",
                "Meyer et al. [11] introduce a logical framework for negotiating agents.",
                "They introduce two different modes of negotiation: concession and adaptation.",
                "They provide rational postulates to characterize negotiated outcomes between two agents, and describe methods for constructing outcomes.",
                "They provide logical conditions for negotiated outcomes to satisfy, but they do not describe a process of negotiation nor negotiation protocols.",
                "Moreover, they represent agents by classical propositional theories, which is different from our abductive logic programming framework.",
                "Foo et al. [5] model one-to-one negotiation as a one-time encounter between two extended logic programs.",
                "An agent offers an answer set of its program, and their mutual deal is regarded as a trade on their answer sets.",
                "Starting from the initial agreement set S∩T for an answer set S of an agent and an answer set T of another agent, each agent extends this set to reflect its own demand while keeping consistency with demand of the other agent.",
                "Their algorithm returns new programs having answer sets which are consistent with each other and keep the agreement set.",
                "The work is extended to repeated encounters in [3].",
                "In their framework, two agents exchange answer sets to produce a common belief set, which is different from our framework of exchanging proposals.",
                "There are a number of proposals for negotiation based 1028 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) on argumentation.",
                "An advantage of argumentation-based negotiation is that it constructs a proposal with arguments supporting the proposal [1].",
                "The existence of arguments is useful to convince other agents of reasons why an agent offers (counter-)proposals or returns critiques.",
                "Parsons et al. [13] develop a logic of argumentation-based negotiation among BDI agents.",
                "In one-to-one negotiation, an agent A generates a proposal together with its arguments, and passes it to another agent B.",
                "The proposal is evaluated by B which attempts to build arguments against it.",
                "If it conflicts with Bs interest, B informs A of its objection by sending back its attacking argument.",
                "In response to this, A tries to find an alternative way of achieving its original objective, or a way of persuading B to drop its objection.",
                "If either type of argument can be found, A will submit it to B.",
                "If B finds no reason to reject the new proposal, it will be accepted and the negotiation ends in success.",
                "Otherwise, the process is iterated.",
                "In this negotiation processes, the agent A never changes its original objective, so that negotiation ends in failure if A fails to find an alternative way of achieving the original objective.",
                "In our framework, when a proposal is rejected by another agent, an agent can weaken or change its objective by abduction and relaxation.",
                "Our framework does not have a mechanism of argumentation, but reasons for critiques can be informed by responding critique sets.",
                "Kakas and Moraitis [10] propose a negotiation protocol which integrates abduction within an argumentation framework.",
                "A proposal contains an offer corresponding to the negotiation object, together with supporting information representing conditions under which this offer is made.",
                "Supporting information is computed by abduction and is used for constructing conditional arguments during the process of negotiation.",
                "In their negotiation protocol, when an agent cannot satisfy its own goal, the agent considers the other agents goal and searches for conditions under which the goal is acceptable.",
                "Our present approach differs from theirs in the following points.",
                "First, they use abduction to seek conditions to support arguments, while we use abduction to seek conditions for proposals to accept.",
                "Second, in their negotiation protocol, counter-proposals are chosen among candidates based on preference knowledge of an agent at meta-level, which represents policy under which an agent uses its object-level decision rules according to situations.",
                "In our framework, counter-proposals are newly constructed using abduction and relaxation.",
                "The method of construction is independent of particular negotiation protocols.",
                "As [2, 10, 14], abduction or abductive logic programming used in negotiation is mostly based on normal abduction.",
                "In contrast, our approach is based on extended abduction which can not only introduce hypotheses but remove them from a program.",
                "This is another important difference.",
                "Relaxation and neighborhood query answering are devised to make databases cooperative with their users [4, 6].",
                "In this sense, those techniques have the spirit similar to cooperative problem solving in multi-agent systems.",
                "As far as the authors know, however, there is no study which applies those technique to agent negotiation. 6.",
                "CONCLUSION In this paper we proposed a logical framework for negotiating agents.",
                "To construct proposals in the process of negotiation, we combined the techniques of extended abduction and relaxation.",
                "It was shown that these two operations are used for general inference rules in producing proposals.",
                "We developed a negotiation protocol between two agents based on exchange of proposals and critiques, and provided procedures for computing proposals in abductive logic programming.",
                "This enables us to realize <br>automated negotiation</br> on top of the existing answer set solvers.",
                "The present framework does not have a mechanism of selecting an optimal (counter-)proposal among different alternatives.",
                "To compare and evaluate proposals, an agent must have preference knowledge of candidate proposals.",
                "Further elaboration to maximize the utility of agents is left for future study. 7.",
                "REFERENCES [1] L. Amgoud, S. Parsons, and N. Maudet.",
                "Arguments, dialogue, and negotiation.",
                "In: Proc.",
                "ECAI-00, pp. 338-342, IOS Press, 2000. [2] A. Bracciali and P. Torroni.",
                "A new framework for knowledge revision of abductive agents through their interaction.",
                "In: Proc.",
                "CLIMA-IV, Computational Logic in Multi-Agent Systems, LNAI 3259, pp. 159-177, 2004. [3] W. Chen, M. Zhang, and N. Foo.",
                "Repeated negotiation of logic programs.",
                "In: Proc. 7th Workshop on Nonmonotonic Reasoning, Action and Change, 2006. [4] W. W. Chu, Q. Chen, and R.-C. Lee.",
                "Cooperative query answering via type abstraction hierarchy.",
                "In: Cooperating Knowledge Based Systems, S. M. Deen ed., pp. 271-290, Springer, 1990. [5] N. Foo, T. Meyer, Y. Zhang, and D. Zhang.",
                "Negotiating logic programs.",
                "In: Proc. 6th Workshop on Nonmonotonic Reasoning, Action and Change, 2005. [6] T. Gaasterland, P. Godfrey, and J. Minker.",
                "Relaxation as a platform for cooperative answering.",
                "Journal of Intelligence Information Systems 1(3/4):293-321, 1992. [7] M. Gelfond and V. Lifschitz.",
                "Classical negation in logic programs and disjunctive databases.",
                "New Generation Computing 9:365-385, 1991. [8] K. Inoue and C. Sakama.",
                "Abductive framework for nonmonotonic theory change.",
                "In: Proc.",
                "IJCAI-95, pp. 204-210, Morgan Kaufmann. [9] A. C. Kakas, R. A. Kowalski, and F. Toni, The role of abduction in logic programming.",
                "In: Handbook of Logic in AI and Logic Programming, D. M. Gabbay, et al. (eds), vol. 5, pp. 235-324, Oxford University Press, 1998. [10] A. C. Kakas and P. Moraitis.",
                "Adaptive agent negotiation via argumentation.",
                "In: Proc.",
                "AAMAS-06, pp. 384-391, ACM Press. [11] T. Meyer, N. Foo, R. Kwok, and D. Zhang.",
                "Logical foundation of negotiation: outcome, concession and adaptation.",
                "In: Proc.",
                "AAAI-04, pp. 293-298, MIT Press. [12] R. S. Michalski.",
                "A theory and methodology of inductive learning.",
                "In: Machine Learning: An Artificial Intelligence Approach, R. S. Michalski, et al. (eds), pp. 83-134, Morgan Kaufmann, 1983. [13] S. Parsons, C. Sierra and N. Jennings.",
                "Agents that reason and negotiate by arguing.",
                "Journal of Logic and Computation, 8(3):261-292, 1988. [14] F. Sadri, F. Toni, and P. Torroni, An abductive logic programming architecture for negotiating agents.",
                "In: Proc. 8th European Conf. on Logics in AI, LNAI 2424, pp. 419-431, Springer, 2002. [15] C. Sakama and K. Inoue.",
                "An abductive framework for computing knowledge base updates.",
                "Theory and Practice of Logic Programming 3(6):671-715, 2003.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1029"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Ciencias de la computadora y comunicación Wakayama University Sakaedani, Wakayama 640 8510, Japón sakama@sys.wakayama-u.ac.jp Katsumi Inoue Instituto Nacional de Informática 2-1-2 Hitotsubashi, Chiyoda-Ku Tokio 101 8430, Japón Ki@nii.ac.JP Resumen Este documento estudia un marco lógico para la \"negociación automatizada\" entre dos agentes.",
                "La \"negociación automatizada\" de introducción se ha recibido una atención creciente en sistemas de múltiples agentes, y se han propuesto varios marcos en diferentes contextos ([1, 2, 3, 5, 10, 11, 13, 14], por ejemplo).",
                "Actualmente, no existe una lógica computacional para la \"negociación automatizada\" que tiene reglas de inferencia general para producir (contra) propuestas.",
                "Trabajo relacionado Como hay una serie de literatura sobre \"negociación automatizada\", esta sección se centra en la comparación con los marcos de negociación basados en la lógica y la argumentación.",
                "Esto nos permite realizar una \"negociación automatizada\" además de los solucionadores de respuestas existentes."
            ],
            "translated_text": "",
            "candidates": [
                "negociación automatizada",
                "negociación automatizada",
                "negociación automatizada",
                "negociación automatizada",
                "negociación automatizada",
                "negociación automatizada",
                "negociación automatizada",
                "negociación automatizada",
                "negociación automatizada",
                "negociación automatizada"
            ],
            "error": []
        },
        "multi-agent system": {
            "translated_key": "sistema multiagente",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Negotiation by Abduction and Relaxation Chiaki Sakama Dept.",
                "Computer and Communication Sciences Wakayama University Sakaedani, Wakayama 640 8510, Japan sakama@sys.wakayama-u.ac.jp Katsumi Inoue National Institute of Informatics 2-1-2 Hitotsubashi, Chiyoda-ku Tokyo 101 8430, Japan ki@nii.ac.jp ABSTRACT This paper studies a logical framework for automated negotiation between two agents.",
                "We suppose an agent who has a knowledge base represented by a logic program.",
                "Then, we introduce methods of constructing counter-proposals in response to proposals made by an agent.",
                "To this end, we combine the techniques of extended abduction in artificial intelligence and relaxation in cooperative query answering for databases.",
                "These techniques are respectively used for producing conditional proposals and neighborhood proposals in the process of negotiation.",
                "We provide a negotiation protocol based on the exchange of these proposals and develop procedures for computing new proposals.",
                "Categories and Subject Descriptors F.4.1 [Mathematical Logic]: Logic and constraint programming;; I.2.11 [Distributed Artificial Intelligence]: Multiagent systems General Terms Theory 1.",
                "INTRODUCTION Automated negotiation has been received increasing attention in <br>multi-agent system</br>s, and a number of frameworks have been proposed in different contexts ([1, 2, 3, 5, 10, 11, 13, 14], for instance).",
                "Negotiation usually proceeds in a series of rounds and each agent makes a proposal at every round.",
                "An agent that received a proposal responds in two ways.",
                "One is a critique which is a remark as to whether or not (parts of) the proposal is accepted.",
                "The other is a counter-proposal which is an alternative proposal made in response to a previous proposal [13].",
                "To see these proposals in one-to-one negotiation, suppose the following negotiation dialogue between a buyer agent B and a seller agent S. (Bi (or Si) represents an utterance of B (or S) in the i-th round.)",
                "B1: I want to buy a personal computer of the brand b1, with the specification of CPU:1GHz, Memory:512MB, HDD: 80GB, and a DVD-RW driver.",
                "I want to get it at the price under 1200 USD.",
                "S1: We can provide a PC with the requested specification if you pay for it by cash.",
                "In this case, however, service points are not added for this special discount.",
                "B2: I cannot pay it by cash.",
                "S2: In a normal price, the requested PC costs 1300 USD.",
                "B3: I cannot accept the price.",
                "My budget is under 1200 USD.",
                "S3: We can provide another computer with the requested specification, except that it is made by the brand b2.",
                "The price is exactly 1200 USD.",
                "B4: I do not want a PC of the brand b2.",
                "Instead, I can downgrade a driver from DVD-RW to CD-RW in my initial proposal.",
                "S4: Ok, I accept your offer.",
                "In this dialogue, in response to the opening proposal B1, the counter-proposal S1 is returned.",
                "In the rest of the dialogue, B2, B3, S4 are critiques, while S2, S3, B4 are counterproposals.",
                "Critiques are produced by evaluating a proposal in a knowledge base of an agent.",
                "In contrast, making counter-proposals involves generating an alternative proposal which is more favorable to the responding agent than the original one.",
                "It is known that there are two ways of producing counterproposals: extending the initial proposal or amending part of the initial proposal.",
                "According to [13], the first type appears in the dialogue: A: I propose that you provide me with service X.",
                "B: I propose that I provide you with service X if you provide me with service Z.",
                "The second type is in the dialogue: A: I propose that I provide you with service Y if you provide me with service X.",
                "B: I propose that I provide you with service X if you provide me with service Z.",
                "A negotiation proceeds by iterating such give-andtake dialogues until it reaches an agreement/disagreement.",
                "In those dialogues, agents generate (counter-)proposals by reasoning on their own goals or objectives.",
                "The objective of the agent A in the above dialogues is to obtain service X.",
                "The agent B proposes conditions to provide the service.",
                "In the process of negotiation, however, it may happen that agents are obliged to weaken or change their initial goals to reach a negotiated compromise.",
                "In the dialogue of 1022 978-81-904262-7-5 (RPS) c 2007 IFAAMAS a buyer agent and a seller agent presented above, a buyer agent changes its initial goal by downgrading a driver from DVD-RW to CD-RW.",
                "Such behavior is usually represented as specific meta-knowledge of an agent or specified as negotiation protocols in particular problems.",
                "Currently, there is no computational logic for automated negotiation which has general inference rules for producing (counter-)proposals.",
                "The purpose of this paper is to mechanize a process of building (counter-)proposals in one-to-one negotiation dialogues.",
                "We suppose an agent who has a knowledge base represented by a logic program.",
                "We then introduce methods for generating three different types of proposals.",
                "First, we use the technique of extended abduction in artificial intelligence [8, 15] to construct a conditional proposal as an extension of the original one.",
                "Second, we use the technique of relaxation in cooperative query answering for databases [4, 6] to construct a neighborhood proposal as an amendment of the original one.",
                "Third, combining extended abduction and relaxation, conditional neighborhood proposals are constructed as amended extensions of the original proposal.",
                "We develop a negotiation protocol between two agents based on the exchange of these counter-proposals and critiques.",
                "We also provide procedures for computing proposals in logic programming.",
                "This paper is organized as follows.",
                "Section 2 introduces a logical framework used in this paper.",
                "Section 3 presents methods for constructing proposals, and provides a negotiation protocol.",
                "Section 4 provides methods for computing proposals in logic programming.",
                "Section 5 discusses related works, and Section 6 concludes the paper. 2.",
                "PRELIMINARIES Logic programs considered in this paper are extended disjunctive programs (EDP) [7].",
                "An EDP (or simply a program) is a set of rules of the form: L1 ; · · · ; Ll ← Ll+1 , . . . , Lm, not Lm+1 , . . . , not Ln (n ≥ m ≥ l ≥ 0) where each Li is a positive/negative literal, i.e., A or ¬A for an atom A, and not is negation as failure (NAF). not L is called an NAF-literal.",
                "The symbol ; represents disjunction.",
                "The left-hand side of the rule is the head, and the right-hand side is the body.",
                "For each rule r of the above form, head(r), body+ (r) and body− (r) denote the sets of literals {L1, . . . , Ll}, {Ll+1, . . . , Lm}, and {Lm+1, . . . , Ln}, respectively.",
                "Also, not body− (r) denotes the set of NAF-literals {not Lm+1, . . . , not Ln}.",
                "A disjunction of literals and a conjunction of (NAF-)literals in a rule are identified with its corresponding sets of literals.",
                "A rule r is often written as head(r) ← body+ (r), not body− (r) or head(r) ← body(r) where body(r) = body+ (r)∪not body− (r).",
                "A rule r is disjunctive if head(r) contains more than one literal.",
                "A rule r is an integrity constraint if head(r) = ∅; and r is a fact if body(r) = ∅.",
                "A program is NAF-free if no rule contains NAF-literals.",
                "Two rules/literals are identified with respect to variable renaming.",
                "A substitution is a mapping from variables to terms θ = {x1/t1, . . . , xn/tn}, where x1, . . . , xn are distinct variables and each ti is a term distinct from xi.",
                "Given a conjunction G of (NAF-)literals, Gθ denotes the conjunction obtained by applying θ to G. A program, rule, or literal is ground if it contains no variable.",
                "A program P with variables is a shorthand of its ground instantiation Ground(P), the set of ground rules obtained from P by substituting variables in P by elements of its Herbrand universe in every possible way.",
                "The semantics of an EDP is defined by the answer set semantics [7].",
                "Let Lit be the set of all ground literals in the language of a program.",
                "Suppose a program P and a set of literals S(⊆ Lit).",
                "Then, the reduct P S is the program which contains the ground rule head(r) ← body+ (r) iff there is a rule r in Ground(P) such that body− (r)∩S = ∅.",
                "Given an NAF-free EDP P, Cn(P) denotes the smallest set of ground literals which is (i) closed under P, i.e., for every ground rule r in Ground(P), body(r) ⊆ Cn(P) implies head(r) ∩ Cn(P) = ∅; and (ii) logically closed, i.e., it is either consistent or equal to Lit.",
                "Given an EDP P and a set S of literals, S is an answer set of P if S = Cn(P S ).",
                "A program has none, one, or multiple answer sets in general.",
                "An answer set is consistent if it is not Lit.",
                "A program P is consistent if it has a consistent answer set; otherwise, P is inconsistent.",
                "Abductive logic programming [9] introduces a mechanism of hypothetical reasoning to logic programming.",
                "An abductive framework used in this paper is the extended abduction introduced by Inoue and Sakama [8, 15].",
                "An abductive program is a pair P, H where P is an EDP and H is a set of literals called abducibles.",
                "When a literal L ∈ H contains variables, any instance of L is also an abducible.",
                "An abductive program P, H is consistent if P is consistent.",
                "Throughout the paper, abductive programs are assumed to be consistent unless stated otherwise.",
                "Let G = L1, . . . , Lm, not Lm+1, . . . , not Ln be a conjunction, where all variables in G are existentially quantified at the front and range-restricted, i.e., every variable in Lm+1, . . . , Ln appears in L1, . . . , Lm.",
                "A set S of ground literals satisfies the conjunction G if { L1θ, . . . , Lmθ } ⊆ S and { Lm+1θ, . . . , Lnθ }∩ S = ∅ for some ground instance Gθ with a substitution θ.",
                "Let P, H be an abductive program and G a conjunction as above.",
                "A pair (E, F) is an explanation of an observation G in P, H if1 1. (P \\ F) ∪ E has an answer set which satisfies G, 2. (P \\ F) ∪ E is consistent, 3.",
                "E and F are sets of ground literals such that E ⊆ H\\P and F ⊆ H ∩ P. When (P \\ F) ∪ E has an answer set S satisfying the above three conditions, S is called a belief set of an abductive program P, H satisfying G (with respect to (E, F)).",
                "Note that if P has a consistent answer set S satisfying G, S is also a belief set of P, H satisfying G with respect to (E, F) = (∅, ∅).",
                "Extended abduction introduces/removes hypotheses to/from a program to explain an observation.",
                "Note that normal abduction (as in [9]) considers only introducing hypotheses to explain an observation.",
                "An explanation (E, F) of an observation G is called minimal if for any explanation (E , F ) of G, E ⊆ E and F ⊆ F imply E = E and F = F. Example 2.1.",
                "Consider the abductive program P, H : P : flies(x) ← bird(x), not ab(x) , ab(x) ← broken-wing(x) , bird(tweety) ← , bird(opus) ← , broken-wing(tweety) ← .",
                "H : broken-wing(x) .",
                "The observation G = flies(tweety) has the minimal explanation (E, F) = (∅, {broken-wing(tweety)}). 1 This defines credulous explanations [15].",
                "Skeptical explanations are used in [8].",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1023 3.",
                "NEGOTIATION 3.1 Conditional Proposals by Abduction We suppose an agent who has a knowledge base represented by an abductive program P, H .",
                "A program P consists of two types of knowledge, belief B and desire D, where B represents objective knowledge of an agent, while D represents subjective knowledge in general.",
                "We define P = B ∪ D, but do not distinguish B and D if such distinction is not important in the context.",
                "In contrast, abducibles H are used for representing permissible conditions to make a compromise in the process of negotiation.",
                "Definition 3.1.",
                "A proposal G is a conjunction of literals and NAF-literals: L1, . . . , Lm, not Lm+1, . . . , not Ln where every variable in G is existentially quantified at the front and range-restricted.",
                "In particular, G is called a critique if G = accept or G = reject where accept and reject are the reserved propositions.",
                "A counter-proposal is a proposal made in response to a proposal.",
                "Definition 3.2.",
                "A proposal G is accepted in an abductive program P, H if P has an answer set satisfying G. When a proposal is not accepted, abduction is used for seeking conditions to make it acceptable.",
                "Definition 3.3.",
                "Let P, H be an abductive program and G a proposal.",
                "If (E, F) is a minimal explanation of Gθ for some substitution θ in P, H , the conjunction G : Gθ, E, not F is called a conditional proposal (for G), where E, not F represents the conjunction: A1, . . . , Ak, not Ak+1, . . . , not Al for E = {A1, . . . , Ak} and F = { Ak+1, . . . , Al }.",
                "Proposition 3.1.",
                "Let P, H be an abductive program and G a proposal.",
                "If G is a conditional proposal, there is a belief set S of P, H satisfying G .",
                "Proof.",
                "When G = Gθ, E, not F, (P \\ F) ∪ E has a consistent answer set S satisfying Gθ and E ∩ F = ∅.",
                "In this case, S satisfies Gθ, E, not F. A conditional proposal G provides a minimal requirement for accepting the proposal G. If Gθ has multiple minimal explanations, several conditional proposals exist accordingly.",
                "When (E, F) = (∅, ∅), a conditional proposal is used as a new proposal made in response to the proposal G. Example 3.1.",
                "An agent seeks a position of a research assistant at the computer department of a university with the condition that the salary is at least 50,000 USD per year.",
                "The agent makes his/her request as the proposal:2 G = assist(compt dept), salary(x), x ≥ 50, 000.",
                "The university has the abductive program P, H : P : salary(40, 000) ← assist(compt dept), not has PhD, salary(60, 000) ← assist(compt dept), has PhD, salary(50, 000) ← assist(math dept), salary(55, 000) ← system admin(compt dept), 2 For notational convenience, we often include mathematical (in)equations in proposals/programs.",
                "They are written by literals, for instance, x ≥ y by geq(x, y) with a suitable definition of the predicate geq. employee(x) ← assist(x), employee(x) ← system admin(x), assist(compt dept); assist(math dept) ; system admin(compt dept) ←, H : has PhD, where available positions are represented by disjunction.",
                "According to P, the base salary of a research assistant at the computer department is 40,000 USD, but if he/she has PhD, it is 60,000 USD.",
                "In this case, (E, F) = ({has PhD}, ∅) becomes the minimal explanation of Gθ = assist(compt dept), salary(60, 000) with θ = { x/60, 000 }.",
                "Then, the conditional proposal made by the university becomes assist(compt dept), salary(60, 000), has PhD . 3.2 Neighborhood Proposals by Relaxation When a proposal is unacceptable, an agent tries to construct a new counter-proposal by weakening constraints in the initial proposal.",
                "We use techniques of relaxation for this purpose.",
                "Relaxation is used as a technique of cooperative query answering in databases [4, 6].",
                "When an original query fails in a database, relaxation expands the scope of the query by relaxing the constraints in the query.",
                "This allows the database to return neighborhood answers which are related to the original query.",
                "We use the technique for producing proposals in the process of negotiation.",
                "Definition 3.4.",
                "Let P, H be an abductive program and G a proposal.",
                "Then, G is relaxed to G in the following three ways: Anti-instantiation: Construct G such that G θ = G for some substitution θ.",
                "Dropping conditions: Construct G such that G ⊂ G. Goal replacement: If G is a conjunction G1, G2, where G1 and G2 are conjunctions, and there is a rule L ← G1 in P such that G1θ = G1 for some substitution θ, then build G as Lθ, G2.",
                "Here, Lθ is called a replaced literal.",
                "In each case, every variable in G is existentially quantified at the front and range-restricted.",
                "Anti-instantiation replaces constants (or terms) with fresh variables.",
                "Dropping conditions eliminates some conditions in a proposal.",
                "Goal replacement replaces the condition G1 in G with a literal Lθ in the presence of a rule L ← G1 in P under the condition G1θ = G1.",
                "All these operations generalize proposals in different ways.",
                "Each G obtained by these operations is called a relaxation of G. It is worth noting that these operations are also used in the context of inductive generalization [12].",
                "The relaxed proposal can produce new offers which are neighbor to the original proposal.",
                "Definition 3.5.",
                "Let P, H be an abductive program and G a proposal. 1.",
                "Let G be a proposal obtained by anti-instantiation.",
                "If P has an answer set S which satisfies G θ for some substitution θ and G θ = G, G θ is called a neighborhood proposal by anti-instantiation. 2.",
                "Let G be a proposal obtained by dropping conditions.",
                "If P has an answer set S which satisfies G θ for some substitution θ, G θ is called a neighborhood proposal by dropping conditions. 1024 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.",
                "Let G be a proposal obtained by goal replacement.",
                "For a replaced literal L ∈ G and a rule H ← B in P such that L = Hσ and (G \\ {L}) ∪ Bσ = G for some substitution σ, put G = (G \\ {L}) ∪ Bσ.",
                "If P has an answer set S which satisfies G θ for some substitution θ, G θ is called a neighborhood proposal by goal replacement.",
                "Example 3.2. (cont.",
                "Example 3.1) Given the proposal G = assist(compt dept), salary(x), x ≥ 50, 000, • G1 = assist(w), salary(x), x ≥ 50, 000 is produced by substituting compt dept with a variable w. As G1θ1 = assist(math dept), salary(50, 000) with θ1 = { w/math dept } is satisfied by an answer set of P, G1θ1 becomes a neighborhood proposal by anti-instantiation. • G2 = assist(compt dept), salary(x) is produced by dropping the salary condition x ≥ 50, 000.",
                "As G2θ2 = assist(compt dept), salary(40, 000) with θ2 = { x/40, 000 } is satisfied by an answer set of P, G2θ2 becomes a neighborhood proposal by dropping conditions. • G3 = employee(compt dept), salary(x), x ≥ 50, 000 is produced by replacing assist(compt dept) with employee(compt dept) using the rule employee(x) ← assist(x) in P. By G3 and the rule employee(x) ← system admin(x) in P, G3 = sys admin(compt dept), salary(x), x ≥ 50, 000 is produced.",
                "As G3 θ3 = sys admin(compt dept), salary(55, 000) with θ3 = { x/55, 000 } is satisfied by an answer set of P, G3 θ3 becomes a neighborhood proposal by goal replacement.",
                "Finally, extended abduction and relaxation are combined to produce conditional neighborhood proposals.",
                "Definition 3.6.",
                "Let P, H be an abductive program and G a proposal. 1.",
                "Let G be a proposal obtained by either anti-instantiation or dropping conditions.",
                "If (E, F) is a minimal explanation of G θ(= G) for some substitution θ, the conjunction G θ, E, not F is called a conditional neighborhood proposal by anti-instantiation/dropping conditions. 2.",
                "Let G be a proposal obtained by goal replacement.",
                "Suppose G as in Definition 3.5(3).",
                "If (E, F) is a minimal explanation of G θ for some substitution θ, the conjunction G θ, E, not F is called a conditional neighborhood proposal by goal replacement.",
                "A conditional neighborhood proposal reduces to a neighborhood proposal when (E, F) = (∅, ∅). 3.3 Negotiation Protocol A negotiation protocol defines how to exchange proposals in the process of negotiation.",
                "This section presents a negotiation protocol in our framework.",
                "We suppose one-to-one negotiation between two agents who have a common ontology and the same language for successful communication.",
                "Definition 3.7.",
                "A proposal L1, ..., Lm, not Lm+1, ..., not Ln violates an integrity constraint ← body+ (r), not body− (r) if for any substitution θ, there is a substitution σ such that body+ (r)σ ⊆ { L1θ, . . . , Lmθ }, body− (r)σ∩{ L1θ, . . . , Lmθ } = ∅, and body− (r)σ ⊆ { Lm+1θ, . . . , Lnθ }.",
                "Integrity constraints are conditions which an agent should satisfy, so that they are used to explain why an agent does not accept a proposal.",
                "A negotiation proceeds in a series of rounds.",
                "Each i-th round (i ≥ 1) consists of a proposal Gi 1 made by one agent Ag1 and another proposal Gi 2 made by the other agent Ag2.",
                "Definition 3.8.",
                "Let P1, H1 be an abductive program of an agent Ag1 and Gi 2 a proposal made by Ag2 at the i-th round.",
                "A critique set of Ag1 (at the i-th round) is a set CSi 1(P1, Gj 2) = CSi−1 1 (P1, Gj−1 2 ) ∪ { r | r is an integrity constraint in P1 and Gj 2 violates r } where j = i − 1 or i, and CS0 1 (P1, G0 2) = CS1 1 (P1, G0 2) = ∅.",
                "A critique set of an agent Ag1 accumulates integrity constraints which are violated by proposals made by another agent Ag2.",
                "CSi 2(P2, Gj 1) is defined in the same manner.",
                "Definition 3.9.",
                "Let Pk, Hk be an abductive program of an agent Agk and Gj a proposal, which is not a critique, made by any agent at the j(≤ i)-th round.",
                "A negotiation set of Agk (at the i-th round) is a triple NSi k = (Si c, Si n, Si cn), where Si c is the set of conditional proposals, Si n is the set of neighborhood proposals, and Si cn is the set of conditional neighborhood proposals, produced by Gj and Pk, Hk .",
                "A negotiation set represents the space of possible proposals made by an agent.",
                "Si x (x ∈ {c, n, cn}) accumulates proposals produced by Gj (1 ≤ j ≤ i) according to Definitions 3.3, 3.5, and 3.6.",
                "Note that an agent can construct counter-proposals by modifying its own previous proposals or another agents proposals.",
                "An agent Agk accumulates proposals that are made by Agk but are rejected by another agent, in the failed proposal set FP i k (at the i-th round), where FP 0 k = ∅.",
                "Suppose two agents Ag1 and Ag2 who have abductive programs P1, H1 and P2, H2 , respectively.",
                "Given a proposal G1 1 which is satisfied by an answer set of P1, a negotiation starts.",
                "In response to the proposal Gi 1 made by Ag1 at the i-th round, Ag2 behaves as follows. 1.",
                "If Gi 1 = accept, an agreement is reached and negotiation ends in success. 2.",
                "Else if Gi 1 = reject, put FP i 2 = FPi−1 2 ∪{Gi−1 2 } where {G0 2} = ∅.",
                "Proceed to the step 4(b). 3.",
                "Else if P2 has an answer set satisfying Gi 1, Ag2 returns Gi 2 = accept to Ag1.",
                "Negotiation ends in success. 4.",
                "Otherwise, Ag2 behaves as follows.",
                "Put FP i 2 = FPi−1 2 . (a) If Gi 1 violates an integrity constraint in P2, return the critique Gi 2 = reject to Ag1, together with the critique set CSi 2(P2, Gi 1). (b) Otherwise, construct NSi 2 as follows. (i) Produce Si c. Let μ(Si c) = { p | p ∈ Si c \\ FPi 2 and p satisfies the constraints in CSi 1(P1, Gi−1 2 )}.",
                "If μ(Si c) = ∅, select one from μ(Si c) and propose it as Gi 2 to Ag1; otherwise, go to (ii). (ii) Produce Si n. If μ(Si n) = ∅, select one from μ(Si n) and propose it as Gi 2 to Ag1; otherwise, go to (iii). (iii) Produce Si cn.",
                "If μ(Si cn) = ∅, select one from μ(Si cn) and propose it as Gi 2 to Ag1; otherwise, negotiation ends in failure.",
                "This means that Ag2 can make no counter-proposal or every counterproposal made by Ag2 is rejected by Ag1.",
                "In the step 4(a), Ag2 rejects the proposal Gi 1 and returns the reason of rejection as a critique set.",
                "This helps for Ag1 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1025 in preparing a next counter-proposal.",
                "In the step 4(b), Ag2 constructs a new proposal.",
                "In its construction, Ag2 should take care of the critique set CSi 1(P1, Gi−1 2 ), which represents integrity constraints, if any, accumulated in previous rounds, that Ag1 must satisfy.",
                "Also, FP i 2 is used for removing proposals which have been rejected.",
                "Construction of Si x (x ∈ {c, n, cn}) in NSi 2 is incrementally done by adding new counter-proposals produced by Gi 1 or Gi−1 2 to Si−1 x .",
                "For instance, Si n in NSi 2 is computed as Si n = Si−1 n ∪{ p | p is a neighborhood proposal made by Gi 1 } ∪ { p | p is a neighborhood proposal made by Gi−1 2 }, where S0 n = ∅.",
                "That is, Si n is constructed from Si−1 n by adding new proposals which are obtained by modifying the proposal Gi 1 made by Ag1 at the i-th round or modifying the proposal Gi−1 2 made by Ag2 at the (i − 1)-th round.",
                "Si c and Si cn are obtained as well.",
                "In the above protocol, an agent produces Si c at first, secondly Si n, and finally Si cn.",
                "This strategy seeks conditions which satisfy the given proposal, prior to neighborhood proposals which change the original one.",
                "Another strategy, which prefers neighborhood proposals to conditional ones, is also considered.",
                "Conditional neighborhood proposals are to be considered in the last place, since they differ from the original one to the maximal extent.",
                "The above protocol produces the candidate proposals in Si x for each x ∈ {c, n, cn} at once.",
                "We can consider a variant of the protocol in which each proposal in Si x is constructed one by one (see Example 3.3).",
                "The above protocol is repeatedly applied to each one of the two negotiating agents until a negotiation ends in success/failure.",
                "Formally, the above negotiation protocol has the following properties.",
                "Theorem 3.2.",
                "Let Ag1 and Ag2 be two agents having abductive programs P1, H1 and P2, H2 , respectively. 1.",
                "If P1, H1 and P2, H2 are function-free (i.e., both Pi and Hi contain no function symbol), any negotiation will terminate. 2.",
                "If a negotiation terminates with agreement on a proposal G, both P1, H1 and P2, H2 have belief sets satisfying G. Proof. 1.",
                "When an abductive program is function-free, abducibles and negotiation sets are both finite.",
                "Moreover, if a proposal is once rejected, it is not proposed again by the function μ.",
                "Thus, negotiation will terminate in finite steps. 2.",
                "When a proposal G is made by Ag1, P1, H1 has a belief set satisfying G. If the agent Ag2 accepts the proposal G, it is satisfied by an answer set of P2 which is also a belief set of P2, H2 .",
                "Example 3.3.",
                "Suppose a buying-selling situation in the introduction.",
                "A seller agent has the abductive program Ps, Hs in which Ps consists of belief Bs and desire Ds: Bs : pc(b1, 1G, 512M, 80G) ; pc(b2, 1G, 512M, 80G) ←,(1) dvd-rw ; cd-rw ←, (2) Ds : normal price(1300) ← pc(b1, 1G, 512M, 80G), dvd-rw, (3) normal price(1200) ← pc(b1, 1G, 512M, 80G), cd-rw, (4) normal price(1200) ← pc(b2, 1G, 512M, 80G), dvd-rw, (5) price(x) ← normal price(x), add point, (6) price(x ∗ 0.9) ← normal price(x), pay cash, not add point,(7) add point ←, (8) Hs : add point, pay cash.",
                "Here, (1) and (2) represent selection of products.",
                "The atom pc(b1, 1G, 512M, 80G) represents that the seller agent has a PC of the brand b1 such that CPU is 1GHz, memory is 512MB, and HDD is 80GB.",
                "Prices of products are represented as desire of the seller.",
                "The rules (3) - (5) are normal prices of products.",
                "A normal price is a selling price on the condition that service points are added (6).",
                "On the other hand, a discount price is applied if the paying method is cash and no service point is added (7).",
                "The fact (8) represents the addition of service points.",
                "This service would be withdrawn in case of discount prices, so add point is specified as an abducible.",
                "A buyer agent has the abductive program Pb, Hb in which Pb consists of belief Bb and desire Db: Bb : drive ← dvd-rw, (9) drive ← cd-rw, (10) price(x) ←, (11) Db : pc(b1, 1G, 512M, 80G) ←, (12) dvd-rw ←, (13) cd-rw ← not dvd-rw, (14) ← pay cash, (15) ← price(x), x > 1200, (16) Hb : dvd-rw.",
                "Rules (12) - (16) are the buyers desire.",
                "Among them, (15) and (16) impose constraints for buying a PC.",
                "A DVD-RW is specified as an abducible which is subject to concession. (1st round) First, the following proposal is given by the buyer agent: G1 b : pc(b1, 1G, 512M, 80G), dvd-rw, price(x), x ≤ 1200.",
                "As Ps has no answer set which satisfies G1 b , the seller agent cannot accept the proposal.",
                "The seller takes an action of making a counter-proposal and performs abduction.",
                "As a result, the seller finds the minimal explanation (E, F) = ({ pay cash }, { add point }) which explains G1 b θ1 with θ1 = { x/1170 }.",
                "The seller constructs the conditional proposal: G1 s : pc(b1, 1G, 512M, 80G), dvd-rw, price(1170), pay cash, not add point and offers it to the buyer. (2nd round) The buyer does not accept G1 s because he/she cannot pay it by cash (15).",
                "The buyer then returns the critique G2 b = reject to the seller, together with the critique set CS2 b (Pb, G1 s) = {(15)}.",
                "In response to this, the seller tries to make another proposal which satisfies the constraint in this critique set.",
                "As G1 s is stored in FP 2 s and no other conditional proposal satisfying the buyers requirement exists, the seller produces neighborhood proposals.",
                "He/she relaxes G1 b by dropping x ≤ 1200 in the condition, and produces pc(b1, 1G, 512M, 80G), dvd-rw, price(x).",
                "As Ps has an answer set which satisfies G2 s : pc(b1, 1G, 512M, 80G), dvd-rw, price(1300), 1026 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) the seller offers G2 s as a new counter-proposal. (3rd round) The buyer does not accept G2 s because he/she cannot pay more than 1200USD (16).",
                "The buyer again returns the critique G3 b = reject to the seller, together with the critique set CS3 b (Pb, G2 s) = CS2 b (Pb, G1 s) ∪ {(16)}.",
                "The seller then considers another proposal by replacing b1 with a variable w, G1 b now becomes pc(w, 1G, 512M, 80G), dvd-rw, price(x), x ≤ 1200.",
                "As Ps has an answer set which satisfies G3 s : pc(b2, 1G, 512M, 80G), dvd-rw, price(1200), the seller offers G3 s as a new counter-proposal. (4th round) The buyer does not accept G3 s because a PC of the brand b2 is out of his/her interest and Pb has no answer set satisfying G3 s. Then, the buyer makes a concession by changing his/her original goal.",
                "The buyer relaxes G1 b by goal replacement using the rule (9) in Pb, and produces pc(b1, 1G, 512M, 80G), drive, price(x), x ≤ 1200.",
                "Using (10), the following proposal is produced: pc(b1, 1G, 512M, 80G), cd-rw, price(x), x ≤ 1200.",
                "As Pb \\ { dvd-rw } has a consistent answer set satisfying the above proposal, the buyer proposes the conditional neighborhood proposal G4 b : pc(b1, 1G, 512M, 80G), cd-rw, not dvd-rw, price(x), x ≤ 1200 to the seller agent.",
                "Since Ps also has an answer set satisfying G4 b , the seller accepts it and sends the message G4 s = accept to the buyer.",
                "Thus, the negotiation ends in success. 4.",
                "COMPUTATION In this section, we provide methods of computing proposals in terms of answer sets of programs.",
                "We first introduce some definitions from [15].",
                "Definition 4.1.",
                "Given an abductive program P, H , the set UR of update rules is defined as: UR = { L ← not L, L ← not L | L ∈ H } ∪ { +L ← L | L ∈ H \\ P } ∪ { −L ← not L | L ∈ H ∩ P } , where L, +L, and −L are new atoms uniquely associated with every L ∈ H. The atoms +L and −L are called update atoms.",
                "By the definition, the atom L becomes true iff L is not true.",
                "The pair of rules L ← not L and L ← not L specify the situation that an abducible L is true or not.",
                "When p(x) ∈ H and p(a) ∈ P but p(t) ∈ P for t = a, the rule +L ← L precisely becomes +p(t) ← p(t) for any t = a.",
                "In this case, the rule is shortly written as +p(x) ← p(x), x = a.",
                "Generally, the rule becomes +p(x) ← p(x), x = t1, . . . , x = tn for n such instances.",
                "The rule +L ← L derives the atom +L if an abducible L which is not in P is to be true.",
                "In contrast, the rule −L ← not L derives the atom −L if an abducible L which is in P is not to be true.",
                "Thus, update atoms represent the change of truth values of abducibles in a program.",
                "That is, +L means the introduction of L, while −L means the deletion of L. When an abducible L contains variables, the associated update atom +L or −L is supposed to have exactly the same variables.",
                "In this case, an update atom is semantically identified with its ground instances.",
                "The set of all update atoms associated with the abducibles in H is denoted by UH, and UH = UH+ ∪ UH− where UH+ (resp.",
                "UH− ) is the set of update atoms of the form +L (resp. −L).",
                "Definition 4.2.",
                "Given an abductive program P, H , its update program UP is defined as the program UP = (P \\ H) ∪ UR .",
                "An answer set S of UP is called U-minimal if there is no answer set T of UP such that T ∩ UH ⊂ S ∩ UH.",
                "By the definition, U-minimal answer sets exist whenever UP has answer sets.",
                "Update programs are used for computing (minimal) explanations of an observation.",
                "Given an observation G as a conjunction of literals and NAF-literals possibly containing variables, we introduce a new ground literal O together with the rule O ← G. In this case, O has an explanation (E, F) iff G has the same explanation.",
                "With this replacement, an observation is assumed to be a ground literal without loss of generality.",
                "In what follows, E+ = { +L | L ∈ E } and F − = { −L | L ∈ F } for E ⊆ H and F ⊆ H. Proposition 4.1. ([15]) Let P, H be an abductive program, UP its update program, and G a ground literal representing an observation.",
                "Then, a pair (E, F) is an explanation of G iff UP ∪ { ← not G } has a consistent answer set S such that E+ = S ∩ UH+ and F− = S ∩ UH− .",
                "In particular, (E, F) is a minimal explanation iff S is a U-minimal answer set.",
                "Example 4.1.",
                "To explain the observation G = flies(t) in the program P of Example 2.1, first construct the update program UP of P:3 UP : flies(x) ← bird(x), not ab(x), ab(x) ← broken-wing(x) , bird(t) ← , bird(o) ← , broken-wing(x) ← not broken-wing(x), broken-wing(x) ← not broken-wing(x), +broken-wing(x) ← broken-wing(x), x = t , −broken-wing(t) ← not broken-wing(t) .",
                "Next, consider the program UP ∪ { ← not flies(t) }.",
                "It has the single U-minimal answer set: S = { bird(t), bird(o), flies(t), flies(o), broken-wing(t), broken-wing(o), −broken-wing(t) }.",
                "The unique minimal explanation (E, F) = (∅, {broken-wing(t)}) of G is expressed by the update atom −broken-wing(t) in S ∩ UH− .",
                "Proposition 4.2.",
                "Let P, H be an abductive program and G a ground literal representing an observation.",
                "If P ∪ { ← not G } has a consistent answer set S, G has the minimal explanation (E, F) = (∅, ∅) and S satisfies G. Now we provide methods for computing (counter-)proposals.",
                "First, conditional proposals are computed as follows. input : an abductive program P, H , a proposal G; output : a set Sc of proposals.",
                "If G is a ground literal, compute its minimal explanation (E, F) in P, H using the update program.",
                "Put G, E, not F in Sc.",
                "Else if G is a conjunction possibly containing variables, consider the abductive program 3 t represents tweety and o represents opus.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1027 P ∪{ O ← G }, H with a ground literal O. Compute a minimal explanation of O in P ∪ { O ← G }, H using its update program.",
                "If O has a minimal explanation (E, F) with a substitution θ for variables in G, put Gθ, E, not F in Sc.",
                "Next, neighborhood proposals are computed as follows. input : an abductive program P, H , a proposal G; output : a set Sn of proposals. % neighborhood proposals by anti-instantiation; Construct G by anti-instantiation.",
                "For a ground literal O, if P ∪ { O ← G } ∪ { ← not O } has a consistent answer set satisfying G θ with a substitution θ and G θ = G, put G θ in Sn. % neighborhood proposals by dropping conditions; Construct G by dropping conditions.",
                "If G is a ground literal and the program P ∪ { ← not G } has a consistent answer set, put G in Sn.",
                "Else if G is a conjunction possibly containing variables, do the following.",
                "For a ground literal O, if P ∪{ O ← G }∪{ ← not O } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn. % neighborhood proposals by goal replacement; Construct G by goal replacement.",
                "If G is a ground literal and there is a rule H ← B in P such that G = Hσ and Bσ = G for some substitution σ, put G = Bσ.",
                "If P ∪ { ← not G } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn.",
                "Else if G is a conjunction possibly containing variables, do the following.",
                "For a replaced literal L ∈ G , if there is a rule H ← B in P such that L = Hσ and (G \\ {L}) ∪ Bσ = G for some substitution σ, put G = (G \\ {L}) ∪ Bσ.",
                "For a ground literal O, if P ∪ { O ← G } ∪ { ← not O } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn.",
                "Theorem 4.3.",
                "The set Sc (resp.",
                "Sn) computed above coincides with the set of conditional proposals (resp. neighborhood proposals).",
                "Proof.",
                "The result for Sc follows from Definition 3.3 and Proposition 4.1.",
                "The result for Sn follows from Definition 3.5 and Proposition 4.2.",
                "Conditional neighborhood proposals are computed by combining the above two procedures.",
                "Those proposals are computed at each round.",
                "Note that the procedure for computing Sn contains some nondeterministic choices.",
                "For instance, there are generally several candidates of literals to relax in a proposal.",
                "Also, there might be several rules in a program for the usage of goal replacement.",
                "In practice, an agent can prespecify literals in a proposal for possible relaxation or rules in a program for the usage of goal replacement. 5.",
                "RELATED WORK As there are a number of literature on automated negotiation, this section focuses on comparison with negotiation frameworks based on logic and argumentation.",
                "Sadri et al. [14] use abductive logic programming as a representation language of negotiating agents.",
                "Agents negotiate using common dialogue primitives, called dialogue moves.",
                "Each agent has an abductive logic program in which a sequence of dialogues are specified by a program, a dialogue protocol is specified as constraints, and dialogue moves are specified as abducibles.",
                "The behavior of agents is regulated by an observe-think-act cycle.",
                "Once a dialogue move is uttered by an agent, another agent that observed the utterance thinks and acts using a proof procedure.",
                "Their approach and ours both employ abductive logic programming as a platform of agent reasoning, but the use of it is quite different.",
                "First, they use abducibles to specify dialogue primitives of the form tell(utterer, receiver, subject, identifier, time), while we use abducibles to specify arbitrary permissible hypotheses to construct conditional proposals.",
                "Second, a program pre-specifies a plan to carry out in order to achieve a goal, together with available/missing resources in the context of resource-exchanging problems.",
                "This is in contrast with our method in which possible counter-proposals are newly constructed in response to a proposal made by an agent.",
                "Third, they specify a negotiation policy inside a program (as integrity constraints), while we give a protocol independent of individual agents.",
                "They provide an operational model that completely specifies the behavior of agents in terms of agent cycle.",
                "We do not provide such a complete specification of the behavior of agents.",
                "Our primary interest is to mechanize construction of proposals.",
                "Bracciali and Torroni [2] formulate abductive agents that have knowledge in abductive logic programs.",
                "To explain an observation, two agents communicate by exchanging integrity constraints.",
                "In the process of communication, an agent can revise its own integrity constraints according to the information provided by the other agent.",
                "A set IC of integrity constraints relaxes a set IC (or IC tightens IC ) if any observation that can be proved with respect to IC can also be proved with respect to IC .",
                "For instance, IC : ← a, b, c relaxes IC : ← a, b.",
                "Thus, they use relaxation for weakening the constraints in an abductive logic program.",
                "In contrast, we use relaxation for weakening proposals and three different relaxation methods, anti-instantiation, dropping conditions, and goal replacement, are considered.",
                "Their goal is to explain an observation by revising integrity constraints of an agent through communication, while we use integrity constraints for communication to explain critiques and help other agents in making counter-proposals.",
                "Meyer et al. [11] introduce a logical framework for negotiating agents.",
                "They introduce two different modes of negotiation: concession and adaptation.",
                "They provide rational postulates to characterize negotiated outcomes between two agents, and describe methods for constructing outcomes.",
                "They provide logical conditions for negotiated outcomes to satisfy, but they do not describe a process of negotiation nor negotiation protocols.",
                "Moreover, they represent agents by classical propositional theories, which is different from our abductive logic programming framework.",
                "Foo et al. [5] model one-to-one negotiation as a one-time encounter between two extended logic programs.",
                "An agent offers an answer set of its program, and their mutual deal is regarded as a trade on their answer sets.",
                "Starting from the initial agreement set S∩T for an answer set S of an agent and an answer set T of another agent, each agent extends this set to reflect its own demand while keeping consistency with demand of the other agent.",
                "Their algorithm returns new programs having answer sets which are consistent with each other and keep the agreement set.",
                "The work is extended to repeated encounters in [3].",
                "In their framework, two agents exchange answer sets to produce a common belief set, which is different from our framework of exchanging proposals.",
                "There are a number of proposals for negotiation based 1028 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) on argumentation.",
                "An advantage of argumentation-based negotiation is that it constructs a proposal with arguments supporting the proposal [1].",
                "The existence of arguments is useful to convince other agents of reasons why an agent offers (counter-)proposals or returns critiques.",
                "Parsons et al. [13] develop a logic of argumentation-based negotiation among BDI agents.",
                "In one-to-one negotiation, an agent A generates a proposal together with its arguments, and passes it to another agent B.",
                "The proposal is evaluated by B which attempts to build arguments against it.",
                "If it conflicts with Bs interest, B informs A of its objection by sending back its attacking argument.",
                "In response to this, A tries to find an alternative way of achieving its original objective, or a way of persuading B to drop its objection.",
                "If either type of argument can be found, A will submit it to B.",
                "If B finds no reason to reject the new proposal, it will be accepted and the negotiation ends in success.",
                "Otherwise, the process is iterated.",
                "In this negotiation processes, the agent A never changes its original objective, so that negotiation ends in failure if A fails to find an alternative way of achieving the original objective.",
                "In our framework, when a proposal is rejected by another agent, an agent can weaken or change its objective by abduction and relaxation.",
                "Our framework does not have a mechanism of argumentation, but reasons for critiques can be informed by responding critique sets.",
                "Kakas and Moraitis [10] propose a negotiation protocol which integrates abduction within an argumentation framework.",
                "A proposal contains an offer corresponding to the negotiation object, together with supporting information representing conditions under which this offer is made.",
                "Supporting information is computed by abduction and is used for constructing conditional arguments during the process of negotiation.",
                "In their negotiation protocol, when an agent cannot satisfy its own goal, the agent considers the other agents goal and searches for conditions under which the goal is acceptable.",
                "Our present approach differs from theirs in the following points.",
                "First, they use abduction to seek conditions to support arguments, while we use abduction to seek conditions for proposals to accept.",
                "Second, in their negotiation protocol, counter-proposals are chosen among candidates based on preference knowledge of an agent at meta-level, which represents policy under which an agent uses its object-level decision rules according to situations.",
                "In our framework, counter-proposals are newly constructed using abduction and relaxation.",
                "The method of construction is independent of particular negotiation protocols.",
                "As [2, 10, 14], abduction or abductive logic programming used in negotiation is mostly based on normal abduction.",
                "In contrast, our approach is based on extended abduction which can not only introduce hypotheses but remove them from a program.",
                "This is another important difference.",
                "Relaxation and neighborhood query answering are devised to make databases cooperative with their users [4, 6].",
                "In this sense, those techniques have the spirit similar to cooperative problem solving in <br>multi-agent system</br>s.",
                "As far as the authors know, however, there is no study which applies those technique to agent negotiation. 6.",
                "CONCLUSION In this paper we proposed a logical framework for negotiating agents.",
                "To construct proposals in the process of negotiation, we combined the techniques of extended abduction and relaxation.",
                "It was shown that these two operations are used for general inference rules in producing proposals.",
                "We developed a negotiation protocol between two agents based on exchange of proposals and critiques, and provided procedures for computing proposals in abductive logic programming.",
                "This enables us to realize automated negotiation on top of the existing answer set solvers.",
                "The present framework does not have a mechanism of selecting an optimal (counter-)proposal among different alternatives.",
                "To compare and evaluate proposals, an agent must have preference knowledge of candidate proposals.",
                "Further elaboration to maximize the utility of agents is left for future study. 7.",
                "REFERENCES [1] L. Amgoud, S. Parsons, and N. Maudet.",
                "Arguments, dialogue, and negotiation.",
                "In: Proc.",
                "ECAI-00, pp. 338-342, IOS Press, 2000. [2] A. Bracciali and P. Torroni.",
                "A new framework for knowledge revision of abductive agents through their interaction.",
                "In: Proc.",
                "CLIMA-IV, Computational Logic in Multi-Agent Systems, LNAI 3259, pp. 159-177, 2004. [3] W. Chen, M. Zhang, and N. Foo.",
                "Repeated negotiation of logic programs.",
                "In: Proc. 7th Workshop on Nonmonotonic Reasoning, Action and Change, 2006. [4] W. W. Chu, Q. Chen, and R.-C. Lee.",
                "Cooperative query answering via type abstraction hierarchy.",
                "In: Cooperating Knowledge Based Systems, S. M. Deen ed., pp. 271-290, Springer, 1990. [5] N. Foo, T. Meyer, Y. Zhang, and D. Zhang.",
                "Negotiating logic programs.",
                "In: Proc. 6th Workshop on Nonmonotonic Reasoning, Action and Change, 2005. [6] T. Gaasterland, P. Godfrey, and J. Minker.",
                "Relaxation as a platform for cooperative answering.",
                "Journal of Intelligence Information Systems 1(3/4):293-321, 1992. [7] M. Gelfond and V. Lifschitz.",
                "Classical negation in logic programs and disjunctive databases.",
                "New Generation Computing 9:365-385, 1991. [8] K. Inoue and C. Sakama.",
                "Abductive framework for nonmonotonic theory change.",
                "In: Proc.",
                "IJCAI-95, pp. 204-210, Morgan Kaufmann. [9] A. C. Kakas, R. A. Kowalski, and F. Toni, The role of abduction in logic programming.",
                "In: Handbook of Logic in AI and Logic Programming, D. M. Gabbay, et al. (eds), vol. 5, pp. 235-324, Oxford University Press, 1998. [10] A. C. Kakas and P. Moraitis.",
                "Adaptive agent negotiation via argumentation.",
                "In: Proc.",
                "AAMAS-06, pp. 384-391, ACM Press. [11] T. Meyer, N. Foo, R. Kwok, and D. Zhang.",
                "Logical foundation of negotiation: outcome, concession and adaptation.",
                "In: Proc.",
                "AAAI-04, pp. 293-298, MIT Press. [12] R. S. Michalski.",
                "A theory and methodology of inductive learning.",
                "In: Machine Learning: An Artificial Intelligence Approach, R. S. Michalski, et al. (eds), pp. 83-134, Morgan Kaufmann, 1983. [13] S. Parsons, C. Sierra and N. Jennings.",
                "Agents that reason and negotiate by arguing.",
                "Journal of Logic and Computation, 8(3):261-292, 1988. [14] F. Sadri, F. Toni, and P. Torroni, An abductive logic programming architecture for negotiating agents.",
                "In: Proc. 8th European Conf. on Logics in AI, LNAI 2424, pp. 419-431, Springer, 2002. [15] C. Sakama and K. Inoue.",
                "An abductive framework for computing knowledge base updates.",
                "Theory and Practice of Logic Programming 3(6):671-715, 2003.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1029"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Introducción La negociación automatizada se ha recibido una atención creciente en \"Sistemas de múltiples agentes\", y se han propuesto varios marcos en diferentes contextos ([1, 2, 3, 5, 10, 11, 13, 14], por ejemplo).",
                "En este sentido, esas técnicas tienen el espíritu similar a la resolución de problemas cooperativos en el \"sistema de múltiples agentes\"."
            ],
            "translated_text": "",
            "candidates": [
                "sistema de múltiples agentes",
                "Sistemas de múltiples agentes",
                "sistema de múltiples agentes",
                "sistema de múltiples agentes"
            ],
            "error": []
        },
        "one-to-one negotiation": {
            "translated_key": "Negociación uno a uno",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Negotiation by Abduction and Relaxation Chiaki Sakama Dept.",
                "Computer and Communication Sciences Wakayama University Sakaedani, Wakayama 640 8510, Japan sakama@sys.wakayama-u.ac.jp Katsumi Inoue National Institute of Informatics 2-1-2 Hitotsubashi, Chiyoda-ku Tokyo 101 8430, Japan ki@nii.ac.jp ABSTRACT This paper studies a logical framework for automated negotiation between two agents.",
                "We suppose an agent who has a knowledge base represented by a logic program.",
                "Then, we introduce methods of constructing counter-proposals in response to proposals made by an agent.",
                "To this end, we combine the techniques of extended abduction in artificial intelligence and relaxation in cooperative query answering for databases.",
                "These techniques are respectively used for producing conditional proposals and neighborhood proposals in the process of negotiation.",
                "We provide a negotiation protocol based on the exchange of these proposals and develop procedures for computing new proposals.",
                "Categories and Subject Descriptors F.4.1 [Mathematical Logic]: Logic and constraint programming;; I.2.11 [Distributed Artificial Intelligence]: Multiagent systems General Terms Theory 1.",
                "INTRODUCTION Automated negotiation has been received increasing attention in multi-agent systems, and a number of frameworks have been proposed in different contexts ([1, 2, 3, 5, 10, 11, 13, 14], for instance).",
                "Negotiation usually proceeds in a series of rounds and each agent makes a proposal at every round.",
                "An agent that received a proposal responds in two ways.",
                "One is a critique which is a remark as to whether or not (parts of) the proposal is accepted.",
                "The other is a counter-proposal which is an alternative proposal made in response to a previous proposal [13].",
                "To see these proposals in <br>one-to-one negotiation</br>, suppose the following negotiation dialogue between a buyer agent B and a seller agent S. (Bi (or Si) represents an utterance of B (or S) in the i-th round.)",
                "B1: I want to buy a personal computer of the brand b1, with the specification of CPU:1GHz, Memory:512MB, HDD: 80GB, and a DVD-RW driver.",
                "I want to get it at the price under 1200 USD.",
                "S1: We can provide a PC with the requested specification if you pay for it by cash.",
                "In this case, however, service points are not added for this special discount.",
                "B2: I cannot pay it by cash.",
                "S2: In a normal price, the requested PC costs 1300 USD.",
                "B3: I cannot accept the price.",
                "My budget is under 1200 USD.",
                "S3: We can provide another computer with the requested specification, except that it is made by the brand b2.",
                "The price is exactly 1200 USD.",
                "B4: I do not want a PC of the brand b2.",
                "Instead, I can downgrade a driver from DVD-RW to CD-RW in my initial proposal.",
                "S4: Ok, I accept your offer.",
                "In this dialogue, in response to the opening proposal B1, the counter-proposal S1 is returned.",
                "In the rest of the dialogue, B2, B3, S4 are critiques, while S2, S3, B4 are counterproposals.",
                "Critiques are produced by evaluating a proposal in a knowledge base of an agent.",
                "In contrast, making counter-proposals involves generating an alternative proposal which is more favorable to the responding agent than the original one.",
                "It is known that there are two ways of producing counterproposals: extending the initial proposal or amending part of the initial proposal.",
                "According to [13], the first type appears in the dialogue: A: I propose that you provide me with service X.",
                "B: I propose that I provide you with service X if you provide me with service Z.",
                "The second type is in the dialogue: A: I propose that I provide you with service Y if you provide me with service X.",
                "B: I propose that I provide you with service X if you provide me with service Z.",
                "A negotiation proceeds by iterating such give-andtake dialogues until it reaches an agreement/disagreement.",
                "In those dialogues, agents generate (counter-)proposals by reasoning on their own goals or objectives.",
                "The objective of the agent A in the above dialogues is to obtain service X.",
                "The agent B proposes conditions to provide the service.",
                "In the process of negotiation, however, it may happen that agents are obliged to weaken or change their initial goals to reach a negotiated compromise.",
                "In the dialogue of 1022 978-81-904262-7-5 (RPS) c 2007 IFAAMAS a buyer agent and a seller agent presented above, a buyer agent changes its initial goal by downgrading a driver from DVD-RW to CD-RW.",
                "Such behavior is usually represented as specific meta-knowledge of an agent or specified as negotiation protocols in particular problems.",
                "Currently, there is no computational logic for automated negotiation which has general inference rules for producing (counter-)proposals.",
                "The purpose of this paper is to mechanize a process of building (counter-)proposals in <br>one-to-one negotiation</br> dialogues.",
                "We suppose an agent who has a knowledge base represented by a logic program.",
                "We then introduce methods for generating three different types of proposals.",
                "First, we use the technique of extended abduction in artificial intelligence [8, 15] to construct a conditional proposal as an extension of the original one.",
                "Second, we use the technique of relaxation in cooperative query answering for databases [4, 6] to construct a neighborhood proposal as an amendment of the original one.",
                "Third, combining extended abduction and relaxation, conditional neighborhood proposals are constructed as amended extensions of the original proposal.",
                "We develop a negotiation protocol between two agents based on the exchange of these counter-proposals and critiques.",
                "We also provide procedures for computing proposals in logic programming.",
                "This paper is organized as follows.",
                "Section 2 introduces a logical framework used in this paper.",
                "Section 3 presents methods for constructing proposals, and provides a negotiation protocol.",
                "Section 4 provides methods for computing proposals in logic programming.",
                "Section 5 discusses related works, and Section 6 concludes the paper. 2.",
                "PRELIMINARIES Logic programs considered in this paper are extended disjunctive programs (EDP) [7].",
                "An EDP (or simply a program) is a set of rules of the form: L1 ; · · · ; Ll ← Ll+1 , . . . , Lm, not Lm+1 , . . . , not Ln (n ≥ m ≥ l ≥ 0) where each Li is a positive/negative literal, i.e., A or ¬A for an atom A, and not is negation as failure (NAF). not L is called an NAF-literal.",
                "The symbol ; represents disjunction.",
                "The left-hand side of the rule is the head, and the right-hand side is the body.",
                "For each rule r of the above form, head(r), body+ (r) and body− (r) denote the sets of literals {L1, . . . , Ll}, {Ll+1, . . . , Lm}, and {Lm+1, . . . , Ln}, respectively.",
                "Also, not body− (r) denotes the set of NAF-literals {not Lm+1, . . . , not Ln}.",
                "A disjunction of literals and a conjunction of (NAF-)literals in a rule are identified with its corresponding sets of literals.",
                "A rule r is often written as head(r) ← body+ (r), not body− (r) or head(r) ← body(r) where body(r) = body+ (r)∪not body− (r).",
                "A rule r is disjunctive if head(r) contains more than one literal.",
                "A rule r is an integrity constraint if head(r) = ∅; and r is a fact if body(r) = ∅.",
                "A program is NAF-free if no rule contains NAF-literals.",
                "Two rules/literals are identified with respect to variable renaming.",
                "A substitution is a mapping from variables to terms θ = {x1/t1, . . . , xn/tn}, where x1, . . . , xn are distinct variables and each ti is a term distinct from xi.",
                "Given a conjunction G of (NAF-)literals, Gθ denotes the conjunction obtained by applying θ to G. A program, rule, or literal is ground if it contains no variable.",
                "A program P with variables is a shorthand of its ground instantiation Ground(P), the set of ground rules obtained from P by substituting variables in P by elements of its Herbrand universe in every possible way.",
                "The semantics of an EDP is defined by the answer set semantics [7].",
                "Let Lit be the set of all ground literals in the language of a program.",
                "Suppose a program P and a set of literals S(⊆ Lit).",
                "Then, the reduct P S is the program which contains the ground rule head(r) ← body+ (r) iff there is a rule r in Ground(P) such that body− (r)∩S = ∅.",
                "Given an NAF-free EDP P, Cn(P) denotes the smallest set of ground literals which is (i) closed under P, i.e., for every ground rule r in Ground(P), body(r) ⊆ Cn(P) implies head(r) ∩ Cn(P) = ∅; and (ii) logically closed, i.e., it is either consistent or equal to Lit.",
                "Given an EDP P and a set S of literals, S is an answer set of P if S = Cn(P S ).",
                "A program has none, one, or multiple answer sets in general.",
                "An answer set is consistent if it is not Lit.",
                "A program P is consistent if it has a consistent answer set; otherwise, P is inconsistent.",
                "Abductive logic programming [9] introduces a mechanism of hypothetical reasoning to logic programming.",
                "An abductive framework used in this paper is the extended abduction introduced by Inoue and Sakama [8, 15].",
                "An abductive program is a pair P, H where P is an EDP and H is a set of literals called abducibles.",
                "When a literal L ∈ H contains variables, any instance of L is also an abducible.",
                "An abductive program P, H is consistent if P is consistent.",
                "Throughout the paper, abductive programs are assumed to be consistent unless stated otherwise.",
                "Let G = L1, . . . , Lm, not Lm+1, . . . , not Ln be a conjunction, where all variables in G are existentially quantified at the front and range-restricted, i.e., every variable in Lm+1, . . . , Ln appears in L1, . . . , Lm.",
                "A set S of ground literals satisfies the conjunction G if { L1θ, . . . , Lmθ } ⊆ S and { Lm+1θ, . . . , Lnθ }∩ S = ∅ for some ground instance Gθ with a substitution θ.",
                "Let P, H be an abductive program and G a conjunction as above.",
                "A pair (E, F) is an explanation of an observation G in P, H if1 1. (P \\ F) ∪ E has an answer set which satisfies G, 2. (P \\ F) ∪ E is consistent, 3.",
                "E and F are sets of ground literals such that E ⊆ H\\P and F ⊆ H ∩ P. When (P \\ F) ∪ E has an answer set S satisfying the above three conditions, S is called a belief set of an abductive program P, H satisfying G (with respect to (E, F)).",
                "Note that if P has a consistent answer set S satisfying G, S is also a belief set of P, H satisfying G with respect to (E, F) = (∅, ∅).",
                "Extended abduction introduces/removes hypotheses to/from a program to explain an observation.",
                "Note that normal abduction (as in [9]) considers only introducing hypotheses to explain an observation.",
                "An explanation (E, F) of an observation G is called minimal if for any explanation (E , F ) of G, E ⊆ E and F ⊆ F imply E = E and F = F. Example 2.1.",
                "Consider the abductive program P, H : P : flies(x) ← bird(x), not ab(x) , ab(x) ← broken-wing(x) , bird(tweety) ← , bird(opus) ← , broken-wing(tweety) ← .",
                "H : broken-wing(x) .",
                "The observation G = flies(tweety) has the minimal explanation (E, F) = (∅, {broken-wing(tweety)}). 1 This defines credulous explanations [15].",
                "Skeptical explanations are used in [8].",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1023 3.",
                "NEGOTIATION 3.1 Conditional Proposals by Abduction We suppose an agent who has a knowledge base represented by an abductive program P, H .",
                "A program P consists of two types of knowledge, belief B and desire D, where B represents objective knowledge of an agent, while D represents subjective knowledge in general.",
                "We define P = B ∪ D, but do not distinguish B and D if such distinction is not important in the context.",
                "In contrast, abducibles H are used for representing permissible conditions to make a compromise in the process of negotiation.",
                "Definition 3.1.",
                "A proposal G is a conjunction of literals and NAF-literals: L1, . . . , Lm, not Lm+1, . . . , not Ln where every variable in G is existentially quantified at the front and range-restricted.",
                "In particular, G is called a critique if G = accept or G = reject where accept and reject are the reserved propositions.",
                "A counter-proposal is a proposal made in response to a proposal.",
                "Definition 3.2.",
                "A proposal G is accepted in an abductive program P, H if P has an answer set satisfying G. When a proposal is not accepted, abduction is used for seeking conditions to make it acceptable.",
                "Definition 3.3.",
                "Let P, H be an abductive program and G a proposal.",
                "If (E, F) is a minimal explanation of Gθ for some substitution θ in P, H , the conjunction G : Gθ, E, not F is called a conditional proposal (for G), where E, not F represents the conjunction: A1, . . . , Ak, not Ak+1, . . . , not Al for E = {A1, . . . , Ak} and F = { Ak+1, . . . , Al }.",
                "Proposition 3.1.",
                "Let P, H be an abductive program and G a proposal.",
                "If G is a conditional proposal, there is a belief set S of P, H satisfying G .",
                "Proof.",
                "When G = Gθ, E, not F, (P \\ F) ∪ E has a consistent answer set S satisfying Gθ and E ∩ F = ∅.",
                "In this case, S satisfies Gθ, E, not F. A conditional proposal G provides a minimal requirement for accepting the proposal G. If Gθ has multiple minimal explanations, several conditional proposals exist accordingly.",
                "When (E, F) = (∅, ∅), a conditional proposal is used as a new proposal made in response to the proposal G. Example 3.1.",
                "An agent seeks a position of a research assistant at the computer department of a university with the condition that the salary is at least 50,000 USD per year.",
                "The agent makes his/her request as the proposal:2 G = assist(compt dept), salary(x), x ≥ 50, 000.",
                "The university has the abductive program P, H : P : salary(40, 000) ← assist(compt dept), not has PhD, salary(60, 000) ← assist(compt dept), has PhD, salary(50, 000) ← assist(math dept), salary(55, 000) ← system admin(compt dept), 2 For notational convenience, we often include mathematical (in)equations in proposals/programs.",
                "They are written by literals, for instance, x ≥ y by geq(x, y) with a suitable definition of the predicate geq. employee(x) ← assist(x), employee(x) ← system admin(x), assist(compt dept); assist(math dept) ; system admin(compt dept) ←, H : has PhD, where available positions are represented by disjunction.",
                "According to P, the base salary of a research assistant at the computer department is 40,000 USD, but if he/she has PhD, it is 60,000 USD.",
                "In this case, (E, F) = ({has PhD}, ∅) becomes the minimal explanation of Gθ = assist(compt dept), salary(60, 000) with θ = { x/60, 000 }.",
                "Then, the conditional proposal made by the university becomes assist(compt dept), salary(60, 000), has PhD . 3.2 Neighborhood Proposals by Relaxation When a proposal is unacceptable, an agent tries to construct a new counter-proposal by weakening constraints in the initial proposal.",
                "We use techniques of relaxation for this purpose.",
                "Relaxation is used as a technique of cooperative query answering in databases [4, 6].",
                "When an original query fails in a database, relaxation expands the scope of the query by relaxing the constraints in the query.",
                "This allows the database to return neighborhood answers which are related to the original query.",
                "We use the technique for producing proposals in the process of negotiation.",
                "Definition 3.4.",
                "Let P, H be an abductive program and G a proposal.",
                "Then, G is relaxed to G in the following three ways: Anti-instantiation: Construct G such that G θ = G for some substitution θ.",
                "Dropping conditions: Construct G such that G ⊂ G. Goal replacement: If G is a conjunction G1, G2, where G1 and G2 are conjunctions, and there is a rule L ← G1 in P such that G1θ = G1 for some substitution θ, then build G as Lθ, G2.",
                "Here, Lθ is called a replaced literal.",
                "In each case, every variable in G is existentially quantified at the front and range-restricted.",
                "Anti-instantiation replaces constants (or terms) with fresh variables.",
                "Dropping conditions eliminates some conditions in a proposal.",
                "Goal replacement replaces the condition G1 in G with a literal Lθ in the presence of a rule L ← G1 in P under the condition G1θ = G1.",
                "All these operations generalize proposals in different ways.",
                "Each G obtained by these operations is called a relaxation of G. It is worth noting that these operations are also used in the context of inductive generalization [12].",
                "The relaxed proposal can produce new offers which are neighbor to the original proposal.",
                "Definition 3.5.",
                "Let P, H be an abductive program and G a proposal. 1.",
                "Let G be a proposal obtained by anti-instantiation.",
                "If P has an answer set S which satisfies G θ for some substitution θ and G θ = G, G θ is called a neighborhood proposal by anti-instantiation. 2.",
                "Let G be a proposal obtained by dropping conditions.",
                "If P has an answer set S which satisfies G θ for some substitution θ, G θ is called a neighborhood proposal by dropping conditions. 1024 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.",
                "Let G be a proposal obtained by goal replacement.",
                "For a replaced literal L ∈ G and a rule H ← B in P such that L = Hσ and (G \\ {L}) ∪ Bσ = G for some substitution σ, put G = (G \\ {L}) ∪ Bσ.",
                "If P has an answer set S which satisfies G θ for some substitution θ, G θ is called a neighborhood proposal by goal replacement.",
                "Example 3.2. (cont.",
                "Example 3.1) Given the proposal G = assist(compt dept), salary(x), x ≥ 50, 000, • G1 = assist(w), salary(x), x ≥ 50, 000 is produced by substituting compt dept with a variable w. As G1θ1 = assist(math dept), salary(50, 000) with θ1 = { w/math dept } is satisfied by an answer set of P, G1θ1 becomes a neighborhood proposal by anti-instantiation. • G2 = assist(compt dept), salary(x) is produced by dropping the salary condition x ≥ 50, 000.",
                "As G2θ2 = assist(compt dept), salary(40, 000) with θ2 = { x/40, 000 } is satisfied by an answer set of P, G2θ2 becomes a neighborhood proposal by dropping conditions. • G3 = employee(compt dept), salary(x), x ≥ 50, 000 is produced by replacing assist(compt dept) with employee(compt dept) using the rule employee(x) ← assist(x) in P. By G3 and the rule employee(x) ← system admin(x) in P, G3 = sys admin(compt dept), salary(x), x ≥ 50, 000 is produced.",
                "As G3 θ3 = sys admin(compt dept), salary(55, 000) with θ3 = { x/55, 000 } is satisfied by an answer set of P, G3 θ3 becomes a neighborhood proposal by goal replacement.",
                "Finally, extended abduction and relaxation are combined to produce conditional neighborhood proposals.",
                "Definition 3.6.",
                "Let P, H be an abductive program and G a proposal. 1.",
                "Let G be a proposal obtained by either anti-instantiation or dropping conditions.",
                "If (E, F) is a minimal explanation of G θ(= G) for some substitution θ, the conjunction G θ, E, not F is called a conditional neighborhood proposal by anti-instantiation/dropping conditions. 2.",
                "Let G be a proposal obtained by goal replacement.",
                "Suppose G as in Definition 3.5(3).",
                "If (E, F) is a minimal explanation of G θ for some substitution θ, the conjunction G θ, E, not F is called a conditional neighborhood proposal by goal replacement.",
                "A conditional neighborhood proposal reduces to a neighborhood proposal when (E, F) = (∅, ∅). 3.3 Negotiation Protocol A negotiation protocol defines how to exchange proposals in the process of negotiation.",
                "This section presents a negotiation protocol in our framework.",
                "We suppose <br>one-to-one negotiation</br> between two agents who have a common ontology and the same language for successful communication.",
                "Definition 3.7.",
                "A proposal L1, ..., Lm, not Lm+1, ..., not Ln violates an integrity constraint ← body+ (r), not body− (r) if for any substitution θ, there is a substitution σ such that body+ (r)σ ⊆ { L1θ, . . . , Lmθ }, body− (r)σ∩{ L1θ, . . . , Lmθ } = ∅, and body− (r)σ ⊆ { Lm+1θ, . . . , Lnθ }.",
                "Integrity constraints are conditions which an agent should satisfy, so that they are used to explain why an agent does not accept a proposal.",
                "A negotiation proceeds in a series of rounds.",
                "Each i-th round (i ≥ 1) consists of a proposal Gi 1 made by one agent Ag1 and another proposal Gi 2 made by the other agent Ag2.",
                "Definition 3.8.",
                "Let P1, H1 be an abductive program of an agent Ag1 and Gi 2 a proposal made by Ag2 at the i-th round.",
                "A critique set of Ag1 (at the i-th round) is a set CSi 1(P1, Gj 2) = CSi−1 1 (P1, Gj−1 2 ) ∪ { r | r is an integrity constraint in P1 and Gj 2 violates r } where j = i − 1 or i, and CS0 1 (P1, G0 2) = CS1 1 (P1, G0 2) = ∅.",
                "A critique set of an agent Ag1 accumulates integrity constraints which are violated by proposals made by another agent Ag2.",
                "CSi 2(P2, Gj 1) is defined in the same manner.",
                "Definition 3.9.",
                "Let Pk, Hk be an abductive program of an agent Agk and Gj a proposal, which is not a critique, made by any agent at the j(≤ i)-th round.",
                "A negotiation set of Agk (at the i-th round) is a triple NSi k = (Si c, Si n, Si cn), where Si c is the set of conditional proposals, Si n is the set of neighborhood proposals, and Si cn is the set of conditional neighborhood proposals, produced by Gj and Pk, Hk .",
                "A negotiation set represents the space of possible proposals made by an agent.",
                "Si x (x ∈ {c, n, cn}) accumulates proposals produced by Gj (1 ≤ j ≤ i) according to Definitions 3.3, 3.5, and 3.6.",
                "Note that an agent can construct counter-proposals by modifying its own previous proposals or another agents proposals.",
                "An agent Agk accumulates proposals that are made by Agk but are rejected by another agent, in the failed proposal set FP i k (at the i-th round), where FP 0 k = ∅.",
                "Suppose two agents Ag1 and Ag2 who have abductive programs P1, H1 and P2, H2 , respectively.",
                "Given a proposal G1 1 which is satisfied by an answer set of P1, a negotiation starts.",
                "In response to the proposal Gi 1 made by Ag1 at the i-th round, Ag2 behaves as follows. 1.",
                "If Gi 1 = accept, an agreement is reached and negotiation ends in success. 2.",
                "Else if Gi 1 = reject, put FP i 2 = FPi−1 2 ∪{Gi−1 2 } where {G0 2} = ∅.",
                "Proceed to the step 4(b). 3.",
                "Else if P2 has an answer set satisfying Gi 1, Ag2 returns Gi 2 = accept to Ag1.",
                "Negotiation ends in success. 4.",
                "Otherwise, Ag2 behaves as follows.",
                "Put FP i 2 = FPi−1 2 . (a) If Gi 1 violates an integrity constraint in P2, return the critique Gi 2 = reject to Ag1, together with the critique set CSi 2(P2, Gi 1). (b) Otherwise, construct NSi 2 as follows. (i) Produce Si c. Let μ(Si c) = { p | p ∈ Si c \\ FPi 2 and p satisfies the constraints in CSi 1(P1, Gi−1 2 )}.",
                "If μ(Si c) = ∅, select one from μ(Si c) and propose it as Gi 2 to Ag1; otherwise, go to (ii). (ii) Produce Si n. If μ(Si n) = ∅, select one from μ(Si n) and propose it as Gi 2 to Ag1; otherwise, go to (iii). (iii) Produce Si cn.",
                "If μ(Si cn) = ∅, select one from μ(Si cn) and propose it as Gi 2 to Ag1; otherwise, negotiation ends in failure.",
                "This means that Ag2 can make no counter-proposal or every counterproposal made by Ag2 is rejected by Ag1.",
                "In the step 4(a), Ag2 rejects the proposal Gi 1 and returns the reason of rejection as a critique set.",
                "This helps for Ag1 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1025 in preparing a next counter-proposal.",
                "In the step 4(b), Ag2 constructs a new proposal.",
                "In its construction, Ag2 should take care of the critique set CSi 1(P1, Gi−1 2 ), which represents integrity constraints, if any, accumulated in previous rounds, that Ag1 must satisfy.",
                "Also, FP i 2 is used for removing proposals which have been rejected.",
                "Construction of Si x (x ∈ {c, n, cn}) in NSi 2 is incrementally done by adding new counter-proposals produced by Gi 1 or Gi−1 2 to Si−1 x .",
                "For instance, Si n in NSi 2 is computed as Si n = Si−1 n ∪{ p | p is a neighborhood proposal made by Gi 1 } ∪ { p | p is a neighborhood proposal made by Gi−1 2 }, where S0 n = ∅.",
                "That is, Si n is constructed from Si−1 n by adding new proposals which are obtained by modifying the proposal Gi 1 made by Ag1 at the i-th round or modifying the proposal Gi−1 2 made by Ag2 at the (i − 1)-th round.",
                "Si c and Si cn are obtained as well.",
                "In the above protocol, an agent produces Si c at first, secondly Si n, and finally Si cn.",
                "This strategy seeks conditions which satisfy the given proposal, prior to neighborhood proposals which change the original one.",
                "Another strategy, which prefers neighborhood proposals to conditional ones, is also considered.",
                "Conditional neighborhood proposals are to be considered in the last place, since they differ from the original one to the maximal extent.",
                "The above protocol produces the candidate proposals in Si x for each x ∈ {c, n, cn} at once.",
                "We can consider a variant of the protocol in which each proposal in Si x is constructed one by one (see Example 3.3).",
                "The above protocol is repeatedly applied to each one of the two negotiating agents until a negotiation ends in success/failure.",
                "Formally, the above negotiation protocol has the following properties.",
                "Theorem 3.2.",
                "Let Ag1 and Ag2 be two agents having abductive programs P1, H1 and P2, H2 , respectively. 1.",
                "If P1, H1 and P2, H2 are function-free (i.e., both Pi and Hi contain no function symbol), any negotiation will terminate. 2.",
                "If a negotiation terminates with agreement on a proposal G, both P1, H1 and P2, H2 have belief sets satisfying G. Proof. 1.",
                "When an abductive program is function-free, abducibles and negotiation sets are both finite.",
                "Moreover, if a proposal is once rejected, it is not proposed again by the function μ.",
                "Thus, negotiation will terminate in finite steps. 2.",
                "When a proposal G is made by Ag1, P1, H1 has a belief set satisfying G. If the agent Ag2 accepts the proposal G, it is satisfied by an answer set of P2 which is also a belief set of P2, H2 .",
                "Example 3.3.",
                "Suppose a buying-selling situation in the introduction.",
                "A seller agent has the abductive program Ps, Hs in which Ps consists of belief Bs and desire Ds: Bs : pc(b1, 1G, 512M, 80G) ; pc(b2, 1G, 512M, 80G) ←,(1) dvd-rw ; cd-rw ←, (2) Ds : normal price(1300) ← pc(b1, 1G, 512M, 80G), dvd-rw, (3) normal price(1200) ← pc(b1, 1G, 512M, 80G), cd-rw, (4) normal price(1200) ← pc(b2, 1G, 512M, 80G), dvd-rw, (5) price(x) ← normal price(x), add point, (6) price(x ∗ 0.9) ← normal price(x), pay cash, not add point,(7) add point ←, (8) Hs : add point, pay cash.",
                "Here, (1) and (2) represent selection of products.",
                "The atom pc(b1, 1G, 512M, 80G) represents that the seller agent has a PC of the brand b1 such that CPU is 1GHz, memory is 512MB, and HDD is 80GB.",
                "Prices of products are represented as desire of the seller.",
                "The rules (3) - (5) are normal prices of products.",
                "A normal price is a selling price on the condition that service points are added (6).",
                "On the other hand, a discount price is applied if the paying method is cash and no service point is added (7).",
                "The fact (8) represents the addition of service points.",
                "This service would be withdrawn in case of discount prices, so add point is specified as an abducible.",
                "A buyer agent has the abductive program Pb, Hb in which Pb consists of belief Bb and desire Db: Bb : drive ← dvd-rw, (9) drive ← cd-rw, (10) price(x) ←, (11) Db : pc(b1, 1G, 512M, 80G) ←, (12) dvd-rw ←, (13) cd-rw ← not dvd-rw, (14) ← pay cash, (15) ← price(x), x > 1200, (16) Hb : dvd-rw.",
                "Rules (12) - (16) are the buyers desire.",
                "Among them, (15) and (16) impose constraints for buying a PC.",
                "A DVD-RW is specified as an abducible which is subject to concession. (1st round) First, the following proposal is given by the buyer agent: G1 b : pc(b1, 1G, 512M, 80G), dvd-rw, price(x), x ≤ 1200.",
                "As Ps has no answer set which satisfies G1 b , the seller agent cannot accept the proposal.",
                "The seller takes an action of making a counter-proposal and performs abduction.",
                "As a result, the seller finds the minimal explanation (E, F) = ({ pay cash }, { add point }) which explains G1 b θ1 with θ1 = { x/1170 }.",
                "The seller constructs the conditional proposal: G1 s : pc(b1, 1G, 512M, 80G), dvd-rw, price(1170), pay cash, not add point and offers it to the buyer. (2nd round) The buyer does not accept G1 s because he/she cannot pay it by cash (15).",
                "The buyer then returns the critique G2 b = reject to the seller, together with the critique set CS2 b (Pb, G1 s) = {(15)}.",
                "In response to this, the seller tries to make another proposal which satisfies the constraint in this critique set.",
                "As G1 s is stored in FP 2 s and no other conditional proposal satisfying the buyers requirement exists, the seller produces neighborhood proposals.",
                "He/she relaxes G1 b by dropping x ≤ 1200 in the condition, and produces pc(b1, 1G, 512M, 80G), dvd-rw, price(x).",
                "As Ps has an answer set which satisfies G2 s : pc(b1, 1G, 512M, 80G), dvd-rw, price(1300), 1026 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) the seller offers G2 s as a new counter-proposal. (3rd round) The buyer does not accept G2 s because he/she cannot pay more than 1200USD (16).",
                "The buyer again returns the critique G3 b = reject to the seller, together with the critique set CS3 b (Pb, G2 s) = CS2 b (Pb, G1 s) ∪ {(16)}.",
                "The seller then considers another proposal by replacing b1 with a variable w, G1 b now becomes pc(w, 1G, 512M, 80G), dvd-rw, price(x), x ≤ 1200.",
                "As Ps has an answer set which satisfies G3 s : pc(b2, 1G, 512M, 80G), dvd-rw, price(1200), the seller offers G3 s as a new counter-proposal. (4th round) The buyer does not accept G3 s because a PC of the brand b2 is out of his/her interest and Pb has no answer set satisfying G3 s. Then, the buyer makes a concession by changing his/her original goal.",
                "The buyer relaxes G1 b by goal replacement using the rule (9) in Pb, and produces pc(b1, 1G, 512M, 80G), drive, price(x), x ≤ 1200.",
                "Using (10), the following proposal is produced: pc(b1, 1G, 512M, 80G), cd-rw, price(x), x ≤ 1200.",
                "As Pb \\ { dvd-rw } has a consistent answer set satisfying the above proposal, the buyer proposes the conditional neighborhood proposal G4 b : pc(b1, 1G, 512M, 80G), cd-rw, not dvd-rw, price(x), x ≤ 1200 to the seller agent.",
                "Since Ps also has an answer set satisfying G4 b , the seller accepts it and sends the message G4 s = accept to the buyer.",
                "Thus, the negotiation ends in success. 4.",
                "COMPUTATION In this section, we provide methods of computing proposals in terms of answer sets of programs.",
                "We first introduce some definitions from [15].",
                "Definition 4.1.",
                "Given an abductive program P, H , the set UR of update rules is defined as: UR = { L ← not L, L ← not L | L ∈ H } ∪ { +L ← L | L ∈ H \\ P } ∪ { −L ← not L | L ∈ H ∩ P } , where L, +L, and −L are new atoms uniquely associated with every L ∈ H. The atoms +L and −L are called update atoms.",
                "By the definition, the atom L becomes true iff L is not true.",
                "The pair of rules L ← not L and L ← not L specify the situation that an abducible L is true or not.",
                "When p(x) ∈ H and p(a) ∈ P but p(t) ∈ P for t = a, the rule +L ← L precisely becomes +p(t) ← p(t) for any t = a.",
                "In this case, the rule is shortly written as +p(x) ← p(x), x = a.",
                "Generally, the rule becomes +p(x) ← p(x), x = t1, . . . , x = tn for n such instances.",
                "The rule +L ← L derives the atom +L if an abducible L which is not in P is to be true.",
                "In contrast, the rule −L ← not L derives the atom −L if an abducible L which is in P is not to be true.",
                "Thus, update atoms represent the change of truth values of abducibles in a program.",
                "That is, +L means the introduction of L, while −L means the deletion of L. When an abducible L contains variables, the associated update atom +L or −L is supposed to have exactly the same variables.",
                "In this case, an update atom is semantically identified with its ground instances.",
                "The set of all update atoms associated with the abducibles in H is denoted by UH, and UH = UH+ ∪ UH− where UH+ (resp.",
                "UH− ) is the set of update atoms of the form +L (resp. −L).",
                "Definition 4.2.",
                "Given an abductive program P, H , its update program UP is defined as the program UP = (P \\ H) ∪ UR .",
                "An answer set S of UP is called U-minimal if there is no answer set T of UP such that T ∩ UH ⊂ S ∩ UH.",
                "By the definition, U-minimal answer sets exist whenever UP has answer sets.",
                "Update programs are used for computing (minimal) explanations of an observation.",
                "Given an observation G as a conjunction of literals and NAF-literals possibly containing variables, we introduce a new ground literal O together with the rule O ← G. In this case, O has an explanation (E, F) iff G has the same explanation.",
                "With this replacement, an observation is assumed to be a ground literal without loss of generality.",
                "In what follows, E+ = { +L | L ∈ E } and F − = { −L | L ∈ F } for E ⊆ H and F ⊆ H. Proposition 4.1. ([15]) Let P, H be an abductive program, UP its update program, and G a ground literal representing an observation.",
                "Then, a pair (E, F) is an explanation of G iff UP ∪ { ← not G } has a consistent answer set S such that E+ = S ∩ UH+ and F− = S ∩ UH− .",
                "In particular, (E, F) is a minimal explanation iff S is a U-minimal answer set.",
                "Example 4.1.",
                "To explain the observation G = flies(t) in the program P of Example 2.1, first construct the update program UP of P:3 UP : flies(x) ← bird(x), not ab(x), ab(x) ← broken-wing(x) , bird(t) ← , bird(o) ← , broken-wing(x) ← not broken-wing(x), broken-wing(x) ← not broken-wing(x), +broken-wing(x) ← broken-wing(x), x = t , −broken-wing(t) ← not broken-wing(t) .",
                "Next, consider the program UP ∪ { ← not flies(t) }.",
                "It has the single U-minimal answer set: S = { bird(t), bird(o), flies(t), flies(o), broken-wing(t), broken-wing(o), −broken-wing(t) }.",
                "The unique minimal explanation (E, F) = (∅, {broken-wing(t)}) of G is expressed by the update atom −broken-wing(t) in S ∩ UH− .",
                "Proposition 4.2.",
                "Let P, H be an abductive program and G a ground literal representing an observation.",
                "If P ∪ { ← not G } has a consistent answer set S, G has the minimal explanation (E, F) = (∅, ∅) and S satisfies G. Now we provide methods for computing (counter-)proposals.",
                "First, conditional proposals are computed as follows. input : an abductive program P, H , a proposal G; output : a set Sc of proposals.",
                "If G is a ground literal, compute its minimal explanation (E, F) in P, H using the update program.",
                "Put G, E, not F in Sc.",
                "Else if G is a conjunction possibly containing variables, consider the abductive program 3 t represents tweety and o represents opus.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1027 P ∪{ O ← G }, H with a ground literal O. Compute a minimal explanation of O in P ∪ { O ← G }, H using its update program.",
                "If O has a minimal explanation (E, F) with a substitution θ for variables in G, put Gθ, E, not F in Sc.",
                "Next, neighborhood proposals are computed as follows. input : an abductive program P, H , a proposal G; output : a set Sn of proposals. % neighborhood proposals by anti-instantiation; Construct G by anti-instantiation.",
                "For a ground literal O, if P ∪ { O ← G } ∪ { ← not O } has a consistent answer set satisfying G θ with a substitution θ and G θ = G, put G θ in Sn. % neighborhood proposals by dropping conditions; Construct G by dropping conditions.",
                "If G is a ground literal and the program P ∪ { ← not G } has a consistent answer set, put G in Sn.",
                "Else if G is a conjunction possibly containing variables, do the following.",
                "For a ground literal O, if P ∪{ O ← G }∪{ ← not O } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn. % neighborhood proposals by goal replacement; Construct G by goal replacement.",
                "If G is a ground literal and there is a rule H ← B in P such that G = Hσ and Bσ = G for some substitution σ, put G = Bσ.",
                "If P ∪ { ← not G } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn.",
                "Else if G is a conjunction possibly containing variables, do the following.",
                "For a replaced literal L ∈ G , if there is a rule H ← B in P such that L = Hσ and (G \\ {L}) ∪ Bσ = G for some substitution σ, put G = (G \\ {L}) ∪ Bσ.",
                "For a ground literal O, if P ∪ { O ← G } ∪ { ← not O } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn.",
                "Theorem 4.3.",
                "The set Sc (resp.",
                "Sn) computed above coincides with the set of conditional proposals (resp. neighborhood proposals).",
                "Proof.",
                "The result for Sc follows from Definition 3.3 and Proposition 4.1.",
                "The result for Sn follows from Definition 3.5 and Proposition 4.2.",
                "Conditional neighborhood proposals are computed by combining the above two procedures.",
                "Those proposals are computed at each round.",
                "Note that the procedure for computing Sn contains some nondeterministic choices.",
                "For instance, there are generally several candidates of literals to relax in a proposal.",
                "Also, there might be several rules in a program for the usage of goal replacement.",
                "In practice, an agent can prespecify literals in a proposal for possible relaxation or rules in a program for the usage of goal replacement. 5.",
                "RELATED WORK As there are a number of literature on automated negotiation, this section focuses on comparison with negotiation frameworks based on logic and argumentation.",
                "Sadri et al. [14] use abductive logic programming as a representation language of negotiating agents.",
                "Agents negotiate using common dialogue primitives, called dialogue moves.",
                "Each agent has an abductive logic program in which a sequence of dialogues are specified by a program, a dialogue protocol is specified as constraints, and dialogue moves are specified as abducibles.",
                "The behavior of agents is regulated by an observe-think-act cycle.",
                "Once a dialogue move is uttered by an agent, another agent that observed the utterance thinks and acts using a proof procedure.",
                "Their approach and ours both employ abductive logic programming as a platform of agent reasoning, but the use of it is quite different.",
                "First, they use abducibles to specify dialogue primitives of the form tell(utterer, receiver, subject, identifier, time), while we use abducibles to specify arbitrary permissible hypotheses to construct conditional proposals.",
                "Second, a program pre-specifies a plan to carry out in order to achieve a goal, together with available/missing resources in the context of resource-exchanging problems.",
                "This is in contrast with our method in which possible counter-proposals are newly constructed in response to a proposal made by an agent.",
                "Third, they specify a negotiation policy inside a program (as integrity constraints), while we give a protocol independent of individual agents.",
                "They provide an operational model that completely specifies the behavior of agents in terms of agent cycle.",
                "We do not provide such a complete specification of the behavior of agents.",
                "Our primary interest is to mechanize construction of proposals.",
                "Bracciali and Torroni [2] formulate abductive agents that have knowledge in abductive logic programs.",
                "To explain an observation, two agents communicate by exchanging integrity constraints.",
                "In the process of communication, an agent can revise its own integrity constraints according to the information provided by the other agent.",
                "A set IC of integrity constraints relaxes a set IC (or IC tightens IC ) if any observation that can be proved with respect to IC can also be proved with respect to IC .",
                "For instance, IC : ← a, b, c relaxes IC : ← a, b.",
                "Thus, they use relaxation for weakening the constraints in an abductive logic program.",
                "In contrast, we use relaxation for weakening proposals and three different relaxation methods, anti-instantiation, dropping conditions, and goal replacement, are considered.",
                "Their goal is to explain an observation by revising integrity constraints of an agent through communication, while we use integrity constraints for communication to explain critiques and help other agents in making counter-proposals.",
                "Meyer et al. [11] introduce a logical framework for negotiating agents.",
                "They introduce two different modes of negotiation: concession and adaptation.",
                "They provide rational postulates to characterize negotiated outcomes between two agents, and describe methods for constructing outcomes.",
                "They provide logical conditions for negotiated outcomes to satisfy, but they do not describe a process of negotiation nor negotiation protocols.",
                "Moreover, they represent agents by classical propositional theories, which is different from our abductive logic programming framework.",
                "Foo et al. [5] model <br>one-to-one negotiation</br> as a one-time encounter between two extended logic programs.",
                "An agent offers an answer set of its program, and their mutual deal is regarded as a trade on their answer sets.",
                "Starting from the initial agreement set S∩T for an answer set S of an agent and an answer set T of another agent, each agent extends this set to reflect its own demand while keeping consistency with demand of the other agent.",
                "Their algorithm returns new programs having answer sets which are consistent with each other and keep the agreement set.",
                "The work is extended to repeated encounters in [3].",
                "In their framework, two agents exchange answer sets to produce a common belief set, which is different from our framework of exchanging proposals.",
                "There are a number of proposals for negotiation based 1028 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) on argumentation.",
                "An advantage of argumentation-based negotiation is that it constructs a proposal with arguments supporting the proposal [1].",
                "The existence of arguments is useful to convince other agents of reasons why an agent offers (counter-)proposals or returns critiques.",
                "Parsons et al. [13] develop a logic of argumentation-based negotiation among BDI agents.",
                "In <br>one-to-one negotiation</br>, an agent A generates a proposal together with its arguments, and passes it to another agent B.",
                "The proposal is evaluated by B which attempts to build arguments against it.",
                "If it conflicts with Bs interest, B informs A of its objection by sending back its attacking argument.",
                "In response to this, A tries to find an alternative way of achieving its original objective, or a way of persuading B to drop its objection.",
                "If either type of argument can be found, A will submit it to B.",
                "If B finds no reason to reject the new proposal, it will be accepted and the negotiation ends in success.",
                "Otherwise, the process is iterated.",
                "In this negotiation processes, the agent A never changes its original objective, so that negotiation ends in failure if A fails to find an alternative way of achieving the original objective.",
                "In our framework, when a proposal is rejected by another agent, an agent can weaken or change its objective by abduction and relaxation.",
                "Our framework does not have a mechanism of argumentation, but reasons for critiques can be informed by responding critique sets.",
                "Kakas and Moraitis [10] propose a negotiation protocol which integrates abduction within an argumentation framework.",
                "A proposal contains an offer corresponding to the negotiation object, together with supporting information representing conditions under which this offer is made.",
                "Supporting information is computed by abduction and is used for constructing conditional arguments during the process of negotiation.",
                "In their negotiation protocol, when an agent cannot satisfy its own goal, the agent considers the other agents goal and searches for conditions under which the goal is acceptable.",
                "Our present approach differs from theirs in the following points.",
                "First, they use abduction to seek conditions to support arguments, while we use abduction to seek conditions for proposals to accept.",
                "Second, in their negotiation protocol, counter-proposals are chosen among candidates based on preference knowledge of an agent at meta-level, which represents policy under which an agent uses its object-level decision rules according to situations.",
                "In our framework, counter-proposals are newly constructed using abduction and relaxation.",
                "The method of construction is independent of particular negotiation protocols.",
                "As [2, 10, 14], abduction or abductive logic programming used in negotiation is mostly based on normal abduction.",
                "In contrast, our approach is based on extended abduction which can not only introduce hypotheses but remove them from a program.",
                "This is another important difference.",
                "Relaxation and neighborhood query answering are devised to make databases cooperative with their users [4, 6].",
                "In this sense, those techniques have the spirit similar to cooperative problem solving in multi-agent systems.",
                "As far as the authors know, however, there is no study which applies those technique to agent negotiation. 6.",
                "CONCLUSION In this paper we proposed a logical framework for negotiating agents.",
                "To construct proposals in the process of negotiation, we combined the techniques of extended abduction and relaxation.",
                "It was shown that these two operations are used for general inference rules in producing proposals.",
                "We developed a negotiation protocol between two agents based on exchange of proposals and critiques, and provided procedures for computing proposals in abductive logic programming.",
                "This enables us to realize automated negotiation on top of the existing answer set solvers.",
                "The present framework does not have a mechanism of selecting an optimal (counter-)proposal among different alternatives.",
                "To compare and evaluate proposals, an agent must have preference knowledge of candidate proposals.",
                "Further elaboration to maximize the utility of agents is left for future study. 7.",
                "REFERENCES [1] L. Amgoud, S. Parsons, and N. Maudet.",
                "Arguments, dialogue, and negotiation.",
                "In: Proc.",
                "ECAI-00, pp. 338-342, IOS Press, 2000. [2] A. Bracciali and P. Torroni.",
                "A new framework for knowledge revision of abductive agents through their interaction.",
                "In: Proc.",
                "CLIMA-IV, Computational Logic in Multi-Agent Systems, LNAI 3259, pp. 159-177, 2004. [3] W. Chen, M. Zhang, and N. Foo.",
                "Repeated negotiation of logic programs.",
                "In: Proc. 7th Workshop on Nonmonotonic Reasoning, Action and Change, 2006. [4] W. W. Chu, Q. Chen, and R.-C. Lee.",
                "Cooperative query answering via type abstraction hierarchy.",
                "In: Cooperating Knowledge Based Systems, S. M. Deen ed., pp. 271-290, Springer, 1990. [5] N. Foo, T. Meyer, Y. Zhang, and D. Zhang.",
                "Negotiating logic programs.",
                "In: Proc. 6th Workshop on Nonmonotonic Reasoning, Action and Change, 2005. [6] T. Gaasterland, P. Godfrey, and J. Minker.",
                "Relaxation as a platform for cooperative answering.",
                "Journal of Intelligence Information Systems 1(3/4):293-321, 1992. [7] M. Gelfond and V. Lifschitz.",
                "Classical negation in logic programs and disjunctive databases.",
                "New Generation Computing 9:365-385, 1991. [8] K. Inoue and C. Sakama.",
                "Abductive framework for nonmonotonic theory change.",
                "In: Proc.",
                "IJCAI-95, pp. 204-210, Morgan Kaufmann. [9] A. C. Kakas, R. A. Kowalski, and F. Toni, The role of abduction in logic programming.",
                "In: Handbook of Logic in AI and Logic Programming, D. M. Gabbay, et al. (eds), vol. 5, pp. 235-324, Oxford University Press, 1998. [10] A. C. Kakas and P. Moraitis.",
                "Adaptive agent negotiation via argumentation.",
                "In: Proc.",
                "AAMAS-06, pp. 384-391, ACM Press. [11] T. Meyer, N. Foo, R. Kwok, and D. Zhang.",
                "Logical foundation of negotiation: outcome, concession and adaptation.",
                "In: Proc.",
                "AAAI-04, pp. 293-298, MIT Press. [12] R. S. Michalski.",
                "A theory and methodology of inductive learning.",
                "In: Machine Learning: An Artificial Intelligence Approach, R. S. Michalski, et al. (eds), pp. 83-134, Morgan Kaufmann, 1983. [13] S. Parsons, C. Sierra and N. Jennings.",
                "Agents that reason and negotiate by arguing.",
                "Journal of Logic and Computation, 8(3):261-292, 1988. [14] F. Sadri, F. Toni, and P. Torroni, An abductive logic programming architecture for negotiating agents.",
                "In: Proc. 8th European Conf. on Logics in AI, LNAI 2424, pp. 419-431, Springer, 2002. [15] C. Sakama and K. Inoue.",
                "An abductive framework for computing knowledge base updates.",
                "Theory and Practice of Logic Programming 3(6):671-715, 2003.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1029"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Para ver estas propuestas en \"negociación individual\", suponga que el siguiente diálogo de negociación entre un agente de compradores B y un agente de vendedor S. (BI (o SI) representa una expresión de B (o S) en el I-Th.ronda.)",
                "El propósito de este documento es mecanizar un proceso de construcción (contra) propuestas en diálogos de \"negociación uno a uno\".",
                "Suponemos que la \"negociación individual\" entre dos agentes que tienen una ontología común y el mismo idioma para una comunicación exitosa.",
                "Foo et al.[5] Modelo de \"negociación individual\" como un encuentro único entre dos programas lógicos extendidos.",
                "En \"negociación individual\", un agente A genera una propuesta junto con sus argumentos, y la pasa a otro agente B."
            ],
            "translated_text": "",
            "candidates": [
                "Negociación uno a uno",
                "negociación individual",
                "negociación uno a uno",
                "negociación uno a uno",
                "negociación uno a uno",
                "negociación individual",
                "negociación uno a uno",
                "negociación individual",
                "Negociación uno a uno",
                "negociación individual"
            ],
            "error": []
        },
        "alternative proposal": {
            "translated_key": "propuesta alternativa",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Negotiation by Abduction and Relaxation Chiaki Sakama Dept.",
                "Computer and Communication Sciences Wakayama University Sakaedani, Wakayama 640 8510, Japan sakama@sys.wakayama-u.ac.jp Katsumi Inoue National Institute of Informatics 2-1-2 Hitotsubashi, Chiyoda-ku Tokyo 101 8430, Japan ki@nii.ac.jp ABSTRACT This paper studies a logical framework for automated negotiation between two agents.",
                "We suppose an agent who has a knowledge base represented by a logic program.",
                "Then, we introduce methods of constructing counter-proposals in response to proposals made by an agent.",
                "To this end, we combine the techniques of extended abduction in artificial intelligence and relaxation in cooperative query answering for databases.",
                "These techniques are respectively used for producing conditional proposals and neighborhood proposals in the process of negotiation.",
                "We provide a negotiation protocol based on the exchange of these proposals and develop procedures for computing new proposals.",
                "Categories and Subject Descriptors F.4.1 [Mathematical Logic]: Logic and constraint programming;; I.2.11 [Distributed Artificial Intelligence]: Multiagent systems General Terms Theory 1.",
                "INTRODUCTION Automated negotiation has been received increasing attention in multi-agent systems, and a number of frameworks have been proposed in different contexts ([1, 2, 3, 5, 10, 11, 13, 14], for instance).",
                "Negotiation usually proceeds in a series of rounds and each agent makes a proposal at every round.",
                "An agent that received a proposal responds in two ways.",
                "One is a critique which is a remark as to whether or not (parts of) the proposal is accepted.",
                "The other is a counter-proposal which is an <br>alternative proposal</br> made in response to a previous proposal [13].",
                "To see these proposals in one-to-one negotiation, suppose the following negotiation dialogue between a buyer agent B and a seller agent S. (Bi (or Si) represents an utterance of B (or S) in the i-th round.)",
                "B1: I want to buy a personal computer of the brand b1, with the specification of CPU:1GHz, Memory:512MB, HDD: 80GB, and a DVD-RW driver.",
                "I want to get it at the price under 1200 USD.",
                "S1: We can provide a PC with the requested specification if you pay for it by cash.",
                "In this case, however, service points are not added for this special discount.",
                "B2: I cannot pay it by cash.",
                "S2: In a normal price, the requested PC costs 1300 USD.",
                "B3: I cannot accept the price.",
                "My budget is under 1200 USD.",
                "S3: We can provide another computer with the requested specification, except that it is made by the brand b2.",
                "The price is exactly 1200 USD.",
                "B4: I do not want a PC of the brand b2.",
                "Instead, I can downgrade a driver from DVD-RW to CD-RW in my initial proposal.",
                "S4: Ok, I accept your offer.",
                "In this dialogue, in response to the opening proposal B1, the counter-proposal S1 is returned.",
                "In the rest of the dialogue, B2, B3, S4 are critiques, while S2, S3, B4 are counterproposals.",
                "Critiques are produced by evaluating a proposal in a knowledge base of an agent.",
                "In contrast, making counter-proposals involves generating an <br>alternative proposal</br> which is more favorable to the responding agent than the original one.",
                "It is known that there are two ways of producing counterproposals: extending the initial proposal or amending part of the initial proposal.",
                "According to [13], the first type appears in the dialogue: A: I propose that you provide me with service X.",
                "B: I propose that I provide you with service X if you provide me with service Z.",
                "The second type is in the dialogue: A: I propose that I provide you with service Y if you provide me with service X.",
                "B: I propose that I provide you with service X if you provide me with service Z.",
                "A negotiation proceeds by iterating such give-andtake dialogues until it reaches an agreement/disagreement.",
                "In those dialogues, agents generate (counter-)proposals by reasoning on their own goals or objectives.",
                "The objective of the agent A in the above dialogues is to obtain service X.",
                "The agent B proposes conditions to provide the service.",
                "In the process of negotiation, however, it may happen that agents are obliged to weaken or change their initial goals to reach a negotiated compromise.",
                "In the dialogue of 1022 978-81-904262-7-5 (RPS) c 2007 IFAAMAS a buyer agent and a seller agent presented above, a buyer agent changes its initial goal by downgrading a driver from DVD-RW to CD-RW.",
                "Such behavior is usually represented as specific meta-knowledge of an agent or specified as negotiation protocols in particular problems.",
                "Currently, there is no computational logic for automated negotiation which has general inference rules for producing (counter-)proposals.",
                "The purpose of this paper is to mechanize a process of building (counter-)proposals in one-to-one negotiation dialogues.",
                "We suppose an agent who has a knowledge base represented by a logic program.",
                "We then introduce methods for generating three different types of proposals.",
                "First, we use the technique of extended abduction in artificial intelligence [8, 15] to construct a conditional proposal as an extension of the original one.",
                "Second, we use the technique of relaxation in cooperative query answering for databases [4, 6] to construct a neighborhood proposal as an amendment of the original one.",
                "Third, combining extended abduction and relaxation, conditional neighborhood proposals are constructed as amended extensions of the original proposal.",
                "We develop a negotiation protocol between two agents based on the exchange of these counter-proposals and critiques.",
                "We also provide procedures for computing proposals in logic programming.",
                "This paper is organized as follows.",
                "Section 2 introduces a logical framework used in this paper.",
                "Section 3 presents methods for constructing proposals, and provides a negotiation protocol.",
                "Section 4 provides methods for computing proposals in logic programming.",
                "Section 5 discusses related works, and Section 6 concludes the paper. 2.",
                "PRELIMINARIES Logic programs considered in this paper are extended disjunctive programs (EDP) [7].",
                "An EDP (or simply a program) is a set of rules of the form: L1 ; · · · ; Ll ← Ll+1 , . . . , Lm, not Lm+1 , . . . , not Ln (n ≥ m ≥ l ≥ 0) where each Li is a positive/negative literal, i.e., A or ¬A for an atom A, and not is negation as failure (NAF). not L is called an NAF-literal.",
                "The symbol ; represents disjunction.",
                "The left-hand side of the rule is the head, and the right-hand side is the body.",
                "For each rule r of the above form, head(r), body+ (r) and body− (r) denote the sets of literals {L1, . . . , Ll}, {Ll+1, . . . , Lm}, and {Lm+1, . . . , Ln}, respectively.",
                "Also, not body− (r) denotes the set of NAF-literals {not Lm+1, . . . , not Ln}.",
                "A disjunction of literals and a conjunction of (NAF-)literals in a rule are identified with its corresponding sets of literals.",
                "A rule r is often written as head(r) ← body+ (r), not body− (r) or head(r) ← body(r) where body(r) = body+ (r)∪not body− (r).",
                "A rule r is disjunctive if head(r) contains more than one literal.",
                "A rule r is an integrity constraint if head(r) = ∅; and r is a fact if body(r) = ∅.",
                "A program is NAF-free if no rule contains NAF-literals.",
                "Two rules/literals are identified with respect to variable renaming.",
                "A substitution is a mapping from variables to terms θ = {x1/t1, . . . , xn/tn}, where x1, . . . , xn are distinct variables and each ti is a term distinct from xi.",
                "Given a conjunction G of (NAF-)literals, Gθ denotes the conjunction obtained by applying θ to G. A program, rule, or literal is ground if it contains no variable.",
                "A program P with variables is a shorthand of its ground instantiation Ground(P), the set of ground rules obtained from P by substituting variables in P by elements of its Herbrand universe in every possible way.",
                "The semantics of an EDP is defined by the answer set semantics [7].",
                "Let Lit be the set of all ground literals in the language of a program.",
                "Suppose a program P and a set of literals S(⊆ Lit).",
                "Then, the reduct P S is the program which contains the ground rule head(r) ← body+ (r) iff there is a rule r in Ground(P) such that body− (r)∩S = ∅.",
                "Given an NAF-free EDP P, Cn(P) denotes the smallest set of ground literals which is (i) closed under P, i.e., for every ground rule r in Ground(P), body(r) ⊆ Cn(P) implies head(r) ∩ Cn(P) = ∅; and (ii) logically closed, i.e., it is either consistent or equal to Lit.",
                "Given an EDP P and a set S of literals, S is an answer set of P if S = Cn(P S ).",
                "A program has none, one, or multiple answer sets in general.",
                "An answer set is consistent if it is not Lit.",
                "A program P is consistent if it has a consistent answer set; otherwise, P is inconsistent.",
                "Abductive logic programming [9] introduces a mechanism of hypothetical reasoning to logic programming.",
                "An abductive framework used in this paper is the extended abduction introduced by Inoue and Sakama [8, 15].",
                "An abductive program is a pair P, H where P is an EDP and H is a set of literals called abducibles.",
                "When a literal L ∈ H contains variables, any instance of L is also an abducible.",
                "An abductive program P, H is consistent if P is consistent.",
                "Throughout the paper, abductive programs are assumed to be consistent unless stated otherwise.",
                "Let G = L1, . . . , Lm, not Lm+1, . . . , not Ln be a conjunction, where all variables in G are existentially quantified at the front and range-restricted, i.e., every variable in Lm+1, . . . , Ln appears in L1, . . . , Lm.",
                "A set S of ground literals satisfies the conjunction G if { L1θ, . . . , Lmθ } ⊆ S and { Lm+1θ, . . . , Lnθ }∩ S = ∅ for some ground instance Gθ with a substitution θ.",
                "Let P, H be an abductive program and G a conjunction as above.",
                "A pair (E, F) is an explanation of an observation G in P, H if1 1. (P \\ F) ∪ E has an answer set which satisfies G, 2. (P \\ F) ∪ E is consistent, 3.",
                "E and F are sets of ground literals such that E ⊆ H\\P and F ⊆ H ∩ P. When (P \\ F) ∪ E has an answer set S satisfying the above three conditions, S is called a belief set of an abductive program P, H satisfying G (with respect to (E, F)).",
                "Note that if P has a consistent answer set S satisfying G, S is also a belief set of P, H satisfying G with respect to (E, F) = (∅, ∅).",
                "Extended abduction introduces/removes hypotheses to/from a program to explain an observation.",
                "Note that normal abduction (as in [9]) considers only introducing hypotheses to explain an observation.",
                "An explanation (E, F) of an observation G is called minimal if for any explanation (E , F ) of G, E ⊆ E and F ⊆ F imply E = E and F = F. Example 2.1.",
                "Consider the abductive program P, H : P : flies(x) ← bird(x), not ab(x) , ab(x) ← broken-wing(x) , bird(tweety) ← , bird(opus) ← , broken-wing(tweety) ← .",
                "H : broken-wing(x) .",
                "The observation G = flies(tweety) has the minimal explanation (E, F) = (∅, {broken-wing(tweety)}). 1 This defines credulous explanations [15].",
                "Skeptical explanations are used in [8].",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1023 3.",
                "NEGOTIATION 3.1 Conditional Proposals by Abduction We suppose an agent who has a knowledge base represented by an abductive program P, H .",
                "A program P consists of two types of knowledge, belief B and desire D, where B represents objective knowledge of an agent, while D represents subjective knowledge in general.",
                "We define P = B ∪ D, but do not distinguish B and D if such distinction is not important in the context.",
                "In contrast, abducibles H are used for representing permissible conditions to make a compromise in the process of negotiation.",
                "Definition 3.1.",
                "A proposal G is a conjunction of literals and NAF-literals: L1, . . . , Lm, not Lm+1, . . . , not Ln where every variable in G is existentially quantified at the front and range-restricted.",
                "In particular, G is called a critique if G = accept or G = reject where accept and reject are the reserved propositions.",
                "A counter-proposal is a proposal made in response to a proposal.",
                "Definition 3.2.",
                "A proposal G is accepted in an abductive program P, H if P has an answer set satisfying G. When a proposal is not accepted, abduction is used for seeking conditions to make it acceptable.",
                "Definition 3.3.",
                "Let P, H be an abductive program and G a proposal.",
                "If (E, F) is a minimal explanation of Gθ for some substitution θ in P, H , the conjunction G : Gθ, E, not F is called a conditional proposal (for G), where E, not F represents the conjunction: A1, . . . , Ak, not Ak+1, . . . , not Al for E = {A1, . . . , Ak} and F = { Ak+1, . . . , Al }.",
                "Proposition 3.1.",
                "Let P, H be an abductive program and G a proposal.",
                "If G is a conditional proposal, there is a belief set S of P, H satisfying G .",
                "Proof.",
                "When G = Gθ, E, not F, (P \\ F) ∪ E has a consistent answer set S satisfying Gθ and E ∩ F = ∅.",
                "In this case, S satisfies Gθ, E, not F. A conditional proposal G provides a minimal requirement for accepting the proposal G. If Gθ has multiple minimal explanations, several conditional proposals exist accordingly.",
                "When (E, F) = (∅, ∅), a conditional proposal is used as a new proposal made in response to the proposal G. Example 3.1.",
                "An agent seeks a position of a research assistant at the computer department of a university with the condition that the salary is at least 50,000 USD per year.",
                "The agent makes his/her request as the proposal:2 G = assist(compt dept), salary(x), x ≥ 50, 000.",
                "The university has the abductive program P, H : P : salary(40, 000) ← assist(compt dept), not has PhD, salary(60, 000) ← assist(compt dept), has PhD, salary(50, 000) ← assist(math dept), salary(55, 000) ← system admin(compt dept), 2 For notational convenience, we often include mathematical (in)equations in proposals/programs.",
                "They are written by literals, for instance, x ≥ y by geq(x, y) with a suitable definition of the predicate geq. employee(x) ← assist(x), employee(x) ← system admin(x), assist(compt dept); assist(math dept) ; system admin(compt dept) ←, H : has PhD, where available positions are represented by disjunction.",
                "According to P, the base salary of a research assistant at the computer department is 40,000 USD, but if he/she has PhD, it is 60,000 USD.",
                "In this case, (E, F) = ({has PhD}, ∅) becomes the minimal explanation of Gθ = assist(compt dept), salary(60, 000) with θ = { x/60, 000 }.",
                "Then, the conditional proposal made by the university becomes assist(compt dept), salary(60, 000), has PhD . 3.2 Neighborhood Proposals by Relaxation When a proposal is unacceptable, an agent tries to construct a new counter-proposal by weakening constraints in the initial proposal.",
                "We use techniques of relaxation for this purpose.",
                "Relaxation is used as a technique of cooperative query answering in databases [4, 6].",
                "When an original query fails in a database, relaxation expands the scope of the query by relaxing the constraints in the query.",
                "This allows the database to return neighborhood answers which are related to the original query.",
                "We use the technique for producing proposals in the process of negotiation.",
                "Definition 3.4.",
                "Let P, H be an abductive program and G a proposal.",
                "Then, G is relaxed to G in the following three ways: Anti-instantiation: Construct G such that G θ = G for some substitution θ.",
                "Dropping conditions: Construct G such that G ⊂ G. Goal replacement: If G is a conjunction G1, G2, where G1 and G2 are conjunctions, and there is a rule L ← G1 in P such that G1θ = G1 for some substitution θ, then build G as Lθ, G2.",
                "Here, Lθ is called a replaced literal.",
                "In each case, every variable in G is existentially quantified at the front and range-restricted.",
                "Anti-instantiation replaces constants (or terms) with fresh variables.",
                "Dropping conditions eliminates some conditions in a proposal.",
                "Goal replacement replaces the condition G1 in G with a literal Lθ in the presence of a rule L ← G1 in P under the condition G1θ = G1.",
                "All these operations generalize proposals in different ways.",
                "Each G obtained by these operations is called a relaxation of G. It is worth noting that these operations are also used in the context of inductive generalization [12].",
                "The relaxed proposal can produce new offers which are neighbor to the original proposal.",
                "Definition 3.5.",
                "Let P, H be an abductive program and G a proposal. 1.",
                "Let G be a proposal obtained by anti-instantiation.",
                "If P has an answer set S which satisfies G θ for some substitution θ and G θ = G, G θ is called a neighborhood proposal by anti-instantiation. 2.",
                "Let G be a proposal obtained by dropping conditions.",
                "If P has an answer set S which satisfies G θ for some substitution θ, G θ is called a neighborhood proposal by dropping conditions. 1024 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.",
                "Let G be a proposal obtained by goal replacement.",
                "For a replaced literal L ∈ G and a rule H ← B in P such that L = Hσ and (G \\ {L}) ∪ Bσ = G for some substitution σ, put G = (G \\ {L}) ∪ Bσ.",
                "If P has an answer set S which satisfies G θ for some substitution θ, G θ is called a neighborhood proposal by goal replacement.",
                "Example 3.2. (cont.",
                "Example 3.1) Given the proposal G = assist(compt dept), salary(x), x ≥ 50, 000, • G1 = assist(w), salary(x), x ≥ 50, 000 is produced by substituting compt dept with a variable w. As G1θ1 = assist(math dept), salary(50, 000) with θ1 = { w/math dept } is satisfied by an answer set of P, G1θ1 becomes a neighborhood proposal by anti-instantiation. • G2 = assist(compt dept), salary(x) is produced by dropping the salary condition x ≥ 50, 000.",
                "As G2θ2 = assist(compt dept), salary(40, 000) with θ2 = { x/40, 000 } is satisfied by an answer set of P, G2θ2 becomes a neighborhood proposal by dropping conditions. • G3 = employee(compt dept), salary(x), x ≥ 50, 000 is produced by replacing assist(compt dept) with employee(compt dept) using the rule employee(x) ← assist(x) in P. By G3 and the rule employee(x) ← system admin(x) in P, G3 = sys admin(compt dept), salary(x), x ≥ 50, 000 is produced.",
                "As G3 θ3 = sys admin(compt dept), salary(55, 000) with θ3 = { x/55, 000 } is satisfied by an answer set of P, G3 θ3 becomes a neighborhood proposal by goal replacement.",
                "Finally, extended abduction and relaxation are combined to produce conditional neighborhood proposals.",
                "Definition 3.6.",
                "Let P, H be an abductive program and G a proposal. 1.",
                "Let G be a proposal obtained by either anti-instantiation or dropping conditions.",
                "If (E, F) is a minimal explanation of G θ(= G) for some substitution θ, the conjunction G θ, E, not F is called a conditional neighborhood proposal by anti-instantiation/dropping conditions. 2.",
                "Let G be a proposal obtained by goal replacement.",
                "Suppose G as in Definition 3.5(3).",
                "If (E, F) is a minimal explanation of G θ for some substitution θ, the conjunction G θ, E, not F is called a conditional neighborhood proposal by goal replacement.",
                "A conditional neighborhood proposal reduces to a neighborhood proposal when (E, F) = (∅, ∅). 3.3 Negotiation Protocol A negotiation protocol defines how to exchange proposals in the process of negotiation.",
                "This section presents a negotiation protocol in our framework.",
                "We suppose one-to-one negotiation between two agents who have a common ontology and the same language for successful communication.",
                "Definition 3.7.",
                "A proposal L1, ..., Lm, not Lm+1, ..., not Ln violates an integrity constraint ← body+ (r), not body− (r) if for any substitution θ, there is a substitution σ such that body+ (r)σ ⊆ { L1θ, . . . , Lmθ }, body− (r)σ∩{ L1θ, . . . , Lmθ } = ∅, and body− (r)σ ⊆ { Lm+1θ, . . . , Lnθ }.",
                "Integrity constraints are conditions which an agent should satisfy, so that they are used to explain why an agent does not accept a proposal.",
                "A negotiation proceeds in a series of rounds.",
                "Each i-th round (i ≥ 1) consists of a proposal Gi 1 made by one agent Ag1 and another proposal Gi 2 made by the other agent Ag2.",
                "Definition 3.8.",
                "Let P1, H1 be an abductive program of an agent Ag1 and Gi 2 a proposal made by Ag2 at the i-th round.",
                "A critique set of Ag1 (at the i-th round) is a set CSi 1(P1, Gj 2) = CSi−1 1 (P1, Gj−1 2 ) ∪ { r | r is an integrity constraint in P1 and Gj 2 violates r } where j = i − 1 or i, and CS0 1 (P1, G0 2) = CS1 1 (P1, G0 2) = ∅.",
                "A critique set of an agent Ag1 accumulates integrity constraints which are violated by proposals made by another agent Ag2.",
                "CSi 2(P2, Gj 1) is defined in the same manner.",
                "Definition 3.9.",
                "Let Pk, Hk be an abductive program of an agent Agk and Gj a proposal, which is not a critique, made by any agent at the j(≤ i)-th round.",
                "A negotiation set of Agk (at the i-th round) is a triple NSi k = (Si c, Si n, Si cn), where Si c is the set of conditional proposals, Si n is the set of neighborhood proposals, and Si cn is the set of conditional neighborhood proposals, produced by Gj and Pk, Hk .",
                "A negotiation set represents the space of possible proposals made by an agent.",
                "Si x (x ∈ {c, n, cn}) accumulates proposals produced by Gj (1 ≤ j ≤ i) according to Definitions 3.3, 3.5, and 3.6.",
                "Note that an agent can construct counter-proposals by modifying its own previous proposals or another agents proposals.",
                "An agent Agk accumulates proposals that are made by Agk but are rejected by another agent, in the failed proposal set FP i k (at the i-th round), where FP 0 k = ∅.",
                "Suppose two agents Ag1 and Ag2 who have abductive programs P1, H1 and P2, H2 , respectively.",
                "Given a proposal G1 1 which is satisfied by an answer set of P1, a negotiation starts.",
                "In response to the proposal Gi 1 made by Ag1 at the i-th round, Ag2 behaves as follows. 1.",
                "If Gi 1 = accept, an agreement is reached and negotiation ends in success. 2.",
                "Else if Gi 1 = reject, put FP i 2 = FPi−1 2 ∪{Gi−1 2 } where {G0 2} = ∅.",
                "Proceed to the step 4(b). 3.",
                "Else if P2 has an answer set satisfying Gi 1, Ag2 returns Gi 2 = accept to Ag1.",
                "Negotiation ends in success. 4.",
                "Otherwise, Ag2 behaves as follows.",
                "Put FP i 2 = FPi−1 2 . (a) If Gi 1 violates an integrity constraint in P2, return the critique Gi 2 = reject to Ag1, together with the critique set CSi 2(P2, Gi 1). (b) Otherwise, construct NSi 2 as follows. (i) Produce Si c. Let μ(Si c) = { p | p ∈ Si c \\ FPi 2 and p satisfies the constraints in CSi 1(P1, Gi−1 2 )}.",
                "If μ(Si c) = ∅, select one from μ(Si c) and propose it as Gi 2 to Ag1; otherwise, go to (ii). (ii) Produce Si n. If μ(Si n) = ∅, select one from μ(Si n) and propose it as Gi 2 to Ag1; otherwise, go to (iii). (iii) Produce Si cn.",
                "If μ(Si cn) = ∅, select one from μ(Si cn) and propose it as Gi 2 to Ag1; otherwise, negotiation ends in failure.",
                "This means that Ag2 can make no counter-proposal or every counterproposal made by Ag2 is rejected by Ag1.",
                "In the step 4(a), Ag2 rejects the proposal Gi 1 and returns the reason of rejection as a critique set.",
                "This helps for Ag1 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1025 in preparing a next counter-proposal.",
                "In the step 4(b), Ag2 constructs a new proposal.",
                "In its construction, Ag2 should take care of the critique set CSi 1(P1, Gi−1 2 ), which represents integrity constraints, if any, accumulated in previous rounds, that Ag1 must satisfy.",
                "Also, FP i 2 is used for removing proposals which have been rejected.",
                "Construction of Si x (x ∈ {c, n, cn}) in NSi 2 is incrementally done by adding new counter-proposals produced by Gi 1 or Gi−1 2 to Si−1 x .",
                "For instance, Si n in NSi 2 is computed as Si n = Si−1 n ∪{ p | p is a neighborhood proposal made by Gi 1 } ∪ { p | p is a neighborhood proposal made by Gi−1 2 }, where S0 n = ∅.",
                "That is, Si n is constructed from Si−1 n by adding new proposals which are obtained by modifying the proposal Gi 1 made by Ag1 at the i-th round or modifying the proposal Gi−1 2 made by Ag2 at the (i − 1)-th round.",
                "Si c and Si cn are obtained as well.",
                "In the above protocol, an agent produces Si c at first, secondly Si n, and finally Si cn.",
                "This strategy seeks conditions which satisfy the given proposal, prior to neighborhood proposals which change the original one.",
                "Another strategy, which prefers neighborhood proposals to conditional ones, is also considered.",
                "Conditional neighborhood proposals are to be considered in the last place, since they differ from the original one to the maximal extent.",
                "The above protocol produces the candidate proposals in Si x for each x ∈ {c, n, cn} at once.",
                "We can consider a variant of the protocol in which each proposal in Si x is constructed one by one (see Example 3.3).",
                "The above protocol is repeatedly applied to each one of the two negotiating agents until a negotiation ends in success/failure.",
                "Formally, the above negotiation protocol has the following properties.",
                "Theorem 3.2.",
                "Let Ag1 and Ag2 be two agents having abductive programs P1, H1 and P2, H2 , respectively. 1.",
                "If P1, H1 and P2, H2 are function-free (i.e., both Pi and Hi contain no function symbol), any negotiation will terminate. 2.",
                "If a negotiation terminates with agreement on a proposal G, both P1, H1 and P2, H2 have belief sets satisfying G. Proof. 1.",
                "When an abductive program is function-free, abducibles and negotiation sets are both finite.",
                "Moreover, if a proposal is once rejected, it is not proposed again by the function μ.",
                "Thus, negotiation will terminate in finite steps. 2.",
                "When a proposal G is made by Ag1, P1, H1 has a belief set satisfying G. If the agent Ag2 accepts the proposal G, it is satisfied by an answer set of P2 which is also a belief set of P2, H2 .",
                "Example 3.3.",
                "Suppose a buying-selling situation in the introduction.",
                "A seller agent has the abductive program Ps, Hs in which Ps consists of belief Bs and desire Ds: Bs : pc(b1, 1G, 512M, 80G) ; pc(b2, 1G, 512M, 80G) ←,(1) dvd-rw ; cd-rw ←, (2) Ds : normal price(1300) ← pc(b1, 1G, 512M, 80G), dvd-rw, (3) normal price(1200) ← pc(b1, 1G, 512M, 80G), cd-rw, (4) normal price(1200) ← pc(b2, 1G, 512M, 80G), dvd-rw, (5) price(x) ← normal price(x), add point, (6) price(x ∗ 0.9) ← normal price(x), pay cash, not add point,(7) add point ←, (8) Hs : add point, pay cash.",
                "Here, (1) and (2) represent selection of products.",
                "The atom pc(b1, 1G, 512M, 80G) represents that the seller agent has a PC of the brand b1 such that CPU is 1GHz, memory is 512MB, and HDD is 80GB.",
                "Prices of products are represented as desire of the seller.",
                "The rules (3) - (5) are normal prices of products.",
                "A normal price is a selling price on the condition that service points are added (6).",
                "On the other hand, a discount price is applied if the paying method is cash and no service point is added (7).",
                "The fact (8) represents the addition of service points.",
                "This service would be withdrawn in case of discount prices, so add point is specified as an abducible.",
                "A buyer agent has the abductive program Pb, Hb in which Pb consists of belief Bb and desire Db: Bb : drive ← dvd-rw, (9) drive ← cd-rw, (10) price(x) ←, (11) Db : pc(b1, 1G, 512M, 80G) ←, (12) dvd-rw ←, (13) cd-rw ← not dvd-rw, (14) ← pay cash, (15) ← price(x), x > 1200, (16) Hb : dvd-rw.",
                "Rules (12) - (16) are the buyers desire.",
                "Among them, (15) and (16) impose constraints for buying a PC.",
                "A DVD-RW is specified as an abducible which is subject to concession. (1st round) First, the following proposal is given by the buyer agent: G1 b : pc(b1, 1G, 512M, 80G), dvd-rw, price(x), x ≤ 1200.",
                "As Ps has no answer set which satisfies G1 b , the seller agent cannot accept the proposal.",
                "The seller takes an action of making a counter-proposal and performs abduction.",
                "As a result, the seller finds the minimal explanation (E, F) = ({ pay cash }, { add point }) which explains G1 b θ1 with θ1 = { x/1170 }.",
                "The seller constructs the conditional proposal: G1 s : pc(b1, 1G, 512M, 80G), dvd-rw, price(1170), pay cash, not add point and offers it to the buyer. (2nd round) The buyer does not accept G1 s because he/she cannot pay it by cash (15).",
                "The buyer then returns the critique G2 b = reject to the seller, together with the critique set CS2 b (Pb, G1 s) = {(15)}.",
                "In response to this, the seller tries to make another proposal which satisfies the constraint in this critique set.",
                "As G1 s is stored in FP 2 s and no other conditional proposal satisfying the buyers requirement exists, the seller produces neighborhood proposals.",
                "He/she relaxes G1 b by dropping x ≤ 1200 in the condition, and produces pc(b1, 1G, 512M, 80G), dvd-rw, price(x).",
                "As Ps has an answer set which satisfies G2 s : pc(b1, 1G, 512M, 80G), dvd-rw, price(1300), 1026 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) the seller offers G2 s as a new counter-proposal. (3rd round) The buyer does not accept G2 s because he/she cannot pay more than 1200USD (16).",
                "The buyer again returns the critique G3 b = reject to the seller, together with the critique set CS3 b (Pb, G2 s) = CS2 b (Pb, G1 s) ∪ {(16)}.",
                "The seller then considers another proposal by replacing b1 with a variable w, G1 b now becomes pc(w, 1G, 512M, 80G), dvd-rw, price(x), x ≤ 1200.",
                "As Ps has an answer set which satisfies G3 s : pc(b2, 1G, 512M, 80G), dvd-rw, price(1200), the seller offers G3 s as a new counter-proposal. (4th round) The buyer does not accept G3 s because a PC of the brand b2 is out of his/her interest and Pb has no answer set satisfying G3 s. Then, the buyer makes a concession by changing his/her original goal.",
                "The buyer relaxes G1 b by goal replacement using the rule (9) in Pb, and produces pc(b1, 1G, 512M, 80G), drive, price(x), x ≤ 1200.",
                "Using (10), the following proposal is produced: pc(b1, 1G, 512M, 80G), cd-rw, price(x), x ≤ 1200.",
                "As Pb \\ { dvd-rw } has a consistent answer set satisfying the above proposal, the buyer proposes the conditional neighborhood proposal G4 b : pc(b1, 1G, 512M, 80G), cd-rw, not dvd-rw, price(x), x ≤ 1200 to the seller agent.",
                "Since Ps also has an answer set satisfying G4 b , the seller accepts it and sends the message G4 s = accept to the buyer.",
                "Thus, the negotiation ends in success. 4.",
                "COMPUTATION In this section, we provide methods of computing proposals in terms of answer sets of programs.",
                "We first introduce some definitions from [15].",
                "Definition 4.1.",
                "Given an abductive program P, H , the set UR of update rules is defined as: UR = { L ← not L, L ← not L | L ∈ H } ∪ { +L ← L | L ∈ H \\ P } ∪ { −L ← not L | L ∈ H ∩ P } , where L, +L, and −L are new atoms uniquely associated with every L ∈ H. The atoms +L and −L are called update atoms.",
                "By the definition, the atom L becomes true iff L is not true.",
                "The pair of rules L ← not L and L ← not L specify the situation that an abducible L is true or not.",
                "When p(x) ∈ H and p(a) ∈ P but p(t) ∈ P for t = a, the rule +L ← L precisely becomes +p(t) ← p(t) for any t = a.",
                "In this case, the rule is shortly written as +p(x) ← p(x), x = a.",
                "Generally, the rule becomes +p(x) ← p(x), x = t1, . . . , x = tn for n such instances.",
                "The rule +L ← L derives the atom +L if an abducible L which is not in P is to be true.",
                "In contrast, the rule −L ← not L derives the atom −L if an abducible L which is in P is not to be true.",
                "Thus, update atoms represent the change of truth values of abducibles in a program.",
                "That is, +L means the introduction of L, while −L means the deletion of L. When an abducible L contains variables, the associated update atom +L or −L is supposed to have exactly the same variables.",
                "In this case, an update atom is semantically identified with its ground instances.",
                "The set of all update atoms associated with the abducibles in H is denoted by UH, and UH = UH+ ∪ UH− where UH+ (resp.",
                "UH− ) is the set of update atoms of the form +L (resp. −L).",
                "Definition 4.2.",
                "Given an abductive program P, H , its update program UP is defined as the program UP = (P \\ H) ∪ UR .",
                "An answer set S of UP is called U-minimal if there is no answer set T of UP such that T ∩ UH ⊂ S ∩ UH.",
                "By the definition, U-minimal answer sets exist whenever UP has answer sets.",
                "Update programs are used for computing (minimal) explanations of an observation.",
                "Given an observation G as a conjunction of literals and NAF-literals possibly containing variables, we introduce a new ground literal O together with the rule O ← G. In this case, O has an explanation (E, F) iff G has the same explanation.",
                "With this replacement, an observation is assumed to be a ground literal without loss of generality.",
                "In what follows, E+ = { +L | L ∈ E } and F − = { −L | L ∈ F } for E ⊆ H and F ⊆ H. Proposition 4.1. ([15]) Let P, H be an abductive program, UP its update program, and G a ground literal representing an observation.",
                "Then, a pair (E, F) is an explanation of G iff UP ∪ { ← not G } has a consistent answer set S such that E+ = S ∩ UH+ and F− = S ∩ UH− .",
                "In particular, (E, F) is a minimal explanation iff S is a U-minimal answer set.",
                "Example 4.1.",
                "To explain the observation G = flies(t) in the program P of Example 2.1, first construct the update program UP of P:3 UP : flies(x) ← bird(x), not ab(x), ab(x) ← broken-wing(x) , bird(t) ← , bird(o) ← , broken-wing(x) ← not broken-wing(x), broken-wing(x) ← not broken-wing(x), +broken-wing(x) ← broken-wing(x), x = t , −broken-wing(t) ← not broken-wing(t) .",
                "Next, consider the program UP ∪ { ← not flies(t) }.",
                "It has the single U-minimal answer set: S = { bird(t), bird(o), flies(t), flies(o), broken-wing(t), broken-wing(o), −broken-wing(t) }.",
                "The unique minimal explanation (E, F) = (∅, {broken-wing(t)}) of G is expressed by the update atom −broken-wing(t) in S ∩ UH− .",
                "Proposition 4.2.",
                "Let P, H be an abductive program and G a ground literal representing an observation.",
                "If P ∪ { ← not G } has a consistent answer set S, G has the minimal explanation (E, F) = (∅, ∅) and S satisfies G. Now we provide methods for computing (counter-)proposals.",
                "First, conditional proposals are computed as follows. input : an abductive program P, H , a proposal G; output : a set Sc of proposals.",
                "If G is a ground literal, compute its minimal explanation (E, F) in P, H using the update program.",
                "Put G, E, not F in Sc.",
                "Else if G is a conjunction possibly containing variables, consider the abductive program 3 t represents tweety and o represents opus.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1027 P ∪{ O ← G }, H with a ground literal O. Compute a minimal explanation of O in P ∪ { O ← G }, H using its update program.",
                "If O has a minimal explanation (E, F) with a substitution θ for variables in G, put Gθ, E, not F in Sc.",
                "Next, neighborhood proposals are computed as follows. input : an abductive program P, H , a proposal G; output : a set Sn of proposals. % neighborhood proposals by anti-instantiation; Construct G by anti-instantiation.",
                "For a ground literal O, if P ∪ { O ← G } ∪ { ← not O } has a consistent answer set satisfying G θ with a substitution θ and G θ = G, put G θ in Sn. % neighborhood proposals by dropping conditions; Construct G by dropping conditions.",
                "If G is a ground literal and the program P ∪ { ← not G } has a consistent answer set, put G in Sn.",
                "Else if G is a conjunction possibly containing variables, do the following.",
                "For a ground literal O, if P ∪{ O ← G }∪{ ← not O } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn. % neighborhood proposals by goal replacement; Construct G by goal replacement.",
                "If G is a ground literal and there is a rule H ← B in P such that G = Hσ and Bσ = G for some substitution σ, put G = Bσ.",
                "If P ∪ { ← not G } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn.",
                "Else if G is a conjunction possibly containing variables, do the following.",
                "For a replaced literal L ∈ G , if there is a rule H ← B in P such that L = Hσ and (G \\ {L}) ∪ Bσ = G for some substitution σ, put G = (G \\ {L}) ∪ Bσ.",
                "For a ground literal O, if P ∪ { O ← G } ∪ { ← not O } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn.",
                "Theorem 4.3.",
                "The set Sc (resp.",
                "Sn) computed above coincides with the set of conditional proposals (resp. neighborhood proposals).",
                "Proof.",
                "The result for Sc follows from Definition 3.3 and Proposition 4.1.",
                "The result for Sn follows from Definition 3.5 and Proposition 4.2.",
                "Conditional neighborhood proposals are computed by combining the above two procedures.",
                "Those proposals are computed at each round.",
                "Note that the procedure for computing Sn contains some nondeterministic choices.",
                "For instance, there are generally several candidates of literals to relax in a proposal.",
                "Also, there might be several rules in a program for the usage of goal replacement.",
                "In practice, an agent can prespecify literals in a proposal for possible relaxation or rules in a program for the usage of goal replacement. 5.",
                "RELATED WORK As there are a number of literature on automated negotiation, this section focuses on comparison with negotiation frameworks based on logic and argumentation.",
                "Sadri et al. [14] use abductive logic programming as a representation language of negotiating agents.",
                "Agents negotiate using common dialogue primitives, called dialogue moves.",
                "Each agent has an abductive logic program in which a sequence of dialogues are specified by a program, a dialogue protocol is specified as constraints, and dialogue moves are specified as abducibles.",
                "The behavior of agents is regulated by an observe-think-act cycle.",
                "Once a dialogue move is uttered by an agent, another agent that observed the utterance thinks and acts using a proof procedure.",
                "Their approach and ours both employ abductive logic programming as a platform of agent reasoning, but the use of it is quite different.",
                "First, they use abducibles to specify dialogue primitives of the form tell(utterer, receiver, subject, identifier, time), while we use abducibles to specify arbitrary permissible hypotheses to construct conditional proposals.",
                "Second, a program pre-specifies a plan to carry out in order to achieve a goal, together with available/missing resources in the context of resource-exchanging problems.",
                "This is in contrast with our method in which possible counter-proposals are newly constructed in response to a proposal made by an agent.",
                "Third, they specify a negotiation policy inside a program (as integrity constraints), while we give a protocol independent of individual agents.",
                "They provide an operational model that completely specifies the behavior of agents in terms of agent cycle.",
                "We do not provide such a complete specification of the behavior of agents.",
                "Our primary interest is to mechanize construction of proposals.",
                "Bracciali and Torroni [2] formulate abductive agents that have knowledge in abductive logic programs.",
                "To explain an observation, two agents communicate by exchanging integrity constraints.",
                "In the process of communication, an agent can revise its own integrity constraints according to the information provided by the other agent.",
                "A set IC of integrity constraints relaxes a set IC (or IC tightens IC ) if any observation that can be proved with respect to IC can also be proved with respect to IC .",
                "For instance, IC : ← a, b, c relaxes IC : ← a, b.",
                "Thus, they use relaxation for weakening the constraints in an abductive logic program.",
                "In contrast, we use relaxation for weakening proposals and three different relaxation methods, anti-instantiation, dropping conditions, and goal replacement, are considered.",
                "Their goal is to explain an observation by revising integrity constraints of an agent through communication, while we use integrity constraints for communication to explain critiques and help other agents in making counter-proposals.",
                "Meyer et al. [11] introduce a logical framework for negotiating agents.",
                "They introduce two different modes of negotiation: concession and adaptation.",
                "They provide rational postulates to characterize negotiated outcomes between two agents, and describe methods for constructing outcomes.",
                "They provide logical conditions for negotiated outcomes to satisfy, but they do not describe a process of negotiation nor negotiation protocols.",
                "Moreover, they represent agents by classical propositional theories, which is different from our abductive logic programming framework.",
                "Foo et al. [5] model one-to-one negotiation as a one-time encounter between two extended logic programs.",
                "An agent offers an answer set of its program, and their mutual deal is regarded as a trade on their answer sets.",
                "Starting from the initial agreement set S∩T for an answer set S of an agent and an answer set T of another agent, each agent extends this set to reflect its own demand while keeping consistency with demand of the other agent.",
                "Their algorithm returns new programs having answer sets which are consistent with each other and keep the agreement set.",
                "The work is extended to repeated encounters in [3].",
                "In their framework, two agents exchange answer sets to produce a common belief set, which is different from our framework of exchanging proposals.",
                "There are a number of proposals for negotiation based 1028 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) on argumentation.",
                "An advantage of argumentation-based negotiation is that it constructs a proposal with arguments supporting the proposal [1].",
                "The existence of arguments is useful to convince other agents of reasons why an agent offers (counter-)proposals or returns critiques.",
                "Parsons et al. [13] develop a logic of argumentation-based negotiation among BDI agents.",
                "In one-to-one negotiation, an agent A generates a proposal together with its arguments, and passes it to another agent B.",
                "The proposal is evaluated by B which attempts to build arguments against it.",
                "If it conflicts with Bs interest, B informs A of its objection by sending back its attacking argument.",
                "In response to this, A tries to find an alternative way of achieving its original objective, or a way of persuading B to drop its objection.",
                "If either type of argument can be found, A will submit it to B.",
                "If B finds no reason to reject the new proposal, it will be accepted and the negotiation ends in success.",
                "Otherwise, the process is iterated.",
                "In this negotiation processes, the agent A never changes its original objective, so that negotiation ends in failure if A fails to find an alternative way of achieving the original objective.",
                "In our framework, when a proposal is rejected by another agent, an agent can weaken or change its objective by abduction and relaxation.",
                "Our framework does not have a mechanism of argumentation, but reasons for critiques can be informed by responding critique sets.",
                "Kakas and Moraitis [10] propose a negotiation protocol which integrates abduction within an argumentation framework.",
                "A proposal contains an offer corresponding to the negotiation object, together with supporting information representing conditions under which this offer is made.",
                "Supporting information is computed by abduction and is used for constructing conditional arguments during the process of negotiation.",
                "In their negotiation protocol, when an agent cannot satisfy its own goal, the agent considers the other agents goal and searches for conditions under which the goal is acceptable.",
                "Our present approach differs from theirs in the following points.",
                "First, they use abduction to seek conditions to support arguments, while we use abduction to seek conditions for proposals to accept.",
                "Second, in their negotiation protocol, counter-proposals are chosen among candidates based on preference knowledge of an agent at meta-level, which represents policy under which an agent uses its object-level decision rules according to situations.",
                "In our framework, counter-proposals are newly constructed using abduction and relaxation.",
                "The method of construction is independent of particular negotiation protocols.",
                "As [2, 10, 14], abduction or abductive logic programming used in negotiation is mostly based on normal abduction.",
                "In contrast, our approach is based on extended abduction which can not only introduce hypotheses but remove them from a program.",
                "This is another important difference.",
                "Relaxation and neighborhood query answering are devised to make databases cooperative with their users [4, 6].",
                "In this sense, those techniques have the spirit similar to cooperative problem solving in multi-agent systems.",
                "As far as the authors know, however, there is no study which applies those technique to agent negotiation. 6.",
                "CONCLUSION In this paper we proposed a logical framework for negotiating agents.",
                "To construct proposals in the process of negotiation, we combined the techniques of extended abduction and relaxation.",
                "It was shown that these two operations are used for general inference rules in producing proposals.",
                "We developed a negotiation protocol between two agents based on exchange of proposals and critiques, and provided procedures for computing proposals in abductive logic programming.",
                "This enables us to realize automated negotiation on top of the existing answer set solvers.",
                "The present framework does not have a mechanism of selecting an optimal (counter-)proposal among different alternatives.",
                "To compare and evaluate proposals, an agent must have preference knowledge of candidate proposals.",
                "Further elaboration to maximize the utility of agents is left for future study. 7.",
                "REFERENCES [1] L. Amgoud, S. Parsons, and N. Maudet.",
                "Arguments, dialogue, and negotiation.",
                "In: Proc.",
                "ECAI-00, pp. 338-342, IOS Press, 2000. [2] A. Bracciali and P. Torroni.",
                "A new framework for knowledge revision of abductive agents through their interaction.",
                "In: Proc.",
                "CLIMA-IV, Computational Logic in Multi-Agent Systems, LNAI 3259, pp. 159-177, 2004. [3] W. Chen, M. Zhang, and N. Foo.",
                "Repeated negotiation of logic programs.",
                "In: Proc. 7th Workshop on Nonmonotonic Reasoning, Action and Change, 2006. [4] W. W. Chu, Q. Chen, and R.-C. Lee.",
                "Cooperative query answering via type abstraction hierarchy.",
                "In: Cooperating Knowledge Based Systems, S. M. Deen ed., pp. 271-290, Springer, 1990. [5] N. Foo, T. Meyer, Y. Zhang, and D. Zhang.",
                "Negotiating logic programs.",
                "In: Proc. 6th Workshop on Nonmonotonic Reasoning, Action and Change, 2005. [6] T. Gaasterland, P. Godfrey, and J. Minker.",
                "Relaxation as a platform for cooperative answering.",
                "Journal of Intelligence Information Systems 1(3/4):293-321, 1992. [7] M. Gelfond and V. Lifschitz.",
                "Classical negation in logic programs and disjunctive databases.",
                "New Generation Computing 9:365-385, 1991. [8] K. Inoue and C. Sakama.",
                "Abductive framework for nonmonotonic theory change.",
                "In: Proc.",
                "IJCAI-95, pp. 204-210, Morgan Kaufmann. [9] A. C. Kakas, R. A. Kowalski, and F. Toni, The role of abduction in logic programming.",
                "In: Handbook of Logic in AI and Logic Programming, D. M. Gabbay, et al. (eds), vol. 5, pp. 235-324, Oxford University Press, 1998. [10] A. C. Kakas and P. Moraitis.",
                "Adaptive agent negotiation via argumentation.",
                "In: Proc.",
                "AAMAS-06, pp. 384-391, ACM Press. [11] T. Meyer, N. Foo, R. Kwok, and D. Zhang.",
                "Logical foundation of negotiation: outcome, concession and adaptation.",
                "In: Proc.",
                "AAAI-04, pp. 293-298, MIT Press. [12] R. S. Michalski.",
                "A theory and methodology of inductive learning.",
                "In: Machine Learning: An Artificial Intelligence Approach, R. S. Michalski, et al. (eds), pp. 83-134, Morgan Kaufmann, 1983. [13] S. Parsons, C. Sierra and N. Jennings.",
                "Agents that reason and negotiate by arguing.",
                "Journal of Logic and Computation, 8(3):261-292, 1988. [14] F. Sadri, F. Toni, and P. Torroni, An abductive logic programming architecture for negotiating agents.",
                "In: Proc. 8th European Conf. on Logics in AI, LNAI 2424, pp. 419-431, Springer, 2002. [15] C. Sakama and K. Inoue.",
                "An abductive framework for computing knowledge base updates.",
                "Theory and Practice of Logic Programming 3(6):671-715, 2003.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1029"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "La otra es una contrapropuesta que es una \"propuesta alternativa\" realizada en respuesta a una propuesta anterior [13].",
                "Por el contrario, hacer contrapropuestas implica generar una \"propuesta alternativa\" que es más favorable para el agente que responde que el original."
            ],
            "translated_text": "",
            "candidates": [
                "propuesta alternativa",
                "propuesta alternativa",
                "propuesta alternativa",
                "propuesta alternativa"
            ],
            "error": []
        },
        "specific meta-knowledge": {
            "translated_key": "meta-conocimiento específico",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Negotiation by Abduction and Relaxation Chiaki Sakama Dept.",
                "Computer and Communication Sciences Wakayama University Sakaedani, Wakayama 640 8510, Japan sakama@sys.wakayama-u.ac.jp Katsumi Inoue National Institute of Informatics 2-1-2 Hitotsubashi, Chiyoda-ku Tokyo 101 8430, Japan ki@nii.ac.jp ABSTRACT This paper studies a logical framework for automated negotiation between two agents.",
                "We suppose an agent who has a knowledge base represented by a logic program.",
                "Then, we introduce methods of constructing counter-proposals in response to proposals made by an agent.",
                "To this end, we combine the techniques of extended abduction in artificial intelligence and relaxation in cooperative query answering for databases.",
                "These techniques are respectively used for producing conditional proposals and neighborhood proposals in the process of negotiation.",
                "We provide a negotiation protocol based on the exchange of these proposals and develop procedures for computing new proposals.",
                "Categories and Subject Descriptors F.4.1 [Mathematical Logic]: Logic and constraint programming;; I.2.11 [Distributed Artificial Intelligence]: Multiagent systems General Terms Theory 1.",
                "INTRODUCTION Automated negotiation has been received increasing attention in multi-agent systems, and a number of frameworks have been proposed in different contexts ([1, 2, 3, 5, 10, 11, 13, 14], for instance).",
                "Negotiation usually proceeds in a series of rounds and each agent makes a proposal at every round.",
                "An agent that received a proposal responds in two ways.",
                "One is a critique which is a remark as to whether or not (parts of) the proposal is accepted.",
                "The other is a counter-proposal which is an alternative proposal made in response to a previous proposal [13].",
                "To see these proposals in one-to-one negotiation, suppose the following negotiation dialogue between a buyer agent B and a seller agent S. (Bi (or Si) represents an utterance of B (or S) in the i-th round.)",
                "B1: I want to buy a personal computer of the brand b1, with the specification of CPU:1GHz, Memory:512MB, HDD: 80GB, and a DVD-RW driver.",
                "I want to get it at the price under 1200 USD.",
                "S1: We can provide a PC with the requested specification if you pay for it by cash.",
                "In this case, however, service points are not added for this special discount.",
                "B2: I cannot pay it by cash.",
                "S2: In a normal price, the requested PC costs 1300 USD.",
                "B3: I cannot accept the price.",
                "My budget is under 1200 USD.",
                "S3: We can provide another computer with the requested specification, except that it is made by the brand b2.",
                "The price is exactly 1200 USD.",
                "B4: I do not want a PC of the brand b2.",
                "Instead, I can downgrade a driver from DVD-RW to CD-RW in my initial proposal.",
                "S4: Ok, I accept your offer.",
                "In this dialogue, in response to the opening proposal B1, the counter-proposal S1 is returned.",
                "In the rest of the dialogue, B2, B3, S4 are critiques, while S2, S3, B4 are counterproposals.",
                "Critiques are produced by evaluating a proposal in a knowledge base of an agent.",
                "In contrast, making counter-proposals involves generating an alternative proposal which is more favorable to the responding agent than the original one.",
                "It is known that there are two ways of producing counterproposals: extending the initial proposal or amending part of the initial proposal.",
                "According to [13], the first type appears in the dialogue: A: I propose that you provide me with service X.",
                "B: I propose that I provide you with service X if you provide me with service Z.",
                "The second type is in the dialogue: A: I propose that I provide you with service Y if you provide me with service X.",
                "B: I propose that I provide you with service X if you provide me with service Z.",
                "A negotiation proceeds by iterating such give-andtake dialogues until it reaches an agreement/disagreement.",
                "In those dialogues, agents generate (counter-)proposals by reasoning on their own goals or objectives.",
                "The objective of the agent A in the above dialogues is to obtain service X.",
                "The agent B proposes conditions to provide the service.",
                "In the process of negotiation, however, it may happen that agents are obliged to weaken or change their initial goals to reach a negotiated compromise.",
                "In the dialogue of 1022 978-81-904262-7-5 (RPS) c 2007 IFAAMAS a buyer agent and a seller agent presented above, a buyer agent changes its initial goal by downgrading a driver from DVD-RW to CD-RW.",
                "Such behavior is usually represented as <br>specific meta-knowledge</br> of an agent or specified as negotiation protocols in particular problems.",
                "Currently, there is no computational logic for automated negotiation which has general inference rules for producing (counter-)proposals.",
                "The purpose of this paper is to mechanize a process of building (counter-)proposals in one-to-one negotiation dialogues.",
                "We suppose an agent who has a knowledge base represented by a logic program.",
                "We then introduce methods for generating three different types of proposals.",
                "First, we use the technique of extended abduction in artificial intelligence [8, 15] to construct a conditional proposal as an extension of the original one.",
                "Second, we use the technique of relaxation in cooperative query answering for databases [4, 6] to construct a neighborhood proposal as an amendment of the original one.",
                "Third, combining extended abduction and relaxation, conditional neighborhood proposals are constructed as amended extensions of the original proposal.",
                "We develop a negotiation protocol between two agents based on the exchange of these counter-proposals and critiques.",
                "We also provide procedures for computing proposals in logic programming.",
                "This paper is organized as follows.",
                "Section 2 introduces a logical framework used in this paper.",
                "Section 3 presents methods for constructing proposals, and provides a negotiation protocol.",
                "Section 4 provides methods for computing proposals in logic programming.",
                "Section 5 discusses related works, and Section 6 concludes the paper. 2.",
                "PRELIMINARIES Logic programs considered in this paper are extended disjunctive programs (EDP) [7].",
                "An EDP (or simply a program) is a set of rules of the form: L1 ; · · · ; Ll ← Ll+1 , . . . , Lm, not Lm+1 , . . . , not Ln (n ≥ m ≥ l ≥ 0) where each Li is a positive/negative literal, i.e., A or ¬A for an atom A, and not is negation as failure (NAF). not L is called an NAF-literal.",
                "The symbol ; represents disjunction.",
                "The left-hand side of the rule is the head, and the right-hand side is the body.",
                "For each rule r of the above form, head(r), body+ (r) and body− (r) denote the sets of literals {L1, . . . , Ll}, {Ll+1, . . . , Lm}, and {Lm+1, . . . , Ln}, respectively.",
                "Also, not body− (r) denotes the set of NAF-literals {not Lm+1, . . . , not Ln}.",
                "A disjunction of literals and a conjunction of (NAF-)literals in a rule are identified with its corresponding sets of literals.",
                "A rule r is often written as head(r) ← body+ (r), not body− (r) or head(r) ← body(r) where body(r) = body+ (r)∪not body− (r).",
                "A rule r is disjunctive if head(r) contains more than one literal.",
                "A rule r is an integrity constraint if head(r) = ∅; and r is a fact if body(r) = ∅.",
                "A program is NAF-free if no rule contains NAF-literals.",
                "Two rules/literals are identified with respect to variable renaming.",
                "A substitution is a mapping from variables to terms θ = {x1/t1, . . . , xn/tn}, where x1, . . . , xn are distinct variables and each ti is a term distinct from xi.",
                "Given a conjunction G of (NAF-)literals, Gθ denotes the conjunction obtained by applying θ to G. A program, rule, or literal is ground if it contains no variable.",
                "A program P with variables is a shorthand of its ground instantiation Ground(P), the set of ground rules obtained from P by substituting variables in P by elements of its Herbrand universe in every possible way.",
                "The semantics of an EDP is defined by the answer set semantics [7].",
                "Let Lit be the set of all ground literals in the language of a program.",
                "Suppose a program P and a set of literals S(⊆ Lit).",
                "Then, the reduct P S is the program which contains the ground rule head(r) ← body+ (r) iff there is a rule r in Ground(P) such that body− (r)∩S = ∅.",
                "Given an NAF-free EDP P, Cn(P) denotes the smallest set of ground literals which is (i) closed under P, i.e., for every ground rule r in Ground(P), body(r) ⊆ Cn(P) implies head(r) ∩ Cn(P) = ∅; and (ii) logically closed, i.e., it is either consistent or equal to Lit.",
                "Given an EDP P and a set S of literals, S is an answer set of P if S = Cn(P S ).",
                "A program has none, one, or multiple answer sets in general.",
                "An answer set is consistent if it is not Lit.",
                "A program P is consistent if it has a consistent answer set; otherwise, P is inconsistent.",
                "Abductive logic programming [9] introduces a mechanism of hypothetical reasoning to logic programming.",
                "An abductive framework used in this paper is the extended abduction introduced by Inoue and Sakama [8, 15].",
                "An abductive program is a pair P, H where P is an EDP and H is a set of literals called abducibles.",
                "When a literal L ∈ H contains variables, any instance of L is also an abducible.",
                "An abductive program P, H is consistent if P is consistent.",
                "Throughout the paper, abductive programs are assumed to be consistent unless stated otherwise.",
                "Let G = L1, . . . , Lm, not Lm+1, . . . , not Ln be a conjunction, where all variables in G are existentially quantified at the front and range-restricted, i.e., every variable in Lm+1, . . . , Ln appears in L1, . . . , Lm.",
                "A set S of ground literals satisfies the conjunction G if { L1θ, . . . , Lmθ } ⊆ S and { Lm+1θ, . . . , Lnθ }∩ S = ∅ for some ground instance Gθ with a substitution θ.",
                "Let P, H be an abductive program and G a conjunction as above.",
                "A pair (E, F) is an explanation of an observation G in P, H if1 1. (P \\ F) ∪ E has an answer set which satisfies G, 2. (P \\ F) ∪ E is consistent, 3.",
                "E and F are sets of ground literals such that E ⊆ H\\P and F ⊆ H ∩ P. When (P \\ F) ∪ E has an answer set S satisfying the above three conditions, S is called a belief set of an abductive program P, H satisfying G (with respect to (E, F)).",
                "Note that if P has a consistent answer set S satisfying G, S is also a belief set of P, H satisfying G with respect to (E, F) = (∅, ∅).",
                "Extended abduction introduces/removes hypotheses to/from a program to explain an observation.",
                "Note that normal abduction (as in [9]) considers only introducing hypotheses to explain an observation.",
                "An explanation (E, F) of an observation G is called minimal if for any explanation (E , F ) of G, E ⊆ E and F ⊆ F imply E = E and F = F. Example 2.1.",
                "Consider the abductive program P, H : P : flies(x) ← bird(x), not ab(x) , ab(x) ← broken-wing(x) , bird(tweety) ← , bird(opus) ← , broken-wing(tweety) ← .",
                "H : broken-wing(x) .",
                "The observation G = flies(tweety) has the minimal explanation (E, F) = (∅, {broken-wing(tweety)}). 1 This defines credulous explanations [15].",
                "Skeptical explanations are used in [8].",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1023 3.",
                "NEGOTIATION 3.1 Conditional Proposals by Abduction We suppose an agent who has a knowledge base represented by an abductive program P, H .",
                "A program P consists of two types of knowledge, belief B and desire D, where B represents objective knowledge of an agent, while D represents subjective knowledge in general.",
                "We define P = B ∪ D, but do not distinguish B and D if such distinction is not important in the context.",
                "In contrast, abducibles H are used for representing permissible conditions to make a compromise in the process of negotiation.",
                "Definition 3.1.",
                "A proposal G is a conjunction of literals and NAF-literals: L1, . . . , Lm, not Lm+1, . . . , not Ln where every variable in G is existentially quantified at the front and range-restricted.",
                "In particular, G is called a critique if G = accept or G = reject where accept and reject are the reserved propositions.",
                "A counter-proposal is a proposal made in response to a proposal.",
                "Definition 3.2.",
                "A proposal G is accepted in an abductive program P, H if P has an answer set satisfying G. When a proposal is not accepted, abduction is used for seeking conditions to make it acceptable.",
                "Definition 3.3.",
                "Let P, H be an abductive program and G a proposal.",
                "If (E, F) is a minimal explanation of Gθ for some substitution θ in P, H , the conjunction G : Gθ, E, not F is called a conditional proposal (for G), where E, not F represents the conjunction: A1, . . . , Ak, not Ak+1, . . . , not Al for E = {A1, . . . , Ak} and F = { Ak+1, . . . , Al }.",
                "Proposition 3.1.",
                "Let P, H be an abductive program and G a proposal.",
                "If G is a conditional proposal, there is a belief set S of P, H satisfying G .",
                "Proof.",
                "When G = Gθ, E, not F, (P \\ F) ∪ E has a consistent answer set S satisfying Gθ and E ∩ F = ∅.",
                "In this case, S satisfies Gθ, E, not F. A conditional proposal G provides a minimal requirement for accepting the proposal G. If Gθ has multiple minimal explanations, several conditional proposals exist accordingly.",
                "When (E, F) = (∅, ∅), a conditional proposal is used as a new proposal made in response to the proposal G. Example 3.1.",
                "An agent seeks a position of a research assistant at the computer department of a university with the condition that the salary is at least 50,000 USD per year.",
                "The agent makes his/her request as the proposal:2 G = assist(compt dept), salary(x), x ≥ 50, 000.",
                "The university has the abductive program P, H : P : salary(40, 000) ← assist(compt dept), not has PhD, salary(60, 000) ← assist(compt dept), has PhD, salary(50, 000) ← assist(math dept), salary(55, 000) ← system admin(compt dept), 2 For notational convenience, we often include mathematical (in)equations in proposals/programs.",
                "They are written by literals, for instance, x ≥ y by geq(x, y) with a suitable definition of the predicate geq. employee(x) ← assist(x), employee(x) ← system admin(x), assist(compt dept); assist(math dept) ; system admin(compt dept) ←, H : has PhD, where available positions are represented by disjunction.",
                "According to P, the base salary of a research assistant at the computer department is 40,000 USD, but if he/she has PhD, it is 60,000 USD.",
                "In this case, (E, F) = ({has PhD}, ∅) becomes the minimal explanation of Gθ = assist(compt dept), salary(60, 000) with θ = { x/60, 000 }.",
                "Then, the conditional proposal made by the university becomes assist(compt dept), salary(60, 000), has PhD . 3.2 Neighborhood Proposals by Relaxation When a proposal is unacceptable, an agent tries to construct a new counter-proposal by weakening constraints in the initial proposal.",
                "We use techniques of relaxation for this purpose.",
                "Relaxation is used as a technique of cooperative query answering in databases [4, 6].",
                "When an original query fails in a database, relaxation expands the scope of the query by relaxing the constraints in the query.",
                "This allows the database to return neighborhood answers which are related to the original query.",
                "We use the technique for producing proposals in the process of negotiation.",
                "Definition 3.4.",
                "Let P, H be an abductive program and G a proposal.",
                "Then, G is relaxed to G in the following three ways: Anti-instantiation: Construct G such that G θ = G for some substitution θ.",
                "Dropping conditions: Construct G such that G ⊂ G. Goal replacement: If G is a conjunction G1, G2, where G1 and G2 are conjunctions, and there is a rule L ← G1 in P such that G1θ = G1 for some substitution θ, then build G as Lθ, G2.",
                "Here, Lθ is called a replaced literal.",
                "In each case, every variable in G is existentially quantified at the front and range-restricted.",
                "Anti-instantiation replaces constants (or terms) with fresh variables.",
                "Dropping conditions eliminates some conditions in a proposal.",
                "Goal replacement replaces the condition G1 in G with a literal Lθ in the presence of a rule L ← G1 in P under the condition G1θ = G1.",
                "All these operations generalize proposals in different ways.",
                "Each G obtained by these operations is called a relaxation of G. It is worth noting that these operations are also used in the context of inductive generalization [12].",
                "The relaxed proposal can produce new offers which are neighbor to the original proposal.",
                "Definition 3.5.",
                "Let P, H be an abductive program and G a proposal. 1.",
                "Let G be a proposal obtained by anti-instantiation.",
                "If P has an answer set S which satisfies G θ for some substitution θ and G θ = G, G θ is called a neighborhood proposal by anti-instantiation. 2.",
                "Let G be a proposal obtained by dropping conditions.",
                "If P has an answer set S which satisfies G θ for some substitution θ, G θ is called a neighborhood proposal by dropping conditions. 1024 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.",
                "Let G be a proposal obtained by goal replacement.",
                "For a replaced literal L ∈ G and a rule H ← B in P such that L = Hσ and (G \\ {L}) ∪ Bσ = G for some substitution σ, put G = (G \\ {L}) ∪ Bσ.",
                "If P has an answer set S which satisfies G θ for some substitution θ, G θ is called a neighborhood proposal by goal replacement.",
                "Example 3.2. (cont.",
                "Example 3.1) Given the proposal G = assist(compt dept), salary(x), x ≥ 50, 000, • G1 = assist(w), salary(x), x ≥ 50, 000 is produced by substituting compt dept with a variable w. As G1θ1 = assist(math dept), salary(50, 000) with θ1 = { w/math dept } is satisfied by an answer set of P, G1θ1 becomes a neighborhood proposal by anti-instantiation. • G2 = assist(compt dept), salary(x) is produced by dropping the salary condition x ≥ 50, 000.",
                "As G2θ2 = assist(compt dept), salary(40, 000) with θ2 = { x/40, 000 } is satisfied by an answer set of P, G2θ2 becomes a neighborhood proposal by dropping conditions. • G3 = employee(compt dept), salary(x), x ≥ 50, 000 is produced by replacing assist(compt dept) with employee(compt dept) using the rule employee(x) ← assist(x) in P. By G3 and the rule employee(x) ← system admin(x) in P, G3 = sys admin(compt dept), salary(x), x ≥ 50, 000 is produced.",
                "As G3 θ3 = sys admin(compt dept), salary(55, 000) with θ3 = { x/55, 000 } is satisfied by an answer set of P, G3 θ3 becomes a neighborhood proposal by goal replacement.",
                "Finally, extended abduction and relaxation are combined to produce conditional neighborhood proposals.",
                "Definition 3.6.",
                "Let P, H be an abductive program and G a proposal. 1.",
                "Let G be a proposal obtained by either anti-instantiation or dropping conditions.",
                "If (E, F) is a minimal explanation of G θ(= G) for some substitution θ, the conjunction G θ, E, not F is called a conditional neighborhood proposal by anti-instantiation/dropping conditions. 2.",
                "Let G be a proposal obtained by goal replacement.",
                "Suppose G as in Definition 3.5(3).",
                "If (E, F) is a minimal explanation of G θ for some substitution θ, the conjunction G θ, E, not F is called a conditional neighborhood proposal by goal replacement.",
                "A conditional neighborhood proposal reduces to a neighborhood proposal when (E, F) = (∅, ∅). 3.3 Negotiation Protocol A negotiation protocol defines how to exchange proposals in the process of negotiation.",
                "This section presents a negotiation protocol in our framework.",
                "We suppose one-to-one negotiation between two agents who have a common ontology and the same language for successful communication.",
                "Definition 3.7.",
                "A proposal L1, ..., Lm, not Lm+1, ..., not Ln violates an integrity constraint ← body+ (r), not body− (r) if for any substitution θ, there is a substitution σ such that body+ (r)σ ⊆ { L1θ, . . . , Lmθ }, body− (r)σ∩{ L1θ, . . . , Lmθ } = ∅, and body− (r)σ ⊆ { Lm+1θ, . . . , Lnθ }.",
                "Integrity constraints are conditions which an agent should satisfy, so that they are used to explain why an agent does not accept a proposal.",
                "A negotiation proceeds in a series of rounds.",
                "Each i-th round (i ≥ 1) consists of a proposal Gi 1 made by one agent Ag1 and another proposal Gi 2 made by the other agent Ag2.",
                "Definition 3.8.",
                "Let P1, H1 be an abductive program of an agent Ag1 and Gi 2 a proposal made by Ag2 at the i-th round.",
                "A critique set of Ag1 (at the i-th round) is a set CSi 1(P1, Gj 2) = CSi−1 1 (P1, Gj−1 2 ) ∪ { r | r is an integrity constraint in P1 and Gj 2 violates r } where j = i − 1 or i, and CS0 1 (P1, G0 2) = CS1 1 (P1, G0 2) = ∅.",
                "A critique set of an agent Ag1 accumulates integrity constraints which are violated by proposals made by another agent Ag2.",
                "CSi 2(P2, Gj 1) is defined in the same manner.",
                "Definition 3.9.",
                "Let Pk, Hk be an abductive program of an agent Agk and Gj a proposal, which is not a critique, made by any agent at the j(≤ i)-th round.",
                "A negotiation set of Agk (at the i-th round) is a triple NSi k = (Si c, Si n, Si cn), where Si c is the set of conditional proposals, Si n is the set of neighborhood proposals, and Si cn is the set of conditional neighborhood proposals, produced by Gj and Pk, Hk .",
                "A negotiation set represents the space of possible proposals made by an agent.",
                "Si x (x ∈ {c, n, cn}) accumulates proposals produced by Gj (1 ≤ j ≤ i) according to Definitions 3.3, 3.5, and 3.6.",
                "Note that an agent can construct counter-proposals by modifying its own previous proposals or another agents proposals.",
                "An agent Agk accumulates proposals that are made by Agk but are rejected by another agent, in the failed proposal set FP i k (at the i-th round), where FP 0 k = ∅.",
                "Suppose two agents Ag1 and Ag2 who have abductive programs P1, H1 and P2, H2 , respectively.",
                "Given a proposal G1 1 which is satisfied by an answer set of P1, a negotiation starts.",
                "In response to the proposal Gi 1 made by Ag1 at the i-th round, Ag2 behaves as follows. 1.",
                "If Gi 1 = accept, an agreement is reached and negotiation ends in success. 2.",
                "Else if Gi 1 = reject, put FP i 2 = FPi−1 2 ∪{Gi−1 2 } where {G0 2} = ∅.",
                "Proceed to the step 4(b). 3.",
                "Else if P2 has an answer set satisfying Gi 1, Ag2 returns Gi 2 = accept to Ag1.",
                "Negotiation ends in success. 4.",
                "Otherwise, Ag2 behaves as follows.",
                "Put FP i 2 = FPi−1 2 . (a) If Gi 1 violates an integrity constraint in P2, return the critique Gi 2 = reject to Ag1, together with the critique set CSi 2(P2, Gi 1). (b) Otherwise, construct NSi 2 as follows. (i) Produce Si c. Let μ(Si c) = { p | p ∈ Si c \\ FPi 2 and p satisfies the constraints in CSi 1(P1, Gi−1 2 )}.",
                "If μ(Si c) = ∅, select one from μ(Si c) and propose it as Gi 2 to Ag1; otherwise, go to (ii). (ii) Produce Si n. If μ(Si n) = ∅, select one from μ(Si n) and propose it as Gi 2 to Ag1; otherwise, go to (iii). (iii) Produce Si cn.",
                "If μ(Si cn) = ∅, select one from μ(Si cn) and propose it as Gi 2 to Ag1; otherwise, negotiation ends in failure.",
                "This means that Ag2 can make no counter-proposal or every counterproposal made by Ag2 is rejected by Ag1.",
                "In the step 4(a), Ag2 rejects the proposal Gi 1 and returns the reason of rejection as a critique set.",
                "This helps for Ag1 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1025 in preparing a next counter-proposal.",
                "In the step 4(b), Ag2 constructs a new proposal.",
                "In its construction, Ag2 should take care of the critique set CSi 1(P1, Gi−1 2 ), which represents integrity constraints, if any, accumulated in previous rounds, that Ag1 must satisfy.",
                "Also, FP i 2 is used for removing proposals which have been rejected.",
                "Construction of Si x (x ∈ {c, n, cn}) in NSi 2 is incrementally done by adding new counter-proposals produced by Gi 1 or Gi−1 2 to Si−1 x .",
                "For instance, Si n in NSi 2 is computed as Si n = Si−1 n ∪{ p | p is a neighborhood proposal made by Gi 1 } ∪ { p | p is a neighborhood proposal made by Gi−1 2 }, where S0 n = ∅.",
                "That is, Si n is constructed from Si−1 n by adding new proposals which are obtained by modifying the proposal Gi 1 made by Ag1 at the i-th round or modifying the proposal Gi−1 2 made by Ag2 at the (i − 1)-th round.",
                "Si c and Si cn are obtained as well.",
                "In the above protocol, an agent produces Si c at first, secondly Si n, and finally Si cn.",
                "This strategy seeks conditions which satisfy the given proposal, prior to neighborhood proposals which change the original one.",
                "Another strategy, which prefers neighborhood proposals to conditional ones, is also considered.",
                "Conditional neighborhood proposals are to be considered in the last place, since they differ from the original one to the maximal extent.",
                "The above protocol produces the candidate proposals in Si x for each x ∈ {c, n, cn} at once.",
                "We can consider a variant of the protocol in which each proposal in Si x is constructed one by one (see Example 3.3).",
                "The above protocol is repeatedly applied to each one of the two negotiating agents until a negotiation ends in success/failure.",
                "Formally, the above negotiation protocol has the following properties.",
                "Theorem 3.2.",
                "Let Ag1 and Ag2 be two agents having abductive programs P1, H1 and P2, H2 , respectively. 1.",
                "If P1, H1 and P2, H2 are function-free (i.e., both Pi and Hi contain no function symbol), any negotiation will terminate. 2.",
                "If a negotiation terminates with agreement on a proposal G, both P1, H1 and P2, H2 have belief sets satisfying G. Proof. 1.",
                "When an abductive program is function-free, abducibles and negotiation sets are both finite.",
                "Moreover, if a proposal is once rejected, it is not proposed again by the function μ.",
                "Thus, negotiation will terminate in finite steps. 2.",
                "When a proposal G is made by Ag1, P1, H1 has a belief set satisfying G. If the agent Ag2 accepts the proposal G, it is satisfied by an answer set of P2 which is also a belief set of P2, H2 .",
                "Example 3.3.",
                "Suppose a buying-selling situation in the introduction.",
                "A seller agent has the abductive program Ps, Hs in which Ps consists of belief Bs and desire Ds: Bs : pc(b1, 1G, 512M, 80G) ; pc(b2, 1G, 512M, 80G) ←,(1) dvd-rw ; cd-rw ←, (2) Ds : normal price(1300) ← pc(b1, 1G, 512M, 80G), dvd-rw, (3) normal price(1200) ← pc(b1, 1G, 512M, 80G), cd-rw, (4) normal price(1200) ← pc(b2, 1G, 512M, 80G), dvd-rw, (5) price(x) ← normal price(x), add point, (6) price(x ∗ 0.9) ← normal price(x), pay cash, not add point,(7) add point ←, (8) Hs : add point, pay cash.",
                "Here, (1) and (2) represent selection of products.",
                "The atom pc(b1, 1G, 512M, 80G) represents that the seller agent has a PC of the brand b1 such that CPU is 1GHz, memory is 512MB, and HDD is 80GB.",
                "Prices of products are represented as desire of the seller.",
                "The rules (3) - (5) are normal prices of products.",
                "A normal price is a selling price on the condition that service points are added (6).",
                "On the other hand, a discount price is applied if the paying method is cash and no service point is added (7).",
                "The fact (8) represents the addition of service points.",
                "This service would be withdrawn in case of discount prices, so add point is specified as an abducible.",
                "A buyer agent has the abductive program Pb, Hb in which Pb consists of belief Bb and desire Db: Bb : drive ← dvd-rw, (9) drive ← cd-rw, (10) price(x) ←, (11) Db : pc(b1, 1G, 512M, 80G) ←, (12) dvd-rw ←, (13) cd-rw ← not dvd-rw, (14) ← pay cash, (15) ← price(x), x > 1200, (16) Hb : dvd-rw.",
                "Rules (12) - (16) are the buyers desire.",
                "Among them, (15) and (16) impose constraints for buying a PC.",
                "A DVD-RW is specified as an abducible which is subject to concession. (1st round) First, the following proposal is given by the buyer agent: G1 b : pc(b1, 1G, 512M, 80G), dvd-rw, price(x), x ≤ 1200.",
                "As Ps has no answer set which satisfies G1 b , the seller agent cannot accept the proposal.",
                "The seller takes an action of making a counter-proposal and performs abduction.",
                "As a result, the seller finds the minimal explanation (E, F) = ({ pay cash }, { add point }) which explains G1 b θ1 with θ1 = { x/1170 }.",
                "The seller constructs the conditional proposal: G1 s : pc(b1, 1G, 512M, 80G), dvd-rw, price(1170), pay cash, not add point and offers it to the buyer. (2nd round) The buyer does not accept G1 s because he/she cannot pay it by cash (15).",
                "The buyer then returns the critique G2 b = reject to the seller, together with the critique set CS2 b (Pb, G1 s) = {(15)}.",
                "In response to this, the seller tries to make another proposal which satisfies the constraint in this critique set.",
                "As G1 s is stored in FP 2 s and no other conditional proposal satisfying the buyers requirement exists, the seller produces neighborhood proposals.",
                "He/she relaxes G1 b by dropping x ≤ 1200 in the condition, and produces pc(b1, 1G, 512M, 80G), dvd-rw, price(x).",
                "As Ps has an answer set which satisfies G2 s : pc(b1, 1G, 512M, 80G), dvd-rw, price(1300), 1026 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) the seller offers G2 s as a new counter-proposal. (3rd round) The buyer does not accept G2 s because he/she cannot pay more than 1200USD (16).",
                "The buyer again returns the critique G3 b = reject to the seller, together with the critique set CS3 b (Pb, G2 s) = CS2 b (Pb, G1 s) ∪ {(16)}.",
                "The seller then considers another proposal by replacing b1 with a variable w, G1 b now becomes pc(w, 1G, 512M, 80G), dvd-rw, price(x), x ≤ 1200.",
                "As Ps has an answer set which satisfies G3 s : pc(b2, 1G, 512M, 80G), dvd-rw, price(1200), the seller offers G3 s as a new counter-proposal. (4th round) The buyer does not accept G3 s because a PC of the brand b2 is out of his/her interest and Pb has no answer set satisfying G3 s. Then, the buyer makes a concession by changing his/her original goal.",
                "The buyer relaxes G1 b by goal replacement using the rule (9) in Pb, and produces pc(b1, 1G, 512M, 80G), drive, price(x), x ≤ 1200.",
                "Using (10), the following proposal is produced: pc(b1, 1G, 512M, 80G), cd-rw, price(x), x ≤ 1200.",
                "As Pb \\ { dvd-rw } has a consistent answer set satisfying the above proposal, the buyer proposes the conditional neighborhood proposal G4 b : pc(b1, 1G, 512M, 80G), cd-rw, not dvd-rw, price(x), x ≤ 1200 to the seller agent.",
                "Since Ps also has an answer set satisfying G4 b , the seller accepts it and sends the message G4 s = accept to the buyer.",
                "Thus, the negotiation ends in success. 4.",
                "COMPUTATION In this section, we provide methods of computing proposals in terms of answer sets of programs.",
                "We first introduce some definitions from [15].",
                "Definition 4.1.",
                "Given an abductive program P, H , the set UR of update rules is defined as: UR = { L ← not L, L ← not L | L ∈ H } ∪ { +L ← L | L ∈ H \\ P } ∪ { −L ← not L | L ∈ H ∩ P } , where L, +L, and −L are new atoms uniquely associated with every L ∈ H. The atoms +L and −L are called update atoms.",
                "By the definition, the atom L becomes true iff L is not true.",
                "The pair of rules L ← not L and L ← not L specify the situation that an abducible L is true or not.",
                "When p(x) ∈ H and p(a) ∈ P but p(t) ∈ P for t = a, the rule +L ← L precisely becomes +p(t) ← p(t) for any t = a.",
                "In this case, the rule is shortly written as +p(x) ← p(x), x = a.",
                "Generally, the rule becomes +p(x) ← p(x), x = t1, . . . , x = tn for n such instances.",
                "The rule +L ← L derives the atom +L if an abducible L which is not in P is to be true.",
                "In contrast, the rule −L ← not L derives the atom −L if an abducible L which is in P is not to be true.",
                "Thus, update atoms represent the change of truth values of abducibles in a program.",
                "That is, +L means the introduction of L, while −L means the deletion of L. When an abducible L contains variables, the associated update atom +L or −L is supposed to have exactly the same variables.",
                "In this case, an update atom is semantically identified with its ground instances.",
                "The set of all update atoms associated with the abducibles in H is denoted by UH, and UH = UH+ ∪ UH− where UH+ (resp.",
                "UH− ) is the set of update atoms of the form +L (resp. −L).",
                "Definition 4.2.",
                "Given an abductive program P, H , its update program UP is defined as the program UP = (P \\ H) ∪ UR .",
                "An answer set S of UP is called U-minimal if there is no answer set T of UP such that T ∩ UH ⊂ S ∩ UH.",
                "By the definition, U-minimal answer sets exist whenever UP has answer sets.",
                "Update programs are used for computing (minimal) explanations of an observation.",
                "Given an observation G as a conjunction of literals and NAF-literals possibly containing variables, we introduce a new ground literal O together with the rule O ← G. In this case, O has an explanation (E, F) iff G has the same explanation.",
                "With this replacement, an observation is assumed to be a ground literal without loss of generality.",
                "In what follows, E+ = { +L | L ∈ E } and F − = { −L | L ∈ F } for E ⊆ H and F ⊆ H. Proposition 4.1. ([15]) Let P, H be an abductive program, UP its update program, and G a ground literal representing an observation.",
                "Then, a pair (E, F) is an explanation of G iff UP ∪ { ← not G } has a consistent answer set S such that E+ = S ∩ UH+ and F− = S ∩ UH− .",
                "In particular, (E, F) is a minimal explanation iff S is a U-minimal answer set.",
                "Example 4.1.",
                "To explain the observation G = flies(t) in the program P of Example 2.1, first construct the update program UP of P:3 UP : flies(x) ← bird(x), not ab(x), ab(x) ← broken-wing(x) , bird(t) ← , bird(o) ← , broken-wing(x) ← not broken-wing(x), broken-wing(x) ← not broken-wing(x), +broken-wing(x) ← broken-wing(x), x = t , −broken-wing(t) ← not broken-wing(t) .",
                "Next, consider the program UP ∪ { ← not flies(t) }.",
                "It has the single U-minimal answer set: S = { bird(t), bird(o), flies(t), flies(o), broken-wing(t), broken-wing(o), −broken-wing(t) }.",
                "The unique minimal explanation (E, F) = (∅, {broken-wing(t)}) of G is expressed by the update atom −broken-wing(t) in S ∩ UH− .",
                "Proposition 4.2.",
                "Let P, H be an abductive program and G a ground literal representing an observation.",
                "If P ∪ { ← not G } has a consistent answer set S, G has the minimal explanation (E, F) = (∅, ∅) and S satisfies G. Now we provide methods for computing (counter-)proposals.",
                "First, conditional proposals are computed as follows. input : an abductive program P, H , a proposal G; output : a set Sc of proposals.",
                "If G is a ground literal, compute its minimal explanation (E, F) in P, H using the update program.",
                "Put G, E, not F in Sc.",
                "Else if G is a conjunction possibly containing variables, consider the abductive program 3 t represents tweety and o represents opus.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1027 P ∪{ O ← G }, H with a ground literal O. Compute a minimal explanation of O in P ∪ { O ← G }, H using its update program.",
                "If O has a minimal explanation (E, F) with a substitution θ for variables in G, put Gθ, E, not F in Sc.",
                "Next, neighborhood proposals are computed as follows. input : an abductive program P, H , a proposal G; output : a set Sn of proposals. % neighborhood proposals by anti-instantiation; Construct G by anti-instantiation.",
                "For a ground literal O, if P ∪ { O ← G } ∪ { ← not O } has a consistent answer set satisfying G θ with a substitution θ and G θ = G, put G θ in Sn. % neighborhood proposals by dropping conditions; Construct G by dropping conditions.",
                "If G is a ground literal and the program P ∪ { ← not G } has a consistent answer set, put G in Sn.",
                "Else if G is a conjunction possibly containing variables, do the following.",
                "For a ground literal O, if P ∪{ O ← G }∪{ ← not O } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn. % neighborhood proposals by goal replacement; Construct G by goal replacement.",
                "If G is a ground literal and there is a rule H ← B in P such that G = Hσ and Bσ = G for some substitution σ, put G = Bσ.",
                "If P ∪ { ← not G } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn.",
                "Else if G is a conjunction possibly containing variables, do the following.",
                "For a replaced literal L ∈ G , if there is a rule H ← B in P such that L = Hσ and (G \\ {L}) ∪ Bσ = G for some substitution σ, put G = (G \\ {L}) ∪ Bσ.",
                "For a ground literal O, if P ∪ { O ← G } ∪ { ← not O } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn.",
                "Theorem 4.3.",
                "The set Sc (resp.",
                "Sn) computed above coincides with the set of conditional proposals (resp. neighborhood proposals).",
                "Proof.",
                "The result for Sc follows from Definition 3.3 and Proposition 4.1.",
                "The result for Sn follows from Definition 3.5 and Proposition 4.2.",
                "Conditional neighborhood proposals are computed by combining the above two procedures.",
                "Those proposals are computed at each round.",
                "Note that the procedure for computing Sn contains some nondeterministic choices.",
                "For instance, there are generally several candidates of literals to relax in a proposal.",
                "Also, there might be several rules in a program for the usage of goal replacement.",
                "In practice, an agent can prespecify literals in a proposal for possible relaxation or rules in a program for the usage of goal replacement. 5.",
                "RELATED WORK As there are a number of literature on automated negotiation, this section focuses on comparison with negotiation frameworks based on logic and argumentation.",
                "Sadri et al. [14] use abductive logic programming as a representation language of negotiating agents.",
                "Agents negotiate using common dialogue primitives, called dialogue moves.",
                "Each agent has an abductive logic program in which a sequence of dialogues are specified by a program, a dialogue protocol is specified as constraints, and dialogue moves are specified as abducibles.",
                "The behavior of agents is regulated by an observe-think-act cycle.",
                "Once a dialogue move is uttered by an agent, another agent that observed the utterance thinks and acts using a proof procedure.",
                "Their approach and ours both employ abductive logic programming as a platform of agent reasoning, but the use of it is quite different.",
                "First, they use abducibles to specify dialogue primitives of the form tell(utterer, receiver, subject, identifier, time), while we use abducibles to specify arbitrary permissible hypotheses to construct conditional proposals.",
                "Second, a program pre-specifies a plan to carry out in order to achieve a goal, together with available/missing resources in the context of resource-exchanging problems.",
                "This is in contrast with our method in which possible counter-proposals are newly constructed in response to a proposal made by an agent.",
                "Third, they specify a negotiation policy inside a program (as integrity constraints), while we give a protocol independent of individual agents.",
                "They provide an operational model that completely specifies the behavior of agents in terms of agent cycle.",
                "We do not provide such a complete specification of the behavior of agents.",
                "Our primary interest is to mechanize construction of proposals.",
                "Bracciali and Torroni [2] formulate abductive agents that have knowledge in abductive logic programs.",
                "To explain an observation, two agents communicate by exchanging integrity constraints.",
                "In the process of communication, an agent can revise its own integrity constraints according to the information provided by the other agent.",
                "A set IC of integrity constraints relaxes a set IC (or IC tightens IC ) if any observation that can be proved with respect to IC can also be proved with respect to IC .",
                "For instance, IC : ← a, b, c relaxes IC : ← a, b.",
                "Thus, they use relaxation for weakening the constraints in an abductive logic program.",
                "In contrast, we use relaxation for weakening proposals and three different relaxation methods, anti-instantiation, dropping conditions, and goal replacement, are considered.",
                "Their goal is to explain an observation by revising integrity constraints of an agent through communication, while we use integrity constraints for communication to explain critiques and help other agents in making counter-proposals.",
                "Meyer et al. [11] introduce a logical framework for negotiating agents.",
                "They introduce two different modes of negotiation: concession and adaptation.",
                "They provide rational postulates to characterize negotiated outcomes between two agents, and describe methods for constructing outcomes.",
                "They provide logical conditions for negotiated outcomes to satisfy, but they do not describe a process of negotiation nor negotiation protocols.",
                "Moreover, they represent agents by classical propositional theories, which is different from our abductive logic programming framework.",
                "Foo et al. [5] model one-to-one negotiation as a one-time encounter between two extended logic programs.",
                "An agent offers an answer set of its program, and their mutual deal is regarded as a trade on their answer sets.",
                "Starting from the initial agreement set S∩T for an answer set S of an agent and an answer set T of another agent, each agent extends this set to reflect its own demand while keeping consistency with demand of the other agent.",
                "Their algorithm returns new programs having answer sets which are consistent with each other and keep the agreement set.",
                "The work is extended to repeated encounters in [3].",
                "In their framework, two agents exchange answer sets to produce a common belief set, which is different from our framework of exchanging proposals.",
                "There are a number of proposals for negotiation based 1028 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) on argumentation.",
                "An advantage of argumentation-based negotiation is that it constructs a proposal with arguments supporting the proposal [1].",
                "The existence of arguments is useful to convince other agents of reasons why an agent offers (counter-)proposals or returns critiques.",
                "Parsons et al. [13] develop a logic of argumentation-based negotiation among BDI agents.",
                "In one-to-one negotiation, an agent A generates a proposal together with its arguments, and passes it to another agent B.",
                "The proposal is evaluated by B which attempts to build arguments against it.",
                "If it conflicts with Bs interest, B informs A of its objection by sending back its attacking argument.",
                "In response to this, A tries to find an alternative way of achieving its original objective, or a way of persuading B to drop its objection.",
                "If either type of argument can be found, A will submit it to B.",
                "If B finds no reason to reject the new proposal, it will be accepted and the negotiation ends in success.",
                "Otherwise, the process is iterated.",
                "In this negotiation processes, the agent A never changes its original objective, so that negotiation ends in failure if A fails to find an alternative way of achieving the original objective.",
                "In our framework, when a proposal is rejected by another agent, an agent can weaken or change its objective by abduction and relaxation.",
                "Our framework does not have a mechanism of argumentation, but reasons for critiques can be informed by responding critique sets.",
                "Kakas and Moraitis [10] propose a negotiation protocol which integrates abduction within an argumentation framework.",
                "A proposal contains an offer corresponding to the negotiation object, together with supporting information representing conditions under which this offer is made.",
                "Supporting information is computed by abduction and is used for constructing conditional arguments during the process of negotiation.",
                "In their negotiation protocol, when an agent cannot satisfy its own goal, the agent considers the other agents goal and searches for conditions under which the goal is acceptable.",
                "Our present approach differs from theirs in the following points.",
                "First, they use abduction to seek conditions to support arguments, while we use abduction to seek conditions for proposals to accept.",
                "Second, in their negotiation protocol, counter-proposals are chosen among candidates based on preference knowledge of an agent at meta-level, which represents policy under which an agent uses its object-level decision rules according to situations.",
                "In our framework, counter-proposals are newly constructed using abduction and relaxation.",
                "The method of construction is independent of particular negotiation protocols.",
                "As [2, 10, 14], abduction or abductive logic programming used in negotiation is mostly based on normal abduction.",
                "In contrast, our approach is based on extended abduction which can not only introduce hypotheses but remove them from a program.",
                "This is another important difference.",
                "Relaxation and neighborhood query answering are devised to make databases cooperative with their users [4, 6].",
                "In this sense, those techniques have the spirit similar to cooperative problem solving in multi-agent systems.",
                "As far as the authors know, however, there is no study which applies those technique to agent negotiation. 6.",
                "CONCLUSION In this paper we proposed a logical framework for negotiating agents.",
                "To construct proposals in the process of negotiation, we combined the techniques of extended abduction and relaxation.",
                "It was shown that these two operations are used for general inference rules in producing proposals.",
                "We developed a negotiation protocol between two agents based on exchange of proposals and critiques, and provided procedures for computing proposals in abductive logic programming.",
                "This enables us to realize automated negotiation on top of the existing answer set solvers.",
                "The present framework does not have a mechanism of selecting an optimal (counter-)proposal among different alternatives.",
                "To compare and evaluate proposals, an agent must have preference knowledge of candidate proposals.",
                "Further elaboration to maximize the utility of agents is left for future study. 7.",
                "REFERENCES [1] L. Amgoud, S. Parsons, and N. Maudet.",
                "Arguments, dialogue, and negotiation.",
                "In: Proc.",
                "ECAI-00, pp. 338-342, IOS Press, 2000. [2] A. Bracciali and P. Torroni.",
                "A new framework for knowledge revision of abductive agents through their interaction.",
                "In: Proc.",
                "CLIMA-IV, Computational Logic in Multi-Agent Systems, LNAI 3259, pp. 159-177, 2004. [3] W. Chen, M. Zhang, and N. Foo.",
                "Repeated negotiation of logic programs.",
                "In: Proc. 7th Workshop on Nonmonotonic Reasoning, Action and Change, 2006. [4] W. W. Chu, Q. Chen, and R.-C. Lee.",
                "Cooperative query answering via type abstraction hierarchy.",
                "In: Cooperating Knowledge Based Systems, S. M. Deen ed., pp. 271-290, Springer, 1990. [5] N. Foo, T. Meyer, Y. Zhang, and D. Zhang.",
                "Negotiating logic programs.",
                "In: Proc. 6th Workshop on Nonmonotonic Reasoning, Action and Change, 2005. [6] T. Gaasterland, P. Godfrey, and J. Minker.",
                "Relaxation as a platform for cooperative answering.",
                "Journal of Intelligence Information Systems 1(3/4):293-321, 1992. [7] M. Gelfond and V. Lifschitz.",
                "Classical negation in logic programs and disjunctive databases.",
                "New Generation Computing 9:365-385, 1991. [8] K. Inoue and C. Sakama.",
                "Abductive framework for nonmonotonic theory change.",
                "In: Proc.",
                "IJCAI-95, pp. 204-210, Morgan Kaufmann. [9] A. C. Kakas, R. A. Kowalski, and F. Toni, The role of abduction in logic programming.",
                "In: Handbook of Logic in AI and Logic Programming, D. M. Gabbay, et al. (eds), vol. 5, pp. 235-324, Oxford University Press, 1998. [10] A. C. Kakas and P. Moraitis.",
                "Adaptive agent negotiation via argumentation.",
                "In: Proc.",
                "AAMAS-06, pp. 384-391, ACM Press. [11] T. Meyer, N. Foo, R. Kwok, and D. Zhang.",
                "Logical foundation of negotiation: outcome, concession and adaptation.",
                "In: Proc.",
                "AAAI-04, pp. 293-298, MIT Press. [12] R. S. Michalski.",
                "A theory and methodology of inductive learning.",
                "In: Machine Learning: An Artificial Intelligence Approach, R. S. Michalski, et al. (eds), pp. 83-134, Morgan Kaufmann, 1983. [13] S. Parsons, C. Sierra and N. Jennings.",
                "Agents that reason and negotiate by arguing.",
                "Journal of Logic and Computation, 8(3):261-292, 1988. [14] F. Sadri, F. Toni, and P. Torroni, An abductive logic programming architecture for negotiating agents.",
                "In: Proc. 8th European Conf. on Logics in AI, LNAI 2424, pp. 419-431, Springer, 2002. [15] C. Sakama and K. Inoue.",
                "An abductive framework for computing knowledge base updates.",
                "Theory and Practice of Logic Programming 3(6):671-715, 2003.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1029"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Tal comportamiento generalmente se representa como \"meta-conocimiento específico\" de un agente o especificado como protocolos de negociación en problemas particulares."
            ],
            "translated_text": "",
            "candidates": [
                "meta-conocimiento específico",
                "meta-conocimiento específico"
            ],
            "error": []
        },
        "conditional proposal": {
            "translated_key": "propuesta condicional",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Negotiation by Abduction and Relaxation Chiaki Sakama Dept.",
                "Computer and Communication Sciences Wakayama University Sakaedani, Wakayama 640 8510, Japan sakama@sys.wakayama-u.ac.jp Katsumi Inoue National Institute of Informatics 2-1-2 Hitotsubashi, Chiyoda-ku Tokyo 101 8430, Japan ki@nii.ac.jp ABSTRACT This paper studies a logical framework for automated negotiation between two agents.",
                "We suppose an agent who has a knowledge base represented by a logic program.",
                "Then, we introduce methods of constructing counter-proposals in response to proposals made by an agent.",
                "To this end, we combine the techniques of extended abduction in artificial intelligence and relaxation in cooperative query answering for databases.",
                "These techniques are respectively used for producing conditional proposals and neighborhood proposals in the process of negotiation.",
                "We provide a negotiation protocol based on the exchange of these proposals and develop procedures for computing new proposals.",
                "Categories and Subject Descriptors F.4.1 [Mathematical Logic]: Logic and constraint programming;; I.2.11 [Distributed Artificial Intelligence]: Multiagent systems General Terms Theory 1.",
                "INTRODUCTION Automated negotiation has been received increasing attention in multi-agent systems, and a number of frameworks have been proposed in different contexts ([1, 2, 3, 5, 10, 11, 13, 14], for instance).",
                "Negotiation usually proceeds in a series of rounds and each agent makes a proposal at every round.",
                "An agent that received a proposal responds in two ways.",
                "One is a critique which is a remark as to whether or not (parts of) the proposal is accepted.",
                "The other is a counter-proposal which is an alternative proposal made in response to a previous proposal [13].",
                "To see these proposals in one-to-one negotiation, suppose the following negotiation dialogue between a buyer agent B and a seller agent S. (Bi (or Si) represents an utterance of B (or S) in the i-th round.)",
                "B1: I want to buy a personal computer of the brand b1, with the specification of CPU:1GHz, Memory:512MB, HDD: 80GB, and a DVD-RW driver.",
                "I want to get it at the price under 1200 USD.",
                "S1: We can provide a PC with the requested specification if you pay for it by cash.",
                "In this case, however, service points are not added for this special discount.",
                "B2: I cannot pay it by cash.",
                "S2: In a normal price, the requested PC costs 1300 USD.",
                "B3: I cannot accept the price.",
                "My budget is under 1200 USD.",
                "S3: We can provide another computer with the requested specification, except that it is made by the brand b2.",
                "The price is exactly 1200 USD.",
                "B4: I do not want a PC of the brand b2.",
                "Instead, I can downgrade a driver from DVD-RW to CD-RW in my initial proposal.",
                "S4: Ok, I accept your offer.",
                "In this dialogue, in response to the opening proposal B1, the counter-proposal S1 is returned.",
                "In the rest of the dialogue, B2, B3, S4 are critiques, while S2, S3, B4 are counterproposals.",
                "Critiques are produced by evaluating a proposal in a knowledge base of an agent.",
                "In contrast, making counter-proposals involves generating an alternative proposal which is more favorable to the responding agent than the original one.",
                "It is known that there are two ways of producing counterproposals: extending the initial proposal or amending part of the initial proposal.",
                "According to [13], the first type appears in the dialogue: A: I propose that you provide me with service X.",
                "B: I propose that I provide you with service X if you provide me with service Z.",
                "The second type is in the dialogue: A: I propose that I provide you with service Y if you provide me with service X.",
                "B: I propose that I provide you with service X if you provide me with service Z.",
                "A negotiation proceeds by iterating such give-andtake dialogues until it reaches an agreement/disagreement.",
                "In those dialogues, agents generate (counter-)proposals by reasoning on their own goals or objectives.",
                "The objective of the agent A in the above dialogues is to obtain service X.",
                "The agent B proposes conditions to provide the service.",
                "In the process of negotiation, however, it may happen that agents are obliged to weaken or change their initial goals to reach a negotiated compromise.",
                "In the dialogue of 1022 978-81-904262-7-5 (RPS) c 2007 IFAAMAS a buyer agent and a seller agent presented above, a buyer agent changes its initial goal by downgrading a driver from DVD-RW to CD-RW.",
                "Such behavior is usually represented as specific meta-knowledge of an agent or specified as negotiation protocols in particular problems.",
                "Currently, there is no computational logic for automated negotiation which has general inference rules for producing (counter-)proposals.",
                "The purpose of this paper is to mechanize a process of building (counter-)proposals in one-to-one negotiation dialogues.",
                "We suppose an agent who has a knowledge base represented by a logic program.",
                "We then introduce methods for generating three different types of proposals.",
                "First, we use the technique of extended abduction in artificial intelligence [8, 15] to construct a <br>conditional proposal</br> as an extension of the original one.",
                "Second, we use the technique of relaxation in cooperative query answering for databases [4, 6] to construct a neighborhood proposal as an amendment of the original one.",
                "Third, combining extended abduction and relaxation, conditional neighborhood proposals are constructed as amended extensions of the original proposal.",
                "We develop a negotiation protocol between two agents based on the exchange of these counter-proposals and critiques.",
                "We also provide procedures for computing proposals in logic programming.",
                "This paper is organized as follows.",
                "Section 2 introduces a logical framework used in this paper.",
                "Section 3 presents methods for constructing proposals, and provides a negotiation protocol.",
                "Section 4 provides methods for computing proposals in logic programming.",
                "Section 5 discusses related works, and Section 6 concludes the paper. 2.",
                "PRELIMINARIES Logic programs considered in this paper are extended disjunctive programs (EDP) [7].",
                "An EDP (or simply a program) is a set of rules of the form: L1 ; · · · ; Ll ← Ll+1 , . . . , Lm, not Lm+1 , . . . , not Ln (n ≥ m ≥ l ≥ 0) where each Li is a positive/negative literal, i.e., A or ¬A for an atom A, and not is negation as failure (NAF). not L is called an NAF-literal.",
                "The symbol ; represents disjunction.",
                "The left-hand side of the rule is the head, and the right-hand side is the body.",
                "For each rule r of the above form, head(r), body+ (r) and body− (r) denote the sets of literals {L1, . . . , Ll}, {Ll+1, . . . , Lm}, and {Lm+1, . . . , Ln}, respectively.",
                "Also, not body− (r) denotes the set of NAF-literals {not Lm+1, . . . , not Ln}.",
                "A disjunction of literals and a conjunction of (NAF-)literals in a rule are identified with its corresponding sets of literals.",
                "A rule r is often written as head(r) ← body+ (r), not body− (r) or head(r) ← body(r) where body(r) = body+ (r)∪not body− (r).",
                "A rule r is disjunctive if head(r) contains more than one literal.",
                "A rule r is an integrity constraint if head(r) = ∅; and r is a fact if body(r) = ∅.",
                "A program is NAF-free if no rule contains NAF-literals.",
                "Two rules/literals are identified with respect to variable renaming.",
                "A substitution is a mapping from variables to terms θ = {x1/t1, . . . , xn/tn}, where x1, . . . , xn are distinct variables and each ti is a term distinct from xi.",
                "Given a conjunction G of (NAF-)literals, Gθ denotes the conjunction obtained by applying θ to G. A program, rule, or literal is ground if it contains no variable.",
                "A program P with variables is a shorthand of its ground instantiation Ground(P), the set of ground rules obtained from P by substituting variables in P by elements of its Herbrand universe in every possible way.",
                "The semantics of an EDP is defined by the answer set semantics [7].",
                "Let Lit be the set of all ground literals in the language of a program.",
                "Suppose a program P and a set of literals S(⊆ Lit).",
                "Then, the reduct P S is the program which contains the ground rule head(r) ← body+ (r) iff there is a rule r in Ground(P) such that body− (r)∩S = ∅.",
                "Given an NAF-free EDP P, Cn(P) denotes the smallest set of ground literals which is (i) closed under P, i.e., for every ground rule r in Ground(P), body(r) ⊆ Cn(P) implies head(r) ∩ Cn(P) = ∅; and (ii) logically closed, i.e., it is either consistent or equal to Lit.",
                "Given an EDP P and a set S of literals, S is an answer set of P if S = Cn(P S ).",
                "A program has none, one, or multiple answer sets in general.",
                "An answer set is consistent if it is not Lit.",
                "A program P is consistent if it has a consistent answer set; otherwise, P is inconsistent.",
                "Abductive logic programming [9] introduces a mechanism of hypothetical reasoning to logic programming.",
                "An abductive framework used in this paper is the extended abduction introduced by Inoue and Sakama [8, 15].",
                "An abductive program is a pair P, H where P is an EDP and H is a set of literals called abducibles.",
                "When a literal L ∈ H contains variables, any instance of L is also an abducible.",
                "An abductive program P, H is consistent if P is consistent.",
                "Throughout the paper, abductive programs are assumed to be consistent unless stated otherwise.",
                "Let G = L1, . . . , Lm, not Lm+1, . . . , not Ln be a conjunction, where all variables in G are existentially quantified at the front and range-restricted, i.e., every variable in Lm+1, . . . , Ln appears in L1, . . . , Lm.",
                "A set S of ground literals satisfies the conjunction G if { L1θ, . . . , Lmθ } ⊆ S and { Lm+1θ, . . . , Lnθ }∩ S = ∅ for some ground instance Gθ with a substitution θ.",
                "Let P, H be an abductive program and G a conjunction as above.",
                "A pair (E, F) is an explanation of an observation G in P, H if1 1. (P \\ F) ∪ E has an answer set which satisfies G, 2. (P \\ F) ∪ E is consistent, 3.",
                "E and F are sets of ground literals such that E ⊆ H\\P and F ⊆ H ∩ P. When (P \\ F) ∪ E has an answer set S satisfying the above three conditions, S is called a belief set of an abductive program P, H satisfying G (with respect to (E, F)).",
                "Note that if P has a consistent answer set S satisfying G, S is also a belief set of P, H satisfying G with respect to (E, F) = (∅, ∅).",
                "Extended abduction introduces/removes hypotheses to/from a program to explain an observation.",
                "Note that normal abduction (as in [9]) considers only introducing hypotheses to explain an observation.",
                "An explanation (E, F) of an observation G is called minimal if for any explanation (E , F ) of G, E ⊆ E and F ⊆ F imply E = E and F = F. Example 2.1.",
                "Consider the abductive program P, H : P : flies(x) ← bird(x), not ab(x) , ab(x) ← broken-wing(x) , bird(tweety) ← , bird(opus) ← , broken-wing(tweety) ← .",
                "H : broken-wing(x) .",
                "The observation G = flies(tweety) has the minimal explanation (E, F) = (∅, {broken-wing(tweety)}). 1 This defines credulous explanations [15].",
                "Skeptical explanations are used in [8].",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1023 3.",
                "NEGOTIATION 3.1 Conditional Proposals by Abduction We suppose an agent who has a knowledge base represented by an abductive program P, H .",
                "A program P consists of two types of knowledge, belief B and desire D, where B represents objective knowledge of an agent, while D represents subjective knowledge in general.",
                "We define P = B ∪ D, but do not distinguish B and D if such distinction is not important in the context.",
                "In contrast, abducibles H are used for representing permissible conditions to make a compromise in the process of negotiation.",
                "Definition 3.1.",
                "A proposal G is a conjunction of literals and NAF-literals: L1, . . . , Lm, not Lm+1, . . . , not Ln where every variable in G is existentially quantified at the front and range-restricted.",
                "In particular, G is called a critique if G = accept or G = reject where accept and reject are the reserved propositions.",
                "A counter-proposal is a proposal made in response to a proposal.",
                "Definition 3.2.",
                "A proposal G is accepted in an abductive program P, H if P has an answer set satisfying G. When a proposal is not accepted, abduction is used for seeking conditions to make it acceptable.",
                "Definition 3.3.",
                "Let P, H be an abductive program and G a proposal.",
                "If (E, F) is a minimal explanation of Gθ for some substitution θ in P, H , the conjunction G : Gθ, E, not F is called a <br>conditional proposal</br> (for G), where E, not F represents the conjunction: A1, . . . , Ak, not Ak+1, . . . , not Al for E = {A1, . . . , Ak} and F = { Ak+1, . . . , Al }.",
                "Proposition 3.1.",
                "Let P, H be an abductive program and G a proposal.",
                "If G is a <br>conditional proposal</br>, there is a belief set S of P, H satisfying G .",
                "Proof.",
                "When G = Gθ, E, not F, (P \\ F) ∪ E has a consistent answer set S satisfying Gθ and E ∩ F = ∅.",
                "In this case, S satisfies Gθ, E, not F. A <br>conditional proposal</br> G provides a minimal requirement for accepting the proposal G. If Gθ has multiple minimal explanations, several conditional proposals exist accordingly.",
                "When (E, F) = (∅, ∅), a <br>conditional proposal</br> is used as a new proposal made in response to the proposal G. Example 3.1.",
                "An agent seeks a position of a research assistant at the computer department of a university with the condition that the salary is at least 50,000 USD per year.",
                "The agent makes his/her request as the proposal:2 G = assist(compt dept), salary(x), x ≥ 50, 000.",
                "The university has the abductive program P, H : P : salary(40, 000) ← assist(compt dept), not has PhD, salary(60, 000) ← assist(compt dept), has PhD, salary(50, 000) ← assist(math dept), salary(55, 000) ← system admin(compt dept), 2 For notational convenience, we often include mathematical (in)equations in proposals/programs.",
                "They are written by literals, for instance, x ≥ y by geq(x, y) with a suitable definition of the predicate geq. employee(x) ← assist(x), employee(x) ← system admin(x), assist(compt dept); assist(math dept) ; system admin(compt dept) ←, H : has PhD, where available positions are represented by disjunction.",
                "According to P, the base salary of a research assistant at the computer department is 40,000 USD, but if he/she has PhD, it is 60,000 USD.",
                "In this case, (E, F) = ({has PhD}, ∅) becomes the minimal explanation of Gθ = assist(compt dept), salary(60, 000) with θ = { x/60, 000 }.",
                "Then, the <br>conditional proposal</br> made by the university becomes assist(compt dept), salary(60, 000), has PhD . 3.2 Neighborhood Proposals by Relaxation When a proposal is unacceptable, an agent tries to construct a new counter-proposal by weakening constraints in the initial proposal.",
                "We use techniques of relaxation for this purpose.",
                "Relaxation is used as a technique of cooperative query answering in databases [4, 6].",
                "When an original query fails in a database, relaxation expands the scope of the query by relaxing the constraints in the query.",
                "This allows the database to return neighborhood answers which are related to the original query.",
                "We use the technique for producing proposals in the process of negotiation.",
                "Definition 3.4.",
                "Let P, H be an abductive program and G a proposal.",
                "Then, G is relaxed to G in the following three ways: Anti-instantiation: Construct G such that G θ = G for some substitution θ.",
                "Dropping conditions: Construct G such that G ⊂ G. Goal replacement: If G is a conjunction G1, G2, where G1 and G2 are conjunctions, and there is a rule L ← G1 in P such that G1θ = G1 for some substitution θ, then build G as Lθ, G2.",
                "Here, Lθ is called a replaced literal.",
                "In each case, every variable in G is existentially quantified at the front and range-restricted.",
                "Anti-instantiation replaces constants (or terms) with fresh variables.",
                "Dropping conditions eliminates some conditions in a proposal.",
                "Goal replacement replaces the condition G1 in G with a literal Lθ in the presence of a rule L ← G1 in P under the condition G1θ = G1.",
                "All these operations generalize proposals in different ways.",
                "Each G obtained by these operations is called a relaxation of G. It is worth noting that these operations are also used in the context of inductive generalization [12].",
                "The relaxed proposal can produce new offers which are neighbor to the original proposal.",
                "Definition 3.5.",
                "Let P, H be an abductive program and G a proposal. 1.",
                "Let G be a proposal obtained by anti-instantiation.",
                "If P has an answer set S which satisfies G θ for some substitution θ and G θ = G, G θ is called a neighborhood proposal by anti-instantiation. 2.",
                "Let G be a proposal obtained by dropping conditions.",
                "If P has an answer set S which satisfies G θ for some substitution θ, G θ is called a neighborhood proposal by dropping conditions. 1024 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.",
                "Let G be a proposal obtained by goal replacement.",
                "For a replaced literal L ∈ G and a rule H ← B in P such that L = Hσ and (G \\ {L}) ∪ Bσ = G for some substitution σ, put G = (G \\ {L}) ∪ Bσ.",
                "If P has an answer set S which satisfies G θ for some substitution θ, G θ is called a neighborhood proposal by goal replacement.",
                "Example 3.2. (cont.",
                "Example 3.1) Given the proposal G = assist(compt dept), salary(x), x ≥ 50, 000, • G1 = assist(w), salary(x), x ≥ 50, 000 is produced by substituting compt dept with a variable w. As G1θ1 = assist(math dept), salary(50, 000) with θ1 = { w/math dept } is satisfied by an answer set of P, G1θ1 becomes a neighborhood proposal by anti-instantiation. • G2 = assist(compt dept), salary(x) is produced by dropping the salary condition x ≥ 50, 000.",
                "As G2θ2 = assist(compt dept), salary(40, 000) with θ2 = { x/40, 000 } is satisfied by an answer set of P, G2θ2 becomes a neighborhood proposal by dropping conditions. • G3 = employee(compt dept), salary(x), x ≥ 50, 000 is produced by replacing assist(compt dept) with employee(compt dept) using the rule employee(x) ← assist(x) in P. By G3 and the rule employee(x) ← system admin(x) in P, G3 = sys admin(compt dept), salary(x), x ≥ 50, 000 is produced.",
                "As G3 θ3 = sys admin(compt dept), salary(55, 000) with θ3 = { x/55, 000 } is satisfied by an answer set of P, G3 θ3 becomes a neighborhood proposal by goal replacement.",
                "Finally, extended abduction and relaxation are combined to produce conditional neighborhood proposals.",
                "Definition 3.6.",
                "Let P, H be an abductive program and G a proposal. 1.",
                "Let G be a proposal obtained by either anti-instantiation or dropping conditions.",
                "If (E, F) is a minimal explanation of G θ(= G) for some substitution θ, the conjunction G θ, E, not F is called a conditional neighborhood proposal by anti-instantiation/dropping conditions. 2.",
                "Let G be a proposal obtained by goal replacement.",
                "Suppose G as in Definition 3.5(3).",
                "If (E, F) is a minimal explanation of G θ for some substitution θ, the conjunction G θ, E, not F is called a conditional neighborhood proposal by goal replacement.",
                "A conditional neighborhood proposal reduces to a neighborhood proposal when (E, F) = (∅, ∅). 3.3 Negotiation Protocol A negotiation protocol defines how to exchange proposals in the process of negotiation.",
                "This section presents a negotiation protocol in our framework.",
                "We suppose one-to-one negotiation between two agents who have a common ontology and the same language for successful communication.",
                "Definition 3.7.",
                "A proposal L1, ..., Lm, not Lm+1, ..., not Ln violates an integrity constraint ← body+ (r), not body− (r) if for any substitution θ, there is a substitution σ such that body+ (r)σ ⊆ { L1θ, . . . , Lmθ }, body− (r)σ∩{ L1θ, . . . , Lmθ } = ∅, and body− (r)σ ⊆ { Lm+1θ, . . . , Lnθ }.",
                "Integrity constraints are conditions which an agent should satisfy, so that they are used to explain why an agent does not accept a proposal.",
                "A negotiation proceeds in a series of rounds.",
                "Each i-th round (i ≥ 1) consists of a proposal Gi 1 made by one agent Ag1 and another proposal Gi 2 made by the other agent Ag2.",
                "Definition 3.8.",
                "Let P1, H1 be an abductive program of an agent Ag1 and Gi 2 a proposal made by Ag2 at the i-th round.",
                "A critique set of Ag1 (at the i-th round) is a set CSi 1(P1, Gj 2) = CSi−1 1 (P1, Gj−1 2 ) ∪ { r | r is an integrity constraint in P1 and Gj 2 violates r } where j = i − 1 or i, and CS0 1 (P1, G0 2) = CS1 1 (P1, G0 2) = ∅.",
                "A critique set of an agent Ag1 accumulates integrity constraints which are violated by proposals made by another agent Ag2.",
                "CSi 2(P2, Gj 1) is defined in the same manner.",
                "Definition 3.9.",
                "Let Pk, Hk be an abductive program of an agent Agk and Gj a proposal, which is not a critique, made by any agent at the j(≤ i)-th round.",
                "A negotiation set of Agk (at the i-th round) is a triple NSi k = (Si c, Si n, Si cn), where Si c is the set of conditional proposals, Si n is the set of neighborhood proposals, and Si cn is the set of conditional neighborhood proposals, produced by Gj and Pk, Hk .",
                "A negotiation set represents the space of possible proposals made by an agent.",
                "Si x (x ∈ {c, n, cn}) accumulates proposals produced by Gj (1 ≤ j ≤ i) according to Definitions 3.3, 3.5, and 3.6.",
                "Note that an agent can construct counter-proposals by modifying its own previous proposals or another agents proposals.",
                "An agent Agk accumulates proposals that are made by Agk but are rejected by another agent, in the failed proposal set FP i k (at the i-th round), where FP 0 k = ∅.",
                "Suppose two agents Ag1 and Ag2 who have abductive programs P1, H1 and P2, H2 , respectively.",
                "Given a proposal G1 1 which is satisfied by an answer set of P1, a negotiation starts.",
                "In response to the proposal Gi 1 made by Ag1 at the i-th round, Ag2 behaves as follows. 1.",
                "If Gi 1 = accept, an agreement is reached and negotiation ends in success. 2.",
                "Else if Gi 1 = reject, put FP i 2 = FPi−1 2 ∪{Gi−1 2 } where {G0 2} = ∅.",
                "Proceed to the step 4(b). 3.",
                "Else if P2 has an answer set satisfying Gi 1, Ag2 returns Gi 2 = accept to Ag1.",
                "Negotiation ends in success. 4.",
                "Otherwise, Ag2 behaves as follows.",
                "Put FP i 2 = FPi−1 2 . (a) If Gi 1 violates an integrity constraint in P2, return the critique Gi 2 = reject to Ag1, together with the critique set CSi 2(P2, Gi 1). (b) Otherwise, construct NSi 2 as follows. (i) Produce Si c. Let μ(Si c) = { p | p ∈ Si c \\ FPi 2 and p satisfies the constraints in CSi 1(P1, Gi−1 2 )}.",
                "If μ(Si c) = ∅, select one from μ(Si c) and propose it as Gi 2 to Ag1; otherwise, go to (ii). (ii) Produce Si n. If μ(Si n) = ∅, select one from μ(Si n) and propose it as Gi 2 to Ag1; otherwise, go to (iii). (iii) Produce Si cn.",
                "If μ(Si cn) = ∅, select one from μ(Si cn) and propose it as Gi 2 to Ag1; otherwise, negotiation ends in failure.",
                "This means that Ag2 can make no counter-proposal or every counterproposal made by Ag2 is rejected by Ag1.",
                "In the step 4(a), Ag2 rejects the proposal Gi 1 and returns the reason of rejection as a critique set.",
                "This helps for Ag1 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1025 in preparing a next counter-proposal.",
                "In the step 4(b), Ag2 constructs a new proposal.",
                "In its construction, Ag2 should take care of the critique set CSi 1(P1, Gi−1 2 ), which represents integrity constraints, if any, accumulated in previous rounds, that Ag1 must satisfy.",
                "Also, FP i 2 is used for removing proposals which have been rejected.",
                "Construction of Si x (x ∈ {c, n, cn}) in NSi 2 is incrementally done by adding new counter-proposals produced by Gi 1 or Gi−1 2 to Si−1 x .",
                "For instance, Si n in NSi 2 is computed as Si n = Si−1 n ∪{ p | p is a neighborhood proposal made by Gi 1 } ∪ { p | p is a neighborhood proposal made by Gi−1 2 }, where S0 n = ∅.",
                "That is, Si n is constructed from Si−1 n by adding new proposals which are obtained by modifying the proposal Gi 1 made by Ag1 at the i-th round or modifying the proposal Gi−1 2 made by Ag2 at the (i − 1)-th round.",
                "Si c and Si cn are obtained as well.",
                "In the above protocol, an agent produces Si c at first, secondly Si n, and finally Si cn.",
                "This strategy seeks conditions which satisfy the given proposal, prior to neighborhood proposals which change the original one.",
                "Another strategy, which prefers neighborhood proposals to conditional ones, is also considered.",
                "Conditional neighborhood proposals are to be considered in the last place, since they differ from the original one to the maximal extent.",
                "The above protocol produces the candidate proposals in Si x for each x ∈ {c, n, cn} at once.",
                "We can consider a variant of the protocol in which each proposal in Si x is constructed one by one (see Example 3.3).",
                "The above protocol is repeatedly applied to each one of the two negotiating agents until a negotiation ends in success/failure.",
                "Formally, the above negotiation protocol has the following properties.",
                "Theorem 3.2.",
                "Let Ag1 and Ag2 be two agents having abductive programs P1, H1 and P2, H2 , respectively. 1.",
                "If P1, H1 and P2, H2 are function-free (i.e., both Pi and Hi contain no function symbol), any negotiation will terminate. 2.",
                "If a negotiation terminates with agreement on a proposal G, both P1, H1 and P2, H2 have belief sets satisfying G. Proof. 1.",
                "When an abductive program is function-free, abducibles and negotiation sets are both finite.",
                "Moreover, if a proposal is once rejected, it is not proposed again by the function μ.",
                "Thus, negotiation will terminate in finite steps. 2.",
                "When a proposal G is made by Ag1, P1, H1 has a belief set satisfying G. If the agent Ag2 accepts the proposal G, it is satisfied by an answer set of P2 which is also a belief set of P2, H2 .",
                "Example 3.3.",
                "Suppose a buying-selling situation in the introduction.",
                "A seller agent has the abductive program Ps, Hs in which Ps consists of belief Bs and desire Ds: Bs : pc(b1, 1G, 512M, 80G) ; pc(b2, 1G, 512M, 80G) ←,(1) dvd-rw ; cd-rw ←, (2) Ds : normal price(1300) ← pc(b1, 1G, 512M, 80G), dvd-rw, (3) normal price(1200) ← pc(b1, 1G, 512M, 80G), cd-rw, (4) normal price(1200) ← pc(b2, 1G, 512M, 80G), dvd-rw, (5) price(x) ← normal price(x), add point, (6) price(x ∗ 0.9) ← normal price(x), pay cash, not add point,(7) add point ←, (8) Hs : add point, pay cash.",
                "Here, (1) and (2) represent selection of products.",
                "The atom pc(b1, 1G, 512M, 80G) represents that the seller agent has a PC of the brand b1 such that CPU is 1GHz, memory is 512MB, and HDD is 80GB.",
                "Prices of products are represented as desire of the seller.",
                "The rules (3) - (5) are normal prices of products.",
                "A normal price is a selling price on the condition that service points are added (6).",
                "On the other hand, a discount price is applied if the paying method is cash and no service point is added (7).",
                "The fact (8) represents the addition of service points.",
                "This service would be withdrawn in case of discount prices, so add point is specified as an abducible.",
                "A buyer agent has the abductive program Pb, Hb in which Pb consists of belief Bb and desire Db: Bb : drive ← dvd-rw, (9) drive ← cd-rw, (10) price(x) ←, (11) Db : pc(b1, 1G, 512M, 80G) ←, (12) dvd-rw ←, (13) cd-rw ← not dvd-rw, (14) ← pay cash, (15) ← price(x), x > 1200, (16) Hb : dvd-rw.",
                "Rules (12) - (16) are the buyers desire.",
                "Among them, (15) and (16) impose constraints for buying a PC.",
                "A DVD-RW is specified as an abducible which is subject to concession. (1st round) First, the following proposal is given by the buyer agent: G1 b : pc(b1, 1G, 512M, 80G), dvd-rw, price(x), x ≤ 1200.",
                "As Ps has no answer set which satisfies G1 b , the seller agent cannot accept the proposal.",
                "The seller takes an action of making a counter-proposal and performs abduction.",
                "As a result, the seller finds the minimal explanation (E, F) = ({ pay cash }, { add point }) which explains G1 b θ1 with θ1 = { x/1170 }.",
                "The seller constructs the <br>conditional proposal</br>: G1 s : pc(b1, 1G, 512M, 80G), dvd-rw, price(1170), pay cash, not add point and offers it to the buyer. (2nd round) The buyer does not accept G1 s because he/she cannot pay it by cash (15).",
                "The buyer then returns the critique G2 b = reject to the seller, together with the critique set CS2 b (Pb, G1 s) = {(15)}.",
                "In response to this, the seller tries to make another proposal which satisfies the constraint in this critique set.",
                "As G1 s is stored in FP 2 s and no other <br>conditional proposal</br> satisfying the buyers requirement exists, the seller produces neighborhood proposals.",
                "He/she relaxes G1 b by dropping x ≤ 1200 in the condition, and produces pc(b1, 1G, 512M, 80G), dvd-rw, price(x).",
                "As Ps has an answer set which satisfies G2 s : pc(b1, 1G, 512M, 80G), dvd-rw, price(1300), 1026 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) the seller offers G2 s as a new counter-proposal. (3rd round) The buyer does not accept G2 s because he/she cannot pay more than 1200USD (16).",
                "The buyer again returns the critique G3 b = reject to the seller, together with the critique set CS3 b (Pb, G2 s) = CS2 b (Pb, G1 s) ∪ {(16)}.",
                "The seller then considers another proposal by replacing b1 with a variable w, G1 b now becomes pc(w, 1G, 512M, 80G), dvd-rw, price(x), x ≤ 1200.",
                "As Ps has an answer set which satisfies G3 s : pc(b2, 1G, 512M, 80G), dvd-rw, price(1200), the seller offers G3 s as a new counter-proposal. (4th round) The buyer does not accept G3 s because a PC of the brand b2 is out of his/her interest and Pb has no answer set satisfying G3 s. Then, the buyer makes a concession by changing his/her original goal.",
                "The buyer relaxes G1 b by goal replacement using the rule (9) in Pb, and produces pc(b1, 1G, 512M, 80G), drive, price(x), x ≤ 1200.",
                "Using (10), the following proposal is produced: pc(b1, 1G, 512M, 80G), cd-rw, price(x), x ≤ 1200.",
                "As Pb \\ { dvd-rw } has a consistent answer set satisfying the above proposal, the buyer proposes the conditional neighborhood proposal G4 b : pc(b1, 1G, 512M, 80G), cd-rw, not dvd-rw, price(x), x ≤ 1200 to the seller agent.",
                "Since Ps also has an answer set satisfying G4 b , the seller accepts it and sends the message G4 s = accept to the buyer.",
                "Thus, the negotiation ends in success. 4.",
                "COMPUTATION In this section, we provide methods of computing proposals in terms of answer sets of programs.",
                "We first introduce some definitions from [15].",
                "Definition 4.1.",
                "Given an abductive program P, H , the set UR of update rules is defined as: UR = { L ← not L, L ← not L | L ∈ H } ∪ { +L ← L | L ∈ H \\ P } ∪ { −L ← not L | L ∈ H ∩ P } , where L, +L, and −L are new atoms uniquely associated with every L ∈ H. The atoms +L and −L are called update atoms.",
                "By the definition, the atom L becomes true iff L is not true.",
                "The pair of rules L ← not L and L ← not L specify the situation that an abducible L is true or not.",
                "When p(x) ∈ H and p(a) ∈ P but p(t) ∈ P for t = a, the rule +L ← L precisely becomes +p(t) ← p(t) for any t = a.",
                "In this case, the rule is shortly written as +p(x) ← p(x), x = a.",
                "Generally, the rule becomes +p(x) ← p(x), x = t1, . . . , x = tn for n such instances.",
                "The rule +L ← L derives the atom +L if an abducible L which is not in P is to be true.",
                "In contrast, the rule −L ← not L derives the atom −L if an abducible L which is in P is not to be true.",
                "Thus, update atoms represent the change of truth values of abducibles in a program.",
                "That is, +L means the introduction of L, while −L means the deletion of L. When an abducible L contains variables, the associated update atom +L or −L is supposed to have exactly the same variables.",
                "In this case, an update atom is semantically identified with its ground instances.",
                "The set of all update atoms associated with the abducibles in H is denoted by UH, and UH = UH+ ∪ UH− where UH+ (resp.",
                "UH− ) is the set of update atoms of the form +L (resp. −L).",
                "Definition 4.2.",
                "Given an abductive program P, H , its update program UP is defined as the program UP = (P \\ H) ∪ UR .",
                "An answer set S of UP is called U-minimal if there is no answer set T of UP such that T ∩ UH ⊂ S ∩ UH.",
                "By the definition, U-minimal answer sets exist whenever UP has answer sets.",
                "Update programs are used for computing (minimal) explanations of an observation.",
                "Given an observation G as a conjunction of literals and NAF-literals possibly containing variables, we introduce a new ground literal O together with the rule O ← G. In this case, O has an explanation (E, F) iff G has the same explanation.",
                "With this replacement, an observation is assumed to be a ground literal without loss of generality.",
                "In what follows, E+ = { +L | L ∈ E } and F − = { −L | L ∈ F } for E ⊆ H and F ⊆ H. Proposition 4.1. ([15]) Let P, H be an abductive program, UP its update program, and G a ground literal representing an observation.",
                "Then, a pair (E, F) is an explanation of G iff UP ∪ { ← not G } has a consistent answer set S such that E+ = S ∩ UH+ and F− = S ∩ UH− .",
                "In particular, (E, F) is a minimal explanation iff S is a U-minimal answer set.",
                "Example 4.1.",
                "To explain the observation G = flies(t) in the program P of Example 2.1, first construct the update program UP of P:3 UP : flies(x) ← bird(x), not ab(x), ab(x) ← broken-wing(x) , bird(t) ← , bird(o) ← , broken-wing(x) ← not broken-wing(x), broken-wing(x) ← not broken-wing(x), +broken-wing(x) ← broken-wing(x), x = t , −broken-wing(t) ← not broken-wing(t) .",
                "Next, consider the program UP ∪ { ← not flies(t) }.",
                "It has the single U-minimal answer set: S = { bird(t), bird(o), flies(t), flies(o), broken-wing(t), broken-wing(o), −broken-wing(t) }.",
                "The unique minimal explanation (E, F) = (∅, {broken-wing(t)}) of G is expressed by the update atom −broken-wing(t) in S ∩ UH− .",
                "Proposition 4.2.",
                "Let P, H be an abductive program and G a ground literal representing an observation.",
                "If P ∪ { ← not G } has a consistent answer set S, G has the minimal explanation (E, F) = (∅, ∅) and S satisfies G. Now we provide methods for computing (counter-)proposals.",
                "First, conditional proposals are computed as follows. input : an abductive program P, H , a proposal G; output : a set Sc of proposals.",
                "If G is a ground literal, compute its minimal explanation (E, F) in P, H using the update program.",
                "Put G, E, not F in Sc.",
                "Else if G is a conjunction possibly containing variables, consider the abductive program 3 t represents tweety and o represents opus.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1027 P ∪{ O ← G }, H with a ground literal O. Compute a minimal explanation of O in P ∪ { O ← G }, H using its update program.",
                "If O has a minimal explanation (E, F) with a substitution θ for variables in G, put Gθ, E, not F in Sc.",
                "Next, neighborhood proposals are computed as follows. input : an abductive program P, H , a proposal G; output : a set Sn of proposals. % neighborhood proposals by anti-instantiation; Construct G by anti-instantiation.",
                "For a ground literal O, if P ∪ { O ← G } ∪ { ← not O } has a consistent answer set satisfying G θ with a substitution θ and G θ = G, put G θ in Sn. % neighborhood proposals by dropping conditions; Construct G by dropping conditions.",
                "If G is a ground literal and the program P ∪ { ← not G } has a consistent answer set, put G in Sn.",
                "Else if G is a conjunction possibly containing variables, do the following.",
                "For a ground literal O, if P ∪{ O ← G }∪{ ← not O } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn. % neighborhood proposals by goal replacement; Construct G by goal replacement.",
                "If G is a ground literal and there is a rule H ← B in P such that G = Hσ and Bσ = G for some substitution σ, put G = Bσ.",
                "If P ∪ { ← not G } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn.",
                "Else if G is a conjunction possibly containing variables, do the following.",
                "For a replaced literal L ∈ G , if there is a rule H ← B in P such that L = Hσ and (G \\ {L}) ∪ Bσ = G for some substitution σ, put G = (G \\ {L}) ∪ Bσ.",
                "For a ground literal O, if P ∪ { O ← G } ∪ { ← not O } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn.",
                "Theorem 4.3.",
                "The set Sc (resp.",
                "Sn) computed above coincides with the set of conditional proposals (resp. neighborhood proposals).",
                "Proof.",
                "The result for Sc follows from Definition 3.3 and Proposition 4.1.",
                "The result for Sn follows from Definition 3.5 and Proposition 4.2.",
                "Conditional neighborhood proposals are computed by combining the above two procedures.",
                "Those proposals are computed at each round.",
                "Note that the procedure for computing Sn contains some nondeterministic choices.",
                "For instance, there are generally several candidates of literals to relax in a proposal.",
                "Also, there might be several rules in a program for the usage of goal replacement.",
                "In practice, an agent can prespecify literals in a proposal for possible relaxation or rules in a program for the usage of goal replacement. 5.",
                "RELATED WORK As there are a number of literature on automated negotiation, this section focuses on comparison with negotiation frameworks based on logic and argumentation.",
                "Sadri et al. [14] use abductive logic programming as a representation language of negotiating agents.",
                "Agents negotiate using common dialogue primitives, called dialogue moves.",
                "Each agent has an abductive logic program in which a sequence of dialogues are specified by a program, a dialogue protocol is specified as constraints, and dialogue moves are specified as abducibles.",
                "The behavior of agents is regulated by an observe-think-act cycle.",
                "Once a dialogue move is uttered by an agent, another agent that observed the utterance thinks and acts using a proof procedure.",
                "Their approach and ours both employ abductive logic programming as a platform of agent reasoning, but the use of it is quite different.",
                "First, they use abducibles to specify dialogue primitives of the form tell(utterer, receiver, subject, identifier, time), while we use abducibles to specify arbitrary permissible hypotheses to construct conditional proposals.",
                "Second, a program pre-specifies a plan to carry out in order to achieve a goal, together with available/missing resources in the context of resource-exchanging problems.",
                "This is in contrast with our method in which possible counter-proposals are newly constructed in response to a proposal made by an agent.",
                "Third, they specify a negotiation policy inside a program (as integrity constraints), while we give a protocol independent of individual agents.",
                "They provide an operational model that completely specifies the behavior of agents in terms of agent cycle.",
                "We do not provide such a complete specification of the behavior of agents.",
                "Our primary interest is to mechanize construction of proposals.",
                "Bracciali and Torroni [2] formulate abductive agents that have knowledge in abductive logic programs.",
                "To explain an observation, two agents communicate by exchanging integrity constraints.",
                "In the process of communication, an agent can revise its own integrity constraints according to the information provided by the other agent.",
                "A set IC of integrity constraints relaxes a set IC (or IC tightens IC ) if any observation that can be proved with respect to IC can also be proved with respect to IC .",
                "For instance, IC : ← a, b, c relaxes IC : ← a, b.",
                "Thus, they use relaxation for weakening the constraints in an abductive logic program.",
                "In contrast, we use relaxation for weakening proposals and three different relaxation methods, anti-instantiation, dropping conditions, and goal replacement, are considered.",
                "Their goal is to explain an observation by revising integrity constraints of an agent through communication, while we use integrity constraints for communication to explain critiques and help other agents in making counter-proposals.",
                "Meyer et al. [11] introduce a logical framework for negotiating agents.",
                "They introduce two different modes of negotiation: concession and adaptation.",
                "They provide rational postulates to characterize negotiated outcomes between two agents, and describe methods for constructing outcomes.",
                "They provide logical conditions for negotiated outcomes to satisfy, but they do not describe a process of negotiation nor negotiation protocols.",
                "Moreover, they represent agents by classical propositional theories, which is different from our abductive logic programming framework.",
                "Foo et al. [5] model one-to-one negotiation as a one-time encounter between two extended logic programs.",
                "An agent offers an answer set of its program, and their mutual deal is regarded as a trade on their answer sets.",
                "Starting from the initial agreement set S∩T for an answer set S of an agent and an answer set T of another agent, each agent extends this set to reflect its own demand while keeping consistency with demand of the other agent.",
                "Their algorithm returns new programs having answer sets which are consistent with each other and keep the agreement set.",
                "The work is extended to repeated encounters in [3].",
                "In their framework, two agents exchange answer sets to produce a common belief set, which is different from our framework of exchanging proposals.",
                "There are a number of proposals for negotiation based 1028 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) on argumentation.",
                "An advantage of argumentation-based negotiation is that it constructs a proposal with arguments supporting the proposal [1].",
                "The existence of arguments is useful to convince other agents of reasons why an agent offers (counter-)proposals or returns critiques.",
                "Parsons et al. [13] develop a logic of argumentation-based negotiation among BDI agents.",
                "In one-to-one negotiation, an agent A generates a proposal together with its arguments, and passes it to another agent B.",
                "The proposal is evaluated by B which attempts to build arguments against it.",
                "If it conflicts with Bs interest, B informs A of its objection by sending back its attacking argument.",
                "In response to this, A tries to find an alternative way of achieving its original objective, or a way of persuading B to drop its objection.",
                "If either type of argument can be found, A will submit it to B.",
                "If B finds no reason to reject the new proposal, it will be accepted and the negotiation ends in success.",
                "Otherwise, the process is iterated.",
                "In this negotiation processes, the agent A never changes its original objective, so that negotiation ends in failure if A fails to find an alternative way of achieving the original objective.",
                "In our framework, when a proposal is rejected by another agent, an agent can weaken or change its objective by abduction and relaxation.",
                "Our framework does not have a mechanism of argumentation, but reasons for critiques can be informed by responding critique sets.",
                "Kakas and Moraitis [10] propose a negotiation protocol which integrates abduction within an argumentation framework.",
                "A proposal contains an offer corresponding to the negotiation object, together with supporting information representing conditions under which this offer is made.",
                "Supporting information is computed by abduction and is used for constructing conditional arguments during the process of negotiation.",
                "In their negotiation protocol, when an agent cannot satisfy its own goal, the agent considers the other agents goal and searches for conditions under which the goal is acceptable.",
                "Our present approach differs from theirs in the following points.",
                "First, they use abduction to seek conditions to support arguments, while we use abduction to seek conditions for proposals to accept.",
                "Second, in their negotiation protocol, counter-proposals are chosen among candidates based on preference knowledge of an agent at meta-level, which represents policy under which an agent uses its object-level decision rules according to situations.",
                "In our framework, counter-proposals are newly constructed using abduction and relaxation.",
                "The method of construction is independent of particular negotiation protocols.",
                "As [2, 10, 14], abduction or abductive logic programming used in negotiation is mostly based on normal abduction.",
                "In contrast, our approach is based on extended abduction which can not only introduce hypotheses but remove them from a program.",
                "This is another important difference.",
                "Relaxation and neighborhood query answering are devised to make databases cooperative with their users [4, 6].",
                "In this sense, those techniques have the spirit similar to cooperative problem solving in multi-agent systems.",
                "As far as the authors know, however, there is no study which applies those technique to agent negotiation. 6.",
                "CONCLUSION In this paper we proposed a logical framework for negotiating agents.",
                "To construct proposals in the process of negotiation, we combined the techniques of extended abduction and relaxation.",
                "It was shown that these two operations are used for general inference rules in producing proposals.",
                "We developed a negotiation protocol between two agents based on exchange of proposals and critiques, and provided procedures for computing proposals in abductive logic programming.",
                "This enables us to realize automated negotiation on top of the existing answer set solvers.",
                "The present framework does not have a mechanism of selecting an optimal (counter-)proposal among different alternatives.",
                "To compare and evaluate proposals, an agent must have preference knowledge of candidate proposals.",
                "Further elaboration to maximize the utility of agents is left for future study. 7.",
                "REFERENCES [1] L. Amgoud, S. Parsons, and N. Maudet.",
                "Arguments, dialogue, and negotiation.",
                "In: Proc.",
                "ECAI-00, pp. 338-342, IOS Press, 2000. [2] A. Bracciali and P. Torroni.",
                "A new framework for knowledge revision of abductive agents through their interaction.",
                "In: Proc.",
                "CLIMA-IV, Computational Logic in Multi-Agent Systems, LNAI 3259, pp. 159-177, 2004. [3] W. Chen, M. Zhang, and N. Foo.",
                "Repeated negotiation of logic programs.",
                "In: Proc. 7th Workshop on Nonmonotonic Reasoning, Action and Change, 2006. [4] W. W. Chu, Q. Chen, and R.-C. Lee.",
                "Cooperative query answering via type abstraction hierarchy.",
                "In: Cooperating Knowledge Based Systems, S. M. Deen ed., pp. 271-290, Springer, 1990. [5] N. Foo, T. Meyer, Y. Zhang, and D. Zhang.",
                "Negotiating logic programs.",
                "In: Proc. 6th Workshop on Nonmonotonic Reasoning, Action and Change, 2005. [6] T. Gaasterland, P. Godfrey, and J. Minker.",
                "Relaxation as a platform for cooperative answering.",
                "Journal of Intelligence Information Systems 1(3/4):293-321, 1992. [7] M. Gelfond and V. Lifschitz.",
                "Classical negation in logic programs and disjunctive databases.",
                "New Generation Computing 9:365-385, 1991. [8] K. Inoue and C. Sakama.",
                "Abductive framework for nonmonotonic theory change.",
                "In: Proc.",
                "IJCAI-95, pp. 204-210, Morgan Kaufmann. [9] A. C. Kakas, R. A. Kowalski, and F. Toni, The role of abduction in logic programming.",
                "In: Handbook of Logic in AI and Logic Programming, D. M. Gabbay, et al. (eds), vol. 5, pp. 235-324, Oxford University Press, 1998. [10] A. C. Kakas and P. Moraitis.",
                "Adaptive agent negotiation via argumentation.",
                "In: Proc.",
                "AAMAS-06, pp. 384-391, ACM Press. [11] T. Meyer, N. Foo, R. Kwok, and D. Zhang.",
                "Logical foundation of negotiation: outcome, concession and adaptation.",
                "In: Proc.",
                "AAAI-04, pp. 293-298, MIT Press. [12] R. S. Michalski.",
                "A theory and methodology of inductive learning.",
                "In: Machine Learning: An Artificial Intelligence Approach, R. S. Michalski, et al. (eds), pp. 83-134, Morgan Kaufmann, 1983. [13] S. Parsons, C. Sierra and N. Jennings.",
                "Agents that reason and negotiate by arguing.",
                "Journal of Logic and Computation, 8(3):261-292, 1988. [14] F. Sadri, F. Toni, and P. Torroni, An abductive logic programming architecture for negotiating agents.",
                "In: Proc. 8th European Conf. on Logics in AI, LNAI 2424, pp. 419-431, Springer, 2002. [15] C. Sakama and K. Inoue.",
                "An abductive framework for computing knowledge base updates.",
                "Theory and Practice of Logic Programming 3(6):671-715, 2003.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1029"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Primero, utilizamos la técnica de abducción extendida de inteligencia artificial [8, 15] para construir una \"propuesta condicional\" como una extensión de la original.",
                "If (e, f) es una explicación mínima de gθ para alguna sustitución θ en p, h, la conjunción g: gθ, e, no f se llama \"propuesta condicional\" (para g), donde e, no f representa laConjunción: A1 ,..., AK, no AK+1 ,..., no Al para e = {a1 ,..., Ak} y f = {ak+1 ,..., Al}.",
                "Si G es una \"propuesta condicional\", existe un conjunto de creencias de P, h que satisface g.",
                "En este caso, S satisface Gθ, E, no F. Una \"propuesta condicional\" G proporciona un requisito mínimo para aceptar la propuesta G. Si Gθ tiene múltiples explicaciones mínimas, existen varias propuestas condicionales en consecuencia.",
                "Cuando (e, f) = (∅, ∅), una \"propuesta condicional\" se usa como una nueva propuesta realizada en respuesta a la propuesta G. Ejemplo 3.1.",
                "Luego, la \"propuesta condicional\" hecha por la universidad se convierte en asistencia (departamento de compt), salario (60, 000), tiene doctorado.3.2 Propuestas del vecindario por relajación Cuando una propuesta es inaceptable, un agente intenta construir una nueva contrapropuesta al debilitar las limitaciones en la propuesta inicial.",
                "El vendedor construye la \"propuesta condicional\": G1 S: PC (B1, 1G, 512M, 80G), DVD-RW, Price (1170), paga en efectivo, no agregue punto y lo ofrece al comprador.(Segunda ronda) El comprador no acepta G1 S porque él/ella no puede pagarlo en efectivo (15).",
                "Como G1 s se almacena en FP 2 sy ninguna \"propuesta condicional\" que satisfaga el requisito de los compradores existe, el vendedor produce propuestas de vecindario."
            ],
            "translated_text": "",
            "candidates": [
                "propuesta condicional",
                "propuesta condicional",
                "propuesta condicional",
                "propuesta condicional",
                "propuesta condicional",
                "propuesta condicional",
                "propuesta condicional",
                "propuesta condicional",
                "propuesta condicional",
                "propuesta condicional",
                "propuesta condicional",
                "propuesta condicional",
                "propuesta condicional",
                "propuesta condicional",
                "propuesta condicional",
                "propuesta condicional"
            ],
            "error": []
        },
        "abductive framework": {
            "translated_key": "marco abductivo",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Negotiation by Abduction and Relaxation Chiaki Sakama Dept.",
                "Computer and Communication Sciences Wakayama University Sakaedani, Wakayama 640 8510, Japan sakama@sys.wakayama-u.ac.jp Katsumi Inoue National Institute of Informatics 2-1-2 Hitotsubashi, Chiyoda-ku Tokyo 101 8430, Japan ki@nii.ac.jp ABSTRACT This paper studies a logical framework for automated negotiation between two agents.",
                "We suppose an agent who has a knowledge base represented by a logic program.",
                "Then, we introduce methods of constructing counter-proposals in response to proposals made by an agent.",
                "To this end, we combine the techniques of extended abduction in artificial intelligence and relaxation in cooperative query answering for databases.",
                "These techniques are respectively used for producing conditional proposals and neighborhood proposals in the process of negotiation.",
                "We provide a negotiation protocol based on the exchange of these proposals and develop procedures for computing new proposals.",
                "Categories and Subject Descriptors F.4.1 [Mathematical Logic]: Logic and constraint programming;; I.2.11 [Distributed Artificial Intelligence]: Multiagent systems General Terms Theory 1.",
                "INTRODUCTION Automated negotiation has been received increasing attention in multi-agent systems, and a number of frameworks have been proposed in different contexts ([1, 2, 3, 5, 10, 11, 13, 14], for instance).",
                "Negotiation usually proceeds in a series of rounds and each agent makes a proposal at every round.",
                "An agent that received a proposal responds in two ways.",
                "One is a critique which is a remark as to whether or not (parts of) the proposal is accepted.",
                "The other is a counter-proposal which is an alternative proposal made in response to a previous proposal [13].",
                "To see these proposals in one-to-one negotiation, suppose the following negotiation dialogue between a buyer agent B and a seller agent S. (Bi (or Si) represents an utterance of B (or S) in the i-th round.)",
                "B1: I want to buy a personal computer of the brand b1, with the specification of CPU:1GHz, Memory:512MB, HDD: 80GB, and a DVD-RW driver.",
                "I want to get it at the price under 1200 USD.",
                "S1: We can provide a PC with the requested specification if you pay for it by cash.",
                "In this case, however, service points are not added for this special discount.",
                "B2: I cannot pay it by cash.",
                "S2: In a normal price, the requested PC costs 1300 USD.",
                "B3: I cannot accept the price.",
                "My budget is under 1200 USD.",
                "S3: We can provide another computer with the requested specification, except that it is made by the brand b2.",
                "The price is exactly 1200 USD.",
                "B4: I do not want a PC of the brand b2.",
                "Instead, I can downgrade a driver from DVD-RW to CD-RW in my initial proposal.",
                "S4: Ok, I accept your offer.",
                "In this dialogue, in response to the opening proposal B1, the counter-proposal S1 is returned.",
                "In the rest of the dialogue, B2, B3, S4 are critiques, while S2, S3, B4 are counterproposals.",
                "Critiques are produced by evaluating a proposal in a knowledge base of an agent.",
                "In contrast, making counter-proposals involves generating an alternative proposal which is more favorable to the responding agent than the original one.",
                "It is known that there are two ways of producing counterproposals: extending the initial proposal or amending part of the initial proposal.",
                "According to [13], the first type appears in the dialogue: A: I propose that you provide me with service X.",
                "B: I propose that I provide you with service X if you provide me with service Z.",
                "The second type is in the dialogue: A: I propose that I provide you with service Y if you provide me with service X.",
                "B: I propose that I provide you with service X if you provide me with service Z.",
                "A negotiation proceeds by iterating such give-andtake dialogues until it reaches an agreement/disagreement.",
                "In those dialogues, agents generate (counter-)proposals by reasoning on their own goals or objectives.",
                "The objective of the agent A in the above dialogues is to obtain service X.",
                "The agent B proposes conditions to provide the service.",
                "In the process of negotiation, however, it may happen that agents are obliged to weaken or change their initial goals to reach a negotiated compromise.",
                "In the dialogue of 1022 978-81-904262-7-5 (RPS) c 2007 IFAAMAS a buyer agent and a seller agent presented above, a buyer agent changes its initial goal by downgrading a driver from DVD-RW to CD-RW.",
                "Such behavior is usually represented as specific meta-knowledge of an agent or specified as negotiation protocols in particular problems.",
                "Currently, there is no computational logic for automated negotiation which has general inference rules for producing (counter-)proposals.",
                "The purpose of this paper is to mechanize a process of building (counter-)proposals in one-to-one negotiation dialogues.",
                "We suppose an agent who has a knowledge base represented by a logic program.",
                "We then introduce methods for generating three different types of proposals.",
                "First, we use the technique of extended abduction in artificial intelligence [8, 15] to construct a conditional proposal as an extension of the original one.",
                "Second, we use the technique of relaxation in cooperative query answering for databases [4, 6] to construct a neighborhood proposal as an amendment of the original one.",
                "Third, combining extended abduction and relaxation, conditional neighborhood proposals are constructed as amended extensions of the original proposal.",
                "We develop a negotiation protocol between two agents based on the exchange of these counter-proposals and critiques.",
                "We also provide procedures for computing proposals in logic programming.",
                "This paper is organized as follows.",
                "Section 2 introduces a logical framework used in this paper.",
                "Section 3 presents methods for constructing proposals, and provides a negotiation protocol.",
                "Section 4 provides methods for computing proposals in logic programming.",
                "Section 5 discusses related works, and Section 6 concludes the paper. 2.",
                "PRELIMINARIES Logic programs considered in this paper are extended disjunctive programs (EDP) [7].",
                "An EDP (or simply a program) is a set of rules of the form: L1 ; · · · ; Ll ← Ll+1 , . . . , Lm, not Lm+1 , . . . , not Ln (n ≥ m ≥ l ≥ 0) where each Li is a positive/negative literal, i.e., A or ¬A for an atom A, and not is negation as failure (NAF). not L is called an NAF-literal.",
                "The symbol ; represents disjunction.",
                "The left-hand side of the rule is the head, and the right-hand side is the body.",
                "For each rule r of the above form, head(r), body+ (r) and body− (r) denote the sets of literals {L1, . . . , Ll}, {Ll+1, . . . , Lm}, and {Lm+1, . . . , Ln}, respectively.",
                "Also, not body− (r) denotes the set of NAF-literals {not Lm+1, . . . , not Ln}.",
                "A disjunction of literals and a conjunction of (NAF-)literals in a rule are identified with its corresponding sets of literals.",
                "A rule r is often written as head(r) ← body+ (r), not body− (r) or head(r) ← body(r) where body(r) = body+ (r)∪not body− (r).",
                "A rule r is disjunctive if head(r) contains more than one literal.",
                "A rule r is an integrity constraint if head(r) = ∅; and r is a fact if body(r) = ∅.",
                "A program is NAF-free if no rule contains NAF-literals.",
                "Two rules/literals are identified with respect to variable renaming.",
                "A substitution is a mapping from variables to terms θ = {x1/t1, . . . , xn/tn}, where x1, . . . , xn are distinct variables and each ti is a term distinct from xi.",
                "Given a conjunction G of (NAF-)literals, Gθ denotes the conjunction obtained by applying θ to G. A program, rule, or literal is ground if it contains no variable.",
                "A program P with variables is a shorthand of its ground instantiation Ground(P), the set of ground rules obtained from P by substituting variables in P by elements of its Herbrand universe in every possible way.",
                "The semantics of an EDP is defined by the answer set semantics [7].",
                "Let Lit be the set of all ground literals in the language of a program.",
                "Suppose a program P and a set of literals S(⊆ Lit).",
                "Then, the reduct P S is the program which contains the ground rule head(r) ← body+ (r) iff there is a rule r in Ground(P) such that body− (r)∩S = ∅.",
                "Given an NAF-free EDP P, Cn(P) denotes the smallest set of ground literals which is (i) closed under P, i.e., for every ground rule r in Ground(P), body(r) ⊆ Cn(P) implies head(r) ∩ Cn(P) = ∅; and (ii) logically closed, i.e., it is either consistent or equal to Lit.",
                "Given an EDP P and a set S of literals, S is an answer set of P if S = Cn(P S ).",
                "A program has none, one, or multiple answer sets in general.",
                "An answer set is consistent if it is not Lit.",
                "A program P is consistent if it has a consistent answer set; otherwise, P is inconsistent.",
                "Abductive logic programming [9] introduces a mechanism of hypothetical reasoning to logic programming.",
                "An <br>abductive framework</br> used in this paper is the extended abduction introduced by Inoue and Sakama [8, 15].",
                "An abductive program is a pair P, H where P is an EDP and H is a set of literals called abducibles.",
                "When a literal L ∈ H contains variables, any instance of L is also an abducible.",
                "An abductive program P, H is consistent if P is consistent.",
                "Throughout the paper, abductive programs are assumed to be consistent unless stated otherwise.",
                "Let G = L1, . . . , Lm, not Lm+1, . . . , not Ln be a conjunction, where all variables in G are existentially quantified at the front and range-restricted, i.e., every variable in Lm+1, . . . , Ln appears in L1, . . . , Lm.",
                "A set S of ground literals satisfies the conjunction G if { L1θ, . . . , Lmθ } ⊆ S and { Lm+1θ, . . . , Lnθ }∩ S = ∅ for some ground instance Gθ with a substitution θ.",
                "Let P, H be an abductive program and G a conjunction as above.",
                "A pair (E, F) is an explanation of an observation G in P, H if1 1. (P \\ F) ∪ E has an answer set which satisfies G, 2. (P \\ F) ∪ E is consistent, 3.",
                "E and F are sets of ground literals such that E ⊆ H\\P and F ⊆ H ∩ P. When (P \\ F) ∪ E has an answer set S satisfying the above three conditions, S is called a belief set of an abductive program P, H satisfying G (with respect to (E, F)).",
                "Note that if P has a consistent answer set S satisfying G, S is also a belief set of P, H satisfying G with respect to (E, F) = (∅, ∅).",
                "Extended abduction introduces/removes hypotheses to/from a program to explain an observation.",
                "Note that normal abduction (as in [9]) considers only introducing hypotheses to explain an observation.",
                "An explanation (E, F) of an observation G is called minimal if for any explanation (E , F ) of G, E ⊆ E and F ⊆ F imply E = E and F = F. Example 2.1.",
                "Consider the abductive program P, H : P : flies(x) ← bird(x), not ab(x) , ab(x) ← broken-wing(x) , bird(tweety) ← , bird(opus) ← , broken-wing(tweety) ← .",
                "H : broken-wing(x) .",
                "The observation G = flies(tweety) has the minimal explanation (E, F) = (∅, {broken-wing(tweety)}). 1 This defines credulous explanations [15].",
                "Skeptical explanations are used in [8].",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1023 3.",
                "NEGOTIATION 3.1 Conditional Proposals by Abduction We suppose an agent who has a knowledge base represented by an abductive program P, H .",
                "A program P consists of two types of knowledge, belief B and desire D, where B represents objective knowledge of an agent, while D represents subjective knowledge in general.",
                "We define P = B ∪ D, but do not distinguish B and D if such distinction is not important in the context.",
                "In contrast, abducibles H are used for representing permissible conditions to make a compromise in the process of negotiation.",
                "Definition 3.1.",
                "A proposal G is a conjunction of literals and NAF-literals: L1, . . . , Lm, not Lm+1, . . . , not Ln where every variable in G is existentially quantified at the front and range-restricted.",
                "In particular, G is called a critique if G = accept or G = reject where accept and reject are the reserved propositions.",
                "A counter-proposal is a proposal made in response to a proposal.",
                "Definition 3.2.",
                "A proposal G is accepted in an abductive program P, H if P has an answer set satisfying G. When a proposal is not accepted, abduction is used for seeking conditions to make it acceptable.",
                "Definition 3.3.",
                "Let P, H be an abductive program and G a proposal.",
                "If (E, F) is a minimal explanation of Gθ for some substitution θ in P, H , the conjunction G : Gθ, E, not F is called a conditional proposal (for G), where E, not F represents the conjunction: A1, . . . , Ak, not Ak+1, . . . , not Al for E = {A1, . . . , Ak} and F = { Ak+1, . . . , Al }.",
                "Proposition 3.1.",
                "Let P, H be an abductive program and G a proposal.",
                "If G is a conditional proposal, there is a belief set S of P, H satisfying G .",
                "Proof.",
                "When G = Gθ, E, not F, (P \\ F) ∪ E has a consistent answer set S satisfying Gθ and E ∩ F = ∅.",
                "In this case, S satisfies Gθ, E, not F. A conditional proposal G provides a minimal requirement for accepting the proposal G. If Gθ has multiple minimal explanations, several conditional proposals exist accordingly.",
                "When (E, F) = (∅, ∅), a conditional proposal is used as a new proposal made in response to the proposal G. Example 3.1.",
                "An agent seeks a position of a research assistant at the computer department of a university with the condition that the salary is at least 50,000 USD per year.",
                "The agent makes his/her request as the proposal:2 G = assist(compt dept), salary(x), x ≥ 50, 000.",
                "The university has the abductive program P, H : P : salary(40, 000) ← assist(compt dept), not has PhD, salary(60, 000) ← assist(compt dept), has PhD, salary(50, 000) ← assist(math dept), salary(55, 000) ← system admin(compt dept), 2 For notational convenience, we often include mathematical (in)equations in proposals/programs.",
                "They are written by literals, for instance, x ≥ y by geq(x, y) with a suitable definition of the predicate geq. employee(x) ← assist(x), employee(x) ← system admin(x), assist(compt dept); assist(math dept) ; system admin(compt dept) ←, H : has PhD, where available positions are represented by disjunction.",
                "According to P, the base salary of a research assistant at the computer department is 40,000 USD, but if he/she has PhD, it is 60,000 USD.",
                "In this case, (E, F) = ({has PhD}, ∅) becomes the minimal explanation of Gθ = assist(compt dept), salary(60, 000) with θ = { x/60, 000 }.",
                "Then, the conditional proposal made by the university becomes assist(compt dept), salary(60, 000), has PhD . 3.2 Neighborhood Proposals by Relaxation When a proposal is unacceptable, an agent tries to construct a new counter-proposal by weakening constraints in the initial proposal.",
                "We use techniques of relaxation for this purpose.",
                "Relaxation is used as a technique of cooperative query answering in databases [4, 6].",
                "When an original query fails in a database, relaxation expands the scope of the query by relaxing the constraints in the query.",
                "This allows the database to return neighborhood answers which are related to the original query.",
                "We use the technique for producing proposals in the process of negotiation.",
                "Definition 3.4.",
                "Let P, H be an abductive program and G a proposal.",
                "Then, G is relaxed to G in the following three ways: Anti-instantiation: Construct G such that G θ = G for some substitution θ.",
                "Dropping conditions: Construct G such that G ⊂ G. Goal replacement: If G is a conjunction G1, G2, where G1 and G2 are conjunctions, and there is a rule L ← G1 in P such that G1θ = G1 for some substitution θ, then build G as Lθ, G2.",
                "Here, Lθ is called a replaced literal.",
                "In each case, every variable in G is existentially quantified at the front and range-restricted.",
                "Anti-instantiation replaces constants (or terms) with fresh variables.",
                "Dropping conditions eliminates some conditions in a proposal.",
                "Goal replacement replaces the condition G1 in G with a literal Lθ in the presence of a rule L ← G1 in P under the condition G1θ = G1.",
                "All these operations generalize proposals in different ways.",
                "Each G obtained by these operations is called a relaxation of G. It is worth noting that these operations are also used in the context of inductive generalization [12].",
                "The relaxed proposal can produce new offers which are neighbor to the original proposal.",
                "Definition 3.5.",
                "Let P, H be an abductive program and G a proposal. 1.",
                "Let G be a proposal obtained by anti-instantiation.",
                "If P has an answer set S which satisfies G θ for some substitution θ and G θ = G, G θ is called a neighborhood proposal by anti-instantiation. 2.",
                "Let G be a proposal obtained by dropping conditions.",
                "If P has an answer set S which satisfies G θ for some substitution θ, G θ is called a neighborhood proposal by dropping conditions. 1024 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.",
                "Let G be a proposal obtained by goal replacement.",
                "For a replaced literal L ∈ G and a rule H ← B in P such that L = Hσ and (G \\ {L}) ∪ Bσ = G for some substitution σ, put G = (G \\ {L}) ∪ Bσ.",
                "If P has an answer set S which satisfies G θ for some substitution θ, G θ is called a neighborhood proposal by goal replacement.",
                "Example 3.2. (cont.",
                "Example 3.1) Given the proposal G = assist(compt dept), salary(x), x ≥ 50, 000, • G1 = assist(w), salary(x), x ≥ 50, 000 is produced by substituting compt dept with a variable w. As G1θ1 = assist(math dept), salary(50, 000) with θ1 = { w/math dept } is satisfied by an answer set of P, G1θ1 becomes a neighborhood proposal by anti-instantiation. • G2 = assist(compt dept), salary(x) is produced by dropping the salary condition x ≥ 50, 000.",
                "As G2θ2 = assist(compt dept), salary(40, 000) with θ2 = { x/40, 000 } is satisfied by an answer set of P, G2θ2 becomes a neighborhood proposal by dropping conditions. • G3 = employee(compt dept), salary(x), x ≥ 50, 000 is produced by replacing assist(compt dept) with employee(compt dept) using the rule employee(x) ← assist(x) in P. By G3 and the rule employee(x) ← system admin(x) in P, G3 = sys admin(compt dept), salary(x), x ≥ 50, 000 is produced.",
                "As G3 θ3 = sys admin(compt dept), salary(55, 000) with θ3 = { x/55, 000 } is satisfied by an answer set of P, G3 θ3 becomes a neighborhood proposal by goal replacement.",
                "Finally, extended abduction and relaxation are combined to produce conditional neighborhood proposals.",
                "Definition 3.6.",
                "Let P, H be an abductive program and G a proposal. 1.",
                "Let G be a proposal obtained by either anti-instantiation or dropping conditions.",
                "If (E, F) is a minimal explanation of G θ(= G) for some substitution θ, the conjunction G θ, E, not F is called a conditional neighborhood proposal by anti-instantiation/dropping conditions. 2.",
                "Let G be a proposal obtained by goal replacement.",
                "Suppose G as in Definition 3.5(3).",
                "If (E, F) is a minimal explanation of G θ for some substitution θ, the conjunction G θ, E, not F is called a conditional neighborhood proposal by goal replacement.",
                "A conditional neighborhood proposal reduces to a neighborhood proposal when (E, F) = (∅, ∅). 3.3 Negotiation Protocol A negotiation protocol defines how to exchange proposals in the process of negotiation.",
                "This section presents a negotiation protocol in our framework.",
                "We suppose one-to-one negotiation between two agents who have a common ontology and the same language for successful communication.",
                "Definition 3.7.",
                "A proposal L1, ..., Lm, not Lm+1, ..., not Ln violates an integrity constraint ← body+ (r), not body− (r) if for any substitution θ, there is a substitution σ such that body+ (r)σ ⊆ { L1θ, . . . , Lmθ }, body− (r)σ∩{ L1θ, . . . , Lmθ } = ∅, and body− (r)σ ⊆ { Lm+1θ, . . . , Lnθ }.",
                "Integrity constraints are conditions which an agent should satisfy, so that they are used to explain why an agent does not accept a proposal.",
                "A negotiation proceeds in a series of rounds.",
                "Each i-th round (i ≥ 1) consists of a proposal Gi 1 made by one agent Ag1 and another proposal Gi 2 made by the other agent Ag2.",
                "Definition 3.8.",
                "Let P1, H1 be an abductive program of an agent Ag1 and Gi 2 a proposal made by Ag2 at the i-th round.",
                "A critique set of Ag1 (at the i-th round) is a set CSi 1(P1, Gj 2) = CSi−1 1 (P1, Gj−1 2 ) ∪ { r | r is an integrity constraint in P1 and Gj 2 violates r } where j = i − 1 or i, and CS0 1 (P1, G0 2) = CS1 1 (P1, G0 2) = ∅.",
                "A critique set of an agent Ag1 accumulates integrity constraints which are violated by proposals made by another agent Ag2.",
                "CSi 2(P2, Gj 1) is defined in the same manner.",
                "Definition 3.9.",
                "Let Pk, Hk be an abductive program of an agent Agk and Gj a proposal, which is not a critique, made by any agent at the j(≤ i)-th round.",
                "A negotiation set of Agk (at the i-th round) is a triple NSi k = (Si c, Si n, Si cn), where Si c is the set of conditional proposals, Si n is the set of neighborhood proposals, and Si cn is the set of conditional neighborhood proposals, produced by Gj and Pk, Hk .",
                "A negotiation set represents the space of possible proposals made by an agent.",
                "Si x (x ∈ {c, n, cn}) accumulates proposals produced by Gj (1 ≤ j ≤ i) according to Definitions 3.3, 3.5, and 3.6.",
                "Note that an agent can construct counter-proposals by modifying its own previous proposals or another agents proposals.",
                "An agent Agk accumulates proposals that are made by Agk but are rejected by another agent, in the failed proposal set FP i k (at the i-th round), where FP 0 k = ∅.",
                "Suppose two agents Ag1 and Ag2 who have abductive programs P1, H1 and P2, H2 , respectively.",
                "Given a proposal G1 1 which is satisfied by an answer set of P1, a negotiation starts.",
                "In response to the proposal Gi 1 made by Ag1 at the i-th round, Ag2 behaves as follows. 1.",
                "If Gi 1 = accept, an agreement is reached and negotiation ends in success. 2.",
                "Else if Gi 1 = reject, put FP i 2 = FPi−1 2 ∪{Gi−1 2 } where {G0 2} = ∅.",
                "Proceed to the step 4(b). 3.",
                "Else if P2 has an answer set satisfying Gi 1, Ag2 returns Gi 2 = accept to Ag1.",
                "Negotiation ends in success. 4.",
                "Otherwise, Ag2 behaves as follows.",
                "Put FP i 2 = FPi−1 2 . (a) If Gi 1 violates an integrity constraint in P2, return the critique Gi 2 = reject to Ag1, together with the critique set CSi 2(P2, Gi 1). (b) Otherwise, construct NSi 2 as follows. (i) Produce Si c. Let μ(Si c) = { p | p ∈ Si c \\ FPi 2 and p satisfies the constraints in CSi 1(P1, Gi−1 2 )}.",
                "If μ(Si c) = ∅, select one from μ(Si c) and propose it as Gi 2 to Ag1; otherwise, go to (ii). (ii) Produce Si n. If μ(Si n) = ∅, select one from μ(Si n) and propose it as Gi 2 to Ag1; otherwise, go to (iii). (iii) Produce Si cn.",
                "If μ(Si cn) = ∅, select one from μ(Si cn) and propose it as Gi 2 to Ag1; otherwise, negotiation ends in failure.",
                "This means that Ag2 can make no counter-proposal or every counterproposal made by Ag2 is rejected by Ag1.",
                "In the step 4(a), Ag2 rejects the proposal Gi 1 and returns the reason of rejection as a critique set.",
                "This helps for Ag1 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1025 in preparing a next counter-proposal.",
                "In the step 4(b), Ag2 constructs a new proposal.",
                "In its construction, Ag2 should take care of the critique set CSi 1(P1, Gi−1 2 ), which represents integrity constraints, if any, accumulated in previous rounds, that Ag1 must satisfy.",
                "Also, FP i 2 is used for removing proposals which have been rejected.",
                "Construction of Si x (x ∈ {c, n, cn}) in NSi 2 is incrementally done by adding new counter-proposals produced by Gi 1 or Gi−1 2 to Si−1 x .",
                "For instance, Si n in NSi 2 is computed as Si n = Si−1 n ∪{ p | p is a neighborhood proposal made by Gi 1 } ∪ { p | p is a neighborhood proposal made by Gi−1 2 }, where S0 n = ∅.",
                "That is, Si n is constructed from Si−1 n by adding new proposals which are obtained by modifying the proposal Gi 1 made by Ag1 at the i-th round or modifying the proposal Gi−1 2 made by Ag2 at the (i − 1)-th round.",
                "Si c and Si cn are obtained as well.",
                "In the above protocol, an agent produces Si c at first, secondly Si n, and finally Si cn.",
                "This strategy seeks conditions which satisfy the given proposal, prior to neighborhood proposals which change the original one.",
                "Another strategy, which prefers neighborhood proposals to conditional ones, is also considered.",
                "Conditional neighborhood proposals are to be considered in the last place, since they differ from the original one to the maximal extent.",
                "The above protocol produces the candidate proposals in Si x for each x ∈ {c, n, cn} at once.",
                "We can consider a variant of the protocol in which each proposal in Si x is constructed one by one (see Example 3.3).",
                "The above protocol is repeatedly applied to each one of the two negotiating agents until a negotiation ends in success/failure.",
                "Formally, the above negotiation protocol has the following properties.",
                "Theorem 3.2.",
                "Let Ag1 and Ag2 be two agents having abductive programs P1, H1 and P2, H2 , respectively. 1.",
                "If P1, H1 and P2, H2 are function-free (i.e., both Pi and Hi contain no function symbol), any negotiation will terminate. 2.",
                "If a negotiation terminates with agreement on a proposal G, both P1, H1 and P2, H2 have belief sets satisfying G. Proof. 1.",
                "When an abductive program is function-free, abducibles and negotiation sets are both finite.",
                "Moreover, if a proposal is once rejected, it is not proposed again by the function μ.",
                "Thus, negotiation will terminate in finite steps. 2.",
                "When a proposal G is made by Ag1, P1, H1 has a belief set satisfying G. If the agent Ag2 accepts the proposal G, it is satisfied by an answer set of P2 which is also a belief set of P2, H2 .",
                "Example 3.3.",
                "Suppose a buying-selling situation in the introduction.",
                "A seller agent has the abductive program Ps, Hs in which Ps consists of belief Bs and desire Ds: Bs : pc(b1, 1G, 512M, 80G) ; pc(b2, 1G, 512M, 80G) ←,(1) dvd-rw ; cd-rw ←, (2) Ds : normal price(1300) ← pc(b1, 1G, 512M, 80G), dvd-rw, (3) normal price(1200) ← pc(b1, 1G, 512M, 80G), cd-rw, (4) normal price(1200) ← pc(b2, 1G, 512M, 80G), dvd-rw, (5) price(x) ← normal price(x), add point, (6) price(x ∗ 0.9) ← normal price(x), pay cash, not add point,(7) add point ←, (8) Hs : add point, pay cash.",
                "Here, (1) and (2) represent selection of products.",
                "The atom pc(b1, 1G, 512M, 80G) represents that the seller agent has a PC of the brand b1 such that CPU is 1GHz, memory is 512MB, and HDD is 80GB.",
                "Prices of products are represented as desire of the seller.",
                "The rules (3) - (5) are normal prices of products.",
                "A normal price is a selling price on the condition that service points are added (6).",
                "On the other hand, a discount price is applied if the paying method is cash and no service point is added (7).",
                "The fact (8) represents the addition of service points.",
                "This service would be withdrawn in case of discount prices, so add point is specified as an abducible.",
                "A buyer agent has the abductive program Pb, Hb in which Pb consists of belief Bb and desire Db: Bb : drive ← dvd-rw, (9) drive ← cd-rw, (10) price(x) ←, (11) Db : pc(b1, 1G, 512M, 80G) ←, (12) dvd-rw ←, (13) cd-rw ← not dvd-rw, (14) ← pay cash, (15) ← price(x), x > 1200, (16) Hb : dvd-rw.",
                "Rules (12) - (16) are the buyers desire.",
                "Among them, (15) and (16) impose constraints for buying a PC.",
                "A DVD-RW is specified as an abducible which is subject to concession. (1st round) First, the following proposal is given by the buyer agent: G1 b : pc(b1, 1G, 512M, 80G), dvd-rw, price(x), x ≤ 1200.",
                "As Ps has no answer set which satisfies G1 b , the seller agent cannot accept the proposal.",
                "The seller takes an action of making a counter-proposal and performs abduction.",
                "As a result, the seller finds the minimal explanation (E, F) = ({ pay cash }, { add point }) which explains G1 b θ1 with θ1 = { x/1170 }.",
                "The seller constructs the conditional proposal: G1 s : pc(b1, 1G, 512M, 80G), dvd-rw, price(1170), pay cash, not add point and offers it to the buyer. (2nd round) The buyer does not accept G1 s because he/she cannot pay it by cash (15).",
                "The buyer then returns the critique G2 b = reject to the seller, together with the critique set CS2 b (Pb, G1 s) = {(15)}.",
                "In response to this, the seller tries to make another proposal which satisfies the constraint in this critique set.",
                "As G1 s is stored in FP 2 s and no other conditional proposal satisfying the buyers requirement exists, the seller produces neighborhood proposals.",
                "He/she relaxes G1 b by dropping x ≤ 1200 in the condition, and produces pc(b1, 1G, 512M, 80G), dvd-rw, price(x).",
                "As Ps has an answer set which satisfies G2 s : pc(b1, 1G, 512M, 80G), dvd-rw, price(1300), 1026 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) the seller offers G2 s as a new counter-proposal. (3rd round) The buyer does not accept G2 s because he/she cannot pay more than 1200USD (16).",
                "The buyer again returns the critique G3 b = reject to the seller, together with the critique set CS3 b (Pb, G2 s) = CS2 b (Pb, G1 s) ∪ {(16)}.",
                "The seller then considers another proposal by replacing b1 with a variable w, G1 b now becomes pc(w, 1G, 512M, 80G), dvd-rw, price(x), x ≤ 1200.",
                "As Ps has an answer set which satisfies G3 s : pc(b2, 1G, 512M, 80G), dvd-rw, price(1200), the seller offers G3 s as a new counter-proposal. (4th round) The buyer does not accept G3 s because a PC of the brand b2 is out of his/her interest and Pb has no answer set satisfying G3 s. Then, the buyer makes a concession by changing his/her original goal.",
                "The buyer relaxes G1 b by goal replacement using the rule (9) in Pb, and produces pc(b1, 1G, 512M, 80G), drive, price(x), x ≤ 1200.",
                "Using (10), the following proposal is produced: pc(b1, 1G, 512M, 80G), cd-rw, price(x), x ≤ 1200.",
                "As Pb \\ { dvd-rw } has a consistent answer set satisfying the above proposal, the buyer proposes the conditional neighborhood proposal G4 b : pc(b1, 1G, 512M, 80G), cd-rw, not dvd-rw, price(x), x ≤ 1200 to the seller agent.",
                "Since Ps also has an answer set satisfying G4 b , the seller accepts it and sends the message G4 s = accept to the buyer.",
                "Thus, the negotiation ends in success. 4.",
                "COMPUTATION In this section, we provide methods of computing proposals in terms of answer sets of programs.",
                "We first introduce some definitions from [15].",
                "Definition 4.1.",
                "Given an abductive program P, H , the set UR of update rules is defined as: UR = { L ← not L, L ← not L | L ∈ H } ∪ { +L ← L | L ∈ H \\ P } ∪ { −L ← not L | L ∈ H ∩ P } , where L, +L, and −L are new atoms uniquely associated with every L ∈ H. The atoms +L and −L are called update atoms.",
                "By the definition, the atom L becomes true iff L is not true.",
                "The pair of rules L ← not L and L ← not L specify the situation that an abducible L is true or not.",
                "When p(x) ∈ H and p(a) ∈ P but p(t) ∈ P for t = a, the rule +L ← L precisely becomes +p(t) ← p(t) for any t = a.",
                "In this case, the rule is shortly written as +p(x) ← p(x), x = a.",
                "Generally, the rule becomes +p(x) ← p(x), x = t1, . . . , x = tn for n such instances.",
                "The rule +L ← L derives the atom +L if an abducible L which is not in P is to be true.",
                "In contrast, the rule −L ← not L derives the atom −L if an abducible L which is in P is not to be true.",
                "Thus, update atoms represent the change of truth values of abducibles in a program.",
                "That is, +L means the introduction of L, while −L means the deletion of L. When an abducible L contains variables, the associated update atom +L or −L is supposed to have exactly the same variables.",
                "In this case, an update atom is semantically identified with its ground instances.",
                "The set of all update atoms associated with the abducibles in H is denoted by UH, and UH = UH+ ∪ UH− where UH+ (resp.",
                "UH− ) is the set of update atoms of the form +L (resp. −L).",
                "Definition 4.2.",
                "Given an abductive program P, H , its update program UP is defined as the program UP = (P \\ H) ∪ UR .",
                "An answer set S of UP is called U-minimal if there is no answer set T of UP such that T ∩ UH ⊂ S ∩ UH.",
                "By the definition, U-minimal answer sets exist whenever UP has answer sets.",
                "Update programs are used for computing (minimal) explanations of an observation.",
                "Given an observation G as a conjunction of literals and NAF-literals possibly containing variables, we introduce a new ground literal O together with the rule O ← G. In this case, O has an explanation (E, F) iff G has the same explanation.",
                "With this replacement, an observation is assumed to be a ground literal without loss of generality.",
                "In what follows, E+ = { +L | L ∈ E } and F − = { −L | L ∈ F } for E ⊆ H and F ⊆ H. Proposition 4.1. ([15]) Let P, H be an abductive program, UP its update program, and G a ground literal representing an observation.",
                "Then, a pair (E, F) is an explanation of G iff UP ∪ { ← not G } has a consistent answer set S such that E+ = S ∩ UH+ and F− = S ∩ UH− .",
                "In particular, (E, F) is a minimal explanation iff S is a U-minimal answer set.",
                "Example 4.1.",
                "To explain the observation G = flies(t) in the program P of Example 2.1, first construct the update program UP of P:3 UP : flies(x) ← bird(x), not ab(x), ab(x) ← broken-wing(x) , bird(t) ← , bird(o) ← , broken-wing(x) ← not broken-wing(x), broken-wing(x) ← not broken-wing(x), +broken-wing(x) ← broken-wing(x), x = t , −broken-wing(t) ← not broken-wing(t) .",
                "Next, consider the program UP ∪ { ← not flies(t) }.",
                "It has the single U-minimal answer set: S = { bird(t), bird(o), flies(t), flies(o), broken-wing(t), broken-wing(o), −broken-wing(t) }.",
                "The unique minimal explanation (E, F) = (∅, {broken-wing(t)}) of G is expressed by the update atom −broken-wing(t) in S ∩ UH− .",
                "Proposition 4.2.",
                "Let P, H be an abductive program and G a ground literal representing an observation.",
                "If P ∪ { ← not G } has a consistent answer set S, G has the minimal explanation (E, F) = (∅, ∅) and S satisfies G. Now we provide methods for computing (counter-)proposals.",
                "First, conditional proposals are computed as follows. input : an abductive program P, H , a proposal G; output : a set Sc of proposals.",
                "If G is a ground literal, compute its minimal explanation (E, F) in P, H using the update program.",
                "Put G, E, not F in Sc.",
                "Else if G is a conjunction possibly containing variables, consider the abductive program 3 t represents tweety and o represents opus.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1027 P ∪{ O ← G }, H with a ground literal O. Compute a minimal explanation of O in P ∪ { O ← G }, H using its update program.",
                "If O has a minimal explanation (E, F) with a substitution θ for variables in G, put Gθ, E, not F in Sc.",
                "Next, neighborhood proposals are computed as follows. input : an abductive program P, H , a proposal G; output : a set Sn of proposals. % neighborhood proposals by anti-instantiation; Construct G by anti-instantiation.",
                "For a ground literal O, if P ∪ { O ← G } ∪ { ← not O } has a consistent answer set satisfying G θ with a substitution θ and G θ = G, put G θ in Sn. % neighborhood proposals by dropping conditions; Construct G by dropping conditions.",
                "If G is a ground literal and the program P ∪ { ← not G } has a consistent answer set, put G in Sn.",
                "Else if G is a conjunction possibly containing variables, do the following.",
                "For a ground literal O, if P ∪{ O ← G }∪{ ← not O } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn. % neighborhood proposals by goal replacement; Construct G by goal replacement.",
                "If G is a ground literal and there is a rule H ← B in P such that G = Hσ and Bσ = G for some substitution σ, put G = Bσ.",
                "If P ∪ { ← not G } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn.",
                "Else if G is a conjunction possibly containing variables, do the following.",
                "For a replaced literal L ∈ G , if there is a rule H ← B in P such that L = Hσ and (G \\ {L}) ∪ Bσ = G for some substitution σ, put G = (G \\ {L}) ∪ Bσ.",
                "For a ground literal O, if P ∪ { O ← G } ∪ { ← not O } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn.",
                "Theorem 4.3.",
                "The set Sc (resp.",
                "Sn) computed above coincides with the set of conditional proposals (resp. neighborhood proposals).",
                "Proof.",
                "The result for Sc follows from Definition 3.3 and Proposition 4.1.",
                "The result for Sn follows from Definition 3.5 and Proposition 4.2.",
                "Conditional neighborhood proposals are computed by combining the above two procedures.",
                "Those proposals are computed at each round.",
                "Note that the procedure for computing Sn contains some nondeterministic choices.",
                "For instance, there are generally several candidates of literals to relax in a proposal.",
                "Also, there might be several rules in a program for the usage of goal replacement.",
                "In practice, an agent can prespecify literals in a proposal for possible relaxation or rules in a program for the usage of goal replacement. 5.",
                "RELATED WORK As there are a number of literature on automated negotiation, this section focuses on comparison with negotiation frameworks based on logic and argumentation.",
                "Sadri et al. [14] use abductive logic programming as a representation language of negotiating agents.",
                "Agents negotiate using common dialogue primitives, called dialogue moves.",
                "Each agent has an abductive logic program in which a sequence of dialogues are specified by a program, a dialogue protocol is specified as constraints, and dialogue moves are specified as abducibles.",
                "The behavior of agents is regulated by an observe-think-act cycle.",
                "Once a dialogue move is uttered by an agent, another agent that observed the utterance thinks and acts using a proof procedure.",
                "Their approach and ours both employ abductive logic programming as a platform of agent reasoning, but the use of it is quite different.",
                "First, they use abducibles to specify dialogue primitives of the form tell(utterer, receiver, subject, identifier, time), while we use abducibles to specify arbitrary permissible hypotheses to construct conditional proposals.",
                "Second, a program pre-specifies a plan to carry out in order to achieve a goal, together with available/missing resources in the context of resource-exchanging problems.",
                "This is in contrast with our method in which possible counter-proposals are newly constructed in response to a proposal made by an agent.",
                "Third, they specify a negotiation policy inside a program (as integrity constraints), while we give a protocol independent of individual agents.",
                "They provide an operational model that completely specifies the behavior of agents in terms of agent cycle.",
                "We do not provide such a complete specification of the behavior of agents.",
                "Our primary interest is to mechanize construction of proposals.",
                "Bracciali and Torroni [2] formulate abductive agents that have knowledge in abductive logic programs.",
                "To explain an observation, two agents communicate by exchanging integrity constraints.",
                "In the process of communication, an agent can revise its own integrity constraints according to the information provided by the other agent.",
                "A set IC of integrity constraints relaxes a set IC (or IC tightens IC ) if any observation that can be proved with respect to IC can also be proved with respect to IC .",
                "For instance, IC : ← a, b, c relaxes IC : ← a, b.",
                "Thus, they use relaxation for weakening the constraints in an abductive logic program.",
                "In contrast, we use relaxation for weakening proposals and three different relaxation methods, anti-instantiation, dropping conditions, and goal replacement, are considered.",
                "Their goal is to explain an observation by revising integrity constraints of an agent through communication, while we use integrity constraints for communication to explain critiques and help other agents in making counter-proposals.",
                "Meyer et al. [11] introduce a logical framework for negotiating agents.",
                "They introduce two different modes of negotiation: concession and adaptation.",
                "They provide rational postulates to characterize negotiated outcomes between two agents, and describe methods for constructing outcomes.",
                "They provide logical conditions for negotiated outcomes to satisfy, but they do not describe a process of negotiation nor negotiation protocols.",
                "Moreover, they represent agents by classical propositional theories, which is different from our abductive logic programming framework.",
                "Foo et al. [5] model one-to-one negotiation as a one-time encounter between two extended logic programs.",
                "An agent offers an answer set of its program, and their mutual deal is regarded as a trade on their answer sets.",
                "Starting from the initial agreement set S∩T for an answer set S of an agent and an answer set T of another agent, each agent extends this set to reflect its own demand while keeping consistency with demand of the other agent.",
                "Their algorithm returns new programs having answer sets which are consistent with each other and keep the agreement set.",
                "The work is extended to repeated encounters in [3].",
                "In their framework, two agents exchange answer sets to produce a common belief set, which is different from our framework of exchanging proposals.",
                "There are a number of proposals for negotiation based 1028 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) on argumentation.",
                "An advantage of argumentation-based negotiation is that it constructs a proposal with arguments supporting the proposal [1].",
                "The existence of arguments is useful to convince other agents of reasons why an agent offers (counter-)proposals or returns critiques.",
                "Parsons et al. [13] develop a logic of argumentation-based negotiation among BDI agents.",
                "In one-to-one negotiation, an agent A generates a proposal together with its arguments, and passes it to another agent B.",
                "The proposal is evaluated by B which attempts to build arguments against it.",
                "If it conflicts with Bs interest, B informs A of its objection by sending back its attacking argument.",
                "In response to this, A tries to find an alternative way of achieving its original objective, or a way of persuading B to drop its objection.",
                "If either type of argument can be found, A will submit it to B.",
                "If B finds no reason to reject the new proposal, it will be accepted and the negotiation ends in success.",
                "Otherwise, the process is iterated.",
                "In this negotiation processes, the agent A never changes its original objective, so that negotiation ends in failure if A fails to find an alternative way of achieving the original objective.",
                "In our framework, when a proposal is rejected by another agent, an agent can weaken or change its objective by abduction and relaxation.",
                "Our framework does not have a mechanism of argumentation, but reasons for critiques can be informed by responding critique sets.",
                "Kakas and Moraitis [10] propose a negotiation protocol which integrates abduction within an argumentation framework.",
                "A proposal contains an offer corresponding to the negotiation object, together with supporting information representing conditions under which this offer is made.",
                "Supporting information is computed by abduction and is used for constructing conditional arguments during the process of negotiation.",
                "In their negotiation protocol, when an agent cannot satisfy its own goal, the agent considers the other agents goal and searches for conditions under which the goal is acceptable.",
                "Our present approach differs from theirs in the following points.",
                "First, they use abduction to seek conditions to support arguments, while we use abduction to seek conditions for proposals to accept.",
                "Second, in their negotiation protocol, counter-proposals are chosen among candidates based on preference knowledge of an agent at meta-level, which represents policy under which an agent uses its object-level decision rules according to situations.",
                "In our framework, counter-proposals are newly constructed using abduction and relaxation.",
                "The method of construction is independent of particular negotiation protocols.",
                "As [2, 10, 14], abduction or abductive logic programming used in negotiation is mostly based on normal abduction.",
                "In contrast, our approach is based on extended abduction which can not only introduce hypotheses but remove them from a program.",
                "This is another important difference.",
                "Relaxation and neighborhood query answering are devised to make databases cooperative with their users [4, 6].",
                "In this sense, those techniques have the spirit similar to cooperative problem solving in multi-agent systems.",
                "As far as the authors know, however, there is no study which applies those technique to agent negotiation. 6.",
                "CONCLUSION In this paper we proposed a logical framework for negotiating agents.",
                "To construct proposals in the process of negotiation, we combined the techniques of extended abduction and relaxation.",
                "It was shown that these two operations are used for general inference rules in producing proposals.",
                "We developed a negotiation protocol between two agents based on exchange of proposals and critiques, and provided procedures for computing proposals in abductive logic programming.",
                "This enables us to realize automated negotiation on top of the existing answer set solvers.",
                "The present framework does not have a mechanism of selecting an optimal (counter-)proposal among different alternatives.",
                "To compare and evaluate proposals, an agent must have preference knowledge of candidate proposals.",
                "Further elaboration to maximize the utility of agents is left for future study. 7.",
                "REFERENCES [1] L. Amgoud, S. Parsons, and N. Maudet.",
                "Arguments, dialogue, and negotiation.",
                "In: Proc.",
                "ECAI-00, pp. 338-342, IOS Press, 2000. [2] A. Bracciali and P. Torroni.",
                "A new framework for knowledge revision of abductive agents through their interaction.",
                "In: Proc.",
                "CLIMA-IV, Computational Logic in Multi-Agent Systems, LNAI 3259, pp. 159-177, 2004. [3] W. Chen, M. Zhang, and N. Foo.",
                "Repeated negotiation of logic programs.",
                "In: Proc. 7th Workshop on Nonmonotonic Reasoning, Action and Change, 2006. [4] W. W. Chu, Q. Chen, and R.-C. Lee.",
                "Cooperative query answering via type abstraction hierarchy.",
                "In: Cooperating Knowledge Based Systems, S. M. Deen ed., pp. 271-290, Springer, 1990. [5] N. Foo, T. Meyer, Y. Zhang, and D. Zhang.",
                "Negotiating logic programs.",
                "In: Proc. 6th Workshop on Nonmonotonic Reasoning, Action and Change, 2005. [6] T. Gaasterland, P. Godfrey, and J. Minker.",
                "Relaxation as a platform for cooperative answering.",
                "Journal of Intelligence Information Systems 1(3/4):293-321, 1992. [7] M. Gelfond and V. Lifschitz.",
                "Classical negation in logic programs and disjunctive databases.",
                "New Generation Computing 9:365-385, 1991. [8] K. Inoue and C. Sakama.",
                "<br>abductive framework</br> for nonmonotonic theory change.",
                "In: Proc.",
                "IJCAI-95, pp. 204-210, Morgan Kaufmann. [9] A. C. Kakas, R. A. Kowalski, and F. Toni, The role of abduction in logic programming.",
                "In: Handbook of Logic in AI and Logic Programming, D. M. Gabbay, et al. (eds), vol. 5, pp. 235-324, Oxford University Press, 1998. [10] A. C. Kakas and P. Moraitis.",
                "Adaptive agent negotiation via argumentation.",
                "In: Proc.",
                "AAMAS-06, pp. 384-391, ACM Press. [11] T. Meyer, N. Foo, R. Kwok, and D. Zhang.",
                "Logical foundation of negotiation: outcome, concession and adaptation.",
                "In: Proc.",
                "AAAI-04, pp. 293-298, MIT Press. [12] R. S. Michalski.",
                "A theory and methodology of inductive learning.",
                "In: Machine Learning: An Artificial Intelligence Approach, R. S. Michalski, et al. (eds), pp. 83-134, Morgan Kaufmann, 1983. [13] S. Parsons, C. Sierra and N. Jennings.",
                "Agents that reason and negotiate by arguing.",
                "Journal of Logic and Computation, 8(3):261-292, 1988. [14] F. Sadri, F. Toni, and P. Torroni, An abductive logic programming architecture for negotiating agents.",
                "In: Proc. 8th European Conf. on Logics in AI, LNAI 2424, pp. 419-431, Springer, 2002. [15] C. Sakama and K. Inoue.",
                "An <br>abductive framework</br> for computing knowledge base updates.",
                "Theory and Practice of Logic Programming 3(6):671-715, 2003.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1029"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Un \"marco abductivo\" utilizado en este documento es el secuestro extendido introducido por Inoue y Sakama [8, 15].",
                "\"Marco abductivo\" para el cambio de teoría no monotónica.",
                "Un \"marco abductivo\" para calcular actualizaciones de la base de conocimiento."
            ],
            "translated_text": "",
            "candidates": [
                "marco abductivo",
                "marco abductivo",
                "marco abductivo",
                "Marco abductivo",
                "marco abductivo",
                "marco abductivo"
            ],
            "error": []
        },
        "abductive program": {
            "translated_key": "programa abductivo",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Negotiation by Abduction and Relaxation Chiaki Sakama Dept.",
                "Computer and Communication Sciences Wakayama University Sakaedani, Wakayama 640 8510, Japan sakama@sys.wakayama-u.ac.jp Katsumi Inoue National Institute of Informatics 2-1-2 Hitotsubashi, Chiyoda-ku Tokyo 101 8430, Japan ki@nii.ac.jp ABSTRACT This paper studies a logical framework for automated negotiation between two agents.",
                "We suppose an agent who has a knowledge base represented by a logic program.",
                "Then, we introduce methods of constructing counter-proposals in response to proposals made by an agent.",
                "To this end, we combine the techniques of extended abduction in artificial intelligence and relaxation in cooperative query answering for databases.",
                "These techniques are respectively used for producing conditional proposals and neighborhood proposals in the process of negotiation.",
                "We provide a negotiation protocol based on the exchange of these proposals and develop procedures for computing new proposals.",
                "Categories and Subject Descriptors F.4.1 [Mathematical Logic]: Logic and constraint programming;; I.2.11 [Distributed Artificial Intelligence]: Multiagent systems General Terms Theory 1.",
                "INTRODUCTION Automated negotiation has been received increasing attention in multi-agent systems, and a number of frameworks have been proposed in different contexts ([1, 2, 3, 5, 10, 11, 13, 14], for instance).",
                "Negotiation usually proceeds in a series of rounds and each agent makes a proposal at every round.",
                "An agent that received a proposal responds in two ways.",
                "One is a critique which is a remark as to whether or not (parts of) the proposal is accepted.",
                "The other is a counter-proposal which is an alternative proposal made in response to a previous proposal [13].",
                "To see these proposals in one-to-one negotiation, suppose the following negotiation dialogue between a buyer agent B and a seller agent S. (Bi (or Si) represents an utterance of B (or S) in the i-th round.)",
                "B1: I want to buy a personal computer of the brand b1, with the specification of CPU:1GHz, Memory:512MB, HDD: 80GB, and a DVD-RW driver.",
                "I want to get it at the price under 1200 USD.",
                "S1: We can provide a PC with the requested specification if you pay for it by cash.",
                "In this case, however, service points are not added for this special discount.",
                "B2: I cannot pay it by cash.",
                "S2: In a normal price, the requested PC costs 1300 USD.",
                "B3: I cannot accept the price.",
                "My budget is under 1200 USD.",
                "S3: We can provide another computer with the requested specification, except that it is made by the brand b2.",
                "The price is exactly 1200 USD.",
                "B4: I do not want a PC of the brand b2.",
                "Instead, I can downgrade a driver from DVD-RW to CD-RW in my initial proposal.",
                "S4: Ok, I accept your offer.",
                "In this dialogue, in response to the opening proposal B1, the counter-proposal S1 is returned.",
                "In the rest of the dialogue, B2, B3, S4 are critiques, while S2, S3, B4 are counterproposals.",
                "Critiques are produced by evaluating a proposal in a knowledge base of an agent.",
                "In contrast, making counter-proposals involves generating an alternative proposal which is more favorable to the responding agent than the original one.",
                "It is known that there are two ways of producing counterproposals: extending the initial proposal or amending part of the initial proposal.",
                "According to [13], the first type appears in the dialogue: A: I propose that you provide me with service X.",
                "B: I propose that I provide you with service X if you provide me with service Z.",
                "The second type is in the dialogue: A: I propose that I provide you with service Y if you provide me with service X.",
                "B: I propose that I provide you with service X if you provide me with service Z.",
                "A negotiation proceeds by iterating such give-andtake dialogues until it reaches an agreement/disagreement.",
                "In those dialogues, agents generate (counter-)proposals by reasoning on their own goals or objectives.",
                "The objective of the agent A in the above dialogues is to obtain service X.",
                "The agent B proposes conditions to provide the service.",
                "In the process of negotiation, however, it may happen that agents are obliged to weaken or change their initial goals to reach a negotiated compromise.",
                "In the dialogue of 1022 978-81-904262-7-5 (RPS) c 2007 IFAAMAS a buyer agent and a seller agent presented above, a buyer agent changes its initial goal by downgrading a driver from DVD-RW to CD-RW.",
                "Such behavior is usually represented as specific meta-knowledge of an agent or specified as negotiation protocols in particular problems.",
                "Currently, there is no computational logic for automated negotiation which has general inference rules for producing (counter-)proposals.",
                "The purpose of this paper is to mechanize a process of building (counter-)proposals in one-to-one negotiation dialogues.",
                "We suppose an agent who has a knowledge base represented by a logic program.",
                "We then introduce methods for generating three different types of proposals.",
                "First, we use the technique of extended abduction in artificial intelligence [8, 15] to construct a conditional proposal as an extension of the original one.",
                "Second, we use the technique of relaxation in cooperative query answering for databases [4, 6] to construct a neighborhood proposal as an amendment of the original one.",
                "Third, combining extended abduction and relaxation, conditional neighborhood proposals are constructed as amended extensions of the original proposal.",
                "We develop a negotiation protocol between two agents based on the exchange of these counter-proposals and critiques.",
                "We also provide procedures for computing proposals in logic programming.",
                "This paper is organized as follows.",
                "Section 2 introduces a logical framework used in this paper.",
                "Section 3 presents methods for constructing proposals, and provides a negotiation protocol.",
                "Section 4 provides methods for computing proposals in logic programming.",
                "Section 5 discusses related works, and Section 6 concludes the paper. 2.",
                "PRELIMINARIES Logic programs considered in this paper are extended disjunctive programs (EDP) [7].",
                "An EDP (or simply a program) is a set of rules of the form: L1 ; · · · ; Ll ← Ll+1 , . . . , Lm, not Lm+1 , . . . , not Ln (n ≥ m ≥ l ≥ 0) where each Li is a positive/negative literal, i.e., A or ¬A for an atom A, and not is negation as failure (NAF). not L is called an NAF-literal.",
                "The symbol ; represents disjunction.",
                "The left-hand side of the rule is the head, and the right-hand side is the body.",
                "For each rule r of the above form, head(r), body+ (r) and body− (r) denote the sets of literals {L1, . . . , Ll}, {Ll+1, . . . , Lm}, and {Lm+1, . . . , Ln}, respectively.",
                "Also, not body− (r) denotes the set of NAF-literals {not Lm+1, . . . , not Ln}.",
                "A disjunction of literals and a conjunction of (NAF-)literals in a rule are identified with its corresponding sets of literals.",
                "A rule r is often written as head(r) ← body+ (r), not body− (r) or head(r) ← body(r) where body(r) = body+ (r)∪not body− (r).",
                "A rule r is disjunctive if head(r) contains more than one literal.",
                "A rule r is an integrity constraint if head(r) = ∅; and r is a fact if body(r) = ∅.",
                "A program is NAF-free if no rule contains NAF-literals.",
                "Two rules/literals are identified with respect to variable renaming.",
                "A substitution is a mapping from variables to terms θ = {x1/t1, . . . , xn/tn}, where x1, . . . , xn are distinct variables and each ti is a term distinct from xi.",
                "Given a conjunction G of (NAF-)literals, Gθ denotes the conjunction obtained by applying θ to G. A program, rule, or literal is ground if it contains no variable.",
                "A program P with variables is a shorthand of its ground instantiation Ground(P), the set of ground rules obtained from P by substituting variables in P by elements of its Herbrand universe in every possible way.",
                "The semantics of an EDP is defined by the answer set semantics [7].",
                "Let Lit be the set of all ground literals in the language of a program.",
                "Suppose a program P and a set of literals S(⊆ Lit).",
                "Then, the reduct P S is the program which contains the ground rule head(r) ← body+ (r) iff there is a rule r in Ground(P) such that body− (r)∩S = ∅.",
                "Given an NAF-free EDP P, Cn(P) denotes the smallest set of ground literals which is (i) closed under P, i.e., for every ground rule r in Ground(P), body(r) ⊆ Cn(P) implies head(r) ∩ Cn(P) = ∅; and (ii) logically closed, i.e., it is either consistent or equal to Lit.",
                "Given an EDP P and a set S of literals, S is an answer set of P if S = Cn(P S ).",
                "A program has none, one, or multiple answer sets in general.",
                "An answer set is consistent if it is not Lit.",
                "A program P is consistent if it has a consistent answer set; otherwise, P is inconsistent.",
                "Abductive logic programming [9] introduces a mechanism of hypothetical reasoning to logic programming.",
                "An abductive framework used in this paper is the extended abduction introduced by Inoue and Sakama [8, 15].",
                "An <br>abductive program</br> is a pair P, H where P is an EDP and H is a set of literals called abducibles.",
                "When a literal L ∈ H contains variables, any instance of L is also an abducible.",
                "An <br>abductive program</br> P, H is consistent if P is consistent.",
                "Throughout the paper, abductive programs are assumed to be consistent unless stated otherwise.",
                "Let G = L1, . . . , Lm, not Lm+1, . . . , not Ln be a conjunction, where all variables in G are existentially quantified at the front and range-restricted, i.e., every variable in Lm+1, . . . , Ln appears in L1, . . . , Lm.",
                "A set S of ground literals satisfies the conjunction G if { L1θ, . . . , Lmθ } ⊆ S and { Lm+1θ, . . . , Lnθ }∩ S = ∅ for some ground instance Gθ with a substitution θ.",
                "Let P, H be an <br>abductive program</br> and G a conjunction as above.",
                "A pair (E, F) is an explanation of an observation G in P, H if1 1. (P \\ F) ∪ E has an answer set which satisfies G, 2. (P \\ F) ∪ E is consistent, 3.",
                "E and F are sets of ground literals such that E ⊆ H\\P and F ⊆ H ∩ P. When (P \\ F) ∪ E has an answer set S satisfying the above three conditions, S is called a belief set of an <br>abductive program</br> P, H satisfying G (with respect to (E, F)).",
                "Note that if P has a consistent answer set S satisfying G, S is also a belief set of P, H satisfying G with respect to (E, F) = (∅, ∅).",
                "Extended abduction introduces/removes hypotheses to/from a program to explain an observation.",
                "Note that normal abduction (as in [9]) considers only introducing hypotheses to explain an observation.",
                "An explanation (E, F) of an observation G is called minimal if for any explanation (E , F ) of G, E ⊆ E and F ⊆ F imply E = E and F = F. Example 2.1.",
                "Consider the <br>abductive program</br> P, H : P : flies(x) ← bird(x), not ab(x) , ab(x) ← broken-wing(x) , bird(tweety) ← , bird(opus) ← , broken-wing(tweety) ← .",
                "H : broken-wing(x) .",
                "The observation G = flies(tweety) has the minimal explanation (E, F) = (∅, {broken-wing(tweety)}). 1 This defines credulous explanations [15].",
                "Skeptical explanations are used in [8].",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1023 3.",
                "NEGOTIATION 3.1 Conditional Proposals by Abduction We suppose an agent who has a knowledge base represented by an <br>abductive program</br> P, H .",
                "A program P consists of two types of knowledge, belief B and desire D, where B represents objective knowledge of an agent, while D represents subjective knowledge in general.",
                "We define P = B ∪ D, but do not distinguish B and D if such distinction is not important in the context.",
                "In contrast, abducibles H are used for representing permissible conditions to make a compromise in the process of negotiation.",
                "Definition 3.1.",
                "A proposal G is a conjunction of literals and NAF-literals: L1, . . . , Lm, not Lm+1, . . . , not Ln where every variable in G is existentially quantified at the front and range-restricted.",
                "In particular, G is called a critique if G = accept or G = reject where accept and reject are the reserved propositions.",
                "A counter-proposal is a proposal made in response to a proposal.",
                "Definition 3.2.",
                "A proposal G is accepted in an <br>abductive program</br> P, H if P has an answer set satisfying G. When a proposal is not accepted, abduction is used for seeking conditions to make it acceptable.",
                "Definition 3.3.",
                "Let P, H be an <br>abductive program</br> and G a proposal.",
                "If (E, F) is a minimal explanation of Gθ for some substitution θ in P, H , the conjunction G : Gθ, E, not F is called a conditional proposal (for G), where E, not F represents the conjunction: A1, . . . , Ak, not Ak+1, . . . , not Al for E = {A1, . . . , Ak} and F = { Ak+1, . . . , Al }.",
                "Proposition 3.1.",
                "Let P, H be an <br>abductive program</br> and G a proposal.",
                "If G is a conditional proposal, there is a belief set S of P, H satisfying G .",
                "Proof.",
                "When G = Gθ, E, not F, (P \\ F) ∪ E has a consistent answer set S satisfying Gθ and E ∩ F = ∅.",
                "In this case, S satisfies Gθ, E, not F. A conditional proposal G provides a minimal requirement for accepting the proposal G. If Gθ has multiple minimal explanations, several conditional proposals exist accordingly.",
                "When (E, F) = (∅, ∅), a conditional proposal is used as a new proposal made in response to the proposal G. Example 3.1.",
                "An agent seeks a position of a research assistant at the computer department of a university with the condition that the salary is at least 50,000 USD per year.",
                "The agent makes his/her request as the proposal:2 G = assist(compt dept), salary(x), x ≥ 50, 000.",
                "The university has the <br>abductive program</br> P, H : P : salary(40, 000) ← assist(compt dept), not has PhD, salary(60, 000) ← assist(compt dept), has PhD, salary(50, 000) ← assist(math dept), salary(55, 000) ← system admin(compt dept), 2 For notational convenience, we often include mathematical (in)equations in proposals/programs.",
                "They are written by literals, for instance, x ≥ y by geq(x, y) with a suitable definition of the predicate geq. employee(x) ← assist(x), employee(x) ← system admin(x), assist(compt dept); assist(math dept) ; system admin(compt dept) ←, H : has PhD, where available positions are represented by disjunction.",
                "According to P, the base salary of a research assistant at the computer department is 40,000 USD, but if he/she has PhD, it is 60,000 USD.",
                "In this case, (E, F) = ({has PhD}, ∅) becomes the minimal explanation of Gθ = assist(compt dept), salary(60, 000) with θ = { x/60, 000 }.",
                "Then, the conditional proposal made by the university becomes assist(compt dept), salary(60, 000), has PhD . 3.2 Neighborhood Proposals by Relaxation When a proposal is unacceptable, an agent tries to construct a new counter-proposal by weakening constraints in the initial proposal.",
                "We use techniques of relaxation for this purpose.",
                "Relaxation is used as a technique of cooperative query answering in databases [4, 6].",
                "When an original query fails in a database, relaxation expands the scope of the query by relaxing the constraints in the query.",
                "This allows the database to return neighborhood answers which are related to the original query.",
                "We use the technique for producing proposals in the process of negotiation.",
                "Definition 3.4.",
                "Let P, H be an <br>abductive program</br> and G a proposal.",
                "Then, G is relaxed to G in the following three ways: Anti-instantiation: Construct G such that G θ = G for some substitution θ.",
                "Dropping conditions: Construct G such that G ⊂ G. Goal replacement: If G is a conjunction G1, G2, where G1 and G2 are conjunctions, and there is a rule L ← G1 in P such that G1θ = G1 for some substitution θ, then build G as Lθ, G2.",
                "Here, Lθ is called a replaced literal.",
                "In each case, every variable in G is existentially quantified at the front and range-restricted.",
                "Anti-instantiation replaces constants (or terms) with fresh variables.",
                "Dropping conditions eliminates some conditions in a proposal.",
                "Goal replacement replaces the condition G1 in G with a literal Lθ in the presence of a rule L ← G1 in P under the condition G1θ = G1.",
                "All these operations generalize proposals in different ways.",
                "Each G obtained by these operations is called a relaxation of G. It is worth noting that these operations are also used in the context of inductive generalization [12].",
                "The relaxed proposal can produce new offers which are neighbor to the original proposal.",
                "Definition 3.5.",
                "Let P, H be an <br>abductive program</br> and G a proposal. 1.",
                "Let G be a proposal obtained by anti-instantiation.",
                "If P has an answer set S which satisfies G θ for some substitution θ and G θ = G, G θ is called a neighborhood proposal by anti-instantiation. 2.",
                "Let G be a proposal obtained by dropping conditions.",
                "If P has an answer set S which satisfies G θ for some substitution θ, G θ is called a neighborhood proposal by dropping conditions. 1024 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.",
                "Let G be a proposal obtained by goal replacement.",
                "For a replaced literal L ∈ G and a rule H ← B in P such that L = Hσ and (G \\ {L}) ∪ Bσ = G for some substitution σ, put G = (G \\ {L}) ∪ Bσ.",
                "If P has an answer set S which satisfies G θ for some substitution θ, G θ is called a neighborhood proposal by goal replacement.",
                "Example 3.2. (cont.",
                "Example 3.1) Given the proposal G = assist(compt dept), salary(x), x ≥ 50, 000, • G1 = assist(w), salary(x), x ≥ 50, 000 is produced by substituting compt dept with a variable w. As G1θ1 = assist(math dept), salary(50, 000) with θ1 = { w/math dept } is satisfied by an answer set of P, G1θ1 becomes a neighborhood proposal by anti-instantiation. • G2 = assist(compt dept), salary(x) is produced by dropping the salary condition x ≥ 50, 000.",
                "As G2θ2 = assist(compt dept), salary(40, 000) with θ2 = { x/40, 000 } is satisfied by an answer set of P, G2θ2 becomes a neighborhood proposal by dropping conditions. • G3 = employee(compt dept), salary(x), x ≥ 50, 000 is produced by replacing assist(compt dept) with employee(compt dept) using the rule employee(x) ← assist(x) in P. By G3 and the rule employee(x) ← system admin(x) in P, G3 = sys admin(compt dept), salary(x), x ≥ 50, 000 is produced.",
                "As G3 θ3 = sys admin(compt dept), salary(55, 000) with θ3 = { x/55, 000 } is satisfied by an answer set of P, G3 θ3 becomes a neighborhood proposal by goal replacement.",
                "Finally, extended abduction and relaxation are combined to produce conditional neighborhood proposals.",
                "Definition 3.6.",
                "Let P, H be an <br>abductive program</br> and G a proposal. 1.",
                "Let G be a proposal obtained by either anti-instantiation or dropping conditions.",
                "If (E, F) is a minimal explanation of G θ(= G) for some substitution θ, the conjunction G θ, E, not F is called a conditional neighborhood proposal by anti-instantiation/dropping conditions. 2.",
                "Let G be a proposal obtained by goal replacement.",
                "Suppose G as in Definition 3.5(3).",
                "If (E, F) is a minimal explanation of G θ for some substitution θ, the conjunction G θ, E, not F is called a conditional neighborhood proposal by goal replacement.",
                "A conditional neighborhood proposal reduces to a neighborhood proposal when (E, F) = (∅, ∅). 3.3 Negotiation Protocol A negotiation protocol defines how to exchange proposals in the process of negotiation.",
                "This section presents a negotiation protocol in our framework.",
                "We suppose one-to-one negotiation between two agents who have a common ontology and the same language for successful communication.",
                "Definition 3.7.",
                "A proposal L1, ..., Lm, not Lm+1, ..., not Ln violates an integrity constraint ← body+ (r), not body− (r) if for any substitution θ, there is a substitution σ such that body+ (r)σ ⊆ { L1θ, . . . , Lmθ }, body− (r)σ∩{ L1θ, . . . , Lmθ } = ∅, and body− (r)σ ⊆ { Lm+1θ, . . . , Lnθ }.",
                "Integrity constraints are conditions which an agent should satisfy, so that they are used to explain why an agent does not accept a proposal.",
                "A negotiation proceeds in a series of rounds.",
                "Each i-th round (i ≥ 1) consists of a proposal Gi 1 made by one agent Ag1 and another proposal Gi 2 made by the other agent Ag2.",
                "Definition 3.8.",
                "Let P1, H1 be an <br>abductive program</br> of an agent Ag1 and Gi 2 a proposal made by Ag2 at the i-th round.",
                "A critique set of Ag1 (at the i-th round) is a set CSi 1(P1, Gj 2) = CSi−1 1 (P1, Gj−1 2 ) ∪ { r | r is an integrity constraint in P1 and Gj 2 violates r } where j = i − 1 or i, and CS0 1 (P1, G0 2) = CS1 1 (P1, G0 2) = ∅.",
                "A critique set of an agent Ag1 accumulates integrity constraints which are violated by proposals made by another agent Ag2.",
                "CSi 2(P2, Gj 1) is defined in the same manner.",
                "Definition 3.9.",
                "Let Pk, Hk be an <br>abductive program</br> of an agent Agk and Gj a proposal, which is not a critique, made by any agent at the j(≤ i)-th round.",
                "A negotiation set of Agk (at the i-th round) is a triple NSi k = (Si c, Si n, Si cn), where Si c is the set of conditional proposals, Si n is the set of neighborhood proposals, and Si cn is the set of conditional neighborhood proposals, produced by Gj and Pk, Hk .",
                "A negotiation set represents the space of possible proposals made by an agent.",
                "Si x (x ∈ {c, n, cn}) accumulates proposals produced by Gj (1 ≤ j ≤ i) according to Definitions 3.3, 3.5, and 3.6.",
                "Note that an agent can construct counter-proposals by modifying its own previous proposals or another agents proposals.",
                "An agent Agk accumulates proposals that are made by Agk but are rejected by another agent, in the failed proposal set FP i k (at the i-th round), where FP 0 k = ∅.",
                "Suppose two agents Ag1 and Ag2 who have abductive programs P1, H1 and P2, H2 , respectively.",
                "Given a proposal G1 1 which is satisfied by an answer set of P1, a negotiation starts.",
                "In response to the proposal Gi 1 made by Ag1 at the i-th round, Ag2 behaves as follows. 1.",
                "If Gi 1 = accept, an agreement is reached and negotiation ends in success. 2.",
                "Else if Gi 1 = reject, put FP i 2 = FPi−1 2 ∪{Gi−1 2 } where {G0 2} = ∅.",
                "Proceed to the step 4(b). 3.",
                "Else if P2 has an answer set satisfying Gi 1, Ag2 returns Gi 2 = accept to Ag1.",
                "Negotiation ends in success. 4.",
                "Otherwise, Ag2 behaves as follows.",
                "Put FP i 2 = FPi−1 2 . (a) If Gi 1 violates an integrity constraint in P2, return the critique Gi 2 = reject to Ag1, together with the critique set CSi 2(P2, Gi 1). (b) Otherwise, construct NSi 2 as follows. (i) Produce Si c. Let μ(Si c) = { p | p ∈ Si c \\ FPi 2 and p satisfies the constraints in CSi 1(P1, Gi−1 2 )}.",
                "If μ(Si c) = ∅, select one from μ(Si c) and propose it as Gi 2 to Ag1; otherwise, go to (ii). (ii) Produce Si n. If μ(Si n) = ∅, select one from μ(Si n) and propose it as Gi 2 to Ag1; otherwise, go to (iii). (iii) Produce Si cn.",
                "If μ(Si cn) = ∅, select one from μ(Si cn) and propose it as Gi 2 to Ag1; otherwise, negotiation ends in failure.",
                "This means that Ag2 can make no counter-proposal or every counterproposal made by Ag2 is rejected by Ag1.",
                "In the step 4(a), Ag2 rejects the proposal Gi 1 and returns the reason of rejection as a critique set.",
                "This helps for Ag1 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1025 in preparing a next counter-proposal.",
                "In the step 4(b), Ag2 constructs a new proposal.",
                "In its construction, Ag2 should take care of the critique set CSi 1(P1, Gi−1 2 ), which represents integrity constraints, if any, accumulated in previous rounds, that Ag1 must satisfy.",
                "Also, FP i 2 is used for removing proposals which have been rejected.",
                "Construction of Si x (x ∈ {c, n, cn}) in NSi 2 is incrementally done by adding new counter-proposals produced by Gi 1 or Gi−1 2 to Si−1 x .",
                "For instance, Si n in NSi 2 is computed as Si n = Si−1 n ∪{ p | p is a neighborhood proposal made by Gi 1 } ∪ { p | p is a neighborhood proposal made by Gi−1 2 }, where S0 n = ∅.",
                "That is, Si n is constructed from Si−1 n by adding new proposals which are obtained by modifying the proposal Gi 1 made by Ag1 at the i-th round or modifying the proposal Gi−1 2 made by Ag2 at the (i − 1)-th round.",
                "Si c and Si cn are obtained as well.",
                "In the above protocol, an agent produces Si c at first, secondly Si n, and finally Si cn.",
                "This strategy seeks conditions which satisfy the given proposal, prior to neighborhood proposals which change the original one.",
                "Another strategy, which prefers neighborhood proposals to conditional ones, is also considered.",
                "Conditional neighborhood proposals are to be considered in the last place, since they differ from the original one to the maximal extent.",
                "The above protocol produces the candidate proposals in Si x for each x ∈ {c, n, cn} at once.",
                "We can consider a variant of the protocol in which each proposal in Si x is constructed one by one (see Example 3.3).",
                "The above protocol is repeatedly applied to each one of the two negotiating agents until a negotiation ends in success/failure.",
                "Formally, the above negotiation protocol has the following properties.",
                "Theorem 3.2.",
                "Let Ag1 and Ag2 be two agents having abductive programs P1, H1 and P2, H2 , respectively. 1.",
                "If P1, H1 and P2, H2 are function-free (i.e., both Pi and Hi contain no function symbol), any negotiation will terminate. 2.",
                "If a negotiation terminates with agreement on a proposal G, both P1, H1 and P2, H2 have belief sets satisfying G. Proof. 1.",
                "When an <br>abductive program</br> is function-free, abducibles and negotiation sets are both finite.",
                "Moreover, if a proposal is once rejected, it is not proposed again by the function μ.",
                "Thus, negotiation will terminate in finite steps. 2.",
                "When a proposal G is made by Ag1, P1, H1 has a belief set satisfying G. If the agent Ag2 accepts the proposal G, it is satisfied by an answer set of P2 which is also a belief set of P2, H2 .",
                "Example 3.3.",
                "Suppose a buying-selling situation in the introduction.",
                "A seller agent has the <br>abductive program</br> Ps, Hs in which Ps consists of belief Bs and desire Ds: Bs : pc(b1, 1G, 512M, 80G) ; pc(b2, 1G, 512M, 80G) ←,(1) dvd-rw ; cd-rw ←, (2) Ds : normal price(1300) ← pc(b1, 1G, 512M, 80G), dvd-rw, (3) normal price(1200) ← pc(b1, 1G, 512M, 80G), cd-rw, (4) normal price(1200) ← pc(b2, 1G, 512M, 80G), dvd-rw, (5) price(x) ← normal price(x), add point, (6) price(x ∗ 0.9) ← normal price(x), pay cash, not add point,(7) add point ←, (8) Hs : add point, pay cash.",
                "Here, (1) and (2) represent selection of products.",
                "The atom pc(b1, 1G, 512M, 80G) represents that the seller agent has a PC of the brand b1 such that CPU is 1GHz, memory is 512MB, and HDD is 80GB.",
                "Prices of products are represented as desire of the seller.",
                "The rules (3) - (5) are normal prices of products.",
                "A normal price is a selling price on the condition that service points are added (6).",
                "On the other hand, a discount price is applied if the paying method is cash and no service point is added (7).",
                "The fact (8) represents the addition of service points.",
                "This service would be withdrawn in case of discount prices, so add point is specified as an abducible.",
                "A buyer agent has the <br>abductive program</br> Pb, Hb in which Pb consists of belief Bb and desire Db: Bb : drive ← dvd-rw, (9) drive ← cd-rw, (10) price(x) ←, (11) Db : pc(b1, 1G, 512M, 80G) ←, (12) dvd-rw ←, (13) cd-rw ← not dvd-rw, (14) ← pay cash, (15) ← price(x), x > 1200, (16) Hb : dvd-rw.",
                "Rules (12) - (16) are the buyers desire.",
                "Among them, (15) and (16) impose constraints for buying a PC.",
                "A DVD-RW is specified as an abducible which is subject to concession. (1st round) First, the following proposal is given by the buyer agent: G1 b : pc(b1, 1G, 512M, 80G), dvd-rw, price(x), x ≤ 1200.",
                "As Ps has no answer set which satisfies G1 b , the seller agent cannot accept the proposal.",
                "The seller takes an action of making a counter-proposal and performs abduction.",
                "As a result, the seller finds the minimal explanation (E, F) = ({ pay cash }, { add point }) which explains G1 b θ1 with θ1 = { x/1170 }.",
                "The seller constructs the conditional proposal: G1 s : pc(b1, 1G, 512M, 80G), dvd-rw, price(1170), pay cash, not add point and offers it to the buyer. (2nd round) The buyer does not accept G1 s because he/she cannot pay it by cash (15).",
                "The buyer then returns the critique G2 b = reject to the seller, together with the critique set CS2 b (Pb, G1 s) = {(15)}.",
                "In response to this, the seller tries to make another proposal which satisfies the constraint in this critique set.",
                "As G1 s is stored in FP 2 s and no other conditional proposal satisfying the buyers requirement exists, the seller produces neighborhood proposals.",
                "He/she relaxes G1 b by dropping x ≤ 1200 in the condition, and produces pc(b1, 1G, 512M, 80G), dvd-rw, price(x).",
                "As Ps has an answer set which satisfies G2 s : pc(b1, 1G, 512M, 80G), dvd-rw, price(1300), 1026 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) the seller offers G2 s as a new counter-proposal. (3rd round) The buyer does not accept G2 s because he/she cannot pay more than 1200USD (16).",
                "The buyer again returns the critique G3 b = reject to the seller, together with the critique set CS3 b (Pb, G2 s) = CS2 b (Pb, G1 s) ∪ {(16)}.",
                "The seller then considers another proposal by replacing b1 with a variable w, G1 b now becomes pc(w, 1G, 512M, 80G), dvd-rw, price(x), x ≤ 1200.",
                "As Ps has an answer set which satisfies G3 s : pc(b2, 1G, 512M, 80G), dvd-rw, price(1200), the seller offers G3 s as a new counter-proposal. (4th round) The buyer does not accept G3 s because a PC of the brand b2 is out of his/her interest and Pb has no answer set satisfying G3 s. Then, the buyer makes a concession by changing his/her original goal.",
                "The buyer relaxes G1 b by goal replacement using the rule (9) in Pb, and produces pc(b1, 1G, 512M, 80G), drive, price(x), x ≤ 1200.",
                "Using (10), the following proposal is produced: pc(b1, 1G, 512M, 80G), cd-rw, price(x), x ≤ 1200.",
                "As Pb \\ { dvd-rw } has a consistent answer set satisfying the above proposal, the buyer proposes the conditional neighborhood proposal G4 b : pc(b1, 1G, 512M, 80G), cd-rw, not dvd-rw, price(x), x ≤ 1200 to the seller agent.",
                "Since Ps also has an answer set satisfying G4 b , the seller accepts it and sends the message G4 s = accept to the buyer.",
                "Thus, the negotiation ends in success. 4.",
                "COMPUTATION In this section, we provide methods of computing proposals in terms of answer sets of programs.",
                "We first introduce some definitions from [15].",
                "Definition 4.1.",
                "Given an <br>abductive program</br> P, H , the set UR of update rules is defined as: UR = { L ← not L, L ← not L | L ∈ H } ∪ { +L ← L | L ∈ H \\ P } ∪ { −L ← not L | L ∈ H ∩ P } , where L, +L, and −L are new atoms uniquely associated with every L ∈ H. The atoms +L and −L are called update atoms.",
                "By the definition, the atom L becomes true iff L is not true.",
                "The pair of rules L ← not L and L ← not L specify the situation that an abducible L is true or not.",
                "When p(x) ∈ H and p(a) ∈ P but p(t) ∈ P for t = a, the rule +L ← L precisely becomes +p(t) ← p(t) for any t = a.",
                "In this case, the rule is shortly written as +p(x) ← p(x), x = a.",
                "Generally, the rule becomes +p(x) ← p(x), x = t1, . . . , x = tn for n such instances.",
                "The rule +L ← L derives the atom +L if an abducible L which is not in P is to be true.",
                "In contrast, the rule −L ← not L derives the atom −L if an abducible L which is in P is not to be true.",
                "Thus, update atoms represent the change of truth values of abducibles in a program.",
                "That is, +L means the introduction of L, while −L means the deletion of L. When an abducible L contains variables, the associated update atom +L or −L is supposed to have exactly the same variables.",
                "In this case, an update atom is semantically identified with its ground instances.",
                "The set of all update atoms associated with the abducibles in H is denoted by UH, and UH = UH+ ∪ UH− where UH+ (resp.",
                "UH− ) is the set of update atoms of the form +L (resp. −L).",
                "Definition 4.2.",
                "Given an <br>abductive program</br> P, H , its update program UP is defined as the program UP = (P \\ H) ∪ UR .",
                "An answer set S of UP is called U-minimal if there is no answer set T of UP such that T ∩ UH ⊂ S ∩ UH.",
                "By the definition, U-minimal answer sets exist whenever UP has answer sets.",
                "Update programs are used for computing (minimal) explanations of an observation.",
                "Given an observation G as a conjunction of literals and NAF-literals possibly containing variables, we introduce a new ground literal O together with the rule O ← G. In this case, O has an explanation (E, F) iff G has the same explanation.",
                "With this replacement, an observation is assumed to be a ground literal without loss of generality.",
                "In what follows, E+ = { +L | L ∈ E } and F − = { −L | L ∈ F } for E ⊆ H and F ⊆ H. Proposition 4.1. ([15]) Let P, H be an <br>abductive program</br>, UP its update program, and G a ground literal representing an observation.",
                "Then, a pair (E, F) is an explanation of G iff UP ∪ { ← not G } has a consistent answer set S such that E+ = S ∩ UH+ and F− = S ∩ UH− .",
                "In particular, (E, F) is a minimal explanation iff S is a U-minimal answer set.",
                "Example 4.1.",
                "To explain the observation G = flies(t) in the program P of Example 2.1, first construct the update program UP of P:3 UP : flies(x) ← bird(x), not ab(x), ab(x) ← broken-wing(x) , bird(t) ← , bird(o) ← , broken-wing(x) ← not broken-wing(x), broken-wing(x) ← not broken-wing(x), +broken-wing(x) ← broken-wing(x), x = t , −broken-wing(t) ← not broken-wing(t) .",
                "Next, consider the program UP ∪ { ← not flies(t) }.",
                "It has the single U-minimal answer set: S = { bird(t), bird(o), flies(t), flies(o), broken-wing(t), broken-wing(o), −broken-wing(t) }.",
                "The unique minimal explanation (E, F) = (∅, {broken-wing(t)}) of G is expressed by the update atom −broken-wing(t) in S ∩ UH− .",
                "Proposition 4.2.",
                "Let P, H be an <br>abductive program</br> and G a ground literal representing an observation.",
                "If P ∪ { ← not G } has a consistent answer set S, G has the minimal explanation (E, F) = (∅, ∅) and S satisfies G. Now we provide methods for computing (counter-)proposals.",
                "First, conditional proposals are computed as follows. input : an <br>abductive program</br> P, H , a proposal G; output : a set Sc of proposals.",
                "If G is a ground literal, compute its minimal explanation (E, F) in P, H using the update program.",
                "Put G, E, not F in Sc.",
                "Else if G is a conjunction possibly containing variables, consider the <br>abductive program</br> 3 t represents tweety and o represents opus.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1027 P ∪{ O ← G }, H with a ground literal O. Compute a minimal explanation of O in P ∪ { O ← G }, H using its update program.",
                "If O has a minimal explanation (E, F) with a substitution θ for variables in G, put Gθ, E, not F in Sc.",
                "Next, neighborhood proposals are computed as follows. input : an <br>abductive program</br> P, H , a proposal G; output : a set Sn of proposals. % neighborhood proposals by anti-instantiation; Construct G by anti-instantiation.",
                "For a ground literal O, if P ∪ { O ← G } ∪ { ← not O } has a consistent answer set satisfying G θ with a substitution θ and G θ = G, put G θ in Sn. % neighborhood proposals by dropping conditions; Construct G by dropping conditions.",
                "If G is a ground literal and the program P ∪ { ← not G } has a consistent answer set, put G in Sn.",
                "Else if G is a conjunction possibly containing variables, do the following.",
                "For a ground literal O, if P ∪{ O ← G }∪{ ← not O } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn. % neighborhood proposals by goal replacement; Construct G by goal replacement.",
                "If G is a ground literal and there is a rule H ← B in P such that G = Hσ and Bσ = G for some substitution σ, put G = Bσ.",
                "If P ∪ { ← not G } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn.",
                "Else if G is a conjunction possibly containing variables, do the following.",
                "For a replaced literal L ∈ G , if there is a rule H ← B in P such that L = Hσ and (G \\ {L}) ∪ Bσ = G for some substitution σ, put G = (G \\ {L}) ∪ Bσ.",
                "For a ground literal O, if P ∪ { O ← G } ∪ { ← not O } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn.",
                "Theorem 4.3.",
                "The set Sc (resp.",
                "Sn) computed above coincides with the set of conditional proposals (resp. neighborhood proposals).",
                "Proof.",
                "The result for Sc follows from Definition 3.3 and Proposition 4.1.",
                "The result for Sn follows from Definition 3.5 and Proposition 4.2.",
                "Conditional neighborhood proposals are computed by combining the above two procedures.",
                "Those proposals are computed at each round.",
                "Note that the procedure for computing Sn contains some nondeterministic choices.",
                "For instance, there are generally several candidates of literals to relax in a proposal.",
                "Also, there might be several rules in a program for the usage of goal replacement.",
                "In practice, an agent can prespecify literals in a proposal for possible relaxation or rules in a program for the usage of goal replacement. 5.",
                "RELATED WORK As there are a number of literature on automated negotiation, this section focuses on comparison with negotiation frameworks based on logic and argumentation.",
                "Sadri et al. [14] use abductive logic programming as a representation language of negotiating agents.",
                "Agents negotiate using common dialogue primitives, called dialogue moves.",
                "Each agent has an abductive logic program in which a sequence of dialogues are specified by a program, a dialogue protocol is specified as constraints, and dialogue moves are specified as abducibles.",
                "The behavior of agents is regulated by an observe-think-act cycle.",
                "Once a dialogue move is uttered by an agent, another agent that observed the utterance thinks and acts using a proof procedure.",
                "Their approach and ours both employ abductive logic programming as a platform of agent reasoning, but the use of it is quite different.",
                "First, they use abducibles to specify dialogue primitives of the form tell(utterer, receiver, subject, identifier, time), while we use abducibles to specify arbitrary permissible hypotheses to construct conditional proposals.",
                "Second, a program pre-specifies a plan to carry out in order to achieve a goal, together with available/missing resources in the context of resource-exchanging problems.",
                "This is in contrast with our method in which possible counter-proposals are newly constructed in response to a proposal made by an agent.",
                "Third, they specify a negotiation policy inside a program (as integrity constraints), while we give a protocol independent of individual agents.",
                "They provide an operational model that completely specifies the behavior of agents in terms of agent cycle.",
                "We do not provide such a complete specification of the behavior of agents.",
                "Our primary interest is to mechanize construction of proposals.",
                "Bracciali and Torroni [2] formulate abductive agents that have knowledge in abductive logic programs.",
                "To explain an observation, two agents communicate by exchanging integrity constraints.",
                "In the process of communication, an agent can revise its own integrity constraints according to the information provided by the other agent.",
                "A set IC of integrity constraints relaxes a set IC (or IC tightens IC ) if any observation that can be proved with respect to IC can also be proved with respect to IC .",
                "For instance, IC : ← a, b, c relaxes IC : ← a, b.",
                "Thus, they use relaxation for weakening the constraints in an abductive logic program.",
                "In contrast, we use relaxation for weakening proposals and three different relaxation methods, anti-instantiation, dropping conditions, and goal replacement, are considered.",
                "Their goal is to explain an observation by revising integrity constraints of an agent through communication, while we use integrity constraints for communication to explain critiques and help other agents in making counter-proposals.",
                "Meyer et al. [11] introduce a logical framework for negotiating agents.",
                "They introduce two different modes of negotiation: concession and adaptation.",
                "They provide rational postulates to characterize negotiated outcomes between two agents, and describe methods for constructing outcomes.",
                "They provide logical conditions for negotiated outcomes to satisfy, but they do not describe a process of negotiation nor negotiation protocols.",
                "Moreover, they represent agents by classical propositional theories, which is different from our abductive logic programming framework.",
                "Foo et al. [5] model one-to-one negotiation as a one-time encounter between two extended logic programs.",
                "An agent offers an answer set of its program, and their mutual deal is regarded as a trade on their answer sets.",
                "Starting from the initial agreement set S∩T for an answer set S of an agent and an answer set T of another agent, each agent extends this set to reflect its own demand while keeping consistency with demand of the other agent.",
                "Their algorithm returns new programs having answer sets which are consistent with each other and keep the agreement set.",
                "The work is extended to repeated encounters in [3].",
                "In their framework, two agents exchange answer sets to produce a common belief set, which is different from our framework of exchanging proposals.",
                "There are a number of proposals for negotiation based 1028 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) on argumentation.",
                "An advantage of argumentation-based negotiation is that it constructs a proposal with arguments supporting the proposal [1].",
                "The existence of arguments is useful to convince other agents of reasons why an agent offers (counter-)proposals or returns critiques.",
                "Parsons et al. [13] develop a logic of argumentation-based negotiation among BDI agents.",
                "In one-to-one negotiation, an agent A generates a proposal together with its arguments, and passes it to another agent B.",
                "The proposal is evaluated by B which attempts to build arguments against it.",
                "If it conflicts with Bs interest, B informs A of its objection by sending back its attacking argument.",
                "In response to this, A tries to find an alternative way of achieving its original objective, or a way of persuading B to drop its objection.",
                "If either type of argument can be found, A will submit it to B.",
                "If B finds no reason to reject the new proposal, it will be accepted and the negotiation ends in success.",
                "Otherwise, the process is iterated.",
                "In this negotiation processes, the agent A never changes its original objective, so that negotiation ends in failure if A fails to find an alternative way of achieving the original objective.",
                "In our framework, when a proposal is rejected by another agent, an agent can weaken or change its objective by abduction and relaxation.",
                "Our framework does not have a mechanism of argumentation, but reasons for critiques can be informed by responding critique sets.",
                "Kakas and Moraitis [10] propose a negotiation protocol which integrates abduction within an argumentation framework.",
                "A proposal contains an offer corresponding to the negotiation object, together with supporting information representing conditions under which this offer is made.",
                "Supporting information is computed by abduction and is used for constructing conditional arguments during the process of negotiation.",
                "In their negotiation protocol, when an agent cannot satisfy its own goal, the agent considers the other agents goal and searches for conditions under which the goal is acceptable.",
                "Our present approach differs from theirs in the following points.",
                "First, they use abduction to seek conditions to support arguments, while we use abduction to seek conditions for proposals to accept.",
                "Second, in their negotiation protocol, counter-proposals are chosen among candidates based on preference knowledge of an agent at meta-level, which represents policy under which an agent uses its object-level decision rules according to situations.",
                "In our framework, counter-proposals are newly constructed using abduction and relaxation.",
                "The method of construction is independent of particular negotiation protocols.",
                "As [2, 10, 14], abduction or abductive logic programming used in negotiation is mostly based on normal abduction.",
                "In contrast, our approach is based on extended abduction which can not only introduce hypotheses but remove them from a program.",
                "This is another important difference.",
                "Relaxation and neighborhood query answering are devised to make databases cooperative with their users [4, 6].",
                "In this sense, those techniques have the spirit similar to cooperative problem solving in multi-agent systems.",
                "As far as the authors know, however, there is no study which applies those technique to agent negotiation. 6.",
                "CONCLUSION In this paper we proposed a logical framework for negotiating agents.",
                "To construct proposals in the process of negotiation, we combined the techniques of extended abduction and relaxation.",
                "It was shown that these two operations are used for general inference rules in producing proposals.",
                "We developed a negotiation protocol between two agents based on exchange of proposals and critiques, and provided procedures for computing proposals in abductive logic programming.",
                "This enables us to realize automated negotiation on top of the existing answer set solvers.",
                "The present framework does not have a mechanism of selecting an optimal (counter-)proposal among different alternatives.",
                "To compare and evaluate proposals, an agent must have preference knowledge of candidate proposals.",
                "Further elaboration to maximize the utility of agents is left for future study. 7.",
                "REFERENCES [1] L. Amgoud, S. Parsons, and N. Maudet.",
                "Arguments, dialogue, and negotiation.",
                "In: Proc.",
                "ECAI-00, pp. 338-342, IOS Press, 2000. [2] A. Bracciali and P. Torroni.",
                "A new framework for knowledge revision of abductive agents through their interaction.",
                "In: Proc.",
                "CLIMA-IV, Computational Logic in Multi-Agent Systems, LNAI 3259, pp. 159-177, 2004. [3] W. Chen, M. Zhang, and N. Foo.",
                "Repeated negotiation of logic programs.",
                "In: Proc. 7th Workshop on Nonmonotonic Reasoning, Action and Change, 2006. [4] W. W. Chu, Q. Chen, and R.-C. Lee.",
                "Cooperative query answering via type abstraction hierarchy.",
                "In: Cooperating Knowledge Based Systems, S. M. Deen ed., pp. 271-290, Springer, 1990. [5] N. Foo, T. Meyer, Y. Zhang, and D. Zhang.",
                "Negotiating logic programs.",
                "In: Proc. 6th Workshop on Nonmonotonic Reasoning, Action and Change, 2005. [6] T. Gaasterland, P. Godfrey, and J. Minker.",
                "Relaxation as a platform for cooperative answering.",
                "Journal of Intelligence Information Systems 1(3/4):293-321, 1992. [7] M. Gelfond and V. Lifschitz.",
                "Classical negation in logic programs and disjunctive databases.",
                "New Generation Computing 9:365-385, 1991. [8] K. Inoue and C. Sakama.",
                "Abductive framework for nonmonotonic theory change.",
                "In: Proc.",
                "IJCAI-95, pp. 204-210, Morgan Kaufmann. [9] A. C. Kakas, R. A. Kowalski, and F. Toni, The role of abduction in logic programming.",
                "In: Handbook of Logic in AI and Logic Programming, D. M. Gabbay, et al. (eds), vol. 5, pp. 235-324, Oxford University Press, 1998. [10] A. C. Kakas and P. Moraitis.",
                "Adaptive agent negotiation via argumentation.",
                "In: Proc.",
                "AAMAS-06, pp. 384-391, ACM Press. [11] T. Meyer, N. Foo, R. Kwok, and D. Zhang.",
                "Logical foundation of negotiation: outcome, concession and adaptation.",
                "In: Proc.",
                "AAAI-04, pp. 293-298, MIT Press. [12] R. S. Michalski.",
                "A theory and methodology of inductive learning.",
                "In: Machine Learning: An Artificial Intelligence Approach, R. S. Michalski, et al. (eds), pp. 83-134, Morgan Kaufmann, 1983. [13] S. Parsons, C. Sierra and N. Jennings.",
                "Agents that reason and negotiate by arguing.",
                "Journal of Logic and Computation, 8(3):261-292, 1988. [14] F. Sadri, F. Toni, and P. Torroni, An abductive logic programming architecture for negotiating agents.",
                "In: Proc. 8th European Conf. on Logics in AI, LNAI 2424, pp. 419-431, Springer, 2002. [15] C. Sakama and K. Inoue.",
                "An abductive framework for computing knowledge base updates.",
                "Theory and Practice of Logic Programming 3(6):671-715, 2003.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1029"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Un \"programa abductivo\" es un par P, H donde P es un EDP y H es un conjunto de literales llamados Abducibles.",
                "Un \"programa abductivo\" P, H es consistente si P es consistente.",
                "Sea P, H un \"programa abductivo\" y G A una conjunción como se indicó anteriormente.",
                "E y F son conjuntos de literales terrestres de tal manera que E ⊆ H \\ P y F ⊆ H ∩ P. Cuando (p \\ f) ∪ e tiene un conjunto de respuestas que satisface las tres condiciones anteriores, S se llama un conjunto de creencias de un \"Programa Abductive \"P, H satisfacer G (con respecto a (E, F)).",
                "Considere el \"Programa Abductive\" P, H: P: Flies (X) ← Bird (X), no AB (X), AB (X) ← Broken-Wing (X), Bird (Tweety) ←, Bird (Opus)←, ala rota (tweety) ←.",
                "Negociación 3.1 Propuestas condicionales por secuestro Suponemos un agente que tiene una base de conocimiento representada por un \"programa abductivo\" P, H.",
                "Se acepta una propuesta G en un \"programa abductivo\" P, H Si P tiene un conjunto de respuestas que satisface a G. Cuando no se acepta una propuesta, el abducción se usa para buscar condiciones para hacerlo aceptable.",
                "Sea P, H un \"programa abductivo\" y G una propuesta.",
                "Sea P, H un \"programa abductivo\" y G una propuesta.",
                "La Universidad tiene el \"Programa Abductive\" P, H: P: Salario (40, 000) ← Asistencia (Departamento de Compt), no tiene doctorado, salario (60, 000) ← Assist (departamento de compt), tiene doctorado, salario (50, 000) ← Asistencia (Departamento de Matemáticas), salario (55, 000) ← Administrador del sistema (departamento de compt), 2 para conveniencia de notación, a menudo incluimos ecuaciones matemáticas (in) en propuestas/programas.",
                "Sea P, H un \"programa abductivo\" y G una propuesta.",
                "Sea P, H un \"programa abductivo\" y G una propuesta.1.",
                "Sea P, H un \"programa abductivo\" y G una propuesta.1.",
                "Deje que P1, H1 sea un \"programa abductivo\" de un agente AG1 y GI 2, una propuesta hecha por AG2 en la ronda I-Th.",
                "Sea PK, HK un \"programa abductivo\" de un agente AGK y GJ una propuesta, que no es una crítica, realizada por ningún agente en la ronda J (≤ I).",
                "Cuando un \"programa abductivo\" está libre de funciones, los abducibles y los conjuntos de negociación son finitos.",
                "Un agente de vendedores tiene el \"programa abductivo\" PS, HS en el que PS consiste en creencias BS y deseo DS: BS: PC (B1, 1G, 512M, 80G);PC (B2, 1G, 512M, 80G) ←, (1) DVD-RW;CD-RW ←, (2) DS: Precio normal (1300) ← PC (B1, 1G, 512m, 80G), DVD-RW, (3) Precio normal (1200) ← PC (B1, 1G, 512M, 80G), CD-RW, (4) Precio normal (1200) ← PC (B2, 1G, 512M, 80G), DVD-RW, (5) Precio (x) ← Precio normal (x), agregar punto, (6) precio(x ∗ 0.9) ← Precio normal (x), pagar en efectivo, no agregar punto, (7) Agregar punto ←, (8) HS: Agregar punto, pagar en efectivo.",
                "Un agente de compradores tiene el \"programa abductivo\" PB, HB en el que PB consiste en creencias BB y Desire DB: BB: Drive ← DVD-RW, (9) Drive ← CD-RW, (10) Precio (X) ←, (((((((11) DB: PC (B1, 1G, 512m, 80G) ←, (12) DVD-RW ←, (13) CD-RW ← No DVD-RW, (14) ← Pague en efectivo, (15) ← Precio (x), x> 1200, (16) Hb: DVD-RW.",
                "Dado un \"programa abductivo\" P, H, el conjunto UR de reglas de actualización se define como: ur = {l ← no l, l ← no l |L ∈ H} ∪ { +l ← L |L ∈ H \\ p} ∪ {−l ← no l |L ∈ H ∩ P}, donde L, +L y −l son átomos nuevos asociados de manera única con cada l ∈ H. Los átomos +L y −l se denominan átomos de actualización.",
                "Dado un \"programa abductivo\" P, H, su programa de actualización se define como el programa UP = (P \\ H) ∪ Ur.",
                "En lo que sigue, e + = { + l |L ∈ E} y f - = {−l |L ∈ F} para E ⊆ H y F ⊆ H. Proposición 4.1.([15]) Sea P, H un \"programa abductivo\", en su programa de actualización y G un terreno que representa una observación.",
                "Sea P, H un \"programa abductivo\" y G un terreno literal que represente una observación.",
                "Primero, las propuestas condicionales se calculan de la siguiente manera.Entrada: un \"programa abductivo\" P, H, una propuesta G;Salida: un SC establecido de propuestas.",
                "De lo contrario, si G es una conjunción que posiblemente contiene variables, considere el \"programa abductivo\" 3 t representa tweety y o representa opus.",
                "A continuación, las propuestas del vecindario se calculan de la siguiente manera.Entrada: un \"programa abductivo\" P, H, una propuesta G;Salida: un SN establecido de propuestas.% propuestas del vecindario por anti-instanciación;Construir g por anti-instanciación."
            ],
            "translated_text": "",
            "candidates": [
                "programa abductivo",
                "programa abductivo",
                "programa abductivo",
                "programa abductivo",
                "programa abductivo",
                "programa abductivo",
                "programa abductivo",
                "Programa Abductive ",
                "programa abductivo",
                "Programa Abductive",
                "programa abductivo",
                "programa abductivo",
                "programa abductivo",
                "programa abductivo",
                "programa abductivo",
                "programa abductivo",
                "programa abductivo",
                "programa abductivo",
                "programa abductivo",
                "Programa Abductive",
                "programa abductivo",
                "programa abductivo",
                "Programa Abductive",
                "programa abductivo",
                "Programa Abductive",
                "programa abductivo",
                "programa abductivo",
                "programa abductivo",
                "programa abductivo",
                "programa abductivo",
                "programa abductivo",
                "programa abductivo",
                "programa abductivo",
                "programa abductivo",
                "programa abductivo",
                "programa abductivo",
                "programa abductivo",
                "programa abductivo",
                "programa abductivo",
                "programa abductivo",
                "programa abductivo",
                "programa abductivo",
                "programa abductivo",
                "programa abductivo",
                "programa abductivo",
                "programa abductivo",
                "programa abductivo",
                "programa abductivo",
                "programa abductivo",
                "programa abductivo"
            ],
            "error": []
        },
        "dropping condition": {
            "translated_key": "condición de caída",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Negotiation by Abduction and Relaxation Chiaki Sakama Dept.",
                "Computer and Communication Sciences Wakayama University Sakaedani, Wakayama 640 8510, Japan sakama@sys.wakayama-u.ac.jp Katsumi Inoue National Institute of Informatics 2-1-2 Hitotsubashi, Chiyoda-ku Tokyo 101 8430, Japan ki@nii.ac.jp ABSTRACT This paper studies a logical framework for automated negotiation between two agents.",
                "We suppose an agent who has a knowledge base represented by a logic program.",
                "Then, we introduce methods of constructing counter-proposals in response to proposals made by an agent.",
                "To this end, we combine the techniques of extended abduction in artificial intelligence and relaxation in cooperative query answering for databases.",
                "These techniques are respectively used for producing conditional proposals and neighborhood proposals in the process of negotiation.",
                "We provide a negotiation protocol based on the exchange of these proposals and develop procedures for computing new proposals.",
                "Categories and Subject Descriptors F.4.1 [Mathematical Logic]: Logic and constraint programming;; I.2.11 [Distributed Artificial Intelligence]: Multiagent systems General Terms Theory 1.",
                "INTRODUCTION Automated negotiation has been received increasing attention in multi-agent systems, and a number of frameworks have been proposed in different contexts ([1, 2, 3, 5, 10, 11, 13, 14], for instance).",
                "Negotiation usually proceeds in a series of rounds and each agent makes a proposal at every round.",
                "An agent that received a proposal responds in two ways.",
                "One is a critique which is a remark as to whether or not (parts of) the proposal is accepted.",
                "The other is a counter-proposal which is an alternative proposal made in response to a previous proposal [13].",
                "To see these proposals in one-to-one negotiation, suppose the following negotiation dialogue between a buyer agent B and a seller agent S. (Bi (or Si) represents an utterance of B (or S) in the i-th round.)",
                "B1: I want to buy a personal computer of the brand b1, with the specification of CPU:1GHz, Memory:512MB, HDD: 80GB, and a DVD-RW driver.",
                "I want to get it at the price under 1200 USD.",
                "S1: We can provide a PC with the requested specification if you pay for it by cash.",
                "In this case, however, service points are not added for this special discount.",
                "B2: I cannot pay it by cash.",
                "S2: In a normal price, the requested PC costs 1300 USD.",
                "B3: I cannot accept the price.",
                "My budget is under 1200 USD.",
                "S3: We can provide another computer with the requested specification, except that it is made by the brand b2.",
                "The price is exactly 1200 USD.",
                "B4: I do not want a PC of the brand b2.",
                "Instead, I can downgrade a driver from DVD-RW to CD-RW in my initial proposal.",
                "S4: Ok, I accept your offer.",
                "In this dialogue, in response to the opening proposal B1, the counter-proposal S1 is returned.",
                "In the rest of the dialogue, B2, B3, S4 are critiques, while S2, S3, B4 are counterproposals.",
                "Critiques are produced by evaluating a proposal in a knowledge base of an agent.",
                "In contrast, making counter-proposals involves generating an alternative proposal which is more favorable to the responding agent than the original one.",
                "It is known that there are two ways of producing counterproposals: extending the initial proposal or amending part of the initial proposal.",
                "According to [13], the first type appears in the dialogue: A: I propose that you provide me with service X.",
                "B: I propose that I provide you with service X if you provide me with service Z.",
                "The second type is in the dialogue: A: I propose that I provide you with service Y if you provide me with service X.",
                "B: I propose that I provide you with service X if you provide me with service Z.",
                "A negotiation proceeds by iterating such give-andtake dialogues until it reaches an agreement/disagreement.",
                "In those dialogues, agents generate (counter-)proposals by reasoning on their own goals or objectives.",
                "The objective of the agent A in the above dialogues is to obtain service X.",
                "The agent B proposes conditions to provide the service.",
                "In the process of negotiation, however, it may happen that agents are obliged to weaken or change their initial goals to reach a negotiated compromise.",
                "In the dialogue of 1022 978-81-904262-7-5 (RPS) c 2007 IFAAMAS a buyer agent and a seller agent presented above, a buyer agent changes its initial goal by downgrading a driver from DVD-RW to CD-RW.",
                "Such behavior is usually represented as specific meta-knowledge of an agent or specified as negotiation protocols in particular problems.",
                "Currently, there is no computational logic for automated negotiation which has general inference rules for producing (counter-)proposals.",
                "The purpose of this paper is to mechanize a process of building (counter-)proposals in one-to-one negotiation dialogues.",
                "We suppose an agent who has a knowledge base represented by a logic program.",
                "We then introduce methods for generating three different types of proposals.",
                "First, we use the technique of extended abduction in artificial intelligence [8, 15] to construct a conditional proposal as an extension of the original one.",
                "Second, we use the technique of relaxation in cooperative query answering for databases [4, 6] to construct a neighborhood proposal as an amendment of the original one.",
                "Third, combining extended abduction and relaxation, conditional neighborhood proposals are constructed as amended extensions of the original proposal.",
                "We develop a negotiation protocol between two agents based on the exchange of these counter-proposals and critiques.",
                "We also provide procedures for computing proposals in logic programming.",
                "This paper is organized as follows.",
                "Section 2 introduces a logical framework used in this paper.",
                "Section 3 presents methods for constructing proposals, and provides a negotiation protocol.",
                "Section 4 provides methods for computing proposals in logic programming.",
                "Section 5 discusses related works, and Section 6 concludes the paper. 2.",
                "PRELIMINARIES Logic programs considered in this paper are extended disjunctive programs (EDP) [7].",
                "An EDP (or simply a program) is a set of rules of the form: L1 ; · · · ; Ll ← Ll+1 , . . . , Lm, not Lm+1 , . . . , not Ln (n ≥ m ≥ l ≥ 0) where each Li is a positive/negative literal, i.e., A or ¬A for an atom A, and not is negation as failure (NAF). not L is called an NAF-literal.",
                "The symbol ; represents disjunction.",
                "The left-hand side of the rule is the head, and the right-hand side is the body.",
                "For each rule r of the above form, head(r), body+ (r) and body− (r) denote the sets of literals {L1, . . . , Ll}, {Ll+1, . . . , Lm}, and {Lm+1, . . . , Ln}, respectively.",
                "Also, not body− (r) denotes the set of NAF-literals {not Lm+1, . . . , not Ln}.",
                "A disjunction of literals and a conjunction of (NAF-)literals in a rule are identified with its corresponding sets of literals.",
                "A rule r is often written as head(r) ← body+ (r), not body− (r) or head(r) ← body(r) where body(r) = body+ (r)∪not body− (r).",
                "A rule r is disjunctive if head(r) contains more than one literal.",
                "A rule r is an integrity constraint if head(r) = ∅; and r is a fact if body(r) = ∅.",
                "A program is NAF-free if no rule contains NAF-literals.",
                "Two rules/literals are identified with respect to variable renaming.",
                "A substitution is a mapping from variables to terms θ = {x1/t1, . . . , xn/tn}, where x1, . . . , xn are distinct variables and each ti is a term distinct from xi.",
                "Given a conjunction G of (NAF-)literals, Gθ denotes the conjunction obtained by applying θ to G. A program, rule, or literal is ground if it contains no variable.",
                "A program P with variables is a shorthand of its ground instantiation Ground(P), the set of ground rules obtained from P by substituting variables in P by elements of its Herbrand universe in every possible way.",
                "The semantics of an EDP is defined by the answer set semantics [7].",
                "Let Lit be the set of all ground literals in the language of a program.",
                "Suppose a program P and a set of literals S(⊆ Lit).",
                "Then, the reduct P S is the program which contains the ground rule head(r) ← body+ (r) iff there is a rule r in Ground(P) such that body− (r)∩S = ∅.",
                "Given an NAF-free EDP P, Cn(P) denotes the smallest set of ground literals which is (i) closed under P, i.e., for every ground rule r in Ground(P), body(r) ⊆ Cn(P) implies head(r) ∩ Cn(P) = ∅; and (ii) logically closed, i.e., it is either consistent or equal to Lit.",
                "Given an EDP P and a set S of literals, S is an answer set of P if S = Cn(P S ).",
                "A program has none, one, or multiple answer sets in general.",
                "An answer set is consistent if it is not Lit.",
                "A program P is consistent if it has a consistent answer set; otherwise, P is inconsistent.",
                "Abductive logic programming [9] introduces a mechanism of hypothetical reasoning to logic programming.",
                "An abductive framework used in this paper is the extended abduction introduced by Inoue and Sakama [8, 15].",
                "An abductive program is a pair P, H where P is an EDP and H is a set of literals called abducibles.",
                "When a literal L ∈ H contains variables, any instance of L is also an abducible.",
                "An abductive program P, H is consistent if P is consistent.",
                "Throughout the paper, abductive programs are assumed to be consistent unless stated otherwise.",
                "Let G = L1, . . . , Lm, not Lm+1, . . . , not Ln be a conjunction, where all variables in G are existentially quantified at the front and range-restricted, i.e., every variable in Lm+1, . . . , Ln appears in L1, . . . , Lm.",
                "A set S of ground literals satisfies the conjunction G if { L1θ, . . . , Lmθ } ⊆ S and { Lm+1θ, . . . , Lnθ }∩ S = ∅ for some ground instance Gθ with a substitution θ.",
                "Let P, H be an abductive program and G a conjunction as above.",
                "A pair (E, F) is an explanation of an observation G in P, H if1 1. (P \\ F) ∪ E has an answer set which satisfies G, 2. (P \\ F) ∪ E is consistent, 3.",
                "E and F are sets of ground literals such that E ⊆ H\\P and F ⊆ H ∩ P. When (P \\ F) ∪ E has an answer set S satisfying the above three conditions, S is called a belief set of an abductive program P, H satisfying G (with respect to (E, F)).",
                "Note that if P has a consistent answer set S satisfying G, S is also a belief set of P, H satisfying G with respect to (E, F) = (∅, ∅).",
                "Extended abduction introduces/removes hypotheses to/from a program to explain an observation.",
                "Note that normal abduction (as in [9]) considers only introducing hypotheses to explain an observation.",
                "An explanation (E, F) of an observation G is called minimal if for any explanation (E , F ) of G, E ⊆ E and F ⊆ F imply E = E and F = F. Example 2.1.",
                "Consider the abductive program P, H : P : flies(x) ← bird(x), not ab(x) , ab(x) ← broken-wing(x) , bird(tweety) ← , bird(opus) ← , broken-wing(tweety) ← .",
                "H : broken-wing(x) .",
                "The observation G = flies(tweety) has the minimal explanation (E, F) = (∅, {broken-wing(tweety)}). 1 This defines credulous explanations [15].",
                "Skeptical explanations are used in [8].",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1023 3.",
                "NEGOTIATION 3.1 Conditional Proposals by Abduction We suppose an agent who has a knowledge base represented by an abductive program P, H .",
                "A program P consists of two types of knowledge, belief B and desire D, where B represents objective knowledge of an agent, while D represents subjective knowledge in general.",
                "We define P = B ∪ D, but do not distinguish B and D if such distinction is not important in the context.",
                "In contrast, abducibles H are used for representing permissible conditions to make a compromise in the process of negotiation.",
                "Definition 3.1.",
                "A proposal G is a conjunction of literals and NAF-literals: L1, . . . , Lm, not Lm+1, . . . , not Ln where every variable in G is existentially quantified at the front and range-restricted.",
                "In particular, G is called a critique if G = accept or G = reject where accept and reject are the reserved propositions.",
                "A counter-proposal is a proposal made in response to a proposal.",
                "Definition 3.2.",
                "A proposal G is accepted in an abductive program P, H if P has an answer set satisfying G. When a proposal is not accepted, abduction is used for seeking conditions to make it acceptable.",
                "Definition 3.3.",
                "Let P, H be an abductive program and G a proposal.",
                "If (E, F) is a minimal explanation of Gθ for some substitution θ in P, H , the conjunction G : Gθ, E, not F is called a conditional proposal (for G), where E, not F represents the conjunction: A1, . . . , Ak, not Ak+1, . . . , not Al for E = {A1, . . . , Ak} and F = { Ak+1, . . . , Al }.",
                "Proposition 3.1.",
                "Let P, H be an abductive program and G a proposal.",
                "If G is a conditional proposal, there is a belief set S of P, H satisfying G .",
                "Proof.",
                "When G = Gθ, E, not F, (P \\ F) ∪ E has a consistent answer set S satisfying Gθ and E ∩ F = ∅.",
                "In this case, S satisfies Gθ, E, not F. A conditional proposal G provides a minimal requirement for accepting the proposal G. If Gθ has multiple minimal explanations, several conditional proposals exist accordingly.",
                "When (E, F) = (∅, ∅), a conditional proposal is used as a new proposal made in response to the proposal G. Example 3.1.",
                "An agent seeks a position of a research assistant at the computer department of a university with the condition that the salary is at least 50,000 USD per year.",
                "The agent makes his/her request as the proposal:2 G = assist(compt dept), salary(x), x ≥ 50, 000.",
                "The university has the abductive program P, H : P : salary(40, 000) ← assist(compt dept), not has PhD, salary(60, 000) ← assist(compt dept), has PhD, salary(50, 000) ← assist(math dept), salary(55, 000) ← system admin(compt dept), 2 For notational convenience, we often include mathematical (in)equations in proposals/programs.",
                "They are written by literals, for instance, x ≥ y by geq(x, y) with a suitable definition of the predicate geq. employee(x) ← assist(x), employee(x) ← system admin(x), assist(compt dept); assist(math dept) ; system admin(compt dept) ←, H : has PhD, where available positions are represented by disjunction.",
                "According to P, the base salary of a research assistant at the computer department is 40,000 USD, but if he/she has PhD, it is 60,000 USD.",
                "In this case, (E, F) = ({has PhD}, ∅) becomes the minimal explanation of Gθ = assist(compt dept), salary(60, 000) with θ = { x/60, 000 }.",
                "Then, the conditional proposal made by the university becomes assist(compt dept), salary(60, 000), has PhD . 3.2 Neighborhood Proposals by Relaxation When a proposal is unacceptable, an agent tries to construct a new counter-proposal by weakening constraints in the initial proposal.",
                "We use techniques of relaxation for this purpose.",
                "Relaxation is used as a technique of cooperative query answering in databases [4, 6].",
                "When an original query fails in a database, relaxation expands the scope of the query by relaxing the constraints in the query.",
                "This allows the database to return neighborhood answers which are related to the original query.",
                "We use the technique for producing proposals in the process of negotiation.",
                "Definition 3.4.",
                "Let P, H be an abductive program and G a proposal.",
                "Then, G is relaxed to G in the following three ways: Anti-instantiation: Construct G such that G θ = G for some substitution θ.",
                "Dropping conditions: Construct G such that G ⊂ G. Goal replacement: If G is a conjunction G1, G2, where G1 and G2 are conjunctions, and there is a rule L ← G1 in P such that G1θ = G1 for some substitution θ, then build G as Lθ, G2.",
                "Here, Lθ is called a replaced literal.",
                "In each case, every variable in G is existentially quantified at the front and range-restricted.",
                "Anti-instantiation replaces constants (or terms) with fresh variables.",
                "Dropping conditions eliminates some conditions in a proposal.",
                "Goal replacement replaces the condition G1 in G with a literal Lθ in the presence of a rule L ← G1 in P under the condition G1θ = G1.",
                "All these operations generalize proposals in different ways.",
                "Each G obtained by these operations is called a relaxation of G. It is worth noting that these operations are also used in the context of inductive generalization [12].",
                "The relaxed proposal can produce new offers which are neighbor to the original proposal.",
                "Definition 3.5.",
                "Let P, H be an abductive program and G a proposal. 1.",
                "Let G be a proposal obtained by anti-instantiation.",
                "If P has an answer set S which satisfies G θ for some substitution θ and G θ = G, G θ is called a neighborhood proposal by anti-instantiation. 2.",
                "Let G be a proposal obtained by <br>dropping condition</br>s.",
                "If P has an answer set S which satisfies G θ for some substitution θ, G θ is called a neighborhood proposal by <br>dropping condition</br>s. 1024 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.",
                "Let G be a proposal obtained by goal replacement.",
                "For a replaced literal L ∈ G and a rule H ← B in P such that L = Hσ and (G \\ {L}) ∪ Bσ = G for some substitution σ, put G = (G \\ {L}) ∪ Bσ.",
                "If P has an answer set S which satisfies G θ for some substitution θ, G θ is called a neighborhood proposal by goal replacement.",
                "Example 3.2. (cont.",
                "Example 3.1) Given the proposal G = assist(compt dept), salary(x), x ≥ 50, 000, • G1 = assist(w), salary(x), x ≥ 50, 000 is produced by substituting compt dept with a variable w. As G1θ1 = assist(math dept), salary(50, 000) with θ1 = { w/math dept } is satisfied by an answer set of P, G1θ1 becomes a neighborhood proposal by anti-instantiation. • G2 = assist(compt dept), salary(x) is produced by dropping the salary condition x ≥ 50, 000.",
                "As G2θ2 = assist(compt dept), salary(40, 000) with θ2 = { x/40, 000 } is satisfied by an answer set of P, G2θ2 becomes a neighborhood proposal by <br>dropping condition</br>s. • G3 = employee(compt dept), salary(x), x ≥ 50, 000 is produced by replacing assist(compt dept) with employee(compt dept) using the rule employee(x) ← assist(x) in P. By G3 and the rule employee(x) ← system admin(x) in P, G3 = sys admin(compt dept), salary(x), x ≥ 50, 000 is produced.",
                "As G3 θ3 = sys admin(compt dept), salary(55, 000) with θ3 = { x/55, 000 } is satisfied by an answer set of P, G3 θ3 becomes a neighborhood proposal by goal replacement.",
                "Finally, extended abduction and relaxation are combined to produce conditional neighborhood proposals.",
                "Definition 3.6.",
                "Let P, H be an abductive program and G a proposal. 1.",
                "Let G be a proposal obtained by either anti-instantiation or <br>dropping condition</br>s.",
                "If (E, F) is a minimal explanation of G θ(= G) for some substitution θ, the conjunction G θ, E, not F is called a conditional neighborhood proposal by anti-instantiation/<br>dropping condition</br>s. 2.",
                "Let G be a proposal obtained by goal replacement.",
                "Suppose G as in Definition 3.5(3).",
                "If (E, F) is a minimal explanation of G θ for some substitution θ, the conjunction G θ, E, not F is called a conditional neighborhood proposal by goal replacement.",
                "A conditional neighborhood proposal reduces to a neighborhood proposal when (E, F) = (∅, ∅). 3.3 Negotiation Protocol A negotiation protocol defines how to exchange proposals in the process of negotiation.",
                "This section presents a negotiation protocol in our framework.",
                "We suppose one-to-one negotiation between two agents who have a common ontology and the same language for successful communication.",
                "Definition 3.7.",
                "A proposal L1, ..., Lm, not Lm+1, ..., not Ln violates an integrity constraint ← body+ (r), not body− (r) if for any substitution θ, there is a substitution σ such that body+ (r)σ ⊆ { L1θ, . . . , Lmθ }, body− (r)σ∩{ L1θ, . . . , Lmθ } = ∅, and body− (r)σ ⊆ { Lm+1θ, . . . , Lnθ }.",
                "Integrity constraints are conditions which an agent should satisfy, so that they are used to explain why an agent does not accept a proposal.",
                "A negotiation proceeds in a series of rounds.",
                "Each i-th round (i ≥ 1) consists of a proposal Gi 1 made by one agent Ag1 and another proposal Gi 2 made by the other agent Ag2.",
                "Definition 3.8.",
                "Let P1, H1 be an abductive program of an agent Ag1 and Gi 2 a proposal made by Ag2 at the i-th round.",
                "A critique set of Ag1 (at the i-th round) is a set CSi 1(P1, Gj 2) = CSi−1 1 (P1, Gj−1 2 ) ∪ { r | r is an integrity constraint in P1 and Gj 2 violates r } where j = i − 1 or i, and CS0 1 (P1, G0 2) = CS1 1 (P1, G0 2) = ∅.",
                "A critique set of an agent Ag1 accumulates integrity constraints which are violated by proposals made by another agent Ag2.",
                "CSi 2(P2, Gj 1) is defined in the same manner.",
                "Definition 3.9.",
                "Let Pk, Hk be an abductive program of an agent Agk and Gj a proposal, which is not a critique, made by any agent at the j(≤ i)-th round.",
                "A negotiation set of Agk (at the i-th round) is a triple NSi k = (Si c, Si n, Si cn), where Si c is the set of conditional proposals, Si n is the set of neighborhood proposals, and Si cn is the set of conditional neighborhood proposals, produced by Gj and Pk, Hk .",
                "A negotiation set represents the space of possible proposals made by an agent.",
                "Si x (x ∈ {c, n, cn}) accumulates proposals produced by Gj (1 ≤ j ≤ i) according to Definitions 3.3, 3.5, and 3.6.",
                "Note that an agent can construct counter-proposals by modifying its own previous proposals or another agents proposals.",
                "An agent Agk accumulates proposals that are made by Agk but are rejected by another agent, in the failed proposal set FP i k (at the i-th round), where FP 0 k = ∅.",
                "Suppose two agents Ag1 and Ag2 who have abductive programs P1, H1 and P2, H2 , respectively.",
                "Given a proposal G1 1 which is satisfied by an answer set of P1, a negotiation starts.",
                "In response to the proposal Gi 1 made by Ag1 at the i-th round, Ag2 behaves as follows. 1.",
                "If Gi 1 = accept, an agreement is reached and negotiation ends in success. 2.",
                "Else if Gi 1 = reject, put FP i 2 = FPi−1 2 ∪{Gi−1 2 } where {G0 2} = ∅.",
                "Proceed to the step 4(b). 3.",
                "Else if P2 has an answer set satisfying Gi 1, Ag2 returns Gi 2 = accept to Ag1.",
                "Negotiation ends in success. 4.",
                "Otherwise, Ag2 behaves as follows.",
                "Put FP i 2 = FPi−1 2 . (a) If Gi 1 violates an integrity constraint in P2, return the critique Gi 2 = reject to Ag1, together with the critique set CSi 2(P2, Gi 1). (b) Otherwise, construct NSi 2 as follows. (i) Produce Si c. Let μ(Si c) = { p | p ∈ Si c \\ FPi 2 and p satisfies the constraints in CSi 1(P1, Gi−1 2 )}.",
                "If μ(Si c) = ∅, select one from μ(Si c) and propose it as Gi 2 to Ag1; otherwise, go to (ii). (ii) Produce Si n. If μ(Si n) = ∅, select one from μ(Si n) and propose it as Gi 2 to Ag1; otherwise, go to (iii). (iii) Produce Si cn.",
                "If μ(Si cn) = ∅, select one from μ(Si cn) and propose it as Gi 2 to Ag1; otherwise, negotiation ends in failure.",
                "This means that Ag2 can make no counter-proposal or every counterproposal made by Ag2 is rejected by Ag1.",
                "In the step 4(a), Ag2 rejects the proposal Gi 1 and returns the reason of rejection as a critique set.",
                "This helps for Ag1 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1025 in preparing a next counter-proposal.",
                "In the step 4(b), Ag2 constructs a new proposal.",
                "In its construction, Ag2 should take care of the critique set CSi 1(P1, Gi−1 2 ), which represents integrity constraints, if any, accumulated in previous rounds, that Ag1 must satisfy.",
                "Also, FP i 2 is used for removing proposals which have been rejected.",
                "Construction of Si x (x ∈ {c, n, cn}) in NSi 2 is incrementally done by adding new counter-proposals produced by Gi 1 or Gi−1 2 to Si−1 x .",
                "For instance, Si n in NSi 2 is computed as Si n = Si−1 n ∪{ p | p is a neighborhood proposal made by Gi 1 } ∪ { p | p is a neighborhood proposal made by Gi−1 2 }, where S0 n = ∅.",
                "That is, Si n is constructed from Si−1 n by adding new proposals which are obtained by modifying the proposal Gi 1 made by Ag1 at the i-th round or modifying the proposal Gi−1 2 made by Ag2 at the (i − 1)-th round.",
                "Si c and Si cn are obtained as well.",
                "In the above protocol, an agent produces Si c at first, secondly Si n, and finally Si cn.",
                "This strategy seeks conditions which satisfy the given proposal, prior to neighborhood proposals which change the original one.",
                "Another strategy, which prefers neighborhood proposals to conditional ones, is also considered.",
                "Conditional neighborhood proposals are to be considered in the last place, since they differ from the original one to the maximal extent.",
                "The above protocol produces the candidate proposals in Si x for each x ∈ {c, n, cn} at once.",
                "We can consider a variant of the protocol in which each proposal in Si x is constructed one by one (see Example 3.3).",
                "The above protocol is repeatedly applied to each one of the two negotiating agents until a negotiation ends in success/failure.",
                "Formally, the above negotiation protocol has the following properties.",
                "Theorem 3.2.",
                "Let Ag1 and Ag2 be two agents having abductive programs P1, H1 and P2, H2 , respectively. 1.",
                "If P1, H1 and P2, H2 are function-free (i.e., both Pi and Hi contain no function symbol), any negotiation will terminate. 2.",
                "If a negotiation terminates with agreement on a proposal G, both P1, H1 and P2, H2 have belief sets satisfying G. Proof. 1.",
                "When an abductive program is function-free, abducibles and negotiation sets are both finite.",
                "Moreover, if a proposal is once rejected, it is not proposed again by the function μ.",
                "Thus, negotiation will terminate in finite steps. 2.",
                "When a proposal G is made by Ag1, P1, H1 has a belief set satisfying G. If the agent Ag2 accepts the proposal G, it is satisfied by an answer set of P2 which is also a belief set of P2, H2 .",
                "Example 3.3.",
                "Suppose a buying-selling situation in the introduction.",
                "A seller agent has the abductive program Ps, Hs in which Ps consists of belief Bs and desire Ds: Bs : pc(b1, 1G, 512M, 80G) ; pc(b2, 1G, 512M, 80G) ←,(1) dvd-rw ; cd-rw ←, (2) Ds : normal price(1300) ← pc(b1, 1G, 512M, 80G), dvd-rw, (3) normal price(1200) ← pc(b1, 1G, 512M, 80G), cd-rw, (4) normal price(1200) ← pc(b2, 1G, 512M, 80G), dvd-rw, (5) price(x) ← normal price(x), add point, (6) price(x ∗ 0.9) ← normal price(x), pay cash, not add point,(7) add point ←, (8) Hs : add point, pay cash.",
                "Here, (1) and (2) represent selection of products.",
                "The atom pc(b1, 1G, 512M, 80G) represents that the seller agent has a PC of the brand b1 such that CPU is 1GHz, memory is 512MB, and HDD is 80GB.",
                "Prices of products are represented as desire of the seller.",
                "The rules (3) - (5) are normal prices of products.",
                "A normal price is a selling price on the condition that service points are added (6).",
                "On the other hand, a discount price is applied if the paying method is cash and no service point is added (7).",
                "The fact (8) represents the addition of service points.",
                "This service would be withdrawn in case of discount prices, so add point is specified as an abducible.",
                "A buyer agent has the abductive program Pb, Hb in which Pb consists of belief Bb and desire Db: Bb : drive ← dvd-rw, (9) drive ← cd-rw, (10) price(x) ←, (11) Db : pc(b1, 1G, 512M, 80G) ←, (12) dvd-rw ←, (13) cd-rw ← not dvd-rw, (14) ← pay cash, (15) ← price(x), x > 1200, (16) Hb : dvd-rw.",
                "Rules (12) - (16) are the buyers desire.",
                "Among them, (15) and (16) impose constraints for buying a PC.",
                "A DVD-RW is specified as an abducible which is subject to concession. (1st round) First, the following proposal is given by the buyer agent: G1 b : pc(b1, 1G, 512M, 80G), dvd-rw, price(x), x ≤ 1200.",
                "As Ps has no answer set which satisfies G1 b , the seller agent cannot accept the proposal.",
                "The seller takes an action of making a counter-proposal and performs abduction.",
                "As a result, the seller finds the minimal explanation (E, F) = ({ pay cash }, { add point }) which explains G1 b θ1 with θ1 = { x/1170 }.",
                "The seller constructs the conditional proposal: G1 s : pc(b1, 1G, 512M, 80G), dvd-rw, price(1170), pay cash, not add point and offers it to the buyer. (2nd round) The buyer does not accept G1 s because he/she cannot pay it by cash (15).",
                "The buyer then returns the critique G2 b = reject to the seller, together with the critique set CS2 b (Pb, G1 s) = {(15)}.",
                "In response to this, the seller tries to make another proposal which satisfies the constraint in this critique set.",
                "As G1 s is stored in FP 2 s and no other conditional proposal satisfying the buyers requirement exists, the seller produces neighborhood proposals.",
                "He/she relaxes G1 b by dropping x ≤ 1200 in the condition, and produces pc(b1, 1G, 512M, 80G), dvd-rw, price(x).",
                "As Ps has an answer set which satisfies G2 s : pc(b1, 1G, 512M, 80G), dvd-rw, price(1300), 1026 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) the seller offers G2 s as a new counter-proposal. (3rd round) The buyer does not accept G2 s because he/she cannot pay more than 1200USD (16).",
                "The buyer again returns the critique G3 b = reject to the seller, together with the critique set CS3 b (Pb, G2 s) = CS2 b (Pb, G1 s) ∪ {(16)}.",
                "The seller then considers another proposal by replacing b1 with a variable w, G1 b now becomes pc(w, 1G, 512M, 80G), dvd-rw, price(x), x ≤ 1200.",
                "As Ps has an answer set which satisfies G3 s : pc(b2, 1G, 512M, 80G), dvd-rw, price(1200), the seller offers G3 s as a new counter-proposal. (4th round) The buyer does not accept G3 s because a PC of the brand b2 is out of his/her interest and Pb has no answer set satisfying G3 s. Then, the buyer makes a concession by changing his/her original goal.",
                "The buyer relaxes G1 b by goal replacement using the rule (9) in Pb, and produces pc(b1, 1G, 512M, 80G), drive, price(x), x ≤ 1200.",
                "Using (10), the following proposal is produced: pc(b1, 1G, 512M, 80G), cd-rw, price(x), x ≤ 1200.",
                "As Pb \\ { dvd-rw } has a consistent answer set satisfying the above proposal, the buyer proposes the conditional neighborhood proposal G4 b : pc(b1, 1G, 512M, 80G), cd-rw, not dvd-rw, price(x), x ≤ 1200 to the seller agent.",
                "Since Ps also has an answer set satisfying G4 b , the seller accepts it and sends the message G4 s = accept to the buyer.",
                "Thus, the negotiation ends in success. 4.",
                "COMPUTATION In this section, we provide methods of computing proposals in terms of answer sets of programs.",
                "We first introduce some definitions from [15].",
                "Definition 4.1.",
                "Given an abductive program P, H , the set UR of update rules is defined as: UR = { L ← not L, L ← not L | L ∈ H } ∪ { +L ← L | L ∈ H \\ P } ∪ { −L ← not L | L ∈ H ∩ P } , where L, +L, and −L are new atoms uniquely associated with every L ∈ H. The atoms +L and −L are called update atoms.",
                "By the definition, the atom L becomes true iff L is not true.",
                "The pair of rules L ← not L and L ← not L specify the situation that an abducible L is true or not.",
                "When p(x) ∈ H and p(a) ∈ P but p(t) ∈ P for t = a, the rule +L ← L precisely becomes +p(t) ← p(t) for any t = a.",
                "In this case, the rule is shortly written as +p(x) ← p(x), x = a.",
                "Generally, the rule becomes +p(x) ← p(x), x = t1, . . . , x = tn for n such instances.",
                "The rule +L ← L derives the atom +L if an abducible L which is not in P is to be true.",
                "In contrast, the rule −L ← not L derives the atom −L if an abducible L which is in P is not to be true.",
                "Thus, update atoms represent the change of truth values of abducibles in a program.",
                "That is, +L means the introduction of L, while −L means the deletion of L. When an abducible L contains variables, the associated update atom +L or −L is supposed to have exactly the same variables.",
                "In this case, an update atom is semantically identified with its ground instances.",
                "The set of all update atoms associated with the abducibles in H is denoted by UH, and UH = UH+ ∪ UH− where UH+ (resp.",
                "UH− ) is the set of update atoms of the form +L (resp. −L).",
                "Definition 4.2.",
                "Given an abductive program P, H , its update program UP is defined as the program UP = (P \\ H) ∪ UR .",
                "An answer set S of UP is called U-minimal if there is no answer set T of UP such that T ∩ UH ⊂ S ∩ UH.",
                "By the definition, U-minimal answer sets exist whenever UP has answer sets.",
                "Update programs are used for computing (minimal) explanations of an observation.",
                "Given an observation G as a conjunction of literals and NAF-literals possibly containing variables, we introduce a new ground literal O together with the rule O ← G. In this case, O has an explanation (E, F) iff G has the same explanation.",
                "With this replacement, an observation is assumed to be a ground literal without loss of generality.",
                "In what follows, E+ = { +L | L ∈ E } and F − = { −L | L ∈ F } for E ⊆ H and F ⊆ H. Proposition 4.1. ([15]) Let P, H be an abductive program, UP its update program, and G a ground literal representing an observation.",
                "Then, a pair (E, F) is an explanation of G iff UP ∪ { ← not G } has a consistent answer set S such that E+ = S ∩ UH+ and F− = S ∩ UH− .",
                "In particular, (E, F) is a minimal explanation iff S is a U-minimal answer set.",
                "Example 4.1.",
                "To explain the observation G = flies(t) in the program P of Example 2.1, first construct the update program UP of P:3 UP : flies(x) ← bird(x), not ab(x), ab(x) ← broken-wing(x) , bird(t) ← , bird(o) ← , broken-wing(x) ← not broken-wing(x), broken-wing(x) ← not broken-wing(x), +broken-wing(x) ← broken-wing(x), x = t , −broken-wing(t) ← not broken-wing(t) .",
                "Next, consider the program UP ∪ { ← not flies(t) }.",
                "It has the single U-minimal answer set: S = { bird(t), bird(o), flies(t), flies(o), broken-wing(t), broken-wing(o), −broken-wing(t) }.",
                "The unique minimal explanation (E, F) = (∅, {broken-wing(t)}) of G is expressed by the update atom −broken-wing(t) in S ∩ UH− .",
                "Proposition 4.2.",
                "Let P, H be an abductive program and G a ground literal representing an observation.",
                "If P ∪ { ← not G } has a consistent answer set S, G has the minimal explanation (E, F) = (∅, ∅) and S satisfies G. Now we provide methods for computing (counter-)proposals.",
                "First, conditional proposals are computed as follows. input : an abductive program P, H , a proposal G; output : a set Sc of proposals.",
                "If G is a ground literal, compute its minimal explanation (E, F) in P, H using the update program.",
                "Put G, E, not F in Sc.",
                "Else if G is a conjunction possibly containing variables, consider the abductive program 3 t represents tweety and o represents opus.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1027 P ∪{ O ← G }, H with a ground literal O. Compute a minimal explanation of O in P ∪ { O ← G }, H using its update program.",
                "If O has a minimal explanation (E, F) with a substitution θ for variables in G, put Gθ, E, not F in Sc.",
                "Next, neighborhood proposals are computed as follows. input : an abductive program P, H , a proposal G; output : a set Sn of proposals. % neighborhood proposals by anti-instantiation; Construct G by anti-instantiation.",
                "For a ground literal O, if P ∪ { O ← G } ∪ { ← not O } has a consistent answer set satisfying G θ with a substitution θ and G θ = G, put G θ in Sn. % neighborhood proposals by <br>dropping condition</br>s; Construct G by <br>dropping condition</br>s.",
                "If G is a ground literal and the program P ∪ { ← not G } has a consistent answer set, put G in Sn.",
                "Else if G is a conjunction possibly containing variables, do the following.",
                "For a ground literal O, if P ∪{ O ← G }∪{ ← not O } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn. % neighborhood proposals by goal replacement; Construct G by goal replacement.",
                "If G is a ground literal and there is a rule H ← B in P such that G = Hσ and Bσ = G for some substitution σ, put G = Bσ.",
                "If P ∪ { ← not G } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn.",
                "Else if G is a conjunction possibly containing variables, do the following.",
                "For a replaced literal L ∈ G , if there is a rule H ← B in P such that L = Hσ and (G \\ {L}) ∪ Bσ = G for some substitution σ, put G = (G \\ {L}) ∪ Bσ.",
                "For a ground literal O, if P ∪ { O ← G } ∪ { ← not O } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn.",
                "Theorem 4.3.",
                "The set Sc (resp.",
                "Sn) computed above coincides with the set of conditional proposals (resp. neighborhood proposals).",
                "Proof.",
                "The result for Sc follows from Definition 3.3 and Proposition 4.1.",
                "The result for Sn follows from Definition 3.5 and Proposition 4.2.",
                "Conditional neighborhood proposals are computed by combining the above two procedures.",
                "Those proposals are computed at each round.",
                "Note that the procedure for computing Sn contains some nondeterministic choices.",
                "For instance, there are generally several candidates of literals to relax in a proposal.",
                "Also, there might be several rules in a program for the usage of goal replacement.",
                "In practice, an agent can prespecify literals in a proposal for possible relaxation or rules in a program for the usage of goal replacement. 5.",
                "RELATED WORK As there are a number of literature on automated negotiation, this section focuses on comparison with negotiation frameworks based on logic and argumentation.",
                "Sadri et al. [14] use abductive logic programming as a representation language of negotiating agents.",
                "Agents negotiate using common dialogue primitives, called dialogue moves.",
                "Each agent has an abductive logic program in which a sequence of dialogues are specified by a program, a dialogue protocol is specified as constraints, and dialogue moves are specified as abducibles.",
                "The behavior of agents is regulated by an observe-think-act cycle.",
                "Once a dialogue move is uttered by an agent, another agent that observed the utterance thinks and acts using a proof procedure.",
                "Their approach and ours both employ abductive logic programming as a platform of agent reasoning, but the use of it is quite different.",
                "First, they use abducibles to specify dialogue primitives of the form tell(utterer, receiver, subject, identifier, time), while we use abducibles to specify arbitrary permissible hypotheses to construct conditional proposals.",
                "Second, a program pre-specifies a plan to carry out in order to achieve a goal, together with available/missing resources in the context of resource-exchanging problems.",
                "This is in contrast with our method in which possible counter-proposals are newly constructed in response to a proposal made by an agent.",
                "Third, they specify a negotiation policy inside a program (as integrity constraints), while we give a protocol independent of individual agents.",
                "They provide an operational model that completely specifies the behavior of agents in terms of agent cycle.",
                "We do not provide such a complete specification of the behavior of agents.",
                "Our primary interest is to mechanize construction of proposals.",
                "Bracciali and Torroni [2] formulate abductive agents that have knowledge in abductive logic programs.",
                "To explain an observation, two agents communicate by exchanging integrity constraints.",
                "In the process of communication, an agent can revise its own integrity constraints according to the information provided by the other agent.",
                "A set IC of integrity constraints relaxes a set IC (or IC tightens IC ) if any observation that can be proved with respect to IC can also be proved with respect to IC .",
                "For instance, IC : ← a, b, c relaxes IC : ← a, b.",
                "Thus, they use relaxation for weakening the constraints in an abductive logic program.",
                "In contrast, we use relaxation for weakening proposals and three different relaxation methods, anti-instantiation, <br>dropping condition</br>s, and goal replacement, are considered.",
                "Their goal is to explain an observation by revising integrity constraints of an agent through communication, while we use integrity constraints for communication to explain critiques and help other agents in making counter-proposals.",
                "Meyer et al. [11] introduce a logical framework for negotiating agents.",
                "They introduce two different modes of negotiation: concession and adaptation.",
                "They provide rational postulates to characterize negotiated outcomes between two agents, and describe methods for constructing outcomes.",
                "They provide logical conditions for negotiated outcomes to satisfy, but they do not describe a process of negotiation nor negotiation protocols.",
                "Moreover, they represent agents by classical propositional theories, which is different from our abductive logic programming framework.",
                "Foo et al. [5] model one-to-one negotiation as a one-time encounter between two extended logic programs.",
                "An agent offers an answer set of its program, and their mutual deal is regarded as a trade on their answer sets.",
                "Starting from the initial agreement set S∩T for an answer set S of an agent and an answer set T of another agent, each agent extends this set to reflect its own demand while keeping consistency with demand of the other agent.",
                "Their algorithm returns new programs having answer sets which are consistent with each other and keep the agreement set.",
                "The work is extended to repeated encounters in [3].",
                "In their framework, two agents exchange answer sets to produce a common belief set, which is different from our framework of exchanging proposals.",
                "There are a number of proposals for negotiation based 1028 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) on argumentation.",
                "An advantage of argumentation-based negotiation is that it constructs a proposal with arguments supporting the proposal [1].",
                "The existence of arguments is useful to convince other agents of reasons why an agent offers (counter-)proposals or returns critiques.",
                "Parsons et al. [13] develop a logic of argumentation-based negotiation among BDI agents.",
                "In one-to-one negotiation, an agent A generates a proposal together with its arguments, and passes it to another agent B.",
                "The proposal is evaluated by B which attempts to build arguments against it.",
                "If it conflicts with Bs interest, B informs A of its objection by sending back its attacking argument.",
                "In response to this, A tries to find an alternative way of achieving its original objective, or a way of persuading B to drop its objection.",
                "If either type of argument can be found, A will submit it to B.",
                "If B finds no reason to reject the new proposal, it will be accepted and the negotiation ends in success.",
                "Otherwise, the process is iterated.",
                "In this negotiation processes, the agent A never changes its original objective, so that negotiation ends in failure if A fails to find an alternative way of achieving the original objective.",
                "In our framework, when a proposal is rejected by another agent, an agent can weaken or change its objective by abduction and relaxation.",
                "Our framework does not have a mechanism of argumentation, but reasons for critiques can be informed by responding critique sets.",
                "Kakas and Moraitis [10] propose a negotiation protocol which integrates abduction within an argumentation framework.",
                "A proposal contains an offer corresponding to the negotiation object, together with supporting information representing conditions under which this offer is made.",
                "Supporting information is computed by abduction and is used for constructing conditional arguments during the process of negotiation.",
                "In their negotiation protocol, when an agent cannot satisfy its own goal, the agent considers the other agents goal and searches for conditions under which the goal is acceptable.",
                "Our present approach differs from theirs in the following points.",
                "First, they use abduction to seek conditions to support arguments, while we use abduction to seek conditions for proposals to accept.",
                "Second, in their negotiation protocol, counter-proposals are chosen among candidates based on preference knowledge of an agent at meta-level, which represents policy under which an agent uses its object-level decision rules according to situations.",
                "In our framework, counter-proposals are newly constructed using abduction and relaxation.",
                "The method of construction is independent of particular negotiation protocols.",
                "As [2, 10, 14], abduction or abductive logic programming used in negotiation is mostly based on normal abduction.",
                "In contrast, our approach is based on extended abduction which can not only introduce hypotheses but remove them from a program.",
                "This is another important difference.",
                "Relaxation and neighborhood query answering are devised to make databases cooperative with their users [4, 6].",
                "In this sense, those techniques have the spirit similar to cooperative problem solving in multi-agent systems.",
                "As far as the authors know, however, there is no study which applies those technique to agent negotiation. 6.",
                "CONCLUSION In this paper we proposed a logical framework for negotiating agents.",
                "To construct proposals in the process of negotiation, we combined the techniques of extended abduction and relaxation.",
                "It was shown that these two operations are used for general inference rules in producing proposals.",
                "We developed a negotiation protocol between two agents based on exchange of proposals and critiques, and provided procedures for computing proposals in abductive logic programming.",
                "This enables us to realize automated negotiation on top of the existing answer set solvers.",
                "The present framework does not have a mechanism of selecting an optimal (counter-)proposal among different alternatives.",
                "To compare and evaluate proposals, an agent must have preference knowledge of candidate proposals.",
                "Further elaboration to maximize the utility of agents is left for future study. 7.",
                "REFERENCES [1] L. Amgoud, S. Parsons, and N. Maudet.",
                "Arguments, dialogue, and negotiation.",
                "In: Proc.",
                "ECAI-00, pp. 338-342, IOS Press, 2000. [2] A. Bracciali and P. Torroni.",
                "A new framework for knowledge revision of abductive agents through their interaction.",
                "In: Proc.",
                "CLIMA-IV, Computational Logic in Multi-Agent Systems, LNAI 3259, pp. 159-177, 2004. [3] W. Chen, M. Zhang, and N. Foo.",
                "Repeated negotiation of logic programs.",
                "In: Proc. 7th Workshop on Nonmonotonic Reasoning, Action and Change, 2006. [4] W. W. Chu, Q. Chen, and R.-C. Lee.",
                "Cooperative query answering via type abstraction hierarchy.",
                "In: Cooperating Knowledge Based Systems, S. M. Deen ed., pp. 271-290, Springer, 1990. [5] N. Foo, T. Meyer, Y. Zhang, and D. Zhang.",
                "Negotiating logic programs.",
                "In: Proc. 6th Workshop on Nonmonotonic Reasoning, Action and Change, 2005. [6] T. Gaasterland, P. Godfrey, and J. Minker.",
                "Relaxation as a platform for cooperative answering.",
                "Journal of Intelligence Information Systems 1(3/4):293-321, 1992. [7] M. Gelfond and V. Lifschitz.",
                "Classical negation in logic programs and disjunctive databases.",
                "New Generation Computing 9:365-385, 1991. [8] K. Inoue and C. Sakama.",
                "Abductive framework for nonmonotonic theory change.",
                "In: Proc.",
                "IJCAI-95, pp. 204-210, Morgan Kaufmann. [9] A. C. Kakas, R. A. Kowalski, and F. Toni, The role of abduction in logic programming.",
                "In: Handbook of Logic in AI and Logic Programming, D. M. Gabbay, et al. (eds), vol. 5, pp. 235-324, Oxford University Press, 1998. [10] A. C. Kakas and P. Moraitis.",
                "Adaptive agent negotiation via argumentation.",
                "In: Proc.",
                "AAMAS-06, pp. 384-391, ACM Press. [11] T. Meyer, N. Foo, R. Kwok, and D. Zhang.",
                "Logical foundation of negotiation: outcome, concession and adaptation.",
                "In: Proc.",
                "AAAI-04, pp. 293-298, MIT Press. [12] R. S. Michalski.",
                "A theory and methodology of inductive learning.",
                "In: Machine Learning: An Artificial Intelligence Approach, R. S. Michalski, et al. (eds), pp. 83-134, Morgan Kaufmann, 1983. [13] S. Parsons, C. Sierra and N. Jennings.",
                "Agents that reason and negotiate by arguing.",
                "Journal of Logic and Computation, 8(3):261-292, 1988. [14] F. Sadri, F. Toni, and P. Torroni, An abductive logic programming architecture for negotiating agents.",
                "In: Proc. 8th European Conf. on Logics in AI, LNAI 2424, pp. 419-431, Springer, 2002. [15] C. Sakama and K. Inoue.",
                "An abductive framework for computing knowledge base updates.",
                "Theory and Practice of Logic Programming 3(6):671-715, 2003.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1029"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Sea G una propuesta obtenida por \"condición de caída\" s.",
                "Si P tiene un conjunto de respuestas que satisface G θ para alguna sustitución θ, G θ se llama propuesta de vecindario por \"condición de caída\" s.1024 El sexto intl.",
                "Como g2θ2 = asistencia (departamento de compt), salario (40, 000) con θ2 = {x/40, 000} se satisface con un conjunto de respuestas de P, G2θ2 se convierte en una propuesta del vecindario por \"condición de caída\" s.• G3 = empleado (departamento de compt), salario (x), x ≥ 50, 000 se produce reemplazando la asistencia (departamento de compt) con el empleado (departamento de compt) utilizando la regla del empleado (x) ← asistencia (x) en P. porG3 y el empleado de la regla (x) ← Administrador del sistema (x) en P, G3 = SYS Admin (departamento de compt), salario (x), x ≥ 50, 000 se produce.",
                "Sea G una propuesta obtenida por anti-instanciación o \"condición de caída\" s.",
                "If (e, f) es una explicación mínima de g θ (= g) para alguna sustitución θ, la conjunción g θ, e, no F se llama propuesta de vecindad condicional por anti-instanciación/\"condición de caída\" s.2.",
                "Para un terreno literal o, si p ∪ {o ← g} ∪ {← no o} tiene un conjunto de respuestas consistente que satisface g θ con una sustitución θ y g θ = g, coloque g θ en sn.% Propuestas del vecindario por \"Condición de caída\" s;Construir g por \"condición de caída\" s.",
                "Por el contrario, utilizamos la relajación para debilitar propuestas y tres métodos de relajación diferentes, se consideran los anti-instanciación, las \"condiciones de caída\" y el reemplazo de objetivos."
            ],
            "translated_text": "",
            "candidates": [
                "condición de caída",
                "condición de caída",
                "condición de caída",
                "condición de caída",
                "condición de caída",
                "condición de caída",
                "condición de caída",
                "condición de caída",
                "Condición de caída",
                "condición de caída",
                "condición de caída",
                "Condición de caída",
                "condición de caída",
                "condición de caída",
                "condiciones de caída"
            ],
            "error": []
        },
        "anti-instantiation": {
            "translated_key": "anti-instanciación",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Negotiation by Abduction and Relaxation Chiaki Sakama Dept.",
                "Computer and Communication Sciences Wakayama University Sakaedani, Wakayama 640 8510, Japan sakama@sys.wakayama-u.ac.jp Katsumi Inoue National Institute of Informatics 2-1-2 Hitotsubashi, Chiyoda-ku Tokyo 101 8430, Japan ki@nii.ac.jp ABSTRACT This paper studies a logical framework for automated negotiation between two agents.",
                "We suppose an agent who has a knowledge base represented by a logic program.",
                "Then, we introduce methods of constructing counter-proposals in response to proposals made by an agent.",
                "To this end, we combine the techniques of extended abduction in artificial intelligence and relaxation in cooperative query answering for databases.",
                "These techniques are respectively used for producing conditional proposals and neighborhood proposals in the process of negotiation.",
                "We provide a negotiation protocol based on the exchange of these proposals and develop procedures for computing new proposals.",
                "Categories and Subject Descriptors F.4.1 [Mathematical Logic]: Logic and constraint programming;; I.2.11 [Distributed Artificial Intelligence]: Multiagent systems General Terms Theory 1.",
                "INTRODUCTION Automated negotiation has been received increasing attention in multi-agent systems, and a number of frameworks have been proposed in different contexts ([1, 2, 3, 5, 10, 11, 13, 14], for instance).",
                "Negotiation usually proceeds in a series of rounds and each agent makes a proposal at every round.",
                "An agent that received a proposal responds in two ways.",
                "One is a critique which is a remark as to whether or not (parts of) the proposal is accepted.",
                "The other is a counter-proposal which is an alternative proposal made in response to a previous proposal [13].",
                "To see these proposals in one-to-one negotiation, suppose the following negotiation dialogue between a buyer agent B and a seller agent S. (Bi (or Si) represents an utterance of B (or S) in the i-th round.)",
                "B1: I want to buy a personal computer of the brand b1, with the specification of CPU:1GHz, Memory:512MB, HDD: 80GB, and a DVD-RW driver.",
                "I want to get it at the price under 1200 USD.",
                "S1: We can provide a PC with the requested specification if you pay for it by cash.",
                "In this case, however, service points are not added for this special discount.",
                "B2: I cannot pay it by cash.",
                "S2: In a normal price, the requested PC costs 1300 USD.",
                "B3: I cannot accept the price.",
                "My budget is under 1200 USD.",
                "S3: We can provide another computer with the requested specification, except that it is made by the brand b2.",
                "The price is exactly 1200 USD.",
                "B4: I do not want a PC of the brand b2.",
                "Instead, I can downgrade a driver from DVD-RW to CD-RW in my initial proposal.",
                "S4: Ok, I accept your offer.",
                "In this dialogue, in response to the opening proposal B1, the counter-proposal S1 is returned.",
                "In the rest of the dialogue, B2, B3, S4 are critiques, while S2, S3, B4 are counterproposals.",
                "Critiques are produced by evaluating a proposal in a knowledge base of an agent.",
                "In contrast, making counter-proposals involves generating an alternative proposal which is more favorable to the responding agent than the original one.",
                "It is known that there are two ways of producing counterproposals: extending the initial proposal or amending part of the initial proposal.",
                "According to [13], the first type appears in the dialogue: A: I propose that you provide me with service X.",
                "B: I propose that I provide you with service X if you provide me with service Z.",
                "The second type is in the dialogue: A: I propose that I provide you with service Y if you provide me with service X.",
                "B: I propose that I provide you with service X if you provide me with service Z.",
                "A negotiation proceeds by iterating such give-andtake dialogues until it reaches an agreement/disagreement.",
                "In those dialogues, agents generate (counter-)proposals by reasoning on their own goals or objectives.",
                "The objective of the agent A in the above dialogues is to obtain service X.",
                "The agent B proposes conditions to provide the service.",
                "In the process of negotiation, however, it may happen that agents are obliged to weaken or change their initial goals to reach a negotiated compromise.",
                "In the dialogue of 1022 978-81-904262-7-5 (RPS) c 2007 IFAAMAS a buyer agent and a seller agent presented above, a buyer agent changes its initial goal by downgrading a driver from DVD-RW to CD-RW.",
                "Such behavior is usually represented as specific meta-knowledge of an agent or specified as negotiation protocols in particular problems.",
                "Currently, there is no computational logic for automated negotiation which has general inference rules for producing (counter-)proposals.",
                "The purpose of this paper is to mechanize a process of building (counter-)proposals in one-to-one negotiation dialogues.",
                "We suppose an agent who has a knowledge base represented by a logic program.",
                "We then introduce methods for generating three different types of proposals.",
                "First, we use the technique of extended abduction in artificial intelligence [8, 15] to construct a conditional proposal as an extension of the original one.",
                "Second, we use the technique of relaxation in cooperative query answering for databases [4, 6] to construct a neighborhood proposal as an amendment of the original one.",
                "Third, combining extended abduction and relaxation, conditional neighborhood proposals are constructed as amended extensions of the original proposal.",
                "We develop a negotiation protocol between two agents based on the exchange of these counter-proposals and critiques.",
                "We also provide procedures for computing proposals in logic programming.",
                "This paper is organized as follows.",
                "Section 2 introduces a logical framework used in this paper.",
                "Section 3 presents methods for constructing proposals, and provides a negotiation protocol.",
                "Section 4 provides methods for computing proposals in logic programming.",
                "Section 5 discusses related works, and Section 6 concludes the paper. 2.",
                "PRELIMINARIES Logic programs considered in this paper are extended disjunctive programs (EDP) [7].",
                "An EDP (or simply a program) is a set of rules of the form: L1 ; · · · ; Ll ← Ll+1 , . . . , Lm, not Lm+1 , . . . , not Ln (n ≥ m ≥ l ≥ 0) where each Li is a positive/negative literal, i.e., A or ¬A for an atom A, and not is negation as failure (NAF). not L is called an NAF-literal.",
                "The symbol ; represents disjunction.",
                "The left-hand side of the rule is the head, and the right-hand side is the body.",
                "For each rule r of the above form, head(r), body+ (r) and body− (r) denote the sets of literals {L1, . . . , Ll}, {Ll+1, . . . , Lm}, and {Lm+1, . . . , Ln}, respectively.",
                "Also, not body− (r) denotes the set of NAF-literals {not Lm+1, . . . , not Ln}.",
                "A disjunction of literals and a conjunction of (NAF-)literals in a rule are identified with its corresponding sets of literals.",
                "A rule r is often written as head(r) ← body+ (r), not body− (r) or head(r) ← body(r) where body(r) = body+ (r)∪not body− (r).",
                "A rule r is disjunctive if head(r) contains more than one literal.",
                "A rule r is an integrity constraint if head(r) = ∅; and r is a fact if body(r) = ∅.",
                "A program is NAF-free if no rule contains NAF-literals.",
                "Two rules/literals are identified with respect to variable renaming.",
                "A substitution is a mapping from variables to terms θ = {x1/t1, . . . , xn/tn}, where x1, . . . , xn are distinct variables and each ti is a term distinct from xi.",
                "Given a conjunction G of (NAF-)literals, Gθ denotes the conjunction obtained by applying θ to G. A program, rule, or literal is ground if it contains no variable.",
                "A program P with variables is a shorthand of its ground instantiation Ground(P), the set of ground rules obtained from P by substituting variables in P by elements of its Herbrand universe in every possible way.",
                "The semantics of an EDP is defined by the answer set semantics [7].",
                "Let Lit be the set of all ground literals in the language of a program.",
                "Suppose a program P and a set of literals S(⊆ Lit).",
                "Then, the reduct P S is the program which contains the ground rule head(r) ← body+ (r) iff there is a rule r in Ground(P) such that body− (r)∩S = ∅.",
                "Given an NAF-free EDP P, Cn(P) denotes the smallest set of ground literals which is (i) closed under P, i.e., for every ground rule r in Ground(P), body(r) ⊆ Cn(P) implies head(r) ∩ Cn(P) = ∅; and (ii) logically closed, i.e., it is either consistent or equal to Lit.",
                "Given an EDP P and a set S of literals, S is an answer set of P if S = Cn(P S ).",
                "A program has none, one, or multiple answer sets in general.",
                "An answer set is consistent if it is not Lit.",
                "A program P is consistent if it has a consistent answer set; otherwise, P is inconsistent.",
                "Abductive logic programming [9] introduces a mechanism of hypothetical reasoning to logic programming.",
                "An abductive framework used in this paper is the extended abduction introduced by Inoue and Sakama [8, 15].",
                "An abductive program is a pair P, H where P is an EDP and H is a set of literals called abducibles.",
                "When a literal L ∈ H contains variables, any instance of L is also an abducible.",
                "An abductive program P, H is consistent if P is consistent.",
                "Throughout the paper, abductive programs are assumed to be consistent unless stated otherwise.",
                "Let G = L1, . . . , Lm, not Lm+1, . . . , not Ln be a conjunction, where all variables in G are existentially quantified at the front and range-restricted, i.e., every variable in Lm+1, . . . , Ln appears in L1, . . . , Lm.",
                "A set S of ground literals satisfies the conjunction G if { L1θ, . . . , Lmθ } ⊆ S and { Lm+1θ, . . . , Lnθ }∩ S = ∅ for some ground instance Gθ with a substitution θ.",
                "Let P, H be an abductive program and G a conjunction as above.",
                "A pair (E, F) is an explanation of an observation G in P, H if1 1. (P \\ F) ∪ E has an answer set which satisfies G, 2. (P \\ F) ∪ E is consistent, 3.",
                "E and F are sets of ground literals such that E ⊆ H\\P and F ⊆ H ∩ P. When (P \\ F) ∪ E has an answer set S satisfying the above three conditions, S is called a belief set of an abductive program P, H satisfying G (with respect to (E, F)).",
                "Note that if P has a consistent answer set S satisfying G, S is also a belief set of P, H satisfying G with respect to (E, F) = (∅, ∅).",
                "Extended abduction introduces/removes hypotheses to/from a program to explain an observation.",
                "Note that normal abduction (as in [9]) considers only introducing hypotheses to explain an observation.",
                "An explanation (E, F) of an observation G is called minimal if for any explanation (E , F ) of G, E ⊆ E and F ⊆ F imply E = E and F = F. Example 2.1.",
                "Consider the abductive program P, H : P : flies(x) ← bird(x), not ab(x) , ab(x) ← broken-wing(x) , bird(tweety) ← , bird(opus) ← , broken-wing(tweety) ← .",
                "H : broken-wing(x) .",
                "The observation G = flies(tweety) has the minimal explanation (E, F) = (∅, {broken-wing(tweety)}). 1 This defines credulous explanations [15].",
                "Skeptical explanations are used in [8].",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1023 3.",
                "NEGOTIATION 3.1 Conditional Proposals by Abduction We suppose an agent who has a knowledge base represented by an abductive program P, H .",
                "A program P consists of two types of knowledge, belief B and desire D, where B represents objective knowledge of an agent, while D represents subjective knowledge in general.",
                "We define P = B ∪ D, but do not distinguish B and D if such distinction is not important in the context.",
                "In contrast, abducibles H are used for representing permissible conditions to make a compromise in the process of negotiation.",
                "Definition 3.1.",
                "A proposal G is a conjunction of literals and NAF-literals: L1, . . . , Lm, not Lm+1, . . . , not Ln where every variable in G is existentially quantified at the front and range-restricted.",
                "In particular, G is called a critique if G = accept or G = reject where accept and reject are the reserved propositions.",
                "A counter-proposal is a proposal made in response to a proposal.",
                "Definition 3.2.",
                "A proposal G is accepted in an abductive program P, H if P has an answer set satisfying G. When a proposal is not accepted, abduction is used for seeking conditions to make it acceptable.",
                "Definition 3.3.",
                "Let P, H be an abductive program and G a proposal.",
                "If (E, F) is a minimal explanation of Gθ for some substitution θ in P, H , the conjunction G : Gθ, E, not F is called a conditional proposal (for G), where E, not F represents the conjunction: A1, . . . , Ak, not Ak+1, . . . , not Al for E = {A1, . . . , Ak} and F = { Ak+1, . . . , Al }.",
                "Proposition 3.1.",
                "Let P, H be an abductive program and G a proposal.",
                "If G is a conditional proposal, there is a belief set S of P, H satisfying G .",
                "Proof.",
                "When G = Gθ, E, not F, (P \\ F) ∪ E has a consistent answer set S satisfying Gθ and E ∩ F = ∅.",
                "In this case, S satisfies Gθ, E, not F. A conditional proposal G provides a minimal requirement for accepting the proposal G. If Gθ has multiple minimal explanations, several conditional proposals exist accordingly.",
                "When (E, F) = (∅, ∅), a conditional proposal is used as a new proposal made in response to the proposal G. Example 3.1.",
                "An agent seeks a position of a research assistant at the computer department of a university with the condition that the salary is at least 50,000 USD per year.",
                "The agent makes his/her request as the proposal:2 G = assist(compt dept), salary(x), x ≥ 50, 000.",
                "The university has the abductive program P, H : P : salary(40, 000) ← assist(compt dept), not has PhD, salary(60, 000) ← assist(compt dept), has PhD, salary(50, 000) ← assist(math dept), salary(55, 000) ← system admin(compt dept), 2 For notational convenience, we often include mathematical (in)equations in proposals/programs.",
                "They are written by literals, for instance, x ≥ y by geq(x, y) with a suitable definition of the predicate geq. employee(x) ← assist(x), employee(x) ← system admin(x), assist(compt dept); assist(math dept) ; system admin(compt dept) ←, H : has PhD, where available positions are represented by disjunction.",
                "According to P, the base salary of a research assistant at the computer department is 40,000 USD, but if he/she has PhD, it is 60,000 USD.",
                "In this case, (E, F) = ({has PhD}, ∅) becomes the minimal explanation of Gθ = assist(compt dept), salary(60, 000) with θ = { x/60, 000 }.",
                "Then, the conditional proposal made by the university becomes assist(compt dept), salary(60, 000), has PhD . 3.2 Neighborhood Proposals by Relaxation When a proposal is unacceptable, an agent tries to construct a new counter-proposal by weakening constraints in the initial proposal.",
                "We use techniques of relaxation for this purpose.",
                "Relaxation is used as a technique of cooperative query answering in databases [4, 6].",
                "When an original query fails in a database, relaxation expands the scope of the query by relaxing the constraints in the query.",
                "This allows the database to return neighborhood answers which are related to the original query.",
                "We use the technique for producing proposals in the process of negotiation.",
                "Definition 3.4.",
                "Let P, H be an abductive program and G a proposal.",
                "Then, G is relaxed to G in the following three ways: <br>anti-instantiation</br>: Construct G such that G θ = G for some substitution θ.",
                "Dropping conditions: Construct G such that G ⊂ G. Goal replacement: If G is a conjunction G1, G2, where G1 and G2 are conjunctions, and there is a rule L ← G1 in P such that G1θ = G1 for some substitution θ, then build G as Lθ, G2.",
                "Here, Lθ is called a replaced literal.",
                "In each case, every variable in G is existentially quantified at the front and range-restricted.",
                "<br>anti-instantiation</br> replaces constants (or terms) with fresh variables.",
                "Dropping conditions eliminates some conditions in a proposal.",
                "Goal replacement replaces the condition G1 in G with a literal Lθ in the presence of a rule L ← G1 in P under the condition G1θ = G1.",
                "All these operations generalize proposals in different ways.",
                "Each G obtained by these operations is called a relaxation of G. It is worth noting that these operations are also used in the context of inductive generalization [12].",
                "The relaxed proposal can produce new offers which are neighbor to the original proposal.",
                "Definition 3.5.",
                "Let P, H be an abductive program and G a proposal. 1.",
                "Let G be a proposal obtained by <br>anti-instantiation</br>.",
                "If P has an answer set S which satisfies G θ for some substitution θ and G θ = G, G θ is called a neighborhood proposal by <br>anti-instantiation</br>. 2.",
                "Let G be a proposal obtained by dropping conditions.",
                "If P has an answer set S which satisfies G θ for some substitution θ, G θ is called a neighborhood proposal by dropping conditions. 1024 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.",
                "Let G be a proposal obtained by goal replacement.",
                "For a replaced literal L ∈ G and a rule H ← B in P such that L = Hσ and (G \\ {L}) ∪ Bσ = G for some substitution σ, put G = (G \\ {L}) ∪ Bσ.",
                "If P has an answer set S which satisfies G θ for some substitution θ, G θ is called a neighborhood proposal by goal replacement.",
                "Example 3.2. (cont.",
                "Example 3.1) Given the proposal G = assist(compt dept), salary(x), x ≥ 50, 000, • G1 = assist(w), salary(x), x ≥ 50, 000 is produced by substituting compt dept with a variable w. As G1θ1 = assist(math dept), salary(50, 000) with θ1 = { w/math dept } is satisfied by an answer set of P, G1θ1 becomes a neighborhood proposal by <br>anti-instantiation</br>. • G2 = assist(compt dept), salary(x) is produced by dropping the salary condition x ≥ 50, 000.",
                "As G2θ2 = assist(compt dept), salary(40, 000) with θ2 = { x/40, 000 } is satisfied by an answer set of P, G2θ2 becomes a neighborhood proposal by dropping conditions. • G3 = employee(compt dept), salary(x), x ≥ 50, 000 is produced by replacing assist(compt dept) with employee(compt dept) using the rule employee(x) ← assist(x) in P. By G3 and the rule employee(x) ← system admin(x) in P, G3 = sys admin(compt dept), salary(x), x ≥ 50, 000 is produced.",
                "As G3 θ3 = sys admin(compt dept), salary(55, 000) with θ3 = { x/55, 000 } is satisfied by an answer set of P, G3 θ3 becomes a neighborhood proposal by goal replacement.",
                "Finally, extended abduction and relaxation are combined to produce conditional neighborhood proposals.",
                "Definition 3.6.",
                "Let P, H be an abductive program and G a proposal. 1.",
                "Let G be a proposal obtained by either <br>anti-instantiation</br> or dropping conditions.",
                "If (E, F) is a minimal explanation of G θ(= G) for some substitution θ, the conjunction G θ, E, not F is called a conditional neighborhood proposal by <br>anti-instantiation</br>/dropping conditions. 2.",
                "Let G be a proposal obtained by goal replacement.",
                "Suppose G as in Definition 3.5(3).",
                "If (E, F) is a minimal explanation of G θ for some substitution θ, the conjunction G θ, E, not F is called a conditional neighborhood proposal by goal replacement.",
                "A conditional neighborhood proposal reduces to a neighborhood proposal when (E, F) = (∅, ∅). 3.3 Negotiation Protocol A negotiation protocol defines how to exchange proposals in the process of negotiation.",
                "This section presents a negotiation protocol in our framework.",
                "We suppose one-to-one negotiation between two agents who have a common ontology and the same language for successful communication.",
                "Definition 3.7.",
                "A proposal L1, ..., Lm, not Lm+1, ..., not Ln violates an integrity constraint ← body+ (r), not body− (r) if for any substitution θ, there is a substitution σ such that body+ (r)σ ⊆ { L1θ, . . . , Lmθ }, body− (r)σ∩{ L1θ, . . . , Lmθ } = ∅, and body− (r)σ ⊆ { Lm+1θ, . . . , Lnθ }.",
                "Integrity constraints are conditions which an agent should satisfy, so that they are used to explain why an agent does not accept a proposal.",
                "A negotiation proceeds in a series of rounds.",
                "Each i-th round (i ≥ 1) consists of a proposal Gi 1 made by one agent Ag1 and another proposal Gi 2 made by the other agent Ag2.",
                "Definition 3.8.",
                "Let P1, H1 be an abductive program of an agent Ag1 and Gi 2 a proposal made by Ag2 at the i-th round.",
                "A critique set of Ag1 (at the i-th round) is a set CSi 1(P1, Gj 2) = CSi−1 1 (P1, Gj−1 2 ) ∪ { r | r is an integrity constraint in P1 and Gj 2 violates r } where j = i − 1 or i, and CS0 1 (P1, G0 2) = CS1 1 (P1, G0 2) = ∅.",
                "A critique set of an agent Ag1 accumulates integrity constraints which are violated by proposals made by another agent Ag2.",
                "CSi 2(P2, Gj 1) is defined in the same manner.",
                "Definition 3.9.",
                "Let Pk, Hk be an abductive program of an agent Agk and Gj a proposal, which is not a critique, made by any agent at the j(≤ i)-th round.",
                "A negotiation set of Agk (at the i-th round) is a triple NSi k = (Si c, Si n, Si cn), where Si c is the set of conditional proposals, Si n is the set of neighborhood proposals, and Si cn is the set of conditional neighborhood proposals, produced by Gj and Pk, Hk .",
                "A negotiation set represents the space of possible proposals made by an agent.",
                "Si x (x ∈ {c, n, cn}) accumulates proposals produced by Gj (1 ≤ j ≤ i) according to Definitions 3.3, 3.5, and 3.6.",
                "Note that an agent can construct counter-proposals by modifying its own previous proposals or another agents proposals.",
                "An agent Agk accumulates proposals that are made by Agk but are rejected by another agent, in the failed proposal set FP i k (at the i-th round), where FP 0 k = ∅.",
                "Suppose two agents Ag1 and Ag2 who have abductive programs P1, H1 and P2, H2 , respectively.",
                "Given a proposal G1 1 which is satisfied by an answer set of P1, a negotiation starts.",
                "In response to the proposal Gi 1 made by Ag1 at the i-th round, Ag2 behaves as follows. 1.",
                "If Gi 1 = accept, an agreement is reached and negotiation ends in success. 2.",
                "Else if Gi 1 = reject, put FP i 2 = FPi−1 2 ∪{Gi−1 2 } where {G0 2} = ∅.",
                "Proceed to the step 4(b). 3.",
                "Else if P2 has an answer set satisfying Gi 1, Ag2 returns Gi 2 = accept to Ag1.",
                "Negotiation ends in success. 4.",
                "Otherwise, Ag2 behaves as follows.",
                "Put FP i 2 = FPi−1 2 . (a) If Gi 1 violates an integrity constraint in P2, return the critique Gi 2 = reject to Ag1, together with the critique set CSi 2(P2, Gi 1). (b) Otherwise, construct NSi 2 as follows. (i) Produce Si c. Let μ(Si c) = { p | p ∈ Si c \\ FPi 2 and p satisfies the constraints in CSi 1(P1, Gi−1 2 )}.",
                "If μ(Si c) = ∅, select one from μ(Si c) and propose it as Gi 2 to Ag1; otherwise, go to (ii). (ii) Produce Si n. If μ(Si n) = ∅, select one from μ(Si n) and propose it as Gi 2 to Ag1; otherwise, go to (iii). (iii) Produce Si cn.",
                "If μ(Si cn) = ∅, select one from μ(Si cn) and propose it as Gi 2 to Ag1; otherwise, negotiation ends in failure.",
                "This means that Ag2 can make no counter-proposal or every counterproposal made by Ag2 is rejected by Ag1.",
                "In the step 4(a), Ag2 rejects the proposal Gi 1 and returns the reason of rejection as a critique set.",
                "This helps for Ag1 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1025 in preparing a next counter-proposal.",
                "In the step 4(b), Ag2 constructs a new proposal.",
                "In its construction, Ag2 should take care of the critique set CSi 1(P1, Gi−1 2 ), which represents integrity constraints, if any, accumulated in previous rounds, that Ag1 must satisfy.",
                "Also, FP i 2 is used for removing proposals which have been rejected.",
                "Construction of Si x (x ∈ {c, n, cn}) in NSi 2 is incrementally done by adding new counter-proposals produced by Gi 1 or Gi−1 2 to Si−1 x .",
                "For instance, Si n in NSi 2 is computed as Si n = Si−1 n ∪{ p | p is a neighborhood proposal made by Gi 1 } ∪ { p | p is a neighborhood proposal made by Gi−1 2 }, where S0 n = ∅.",
                "That is, Si n is constructed from Si−1 n by adding new proposals which are obtained by modifying the proposal Gi 1 made by Ag1 at the i-th round or modifying the proposal Gi−1 2 made by Ag2 at the (i − 1)-th round.",
                "Si c and Si cn are obtained as well.",
                "In the above protocol, an agent produces Si c at first, secondly Si n, and finally Si cn.",
                "This strategy seeks conditions which satisfy the given proposal, prior to neighborhood proposals which change the original one.",
                "Another strategy, which prefers neighborhood proposals to conditional ones, is also considered.",
                "Conditional neighborhood proposals are to be considered in the last place, since they differ from the original one to the maximal extent.",
                "The above protocol produces the candidate proposals in Si x for each x ∈ {c, n, cn} at once.",
                "We can consider a variant of the protocol in which each proposal in Si x is constructed one by one (see Example 3.3).",
                "The above protocol is repeatedly applied to each one of the two negotiating agents until a negotiation ends in success/failure.",
                "Formally, the above negotiation protocol has the following properties.",
                "Theorem 3.2.",
                "Let Ag1 and Ag2 be two agents having abductive programs P1, H1 and P2, H2 , respectively. 1.",
                "If P1, H1 and P2, H2 are function-free (i.e., both Pi and Hi contain no function symbol), any negotiation will terminate. 2.",
                "If a negotiation terminates with agreement on a proposal G, both P1, H1 and P2, H2 have belief sets satisfying G. Proof. 1.",
                "When an abductive program is function-free, abducibles and negotiation sets are both finite.",
                "Moreover, if a proposal is once rejected, it is not proposed again by the function μ.",
                "Thus, negotiation will terminate in finite steps. 2.",
                "When a proposal G is made by Ag1, P1, H1 has a belief set satisfying G. If the agent Ag2 accepts the proposal G, it is satisfied by an answer set of P2 which is also a belief set of P2, H2 .",
                "Example 3.3.",
                "Suppose a buying-selling situation in the introduction.",
                "A seller agent has the abductive program Ps, Hs in which Ps consists of belief Bs and desire Ds: Bs : pc(b1, 1G, 512M, 80G) ; pc(b2, 1G, 512M, 80G) ←,(1) dvd-rw ; cd-rw ←, (2) Ds : normal price(1300) ← pc(b1, 1G, 512M, 80G), dvd-rw, (3) normal price(1200) ← pc(b1, 1G, 512M, 80G), cd-rw, (4) normal price(1200) ← pc(b2, 1G, 512M, 80G), dvd-rw, (5) price(x) ← normal price(x), add point, (6) price(x ∗ 0.9) ← normal price(x), pay cash, not add point,(7) add point ←, (8) Hs : add point, pay cash.",
                "Here, (1) and (2) represent selection of products.",
                "The atom pc(b1, 1G, 512M, 80G) represents that the seller agent has a PC of the brand b1 such that CPU is 1GHz, memory is 512MB, and HDD is 80GB.",
                "Prices of products are represented as desire of the seller.",
                "The rules (3) - (5) are normal prices of products.",
                "A normal price is a selling price on the condition that service points are added (6).",
                "On the other hand, a discount price is applied if the paying method is cash and no service point is added (7).",
                "The fact (8) represents the addition of service points.",
                "This service would be withdrawn in case of discount prices, so add point is specified as an abducible.",
                "A buyer agent has the abductive program Pb, Hb in which Pb consists of belief Bb and desire Db: Bb : drive ← dvd-rw, (9) drive ← cd-rw, (10) price(x) ←, (11) Db : pc(b1, 1G, 512M, 80G) ←, (12) dvd-rw ←, (13) cd-rw ← not dvd-rw, (14) ← pay cash, (15) ← price(x), x > 1200, (16) Hb : dvd-rw.",
                "Rules (12) - (16) are the buyers desire.",
                "Among them, (15) and (16) impose constraints for buying a PC.",
                "A DVD-RW is specified as an abducible which is subject to concession. (1st round) First, the following proposal is given by the buyer agent: G1 b : pc(b1, 1G, 512M, 80G), dvd-rw, price(x), x ≤ 1200.",
                "As Ps has no answer set which satisfies G1 b , the seller agent cannot accept the proposal.",
                "The seller takes an action of making a counter-proposal and performs abduction.",
                "As a result, the seller finds the minimal explanation (E, F) = ({ pay cash }, { add point }) which explains G1 b θ1 with θ1 = { x/1170 }.",
                "The seller constructs the conditional proposal: G1 s : pc(b1, 1G, 512M, 80G), dvd-rw, price(1170), pay cash, not add point and offers it to the buyer. (2nd round) The buyer does not accept G1 s because he/she cannot pay it by cash (15).",
                "The buyer then returns the critique G2 b = reject to the seller, together with the critique set CS2 b (Pb, G1 s) = {(15)}.",
                "In response to this, the seller tries to make another proposal which satisfies the constraint in this critique set.",
                "As G1 s is stored in FP 2 s and no other conditional proposal satisfying the buyers requirement exists, the seller produces neighborhood proposals.",
                "He/she relaxes G1 b by dropping x ≤ 1200 in the condition, and produces pc(b1, 1G, 512M, 80G), dvd-rw, price(x).",
                "As Ps has an answer set which satisfies G2 s : pc(b1, 1G, 512M, 80G), dvd-rw, price(1300), 1026 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) the seller offers G2 s as a new counter-proposal. (3rd round) The buyer does not accept G2 s because he/she cannot pay more than 1200USD (16).",
                "The buyer again returns the critique G3 b = reject to the seller, together with the critique set CS3 b (Pb, G2 s) = CS2 b (Pb, G1 s) ∪ {(16)}.",
                "The seller then considers another proposal by replacing b1 with a variable w, G1 b now becomes pc(w, 1G, 512M, 80G), dvd-rw, price(x), x ≤ 1200.",
                "As Ps has an answer set which satisfies G3 s : pc(b2, 1G, 512M, 80G), dvd-rw, price(1200), the seller offers G3 s as a new counter-proposal. (4th round) The buyer does not accept G3 s because a PC of the brand b2 is out of his/her interest and Pb has no answer set satisfying G3 s. Then, the buyer makes a concession by changing his/her original goal.",
                "The buyer relaxes G1 b by goal replacement using the rule (9) in Pb, and produces pc(b1, 1G, 512M, 80G), drive, price(x), x ≤ 1200.",
                "Using (10), the following proposal is produced: pc(b1, 1G, 512M, 80G), cd-rw, price(x), x ≤ 1200.",
                "As Pb \\ { dvd-rw } has a consistent answer set satisfying the above proposal, the buyer proposes the conditional neighborhood proposal G4 b : pc(b1, 1G, 512M, 80G), cd-rw, not dvd-rw, price(x), x ≤ 1200 to the seller agent.",
                "Since Ps also has an answer set satisfying G4 b , the seller accepts it and sends the message G4 s = accept to the buyer.",
                "Thus, the negotiation ends in success. 4.",
                "COMPUTATION In this section, we provide methods of computing proposals in terms of answer sets of programs.",
                "We first introduce some definitions from [15].",
                "Definition 4.1.",
                "Given an abductive program P, H , the set UR of update rules is defined as: UR = { L ← not L, L ← not L | L ∈ H } ∪ { +L ← L | L ∈ H \\ P } ∪ { −L ← not L | L ∈ H ∩ P } , where L, +L, and −L are new atoms uniquely associated with every L ∈ H. The atoms +L and −L are called update atoms.",
                "By the definition, the atom L becomes true iff L is not true.",
                "The pair of rules L ← not L and L ← not L specify the situation that an abducible L is true or not.",
                "When p(x) ∈ H and p(a) ∈ P but p(t) ∈ P for t = a, the rule +L ← L precisely becomes +p(t) ← p(t) for any t = a.",
                "In this case, the rule is shortly written as +p(x) ← p(x), x = a.",
                "Generally, the rule becomes +p(x) ← p(x), x = t1, . . . , x = tn for n such instances.",
                "The rule +L ← L derives the atom +L if an abducible L which is not in P is to be true.",
                "In contrast, the rule −L ← not L derives the atom −L if an abducible L which is in P is not to be true.",
                "Thus, update atoms represent the change of truth values of abducibles in a program.",
                "That is, +L means the introduction of L, while −L means the deletion of L. When an abducible L contains variables, the associated update atom +L or −L is supposed to have exactly the same variables.",
                "In this case, an update atom is semantically identified with its ground instances.",
                "The set of all update atoms associated with the abducibles in H is denoted by UH, and UH = UH+ ∪ UH− where UH+ (resp.",
                "UH− ) is the set of update atoms of the form +L (resp. −L).",
                "Definition 4.2.",
                "Given an abductive program P, H , its update program UP is defined as the program UP = (P \\ H) ∪ UR .",
                "An answer set S of UP is called U-minimal if there is no answer set T of UP such that T ∩ UH ⊂ S ∩ UH.",
                "By the definition, U-minimal answer sets exist whenever UP has answer sets.",
                "Update programs are used for computing (minimal) explanations of an observation.",
                "Given an observation G as a conjunction of literals and NAF-literals possibly containing variables, we introduce a new ground literal O together with the rule O ← G. In this case, O has an explanation (E, F) iff G has the same explanation.",
                "With this replacement, an observation is assumed to be a ground literal without loss of generality.",
                "In what follows, E+ = { +L | L ∈ E } and F − = { −L | L ∈ F } for E ⊆ H and F ⊆ H. Proposition 4.1. ([15]) Let P, H be an abductive program, UP its update program, and G a ground literal representing an observation.",
                "Then, a pair (E, F) is an explanation of G iff UP ∪ { ← not G } has a consistent answer set S such that E+ = S ∩ UH+ and F− = S ∩ UH− .",
                "In particular, (E, F) is a minimal explanation iff S is a U-minimal answer set.",
                "Example 4.1.",
                "To explain the observation G = flies(t) in the program P of Example 2.1, first construct the update program UP of P:3 UP : flies(x) ← bird(x), not ab(x), ab(x) ← broken-wing(x) , bird(t) ← , bird(o) ← , broken-wing(x) ← not broken-wing(x), broken-wing(x) ← not broken-wing(x), +broken-wing(x) ← broken-wing(x), x = t , −broken-wing(t) ← not broken-wing(t) .",
                "Next, consider the program UP ∪ { ← not flies(t) }.",
                "It has the single U-minimal answer set: S = { bird(t), bird(o), flies(t), flies(o), broken-wing(t), broken-wing(o), −broken-wing(t) }.",
                "The unique minimal explanation (E, F) = (∅, {broken-wing(t)}) of G is expressed by the update atom −broken-wing(t) in S ∩ UH− .",
                "Proposition 4.2.",
                "Let P, H be an abductive program and G a ground literal representing an observation.",
                "If P ∪ { ← not G } has a consistent answer set S, G has the minimal explanation (E, F) = (∅, ∅) and S satisfies G. Now we provide methods for computing (counter-)proposals.",
                "First, conditional proposals are computed as follows. input : an abductive program P, H , a proposal G; output : a set Sc of proposals.",
                "If G is a ground literal, compute its minimal explanation (E, F) in P, H using the update program.",
                "Put G, E, not F in Sc.",
                "Else if G is a conjunction possibly containing variables, consider the abductive program 3 t represents tweety and o represents opus.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1027 P ∪{ O ← G }, H with a ground literal O. Compute a minimal explanation of O in P ∪ { O ← G }, H using its update program.",
                "If O has a minimal explanation (E, F) with a substitution θ for variables in G, put Gθ, E, not F in Sc.",
                "Next, neighborhood proposals are computed as follows. input : an abductive program P, H , a proposal G; output : a set Sn of proposals. % neighborhood proposals by <br>anti-instantiation</br>; Construct G by <br>anti-instantiation</br>.",
                "For a ground literal O, if P ∪ { O ← G } ∪ { ← not O } has a consistent answer set satisfying G θ with a substitution θ and G θ = G, put G θ in Sn. % neighborhood proposals by dropping conditions; Construct G by dropping conditions.",
                "If G is a ground literal and the program P ∪ { ← not G } has a consistent answer set, put G in Sn.",
                "Else if G is a conjunction possibly containing variables, do the following.",
                "For a ground literal O, if P ∪{ O ← G }∪{ ← not O } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn. % neighborhood proposals by goal replacement; Construct G by goal replacement.",
                "If G is a ground literal and there is a rule H ← B in P such that G = Hσ and Bσ = G for some substitution σ, put G = Bσ.",
                "If P ∪ { ← not G } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn.",
                "Else if G is a conjunction possibly containing variables, do the following.",
                "For a replaced literal L ∈ G , if there is a rule H ← B in P such that L = Hσ and (G \\ {L}) ∪ Bσ = G for some substitution σ, put G = (G \\ {L}) ∪ Bσ.",
                "For a ground literal O, if P ∪ { O ← G } ∪ { ← not O } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn.",
                "Theorem 4.3.",
                "The set Sc (resp.",
                "Sn) computed above coincides with the set of conditional proposals (resp. neighborhood proposals).",
                "Proof.",
                "The result for Sc follows from Definition 3.3 and Proposition 4.1.",
                "The result for Sn follows from Definition 3.5 and Proposition 4.2.",
                "Conditional neighborhood proposals are computed by combining the above two procedures.",
                "Those proposals are computed at each round.",
                "Note that the procedure for computing Sn contains some nondeterministic choices.",
                "For instance, there are generally several candidates of literals to relax in a proposal.",
                "Also, there might be several rules in a program for the usage of goal replacement.",
                "In practice, an agent can prespecify literals in a proposal for possible relaxation or rules in a program for the usage of goal replacement. 5.",
                "RELATED WORK As there are a number of literature on automated negotiation, this section focuses on comparison with negotiation frameworks based on logic and argumentation.",
                "Sadri et al. [14] use abductive logic programming as a representation language of negotiating agents.",
                "Agents negotiate using common dialogue primitives, called dialogue moves.",
                "Each agent has an abductive logic program in which a sequence of dialogues are specified by a program, a dialogue protocol is specified as constraints, and dialogue moves are specified as abducibles.",
                "The behavior of agents is regulated by an observe-think-act cycle.",
                "Once a dialogue move is uttered by an agent, another agent that observed the utterance thinks and acts using a proof procedure.",
                "Their approach and ours both employ abductive logic programming as a platform of agent reasoning, but the use of it is quite different.",
                "First, they use abducibles to specify dialogue primitives of the form tell(utterer, receiver, subject, identifier, time), while we use abducibles to specify arbitrary permissible hypotheses to construct conditional proposals.",
                "Second, a program pre-specifies a plan to carry out in order to achieve a goal, together with available/missing resources in the context of resource-exchanging problems.",
                "This is in contrast with our method in which possible counter-proposals are newly constructed in response to a proposal made by an agent.",
                "Third, they specify a negotiation policy inside a program (as integrity constraints), while we give a protocol independent of individual agents.",
                "They provide an operational model that completely specifies the behavior of agents in terms of agent cycle.",
                "We do not provide such a complete specification of the behavior of agents.",
                "Our primary interest is to mechanize construction of proposals.",
                "Bracciali and Torroni [2] formulate abductive agents that have knowledge in abductive logic programs.",
                "To explain an observation, two agents communicate by exchanging integrity constraints.",
                "In the process of communication, an agent can revise its own integrity constraints according to the information provided by the other agent.",
                "A set IC of integrity constraints relaxes a set IC (or IC tightens IC ) if any observation that can be proved with respect to IC can also be proved with respect to IC .",
                "For instance, IC : ← a, b, c relaxes IC : ← a, b.",
                "Thus, they use relaxation for weakening the constraints in an abductive logic program.",
                "In contrast, we use relaxation for weakening proposals and three different relaxation methods, <br>anti-instantiation</br>, dropping conditions, and goal replacement, are considered.",
                "Their goal is to explain an observation by revising integrity constraints of an agent through communication, while we use integrity constraints for communication to explain critiques and help other agents in making counter-proposals.",
                "Meyer et al. [11] introduce a logical framework for negotiating agents.",
                "They introduce two different modes of negotiation: concession and adaptation.",
                "They provide rational postulates to characterize negotiated outcomes between two agents, and describe methods for constructing outcomes.",
                "They provide logical conditions for negotiated outcomes to satisfy, but they do not describe a process of negotiation nor negotiation protocols.",
                "Moreover, they represent agents by classical propositional theories, which is different from our abductive logic programming framework.",
                "Foo et al. [5] model one-to-one negotiation as a one-time encounter between two extended logic programs.",
                "An agent offers an answer set of its program, and their mutual deal is regarded as a trade on their answer sets.",
                "Starting from the initial agreement set S∩T for an answer set S of an agent and an answer set T of another agent, each agent extends this set to reflect its own demand while keeping consistency with demand of the other agent.",
                "Their algorithm returns new programs having answer sets which are consistent with each other and keep the agreement set.",
                "The work is extended to repeated encounters in [3].",
                "In their framework, two agents exchange answer sets to produce a common belief set, which is different from our framework of exchanging proposals.",
                "There are a number of proposals for negotiation based 1028 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) on argumentation.",
                "An advantage of argumentation-based negotiation is that it constructs a proposal with arguments supporting the proposal [1].",
                "The existence of arguments is useful to convince other agents of reasons why an agent offers (counter-)proposals or returns critiques.",
                "Parsons et al. [13] develop a logic of argumentation-based negotiation among BDI agents.",
                "In one-to-one negotiation, an agent A generates a proposal together with its arguments, and passes it to another agent B.",
                "The proposal is evaluated by B which attempts to build arguments against it.",
                "If it conflicts with Bs interest, B informs A of its objection by sending back its attacking argument.",
                "In response to this, A tries to find an alternative way of achieving its original objective, or a way of persuading B to drop its objection.",
                "If either type of argument can be found, A will submit it to B.",
                "If B finds no reason to reject the new proposal, it will be accepted and the negotiation ends in success.",
                "Otherwise, the process is iterated.",
                "In this negotiation processes, the agent A never changes its original objective, so that negotiation ends in failure if A fails to find an alternative way of achieving the original objective.",
                "In our framework, when a proposal is rejected by another agent, an agent can weaken or change its objective by abduction and relaxation.",
                "Our framework does not have a mechanism of argumentation, but reasons for critiques can be informed by responding critique sets.",
                "Kakas and Moraitis [10] propose a negotiation protocol which integrates abduction within an argumentation framework.",
                "A proposal contains an offer corresponding to the negotiation object, together with supporting information representing conditions under which this offer is made.",
                "Supporting information is computed by abduction and is used for constructing conditional arguments during the process of negotiation.",
                "In their negotiation protocol, when an agent cannot satisfy its own goal, the agent considers the other agents goal and searches for conditions under which the goal is acceptable.",
                "Our present approach differs from theirs in the following points.",
                "First, they use abduction to seek conditions to support arguments, while we use abduction to seek conditions for proposals to accept.",
                "Second, in their negotiation protocol, counter-proposals are chosen among candidates based on preference knowledge of an agent at meta-level, which represents policy under which an agent uses its object-level decision rules according to situations.",
                "In our framework, counter-proposals are newly constructed using abduction and relaxation.",
                "The method of construction is independent of particular negotiation protocols.",
                "As [2, 10, 14], abduction or abductive logic programming used in negotiation is mostly based on normal abduction.",
                "In contrast, our approach is based on extended abduction which can not only introduce hypotheses but remove them from a program.",
                "This is another important difference.",
                "Relaxation and neighborhood query answering are devised to make databases cooperative with their users [4, 6].",
                "In this sense, those techniques have the spirit similar to cooperative problem solving in multi-agent systems.",
                "As far as the authors know, however, there is no study which applies those technique to agent negotiation. 6.",
                "CONCLUSION In this paper we proposed a logical framework for negotiating agents.",
                "To construct proposals in the process of negotiation, we combined the techniques of extended abduction and relaxation.",
                "It was shown that these two operations are used for general inference rules in producing proposals.",
                "We developed a negotiation protocol between two agents based on exchange of proposals and critiques, and provided procedures for computing proposals in abductive logic programming.",
                "This enables us to realize automated negotiation on top of the existing answer set solvers.",
                "The present framework does not have a mechanism of selecting an optimal (counter-)proposal among different alternatives.",
                "To compare and evaluate proposals, an agent must have preference knowledge of candidate proposals.",
                "Further elaboration to maximize the utility of agents is left for future study. 7.",
                "REFERENCES [1] L. Amgoud, S. Parsons, and N. Maudet.",
                "Arguments, dialogue, and negotiation.",
                "In: Proc.",
                "ECAI-00, pp. 338-342, IOS Press, 2000. [2] A. Bracciali and P. Torroni.",
                "A new framework for knowledge revision of abductive agents through their interaction.",
                "In: Proc.",
                "CLIMA-IV, Computational Logic in Multi-Agent Systems, LNAI 3259, pp. 159-177, 2004. [3] W. Chen, M. Zhang, and N. Foo.",
                "Repeated negotiation of logic programs.",
                "In: Proc. 7th Workshop on Nonmonotonic Reasoning, Action and Change, 2006. [4] W. W. Chu, Q. Chen, and R.-C. Lee.",
                "Cooperative query answering via type abstraction hierarchy.",
                "In: Cooperating Knowledge Based Systems, S. M. Deen ed., pp. 271-290, Springer, 1990. [5] N. Foo, T. Meyer, Y. Zhang, and D. Zhang.",
                "Negotiating logic programs.",
                "In: Proc. 6th Workshop on Nonmonotonic Reasoning, Action and Change, 2005. [6] T. Gaasterland, P. Godfrey, and J. Minker.",
                "Relaxation as a platform for cooperative answering.",
                "Journal of Intelligence Information Systems 1(3/4):293-321, 1992. [7] M. Gelfond and V. Lifschitz.",
                "Classical negation in logic programs and disjunctive databases.",
                "New Generation Computing 9:365-385, 1991. [8] K. Inoue and C. Sakama.",
                "Abductive framework for nonmonotonic theory change.",
                "In: Proc.",
                "IJCAI-95, pp. 204-210, Morgan Kaufmann. [9] A. C. Kakas, R. A. Kowalski, and F. Toni, The role of abduction in logic programming.",
                "In: Handbook of Logic in AI and Logic Programming, D. M. Gabbay, et al. (eds), vol. 5, pp. 235-324, Oxford University Press, 1998. [10] A. C. Kakas and P. Moraitis.",
                "Adaptive agent negotiation via argumentation.",
                "In: Proc.",
                "AAMAS-06, pp. 384-391, ACM Press. [11] T. Meyer, N. Foo, R. Kwok, and D. Zhang.",
                "Logical foundation of negotiation: outcome, concession and adaptation.",
                "In: Proc.",
                "AAAI-04, pp. 293-298, MIT Press. [12] R. S. Michalski.",
                "A theory and methodology of inductive learning.",
                "In: Machine Learning: An Artificial Intelligence Approach, R. S. Michalski, et al. (eds), pp. 83-134, Morgan Kaufmann, 1983. [13] S. Parsons, C. Sierra and N. Jennings.",
                "Agents that reason and negotiate by arguing.",
                "Journal of Logic and Computation, 8(3):261-292, 1988. [14] F. Sadri, F. Toni, and P. Torroni, An abductive logic programming architecture for negotiating agents.",
                "In: Proc. 8th European Conf. on Logics in AI, LNAI 2424, pp. 419-431, Springer, 2002. [15] C. Sakama and K. Inoue.",
                "An abductive framework for computing knowledge base updates.",
                "Theory and Practice of Logic Programming 3(6):671-715, 2003.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1029"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Luego, G se relaja a G de las siguientes tres maneras: \"anti-instanciación\": construya G de tal manera que g θ = g para alguna sustitución θ.",
                "La \"anti-instanciación\" reemplaza las constantes (o términos) con nuevas variables.",
                "Sea G una propuesta obtenida por \"anti-instanciación\".",
                "Si P tiene un conjunto de respuestas que satisface G θ para alguna sustitución θ y g θ = g, g θ se llama propuesta de vecindario por \"anti-instanciación\".2.",
                "Ejemplo 3.1) Dada la propuesta g = asistencia (departamento de compt), salario (x), x ≥ 50, 000, • g1 = asistencia (w), salario (x), x ≥ 50, 000 se produce sustituyendo el departamento de CompT conuna variable w.Como g1θ1 = asistencia (departamento de matemáticas), salario (50, 000) con θ1 = {w/de departamento matemático} se satisface con un conjunto de respuestas de P, G1θ1 se convierte en una propuesta del vecindario por \"anti-instanciación\".• G2 = asistencia (departamento de compt), el salario (x) se produce dejando caer la condición salarial x ≥ 50, 000.",
                "Sea G una propuesta obtenida por condiciones de \"anti-instanciación\" o caída.",
                "Si (E, F) es una explicación mínima de G θ (= G) para alguna sustitución θ, la conjunción G θ, E, no F se llama propuesta de vecindad condicional por condiciones de \"anti-instanciación\"/caída.2.",
                "A continuación, las propuestas del vecindario se calculan de la siguiente manera.Entrada: un programa abductivo P, H, una propuesta G;Salida: un SN establecido de propuestas.% propuestas del vecindario por \"anti-instanciación\";Construir g por \"anti-instanciación\".",
                "Por el contrario, utilizamos la relajación para debilitar propuestas y tres métodos de relajación diferentes, se consideran la \"anti-instanciación\", las condiciones de caída y el reemplazo de objetivos."
            ],
            "translated_text": "",
            "candidates": [
                "antiestanciación",
                "anti-instanciación",
                "antiestanciación",
                "anti-instanciación",
                "antiestanciación",
                "anti-instanciación",
                "anti-instanciación",
                "anti-instanciación",
                "anti-instanciación",
                "anti-instanciación",
                "antiestanciación",
                "anti-instanciación",
                "anti-instanciación",
                "anti-instanciación",
                "antiestanciación",
                "anti-instanciación",
                "anti-instanciación",
                "antiestanciación",
                "anti-instanciación"
            ],
            "error": []
        },
        "inductive generalization": {
            "translated_key": "generalización inductiva",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Negotiation by Abduction and Relaxation Chiaki Sakama Dept.",
                "Computer and Communication Sciences Wakayama University Sakaedani, Wakayama 640 8510, Japan sakama@sys.wakayama-u.ac.jp Katsumi Inoue National Institute of Informatics 2-1-2 Hitotsubashi, Chiyoda-ku Tokyo 101 8430, Japan ki@nii.ac.jp ABSTRACT This paper studies a logical framework for automated negotiation between two agents.",
                "We suppose an agent who has a knowledge base represented by a logic program.",
                "Then, we introduce methods of constructing counter-proposals in response to proposals made by an agent.",
                "To this end, we combine the techniques of extended abduction in artificial intelligence and relaxation in cooperative query answering for databases.",
                "These techniques are respectively used for producing conditional proposals and neighborhood proposals in the process of negotiation.",
                "We provide a negotiation protocol based on the exchange of these proposals and develop procedures for computing new proposals.",
                "Categories and Subject Descriptors F.4.1 [Mathematical Logic]: Logic and constraint programming;; I.2.11 [Distributed Artificial Intelligence]: Multiagent systems General Terms Theory 1.",
                "INTRODUCTION Automated negotiation has been received increasing attention in multi-agent systems, and a number of frameworks have been proposed in different contexts ([1, 2, 3, 5, 10, 11, 13, 14], for instance).",
                "Negotiation usually proceeds in a series of rounds and each agent makes a proposal at every round.",
                "An agent that received a proposal responds in two ways.",
                "One is a critique which is a remark as to whether or not (parts of) the proposal is accepted.",
                "The other is a counter-proposal which is an alternative proposal made in response to a previous proposal [13].",
                "To see these proposals in one-to-one negotiation, suppose the following negotiation dialogue between a buyer agent B and a seller agent S. (Bi (or Si) represents an utterance of B (or S) in the i-th round.)",
                "B1: I want to buy a personal computer of the brand b1, with the specification of CPU:1GHz, Memory:512MB, HDD: 80GB, and a DVD-RW driver.",
                "I want to get it at the price under 1200 USD.",
                "S1: We can provide a PC with the requested specification if you pay for it by cash.",
                "In this case, however, service points are not added for this special discount.",
                "B2: I cannot pay it by cash.",
                "S2: In a normal price, the requested PC costs 1300 USD.",
                "B3: I cannot accept the price.",
                "My budget is under 1200 USD.",
                "S3: We can provide another computer with the requested specification, except that it is made by the brand b2.",
                "The price is exactly 1200 USD.",
                "B4: I do not want a PC of the brand b2.",
                "Instead, I can downgrade a driver from DVD-RW to CD-RW in my initial proposal.",
                "S4: Ok, I accept your offer.",
                "In this dialogue, in response to the opening proposal B1, the counter-proposal S1 is returned.",
                "In the rest of the dialogue, B2, B3, S4 are critiques, while S2, S3, B4 are counterproposals.",
                "Critiques are produced by evaluating a proposal in a knowledge base of an agent.",
                "In contrast, making counter-proposals involves generating an alternative proposal which is more favorable to the responding agent than the original one.",
                "It is known that there are two ways of producing counterproposals: extending the initial proposal or amending part of the initial proposal.",
                "According to [13], the first type appears in the dialogue: A: I propose that you provide me with service X.",
                "B: I propose that I provide you with service X if you provide me with service Z.",
                "The second type is in the dialogue: A: I propose that I provide you with service Y if you provide me with service X.",
                "B: I propose that I provide you with service X if you provide me with service Z.",
                "A negotiation proceeds by iterating such give-andtake dialogues until it reaches an agreement/disagreement.",
                "In those dialogues, agents generate (counter-)proposals by reasoning on their own goals or objectives.",
                "The objective of the agent A in the above dialogues is to obtain service X.",
                "The agent B proposes conditions to provide the service.",
                "In the process of negotiation, however, it may happen that agents are obliged to weaken or change their initial goals to reach a negotiated compromise.",
                "In the dialogue of 1022 978-81-904262-7-5 (RPS) c 2007 IFAAMAS a buyer agent and a seller agent presented above, a buyer agent changes its initial goal by downgrading a driver from DVD-RW to CD-RW.",
                "Such behavior is usually represented as specific meta-knowledge of an agent or specified as negotiation protocols in particular problems.",
                "Currently, there is no computational logic for automated negotiation which has general inference rules for producing (counter-)proposals.",
                "The purpose of this paper is to mechanize a process of building (counter-)proposals in one-to-one negotiation dialogues.",
                "We suppose an agent who has a knowledge base represented by a logic program.",
                "We then introduce methods for generating three different types of proposals.",
                "First, we use the technique of extended abduction in artificial intelligence [8, 15] to construct a conditional proposal as an extension of the original one.",
                "Second, we use the technique of relaxation in cooperative query answering for databases [4, 6] to construct a neighborhood proposal as an amendment of the original one.",
                "Third, combining extended abduction and relaxation, conditional neighborhood proposals are constructed as amended extensions of the original proposal.",
                "We develop a negotiation protocol between two agents based on the exchange of these counter-proposals and critiques.",
                "We also provide procedures for computing proposals in logic programming.",
                "This paper is organized as follows.",
                "Section 2 introduces a logical framework used in this paper.",
                "Section 3 presents methods for constructing proposals, and provides a negotiation protocol.",
                "Section 4 provides methods for computing proposals in logic programming.",
                "Section 5 discusses related works, and Section 6 concludes the paper. 2.",
                "PRELIMINARIES Logic programs considered in this paper are extended disjunctive programs (EDP) [7].",
                "An EDP (or simply a program) is a set of rules of the form: L1 ; · · · ; Ll ← Ll+1 , . . . , Lm, not Lm+1 , . . . , not Ln (n ≥ m ≥ l ≥ 0) where each Li is a positive/negative literal, i.e., A or ¬A for an atom A, and not is negation as failure (NAF). not L is called an NAF-literal.",
                "The symbol ; represents disjunction.",
                "The left-hand side of the rule is the head, and the right-hand side is the body.",
                "For each rule r of the above form, head(r), body+ (r) and body− (r) denote the sets of literals {L1, . . . , Ll}, {Ll+1, . . . , Lm}, and {Lm+1, . . . , Ln}, respectively.",
                "Also, not body− (r) denotes the set of NAF-literals {not Lm+1, . . . , not Ln}.",
                "A disjunction of literals and a conjunction of (NAF-)literals in a rule are identified with its corresponding sets of literals.",
                "A rule r is often written as head(r) ← body+ (r), not body− (r) or head(r) ← body(r) where body(r) = body+ (r)∪not body− (r).",
                "A rule r is disjunctive if head(r) contains more than one literal.",
                "A rule r is an integrity constraint if head(r) = ∅; and r is a fact if body(r) = ∅.",
                "A program is NAF-free if no rule contains NAF-literals.",
                "Two rules/literals are identified with respect to variable renaming.",
                "A substitution is a mapping from variables to terms θ = {x1/t1, . . . , xn/tn}, where x1, . . . , xn are distinct variables and each ti is a term distinct from xi.",
                "Given a conjunction G of (NAF-)literals, Gθ denotes the conjunction obtained by applying θ to G. A program, rule, or literal is ground if it contains no variable.",
                "A program P with variables is a shorthand of its ground instantiation Ground(P), the set of ground rules obtained from P by substituting variables in P by elements of its Herbrand universe in every possible way.",
                "The semantics of an EDP is defined by the answer set semantics [7].",
                "Let Lit be the set of all ground literals in the language of a program.",
                "Suppose a program P and a set of literals S(⊆ Lit).",
                "Then, the reduct P S is the program which contains the ground rule head(r) ← body+ (r) iff there is a rule r in Ground(P) such that body− (r)∩S = ∅.",
                "Given an NAF-free EDP P, Cn(P) denotes the smallest set of ground literals which is (i) closed under P, i.e., for every ground rule r in Ground(P), body(r) ⊆ Cn(P) implies head(r) ∩ Cn(P) = ∅; and (ii) logically closed, i.e., it is either consistent or equal to Lit.",
                "Given an EDP P and a set S of literals, S is an answer set of P if S = Cn(P S ).",
                "A program has none, one, or multiple answer sets in general.",
                "An answer set is consistent if it is not Lit.",
                "A program P is consistent if it has a consistent answer set; otherwise, P is inconsistent.",
                "Abductive logic programming [9] introduces a mechanism of hypothetical reasoning to logic programming.",
                "An abductive framework used in this paper is the extended abduction introduced by Inoue and Sakama [8, 15].",
                "An abductive program is a pair P, H where P is an EDP and H is a set of literals called abducibles.",
                "When a literal L ∈ H contains variables, any instance of L is also an abducible.",
                "An abductive program P, H is consistent if P is consistent.",
                "Throughout the paper, abductive programs are assumed to be consistent unless stated otherwise.",
                "Let G = L1, . . . , Lm, not Lm+1, . . . , not Ln be a conjunction, where all variables in G are existentially quantified at the front and range-restricted, i.e., every variable in Lm+1, . . . , Ln appears in L1, . . . , Lm.",
                "A set S of ground literals satisfies the conjunction G if { L1θ, . . . , Lmθ } ⊆ S and { Lm+1θ, . . . , Lnθ }∩ S = ∅ for some ground instance Gθ with a substitution θ.",
                "Let P, H be an abductive program and G a conjunction as above.",
                "A pair (E, F) is an explanation of an observation G in P, H if1 1. (P \\ F) ∪ E has an answer set which satisfies G, 2. (P \\ F) ∪ E is consistent, 3.",
                "E and F are sets of ground literals such that E ⊆ H\\P and F ⊆ H ∩ P. When (P \\ F) ∪ E has an answer set S satisfying the above three conditions, S is called a belief set of an abductive program P, H satisfying G (with respect to (E, F)).",
                "Note that if P has a consistent answer set S satisfying G, S is also a belief set of P, H satisfying G with respect to (E, F) = (∅, ∅).",
                "Extended abduction introduces/removes hypotheses to/from a program to explain an observation.",
                "Note that normal abduction (as in [9]) considers only introducing hypotheses to explain an observation.",
                "An explanation (E, F) of an observation G is called minimal if for any explanation (E , F ) of G, E ⊆ E and F ⊆ F imply E = E and F = F. Example 2.1.",
                "Consider the abductive program P, H : P : flies(x) ← bird(x), not ab(x) , ab(x) ← broken-wing(x) , bird(tweety) ← , bird(opus) ← , broken-wing(tweety) ← .",
                "H : broken-wing(x) .",
                "The observation G = flies(tweety) has the minimal explanation (E, F) = (∅, {broken-wing(tweety)}). 1 This defines credulous explanations [15].",
                "Skeptical explanations are used in [8].",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1023 3.",
                "NEGOTIATION 3.1 Conditional Proposals by Abduction We suppose an agent who has a knowledge base represented by an abductive program P, H .",
                "A program P consists of two types of knowledge, belief B and desire D, where B represents objective knowledge of an agent, while D represents subjective knowledge in general.",
                "We define P = B ∪ D, but do not distinguish B and D if such distinction is not important in the context.",
                "In contrast, abducibles H are used for representing permissible conditions to make a compromise in the process of negotiation.",
                "Definition 3.1.",
                "A proposal G is a conjunction of literals and NAF-literals: L1, . . . , Lm, not Lm+1, . . . , not Ln where every variable in G is existentially quantified at the front and range-restricted.",
                "In particular, G is called a critique if G = accept or G = reject where accept and reject are the reserved propositions.",
                "A counter-proposal is a proposal made in response to a proposal.",
                "Definition 3.2.",
                "A proposal G is accepted in an abductive program P, H if P has an answer set satisfying G. When a proposal is not accepted, abduction is used for seeking conditions to make it acceptable.",
                "Definition 3.3.",
                "Let P, H be an abductive program and G a proposal.",
                "If (E, F) is a minimal explanation of Gθ for some substitution θ in P, H , the conjunction G : Gθ, E, not F is called a conditional proposal (for G), where E, not F represents the conjunction: A1, . . . , Ak, not Ak+1, . . . , not Al for E = {A1, . . . , Ak} and F = { Ak+1, . . . , Al }.",
                "Proposition 3.1.",
                "Let P, H be an abductive program and G a proposal.",
                "If G is a conditional proposal, there is a belief set S of P, H satisfying G .",
                "Proof.",
                "When G = Gθ, E, not F, (P \\ F) ∪ E has a consistent answer set S satisfying Gθ and E ∩ F = ∅.",
                "In this case, S satisfies Gθ, E, not F. A conditional proposal G provides a minimal requirement for accepting the proposal G. If Gθ has multiple minimal explanations, several conditional proposals exist accordingly.",
                "When (E, F) = (∅, ∅), a conditional proposal is used as a new proposal made in response to the proposal G. Example 3.1.",
                "An agent seeks a position of a research assistant at the computer department of a university with the condition that the salary is at least 50,000 USD per year.",
                "The agent makes his/her request as the proposal:2 G = assist(compt dept), salary(x), x ≥ 50, 000.",
                "The university has the abductive program P, H : P : salary(40, 000) ← assist(compt dept), not has PhD, salary(60, 000) ← assist(compt dept), has PhD, salary(50, 000) ← assist(math dept), salary(55, 000) ← system admin(compt dept), 2 For notational convenience, we often include mathematical (in)equations in proposals/programs.",
                "They are written by literals, for instance, x ≥ y by geq(x, y) with a suitable definition of the predicate geq. employee(x) ← assist(x), employee(x) ← system admin(x), assist(compt dept); assist(math dept) ; system admin(compt dept) ←, H : has PhD, where available positions are represented by disjunction.",
                "According to P, the base salary of a research assistant at the computer department is 40,000 USD, but if he/she has PhD, it is 60,000 USD.",
                "In this case, (E, F) = ({has PhD}, ∅) becomes the minimal explanation of Gθ = assist(compt dept), salary(60, 000) with θ = { x/60, 000 }.",
                "Then, the conditional proposal made by the university becomes assist(compt dept), salary(60, 000), has PhD . 3.2 Neighborhood Proposals by Relaxation When a proposal is unacceptable, an agent tries to construct a new counter-proposal by weakening constraints in the initial proposal.",
                "We use techniques of relaxation for this purpose.",
                "Relaxation is used as a technique of cooperative query answering in databases [4, 6].",
                "When an original query fails in a database, relaxation expands the scope of the query by relaxing the constraints in the query.",
                "This allows the database to return neighborhood answers which are related to the original query.",
                "We use the technique for producing proposals in the process of negotiation.",
                "Definition 3.4.",
                "Let P, H be an abductive program and G a proposal.",
                "Then, G is relaxed to G in the following three ways: Anti-instantiation: Construct G such that G θ = G for some substitution θ.",
                "Dropping conditions: Construct G such that G ⊂ G. Goal replacement: If G is a conjunction G1, G2, where G1 and G2 are conjunctions, and there is a rule L ← G1 in P such that G1θ = G1 for some substitution θ, then build G as Lθ, G2.",
                "Here, Lθ is called a replaced literal.",
                "In each case, every variable in G is existentially quantified at the front and range-restricted.",
                "Anti-instantiation replaces constants (or terms) with fresh variables.",
                "Dropping conditions eliminates some conditions in a proposal.",
                "Goal replacement replaces the condition G1 in G with a literal Lθ in the presence of a rule L ← G1 in P under the condition G1θ = G1.",
                "All these operations generalize proposals in different ways.",
                "Each G obtained by these operations is called a relaxation of G. It is worth noting that these operations are also used in the context of <br>inductive generalization</br> [12].",
                "The relaxed proposal can produce new offers which are neighbor to the original proposal.",
                "Definition 3.5.",
                "Let P, H be an abductive program and G a proposal. 1.",
                "Let G be a proposal obtained by anti-instantiation.",
                "If P has an answer set S which satisfies G θ for some substitution θ and G θ = G, G θ is called a neighborhood proposal by anti-instantiation. 2.",
                "Let G be a proposal obtained by dropping conditions.",
                "If P has an answer set S which satisfies G θ for some substitution θ, G θ is called a neighborhood proposal by dropping conditions. 1024 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.",
                "Let G be a proposal obtained by goal replacement.",
                "For a replaced literal L ∈ G and a rule H ← B in P such that L = Hσ and (G \\ {L}) ∪ Bσ = G for some substitution σ, put G = (G \\ {L}) ∪ Bσ.",
                "If P has an answer set S which satisfies G θ for some substitution θ, G θ is called a neighborhood proposal by goal replacement.",
                "Example 3.2. (cont.",
                "Example 3.1) Given the proposal G = assist(compt dept), salary(x), x ≥ 50, 000, • G1 = assist(w), salary(x), x ≥ 50, 000 is produced by substituting compt dept with a variable w. As G1θ1 = assist(math dept), salary(50, 000) with θ1 = { w/math dept } is satisfied by an answer set of P, G1θ1 becomes a neighborhood proposal by anti-instantiation. • G2 = assist(compt dept), salary(x) is produced by dropping the salary condition x ≥ 50, 000.",
                "As G2θ2 = assist(compt dept), salary(40, 000) with θ2 = { x/40, 000 } is satisfied by an answer set of P, G2θ2 becomes a neighborhood proposal by dropping conditions. • G3 = employee(compt dept), salary(x), x ≥ 50, 000 is produced by replacing assist(compt dept) with employee(compt dept) using the rule employee(x) ← assist(x) in P. By G3 and the rule employee(x) ← system admin(x) in P, G3 = sys admin(compt dept), salary(x), x ≥ 50, 000 is produced.",
                "As G3 θ3 = sys admin(compt dept), salary(55, 000) with θ3 = { x/55, 000 } is satisfied by an answer set of P, G3 θ3 becomes a neighborhood proposal by goal replacement.",
                "Finally, extended abduction and relaxation are combined to produce conditional neighborhood proposals.",
                "Definition 3.6.",
                "Let P, H be an abductive program and G a proposal. 1.",
                "Let G be a proposal obtained by either anti-instantiation or dropping conditions.",
                "If (E, F) is a minimal explanation of G θ(= G) for some substitution θ, the conjunction G θ, E, not F is called a conditional neighborhood proposal by anti-instantiation/dropping conditions. 2.",
                "Let G be a proposal obtained by goal replacement.",
                "Suppose G as in Definition 3.5(3).",
                "If (E, F) is a minimal explanation of G θ for some substitution θ, the conjunction G θ, E, not F is called a conditional neighborhood proposal by goal replacement.",
                "A conditional neighborhood proposal reduces to a neighborhood proposal when (E, F) = (∅, ∅). 3.3 Negotiation Protocol A negotiation protocol defines how to exchange proposals in the process of negotiation.",
                "This section presents a negotiation protocol in our framework.",
                "We suppose one-to-one negotiation between two agents who have a common ontology and the same language for successful communication.",
                "Definition 3.7.",
                "A proposal L1, ..., Lm, not Lm+1, ..., not Ln violates an integrity constraint ← body+ (r), not body− (r) if for any substitution θ, there is a substitution σ such that body+ (r)σ ⊆ { L1θ, . . . , Lmθ }, body− (r)σ∩{ L1θ, . . . , Lmθ } = ∅, and body− (r)σ ⊆ { Lm+1θ, . . . , Lnθ }.",
                "Integrity constraints are conditions which an agent should satisfy, so that they are used to explain why an agent does not accept a proposal.",
                "A negotiation proceeds in a series of rounds.",
                "Each i-th round (i ≥ 1) consists of a proposal Gi 1 made by one agent Ag1 and another proposal Gi 2 made by the other agent Ag2.",
                "Definition 3.8.",
                "Let P1, H1 be an abductive program of an agent Ag1 and Gi 2 a proposal made by Ag2 at the i-th round.",
                "A critique set of Ag1 (at the i-th round) is a set CSi 1(P1, Gj 2) = CSi−1 1 (P1, Gj−1 2 ) ∪ { r | r is an integrity constraint in P1 and Gj 2 violates r } where j = i − 1 or i, and CS0 1 (P1, G0 2) = CS1 1 (P1, G0 2) = ∅.",
                "A critique set of an agent Ag1 accumulates integrity constraints which are violated by proposals made by another agent Ag2.",
                "CSi 2(P2, Gj 1) is defined in the same manner.",
                "Definition 3.9.",
                "Let Pk, Hk be an abductive program of an agent Agk and Gj a proposal, which is not a critique, made by any agent at the j(≤ i)-th round.",
                "A negotiation set of Agk (at the i-th round) is a triple NSi k = (Si c, Si n, Si cn), where Si c is the set of conditional proposals, Si n is the set of neighborhood proposals, and Si cn is the set of conditional neighborhood proposals, produced by Gj and Pk, Hk .",
                "A negotiation set represents the space of possible proposals made by an agent.",
                "Si x (x ∈ {c, n, cn}) accumulates proposals produced by Gj (1 ≤ j ≤ i) according to Definitions 3.3, 3.5, and 3.6.",
                "Note that an agent can construct counter-proposals by modifying its own previous proposals or another agents proposals.",
                "An agent Agk accumulates proposals that are made by Agk but are rejected by another agent, in the failed proposal set FP i k (at the i-th round), where FP 0 k = ∅.",
                "Suppose two agents Ag1 and Ag2 who have abductive programs P1, H1 and P2, H2 , respectively.",
                "Given a proposal G1 1 which is satisfied by an answer set of P1, a negotiation starts.",
                "In response to the proposal Gi 1 made by Ag1 at the i-th round, Ag2 behaves as follows. 1.",
                "If Gi 1 = accept, an agreement is reached and negotiation ends in success. 2.",
                "Else if Gi 1 = reject, put FP i 2 = FPi−1 2 ∪{Gi−1 2 } where {G0 2} = ∅.",
                "Proceed to the step 4(b). 3.",
                "Else if P2 has an answer set satisfying Gi 1, Ag2 returns Gi 2 = accept to Ag1.",
                "Negotiation ends in success. 4.",
                "Otherwise, Ag2 behaves as follows.",
                "Put FP i 2 = FPi−1 2 . (a) If Gi 1 violates an integrity constraint in P2, return the critique Gi 2 = reject to Ag1, together with the critique set CSi 2(P2, Gi 1). (b) Otherwise, construct NSi 2 as follows. (i) Produce Si c. Let μ(Si c) = { p | p ∈ Si c \\ FPi 2 and p satisfies the constraints in CSi 1(P1, Gi−1 2 )}.",
                "If μ(Si c) = ∅, select one from μ(Si c) and propose it as Gi 2 to Ag1; otherwise, go to (ii). (ii) Produce Si n. If μ(Si n) = ∅, select one from μ(Si n) and propose it as Gi 2 to Ag1; otherwise, go to (iii). (iii) Produce Si cn.",
                "If μ(Si cn) = ∅, select one from μ(Si cn) and propose it as Gi 2 to Ag1; otherwise, negotiation ends in failure.",
                "This means that Ag2 can make no counter-proposal or every counterproposal made by Ag2 is rejected by Ag1.",
                "In the step 4(a), Ag2 rejects the proposal Gi 1 and returns the reason of rejection as a critique set.",
                "This helps for Ag1 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1025 in preparing a next counter-proposal.",
                "In the step 4(b), Ag2 constructs a new proposal.",
                "In its construction, Ag2 should take care of the critique set CSi 1(P1, Gi−1 2 ), which represents integrity constraints, if any, accumulated in previous rounds, that Ag1 must satisfy.",
                "Also, FP i 2 is used for removing proposals which have been rejected.",
                "Construction of Si x (x ∈ {c, n, cn}) in NSi 2 is incrementally done by adding new counter-proposals produced by Gi 1 or Gi−1 2 to Si−1 x .",
                "For instance, Si n in NSi 2 is computed as Si n = Si−1 n ∪{ p | p is a neighborhood proposal made by Gi 1 } ∪ { p | p is a neighborhood proposal made by Gi−1 2 }, where S0 n = ∅.",
                "That is, Si n is constructed from Si−1 n by adding new proposals which are obtained by modifying the proposal Gi 1 made by Ag1 at the i-th round or modifying the proposal Gi−1 2 made by Ag2 at the (i − 1)-th round.",
                "Si c and Si cn are obtained as well.",
                "In the above protocol, an agent produces Si c at first, secondly Si n, and finally Si cn.",
                "This strategy seeks conditions which satisfy the given proposal, prior to neighborhood proposals which change the original one.",
                "Another strategy, which prefers neighborhood proposals to conditional ones, is also considered.",
                "Conditional neighborhood proposals are to be considered in the last place, since they differ from the original one to the maximal extent.",
                "The above protocol produces the candidate proposals in Si x for each x ∈ {c, n, cn} at once.",
                "We can consider a variant of the protocol in which each proposal in Si x is constructed one by one (see Example 3.3).",
                "The above protocol is repeatedly applied to each one of the two negotiating agents until a negotiation ends in success/failure.",
                "Formally, the above negotiation protocol has the following properties.",
                "Theorem 3.2.",
                "Let Ag1 and Ag2 be two agents having abductive programs P1, H1 and P2, H2 , respectively. 1.",
                "If P1, H1 and P2, H2 are function-free (i.e., both Pi and Hi contain no function symbol), any negotiation will terminate. 2.",
                "If a negotiation terminates with agreement on a proposal G, both P1, H1 and P2, H2 have belief sets satisfying G. Proof. 1.",
                "When an abductive program is function-free, abducibles and negotiation sets are both finite.",
                "Moreover, if a proposal is once rejected, it is not proposed again by the function μ.",
                "Thus, negotiation will terminate in finite steps. 2.",
                "When a proposal G is made by Ag1, P1, H1 has a belief set satisfying G. If the agent Ag2 accepts the proposal G, it is satisfied by an answer set of P2 which is also a belief set of P2, H2 .",
                "Example 3.3.",
                "Suppose a buying-selling situation in the introduction.",
                "A seller agent has the abductive program Ps, Hs in which Ps consists of belief Bs and desire Ds: Bs : pc(b1, 1G, 512M, 80G) ; pc(b2, 1G, 512M, 80G) ←,(1) dvd-rw ; cd-rw ←, (2) Ds : normal price(1300) ← pc(b1, 1G, 512M, 80G), dvd-rw, (3) normal price(1200) ← pc(b1, 1G, 512M, 80G), cd-rw, (4) normal price(1200) ← pc(b2, 1G, 512M, 80G), dvd-rw, (5) price(x) ← normal price(x), add point, (6) price(x ∗ 0.9) ← normal price(x), pay cash, not add point,(7) add point ←, (8) Hs : add point, pay cash.",
                "Here, (1) and (2) represent selection of products.",
                "The atom pc(b1, 1G, 512M, 80G) represents that the seller agent has a PC of the brand b1 such that CPU is 1GHz, memory is 512MB, and HDD is 80GB.",
                "Prices of products are represented as desire of the seller.",
                "The rules (3) - (5) are normal prices of products.",
                "A normal price is a selling price on the condition that service points are added (6).",
                "On the other hand, a discount price is applied if the paying method is cash and no service point is added (7).",
                "The fact (8) represents the addition of service points.",
                "This service would be withdrawn in case of discount prices, so add point is specified as an abducible.",
                "A buyer agent has the abductive program Pb, Hb in which Pb consists of belief Bb and desire Db: Bb : drive ← dvd-rw, (9) drive ← cd-rw, (10) price(x) ←, (11) Db : pc(b1, 1G, 512M, 80G) ←, (12) dvd-rw ←, (13) cd-rw ← not dvd-rw, (14) ← pay cash, (15) ← price(x), x > 1200, (16) Hb : dvd-rw.",
                "Rules (12) - (16) are the buyers desire.",
                "Among them, (15) and (16) impose constraints for buying a PC.",
                "A DVD-RW is specified as an abducible which is subject to concession. (1st round) First, the following proposal is given by the buyer agent: G1 b : pc(b1, 1G, 512M, 80G), dvd-rw, price(x), x ≤ 1200.",
                "As Ps has no answer set which satisfies G1 b , the seller agent cannot accept the proposal.",
                "The seller takes an action of making a counter-proposal and performs abduction.",
                "As a result, the seller finds the minimal explanation (E, F) = ({ pay cash }, { add point }) which explains G1 b θ1 with θ1 = { x/1170 }.",
                "The seller constructs the conditional proposal: G1 s : pc(b1, 1G, 512M, 80G), dvd-rw, price(1170), pay cash, not add point and offers it to the buyer. (2nd round) The buyer does not accept G1 s because he/she cannot pay it by cash (15).",
                "The buyer then returns the critique G2 b = reject to the seller, together with the critique set CS2 b (Pb, G1 s) = {(15)}.",
                "In response to this, the seller tries to make another proposal which satisfies the constraint in this critique set.",
                "As G1 s is stored in FP 2 s and no other conditional proposal satisfying the buyers requirement exists, the seller produces neighborhood proposals.",
                "He/she relaxes G1 b by dropping x ≤ 1200 in the condition, and produces pc(b1, 1G, 512M, 80G), dvd-rw, price(x).",
                "As Ps has an answer set which satisfies G2 s : pc(b1, 1G, 512M, 80G), dvd-rw, price(1300), 1026 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) the seller offers G2 s as a new counter-proposal. (3rd round) The buyer does not accept G2 s because he/she cannot pay more than 1200USD (16).",
                "The buyer again returns the critique G3 b = reject to the seller, together with the critique set CS3 b (Pb, G2 s) = CS2 b (Pb, G1 s) ∪ {(16)}.",
                "The seller then considers another proposal by replacing b1 with a variable w, G1 b now becomes pc(w, 1G, 512M, 80G), dvd-rw, price(x), x ≤ 1200.",
                "As Ps has an answer set which satisfies G3 s : pc(b2, 1G, 512M, 80G), dvd-rw, price(1200), the seller offers G3 s as a new counter-proposal. (4th round) The buyer does not accept G3 s because a PC of the brand b2 is out of his/her interest and Pb has no answer set satisfying G3 s. Then, the buyer makes a concession by changing his/her original goal.",
                "The buyer relaxes G1 b by goal replacement using the rule (9) in Pb, and produces pc(b1, 1G, 512M, 80G), drive, price(x), x ≤ 1200.",
                "Using (10), the following proposal is produced: pc(b1, 1G, 512M, 80G), cd-rw, price(x), x ≤ 1200.",
                "As Pb \\ { dvd-rw } has a consistent answer set satisfying the above proposal, the buyer proposes the conditional neighborhood proposal G4 b : pc(b1, 1G, 512M, 80G), cd-rw, not dvd-rw, price(x), x ≤ 1200 to the seller agent.",
                "Since Ps also has an answer set satisfying G4 b , the seller accepts it and sends the message G4 s = accept to the buyer.",
                "Thus, the negotiation ends in success. 4.",
                "COMPUTATION In this section, we provide methods of computing proposals in terms of answer sets of programs.",
                "We first introduce some definitions from [15].",
                "Definition 4.1.",
                "Given an abductive program P, H , the set UR of update rules is defined as: UR = { L ← not L, L ← not L | L ∈ H } ∪ { +L ← L | L ∈ H \\ P } ∪ { −L ← not L | L ∈ H ∩ P } , where L, +L, and −L are new atoms uniquely associated with every L ∈ H. The atoms +L and −L are called update atoms.",
                "By the definition, the atom L becomes true iff L is not true.",
                "The pair of rules L ← not L and L ← not L specify the situation that an abducible L is true or not.",
                "When p(x) ∈ H and p(a) ∈ P but p(t) ∈ P for t = a, the rule +L ← L precisely becomes +p(t) ← p(t) for any t = a.",
                "In this case, the rule is shortly written as +p(x) ← p(x), x = a.",
                "Generally, the rule becomes +p(x) ← p(x), x = t1, . . . , x = tn for n such instances.",
                "The rule +L ← L derives the atom +L if an abducible L which is not in P is to be true.",
                "In contrast, the rule −L ← not L derives the atom −L if an abducible L which is in P is not to be true.",
                "Thus, update atoms represent the change of truth values of abducibles in a program.",
                "That is, +L means the introduction of L, while −L means the deletion of L. When an abducible L contains variables, the associated update atom +L or −L is supposed to have exactly the same variables.",
                "In this case, an update atom is semantically identified with its ground instances.",
                "The set of all update atoms associated with the abducibles in H is denoted by UH, and UH = UH+ ∪ UH− where UH+ (resp.",
                "UH− ) is the set of update atoms of the form +L (resp. −L).",
                "Definition 4.2.",
                "Given an abductive program P, H , its update program UP is defined as the program UP = (P \\ H) ∪ UR .",
                "An answer set S of UP is called U-minimal if there is no answer set T of UP such that T ∩ UH ⊂ S ∩ UH.",
                "By the definition, U-minimal answer sets exist whenever UP has answer sets.",
                "Update programs are used for computing (minimal) explanations of an observation.",
                "Given an observation G as a conjunction of literals and NAF-literals possibly containing variables, we introduce a new ground literal O together with the rule O ← G. In this case, O has an explanation (E, F) iff G has the same explanation.",
                "With this replacement, an observation is assumed to be a ground literal without loss of generality.",
                "In what follows, E+ = { +L | L ∈ E } and F − = { −L | L ∈ F } for E ⊆ H and F ⊆ H. Proposition 4.1. ([15]) Let P, H be an abductive program, UP its update program, and G a ground literal representing an observation.",
                "Then, a pair (E, F) is an explanation of G iff UP ∪ { ← not G } has a consistent answer set S such that E+ = S ∩ UH+ and F− = S ∩ UH− .",
                "In particular, (E, F) is a minimal explanation iff S is a U-minimal answer set.",
                "Example 4.1.",
                "To explain the observation G = flies(t) in the program P of Example 2.1, first construct the update program UP of P:3 UP : flies(x) ← bird(x), not ab(x), ab(x) ← broken-wing(x) , bird(t) ← , bird(o) ← , broken-wing(x) ← not broken-wing(x), broken-wing(x) ← not broken-wing(x), +broken-wing(x) ← broken-wing(x), x = t , −broken-wing(t) ← not broken-wing(t) .",
                "Next, consider the program UP ∪ { ← not flies(t) }.",
                "It has the single U-minimal answer set: S = { bird(t), bird(o), flies(t), flies(o), broken-wing(t), broken-wing(o), −broken-wing(t) }.",
                "The unique minimal explanation (E, F) = (∅, {broken-wing(t)}) of G is expressed by the update atom −broken-wing(t) in S ∩ UH− .",
                "Proposition 4.2.",
                "Let P, H be an abductive program and G a ground literal representing an observation.",
                "If P ∪ { ← not G } has a consistent answer set S, G has the minimal explanation (E, F) = (∅, ∅) and S satisfies G. Now we provide methods for computing (counter-)proposals.",
                "First, conditional proposals are computed as follows. input : an abductive program P, H , a proposal G; output : a set Sc of proposals.",
                "If G is a ground literal, compute its minimal explanation (E, F) in P, H using the update program.",
                "Put G, E, not F in Sc.",
                "Else if G is a conjunction possibly containing variables, consider the abductive program 3 t represents tweety and o represents opus.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1027 P ∪{ O ← G }, H with a ground literal O. Compute a minimal explanation of O in P ∪ { O ← G }, H using its update program.",
                "If O has a minimal explanation (E, F) with a substitution θ for variables in G, put Gθ, E, not F in Sc.",
                "Next, neighborhood proposals are computed as follows. input : an abductive program P, H , a proposal G; output : a set Sn of proposals. % neighborhood proposals by anti-instantiation; Construct G by anti-instantiation.",
                "For a ground literal O, if P ∪ { O ← G } ∪ { ← not O } has a consistent answer set satisfying G θ with a substitution θ and G θ = G, put G θ in Sn. % neighborhood proposals by dropping conditions; Construct G by dropping conditions.",
                "If G is a ground literal and the program P ∪ { ← not G } has a consistent answer set, put G in Sn.",
                "Else if G is a conjunction possibly containing variables, do the following.",
                "For a ground literal O, if P ∪{ O ← G }∪{ ← not O } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn. % neighborhood proposals by goal replacement; Construct G by goal replacement.",
                "If G is a ground literal and there is a rule H ← B in P such that G = Hσ and Bσ = G for some substitution σ, put G = Bσ.",
                "If P ∪ { ← not G } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn.",
                "Else if G is a conjunction possibly containing variables, do the following.",
                "For a replaced literal L ∈ G , if there is a rule H ← B in P such that L = Hσ and (G \\ {L}) ∪ Bσ = G for some substitution σ, put G = (G \\ {L}) ∪ Bσ.",
                "For a ground literal O, if P ∪ { O ← G } ∪ { ← not O } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn.",
                "Theorem 4.3.",
                "The set Sc (resp.",
                "Sn) computed above coincides with the set of conditional proposals (resp. neighborhood proposals).",
                "Proof.",
                "The result for Sc follows from Definition 3.3 and Proposition 4.1.",
                "The result for Sn follows from Definition 3.5 and Proposition 4.2.",
                "Conditional neighborhood proposals are computed by combining the above two procedures.",
                "Those proposals are computed at each round.",
                "Note that the procedure for computing Sn contains some nondeterministic choices.",
                "For instance, there are generally several candidates of literals to relax in a proposal.",
                "Also, there might be several rules in a program for the usage of goal replacement.",
                "In practice, an agent can prespecify literals in a proposal for possible relaxation or rules in a program for the usage of goal replacement. 5.",
                "RELATED WORK As there are a number of literature on automated negotiation, this section focuses on comparison with negotiation frameworks based on logic and argumentation.",
                "Sadri et al. [14] use abductive logic programming as a representation language of negotiating agents.",
                "Agents negotiate using common dialogue primitives, called dialogue moves.",
                "Each agent has an abductive logic program in which a sequence of dialogues are specified by a program, a dialogue protocol is specified as constraints, and dialogue moves are specified as abducibles.",
                "The behavior of agents is regulated by an observe-think-act cycle.",
                "Once a dialogue move is uttered by an agent, another agent that observed the utterance thinks and acts using a proof procedure.",
                "Their approach and ours both employ abductive logic programming as a platform of agent reasoning, but the use of it is quite different.",
                "First, they use abducibles to specify dialogue primitives of the form tell(utterer, receiver, subject, identifier, time), while we use abducibles to specify arbitrary permissible hypotheses to construct conditional proposals.",
                "Second, a program pre-specifies a plan to carry out in order to achieve a goal, together with available/missing resources in the context of resource-exchanging problems.",
                "This is in contrast with our method in which possible counter-proposals are newly constructed in response to a proposal made by an agent.",
                "Third, they specify a negotiation policy inside a program (as integrity constraints), while we give a protocol independent of individual agents.",
                "They provide an operational model that completely specifies the behavior of agents in terms of agent cycle.",
                "We do not provide such a complete specification of the behavior of agents.",
                "Our primary interest is to mechanize construction of proposals.",
                "Bracciali and Torroni [2] formulate abductive agents that have knowledge in abductive logic programs.",
                "To explain an observation, two agents communicate by exchanging integrity constraints.",
                "In the process of communication, an agent can revise its own integrity constraints according to the information provided by the other agent.",
                "A set IC of integrity constraints relaxes a set IC (or IC tightens IC ) if any observation that can be proved with respect to IC can also be proved with respect to IC .",
                "For instance, IC : ← a, b, c relaxes IC : ← a, b.",
                "Thus, they use relaxation for weakening the constraints in an abductive logic program.",
                "In contrast, we use relaxation for weakening proposals and three different relaxation methods, anti-instantiation, dropping conditions, and goal replacement, are considered.",
                "Their goal is to explain an observation by revising integrity constraints of an agent through communication, while we use integrity constraints for communication to explain critiques and help other agents in making counter-proposals.",
                "Meyer et al. [11] introduce a logical framework for negotiating agents.",
                "They introduce two different modes of negotiation: concession and adaptation.",
                "They provide rational postulates to characterize negotiated outcomes between two agents, and describe methods for constructing outcomes.",
                "They provide logical conditions for negotiated outcomes to satisfy, but they do not describe a process of negotiation nor negotiation protocols.",
                "Moreover, they represent agents by classical propositional theories, which is different from our abductive logic programming framework.",
                "Foo et al. [5] model one-to-one negotiation as a one-time encounter between two extended logic programs.",
                "An agent offers an answer set of its program, and their mutual deal is regarded as a trade on their answer sets.",
                "Starting from the initial agreement set S∩T for an answer set S of an agent and an answer set T of another agent, each agent extends this set to reflect its own demand while keeping consistency with demand of the other agent.",
                "Their algorithm returns new programs having answer sets which are consistent with each other and keep the agreement set.",
                "The work is extended to repeated encounters in [3].",
                "In their framework, two agents exchange answer sets to produce a common belief set, which is different from our framework of exchanging proposals.",
                "There are a number of proposals for negotiation based 1028 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) on argumentation.",
                "An advantage of argumentation-based negotiation is that it constructs a proposal with arguments supporting the proposal [1].",
                "The existence of arguments is useful to convince other agents of reasons why an agent offers (counter-)proposals or returns critiques.",
                "Parsons et al. [13] develop a logic of argumentation-based negotiation among BDI agents.",
                "In one-to-one negotiation, an agent A generates a proposal together with its arguments, and passes it to another agent B.",
                "The proposal is evaluated by B which attempts to build arguments against it.",
                "If it conflicts with Bs interest, B informs A of its objection by sending back its attacking argument.",
                "In response to this, A tries to find an alternative way of achieving its original objective, or a way of persuading B to drop its objection.",
                "If either type of argument can be found, A will submit it to B.",
                "If B finds no reason to reject the new proposal, it will be accepted and the negotiation ends in success.",
                "Otherwise, the process is iterated.",
                "In this negotiation processes, the agent A never changes its original objective, so that negotiation ends in failure if A fails to find an alternative way of achieving the original objective.",
                "In our framework, when a proposal is rejected by another agent, an agent can weaken or change its objective by abduction and relaxation.",
                "Our framework does not have a mechanism of argumentation, but reasons for critiques can be informed by responding critique sets.",
                "Kakas and Moraitis [10] propose a negotiation protocol which integrates abduction within an argumentation framework.",
                "A proposal contains an offer corresponding to the negotiation object, together with supporting information representing conditions under which this offer is made.",
                "Supporting information is computed by abduction and is used for constructing conditional arguments during the process of negotiation.",
                "In their negotiation protocol, when an agent cannot satisfy its own goal, the agent considers the other agents goal and searches for conditions under which the goal is acceptable.",
                "Our present approach differs from theirs in the following points.",
                "First, they use abduction to seek conditions to support arguments, while we use abduction to seek conditions for proposals to accept.",
                "Second, in their negotiation protocol, counter-proposals are chosen among candidates based on preference knowledge of an agent at meta-level, which represents policy under which an agent uses its object-level decision rules according to situations.",
                "In our framework, counter-proposals are newly constructed using abduction and relaxation.",
                "The method of construction is independent of particular negotiation protocols.",
                "As [2, 10, 14], abduction or abductive logic programming used in negotiation is mostly based on normal abduction.",
                "In contrast, our approach is based on extended abduction which can not only introduce hypotheses but remove them from a program.",
                "This is another important difference.",
                "Relaxation and neighborhood query answering are devised to make databases cooperative with their users [4, 6].",
                "In this sense, those techniques have the spirit similar to cooperative problem solving in multi-agent systems.",
                "As far as the authors know, however, there is no study which applies those technique to agent negotiation. 6.",
                "CONCLUSION In this paper we proposed a logical framework for negotiating agents.",
                "To construct proposals in the process of negotiation, we combined the techniques of extended abduction and relaxation.",
                "It was shown that these two operations are used for general inference rules in producing proposals.",
                "We developed a negotiation protocol between two agents based on exchange of proposals and critiques, and provided procedures for computing proposals in abductive logic programming.",
                "This enables us to realize automated negotiation on top of the existing answer set solvers.",
                "The present framework does not have a mechanism of selecting an optimal (counter-)proposal among different alternatives.",
                "To compare and evaluate proposals, an agent must have preference knowledge of candidate proposals.",
                "Further elaboration to maximize the utility of agents is left for future study. 7.",
                "REFERENCES [1] L. Amgoud, S. Parsons, and N. Maudet.",
                "Arguments, dialogue, and negotiation.",
                "In: Proc.",
                "ECAI-00, pp. 338-342, IOS Press, 2000. [2] A. Bracciali and P. Torroni.",
                "A new framework for knowledge revision of abductive agents through their interaction.",
                "In: Proc.",
                "CLIMA-IV, Computational Logic in Multi-Agent Systems, LNAI 3259, pp. 159-177, 2004. [3] W. Chen, M. Zhang, and N. Foo.",
                "Repeated negotiation of logic programs.",
                "In: Proc. 7th Workshop on Nonmonotonic Reasoning, Action and Change, 2006. [4] W. W. Chu, Q. Chen, and R.-C. Lee.",
                "Cooperative query answering via type abstraction hierarchy.",
                "In: Cooperating Knowledge Based Systems, S. M. Deen ed., pp. 271-290, Springer, 1990. [5] N. Foo, T. Meyer, Y. Zhang, and D. Zhang.",
                "Negotiating logic programs.",
                "In: Proc. 6th Workshop on Nonmonotonic Reasoning, Action and Change, 2005. [6] T. Gaasterland, P. Godfrey, and J. Minker.",
                "Relaxation as a platform for cooperative answering.",
                "Journal of Intelligence Information Systems 1(3/4):293-321, 1992. [7] M. Gelfond and V. Lifschitz.",
                "Classical negation in logic programs and disjunctive databases.",
                "New Generation Computing 9:365-385, 1991. [8] K. Inoue and C. Sakama.",
                "Abductive framework for nonmonotonic theory change.",
                "In: Proc.",
                "IJCAI-95, pp. 204-210, Morgan Kaufmann. [9] A. C. Kakas, R. A. Kowalski, and F. Toni, The role of abduction in logic programming.",
                "In: Handbook of Logic in AI and Logic Programming, D. M. Gabbay, et al. (eds), vol. 5, pp. 235-324, Oxford University Press, 1998. [10] A. C. Kakas and P. Moraitis.",
                "Adaptive agent negotiation via argumentation.",
                "In: Proc.",
                "AAMAS-06, pp. 384-391, ACM Press. [11] T. Meyer, N. Foo, R. Kwok, and D. Zhang.",
                "Logical foundation of negotiation: outcome, concession and adaptation.",
                "In: Proc.",
                "AAAI-04, pp. 293-298, MIT Press. [12] R. S. Michalski.",
                "A theory and methodology of inductive learning.",
                "In: Machine Learning: An Artificial Intelligence Approach, R. S. Michalski, et al. (eds), pp. 83-134, Morgan Kaufmann, 1983. [13] S. Parsons, C. Sierra and N. Jennings.",
                "Agents that reason and negotiate by arguing.",
                "Journal of Logic and Computation, 8(3):261-292, 1988. [14] F. Sadri, F. Toni, and P. Torroni, An abductive logic programming architecture for negotiating agents.",
                "In: Proc. 8th European Conf. on Logics in AI, LNAI 2424, pp. 419-431, Springer, 2002. [15] C. Sakama and K. Inoue.",
                "An abductive framework for computing knowledge base updates.",
                "Theory and Practice of Logic Programming 3(6):671-715, 2003.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1029"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Cada G obtenida por estas operaciones se llama relajación de G. Vale la pena señalar que estas operaciones también se usan en el contexto de \"generalización inductiva\" [12]."
            ],
            "translated_text": "",
            "candidates": [
                "generalización inductiva",
                "generalización inductiva"
            ],
            "error": []
        },
        "minimal explanation": {
            "translated_key": "explicación mínima",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Negotiation by Abduction and Relaxation Chiaki Sakama Dept.",
                "Computer and Communication Sciences Wakayama University Sakaedani, Wakayama 640 8510, Japan sakama@sys.wakayama-u.ac.jp Katsumi Inoue National Institute of Informatics 2-1-2 Hitotsubashi, Chiyoda-ku Tokyo 101 8430, Japan ki@nii.ac.jp ABSTRACT This paper studies a logical framework for automated negotiation between two agents.",
                "We suppose an agent who has a knowledge base represented by a logic program.",
                "Then, we introduce methods of constructing counter-proposals in response to proposals made by an agent.",
                "To this end, we combine the techniques of extended abduction in artificial intelligence and relaxation in cooperative query answering for databases.",
                "These techniques are respectively used for producing conditional proposals and neighborhood proposals in the process of negotiation.",
                "We provide a negotiation protocol based on the exchange of these proposals and develop procedures for computing new proposals.",
                "Categories and Subject Descriptors F.4.1 [Mathematical Logic]: Logic and constraint programming;; I.2.11 [Distributed Artificial Intelligence]: Multiagent systems General Terms Theory 1.",
                "INTRODUCTION Automated negotiation has been received increasing attention in multi-agent systems, and a number of frameworks have been proposed in different contexts ([1, 2, 3, 5, 10, 11, 13, 14], for instance).",
                "Negotiation usually proceeds in a series of rounds and each agent makes a proposal at every round.",
                "An agent that received a proposal responds in two ways.",
                "One is a critique which is a remark as to whether or not (parts of) the proposal is accepted.",
                "The other is a counter-proposal which is an alternative proposal made in response to a previous proposal [13].",
                "To see these proposals in one-to-one negotiation, suppose the following negotiation dialogue between a buyer agent B and a seller agent S. (Bi (or Si) represents an utterance of B (or S) in the i-th round.)",
                "B1: I want to buy a personal computer of the brand b1, with the specification of CPU:1GHz, Memory:512MB, HDD: 80GB, and a DVD-RW driver.",
                "I want to get it at the price under 1200 USD.",
                "S1: We can provide a PC with the requested specification if you pay for it by cash.",
                "In this case, however, service points are not added for this special discount.",
                "B2: I cannot pay it by cash.",
                "S2: In a normal price, the requested PC costs 1300 USD.",
                "B3: I cannot accept the price.",
                "My budget is under 1200 USD.",
                "S3: We can provide another computer with the requested specification, except that it is made by the brand b2.",
                "The price is exactly 1200 USD.",
                "B4: I do not want a PC of the brand b2.",
                "Instead, I can downgrade a driver from DVD-RW to CD-RW in my initial proposal.",
                "S4: Ok, I accept your offer.",
                "In this dialogue, in response to the opening proposal B1, the counter-proposal S1 is returned.",
                "In the rest of the dialogue, B2, B3, S4 are critiques, while S2, S3, B4 are counterproposals.",
                "Critiques are produced by evaluating a proposal in a knowledge base of an agent.",
                "In contrast, making counter-proposals involves generating an alternative proposal which is more favorable to the responding agent than the original one.",
                "It is known that there are two ways of producing counterproposals: extending the initial proposal or amending part of the initial proposal.",
                "According to [13], the first type appears in the dialogue: A: I propose that you provide me with service X.",
                "B: I propose that I provide you with service X if you provide me with service Z.",
                "The second type is in the dialogue: A: I propose that I provide you with service Y if you provide me with service X.",
                "B: I propose that I provide you with service X if you provide me with service Z.",
                "A negotiation proceeds by iterating such give-andtake dialogues until it reaches an agreement/disagreement.",
                "In those dialogues, agents generate (counter-)proposals by reasoning on their own goals or objectives.",
                "The objective of the agent A in the above dialogues is to obtain service X.",
                "The agent B proposes conditions to provide the service.",
                "In the process of negotiation, however, it may happen that agents are obliged to weaken or change their initial goals to reach a negotiated compromise.",
                "In the dialogue of 1022 978-81-904262-7-5 (RPS) c 2007 IFAAMAS a buyer agent and a seller agent presented above, a buyer agent changes its initial goal by downgrading a driver from DVD-RW to CD-RW.",
                "Such behavior is usually represented as specific meta-knowledge of an agent or specified as negotiation protocols in particular problems.",
                "Currently, there is no computational logic for automated negotiation which has general inference rules for producing (counter-)proposals.",
                "The purpose of this paper is to mechanize a process of building (counter-)proposals in one-to-one negotiation dialogues.",
                "We suppose an agent who has a knowledge base represented by a logic program.",
                "We then introduce methods for generating three different types of proposals.",
                "First, we use the technique of extended abduction in artificial intelligence [8, 15] to construct a conditional proposal as an extension of the original one.",
                "Second, we use the technique of relaxation in cooperative query answering for databases [4, 6] to construct a neighborhood proposal as an amendment of the original one.",
                "Third, combining extended abduction and relaxation, conditional neighborhood proposals are constructed as amended extensions of the original proposal.",
                "We develop a negotiation protocol between two agents based on the exchange of these counter-proposals and critiques.",
                "We also provide procedures for computing proposals in logic programming.",
                "This paper is organized as follows.",
                "Section 2 introduces a logical framework used in this paper.",
                "Section 3 presents methods for constructing proposals, and provides a negotiation protocol.",
                "Section 4 provides methods for computing proposals in logic programming.",
                "Section 5 discusses related works, and Section 6 concludes the paper. 2.",
                "PRELIMINARIES Logic programs considered in this paper are extended disjunctive programs (EDP) [7].",
                "An EDP (or simply a program) is a set of rules of the form: L1 ; · · · ; Ll ← Ll+1 , . . . , Lm, not Lm+1 , . . . , not Ln (n ≥ m ≥ l ≥ 0) where each Li is a positive/negative literal, i.e., A or ¬A for an atom A, and not is negation as failure (NAF). not L is called an NAF-literal.",
                "The symbol ; represents disjunction.",
                "The left-hand side of the rule is the head, and the right-hand side is the body.",
                "For each rule r of the above form, head(r), body+ (r) and body− (r) denote the sets of literals {L1, . . . , Ll}, {Ll+1, . . . , Lm}, and {Lm+1, . . . , Ln}, respectively.",
                "Also, not body− (r) denotes the set of NAF-literals {not Lm+1, . . . , not Ln}.",
                "A disjunction of literals and a conjunction of (NAF-)literals in a rule are identified with its corresponding sets of literals.",
                "A rule r is often written as head(r) ← body+ (r), not body− (r) or head(r) ← body(r) where body(r) = body+ (r)∪not body− (r).",
                "A rule r is disjunctive if head(r) contains more than one literal.",
                "A rule r is an integrity constraint if head(r) = ∅; and r is a fact if body(r) = ∅.",
                "A program is NAF-free if no rule contains NAF-literals.",
                "Two rules/literals are identified with respect to variable renaming.",
                "A substitution is a mapping from variables to terms θ = {x1/t1, . . . , xn/tn}, where x1, . . . , xn are distinct variables and each ti is a term distinct from xi.",
                "Given a conjunction G of (NAF-)literals, Gθ denotes the conjunction obtained by applying θ to G. A program, rule, or literal is ground if it contains no variable.",
                "A program P with variables is a shorthand of its ground instantiation Ground(P), the set of ground rules obtained from P by substituting variables in P by elements of its Herbrand universe in every possible way.",
                "The semantics of an EDP is defined by the answer set semantics [7].",
                "Let Lit be the set of all ground literals in the language of a program.",
                "Suppose a program P and a set of literals S(⊆ Lit).",
                "Then, the reduct P S is the program which contains the ground rule head(r) ← body+ (r) iff there is a rule r in Ground(P) such that body− (r)∩S = ∅.",
                "Given an NAF-free EDP P, Cn(P) denotes the smallest set of ground literals which is (i) closed under P, i.e., for every ground rule r in Ground(P), body(r) ⊆ Cn(P) implies head(r) ∩ Cn(P) = ∅; and (ii) logically closed, i.e., it is either consistent or equal to Lit.",
                "Given an EDP P and a set S of literals, S is an answer set of P if S = Cn(P S ).",
                "A program has none, one, or multiple answer sets in general.",
                "An answer set is consistent if it is not Lit.",
                "A program P is consistent if it has a consistent answer set; otherwise, P is inconsistent.",
                "Abductive logic programming [9] introduces a mechanism of hypothetical reasoning to logic programming.",
                "An abductive framework used in this paper is the extended abduction introduced by Inoue and Sakama [8, 15].",
                "An abductive program is a pair P, H where P is an EDP and H is a set of literals called abducibles.",
                "When a literal L ∈ H contains variables, any instance of L is also an abducible.",
                "An abductive program P, H is consistent if P is consistent.",
                "Throughout the paper, abductive programs are assumed to be consistent unless stated otherwise.",
                "Let G = L1, . . . , Lm, not Lm+1, . . . , not Ln be a conjunction, where all variables in G are existentially quantified at the front and range-restricted, i.e., every variable in Lm+1, . . . , Ln appears in L1, . . . , Lm.",
                "A set S of ground literals satisfies the conjunction G if { L1θ, . . . , Lmθ } ⊆ S and { Lm+1θ, . . . , Lnθ }∩ S = ∅ for some ground instance Gθ with a substitution θ.",
                "Let P, H be an abductive program and G a conjunction as above.",
                "A pair (E, F) is an explanation of an observation G in P, H if1 1. (P \\ F) ∪ E has an answer set which satisfies G, 2. (P \\ F) ∪ E is consistent, 3.",
                "E and F are sets of ground literals such that E ⊆ H\\P and F ⊆ H ∩ P. When (P \\ F) ∪ E has an answer set S satisfying the above three conditions, S is called a belief set of an abductive program P, H satisfying G (with respect to (E, F)).",
                "Note that if P has a consistent answer set S satisfying G, S is also a belief set of P, H satisfying G with respect to (E, F) = (∅, ∅).",
                "Extended abduction introduces/removes hypotheses to/from a program to explain an observation.",
                "Note that normal abduction (as in [9]) considers only introducing hypotheses to explain an observation.",
                "An explanation (E, F) of an observation G is called minimal if for any explanation (E , F ) of G, E ⊆ E and F ⊆ F imply E = E and F = F. Example 2.1.",
                "Consider the abductive program P, H : P : flies(x) ← bird(x), not ab(x) , ab(x) ← broken-wing(x) , bird(tweety) ← , bird(opus) ← , broken-wing(tweety) ← .",
                "H : broken-wing(x) .",
                "The observation G = flies(tweety) has the <br>minimal explanation</br> (E, F) = (∅, {broken-wing(tweety)}). 1 This defines credulous explanations [15].",
                "Skeptical explanations are used in [8].",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1023 3.",
                "NEGOTIATION 3.1 Conditional Proposals by Abduction We suppose an agent who has a knowledge base represented by an abductive program P, H .",
                "A program P consists of two types of knowledge, belief B and desire D, where B represents objective knowledge of an agent, while D represents subjective knowledge in general.",
                "We define P = B ∪ D, but do not distinguish B and D if such distinction is not important in the context.",
                "In contrast, abducibles H are used for representing permissible conditions to make a compromise in the process of negotiation.",
                "Definition 3.1.",
                "A proposal G is a conjunction of literals and NAF-literals: L1, . . . , Lm, not Lm+1, . . . , not Ln where every variable in G is existentially quantified at the front and range-restricted.",
                "In particular, G is called a critique if G = accept or G = reject where accept and reject are the reserved propositions.",
                "A counter-proposal is a proposal made in response to a proposal.",
                "Definition 3.2.",
                "A proposal G is accepted in an abductive program P, H if P has an answer set satisfying G. When a proposal is not accepted, abduction is used for seeking conditions to make it acceptable.",
                "Definition 3.3.",
                "Let P, H be an abductive program and G a proposal.",
                "If (E, F) is a <br>minimal explanation</br> of Gθ for some substitution θ in P, H , the conjunction G : Gθ, E, not F is called a conditional proposal (for G), where E, not F represents the conjunction: A1, . . . , Ak, not Ak+1, . . . , not Al for E = {A1, . . . , Ak} and F = { Ak+1, . . . , Al }.",
                "Proposition 3.1.",
                "Let P, H be an abductive program and G a proposal.",
                "If G is a conditional proposal, there is a belief set S of P, H satisfying G .",
                "Proof.",
                "When G = Gθ, E, not F, (P \\ F) ∪ E has a consistent answer set S satisfying Gθ and E ∩ F = ∅.",
                "In this case, S satisfies Gθ, E, not F. A conditional proposal G provides a minimal requirement for accepting the proposal G. If Gθ has multiple minimal explanations, several conditional proposals exist accordingly.",
                "When (E, F) = (∅, ∅), a conditional proposal is used as a new proposal made in response to the proposal G. Example 3.1.",
                "An agent seeks a position of a research assistant at the computer department of a university with the condition that the salary is at least 50,000 USD per year.",
                "The agent makes his/her request as the proposal:2 G = assist(compt dept), salary(x), x ≥ 50, 000.",
                "The university has the abductive program P, H : P : salary(40, 000) ← assist(compt dept), not has PhD, salary(60, 000) ← assist(compt dept), has PhD, salary(50, 000) ← assist(math dept), salary(55, 000) ← system admin(compt dept), 2 For notational convenience, we often include mathematical (in)equations in proposals/programs.",
                "They are written by literals, for instance, x ≥ y by geq(x, y) with a suitable definition of the predicate geq. employee(x) ← assist(x), employee(x) ← system admin(x), assist(compt dept); assist(math dept) ; system admin(compt dept) ←, H : has PhD, where available positions are represented by disjunction.",
                "According to P, the base salary of a research assistant at the computer department is 40,000 USD, but if he/she has PhD, it is 60,000 USD.",
                "In this case, (E, F) = ({has PhD}, ∅) becomes the <br>minimal explanation</br> of Gθ = assist(compt dept), salary(60, 000) with θ = { x/60, 000 }.",
                "Then, the conditional proposal made by the university becomes assist(compt dept), salary(60, 000), has PhD . 3.2 Neighborhood Proposals by Relaxation When a proposal is unacceptable, an agent tries to construct a new counter-proposal by weakening constraints in the initial proposal.",
                "We use techniques of relaxation for this purpose.",
                "Relaxation is used as a technique of cooperative query answering in databases [4, 6].",
                "When an original query fails in a database, relaxation expands the scope of the query by relaxing the constraints in the query.",
                "This allows the database to return neighborhood answers which are related to the original query.",
                "We use the technique for producing proposals in the process of negotiation.",
                "Definition 3.4.",
                "Let P, H be an abductive program and G a proposal.",
                "Then, G is relaxed to G in the following three ways: Anti-instantiation: Construct G such that G θ = G for some substitution θ.",
                "Dropping conditions: Construct G such that G ⊂ G. Goal replacement: If G is a conjunction G1, G2, where G1 and G2 are conjunctions, and there is a rule L ← G1 in P such that G1θ = G1 for some substitution θ, then build G as Lθ, G2.",
                "Here, Lθ is called a replaced literal.",
                "In each case, every variable in G is existentially quantified at the front and range-restricted.",
                "Anti-instantiation replaces constants (or terms) with fresh variables.",
                "Dropping conditions eliminates some conditions in a proposal.",
                "Goal replacement replaces the condition G1 in G with a literal Lθ in the presence of a rule L ← G1 in P under the condition G1θ = G1.",
                "All these operations generalize proposals in different ways.",
                "Each G obtained by these operations is called a relaxation of G. It is worth noting that these operations are also used in the context of inductive generalization [12].",
                "The relaxed proposal can produce new offers which are neighbor to the original proposal.",
                "Definition 3.5.",
                "Let P, H be an abductive program and G a proposal. 1.",
                "Let G be a proposal obtained by anti-instantiation.",
                "If P has an answer set S which satisfies G θ for some substitution θ and G θ = G, G θ is called a neighborhood proposal by anti-instantiation. 2.",
                "Let G be a proposal obtained by dropping conditions.",
                "If P has an answer set S which satisfies G θ for some substitution θ, G θ is called a neighborhood proposal by dropping conditions. 1024 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.",
                "Let G be a proposal obtained by goal replacement.",
                "For a replaced literal L ∈ G and a rule H ← B in P such that L = Hσ and (G \\ {L}) ∪ Bσ = G for some substitution σ, put G = (G \\ {L}) ∪ Bσ.",
                "If P has an answer set S which satisfies G θ for some substitution θ, G θ is called a neighborhood proposal by goal replacement.",
                "Example 3.2. (cont.",
                "Example 3.1) Given the proposal G = assist(compt dept), salary(x), x ≥ 50, 000, • G1 = assist(w), salary(x), x ≥ 50, 000 is produced by substituting compt dept with a variable w. As G1θ1 = assist(math dept), salary(50, 000) with θ1 = { w/math dept } is satisfied by an answer set of P, G1θ1 becomes a neighborhood proposal by anti-instantiation. • G2 = assist(compt dept), salary(x) is produced by dropping the salary condition x ≥ 50, 000.",
                "As G2θ2 = assist(compt dept), salary(40, 000) with θ2 = { x/40, 000 } is satisfied by an answer set of P, G2θ2 becomes a neighborhood proposal by dropping conditions. • G3 = employee(compt dept), salary(x), x ≥ 50, 000 is produced by replacing assist(compt dept) with employee(compt dept) using the rule employee(x) ← assist(x) in P. By G3 and the rule employee(x) ← system admin(x) in P, G3 = sys admin(compt dept), salary(x), x ≥ 50, 000 is produced.",
                "As G3 θ3 = sys admin(compt dept), salary(55, 000) with θ3 = { x/55, 000 } is satisfied by an answer set of P, G3 θ3 becomes a neighborhood proposal by goal replacement.",
                "Finally, extended abduction and relaxation are combined to produce conditional neighborhood proposals.",
                "Definition 3.6.",
                "Let P, H be an abductive program and G a proposal. 1.",
                "Let G be a proposal obtained by either anti-instantiation or dropping conditions.",
                "If (E, F) is a <br>minimal explanation</br> of G θ(= G) for some substitution θ, the conjunction G θ, E, not F is called a conditional neighborhood proposal by anti-instantiation/dropping conditions. 2.",
                "Let G be a proposal obtained by goal replacement.",
                "Suppose G as in Definition 3.5(3).",
                "If (E, F) is a <br>minimal explanation</br> of G θ for some substitution θ, the conjunction G θ, E, not F is called a conditional neighborhood proposal by goal replacement.",
                "A conditional neighborhood proposal reduces to a neighborhood proposal when (E, F) = (∅, ∅). 3.3 Negotiation Protocol A negotiation protocol defines how to exchange proposals in the process of negotiation.",
                "This section presents a negotiation protocol in our framework.",
                "We suppose one-to-one negotiation between two agents who have a common ontology and the same language for successful communication.",
                "Definition 3.7.",
                "A proposal L1, ..., Lm, not Lm+1, ..., not Ln violates an integrity constraint ← body+ (r), not body− (r) if for any substitution θ, there is a substitution σ such that body+ (r)σ ⊆ { L1θ, . . . , Lmθ }, body− (r)σ∩{ L1θ, . . . , Lmθ } = ∅, and body− (r)σ ⊆ { Lm+1θ, . . . , Lnθ }.",
                "Integrity constraints are conditions which an agent should satisfy, so that they are used to explain why an agent does not accept a proposal.",
                "A negotiation proceeds in a series of rounds.",
                "Each i-th round (i ≥ 1) consists of a proposal Gi 1 made by one agent Ag1 and another proposal Gi 2 made by the other agent Ag2.",
                "Definition 3.8.",
                "Let P1, H1 be an abductive program of an agent Ag1 and Gi 2 a proposal made by Ag2 at the i-th round.",
                "A critique set of Ag1 (at the i-th round) is a set CSi 1(P1, Gj 2) = CSi−1 1 (P1, Gj−1 2 ) ∪ { r | r is an integrity constraint in P1 and Gj 2 violates r } where j = i − 1 or i, and CS0 1 (P1, G0 2) = CS1 1 (P1, G0 2) = ∅.",
                "A critique set of an agent Ag1 accumulates integrity constraints which are violated by proposals made by another agent Ag2.",
                "CSi 2(P2, Gj 1) is defined in the same manner.",
                "Definition 3.9.",
                "Let Pk, Hk be an abductive program of an agent Agk and Gj a proposal, which is not a critique, made by any agent at the j(≤ i)-th round.",
                "A negotiation set of Agk (at the i-th round) is a triple NSi k = (Si c, Si n, Si cn), where Si c is the set of conditional proposals, Si n is the set of neighborhood proposals, and Si cn is the set of conditional neighborhood proposals, produced by Gj and Pk, Hk .",
                "A negotiation set represents the space of possible proposals made by an agent.",
                "Si x (x ∈ {c, n, cn}) accumulates proposals produced by Gj (1 ≤ j ≤ i) according to Definitions 3.3, 3.5, and 3.6.",
                "Note that an agent can construct counter-proposals by modifying its own previous proposals or another agents proposals.",
                "An agent Agk accumulates proposals that are made by Agk but are rejected by another agent, in the failed proposal set FP i k (at the i-th round), where FP 0 k = ∅.",
                "Suppose two agents Ag1 and Ag2 who have abductive programs P1, H1 and P2, H2 , respectively.",
                "Given a proposal G1 1 which is satisfied by an answer set of P1, a negotiation starts.",
                "In response to the proposal Gi 1 made by Ag1 at the i-th round, Ag2 behaves as follows. 1.",
                "If Gi 1 = accept, an agreement is reached and negotiation ends in success. 2.",
                "Else if Gi 1 = reject, put FP i 2 = FPi−1 2 ∪{Gi−1 2 } where {G0 2} = ∅.",
                "Proceed to the step 4(b). 3.",
                "Else if P2 has an answer set satisfying Gi 1, Ag2 returns Gi 2 = accept to Ag1.",
                "Negotiation ends in success. 4.",
                "Otherwise, Ag2 behaves as follows.",
                "Put FP i 2 = FPi−1 2 . (a) If Gi 1 violates an integrity constraint in P2, return the critique Gi 2 = reject to Ag1, together with the critique set CSi 2(P2, Gi 1). (b) Otherwise, construct NSi 2 as follows. (i) Produce Si c. Let μ(Si c) = { p | p ∈ Si c \\ FPi 2 and p satisfies the constraints in CSi 1(P1, Gi−1 2 )}.",
                "If μ(Si c) = ∅, select one from μ(Si c) and propose it as Gi 2 to Ag1; otherwise, go to (ii). (ii) Produce Si n. If μ(Si n) = ∅, select one from μ(Si n) and propose it as Gi 2 to Ag1; otherwise, go to (iii). (iii) Produce Si cn.",
                "If μ(Si cn) = ∅, select one from μ(Si cn) and propose it as Gi 2 to Ag1; otherwise, negotiation ends in failure.",
                "This means that Ag2 can make no counter-proposal or every counterproposal made by Ag2 is rejected by Ag1.",
                "In the step 4(a), Ag2 rejects the proposal Gi 1 and returns the reason of rejection as a critique set.",
                "This helps for Ag1 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1025 in preparing a next counter-proposal.",
                "In the step 4(b), Ag2 constructs a new proposal.",
                "In its construction, Ag2 should take care of the critique set CSi 1(P1, Gi−1 2 ), which represents integrity constraints, if any, accumulated in previous rounds, that Ag1 must satisfy.",
                "Also, FP i 2 is used for removing proposals which have been rejected.",
                "Construction of Si x (x ∈ {c, n, cn}) in NSi 2 is incrementally done by adding new counter-proposals produced by Gi 1 or Gi−1 2 to Si−1 x .",
                "For instance, Si n in NSi 2 is computed as Si n = Si−1 n ∪{ p | p is a neighborhood proposal made by Gi 1 } ∪ { p | p is a neighborhood proposal made by Gi−1 2 }, where S0 n = ∅.",
                "That is, Si n is constructed from Si−1 n by adding new proposals which are obtained by modifying the proposal Gi 1 made by Ag1 at the i-th round or modifying the proposal Gi−1 2 made by Ag2 at the (i − 1)-th round.",
                "Si c and Si cn are obtained as well.",
                "In the above protocol, an agent produces Si c at first, secondly Si n, and finally Si cn.",
                "This strategy seeks conditions which satisfy the given proposal, prior to neighborhood proposals which change the original one.",
                "Another strategy, which prefers neighborhood proposals to conditional ones, is also considered.",
                "Conditional neighborhood proposals are to be considered in the last place, since they differ from the original one to the maximal extent.",
                "The above protocol produces the candidate proposals in Si x for each x ∈ {c, n, cn} at once.",
                "We can consider a variant of the protocol in which each proposal in Si x is constructed one by one (see Example 3.3).",
                "The above protocol is repeatedly applied to each one of the two negotiating agents until a negotiation ends in success/failure.",
                "Formally, the above negotiation protocol has the following properties.",
                "Theorem 3.2.",
                "Let Ag1 and Ag2 be two agents having abductive programs P1, H1 and P2, H2 , respectively. 1.",
                "If P1, H1 and P2, H2 are function-free (i.e., both Pi and Hi contain no function symbol), any negotiation will terminate. 2.",
                "If a negotiation terminates with agreement on a proposal G, both P1, H1 and P2, H2 have belief sets satisfying G. Proof. 1.",
                "When an abductive program is function-free, abducibles and negotiation sets are both finite.",
                "Moreover, if a proposal is once rejected, it is not proposed again by the function μ.",
                "Thus, negotiation will terminate in finite steps. 2.",
                "When a proposal G is made by Ag1, P1, H1 has a belief set satisfying G. If the agent Ag2 accepts the proposal G, it is satisfied by an answer set of P2 which is also a belief set of P2, H2 .",
                "Example 3.3.",
                "Suppose a buying-selling situation in the introduction.",
                "A seller agent has the abductive program Ps, Hs in which Ps consists of belief Bs and desire Ds: Bs : pc(b1, 1G, 512M, 80G) ; pc(b2, 1G, 512M, 80G) ←,(1) dvd-rw ; cd-rw ←, (2) Ds : normal price(1300) ← pc(b1, 1G, 512M, 80G), dvd-rw, (3) normal price(1200) ← pc(b1, 1G, 512M, 80G), cd-rw, (4) normal price(1200) ← pc(b2, 1G, 512M, 80G), dvd-rw, (5) price(x) ← normal price(x), add point, (6) price(x ∗ 0.9) ← normal price(x), pay cash, not add point,(7) add point ←, (8) Hs : add point, pay cash.",
                "Here, (1) and (2) represent selection of products.",
                "The atom pc(b1, 1G, 512M, 80G) represents that the seller agent has a PC of the brand b1 such that CPU is 1GHz, memory is 512MB, and HDD is 80GB.",
                "Prices of products are represented as desire of the seller.",
                "The rules (3) - (5) are normal prices of products.",
                "A normal price is a selling price on the condition that service points are added (6).",
                "On the other hand, a discount price is applied if the paying method is cash and no service point is added (7).",
                "The fact (8) represents the addition of service points.",
                "This service would be withdrawn in case of discount prices, so add point is specified as an abducible.",
                "A buyer agent has the abductive program Pb, Hb in which Pb consists of belief Bb and desire Db: Bb : drive ← dvd-rw, (9) drive ← cd-rw, (10) price(x) ←, (11) Db : pc(b1, 1G, 512M, 80G) ←, (12) dvd-rw ←, (13) cd-rw ← not dvd-rw, (14) ← pay cash, (15) ← price(x), x > 1200, (16) Hb : dvd-rw.",
                "Rules (12) - (16) are the buyers desire.",
                "Among them, (15) and (16) impose constraints for buying a PC.",
                "A DVD-RW is specified as an abducible which is subject to concession. (1st round) First, the following proposal is given by the buyer agent: G1 b : pc(b1, 1G, 512M, 80G), dvd-rw, price(x), x ≤ 1200.",
                "As Ps has no answer set which satisfies G1 b , the seller agent cannot accept the proposal.",
                "The seller takes an action of making a counter-proposal and performs abduction.",
                "As a result, the seller finds the <br>minimal explanation</br> (E, F) = ({ pay cash }, { add point }) which explains G1 b θ1 with θ1 = { x/1170 }.",
                "The seller constructs the conditional proposal: G1 s : pc(b1, 1G, 512M, 80G), dvd-rw, price(1170), pay cash, not add point and offers it to the buyer. (2nd round) The buyer does not accept G1 s because he/she cannot pay it by cash (15).",
                "The buyer then returns the critique G2 b = reject to the seller, together with the critique set CS2 b (Pb, G1 s) = {(15)}.",
                "In response to this, the seller tries to make another proposal which satisfies the constraint in this critique set.",
                "As G1 s is stored in FP 2 s and no other conditional proposal satisfying the buyers requirement exists, the seller produces neighborhood proposals.",
                "He/she relaxes G1 b by dropping x ≤ 1200 in the condition, and produces pc(b1, 1G, 512M, 80G), dvd-rw, price(x).",
                "As Ps has an answer set which satisfies G2 s : pc(b1, 1G, 512M, 80G), dvd-rw, price(1300), 1026 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) the seller offers G2 s as a new counter-proposal. (3rd round) The buyer does not accept G2 s because he/she cannot pay more than 1200USD (16).",
                "The buyer again returns the critique G3 b = reject to the seller, together with the critique set CS3 b (Pb, G2 s) = CS2 b (Pb, G1 s) ∪ {(16)}.",
                "The seller then considers another proposal by replacing b1 with a variable w, G1 b now becomes pc(w, 1G, 512M, 80G), dvd-rw, price(x), x ≤ 1200.",
                "As Ps has an answer set which satisfies G3 s : pc(b2, 1G, 512M, 80G), dvd-rw, price(1200), the seller offers G3 s as a new counter-proposal. (4th round) The buyer does not accept G3 s because a PC of the brand b2 is out of his/her interest and Pb has no answer set satisfying G3 s. Then, the buyer makes a concession by changing his/her original goal.",
                "The buyer relaxes G1 b by goal replacement using the rule (9) in Pb, and produces pc(b1, 1G, 512M, 80G), drive, price(x), x ≤ 1200.",
                "Using (10), the following proposal is produced: pc(b1, 1G, 512M, 80G), cd-rw, price(x), x ≤ 1200.",
                "As Pb \\ { dvd-rw } has a consistent answer set satisfying the above proposal, the buyer proposes the conditional neighborhood proposal G4 b : pc(b1, 1G, 512M, 80G), cd-rw, not dvd-rw, price(x), x ≤ 1200 to the seller agent.",
                "Since Ps also has an answer set satisfying G4 b , the seller accepts it and sends the message G4 s = accept to the buyer.",
                "Thus, the negotiation ends in success. 4.",
                "COMPUTATION In this section, we provide methods of computing proposals in terms of answer sets of programs.",
                "We first introduce some definitions from [15].",
                "Definition 4.1.",
                "Given an abductive program P, H , the set UR of update rules is defined as: UR = { L ← not L, L ← not L | L ∈ H } ∪ { +L ← L | L ∈ H \\ P } ∪ { −L ← not L | L ∈ H ∩ P } , where L, +L, and −L are new atoms uniquely associated with every L ∈ H. The atoms +L and −L are called update atoms.",
                "By the definition, the atom L becomes true iff L is not true.",
                "The pair of rules L ← not L and L ← not L specify the situation that an abducible L is true or not.",
                "When p(x) ∈ H and p(a) ∈ P but p(t) ∈ P for t = a, the rule +L ← L precisely becomes +p(t) ← p(t) for any t = a.",
                "In this case, the rule is shortly written as +p(x) ← p(x), x = a.",
                "Generally, the rule becomes +p(x) ← p(x), x = t1, . . . , x = tn for n such instances.",
                "The rule +L ← L derives the atom +L if an abducible L which is not in P is to be true.",
                "In contrast, the rule −L ← not L derives the atom −L if an abducible L which is in P is not to be true.",
                "Thus, update atoms represent the change of truth values of abducibles in a program.",
                "That is, +L means the introduction of L, while −L means the deletion of L. When an abducible L contains variables, the associated update atom +L or −L is supposed to have exactly the same variables.",
                "In this case, an update atom is semantically identified with its ground instances.",
                "The set of all update atoms associated with the abducibles in H is denoted by UH, and UH = UH+ ∪ UH− where UH+ (resp.",
                "UH− ) is the set of update atoms of the form +L (resp. −L).",
                "Definition 4.2.",
                "Given an abductive program P, H , its update program UP is defined as the program UP = (P \\ H) ∪ UR .",
                "An answer set S of UP is called U-minimal if there is no answer set T of UP such that T ∩ UH ⊂ S ∩ UH.",
                "By the definition, U-minimal answer sets exist whenever UP has answer sets.",
                "Update programs are used for computing (minimal) explanations of an observation.",
                "Given an observation G as a conjunction of literals and NAF-literals possibly containing variables, we introduce a new ground literal O together with the rule O ← G. In this case, O has an explanation (E, F) iff G has the same explanation.",
                "With this replacement, an observation is assumed to be a ground literal without loss of generality.",
                "In what follows, E+ = { +L | L ∈ E } and F − = { −L | L ∈ F } for E ⊆ H and F ⊆ H. Proposition 4.1. ([15]) Let P, H be an abductive program, UP its update program, and G a ground literal representing an observation.",
                "Then, a pair (E, F) is an explanation of G iff UP ∪ { ← not G } has a consistent answer set S such that E+ = S ∩ UH+ and F− = S ∩ UH− .",
                "In particular, (E, F) is a <br>minimal explanation</br> iff S is a U-minimal answer set.",
                "Example 4.1.",
                "To explain the observation G = flies(t) in the program P of Example 2.1, first construct the update program UP of P:3 UP : flies(x) ← bird(x), not ab(x), ab(x) ← broken-wing(x) , bird(t) ← , bird(o) ← , broken-wing(x) ← not broken-wing(x), broken-wing(x) ← not broken-wing(x), +broken-wing(x) ← broken-wing(x), x = t , −broken-wing(t) ← not broken-wing(t) .",
                "Next, consider the program UP ∪ { ← not flies(t) }.",
                "It has the single U-minimal answer set: S = { bird(t), bird(o), flies(t), flies(o), broken-wing(t), broken-wing(o), −broken-wing(t) }.",
                "The unique <br>minimal explanation</br> (E, F) = (∅, {broken-wing(t)}) of G is expressed by the update atom −broken-wing(t) in S ∩ UH− .",
                "Proposition 4.2.",
                "Let P, H be an abductive program and G a ground literal representing an observation.",
                "If P ∪ { ← not G } has a consistent answer set S, G has the <br>minimal explanation</br> (E, F) = (∅, ∅) and S satisfies G. Now we provide methods for computing (counter-)proposals.",
                "First, conditional proposals are computed as follows. input : an abductive program P, H , a proposal G; output : a set Sc of proposals.",
                "If G is a ground literal, compute its <br>minimal explanation</br> (E, F) in P, H using the update program.",
                "Put G, E, not F in Sc.",
                "Else if G is a conjunction possibly containing variables, consider the abductive program 3 t represents tweety and o represents opus.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1027 P ∪{ O ← G }, H with a ground literal O. Compute a <br>minimal explanation</br> of O in P ∪ { O ← G }, H using its update program.",
                "If O has a <br>minimal explanation</br> (E, F) with a substitution θ for variables in G, put Gθ, E, not F in Sc.",
                "Next, neighborhood proposals are computed as follows. input : an abductive program P, H , a proposal G; output : a set Sn of proposals. % neighborhood proposals by anti-instantiation; Construct G by anti-instantiation.",
                "For a ground literal O, if P ∪ { O ← G } ∪ { ← not O } has a consistent answer set satisfying G θ with a substitution θ and G θ = G, put G θ in Sn. % neighborhood proposals by dropping conditions; Construct G by dropping conditions.",
                "If G is a ground literal and the program P ∪ { ← not G } has a consistent answer set, put G in Sn.",
                "Else if G is a conjunction possibly containing variables, do the following.",
                "For a ground literal O, if P ∪{ O ← G }∪{ ← not O } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn. % neighborhood proposals by goal replacement; Construct G by goal replacement.",
                "If G is a ground literal and there is a rule H ← B in P such that G = Hσ and Bσ = G for some substitution σ, put G = Bσ.",
                "If P ∪ { ← not G } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn.",
                "Else if G is a conjunction possibly containing variables, do the following.",
                "For a replaced literal L ∈ G , if there is a rule H ← B in P such that L = Hσ and (G \\ {L}) ∪ Bσ = G for some substitution σ, put G = (G \\ {L}) ∪ Bσ.",
                "For a ground literal O, if P ∪ { O ← G } ∪ { ← not O } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn.",
                "Theorem 4.3.",
                "The set Sc (resp.",
                "Sn) computed above coincides with the set of conditional proposals (resp. neighborhood proposals).",
                "Proof.",
                "The result for Sc follows from Definition 3.3 and Proposition 4.1.",
                "The result for Sn follows from Definition 3.5 and Proposition 4.2.",
                "Conditional neighborhood proposals are computed by combining the above two procedures.",
                "Those proposals are computed at each round.",
                "Note that the procedure for computing Sn contains some nondeterministic choices.",
                "For instance, there are generally several candidates of literals to relax in a proposal.",
                "Also, there might be several rules in a program for the usage of goal replacement.",
                "In practice, an agent can prespecify literals in a proposal for possible relaxation or rules in a program for the usage of goal replacement. 5.",
                "RELATED WORK As there are a number of literature on automated negotiation, this section focuses on comparison with negotiation frameworks based on logic and argumentation.",
                "Sadri et al. [14] use abductive logic programming as a representation language of negotiating agents.",
                "Agents negotiate using common dialogue primitives, called dialogue moves.",
                "Each agent has an abductive logic program in which a sequence of dialogues are specified by a program, a dialogue protocol is specified as constraints, and dialogue moves are specified as abducibles.",
                "The behavior of agents is regulated by an observe-think-act cycle.",
                "Once a dialogue move is uttered by an agent, another agent that observed the utterance thinks and acts using a proof procedure.",
                "Their approach and ours both employ abductive logic programming as a platform of agent reasoning, but the use of it is quite different.",
                "First, they use abducibles to specify dialogue primitives of the form tell(utterer, receiver, subject, identifier, time), while we use abducibles to specify arbitrary permissible hypotheses to construct conditional proposals.",
                "Second, a program pre-specifies a plan to carry out in order to achieve a goal, together with available/missing resources in the context of resource-exchanging problems.",
                "This is in contrast with our method in which possible counter-proposals are newly constructed in response to a proposal made by an agent.",
                "Third, they specify a negotiation policy inside a program (as integrity constraints), while we give a protocol independent of individual agents.",
                "They provide an operational model that completely specifies the behavior of agents in terms of agent cycle.",
                "We do not provide such a complete specification of the behavior of agents.",
                "Our primary interest is to mechanize construction of proposals.",
                "Bracciali and Torroni [2] formulate abductive agents that have knowledge in abductive logic programs.",
                "To explain an observation, two agents communicate by exchanging integrity constraints.",
                "In the process of communication, an agent can revise its own integrity constraints according to the information provided by the other agent.",
                "A set IC of integrity constraints relaxes a set IC (or IC tightens IC ) if any observation that can be proved with respect to IC can also be proved with respect to IC .",
                "For instance, IC : ← a, b, c relaxes IC : ← a, b.",
                "Thus, they use relaxation for weakening the constraints in an abductive logic program.",
                "In contrast, we use relaxation for weakening proposals and three different relaxation methods, anti-instantiation, dropping conditions, and goal replacement, are considered.",
                "Their goal is to explain an observation by revising integrity constraints of an agent through communication, while we use integrity constraints for communication to explain critiques and help other agents in making counter-proposals.",
                "Meyer et al. [11] introduce a logical framework for negotiating agents.",
                "They introduce two different modes of negotiation: concession and adaptation.",
                "They provide rational postulates to characterize negotiated outcomes between two agents, and describe methods for constructing outcomes.",
                "They provide logical conditions for negotiated outcomes to satisfy, but they do not describe a process of negotiation nor negotiation protocols.",
                "Moreover, they represent agents by classical propositional theories, which is different from our abductive logic programming framework.",
                "Foo et al. [5] model one-to-one negotiation as a one-time encounter between two extended logic programs.",
                "An agent offers an answer set of its program, and their mutual deal is regarded as a trade on their answer sets.",
                "Starting from the initial agreement set S∩T for an answer set S of an agent and an answer set T of another agent, each agent extends this set to reflect its own demand while keeping consistency with demand of the other agent.",
                "Their algorithm returns new programs having answer sets which are consistent with each other and keep the agreement set.",
                "The work is extended to repeated encounters in [3].",
                "In their framework, two agents exchange answer sets to produce a common belief set, which is different from our framework of exchanging proposals.",
                "There are a number of proposals for negotiation based 1028 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) on argumentation.",
                "An advantage of argumentation-based negotiation is that it constructs a proposal with arguments supporting the proposal [1].",
                "The existence of arguments is useful to convince other agents of reasons why an agent offers (counter-)proposals or returns critiques.",
                "Parsons et al. [13] develop a logic of argumentation-based negotiation among BDI agents.",
                "In one-to-one negotiation, an agent A generates a proposal together with its arguments, and passes it to another agent B.",
                "The proposal is evaluated by B which attempts to build arguments against it.",
                "If it conflicts with Bs interest, B informs A of its objection by sending back its attacking argument.",
                "In response to this, A tries to find an alternative way of achieving its original objective, or a way of persuading B to drop its objection.",
                "If either type of argument can be found, A will submit it to B.",
                "If B finds no reason to reject the new proposal, it will be accepted and the negotiation ends in success.",
                "Otherwise, the process is iterated.",
                "In this negotiation processes, the agent A never changes its original objective, so that negotiation ends in failure if A fails to find an alternative way of achieving the original objective.",
                "In our framework, when a proposal is rejected by another agent, an agent can weaken or change its objective by abduction and relaxation.",
                "Our framework does not have a mechanism of argumentation, but reasons for critiques can be informed by responding critique sets.",
                "Kakas and Moraitis [10] propose a negotiation protocol which integrates abduction within an argumentation framework.",
                "A proposal contains an offer corresponding to the negotiation object, together with supporting information representing conditions under which this offer is made.",
                "Supporting information is computed by abduction and is used for constructing conditional arguments during the process of negotiation.",
                "In their negotiation protocol, when an agent cannot satisfy its own goal, the agent considers the other agents goal and searches for conditions under which the goal is acceptable.",
                "Our present approach differs from theirs in the following points.",
                "First, they use abduction to seek conditions to support arguments, while we use abduction to seek conditions for proposals to accept.",
                "Second, in their negotiation protocol, counter-proposals are chosen among candidates based on preference knowledge of an agent at meta-level, which represents policy under which an agent uses its object-level decision rules according to situations.",
                "In our framework, counter-proposals are newly constructed using abduction and relaxation.",
                "The method of construction is independent of particular negotiation protocols.",
                "As [2, 10, 14], abduction or abductive logic programming used in negotiation is mostly based on normal abduction.",
                "In contrast, our approach is based on extended abduction which can not only introduce hypotheses but remove them from a program.",
                "This is another important difference.",
                "Relaxation and neighborhood query answering are devised to make databases cooperative with their users [4, 6].",
                "In this sense, those techniques have the spirit similar to cooperative problem solving in multi-agent systems.",
                "As far as the authors know, however, there is no study which applies those technique to agent negotiation. 6.",
                "CONCLUSION In this paper we proposed a logical framework for negotiating agents.",
                "To construct proposals in the process of negotiation, we combined the techniques of extended abduction and relaxation.",
                "It was shown that these two operations are used for general inference rules in producing proposals.",
                "We developed a negotiation protocol between two agents based on exchange of proposals and critiques, and provided procedures for computing proposals in abductive logic programming.",
                "This enables us to realize automated negotiation on top of the existing answer set solvers.",
                "The present framework does not have a mechanism of selecting an optimal (counter-)proposal among different alternatives.",
                "To compare and evaluate proposals, an agent must have preference knowledge of candidate proposals.",
                "Further elaboration to maximize the utility of agents is left for future study. 7.",
                "REFERENCES [1] L. Amgoud, S. Parsons, and N. Maudet.",
                "Arguments, dialogue, and negotiation.",
                "In: Proc.",
                "ECAI-00, pp. 338-342, IOS Press, 2000. [2] A. Bracciali and P. Torroni.",
                "A new framework for knowledge revision of abductive agents through their interaction.",
                "In: Proc.",
                "CLIMA-IV, Computational Logic in Multi-Agent Systems, LNAI 3259, pp. 159-177, 2004. [3] W. Chen, M. Zhang, and N. Foo.",
                "Repeated negotiation of logic programs.",
                "In: Proc. 7th Workshop on Nonmonotonic Reasoning, Action and Change, 2006. [4] W. W. Chu, Q. Chen, and R.-C. Lee.",
                "Cooperative query answering via type abstraction hierarchy.",
                "In: Cooperating Knowledge Based Systems, S. M. Deen ed., pp. 271-290, Springer, 1990. [5] N. Foo, T. Meyer, Y. Zhang, and D. Zhang.",
                "Negotiating logic programs.",
                "In: Proc. 6th Workshop on Nonmonotonic Reasoning, Action and Change, 2005. [6] T. Gaasterland, P. Godfrey, and J. Minker.",
                "Relaxation as a platform for cooperative answering.",
                "Journal of Intelligence Information Systems 1(3/4):293-321, 1992. [7] M. Gelfond and V. Lifschitz.",
                "Classical negation in logic programs and disjunctive databases.",
                "New Generation Computing 9:365-385, 1991. [8] K. Inoue and C. Sakama.",
                "Abductive framework for nonmonotonic theory change.",
                "In: Proc.",
                "IJCAI-95, pp. 204-210, Morgan Kaufmann. [9] A. C. Kakas, R. A. Kowalski, and F. Toni, The role of abduction in logic programming.",
                "In: Handbook of Logic in AI and Logic Programming, D. M. Gabbay, et al. (eds), vol. 5, pp. 235-324, Oxford University Press, 1998. [10] A. C. Kakas and P. Moraitis.",
                "Adaptive agent negotiation via argumentation.",
                "In: Proc.",
                "AAMAS-06, pp. 384-391, ACM Press. [11] T. Meyer, N. Foo, R. Kwok, and D. Zhang.",
                "Logical foundation of negotiation: outcome, concession and adaptation.",
                "In: Proc.",
                "AAAI-04, pp. 293-298, MIT Press. [12] R. S. Michalski.",
                "A theory and methodology of inductive learning.",
                "In: Machine Learning: An Artificial Intelligence Approach, R. S. Michalski, et al. (eds), pp. 83-134, Morgan Kaufmann, 1983. [13] S. Parsons, C. Sierra and N. Jennings.",
                "Agents that reason and negotiate by arguing.",
                "Journal of Logic and Computation, 8(3):261-292, 1988. [14] F. Sadri, F. Toni, and P. Torroni, An abductive logic programming architecture for negotiating agents.",
                "In: Proc. 8th European Conf. on Logics in AI, LNAI 2424, pp. 419-431, Springer, 2002. [15] C. Sakama and K. Inoue.",
                "An abductive framework for computing knowledge base updates.",
                "Theory and Practice of Logic Programming 3(6):671-715, 2003.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1029"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "La observación g = moscas (tweety) tiene la \"explicación mínima\" (e, f) = (∅, {ala rota (tweety)}).1 Esto define explicaciones crédulos [15].",
                "If (e, f) es una \"explicación mínima\" de gθ para alguna sustitución θ en p, h, la conjunción g: gθ, e, no f se llama propuesta condicional (para g), donde e, no f representa laConjunción: A1 ,..., AK, no AK+1 ,..., no Al para e = {a1 ,..., Ak} y f = {ak+1 ,..., Al}.",
                "En este caso, (e, f) = ({tiene PhD}, ∅) se convierte en la \"explicación mínima\" de gθ = asistencia (departamento de compt), salario (60, 000) con θ = {x/60, 000}.",
                "If (e, f) es una \"explicación mínima\" de g θ (= g) para alguna sustitución θ, la conjunción G θ, E, no F se llama propuesta de vecindad condicional por condiciones anti-instanciaciones/caídas.2.",
                "Si (E, F) es una \"explicación mínima\" de G θ para alguna sustitución θ, la conjunción G θ, E, no F se llama propuesta condicional del vecindario por reemplazo de objetivos.",
                "Como resultado, el vendedor encuentra la \"explicación mínima\" (e, f) = ({pagar en efectivo}, {agregar punto}) que explica G1 b θ1 con θ1 = {x/1170}.",
                "En particular, (e, f) es una \"explicación mínima\" IFF S es un conjunto de respuestas U-minimal.",
                "La \"explicación mínima\" única (e, f) = (∅, {ala rota (t)}) de g se expresa mediante el átomo de actualización-ala-ala-rota (t) en S ∩ uh−.",
                "Si P ∪ {← no G} tiene un conjunto de respuestas consistente S, G tiene la \"explicación mínima\" (e, f) = (∅, ∅) y S satisface G. Ahora proporcionamos métodos para calcular (contra) propuestas.",
                "Si G es un literal de tierra, calcule su \"explicación mínima\" (E, F) en P, H utilizando el programa de actualización.",
                "Conf.en agentes autónomos y sistemas de múltiples agentes (Aamas 07) 1027 P ∪ {o ← g}, h con un literal de tierra O. Computas una \"explicación mínima\" de O en p ∪ {o ← g}, H utilizando su programa de actualización.",
                "Si O tiene una \"explicación mínima\" (e, f) con una sustitución θ por variables en g, poner gθ, e, no f en sc."
            ],
            "translated_text": "",
            "candidates": [
                "explicación mínima",
                "explicación mínima",
                "explicación mínima",
                "explicación mínima",
                "explicación mínima",
                "explicación mínima",
                "Explicación mínima",
                "explicación mínima",
                "explicación mínima",
                "explicación mínima",
                "explicación mínima",
                "explicación mínima",
                "explicación mínima",
                "explicación mínima",
                "explicación mínima",
                "explicación mínima",
                "explicación mínima",
                "explicación mínima",
                "explicación mínima",
                "explicación mínima",
                "explicación mínima",
                "explicación mínima",
                "explicación mínima",
                "explicación mínima"
            ],
            "error": []
        },
        "integrity constraint": {
            "translated_key": "restricción de integridad",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Negotiation by Abduction and Relaxation Chiaki Sakama Dept.",
                "Computer and Communication Sciences Wakayama University Sakaedani, Wakayama 640 8510, Japan sakama@sys.wakayama-u.ac.jp Katsumi Inoue National Institute of Informatics 2-1-2 Hitotsubashi, Chiyoda-ku Tokyo 101 8430, Japan ki@nii.ac.jp ABSTRACT This paper studies a logical framework for automated negotiation between two agents.",
                "We suppose an agent who has a knowledge base represented by a logic program.",
                "Then, we introduce methods of constructing counter-proposals in response to proposals made by an agent.",
                "To this end, we combine the techniques of extended abduction in artificial intelligence and relaxation in cooperative query answering for databases.",
                "These techniques are respectively used for producing conditional proposals and neighborhood proposals in the process of negotiation.",
                "We provide a negotiation protocol based on the exchange of these proposals and develop procedures for computing new proposals.",
                "Categories and Subject Descriptors F.4.1 [Mathematical Logic]: Logic and constraint programming;; I.2.11 [Distributed Artificial Intelligence]: Multiagent systems General Terms Theory 1.",
                "INTRODUCTION Automated negotiation has been received increasing attention in multi-agent systems, and a number of frameworks have been proposed in different contexts ([1, 2, 3, 5, 10, 11, 13, 14], for instance).",
                "Negotiation usually proceeds in a series of rounds and each agent makes a proposal at every round.",
                "An agent that received a proposal responds in two ways.",
                "One is a critique which is a remark as to whether or not (parts of) the proposal is accepted.",
                "The other is a counter-proposal which is an alternative proposal made in response to a previous proposal [13].",
                "To see these proposals in one-to-one negotiation, suppose the following negotiation dialogue between a buyer agent B and a seller agent S. (Bi (or Si) represents an utterance of B (or S) in the i-th round.)",
                "B1: I want to buy a personal computer of the brand b1, with the specification of CPU:1GHz, Memory:512MB, HDD: 80GB, and a DVD-RW driver.",
                "I want to get it at the price under 1200 USD.",
                "S1: We can provide a PC with the requested specification if you pay for it by cash.",
                "In this case, however, service points are not added for this special discount.",
                "B2: I cannot pay it by cash.",
                "S2: In a normal price, the requested PC costs 1300 USD.",
                "B3: I cannot accept the price.",
                "My budget is under 1200 USD.",
                "S3: We can provide another computer with the requested specification, except that it is made by the brand b2.",
                "The price is exactly 1200 USD.",
                "B4: I do not want a PC of the brand b2.",
                "Instead, I can downgrade a driver from DVD-RW to CD-RW in my initial proposal.",
                "S4: Ok, I accept your offer.",
                "In this dialogue, in response to the opening proposal B1, the counter-proposal S1 is returned.",
                "In the rest of the dialogue, B2, B3, S4 are critiques, while S2, S3, B4 are counterproposals.",
                "Critiques are produced by evaluating a proposal in a knowledge base of an agent.",
                "In contrast, making counter-proposals involves generating an alternative proposal which is more favorable to the responding agent than the original one.",
                "It is known that there are two ways of producing counterproposals: extending the initial proposal or amending part of the initial proposal.",
                "According to [13], the first type appears in the dialogue: A: I propose that you provide me with service X.",
                "B: I propose that I provide you with service X if you provide me with service Z.",
                "The second type is in the dialogue: A: I propose that I provide you with service Y if you provide me with service X.",
                "B: I propose that I provide you with service X if you provide me with service Z.",
                "A negotiation proceeds by iterating such give-andtake dialogues until it reaches an agreement/disagreement.",
                "In those dialogues, agents generate (counter-)proposals by reasoning on their own goals or objectives.",
                "The objective of the agent A in the above dialogues is to obtain service X.",
                "The agent B proposes conditions to provide the service.",
                "In the process of negotiation, however, it may happen that agents are obliged to weaken or change their initial goals to reach a negotiated compromise.",
                "In the dialogue of 1022 978-81-904262-7-5 (RPS) c 2007 IFAAMAS a buyer agent and a seller agent presented above, a buyer agent changes its initial goal by downgrading a driver from DVD-RW to CD-RW.",
                "Such behavior is usually represented as specific meta-knowledge of an agent or specified as negotiation protocols in particular problems.",
                "Currently, there is no computational logic for automated negotiation which has general inference rules for producing (counter-)proposals.",
                "The purpose of this paper is to mechanize a process of building (counter-)proposals in one-to-one negotiation dialogues.",
                "We suppose an agent who has a knowledge base represented by a logic program.",
                "We then introduce methods for generating three different types of proposals.",
                "First, we use the technique of extended abduction in artificial intelligence [8, 15] to construct a conditional proposal as an extension of the original one.",
                "Second, we use the technique of relaxation in cooperative query answering for databases [4, 6] to construct a neighborhood proposal as an amendment of the original one.",
                "Third, combining extended abduction and relaxation, conditional neighborhood proposals are constructed as amended extensions of the original proposal.",
                "We develop a negotiation protocol between two agents based on the exchange of these counter-proposals and critiques.",
                "We also provide procedures for computing proposals in logic programming.",
                "This paper is organized as follows.",
                "Section 2 introduces a logical framework used in this paper.",
                "Section 3 presents methods for constructing proposals, and provides a negotiation protocol.",
                "Section 4 provides methods for computing proposals in logic programming.",
                "Section 5 discusses related works, and Section 6 concludes the paper. 2.",
                "PRELIMINARIES Logic programs considered in this paper are extended disjunctive programs (EDP) [7].",
                "An EDP (or simply a program) is a set of rules of the form: L1 ; · · · ; Ll ← Ll+1 , . . . , Lm, not Lm+1 , . . . , not Ln (n ≥ m ≥ l ≥ 0) where each Li is a positive/negative literal, i.e., A or ¬A for an atom A, and not is negation as failure (NAF). not L is called an NAF-literal.",
                "The symbol ; represents disjunction.",
                "The left-hand side of the rule is the head, and the right-hand side is the body.",
                "For each rule r of the above form, head(r), body+ (r) and body− (r) denote the sets of literals {L1, . . . , Ll}, {Ll+1, . . . , Lm}, and {Lm+1, . . . , Ln}, respectively.",
                "Also, not body− (r) denotes the set of NAF-literals {not Lm+1, . . . , not Ln}.",
                "A disjunction of literals and a conjunction of (NAF-)literals in a rule are identified with its corresponding sets of literals.",
                "A rule r is often written as head(r) ← body+ (r), not body− (r) or head(r) ← body(r) where body(r) = body+ (r)∪not body− (r).",
                "A rule r is disjunctive if head(r) contains more than one literal.",
                "A rule r is an <br>integrity constraint</br> if head(r) = ∅; and r is a fact if body(r) = ∅.",
                "A program is NAF-free if no rule contains NAF-literals.",
                "Two rules/literals are identified with respect to variable renaming.",
                "A substitution is a mapping from variables to terms θ = {x1/t1, . . . , xn/tn}, where x1, . . . , xn are distinct variables and each ti is a term distinct from xi.",
                "Given a conjunction G of (NAF-)literals, Gθ denotes the conjunction obtained by applying θ to G. A program, rule, or literal is ground if it contains no variable.",
                "A program P with variables is a shorthand of its ground instantiation Ground(P), the set of ground rules obtained from P by substituting variables in P by elements of its Herbrand universe in every possible way.",
                "The semantics of an EDP is defined by the answer set semantics [7].",
                "Let Lit be the set of all ground literals in the language of a program.",
                "Suppose a program P and a set of literals S(⊆ Lit).",
                "Then, the reduct P S is the program which contains the ground rule head(r) ← body+ (r) iff there is a rule r in Ground(P) such that body− (r)∩S = ∅.",
                "Given an NAF-free EDP P, Cn(P) denotes the smallest set of ground literals which is (i) closed under P, i.e., for every ground rule r in Ground(P), body(r) ⊆ Cn(P) implies head(r) ∩ Cn(P) = ∅; and (ii) logically closed, i.e., it is either consistent or equal to Lit.",
                "Given an EDP P and a set S of literals, S is an answer set of P if S = Cn(P S ).",
                "A program has none, one, or multiple answer sets in general.",
                "An answer set is consistent if it is not Lit.",
                "A program P is consistent if it has a consistent answer set; otherwise, P is inconsistent.",
                "Abductive logic programming [9] introduces a mechanism of hypothetical reasoning to logic programming.",
                "An abductive framework used in this paper is the extended abduction introduced by Inoue and Sakama [8, 15].",
                "An abductive program is a pair P, H where P is an EDP and H is a set of literals called abducibles.",
                "When a literal L ∈ H contains variables, any instance of L is also an abducible.",
                "An abductive program P, H is consistent if P is consistent.",
                "Throughout the paper, abductive programs are assumed to be consistent unless stated otherwise.",
                "Let G = L1, . . . , Lm, not Lm+1, . . . , not Ln be a conjunction, where all variables in G are existentially quantified at the front and range-restricted, i.e., every variable in Lm+1, . . . , Ln appears in L1, . . . , Lm.",
                "A set S of ground literals satisfies the conjunction G if { L1θ, . . . , Lmθ } ⊆ S and { Lm+1θ, . . . , Lnθ }∩ S = ∅ for some ground instance Gθ with a substitution θ.",
                "Let P, H be an abductive program and G a conjunction as above.",
                "A pair (E, F) is an explanation of an observation G in P, H if1 1. (P \\ F) ∪ E has an answer set which satisfies G, 2. (P \\ F) ∪ E is consistent, 3.",
                "E and F are sets of ground literals such that E ⊆ H\\P and F ⊆ H ∩ P. When (P \\ F) ∪ E has an answer set S satisfying the above three conditions, S is called a belief set of an abductive program P, H satisfying G (with respect to (E, F)).",
                "Note that if P has a consistent answer set S satisfying G, S is also a belief set of P, H satisfying G with respect to (E, F) = (∅, ∅).",
                "Extended abduction introduces/removes hypotheses to/from a program to explain an observation.",
                "Note that normal abduction (as in [9]) considers only introducing hypotheses to explain an observation.",
                "An explanation (E, F) of an observation G is called minimal if for any explanation (E , F ) of G, E ⊆ E and F ⊆ F imply E = E and F = F. Example 2.1.",
                "Consider the abductive program P, H : P : flies(x) ← bird(x), not ab(x) , ab(x) ← broken-wing(x) , bird(tweety) ← , bird(opus) ← , broken-wing(tweety) ← .",
                "H : broken-wing(x) .",
                "The observation G = flies(tweety) has the minimal explanation (E, F) = (∅, {broken-wing(tweety)}). 1 This defines credulous explanations [15].",
                "Skeptical explanations are used in [8].",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1023 3.",
                "NEGOTIATION 3.1 Conditional Proposals by Abduction We suppose an agent who has a knowledge base represented by an abductive program P, H .",
                "A program P consists of two types of knowledge, belief B and desire D, where B represents objective knowledge of an agent, while D represents subjective knowledge in general.",
                "We define P = B ∪ D, but do not distinguish B and D if such distinction is not important in the context.",
                "In contrast, abducibles H are used for representing permissible conditions to make a compromise in the process of negotiation.",
                "Definition 3.1.",
                "A proposal G is a conjunction of literals and NAF-literals: L1, . . . , Lm, not Lm+1, . . . , not Ln where every variable in G is existentially quantified at the front and range-restricted.",
                "In particular, G is called a critique if G = accept or G = reject where accept and reject are the reserved propositions.",
                "A counter-proposal is a proposal made in response to a proposal.",
                "Definition 3.2.",
                "A proposal G is accepted in an abductive program P, H if P has an answer set satisfying G. When a proposal is not accepted, abduction is used for seeking conditions to make it acceptable.",
                "Definition 3.3.",
                "Let P, H be an abductive program and G a proposal.",
                "If (E, F) is a minimal explanation of Gθ for some substitution θ in P, H , the conjunction G : Gθ, E, not F is called a conditional proposal (for G), where E, not F represents the conjunction: A1, . . . , Ak, not Ak+1, . . . , not Al for E = {A1, . . . , Ak} and F = { Ak+1, . . . , Al }.",
                "Proposition 3.1.",
                "Let P, H be an abductive program and G a proposal.",
                "If G is a conditional proposal, there is a belief set S of P, H satisfying G .",
                "Proof.",
                "When G = Gθ, E, not F, (P \\ F) ∪ E has a consistent answer set S satisfying Gθ and E ∩ F = ∅.",
                "In this case, S satisfies Gθ, E, not F. A conditional proposal G provides a minimal requirement for accepting the proposal G. If Gθ has multiple minimal explanations, several conditional proposals exist accordingly.",
                "When (E, F) = (∅, ∅), a conditional proposal is used as a new proposal made in response to the proposal G. Example 3.1.",
                "An agent seeks a position of a research assistant at the computer department of a university with the condition that the salary is at least 50,000 USD per year.",
                "The agent makes his/her request as the proposal:2 G = assist(compt dept), salary(x), x ≥ 50, 000.",
                "The university has the abductive program P, H : P : salary(40, 000) ← assist(compt dept), not has PhD, salary(60, 000) ← assist(compt dept), has PhD, salary(50, 000) ← assist(math dept), salary(55, 000) ← system admin(compt dept), 2 For notational convenience, we often include mathematical (in)equations in proposals/programs.",
                "They are written by literals, for instance, x ≥ y by geq(x, y) with a suitable definition of the predicate geq. employee(x) ← assist(x), employee(x) ← system admin(x), assist(compt dept); assist(math dept) ; system admin(compt dept) ←, H : has PhD, where available positions are represented by disjunction.",
                "According to P, the base salary of a research assistant at the computer department is 40,000 USD, but if he/she has PhD, it is 60,000 USD.",
                "In this case, (E, F) = ({has PhD}, ∅) becomes the minimal explanation of Gθ = assist(compt dept), salary(60, 000) with θ = { x/60, 000 }.",
                "Then, the conditional proposal made by the university becomes assist(compt dept), salary(60, 000), has PhD . 3.2 Neighborhood Proposals by Relaxation When a proposal is unacceptable, an agent tries to construct a new counter-proposal by weakening constraints in the initial proposal.",
                "We use techniques of relaxation for this purpose.",
                "Relaxation is used as a technique of cooperative query answering in databases [4, 6].",
                "When an original query fails in a database, relaxation expands the scope of the query by relaxing the constraints in the query.",
                "This allows the database to return neighborhood answers which are related to the original query.",
                "We use the technique for producing proposals in the process of negotiation.",
                "Definition 3.4.",
                "Let P, H be an abductive program and G a proposal.",
                "Then, G is relaxed to G in the following three ways: Anti-instantiation: Construct G such that G θ = G for some substitution θ.",
                "Dropping conditions: Construct G such that G ⊂ G. Goal replacement: If G is a conjunction G1, G2, where G1 and G2 are conjunctions, and there is a rule L ← G1 in P such that G1θ = G1 for some substitution θ, then build G as Lθ, G2.",
                "Here, Lθ is called a replaced literal.",
                "In each case, every variable in G is existentially quantified at the front and range-restricted.",
                "Anti-instantiation replaces constants (or terms) with fresh variables.",
                "Dropping conditions eliminates some conditions in a proposal.",
                "Goal replacement replaces the condition G1 in G with a literal Lθ in the presence of a rule L ← G1 in P under the condition G1θ = G1.",
                "All these operations generalize proposals in different ways.",
                "Each G obtained by these operations is called a relaxation of G. It is worth noting that these operations are also used in the context of inductive generalization [12].",
                "The relaxed proposal can produce new offers which are neighbor to the original proposal.",
                "Definition 3.5.",
                "Let P, H be an abductive program and G a proposal. 1.",
                "Let G be a proposal obtained by anti-instantiation.",
                "If P has an answer set S which satisfies G θ for some substitution θ and G θ = G, G θ is called a neighborhood proposal by anti-instantiation. 2.",
                "Let G be a proposal obtained by dropping conditions.",
                "If P has an answer set S which satisfies G θ for some substitution θ, G θ is called a neighborhood proposal by dropping conditions. 1024 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.",
                "Let G be a proposal obtained by goal replacement.",
                "For a replaced literal L ∈ G and a rule H ← B in P such that L = Hσ and (G \\ {L}) ∪ Bσ = G for some substitution σ, put G = (G \\ {L}) ∪ Bσ.",
                "If P has an answer set S which satisfies G θ for some substitution θ, G θ is called a neighborhood proposal by goal replacement.",
                "Example 3.2. (cont.",
                "Example 3.1) Given the proposal G = assist(compt dept), salary(x), x ≥ 50, 000, • G1 = assist(w), salary(x), x ≥ 50, 000 is produced by substituting compt dept with a variable w. As G1θ1 = assist(math dept), salary(50, 000) with θ1 = { w/math dept } is satisfied by an answer set of P, G1θ1 becomes a neighborhood proposal by anti-instantiation. • G2 = assist(compt dept), salary(x) is produced by dropping the salary condition x ≥ 50, 000.",
                "As G2θ2 = assist(compt dept), salary(40, 000) with θ2 = { x/40, 000 } is satisfied by an answer set of P, G2θ2 becomes a neighborhood proposal by dropping conditions. • G3 = employee(compt dept), salary(x), x ≥ 50, 000 is produced by replacing assist(compt dept) with employee(compt dept) using the rule employee(x) ← assist(x) in P. By G3 and the rule employee(x) ← system admin(x) in P, G3 = sys admin(compt dept), salary(x), x ≥ 50, 000 is produced.",
                "As G3 θ3 = sys admin(compt dept), salary(55, 000) with θ3 = { x/55, 000 } is satisfied by an answer set of P, G3 θ3 becomes a neighborhood proposal by goal replacement.",
                "Finally, extended abduction and relaxation are combined to produce conditional neighborhood proposals.",
                "Definition 3.6.",
                "Let P, H be an abductive program and G a proposal. 1.",
                "Let G be a proposal obtained by either anti-instantiation or dropping conditions.",
                "If (E, F) is a minimal explanation of G θ(= G) for some substitution θ, the conjunction G θ, E, not F is called a conditional neighborhood proposal by anti-instantiation/dropping conditions. 2.",
                "Let G be a proposal obtained by goal replacement.",
                "Suppose G as in Definition 3.5(3).",
                "If (E, F) is a minimal explanation of G θ for some substitution θ, the conjunction G θ, E, not F is called a conditional neighborhood proposal by goal replacement.",
                "A conditional neighborhood proposal reduces to a neighborhood proposal when (E, F) = (∅, ∅). 3.3 Negotiation Protocol A negotiation protocol defines how to exchange proposals in the process of negotiation.",
                "This section presents a negotiation protocol in our framework.",
                "We suppose one-to-one negotiation between two agents who have a common ontology and the same language for successful communication.",
                "Definition 3.7.",
                "A proposal L1, ..., Lm, not Lm+1, ..., not Ln violates an <br>integrity constraint</br> ← body+ (r), not body− (r) if for any substitution θ, there is a substitution σ such that body+ (r)σ ⊆ { L1θ, . . . , Lmθ }, body− (r)σ∩{ L1θ, . . . , Lmθ } = ∅, and body− (r)σ ⊆ { Lm+1θ, . . . , Lnθ }.",
                "Integrity constraints are conditions which an agent should satisfy, so that they are used to explain why an agent does not accept a proposal.",
                "A negotiation proceeds in a series of rounds.",
                "Each i-th round (i ≥ 1) consists of a proposal Gi 1 made by one agent Ag1 and another proposal Gi 2 made by the other agent Ag2.",
                "Definition 3.8.",
                "Let P1, H1 be an abductive program of an agent Ag1 and Gi 2 a proposal made by Ag2 at the i-th round.",
                "A critique set of Ag1 (at the i-th round) is a set CSi 1(P1, Gj 2) = CSi−1 1 (P1, Gj−1 2 ) ∪ { r | r is an <br>integrity constraint</br> in P1 and Gj 2 violates r } where j = i − 1 or i, and CS0 1 (P1, G0 2) = CS1 1 (P1, G0 2) = ∅.",
                "A critique set of an agent Ag1 accumulates integrity constraints which are violated by proposals made by another agent Ag2.",
                "CSi 2(P2, Gj 1) is defined in the same manner.",
                "Definition 3.9.",
                "Let Pk, Hk be an abductive program of an agent Agk and Gj a proposal, which is not a critique, made by any agent at the j(≤ i)-th round.",
                "A negotiation set of Agk (at the i-th round) is a triple NSi k = (Si c, Si n, Si cn), where Si c is the set of conditional proposals, Si n is the set of neighborhood proposals, and Si cn is the set of conditional neighborhood proposals, produced by Gj and Pk, Hk .",
                "A negotiation set represents the space of possible proposals made by an agent.",
                "Si x (x ∈ {c, n, cn}) accumulates proposals produced by Gj (1 ≤ j ≤ i) according to Definitions 3.3, 3.5, and 3.6.",
                "Note that an agent can construct counter-proposals by modifying its own previous proposals or another agents proposals.",
                "An agent Agk accumulates proposals that are made by Agk but are rejected by another agent, in the failed proposal set FP i k (at the i-th round), where FP 0 k = ∅.",
                "Suppose two agents Ag1 and Ag2 who have abductive programs P1, H1 and P2, H2 , respectively.",
                "Given a proposal G1 1 which is satisfied by an answer set of P1, a negotiation starts.",
                "In response to the proposal Gi 1 made by Ag1 at the i-th round, Ag2 behaves as follows. 1.",
                "If Gi 1 = accept, an agreement is reached and negotiation ends in success. 2.",
                "Else if Gi 1 = reject, put FP i 2 = FPi−1 2 ∪{Gi−1 2 } where {G0 2} = ∅.",
                "Proceed to the step 4(b). 3.",
                "Else if P2 has an answer set satisfying Gi 1, Ag2 returns Gi 2 = accept to Ag1.",
                "Negotiation ends in success. 4.",
                "Otherwise, Ag2 behaves as follows.",
                "Put FP i 2 = FPi−1 2 . (a) If Gi 1 violates an <br>integrity constraint</br> in P2, return the critique Gi 2 = reject to Ag1, together with the critique set CSi 2(P2, Gi 1). (b) Otherwise, construct NSi 2 as follows. (i) Produce Si c. Let μ(Si c) = { p | p ∈ Si c \\ FPi 2 and p satisfies the constraints in CSi 1(P1, Gi−1 2 )}.",
                "If μ(Si c) = ∅, select one from μ(Si c) and propose it as Gi 2 to Ag1; otherwise, go to (ii). (ii) Produce Si n. If μ(Si n) = ∅, select one from μ(Si n) and propose it as Gi 2 to Ag1; otherwise, go to (iii). (iii) Produce Si cn.",
                "If μ(Si cn) = ∅, select one from μ(Si cn) and propose it as Gi 2 to Ag1; otherwise, negotiation ends in failure.",
                "This means that Ag2 can make no counter-proposal or every counterproposal made by Ag2 is rejected by Ag1.",
                "In the step 4(a), Ag2 rejects the proposal Gi 1 and returns the reason of rejection as a critique set.",
                "This helps for Ag1 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1025 in preparing a next counter-proposal.",
                "In the step 4(b), Ag2 constructs a new proposal.",
                "In its construction, Ag2 should take care of the critique set CSi 1(P1, Gi−1 2 ), which represents integrity constraints, if any, accumulated in previous rounds, that Ag1 must satisfy.",
                "Also, FP i 2 is used for removing proposals which have been rejected.",
                "Construction of Si x (x ∈ {c, n, cn}) in NSi 2 is incrementally done by adding new counter-proposals produced by Gi 1 or Gi−1 2 to Si−1 x .",
                "For instance, Si n in NSi 2 is computed as Si n = Si−1 n ∪{ p | p is a neighborhood proposal made by Gi 1 } ∪ { p | p is a neighborhood proposal made by Gi−1 2 }, where S0 n = ∅.",
                "That is, Si n is constructed from Si−1 n by adding new proposals which are obtained by modifying the proposal Gi 1 made by Ag1 at the i-th round or modifying the proposal Gi−1 2 made by Ag2 at the (i − 1)-th round.",
                "Si c and Si cn are obtained as well.",
                "In the above protocol, an agent produces Si c at first, secondly Si n, and finally Si cn.",
                "This strategy seeks conditions which satisfy the given proposal, prior to neighborhood proposals which change the original one.",
                "Another strategy, which prefers neighborhood proposals to conditional ones, is also considered.",
                "Conditional neighborhood proposals are to be considered in the last place, since they differ from the original one to the maximal extent.",
                "The above protocol produces the candidate proposals in Si x for each x ∈ {c, n, cn} at once.",
                "We can consider a variant of the protocol in which each proposal in Si x is constructed one by one (see Example 3.3).",
                "The above protocol is repeatedly applied to each one of the two negotiating agents until a negotiation ends in success/failure.",
                "Formally, the above negotiation protocol has the following properties.",
                "Theorem 3.2.",
                "Let Ag1 and Ag2 be two agents having abductive programs P1, H1 and P2, H2 , respectively. 1.",
                "If P1, H1 and P2, H2 are function-free (i.e., both Pi and Hi contain no function symbol), any negotiation will terminate. 2.",
                "If a negotiation terminates with agreement on a proposal G, both P1, H1 and P2, H2 have belief sets satisfying G. Proof. 1.",
                "When an abductive program is function-free, abducibles and negotiation sets are both finite.",
                "Moreover, if a proposal is once rejected, it is not proposed again by the function μ.",
                "Thus, negotiation will terminate in finite steps. 2.",
                "When a proposal G is made by Ag1, P1, H1 has a belief set satisfying G. If the agent Ag2 accepts the proposal G, it is satisfied by an answer set of P2 which is also a belief set of P2, H2 .",
                "Example 3.3.",
                "Suppose a buying-selling situation in the introduction.",
                "A seller agent has the abductive program Ps, Hs in which Ps consists of belief Bs and desire Ds: Bs : pc(b1, 1G, 512M, 80G) ; pc(b2, 1G, 512M, 80G) ←,(1) dvd-rw ; cd-rw ←, (2) Ds : normal price(1300) ← pc(b1, 1G, 512M, 80G), dvd-rw, (3) normal price(1200) ← pc(b1, 1G, 512M, 80G), cd-rw, (4) normal price(1200) ← pc(b2, 1G, 512M, 80G), dvd-rw, (5) price(x) ← normal price(x), add point, (6) price(x ∗ 0.9) ← normal price(x), pay cash, not add point,(7) add point ←, (8) Hs : add point, pay cash.",
                "Here, (1) and (2) represent selection of products.",
                "The atom pc(b1, 1G, 512M, 80G) represents that the seller agent has a PC of the brand b1 such that CPU is 1GHz, memory is 512MB, and HDD is 80GB.",
                "Prices of products are represented as desire of the seller.",
                "The rules (3) - (5) are normal prices of products.",
                "A normal price is a selling price on the condition that service points are added (6).",
                "On the other hand, a discount price is applied if the paying method is cash and no service point is added (7).",
                "The fact (8) represents the addition of service points.",
                "This service would be withdrawn in case of discount prices, so add point is specified as an abducible.",
                "A buyer agent has the abductive program Pb, Hb in which Pb consists of belief Bb and desire Db: Bb : drive ← dvd-rw, (9) drive ← cd-rw, (10) price(x) ←, (11) Db : pc(b1, 1G, 512M, 80G) ←, (12) dvd-rw ←, (13) cd-rw ← not dvd-rw, (14) ← pay cash, (15) ← price(x), x > 1200, (16) Hb : dvd-rw.",
                "Rules (12) - (16) are the buyers desire.",
                "Among them, (15) and (16) impose constraints for buying a PC.",
                "A DVD-RW is specified as an abducible which is subject to concession. (1st round) First, the following proposal is given by the buyer agent: G1 b : pc(b1, 1G, 512M, 80G), dvd-rw, price(x), x ≤ 1200.",
                "As Ps has no answer set which satisfies G1 b , the seller agent cannot accept the proposal.",
                "The seller takes an action of making a counter-proposal and performs abduction.",
                "As a result, the seller finds the minimal explanation (E, F) = ({ pay cash }, { add point }) which explains G1 b θ1 with θ1 = { x/1170 }.",
                "The seller constructs the conditional proposal: G1 s : pc(b1, 1G, 512M, 80G), dvd-rw, price(1170), pay cash, not add point and offers it to the buyer. (2nd round) The buyer does not accept G1 s because he/she cannot pay it by cash (15).",
                "The buyer then returns the critique G2 b = reject to the seller, together with the critique set CS2 b (Pb, G1 s) = {(15)}.",
                "In response to this, the seller tries to make another proposal which satisfies the constraint in this critique set.",
                "As G1 s is stored in FP 2 s and no other conditional proposal satisfying the buyers requirement exists, the seller produces neighborhood proposals.",
                "He/she relaxes G1 b by dropping x ≤ 1200 in the condition, and produces pc(b1, 1G, 512M, 80G), dvd-rw, price(x).",
                "As Ps has an answer set which satisfies G2 s : pc(b1, 1G, 512M, 80G), dvd-rw, price(1300), 1026 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) the seller offers G2 s as a new counter-proposal. (3rd round) The buyer does not accept G2 s because he/she cannot pay more than 1200USD (16).",
                "The buyer again returns the critique G3 b = reject to the seller, together with the critique set CS3 b (Pb, G2 s) = CS2 b (Pb, G1 s) ∪ {(16)}.",
                "The seller then considers another proposal by replacing b1 with a variable w, G1 b now becomes pc(w, 1G, 512M, 80G), dvd-rw, price(x), x ≤ 1200.",
                "As Ps has an answer set which satisfies G3 s : pc(b2, 1G, 512M, 80G), dvd-rw, price(1200), the seller offers G3 s as a new counter-proposal. (4th round) The buyer does not accept G3 s because a PC of the brand b2 is out of his/her interest and Pb has no answer set satisfying G3 s. Then, the buyer makes a concession by changing his/her original goal.",
                "The buyer relaxes G1 b by goal replacement using the rule (9) in Pb, and produces pc(b1, 1G, 512M, 80G), drive, price(x), x ≤ 1200.",
                "Using (10), the following proposal is produced: pc(b1, 1G, 512M, 80G), cd-rw, price(x), x ≤ 1200.",
                "As Pb \\ { dvd-rw } has a consistent answer set satisfying the above proposal, the buyer proposes the conditional neighborhood proposal G4 b : pc(b1, 1G, 512M, 80G), cd-rw, not dvd-rw, price(x), x ≤ 1200 to the seller agent.",
                "Since Ps also has an answer set satisfying G4 b , the seller accepts it and sends the message G4 s = accept to the buyer.",
                "Thus, the negotiation ends in success. 4.",
                "COMPUTATION In this section, we provide methods of computing proposals in terms of answer sets of programs.",
                "We first introduce some definitions from [15].",
                "Definition 4.1.",
                "Given an abductive program P, H , the set UR of update rules is defined as: UR = { L ← not L, L ← not L | L ∈ H } ∪ { +L ← L | L ∈ H \\ P } ∪ { −L ← not L | L ∈ H ∩ P } , where L, +L, and −L are new atoms uniquely associated with every L ∈ H. The atoms +L and −L are called update atoms.",
                "By the definition, the atom L becomes true iff L is not true.",
                "The pair of rules L ← not L and L ← not L specify the situation that an abducible L is true or not.",
                "When p(x) ∈ H and p(a) ∈ P but p(t) ∈ P for t = a, the rule +L ← L precisely becomes +p(t) ← p(t) for any t = a.",
                "In this case, the rule is shortly written as +p(x) ← p(x), x = a.",
                "Generally, the rule becomes +p(x) ← p(x), x = t1, . . . , x = tn for n such instances.",
                "The rule +L ← L derives the atom +L if an abducible L which is not in P is to be true.",
                "In contrast, the rule −L ← not L derives the atom −L if an abducible L which is in P is not to be true.",
                "Thus, update atoms represent the change of truth values of abducibles in a program.",
                "That is, +L means the introduction of L, while −L means the deletion of L. When an abducible L contains variables, the associated update atom +L or −L is supposed to have exactly the same variables.",
                "In this case, an update atom is semantically identified with its ground instances.",
                "The set of all update atoms associated with the abducibles in H is denoted by UH, and UH = UH+ ∪ UH− where UH+ (resp.",
                "UH− ) is the set of update atoms of the form +L (resp. −L).",
                "Definition 4.2.",
                "Given an abductive program P, H , its update program UP is defined as the program UP = (P \\ H) ∪ UR .",
                "An answer set S of UP is called U-minimal if there is no answer set T of UP such that T ∩ UH ⊂ S ∩ UH.",
                "By the definition, U-minimal answer sets exist whenever UP has answer sets.",
                "Update programs are used for computing (minimal) explanations of an observation.",
                "Given an observation G as a conjunction of literals and NAF-literals possibly containing variables, we introduce a new ground literal O together with the rule O ← G. In this case, O has an explanation (E, F) iff G has the same explanation.",
                "With this replacement, an observation is assumed to be a ground literal without loss of generality.",
                "In what follows, E+ = { +L | L ∈ E } and F − = { −L | L ∈ F } for E ⊆ H and F ⊆ H. Proposition 4.1. ([15]) Let P, H be an abductive program, UP its update program, and G a ground literal representing an observation.",
                "Then, a pair (E, F) is an explanation of G iff UP ∪ { ← not G } has a consistent answer set S such that E+ = S ∩ UH+ and F− = S ∩ UH− .",
                "In particular, (E, F) is a minimal explanation iff S is a U-minimal answer set.",
                "Example 4.1.",
                "To explain the observation G = flies(t) in the program P of Example 2.1, first construct the update program UP of P:3 UP : flies(x) ← bird(x), not ab(x), ab(x) ← broken-wing(x) , bird(t) ← , bird(o) ← , broken-wing(x) ← not broken-wing(x), broken-wing(x) ← not broken-wing(x), +broken-wing(x) ← broken-wing(x), x = t , −broken-wing(t) ← not broken-wing(t) .",
                "Next, consider the program UP ∪ { ← not flies(t) }.",
                "It has the single U-minimal answer set: S = { bird(t), bird(o), flies(t), flies(o), broken-wing(t), broken-wing(o), −broken-wing(t) }.",
                "The unique minimal explanation (E, F) = (∅, {broken-wing(t)}) of G is expressed by the update atom −broken-wing(t) in S ∩ UH− .",
                "Proposition 4.2.",
                "Let P, H be an abductive program and G a ground literal representing an observation.",
                "If P ∪ { ← not G } has a consistent answer set S, G has the minimal explanation (E, F) = (∅, ∅) and S satisfies G. Now we provide methods for computing (counter-)proposals.",
                "First, conditional proposals are computed as follows. input : an abductive program P, H , a proposal G; output : a set Sc of proposals.",
                "If G is a ground literal, compute its minimal explanation (E, F) in P, H using the update program.",
                "Put G, E, not F in Sc.",
                "Else if G is a conjunction possibly containing variables, consider the abductive program 3 t represents tweety and o represents opus.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1027 P ∪{ O ← G }, H with a ground literal O. Compute a minimal explanation of O in P ∪ { O ← G }, H using its update program.",
                "If O has a minimal explanation (E, F) with a substitution θ for variables in G, put Gθ, E, not F in Sc.",
                "Next, neighborhood proposals are computed as follows. input : an abductive program P, H , a proposal G; output : a set Sn of proposals. % neighborhood proposals by anti-instantiation; Construct G by anti-instantiation.",
                "For a ground literal O, if P ∪ { O ← G } ∪ { ← not O } has a consistent answer set satisfying G θ with a substitution θ and G θ = G, put G θ in Sn. % neighborhood proposals by dropping conditions; Construct G by dropping conditions.",
                "If G is a ground literal and the program P ∪ { ← not G } has a consistent answer set, put G in Sn.",
                "Else if G is a conjunction possibly containing variables, do the following.",
                "For a ground literal O, if P ∪{ O ← G }∪{ ← not O } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn. % neighborhood proposals by goal replacement; Construct G by goal replacement.",
                "If G is a ground literal and there is a rule H ← B in P such that G = Hσ and Bσ = G for some substitution σ, put G = Bσ.",
                "If P ∪ { ← not G } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn.",
                "Else if G is a conjunction possibly containing variables, do the following.",
                "For a replaced literal L ∈ G , if there is a rule H ← B in P such that L = Hσ and (G \\ {L}) ∪ Bσ = G for some substitution σ, put G = (G \\ {L}) ∪ Bσ.",
                "For a ground literal O, if P ∪ { O ← G } ∪ { ← not O } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn.",
                "Theorem 4.3.",
                "The set Sc (resp.",
                "Sn) computed above coincides with the set of conditional proposals (resp. neighborhood proposals).",
                "Proof.",
                "The result for Sc follows from Definition 3.3 and Proposition 4.1.",
                "The result for Sn follows from Definition 3.5 and Proposition 4.2.",
                "Conditional neighborhood proposals are computed by combining the above two procedures.",
                "Those proposals are computed at each round.",
                "Note that the procedure for computing Sn contains some nondeterministic choices.",
                "For instance, there are generally several candidates of literals to relax in a proposal.",
                "Also, there might be several rules in a program for the usage of goal replacement.",
                "In practice, an agent can prespecify literals in a proposal for possible relaxation or rules in a program for the usage of goal replacement. 5.",
                "RELATED WORK As there are a number of literature on automated negotiation, this section focuses on comparison with negotiation frameworks based on logic and argumentation.",
                "Sadri et al. [14] use abductive logic programming as a representation language of negotiating agents.",
                "Agents negotiate using common dialogue primitives, called dialogue moves.",
                "Each agent has an abductive logic program in which a sequence of dialogues are specified by a program, a dialogue protocol is specified as constraints, and dialogue moves are specified as abducibles.",
                "The behavior of agents is regulated by an observe-think-act cycle.",
                "Once a dialogue move is uttered by an agent, another agent that observed the utterance thinks and acts using a proof procedure.",
                "Their approach and ours both employ abductive logic programming as a platform of agent reasoning, but the use of it is quite different.",
                "First, they use abducibles to specify dialogue primitives of the form tell(utterer, receiver, subject, identifier, time), while we use abducibles to specify arbitrary permissible hypotheses to construct conditional proposals.",
                "Second, a program pre-specifies a plan to carry out in order to achieve a goal, together with available/missing resources in the context of resource-exchanging problems.",
                "This is in contrast with our method in which possible counter-proposals are newly constructed in response to a proposal made by an agent.",
                "Third, they specify a negotiation policy inside a program (as integrity constraints), while we give a protocol independent of individual agents.",
                "They provide an operational model that completely specifies the behavior of agents in terms of agent cycle.",
                "We do not provide such a complete specification of the behavior of agents.",
                "Our primary interest is to mechanize construction of proposals.",
                "Bracciali and Torroni [2] formulate abductive agents that have knowledge in abductive logic programs.",
                "To explain an observation, two agents communicate by exchanging integrity constraints.",
                "In the process of communication, an agent can revise its own integrity constraints according to the information provided by the other agent.",
                "A set IC of integrity constraints relaxes a set IC (or IC tightens IC ) if any observation that can be proved with respect to IC can also be proved with respect to IC .",
                "For instance, IC : ← a, b, c relaxes IC : ← a, b.",
                "Thus, they use relaxation for weakening the constraints in an abductive logic program.",
                "In contrast, we use relaxation for weakening proposals and three different relaxation methods, anti-instantiation, dropping conditions, and goal replacement, are considered.",
                "Their goal is to explain an observation by revising integrity constraints of an agent through communication, while we use integrity constraints for communication to explain critiques and help other agents in making counter-proposals.",
                "Meyer et al. [11] introduce a logical framework for negotiating agents.",
                "They introduce two different modes of negotiation: concession and adaptation.",
                "They provide rational postulates to characterize negotiated outcomes between two agents, and describe methods for constructing outcomes.",
                "They provide logical conditions for negotiated outcomes to satisfy, but they do not describe a process of negotiation nor negotiation protocols.",
                "Moreover, they represent agents by classical propositional theories, which is different from our abductive logic programming framework.",
                "Foo et al. [5] model one-to-one negotiation as a one-time encounter between two extended logic programs.",
                "An agent offers an answer set of its program, and their mutual deal is regarded as a trade on their answer sets.",
                "Starting from the initial agreement set S∩T for an answer set S of an agent and an answer set T of another agent, each agent extends this set to reflect its own demand while keeping consistency with demand of the other agent.",
                "Their algorithm returns new programs having answer sets which are consistent with each other and keep the agreement set.",
                "The work is extended to repeated encounters in [3].",
                "In their framework, two agents exchange answer sets to produce a common belief set, which is different from our framework of exchanging proposals.",
                "There are a number of proposals for negotiation based 1028 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) on argumentation.",
                "An advantage of argumentation-based negotiation is that it constructs a proposal with arguments supporting the proposal [1].",
                "The existence of arguments is useful to convince other agents of reasons why an agent offers (counter-)proposals or returns critiques.",
                "Parsons et al. [13] develop a logic of argumentation-based negotiation among BDI agents.",
                "In one-to-one negotiation, an agent A generates a proposal together with its arguments, and passes it to another agent B.",
                "The proposal is evaluated by B which attempts to build arguments against it.",
                "If it conflicts with Bs interest, B informs A of its objection by sending back its attacking argument.",
                "In response to this, A tries to find an alternative way of achieving its original objective, or a way of persuading B to drop its objection.",
                "If either type of argument can be found, A will submit it to B.",
                "If B finds no reason to reject the new proposal, it will be accepted and the negotiation ends in success.",
                "Otherwise, the process is iterated.",
                "In this negotiation processes, the agent A never changes its original objective, so that negotiation ends in failure if A fails to find an alternative way of achieving the original objective.",
                "In our framework, when a proposal is rejected by another agent, an agent can weaken or change its objective by abduction and relaxation.",
                "Our framework does not have a mechanism of argumentation, but reasons for critiques can be informed by responding critique sets.",
                "Kakas and Moraitis [10] propose a negotiation protocol which integrates abduction within an argumentation framework.",
                "A proposal contains an offer corresponding to the negotiation object, together with supporting information representing conditions under which this offer is made.",
                "Supporting information is computed by abduction and is used for constructing conditional arguments during the process of negotiation.",
                "In their negotiation protocol, when an agent cannot satisfy its own goal, the agent considers the other agents goal and searches for conditions under which the goal is acceptable.",
                "Our present approach differs from theirs in the following points.",
                "First, they use abduction to seek conditions to support arguments, while we use abduction to seek conditions for proposals to accept.",
                "Second, in their negotiation protocol, counter-proposals are chosen among candidates based on preference knowledge of an agent at meta-level, which represents policy under which an agent uses its object-level decision rules according to situations.",
                "In our framework, counter-proposals are newly constructed using abduction and relaxation.",
                "The method of construction is independent of particular negotiation protocols.",
                "As [2, 10, 14], abduction or abductive logic programming used in negotiation is mostly based on normal abduction.",
                "In contrast, our approach is based on extended abduction which can not only introduce hypotheses but remove them from a program.",
                "This is another important difference.",
                "Relaxation and neighborhood query answering are devised to make databases cooperative with their users [4, 6].",
                "In this sense, those techniques have the spirit similar to cooperative problem solving in multi-agent systems.",
                "As far as the authors know, however, there is no study which applies those technique to agent negotiation. 6.",
                "CONCLUSION In this paper we proposed a logical framework for negotiating agents.",
                "To construct proposals in the process of negotiation, we combined the techniques of extended abduction and relaxation.",
                "It was shown that these two operations are used for general inference rules in producing proposals.",
                "We developed a negotiation protocol between two agents based on exchange of proposals and critiques, and provided procedures for computing proposals in abductive logic programming.",
                "This enables us to realize automated negotiation on top of the existing answer set solvers.",
                "The present framework does not have a mechanism of selecting an optimal (counter-)proposal among different alternatives.",
                "To compare and evaluate proposals, an agent must have preference knowledge of candidate proposals.",
                "Further elaboration to maximize the utility of agents is left for future study. 7.",
                "REFERENCES [1] L. Amgoud, S. Parsons, and N. Maudet.",
                "Arguments, dialogue, and negotiation.",
                "In: Proc.",
                "ECAI-00, pp. 338-342, IOS Press, 2000. [2] A. Bracciali and P. Torroni.",
                "A new framework for knowledge revision of abductive agents through their interaction.",
                "In: Proc.",
                "CLIMA-IV, Computational Logic in Multi-Agent Systems, LNAI 3259, pp. 159-177, 2004. [3] W. Chen, M. Zhang, and N. Foo.",
                "Repeated negotiation of logic programs.",
                "In: Proc. 7th Workshop on Nonmonotonic Reasoning, Action and Change, 2006. [4] W. W. Chu, Q. Chen, and R.-C. Lee.",
                "Cooperative query answering via type abstraction hierarchy.",
                "In: Cooperating Knowledge Based Systems, S. M. Deen ed., pp. 271-290, Springer, 1990. [5] N. Foo, T. Meyer, Y. Zhang, and D. Zhang.",
                "Negotiating logic programs.",
                "In: Proc. 6th Workshop on Nonmonotonic Reasoning, Action and Change, 2005. [6] T. Gaasterland, P. Godfrey, and J. Minker.",
                "Relaxation as a platform for cooperative answering.",
                "Journal of Intelligence Information Systems 1(3/4):293-321, 1992. [7] M. Gelfond and V. Lifschitz.",
                "Classical negation in logic programs and disjunctive databases.",
                "New Generation Computing 9:365-385, 1991. [8] K. Inoue and C. Sakama.",
                "Abductive framework for nonmonotonic theory change.",
                "In: Proc.",
                "IJCAI-95, pp. 204-210, Morgan Kaufmann. [9] A. C. Kakas, R. A. Kowalski, and F. Toni, The role of abduction in logic programming.",
                "In: Handbook of Logic in AI and Logic Programming, D. M. Gabbay, et al. (eds), vol. 5, pp. 235-324, Oxford University Press, 1998. [10] A. C. Kakas and P. Moraitis.",
                "Adaptive agent negotiation via argumentation.",
                "In: Proc.",
                "AAMAS-06, pp. 384-391, ACM Press. [11] T. Meyer, N. Foo, R. Kwok, and D. Zhang.",
                "Logical foundation of negotiation: outcome, concession and adaptation.",
                "In: Proc.",
                "AAAI-04, pp. 293-298, MIT Press. [12] R. S. Michalski.",
                "A theory and methodology of inductive learning.",
                "In: Machine Learning: An Artificial Intelligence Approach, R. S. Michalski, et al. (eds), pp. 83-134, Morgan Kaufmann, 1983. [13] S. Parsons, C. Sierra and N. Jennings.",
                "Agents that reason and negotiate by arguing.",
                "Journal of Logic and Computation, 8(3):261-292, 1988. [14] F. Sadri, F. Toni, and P. Torroni, An abductive logic programming architecture for negotiating agents.",
                "In: Proc. 8th European Conf. on Logics in AI, LNAI 2424, pp. 419-431, Springer, 2002. [15] C. Sakama and K. Inoue.",
                "An abductive framework for computing knowledge base updates.",
                "Theory and Practice of Logic Programming 3(6):671-715, 2003.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1029"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Una regla R es una \"restricción de integridad\" si la cabeza (r) = ∅;y r es un hecho si el cuerpo (r) = ∅.",
                "Una propuesta l1, ..., lm, no lm+ 1, ..., no ln viola una \"restricción de integridad\" ← cuerpo+ (r), no cuerpo- (r) Si por alguna sustitución θ, hay una sustitución σtal que el cuerpo+ (r) σ ⊆ {l1θ ,..., Lmθ}, cuerpo- (r) σ∩ {l1θ ,..., Lmθ} = ∅, y cuerpo− (r) σ ⊆ {lm+1θ ,..., Lnθ}.",
                "Un conjunto de crítica de AG1 (en la ronda I-Th) es un conjunto CSI 1 (P1, GJ 2) = CSI-1 (P1, GJ-1 2) ∪ ∪ {R |R es una \"restricción de integridad\" en P1 y GJ 2 viola r} donde j = i - 1 o i, y cs0 1 (p1, g0 2) = cs1 1 (p1, g0 2) = ∅.",
                "Pon FP I 2 = FPI - 1 2.(a) Si GI 1 viola una \"restricción de integridad\" en P2, devuelva la crítica GI 2 = rechazar a AG1, junto con la crítica establecida CSI 2 (P2, GI 1).(b) De lo contrario, construya NSI 2 de la siguiente manera.(i) Producir si c.Sea μ (Si C) = {P |P ∈ Si C \\ fpi 2 y P satisfacen las restricciones en CSI 1 (P1, GI - 1 2)}."
            ],
            "translated_text": "",
            "candidates": [
                "restricción de integridad",
                "restricción de integridad",
                "restricción de integridad",
                "restricción de integridad",
                "restricción de integridad",
                "restricción de integridad",
                "restricción de integridad",
                "restricción de integridad"
            ],
            "error": []
        },
        "negotiation": {
            "translated_key": "negociación",
            "is_in_text": true,
            "original_annotated_sentences": [
                "<br>negotiation</br> by Abduction and Relaxation Chiaki Sakama Dept.",
                "Computer and Communication Sciences Wakayama University Sakaedani, Wakayama 640 8510, Japan sakama@sys.wakayama-u.ac.jp Katsumi Inoue National Institute of Informatics 2-1-2 Hitotsubashi, Chiyoda-ku Tokyo 101 8430, Japan ki@nii.ac.jp ABSTRACT This paper studies a logical framework for automated <br>negotiation</br> between two agents.",
                "We suppose an agent who has a knowledge base represented by a logic program.",
                "Then, we introduce methods of constructing counter-proposals in response to proposals made by an agent.",
                "To this end, we combine the techniques of extended abduction in artificial intelligence and relaxation in cooperative query answering for databases.",
                "These techniques are respectively used for producing conditional proposals and neighborhood proposals in the process of <br>negotiation</br>.",
                "We provide a <br>negotiation</br> protocol based on the exchange of these proposals and develop procedures for computing new proposals.",
                "Categories and Subject Descriptors F.4.1 [Mathematical Logic]: Logic and constraint programming;; I.2.11 [Distributed Artificial Intelligence]: Multiagent systems General Terms Theory 1.",
                "INTRODUCTION Automated <br>negotiation</br> has been received increasing attention in multi-agent systems, and a number of frameworks have been proposed in different contexts ([1, 2, 3, 5, 10, 11, 13, 14], for instance).",
                "<br>negotiation</br> usually proceeds in a series of rounds and each agent makes a proposal at every round.",
                "An agent that received a proposal responds in two ways.",
                "One is a critique which is a remark as to whether or not (parts of) the proposal is accepted.",
                "The other is a counter-proposal which is an alternative proposal made in response to a previous proposal [13].",
                "To see these proposals in one-to-one <br>negotiation</br>, suppose the following <br>negotiation</br> dialogue between a buyer agent B and a seller agent S. (Bi (or Si) represents an utterance of B (or S) in the i-th round.)",
                "B1: I want to buy a personal computer of the brand b1, with the specification of CPU:1GHz, Memory:512MB, HDD: 80GB, and a DVD-RW driver.",
                "I want to get it at the price under 1200 USD.",
                "S1: We can provide a PC with the requested specification if you pay for it by cash.",
                "In this case, however, service points are not added for this special discount.",
                "B2: I cannot pay it by cash.",
                "S2: In a normal price, the requested PC costs 1300 USD.",
                "B3: I cannot accept the price.",
                "My budget is under 1200 USD.",
                "S3: We can provide another computer with the requested specification, except that it is made by the brand b2.",
                "The price is exactly 1200 USD.",
                "B4: I do not want a PC of the brand b2.",
                "Instead, I can downgrade a driver from DVD-RW to CD-RW in my initial proposal.",
                "S4: Ok, I accept your offer.",
                "In this dialogue, in response to the opening proposal B1, the counter-proposal S1 is returned.",
                "In the rest of the dialogue, B2, B3, S4 are critiques, while S2, S3, B4 are counterproposals.",
                "Critiques are produced by evaluating a proposal in a knowledge base of an agent.",
                "In contrast, making counter-proposals involves generating an alternative proposal which is more favorable to the responding agent than the original one.",
                "It is known that there are two ways of producing counterproposals: extending the initial proposal or amending part of the initial proposal.",
                "According to [13], the first type appears in the dialogue: A: I propose that you provide me with service X.",
                "B: I propose that I provide you with service X if you provide me with service Z.",
                "The second type is in the dialogue: A: I propose that I provide you with service Y if you provide me with service X.",
                "B: I propose that I provide you with service X if you provide me with service Z.",
                "A <br>negotiation</br> proceeds by iterating such give-andtake dialogues until it reaches an agreement/disagreement.",
                "In those dialogues, agents generate (counter-)proposals by reasoning on their own goals or objectives.",
                "The objective of the agent A in the above dialogues is to obtain service X.",
                "The agent B proposes conditions to provide the service.",
                "In the process of <br>negotiation</br>, however, it may happen that agents are obliged to weaken or change their initial goals to reach a negotiated compromise.",
                "In the dialogue of 1022 978-81-904262-7-5 (RPS) c 2007 IFAAMAS a buyer agent and a seller agent presented above, a buyer agent changes its initial goal by downgrading a driver from DVD-RW to CD-RW.",
                "Such behavior is usually represented as specific meta-knowledge of an agent or specified as <br>negotiation</br> protocols in particular problems.",
                "Currently, there is no computational logic for automated <br>negotiation</br> which has general inference rules for producing (counter-)proposals.",
                "The purpose of this paper is to mechanize a process of building (counter-)proposals in one-to-one <br>negotiation</br> dialogues.",
                "We suppose an agent who has a knowledge base represented by a logic program.",
                "We then introduce methods for generating three different types of proposals.",
                "First, we use the technique of extended abduction in artificial intelligence [8, 15] to construct a conditional proposal as an extension of the original one.",
                "Second, we use the technique of relaxation in cooperative query answering for databases [4, 6] to construct a neighborhood proposal as an amendment of the original one.",
                "Third, combining extended abduction and relaxation, conditional neighborhood proposals are constructed as amended extensions of the original proposal.",
                "We develop a <br>negotiation</br> protocol between two agents based on the exchange of these counter-proposals and critiques.",
                "We also provide procedures for computing proposals in logic programming.",
                "This paper is organized as follows.",
                "Section 2 introduces a logical framework used in this paper.",
                "Section 3 presents methods for constructing proposals, and provides a <br>negotiation</br> protocol.",
                "Section 4 provides methods for computing proposals in logic programming.",
                "Section 5 discusses related works, and Section 6 concludes the paper. 2.",
                "PRELIMINARIES Logic programs considered in this paper are extended disjunctive programs (EDP) [7].",
                "An EDP (or simply a program) is a set of rules of the form: L1 ; · · · ; Ll ← Ll+1 , . . . , Lm, not Lm+1 , . . . , not Ln (n ≥ m ≥ l ≥ 0) where each Li is a positive/negative literal, i.e., A or ¬A for an atom A, and not is negation as failure (NAF). not L is called an NAF-literal.",
                "The symbol ; represents disjunction.",
                "The left-hand side of the rule is the head, and the right-hand side is the body.",
                "For each rule r of the above form, head(r), body+ (r) and body− (r) denote the sets of literals {L1, . . . , Ll}, {Ll+1, . . . , Lm}, and {Lm+1, . . . , Ln}, respectively.",
                "Also, not body− (r) denotes the set of NAF-literals {not Lm+1, . . . , not Ln}.",
                "A disjunction of literals and a conjunction of (NAF-)literals in a rule are identified with its corresponding sets of literals.",
                "A rule r is often written as head(r) ← body+ (r), not body− (r) or head(r) ← body(r) where body(r) = body+ (r)∪not body− (r).",
                "A rule r is disjunctive if head(r) contains more than one literal.",
                "A rule r is an integrity constraint if head(r) = ∅; and r is a fact if body(r) = ∅.",
                "A program is NAF-free if no rule contains NAF-literals.",
                "Two rules/literals are identified with respect to variable renaming.",
                "A substitution is a mapping from variables to terms θ = {x1/t1, . . . , xn/tn}, where x1, . . . , xn are distinct variables and each ti is a term distinct from xi.",
                "Given a conjunction G of (NAF-)literals, Gθ denotes the conjunction obtained by applying θ to G. A program, rule, or literal is ground if it contains no variable.",
                "A program P with variables is a shorthand of its ground instantiation Ground(P), the set of ground rules obtained from P by substituting variables in P by elements of its Herbrand universe in every possible way.",
                "The semantics of an EDP is defined by the answer set semantics [7].",
                "Let Lit be the set of all ground literals in the language of a program.",
                "Suppose a program P and a set of literals S(⊆ Lit).",
                "Then, the reduct P S is the program which contains the ground rule head(r) ← body+ (r) iff there is a rule r in Ground(P) such that body− (r)∩S = ∅.",
                "Given an NAF-free EDP P, Cn(P) denotes the smallest set of ground literals which is (i) closed under P, i.e., for every ground rule r in Ground(P), body(r) ⊆ Cn(P) implies head(r) ∩ Cn(P) = ∅; and (ii) logically closed, i.e., it is either consistent or equal to Lit.",
                "Given an EDP P and a set S of literals, S is an answer set of P if S = Cn(P S ).",
                "A program has none, one, or multiple answer sets in general.",
                "An answer set is consistent if it is not Lit.",
                "A program P is consistent if it has a consistent answer set; otherwise, P is inconsistent.",
                "Abductive logic programming [9] introduces a mechanism of hypothetical reasoning to logic programming.",
                "An abductive framework used in this paper is the extended abduction introduced by Inoue and Sakama [8, 15].",
                "An abductive program is a pair P, H where P is an EDP and H is a set of literals called abducibles.",
                "When a literal L ∈ H contains variables, any instance of L is also an abducible.",
                "An abductive program P, H is consistent if P is consistent.",
                "Throughout the paper, abductive programs are assumed to be consistent unless stated otherwise.",
                "Let G = L1, . . . , Lm, not Lm+1, . . . , not Ln be a conjunction, where all variables in G are existentially quantified at the front and range-restricted, i.e., every variable in Lm+1, . . . , Ln appears in L1, . . . , Lm.",
                "A set S of ground literals satisfies the conjunction G if { L1θ, . . . , Lmθ } ⊆ S and { Lm+1θ, . . . , Lnθ }∩ S = ∅ for some ground instance Gθ with a substitution θ.",
                "Let P, H be an abductive program and G a conjunction as above.",
                "A pair (E, F) is an explanation of an observation G in P, H if1 1. (P \\ F) ∪ E has an answer set which satisfies G, 2. (P \\ F) ∪ E is consistent, 3.",
                "E and F are sets of ground literals such that E ⊆ H\\P and F ⊆ H ∩ P. When (P \\ F) ∪ E has an answer set S satisfying the above three conditions, S is called a belief set of an abductive program P, H satisfying G (with respect to (E, F)).",
                "Note that if P has a consistent answer set S satisfying G, S is also a belief set of P, H satisfying G with respect to (E, F) = (∅, ∅).",
                "Extended abduction introduces/removes hypotheses to/from a program to explain an observation.",
                "Note that normal abduction (as in [9]) considers only introducing hypotheses to explain an observation.",
                "An explanation (E, F) of an observation G is called minimal if for any explanation (E , F ) of G, E ⊆ E and F ⊆ F imply E = E and F = F. Example 2.1.",
                "Consider the abductive program P, H : P : flies(x) ← bird(x), not ab(x) , ab(x) ← broken-wing(x) , bird(tweety) ← , bird(opus) ← , broken-wing(tweety) ← .",
                "H : broken-wing(x) .",
                "The observation G = flies(tweety) has the minimal explanation (E, F) = (∅, {broken-wing(tweety)}). 1 This defines credulous explanations [15].",
                "Skeptical explanations are used in [8].",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1023 3.",
                "<br>negotiation</br> 3.1 Conditional Proposals by Abduction We suppose an agent who has a knowledge base represented by an abductive program P, H .",
                "A program P consists of two types of knowledge, belief B and desire D, where B represents objective knowledge of an agent, while D represents subjective knowledge in general.",
                "We define P = B ∪ D, but do not distinguish B and D if such distinction is not important in the context.",
                "In contrast, abducibles H are used for representing permissible conditions to make a compromise in the process of <br>negotiation</br>.",
                "Definition 3.1.",
                "A proposal G is a conjunction of literals and NAF-literals: L1, . . . , Lm, not Lm+1, . . . , not Ln where every variable in G is existentially quantified at the front and range-restricted.",
                "In particular, G is called a critique if G = accept or G = reject where accept and reject are the reserved propositions.",
                "A counter-proposal is a proposal made in response to a proposal.",
                "Definition 3.2.",
                "A proposal G is accepted in an abductive program P, H if P has an answer set satisfying G. When a proposal is not accepted, abduction is used for seeking conditions to make it acceptable.",
                "Definition 3.3.",
                "Let P, H be an abductive program and G a proposal.",
                "If (E, F) is a minimal explanation of Gθ for some substitution θ in P, H , the conjunction G : Gθ, E, not F is called a conditional proposal (for G), where E, not F represents the conjunction: A1, . . . , Ak, not Ak+1, . . . , not Al for E = {A1, . . . , Ak} and F = { Ak+1, . . . , Al }.",
                "Proposition 3.1.",
                "Let P, H be an abductive program and G a proposal.",
                "If G is a conditional proposal, there is a belief set S of P, H satisfying G .",
                "Proof.",
                "When G = Gθ, E, not F, (P \\ F) ∪ E has a consistent answer set S satisfying Gθ and E ∩ F = ∅.",
                "In this case, S satisfies Gθ, E, not F. A conditional proposal G provides a minimal requirement for accepting the proposal G. If Gθ has multiple minimal explanations, several conditional proposals exist accordingly.",
                "When (E, F) = (∅, ∅), a conditional proposal is used as a new proposal made in response to the proposal G. Example 3.1.",
                "An agent seeks a position of a research assistant at the computer department of a university with the condition that the salary is at least 50,000 USD per year.",
                "The agent makes his/her request as the proposal:2 G = assist(compt dept), salary(x), x ≥ 50, 000.",
                "The university has the abductive program P, H : P : salary(40, 000) ← assist(compt dept), not has PhD, salary(60, 000) ← assist(compt dept), has PhD, salary(50, 000) ← assist(math dept), salary(55, 000) ← system admin(compt dept), 2 For notational convenience, we often include mathematical (in)equations in proposals/programs.",
                "They are written by literals, for instance, x ≥ y by geq(x, y) with a suitable definition of the predicate geq. employee(x) ← assist(x), employee(x) ← system admin(x), assist(compt dept); assist(math dept) ; system admin(compt dept) ←, H : has PhD, where available positions are represented by disjunction.",
                "According to P, the base salary of a research assistant at the computer department is 40,000 USD, but if he/she has PhD, it is 60,000 USD.",
                "In this case, (E, F) = ({has PhD}, ∅) becomes the minimal explanation of Gθ = assist(compt dept), salary(60, 000) with θ = { x/60, 000 }.",
                "Then, the conditional proposal made by the university becomes assist(compt dept), salary(60, 000), has PhD . 3.2 Neighborhood Proposals by Relaxation When a proposal is unacceptable, an agent tries to construct a new counter-proposal by weakening constraints in the initial proposal.",
                "We use techniques of relaxation for this purpose.",
                "Relaxation is used as a technique of cooperative query answering in databases [4, 6].",
                "When an original query fails in a database, relaxation expands the scope of the query by relaxing the constraints in the query.",
                "This allows the database to return neighborhood answers which are related to the original query.",
                "We use the technique for producing proposals in the process of <br>negotiation</br>.",
                "Definition 3.4.",
                "Let P, H be an abductive program and G a proposal.",
                "Then, G is relaxed to G in the following three ways: Anti-instantiation: Construct G such that G θ = G for some substitution θ.",
                "Dropping conditions: Construct G such that G ⊂ G. Goal replacement: If G is a conjunction G1, G2, where G1 and G2 are conjunctions, and there is a rule L ← G1 in P such that G1θ = G1 for some substitution θ, then build G as Lθ, G2.",
                "Here, Lθ is called a replaced literal.",
                "In each case, every variable in G is existentially quantified at the front and range-restricted.",
                "Anti-instantiation replaces constants (or terms) with fresh variables.",
                "Dropping conditions eliminates some conditions in a proposal.",
                "Goal replacement replaces the condition G1 in G with a literal Lθ in the presence of a rule L ← G1 in P under the condition G1θ = G1.",
                "All these operations generalize proposals in different ways.",
                "Each G obtained by these operations is called a relaxation of G. It is worth noting that these operations are also used in the context of inductive generalization [12].",
                "The relaxed proposal can produce new offers which are neighbor to the original proposal.",
                "Definition 3.5.",
                "Let P, H be an abductive program and G a proposal. 1.",
                "Let G be a proposal obtained by anti-instantiation.",
                "If P has an answer set S which satisfies G θ for some substitution θ and G θ = G, G θ is called a neighborhood proposal by anti-instantiation. 2.",
                "Let G be a proposal obtained by dropping conditions.",
                "If P has an answer set S which satisfies G θ for some substitution θ, G θ is called a neighborhood proposal by dropping conditions. 1024 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.",
                "Let G be a proposal obtained by goal replacement.",
                "For a replaced literal L ∈ G and a rule H ← B in P such that L = Hσ and (G \\ {L}) ∪ Bσ = G for some substitution σ, put G = (G \\ {L}) ∪ Bσ.",
                "If P has an answer set S which satisfies G θ for some substitution θ, G θ is called a neighborhood proposal by goal replacement.",
                "Example 3.2. (cont.",
                "Example 3.1) Given the proposal G = assist(compt dept), salary(x), x ≥ 50, 000, • G1 = assist(w), salary(x), x ≥ 50, 000 is produced by substituting compt dept with a variable w. As G1θ1 = assist(math dept), salary(50, 000) with θ1 = { w/math dept } is satisfied by an answer set of P, G1θ1 becomes a neighborhood proposal by anti-instantiation. • G2 = assist(compt dept), salary(x) is produced by dropping the salary condition x ≥ 50, 000.",
                "As G2θ2 = assist(compt dept), salary(40, 000) with θ2 = { x/40, 000 } is satisfied by an answer set of P, G2θ2 becomes a neighborhood proposal by dropping conditions. • G3 = employee(compt dept), salary(x), x ≥ 50, 000 is produced by replacing assist(compt dept) with employee(compt dept) using the rule employee(x) ← assist(x) in P. By G3 and the rule employee(x) ← system admin(x) in P, G3 = sys admin(compt dept), salary(x), x ≥ 50, 000 is produced.",
                "As G3 θ3 = sys admin(compt dept), salary(55, 000) with θ3 = { x/55, 000 } is satisfied by an answer set of P, G3 θ3 becomes a neighborhood proposal by goal replacement.",
                "Finally, extended abduction and relaxation are combined to produce conditional neighborhood proposals.",
                "Definition 3.6.",
                "Let P, H be an abductive program and G a proposal. 1.",
                "Let G be a proposal obtained by either anti-instantiation or dropping conditions.",
                "If (E, F) is a minimal explanation of G θ(= G) for some substitution θ, the conjunction G θ, E, not F is called a conditional neighborhood proposal by anti-instantiation/dropping conditions. 2.",
                "Let G be a proposal obtained by goal replacement.",
                "Suppose G as in Definition 3.5(3).",
                "If (E, F) is a minimal explanation of G θ for some substitution θ, the conjunction G θ, E, not F is called a conditional neighborhood proposal by goal replacement.",
                "A conditional neighborhood proposal reduces to a neighborhood proposal when (E, F) = (∅, ∅). 3.3 <br>negotiation</br> Protocol A <br>negotiation</br> protocol defines how to exchange proposals in the process of negotiation.",
                "This section presents a <br>negotiation</br> protocol in our framework.",
                "We suppose one-to-one <br>negotiation</br> between two agents who have a common ontology and the same language for successful communication.",
                "Definition 3.7.",
                "A proposal L1, ..., Lm, not Lm+1, ..., not Ln violates an integrity constraint ← body+ (r), not body− (r) if for any substitution θ, there is a substitution σ such that body+ (r)σ ⊆ { L1θ, . . . , Lmθ }, body− (r)σ∩{ L1θ, . . . , Lmθ } = ∅, and body− (r)σ ⊆ { Lm+1θ, . . . , Lnθ }.",
                "Integrity constraints are conditions which an agent should satisfy, so that they are used to explain why an agent does not accept a proposal.",
                "A <br>negotiation</br> proceeds in a series of rounds.",
                "Each i-th round (i ≥ 1) consists of a proposal Gi 1 made by one agent Ag1 and another proposal Gi 2 made by the other agent Ag2.",
                "Definition 3.8.",
                "Let P1, H1 be an abductive program of an agent Ag1 and Gi 2 a proposal made by Ag2 at the i-th round.",
                "A critique set of Ag1 (at the i-th round) is a set CSi 1(P1, Gj 2) = CSi−1 1 (P1, Gj−1 2 ) ∪ { r | r is an integrity constraint in P1 and Gj 2 violates r } where j = i − 1 or i, and CS0 1 (P1, G0 2) = CS1 1 (P1, G0 2) = ∅.",
                "A critique set of an agent Ag1 accumulates integrity constraints which are violated by proposals made by another agent Ag2.",
                "CSi 2(P2, Gj 1) is defined in the same manner.",
                "Definition 3.9.",
                "Let Pk, Hk be an abductive program of an agent Agk and Gj a proposal, which is not a critique, made by any agent at the j(≤ i)-th round.",
                "A <br>negotiation</br> set of Agk (at the i-th round) is a triple NSi k = (Si c, Si n, Si cn), where Si c is the set of conditional proposals, Si n is the set of neighborhood proposals, and Si cn is the set of conditional neighborhood proposals, produced by Gj and Pk, Hk .",
                "A <br>negotiation</br> set represents the space of possible proposals made by an agent.",
                "Si x (x ∈ {c, n, cn}) accumulates proposals produced by Gj (1 ≤ j ≤ i) according to Definitions 3.3, 3.5, and 3.6.",
                "Note that an agent can construct counter-proposals by modifying its own previous proposals or another agents proposals.",
                "An agent Agk accumulates proposals that are made by Agk but are rejected by another agent, in the failed proposal set FP i k (at the i-th round), where FP 0 k = ∅.",
                "Suppose two agents Ag1 and Ag2 who have abductive programs P1, H1 and P2, H2 , respectively.",
                "Given a proposal G1 1 which is satisfied by an answer set of P1, a <br>negotiation</br> starts.",
                "In response to the proposal Gi 1 made by Ag1 at the i-th round, Ag2 behaves as follows. 1.",
                "If Gi 1 = accept, an agreement is reached and <br>negotiation</br> ends in success. 2.",
                "Else if Gi 1 = reject, put FP i 2 = FPi−1 2 ∪{Gi−1 2 } where {G0 2} = ∅.",
                "Proceed to the step 4(b). 3.",
                "Else if P2 has an answer set satisfying Gi 1, Ag2 returns Gi 2 = accept to Ag1.",
                "<br>negotiation</br> ends in success. 4.",
                "Otherwise, Ag2 behaves as follows.",
                "Put FP i 2 = FPi−1 2 . (a) If Gi 1 violates an integrity constraint in P2, return the critique Gi 2 = reject to Ag1, together with the critique set CSi 2(P2, Gi 1). (b) Otherwise, construct NSi 2 as follows. (i) Produce Si c. Let μ(Si c) = { p | p ∈ Si c \\ FPi 2 and p satisfies the constraints in CSi 1(P1, Gi−1 2 )}.",
                "If μ(Si c) = ∅, select one from μ(Si c) and propose it as Gi 2 to Ag1; otherwise, go to (ii). (ii) Produce Si n. If μ(Si n) = ∅, select one from μ(Si n) and propose it as Gi 2 to Ag1; otherwise, go to (iii). (iii) Produce Si cn.",
                "If μ(Si cn) = ∅, select one from μ(Si cn) and propose it as Gi 2 to Ag1; otherwise, <br>negotiation</br> ends in failure.",
                "This means that Ag2 can make no counter-proposal or every counterproposal made by Ag2 is rejected by Ag1.",
                "In the step 4(a), Ag2 rejects the proposal Gi 1 and returns the reason of rejection as a critique set.",
                "This helps for Ag1 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1025 in preparing a next counter-proposal.",
                "In the step 4(b), Ag2 constructs a new proposal.",
                "In its construction, Ag2 should take care of the critique set CSi 1(P1, Gi−1 2 ), which represents integrity constraints, if any, accumulated in previous rounds, that Ag1 must satisfy.",
                "Also, FP i 2 is used for removing proposals which have been rejected.",
                "Construction of Si x (x ∈ {c, n, cn}) in NSi 2 is incrementally done by adding new counter-proposals produced by Gi 1 or Gi−1 2 to Si−1 x .",
                "For instance, Si n in NSi 2 is computed as Si n = Si−1 n ∪{ p | p is a neighborhood proposal made by Gi 1 } ∪ { p | p is a neighborhood proposal made by Gi−1 2 }, where S0 n = ∅.",
                "That is, Si n is constructed from Si−1 n by adding new proposals which are obtained by modifying the proposal Gi 1 made by Ag1 at the i-th round or modifying the proposal Gi−1 2 made by Ag2 at the (i − 1)-th round.",
                "Si c and Si cn are obtained as well.",
                "In the above protocol, an agent produces Si c at first, secondly Si n, and finally Si cn.",
                "This strategy seeks conditions which satisfy the given proposal, prior to neighborhood proposals which change the original one.",
                "Another strategy, which prefers neighborhood proposals to conditional ones, is also considered.",
                "Conditional neighborhood proposals are to be considered in the last place, since they differ from the original one to the maximal extent.",
                "The above protocol produces the candidate proposals in Si x for each x ∈ {c, n, cn} at once.",
                "We can consider a variant of the protocol in which each proposal in Si x is constructed one by one (see Example 3.3).",
                "The above protocol is repeatedly applied to each one of the two negotiating agents until a <br>negotiation</br> ends in success/failure.",
                "Formally, the above <br>negotiation</br> protocol has the following properties.",
                "Theorem 3.2.",
                "Let Ag1 and Ag2 be two agents having abductive programs P1, H1 and P2, H2 , respectively. 1.",
                "If P1, H1 and P2, H2 are function-free (i.e., both Pi and Hi contain no function symbol), any <br>negotiation</br> will terminate. 2.",
                "If a <br>negotiation</br> terminates with agreement on a proposal G, both P1, H1 and P2, H2 have belief sets satisfying G. Proof. 1.",
                "When an abductive program is function-free, abducibles and <br>negotiation</br> sets are both finite.",
                "Moreover, if a proposal is once rejected, it is not proposed again by the function μ.",
                "Thus, <br>negotiation</br> will terminate in finite steps. 2.",
                "When a proposal G is made by Ag1, P1, H1 has a belief set satisfying G. If the agent Ag2 accepts the proposal G, it is satisfied by an answer set of P2 which is also a belief set of P2, H2 .",
                "Example 3.3.",
                "Suppose a buying-selling situation in the introduction.",
                "A seller agent has the abductive program Ps, Hs in which Ps consists of belief Bs and desire Ds: Bs : pc(b1, 1G, 512M, 80G) ; pc(b2, 1G, 512M, 80G) ←,(1) dvd-rw ; cd-rw ←, (2) Ds : normal price(1300) ← pc(b1, 1G, 512M, 80G), dvd-rw, (3) normal price(1200) ← pc(b1, 1G, 512M, 80G), cd-rw, (4) normal price(1200) ← pc(b2, 1G, 512M, 80G), dvd-rw, (5) price(x) ← normal price(x), add point, (6) price(x ∗ 0.9) ← normal price(x), pay cash, not add point,(7) add point ←, (8) Hs : add point, pay cash.",
                "Here, (1) and (2) represent selection of products.",
                "The atom pc(b1, 1G, 512M, 80G) represents that the seller agent has a PC of the brand b1 such that CPU is 1GHz, memory is 512MB, and HDD is 80GB.",
                "Prices of products are represented as desire of the seller.",
                "The rules (3) - (5) are normal prices of products.",
                "A normal price is a selling price on the condition that service points are added (6).",
                "On the other hand, a discount price is applied if the paying method is cash and no service point is added (7).",
                "The fact (8) represents the addition of service points.",
                "This service would be withdrawn in case of discount prices, so add point is specified as an abducible.",
                "A buyer agent has the abductive program Pb, Hb in which Pb consists of belief Bb and desire Db: Bb : drive ← dvd-rw, (9) drive ← cd-rw, (10) price(x) ←, (11) Db : pc(b1, 1G, 512M, 80G) ←, (12) dvd-rw ←, (13) cd-rw ← not dvd-rw, (14) ← pay cash, (15) ← price(x), x > 1200, (16) Hb : dvd-rw.",
                "Rules (12) - (16) are the buyers desire.",
                "Among them, (15) and (16) impose constraints for buying a PC.",
                "A DVD-RW is specified as an abducible which is subject to concession. (1st round) First, the following proposal is given by the buyer agent: G1 b : pc(b1, 1G, 512M, 80G), dvd-rw, price(x), x ≤ 1200.",
                "As Ps has no answer set which satisfies G1 b , the seller agent cannot accept the proposal.",
                "The seller takes an action of making a counter-proposal and performs abduction.",
                "As a result, the seller finds the minimal explanation (E, F) = ({ pay cash }, { add point }) which explains G1 b θ1 with θ1 = { x/1170 }.",
                "The seller constructs the conditional proposal: G1 s : pc(b1, 1G, 512M, 80G), dvd-rw, price(1170), pay cash, not add point and offers it to the buyer. (2nd round) The buyer does not accept G1 s because he/she cannot pay it by cash (15).",
                "The buyer then returns the critique G2 b = reject to the seller, together with the critique set CS2 b (Pb, G1 s) = {(15)}.",
                "In response to this, the seller tries to make another proposal which satisfies the constraint in this critique set.",
                "As G1 s is stored in FP 2 s and no other conditional proposal satisfying the buyers requirement exists, the seller produces neighborhood proposals.",
                "He/she relaxes G1 b by dropping x ≤ 1200 in the condition, and produces pc(b1, 1G, 512M, 80G), dvd-rw, price(x).",
                "As Ps has an answer set which satisfies G2 s : pc(b1, 1G, 512M, 80G), dvd-rw, price(1300), 1026 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) the seller offers G2 s as a new counter-proposal. (3rd round) The buyer does not accept G2 s because he/she cannot pay more than 1200USD (16).",
                "The buyer again returns the critique G3 b = reject to the seller, together with the critique set CS3 b (Pb, G2 s) = CS2 b (Pb, G1 s) ∪ {(16)}.",
                "The seller then considers another proposal by replacing b1 with a variable w, G1 b now becomes pc(w, 1G, 512M, 80G), dvd-rw, price(x), x ≤ 1200.",
                "As Ps has an answer set which satisfies G3 s : pc(b2, 1G, 512M, 80G), dvd-rw, price(1200), the seller offers G3 s as a new counter-proposal. (4th round) The buyer does not accept G3 s because a PC of the brand b2 is out of his/her interest and Pb has no answer set satisfying G3 s. Then, the buyer makes a concession by changing his/her original goal.",
                "The buyer relaxes G1 b by goal replacement using the rule (9) in Pb, and produces pc(b1, 1G, 512M, 80G), drive, price(x), x ≤ 1200.",
                "Using (10), the following proposal is produced: pc(b1, 1G, 512M, 80G), cd-rw, price(x), x ≤ 1200.",
                "As Pb \\ { dvd-rw } has a consistent answer set satisfying the above proposal, the buyer proposes the conditional neighborhood proposal G4 b : pc(b1, 1G, 512M, 80G), cd-rw, not dvd-rw, price(x), x ≤ 1200 to the seller agent.",
                "Since Ps also has an answer set satisfying G4 b , the seller accepts it and sends the message G4 s = accept to the buyer.",
                "Thus, the <br>negotiation</br> ends in success. 4.",
                "COMPUTATION In this section, we provide methods of computing proposals in terms of answer sets of programs.",
                "We first introduce some definitions from [15].",
                "Definition 4.1.",
                "Given an abductive program P, H , the set UR of update rules is defined as: UR = { L ← not L, L ← not L | L ∈ H } ∪ { +L ← L | L ∈ H \\ P } ∪ { −L ← not L | L ∈ H ∩ P } , where L, +L, and −L are new atoms uniquely associated with every L ∈ H. The atoms +L and −L are called update atoms.",
                "By the definition, the atom L becomes true iff L is not true.",
                "The pair of rules L ← not L and L ← not L specify the situation that an abducible L is true or not.",
                "When p(x) ∈ H and p(a) ∈ P but p(t) ∈ P for t = a, the rule +L ← L precisely becomes +p(t) ← p(t) for any t = a.",
                "In this case, the rule is shortly written as +p(x) ← p(x), x = a.",
                "Generally, the rule becomes +p(x) ← p(x), x = t1, . . . , x = tn for n such instances.",
                "The rule +L ← L derives the atom +L if an abducible L which is not in P is to be true.",
                "In contrast, the rule −L ← not L derives the atom −L if an abducible L which is in P is not to be true.",
                "Thus, update atoms represent the change of truth values of abducibles in a program.",
                "That is, +L means the introduction of L, while −L means the deletion of L. When an abducible L contains variables, the associated update atom +L or −L is supposed to have exactly the same variables.",
                "In this case, an update atom is semantically identified with its ground instances.",
                "The set of all update atoms associated with the abducibles in H is denoted by UH, and UH = UH+ ∪ UH− where UH+ (resp.",
                "UH− ) is the set of update atoms of the form +L (resp. −L).",
                "Definition 4.2.",
                "Given an abductive program P, H , its update program UP is defined as the program UP = (P \\ H) ∪ UR .",
                "An answer set S of UP is called U-minimal if there is no answer set T of UP such that T ∩ UH ⊂ S ∩ UH.",
                "By the definition, U-minimal answer sets exist whenever UP has answer sets.",
                "Update programs are used for computing (minimal) explanations of an observation.",
                "Given an observation G as a conjunction of literals and NAF-literals possibly containing variables, we introduce a new ground literal O together with the rule O ← G. In this case, O has an explanation (E, F) iff G has the same explanation.",
                "With this replacement, an observation is assumed to be a ground literal without loss of generality.",
                "In what follows, E+ = { +L | L ∈ E } and F − = { −L | L ∈ F } for E ⊆ H and F ⊆ H. Proposition 4.1. ([15]) Let P, H be an abductive program, UP its update program, and G a ground literal representing an observation.",
                "Then, a pair (E, F) is an explanation of G iff UP ∪ { ← not G } has a consistent answer set S such that E+ = S ∩ UH+ and F− = S ∩ UH− .",
                "In particular, (E, F) is a minimal explanation iff S is a U-minimal answer set.",
                "Example 4.1.",
                "To explain the observation G = flies(t) in the program P of Example 2.1, first construct the update program UP of P:3 UP : flies(x) ← bird(x), not ab(x), ab(x) ← broken-wing(x) , bird(t) ← , bird(o) ← , broken-wing(x) ← not broken-wing(x), broken-wing(x) ← not broken-wing(x), +broken-wing(x) ← broken-wing(x), x = t , −broken-wing(t) ← not broken-wing(t) .",
                "Next, consider the program UP ∪ { ← not flies(t) }.",
                "It has the single U-minimal answer set: S = { bird(t), bird(o), flies(t), flies(o), broken-wing(t), broken-wing(o), −broken-wing(t) }.",
                "The unique minimal explanation (E, F) = (∅, {broken-wing(t)}) of G is expressed by the update atom −broken-wing(t) in S ∩ UH− .",
                "Proposition 4.2.",
                "Let P, H be an abductive program and G a ground literal representing an observation.",
                "If P ∪ { ← not G } has a consistent answer set S, G has the minimal explanation (E, F) = (∅, ∅) and S satisfies G. Now we provide methods for computing (counter-)proposals.",
                "First, conditional proposals are computed as follows. input : an abductive program P, H , a proposal G; output : a set Sc of proposals.",
                "If G is a ground literal, compute its minimal explanation (E, F) in P, H using the update program.",
                "Put G, E, not F in Sc.",
                "Else if G is a conjunction possibly containing variables, consider the abductive program 3 t represents tweety and o represents opus.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1027 P ∪{ O ← G }, H with a ground literal O. Compute a minimal explanation of O in P ∪ { O ← G }, H using its update program.",
                "If O has a minimal explanation (E, F) with a substitution θ for variables in G, put Gθ, E, not F in Sc.",
                "Next, neighborhood proposals are computed as follows. input : an abductive program P, H , a proposal G; output : a set Sn of proposals. % neighborhood proposals by anti-instantiation; Construct G by anti-instantiation.",
                "For a ground literal O, if P ∪ { O ← G } ∪ { ← not O } has a consistent answer set satisfying G θ with a substitution θ and G θ = G, put G θ in Sn. % neighborhood proposals by dropping conditions; Construct G by dropping conditions.",
                "If G is a ground literal and the program P ∪ { ← not G } has a consistent answer set, put G in Sn.",
                "Else if G is a conjunction possibly containing variables, do the following.",
                "For a ground literal O, if P ∪{ O ← G }∪{ ← not O } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn. % neighborhood proposals by goal replacement; Construct G by goal replacement.",
                "If G is a ground literal and there is a rule H ← B in P such that G = Hσ and Bσ = G for some substitution σ, put G = Bσ.",
                "If P ∪ { ← not G } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn.",
                "Else if G is a conjunction possibly containing variables, do the following.",
                "For a replaced literal L ∈ G , if there is a rule H ← B in P such that L = Hσ and (G \\ {L}) ∪ Bσ = G for some substitution σ, put G = (G \\ {L}) ∪ Bσ.",
                "For a ground literal O, if P ∪ { O ← G } ∪ { ← not O } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn.",
                "Theorem 4.3.",
                "The set Sc (resp.",
                "Sn) computed above coincides with the set of conditional proposals (resp. neighborhood proposals).",
                "Proof.",
                "The result for Sc follows from Definition 3.3 and Proposition 4.1.",
                "The result for Sn follows from Definition 3.5 and Proposition 4.2.",
                "Conditional neighborhood proposals are computed by combining the above two procedures.",
                "Those proposals are computed at each round.",
                "Note that the procedure for computing Sn contains some nondeterministic choices.",
                "For instance, there are generally several candidates of literals to relax in a proposal.",
                "Also, there might be several rules in a program for the usage of goal replacement.",
                "In practice, an agent can prespecify literals in a proposal for possible relaxation or rules in a program for the usage of goal replacement. 5.",
                "RELATED WORK As there are a number of literature on automated <br>negotiation</br>, this section focuses on comparison with <br>negotiation</br> frameworks based on logic and argumentation.",
                "Sadri et al. [14] use abductive logic programming as a representation language of negotiating agents.",
                "Agents negotiate using common dialogue primitives, called dialogue moves.",
                "Each agent has an abductive logic program in which a sequence of dialogues are specified by a program, a dialogue protocol is specified as constraints, and dialogue moves are specified as abducibles.",
                "The behavior of agents is regulated by an observe-think-act cycle.",
                "Once a dialogue move is uttered by an agent, another agent that observed the utterance thinks and acts using a proof procedure.",
                "Their approach and ours both employ abductive logic programming as a platform of agent reasoning, but the use of it is quite different.",
                "First, they use abducibles to specify dialogue primitives of the form tell(utterer, receiver, subject, identifier, time), while we use abducibles to specify arbitrary permissible hypotheses to construct conditional proposals.",
                "Second, a program pre-specifies a plan to carry out in order to achieve a goal, together with available/missing resources in the context of resource-exchanging problems.",
                "This is in contrast with our method in which possible counter-proposals are newly constructed in response to a proposal made by an agent.",
                "Third, they specify a <br>negotiation</br> policy inside a program (as integrity constraints), while we give a protocol independent of individual agents.",
                "They provide an operational model that completely specifies the behavior of agents in terms of agent cycle.",
                "We do not provide such a complete specification of the behavior of agents.",
                "Our primary interest is to mechanize construction of proposals.",
                "Bracciali and Torroni [2] formulate abductive agents that have knowledge in abductive logic programs.",
                "To explain an observation, two agents communicate by exchanging integrity constraints.",
                "In the process of communication, an agent can revise its own integrity constraints according to the information provided by the other agent.",
                "A set IC of integrity constraints relaxes a set IC (or IC tightens IC ) if any observation that can be proved with respect to IC can also be proved with respect to IC .",
                "For instance, IC : ← a, b, c relaxes IC : ← a, b.",
                "Thus, they use relaxation for weakening the constraints in an abductive logic program.",
                "In contrast, we use relaxation for weakening proposals and three different relaxation methods, anti-instantiation, dropping conditions, and goal replacement, are considered.",
                "Their goal is to explain an observation by revising integrity constraints of an agent through communication, while we use integrity constraints for communication to explain critiques and help other agents in making counter-proposals.",
                "Meyer et al. [11] introduce a logical framework for negotiating agents.",
                "They introduce two different modes of <br>negotiation</br>: concession and adaptation.",
                "They provide rational postulates to characterize negotiated outcomes between two agents, and describe methods for constructing outcomes.",
                "They provide logical conditions for negotiated outcomes to satisfy, but they do not describe a process of <br>negotiation</br> nor <br>negotiation</br> protocols.",
                "Moreover, they represent agents by classical propositional theories, which is different from our abductive logic programming framework.",
                "Foo et al. [5] model one-to-one <br>negotiation</br> as a one-time encounter between two extended logic programs.",
                "An agent offers an answer set of its program, and their mutual deal is regarded as a trade on their answer sets.",
                "Starting from the initial agreement set S∩T for an answer set S of an agent and an answer set T of another agent, each agent extends this set to reflect its own demand while keeping consistency with demand of the other agent.",
                "Their algorithm returns new programs having answer sets which are consistent with each other and keep the agreement set.",
                "The work is extended to repeated encounters in [3].",
                "In their framework, two agents exchange answer sets to produce a common belief set, which is different from our framework of exchanging proposals.",
                "There are a number of proposals for <br>negotiation</br> based 1028 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) on argumentation.",
                "An advantage of argumentation-based <br>negotiation</br> is that it constructs a proposal with arguments supporting the proposal [1].",
                "The existence of arguments is useful to convince other agents of reasons why an agent offers (counter-)proposals or returns critiques.",
                "Parsons et al. [13] develop a logic of argumentation-based <br>negotiation</br> among BDI agents.",
                "In one-to-one <br>negotiation</br>, an agent A generates a proposal together with its arguments, and passes it to another agent B.",
                "The proposal is evaluated by B which attempts to build arguments against it.",
                "If it conflicts with Bs interest, B informs A of its objection by sending back its attacking argument.",
                "In response to this, A tries to find an alternative way of achieving its original objective, or a way of persuading B to drop its objection.",
                "If either type of argument can be found, A will submit it to B.",
                "If B finds no reason to reject the new proposal, it will be accepted and the <br>negotiation</br> ends in success.",
                "Otherwise, the process is iterated.",
                "In this <br>negotiation</br> processes, the agent A never changes its original objective, so that <br>negotiation</br> ends in failure if A fails to find an alternative way of achieving the original objective.",
                "In our framework, when a proposal is rejected by another agent, an agent can weaken or change its objective by abduction and relaxation.",
                "Our framework does not have a mechanism of argumentation, but reasons for critiques can be informed by responding critique sets.",
                "Kakas and Moraitis [10] propose a <br>negotiation</br> protocol which integrates abduction within an argumentation framework.",
                "A proposal contains an offer corresponding to the <br>negotiation</br> object, together with supporting information representing conditions under which this offer is made.",
                "Supporting information is computed by abduction and is used for constructing conditional arguments during the process of <br>negotiation</br>.",
                "In their <br>negotiation</br> protocol, when an agent cannot satisfy its own goal, the agent considers the other agents goal and searches for conditions under which the goal is acceptable.",
                "Our present approach differs from theirs in the following points.",
                "First, they use abduction to seek conditions to support arguments, while we use abduction to seek conditions for proposals to accept.",
                "Second, in their <br>negotiation</br> protocol, counter-proposals are chosen among candidates based on preference knowledge of an agent at meta-level, which represents policy under which an agent uses its object-level decision rules according to situations.",
                "In our framework, counter-proposals are newly constructed using abduction and relaxation.",
                "The method of construction is independent of particular <br>negotiation</br> protocols.",
                "As [2, 10, 14], abduction or abductive logic programming used in <br>negotiation</br> is mostly based on normal abduction.",
                "In contrast, our approach is based on extended abduction which can not only introduce hypotheses but remove them from a program.",
                "This is another important difference.",
                "Relaxation and neighborhood query answering are devised to make databases cooperative with their users [4, 6].",
                "In this sense, those techniques have the spirit similar to cooperative problem solving in multi-agent systems.",
                "As far as the authors know, however, there is no study which applies those technique to agent <br>negotiation</br>. 6.",
                "CONCLUSION In this paper we proposed a logical framework for negotiating agents.",
                "To construct proposals in the process of <br>negotiation</br>, we combined the techniques of extended abduction and relaxation.",
                "It was shown that these two operations are used for general inference rules in producing proposals.",
                "We developed a <br>negotiation</br> protocol between two agents based on exchange of proposals and critiques, and provided procedures for computing proposals in abductive logic programming.",
                "This enables us to realize automated <br>negotiation</br> on top of the existing answer set solvers.",
                "The present framework does not have a mechanism of selecting an optimal (counter-)proposal among different alternatives.",
                "To compare and evaluate proposals, an agent must have preference knowledge of candidate proposals.",
                "Further elaboration to maximize the utility of agents is left for future study. 7.",
                "REFERENCES [1] L. Amgoud, S. Parsons, and N. Maudet.",
                "Arguments, dialogue, and <br>negotiation</br>.",
                "In: Proc.",
                "ECAI-00, pp. 338-342, IOS Press, 2000. [2] A. Bracciali and P. Torroni.",
                "A new framework for knowledge revision of abductive agents through their interaction.",
                "In: Proc.",
                "CLIMA-IV, Computational Logic in Multi-Agent Systems, LNAI 3259, pp. 159-177, 2004. [3] W. Chen, M. Zhang, and N. Foo.",
                "Repeated <br>negotiation</br> of logic programs.",
                "In: Proc. 7th Workshop on Nonmonotonic Reasoning, Action and Change, 2006. [4] W. W. Chu, Q. Chen, and R.-C. Lee.",
                "Cooperative query answering via type abstraction hierarchy.",
                "In: Cooperating Knowledge Based Systems, S. M. Deen ed., pp. 271-290, Springer, 1990. [5] N. Foo, T. Meyer, Y. Zhang, and D. Zhang.",
                "Negotiating logic programs.",
                "In: Proc. 6th Workshop on Nonmonotonic Reasoning, Action and Change, 2005. [6] T. Gaasterland, P. Godfrey, and J. Minker.",
                "Relaxation as a platform for cooperative answering.",
                "Journal of Intelligence Information Systems 1(3/4):293-321, 1992. [7] M. Gelfond and V. Lifschitz.",
                "Classical negation in logic programs and disjunctive databases.",
                "New Generation Computing 9:365-385, 1991. [8] K. Inoue and C. Sakama.",
                "Abductive framework for nonmonotonic theory change.",
                "In: Proc.",
                "IJCAI-95, pp. 204-210, Morgan Kaufmann. [9] A. C. Kakas, R. A. Kowalski, and F. Toni, The role of abduction in logic programming.",
                "In: Handbook of Logic in AI and Logic Programming, D. M. Gabbay, et al. (eds), vol. 5, pp. 235-324, Oxford University Press, 1998. [10] A. C. Kakas and P. Moraitis.",
                "Adaptive agent <br>negotiation</br> via argumentation.",
                "In: Proc.",
                "AAMAS-06, pp. 384-391, ACM Press. [11] T. Meyer, N. Foo, R. Kwok, and D. Zhang.",
                "Logical foundation of <br>negotiation</br>: outcome, concession and adaptation.",
                "In: Proc.",
                "AAAI-04, pp. 293-298, MIT Press. [12] R. S. Michalski.",
                "A theory and methodology of inductive learning.",
                "In: Machine Learning: An Artificial Intelligence Approach, R. S. Michalski, et al. (eds), pp. 83-134, Morgan Kaufmann, 1983. [13] S. Parsons, C. Sierra and N. Jennings.",
                "Agents that reason and negotiate by arguing.",
                "Journal of Logic and Computation, 8(3):261-292, 1988. [14] F. Sadri, F. Toni, and P. Torroni, An abductive logic programming architecture for negotiating agents.",
                "In: Proc. 8th European Conf. on Logics in AI, LNAI 2424, pp. 419-431, Springer, 2002. [15] C. Sakama and K. Inoue.",
                "An abductive framework for computing knowledge base updates.",
                "Theory and Practice of Logic Programming 3(6):671-715, 2003.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1029"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Ciencias de la computadora y comunicación Wakayama University Sakaedani, Wakayama 640 8510, Japón sakama@sys.wakayama-u.ac.jp Katsumi Inoue Instituto Nacional de Informática 2-1-2 Hitotsubashi, Chiyoda-Ku Tokio 101 8430, Japón Ki@nii.ac.JP Resumen Este documento estudia un marco lógico para la \"negociación\" automatizada entre dos agentes.",
                "Estas técnicas se utilizan respectivamente para producir propuestas condicionales y propuestas de vecindad en el proceso de \"negociación\".",
                "Proporcionamos un protocolo de \"negociación\" basado en el intercambio de estas propuestas y desarrollamos procedimientos para calcular nuevas propuestas.",
                "Introducción La \"negociación\" automatizada se ha recibido una atención creciente en sistemas de múltiples agentes, y se han propuesto varios marcos en diferentes contextos ([1, 2, 3, 5, 10, 11, 13, 14], por ejemplo).",
                "La \"negociación\" generalmente procede en una serie de rondas y cada agente hace una propuesta en cada ronda.",
                "Para ver estas propuestas en la \"negociación\" individual, supongamos que el siguiente diálogo de \"negociación\" entre un agente de compradores B y un agente de vendedor S. (BI (o SI) representa una expresión de B (o S) en el i-th ronda.)",
                "Una \"negociación\" procede iterando tales diálogos de dar y atenta hasta que llega a un acuerdo/desacuerdo.",
                "Sin embargo, en el proceso de \"negociación\", puede suceder que los agentes estén obligados a debilitar o cambiar sus objetivos iniciales para alcanzar un compromiso negociado.",
                "Tal comportamiento generalmente se representa como meta-conocimiento específico de un agente o especificados como protocolos de \"negociación\" en problemas particulares.",
                "Actualmente, no existe una lógica computacional para la \"negociación\" automatizada que tenga reglas de inferencia general para producir (contra) propuestas.",
                "El propósito de este documento es mecanizar un proceso de construcción (contra) propuestas en diálogos de \"negociación\" individuales.",
                "Desarrollamos un protocolo de \"negociación\" entre dos agentes basado en el intercambio de estas contraproposiciones y críticas.",
                "La Sección 3 presenta métodos para construir propuestas y proporciona un protocolo de \"negociación\".",
                "\"Negociación\" 3.1 Propuestas condicionales por secuestro Suponemos un agente que tiene una base de conocimiento representada por un programa abductivo P, h.",
                "En contraste, los abducibles H se utilizan para representar condiciones permitidas para hacer un compromiso en el proceso de \"negociación\".",
                "Utilizamos la técnica para producir propuestas en el proceso de \"negociación\".",
                "Una propuesta condicional del vecindario se reduce a una propuesta de vecindario cuando (e, f) = (∅, ∅).3.3 Protocolo de \"negociación\" Un protocolo de \"negociación\" define cómo intercambiar propuestas en el proceso de negociación.",
                "Esta sección presenta un protocolo de \"negociación\" en nuestro marco.",
                "Suponemos que la \"negociación\" individual entre dos agentes que tienen una ontología común y el mismo idioma para una comunicación exitosa.",
                "Una \"negociación\" procede en una serie de rondas.",
                "Un conjunto de \"negociación\" de AGK (en la ronda I-Th) es un triple nsi k = (si c, si n, si cn), donde si c es el conjunto de propuestas condicionales, si n es el conjunto de propuestas del vecindarioy SI CN es el conjunto de propuestas condicionales del vecindario, producidas por GJ y PK, HK.",
                "Un conjunto de \"negociación\" representa el espacio de posibles propuestas hechas por un agente.",
                "Dada una propuesta G1 1 que está satisfecha con un conjunto de respuestas de P1, comienza una \"negociación\".",
                "Si GI 1 = acepta, se llega a un acuerdo y la \"negociación\" termina en el éxito.2.",
                "La \"negociación\" termina en el éxito.4.",
                "Si μ (SI CN) = ∅, seleccione uno de μ (SI CN) y proponerlo como GI 2 a Ag1;De lo contrario, la \"negociación\" termina en el fracaso.",
                "El protocolo anterior se aplica repetidamente a cada uno de los dos agentes negociadores hasta que una \"negociación\" termina en éxito/fracaso.",
                "Formalmente, el protocolo de \"negociación\" anterior tiene las siguientes propiedades.",
                "Si P1, H1 y P2, H2 están libres de funciones (es decir, tanto PI como HI no contienen símbolo de función), cualquier \"negociación\" terminará.2.",
                "Si una \"negociación\" termina con un acuerdo sobre una propuesta G, tanto P1, H1 como P2, H2 tiene conjuntos de creencias que satisfacen la prueba de G.1.",
                "Cuando un programa abductivo está libre de funciones, los abducibles y los conjuntos de \"negociación\" son finitos.",
                "Por lo tanto, la \"negociación\" terminará en pasos finitos.2.",
                "Por lo tanto, la \"negociación\" termina en el éxito.4.",
                "Trabajo relacionado Como hay una serie de literatura sobre \"negociación\" automatizada, esta sección se centra en la comparación con los marcos de \"negociación\" basados en la lógica y la argumentación.",
                "En tercer lugar, especifican una política de \"negociación\" dentro de un programa (como restricciones de integridad), mientras que damos un protocolo independiente de los agentes individuales.",
                "Introducen dos modos diferentes de \"negociación\": concesión y adaptación.",
                "Proporcionan condiciones lógicas para los resultados negociados para satisfacer, pero no describen un proceso de \"negociación\" ni protocolos de \"negociación\".",
                "Foo et al.[5] Modelo uno a uno \"negociación\" como un encuentro único entre dos programas lógicos extendidos.",
                "Hay una serie de propuestas para la \"negociación\" basadas en el sexto intl.",
                "Una ventaja de la \"negociación\" basada en la argumentación es que construye una propuesta con argumentos que respalden la propuesta [1].",
                "Parsons et al.[13] Desarrolle una lógica de \"negociación\" basada en la argumentación entre los agentes de BDI.",
                "En la \"negociación\" uno a uno, un agente A genera una propuesta junto con sus argumentos y la pasa a otro agente B.",
                "Si B no encuentra razón para rechazar la nueva propuesta, será aceptada y la \"negociación\" termina con éxito.",
                "En estos procesos de \"negociación\", el agente A nunca cambia su objetivo original, de modo que la \"negociación\" termina en el fracaso si A no puede encontrar una forma alternativa de lograr el objetivo original.",
                "Kakas y Moraitis [10] proponen un protocolo de \"negociación\" que integra el secuestro dentro de un marco de argumentación.",
                "Una propuesta contiene una oferta correspondiente al objeto \"negociación\", junto con la información de apoyo que representa condiciones bajo las cuales se realiza esta oferta.",
                "La información de apoyo se calcula mediante secuestro y se utiliza para construir argumentos condicionales durante el proceso de \"negociación\".",
                "En su protocolo de \"negociación\", cuando un agente no puede satisfacer su propio objetivo, el agente considera el objetivo de otros agentes y busca condiciones bajo las cuales el objetivo es aceptable.",
                "En segundo lugar, en su protocolo de \"negociación\", las contrapropuestas se eligen entre los candidatos basados en el conocimiento de preferencia de un agente a nivel meta, que representa la política bajo la cual un agente usa sus reglas de decisión a nivel de objeto de acuerdo con las situaciones.",
                "El método de construcción es independiente de protocolos particulares de \"negociación\".",
                "Como [2, 10, 14], la programación de abducción o lógica abductiva utilizada en la \"negociación\" se basa principalmente en la secuestro normal.",
                "Sin embargo, en cuanto a los autores, no hay un estudio que aplique esas técnicas a la \"negociación\" de agente.6.",
                "Para construir propuestas en el proceso de \"negociación\", combinamos las técnicas de abducción y relajación extendida.",
                "Desarrollamos un protocolo de \"negociación\" entre dos agentes basados en el intercambio de propuestas y críticas, y proporcionamos procedimientos para calcular propuestas en la programación de lógica abductiva.",
                "Esto nos permite realizar una \"negociación\" automatizada además de los solucionadores de conjunto de respuestas existentes.",
                "Argumentos, diálogo y \"negociación\".",
                "Repetida \"negociación\" de programas lógicos.",
                "Agente adaptativo \"negociación\" a través de la argumentación.",
                "Fundación lógica de \"negociación\": resultado, concesión y adaptación."
            ],
            "translated_text": "",
            "candidates": [
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "Negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "Negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "Negociación",
                "negociación",
                "Negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "Negociación",
                "negociación",
                "Negociación",
                "negociación",
                "negociación",
                "negociación",
                "Negociación",
                "negociación",
                "Negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "Negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "Negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación"
            ],
            "error": []
        },
        "extend abduction": {
            "translated_key": "extender el secuestro",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Negotiation by Abduction and Relaxation Chiaki Sakama Dept.",
                "Computer and Communication Sciences Wakayama University Sakaedani, Wakayama 640 8510, Japan sakama@sys.wakayama-u.ac.jp Katsumi Inoue National Institute of Informatics 2-1-2 Hitotsubashi, Chiyoda-ku Tokyo 101 8430, Japan ki@nii.ac.jp ABSTRACT This paper studies a logical framework for automated negotiation between two agents.",
                "We suppose an agent who has a knowledge base represented by a logic program.",
                "Then, we introduce methods of constructing counter-proposals in response to proposals made by an agent.",
                "To this end, we combine the techniques of extended abduction in artificial intelligence and relaxation in cooperative query answering for databases.",
                "These techniques are respectively used for producing conditional proposals and neighborhood proposals in the process of negotiation.",
                "We provide a negotiation protocol based on the exchange of these proposals and develop procedures for computing new proposals.",
                "Categories and Subject Descriptors F.4.1 [Mathematical Logic]: Logic and constraint programming;; I.2.11 [Distributed Artificial Intelligence]: Multiagent systems General Terms Theory 1.",
                "INTRODUCTION Automated negotiation has been received increasing attention in multi-agent systems, and a number of frameworks have been proposed in different contexts ([1, 2, 3, 5, 10, 11, 13, 14], for instance).",
                "Negotiation usually proceeds in a series of rounds and each agent makes a proposal at every round.",
                "An agent that received a proposal responds in two ways.",
                "One is a critique which is a remark as to whether or not (parts of) the proposal is accepted.",
                "The other is a counter-proposal which is an alternative proposal made in response to a previous proposal [13].",
                "To see these proposals in one-to-one negotiation, suppose the following negotiation dialogue between a buyer agent B and a seller agent S. (Bi (or Si) represents an utterance of B (or S) in the i-th round.)",
                "B1: I want to buy a personal computer of the brand b1, with the specification of CPU:1GHz, Memory:512MB, HDD: 80GB, and a DVD-RW driver.",
                "I want to get it at the price under 1200 USD.",
                "S1: We can provide a PC with the requested specification if you pay for it by cash.",
                "In this case, however, service points are not added for this special discount.",
                "B2: I cannot pay it by cash.",
                "S2: In a normal price, the requested PC costs 1300 USD.",
                "B3: I cannot accept the price.",
                "My budget is under 1200 USD.",
                "S3: We can provide another computer with the requested specification, except that it is made by the brand b2.",
                "The price is exactly 1200 USD.",
                "B4: I do not want a PC of the brand b2.",
                "Instead, I can downgrade a driver from DVD-RW to CD-RW in my initial proposal.",
                "S4: Ok, I accept your offer.",
                "In this dialogue, in response to the opening proposal B1, the counter-proposal S1 is returned.",
                "In the rest of the dialogue, B2, B3, S4 are critiques, while S2, S3, B4 are counterproposals.",
                "Critiques are produced by evaluating a proposal in a knowledge base of an agent.",
                "In contrast, making counter-proposals involves generating an alternative proposal which is more favorable to the responding agent than the original one.",
                "It is known that there are two ways of producing counterproposals: extending the initial proposal or amending part of the initial proposal.",
                "According to [13], the first type appears in the dialogue: A: I propose that you provide me with service X.",
                "B: I propose that I provide you with service X if you provide me with service Z.",
                "The second type is in the dialogue: A: I propose that I provide you with service Y if you provide me with service X.",
                "B: I propose that I provide you with service X if you provide me with service Z.",
                "A negotiation proceeds by iterating such give-andtake dialogues until it reaches an agreement/disagreement.",
                "In those dialogues, agents generate (counter-)proposals by reasoning on their own goals or objectives.",
                "The objective of the agent A in the above dialogues is to obtain service X.",
                "The agent B proposes conditions to provide the service.",
                "In the process of negotiation, however, it may happen that agents are obliged to weaken or change their initial goals to reach a negotiated compromise.",
                "In the dialogue of 1022 978-81-904262-7-5 (RPS) c 2007 IFAAMAS a buyer agent and a seller agent presented above, a buyer agent changes its initial goal by downgrading a driver from DVD-RW to CD-RW.",
                "Such behavior is usually represented as specific meta-knowledge of an agent or specified as negotiation protocols in particular problems.",
                "Currently, there is no computational logic for automated negotiation which has general inference rules for producing (counter-)proposals.",
                "The purpose of this paper is to mechanize a process of building (counter-)proposals in one-to-one negotiation dialogues.",
                "We suppose an agent who has a knowledge base represented by a logic program.",
                "We then introduce methods for generating three different types of proposals.",
                "First, we use the technique of extended abduction in artificial intelligence [8, 15] to construct a conditional proposal as an extension of the original one.",
                "Second, we use the technique of relaxation in cooperative query answering for databases [4, 6] to construct a neighborhood proposal as an amendment of the original one.",
                "Third, combining extended abduction and relaxation, conditional neighborhood proposals are constructed as amended extensions of the original proposal.",
                "We develop a negotiation protocol between two agents based on the exchange of these counter-proposals and critiques.",
                "We also provide procedures for computing proposals in logic programming.",
                "This paper is organized as follows.",
                "Section 2 introduces a logical framework used in this paper.",
                "Section 3 presents methods for constructing proposals, and provides a negotiation protocol.",
                "Section 4 provides methods for computing proposals in logic programming.",
                "Section 5 discusses related works, and Section 6 concludes the paper. 2.",
                "PRELIMINARIES Logic programs considered in this paper are extended disjunctive programs (EDP) [7].",
                "An EDP (or simply a program) is a set of rules of the form: L1 ; · · · ; Ll ← Ll+1 , . . . , Lm, not Lm+1 , . . . , not Ln (n ≥ m ≥ l ≥ 0) where each Li is a positive/negative literal, i.e., A or ¬A for an atom A, and not is negation as failure (NAF). not L is called an NAF-literal.",
                "The symbol ; represents disjunction.",
                "The left-hand side of the rule is the head, and the right-hand side is the body.",
                "For each rule r of the above form, head(r), body+ (r) and body− (r) denote the sets of literals {L1, . . . , Ll}, {Ll+1, . . . , Lm}, and {Lm+1, . . . , Ln}, respectively.",
                "Also, not body− (r) denotes the set of NAF-literals {not Lm+1, . . . , not Ln}.",
                "A disjunction of literals and a conjunction of (NAF-)literals in a rule are identified with its corresponding sets of literals.",
                "A rule r is often written as head(r) ← body+ (r), not body− (r) or head(r) ← body(r) where body(r) = body+ (r)∪not body− (r).",
                "A rule r is disjunctive if head(r) contains more than one literal.",
                "A rule r is an integrity constraint if head(r) = ∅; and r is a fact if body(r) = ∅.",
                "A program is NAF-free if no rule contains NAF-literals.",
                "Two rules/literals are identified with respect to variable renaming.",
                "A substitution is a mapping from variables to terms θ = {x1/t1, . . . , xn/tn}, where x1, . . . , xn are distinct variables and each ti is a term distinct from xi.",
                "Given a conjunction G of (NAF-)literals, Gθ denotes the conjunction obtained by applying θ to G. A program, rule, or literal is ground if it contains no variable.",
                "A program P with variables is a shorthand of its ground instantiation Ground(P), the set of ground rules obtained from P by substituting variables in P by elements of its Herbrand universe in every possible way.",
                "The semantics of an EDP is defined by the answer set semantics [7].",
                "Let Lit be the set of all ground literals in the language of a program.",
                "Suppose a program P and a set of literals S(⊆ Lit).",
                "Then, the reduct P S is the program which contains the ground rule head(r) ← body+ (r) iff there is a rule r in Ground(P) such that body− (r)∩S = ∅.",
                "Given an NAF-free EDP P, Cn(P) denotes the smallest set of ground literals which is (i) closed under P, i.e., for every ground rule r in Ground(P), body(r) ⊆ Cn(P) implies head(r) ∩ Cn(P) = ∅; and (ii) logically closed, i.e., it is either consistent or equal to Lit.",
                "Given an EDP P and a set S of literals, S is an answer set of P if S = Cn(P S ).",
                "A program has none, one, or multiple answer sets in general.",
                "An answer set is consistent if it is not Lit.",
                "A program P is consistent if it has a consistent answer set; otherwise, P is inconsistent.",
                "Abductive logic programming [9] introduces a mechanism of hypothetical reasoning to logic programming.",
                "An abductive framework used in this paper is the extended abduction introduced by Inoue and Sakama [8, 15].",
                "An abductive program is a pair P, H where P is an EDP and H is a set of literals called abducibles.",
                "When a literal L ∈ H contains variables, any instance of L is also an abducible.",
                "An abductive program P, H is consistent if P is consistent.",
                "Throughout the paper, abductive programs are assumed to be consistent unless stated otherwise.",
                "Let G = L1, . . . , Lm, not Lm+1, . . . , not Ln be a conjunction, where all variables in G are existentially quantified at the front and range-restricted, i.e., every variable in Lm+1, . . . , Ln appears in L1, . . . , Lm.",
                "A set S of ground literals satisfies the conjunction G if { L1θ, . . . , Lmθ } ⊆ S and { Lm+1θ, . . . , Lnθ }∩ S = ∅ for some ground instance Gθ with a substitution θ.",
                "Let P, H be an abductive program and G a conjunction as above.",
                "A pair (E, F) is an explanation of an observation G in P, H if1 1. (P \\ F) ∪ E has an answer set which satisfies G, 2. (P \\ F) ∪ E is consistent, 3.",
                "E and F are sets of ground literals such that E ⊆ H\\P and F ⊆ H ∩ P. When (P \\ F) ∪ E has an answer set S satisfying the above three conditions, S is called a belief set of an abductive program P, H satisfying G (with respect to (E, F)).",
                "Note that if P has a consistent answer set S satisfying G, S is also a belief set of P, H satisfying G with respect to (E, F) = (∅, ∅).",
                "Extended abduction introduces/removes hypotheses to/from a program to explain an observation.",
                "Note that normal abduction (as in [9]) considers only introducing hypotheses to explain an observation.",
                "An explanation (E, F) of an observation G is called minimal if for any explanation (E , F ) of G, E ⊆ E and F ⊆ F imply E = E and F = F. Example 2.1.",
                "Consider the abductive program P, H : P : flies(x) ← bird(x), not ab(x) , ab(x) ← broken-wing(x) , bird(tweety) ← , bird(opus) ← , broken-wing(tweety) ← .",
                "H : broken-wing(x) .",
                "The observation G = flies(tweety) has the minimal explanation (E, F) = (∅, {broken-wing(tweety)}). 1 This defines credulous explanations [15].",
                "Skeptical explanations are used in [8].",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1023 3.",
                "NEGOTIATION 3.1 Conditional Proposals by Abduction We suppose an agent who has a knowledge base represented by an abductive program P, H .",
                "A program P consists of two types of knowledge, belief B and desire D, where B represents objective knowledge of an agent, while D represents subjective knowledge in general.",
                "We define P = B ∪ D, but do not distinguish B and D if such distinction is not important in the context.",
                "In contrast, abducibles H are used for representing permissible conditions to make a compromise in the process of negotiation.",
                "Definition 3.1.",
                "A proposal G is a conjunction of literals and NAF-literals: L1, . . . , Lm, not Lm+1, . . . , not Ln where every variable in G is existentially quantified at the front and range-restricted.",
                "In particular, G is called a critique if G = accept or G = reject where accept and reject are the reserved propositions.",
                "A counter-proposal is a proposal made in response to a proposal.",
                "Definition 3.2.",
                "A proposal G is accepted in an abductive program P, H if P has an answer set satisfying G. When a proposal is not accepted, abduction is used for seeking conditions to make it acceptable.",
                "Definition 3.3.",
                "Let P, H be an abductive program and G a proposal.",
                "If (E, F) is a minimal explanation of Gθ for some substitution θ in P, H , the conjunction G : Gθ, E, not F is called a conditional proposal (for G), where E, not F represents the conjunction: A1, . . . , Ak, not Ak+1, . . . , not Al for E = {A1, . . . , Ak} and F = { Ak+1, . . . , Al }.",
                "Proposition 3.1.",
                "Let P, H be an abductive program and G a proposal.",
                "If G is a conditional proposal, there is a belief set S of P, H satisfying G .",
                "Proof.",
                "When G = Gθ, E, not F, (P \\ F) ∪ E has a consistent answer set S satisfying Gθ and E ∩ F = ∅.",
                "In this case, S satisfies Gθ, E, not F. A conditional proposal G provides a minimal requirement for accepting the proposal G. If Gθ has multiple minimal explanations, several conditional proposals exist accordingly.",
                "When (E, F) = (∅, ∅), a conditional proposal is used as a new proposal made in response to the proposal G. Example 3.1.",
                "An agent seeks a position of a research assistant at the computer department of a university with the condition that the salary is at least 50,000 USD per year.",
                "The agent makes his/her request as the proposal:2 G = assist(compt dept), salary(x), x ≥ 50, 000.",
                "The university has the abductive program P, H : P : salary(40, 000) ← assist(compt dept), not has PhD, salary(60, 000) ← assist(compt dept), has PhD, salary(50, 000) ← assist(math dept), salary(55, 000) ← system admin(compt dept), 2 For notational convenience, we often include mathematical (in)equations in proposals/programs.",
                "They are written by literals, for instance, x ≥ y by geq(x, y) with a suitable definition of the predicate geq. employee(x) ← assist(x), employee(x) ← system admin(x), assist(compt dept); assist(math dept) ; system admin(compt dept) ←, H : has PhD, where available positions are represented by disjunction.",
                "According to P, the base salary of a research assistant at the computer department is 40,000 USD, but if he/she has PhD, it is 60,000 USD.",
                "In this case, (E, F) = ({has PhD}, ∅) becomes the minimal explanation of Gθ = assist(compt dept), salary(60, 000) with θ = { x/60, 000 }.",
                "Then, the conditional proposal made by the university becomes assist(compt dept), salary(60, 000), has PhD . 3.2 Neighborhood Proposals by Relaxation When a proposal is unacceptable, an agent tries to construct a new counter-proposal by weakening constraints in the initial proposal.",
                "We use techniques of relaxation for this purpose.",
                "Relaxation is used as a technique of cooperative query answering in databases [4, 6].",
                "When an original query fails in a database, relaxation expands the scope of the query by relaxing the constraints in the query.",
                "This allows the database to return neighborhood answers which are related to the original query.",
                "We use the technique for producing proposals in the process of negotiation.",
                "Definition 3.4.",
                "Let P, H be an abductive program and G a proposal.",
                "Then, G is relaxed to G in the following three ways: Anti-instantiation: Construct G such that G θ = G for some substitution θ.",
                "Dropping conditions: Construct G such that G ⊂ G. Goal replacement: If G is a conjunction G1, G2, where G1 and G2 are conjunctions, and there is a rule L ← G1 in P such that G1θ = G1 for some substitution θ, then build G as Lθ, G2.",
                "Here, Lθ is called a replaced literal.",
                "In each case, every variable in G is existentially quantified at the front and range-restricted.",
                "Anti-instantiation replaces constants (or terms) with fresh variables.",
                "Dropping conditions eliminates some conditions in a proposal.",
                "Goal replacement replaces the condition G1 in G with a literal Lθ in the presence of a rule L ← G1 in P under the condition G1θ = G1.",
                "All these operations generalize proposals in different ways.",
                "Each G obtained by these operations is called a relaxation of G. It is worth noting that these operations are also used in the context of inductive generalization [12].",
                "The relaxed proposal can produce new offers which are neighbor to the original proposal.",
                "Definition 3.5.",
                "Let P, H be an abductive program and G a proposal. 1.",
                "Let G be a proposal obtained by anti-instantiation.",
                "If P has an answer set S which satisfies G θ for some substitution θ and G θ = G, G θ is called a neighborhood proposal by anti-instantiation. 2.",
                "Let G be a proposal obtained by dropping conditions.",
                "If P has an answer set S which satisfies G θ for some substitution θ, G θ is called a neighborhood proposal by dropping conditions. 1024 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.",
                "Let G be a proposal obtained by goal replacement.",
                "For a replaced literal L ∈ G and a rule H ← B in P such that L = Hσ and (G \\ {L}) ∪ Bσ = G for some substitution σ, put G = (G \\ {L}) ∪ Bσ.",
                "If P has an answer set S which satisfies G θ for some substitution θ, G θ is called a neighborhood proposal by goal replacement.",
                "Example 3.2. (cont.",
                "Example 3.1) Given the proposal G = assist(compt dept), salary(x), x ≥ 50, 000, • G1 = assist(w), salary(x), x ≥ 50, 000 is produced by substituting compt dept with a variable w. As G1θ1 = assist(math dept), salary(50, 000) with θ1 = { w/math dept } is satisfied by an answer set of P, G1θ1 becomes a neighborhood proposal by anti-instantiation. • G2 = assist(compt dept), salary(x) is produced by dropping the salary condition x ≥ 50, 000.",
                "As G2θ2 = assist(compt dept), salary(40, 000) with θ2 = { x/40, 000 } is satisfied by an answer set of P, G2θ2 becomes a neighborhood proposal by dropping conditions. • G3 = employee(compt dept), salary(x), x ≥ 50, 000 is produced by replacing assist(compt dept) with employee(compt dept) using the rule employee(x) ← assist(x) in P. By G3 and the rule employee(x) ← system admin(x) in P, G3 = sys admin(compt dept), salary(x), x ≥ 50, 000 is produced.",
                "As G3 θ3 = sys admin(compt dept), salary(55, 000) with θ3 = { x/55, 000 } is satisfied by an answer set of P, G3 θ3 becomes a neighborhood proposal by goal replacement.",
                "Finally, extended abduction and relaxation are combined to produce conditional neighborhood proposals.",
                "Definition 3.6.",
                "Let P, H be an abductive program and G a proposal. 1.",
                "Let G be a proposal obtained by either anti-instantiation or dropping conditions.",
                "If (E, F) is a minimal explanation of G θ(= G) for some substitution θ, the conjunction G θ, E, not F is called a conditional neighborhood proposal by anti-instantiation/dropping conditions. 2.",
                "Let G be a proposal obtained by goal replacement.",
                "Suppose G as in Definition 3.5(3).",
                "If (E, F) is a minimal explanation of G θ for some substitution θ, the conjunction G θ, E, not F is called a conditional neighborhood proposal by goal replacement.",
                "A conditional neighborhood proposal reduces to a neighborhood proposal when (E, F) = (∅, ∅). 3.3 Negotiation Protocol A negotiation protocol defines how to exchange proposals in the process of negotiation.",
                "This section presents a negotiation protocol in our framework.",
                "We suppose one-to-one negotiation between two agents who have a common ontology and the same language for successful communication.",
                "Definition 3.7.",
                "A proposal L1, ..., Lm, not Lm+1, ..., not Ln violates an integrity constraint ← body+ (r), not body− (r) if for any substitution θ, there is a substitution σ such that body+ (r)σ ⊆ { L1θ, . . . , Lmθ }, body− (r)σ∩{ L1θ, . . . , Lmθ } = ∅, and body− (r)σ ⊆ { Lm+1θ, . . . , Lnθ }.",
                "Integrity constraints are conditions which an agent should satisfy, so that they are used to explain why an agent does not accept a proposal.",
                "A negotiation proceeds in a series of rounds.",
                "Each i-th round (i ≥ 1) consists of a proposal Gi 1 made by one agent Ag1 and another proposal Gi 2 made by the other agent Ag2.",
                "Definition 3.8.",
                "Let P1, H1 be an abductive program of an agent Ag1 and Gi 2 a proposal made by Ag2 at the i-th round.",
                "A critique set of Ag1 (at the i-th round) is a set CSi 1(P1, Gj 2) = CSi−1 1 (P1, Gj−1 2 ) ∪ { r | r is an integrity constraint in P1 and Gj 2 violates r } where j = i − 1 or i, and CS0 1 (P1, G0 2) = CS1 1 (P1, G0 2) = ∅.",
                "A critique set of an agent Ag1 accumulates integrity constraints which are violated by proposals made by another agent Ag2.",
                "CSi 2(P2, Gj 1) is defined in the same manner.",
                "Definition 3.9.",
                "Let Pk, Hk be an abductive program of an agent Agk and Gj a proposal, which is not a critique, made by any agent at the j(≤ i)-th round.",
                "A negotiation set of Agk (at the i-th round) is a triple NSi k = (Si c, Si n, Si cn), where Si c is the set of conditional proposals, Si n is the set of neighborhood proposals, and Si cn is the set of conditional neighborhood proposals, produced by Gj and Pk, Hk .",
                "A negotiation set represents the space of possible proposals made by an agent.",
                "Si x (x ∈ {c, n, cn}) accumulates proposals produced by Gj (1 ≤ j ≤ i) according to Definitions 3.3, 3.5, and 3.6.",
                "Note that an agent can construct counter-proposals by modifying its own previous proposals or another agents proposals.",
                "An agent Agk accumulates proposals that are made by Agk but are rejected by another agent, in the failed proposal set FP i k (at the i-th round), where FP 0 k = ∅.",
                "Suppose two agents Ag1 and Ag2 who have abductive programs P1, H1 and P2, H2 , respectively.",
                "Given a proposal G1 1 which is satisfied by an answer set of P1, a negotiation starts.",
                "In response to the proposal Gi 1 made by Ag1 at the i-th round, Ag2 behaves as follows. 1.",
                "If Gi 1 = accept, an agreement is reached and negotiation ends in success. 2.",
                "Else if Gi 1 = reject, put FP i 2 = FPi−1 2 ∪{Gi−1 2 } where {G0 2} = ∅.",
                "Proceed to the step 4(b). 3.",
                "Else if P2 has an answer set satisfying Gi 1, Ag2 returns Gi 2 = accept to Ag1.",
                "Negotiation ends in success. 4.",
                "Otherwise, Ag2 behaves as follows.",
                "Put FP i 2 = FPi−1 2 . (a) If Gi 1 violates an integrity constraint in P2, return the critique Gi 2 = reject to Ag1, together with the critique set CSi 2(P2, Gi 1). (b) Otherwise, construct NSi 2 as follows. (i) Produce Si c. Let μ(Si c) = { p | p ∈ Si c \\ FPi 2 and p satisfies the constraints in CSi 1(P1, Gi−1 2 )}.",
                "If μ(Si c) = ∅, select one from μ(Si c) and propose it as Gi 2 to Ag1; otherwise, go to (ii). (ii) Produce Si n. If μ(Si n) = ∅, select one from μ(Si n) and propose it as Gi 2 to Ag1; otherwise, go to (iii). (iii) Produce Si cn.",
                "If μ(Si cn) = ∅, select one from μ(Si cn) and propose it as Gi 2 to Ag1; otherwise, negotiation ends in failure.",
                "This means that Ag2 can make no counter-proposal or every counterproposal made by Ag2 is rejected by Ag1.",
                "In the step 4(a), Ag2 rejects the proposal Gi 1 and returns the reason of rejection as a critique set.",
                "This helps for Ag1 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1025 in preparing a next counter-proposal.",
                "In the step 4(b), Ag2 constructs a new proposal.",
                "In its construction, Ag2 should take care of the critique set CSi 1(P1, Gi−1 2 ), which represents integrity constraints, if any, accumulated in previous rounds, that Ag1 must satisfy.",
                "Also, FP i 2 is used for removing proposals which have been rejected.",
                "Construction of Si x (x ∈ {c, n, cn}) in NSi 2 is incrementally done by adding new counter-proposals produced by Gi 1 or Gi−1 2 to Si−1 x .",
                "For instance, Si n in NSi 2 is computed as Si n = Si−1 n ∪{ p | p is a neighborhood proposal made by Gi 1 } ∪ { p | p is a neighborhood proposal made by Gi−1 2 }, where S0 n = ∅.",
                "That is, Si n is constructed from Si−1 n by adding new proposals which are obtained by modifying the proposal Gi 1 made by Ag1 at the i-th round or modifying the proposal Gi−1 2 made by Ag2 at the (i − 1)-th round.",
                "Si c and Si cn are obtained as well.",
                "In the above protocol, an agent produces Si c at first, secondly Si n, and finally Si cn.",
                "This strategy seeks conditions which satisfy the given proposal, prior to neighborhood proposals which change the original one.",
                "Another strategy, which prefers neighborhood proposals to conditional ones, is also considered.",
                "Conditional neighborhood proposals are to be considered in the last place, since they differ from the original one to the maximal extent.",
                "The above protocol produces the candidate proposals in Si x for each x ∈ {c, n, cn} at once.",
                "We can consider a variant of the protocol in which each proposal in Si x is constructed one by one (see Example 3.3).",
                "The above protocol is repeatedly applied to each one of the two negotiating agents until a negotiation ends in success/failure.",
                "Formally, the above negotiation protocol has the following properties.",
                "Theorem 3.2.",
                "Let Ag1 and Ag2 be two agents having abductive programs P1, H1 and P2, H2 , respectively. 1.",
                "If P1, H1 and P2, H2 are function-free (i.e., both Pi and Hi contain no function symbol), any negotiation will terminate. 2.",
                "If a negotiation terminates with agreement on a proposal G, both P1, H1 and P2, H2 have belief sets satisfying G. Proof. 1.",
                "When an abductive program is function-free, abducibles and negotiation sets are both finite.",
                "Moreover, if a proposal is once rejected, it is not proposed again by the function μ.",
                "Thus, negotiation will terminate in finite steps. 2.",
                "When a proposal G is made by Ag1, P1, H1 has a belief set satisfying G. If the agent Ag2 accepts the proposal G, it is satisfied by an answer set of P2 which is also a belief set of P2, H2 .",
                "Example 3.3.",
                "Suppose a buying-selling situation in the introduction.",
                "A seller agent has the abductive program Ps, Hs in which Ps consists of belief Bs and desire Ds: Bs : pc(b1, 1G, 512M, 80G) ; pc(b2, 1G, 512M, 80G) ←,(1) dvd-rw ; cd-rw ←, (2) Ds : normal price(1300) ← pc(b1, 1G, 512M, 80G), dvd-rw, (3) normal price(1200) ← pc(b1, 1G, 512M, 80G), cd-rw, (4) normal price(1200) ← pc(b2, 1G, 512M, 80G), dvd-rw, (5) price(x) ← normal price(x), add point, (6) price(x ∗ 0.9) ← normal price(x), pay cash, not add point,(7) add point ←, (8) Hs : add point, pay cash.",
                "Here, (1) and (2) represent selection of products.",
                "The atom pc(b1, 1G, 512M, 80G) represents that the seller agent has a PC of the brand b1 such that CPU is 1GHz, memory is 512MB, and HDD is 80GB.",
                "Prices of products are represented as desire of the seller.",
                "The rules (3) - (5) are normal prices of products.",
                "A normal price is a selling price on the condition that service points are added (6).",
                "On the other hand, a discount price is applied if the paying method is cash and no service point is added (7).",
                "The fact (8) represents the addition of service points.",
                "This service would be withdrawn in case of discount prices, so add point is specified as an abducible.",
                "A buyer agent has the abductive program Pb, Hb in which Pb consists of belief Bb and desire Db: Bb : drive ← dvd-rw, (9) drive ← cd-rw, (10) price(x) ←, (11) Db : pc(b1, 1G, 512M, 80G) ←, (12) dvd-rw ←, (13) cd-rw ← not dvd-rw, (14) ← pay cash, (15) ← price(x), x > 1200, (16) Hb : dvd-rw.",
                "Rules (12) - (16) are the buyers desire.",
                "Among them, (15) and (16) impose constraints for buying a PC.",
                "A DVD-RW is specified as an abducible which is subject to concession. (1st round) First, the following proposal is given by the buyer agent: G1 b : pc(b1, 1G, 512M, 80G), dvd-rw, price(x), x ≤ 1200.",
                "As Ps has no answer set which satisfies G1 b , the seller agent cannot accept the proposal.",
                "The seller takes an action of making a counter-proposal and performs abduction.",
                "As a result, the seller finds the minimal explanation (E, F) = ({ pay cash }, { add point }) which explains G1 b θ1 with θ1 = { x/1170 }.",
                "The seller constructs the conditional proposal: G1 s : pc(b1, 1G, 512M, 80G), dvd-rw, price(1170), pay cash, not add point and offers it to the buyer. (2nd round) The buyer does not accept G1 s because he/she cannot pay it by cash (15).",
                "The buyer then returns the critique G2 b = reject to the seller, together with the critique set CS2 b (Pb, G1 s) = {(15)}.",
                "In response to this, the seller tries to make another proposal which satisfies the constraint in this critique set.",
                "As G1 s is stored in FP 2 s and no other conditional proposal satisfying the buyers requirement exists, the seller produces neighborhood proposals.",
                "He/she relaxes G1 b by dropping x ≤ 1200 in the condition, and produces pc(b1, 1G, 512M, 80G), dvd-rw, price(x).",
                "As Ps has an answer set which satisfies G2 s : pc(b1, 1G, 512M, 80G), dvd-rw, price(1300), 1026 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) the seller offers G2 s as a new counter-proposal. (3rd round) The buyer does not accept G2 s because he/she cannot pay more than 1200USD (16).",
                "The buyer again returns the critique G3 b = reject to the seller, together with the critique set CS3 b (Pb, G2 s) = CS2 b (Pb, G1 s) ∪ {(16)}.",
                "The seller then considers another proposal by replacing b1 with a variable w, G1 b now becomes pc(w, 1G, 512M, 80G), dvd-rw, price(x), x ≤ 1200.",
                "As Ps has an answer set which satisfies G3 s : pc(b2, 1G, 512M, 80G), dvd-rw, price(1200), the seller offers G3 s as a new counter-proposal. (4th round) The buyer does not accept G3 s because a PC of the brand b2 is out of his/her interest and Pb has no answer set satisfying G3 s. Then, the buyer makes a concession by changing his/her original goal.",
                "The buyer relaxes G1 b by goal replacement using the rule (9) in Pb, and produces pc(b1, 1G, 512M, 80G), drive, price(x), x ≤ 1200.",
                "Using (10), the following proposal is produced: pc(b1, 1G, 512M, 80G), cd-rw, price(x), x ≤ 1200.",
                "As Pb \\ { dvd-rw } has a consistent answer set satisfying the above proposal, the buyer proposes the conditional neighborhood proposal G4 b : pc(b1, 1G, 512M, 80G), cd-rw, not dvd-rw, price(x), x ≤ 1200 to the seller agent.",
                "Since Ps also has an answer set satisfying G4 b , the seller accepts it and sends the message G4 s = accept to the buyer.",
                "Thus, the negotiation ends in success. 4.",
                "COMPUTATION In this section, we provide methods of computing proposals in terms of answer sets of programs.",
                "We first introduce some definitions from [15].",
                "Definition 4.1.",
                "Given an abductive program P, H , the set UR of update rules is defined as: UR = { L ← not L, L ← not L | L ∈ H } ∪ { +L ← L | L ∈ H \\ P } ∪ { −L ← not L | L ∈ H ∩ P } , where L, +L, and −L are new atoms uniquely associated with every L ∈ H. The atoms +L and −L are called update atoms.",
                "By the definition, the atom L becomes true iff L is not true.",
                "The pair of rules L ← not L and L ← not L specify the situation that an abducible L is true or not.",
                "When p(x) ∈ H and p(a) ∈ P but p(t) ∈ P for t = a, the rule +L ← L precisely becomes +p(t) ← p(t) for any t = a.",
                "In this case, the rule is shortly written as +p(x) ← p(x), x = a.",
                "Generally, the rule becomes +p(x) ← p(x), x = t1, . . . , x = tn for n such instances.",
                "The rule +L ← L derives the atom +L if an abducible L which is not in P is to be true.",
                "In contrast, the rule −L ← not L derives the atom −L if an abducible L which is in P is not to be true.",
                "Thus, update atoms represent the change of truth values of abducibles in a program.",
                "That is, +L means the introduction of L, while −L means the deletion of L. When an abducible L contains variables, the associated update atom +L or −L is supposed to have exactly the same variables.",
                "In this case, an update atom is semantically identified with its ground instances.",
                "The set of all update atoms associated with the abducibles in H is denoted by UH, and UH = UH+ ∪ UH− where UH+ (resp.",
                "UH− ) is the set of update atoms of the form +L (resp. −L).",
                "Definition 4.2.",
                "Given an abductive program P, H , its update program UP is defined as the program UP = (P \\ H) ∪ UR .",
                "An answer set S of UP is called U-minimal if there is no answer set T of UP such that T ∩ UH ⊂ S ∩ UH.",
                "By the definition, U-minimal answer sets exist whenever UP has answer sets.",
                "Update programs are used for computing (minimal) explanations of an observation.",
                "Given an observation G as a conjunction of literals and NAF-literals possibly containing variables, we introduce a new ground literal O together with the rule O ← G. In this case, O has an explanation (E, F) iff G has the same explanation.",
                "With this replacement, an observation is assumed to be a ground literal without loss of generality.",
                "In what follows, E+ = { +L | L ∈ E } and F − = { −L | L ∈ F } for E ⊆ H and F ⊆ H. Proposition 4.1. ([15]) Let P, H be an abductive program, UP its update program, and G a ground literal representing an observation.",
                "Then, a pair (E, F) is an explanation of G iff UP ∪ { ← not G } has a consistent answer set S such that E+ = S ∩ UH+ and F− = S ∩ UH− .",
                "In particular, (E, F) is a minimal explanation iff S is a U-minimal answer set.",
                "Example 4.1.",
                "To explain the observation G = flies(t) in the program P of Example 2.1, first construct the update program UP of P:3 UP : flies(x) ← bird(x), not ab(x), ab(x) ← broken-wing(x) , bird(t) ← , bird(o) ← , broken-wing(x) ← not broken-wing(x), broken-wing(x) ← not broken-wing(x), +broken-wing(x) ← broken-wing(x), x = t , −broken-wing(t) ← not broken-wing(t) .",
                "Next, consider the program UP ∪ { ← not flies(t) }.",
                "It has the single U-minimal answer set: S = { bird(t), bird(o), flies(t), flies(o), broken-wing(t), broken-wing(o), −broken-wing(t) }.",
                "The unique minimal explanation (E, F) = (∅, {broken-wing(t)}) of G is expressed by the update atom −broken-wing(t) in S ∩ UH− .",
                "Proposition 4.2.",
                "Let P, H be an abductive program and G a ground literal representing an observation.",
                "If P ∪ { ← not G } has a consistent answer set S, G has the minimal explanation (E, F) = (∅, ∅) and S satisfies G. Now we provide methods for computing (counter-)proposals.",
                "First, conditional proposals are computed as follows. input : an abductive program P, H , a proposal G; output : a set Sc of proposals.",
                "If G is a ground literal, compute its minimal explanation (E, F) in P, H using the update program.",
                "Put G, E, not F in Sc.",
                "Else if G is a conjunction possibly containing variables, consider the abductive program 3 t represents tweety and o represents opus.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1027 P ∪{ O ← G }, H with a ground literal O. Compute a minimal explanation of O in P ∪ { O ← G }, H using its update program.",
                "If O has a minimal explanation (E, F) with a substitution θ for variables in G, put Gθ, E, not F in Sc.",
                "Next, neighborhood proposals are computed as follows. input : an abductive program P, H , a proposal G; output : a set Sn of proposals. % neighborhood proposals by anti-instantiation; Construct G by anti-instantiation.",
                "For a ground literal O, if P ∪ { O ← G } ∪ { ← not O } has a consistent answer set satisfying G θ with a substitution θ and G θ = G, put G θ in Sn. % neighborhood proposals by dropping conditions; Construct G by dropping conditions.",
                "If G is a ground literal and the program P ∪ { ← not G } has a consistent answer set, put G in Sn.",
                "Else if G is a conjunction possibly containing variables, do the following.",
                "For a ground literal O, if P ∪{ O ← G }∪{ ← not O } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn. % neighborhood proposals by goal replacement; Construct G by goal replacement.",
                "If G is a ground literal and there is a rule H ← B in P such that G = Hσ and Bσ = G for some substitution σ, put G = Bσ.",
                "If P ∪ { ← not G } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn.",
                "Else if G is a conjunction possibly containing variables, do the following.",
                "For a replaced literal L ∈ G , if there is a rule H ← B in P such that L = Hσ and (G \\ {L}) ∪ Bσ = G for some substitution σ, put G = (G \\ {L}) ∪ Bσ.",
                "For a ground literal O, if P ∪ { O ← G } ∪ { ← not O } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn.",
                "Theorem 4.3.",
                "The set Sc (resp.",
                "Sn) computed above coincides with the set of conditional proposals (resp. neighborhood proposals).",
                "Proof.",
                "The result for Sc follows from Definition 3.3 and Proposition 4.1.",
                "The result for Sn follows from Definition 3.5 and Proposition 4.2.",
                "Conditional neighborhood proposals are computed by combining the above two procedures.",
                "Those proposals are computed at each round.",
                "Note that the procedure for computing Sn contains some nondeterministic choices.",
                "For instance, there are generally several candidates of literals to relax in a proposal.",
                "Also, there might be several rules in a program for the usage of goal replacement.",
                "In practice, an agent can prespecify literals in a proposal for possible relaxation or rules in a program for the usage of goal replacement. 5.",
                "RELATED WORK As there are a number of literature on automated negotiation, this section focuses on comparison with negotiation frameworks based on logic and argumentation.",
                "Sadri et al. [14] use abductive logic programming as a representation language of negotiating agents.",
                "Agents negotiate using common dialogue primitives, called dialogue moves.",
                "Each agent has an abductive logic program in which a sequence of dialogues are specified by a program, a dialogue protocol is specified as constraints, and dialogue moves are specified as abducibles.",
                "The behavior of agents is regulated by an observe-think-act cycle.",
                "Once a dialogue move is uttered by an agent, another agent that observed the utterance thinks and acts using a proof procedure.",
                "Their approach and ours both employ abductive logic programming as a platform of agent reasoning, but the use of it is quite different.",
                "First, they use abducibles to specify dialogue primitives of the form tell(utterer, receiver, subject, identifier, time), while we use abducibles to specify arbitrary permissible hypotheses to construct conditional proposals.",
                "Second, a program pre-specifies a plan to carry out in order to achieve a goal, together with available/missing resources in the context of resource-exchanging problems.",
                "This is in contrast with our method in which possible counter-proposals are newly constructed in response to a proposal made by an agent.",
                "Third, they specify a negotiation policy inside a program (as integrity constraints), while we give a protocol independent of individual agents.",
                "They provide an operational model that completely specifies the behavior of agents in terms of agent cycle.",
                "We do not provide such a complete specification of the behavior of agents.",
                "Our primary interest is to mechanize construction of proposals.",
                "Bracciali and Torroni [2] formulate abductive agents that have knowledge in abductive logic programs.",
                "To explain an observation, two agents communicate by exchanging integrity constraints.",
                "In the process of communication, an agent can revise its own integrity constraints according to the information provided by the other agent.",
                "A set IC of integrity constraints relaxes a set IC (or IC tightens IC ) if any observation that can be proved with respect to IC can also be proved with respect to IC .",
                "For instance, IC : ← a, b, c relaxes IC : ← a, b.",
                "Thus, they use relaxation for weakening the constraints in an abductive logic program.",
                "In contrast, we use relaxation for weakening proposals and three different relaxation methods, anti-instantiation, dropping conditions, and goal replacement, are considered.",
                "Their goal is to explain an observation by revising integrity constraints of an agent through communication, while we use integrity constraints for communication to explain critiques and help other agents in making counter-proposals.",
                "Meyer et al. [11] introduce a logical framework for negotiating agents.",
                "They introduce two different modes of negotiation: concession and adaptation.",
                "They provide rational postulates to characterize negotiated outcomes between two agents, and describe methods for constructing outcomes.",
                "They provide logical conditions for negotiated outcomes to satisfy, but they do not describe a process of negotiation nor negotiation protocols.",
                "Moreover, they represent agents by classical propositional theories, which is different from our abductive logic programming framework.",
                "Foo et al. [5] model one-to-one negotiation as a one-time encounter between two extended logic programs.",
                "An agent offers an answer set of its program, and their mutual deal is regarded as a trade on their answer sets.",
                "Starting from the initial agreement set S∩T for an answer set S of an agent and an answer set T of another agent, each agent extends this set to reflect its own demand while keeping consistency with demand of the other agent.",
                "Their algorithm returns new programs having answer sets which are consistent with each other and keep the agreement set.",
                "The work is extended to repeated encounters in [3].",
                "In their framework, two agents exchange answer sets to produce a common belief set, which is different from our framework of exchanging proposals.",
                "There are a number of proposals for negotiation based 1028 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) on argumentation.",
                "An advantage of argumentation-based negotiation is that it constructs a proposal with arguments supporting the proposal [1].",
                "The existence of arguments is useful to convince other agents of reasons why an agent offers (counter-)proposals or returns critiques.",
                "Parsons et al. [13] develop a logic of argumentation-based negotiation among BDI agents.",
                "In one-to-one negotiation, an agent A generates a proposal together with its arguments, and passes it to another agent B.",
                "The proposal is evaluated by B which attempts to build arguments against it.",
                "If it conflicts with Bs interest, B informs A of its objection by sending back its attacking argument.",
                "In response to this, A tries to find an alternative way of achieving its original objective, or a way of persuading B to drop its objection.",
                "If either type of argument can be found, A will submit it to B.",
                "If B finds no reason to reject the new proposal, it will be accepted and the negotiation ends in success.",
                "Otherwise, the process is iterated.",
                "In this negotiation processes, the agent A never changes its original objective, so that negotiation ends in failure if A fails to find an alternative way of achieving the original objective.",
                "In our framework, when a proposal is rejected by another agent, an agent can weaken or change its objective by abduction and relaxation.",
                "Our framework does not have a mechanism of argumentation, but reasons for critiques can be informed by responding critique sets.",
                "Kakas and Moraitis [10] propose a negotiation protocol which integrates abduction within an argumentation framework.",
                "A proposal contains an offer corresponding to the negotiation object, together with supporting information representing conditions under which this offer is made.",
                "Supporting information is computed by abduction and is used for constructing conditional arguments during the process of negotiation.",
                "In their negotiation protocol, when an agent cannot satisfy its own goal, the agent considers the other agents goal and searches for conditions under which the goal is acceptable.",
                "Our present approach differs from theirs in the following points.",
                "First, they use abduction to seek conditions to support arguments, while we use abduction to seek conditions for proposals to accept.",
                "Second, in their negotiation protocol, counter-proposals are chosen among candidates based on preference knowledge of an agent at meta-level, which represents policy under which an agent uses its object-level decision rules according to situations.",
                "In our framework, counter-proposals are newly constructed using abduction and relaxation.",
                "The method of construction is independent of particular negotiation protocols.",
                "As [2, 10, 14], abduction or abductive logic programming used in negotiation is mostly based on normal abduction.",
                "In contrast, our approach is based on extended abduction which can not only introduce hypotheses but remove them from a program.",
                "This is another important difference.",
                "Relaxation and neighborhood query answering are devised to make databases cooperative with their users [4, 6].",
                "In this sense, those techniques have the spirit similar to cooperative problem solving in multi-agent systems.",
                "As far as the authors know, however, there is no study which applies those technique to agent negotiation. 6.",
                "CONCLUSION In this paper we proposed a logical framework for negotiating agents.",
                "To construct proposals in the process of negotiation, we combined the techniques of extended abduction and relaxation.",
                "It was shown that these two operations are used for general inference rules in producing proposals.",
                "We developed a negotiation protocol between two agents based on exchange of proposals and critiques, and provided procedures for computing proposals in abductive logic programming.",
                "This enables us to realize automated negotiation on top of the existing answer set solvers.",
                "The present framework does not have a mechanism of selecting an optimal (counter-)proposal among different alternatives.",
                "To compare and evaluate proposals, an agent must have preference knowledge of candidate proposals.",
                "Further elaboration to maximize the utility of agents is left for future study. 7.",
                "REFERENCES [1] L. Amgoud, S. Parsons, and N. Maudet.",
                "Arguments, dialogue, and negotiation.",
                "In: Proc.",
                "ECAI-00, pp. 338-342, IOS Press, 2000. [2] A. Bracciali and P. Torroni.",
                "A new framework for knowledge revision of abductive agents through their interaction.",
                "In: Proc.",
                "CLIMA-IV, Computational Logic in Multi-Agent Systems, LNAI 3259, pp. 159-177, 2004. [3] W. Chen, M. Zhang, and N. Foo.",
                "Repeated negotiation of logic programs.",
                "In: Proc. 7th Workshop on Nonmonotonic Reasoning, Action and Change, 2006. [4] W. W. Chu, Q. Chen, and R.-C. Lee.",
                "Cooperative query answering via type abstraction hierarchy.",
                "In: Cooperating Knowledge Based Systems, S. M. Deen ed., pp. 271-290, Springer, 1990. [5] N. Foo, T. Meyer, Y. Zhang, and D. Zhang.",
                "Negotiating logic programs.",
                "In: Proc. 6th Workshop on Nonmonotonic Reasoning, Action and Change, 2005. [6] T. Gaasterland, P. Godfrey, and J. Minker.",
                "Relaxation as a platform for cooperative answering.",
                "Journal of Intelligence Information Systems 1(3/4):293-321, 1992. [7] M. Gelfond and V. Lifschitz.",
                "Classical negation in logic programs and disjunctive databases.",
                "New Generation Computing 9:365-385, 1991. [8] K. Inoue and C. Sakama.",
                "Abductive framework for nonmonotonic theory change.",
                "In: Proc.",
                "IJCAI-95, pp. 204-210, Morgan Kaufmann. [9] A. C. Kakas, R. A. Kowalski, and F. Toni, The role of abduction in logic programming.",
                "In: Handbook of Logic in AI and Logic Programming, D. M. Gabbay, et al. (eds), vol. 5, pp. 235-324, Oxford University Press, 1998. [10] A. C. Kakas and P. Moraitis.",
                "Adaptive agent negotiation via argumentation.",
                "In: Proc.",
                "AAMAS-06, pp. 384-391, ACM Press. [11] T. Meyer, N. Foo, R. Kwok, and D. Zhang.",
                "Logical foundation of negotiation: outcome, concession and adaptation.",
                "In: Proc.",
                "AAAI-04, pp. 293-298, MIT Press. [12] R. S. Michalski.",
                "A theory and methodology of inductive learning.",
                "In: Machine Learning: An Artificial Intelligence Approach, R. S. Michalski, et al. (eds), pp. 83-134, Morgan Kaufmann, 1983. [13] S. Parsons, C. Sierra and N. Jennings.",
                "Agents that reason and negotiate by arguing.",
                "Journal of Logic and Computation, 8(3):261-292, 1988. [14] F. Sadri, F. Toni, and P. Torroni, An abductive logic programming architecture for negotiating agents.",
                "In: Proc. 8th European Conf. on Logics in AI, LNAI 2424, pp. 419-431, Springer, 2002. [15] C. Sakama and K. Inoue.",
                "An abductive framework for computing knowledge base updates.",
                "Theory and Practice of Logic Programming 3(6):671-715, 2003.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1029"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "relaxation": {
            "translated_key": "relajación",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Negotiation by Abduction and <br>relaxation</br> Chiaki Sakama Dept.",
                "Computer and Communication Sciences Wakayama University Sakaedani, Wakayama 640 8510, Japan sakama@sys.wakayama-u.ac.jp Katsumi Inoue National Institute of Informatics 2-1-2 Hitotsubashi, Chiyoda-ku Tokyo 101 8430, Japan ki@nii.ac.jp ABSTRACT This paper studies a logical framework for automated negotiation between two agents.",
                "We suppose an agent who has a knowledge base represented by a logic program.",
                "Then, we introduce methods of constructing counter-proposals in response to proposals made by an agent.",
                "To this end, we combine the techniques of extended abduction in artificial intelligence and <br>relaxation</br> in cooperative query answering for databases.",
                "These techniques are respectively used for producing conditional proposals and neighborhood proposals in the process of negotiation.",
                "We provide a negotiation protocol based on the exchange of these proposals and develop procedures for computing new proposals.",
                "Categories and Subject Descriptors F.4.1 [Mathematical Logic]: Logic and constraint programming;; I.2.11 [Distributed Artificial Intelligence]: Multiagent systems General Terms Theory 1.",
                "INTRODUCTION Automated negotiation has been received increasing attention in multi-agent systems, and a number of frameworks have been proposed in different contexts ([1, 2, 3, 5, 10, 11, 13, 14], for instance).",
                "Negotiation usually proceeds in a series of rounds and each agent makes a proposal at every round.",
                "An agent that received a proposal responds in two ways.",
                "One is a critique which is a remark as to whether or not (parts of) the proposal is accepted.",
                "The other is a counter-proposal which is an alternative proposal made in response to a previous proposal [13].",
                "To see these proposals in one-to-one negotiation, suppose the following negotiation dialogue between a buyer agent B and a seller agent S. (Bi (or Si) represents an utterance of B (or S) in the i-th round.)",
                "B1: I want to buy a personal computer of the brand b1, with the specification of CPU:1GHz, Memory:512MB, HDD: 80GB, and a DVD-RW driver.",
                "I want to get it at the price under 1200 USD.",
                "S1: We can provide a PC with the requested specification if you pay for it by cash.",
                "In this case, however, service points are not added for this special discount.",
                "B2: I cannot pay it by cash.",
                "S2: In a normal price, the requested PC costs 1300 USD.",
                "B3: I cannot accept the price.",
                "My budget is under 1200 USD.",
                "S3: We can provide another computer with the requested specification, except that it is made by the brand b2.",
                "The price is exactly 1200 USD.",
                "B4: I do not want a PC of the brand b2.",
                "Instead, I can downgrade a driver from DVD-RW to CD-RW in my initial proposal.",
                "S4: Ok, I accept your offer.",
                "In this dialogue, in response to the opening proposal B1, the counter-proposal S1 is returned.",
                "In the rest of the dialogue, B2, B3, S4 are critiques, while S2, S3, B4 are counterproposals.",
                "Critiques are produced by evaluating a proposal in a knowledge base of an agent.",
                "In contrast, making counter-proposals involves generating an alternative proposal which is more favorable to the responding agent than the original one.",
                "It is known that there are two ways of producing counterproposals: extending the initial proposal or amending part of the initial proposal.",
                "According to [13], the first type appears in the dialogue: A: I propose that you provide me with service X.",
                "B: I propose that I provide you with service X if you provide me with service Z.",
                "The second type is in the dialogue: A: I propose that I provide you with service Y if you provide me with service X.",
                "B: I propose that I provide you with service X if you provide me with service Z.",
                "A negotiation proceeds by iterating such give-andtake dialogues until it reaches an agreement/disagreement.",
                "In those dialogues, agents generate (counter-)proposals by reasoning on their own goals or objectives.",
                "The objective of the agent A in the above dialogues is to obtain service X.",
                "The agent B proposes conditions to provide the service.",
                "In the process of negotiation, however, it may happen that agents are obliged to weaken or change their initial goals to reach a negotiated compromise.",
                "In the dialogue of 1022 978-81-904262-7-5 (RPS) c 2007 IFAAMAS a buyer agent and a seller agent presented above, a buyer agent changes its initial goal by downgrading a driver from DVD-RW to CD-RW.",
                "Such behavior is usually represented as specific meta-knowledge of an agent or specified as negotiation protocols in particular problems.",
                "Currently, there is no computational logic for automated negotiation which has general inference rules for producing (counter-)proposals.",
                "The purpose of this paper is to mechanize a process of building (counter-)proposals in one-to-one negotiation dialogues.",
                "We suppose an agent who has a knowledge base represented by a logic program.",
                "We then introduce methods for generating three different types of proposals.",
                "First, we use the technique of extended abduction in artificial intelligence [8, 15] to construct a conditional proposal as an extension of the original one.",
                "Second, we use the technique of <br>relaxation</br> in cooperative query answering for databases [4, 6] to construct a neighborhood proposal as an amendment of the original one.",
                "Third, combining extended abduction and <br>relaxation</br>, conditional neighborhood proposals are constructed as amended extensions of the original proposal.",
                "We develop a negotiation protocol between two agents based on the exchange of these counter-proposals and critiques.",
                "We also provide procedures for computing proposals in logic programming.",
                "This paper is organized as follows.",
                "Section 2 introduces a logical framework used in this paper.",
                "Section 3 presents methods for constructing proposals, and provides a negotiation protocol.",
                "Section 4 provides methods for computing proposals in logic programming.",
                "Section 5 discusses related works, and Section 6 concludes the paper. 2.",
                "PRELIMINARIES Logic programs considered in this paper are extended disjunctive programs (EDP) [7].",
                "An EDP (or simply a program) is a set of rules of the form: L1 ; · · · ; Ll ← Ll+1 , . . . , Lm, not Lm+1 , . . . , not Ln (n ≥ m ≥ l ≥ 0) where each Li is a positive/negative literal, i.e., A or ¬A for an atom A, and not is negation as failure (NAF). not L is called an NAF-literal.",
                "The symbol ; represents disjunction.",
                "The left-hand side of the rule is the head, and the right-hand side is the body.",
                "For each rule r of the above form, head(r), body+ (r) and body− (r) denote the sets of literals {L1, . . . , Ll}, {Ll+1, . . . , Lm}, and {Lm+1, . . . , Ln}, respectively.",
                "Also, not body− (r) denotes the set of NAF-literals {not Lm+1, . . . , not Ln}.",
                "A disjunction of literals and a conjunction of (NAF-)literals in a rule are identified with its corresponding sets of literals.",
                "A rule r is often written as head(r) ← body+ (r), not body− (r) or head(r) ← body(r) where body(r) = body+ (r)∪not body− (r).",
                "A rule r is disjunctive if head(r) contains more than one literal.",
                "A rule r is an integrity constraint if head(r) = ∅; and r is a fact if body(r) = ∅.",
                "A program is NAF-free if no rule contains NAF-literals.",
                "Two rules/literals are identified with respect to variable renaming.",
                "A substitution is a mapping from variables to terms θ = {x1/t1, . . . , xn/tn}, where x1, . . . , xn are distinct variables and each ti is a term distinct from xi.",
                "Given a conjunction G of (NAF-)literals, Gθ denotes the conjunction obtained by applying θ to G. A program, rule, or literal is ground if it contains no variable.",
                "A program P with variables is a shorthand of its ground instantiation Ground(P), the set of ground rules obtained from P by substituting variables in P by elements of its Herbrand universe in every possible way.",
                "The semantics of an EDP is defined by the answer set semantics [7].",
                "Let Lit be the set of all ground literals in the language of a program.",
                "Suppose a program P and a set of literals S(⊆ Lit).",
                "Then, the reduct P S is the program which contains the ground rule head(r) ← body+ (r) iff there is a rule r in Ground(P) such that body− (r)∩S = ∅.",
                "Given an NAF-free EDP P, Cn(P) denotes the smallest set of ground literals which is (i) closed under P, i.e., for every ground rule r in Ground(P), body(r) ⊆ Cn(P) implies head(r) ∩ Cn(P) = ∅; and (ii) logically closed, i.e., it is either consistent or equal to Lit.",
                "Given an EDP P and a set S of literals, S is an answer set of P if S = Cn(P S ).",
                "A program has none, one, or multiple answer sets in general.",
                "An answer set is consistent if it is not Lit.",
                "A program P is consistent if it has a consistent answer set; otherwise, P is inconsistent.",
                "Abductive logic programming [9] introduces a mechanism of hypothetical reasoning to logic programming.",
                "An abductive framework used in this paper is the extended abduction introduced by Inoue and Sakama [8, 15].",
                "An abductive program is a pair P, H where P is an EDP and H is a set of literals called abducibles.",
                "When a literal L ∈ H contains variables, any instance of L is also an abducible.",
                "An abductive program P, H is consistent if P is consistent.",
                "Throughout the paper, abductive programs are assumed to be consistent unless stated otherwise.",
                "Let G = L1, . . . , Lm, not Lm+1, . . . , not Ln be a conjunction, where all variables in G are existentially quantified at the front and range-restricted, i.e., every variable in Lm+1, . . . , Ln appears in L1, . . . , Lm.",
                "A set S of ground literals satisfies the conjunction G if { L1θ, . . . , Lmθ } ⊆ S and { Lm+1θ, . . . , Lnθ }∩ S = ∅ for some ground instance Gθ with a substitution θ.",
                "Let P, H be an abductive program and G a conjunction as above.",
                "A pair (E, F) is an explanation of an observation G in P, H if1 1. (P \\ F) ∪ E has an answer set which satisfies G, 2. (P \\ F) ∪ E is consistent, 3.",
                "E and F are sets of ground literals such that E ⊆ H\\P and F ⊆ H ∩ P. When (P \\ F) ∪ E has an answer set S satisfying the above three conditions, S is called a belief set of an abductive program P, H satisfying G (with respect to (E, F)).",
                "Note that if P has a consistent answer set S satisfying G, S is also a belief set of P, H satisfying G with respect to (E, F) = (∅, ∅).",
                "Extended abduction introduces/removes hypotheses to/from a program to explain an observation.",
                "Note that normal abduction (as in [9]) considers only introducing hypotheses to explain an observation.",
                "An explanation (E, F) of an observation G is called minimal if for any explanation (E , F ) of G, E ⊆ E and F ⊆ F imply E = E and F = F. Example 2.1.",
                "Consider the abductive program P, H : P : flies(x) ← bird(x), not ab(x) , ab(x) ← broken-wing(x) , bird(tweety) ← , bird(opus) ← , broken-wing(tweety) ← .",
                "H : broken-wing(x) .",
                "The observation G = flies(tweety) has the minimal explanation (E, F) = (∅, {broken-wing(tweety)}). 1 This defines credulous explanations [15].",
                "Skeptical explanations are used in [8].",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1023 3.",
                "NEGOTIATION 3.1 Conditional Proposals by Abduction We suppose an agent who has a knowledge base represented by an abductive program P, H .",
                "A program P consists of two types of knowledge, belief B and desire D, where B represents objective knowledge of an agent, while D represents subjective knowledge in general.",
                "We define P = B ∪ D, but do not distinguish B and D if such distinction is not important in the context.",
                "In contrast, abducibles H are used for representing permissible conditions to make a compromise in the process of negotiation.",
                "Definition 3.1.",
                "A proposal G is a conjunction of literals and NAF-literals: L1, . . . , Lm, not Lm+1, . . . , not Ln where every variable in G is existentially quantified at the front and range-restricted.",
                "In particular, G is called a critique if G = accept or G = reject where accept and reject are the reserved propositions.",
                "A counter-proposal is a proposal made in response to a proposal.",
                "Definition 3.2.",
                "A proposal G is accepted in an abductive program P, H if P has an answer set satisfying G. When a proposal is not accepted, abduction is used for seeking conditions to make it acceptable.",
                "Definition 3.3.",
                "Let P, H be an abductive program and G a proposal.",
                "If (E, F) is a minimal explanation of Gθ for some substitution θ in P, H , the conjunction G : Gθ, E, not F is called a conditional proposal (for G), where E, not F represents the conjunction: A1, . . . , Ak, not Ak+1, . . . , not Al for E = {A1, . . . , Ak} and F = { Ak+1, . . . , Al }.",
                "Proposition 3.1.",
                "Let P, H be an abductive program and G a proposal.",
                "If G is a conditional proposal, there is a belief set S of P, H satisfying G .",
                "Proof.",
                "When G = Gθ, E, not F, (P \\ F) ∪ E has a consistent answer set S satisfying Gθ and E ∩ F = ∅.",
                "In this case, S satisfies Gθ, E, not F. A conditional proposal G provides a minimal requirement for accepting the proposal G. If Gθ has multiple minimal explanations, several conditional proposals exist accordingly.",
                "When (E, F) = (∅, ∅), a conditional proposal is used as a new proposal made in response to the proposal G. Example 3.1.",
                "An agent seeks a position of a research assistant at the computer department of a university with the condition that the salary is at least 50,000 USD per year.",
                "The agent makes his/her request as the proposal:2 G = assist(compt dept), salary(x), x ≥ 50, 000.",
                "The university has the abductive program P, H : P : salary(40, 000) ← assist(compt dept), not has PhD, salary(60, 000) ← assist(compt dept), has PhD, salary(50, 000) ← assist(math dept), salary(55, 000) ← system admin(compt dept), 2 For notational convenience, we often include mathematical (in)equations in proposals/programs.",
                "They are written by literals, for instance, x ≥ y by geq(x, y) with a suitable definition of the predicate geq. employee(x) ← assist(x), employee(x) ← system admin(x), assist(compt dept); assist(math dept) ; system admin(compt dept) ←, H : has PhD, where available positions are represented by disjunction.",
                "According to P, the base salary of a research assistant at the computer department is 40,000 USD, but if he/she has PhD, it is 60,000 USD.",
                "In this case, (E, F) = ({has PhD}, ∅) becomes the minimal explanation of Gθ = assist(compt dept), salary(60, 000) with θ = { x/60, 000 }.",
                "Then, the conditional proposal made by the university becomes assist(compt dept), salary(60, 000), has PhD . 3.2 Neighborhood Proposals by <br>relaxation</br> When a proposal is unacceptable, an agent tries to construct a new counter-proposal by weakening constraints in the initial proposal.",
                "We use techniques of <br>relaxation</br> for this purpose.",
                "<br>relaxation</br> is used as a technique of cooperative query answering in databases [4, 6].",
                "When an original query fails in a database, <br>relaxation</br> expands the scope of the query by relaxing the constraints in the query.",
                "This allows the database to return neighborhood answers which are related to the original query.",
                "We use the technique for producing proposals in the process of negotiation.",
                "Definition 3.4.",
                "Let P, H be an abductive program and G a proposal.",
                "Then, G is relaxed to G in the following three ways: Anti-instantiation: Construct G such that G θ = G for some substitution θ.",
                "Dropping conditions: Construct G such that G ⊂ G. Goal replacement: If G is a conjunction G1, G2, where G1 and G2 are conjunctions, and there is a rule L ← G1 in P such that G1θ = G1 for some substitution θ, then build G as Lθ, G2.",
                "Here, Lθ is called a replaced literal.",
                "In each case, every variable in G is existentially quantified at the front and range-restricted.",
                "Anti-instantiation replaces constants (or terms) with fresh variables.",
                "Dropping conditions eliminates some conditions in a proposal.",
                "Goal replacement replaces the condition G1 in G with a literal Lθ in the presence of a rule L ← G1 in P under the condition G1θ = G1.",
                "All these operations generalize proposals in different ways.",
                "Each G obtained by these operations is called a <br>relaxation</br> of G. It is worth noting that these operations are also used in the context of inductive generalization [12].",
                "The relaxed proposal can produce new offers which are neighbor to the original proposal.",
                "Definition 3.5.",
                "Let P, H be an abductive program and G a proposal. 1.",
                "Let G be a proposal obtained by anti-instantiation.",
                "If P has an answer set S which satisfies G θ for some substitution θ and G θ = G, G θ is called a neighborhood proposal by anti-instantiation. 2.",
                "Let G be a proposal obtained by dropping conditions.",
                "If P has an answer set S which satisfies G θ for some substitution θ, G θ is called a neighborhood proposal by dropping conditions. 1024 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.",
                "Let G be a proposal obtained by goal replacement.",
                "For a replaced literal L ∈ G and a rule H ← B in P such that L = Hσ and (G \\ {L}) ∪ Bσ = G for some substitution σ, put G = (G \\ {L}) ∪ Bσ.",
                "If P has an answer set S which satisfies G θ for some substitution θ, G θ is called a neighborhood proposal by goal replacement.",
                "Example 3.2. (cont.",
                "Example 3.1) Given the proposal G = assist(compt dept), salary(x), x ≥ 50, 000, • G1 = assist(w), salary(x), x ≥ 50, 000 is produced by substituting compt dept with a variable w. As G1θ1 = assist(math dept), salary(50, 000) with θ1 = { w/math dept } is satisfied by an answer set of P, G1θ1 becomes a neighborhood proposal by anti-instantiation. • G2 = assist(compt dept), salary(x) is produced by dropping the salary condition x ≥ 50, 000.",
                "As G2θ2 = assist(compt dept), salary(40, 000) with θ2 = { x/40, 000 } is satisfied by an answer set of P, G2θ2 becomes a neighborhood proposal by dropping conditions. • G3 = employee(compt dept), salary(x), x ≥ 50, 000 is produced by replacing assist(compt dept) with employee(compt dept) using the rule employee(x) ← assist(x) in P. By G3 and the rule employee(x) ← system admin(x) in P, G3 = sys admin(compt dept), salary(x), x ≥ 50, 000 is produced.",
                "As G3 θ3 = sys admin(compt dept), salary(55, 000) with θ3 = { x/55, 000 } is satisfied by an answer set of P, G3 θ3 becomes a neighborhood proposal by goal replacement.",
                "Finally, extended abduction and <br>relaxation</br> are combined to produce conditional neighborhood proposals.",
                "Definition 3.6.",
                "Let P, H be an abductive program and G a proposal. 1.",
                "Let G be a proposal obtained by either anti-instantiation or dropping conditions.",
                "If (E, F) is a minimal explanation of G θ(= G) for some substitution θ, the conjunction G θ, E, not F is called a conditional neighborhood proposal by anti-instantiation/dropping conditions. 2.",
                "Let G be a proposal obtained by goal replacement.",
                "Suppose G as in Definition 3.5(3).",
                "If (E, F) is a minimal explanation of G θ for some substitution θ, the conjunction G θ, E, not F is called a conditional neighborhood proposal by goal replacement.",
                "A conditional neighborhood proposal reduces to a neighborhood proposal when (E, F) = (∅, ∅). 3.3 Negotiation Protocol A negotiation protocol defines how to exchange proposals in the process of negotiation.",
                "This section presents a negotiation protocol in our framework.",
                "We suppose one-to-one negotiation between two agents who have a common ontology and the same language for successful communication.",
                "Definition 3.7.",
                "A proposal L1, ..., Lm, not Lm+1, ..., not Ln violates an integrity constraint ← body+ (r), not body− (r) if for any substitution θ, there is a substitution σ such that body+ (r)σ ⊆ { L1θ, . . . , Lmθ }, body− (r)σ∩{ L1θ, . . . , Lmθ } = ∅, and body− (r)σ ⊆ { Lm+1θ, . . . , Lnθ }.",
                "Integrity constraints are conditions which an agent should satisfy, so that they are used to explain why an agent does not accept a proposal.",
                "A negotiation proceeds in a series of rounds.",
                "Each i-th round (i ≥ 1) consists of a proposal Gi 1 made by one agent Ag1 and another proposal Gi 2 made by the other agent Ag2.",
                "Definition 3.8.",
                "Let P1, H1 be an abductive program of an agent Ag1 and Gi 2 a proposal made by Ag2 at the i-th round.",
                "A critique set of Ag1 (at the i-th round) is a set CSi 1(P1, Gj 2) = CSi−1 1 (P1, Gj−1 2 ) ∪ { r | r is an integrity constraint in P1 and Gj 2 violates r } where j = i − 1 or i, and CS0 1 (P1, G0 2) = CS1 1 (P1, G0 2) = ∅.",
                "A critique set of an agent Ag1 accumulates integrity constraints which are violated by proposals made by another agent Ag2.",
                "CSi 2(P2, Gj 1) is defined in the same manner.",
                "Definition 3.9.",
                "Let Pk, Hk be an abductive program of an agent Agk and Gj a proposal, which is not a critique, made by any agent at the j(≤ i)-th round.",
                "A negotiation set of Agk (at the i-th round) is a triple NSi k = (Si c, Si n, Si cn), where Si c is the set of conditional proposals, Si n is the set of neighborhood proposals, and Si cn is the set of conditional neighborhood proposals, produced by Gj and Pk, Hk .",
                "A negotiation set represents the space of possible proposals made by an agent.",
                "Si x (x ∈ {c, n, cn}) accumulates proposals produced by Gj (1 ≤ j ≤ i) according to Definitions 3.3, 3.5, and 3.6.",
                "Note that an agent can construct counter-proposals by modifying its own previous proposals or another agents proposals.",
                "An agent Agk accumulates proposals that are made by Agk but are rejected by another agent, in the failed proposal set FP i k (at the i-th round), where FP 0 k = ∅.",
                "Suppose two agents Ag1 and Ag2 who have abductive programs P1, H1 and P2, H2 , respectively.",
                "Given a proposal G1 1 which is satisfied by an answer set of P1, a negotiation starts.",
                "In response to the proposal Gi 1 made by Ag1 at the i-th round, Ag2 behaves as follows. 1.",
                "If Gi 1 = accept, an agreement is reached and negotiation ends in success. 2.",
                "Else if Gi 1 = reject, put FP i 2 = FPi−1 2 ∪{Gi−1 2 } where {G0 2} = ∅.",
                "Proceed to the step 4(b). 3.",
                "Else if P2 has an answer set satisfying Gi 1, Ag2 returns Gi 2 = accept to Ag1.",
                "Negotiation ends in success. 4.",
                "Otherwise, Ag2 behaves as follows.",
                "Put FP i 2 = FPi−1 2 . (a) If Gi 1 violates an integrity constraint in P2, return the critique Gi 2 = reject to Ag1, together with the critique set CSi 2(P2, Gi 1). (b) Otherwise, construct NSi 2 as follows. (i) Produce Si c. Let μ(Si c) = { p | p ∈ Si c \\ FPi 2 and p satisfies the constraints in CSi 1(P1, Gi−1 2 )}.",
                "If μ(Si c) = ∅, select one from μ(Si c) and propose it as Gi 2 to Ag1; otherwise, go to (ii). (ii) Produce Si n. If μ(Si n) = ∅, select one from μ(Si n) and propose it as Gi 2 to Ag1; otherwise, go to (iii). (iii) Produce Si cn.",
                "If μ(Si cn) = ∅, select one from μ(Si cn) and propose it as Gi 2 to Ag1; otherwise, negotiation ends in failure.",
                "This means that Ag2 can make no counter-proposal or every counterproposal made by Ag2 is rejected by Ag1.",
                "In the step 4(a), Ag2 rejects the proposal Gi 1 and returns the reason of rejection as a critique set.",
                "This helps for Ag1 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1025 in preparing a next counter-proposal.",
                "In the step 4(b), Ag2 constructs a new proposal.",
                "In its construction, Ag2 should take care of the critique set CSi 1(P1, Gi−1 2 ), which represents integrity constraints, if any, accumulated in previous rounds, that Ag1 must satisfy.",
                "Also, FP i 2 is used for removing proposals which have been rejected.",
                "Construction of Si x (x ∈ {c, n, cn}) in NSi 2 is incrementally done by adding new counter-proposals produced by Gi 1 or Gi−1 2 to Si−1 x .",
                "For instance, Si n in NSi 2 is computed as Si n = Si−1 n ∪{ p | p is a neighborhood proposal made by Gi 1 } ∪ { p | p is a neighborhood proposal made by Gi−1 2 }, where S0 n = ∅.",
                "That is, Si n is constructed from Si−1 n by adding new proposals which are obtained by modifying the proposal Gi 1 made by Ag1 at the i-th round or modifying the proposal Gi−1 2 made by Ag2 at the (i − 1)-th round.",
                "Si c and Si cn are obtained as well.",
                "In the above protocol, an agent produces Si c at first, secondly Si n, and finally Si cn.",
                "This strategy seeks conditions which satisfy the given proposal, prior to neighborhood proposals which change the original one.",
                "Another strategy, which prefers neighborhood proposals to conditional ones, is also considered.",
                "Conditional neighborhood proposals are to be considered in the last place, since they differ from the original one to the maximal extent.",
                "The above protocol produces the candidate proposals in Si x for each x ∈ {c, n, cn} at once.",
                "We can consider a variant of the protocol in which each proposal in Si x is constructed one by one (see Example 3.3).",
                "The above protocol is repeatedly applied to each one of the two negotiating agents until a negotiation ends in success/failure.",
                "Formally, the above negotiation protocol has the following properties.",
                "Theorem 3.2.",
                "Let Ag1 and Ag2 be two agents having abductive programs P1, H1 and P2, H2 , respectively. 1.",
                "If P1, H1 and P2, H2 are function-free (i.e., both Pi and Hi contain no function symbol), any negotiation will terminate. 2.",
                "If a negotiation terminates with agreement on a proposal G, both P1, H1 and P2, H2 have belief sets satisfying G. Proof. 1.",
                "When an abductive program is function-free, abducibles and negotiation sets are both finite.",
                "Moreover, if a proposal is once rejected, it is not proposed again by the function μ.",
                "Thus, negotiation will terminate in finite steps. 2.",
                "When a proposal G is made by Ag1, P1, H1 has a belief set satisfying G. If the agent Ag2 accepts the proposal G, it is satisfied by an answer set of P2 which is also a belief set of P2, H2 .",
                "Example 3.3.",
                "Suppose a buying-selling situation in the introduction.",
                "A seller agent has the abductive program Ps, Hs in which Ps consists of belief Bs and desire Ds: Bs : pc(b1, 1G, 512M, 80G) ; pc(b2, 1G, 512M, 80G) ←,(1) dvd-rw ; cd-rw ←, (2) Ds : normal price(1300) ← pc(b1, 1G, 512M, 80G), dvd-rw, (3) normal price(1200) ← pc(b1, 1G, 512M, 80G), cd-rw, (4) normal price(1200) ← pc(b2, 1G, 512M, 80G), dvd-rw, (5) price(x) ← normal price(x), add point, (6) price(x ∗ 0.9) ← normal price(x), pay cash, not add point,(7) add point ←, (8) Hs : add point, pay cash.",
                "Here, (1) and (2) represent selection of products.",
                "The atom pc(b1, 1G, 512M, 80G) represents that the seller agent has a PC of the brand b1 such that CPU is 1GHz, memory is 512MB, and HDD is 80GB.",
                "Prices of products are represented as desire of the seller.",
                "The rules (3) - (5) are normal prices of products.",
                "A normal price is a selling price on the condition that service points are added (6).",
                "On the other hand, a discount price is applied if the paying method is cash and no service point is added (7).",
                "The fact (8) represents the addition of service points.",
                "This service would be withdrawn in case of discount prices, so add point is specified as an abducible.",
                "A buyer agent has the abductive program Pb, Hb in which Pb consists of belief Bb and desire Db: Bb : drive ← dvd-rw, (9) drive ← cd-rw, (10) price(x) ←, (11) Db : pc(b1, 1G, 512M, 80G) ←, (12) dvd-rw ←, (13) cd-rw ← not dvd-rw, (14) ← pay cash, (15) ← price(x), x > 1200, (16) Hb : dvd-rw.",
                "Rules (12) - (16) are the buyers desire.",
                "Among them, (15) and (16) impose constraints for buying a PC.",
                "A DVD-RW is specified as an abducible which is subject to concession. (1st round) First, the following proposal is given by the buyer agent: G1 b : pc(b1, 1G, 512M, 80G), dvd-rw, price(x), x ≤ 1200.",
                "As Ps has no answer set which satisfies G1 b , the seller agent cannot accept the proposal.",
                "The seller takes an action of making a counter-proposal and performs abduction.",
                "As a result, the seller finds the minimal explanation (E, F) = ({ pay cash }, { add point }) which explains G1 b θ1 with θ1 = { x/1170 }.",
                "The seller constructs the conditional proposal: G1 s : pc(b1, 1G, 512M, 80G), dvd-rw, price(1170), pay cash, not add point and offers it to the buyer. (2nd round) The buyer does not accept G1 s because he/she cannot pay it by cash (15).",
                "The buyer then returns the critique G2 b = reject to the seller, together with the critique set CS2 b (Pb, G1 s) = {(15)}.",
                "In response to this, the seller tries to make another proposal which satisfies the constraint in this critique set.",
                "As G1 s is stored in FP 2 s and no other conditional proposal satisfying the buyers requirement exists, the seller produces neighborhood proposals.",
                "He/she relaxes G1 b by dropping x ≤ 1200 in the condition, and produces pc(b1, 1G, 512M, 80G), dvd-rw, price(x).",
                "As Ps has an answer set which satisfies G2 s : pc(b1, 1G, 512M, 80G), dvd-rw, price(1300), 1026 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) the seller offers G2 s as a new counter-proposal. (3rd round) The buyer does not accept G2 s because he/she cannot pay more than 1200USD (16).",
                "The buyer again returns the critique G3 b = reject to the seller, together with the critique set CS3 b (Pb, G2 s) = CS2 b (Pb, G1 s) ∪ {(16)}.",
                "The seller then considers another proposal by replacing b1 with a variable w, G1 b now becomes pc(w, 1G, 512M, 80G), dvd-rw, price(x), x ≤ 1200.",
                "As Ps has an answer set which satisfies G3 s : pc(b2, 1G, 512M, 80G), dvd-rw, price(1200), the seller offers G3 s as a new counter-proposal. (4th round) The buyer does not accept G3 s because a PC of the brand b2 is out of his/her interest and Pb has no answer set satisfying G3 s. Then, the buyer makes a concession by changing his/her original goal.",
                "The buyer relaxes G1 b by goal replacement using the rule (9) in Pb, and produces pc(b1, 1G, 512M, 80G), drive, price(x), x ≤ 1200.",
                "Using (10), the following proposal is produced: pc(b1, 1G, 512M, 80G), cd-rw, price(x), x ≤ 1200.",
                "As Pb \\ { dvd-rw } has a consistent answer set satisfying the above proposal, the buyer proposes the conditional neighborhood proposal G4 b : pc(b1, 1G, 512M, 80G), cd-rw, not dvd-rw, price(x), x ≤ 1200 to the seller agent.",
                "Since Ps also has an answer set satisfying G4 b , the seller accepts it and sends the message G4 s = accept to the buyer.",
                "Thus, the negotiation ends in success. 4.",
                "COMPUTATION In this section, we provide methods of computing proposals in terms of answer sets of programs.",
                "We first introduce some definitions from [15].",
                "Definition 4.1.",
                "Given an abductive program P, H , the set UR of update rules is defined as: UR = { L ← not L, L ← not L | L ∈ H } ∪ { +L ← L | L ∈ H \\ P } ∪ { −L ← not L | L ∈ H ∩ P } , where L, +L, and −L are new atoms uniquely associated with every L ∈ H. The atoms +L and −L are called update atoms.",
                "By the definition, the atom L becomes true iff L is not true.",
                "The pair of rules L ← not L and L ← not L specify the situation that an abducible L is true or not.",
                "When p(x) ∈ H and p(a) ∈ P but p(t) ∈ P for t = a, the rule +L ← L precisely becomes +p(t) ← p(t) for any t = a.",
                "In this case, the rule is shortly written as +p(x) ← p(x), x = a.",
                "Generally, the rule becomes +p(x) ← p(x), x = t1, . . . , x = tn for n such instances.",
                "The rule +L ← L derives the atom +L if an abducible L which is not in P is to be true.",
                "In contrast, the rule −L ← not L derives the atom −L if an abducible L which is in P is not to be true.",
                "Thus, update atoms represent the change of truth values of abducibles in a program.",
                "That is, +L means the introduction of L, while −L means the deletion of L. When an abducible L contains variables, the associated update atom +L or −L is supposed to have exactly the same variables.",
                "In this case, an update atom is semantically identified with its ground instances.",
                "The set of all update atoms associated with the abducibles in H is denoted by UH, and UH = UH+ ∪ UH− where UH+ (resp.",
                "UH− ) is the set of update atoms of the form +L (resp. −L).",
                "Definition 4.2.",
                "Given an abductive program P, H , its update program UP is defined as the program UP = (P \\ H) ∪ UR .",
                "An answer set S of UP is called U-minimal if there is no answer set T of UP such that T ∩ UH ⊂ S ∩ UH.",
                "By the definition, U-minimal answer sets exist whenever UP has answer sets.",
                "Update programs are used for computing (minimal) explanations of an observation.",
                "Given an observation G as a conjunction of literals and NAF-literals possibly containing variables, we introduce a new ground literal O together with the rule O ← G. In this case, O has an explanation (E, F) iff G has the same explanation.",
                "With this replacement, an observation is assumed to be a ground literal without loss of generality.",
                "In what follows, E+ = { +L | L ∈ E } and F − = { −L | L ∈ F } for E ⊆ H and F ⊆ H. Proposition 4.1. ([15]) Let P, H be an abductive program, UP its update program, and G a ground literal representing an observation.",
                "Then, a pair (E, F) is an explanation of G iff UP ∪ { ← not G } has a consistent answer set S such that E+ = S ∩ UH+ and F− = S ∩ UH− .",
                "In particular, (E, F) is a minimal explanation iff S is a U-minimal answer set.",
                "Example 4.1.",
                "To explain the observation G = flies(t) in the program P of Example 2.1, first construct the update program UP of P:3 UP : flies(x) ← bird(x), not ab(x), ab(x) ← broken-wing(x) , bird(t) ← , bird(o) ← , broken-wing(x) ← not broken-wing(x), broken-wing(x) ← not broken-wing(x), +broken-wing(x) ← broken-wing(x), x = t , −broken-wing(t) ← not broken-wing(t) .",
                "Next, consider the program UP ∪ { ← not flies(t) }.",
                "It has the single U-minimal answer set: S = { bird(t), bird(o), flies(t), flies(o), broken-wing(t), broken-wing(o), −broken-wing(t) }.",
                "The unique minimal explanation (E, F) = (∅, {broken-wing(t)}) of G is expressed by the update atom −broken-wing(t) in S ∩ UH− .",
                "Proposition 4.2.",
                "Let P, H be an abductive program and G a ground literal representing an observation.",
                "If P ∪ { ← not G } has a consistent answer set S, G has the minimal explanation (E, F) = (∅, ∅) and S satisfies G. Now we provide methods for computing (counter-)proposals.",
                "First, conditional proposals are computed as follows. input : an abductive program P, H , a proposal G; output : a set Sc of proposals.",
                "If G is a ground literal, compute its minimal explanation (E, F) in P, H using the update program.",
                "Put G, E, not F in Sc.",
                "Else if G is a conjunction possibly containing variables, consider the abductive program 3 t represents tweety and o represents opus.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1027 P ∪{ O ← G }, H with a ground literal O. Compute a minimal explanation of O in P ∪ { O ← G }, H using its update program.",
                "If O has a minimal explanation (E, F) with a substitution θ for variables in G, put Gθ, E, not F in Sc.",
                "Next, neighborhood proposals are computed as follows. input : an abductive program P, H , a proposal G; output : a set Sn of proposals. % neighborhood proposals by anti-instantiation; Construct G by anti-instantiation.",
                "For a ground literal O, if P ∪ { O ← G } ∪ { ← not O } has a consistent answer set satisfying G θ with a substitution θ and G θ = G, put G θ in Sn. % neighborhood proposals by dropping conditions; Construct G by dropping conditions.",
                "If G is a ground literal and the program P ∪ { ← not G } has a consistent answer set, put G in Sn.",
                "Else if G is a conjunction possibly containing variables, do the following.",
                "For a ground literal O, if P ∪{ O ← G }∪{ ← not O } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn. % neighborhood proposals by goal replacement; Construct G by goal replacement.",
                "If G is a ground literal and there is a rule H ← B in P such that G = Hσ and Bσ = G for some substitution σ, put G = Bσ.",
                "If P ∪ { ← not G } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn.",
                "Else if G is a conjunction possibly containing variables, do the following.",
                "For a replaced literal L ∈ G , if there is a rule H ← B in P such that L = Hσ and (G \\ {L}) ∪ Bσ = G for some substitution σ, put G = (G \\ {L}) ∪ Bσ.",
                "For a ground literal O, if P ∪ { O ← G } ∪ { ← not O } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn.",
                "Theorem 4.3.",
                "The set Sc (resp.",
                "Sn) computed above coincides with the set of conditional proposals (resp. neighborhood proposals).",
                "Proof.",
                "The result for Sc follows from Definition 3.3 and Proposition 4.1.",
                "The result for Sn follows from Definition 3.5 and Proposition 4.2.",
                "Conditional neighborhood proposals are computed by combining the above two procedures.",
                "Those proposals are computed at each round.",
                "Note that the procedure for computing Sn contains some nondeterministic choices.",
                "For instance, there are generally several candidates of literals to relax in a proposal.",
                "Also, there might be several rules in a program for the usage of goal replacement.",
                "In practice, an agent can prespecify literals in a proposal for possible <br>relaxation</br> or rules in a program for the usage of goal replacement. 5.",
                "RELATED WORK As there are a number of literature on automated negotiation, this section focuses on comparison with negotiation frameworks based on logic and argumentation.",
                "Sadri et al. [14] use abductive logic programming as a representation language of negotiating agents.",
                "Agents negotiate using common dialogue primitives, called dialogue moves.",
                "Each agent has an abductive logic program in which a sequence of dialogues are specified by a program, a dialogue protocol is specified as constraints, and dialogue moves are specified as abducibles.",
                "The behavior of agents is regulated by an observe-think-act cycle.",
                "Once a dialogue move is uttered by an agent, another agent that observed the utterance thinks and acts using a proof procedure.",
                "Their approach and ours both employ abductive logic programming as a platform of agent reasoning, but the use of it is quite different.",
                "First, they use abducibles to specify dialogue primitives of the form tell(utterer, receiver, subject, identifier, time), while we use abducibles to specify arbitrary permissible hypotheses to construct conditional proposals.",
                "Second, a program pre-specifies a plan to carry out in order to achieve a goal, together with available/missing resources in the context of resource-exchanging problems.",
                "This is in contrast with our method in which possible counter-proposals are newly constructed in response to a proposal made by an agent.",
                "Third, they specify a negotiation policy inside a program (as integrity constraints), while we give a protocol independent of individual agents.",
                "They provide an operational model that completely specifies the behavior of agents in terms of agent cycle.",
                "We do not provide such a complete specification of the behavior of agents.",
                "Our primary interest is to mechanize construction of proposals.",
                "Bracciali and Torroni [2] formulate abductive agents that have knowledge in abductive logic programs.",
                "To explain an observation, two agents communicate by exchanging integrity constraints.",
                "In the process of communication, an agent can revise its own integrity constraints according to the information provided by the other agent.",
                "A set IC of integrity constraints relaxes a set IC (or IC tightens IC ) if any observation that can be proved with respect to IC can also be proved with respect to IC .",
                "For instance, IC : ← a, b, c relaxes IC : ← a, b.",
                "Thus, they use <br>relaxation</br> for weakening the constraints in an abductive logic program.",
                "In contrast, we use <br>relaxation</br> for weakening proposals and three different <br>relaxation</br> methods, anti-instantiation, dropping conditions, and goal replacement, are considered.",
                "Their goal is to explain an observation by revising integrity constraints of an agent through communication, while we use integrity constraints for communication to explain critiques and help other agents in making counter-proposals.",
                "Meyer et al. [11] introduce a logical framework for negotiating agents.",
                "They introduce two different modes of negotiation: concession and adaptation.",
                "They provide rational postulates to characterize negotiated outcomes between two agents, and describe methods for constructing outcomes.",
                "They provide logical conditions for negotiated outcomes to satisfy, but they do not describe a process of negotiation nor negotiation protocols.",
                "Moreover, they represent agents by classical propositional theories, which is different from our abductive logic programming framework.",
                "Foo et al. [5] model one-to-one negotiation as a one-time encounter between two extended logic programs.",
                "An agent offers an answer set of its program, and their mutual deal is regarded as a trade on their answer sets.",
                "Starting from the initial agreement set S∩T for an answer set S of an agent and an answer set T of another agent, each agent extends this set to reflect its own demand while keeping consistency with demand of the other agent.",
                "Their algorithm returns new programs having answer sets which are consistent with each other and keep the agreement set.",
                "The work is extended to repeated encounters in [3].",
                "In their framework, two agents exchange answer sets to produce a common belief set, which is different from our framework of exchanging proposals.",
                "There are a number of proposals for negotiation based 1028 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) on argumentation.",
                "An advantage of argumentation-based negotiation is that it constructs a proposal with arguments supporting the proposal [1].",
                "The existence of arguments is useful to convince other agents of reasons why an agent offers (counter-)proposals or returns critiques.",
                "Parsons et al. [13] develop a logic of argumentation-based negotiation among BDI agents.",
                "In one-to-one negotiation, an agent A generates a proposal together with its arguments, and passes it to another agent B.",
                "The proposal is evaluated by B which attempts to build arguments against it.",
                "If it conflicts with Bs interest, B informs A of its objection by sending back its attacking argument.",
                "In response to this, A tries to find an alternative way of achieving its original objective, or a way of persuading B to drop its objection.",
                "If either type of argument can be found, A will submit it to B.",
                "If B finds no reason to reject the new proposal, it will be accepted and the negotiation ends in success.",
                "Otherwise, the process is iterated.",
                "In this negotiation processes, the agent A never changes its original objective, so that negotiation ends in failure if A fails to find an alternative way of achieving the original objective.",
                "In our framework, when a proposal is rejected by another agent, an agent can weaken or change its objective by abduction and <br>relaxation</br>.",
                "Our framework does not have a mechanism of argumentation, but reasons for critiques can be informed by responding critique sets.",
                "Kakas and Moraitis [10] propose a negotiation protocol which integrates abduction within an argumentation framework.",
                "A proposal contains an offer corresponding to the negotiation object, together with supporting information representing conditions under which this offer is made.",
                "Supporting information is computed by abduction and is used for constructing conditional arguments during the process of negotiation.",
                "In their negotiation protocol, when an agent cannot satisfy its own goal, the agent considers the other agents goal and searches for conditions under which the goal is acceptable.",
                "Our present approach differs from theirs in the following points.",
                "First, they use abduction to seek conditions to support arguments, while we use abduction to seek conditions for proposals to accept.",
                "Second, in their negotiation protocol, counter-proposals are chosen among candidates based on preference knowledge of an agent at meta-level, which represents policy under which an agent uses its object-level decision rules according to situations.",
                "In our framework, counter-proposals are newly constructed using abduction and <br>relaxation</br>.",
                "The method of construction is independent of particular negotiation protocols.",
                "As [2, 10, 14], abduction or abductive logic programming used in negotiation is mostly based on normal abduction.",
                "In contrast, our approach is based on extended abduction which can not only introduce hypotheses but remove them from a program.",
                "This is another important difference.",
                "<br>relaxation</br> and neighborhood query answering are devised to make databases cooperative with their users [4, 6].",
                "In this sense, those techniques have the spirit similar to cooperative problem solving in multi-agent systems.",
                "As far as the authors know, however, there is no study which applies those technique to agent negotiation. 6.",
                "CONCLUSION In this paper we proposed a logical framework for negotiating agents.",
                "To construct proposals in the process of negotiation, we combined the techniques of extended abduction and <br>relaxation</br>.",
                "It was shown that these two operations are used for general inference rules in producing proposals.",
                "We developed a negotiation protocol between two agents based on exchange of proposals and critiques, and provided procedures for computing proposals in abductive logic programming.",
                "This enables us to realize automated negotiation on top of the existing answer set solvers.",
                "The present framework does not have a mechanism of selecting an optimal (counter-)proposal among different alternatives.",
                "To compare and evaluate proposals, an agent must have preference knowledge of candidate proposals.",
                "Further elaboration to maximize the utility of agents is left for future study. 7.",
                "REFERENCES [1] L. Amgoud, S. Parsons, and N. Maudet.",
                "Arguments, dialogue, and negotiation.",
                "In: Proc.",
                "ECAI-00, pp. 338-342, IOS Press, 2000. [2] A. Bracciali and P. Torroni.",
                "A new framework for knowledge revision of abductive agents through their interaction.",
                "In: Proc.",
                "CLIMA-IV, Computational Logic in Multi-Agent Systems, LNAI 3259, pp. 159-177, 2004. [3] W. Chen, M. Zhang, and N. Foo.",
                "Repeated negotiation of logic programs.",
                "In: Proc. 7th Workshop on Nonmonotonic Reasoning, Action and Change, 2006. [4] W. W. Chu, Q. Chen, and R.-C. Lee.",
                "Cooperative query answering via type abstraction hierarchy.",
                "In: Cooperating Knowledge Based Systems, S. M. Deen ed., pp. 271-290, Springer, 1990. [5] N. Foo, T. Meyer, Y. Zhang, and D. Zhang.",
                "Negotiating logic programs.",
                "In: Proc. 6th Workshop on Nonmonotonic Reasoning, Action and Change, 2005. [6] T. Gaasterland, P. Godfrey, and J. Minker.",
                "<br>relaxation</br> as a platform for cooperative answering.",
                "Journal of Intelligence Information Systems 1(3/4):293-321, 1992. [7] M. Gelfond and V. Lifschitz.",
                "Classical negation in logic programs and disjunctive databases.",
                "New Generation Computing 9:365-385, 1991. [8] K. Inoue and C. Sakama.",
                "Abductive framework for nonmonotonic theory change.",
                "In: Proc.",
                "IJCAI-95, pp. 204-210, Morgan Kaufmann. [9] A. C. Kakas, R. A. Kowalski, and F. Toni, The role of abduction in logic programming.",
                "In: Handbook of Logic in AI and Logic Programming, D. M. Gabbay, et al. (eds), vol. 5, pp. 235-324, Oxford University Press, 1998. [10] A. C. Kakas and P. Moraitis.",
                "Adaptive agent negotiation via argumentation.",
                "In: Proc.",
                "AAMAS-06, pp. 384-391, ACM Press. [11] T. Meyer, N. Foo, R. Kwok, and D. Zhang.",
                "Logical foundation of negotiation: outcome, concession and adaptation.",
                "In: Proc.",
                "AAAI-04, pp. 293-298, MIT Press. [12] R. S. Michalski.",
                "A theory and methodology of inductive learning.",
                "In: Machine Learning: An Artificial Intelligence Approach, R. S. Michalski, et al. (eds), pp. 83-134, Morgan Kaufmann, 1983. [13] S. Parsons, C. Sierra and N. Jennings.",
                "Agents that reason and negotiate by arguing.",
                "Journal of Logic and Computation, 8(3):261-292, 1988. [14] F. Sadri, F. Toni, and P. Torroni, An abductive logic programming architecture for negotiating agents.",
                "In: Proc. 8th European Conf. on Logics in AI, LNAI 2424, pp. 419-431, Springer, 2002. [15] C. Sakama and K. Inoue.",
                "An abductive framework for computing knowledge base updates.",
                "Theory and Practice of Logic Programming 3(6):671-715, 2003.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1029"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Con este fin, combinamos las técnicas de abducción extendida de inteligencia artificial y \"relajación\" en la respuesta de consultas cooperativas para bases de datos.",
                "En segundo lugar, utilizamos la técnica de \"relajación\" en la respuesta de consultas cooperativas para bases de datos [4, 6] para construir una propuesta de vecindario como enmienda de la original.",
                "Tercero, combinando la abducción extendida y la \"relajación\", las propuestas condicionales del vecindario se construyen como extensiones modificadas de la propuesta original.",
                "Luego, la propuesta condicional realizada por la Universidad se convierte en asistencia (departamento de compt), salario (60, 000), tiene doctorado.3.2 Propuestas del vecindario por \"relajación\" Cuando una propuesta es inaceptable, un agente intenta construir una nueva contrapropuesta al debilitar las limitaciones en la propuesta inicial.",
                "Utilizamos técnicas de \"relajación\" para este propósito.",
                "\"Relajación\" se utiliza como una técnica de respuesta de consultas cooperativas en bases de datos [4, 6].",
                "Cuando una consulta original falla en una base de datos, la \"relajación\" expande el alcance de la consulta relajando las limitaciones en la consulta.",
                "Cada G obtenida por estas operaciones se denomina \"relajación\" de G. Vale la pena señalar que estas operaciones también se usan en el contexto de la generalización inductiva [12].",
                "Finalmente, el secuestro extendido y la \"relajación\" se combinan para producir propuestas condicionales del vecindario.",
                "En la práctica, un agente puede prescribir literales en una propuesta de posible \"relajación\" o reglas en un programa para el uso del reemplazo de objetivos.5.",
                "Por lo tanto, usan \"relajación\" para debilitar las limitaciones en un programa de lógica abductiva.",
                "En contraste, utilizamos la \"relajación\" para debilitar propuestas y tres métodos diferentes de \"relajación\", antiestanciación, condiciones de caída y reemplazo de objetivos.",
                "En nuestro marco, cuando otro agente rechaza una propuesta, un agente puede debilitar o cambiar su objetivo mediante secuestro y \"relajación\".",
                "En nuestro marco, las contrapropuestas se construyen recientemente utilizando el secuestro y la \"relajación\".",
                "La \"relajación\" y la respuesta de consultas del vecindario están diseñadas para hacer que las bases de datos cooperen con sus usuarios [4, 6].",
                "Para construir propuestas en el proceso de negociación, combinamos las técnicas de abducción extendida y \"relajación\".",
                "\"Relajación\" como plataforma para la respuesta cooperativa."
            ],
            "translated_text": "",
            "candidates": [
                "relajación",
                "relajación",
                "relajación",
                "relajación",
                "relajación",
                "relajación",
                "relajación",
                "relajación",
                "relajación",
                "relajación",
                "relajación",
                "Relajación",
                "relajación",
                "relajación",
                "relajación",
                "relajación",
                "relajación",
                "relajación",
                "Relajación",
                "relajación",
                "relajación",
                "relajación",
                "relajación",
                "relajación",
                "relajación",
                "relajación",
                "relajación",
                "relajación",
                "relajación",
                "relajación",
                "relajación",
                "relajación",
                "relajación",
                "relajación",
                "Relajación"
            ],
            "error": []
        },
        "logic program": {
            "translated_key": "programa lógico",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Negotiation by Abduction and Relaxation Chiaki Sakama Dept.",
                "Computer and Communication Sciences Wakayama University Sakaedani, Wakayama 640 8510, Japan sakama@sys.wakayama-u.ac.jp Katsumi Inoue National Institute of Informatics 2-1-2 Hitotsubashi, Chiyoda-ku Tokyo 101 8430, Japan ki@nii.ac.jp ABSTRACT This paper studies a logical framework for automated negotiation between two agents.",
                "We suppose an agent who has a knowledge base represented by a <br>logic program</br>.",
                "Then, we introduce methods of constructing counter-proposals in response to proposals made by an agent.",
                "To this end, we combine the techniques of extended abduction in artificial intelligence and relaxation in cooperative query answering for databases.",
                "These techniques are respectively used for producing conditional proposals and neighborhood proposals in the process of negotiation.",
                "We provide a negotiation protocol based on the exchange of these proposals and develop procedures for computing new proposals.",
                "Categories and Subject Descriptors F.4.1 [Mathematical Logic]: Logic and constraint programming;; I.2.11 [Distributed Artificial Intelligence]: Multiagent systems General Terms Theory 1.",
                "INTRODUCTION Automated negotiation has been received increasing attention in multi-agent systems, and a number of frameworks have been proposed in different contexts ([1, 2, 3, 5, 10, 11, 13, 14], for instance).",
                "Negotiation usually proceeds in a series of rounds and each agent makes a proposal at every round.",
                "An agent that received a proposal responds in two ways.",
                "One is a critique which is a remark as to whether or not (parts of) the proposal is accepted.",
                "The other is a counter-proposal which is an alternative proposal made in response to a previous proposal [13].",
                "To see these proposals in one-to-one negotiation, suppose the following negotiation dialogue between a buyer agent B and a seller agent S. (Bi (or Si) represents an utterance of B (or S) in the i-th round.)",
                "B1: I want to buy a personal computer of the brand b1, with the specification of CPU:1GHz, Memory:512MB, HDD: 80GB, and a DVD-RW driver.",
                "I want to get it at the price under 1200 USD.",
                "S1: We can provide a PC with the requested specification if you pay for it by cash.",
                "In this case, however, service points are not added for this special discount.",
                "B2: I cannot pay it by cash.",
                "S2: In a normal price, the requested PC costs 1300 USD.",
                "B3: I cannot accept the price.",
                "My budget is under 1200 USD.",
                "S3: We can provide another computer with the requested specification, except that it is made by the brand b2.",
                "The price is exactly 1200 USD.",
                "B4: I do not want a PC of the brand b2.",
                "Instead, I can downgrade a driver from DVD-RW to CD-RW in my initial proposal.",
                "S4: Ok, I accept your offer.",
                "In this dialogue, in response to the opening proposal B1, the counter-proposal S1 is returned.",
                "In the rest of the dialogue, B2, B3, S4 are critiques, while S2, S3, B4 are counterproposals.",
                "Critiques are produced by evaluating a proposal in a knowledge base of an agent.",
                "In contrast, making counter-proposals involves generating an alternative proposal which is more favorable to the responding agent than the original one.",
                "It is known that there are two ways of producing counterproposals: extending the initial proposal or amending part of the initial proposal.",
                "According to [13], the first type appears in the dialogue: A: I propose that you provide me with service X.",
                "B: I propose that I provide you with service X if you provide me with service Z.",
                "The second type is in the dialogue: A: I propose that I provide you with service Y if you provide me with service X.",
                "B: I propose that I provide you with service X if you provide me with service Z.",
                "A negotiation proceeds by iterating such give-andtake dialogues until it reaches an agreement/disagreement.",
                "In those dialogues, agents generate (counter-)proposals by reasoning on their own goals or objectives.",
                "The objective of the agent A in the above dialogues is to obtain service X.",
                "The agent B proposes conditions to provide the service.",
                "In the process of negotiation, however, it may happen that agents are obliged to weaken or change their initial goals to reach a negotiated compromise.",
                "In the dialogue of 1022 978-81-904262-7-5 (RPS) c 2007 IFAAMAS a buyer agent and a seller agent presented above, a buyer agent changes its initial goal by downgrading a driver from DVD-RW to CD-RW.",
                "Such behavior is usually represented as specific meta-knowledge of an agent or specified as negotiation protocols in particular problems.",
                "Currently, there is no computational logic for automated negotiation which has general inference rules for producing (counter-)proposals.",
                "The purpose of this paper is to mechanize a process of building (counter-)proposals in one-to-one negotiation dialogues.",
                "We suppose an agent who has a knowledge base represented by a <br>logic program</br>.",
                "We then introduce methods for generating three different types of proposals.",
                "First, we use the technique of extended abduction in artificial intelligence [8, 15] to construct a conditional proposal as an extension of the original one.",
                "Second, we use the technique of relaxation in cooperative query answering for databases [4, 6] to construct a neighborhood proposal as an amendment of the original one.",
                "Third, combining extended abduction and relaxation, conditional neighborhood proposals are constructed as amended extensions of the original proposal.",
                "We develop a negotiation protocol between two agents based on the exchange of these counter-proposals and critiques.",
                "We also provide procedures for computing proposals in logic programming.",
                "This paper is organized as follows.",
                "Section 2 introduces a logical framework used in this paper.",
                "Section 3 presents methods for constructing proposals, and provides a negotiation protocol.",
                "Section 4 provides methods for computing proposals in logic programming.",
                "Section 5 discusses related works, and Section 6 concludes the paper. 2.",
                "PRELIMINARIES Logic programs considered in this paper are extended disjunctive programs (EDP) [7].",
                "An EDP (or simply a program) is a set of rules of the form: L1 ; · · · ; Ll ← Ll+1 , . . . , Lm, not Lm+1 , . . . , not Ln (n ≥ m ≥ l ≥ 0) where each Li is a positive/negative literal, i.e., A or ¬A for an atom A, and not is negation as failure (NAF). not L is called an NAF-literal.",
                "The symbol ; represents disjunction.",
                "The left-hand side of the rule is the head, and the right-hand side is the body.",
                "For each rule r of the above form, head(r), body+ (r) and body− (r) denote the sets of literals {L1, . . . , Ll}, {Ll+1, . . . , Lm}, and {Lm+1, . . . , Ln}, respectively.",
                "Also, not body− (r) denotes the set of NAF-literals {not Lm+1, . . . , not Ln}.",
                "A disjunction of literals and a conjunction of (NAF-)literals in a rule are identified with its corresponding sets of literals.",
                "A rule r is often written as head(r) ← body+ (r), not body− (r) or head(r) ← body(r) where body(r) = body+ (r)∪not body− (r).",
                "A rule r is disjunctive if head(r) contains more than one literal.",
                "A rule r is an integrity constraint if head(r) = ∅; and r is a fact if body(r) = ∅.",
                "A program is NAF-free if no rule contains NAF-literals.",
                "Two rules/literals are identified with respect to variable renaming.",
                "A substitution is a mapping from variables to terms θ = {x1/t1, . . . , xn/tn}, where x1, . . . , xn are distinct variables and each ti is a term distinct from xi.",
                "Given a conjunction G of (NAF-)literals, Gθ denotes the conjunction obtained by applying θ to G. A program, rule, or literal is ground if it contains no variable.",
                "A program P with variables is a shorthand of its ground instantiation Ground(P), the set of ground rules obtained from P by substituting variables in P by elements of its Herbrand universe in every possible way.",
                "The semantics of an EDP is defined by the answer set semantics [7].",
                "Let Lit be the set of all ground literals in the language of a program.",
                "Suppose a program P and a set of literals S(⊆ Lit).",
                "Then, the reduct P S is the program which contains the ground rule head(r) ← body+ (r) iff there is a rule r in Ground(P) such that body− (r)∩S = ∅.",
                "Given an NAF-free EDP P, Cn(P) denotes the smallest set of ground literals which is (i) closed under P, i.e., for every ground rule r in Ground(P), body(r) ⊆ Cn(P) implies head(r) ∩ Cn(P) = ∅; and (ii) logically closed, i.e., it is either consistent or equal to Lit.",
                "Given an EDP P and a set S of literals, S is an answer set of P if S = Cn(P S ).",
                "A program has none, one, or multiple answer sets in general.",
                "An answer set is consistent if it is not Lit.",
                "A program P is consistent if it has a consistent answer set; otherwise, P is inconsistent.",
                "Abductive logic programming [9] introduces a mechanism of hypothetical reasoning to logic programming.",
                "An abductive framework used in this paper is the extended abduction introduced by Inoue and Sakama [8, 15].",
                "An abductive program is a pair P, H where P is an EDP and H is a set of literals called abducibles.",
                "When a literal L ∈ H contains variables, any instance of L is also an abducible.",
                "An abductive program P, H is consistent if P is consistent.",
                "Throughout the paper, abductive programs are assumed to be consistent unless stated otherwise.",
                "Let G = L1, . . . , Lm, not Lm+1, . . . , not Ln be a conjunction, where all variables in G are existentially quantified at the front and range-restricted, i.e., every variable in Lm+1, . . . , Ln appears in L1, . . . , Lm.",
                "A set S of ground literals satisfies the conjunction G if { L1θ, . . . , Lmθ } ⊆ S and { Lm+1θ, . . . , Lnθ }∩ S = ∅ for some ground instance Gθ with a substitution θ.",
                "Let P, H be an abductive program and G a conjunction as above.",
                "A pair (E, F) is an explanation of an observation G in P, H if1 1. (P \\ F) ∪ E has an answer set which satisfies G, 2. (P \\ F) ∪ E is consistent, 3.",
                "E and F are sets of ground literals such that E ⊆ H\\P and F ⊆ H ∩ P. When (P \\ F) ∪ E has an answer set S satisfying the above three conditions, S is called a belief set of an abductive program P, H satisfying G (with respect to (E, F)).",
                "Note that if P has a consistent answer set S satisfying G, S is also a belief set of P, H satisfying G with respect to (E, F) = (∅, ∅).",
                "Extended abduction introduces/removes hypotheses to/from a program to explain an observation.",
                "Note that normal abduction (as in [9]) considers only introducing hypotheses to explain an observation.",
                "An explanation (E, F) of an observation G is called minimal if for any explanation (E , F ) of G, E ⊆ E and F ⊆ F imply E = E and F = F. Example 2.1.",
                "Consider the abductive program P, H : P : flies(x) ← bird(x), not ab(x) , ab(x) ← broken-wing(x) , bird(tweety) ← , bird(opus) ← , broken-wing(tweety) ← .",
                "H : broken-wing(x) .",
                "The observation G = flies(tweety) has the minimal explanation (E, F) = (∅, {broken-wing(tweety)}). 1 This defines credulous explanations [15].",
                "Skeptical explanations are used in [8].",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1023 3.",
                "NEGOTIATION 3.1 Conditional Proposals by Abduction We suppose an agent who has a knowledge base represented by an abductive program P, H .",
                "A program P consists of two types of knowledge, belief B and desire D, where B represents objective knowledge of an agent, while D represents subjective knowledge in general.",
                "We define P = B ∪ D, but do not distinguish B and D if such distinction is not important in the context.",
                "In contrast, abducibles H are used for representing permissible conditions to make a compromise in the process of negotiation.",
                "Definition 3.1.",
                "A proposal G is a conjunction of literals and NAF-literals: L1, . . . , Lm, not Lm+1, . . . , not Ln where every variable in G is existentially quantified at the front and range-restricted.",
                "In particular, G is called a critique if G = accept or G = reject where accept and reject are the reserved propositions.",
                "A counter-proposal is a proposal made in response to a proposal.",
                "Definition 3.2.",
                "A proposal G is accepted in an abductive program P, H if P has an answer set satisfying G. When a proposal is not accepted, abduction is used for seeking conditions to make it acceptable.",
                "Definition 3.3.",
                "Let P, H be an abductive program and G a proposal.",
                "If (E, F) is a minimal explanation of Gθ for some substitution θ in P, H , the conjunction G : Gθ, E, not F is called a conditional proposal (for G), where E, not F represents the conjunction: A1, . . . , Ak, not Ak+1, . . . , not Al for E = {A1, . . . , Ak} and F = { Ak+1, . . . , Al }.",
                "Proposition 3.1.",
                "Let P, H be an abductive program and G a proposal.",
                "If G is a conditional proposal, there is a belief set S of P, H satisfying G .",
                "Proof.",
                "When G = Gθ, E, not F, (P \\ F) ∪ E has a consistent answer set S satisfying Gθ and E ∩ F = ∅.",
                "In this case, S satisfies Gθ, E, not F. A conditional proposal G provides a minimal requirement for accepting the proposal G. If Gθ has multiple minimal explanations, several conditional proposals exist accordingly.",
                "When (E, F) = (∅, ∅), a conditional proposal is used as a new proposal made in response to the proposal G. Example 3.1.",
                "An agent seeks a position of a research assistant at the computer department of a university with the condition that the salary is at least 50,000 USD per year.",
                "The agent makes his/her request as the proposal:2 G = assist(compt dept), salary(x), x ≥ 50, 000.",
                "The university has the abductive program P, H : P : salary(40, 000) ← assist(compt dept), not has PhD, salary(60, 000) ← assist(compt dept), has PhD, salary(50, 000) ← assist(math dept), salary(55, 000) ← system admin(compt dept), 2 For notational convenience, we often include mathematical (in)equations in proposals/programs.",
                "They are written by literals, for instance, x ≥ y by geq(x, y) with a suitable definition of the predicate geq. employee(x) ← assist(x), employee(x) ← system admin(x), assist(compt dept); assist(math dept) ; system admin(compt dept) ←, H : has PhD, where available positions are represented by disjunction.",
                "According to P, the base salary of a research assistant at the computer department is 40,000 USD, but if he/she has PhD, it is 60,000 USD.",
                "In this case, (E, F) = ({has PhD}, ∅) becomes the minimal explanation of Gθ = assist(compt dept), salary(60, 000) with θ = { x/60, 000 }.",
                "Then, the conditional proposal made by the university becomes assist(compt dept), salary(60, 000), has PhD . 3.2 Neighborhood Proposals by Relaxation When a proposal is unacceptable, an agent tries to construct a new counter-proposal by weakening constraints in the initial proposal.",
                "We use techniques of relaxation for this purpose.",
                "Relaxation is used as a technique of cooperative query answering in databases [4, 6].",
                "When an original query fails in a database, relaxation expands the scope of the query by relaxing the constraints in the query.",
                "This allows the database to return neighborhood answers which are related to the original query.",
                "We use the technique for producing proposals in the process of negotiation.",
                "Definition 3.4.",
                "Let P, H be an abductive program and G a proposal.",
                "Then, G is relaxed to G in the following three ways: Anti-instantiation: Construct G such that G θ = G for some substitution θ.",
                "Dropping conditions: Construct G such that G ⊂ G. Goal replacement: If G is a conjunction G1, G2, where G1 and G2 are conjunctions, and there is a rule L ← G1 in P such that G1θ = G1 for some substitution θ, then build G as Lθ, G2.",
                "Here, Lθ is called a replaced literal.",
                "In each case, every variable in G is existentially quantified at the front and range-restricted.",
                "Anti-instantiation replaces constants (or terms) with fresh variables.",
                "Dropping conditions eliminates some conditions in a proposal.",
                "Goal replacement replaces the condition G1 in G with a literal Lθ in the presence of a rule L ← G1 in P under the condition G1θ = G1.",
                "All these operations generalize proposals in different ways.",
                "Each G obtained by these operations is called a relaxation of G. It is worth noting that these operations are also used in the context of inductive generalization [12].",
                "The relaxed proposal can produce new offers which are neighbor to the original proposal.",
                "Definition 3.5.",
                "Let P, H be an abductive program and G a proposal. 1.",
                "Let G be a proposal obtained by anti-instantiation.",
                "If P has an answer set S which satisfies G θ for some substitution θ and G θ = G, G θ is called a neighborhood proposal by anti-instantiation. 2.",
                "Let G be a proposal obtained by dropping conditions.",
                "If P has an answer set S which satisfies G θ for some substitution θ, G θ is called a neighborhood proposal by dropping conditions. 1024 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.",
                "Let G be a proposal obtained by goal replacement.",
                "For a replaced literal L ∈ G and a rule H ← B in P such that L = Hσ and (G \\ {L}) ∪ Bσ = G for some substitution σ, put G = (G \\ {L}) ∪ Bσ.",
                "If P has an answer set S which satisfies G θ for some substitution θ, G θ is called a neighborhood proposal by goal replacement.",
                "Example 3.2. (cont.",
                "Example 3.1) Given the proposal G = assist(compt dept), salary(x), x ≥ 50, 000, • G1 = assist(w), salary(x), x ≥ 50, 000 is produced by substituting compt dept with a variable w. As G1θ1 = assist(math dept), salary(50, 000) with θ1 = { w/math dept } is satisfied by an answer set of P, G1θ1 becomes a neighborhood proposal by anti-instantiation. • G2 = assist(compt dept), salary(x) is produced by dropping the salary condition x ≥ 50, 000.",
                "As G2θ2 = assist(compt dept), salary(40, 000) with θ2 = { x/40, 000 } is satisfied by an answer set of P, G2θ2 becomes a neighborhood proposal by dropping conditions. • G3 = employee(compt dept), salary(x), x ≥ 50, 000 is produced by replacing assist(compt dept) with employee(compt dept) using the rule employee(x) ← assist(x) in P. By G3 and the rule employee(x) ← system admin(x) in P, G3 = sys admin(compt dept), salary(x), x ≥ 50, 000 is produced.",
                "As G3 θ3 = sys admin(compt dept), salary(55, 000) with θ3 = { x/55, 000 } is satisfied by an answer set of P, G3 θ3 becomes a neighborhood proposal by goal replacement.",
                "Finally, extended abduction and relaxation are combined to produce conditional neighborhood proposals.",
                "Definition 3.6.",
                "Let P, H be an abductive program and G a proposal. 1.",
                "Let G be a proposal obtained by either anti-instantiation or dropping conditions.",
                "If (E, F) is a minimal explanation of G θ(= G) for some substitution θ, the conjunction G θ, E, not F is called a conditional neighborhood proposal by anti-instantiation/dropping conditions. 2.",
                "Let G be a proposal obtained by goal replacement.",
                "Suppose G as in Definition 3.5(3).",
                "If (E, F) is a minimal explanation of G θ for some substitution θ, the conjunction G θ, E, not F is called a conditional neighborhood proposal by goal replacement.",
                "A conditional neighborhood proposal reduces to a neighborhood proposal when (E, F) = (∅, ∅). 3.3 Negotiation Protocol A negotiation protocol defines how to exchange proposals in the process of negotiation.",
                "This section presents a negotiation protocol in our framework.",
                "We suppose one-to-one negotiation between two agents who have a common ontology and the same language for successful communication.",
                "Definition 3.7.",
                "A proposal L1, ..., Lm, not Lm+1, ..., not Ln violates an integrity constraint ← body+ (r), not body− (r) if for any substitution θ, there is a substitution σ such that body+ (r)σ ⊆ { L1θ, . . . , Lmθ }, body− (r)σ∩{ L1θ, . . . , Lmθ } = ∅, and body− (r)σ ⊆ { Lm+1θ, . . . , Lnθ }.",
                "Integrity constraints are conditions which an agent should satisfy, so that they are used to explain why an agent does not accept a proposal.",
                "A negotiation proceeds in a series of rounds.",
                "Each i-th round (i ≥ 1) consists of a proposal Gi 1 made by one agent Ag1 and another proposal Gi 2 made by the other agent Ag2.",
                "Definition 3.8.",
                "Let P1, H1 be an abductive program of an agent Ag1 and Gi 2 a proposal made by Ag2 at the i-th round.",
                "A critique set of Ag1 (at the i-th round) is a set CSi 1(P1, Gj 2) = CSi−1 1 (P1, Gj−1 2 ) ∪ { r | r is an integrity constraint in P1 and Gj 2 violates r } where j = i − 1 or i, and CS0 1 (P1, G0 2) = CS1 1 (P1, G0 2) = ∅.",
                "A critique set of an agent Ag1 accumulates integrity constraints which are violated by proposals made by another agent Ag2.",
                "CSi 2(P2, Gj 1) is defined in the same manner.",
                "Definition 3.9.",
                "Let Pk, Hk be an abductive program of an agent Agk and Gj a proposal, which is not a critique, made by any agent at the j(≤ i)-th round.",
                "A negotiation set of Agk (at the i-th round) is a triple NSi k = (Si c, Si n, Si cn), where Si c is the set of conditional proposals, Si n is the set of neighborhood proposals, and Si cn is the set of conditional neighborhood proposals, produced by Gj and Pk, Hk .",
                "A negotiation set represents the space of possible proposals made by an agent.",
                "Si x (x ∈ {c, n, cn}) accumulates proposals produced by Gj (1 ≤ j ≤ i) according to Definitions 3.3, 3.5, and 3.6.",
                "Note that an agent can construct counter-proposals by modifying its own previous proposals or another agents proposals.",
                "An agent Agk accumulates proposals that are made by Agk but are rejected by another agent, in the failed proposal set FP i k (at the i-th round), where FP 0 k = ∅.",
                "Suppose two agents Ag1 and Ag2 who have abductive programs P1, H1 and P2, H2 , respectively.",
                "Given a proposal G1 1 which is satisfied by an answer set of P1, a negotiation starts.",
                "In response to the proposal Gi 1 made by Ag1 at the i-th round, Ag2 behaves as follows. 1.",
                "If Gi 1 = accept, an agreement is reached and negotiation ends in success. 2.",
                "Else if Gi 1 = reject, put FP i 2 = FPi−1 2 ∪{Gi−1 2 } where {G0 2} = ∅.",
                "Proceed to the step 4(b). 3.",
                "Else if P2 has an answer set satisfying Gi 1, Ag2 returns Gi 2 = accept to Ag1.",
                "Negotiation ends in success. 4.",
                "Otherwise, Ag2 behaves as follows.",
                "Put FP i 2 = FPi−1 2 . (a) If Gi 1 violates an integrity constraint in P2, return the critique Gi 2 = reject to Ag1, together with the critique set CSi 2(P2, Gi 1). (b) Otherwise, construct NSi 2 as follows. (i) Produce Si c. Let μ(Si c) = { p | p ∈ Si c \\ FPi 2 and p satisfies the constraints in CSi 1(P1, Gi−1 2 )}.",
                "If μ(Si c) = ∅, select one from μ(Si c) and propose it as Gi 2 to Ag1; otherwise, go to (ii). (ii) Produce Si n. If μ(Si n) = ∅, select one from μ(Si n) and propose it as Gi 2 to Ag1; otherwise, go to (iii). (iii) Produce Si cn.",
                "If μ(Si cn) = ∅, select one from μ(Si cn) and propose it as Gi 2 to Ag1; otherwise, negotiation ends in failure.",
                "This means that Ag2 can make no counter-proposal or every counterproposal made by Ag2 is rejected by Ag1.",
                "In the step 4(a), Ag2 rejects the proposal Gi 1 and returns the reason of rejection as a critique set.",
                "This helps for Ag1 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1025 in preparing a next counter-proposal.",
                "In the step 4(b), Ag2 constructs a new proposal.",
                "In its construction, Ag2 should take care of the critique set CSi 1(P1, Gi−1 2 ), which represents integrity constraints, if any, accumulated in previous rounds, that Ag1 must satisfy.",
                "Also, FP i 2 is used for removing proposals which have been rejected.",
                "Construction of Si x (x ∈ {c, n, cn}) in NSi 2 is incrementally done by adding new counter-proposals produced by Gi 1 or Gi−1 2 to Si−1 x .",
                "For instance, Si n in NSi 2 is computed as Si n = Si−1 n ∪{ p | p is a neighborhood proposal made by Gi 1 } ∪ { p | p is a neighborhood proposal made by Gi−1 2 }, where S0 n = ∅.",
                "That is, Si n is constructed from Si−1 n by adding new proposals which are obtained by modifying the proposal Gi 1 made by Ag1 at the i-th round or modifying the proposal Gi−1 2 made by Ag2 at the (i − 1)-th round.",
                "Si c and Si cn are obtained as well.",
                "In the above protocol, an agent produces Si c at first, secondly Si n, and finally Si cn.",
                "This strategy seeks conditions which satisfy the given proposal, prior to neighborhood proposals which change the original one.",
                "Another strategy, which prefers neighborhood proposals to conditional ones, is also considered.",
                "Conditional neighborhood proposals are to be considered in the last place, since they differ from the original one to the maximal extent.",
                "The above protocol produces the candidate proposals in Si x for each x ∈ {c, n, cn} at once.",
                "We can consider a variant of the protocol in which each proposal in Si x is constructed one by one (see Example 3.3).",
                "The above protocol is repeatedly applied to each one of the two negotiating agents until a negotiation ends in success/failure.",
                "Formally, the above negotiation protocol has the following properties.",
                "Theorem 3.2.",
                "Let Ag1 and Ag2 be two agents having abductive programs P1, H1 and P2, H2 , respectively. 1.",
                "If P1, H1 and P2, H2 are function-free (i.e., both Pi and Hi contain no function symbol), any negotiation will terminate. 2.",
                "If a negotiation terminates with agreement on a proposal G, both P1, H1 and P2, H2 have belief sets satisfying G. Proof. 1.",
                "When an abductive program is function-free, abducibles and negotiation sets are both finite.",
                "Moreover, if a proposal is once rejected, it is not proposed again by the function μ.",
                "Thus, negotiation will terminate in finite steps. 2.",
                "When a proposal G is made by Ag1, P1, H1 has a belief set satisfying G. If the agent Ag2 accepts the proposal G, it is satisfied by an answer set of P2 which is also a belief set of P2, H2 .",
                "Example 3.3.",
                "Suppose a buying-selling situation in the introduction.",
                "A seller agent has the abductive program Ps, Hs in which Ps consists of belief Bs and desire Ds: Bs : pc(b1, 1G, 512M, 80G) ; pc(b2, 1G, 512M, 80G) ←,(1) dvd-rw ; cd-rw ←, (2) Ds : normal price(1300) ← pc(b1, 1G, 512M, 80G), dvd-rw, (3) normal price(1200) ← pc(b1, 1G, 512M, 80G), cd-rw, (4) normal price(1200) ← pc(b2, 1G, 512M, 80G), dvd-rw, (5) price(x) ← normal price(x), add point, (6) price(x ∗ 0.9) ← normal price(x), pay cash, not add point,(7) add point ←, (8) Hs : add point, pay cash.",
                "Here, (1) and (2) represent selection of products.",
                "The atom pc(b1, 1G, 512M, 80G) represents that the seller agent has a PC of the brand b1 such that CPU is 1GHz, memory is 512MB, and HDD is 80GB.",
                "Prices of products are represented as desire of the seller.",
                "The rules (3) - (5) are normal prices of products.",
                "A normal price is a selling price on the condition that service points are added (6).",
                "On the other hand, a discount price is applied if the paying method is cash and no service point is added (7).",
                "The fact (8) represents the addition of service points.",
                "This service would be withdrawn in case of discount prices, so add point is specified as an abducible.",
                "A buyer agent has the abductive program Pb, Hb in which Pb consists of belief Bb and desire Db: Bb : drive ← dvd-rw, (9) drive ← cd-rw, (10) price(x) ←, (11) Db : pc(b1, 1G, 512M, 80G) ←, (12) dvd-rw ←, (13) cd-rw ← not dvd-rw, (14) ← pay cash, (15) ← price(x), x > 1200, (16) Hb : dvd-rw.",
                "Rules (12) - (16) are the buyers desire.",
                "Among them, (15) and (16) impose constraints for buying a PC.",
                "A DVD-RW is specified as an abducible which is subject to concession. (1st round) First, the following proposal is given by the buyer agent: G1 b : pc(b1, 1G, 512M, 80G), dvd-rw, price(x), x ≤ 1200.",
                "As Ps has no answer set which satisfies G1 b , the seller agent cannot accept the proposal.",
                "The seller takes an action of making a counter-proposal and performs abduction.",
                "As a result, the seller finds the minimal explanation (E, F) = ({ pay cash }, { add point }) which explains G1 b θ1 with θ1 = { x/1170 }.",
                "The seller constructs the conditional proposal: G1 s : pc(b1, 1G, 512M, 80G), dvd-rw, price(1170), pay cash, not add point and offers it to the buyer. (2nd round) The buyer does not accept G1 s because he/she cannot pay it by cash (15).",
                "The buyer then returns the critique G2 b = reject to the seller, together with the critique set CS2 b (Pb, G1 s) = {(15)}.",
                "In response to this, the seller tries to make another proposal which satisfies the constraint in this critique set.",
                "As G1 s is stored in FP 2 s and no other conditional proposal satisfying the buyers requirement exists, the seller produces neighborhood proposals.",
                "He/she relaxes G1 b by dropping x ≤ 1200 in the condition, and produces pc(b1, 1G, 512M, 80G), dvd-rw, price(x).",
                "As Ps has an answer set which satisfies G2 s : pc(b1, 1G, 512M, 80G), dvd-rw, price(1300), 1026 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) the seller offers G2 s as a new counter-proposal. (3rd round) The buyer does not accept G2 s because he/she cannot pay more than 1200USD (16).",
                "The buyer again returns the critique G3 b = reject to the seller, together with the critique set CS3 b (Pb, G2 s) = CS2 b (Pb, G1 s) ∪ {(16)}.",
                "The seller then considers another proposal by replacing b1 with a variable w, G1 b now becomes pc(w, 1G, 512M, 80G), dvd-rw, price(x), x ≤ 1200.",
                "As Ps has an answer set which satisfies G3 s : pc(b2, 1G, 512M, 80G), dvd-rw, price(1200), the seller offers G3 s as a new counter-proposal. (4th round) The buyer does not accept G3 s because a PC of the brand b2 is out of his/her interest and Pb has no answer set satisfying G3 s. Then, the buyer makes a concession by changing his/her original goal.",
                "The buyer relaxes G1 b by goal replacement using the rule (9) in Pb, and produces pc(b1, 1G, 512M, 80G), drive, price(x), x ≤ 1200.",
                "Using (10), the following proposal is produced: pc(b1, 1G, 512M, 80G), cd-rw, price(x), x ≤ 1200.",
                "As Pb \\ { dvd-rw } has a consistent answer set satisfying the above proposal, the buyer proposes the conditional neighborhood proposal G4 b : pc(b1, 1G, 512M, 80G), cd-rw, not dvd-rw, price(x), x ≤ 1200 to the seller agent.",
                "Since Ps also has an answer set satisfying G4 b , the seller accepts it and sends the message G4 s = accept to the buyer.",
                "Thus, the negotiation ends in success. 4.",
                "COMPUTATION In this section, we provide methods of computing proposals in terms of answer sets of programs.",
                "We first introduce some definitions from [15].",
                "Definition 4.1.",
                "Given an abductive program P, H , the set UR of update rules is defined as: UR = { L ← not L, L ← not L | L ∈ H } ∪ { +L ← L | L ∈ H \\ P } ∪ { −L ← not L | L ∈ H ∩ P } , where L, +L, and −L are new atoms uniquely associated with every L ∈ H. The atoms +L and −L are called update atoms.",
                "By the definition, the atom L becomes true iff L is not true.",
                "The pair of rules L ← not L and L ← not L specify the situation that an abducible L is true or not.",
                "When p(x) ∈ H and p(a) ∈ P but p(t) ∈ P for t = a, the rule +L ← L precisely becomes +p(t) ← p(t) for any t = a.",
                "In this case, the rule is shortly written as +p(x) ← p(x), x = a.",
                "Generally, the rule becomes +p(x) ← p(x), x = t1, . . . , x = tn for n such instances.",
                "The rule +L ← L derives the atom +L if an abducible L which is not in P is to be true.",
                "In contrast, the rule −L ← not L derives the atom −L if an abducible L which is in P is not to be true.",
                "Thus, update atoms represent the change of truth values of abducibles in a program.",
                "That is, +L means the introduction of L, while −L means the deletion of L. When an abducible L contains variables, the associated update atom +L or −L is supposed to have exactly the same variables.",
                "In this case, an update atom is semantically identified with its ground instances.",
                "The set of all update atoms associated with the abducibles in H is denoted by UH, and UH = UH+ ∪ UH− where UH+ (resp.",
                "UH− ) is the set of update atoms of the form +L (resp. −L).",
                "Definition 4.2.",
                "Given an abductive program P, H , its update program UP is defined as the program UP = (P \\ H) ∪ UR .",
                "An answer set S of UP is called U-minimal if there is no answer set T of UP such that T ∩ UH ⊂ S ∩ UH.",
                "By the definition, U-minimal answer sets exist whenever UP has answer sets.",
                "Update programs are used for computing (minimal) explanations of an observation.",
                "Given an observation G as a conjunction of literals and NAF-literals possibly containing variables, we introduce a new ground literal O together with the rule O ← G. In this case, O has an explanation (E, F) iff G has the same explanation.",
                "With this replacement, an observation is assumed to be a ground literal without loss of generality.",
                "In what follows, E+ = { +L | L ∈ E } and F − = { −L | L ∈ F } for E ⊆ H and F ⊆ H. Proposition 4.1. ([15]) Let P, H be an abductive program, UP its update program, and G a ground literal representing an observation.",
                "Then, a pair (E, F) is an explanation of G iff UP ∪ { ← not G } has a consistent answer set S such that E+ = S ∩ UH+ and F− = S ∩ UH− .",
                "In particular, (E, F) is a minimal explanation iff S is a U-minimal answer set.",
                "Example 4.1.",
                "To explain the observation G = flies(t) in the program P of Example 2.1, first construct the update program UP of P:3 UP : flies(x) ← bird(x), not ab(x), ab(x) ← broken-wing(x) , bird(t) ← , bird(o) ← , broken-wing(x) ← not broken-wing(x), broken-wing(x) ← not broken-wing(x), +broken-wing(x) ← broken-wing(x), x = t , −broken-wing(t) ← not broken-wing(t) .",
                "Next, consider the program UP ∪ { ← not flies(t) }.",
                "It has the single U-minimal answer set: S = { bird(t), bird(o), flies(t), flies(o), broken-wing(t), broken-wing(o), −broken-wing(t) }.",
                "The unique minimal explanation (E, F) = (∅, {broken-wing(t)}) of G is expressed by the update atom −broken-wing(t) in S ∩ UH− .",
                "Proposition 4.2.",
                "Let P, H be an abductive program and G a ground literal representing an observation.",
                "If P ∪ { ← not G } has a consistent answer set S, G has the minimal explanation (E, F) = (∅, ∅) and S satisfies G. Now we provide methods for computing (counter-)proposals.",
                "First, conditional proposals are computed as follows. input : an abductive program P, H , a proposal G; output : a set Sc of proposals.",
                "If G is a ground literal, compute its minimal explanation (E, F) in P, H using the update program.",
                "Put G, E, not F in Sc.",
                "Else if G is a conjunction possibly containing variables, consider the abductive program 3 t represents tweety and o represents opus.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1027 P ∪{ O ← G }, H with a ground literal O. Compute a minimal explanation of O in P ∪ { O ← G }, H using its update program.",
                "If O has a minimal explanation (E, F) with a substitution θ for variables in G, put Gθ, E, not F in Sc.",
                "Next, neighborhood proposals are computed as follows. input : an abductive program P, H , a proposal G; output : a set Sn of proposals. % neighborhood proposals by anti-instantiation; Construct G by anti-instantiation.",
                "For a ground literal O, if P ∪ { O ← G } ∪ { ← not O } has a consistent answer set satisfying G θ with a substitution θ and G θ = G, put G θ in Sn. % neighborhood proposals by dropping conditions; Construct G by dropping conditions.",
                "If G is a ground literal and the program P ∪ { ← not G } has a consistent answer set, put G in Sn.",
                "Else if G is a conjunction possibly containing variables, do the following.",
                "For a ground literal O, if P ∪{ O ← G }∪{ ← not O } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn. % neighborhood proposals by goal replacement; Construct G by goal replacement.",
                "If G is a ground literal and there is a rule H ← B in P such that G = Hσ and Bσ = G for some substitution σ, put G = Bσ.",
                "If P ∪ { ← not G } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn.",
                "Else if G is a conjunction possibly containing variables, do the following.",
                "For a replaced literal L ∈ G , if there is a rule H ← B in P such that L = Hσ and (G \\ {L}) ∪ Bσ = G for some substitution σ, put G = (G \\ {L}) ∪ Bσ.",
                "For a ground literal O, if P ∪ { O ← G } ∪ { ← not O } has a consistent answer set satisfying G θ with a substitution θ, put G θ in Sn.",
                "Theorem 4.3.",
                "The set Sc (resp.",
                "Sn) computed above coincides with the set of conditional proposals (resp. neighborhood proposals).",
                "Proof.",
                "The result for Sc follows from Definition 3.3 and Proposition 4.1.",
                "The result for Sn follows from Definition 3.5 and Proposition 4.2.",
                "Conditional neighborhood proposals are computed by combining the above two procedures.",
                "Those proposals are computed at each round.",
                "Note that the procedure for computing Sn contains some nondeterministic choices.",
                "For instance, there are generally several candidates of literals to relax in a proposal.",
                "Also, there might be several rules in a program for the usage of goal replacement.",
                "In practice, an agent can prespecify literals in a proposal for possible relaxation or rules in a program for the usage of goal replacement. 5.",
                "RELATED WORK As there are a number of literature on automated negotiation, this section focuses on comparison with negotiation frameworks based on logic and argumentation.",
                "Sadri et al. [14] use abductive logic programming as a representation language of negotiating agents.",
                "Agents negotiate using common dialogue primitives, called dialogue moves.",
                "Each agent has an abductive <br>logic program</br> in which a sequence of dialogues are specified by a program, a dialogue protocol is specified as constraints, and dialogue moves are specified as abducibles.",
                "The behavior of agents is regulated by an observe-think-act cycle.",
                "Once a dialogue move is uttered by an agent, another agent that observed the utterance thinks and acts using a proof procedure.",
                "Their approach and ours both employ abductive logic programming as a platform of agent reasoning, but the use of it is quite different.",
                "First, they use abducibles to specify dialogue primitives of the form tell(utterer, receiver, subject, identifier, time), while we use abducibles to specify arbitrary permissible hypotheses to construct conditional proposals.",
                "Second, a program pre-specifies a plan to carry out in order to achieve a goal, together with available/missing resources in the context of resource-exchanging problems.",
                "This is in contrast with our method in which possible counter-proposals are newly constructed in response to a proposal made by an agent.",
                "Third, they specify a negotiation policy inside a program (as integrity constraints), while we give a protocol independent of individual agents.",
                "They provide an operational model that completely specifies the behavior of agents in terms of agent cycle.",
                "We do not provide such a complete specification of the behavior of agents.",
                "Our primary interest is to mechanize construction of proposals.",
                "Bracciali and Torroni [2] formulate abductive agents that have knowledge in abductive logic programs.",
                "To explain an observation, two agents communicate by exchanging integrity constraints.",
                "In the process of communication, an agent can revise its own integrity constraints according to the information provided by the other agent.",
                "A set IC of integrity constraints relaxes a set IC (or IC tightens IC ) if any observation that can be proved with respect to IC can also be proved with respect to IC .",
                "For instance, IC : ← a, b, c relaxes IC : ← a, b.",
                "Thus, they use relaxation for weakening the constraints in an abductive <br>logic program</br>.",
                "In contrast, we use relaxation for weakening proposals and three different relaxation methods, anti-instantiation, dropping conditions, and goal replacement, are considered.",
                "Their goal is to explain an observation by revising integrity constraints of an agent through communication, while we use integrity constraints for communication to explain critiques and help other agents in making counter-proposals.",
                "Meyer et al. [11] introduce a logical framework for negotiating agents.",
                "They introduce two different modes of negotiation: concession and adaptation.",
                "They provide rational postulates to characterize negotiated outcomes between two agents, and describe methods for constructing outcomes.",
                "They provide logical conditions for negotiated outcomes to satisfy, but they do not describe a process of negotiation nor negotiation protocols.",
                "Moreover, they represent agents by classical propositional theories, which is different from our abductive logic programming framework.",
                "Foo et al. [5] model one-to-one negotiation as a one-time encounter between two extended logic programs.",
                "An agent offers an answer set of its program, and their mutual deal is regarded as a trade on their answer sets.",
                "Starting from the initial agreement set S∩T for an answer set S of an agent and an answer set T of another agent, each agent extends this set to reflect its own demand while keeping consistency with demand of the other agent.",
                "Their algorithm returns new programs having answer sets which are consistent with each other and keep the agreement set.",
                "The work is extended to repeated encounters in [3].",
                "In their framework, two agents exchange answer sets to produce a common belief set, which is different from our framework of exchanging proposals.",
                "There are a number of proposals for negotiation based 1028 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) on argumentation.",
                "An advantage of argumentation-based negotiation is that it constructs a proposal with arguments supporting the proposal [1].",
                "The existence of arguments is useful to convince other agents of reasons why an agent offers (counter-)proposals or returns critiques.",
                "Parsons et al. [13] develop a logic of argumentation-based negotiation among BDI agents.",
                "In one-to-one negotiation, an agent A generates a proposal together with its arguments, and passes it to another agent B.",
                "The proposal is evaluated by B which attempts to build arguments against it.",
                "If it conflicts with Bs interest, B informs A of its objection by sending back its attacking argument.",
                "In response to this, A tries to find an alternative way of achieving its original objective, or a way of persuading B to drop its objection.",
                "If either type of argument can be found, A will submit it to B.",
                "If B finds no reason to reject the new proposal, it will be accepted and the negotiation ends in success.",
                "Otherwise, the process is iterated.",
                "In this negotiation processes, the agent A never changes its original objective, so that negotiation ends in failure if A fails to find an alternative way of achieving the original objective.",
                "In our framework, when a proposal is rejected by another agent, an agent can weaken or change its objective by abduction and relaxation.",
                "Our framework does not have a mechanism of argumentation, but reasons for critiques can be informed by responding critique sets.",
                "Kakas and Moraitis [10] propose a negotiation protocol which integrates abduction within an argumentation framework.",
                "A proposal contains an offer corresponding to the negotiation object, together with supporting information representing conditions under which this offer is made.",
                "Supporting information is computed by abduction and is used for constructing conditional arguments during the process of negotiation.",
                "In their negotiation protocol, when an agent cannot satisfy its own goal, the agent considers the other agents goal and searches for conditions under which the goal is acceptable.",
                "Our present approach differs from theirs in the following points.",
                "First, they use abduction to seek conditions to support arguments, while we use abduction to seek conditions for proposals to accept.",
                "Second, in their negotiation protocol, counter-proposals are chosen among candidates based on preference knowledge of an agent at meta-level, which represents policy under which an agent uses its object-level decision rules according to situations.",
                "In our framework, counter-proposals are newly constructed using abduction and relaxation.",
                "The method of construction is independent of particular negotiation protocols.",
                "As [2, 10, 14], abduction or abductive logic programming used in negotiation is mostly based on normal abduction.",
                "In contrast, our approach is based on extended abduction which can not only introduce hypotheses but remove them from a program.",
                "This is another important difference.",
                "Relaxation and neighborhood query answering are devised to make databases cooperative with their users [4, 6].",
                "In this sense, those techniques have the spirit similar to cooperative problem solving in multi-agent systems.",
                "As far as the authors know, however, there is no study which applies those technique to agent negotiation. 6.",
                "CONCLUSION In this paper we proposed a logical framework for negotiating agents.",
                "To construct proposals in the process of negotiation, we combined the techniques of extended abduction and relaxation.",
                "It was shown that these two operations are used for general inference rules in producing proposals.",
                "We developed a negotiation protocol between two agents based on exchange of proposals and critiques, and provided procedures for computing proposals in abductive logic programming.",
                "This enables us to realize automated negotiation on top of the existing answer set solvers.",
                "The present framework does not have a mechanism of selecting an optimal (counter-)proposal among different alternatives.",
                "To compare and evaluate proposals, an agent must have preference knowledge of candidate proposals.",
                "Further elaboration to maximize the utility of agents is left for future study. 7.",
                "REFERENCES [1] L. Amgoud, S. Parsons, and N. Maudet.",
                "Arguments, dialogue, and negotiation.",
                "In: Proc.",
                "ECAI-00, pp. 338-342, IOS Press, 2000. [2] A. Bracciali and P. Torroni.",
                "A new framework for knowledge revision of abductive agents through their interaction.",
                "In: Proc.",
                "CLIMA-IV, Computational Logic in Multi-Agent Systems, LNAI 3259, pp. 159-177, 2004. [3] W. Chen, M. Zhang, and N. Foo.",
                "Repeated negotiation of logic programs.",
                "In: Proc. 7th Workshop on Nonmonotonic Reasoning, Action and Change, 2006. [4] W. W. Chu, Q. Chen, and R.-C. Lee.",
                "Cooperative query answering via type abstraction hierarchy.",
                "In: Cooperating Knowledge Based Systems, S. M. Deen ed., pp. 271-290, Springer, 1990. [5] N. Foo, T. Meyer, Y. Zhang, and D. Zhang.",
                "Negotiating logic programs.",
                "In: Proc. 6th Workshop on Nonmonotonic Reasoning, Action and Change, 2005. [6] T. Gaasterland, P. Godfrey, and J. Minker.",
                "Relaxation as a platform for cooperative answering.",
                "Journal of Intelligence Information Systems 1(3/4):293-321, 1992. [7] M. Gelfond and V. Lifschitz.",
                "Classical negation in logic programs and disjunctive databases.",
                "New Generation Computing 9:365-385, 1991. [8] K. Inoue and C. Sakama.",
                "Abductive framework for nonmonotonic theory change.",
                "In: Proc.",
                "IJCAI-95, pp. 204-210, Morgan Kaufmann. [9] A. C. Kakas, R. A. Kowalski, and F. Toni, The role of abduction in logic programming.",
                "In: Handbook of Logic in AI and Logic Programming, D. M. Gabbay, et al. (eds), vol. 5, pp. 235-324, Oxford University Press, 1998. [10] A. C. Kakas and P. Moraitis.",
                "Adaptive agent negotiation via argumentation.",
                "In: Proc.",
                "AAMAS-06, pp. 384-391, ACM Press. [11] T. Meyer, N. Foo, R. Kwok, and D. Zhang.",
                "Logical foundation of negotiation: outcome, concession and adaptation.",
                "In: Proc.",
                "AAAI-04, pp. 293-298, MIT Press. [12] R. S. Michalski.",
                "A theory and methodology of inductive learning.",
                "In: Machine Learning: An Artificial Intelligence Approach, R. S. Michalski, et al. (eds), pp. 83-134, Morgan Kaufmann, 1983. [13] S. Parsons, C. Sierra and N. Jennings.",
                "Agents that reason and negotiate by arguing.",
                "Journal of Logic and Computation, 8(3):261-292, 1988. [14] F. Sadri, F. Toni, and P. Torroni, An abductive logic programming architecture for negotiating agents.",
                "In: Proc. 8th European Conf. on Logics in AI, LNAI 2424, pp. 419-431, Springer, 2002. [15] C. Sakama and K. Inoue.",
                "An abductive framework for computing knowledge base updates.",
                "Theory and Practice of Logic Programming 3(6):671-715, 2003.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1029"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Suponemos que un agente que tiene una base de conocimiento representada por un \"programa lógico\".",
                "Suponemos que un agente que tiene una base de conocimiento representada por un \"programa lógico\".",
                "Cada agente tiene un \"programa lógico\" abductivo en el que un programa especifica una secuencia de diálogos, se especifica un protocolo de diálogo como restricciones, y los movimientos de diálogo se especifican como abducibles.",
                "Por lo tanto, usan la relajación para debilitar las limitaciones en un \"programa lógico\" abductivo."
            ],
            "translated_text": "",
            "candidates": [
                "programa lógico",
                "programa lógico",
                "programa lógico",
                "programa lógico",
                "programa lógico",
                "programa lógico",
                "programa lógico",
                "programa lógico"
            ],
            "error": []
        }
    }
}